OBJECT Page 11129024 Service Order Inspec. FSA WS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=;
    SourceTable=Table11071753;
    SourceTableView=WHERE(Type=CONST(Line),
                          Field Type=FILTER(<>' '));
    PageType=List;
  }
  CONTROLS
  {
    { 1100528000;0;Container;
                ContainerType=ContentArea }

    { 1100528001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100528019;2;Field  ;
                Name=CompanyName;
                SourceExpr=CURRENTCOMPANY }

    { 1100528002;2;Field  ;
                Name=ServiceOrderNo;
                SourceExpr="Service Order No." }

    { 1100528003;2;Field  ;
                Name=ObjectNo;
                SourceExpr="Service Object No." }

    { 1100528004;2;Field  ;
                Name=MaintenanceSchemeCode;
                SourceExpr="Maintenance Scheme Code" }

    { 1100528005;2;Field  ;
                Name=LineNo;
                SourceExpr="Line No." }

    { 1100528013;2;Field  ;
                Name=InspectionGroupCode;
                SourceExpr="Inspection Group Code" }

    { 1100528020;2;Field  ;
                Name=InspectionGroupDescription;
                SourceExpr=GetInspectionGroupDescription }

    { 1100528008;2;Field  ;
                Name=InspectionCode;
                SourceExpr="Inspection Code" }

    { 1100528009;2;Field  ;
                Name=Description;
                SourceExpr=Description }

    { 1100528010;2;Field  ;
                Name=FieldType;
                SourceExpr=FORMAT("Field Type", 0, 9) }

    { 1100528011;2;Field  ;
                Name=DateValue;
                SourceExpr=GetDateValue }

    { 1100528016;2;Field  ;
                Name=NumberValue;
                SourceExpr=GetNumberValue }

    { 1100528007;2;Field  ;
                Name=NumberValueIsNull;
                SourceExpr=GetNumberValueIsNull }

    { 1100528015;2;Field  ;
                Name=TextValue;
                SourceExpr=GetTextValue }

    { 1100528006;2;Field  ;
                Name=OptionValue;
                SourceExpr=GetOptionValue }

    { 1100528017;2;Field  ;
                Name=BooleanValue;
                SourceExpr=GetBooleanValue }

    { 1100528018;2;Field  ;
                Name=BooleanValueIsNull;
                SourceExpr=GetBooleanValueIsNull }

    { 1100528012;2;Field  ;
                Name=UnitOfMeasure;
                SourceExpr="Unit Of Measure" }

    { 1100528014;2;Field  ;
                Name=Mandatory;
                SourceExpr=Mandatory }

    { 1100526000;2;Field  ;
                Name=Comment;
                SourceExpr=Comment }

    { 1100528708;2;Field  ;
                Name=Id;
                SourceExpr=Id }

    { 1100528707;2;Field  ;
                Name=DependingOnId;
                SourceExpr="Depending on Id" }

    { 1100528706;2;Field  ;
                Name=DependingCondition;
                SourceExpr="Depending Condition" }

    { 1100528704;2;Field  ;
                Name=DependencyEffect;
                SourceExpr="Dependency Effect" }

    { 1100528705;2;Field  ;
                Name=DependencyConditionDecimal1;
                SourceExpr="Dependency Condition Decimal 1" }

    { 1100528703;2;Field  ;
                Name=DependencyConditionDecimal2;
                SourceExpr="Dependency Condition Decimal 2" }

    { 1100528702;2;Field  ;
                Name=DependencyConditionDate1;
                SourceExpr="Dependency Condition Date 1" }

    { 1100528701;2;Field  ;
                Name=DependencyConditionDate2;
                SourceExpr="Dependency Condition Date 2" }

    { 1100528700;2;Field  ;
                Name=DependencyConditionOperation;
                SourceExpr="Dependency Condition Operation" }

  }
  CODE
  {

    LOCAL PROCEDURE GetInspectionGroupDescription@1100525000() : Text;
    VAR
      ServiceInspectionGroup@1100525000 : Record 11071747;
    BEGIN
      IF ServiceInspectionGroup.GET("Inspection Group Code") THEN
        EXIT(ServiceInspectionGroup.Description);
    END;

    LOCAL PROCEDURE GetDateValue@1100528000() : Date;
    BEGIN
      IF "Field Type" = "Field Type"::Date THEN
        EXIT("Value (Date)");
    END;

    LOCAL PROCEDURE GetOptionValue@1100528002() : Text;
    BEGIN
      IF "Field Type" = "Field Type"::Option THEN
        EXIT(GetCodeForServiceInspectionLineValue);
    END;

    LOCAL PROCEDURE GetTextValue@1100528004() : Text;
    BEGIN
      IF "Field Type" = "Field Type"::Text THEN
        EXIT(Value);
    END;

    LOCAL PROCEDURE GetNumberValue@1100528001() : Decimal;
    BEGIN
      IF "Field Type" = "Field Type"::Value THEN
        EXIT("Value (Value)");
    END;

    LOCAL PROCEDURE GetNumberValueIsNull@1100528005() : Boolean;
    BEGIN
      EXIT(("Field Type" = "Field Type"::Value) AND (Value = ''));
    END;

    LOCAL PROCEDURE GetBooleanValue@1100528003() : Boolean;
    BEGIN
      IF "Field Type" = "Field Type"::"Yes/No" THEN
        EXIT(GetCodeForServiceInspectionLineValue = 'YES');
    END;

    LOCAL PROCEDURE GetBooleanValueIsNull@1100528006() : Boolean;
    BEGIN
      EXIT(("Field Type" = "Field Type"::"Yes/No") AND (Value = ''));
    END;

    LOCAL PROCEDURE GetCodeForServiceInspectionLineValue@1100525018() : Code[10];
    VAR
      BaseServiceInspectionOption@1100525000 : Record 11071749;
    BEGIN
      BaseServiceInspectionOption.SETRANGE("Base Inspection Line Code", "Inspection Code");
      BaseServiceInspectionOption.SETRANGE(Description, Value);
      IF BaseServiceInspectionOption.FINDFIRST THEN
        EXIT(BaseServiceInspectionOption.Code);
    END;

    BEGIN
    END.
  }
}

