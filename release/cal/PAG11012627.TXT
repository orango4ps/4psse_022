OBJECT Page 11012627 Exit Order Bulk Plant
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Exit-Auftrag Massenwerkzeug;
               ENU=Exit Order Line Bulk Plant;
               NLD=Exit-order bulkmaterieel;
               NOR=Sluttordrerad, Bulkmaskin;
               SVE=Slutorderrad, bulkMaskin];
    SourceTable=Table11012592;
    DelayedInsert=Yes;
    PageType=List;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             ButtonProposalVisible := TRUE;
           END;

    OnOpenPage=BEGIN
                 IF NOT gSetSelectionOk THEN
                   ERROR('');

                 PlantSetupRec.GET;
                 PlantSetupRec.TESTFIELD("Integration Fixed Assets");

                 gExitOrderLineRec.TESTFIELD("Plant Type");
                 gExitOrderLineRec.TESTFIELD(Bulk);
                 PlantTypeRec.GET(gExitOrderLineRec."Plant Type");
                 PlantTypeRec.TESTFIELD("Integration Fixed Assets");
                 IF (NOT gExitOrderRec.Posted) THEN BEGIN
                   gExitOrderLineRec.TESTFIELD("No.", '0');
                   IF (PlantSetupRec."Manual Disposal Method Bulk" = PlantSetupRec."Manual Disposal Method Bulk"::No) THEN
                     PlantSetupRec.FIELDERROR("Manual Disposal Method Bulk");
                 END;

                 CurrPage.EDITABLE :=
                   (NOT gExitOrderRec.Posted) AND
                   (PlantSetupRec."Manual Disposal Method Bulk" <> PlantSetupRec."Manual Disposal Method Bulk"::No);
                 ButtonProposalVisible := (CurrPage.EDITABLE);
               END;

    OnClosePage=VAR
                  lvExitOrderLineRec@1100485001 : Record 11012560;
                  lvUpdateLineQty@1100485000 : Boolean;
                BEGIN
                  CALCFIELDS("Total Quantity");
                  IF (NOT gExitOrderRec.Posted) AND ("Total Quantity" <> gExitOrderLineRec.Quantity) AND ("Total Quantity" > 0) THEN BEGIN
                    IF gExitOrderLineRec.Quantity = 0 THEN
                      lvUpdateLineQty := TRUE
                    ELSE
                      lvUpdateLineQty := CONFIRM(Text000, FALSE, "Total Quantity", gExitOrderLineRec.Quantity);
                    IF lvUpdateLineQty THEN BEGIN
                      IF lvExitOrderLineRec.GET(gExitOrderLineRec."Exit-order No.", gExitOrderLineRec."Line No.") THEN BEGIN
                        lvExitOrderLineRec.Quantity := "Total Quantity";
                        lvExitOrderLineRec.Amount := ROUND(lvExitOrderLineRec.Quantity * lvExitOrderLineRec.Price);
                        lvExitOrderLineRec.MODIFY;
                        COMMIT;
                      END;
                    END;
                  END;
                END;

    OnAfterGetRecord=BEGIN
                       CALCFIELDS("Total Quantity");
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  InitRecord();
                  CALCFIELDS("Total Quantity");
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485014;1 ;Action    ;
                      Name=ButtonProposal;
                      CaptionML=[DEU=&Vorschlag;
                                 ENU=&Proposal;
                                 NLD=&Voorstel;
                                 NOR=&Forslag;
                                 SVE=&Underlag];
                      Promoted=Yes;
                      Visible=ButtonProposalVisible;
                      Image=OrderTracking;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MakeDisposalProposal();
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                GroupType=Repeater }

    { 1100485001;2;Field  ;
                SourceExpr="Plant No.";
                OnValidate=BEGIN
                             PlantNoOnAfterValidate;
                           END;
                            }

    { 1100485005;2;Field  ;
                DrillDown=No;
                SourceExpr="Fixed Asset";
                OnLookup=BEGIN
                           LookupFixedAsset(CurrPage.EDITABLE);
                           IF Quantity <> xRec.Quantity THEN
                             CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 1100485003;2;Field  ;
                DrillDown=No;
                SourceExpr=Description }

    { 1100485015;2;Field  ;
                CaptionML=[DEU=Buchwert;
                           ENU=Book Value;
                           NLD=Boekwaarde;
                           NOR=Bokfõrt verdi;
                           SVE=BokfîringsvÑrde];
                SourceExpr=GetBookValue() }

    { 1100485009;2;Field  ;
                CaptionML=[DEU=Anlagen-Anzahl;
                           ENU=FA Quantity;
                           NLD=VA-aantal;
                           NOR=Diftsmiddel-antall;
                           SVE=FA-antal];
                DecimalPlaces=0:5;
                SourceExpr=GetFixedAssetQuantity() }

    { 1100485007;2;Field  ;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 1100525000;0;Container;
                ContainerType=FactBoxArea }

    { 1100525001;1;Part   ;
                SubPageLink=Exit-order No.=FIELD(Exit-order No.),
                            Exit-order Line No.=FIELD(Exit-order Line No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11130053;
                PartType=Page }

  }
  CODE
  {
    VAR
      PlantSetupRec@1100485000 : Record 11012550;
      PlantTypeRec@1100525000 : Record 11012551;
      FADeprBookRec@1100485004 : Record 5612;
      gExitOrderRec@1100485001 : Record 11012559;
      gExitOrderLineRec@1100485002 : Record 11012560;
      gSetSelectionOk@1100485003 : Boolean;
      Text000@1100485005 : TextConst 'DEU=Total verteilte Anzahl (%1) stimmt nicht mit der Anzahl der Exit-Auftragszeile (%2) Åberein. Auftragszeile Anzahl anpassen?;ENU=Total divided quantity (%1) is unequal to the quantity of the Exit-orderline (%2). Update orderline quantity?;NLD=Totaal uitgesplitst aantal (%1) is ongelijk aan het aantal van de exit-orderregel (%2). Orderregel aantal aanpassen?;NOR=Totalt delt antall (%1) er ulik antallet for sluttordreraden (%2). Vil du oppdatere ordreradantallet?;SVE=Totalt delat antal (%1) Ñr inte lika med antalet fîr slutorderraden (%2). Vill du uppdatera orderradantalet?';
      ButtonProposalVisible@19057606 : Boolean INDATASET;

    PROCEDURE SetSelections@1100485001(IExitOrderNo@1100485000 : Code[20];IExitOrderLine@1100485001 : Integer);
    BEGIN
      IF (IExitOrderNo = '') OR (IExitOrderLine = 0) THEN
        EXIT;

      gExitOrderRec.GET(IExitOrderNo);
      gExitOrderLineRec.GET(IExitOrderNo, IExitOrderLine);
      gExitOrderLineRec.CALCFIELDS(Bulk);

      gSetSelectionOk := TRUE;
    END;

    PROCEDURE GetBookValue@1100485002() : Decimal;
    BEGIN
      GetFADepreciationBookData(FADeprBookRec);
      EXIT(FADeprBookRec."Book Value");
    END;

    PROCEDURE MakeDisposalProposal@1100485000();
    VAR
      lvPlantNoRec@1100485000 : Record 11012552;
      lvFixedAssetRec@1100485002 : Record 5600;
      lvExitBulkPlantRec@1100485001 : Record 11012592;
      lvNextLineNo@1100485003 : Integer;
      lvTotProposalQuantity@1100485006 : Integer;
      lvQuantity@1100485004 : Decimal;
      lvTotQuantity@1100485005 : Decimal;
    BEGIN
      IF NOT CurrPage.EDITABLE THEN
        EXIT;

      CALCFIELDS("Total Quantity");
      lvTotProposalQuantity := gExitOrderLineRec.Quantity - "Total Quantity";
      IF lvTotProposalQuantity <= 0 THEN
        EXIT;

      PlantSetupRec.GET;
      IF (NOT PlantSetupRec."Integration Fixed Assets") THEN
       EXIT;
      PlantTypeRec.GET();
      IF (NOT PlantTypeRec."Integration Fixed Assets") THEN
       EXIT;

      lvPlantNoRec.SETCURRENTKEY("Plant Type", "Receipt Date", "No.");
      lvPlantNoRec.SETRANGE("Plant Type", "Plant Type");
      lvPlantNoRec.SETRANGE(External, FALSE);
      lvPlantNoRec.SETRANGE(Posted, TRUE);
      lvPlantNoRec.SETFILTER("Fixed Asset", '<>%1', '');
      lvPlantNoRec.SETRANGE("Stock No.", '0');

      CASE PlantSetupRec."Disposal Method Bulk" OF
        PlantSetupRec."Disposal Method Bulk"::FIFO:
          lvPlantNoRec.ASCENDING(TRUE);
        PlantSetupRec."Disposal Method Bulk"::LIFO:
          lvPlantNoRec.ASCENDING(FALSE);
      END;

      IF NOT lvPlantNoRec.FIND('-') THEN
        EXIT;

      lvExitBulkPlantRec.SETRANGE("Exit-order No.", "Exit-order No.");
      lvExitBulkPlantRec.SETRANGE("Exit-order Line No.", "Exit-order Line No.");
      IF lvExitBulkPlantRec.FIND('+') THEN
        lvNextLineNo := lvExitBulkPlantRec."Line No.";
      lvNextLineNo := lvNextLineNo + 10000;

      REPEAT
        lvFixedAssetRec.GET(lvPlantNoRec."Fixed Asset");
        lvQuantity := lvFixedAssetRec.GetQuantity('', FALSE); //ps 13795, 29-12-08 arg changed from TRUE to FALSE
        IF lvQuantity > 0 THEN BEGIN
          lvExitBulkPlantRec.INIT;
          lvExitBulkPlantRec."Exit-order No." := "Exit-order No.";
          lvExitBulkPlantRec."Exit-order Line No." := "Exit-order Line No.";
          lvExitBulkPlantRec."Line No." := lvNextLineNo;
          lvExitBulkPlantRec."Plant Type" := lvPlantNoRec."Plant Type";
          lvExitBulkPlantRec.External := FALSE;
          lvExitBulkPlantRec."Plant No." := lvPlantNoRec."No.";
          IF (NOT lvExitBulkPlantRec.PlantNoUsedOnOtherLine()) THEN BEGIN
            IF ((lvTotQuantity + lvQuantity) <= lvTotProposalQuantity) THEN
              lvExitBulkPlantRec.Quantity := lvQuantity
            ELSE
              lvExitBulkPlantRec.Quantity := lvTotProposalQuantity - lvTotQuantity;
            lvExitBulkPlantRec.INSERT;
            lvNextLineNo := lvNextLineNo + 10000;
            lvTotQuantity := lvTotQuantity + lvQuantity;
          END;
        END;
      UNTIL (lvPlantNoRec.NEXT = 0) OR (lvTotQuantity >= lvTotProposalQuantity);
    END;

    LOCAL PROCEDURE PlantNoOnAfterValidate@19064946();
    BEGIN
      IF Quantity <> xRec.Quantity THEN
        CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      IF Quantity <> xRec.Quantity THEN
        CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      CALCFIELDS("Total Quantity");
    END;

    BEGIN
    END.
  }
}

