OBJECT Codeunit 5882 Phys. Invt. Order-Reopen
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04;
  }
  PROPERTIES
  {
    TableNo=5875;
    OnRun=BEGIN
            PhysInvtOrderHeader.COPY(Rec);
            Code;
            Rec := PhysInvtOrderHeader;

            OnAfterOnRun(Rec);
          END;

  }
  CODE
  {
    VAR
      ReopeningLinesMsg@1000 : TextConst '@@@="%2 = counter";ENU=Reopening lines              #2######;NOR=èpner linjer pÜ nytt              #2######';
      PhysInvtOrderHeader@1001 : Record 5875;
      PhysInvtOrderLine@1002 : Record 5876;
      ReservEntry@1004 : Record 337;
      Window@1006 : Dialog;
      LineCount@1007 : Integer;

    [External]
    PROCEDURE Code@1000();
    BEGIN
      WITH PhysInvtOrderHeader DO BEGIN
        TESTFIELD("No.");
        TESTFIELD(Status,Status::Finished);

        Window.OPEN(
          '#1#################################\\' + ReopeningLinesMsg);
        Window.UPDATE(1,STRSUBSTNO('%1 %2',TABLECAPTION,"No."));

        LOCKTABLE;
        PhysInvtOrderLine.LOCKTABLE;

        LineCount := 0;
        PhysInvtOrderLine.RESET;
        PhysInvtOrderLine.SETRANGE("Document No.","No.");
        IF PhysInvtOrderLine.FIND('-') THEN
          REPEAT
            IF NOT PhysInvtOrderLine.EmptyLine THEN BEGIN
              LineCount := LineCount + 1;
              Window.UPDATE(2,LineCount);

              ReservEntry.RESET;
              ReservEntry.SetSourceFilter(
                DATABASE::"Phys. Invt. Order Line",0,PhysInvtOrderLine."Document No.",PhysInvtOrderLine."Line No.",FALSE);
              ReservEntry.SetSourceFilter2('',0);
              ReservEntry.DELETEALL;

              PhysInvtOrderLine."Pos. Qty. (Base)" := 0;
              PhysInvtOrderLine."Neg. Qty. (Base)" := 0;
              PhysInvtOrderLine."Quantity (Base)" := 0;
              PhysInvtOrderLine."Entry Type" := PhysInvtOrderLine."Entry Type"::" ";
              OnBeforePhysInvtOrderLineModify(PhysInvtOrderLine);
              PhysInvtOrderLine.MODIFY;
            END;
          UNTIL PhysInvtOrderLine.NEXT = 0;

        Status := Status::Open;
        MODIFY;
      END;
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterOnRun@2(VAR PhysInvtOrderHeader@1000 : Record 5875);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforePhysInvtOrderLineModify@1(VAR PhysInvtOrderLine@1000 : Record 5876);
    BEGIN
    END;

    BEGIN
    END.
  }
}

