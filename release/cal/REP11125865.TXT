OBJECT Report 11125865 Ref. Tool - Remove Serv.Contrs
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Referenzanwenung - Servicevertr„ge l”schen;
               ENU=Reference Tool - Remove Service Contracts;
               NLD=Referentietool - Servicecontracten verwijderen;
               NOR=Referanseverkt›y Í Fjerne Servicekontrakt;
               SVE=Referensverktyg Í ta bort servicekontrakt];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  RefHead.GET(RefNo);
                  RefHead.TESTFIELD("No.");
                  WriteRefCriteria();

                  CASE RemoveType OF
                    RemoveType::Refine:
                      Window.OPEN(Text000 + ' ' + '@1@@@@@@@@@@@@@');
                    RemoveType::Reduce:
                      Window.OPEN(Text001 + ' ' + '@1@@@@@@@@@@@@@');
                    ELSE
                      ERROR('');
                  END;

                  OldTime := TIME;
                END;

    OnPostReport=BEGIN
                   Window.CLOSE;
                 END;

    UseRequestPage=No;
  }
  DATASET
  {
    { 7228;    ;DataItem;                    ;
               DataItemTable=Table11125859;
               DataItemTableView=SORTING(Reference No.,Type,No.)
                                 WHERE(Type=CONST(ServiceContract));
               OnPreDataItem=BEGIN
                               FILTERGROUP(9);
                               "Reference Tool Line".SETRANGE("Reference No.", RefNo);
                               FILTERGROUP(0);

                               RecordNo := 0;
                               NoOfRecords := COUNT;
                             END;

               OnAfterGetRecord=BEGIN
                                  RecordNo := RecordNo + 1;
                                  UpdateProgress;

                                  InSelection := FALSE;
                                END;
                                 }

    { 4178;1   ;DataItem;                    ;
               DataItemTable=Table11012812;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=BEGIN
                               RecordNo := 0;
                               NoOfRecords := COUNT;
                             END;

               OnAfterGetRecord=BEGIN
                                  InSelection := TRUE;
                                END;

               DataItemLink=No.=FIELD(No.) }

    { 5592;2   ;DataItem;                    ;
               DataItemTable=Table11012881;
               DataItemTableView=SORTING(Service Contract No.,Discipline,Trade Speciality);
               OnPreDataItem=BEGIN
                               IF InSelection AND (GETFILTERS <> '') THEN
                                 InSelection := FALSE
                               ELSE
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  InSelection := TRUE;
                                  CurrReport.BREAK;
                                END;

               DataItemLink=Service Contract No.=FIELD(No.) }

    { 5828;2   ;DataItem;                    ;
               DataItemTable=Table11012808;
               DataItemTableView=SORTING(Service Location No.,Service Contract No.,Service Order No.,Responsibility,Line No.)
                                 WHERE(Service Location No.=CONST(''));
               OnPreDataItem=BEGIN
                               IF InSelection AND (GETFILTERS <> '') THEN
                                 InSelection := FALSE
                               ELSE
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  InSelection := TRUE;
                                  CurrReport.BREAK;
                                END;

               DataItemLink=Service Contract No.=FIELD(No.) }

    { 8713;2   ;DataItem;                    ;
               DataItemTable=Table11012880;
               DataItemTableView=SORTING(Service Contract No.,Priority);
               OnPreDataItem=BEGIN
                               IF InSelection AND (GETFILTERS <> '') THEN
                                 InSelection := FALSE
                               ELSE
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  InSelection := TRUE;
                                  CurrReport.BREAK;
                                END;

               DataItemLink=Service Contract No.=FIELD(No.) }

    { 9362;2   ;DataItem;                    ;
               DataItemTable=Table11012882;
               DataItemTableView=SORTING(Table Name,No.,Table Field,Line No.)
                                 WHERE(Table Name=CONST(Service Contract),
                                       Table Field=CONST(0));
               OnPreDataItem=BEGIN
                               IF InSelection AND (GETFILTERS <> '') THEN
                                 InSelection := FALSE
                               ELSE
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  InSelection := TRUE;
                                  CurrReport.BREAK;
                                END;

               DataItemLink=No.=FIELD(No.) }

    { 8615;2   ;DataItem;                    ;
               DataItemTable=Table97;
               DataItemTableView=SORTING(Table Name,No.,Line No.)
                                 WHERE(Table Name=CONST(Service Contract));
               OnPreDataItem=BEGIN
                               IF InSelection AND (GETFILTERS <> '') THEN
                                 InSelection := FALSE
                               ELSE
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  InSelection := TRUE;
                                  CurrReport.BREAK;
                                END;

               DataItemLink=No.=FIELD(No.) }

    { 5444;1   ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnAfterGetRecord=BEGIN
                                  DeleteRefLine();
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Verfeinern;ENU=Refine;NLD=Verfijnen;NOR=Juster;SVE=Justera';
      RefHead@1003 : Record 11125858;
      RefCritMgt@1006 : Codeunit 11125858;
      Window@1210190001 : Dialog;
      OldTime@1210190003 : Time;
      NewTime@1210190000 : Time;
      RemoveType@1210190002 : 'Refine,Reduce';
      InSelection@1009 : Boolean;
      NoOfRecords@1016 : Integer;
      RecordNo@1017 : Integer;
      OldProgress@1020 : Integer;
      NewProgress@1021 : Integer;
      RefNo@1210190004 : Code[20];
      Text001@1210190005 : TextConst 'DEU=Verringern;ENU=Reduce;NLD=Verminderen;NOR=Reduser;SVE=Minska';

    PROCEDURE SetOptions@4(RefNo2@1210190000 : Code[20];RemoveTypeInt@1210190001 : Integer);
    BEGIN
      RefNo := RefNo2;
      RemoveType := RemoveTypeInt;
    END;

    LOCAL PROCEDURE UpdateProgress@1210190001();
    BEGIN
      NewTime := TIME;
      IF (NewTime - OldTime > 100) THEN BEGIN
        NewProgress := ROUND(RecordNo / NoOfRecords * 100,1);
        IF NewProgress <> OldProgress THEN BEGIN
          Window.UPDATE(1, NewProgress * 100);
          OldProgress := NewProgress;
        END;
        OldTime := NewTime;
      END;
    END;

    PROCEDURE WriteRefCriteria@1210190000();
    VAR
      RefCritLine@1210190000 : Record 11125860;
    BEGIN
      CASE RemoveType OF
        RemoveType::Refine:
          RefCritLine.Action := RefCritLine.Action::Refine;
        RemoveType::Reduce:
          RefCritLine.Action := RefCritLine.Action::Reduce;
      END;
      RefCritLine."Reference Type" := RefCritLine."Reference Type"::ServiceContract;

      RefCritMgt.InsertCriteriaAction(RefNo, RefCritLine."Reference Type", RefCritLine.Action);
      RefCritMgt.InsertCriteriaFilter(
        RefNo, RefCritLine."Reference Type", RefCritLine.Action,
        DATABASE::"Service-Contract", ("Service-Contract".GETFILTERS <> ''), "Service-Contract".GETVIEW(FALSE));
      RefCritMgt.InsertCriteriaFilter(
        RefNo, RefCritLine."Reference Type", RefCritLine.Action,
        DATABASE::"Service Contract Discipline",
        ("Service Contract Discipline".GETFILTERS <> ''),  "Service Contract Discipline".GETVIEW(FALSE));
      RefCritMgt.InsertCriteriaFilter(
        RefNo, RefCritLine."Reference Type", RefCritLine.Action,
        DATABASE::"Service Responsible Person",
        ("Service Responsible Person".GETFILTERS <> ''),  "Service Responsible Person".GETVIEW(FALSE));
      RefCritMgt.InsertCriteriaFilter(
        RefNo, RefCritLine."Reference Type", RefCritLine.Action,
        DATABASE::"Service Contract Priority",
        ("Service Contract Priority".GETFILTERS <> ''),  "Service Contract Priority".GETVIEW(FALSE));
      RefCritMgt.InsertCriteriaFilter(
        RefNo, RefCritLine."Reference Type", RefCritLine.Action,
        DATABASE::"Service Text", ("Service Text".GETFILTERS <> ''),  "Service Text".GETVIEW(FALSE));
      RefCritMgt.InsertCriteriaFilter(
        RefNo, RefCritLine."Reference Type", RefCritLine.Action,
        DATABASE::"Comment Line", ("Comment Line".GETFILTERS <> ''),  "Comment Line".GETVIEW(FALSE));
    END;

    LOCAL PROCEDURE DeleteRefLine@1();
    BEGIN
      CASE RemoveType OF
        RemoveType::Refine:
          IF (NOT InSelection) THEN
            "Reference Tool Line".DELETE;
        RemoveType::Reduce:
          IF InSelection THEN
            "Reference Tool Line".DELETE;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

