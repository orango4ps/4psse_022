OBJECT Codeunit 11012282 Project Site Mgt
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1100528300 : TextConst 'DEU=Keine Lizenz fÅr Sharepoint-Integration.;ENU=No License for Sharepoint Integration.;NLD=Geen licentie voor Sharepoint integratie.;NOR=Lisens mangler for Sharepoint Integrering.;SVE=Licens saknas fîr Sharpoint Integration.';
      ProjectSiteSetup@1100525004 : Record 11071871;
      ErrorString@1100525002 : Text;
      ProjectSiteCTB@1100525000 : DotNet "'CTB.Microsoft.SharePoint.Client, Version=1.40.0.0, Culture=neutral, PublicKeyToken=284c6828aa038142'.CTB.Microsoft.SharePoint.Client.CTBWrapper" RUNONCLIENT;
      Text001@1100525001 : TextConst 'DEU=Anmeldung fehlgeschlagen.\\Fehler: %1;ENU=Login failed.\\Error: %1;NLD=Login niet gelukt.\\Foutmelding: %1';
      Text002@1100525003 : TextConst 'DEU=Belegdownload %1 fehlgeschlagen.;ENU=Download Document %1 failed.;NLD=Document %1 is niet gedownload.';
      Text003@1100525005 : TextConst 'DEU=Belegupload %1 fehlgeschlagen.;ENU=Upload Document %1 failed.;NLD=Document %1 is niet geupload.';

    PROCEDURE IsInLicense@1100528300(ShowError@1100528300 : Boolean) : Boolean;
    VAR
      ProjectSiteSetup@1100528301 : Record 11071871;
    BEGIN
      IF NOT ProjectSiteSetup.GET THEN BEGIN
        IF (ShowError) THEN
          ERROR(Text000)
        ELSE
          EXIT(FALSE);
      END;

      IF (ProjectSiteSetup."Website URL" <> '') THEN
        EXIT(TRUE);

      IF (ShowError) THEN
        ERROR(Text000);
      EXIT(FALSE);
    END;

    PROCEDURE LogContact@1100528305(ChangeType@1100528301 : Option;Contact@1100528300 : Record 5050;Company@1100528700 : Text[50]);
    VAR
      ProjectAuthority@1100409001 : Record 11020216;
      ProjectPrincipal@1100409002 : Record 11012005;
      TryOutLine@1100409003 : Record 11012755;
      ProjectSiteLine@1100409004 : Record 11071873;
      Customer@1100525000 : Record 18;
      RecRef@1100528302 : RecordRef;
      LogThisContact@1100409000 : Boolean;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      IF Company <> '' THEN BEGIN
        ProjectAuthority.CHANGECOMPANY(Company);
        ProjectPrincipal.CHANGECOMPANY(Company);
        TryOutLine.CHANGECOMPANY(Company);
      END;

      //kkleermaker.sn, 130115, C004817
      ProjectAuthority.SETCURRENTKEY("Contact No.");
      RecRef.GETTABLE(ProjectAuthority);
      Contact.SetContactFilterOn4PSTable(
        RecRef, ProjectAuthority.FIELDNAME("Contact No."), ProjectAuthority.FIELDNAME("Contact Person No."));
      ProjectAuthority.SETVIEW(RecRef.GETVIEW(FALSE));
      //kkleermaker.en
      IF (ProjectAuthority.FINDSET) THEN BEGIN
        REPEAT
          ProjectSiteLine.SETRANGE(Type, ProjectSiteLine.Type::Project);
          ProjectSiteLine.SETRANGE(Code, ProjectAuthority."Project No.");
          LogThisContact := ProjectSiteLine.FINDFIRST;
        UNTIL (ProjectAuthority.NEXT = 0) OR (LogThisContact);
      END;

      IF (NOT LogThisContact) THEN BEGIN
        //kkleermaker.sn, 130115, C004817
        IF Contact.GetCustByContactwithCompany(Contact, Customer, Company) THEN BEGIN
          ProjectPrincipal.SETCURRENTKEY(Principal);
          ProjectPrincipal.SETRANGE(Principal, Customer."No.");
          //kkleermaker.en
          IF (ProjectPrincipal.FINDSET) THEN BEGIN
            REPEAT
              ProjectSiteLine.SETRANGE(Type, ProjectSiteLine.Type::Project);
              ProjectSiteLine.SETRANGE(Code, ProjectPrincipal."Project No.");
              LogThisContact := ProjectSiteLine.FINDFIRST;
            UNTIL (ProjectPrincipal.NEXT = 0) OR (LogThisContact);
          END;
        END;
      END;

      IF (NOT LogThisContact) THEN BEGIN
        //kkleermaker.sn, 130115, C004817
        TryOutLine.SETCURRENTKEY("Contact No.");
        RecRef.GETTABLE(TryOutLine);
        Contact.SetContactFilterOn4PSTable(
          RecRef, TryOutLine.FIELDNAME("Contact No."), TryOutLine.FIELDNAME("Contact Person No."));
        TryOutLine.SETVIEW(RecRef.GETVIEW(FALSE));
        //kkleermaker.en
        IF (TryOutLine.FINDSET) THEN BEGIN
          REPEAT
            ProjectSiteLine.SETRANGE(Type, ProjectSiteLine.Type::"Try-Out");
            ProjectSiteLine.SETRANGE(Code, TryOutLine."Try-out No.");
            LogThisContact := ProjectSiteLine.FINDFIRST;
          UNTIL (TryOutLine.NEXT = 0) OR (LogThisContact);
        END;
      END;

      IF (LogThisContact) THEN BEGIN
        RecRef.GETTABLE(Contact);
        IF Company <> '' THEN
          AddChangeLog(ChangeType, RecRef, 0, 0, '', '', Company)
        ELSE
          AddChangeLog(ChangeType, RecRef, 0, 0, '', '', COMPANYNAME);
      END;
    END;

    PROCEDURE LogEmployee@1100528304(ChangeType@1100528301 : Option;Employee@1100528300 : Record 5200);
    VAR
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      RecRef.GETTABLE(Employee);
      AddChangeLog(ChangeType, RecRef, 0, 0, '', '', COMPANYNAME);
    END;

    PROCEDURE LogDocumentCategory@1100528306(ChangeType@1100528301 : Option;DocumentCategory@1100528300 : Record 11012147);
    VAR
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      RecRef.GETTABLE(DocumentCategory);
      AddChangeLog(ChangeType, RecRef, 0, 0, '', '', COMPANYNAME);
    END;

    PROCEDURE LogDocumentType@1100528307(ChangeType@1100528301 : Option;DocumentType@1100528300 : Record 11012405);
    VAR
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      RecRef.GETTABLE(DocumentType);
      AddChangeLog(ChangeType, RecRef, 0, 0, '', '', COMPANYNAME);
    END;

    PROCEDURE LogResponsibility@1100528308(ChangeType@1100528301 : Option;Responsibility@1100528300 : Record 11012007);
    VAR
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      RecRef.GETTABLE(Responsibility);
      AddChangeLog(ChangeType, RecRef, 0, 0, '', '', COMPANYNAME);
    END;

    PROCEDURE LogDocumentProperties@1100528309(ChangeType@1100528301 : Option;DocumentProperties@1100528300 : Record 11012746);
    VAR
      RecRef@1100528302 : RecordRef;
      DocumentLink@1100528303 : Record 11012747;
      TryOut@1100409003 : Record 11012750;
      DummyTryOut@1100528401 : Record 11012750;
      ProjectSiteSetup@1100409002 : Record 11071871;
      PrevDocumentProperties@1100409004 : Record 11012746;
      ProjectSiteType@1100528305 : Option;
      ProjectSiteCode@1100528304 : Code[20];
      DoContinue@1100409001 : Boolean;
      LogRecordAdded@1100409000 : Boolean;
      LogDocumentsDueToTryoutStatus@1100528400 : Boolean;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      ProjectSiteSetup.GET;
      RecRef.GETTABLE(DocumentProperties);
      IF NOT (DocumentProperties.HasStorageURI) THEN
        EXIT;

      IF (NOT PrevDocumentProperties.GET(DocumentProperties."No.")) THEN //get prev record
        PrevDocumentProperties.INIT;

      IF (ProjectSiteSetup."Synchronize Documents" = ProjectSiteSetup."Synchronize Documents"::Final) AND
         (DocumentProperties.Status <> DocumentProperties.Status::Definite) AND
         (PrevDocumentProperties.Status <> PrevDocumentProperties.Status::Definite)
      THEN
        EXIT;

      DocumentLink.SETRANGE("Document No.", DocumentProperties."No.");
      IF (DocumentLink.FINDSET) THEN BEGIN
        REPEAT
          DoContinue := TRUE;
          LogDocumentsDueToTryoutStatus := FALSE;
          SetDocVars(DocumentLink, ProjectSiteType, ProjectSiteCode);
          IF (ProjectSiteType < 1) OR (ProjectSiteType > 2) THEN
            DoContinue := FALSE;

          IF (ProjectSiteType = 2) THEN BEGIN //Try-Out
            IF (ProjectSiteSetup."Do not sync Try-outs") THEN
              DoContinue := FALSE;
            IF (TryOut.GET(ProjectSiteCode)) THEN
              LogDocumentsDueToTryoutStatus :=
                TryOut.Status >= ProjectSiteSetup."Try-out Status Sync.";
          END;

          IF (DoContinue) THEN BEGIN
            IF (ProjectSiteIsCreated(ProjectSiteType, ProjectSiteCode)) OR
               LogDocumentsDueToTryoutStatus
            THEN BEGIN
              CASE ProjectSiteType OF
                1: BEGIN //Project
                  AddProjectAuthorities(1, ProjectSiteCode, DocumentProperties."Contact No.",
                    DocumentProperties."Contact Person No.");
                END;
                2: BEGIN //Try-out
                  AddTryOutAuthority(1, ProjectSiteCode, DocumentProperties."Contact No.",
                    DocumentProperties."Contact Person No.", FALSE, DummyTryOut);
                END;
              END;
              IF (NOT LogRecordAdded) THEN
                AddChangeLog(ChangeType, RecRef,
                  GetLineSharepointNo(ProjectSiteType, ProjectSiteCode, COMPANYNAME),
                  ProjectSiteType, ProjectSiteCode,
                  GetHeaderCode(ProjectSiteType, ProjectSiteCode, COMPANYNAME),
                  COMPANYNAME);
              LogRecordAdded := TRUE;
            END;
          END;
        UNTIL (DocumentLink.NEXT = 0);
      END;
    END;

    PROCEDURE LogDocumentLink@1100528312(ChangeType@1100528301 : Option;DocumentLink@1100528300 : Record 11012747);
    VAR
      DocumentProperties@1100409000 : Record 11012746;
      TryOut@1100409002 : Record 11012750;
      ProjectSiteSetup@1100409001 : Record 11071871;
      RecRef@1100528302 : RecordRef;
      ProjectSiteType@1100528303 : Option;
      ProjectSiteCode@1100528304 : Code[20];
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      ProjectSiteSetup.GET;
      RecRef.GETTABLE(DocumentLink);
      DocumentProperties.GET(DocumentLink."Document No.");
      IF (NOT DocumentProperties.HasStorageURI) THEN
        EXIT;

      IF (ProjectSiteSetup."Synchronize Documents" = ProjectSiteSetup."Synchronize Documents"::Final) AND
         (DocumentProperties.Status <> DocumentProperties.Status::Definite)
      THEN
        EXIT;

      SetDocVars(DocumentLink, ProjectSiteType, ProjectSiteCode);
      IF (ProjectSiteType = 2) THEN BEGIN //Try-Out
        IF (ProjectSiteSetup."Do not sync Try-outs") THEN
          EXIT;
        IF (TryOut.GET(ProjectSiteCode)) THEN
          IF (TryOut.Status < ProjectSiteSetup."Try-out Status Sync.") THEN
            EXIT;
      END;

      IF (ProjectSiteIsCreated(ProjectSiteType, ProjectSiteCode)) THEN BEGIN
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(ProjectSiteType, ProjectSiteCode, COMPANYNAME), ProjectSiteType,
          ProjectSiteCode,
          GetHeaderCode(ProjectSiteType, ProjectSiteCode, COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    PROCEDURE LogJob@1100528310(ChangeType@1100528301 : Option;Project@1100528300 : Record 11072003);
    VAR
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      IF (ProjectSiteIsCreated(1, Project."No.")) THEN BEGIN
        RecRef.GETTABLE(Project);
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, Project."No.", COMPANYNAME), 1,
          Project."No.",
          GetHeaderCode(1, Project."No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    PROCEDURE LogProjectElement@1100528311(ChangeType@1100528301 : Option;ProjectElement@1100528300 : Record 11012010);
    VAR
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      IF (ProjectSiteIsCreated(1, ProjectElement."Project No.")) THEN BEGIN
        RecRef.GETTABLE(ProjectElement);
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, ProjectElement."Project No.", COMPANYNAME), 1,
          ProjectElement."Project No.",
          GetHeaderCode(1, ProjectElement."Project No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    PROCEDURE LogProjectAuthority@1100528313(ChangeType@1100528301 : Option;ProjectAuthority@1100528300 : Record 11020216);
    VAR
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      IF (ProjectSiteIsCreated(1, ProjectAuthority."Project No.")) THEN BEGIN
        RecRef.GETTABLE(ProjectAuthority);
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, ProjectAuthority."Project No.", COMPANYNAME), 1,
          ProjectAuthority."Project No.",
          GetHeaderCode(1, ProjectAuthority."Project No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    PROCEDURE LogProjectPrincipal@1100528314(ChangeType@1100528301 : Option;ProjectPrincipal@1100528300 : Record 11012005);
    VAR
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;
      IF (ProjectSiteIsCreated(1, ProjectPrincipal."Project No.")) THEN BEGIN
        RecRef.GETTABLE(ProjectPrincipal);
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, ProjectPrincipal."Project No.", COMPANYNAME), 1,
          ProjectPrincipal."Project No.",
          GetHeaderCode(1, ProjectPrincipal."Project No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    PROCEDURE LogProjectResponsiblePerson@1100528315(ChangeType@1100528301 : Option;ProjectResponsiblePerson@1100528300 : Record 11012040);
    VAR
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      IF (ProjectSiteIsCreated(1, ProjectResponsiblePerson."Project No.")) THEN BEGIN
        RecRef.GETTABLE(ProjectResponsiblePerson);
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, ProjectResponsiblePerson."Project No.", COMPANYNAME), 1,
          ProjectResponsiblePerson."Project No.",
          GetHeaderCode(1, ProjectResponsiblePerson."Project No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    PROCEDURE LogExtensionContract@1100528316(ChangeType@1100528301 : Option;ExtensionContract@1100528300 : Record 11012004);
    VAR
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      IF (ProjectSiteIsCreated(1, ExtensionContract."Project No.")) THEN BEGIN
        RecRef.GETTABLE(ExtensionContract);
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, ExtensionContract."Project No.", COMPANYNAME), 1,
          ExtensionContract."Project No.",
          GetHeaderCode(1, ExtensionContract."Project No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    PROCEDURE LogProjectPurchaseAction@1100528317(ChangeType@1100528301 : Option;ProjectPurchaseAction@1100528300 : Record 11012026);
    VAR
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      IF (ProjectSiteIsCreated(1, ProjectPurchaseAction."Project No.")) THEN BEGIN
        RecRef.GETTABLE(ProjectPurchaseAction);
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, ProjectPurchaseAction."Project No.", COMPANYNAME), 1,
          ProjectPurchaseAction."Project No.",
          GetHeaderCode(1, ProjectPurchaseAction."Project No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    PROCEDURE LogPurchaseHeader@1100528318(ChangeType@1100528301 : Option;PurchaseHeader@1100528300 : Record 38);
    VAR
      RecRef@1100528302 : RecordRef;
      BuyFromContactNo@1100409001 : Code[20];
      BuyFromContactPersonNo@1100409000 : Code[20];
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      IF (ProjectSiteIsCreated(1, PurchaseHeader."Job No.")) THEN BEGIN
        RecRef.GETTABLE(PurchaseHeader);
        //kkleermaker.sn, 121218, C004672
        IF (PurchaseHeader."Job No." <> '') THEN BEGIN
          GetContactInfo(PurchaseHeader, BuyFromContactNo, BuyFromContactPersonNo);

          CASE PurchaseHeader."Document Type" OF
            PurchaseHeader."Document Type"::Order:
              AddProjectAuthorities(2, PurchaseHeader."Job No.", BuyFromContactNo, BuyFromContactPersonNo);
            PurchaseHeader."Document Type"::Invoice:
              AddProjectAuthorities(3, PurchaseHeader."Job No.", BuyFromContactNo, BuyFromContactPersonNo);
          END;
        END;
        //kkleermaker.en
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, PurchaseHeader."Job No.", COMPANYNAME), 1,
          PurchaseHeader."Job No.",
          GetHeaderCode(1, PurchaseHeader."Job No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    LOCAL PROCEDURE GetContactInfo@1100409002(PurchaseHeader@1100409000 : Record 38;VAR BuyFromContactNo@1100409001 : Code[20];VAR BuyFromContactPersonNo@1100409002 : Code[20]);
    VAR
      ContactBusinessRelation@1100409006 : Record 5054;
      BuyFromContact@1100409004 : Record 5050;
      Contact@1100409003 : Record 5050;
    BEGIN
      //kkleermaker, 121218, C004672
      IF BuyFromContact.GET(PurchaseHeader."Buy-from Contact No.") THEN BEGIN
        IF BuyFromContact.Type = BuyFromContact.Type::Company THEN BEGIN
          BuyFromContactNo := PurchaseHeader."Buy-from Contact No.";
          Contact.SETCURRENTKEY("Company No.");
          Contact.SETRANGE("Company No.", BuyFromContactNo);
          Contact.SETRANGE(Name, PurchaseHeader."Buy-from Contact");
          IF Contact.FINDFIRST THEN
            BuyFromContactPersonNo := Contact."No.";
        END ELSE BEGIN
          BuyFromContactNo := BuyFromContact."Company No.";
          BuyFromContactPersonNo := BuyFromContact."No.";
        END;
      END ELSE BEGIN
        ContactBusinessRelation.SETCURRENTKEY("Link to Table","No.");
        ContactBusinessRelation.SETRANGE("Link to Table", ContactBusinessRelation."Link to Table"::Vendor);
        ContactBusinessRelation.SETRANGE("No.", PurchaseHeader."Buy-from Vendor No.");
        IF ContactBusinessRelation.FINDFIRST THEN
          BuyFromContactNo := ContactBusinessRelation."Contact No."
        ELSE
          BuyFromContactNo := PurchaseHeader."Buy-from Vendor No.";
      END;
    END;

    PROCEDURE LogPurchaseLine@1100528319(ChangeType@1100528301 : Option;PurchaseLine@1100528300 : Record 39);
    VAR
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      IF (ProjectSiteIsCreated(1, PurchaseLine."Job No.")) THEN BEGIN
        RecRef.GETTABLE(PurchaseLine);
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, PurchaseLine."Job No.", COMPANYNAME), 1,
          PurchaseLine."Job No.",
          GetHeaderCode(1, PurchaseLine."Job No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    PROCEDURE LogTryOut@1100528320(ChangeType@1100528301 : Option;TryOut@1100528300 : Record 11012750);
    VAR
      ProjectSiteSetup@1100528303 : Record 11071871;
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      RecRef.GETTABLE(TryOut);
      ProjectSiteSetup.GET;

      IF ((ProjectSiteSetup."Do not sync Try-outs") AND (ProjectSiteIsCreated(2, TryOut.Code)) OR
         ((NOT ProjectSiteSetup."Do not sync Try-outs")) AND (TryOut.Status >= ProjectSiteSetup."Try-out Status Sync."))
      THEN BEGIN
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(2, TryOut.Code, COMPANYNAME), 2,
          TryOut.Code,
          GetHeaderCode(2, TryOut.Code, COMPANYNAME),
          COMPANYNAME);
        IF TryOut.Status >= ProjectSiteSetup."Try-out Status Sync." THEN
          LogDocumentsDueToTryOutStatus(ChangeType, TryOut, ProjectSiteSetup);
      END;
    END;

    LOCAL PROCEDURE LogDocumentsDueToTryOutStatus@1100528401(ChangeType@1100528405 : Option;Tryout@1100528400 : Record 11012750;ProjectSiteSetup@1100528404 : Record 11071871);
    VAR
      DocumentLink@1100528402 : Record 11012747;
      DocumentProperties@1100528403 : Record 11012746;
      ProjectSiteChangeLog@1100528406 : Record 11071870;
      RecRef@1100528401 : RecordRef;
    BEGIN
      // This function only logs try-out documents when the try-out does not occur in the project site lines
      // and when the satus of the try-out is changed from < Try-out Status Sync. to >= Try-out Status Sync.
      //
      // For "normal" try-outs (try-outs that are present in a project site line), changelog records for
      // documents will be created when the button Create Sites in the form Project Site Header is used.
      IF ProjectSiteIsCreated(2, Tryout.Code) THEN
        EXIT;

      IF ChangeType <> ProjectSiteChangeLog."Change Type"::Modify THEN
        EXIT;

      IF Tryout.Status < ProjectSiteSetup."Try-out Status Sync." THEN
        EXIT;

      IF GetOldTryoutStatus(Tryout.Code) >= ProjectSiteSetup."Try-out Status Sync." THEN
        EXIT;

      RecRef.GETTABLE(Tryout);
      DocumentLink.SETCURRENTKEY("Record ID");
      DocumentLink.SETRANGE("Record ID", RecRef.RECORDID);
      IF (NOT DocumentLink.FINDSET) THEN
        EXIT;

      REPEAT
        IF DocumentProperties.GET(DocumentLink."Document No.") THEN BEGIN
          IF NOT DocumentProperties.HasStorageURI THEN
            LogDocumentDueToTryOutStatus(Tryout, DocumentProperties);
        END;
      UNTIL DocumentLink.NEXT = 0;
    END;

    LOCAL PROCEDURE LogDocumentDueToTryOutStatus@1100528402(Tryout@1100528400 : Record 11012750;DocumentProperties@1100528401 : Record 11012746);
    VAR
      ProjectSiteChangeLog@1100528403 : Record 11071870;
      ProjectSiteSetup@1100409000 : Record 11071871;
      RecRef@1100528402 : RecordRef;
    BEGIN
      RecRef.GETTABLE(DocumentProperties);
      IF NOT DocumentProperties.HasStorageURI THEN
        EXIT;

      ProjectSiteSetup.GET;
      IF (ProjectSiteSetup."Synchronize Documents" = ProjectSiteSetup."Synchronize Documents"::Final) AND
         (DocumentProperties.Status <> DocumentProperties.Status::Definite)
      THEN
        EXIT;

      AddTryOutAuthority(
        1, Tryout.Code, DocumentProperties."Contact No.",
        DocumentProperties."Contact Person No.", TRUE, Tryout);

      AddChangeLog(
        ProjectSiteChangeLog."Change Type"::Insert, RecRef, 0,
        ProjectSiteChangeLog."Project Site Line Type"::"Try-Out", Tryout.Code, '', COMPANYNAME);
    END;

    LOCAL PROCEDURE GetOldTryoutStatus@1100528403(Code@1100528400 : Code[20]) : Code[10];
    VAR
      Tryout@1100528401 : Record 11012750;
    BEGIN
      IF Tryout.GET(Code) THEN
        EXIT(Tryout.Status); // In OnModify the old status is still present in the database.
    END;

    PROCEDURE LogTryOutLine@1100528321(ChangeType@1100528301 : Option;TryOutLine@1100528300 : Record 11012755);
    VAR
      DummyTryOut@1100528304 : Record 11012750;
    BEGIN
      LogTryOutLinePrivate(ChangeType, TryOutLine, TRUE, DummyTryOut);
    END;

    LOCAL PROCEDURE LogTryOutLinePrivate@1100528400(ChangeType@1100528301 : Option;TryOutLine@1100528300 : Record 11012755;ReadTryout@1100528400 : Boolean;Tryout@1100528401 : Record 11012750);
    VAR
      ProjectSiteSetup@1100528303 : Record 11071871;
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      RecRef.GETTABLE(TryOutLine);
      ProjectSiteSetup.GET;

      IF ReadTryout THEN
        Tryout.GET(TryOutLine."Try-out No.");

      IF ((ProjectSiteSetup."Do not sync Try-outs") AND (ProjectSiteIsCreated(2, Tryout.Code)) OR
         ((NOT ProjectSiteSetup."Do not sync Try-outs")) AND (Tryout.Status >= ProjectSiteSetup."Try-out Status Sync."))
      THEN
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(2, TryOutLine."Try-out No.", COMPANYNAME), 2,
          TryOutLine."Try-out No.",
          GetHeaderCode(2, TryOutLine."Try-out No.", COMPANYNAME),
          COMPANYNAME);
    END;

    PROCEDURE LogTryOutResponsiblePerson@1100528322(ChangeType@1100528301 : Option;TryOutResponsiblePerson@1100528300 : Record 11012756);
    VAR
      ProjectSiteSetup@1100409001 : Record 11071871;
      TryOut@1100409000 : Record 11012750;
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      RecRef.GETTABLE(TryOutResponsiblePerson);
      ProjectSiteSetup.GET;

      TryOut.GET(TryOutResponsiblePerson."Try-out");

      IF ((ProjectSiteSetup."Do not sync Try-outs") AND (ProjectSiteIsCreated(2, TryOut.Code)) OR
         ((NOT ProjectSiteSetup."Do not sync Try-outs")) AND (TryOut.Status >= ProjectSiteSetup."Try-out Status Sync."))
      THEN
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(2, TryOutResponsiblePerson."Try-out", COMPANYNAME), 2,
          TryOutResponsiblePerson."Try-out",
          GetHeaderCode(2, TryOutResponsiblePerson."Try-out", COMPANYNAME),
          COMPANYNAME);
    END;

    PROCEDURE LogPlot@1100528323(ChangeType@1100528301 : Option;Plot@1100528300 : Record 11012500);
    VAR
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      IF (ProjectSiteIsCreated(1, Plot."Project No.")) THEN BEGIN
        RecRef.GETTABLE(Plot);
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, Plot."Project No.", COMPANYNAME), 1,
          Plot."Project No.",
          GetHeaderCode(1, Plot."Project No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    PROCEDURE LogHouseModel@1100528324(ChangeType@1100528301 : Option;HouseModel@1100528300 : Record 11012501);
    VAR
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      IF (ProjectSiteIsCreated(1, HouseModel."Project No.")) THEN BEGIN
        RecRef.GETTABLE(HouseModel);
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, HouseModel."Project No.", COMPANYNAME), 1,
          HouseModel."Project No.",
          GetHeaderCode(1, HouseModel."Project No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    PROCEDURE LogGetOrder@1100528325(ChangeType@1100528301 : Option;GetOrder@1100528300 : Record 11125531);
    VAR
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      IF (ProjectSiteIsCreated(1, GetOrder."Project No.")) THEN BEGIN
        RecRef.GETTABLE(GetOrder);
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, GetOrder."Project No.", COMPANYNAME), 1,
          GetOrder."Project No.",
          GetHeaderCode(1, GetOrder."Project No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    PROCEDURE LogGetOrderLine@1100528332(ChangeType@1100528301 : Option;GetOrderLine@1100528300 : Record 11125532);
    VAR
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      IF (ProjectSiteIsCreated(1, GetOrderLine."Project No.")) THEN BEGIN
        RecRef.GETTABLE(GetOrderLine);
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, GetOrderLine."Project No.", COMPANYNAME), 1,
          GetOrderLine."Project No.",
          GetHeaderCode(1, GetOrderLine."Project No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    PROCEDURE LogProjectSiteHeader@1100528326(ChangeType@1100528301 : Option;ProjectSiteHeader@1100528300 : Record 11071872);
    VAR
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      IF (ProjectSiteHeader."SharePoint Status" > ProjectSiteHeader."SharePoint Status"::New) THEN BEGIN
        RecRef.GETTABLE(ProjectSiteHeader);
        AddChangeLog(ChangeType, RecRef, 0, ProjectSiteHeader.Type, '', ProjectSiteHeader.Code, COMPANYNAME);
      END;
    END;

    PROCEDURE LogProjectSiteLine@1100528327(ChangeType@1100528301 : Option;ProjectSiteLine@1100528300 : Record 11071873);
    VAR
      ProjectSiteHeader@1100409000 : Record 11071872;
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      IF (ProjectSiteLine."Site Created") THEN BEGIN
        RecRef.GETTABLE(ProjectSiteLine);
        //AddChangeLog(ChangeType, RecRef, 0, ProjectSiteLine.Type, ProjectSiteLine.Code, ''); //kkleermaker.o
        //kkleermaker.sn, 121221, C004766
        IF ProjectSiteHeader.GET(ProjectSiteLine."Seq. No.") THEN;
        AddChangeLog(
          ChangeType, RecRef, 0, ProjectSiteLine.Type, ProjectSiteLine.Code, ProjectSiteHeader.Code, COMPANYNAME);
        //kkleermaker.en
      END;
    END;

    PROCEDURE GetLineSharepointNo@1100528329(Type@1100528300 : Option;Code@1100528301 : Code[20];Company@1100528302 : Text[30]) : Integer;
    VAR
      ProjectSiteLine@1100528303 : Record 11071873;
    BEGIN
      ProjectSiteLine.SETCURRENTKEY(Type, Code, "Company Name");
      ProjectSiteLine.SETRANGE(Type, Type);
      ProjectSiteLine.SETRANGE(Code, Code);
      ProjectSiteLine.SETRANGE("Company Name", Company);
      IF (ProjectSiteLine.FINDFIRST) THEN
        EXIT(ProjectSiteLine."Sharepoint No.");

      EXIT(0);
    END;

    PROCEDURE GetHeaderCode@1100528330(Type@1100528304 : Option;Code@1100528303 : Code[20];Company@1100528302 : Text[30]) : Code[20];
    VAR
      ProjectSiteLine@1100528300 : Record 11071873;
      ProjectSiteHeader@1100528301 : Record 11071872;
    BEGIN
      ProjectSiteLine.SETCURRENTKEY(Type, Code, "Company Name");
      ProjectSiteLine.SETRANGE(Type, Type);
      ProjectSiteLine.SETRANGE(Code, Code);
      ProjectSiteLine.SETRANGE("Company Name", Company);
      IF (ProjectSiteLine.FINDFIRST) THEN BEGIN
        IF (ProjectSiteHeader.GET(ProjectSiteLine."Seq. No.")) THEN
          EXIT(ProjectSiteHeader.Code);
      END;
      EXIT('');
    END;

    PROCEDURE GetHeaderSeqNo@1100529400(Type@1100528304 : Option;Code@1100528303 : Code[20];Company@1100528302 : Text[30]) : Integer;
    VAR
      ProjectSiteLine@1100528300 : Record 11071873;
      ProjectSiteHeader@1100528301 : Record 11071872;
    BEGIN
      ProjectSiteLine.SETCURRENTKEY(Type, Code, "Company Name");
      ProjectSiteLine.SETRANGE(Type, Type);
      ProjectSiteLine.SETRANGE(Code, Code);
      ProjectSiteLine.SETRANGE("Company Name", Company);
      IF (ProjectSiteLine.FINDFIRST) THEN BEGIN
        IF (ProjectSiteHeader.GET(ProjectSiteLine."Seq. No.")) THEN
          EXIT(ProjectSiteHeader."Seq. No.");
      END;
      EXIT(0);
    END;

    LOCAL PROCEDURE AddChangeLog@1100528335(ChangeType@1100528301 : Option;RecRef@1100528302 : RecordRef;LineSharepoint@1100528308 : Integer;LineType@1100528309 : Option;LineCode@1100528310 : Code[20];HeaderCode@1100528311 : Text[250];Company@1100528400 : Text[50]);
    VAR
      ProjectSiteChangeLog@1100528300 : Record 11071870;
      InstallationManagement@1100409000 : Codeunit 11012268;
    BEGIN
      //kkleermaker.sn, 121218, C004200
      IF (RecRef.NUMBER = DATABASE::"Project Site Header") AND
         (HeaderCode = '')
      THEN
        EXIT;

      IF (RecRef.NUMBER <> DATABASE::"Project Site Header") AND
         //kkleermaker.sn, 130115, C004817
         (RecRef.NUMBER <> DATABASE::Contact) AND
         (RecRef.NUMBER <> DATABASE::Employee) AND
         (RecRef.NUMBER <> DATABASE::"Document Category") AND
         (RecRef.NUMBER <> DATABASE::"Document Type") AND
         (RecRef.NUMBER <> DATABASE::Responsibility) AND
         //kkleermaker.en
         (LineCode = '')
      THEN
        EXIT;
      //kkleermaker.en

      ProjectSiteChangeLog.INIT;
      ProjectSiteChangeLog."Seq. No." := 0;

      IF (InstallationManagement.IsDataPerCompany(RecRef.NUMBER)) THEN
        ProjectSiteChangeLog.Company := Company;
      ProjectSiteChangeLog."Log Date" := TODAY;
      ProjectSiteChangeLog."Log Time" := TIME;
      ProjectSiteChangeLog."Table Id" := RecRef.NUMBER;
      ProjectSiteChangeLog."Change Type" := ChangeType;
      CreateTableKeyString(RecRef, ProjectSiteChangeLog."Table Key");
      ProjectSiteChangeLog."Record Id String" := FORMAT(RecRef.RECORDID);
      ProjectSiteChangeLog."Project Site Line Sharepoint" := LineSharepoint;
      ProjectSiteChangeLog."Project Site Line Type" := LineType;
      ProjectSiteChangeLog."Project Site Line Code" := LineCode;
      ProjectSiteChangeLog."Project Site Header Code" := HeaderCode;
      ProjectSiteChangeLog."Called from Web Service" := (NOT GUIALLOWED);
      ProjectSiteChangeLog."User Name" := USERID;

      ProjectSiteChangeLog.INSERT(TRUE);
    END;

    PROCEDURE CreateTableKeyString@1100528334(RecRef@1100528300 : RecordRef;VAR TableKey@1100528305 : Text[250]);
    VAR
      ChangeLogMgt@1100528304 : Codeunit 423;
      KeyFldRef@1100528303 : FieldRef;
      KeyRef1@1100528302 : KeyRef;
      i@1100528301 : Integer;
    BEGIN
      CLEAR(ChangeLogMgt);
      TableKey := '';

      KeyRef1 := RecRef.KEYINDEX(1);
      FOR i := 1 TO KeyRef1.FIELDCOUNT DO BEGIN
        KeyFldRef := KeyRef1.FIELDINDEX(i);
        IF (i = 1) THEN BEGIN
          TableKey :=
            STRSUBSTNO('%1=%2', KeyFldRef.NAME, ChangeLogMgt.FormatValue2(KeyFldRef,RecRef.NUMBER));
        END ELSE BEGIN
          IF (MAXSTRLEN(TableKey) > STRLEN(TableKey) +
             STRLEN(STRSUBSTNO(', %1=%2', KeyFldRef.NAME, ChangeLogMgt.FormatValue2(KeyFldRef, RecRef.NUMBER))))
          THEN
            TableKey := COPYSTR(TableKey +
              STRSUBSTNO(', %1=%2', KeyFldRef.NAME, ChangeLogMgt.FormatValue2(KeyFldRef, RecRef.NUMBER)),
              1, MAXSTRLEN(TableKey));
        END;
      END;
    END;

    PROCEDURE ProjectSiteIsCreated@1100528333(Type@1100528303 : Option;Code@1100528300 : Code[20]) : Boolean;
    VAR
      ProjectSiteHeader@1100528302 : Record 11071872;
      ProjectSiteLine@1100528301 : Record 11071873;
    BEGIN
      ProjectSiteLine.SETCURRENTKEY(Type, Code, "Company Name");
      ProjectSiteLine.SETRANGE(Type, Type);
      ProjectSiteLine.SETRANGE(Code, Code);
      ProjectSiteLine.SETRANGE("Company Name", COMPANYNAME);
      IF (NOT ProjectSiteLine.FINDSET) THEN
        EXIT(FALSE);

      ProjectSiteHeader.GET(ProjectSiteLine."Seq. No.");
      IF (ProjectSiteHeader."SharePoint Status" > ProjectSiteHeader."SharePoint Status"::New) AND
         (NOT ProjectSiteHeader.Blocked)
      THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE SetDocVars@1100528301(DocumentLink@1100528300 : Record 11012747;VAR ProjectSiteType@1100528301 : Option;VAR ProjectSiteCode@1100528302 : Code[20]);
    VAR
      RecId@1100528303 : RecordID;
    BEGIN
      ProjectSiteType := 0;
      ProjectSiteCode := '';
      RecId := DocumentLink."Record ID";
      IF (FORMAT(RecId) = '') THEN
        EXIT;

      CASE DocumentLink."Table No." OF
        38,
        39,
        11012004,
        11012005,
        11012010,
        11012040,
        11012500,
        11012501,
        11020026,
        11020216,
        11072003,
        11125531,
        11125532: BEGIN
          ProjectSiteType := 1;
          ProjectSiteCode := GetProjectSiteCode(RecId);
        END;
        11012750,
        11012755,
        11012756: BEGIN
          ProjectSiteType := 2;
          ProjectSiteCode := GetProjectSiteCode(RecId);
        END
      END;
    END;

    PROCEDURE GetProjectSiteCode@1100528341(RecId@1100528300 : RecordID) ReturnCode : Code[20];
    VAR
      RecRef@1100528303 : RecordRef;
      PurchaseHeader@1100528301 : Record 38;
      PurchaseLine@1100528302 : Record 39;
      ExtensionContract@1100528304 : Record 11012004;
      ProjectPrincipal@1100528305 : Record 11012005;
      ProjectElement@1100528306 : Record 11012010;
      ProjectResponsiblePerson@1100528307 : Record 11012040;
      Plot@1100528308 : Record 11012500;
      HouseModel@1100528309 : Record 11012501;
      ProjectPurchaseAction@1100528310 : Record 11012026;
      ProjectAuthority@1100528311 : Record 11020216;
      Job@1100528312 : Record 11072003;
      GetOrderSMF@1100528313 : Record 11125531;
      GetOrderLineSMF@1100528314 : Record 11125532;
      TryOut@1100528315 : Record 11012750;
      TryOutLine@1100528316 : Record 11012755;
      TryOutResponsiblePerson@1100528317 : Record 11012756;
    BEGIN
      ReturnCode := '';
      RecRef := RecId.GETRECORD;

      CASE RecId.TABLENO OF
        38: BEGIN
          IF (NOT RecRef.GET(RecRef.RECORDID)) THEN
            RecRef := RecId.GETRECORD;
          RecRef.SETTABLE(PurchaseHeader);
          ReturnCode := PurchaseHeader."Job No.";
        END;
        39: BEGIN
          RecRef.SETTABLE(PurchaseLine);
          ReturnCode := PurchaseLine."Job No.";
        END;
        11012004: BEGIN
          RecRef.SETTABLE(ExtensionContract);
          ReturnCode := ExtensionContract."Project No.";
        END;
        11012005: BEGIN
          RecRef.SETTABLE(ProjectPrincipal);
          ReturnCode := ProjectPrincipal."Project No.";
        END;
        11012010: BEGIN
          RecRef.SETTABLE(ProjectElement);
          ReturnCode := ProjectElement."Project No.";
        END;
        11012040: BEGIN
          RecRef.SETTABLE(ProjectResponsiblePerson);
          ReturnCode := ProjectResponsiblePerson."Project No.";
        END;
        11012500: BEGIN
          RecRef.SETTABLE(Plot);
          ReturnCode := Plot."Project No.";
        END;
        11012501: BEGIN
          RecRef.SETTABLE(HouseModel);
          ReturnCode := HouseModel."Project No.";
        END;
        11012026: BEGIN
          RecRef.SETTABLE(ProjectPurchaseAction);
          ReturnCode := ProjectPurchaseAction."Project No.";
        END;
        11020216: BEGIN
          RecRef.SETTABLE(ProjectAuthority);
          ReturnCode := ProjectAuthority."Project No.";
        END;
        11072003: BEGIN
          RecRef.SETTABLE(Job);
          ReturnCode := Job."No.";
        END;
        11125531: BEGIN
          RecRef.SETTABLE(GetOrderSMF);
          ReturnCode := GetOrderSMF."Project No.";
        END;
        11125532: BEGIN
          RecRef.SETTABLE(GetOrderLineSMF);
          ReturnCode := GetOrderLineSMF."Project No.";
        END;
        11012750: BEGIN
          RecRef.SETTABLE(TryOut);
          ReturnCode := TryOut.Code;
        END;
        11012755: BEGIN
          RecRef.SETTABLE(TryOutLine);
          ReturnCode := TryOutLine."Try-out No.";
        END;
        11012756: BEGIN
          RecRef.SETTABLE(TryOutResponsiblePerson);
          ReturnCode := TryOutResponsiblePerson."Try-out";
        END;
      END;
    END;

    PROCEDURE AddProjectAuthorities@1100409000(Origin@1100409000 : ',Document,Order,Invoice';ProjectNo@1100409001 : Code[20];ContactNo@1100409002 : Code[20];ContactPersonNo@1100409007 : Code[20]);
    BEGIN
      AddProjectAuthority(Origin, ProjectNo, ContactNo, ContactPersonNo);
      IF (ContactPersonNo <> '') AND
         (ContactNo <> '')
      THEN
        AddProjectAuthority(Origin, ProjectNo, ContactNo, ''); //kkleermaker, 130114, C004900
    END;

    LOCAL PROCEDURE AddProjectAuthority@1100409009(Origin@1100409000 : ',Document,Order,Invoice';ProjectNo@1100409001 : Code[20];ContactNo@1100409002 : Code[20];ContactPersonNo@1100409007 : Code[20]);
    VAR
      ProjectAuthority@1100409003 : Record 11020216;
      ExistingProjAuthority@1100409008 : Record 11020216;
      ProjectSiteSetup@1100409004 : Record 11071871;
      AuthorityType@1100409006 : Code[20];
    BEGIN
      IF (ProjectNo = '') THEN
        EXIT;
      IF (ContactNo + ContactPersonNo = '') THEN
        EXIT;

      ProjectSiteSetup.GET;

      CASE Origin OF
        Origin::Document: BEGIN
          ProjectSiteSetup.TESTFIELD("Authority Type Documents");
          AuthorityType := ProjectSiteSetup."Authority Type Documents"
        END;
        Origin::Order: BEGIN
          ProjectSiteSetup.TESTFIELD("Authority Type Purch. Order");
          AuthorityType := ProjectSiteSetup."Authority Type Purch. Order"
        END;
        Origin::Invoice: BEGIN
          ProjectSiteSetup.TESTFIELD("Authority Type Purch. Invoice");
          AuthorityType := ProjectSiteSetup."Authority Type Purch. Invoice"
        END;
      END;

      IF (ProjectAuthority.GET(ProjectNo, AuthorityType, ContactNo, ContactPersonNo)) THEN
        EXIT;

      //kkleermaker.sn, 121221, C004753
      IF GetProjectAuthority(ProjectNo, ContactNo, ContactPersonNo, ExistingProjAuthority) THEN
        //For the CTB Project Site it is not allowed that the same project authority occurs
        //more than once with different authority types.
        UpdateProjectAuthority(ExistingProjAuthority, AuthorityType, ProjectSiteSetup)
      ELSE BEGIN
      //kkleermaker.en
        ProjectAuthority."Project No." := ProjectNo;
        ProjectAuthority."Authority Type" := AuthorityType;
        ProjectAuthority."Contact No." := ContactNo;
        ProjectAuthority."Contact Person No." := ContactPersonNo;
        ProjectAuthority.INSERT(TRUE);
      END; //kkleermaker.n
    END;

    PROCEDURE AddTryOutAuthority@1100409001(Origin@1100409000 : ',Document';TryOutNo@1100409001 : Code[20];ContactNo@1100409002 : Code[20];ContactPersonNo@1100409007 : Code[20];TryoutIsBeingModified@1100528400 : Boolean;Tryout@1100528401 : Record 11012750);
    VAR
      TryOutLine@1100409003 : Record 11012755;
      ProjectSiteSetup@1100409004 : Record 11071871;
      ContactType@1100409006 : Code[20];
      LastLineNo@1100409008 : Integer;
    BEGIN
      IF (Origin <> 1) THEN
        EXIT;
      IF (TryOutNo = '') THEN
        EXIT;
      IF (ContactNo + ContactPersonNo = '') THEN
        EXIT;

      ProjectSiteSetup.GET;

      CASE Origin OF
        Origin::Document: BEGIN
          ProjectSiteSetup.TESTFIELD("Contact Type Try-out");
          ContactType := ProjectSiteSetup."Contact Type Try-out"
        END;
      END;

      LastLineNo := 0;
      TryOutLine.SETRANGE("Try-out No.", TryOutNo);
      IF (TryOutLine.FINDLAST) THEN
        LastLineNo := TryOutLine."Line No.";
      TryOutLine.SETRANGE("Contact No.", ContactNo);
      IF (TryOutLine.FINDFIRST) THEN
        EXIT;

      TryOutLine.RESET;
      TryOutLine.INIT;
      TryOutLine."Try-out No." := TryOutNo;
      TryOutLine."Line No." := LastLineNo + 10000;
      TryOutLine."Contact Type" := ContactType;
      TryOutLine."Contact No." := ContactNo;
      TryOutLine."Contact Person No." := ContactPersonNo;
      IF TryoutIsBeingModified THEN BEGIN
        //Insert(true) will cause problems, because the try-out would be modified twice then.
        TryOutLine.TESTFIELD(TryOutLine."Contact No.");
        LogTryOutLinePrivate(1, TryOutLine, FALSE, Tryout);
        TryOutLine.INSERT;
      END ELSE
        TryOutLine.INSERT(TRUE);
    END;

    LOCAL PROCEDURE GetProjectAuthority@1100409003(ProjectNo@1100409000 : Code[20];ContactNo@1100409002 : Code[20];ContactPersonNo@1100409003 : Code[20];VAR ProjectAuthority@1100409001 : Record 11020216) : Boolean;
    BEGIN
      //kkleermaker, 121221, C004753
      ProjectAuthority.SETRANGE("Project No.", ProjectNo);
      ProjectAuthority.SETRANGE("Contact No.", ContactNo);
      ProjectAuthority.SETRANGE("Contact Person No.", ContactPersonNo);
      EXIT(ProjectAuthority.FINDFIRST);
    END;

    LOCAL PROCEDURE UpdateProjectAuthority@1100409004(ExistingProjAuthority@1100409000 : Record 11020216;NewAuthorityType@1100409001 : Code[20];ProjectSiteSetup@1100409002 : Record 11071871);
    VAR
      ProjectAuthority@1100409004 : Record 11020216;
    BEGIN
      //kkleermaker, 121221, C004753
      CASE ExistingProjAuthority."Authority Type" OF
        ProjectSiteSetup."Authority Type Documents":
          IF (NewAuthorityType = ProjectSiteSetup."Authority Type Documents") THEN  //Updating doesn't make sense.
            EXIT;
        ProjectSiteSetup."Authority Type Purch. Order":
          IF (NewAuthorityType = ProjectSiteSetup."Authority Type Documents") OR    //Order is more important than Doc.
             (NewAuthorityType = ProjectSiteSetup."Authority Type Purch. Order")    //Updating doesn't make sense.
          THEN
            EXIT;
        ProjectSiteSetup."Authority Type Purch. Invoice":
          IF (NewAuthorityType = ProjectSiteSetup."Authority Type Documents") OR    //Invoice is more important than Doc.
             (NewAuthorityType = ProjectSiteSetup."Authority Type Purch. Order") OR //Invoice is more important than Order.
             (NewAuthorityType = ProjectSiteSetup."Authority Type Purch. Invoice")  //Updating doesn't make sense.
          THEN
            EXIT;
        ELSE
          EXIT; //When existing authority type is not Doc, Order or Invoice, it is not allowed to overwrite it.
      END;

      ExistingProjAuthority.DELETE(TRUE);

      ProjectAuthority := ExistingProjAuthority;
      ProjectAuthority."Authority Type" := NewAuthorityType;
      ProjectAuthority.INSERT(TRUE);
    END;

    PROCEDURE LogInspectionSMF@1100528328(ChangeType@1100528301 : Option;InspectionSMF@1100528300 : Record 11125535);
    VAR
      ProjectSiteSetup@1100528303 : Record 11071871;
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      RecRef.GETTABLE(InspectionSMF);
      ProjectSiteSetup.GET;

      IF (NOT ProjectSiteSetup."Sync Site Manager Tables") THEN
        EXIT;

      IF (ProjectSiteIsCreated(1, InspectionSMF."Project No.")) THEN BEGIN
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, InspectionSMF."Project No.", COMPANYNAME), 2,
          InspectionSMF."Project No.",
          GetHeaderCode(1, InspectionSMF."Project No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    PROCEDURE LogQADeviation@1100528336(ChangeType@1100528301 : Option;QADeviation@1100528300 : Record 11125986);
    VAR
      ProjectSiteSetup@1100528303 : Record 11071871;
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;
      IF (QADeviation."Source Type" <> QADeviation."Source Type"::Project) THEN
        EXIT;

      RecRef.GETTABLE(QADeviation);
      ProjectSiteSetup.GET;

      IF (NOT ProjectSiteSetup."Sync Site Manager Tables") THEN
        EXIT;

      IF (ProjectSiteIsCreated(1, QADeviation."Source No.")) THEN BEGIN
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, QADeviation."Source No.", COMPANYNAME), 2,
          QADeviation."Source No.",
          GetHeaderCode(1, QADeviation."Source No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    PROCEDURE LogTextLineSMF@1100528302(ChangeType@1100528301 : Option;TextLineSMF@1100528300 : Record 11125526);
    VAR
      ProjectSiteSetup@1100528303 : Record 11071871;
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;

      RecRef.GETTABLE(TextLineSMF);
      ProjectSiteSetup.GET;

      IF (NOT ProjectSiteSetup."Sync Site Manager Tables") THEN
        EXIT;

      IF (ProjectSiteIsCreated(1, TextLineSMF."Project No.")) THEN BEGIN
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, TextLineSMF."Project No.", COMPANYNAME), 2,
          TextLineSMF."Project No.",
          GetHeaderCode(1, TextLineSMF."Project No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    PROCEDURE LogAccidentQA@1100528338(ChangeType@1100528301 : Option;AccidentQA@1100528300 : Record 11126005);
    VAR
      ProjectSiteSetup@1100528303 : Record 11071871;
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;
      IF (AccidentQA."Source Type" <> AccidentQA."Source Type"::Project) THEN
        EXIT;

      RecRef.GETTABLE(AccidentQA);
      ProjectSiteSetup.GET;

      IF (NOT ProjectSiteSetup."Sync Site Manager Tables") THEN
        EXIT;

      IF (ProjectSiteIsCreated(1, AccidentQA."Source No.")) THEN BEGIN
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, AccidentQA."Source No.", COMPANYNAME), 2,
          AccidentQA."Source No.",
          GetHeaderCode(1, AccidentQA."Source No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    PROCEDURE LogBlanketScheme@1100525000(ChangeType@1100528301 : Option;BlanketScheme@1100528300 : Record 11012066);
    VAR
      ProjectSiteSetup@1100528303 : Record 11071871;
      RecRef@1100528302 : RecordRef;
    BEGIN
      IF (NOT IsInLicense(FALSE)) THEN
        EXIT;
      IF (BlanketScheme."Project No." = '') THEN
        EXIT;

      RecRef.GETTABLE(BlanketScheme);
      ProjectSiteSetup.GET;

      IF (ProjectSiteIsCreated(1, BlanketScheme."Project No.")) THEN BEGIN
        AddChangeLog(ChangeType, RecRef,
          GetLineSharepointNo(1, BlanketScheme."Project No.", COMPANYNAME), 2,
          BlanketScheme."Project No.",
          GetHeaderCode(1, BlanketScheme."Project No.", COMPANYNAME),
          COMPANYNAME);
      END;
    END;

    LOCAL PROCEDURE MakePortalConnectionAsAdmin@1100525001(SiteType@1100525000 : Option;SiteCode@1100528300 : Code[20]) : Boolean;
    VAR
      ProjectSiteHeader@1100525002 : Record 11071872;
      ProjectSiteLine@1100525003 : Record 11071873;
      FullPortalURL@1100525004 : Text;
    BEGIN
      IF (NOT ProjectSiteSetup.GET) THEN
        ProjectSiteSetup.INIT;
      ProjectSiteSetup.TESTFIELD("Website URL");
      ProjectSiteSetup.TESTFIELD("Owner Domain");
      ProjectSiteSetup.TESTFIELD("Owner ID");
      ProjectSiteSetup.TESTFIELD("Owner Password");
      ProjectSiteSetup.TESTFIELD("Portal URL Suffix");
      IF (NOT ProjectSiteIsCreated(SiteType, SiteCode)) THEN
        EXIT(FALSE);

      ProjectSiteHeader.GET(GetHeaderSeqNo(SiteType, SiteCode, COMPANYNAME));
      ProjectSiteLine.SETRANGE("Seq. No.", ProjectSiteHeader."Seq. No.");
      ProjectSiteLine.SETRANGE(Type, SiteType);
      ProjectSiteLine.SETRANGE(Code, SiteCode);
      ProjectSiteLine.SETRANGE("Company Name", COMPANYNAME);
      ProjectSiteLine.FINDFIRST;
      ProjectSiteLine.TESTFIELD("Site Created", TRUE);

      FullPortalURL := ProjectSiteHeader.GetSiteURL + '/' + ProjectSiteSetup."Portal URL Suffix" + '/' + SiteCode;

      CLEAR(ProjectSiteCTB);
      ProjectSiteCTB := ProjectSiteCTB.CTBWrapper;
      IF (NOT ProjectSiteCTB.LoginProjectSite(FullPortalURL,
        ProjectSiteSetup."Owner ID", ProjectSiteSetup."Owner Password", ProjectSiteSetup."Owner Domain",
        ErrorString))
      THEN
        ERROR(Text001, ErrorString);
      EXIT(TRUE);
    END;

    PROCEDURE GetInternalDocumentToUpdate@1100528351(VAR DocumentProperties@1100528307 : Record 11012746;StorageDir@1100528308 : Text;CheckOut@1100525000 : Boolean) : Text;
    VAR
      SiteType@1100525002 : Option;
      SiteCode@1100525001 : Code[20];
      StringFunctions@1100528301 : Codeunit 11012273;
      WebLink@1100528300 : Text;
      SlashPos@1100528302 : Integer;
      DotPos@1100528305 : Integer;
    BEGIN
      IF (NOT DocumentProperties.HasStorageURI) THEN
        EXIT('');
      IF (NOT GetDocumentLink(DocumentProperties, SiteType, SiteCode)) THEN
        EXIT('');
      IF (SiteType < 1) OR (SiteType > 2) THEN
        EXIT('');
      IF (NOT MakePortalConnectionAsAdmin(SiteType, SiteCode)) THEN
        EXIT('');

      WebLink := DocumentProperties.GetStorageURI;
      IF (COPYSTR(StorageDir, STRLEN(StorageDir), 1) <> '\') THEN
        StorageDir += '\';

      IF (NOT ProjectSiteCTB.DownloadDocument(WebLink, StorageDir, CheckOut, ErrorString)) THEN
        ERROR(Text002, DocumentProperties."No.");

      SlashPos := StringFunctions.RSTRPOS(WebLink, '/');


      DocumentProperties.ValidateStorageURI(DocumentProperties."Storage Type"::"File System on Premise", StorageDir + COPYSTR(WebLink, SlashPos + 1, DotPos - SlashPos - 1));

      IF (NOT CheckOut) THEN
        WebLink := '';
      EXIT(WebLink);
    END;

    PROCEDURE PutUpdatedInternalDocument@1100528384(VAR DocumentProperties@1100528306 : Record 11012746;WebLink@1100528300 : Text;StorageDir@1100528305 : Text);
    VAR
      SiteType@1100525002 : Option;
      SiteCode@1100525001 : Code[20];
    BEGIN
      IF (NOT DocumentProperties.HasStorageURI)  THEN
        EXIT;
      IF (NOT GetDocumentLink(DocumentProperties, SiteType, SiteCode)) THEN
        EXIT;
      IF (SiteType < 1) OR (SiteType > 2) THEN
        EXIT;
      IF (NOT MakePortalConnectionAsAdmin(SiteType, SiteCode)) THEN
        EXIT;

      IF (COPYSTR(StorageDir, STRLEN(StorageDir), 1) <> '\') THEN
        StorageDir += '\';

      IF (NOT ProjectSiteCTB.UploadDocument(WebLink, StorageDir, ErrorString)) THEN
        ERROR(Text003, DocumentProperties."No.");

      DocumentProperties.ValidateStorageURI(10,WebLink);
    END;

    LOCAL PROCEDURE GetDocumentLink@1100525002(DocumentProperties@1100525004 : Record 11012746;VAR SiteType@1100525001 : Option;VAR SiteCode@1100525002 : Code[20]) : Boolean;
    VAR
      DocumentLink@1100525000 : Record 11012747;
    BEGIN
      DocumentLink.SETRANGE("Document No.", DocumentProperties."No.");
      IF (NOT DocumentLink.FINDSET) THEN
        EXIT(FALSE);
      REPEAT
        SetDocVars(DocumentLink, SiteType, SiteCode);
        IF (SiteType IN [1,2]) THEN
          EXIT(TRUE);
      UNTIL (DocumentLink.NEXT = 0);
      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

