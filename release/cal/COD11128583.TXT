OBJECT Codeunit 11128583 OIOUBL Check Service Header
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVDK9.00 (13613);
  }
  PROPERTIES
  {
    TableNo=5900;
    OnRun=BEGIN
            IF "EAN No." <> '' THEN BEGIN
              CheckOIOUBLProfile(Rec);
              ReadCompanyInfo;
              ReadGLSetup;

              CompanyInfo.TESTFIELD("VAT Registration No.");
              CompanyInfo.TESTFIELD(Name);
              CompanyInfo.TESTFIELD(Address);
              CompanyInfo.TESTFIELD(City);
              CompanyInfo.TESTFIELD("Post Code");
              CompanyInfo.TESTFIELD("Country/Region Code");
              IF CompanyInfo.IBAN = '' THEN
                CompanyInfo.TESTFIELD("Bank Account No.");
              CompanyInfo.TESTFIELD("Bank Branch No.");

              IF NOT OIOUBLDocumentEncode.IsValidEANNo("EAN No.") THEN
                FIELDERROR("EAN No.",Text13606);

              TESTFIELD("Your Reference");

              TESTFIELD("Payment Terms Code");
              IF "Document Type" <> "Document Type"::"Credit Memo" THEN
                IF "Payment Channel" = "Payment Channel"::" " THEN
                  FIELDERROR("Payment Channel",MusthaveavalueErr);

              IF "Document Type" IN ["Document Type"::Invoice,"Document Type"::Order] THEN
                TESTFIELD("Order Date");
              TESTFIELD("Bill-to Name");
              TESTFIELD("Bill-to Address");
              TESTFIELD("Bill-to City");
              TESTFIELD("Bill-to Post Code");

              OIOUBLDocumentEncode.GetOIOUBLCountryRegionCode("Bill-to Country/Region Code");
              OIOUBLDocumentEncode.GetOIOUBLCountryRegionCode(CompanyInfo."Country/Region Code");
              OIOUBLDocumentEncode.IsValidCountryCode("Country/Region Code");
              TESTFIELD("Contact Name");
              TESTFIELD("VAT Registration No.");

              OIOUBLDocumentEncode.GetOIOUBLCurrencyCode("Currency Code");
              CheckServiceLines(Rec);
            END;
          END;

  }
  CODE
  {
    VAR
      GLSetup@1101100002 : Record 98;
      CompanyInfo@1101100001 : Record 79;
      OIOUBLDocumentEncode@1101100004 : Codeunit 11128570;
      GLSetupRead@1101100003 : Boolean;
      CompanyInfoRead@1101100000 : Boolean;
      Text13606@1101100005 : TextConst 'ENU=does not contain a valid, 13-digit EAN no.;NOR=inneholder ikke et gyldig 13-tegns Gtin nr.;SVE=inneh†ller inte ett giltigt 13-teckens EAN nr.';
      EmptyDescriptionErr@1101100010 : TextConst '@@@=Parameter 1 - document type, 2 - document no.;ENU=The %1 %2 contains lines in which the Type and the No. are specified, but the Description is empty. This is not allowed for an OIOUBL document which might be created from the posted document.;NOR=%1 %2 inneholder rader hvor %3 og %4 er spesifisert, men ikke %5. Dette er ikke tillatt i ett OIOXML dokument som kanskje vil opprettes fra det bokf›rte dokumentet.';
      EmptyFieldsQst@1101100009 : TextConst '@@@=Parameter 1 - document type, 2 - document no.;ENU=The %1 %2 contains lines in which either the Type, the No. or the Description is empty. Please be aware that such lines will not be taken into account when creating an OIOUBL document.\Do you want to continue?;NOR=%1 %2 inneholder rader hvor enten %3, %4 eller %5 er tomme. V‘r klar over at slike rader ikke regnes med n†r OIOXML dokument opprettes.';
      Text13611@1101100007 : TextConst 'ENU=The posting has been interrupted to respect the warning.;NOR=bokf›ringen ble avbrutt pga advarselen.;SVE=Bokf”ringen har avbrutits pga varningen.';
      EmptyUnitOfMeasureErr@1101100011 : TextConst '@@@=Parameter 1 - document type, 2 - document no.;ENU=The %1 %2 contains lines in which the Unit of Measure field is empty. This is not allowed for an OIOUBL document which might be created from the posted document.;NOR=%1 %2 inneholder rader hvor %3 er tomme. Dette er ikke tillatt for et OIOXML dokument som kanskje vil opprettes fra det bokf›rte dokumentet.';
      Text000@1101100012 : TextConst 'ENU=cannot be negative';
      Text001@1101100013 : TextConst 'ENU=The total Line Amount cannot be negative.';
      Text002@1101100014 : TextConst 'ENU=The total Line Discount Amount cannot be negative.';
      MusthaveavalueErr@1060000 : TextConst 'ENU=must have a value';

    LOCAL PROCEDURE ReadCompanyInfo@1101100002();
    BEGIN
      IF NOT CompanyInfoRead THEN BEGIN
        CompanyInfo.GET;
        CompanyInfoRead := TRUE;
      END;
    END;

    LOCAL PROCEDURE ReadGLSetup@1101100008();
    BEGIN
      IF NOT GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
    END;

    LOCAL PROCEDURE CheckServiceLines@1060000(ServiceHeader@1060000 : Record 5900);
    VAR
      ServiceLine@1060001 : Record 5902;
      EmptyLineFound@1060002 : Boolean;
      TotalLineAmount@1060003 : Decimal;
      TotalLineDiscountAmount@1060004 : Decimal;
    BEGIN
      EmptyLineFound := FALSE;
      TotalLineAmount := 0;
      TotalLineDiscountAmount := 0;
      WITH ServiceLine DO BEGIN
        RESET;
        SETRANGE("Document Type",ServiceHeader."Document Type");
        SETRANGE("Document No.",ServiceHeader."No.");
        IF FINDSET THEN
          REPEAT
            IF (Type <> Type::" ") AND ("No." <> '') AND ("Unit of Measure" = '') THEN
              ERROR(EmptyUnitOfMeasureErr,"Document Type","Document No.");
            IF Description = '' THEN
              IF (Type <> Type::" ") AND ("No." <> '') THEN
                ERROR(EmptyDescriptionErr,"Document Type","Document No.");
            TotalLineAmount += "Line Amount";
            TotalLineDiscountAmount += "Line Discount Amount";
            IF (Type = Type::" ") OR ("No." = '')
            THEN
              EmptyLineFound := TRUE;
              IF "Line Discount %" < 0 THEN
                FIELDERROR("Line Discount %",Text000);
          UNTIL (NEXT = 0);
        IF TotalLineAmount < 0 THEN
          ERROR(Text001);
        IF TotalLineDiscountAmount < 0 THEN
          ERROR(Text002);

        IF EmptyLineFound THEN
          IF NOT CONFIRM(EmptyFieldsQst,TRUE,"Document Type","Document No.") THEN
            ERROR(Text13611);
      END;
    END;

    PROCEDURE CheckOIOUBLProfile@1060001(ServiceHeader@1060000 : Record 5900);
    VAR
      OIOUBLProfile@1060001 : Record 11128570;
      Customer@1060002 : Record 18;
    BEGIN
      Customer.GET(ServiceHeader."Customer No.");
      IF Customer."OIOUBL Profile Code Required" THEN BEGIN
        ServiceHeader.TESTFIELD("OIOUBL Profile Code");
        OIOUBLProfile.GET(ServiceHeader."OIOUBL Profile Code");
        OIOUBLProfile.TESTFIELD("Profile ID");
      END;
    END;

    BEGIN
    END.
  }
}

