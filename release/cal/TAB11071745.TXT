OBJECT Table 11071745 Maintenance Scheme
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CentralDataManagement.EditMaintenanceScheme(Rec, 1, xRec);
             END;

    OnModify=BEGIN
               CentralDataManagement.EditMaintenanceScheme(Rec, 2, xRec);
             END;

    OnDelete=VAR
               MaintenanceSchemeVersion@1210190000 : Record 11071743;
               ServiceInspectionVersion@1100528600 : Record 11071750;
               StdObjectMaintenanceScheme@1100528601 : Record 11071703;
             BEGIN
               MaintenanceSchemeVersion.SETRANGE("Line Type", MaintenanceSchemeVersion."Line Type"::"Maintenance Scheme");
               MaintenanceSchemeVersion.SETRANGE(Code, Code);
               MaintenanceSchemeVersion.DELETEALL(TRUE);

               ServiceInspectionVersion.SETRANGE("Inspection Type", ServiceInspectionVersion."Inspection Type"::"Base Inspection List");
               ServiceInspectionVersion.SETRANGE("Service Contract No.", '');
               ServiceInspectionVersion.SETRANGE(Code, Code);
               ServiceInspectionVersion.DELETEALL(TRUE);

               StdObjectMaintenanceScheme.SETRANGE("Maintenance Scheme", Code);
               StdObjectMaintenanceScheme.DELETEALL(TRUE);

               CentralDataManagement.EditMaintenanceScheme(Rec, 4, xRec);
             END;

    CaptionML=[ENU=Maintenance Scheme;
               NOR=Vedlikeholdsskjema;
               SVE=Underh†llsschema];
    LookupPageID=Page11125217;
    DrillDownPageID=Page11125217;
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code20        ;OnValidate=VAR
                                                                MainRec@1100528600 : Record 11071745;
                                                              BEGIN
                                                                IF Code <> xRec.Code THEN BEGIN
                                                                  MainRec := xRec;
                                                                  IF MainRec.FIND THEN
                                                                    CentralDataManagement.EditMaintenanceScheme(Rec, 3, xRec);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 20  ;   ;Description         ;Text50        ;FieldClass=Normal;
                                                   CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 30  ;   ;Condition           ;Code10        ;TableRelation=Condition.Code;
                                                   CaptionML=[ENU=Condition;
                                                              NOR=Betingelse;
                                                              SVE=Villkor] }
    { 31  ;   ;Condition Description;Text30       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Condition.Description WHERE (Code=FIELD(Condition)));
                                                   CaptionML=[ENU=Condition Description;
                                                              NOR=Tilstandsbeskrivelse;
                                                              SVE=Villkorsbeskrivning];
                                                   Editable=No }
    { 40  ;   ;Index Date          ;Date          ;CaptionML=[ENU=Index Date;
                                                              NOR=Indeksdato;
                                                              SVE=Indexdatum] }
    { 50  ;   ;Maintenance Interval;DateFormula   ;OnValidate=BEGIN
                                                                EvaluateTimeQuantity;
                                                              END;

                                                   CaptionML=[ENU=Maintenance Interval;
                                                              NOR=Vedlikeholdsintervall;
                                                              SVE=Underh†llsintervall] }
    { 55  ;   ;Maintenance Interval (Counter);Decimal;
                                                   CaptionML=ENU=Maintenance Interval (Counter) }
    { 57  ;   ;Consumption Component;Code20       ;TableRelation="Consumption Component".Code WHERE (Component Type=FILTER(Counter));
                                                   CaptionML=ENU=Consumption Component }
    { 60  ;   ;Time Quantity       ;Decimal       ;InitValue=1;
                                                   CaptionML=[ENU=Time Quantity;
                                                              NOR=Tidskvantitet;
                                                              SVE=Tidskvantitet];
                                                   BlankZero=Yes }
    { 70  ;   ;Discipline          ;Code10        ;TableRelation=Discipline;
                                                   CaptionML=[ENU=Discipline;
                                                              NOR=Disiplin;
                                                              SVE=Disciplin] }
    { 80  ;   ;Trade Speciality    ;Code10        ;TableRelation="Trade Speciality".Code WHERE (Discipline=FIELD(Discipline));
                                                   CaptionML=[ENU=Trade Speciality;
                                                              NOR=SNI-nummer;
                                                              SVE=SNI-nummer] }
    { 90  ;   ;Trade Expertise     ;Code10        ;TableRelation="Trade Expertise";
                                                   CaptionML=[ENU=Trade Expertise;
                                                              NOR=Bransjeekspertise;
                                                              SVE=Branschexpertis] }
    { 100 ;   ;Object Group        ;Code10        ;TableRelation="Service Group".No.;
                                                   CaptionML=[ENU=Object Group;
                                                              NOR=Objektgruppe;
                                                              SVE=Objektgrupp] }
    { 120 ;   ;Frequency per Year  ;Decimal       ;InitValue=1;
                                                   OnValidate=VAR
                                                                SchemeLineRec@1100525000 : Record 11071744;
                                                              BEGIN
                                                                SchemeLineRec.SETRANGE("Line Type", SchemeLineRec."Line Type"::"Maintenance Scheme");
                                                                SchemeLineRec.SETRANGE("Type Code", Code);
                                                                UpdMaintSchemeLinesTimeQuant(SchemeLineRec);

                                                                SchemeLineRec.SETRANGE("Line Type");
                                                                SchemeLineRec.SETRANGE("Belongs to Scheme",Code);
                                                                SchemeLineRec.SETRANGE("Type Code");
                                                                UpdMaintSchemeLinesTimeQuant(SchemeLineRec);
                                                              END;

                                                   CaptionML=[ENU=Frequency per Year;
                                                              NOR=Frekvens per †r;
                                                              SVE=Frekvens per †r];
                                                   BlankZero=Yes }
    { 130 ;   ;Expired             ;Boolean       ;OnValidate=VAR
                                                                MaintenanceHeader@1100528600 : Record 11071743;
                                                              BEGIN
                                                                IF Expired THEN BEGIN
                                                                  CheckExpiredAllowed;

                                                                  MaintenanceHeader.SETRANGE("Line Type", MaintenanceHeader."Line Type"::"Maintenance Scheme");
                                                                  MaintenanceHeader.SETRANGE(Code, Code);
                                                                  MaintenanceHeader.MODIFYALL(Expired, TRUE, TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Expired;
                                                              NOR=Utg†tt;
                                                              SVE=Utg†ngna] }
    { 140 ;   ;Base Inspection List Code;Code20   ;TableRelation="Base Service Inspection List";
                                                   OnValidate=VAR
                                                                ServiceInspectionVersion@1100528600 : Record 11071750;
                                                              BEGIN
                                                                IF ("Base Inspection List Code" <> xRec."Base Inspection List Code") AND (xRec."Base Inspection List Code" <> '') THEN BEGIN
                                                                  ServiceInspectionVersion.SETRANGE("Belongs to Scheme", Code);
                                                                  ServiceInspectionVersion.SETRANGE("Belongs to Base Insp. List", xRec."Base Inspection List Code");
                                                                  IF NOT ServiceInspectionVersion.ISEMPTY THEN
                                                                    ERROR(Text003, ServiceInspectionVersion.TABLECAPTION);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Base Inspection List;
                                                              NOR=Basisinspeksjonsliste;
                                                              SVE=Basinspektionslista] }
    { 150 ;   ;Subcontracting      ;Boolean       ;CaptionML=[ENU=Subcontracting;
                                                              NOR=Underentrepen›r;
                                                              SVE=Underentreprenad] }
    { 160 ;   ;Survey Template     ;Boolean       ;OnValidate=BEGIN
                                                                IF "Survey Template" THEN
                                                                  TestMaintSchemeVersionLineQuantitiesZero
                                                                ELSE
                                                                  TestMaintSchemeVersionLineQuantitySurveyZero;
                                                              END;

                                                   CaptionML=ENU=Survey Template }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528602 : TextConst 'ENU=Maintenance Scheme %1 is used with 1 or more standard objects, %2 not valid.;NOR=Vedlikeholdsskjema %1 er brukt med 1 eller flere standardobjekter. %2 er ugyldig.;SVE=Underh†llsschema %1 anv„nds med 1 eller fler standardobjekt, %2 „r inte giltigt.';
      Text001@1100528601 : TextConst 'ENU=Maintenance Scheme %1 is used with 1 or more contract maintenance lines, %2 not valid.;NOR=Vedlikeholdsskjema %1 er brukt med 1 eller flere vedlikeholdsrader for kontrakt. %2 er ugyldig;SVE=Underh†llsschema %1 anv„nds med 1 eller fler rader f”r kontraktsunderh†ll, %2 „r inte giltigt.';
      Text002@1100528600 : TextConst 'ENU=Maintenance Scheme %1 is used with 1 or more contract maintenance proposal lines, %2 not valid.;NOR=Vedlikeholdsskjema %1 er brukt med 1 eller flere vedlikeholdsforslagsrader for kontrakt. %2 er ugyldig.;SVE=Underh†llsschema %1 anv„nds med 1 eller fler rader f”r kontraktsunderh†llsf”rslag, %2 „r inte giltigt.';
      CentralDataManagement@1100528603 : Codeunit 11012010;
      Text003@1100528604 : TextConst 'ENU=There are %1 present, you first need to delete these';
      Text004@1100528605 : TextConst 'ENU=A %1 may not contain %3 lines with %2 <> 0';

    PROCEDURE EvaluateTimeQuantity@1100485000();
    VAR
      HelpTxt1@1100485000 : Text[30];
      HelpTxt2@1100485001 : Text[30];
      HelpDec1@1100485002 : Decimal;
    BEGIN
      //db, 12-10-10
      HelpTxt1 := FORMAT("Maintenance Interval");
      HelpTxt2 := DELCHR(HelpTxt1, '=', '0123456789');

      IF (HelpTxt1 = '') OR (HelpTxt2 = '') THEN EXIT;

      EVALUATE(HelpDec1, COPYSTR(HelpTxt1, 1, STRPOS(HelpTxt1, HelpTxt2)-1));
      IF HelpDec1 = 0 THEN EXIT;

      CASE HelpTxt2 OF
        'D':
          "Frequency per Year" := 365 / HelpDec1;
        'W':
          "Frequency per Year" := 52 / HelpDec1;
        'M':
          "Frequency per Year" := 12 / HelpDec1;
        'K','Q':
          "Frequency per Year" := 4 / HelpDec1;
        'J','Y':
          "Frequency per Year" := 1 / HelpDec1;
      END;

      VALIDATE("Frequency per Year");
    END;

    PROCEDURE UpdMaintSchemeLinesTimeQuant@1100525005(VAR SchemeLineRec@1100525000 : Record 11071744);
    BEGIN
      IF SchemeLineRec.FINDSET(TRUE,FALSE) THEN BEGIN
        REPEAT
          SchemeLineRec."Maintenance Interval" := "Maintenance Interval";
          SchemeLineRec.VALIDATE("Frequency per Year","Frequency per Year");
          SchemeLineRec.MODIFY;
        UNTIL SchemeLineRec.NEXT = 0;
      END;
    END;

    PROCEDURE CheckExpiredAllowed@1100528600();
    VAR
      DefMaintSchServObject@1100528600 : Record 11071703;
      ContractObjectMaintenance@1100528601 : Record 11071692;
      MaintProposalLineConsObj@1100528602 : Record 11071696;
    BEGIN
      //mg, 18-05-11: M27232
      DefMaintSchServObject.SETRANGE("Maintenance Scheme", Code);
      IF NOT DefMaintSchServObject.ISEMPTY THEN
        ERROR(Text000, Code, FIELDCAPTION(Expired));

      ContractObjectMaintenance.SETRANGE("Maintenance Scheme", Code);
      IF NOT ContractObjectMaintenance.ISEMPTY THEN
        ERROR(Text001, Code, FIELDCAPTION(Expired));

      MaintProposalLineConsObj.SETRANGE("Maintenance Scheme", Code);
      IF NOT MaintProposalLineConsObj.ISEMPTY THEN
        ERROR(Text002, Code, FIELDCAPTION(Expired));
    END;

    PROCEDURE TestMaintSchemeVersionLineQuantitiesZero@1100528602();
    VAR
      MaintSchemeVersionLine@1100528600 : Record 11071744;
    BEGIN
      MaintSchemeVersionLine.SETRANGE("Line Type", MaintSchemeVersionLine."Line Type"::"Maintenance Scheme");
      MaintSchemeVersionLine.SETRANGE("Type Code", Code);
      MaintSchemeVersionLine.SETFILTER(Quantity, '<>%1', 0);
      IF NOT MaintSchemeVersionLine.ISEMPTY THEN
        ERROR(Text004, FIELDCAPTION("Survey Template"), MaintSchemeVersionLine.FIELDCAPTION(Quantity), MaintSchemeVersionLine.TABLECAPTION);
    END;

    PROCEDURE TestMaintSchemeVersionLineQuantitySurveyZero@1100528601();
    VAR
      MaintSchemeVersionLine@1100528600 : Record 11071744;
    BEGIN
      MaintSchemeVersionLine.SETRANGE("Line Type", MaintSchemeVersionLine."Line Type"::"Maintenance Scheme");
      MaintSchemeVersionLine.SETRANGE("Type Code", Code);
      MaintSchemeVersionLine.SETFILTER("Quantity (Survey)", '<>%1', 0);
      IF NOT MaintSchemeVersionLine.ISEMPTY THEN
        ERROR(Text004, FIELDCAPTION("Survey Template"), MaintSchemeVersionLine.FIELDCAPTION("Quantity (Survey)"), MaintSchemeVersionLine.TABLECAPTION);
    END;

    BEGIN
    END.
  }
}

