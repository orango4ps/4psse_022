OBJECT Report 81650 Costs for Special Wage comp.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=IM-REP-162,RFC049;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Costs for special wage components;
               NOR=Kostnader for spesielle l›nnsarter;
               SVE=Kostnader f”r speciella l”nearter];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  CheckReqParams;
                  GLSetup.GET; //ITERO.LP RFC049

                  GenJnlLine.RESET;
                  GenJnlLine.SETRANGE("Journal Template Name",TempName);
                  GenJnlLine.SETRANGE("Journal Batch Name",BatchName);
                  IF GenJnlLine.FINDFIRST THEN
                    ERROR(ERR005);


                  Window.OPEN('Processing..');

                  IF ProjectNo = '' THEN BEGIN
                    Job.RESET;
                    IF ProjectStatus <> ProjectStatus::" " THEN
                      Job.SETRANGE("Project Status",ProjectStatus);
                    IF Job.FIND('-') THEN REPEAT
                      //>> ITERO.LP
                      //ProjectNo := Job."No.";
                      //FillBuffer(Job,TRUE);
                      FillBufferForJournal;
                      //<<
                    UNTIL Job.NEXT=0;
                  END ELSE BEGIN
                    //>> ITERO.LP
                    //FillBuffer(Job,FALSE);
                    Job.GET(ProjectNo);
                    FillBufferForJournal;
                    //<<
                  END;

                  UniBuf.RESET;
                  IF UniBuf.COUNT <>0 THEN BEGIN
                    //>> ITERO.LP
                    //CreateJournalLines;
                    CreateJournalLines2;
                    //<<
                    MESSAGE(MSG001,LineNo/10000);
                  END ELSE
                    MESSAGE(MSG001,0);
                  Window.CLOSE;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100285500;;Container;
                  ContainerType=ContentArea }

      { 1100285501;1;Group  ;
                  CaptionML=[ENU=Options;
                             NOR=Opsjoner;
                             SVE=Optioner];
                  GroupType=Group }

      { 1100285510;2;Field  ;
                  CaptionML=[ENU=Posting date (last in month);
                             NOR=Regnskap dato (slutten av m†neden);
                             SVE=Bokf”ringsdatum (sista i m†naden)];
                  NotBlank=Yes;
                  SourceExpr=Pdate }

      { 1100285507;2;Field  ;
                  Name=Journal Name;
                  CaptionML=[ENU=Journal Template Name;
                             NOR=Journalmal;
                             SVE=Journalmall];
                  NotBlank=Yes;
                  SourceExpr=TempName;
                  TableRelation="Gen. Journal Template" }

      { 1100285506;2;Field  ;
                  Name=Journal Batch name;
                  CaptionML=[ENU=Journal Batch Name;
                             NOR=Journalnavn;
                             SVE=Journalnamn];
                  NotBlank=Yes;
                  SourceExpr=BatchName;
                  OnLookup=BEGIN
                             IF TempName <> '' THEN
                               GenJournalBatch.SETRANGE("Journal Template Name",TempName);

                             GJB.SETTABLEVIEW(GenJournalBatch);
                             GJB.SETRECORD(GenJournalBatch);
                             GJB.LOOKUPMODE(TRUE);
                             IF GJB.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               GJB.GETRECORD(GenJournalBatch);
                               CLEAR(GJB);
                               BatchName:=GenJournalBatch.Name;
                             END;
                           END;
                            }

      { 1100285502;2;Field  ;
                  CaptionML=[ENU=Balance Account;
                             NOR=Balanskonto;
                             SVE=Balanskonto];
                  NotBlank=Yes;
                  SourceExpr=BalAcc;
                  TableRelation="G/L Account" }

      { 1100285503;2;Field  ;
                  CaptionML=[ENU=Project No.;
                             NOR=Prosjektnr;
                             SVE=Projektnr];
                  SourceExpr=ProjectNo;
                  TableRelation=Job }

      { 1100285504;2;Field  ;
                  CaptionML=[ENU=Project Status;
                             NOR=Prosjektstatus;
                             SVE=Projektstatus];
                  OptionCaptionML=[ENU="Estimation,Preparation,Production,Technical Finished,Administrative Finished,Finished,Archive,Archived, ";
                                   NOR=Kalkulering,Forberedelse,Produksjon,Teknisk ferdig,Administrativt ferdig,Ferdig,Arkiv,Arkivert;
                                   SVE="Kalkyl,F”rberedelse,Produktion,Tekniskt f„rdig,Administrativt f„rdig,F„rdig,Arkiv,Arkiverad, "];
                  SourceExpr=ProjectStatus }

      { 1100285509;2;Field  ;
                  CaptionML=[ENU=Trade Association;
                             NOR=Bransjeorganisasjon;
                             SVE=Branschorganisation];
                  SourceExpr=TradeAs;
                  TableRelation="Trade Association" }

      { 1100285505;2;Field  ;
                  CaptionML=[ENU=From Date;
                             NOR=Fra dato;
                             SVE=Fr†n datum];
                  SourceExpr=StartDate }

      { 1100285508;2;Field  ;
                  CaptionML=[ENU=To Date;
                             NOR=Til dato;
                             SVE=Till datum];
                  SourceExpr=EndDate }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      GLSetup@1100285523 : Record 98;
      Job@1100285513 : Record 11072003;
      PostedHourLine@1100285505 : Record 11012085;
      TradeWageCost@1100285506 : Record 11020295;
      WageComp@1100285514 : Record 11012014;
      ExcelBuf@1100285509 : TEMPORARY Record 370;
      UniBuf@1100285515 : TEMPORARY Record 81628;
      GenJnlLine@1100285517 : Record 81;
      GenJournalBatch@1100285527 : Record 232;
      GenJnlBatch@1100285531 : Record 232;
      NoSeriesMgt@1100285530 : Codeunit 396;
      GJB@1100285526 : Page 251;
      Window@1100285516 : Dialog;
      Pdate@1100285522 : Date;
      LineNo@1100285529 : Integer;
      LastLine@1100285521 : Integer;
      BalAcc@1100285528 : Code[20];
      BatchName@1100285520 : Code[10];
      TempName@1100285519 : Code[10];
      ProjectNo@1100285502 : Code[20];
      TradeAs@1100285504 : Code[20];
      GLAccountNo@1100285518 : Code[10];
      RowNo@1100285508 : Integer;
      ProjectStatus@1100285503 : 'Estimation,Preparation,Production,Technical Finished,Administrative Finished,Finished,Archive,Archived, ';
      Direction@1100285500 : 'Export,Import';
      StartDate@1100285501 : Date;
      EndDate@1100285507 : Date;
      ERR001@1100285510 : TextConst;
      ERR002@1100285511 : TextConst 'ENU=Enter a valid Start and End Date;NOR=Skriv inn en gyldig start- og sluttdato;SVE=Ange ett giltigt start- och slutdatum';
      ERR003@1100285512 : TextConst 'ENU=Trade Associations must be entered;NOR=Bransjeorganisasjoner m† angis;SVE=Branschorganisationer m†ste anges';
      ERR004@1100285524 : TextConst 'ENU=Journal Batch Name and Template Name must be entered;NOR=Journalnavn og journalMal Navnet m† angis;SVE=Journalnamn och Mallnamn m†ste anges';
      ERR005@1000000000 : TextConst 'ENU=The journal already has lines! /Please post them first.;NOR=Journalen allerede har linjer!/Vennligst Bokf›r dem f›rst.;SVE=Journalen har redan rader! /V„nligen bokf”r dem f”rst.';
      MSG001@1100285525 : TextConst 'ENU=Done, created %1 Journal Lines;NOR=Ferdig, opprettet %1 journallinjer;SVE=Klar, skapad %1 journallinjer';
      DocNo@11128100 : Code[20];
      Dim3Value@1100285100 : Code[20];

    PROCEDURE FillBufferForJournal@1100285101();
    VAR
      DoIt@1100285000 : Boolean;
    BEGIN
      // ITERO.LP RFC049
      PostedHourLine.RESET;
      PostedHourLine.SETCURRENTKEY("Project No.");
      PostedHourLine.SETRANGE("Project No.",Job."No.");
      PostedHourLine.SETRANGE("Posting Date",StartDate,EndDate);
      PostedHourLine.SETRANGE("Charge Exp. Hour to Project",TRUE);
      PostedHourLine.SETFILTER("Wage Component",'<>%1','');
      IF PostedHourLine.FINDSET THEN
      REPEAT
        WageComp.GET(PostedHourLine."Wage Component");
        DoIt := WageComp."Expense Hour to Project";
        IF DoIt AND (ProjectStatus <> ProjectStatus::" ") THEN
          DoIt := Job."Project Status" = ProjectStatus;

        IF DoIt THEN BEGIN
          TradeWageCost.SETRANGE("Trade Association",TradeAs);
          TradeWageCost.SETRANGE("Wage Component",WageComp.Code);
          TradeWageCost.SETFILTER("Starting Date",'..%1|%2',PostedHourLine."Posting Date",0D);
          TradeWageCost.SETFILTER("Ending Date",'%2|%1..',PostedHourLine."Posting Date",0D);
          IF TradeWageCost.FINDLAST THEN BEGIN

            // Get Dim 3 from Employee
            Dim3Value := AssignDefaultDimensionValue(DATABASE::Employee, PostedHourLine."Employee No.", GLSetup."Shortcut Dimension 3 Code");
            // Fill Buffer
            IF NOT UniBuf.GET(TempName, BatchName, Job."No.", PostedHourLine."Cost Object", Dim3Value) THEN BEGIN
              UniBuf.INIT;
              UniBuf.Key1 := TempName;
              UniBuf.Key2 := BatchName;
              UniBuf.Key3 := Job."No.";
              UniBuf.Key4 := PostedHourLine."Cost Object";
              UniBuf.Key5 := Dim3Value;
              UniBuf.Text1 := FORMAT(StartDate)+ ' - ' + FORMAT(EndDate);
              UniBuf.INSERT;
            END;
            UniBuf.Dec1 += TradeWageCost."Cost Price" * PostedHourLine."Total Line";
            UniBuf.MODIFY;

            PostedHourLine."Charge Exp. Hour to Project" := FALSE;
            PostedHourLine.MODIFY;
          END;
        END;
      UNTIL PostedHourLine.NEXT=0;
    END;

    PROCEDURE CreateJournalLines2@1100285102();
    BEGIN
      // ITERO.LP RFC049
      GenJnlBatch.GET(TempName,BatchName);
      GenJnlLine.SETRANGE("Journal Template Name",TempName);
      GenJnlLine.SETRANGE("Journal Batch Name",BatchName);
      IF GenJnlLine.FINDFIRST THEN
        ERROR(ERR005);

      IF GenJnlBatch."No. Series" <> '' THEN BEGIN
        DocNo := NoSeriesMgt.GetNextNo(GenJnlBatch."No. Series",0D,FALSE);
      END;

      IF GenJnlLine.FINDLAST THEN
        LineNo := GenJnlLine."Line No." + 10000
      ELSE
        LineNo := 10000;

      IF UniBuf.FINDSET THEN
      REPEAT
        GenJnlLine.INIT;
        GenJnlLine.VALIDATE("Journal Template Name",UniBuf.Key1);
        GenJnlLine.VALIDATE("Journal Batch Name",UniBuf.Key2);
        GenJnlLine.VALIDATE("Document No.",DocNo);
        GenJnlLine.VALIDATE("Line No.",LineNo);
        GenJnlLine.VALIDATE("Posting Date",Pdate);
        GenJnlLine.VALIDATE("Job No.",UniBuf.Key3);
        GenJnlLine.VALIDATE("Shortcut Dimension 2 Code",UniBuf.Key4);
        GenJnlLine.VALIDATE(Amount,UniBuf.Dec1);
        GenJnlLine.VALIDATE("Bal. Account No.", BalAcc);
        GenJnlLine.Description := UniBuf.Text1;
        GenJnlLine.ValidateShortcutDimCode(3, UniBuf.Key5);
        GenJnlLine.INSERT(TRUE);
        LineNo += 10000;
      UNTIL UniBuf.NEXT = 0;
    END;

    PROCEDURE FillBuffer@1100285504(VAR _Job@1100285500 : Record 11072003;UseJobFilter@1100285501 : Boolean);
    VAR
      DoIt@1100285000 : Boolean;
    BEGIN
      PostedHourLine.RESET;
      PostedHourLine.SETCURRENTKEY("Project No.");

      IF ProjectNo <> '' THEN
        PostedHourLine.SETRANGE("Project No.",ProjectNo);

      PostedHourLine.SETRANGE("Posting Date",StartDate,EndDate);
      PostedHourLine.SETRANGE("Charge Exp. Hour to Project",TRUE);
      PostedHourLine.SETFILTER("Wage Component",'<>%1','');

      IF PostedHourLine.FIND('-') THEN REPEAT
        WageComp.GET(PostedHourLine."Wage Component");
        DoIt := WageComp."Expense Hour to Project";

        IF DoIt AND (ProjectStatus <> ProjectStatus::" ") THEN BEGIN
          _Job.GET(PostedHourLine."Project No.");
          DoIt := _Job."Project Status" = ProjectStatus;
        END;


        IF DoIt THEN BEGIN
          _Job.GET(PostedHourLine."Project No.");
          TradeWageCost.RESET;
          TradeWageCost.SETRANGE("Trade Association",TradeAs);
          TradeWageCost.SETRANGE("Wage Component",WageComp.Code);
          TradeWageCost.SETFILTER("Starting Date",'..%1|%2',PostedHourLine."Posting Date",0D);
          TradeWageCost.SETFILTER("Ending Date",'%2|%1..',PostedHourLine."Posting Date",0D);
          IF TradeWageCost.FINDLAST THEN BEGIN
            IF NOT UniBuf.GET(PostedHourLine."Project No.",
                          WageComp.Code,
                          PostedHourLine."Cost Object",
                          EndDate, //PostedHourLine."Posting Date",
                          PostedHourLine.Chargeable)
            THEN BEGIN
              UniBuf.INIT;
              UniBuf.Key1 := PostedHourLine."Project No.";
              UniBuf.Key2 := WageComp.Code;
              UniBuf.Key3 := PostedHourLine."Cost Object";
              UniBuf.Key4 := FORMAT(EndDate);
              UniBuf.Key5 := FORMAT(PostedHourLine.Chargeable);
              UniBuf.Code1 := _Job."Global Dimension 1 Code";
              UniBuf.Code2 := GLAccountNo;
              UniBuf.Text1 := FORMAT(StartDate)+ ' - ' + FORMAT(EndDate);
              UniBuf.Dec1 := TradeWageCost."Cost Price" * PostedHourLine."Total Line";
              UniBuf.INSERT;
            END ELSE BEGIN
              UniBuf.Dec1 +=TradeWageCost."Cost Price" * PostedHourLine."Total Line";
              UniBuf.MODIFY;
            END;
          PostedHourLine."Charge Exp. Hour to Project" := FALSE;
          PostedHourLine.MODIFY;
          END;
        END;
      UNTIL PostedHourLine.NEXT=0;
    END;

    PROCEDURE CreateJournalLines@1100285503();
    BEGIN
      GenJnlBatch.GET(TempName,BatchName);
      GenJnlLine.RESET;
      GenJnlLine.SETRANGE("Journal Template Name",TempName);
      GenJnlLine.SETRANGE("Journal Batch Name",BatchName);
      IF GenJnlLine.FINDFIRST THEN
        ERROR(ERR005);

      IF GenJnlBatch."No. Series" <> '' THEN BEGIN
      //>>150904 SC003892
        //GenJnlLine."Document No." := NoSeriesMgt.GetNextNo(GenJnlBatch."No. Series",0D,FALSE);
        DocNo := NoSeriesMgt.GetNextNo(GenJnlBatch."No. Series",0D,FALSE);
      //<<150904 SC003892
      END;

      IF GenJnlLine.FINDLAST THEN
        LineNo:=GenJnlLine."Line No." + 10000
      ELSE
        LineNo := 10000;

      IF UniBuf.FIND('-') THEN REPEAT
        GenJnlLine.RESET;
        GenJnlLine.SETRANGE("Journal Template Name",TempName);
        GenJnlLine.SETRANGE("Journal Batch Name",BatchName);
        GenJnlLine.SETRANGE("Job No.",UniBuf.Key1);
        GenJnlLine.SETRANGE("Shortcut Dimension 2 Code",UniBuf.Key3);
        IF NOT GenJnlLine.FINDFIRST THEN BEGIN
          GenJnlLine.INIT;
          GenJnlLine.VALIDATE("Journal Template Name",TempName);
          GenJnlLine.VALIDATE("Journal Batch Name",BatchName);
          GenJnlLine.VALIDATE("Document No.",DocNo);              //150904 SC003892
          GenJnlLine.VALIDATE("Line No.",LineNo);
          GenJnlLine.INSERT(TRUE);
          GenJnlLine.VALIDATE("Posting Date",Pdate);
          GenJnlLine.VALIDATE("Job No.",UniBuf.Key1);
          GenJnlLine.VALIDATE("Shortcut Dimension 2 Code",UniBuf.Key3);
          GenJnlLine.VALIDATE(Amount,UniBuf.Dec1);
          GenJnlLine.VALIDATE("Bal. Account No.",BalAcc);
          GenJnlLine.Description := UniBuf.Text1;
          GenJnlLine.MODIFY(TRUE);
          LineNo:=LineNo+10000;
        END ELSE BEGIN
          GenJnlLine.Amount+=UniBuf.Dec1;
          GenJnlLine.MODIFY(TRUE);
        END;


      UNTIL UniBuf.NEXT=0;
    END;

    PROCEDURE CheckReqParams@1100285500();
    BEGIN
      IF (StartDate = 0D) OR (EndDate = 0D) THEN
        ERROR(ERR002);
      IF TradeAs ='' THEN
        ERROR(ERR003);
      IF (TempName = '') OR (BatchName ='') THEN
        ERROR(ERR004);

      UniBuf.DELETEALL;
    END;

    PROCEDURE ExportFile@1100285502();
    BEGIN
      Window.OPEN('Processing..');
      IF ProjectNo = '' THEN BEGIN
        Job.RESET;
        Job.SETRANGE("Project Status",ProjectStatus);
        IF Job.FIND('-') THEN REPEAT
          FillBuffer(Job,TRUE);
        UNTIL Job.NEXT=0;
      END ELSE
        FillBuffer(Job,FALSE);

      Window.CLOSE;

      UniBuf.RESET;
      IF UniBuf.FIND('-') THEN BEGIN
        RowNo := 1;
        CreateHeader;
        REPEAT
          RowNo+=1;
          EnterCell(RowNo,1,UniBuf.Key1,TRUE);
          EnterCell(RowNo,2,UniBuf.Key2,TRUE);
          EnterCell(RowNo,3,UniBuf.Code1,TRUE);
          EnterCell(RowNo,4,UniBuf.Key3,TRUE);
          EnterCell(RowNo,5,UniBuf.Key4,TRUE);
          EnterCell(RowNo,6,UniBuf.Key5,TRUE);
          EnterCell(RowNo,7,FORMAT(UniBuf.Dec1),TRUE);
          EnterCell(RowNo,8,UniBuf.Text1,TRUE);
          EnterCell(RowNo,9,UniBuf.Code2,TRUE);
        UNTIL UniBuf.NEXT=0;

      //>>170808
      //  ExcelBuf.CreateBook(CurrReport.OBJECTID(TRUE),PostedHourLine.TABLECAPTION);
        ExcelBuf.CreateBook('',PostedHourLine.TABLECAPTION);
      //<<170808
        ExcelBuf.WriteSheet('Sheet1', COMPANYNAME, USERID);
        ExcelBuf.CloseBook;
        ExcelBuf.OpenExcel;
      //  ExcelBuf.GiveUserControl;
      END ELSE
        MESSAGE('Nothing to export');
    END;

    PROCEDURE CreateHeader@1100285514();
    BEGIN

      WITH PostedHourLine DO BEGIN
        EnterCell(RowNo,1,FIELDCAPTION("Project No."),TRUE);
        EnterCell(RowNo,2,WageComp.TABLECAPTION,TRUE);
        EnterCell(RowNo,3,'Cost Code',TRUE);
      //  EnterCell(RowNo,3,FIELDCAPTION(GLSetup."Global Dimension 1 Code"),TRUE);
        EnterCell(RowNo,4,'Cost Object',TRUE);
      //  EnterCell(RowNo,4,FIELDCAPTION(GLSetup."Global Dimension 2 Code"),TRUE);
        EnterCell(RowNo,5,FIELDCAPTION("Posting Date"),TRUE);
        EnterCell(RowNo,6,FIELDCAPTION(Chargeable),TRUE);
        EnterCell(RowNo,7,GenJnlLine.FIELDCAPTION(Amount),TRUE);
        EnterCell(RowNo,8,Job.FIELDCAPTION(Description),TRUE);
        EnterCell(RowNo,9,Job.FIELDCAPTION("No."),TRUE);
      END;
    END;

    LOCAL PROCEDURE EnterCell@3(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[250];Bold@1003 : Boolean);
    BEGIN

      ExcelBuf.INIT;
      ExcelBuf.VALIDATE("Row No.",RowNo);
      ExcelBuf.VALIDATE("Column No.",ColumnNo);
      ExcelBuf."Cell Value as Text" := CellValue;
      ExcelBuf.Formula := '';
      ExcelBuf.Bold := Bold;
      ExcelBuf."Cell Type" := ExcelBuf."Cell Type"::Text;
      ExcelBuf.INSERT;
    END;

    PROCEDURE AssignDefaultDimensionValue@1100285100(TableID@1100285100 : Integer;No@1100285101 : Code[20];DimensionCode@1100285102 : Code[20]) : Code[10];
    VAR
      DefaultDimension@1100285104 : Record 352;
    BEGIN
      // ITERO.LP RFC049
      DefaultDimension.SETRANGE("Table ID", TableID);
      DefaultDimension.SETRANGE("No.", No);
      DefaultDimension.SETRANGE("Dimension Code", DimensionCode);
      IF DefaultDimension.FINDFIRST THEN
        EXIT(DefaultDimension."Dimension Value Code")
      ELSE
        EXIT('');
    END;

    BEGIN
    {
      150203 ITERO.KP IM-REP-162 Created
      150904 ITERO.WG REP-100-049 Changed Document No.
      151229 ITERO.LP RFC049 New functions FillBufferForJournal, CreateJournalLines2. Added Dimension 3 (FUNKTION) from the Employee.
      160210 ITERO.DL IME449 Norsk › fungerer ikke overalt  4PS.
      170808 ITERO.DL pure127570 report crash when calling excel
    }
    END.
  }
  RDLDATA
  {
  }
}

