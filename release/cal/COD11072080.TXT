OBJECT Codeunit 11072080 INSBOU Management WS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      OK@1100528300 : TextConst 'DEU=O.K.;ENU=ok;NLD=ok;SVE=OK';
      Text000@1100528301 : TextConst 'DEU=Web-Service funktioniert!;ENU=Web Service is working!;NLD=Webservice werkt!';
      Text001@1100528302 : TextConst 'DEU=INSBOU-Nachricht %1 %2 %3 wird nicht unterstÅtzt.;ENU=INSBOU Message %1 %2 %3 is not supported.;NLD=INSBOU bericht %1 %2 %3 wordt niet ondersteund.';
      MsgTypeError@1100528800 : TextConst 'DEU=Berichtstyp (MsgType) ''%1'' wurde nicht erkannt und kann nicht verarbeitet werden.;ENU=Message Type (MsgType) ''%1''  is not recognized and cannot be processed.;NLD=Berichtsoort (MsgType) '' %1'' wordt niet herkend en kan niet verwerkt worden.';

    [External]
    PROCEDURE TestWebService@1100528300() : Text;
    BEGIN
      EXIT(Text000);
    END;

    [External]
    PROCEDURE OrderResponseMessage@1100528301(MsgFormat@1100528302 : Code[20];MsgVersion@1100528300 : Code[20];MsgContent@1100528301 : Text) : Text;
    VAR
      INSBOUPurchaseOrderResponse@1100525002 : Record 11072658;
      INSBOUInterface@1100525004 : Codeunit 11012480;
      MsgType@1100528303 : Code[20];
      VendorNo@1100525003 : Code[20];
      OrderResponseNumber@1100525001 : Code[17];
    BEGIN
      MsgType := 'ORDRSP';
      CASE TRUE OF
        (MsgFormat = 'INSBOU') AND (MsgVersion = '003'):
          BEGIN
            INSBOUInterface.ProcessOrdrsp003(STRSUBSTNO('SOAP: %1', FORMAT(CURRENTDATETIME, 0, 9)), COPYSTR(MsgContent, 1));
            VendorNo := INSBOUInterface.GetVendorNo;
            OrderResponseNumber := INSBOUInterface.GetOrderResponseNumber;
          END;
        ELSE
          ERROR(Text001, MsgType, MsgFormat, MsgVersion);
      END;

      IF (VendorNo <> '') AND (OrderResponseNumber <> '') THEN BEGIN
        IF (INSBOUPurchaseOrderResponse.GET(VendorNo, OrderResponseNumber)) THEN BEGIN
          IF (INSBOUPurchaseOrderResponse.StatusCode = '29') OR
             (INSBOUPurchaseOrderResponse.BuyersOrderNumber = 'X')
          THEN
            INSBOUPurchaseOrderResponse.ProcessOrderResponse(INSBOUPurchaseOrderResponse);
        END;
      END;
      EXIT(OK);
    END;

    [External]
    PROCEDURE InvoiceMessage@1100528302(MsgFormat@1100528302 : Code[20];MsgVersion@1100528301 : Code[20];MsgContent@1100528300 : Text) : Text;
    VAR
      INSBOUInvoice@1100525000 : Record 11072656;
      INSBOUInterface@1100525004 : Codeunit 11012480;
      MsgType@1100528303 : Code[20];
      VendorNo@1100525002 : Code[20];
      InvoiceNumber@1100525001 : Code[17];
    BEGIN
      MsgType := 'INVOIC';
      CASE TRUE OF
        (MsgFormat = 'INSBOU') AND ((MsgVersion = '003') OR (MsgVersion = '004')):
          BEGIN
            INSBOUInterface.ProcessINSBOUInvoice(STRSUBSTNO('SOAP: %1', FORMAT(CURRENTDATETIME, 0, 9)), COPYSTR(MsgContent, 1), MsgVersion);
            VendorNo := INSBOUInterface.GetVendorNo;
            InvoiceNumber := INSBOUInterface.GetInvoiceNumber;
          END;
        ELSE
          ERROR(Text001, MsgType, MsgFormat, MsgVersion);
      END;

      IF (VendorNo <> '') AND (InvoiceNumber <> '') THEN BEGIN
        IF (INSBOUInvoice.GET(VendorNo, InvoiceNumber)) THEN
          INSBOUInvoice.ProcessInvoice(INSBOUInvoice);
      END;
      EXIT(OK);
    END;

    [External]
    PROCEDURE InvoiceDocumentMessage@1100528303(SupplierGLN@1100528305 : Code[13];InvoiceNo@1100528300 : Code[20];AttachedData@1100528307 : Text;FileName@1100528304 : Text) : Text;
    VAR
      VendorINSBOULogin@1100528306 : Record 11012132;
      INSBOUInvoice@1100525003 : Record 11072656;
      InvoiceSiB@1100525002 : Record 11072653;
      INSBOUInvoiceCU@1100525001 : Codeunit 11072077;
      INSBOUInvoiceWS@1100525000 : XMLport 11072002;
    BEGIN
      VendorINSBOULogin.SETRANGE("Vendor GLN", SupplierGLN);
      VendorINSBOULogin.FINDFIRST;

      INSBOUInvoiceWS.SetAttachmentContent(AttachedData, FileName);
      INSBOUInvoiceWS.LinkInvoiceDocument(VendorINSBOULogin."Vendor No.", InvoiceNo);

      IF (INSBOUInvoice.GET(VendorINSBOULogin."Vendor No.", InvoiceNo)) THEN BEGIN
        IF (INSBOUInvoice."Process Status" = INSBOUInvoice."Process Status"::Processed) THEN BEGIN
          InvoiceSiB.GET(InvoiceNo);
          INSBOUInvoiceCU.LinkInvoiceDocument(INSBOUInvoice, InvoiceSiB);
        END;
      END;
      EXIT(OK);
    END;

    [External]
    PROCEDURE DespatchAdviceMessage@1100528304(MsgFormat@1100528302 : Code[20];MsgVersion@1100528300 : Code[20];MsgContent@1100528301 : Text) : Text;
    VAR
      INSBOUDespatchAdvice@1100528400 : Record 11012341;
      INSBOUInterface@1100525000 : Codeunit 11012480;
      MsgType@1100528303 : Code[20];
      VendorNo@1100528304 : Code[20];
      DespatchAdviceNumber@1100528305 : Code[17];
    BEGIN
      MsgType := 'DESADV';
      CASE TRUE OF
        (MsgFormat = 'INSBOU') AND (MsgVersion = '003'):
          BEGIN
            INSBOUInterface.ProcessDesadv003(STRSUBSTNO('SOAP: %1', FORMAT(CURRENTDATETIME, 0, 9)), COPYSTR(MsgContent, 1));
            VendorNo := INSBOUInterface.GetVendorNo;
            DespatchAdviceNumber := INSBOUInterface.GetDespatchAdviceNumber;
          END;
        ELSE
          ERROR(Text001, MsgType, MsgFormat, MsgVersion);
      END;

      IF (VendorNo <> '') AND (DespatchAdviceNumber <> '') THEN BEGIN
        IF (INSBOUDespatchAdvice.GET(VendorNo, DespatchAdviceNumber)) THEN
          INSBOUDespatchAdvice.ProcessDespatchAdvice(INSBOUDespatchAdvice);
      END;
      EXIT(OK);
    END;

    [External]
    PROCEDURE PriceCataloqueMessage@1100528305(MsgFormat@1100528302 : Code[20];MsgVersion@1100528300 : Code[20];MsgContent@1100528301 : Text) : Text;
    VAR
      INSBOUPriceCatalogue@1100528305 : Record 11012344;
      INSBOUInterface@1100525000 : Codeunit 11012480;
      MsgType@1100528303 : Code[20];
      VendorNo@1100528304 : Code[20];
      PriceCatalogueNumber@1100528307 : Code[17];
    BEGIN
      MsgType := 'PRICAT';
      CASE TRUE OF
        (MsgFormat = 'INSBOU') AND (MsgVersion = '003'):
          BEGIN
            INSBOUInterface.ProcessPricat003(STRSUBSTNO('SOAP: %1', FORMAT(CURRENTDATETIME, 0, 9)), COPYSTR(MsgContent, 1));
            VendorNo := INSBOUInterface.GetVendorNo;
            PriceCatalogueNumber := INSBOUInterface.GetPriceCataloqueNumber;
          END;
        ELSE
          ERROR(Text001, MsgType, MsgFormat, MsgVersion);
      END;

      IF (VendorNo <> '') AND (PriceCatalogueNumber <> '') THEN BEGIN
        IF (INSBOUPriceCatalogue.GET(VendorNo, PriceCatalogueNumber)) THEN
          INSBOUPriceCatalogue.ProcessPriceCatalogue(INSBOUPriceCatalogue);
      END;
      EXIT(OK);
    END;

    [External]
    PROCEDURE PostMessage@1100529500(ApplicationId@1100529900 : Text[50];MsgId@1100529514 : Text[50];MsgType@1100529512 : Text[50];MsgFormat@1100529513 : Text[50];MsgVersion@1100529515 : Text[50];MsgDateTime@1100528800 : DateTime;Attachments@1100529517 : Text;MsgContent@1100529500 : Text) : Text;
    BEGIN
      IF NOT (MsgType IN ['PRICAT','ORDRSP','DESADV','INVOIC','MTNINS']) THEN
        MsgType := GetMsgType(MsgContent);
      IF MsgId = '' THEN
        MsgId := CREATEGUID;

      CASE MsgType OF
        'MTNINS','MaintenanceInstruction':
          EXIT(MaintenanceInstructionMessage(ApplicationId, MsgId, MsgType, MsgFormat, MsgVersion, MsgDateTime, Attachments, MsgContent));
        'INVOIC','Invoice':
          EXIT(InvoiceMessage(MsgFormat,MsgVersion,MsgContent));
        'PRICAT','PriceCatalogue':
          EXIT(PriceCataloqueMessage(MsgFormat,MsgVersion,MsgContent));
        'DESADV','DespatchAdvice':
          EXIT(DespatchAdviceMessage(MsgFormat,MsgVersion,MsgContent));
        'ORDRSP','OrderResponse':
          EXIT(OrderResponseMessage(MsgFormat,MsgVersion,MsgContent));
        ELSE
          ERROR(MsgTypeError, MsgType);
      END;
      EXIT(OK);
    END;

    LOCAL PROCEDURE MaintenanceInstructionMessage@1100528803(ApplicationId@1100529900 : Text[50];MsgId@1100528800 : Text[50];MsgType@1100528801 : Text[50];MsgFormat@1100528802 : Text[50];MsgVersion@1100528803 : Text[50];MsgDateTime@1100528804 : DateTime;Attachments@1100528805 : Text;MsgContent@1100528806 : Text) : Text;
    VAR
      INSBOUInterface@1100528809 : Codeunit 11012480;
    BEGIN
      IF (MsgFormat = 'INSBOU') OR (MsgFormat = 'SALES') THEN BEGIN
        INSBOUInterface.ProcessMaintInstr(ApplicationId, MsgId, MsgType, MsgFormat, MsgVersion, MsgDateTime, Attachments, MsgContent);
      END ELSE
        ERROR(Text001, MsgType, MsgFormat, MsgVersion);

      EXIT(OK);
    END;

    LOCAL PROCEDURE GetMsgType@1100528807(MsgContent@1100528800 : Text) : Text;
    VAR
      XMLDoc@1100528801 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      p@1100529900 : Integer;
    BEGIN
      XMLDoc := XMLDoc.XmlDocument;
      XMLDoc.LoadXml(MsgContent);

      p := STRPOS(XMLDoc.DocumentElement.Name, ':');

      EXIT(COPYSTR(XMLDoc.DocumentElement.Name, p+1));
    END;

    BEGIN
    END.
  }
}

