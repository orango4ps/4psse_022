OBJECT Report 11020214 Batch Approve Purch. Cr. Memos
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Eink.Gutschriften stapelbuchen;
               ENU=Batch Post Purch. Credit Memos;
               NLD=Batch-boeken ink.-creditnota's;
               NOR=Kjõpskr.notaer - massebokfõr;
               SVE=Batch-bokfîr ink.kreditnotor];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  FilterTxt@1100485002 : Text[250];
                  SelMinCde@1100485001 : Code[20];
                  SelMaxCde@1100485000 : Code[20];
                BEGIN
                  FilterTxt := "Purch. Cr. Memo Hdr.".GETFILTER("Journal Template");
                  IF FilterTxt <> '' THEN BEGIN
                    SelMinCde := "Purch. Cr. Memo Hdr.".GETRANGEMIN("Journal Template");
                    SelMaxCde := "Purch. Cr. Memo Hdr.".GETRANGEMAX("Journal Template");
                    IF SelMinCde <>  SelMaxCde THEN
                      ERROR(Text001);
                  END ELSE BEGIN
                    ERROR(Text001);
                  END;

                  TmpReportRec.RESET;
                  TmpReportRec.DELETEALL;
                  TmpGLRegRec.RESET;
                  TmpGLRegRec.DELETEALL;
                END;

  }
  DATASET
  {
    { 9869;    ;DataItem;                    ;
               DataItemTable=Table124;
               DataItemTableView=SORTING(No.)
                                 WHERE(Credit Memo Approved=CONST(No));
               OnPreDataItem=BEGIN
                               CounterTotal := COUNT;
                               Window.OPEN(Text002);
                             END;

               OnAfterGetRecord=VAR
                                  PInvHdrRecDummy@1100485000 : Record 122;
                                BEGIN
                                  Counter := Counter + 1;
                                  Window.UPDATE(1,"No.");
                                  Window.UPDATE(2,ROUND(Counter / CounterTotal * 10000,1));

                                  PurchApprovalLineRec.SETRANGE("Journal Template Name","Journal Template");
                                  PurchApprovalLineRec.SETRANGE("Document Type",PurchApprovalLineRec."Document Type"::"Credit Memo");
                                  PurchApprovalLineRec.SETRANGE("Document No.", "No.");
                                  IF PurchApprovalLineRec.FINDFIRST THEN BEGIN
                                    CounterToPost := CounterToPost + 1;
                                    CLEAR(PostInvApproval);
                                    PostInvApproval.SetBatch(PurchApprovalLineRec."Document Type",gPrint,PInvHdrRecDummy,"Purch. Cr. Memo Hdr.");
                                    IF PostInvApproval.RUN THEN BEGIN
                                      CounterPosted := CounterPosted + PostInvApproval.GetInvoiceCounterOk;
                                      IF gPrint THEN
                                        FillTmpTablesBatchrunPrint();
                                      IF MARKEDONLY THEN
                                        MARK(FALSE);
                                    END;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                Window.CLOSE;
                                IF gPrint THEN
                                  PrintApprovalBatch();
                                MESSAGE(Text003,CounterTotal,CounterToPost,CounterPosted);
                              END;

               ReqFilterFields=No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      PurchApprovalLineRec@1100485000 : Record 11012032;
      TmpGLRegRec@1100525003 : TEMPORARY Record 45;
      TmpReportRec@1100525002 : TEMPORARY Record 78;
      PostInvApproval@1100485001 : Codeunit 11012027;
      Window@1100485004 : Dialog;
      gPrint@1100485002 : Boolean;
      Text001@1100485003 : TextConst 'DEU=WÑhlen Sie eine (1) anzuwendende RechnungsÅberprÅfungs-Buch.-Blattvorlage aus;ENU=Select one Invoice Approval Journal Template;NLD=Selecteer een (1) te gebruiken Factuur Controle Dagboeksjabloon;NOR=Velg en journalmal for fakturagodkjenning;SVE=VÑlj en journalmall fîr fakturagodkÑnnande';
      CounterTotal@1100485007 : Integer;
      Counter@1100485006 : Integer;
      CounterToPost@1100525000 : Integer;
      CounterPosted@1100485005 : Integer;
      Text002@1100485009 : TextConst 'DEU=Gutschriften buchen  #1########## @2@@@@@@@@@@@@@;ENU=Posting Credit Memos   #1########## @2@@@@@@@@@@@@@;NLD=Boeken creditnota''s    #1########## @2@@@@@@@@@@@@@;NOR=Bokfõr kreditfakturaer #1########## @2@@@@@@@@@@@@@;SVE=Bokfîr kreditfakturor #1########## @2@@@@@@@@@@@@@';
      Text003@1100525001 : TextConst 'DEU=Von den %1 Gutschriften gibt es %2 mit eingegebenen Zeile und davon sind %3 gebucht worden.;ENU=Of %1 Credit Memos %2 are provided with Lines. %3 have now been posted.;NLD=Van de %1 creditnota''s zijn er %2 met regels gevuld en daarvan zijn er %3 geboekt.;NOR=Av %1 kreditnotaer er %2 gitt rader. %3 er nÜ bokfõrt.;SVE=Av %1 kreditnotor tillhandahÜlls %2 med rader. %3 har nu bokfîrts.';

    PROCEDURE SetPrint@1100485000(iPrint@1100485000 : Boolean);
    BEGIN
      gPrint := iPrint;
    END;

    PROCEDURE FillTmpTablesBatchrunPrint@1100525002();
    VAR
      GLRegNo@1100525001 : Integer;
      PostingReportID@1100525000 : Integer;
    BEGIN
      IF PostInvApproval.GetGLRegNoAndReportID(GLRegNo, PostingReportID) THEN BEGIN
        IF NOT TmpGLRegRec.GET(GLRegNo) THEN BEGIN
          TmpGLRegRec.INIT;
          TmpGLRegRec."No." := GLRegNo;
          TmpGLRegRec."From VAT Entry No." := PostingReportID;
          TmpGLRegRec.INSERT;
          IF NOT TmpReportRec.GET('', PostingReportID) THEN BEGIN
            TmpReportRec.INIT;
            TmpReportRec."User ID" := '';
            TmpReportRec."Report ID" := PostingReportID;
            TmpReportRec.INSERT;
          END;
        END;
      END;
    END;

    PROCEDURE PrintApprovalBatch@1100525000();
    VAR
      GLRegRec@1100525000 : Record 45;
      StartNo@1100525001 : Integer;
      EndNo@1100525002 : Integer;
    BEGIN
      TmpReportRec.RESET;
      TmpReportRec.SETRANGE("User ID", '');
      IF TmpReportRec.FINDSET THEN BEGIN
        REPEAT
          StartNo := 0;
          EndNo := 0;
          GLRegRec.RESET;
          TmpGLRegRec.RESET;
          TmpGLRegRec.SETRANGE("From VAT Entry No.", TmpReportRec."Report ID");
          IF TmpGLRegRec.FINDSET THEN BEGIN
            REPEAT
              IF GLRegRec.GET(TmpGLRegRec."No.") THEN BEGIN
                GLRegRec.MARK(TRUE);
                IF StartNo = 0 THEN
                  StartNo := GLRegRec."No.";
                EndNo := GLRegRec."No.";
              END;
            UNTIL TmpGLRegRec.NEXT = 0;
            GLRegRec.MARKEDONLY(TRUE);
            GLRegRec.SETRANGE("No.", StartNo, EndNo);
            IF GLRegRec.FINDFIRST THEN
              REPORT.RUN(TmpReportRec."Report ID", FALSE, FALSE, GLRegRec);
            TmpGLRegRec.DELETEALL;
          END;
        UNTIL TmpReportRec.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

