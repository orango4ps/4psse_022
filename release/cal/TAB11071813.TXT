OBJECT Table 11071813 Serv. Surv. Location Object
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Seq. No." = 0 THEN
                 "Seq. No." := GetNextSeqNo();
               IF Quantity = 0 THEN
                 Quantity := 1;
               IF "Correction Factor" = 0 THEN
                 "Correction Factor" := 1;
               IF "Include in Contract" = "Include in Contract"::" " THEN
                 "Include in Contract" := "Include in Contract"::"With Maintenance";
               TESTFIELD("Location Code");
               UpdateTotals;
             END;

    OnModify=BEGIN
               TestObjectsNotCreated;
               UpdateTotals;
             END;

    OnDelete=BEGIN
               DeleteDetailLines;
               IF NOT RemovedFromStructureLine THEN
                 DeleteStructureLines;
               DeleteSpecificationLines;
             END;

    OnRename=VAR
               ServSurvLocationObject@1100529600 : Record 11071813;
             BEGIN
               IF xRec."Location Code" <> "Location Code" THEN BEGIN
                 TESTFIELD("Location Code");
                 ServSurvLocationObject := xRec;
                 ServSurvLocationObject.DeleteStructureLines;
                 IF ServSurvLocationObject.GET("Survey No.", "Location Code", "Seq. No.") THEN
                   "Seq. No." := GetNextSeqNo;
               END;
               RenameDetailLines;
               RenameSpecificationLines;
             END;

    CaptionML=[ENU=Service Site Survey Location Object;
               NOR=Serviceplass kartl. Lok. Obj.;
               SVE=Srv.plats kartl„ggn.plats obj.];
    LookupPageID=Page11126130;
    DrillDownPageID=Page11126130;
  }
  FIELDS
  {
    { 10  ;   ;Survey No.          ;Code20        ;TableRelation="Service Survey";
                                                   CaptionML=[ENU=Survey No.;
                                                              NOR=Kartlegging nr.;
                                                              SVE=Kartl„ggningsnr];
                                                   NotBlank=Yes }
    { 20  ;   ;Location Code       ;Code10        ;TableRelation="Service Survey Location"."Location Code" WHERE (Survey No.=FIELD(Survey No.));
                                                   CaptionML=[ENU=Location Code;
                                                              NOR=Plasseringkode;
                                                              SVE=Lagerst„llekod] }
    { 30  ;   ;Seq. No.            ;Integer       ;CaptionML=[ENU=Seq. No.;
                                                              NOR=Sekv. nr;
                                                              SVE=Sekv. nr] }
    { 40  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 45  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2] }
    { 50  ;   ;Standard Object No. ;Code20        ;TableRelation="Standard Object";
                                                   OnValidate=VAR
                                                                StandardObject@1100528600 : Record 11020334;
                                                                ServiceSurvey@1100409000 : Record 11071803;
                                                              BEGIN
                                                                IF "Standard Object No." <> '' THEN BEGIN
                                                                  TESTFIELD("Location Code");
                                                                  CALCFIELDS("Standard Object Description", "Standard Object Description 2");
                                                                  Description := "Standard Object Description";
                                                                  "Description 2" := "Standard Object Description 2";

                                                                  StandardObject.GET("Standard Object No.");
                                                                  "Tender Code System 1" := StandardObject."Tender Code System 1";
                                                                  "Tender Code 1" := StandardObject."Tender Code 1";
                                                                  "Tender Code System 2" := StandardObject."Tender Code System 2";
                                                                  "Tender Code 2" := StandardObject."Tender Code 2";
                                                                  Subcontracting := StandardObject.Subcontracting;

                                                                  IF ServiceSurvey.GET("Survey No.") THEN
                                                                    IF ServiceSurvey."Service Package" <> '' THEN
                                                                      VALIDATE("Service Package", ServiceSurvey."Service Package");
                                                                  UpdateTotals;

                                                                  CopyObjectLevelSpecs;
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              ServiceObjectManagement@1100528600 : Codeunit 11012808;
                                                            BEGIN
                                                              ServiceObjectManagement.HandleLookupStandardObject('', FALSE, "Standard Object No.");
                                                              VALIDATE("Standard Object No.");
                                                            END;

                                                   CaptionML=[ENU=Standard Object No.;
                                                              NOR=Standardobjektnr;
                                                              SVE=Standardobjektsnr] }
    { 60  ;   ;Standard Object Description;Text100;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Standard Object".Description WHERE (No.=FIELD(Standard Object No.)));
                                                   CaptionML=[ENU=Standard Object Description;
                                                              NOR=Standard objektsbeskrivelse;
                                                              SVE=Standardobjektsbeskrivning];
                                                   Editable=No }
    { 65  ;   ;Standard Object Description 2;Text50;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Standard Object"."Description 2" WHERE (No.=FIELD(Standard Object No.)));
                                                   CaptionML=[ENU=Standard Object Description 2;
                                                              SVE=Standardobjektsbeskrivning 2];
                                                   Editable=No }
    { 67  ;   ;Existing Service Object No.;Code20 ;TableRelation=Service-Object;
                                                   OnValidate=VAR
                                                                ServiceObject@1100528600 : Record 11071691;
                                                              BEGIN
                                                                IF (xRec."Existing Service Object No." <> "Existing Service Object No.") AND ("Existing Service Object No." = '') THEN
                                                                  "Objects Created" := FALSE
                                                                ELSE
                                                                  TESTFIELD("Objects Created", FALSE);
                                                                TestObjectIsUnique;
                                                                IF "Existing Service Object No." <> '' THEN BEGIN
                                                                  ServiceObject.GET("Existing Service Object No.");
                                                                  ServiceObject.TESTFIELD(Blocked, FALSE);
                                                                END;
                                                                IF "Seq. No." = 0 THEN
                                                                  INSERT(TRUE);
                                                                CopyAllNecessaryObjectData;
                                                              END;

                                                   OnLookup=VAR
                                                              ContractObject@1100528600 : Record 11071702;
                                                              ServiceLocation@1100528603 : Record 11012801;
                                                              ServiceObject@1100528601 : Record 11071691;
                                                              ServiceSurveyLocation@1100528602 : Record 11071804;
                                                              ServiceObjectList@1100528604 : Page 11125145;
                                                            BEGIN
                                                              CALCFIELDS("Existing Service Contract No.");
                                                              ServiceSurveyLocation.GET("Survey No.", "Location Code");
                                                              IF "Existing Service Contract No." = '' THEN BEGIN
                                                                IF ServiceSurveyLocation."Service Location No." <> '' THEN BEGIN
                                                                  ServiceLocation.GET(ServiceSurveyLocation."Service Location No.");
                                                                  ServiceLocation.GetRelatedObjects(ServiceObject);
                                                                END;
                                                              END ELSE BEGIN
                                                                ContractObject.SETRANGE("Service Contract No.", "Existing Service Contract No.");
                                                                ContractObject.SETRANGE("Service Location No.", ServiceSurveyLocation."Service Location No.");
                                                                IF ContractObject.FINDSET THEN
                                                                  REPEAT
                                                                    ServiceObject."No." := ContractObject."Service Object No.";
                                                                    ServiceObject.MARK(TRUE);
                                                                  UNTIL ContractObject.NEXT = 0;
                                                                ServiceObject.MARKEDONLY(TRUE);
                                                              END;
                                                              ServiceObjectList.LOOKUPMODE(TRUE);
                                                              ServiceObjectList.SETTABLEVIEW(ServiceObject);
                                                              IF "Existing Service Object No." <> '' THEN BEGIN
                                                                ServiceObject."No." := "Existing Service Object No.";
                                                                ServiceObjectList.SETRECORD(ServiceObject);
                                                              END;
                                                              ServiceObjectList.DetermineInterface(DATABASE::"Serv. Surv. Location Object", "Survey No.", "Location Code", 0);
                                                              IF ServiceObjectList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                ServiceObjectList.GETRECORD(ServiceObject);
                                                                VALIDATE("Existing Service Object No.", ServiceObject."No.");
                                                              END;
                                                              //IF PAGE.RUNMODAL(0, ServiceObject) = ACTION::LookupOK THEN
                                                              //  VALIDATE("Existing Service Object No.", ServiceObject."No.");
                                                            END;

                                                   CaptionML=ENU=Existing Service Object No. }
    { 70  ;   ;Quantity            ;Integer       ;OnValidate=BEGIN
                                                                IF Quantity > 1 THEN
                                                                  TESTFIELD("Existing Service Object No.", '');
                                                                IF MODIFY THEN;
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   BlankZero=Yes }
    { 80  ;   ;Quantity per Object ;Integer       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                IF MODIFY THEN;
                                                                UpdateDetailLines;
                                                              END;

                                                   CaptionML=[ENU=Quantity per Object;
                                                              NOR=Kvantum per objekt;
                                                              SVE=Antal per objekt];
                                                   MinValue=1;
                                                   BlankZero=Yes }
    { 90  ;   ;Service Package     ;Code10        ;TableRelation="Service Package" WHERE (Select for Maint. Sales Rate=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                IF xRec."Service Package" <> '' THEN
                                                                  DeleteDetailLines();
                                                                IF "Service Package" <> '' THEN
                                                                  IF NOT SuppressDetailLineCreation THEN
                                                                    AddDetailLines;
                                                              END;

                                                   OnLookup=VAR
                                                              ServiceObjectManagementCU@1100528601 : Codeunit 11012808;
                                                              ServicePackage@1100528600 : Code[20];
                                                            BEGIN
                                                              ServicePackage := "Service Package";
                                                              IF ServiceObjectManagementCU.LookupServicePackageStdObj("Standard Object No.", ServicePackage) THEN
                                                                VALIDATE("Service Package", ServicePackage);
                                                            END;

                                                   CaptionML=[ENU=Service Package;
                                                              NOR=Servicepakke;
                                                              SVE=Servicepaket] }
    { 100 ;   ;Object Customer     ;Code20        ;CaptionML=[ENU=Object Customer;
                                                              NOR=Objektkunde;
                                                              SVE=Objektkund] }
    { 110 ;   ;In use since        ;Date          ;CaptionML=[ENU=In use since;
                                                              NOR=I bruk siden;
                                                              SVE=Anv„nds sedan] }
    { 120 ;   ;Warranty Starting Date;Date        ;CaptionML=[ENU=Warranty Starting Date;
                                                              NOR=Garantiens startdato;
                                                              SVE=Garanti, startdatum] }
    { 130 ;   ;Warranty Code       ;Code10        ;TableRelation="Service Warranty";
                                                   CaptionML=[ENU=Warranty Code;
                                                              NOR=Garantikode;
                                                              SVE=Garantikod] }
    { 140 ;   ;Building            ;Text30        ;CaptionML=[ENU=Building;
                                                              NOR=Byggning;
                                                              SVE=Byggnad] }
    { 150 ;   ;Floor               ;Text30        ;CaptionML=[ENU=Floor;
                                                              NOR=Gulv;
                                                              SVE=V†ning] }
    { 160 ;   ;Room                ;Text30        ;CaptionML=[ENU=Room;
                                                              NOR=Rom;
                                                              SVE=Rum] }
    { 170 ;   ;Customer Feature    ;Text30        ;CaptionML=[ENU=Customer Feature;
                                                              NOR=Kundefunksjon;
                                                              SVE=Kundfunktion] }
    { 175 ;   ;Serial No.          ;Text80        ;CaptionML=[ENU=Serial No.;
                                                              NOR=Serienr;
                                                              SVE=Serienr] }
    { 180 ;   ;Year of Manufacture ;Integer       ;CaptionML=[ENU=Year of Manufacture;
                                                              NOR=Produksjons†r;
                                                              SVE=Tillverknings†r];
                                                   BlankZero=Yes }
    { 190 ;   ;Object Group        ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Standard Object"."Object Group" WHERE (No.=FIELD(Standard Object No.)));
                                                   CaptionML=[ENU=Object Group;
                                                              NOR=Objektgruppe;
                                                              SVE=Objektgrupp];
                                                   Editable=No }
    { 200 ;   ;Net Cost Price      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Cost" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                      Location Code=FIELD(Location Code),
                                                                                                                      Seq. No.=FIELD(Seq. No.),
                                                                                                                      Include in Contract=CONST(Yes)));
                                                   CaptionML=[ENU=Cost Price;
                                                              NOR=Selvkost;
                                                              SVE=Sj„lvkostnadspris];
                                                   Editable=No }
    { 210 ;   ;Surcharge Amount    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Surcharge" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                           Location Code=FIELD(Location Code),
                                                                                                                           Seq. No.=FIELD(Seq. No.),
                                                                                                                           Include in Contract=CONST(Yes)));
                                                   CaptionML=[ENU=Surcharge Amount;
                                                              NOR=Tilleggsgebyrsbel›p;
                                                              SVE=Till„ggsbelopp];
                                                   Editable=No }
    { 215 ;   ;Cost Price          ;Decimal       ;CaptionML=[ENU=Cost Price;
                                                              NOR=Selvkost;
                                                              SVE=Sj„lvkostnadspris];
                                                   Editable=No }
    { 217 ;   ;Sales Surcharge Amount;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Sales Surcharge" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                                 Location Code=FIELD(Location Code),
                                                                                                                                 Seq. No.=FIELD(Seq. No.),
                                                                                                                                 Include in Contract=CONST(Yes)));
                                                   CaptionML=[ENU=Sales Surcharge Amount;
                                                              NOR=Tillegsavgiftbel›p for salg;
                                                              SVE=F”rs„ljningstill„ggsbelopp];
                                                   Editable=No }
    { 220 ;   ;Base Sales Price    ;Decimal       ;CaptionML=[ENU=Base Sales Price;
                                                              NOR=Grunnleggende salgspris;
                                                              SVE=Basf”rs„ljningspris];
                                                   Editable=No }
    { 225 ;   ;Correction Factor   ;Decimal       ;OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=[ENU=Correction Factor;
                                                              NOR=Korreksjonsfaktor;
                                                              SVE=Korrigeringsfaktor] }
    { 230 ;   ;Calculated Sales Price;Decimal     ;OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=[ENU=Calculated Sales Price;
                                                              NOR=Estimert salgspris;
                                                              SVE=Ber„knat f”rs„ljningspris];
                                                   Editable=No }
    { 235 ;   ;Sales Price         ;Decimal       ;OnValidate=BEGIN
                                                                IF "Include in Contract" <> "Include in Contract"::" " THEN
                                                                  "Sales Amount" := ROUND("Sales Price" * Quantity)
                                                                ELSE
                                                                  "Sales Amount" := 0;
                                                                IF CurrFieldNo = FIELDNO("Sales Price") THEN
                                                                  "Price Agreement" := TRUE;
                                                              END;

                                                   CaptionML=[ENU=Sales Price;
                                                              NOR=Salgspris;
                                                              SVE=F”rs„ljningspris] }
    { 240 ;   ;Cost Amount         ;Decimal       ;CaptionML=[ENU=Cost Amount;
                                                              NOR=Kostbel›p;
                                                              SVE=Kostnadsbelopp];
                                                   Editable=No }
    { 250 ;   ;Calculated Sales Amount;Decimal    ;CaptionML=[ENU=Calculated Sales Amount;
                                                              NOR=Estimert salgsbel›p;
                                                              SVE=Ber„knat f”rs„ljningsbelopp];
                                                   Editable=No }
    { 255 ;   ;Sales Amount        ;Decimal       ;CaptionML=[ENU=Sales Amount;
                                                              NOR=Salgsbel›p;
                                                              SVE=F”rs„ljningsbelopp];
                                                   Editable=No }
    { 260 ;   ;Customer Object Group;Code10       ;TableRelation="Service Group".No.;
                                                   OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   OnLookup=VAR
                                                              ServiceSurvey@1100528601 : Record 11071803;
                                                              ServiceGroup@1100528600 : Record 11012830;
                                                            BEGIN
                                                              IF NOT ServiceSurvey.GET("Survey No.") THEN
                                                                ServiceSurvey.INIT;
                                                              ServiceSurvey.TESTFIELD("Customer No.");
                                                              ServiceGroup.SETCURRENTKEY("Customer No.");
                                                              ServiceGroup.SETRANGE("Customer No.", ServiceSurvey."Customer No.");
                                                              IF PAGE.RUNMODAL(PAGE::"Service Groups", ServiceGroup) = ACTION::LookupOK THEN BEGIN
                                                                ServiceGroup.TESTFIELD("Customer No.", ServiceSurvey."Customer No.");
                                                                VALIDATE("Customer Object Group", ServiceGroup."No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Customer Object Group;
                                                              NOR=Opjektgruppe for kunde;
                                                              SVE=Kundobjektsgrupp] }
    { 270 ;   ;Service Rate        ;Decimal       ;CaptionML=[ENU=Service Rate;
                                                              NOR=Servicerate;
                                                              SVE=Serviceavgift];
                                                   Editable=No }
    { 280 ;   ;Service Amount      ;Decimal       ;CaptionML=[ENU=Service Amount;
                                                              NOR=Servicebel›p;
                                                              SVE=Servicebelopp];
                                                   Editable=No }
    { 290 ;   ;Include in Contract OLD;Boolean    ;InitValue=Yes;
                                                   CaptionML=ENU=Include in Contract OLD;
                                                   Description=OBSOLETE }
    { 295 ;   ;Include in Contract ;Option        ;OnValidate=VAR
                                                                ServiceSurveyLocation@1100528600 : Record 11071804;
                                                                ServSurvLocObjDetail@1100528601 : Record 11071807;
                                                                ServSurvObjectAddAct@1100528603 : Record 11071814;
                                                                DoDeleteDetailsLine@1100528602 : Boolean;
                                                                DoDeleteActivities@1100528604 : Boolean;
                                                              BEGIN
                                                                IF "Existing Service Object No." = '' THEN
                                                                  TESTFIELD("Objects Created", FALSE);

                                                                IF "Include in Contract" IN ["Include in Contract"::"With Maintenance", "Include in Contract"::"Only Service Order"] THEN
                                                                  TESTFIELD("Quantity to", "Quantity to"::"Service Object");

                                                                IF "Include in Contract" IN ["Include in Contract"::"With Maintenance", "Include in Contract"::"Without Maintenance"] THEN BEGIN
                                                                  IF ServiceSurveyLocation.GET("Survey No.", "Location Code") THEN
                                                                    IF NOT ServiceSurveyLocation."Include in Contract" THEN BEGIN
                                                                      ServiceSurveyLocation."Include in Contract" := TRUE;
                                                                      ServiceSurveyLocation.MODIFY(TRUE);
                                                                    END;
                                                                END;

                                                                IF "Include in Contract" <> "Include in Contract"::"With Maintenance" THEN BEGIN
                                                                  ServSurvLocObjDetail.SETRANGE("Survey No.", "Survey No.");
                                                                  ServSurvLocObjDetail.SETRANGE("Location Code", "Location Code");
                                                                  ServSurvLocObjDetail.SETRANGE("Seq. No.", "Seq. No.");
                                                                  IF NOT ServSurvLocObjDetail.ISEMPTY THEN BEGIN
                                                                    DoDeleteDetailsLine := TRUE;
                                                                    IF GUIALLOWED THEN
                                                                      IF NOT CONFIRM(Text001, FALSE, ServSurvLocObjDetail.TABLECAPTION) THEN
                                                                        ERROR('');
                                                                    IF DoDeleteDetailsLine THEN
                                                                      ServSurvLocObjDetail.DELETEALL(TRUE);
                                                                  END;
                                                                END;

                                                                IF (xRec."Include in Contract" = xRec."Include in Contract"::"Only Service Order") AND (xRec."Include in Contract" <> "Include in Contract") THEN BEGIN
                                                                  DoDeleteActivities := TRUE;
                                                                  ServSurvObjectAddAct.SETRANGE("Survey No.", "Survey No.");
                                                                  ServSurvObjectAddAct.SETRANGE("Location Code", "Location Code");
                                                                  ServSurvObjectAddAct.SETRANGE("Seq. No.", "Seq. No.");
                                                                  ServSurvObjectAddAct.SETRANGE("Maintenance Scheme Code", '');
                                                                  IF NOT ServSurvObjectAddAct.ISEMPTY THEN
                                                                    IF GUIALLOWED THEN
                                                                      IF NOT CONFIRM(Text001, TRUE, Text002) THEN
                                                                        ERROR('');
                                                                  IF DoDeleteActivities THEN BEGIN
                                                                    ServSurvLocObjDetail.SETRANGE("Survey No.", "Survey No.");
                                                                    ServSurvLocObjDetail.SETRANGE("Location Code", "Location Code");
                                                                    ServSurvLocObjDetail.SETRANGE("Seq. No.", "Seq. No.");
                                                                    ServSurvLocObjDetail.SETRANGE("Maintenance Scheme Code", '');
                                                                    ServSurvLocObjDetail.DELETEALL(TRUE);
                                                                  END;
                                                                END;

                                                                IF "Include in Contract" = "Include in Contract"::"Only Service Order" THEN BEGIN
                                                                  IF NOT ServSurvLocObjDetail.GET("Survey No.", "Location Code", "Seq. No.", '') THEN BEGIN
                                                                    ServSurvLocObjDetail.INIT;
                                                                    ServSurvLocObjDetail."Survey No." := "Survey No.";
                                                                    ServSurvLocObjDetail."Location Code" := "Location Code";
                                                                    ServSurvLocObjDetail."Seq. No." := "Seq. No.";
                                                                    ServSurvLocObjDetail."Maintenance Scheme Code" := '';
                                                                    ServSurvLocObjDetail."Include in Contract" := TRUE;
                                                                    EVALUATE(ServSurvLocObjDetail."Maintenance Interval", '<1Y>');
                                                                    ServSurvLocObjDetail.VALIDATE("Maintenance Interval");
                                                                    ServSurvLocObjDetail.INSERT(TRUE);
                                                                  END;
                                                                END;

                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=[ENU=Include in Contract;
                                                              NOR=Inkluder i kontrakt;
                                                              SVE=Inkludera i kontrakt];
                                                   OptionCaptionML=ENU=" ,With Maintenance,Without Maintenance,Only Service Order";
                                                   OptionString=[ ,With Maintenance,Without Maintenance,Only Service Order] }
    { 300 ;   ;Objects Created     ;Boolean       ;CaptionML=[ENU=Objects Created;
                                                              NOR=Objekt opprettet;
                                                              SVE=Skapade objekt];
                                                   Editable=No }
    { 310 ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract;
                                                   OnLookup=VAR
                                                              ServiceContract@1100528600 : Record 11012812;
                                                            BEGIN
                                                              IF "Service Contract No." <> '' THEN
                                                                ServiceContract.GET("Service Contract No.");
                                                              PAGE.RUN(0, ServiceContract);
                                                            END;

                                                   CaptionML=[ENU=Service Contract No.;
                                                              NOR=Servicekontraktnr;
                                                              SVE=Servicekontraktnr];
                                                   Editable=No }
    { 320 ;   ;Tender Code System 1;Code10        ;TableRelation="Coding System"."Coding System";
                                                   CaptionML=[ENU=Tender Code System 1;
                                                              NOR=Tilbudskodesystem 1;
                                                              SVE=Standardandbudkodsystem] }
    { 330 ;   ;Tender Code 1       ;Code20        ;TableRelation="Code per Coding System".Code WHERE (Coding System=FIELD(Tender Code System 1));
                                                   CaptionML=[ENU=Tender Code 1;
                                                              NOR=Tilbudskode 1;
                                                              SVE=Anbudskod] }
    { 340 ;   ;Tender Code System 2;Code10        ;TableRelation="Coding System"."Coding System";
                                                   CaptionML=[ENU=Tender Code System 2;
                                                              NOR=Tilbudskodesystem 2;
                                                              SVE=Anbudskodsystem 2] }
    { 350 ;   ;Tender Code 2       ;Code20        ;TableRelation="Code per Coding System".Code WHERE (Coding System=FIELD(Tender Code System 2));
                                                   CaptionML=[ENU=Tender Code 2;
                                                              NOR=Tilbudskode 2;
                                                              SVE=Anbudskod 2] }
    { 360 ;   ;Additional Activities;Boolean      ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Serv. Surv. Object Add. Act." WHERE (Survey No.=FIELD(Survey No.),
                                                                                                           Location Code=FIELD(Location Code),
                                                                                                           Seq. No.=FIELD(Seq. No.)));
                                                   CaptionML=[ENU=Additional Activities;
                                                              NOR=Tilleggsaktiviteter;
                                                              SVE=Ytterligare aktiviteter];
                                                   Editable=No }
    { 370 ;   ;Subcontracting      ;Boolean       ;OnValidate=BEGIN
                                                                VALIDATE("Service Package");
                                                              END;

                                                   CaptionML=[ENU=Subcontracting;
                                                              NOR=Underentrepen›r;
                                                              SVE=Underentreprenad] }
    { 380 ;   ;Hours               ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Hours" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                       Location Code=FIELD(Location Code),
                                                                                                                       Seq. No.=FIELD(Seq. No.),
                                                                                                                       Include in Contract=CONST(Yes)));
                                                   CaptionML=[ENU=Hours;
                                                              NOR="Timer ";
                                                              SVE=Timmar];
                                                   Editable=No }
    { 390 ;   ;Total Hours         ;Decimal       ;CaptionML=[ENU=Total Hours;
                                                              NOR=Timer totalt;
                                                              SVE=Timmar totalt];
                                                   Editable=No }
    { 400 ;   ;Net Cost Price (Material);Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Material" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                          Location Code=FIELD(Location Code),
                                                                                                                          Seq. No.=FIELD(Seq. No.),
                                                                                                                          Include in Contract=CONST(Yes)));
                                                   CaptionML=[ENU=Cost Price (Material);
                                                              NOR=Kostpris (Materiale)];
                                                   Editable=No }
    { 410 ;   ;Net Cost Price (Labor);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Labor" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                       Location Code=FIELD(Location Code),
                                                                                                                       Seq. No.=FIELD(Seq. No.),
                                                                                                                       Include in Contract=CONST(Yes)));
                                                   CaptionML=[ENU=Cost Price (Labor);
                                                              NOR=Kostpris (Arbeidskraft)];
                                                   Editable=No }
    { 420 ;   ;Net Cost Price (Subcontr.);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Subcontracting" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                                Location Code=FIELD(Location Code),
                                                                                                                                Seq. No.=FIELD(Seq. No.),
                                                                                                                                Include in Contract=CONST(Yes)));
                                                   CaptionML=[ENU=Cost Price (Subcontracting);
                                                              NOR=Kostpris (Underentrepen›r)];
                                                   Editable=No }
    { 430 ;   ;Net Cost Price (Plant);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Plant" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                       Location Code=FIELD(Location Code),
                                                                                                                       Seq. No.=FIELD(Seq. No.),
                                                                                                                       Include in Contract=CONST(Yes)));
                                                   CaptionML=[ENU=Cost Price (Plant);
                                                              NOR=Kostpris (Maskin)];
                                                   Editable=No }
    { 440 ;   ;Net Cost Price (Sundry);Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Sundry" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                        Location Code=FIELD(Location Code),
                                                                                                                        Seq. No.=FIELD(Seq. No.),
                                                                                                                        Include in Contract=CONST(Yes)));
                                                   CaptionML=[ENU=Cost Price (Sundry);
                                                              NOR=Kostpris (Diverse)];
                                                   Editable=No }
    { 450 ;   ;Total Cost (Material);Decimal      ;CaptionML=ENU=Total Cost (Material) }
    { 460 ;   ;Total Cost (Labor)  ;Decimal       ;CaptionML=ENU=Total Cost (Labor) }
    { 470 ;   ;Total Cost (Subcontr.);Decimal     ;CaptionML=ENU=Total Cost (Subcontracting) }
    { 480 ;   ;Total Cost (Plant)  ;Decimal       ;CaptionML=ENU=Total Cost (Plant) }
    { 490 ;   ;Total Cost (Sundry) ;Decimal       ;CaptionML=ENU=Total Cost (Sundry) }
    { 500 ;   ;Total Cost          ;Decimal       ;CaptionML=[ENU=Total Cost;
                                                              NOR=Kostbel›p;
                                                              SVE=Totalkostnad];
                                                   Editable=No }
    { 520 ;   ;Surcharge Amount (Material);Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Surcharge (Material)" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                                      Location Code=FIELD(Location Code),
                                                                                                                                      Seq. No.=FIELD(Seq. No.),
                                                                                                                                      Include in Contract=CONST(Yes)));
                                                   CaptionML=ENU=Surcharge Amount (Material);
                                                   Editable=No }
    { 530 ;   ;Surcharge Amount (Labor);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Surcharge (Labor)" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                                   Location Code=FIELD(Location Code),
                                                                                                                                   Seq. No.=FIELD(Seq. No.),
                                                                                                                                   Include in Contract=CONST(Yes)));
                                                   CaptionML=ENU=Surcharge Amount (Labor);
                                                   Editable=No }
    { 540 ;   ;Surcharge Amount (Subcontr.);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Surcharge (Subcontr.)" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                                       Location Code=FIELD(Location Code),
                                                                                                                                       Seq. No.=FIELD(Seq. No.),
                                                                                                                                       Include in Contract=CONST(Yes)));
                                                   CaptionML=ENU=Surcharge Amount (Subcontrating);
                                                   Editable=No }
    { 550 ;   ;Surcharge Amount (Plant);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Surcharge (Plant)" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                                   Location Code=FIELD(Location Code),
                                                                                                                                   Seq. No.=FIELD(Seq. No.),
                                                                                                                                   Include in Contract=CONST(Yes)));
                                                   CaptionML=ENU=Surcharge Amount (Plant);
                                                   Editable=No }
    { 560 ;   ;Surcharge Amount (Sundry);Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Surcharge (Sundry)" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                                    Location Code=FIELD(Location Code),
                                                                                                                                    Seq. No.=FIELD(Seq. No.),
                                                                                                                                    Include in Contract=CONST(Yes)));
                                                   CaptionML=ENU=Surcharge Amount (Sundry);
                                                   Editable=No }
    { 570 ;   ;Sales Surch. Amount (Material);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Sales Surch. (Material)" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                                         Location Code=FIELD(Location Code),
                                                                                                                                         Seq. No.=FIELD(Seq. No.),
                                                                                                                                         Include in Contract=CONST(Yes)));
                                                   CaptionML=ENU=Sales Surcharge Amount (Material);
                                                   Editable=No }
    { 580 ;   ;Sales Surch. Amount (Labor);Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Sales Surch. (Labor)" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                                      Location Code=FIELD(Location Code),
                                                                                                                                      Seq. No.=FIELD(Seq. No.),
                                                                                                                                      Include in Contract=CONST(Yes)));
                                                   CaptionML=ENU=Sales Surcharge Amount (Labor);
                                                   Editable=No }
    { 590 ;   ;Sales Surch. Amount (Subc.);Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Sales Surch. (Subcontr.)" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                                          Location Code=FIELD(Location Code),
                                                                                                                                          Seq. No.=FIELD(Seq. No.),
                                                                                                                                          Include in Contract=CONST(Yes)));
                                                   CaptionML=ENU=Sales Surcharge Amount (Subcontrating);
                                                   Editable=No }
    { 600 ;   ;Sales Surch. Amount (Plant);Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Sales Surch. (Plant)" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                                      Location Code=FIELD(Location Code),
                                                                                                                                      Seq. No.=FIELD(Seq. No.),
                                                                                                                                      Include in Contract=CONST(Yes)));
                                                   CaptionML=ENU=Sales Surcharge Amount (Plant);
                                                   Editable=No }
    { 610 ;   ;Sales Surch. Amount (Sundry);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Loc. Obj. Detail"."Total Sales Surch. (Sundry)" WHERE (Survey No.=FIELD(Survey No.),
                                                                                                                                       Location Code=FIELD(Location Code),
                                                                                                                                       Seq. No.=FIELD(Seq. No.),
                                                                                                                                       Include in Contract=CONST(Yes)));
                                                   CaptionML=ENU=Sales Surcharge Amount (Sundry);
                                                   Editable=No }
    { 620 ;   ;Total Surcharge Amount;Decimal     ;CaptionML=[ENU=Surcharge Amount;
                                                              NOR=Tilleggsgebyrsbel›p;
                                                              SVE=Till„ggsbelopp];
                                                   Editable=No }
    { 630 ;   ;Total Surch. Amount (Material);Decimal;
                                                   CaptionML=ENU=Surcharge Amount (Material);
                                                   Editable=No }
    { 640 ;   ;Total Surch. Amount (Labor);Decimal;CaptionML=ENU=Surcharge Amount (Labor);
                                                   Editable=No }
    { 650 ;   ;Total Surch. Amount (Subc.);Decimal;CaptionML=ENU=Surcharge Amount (Subcontrating);
                                                   Editable=No }
    { 660 ;   ;Total Surch. Amount (Plant);Decimal;CaptionML=ENU=Surcharge Amount (Plant);
                                                   Editable=No }
    { 670 ;   ;Total Surch. Amount (Sundry);Decimal;
                                                   CaptionML=ENU=Surcharge Amount (Sundry);
                                                   Editable=No }
    { 680 ;   ;Total Sales Surch. Amount;Decimal  ;CaptionML=ENU=Total Sales Surcharge Amount }
    { 700 ;   ;Total Sales Surch. Amt. (Mat.);Decimal;
                                                   CaptionML=ENU=Sales Surcharge Amount (Material);
                                                   Editable=No }
    { 710 ;   ;Total Sales Surch. Amt. (Lab.);Decimal;
                                                   CaptionML=ENU=Sales Surcharge Amount (Labor);
                                                   Editable=No }
    { 720 ;   ;Total Sales Surch. Amt. (Sub.);Decimal;
                                                   CaptionML=ENU=Sales Surcharge Amount (Subcontrating);
                                                   Editable=No }
    { 730 ;   ;Total Sales Surch. Amt. (Plt.);Decimal;
                                                   CaptionML=ENU=Sales Surcharge Amount (Plant);
                                                   Editable=No }
    { 740 ;   ;Total Sales Surch. Amt. (Sun.);Decimal;
                                                   CaptionML=ENU=Sales Surcharge Amount (Sundry);
                                                   Editable=No }
    { 750 ;   ;Existing Service Contract No.;Code20;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Survey"."Existing Contract No." WHERE (No.=FIELD(Survey No.)));
                                                   CaptionML=ENU=Existing Service Contract No. }
    { 760 ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order";
                                                   CaptionML=[ENU=Service Order No.;
                                                              NOR=Serviceordrenr.;
                                                              SVE=Serviceordernr];
                                                   Editable=No }
    { 770 ;   ;Quantity to         ;Option        ;OnValidate=BEGIN
                                                                IF "Quantity to" = "Quantity to"::"Price Agreement" THEN
                                                                  IF "Include in Contract" IN ["Include in Contract"::"With Maintenance", "Include in Contract"::"Only Service Order"] THEN
                                                                    FIELDERROR("Include in Contract");
                                                              END;

                                                   CaptionML=ENU=Quantity to;
                                                   OptionCaptionML=ENU=Service Object,Price Agreement;
                                                   OptionString=Service Object,Price Agreement }
    { 780 ;   ;Latitude            ;Code30        ;OnValidate=BEGIN
                                                                ValidateGPSCoordinate(Latitude);
                                                              END;

                                                   CaptionML=[ENU=Latitude;
                                                              NOR=Breddegrad;
                                                              SVE=Latitude];
                                                   CharAllowed=09.. }
    { 790 ;   ;Longitude           ;Code30        ;OnValidate=BEGIN
                                                                ValidateGPSCoordinate(Longitude);
                                                              END;

                                                   CaptionML=[ENU=Longitude;
                                                              NOR=Lengdegrad;
                                                              SVE=Longitude];
                                                   CharAllowed=09.. }
    { 800 ;   ;End Date            ;Date          ;CaptionML=[ENU=End Date;
                                                              SVE=Slutdatum] }
    { 810 ;   ;Price Agreement     ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT "Price Agreement" THEN
                                                                  UpdateTotals;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Price Agreement;
                                                              SVE=Prisavtal] }
  }
  KEYS
  {
    {    ;Survey No.,Location Code,Seq. No.       ;SumIndexFields=Cost Amount,Calculated Sales Amount,Service Amount,Total Hours;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ObjectSpecificationLine@1100528604 : Record 11071781;
      ServiceSurveyManagement@1100528602 : Codeunit 11012852;
      RemovedFromStructureLine@1100528600 : Boolean;
      Text000@1100528601 : TextConst 'ENU=First select line(s).;NOR=Velg rad(er) f›rst.;SVE=V„lj f”rst rad(er).';
      Text001@1100528606 : TextConst 'ENU=There are %1 lines present and will be deleted, continue?';
      Text002@1100528607 : TextConst 'ENU=Service Order Activities';
      Text004@1100528603 : TextConst 'ENU=Object %1 already exists';
      SuppressDetailLineCreation@1100528605 : Boolean;

    PROCEDURE GetNextSeqNo@1100528600() : Decimal;
    VAR
      ServSurvLocationObject@1100528600 : Record 11071813;
    BEGIN
      ServSurvLocationObject.SETRANGE("Survey No.", "Survey No.");
      ServSurvLocationObject.SETRANGE("Location Code", "Location Code");
      IF ServSurvLocationObject.FINDLAST THEN
        EXIT(ServSurvLocationObject."Seq. No." + 1)
      ELSE
        EXIT(1);
    END;

    PROCEDURE DeleteDetailLines@1100528603();
    VAR
      ServSurvLocObjDetail@1100528600 : Record 11071807;
    BEGIN
      ServSurvLocObjDetail.SETRANGE("Survey No.", "Survey No.");
      ServSurvLocObjDetail.SETRANGE("Location Code", "Location Code");
      ServSurvLocObjDetail.SETRANGE("Seq. No.", "Seq. No.");
      ServSurvLocObjDetail.DELETEALL(TRUE);
    END;

    LOCAL PROCEDURE DeleteSpecificationLines@1100528625();
    VAR
      ServiceSurveyObjectSpec@1100528600 : Record 11071972;
    BEGIN
      ServiceSurveyObjectSpec.SETRANGE("Survey No.", "Survey No.");
      ServiceSurveyObjectSpec.SETRANGE("Location Code", "Location Code");
      ServiceSurveyObjectSpec.SETRANGE("Seq. No.", "Seq. No.");
      ServiceSurveyObjectSpec.DELETEALL(TRUE);
    END;

    PROCEDURE AddDetailLines@1100528602();
    VAR
      ServSurvLocObjDetail@1100528600 : Record 11071807;
      StdObjectMaintenanceScheme@1100528601 : Record 11071703;
    BEGIN
      IF "Standard Object No." = '' THEN
        EXIT;
      IF "Seq. No." = 0 THEN
        "Seq. No." := GetNextSeqNo();
      StdObjectMaintenanceScheme.SETRANGE("Object No.", "Standard Object No.");
      StdObjectMaintenanceScheme.SETRANGE("Service Package", "Service Package");
      StdObjectMaintenanceScheme.SETRANGE(Subcontracting, Subcontracting);
      IF StdObjectMaintenanceScheme.FINDSET THEN
        REPEAT
          ServSurvLocObjDetail.INIT;
          ServSurvLocObjDetail.InitRecord;
          ServSurvLocObjDetail."Survey No." := "Survey No.";
          ServSurvLocObjDetail."Location Code" := "Location Code";
          ServSurvLocObjDetail."Seq. No." := "Seq. No.";
          ServSurvLocObjDetail."Service Package" := StdObjectMaintenanceScheme."Service Package";
          ServSurvLocObjDetail."Maintenance Scheme Code" := StdObjectMaintenanceScheme."Maintenance Scheme";
          ServSurvLocObjDetail.Subcontracting := Subcontracting;
          ServSurvLocObjDetail.INSERT(TRUE);
          ServSurvLocObjDetail.VALIDATE("Service Package");
          ServSurvLocObjDetail.VALIDATE("Maintenance Scheme Code");
          ServSurvLocObjDetail.MODIFY(TRUE);
        UNTIL StdObjectMaintenanceScheme.NEXT = 0;
    END;

    LOCAL PROCEDURE AddDetailLinesFromObject@1100528638();
    VAR
      ServSurvLocObjDetail@1100528601 : Record 11071807;
      ContractObjectMaintenance@1100528600 : Record 11071692;
    BEGIN
      IF "Existing Service Object No." = '' THEN
        EXIT;
      CALCFIELDS("Existing Service Contract No.");
      ContractObjectMaintenance.SETRANGE("Service Contract No.", "Existing Service Contract No.");
      ContractObjectMaintenance.SETRANGE("Object No.", "Existing Service Object No.");
      IF ContractObjectMaintenance.FINDSET THEN BEGIN
        REPEAT
          ContractObjectMaintenance.CALCFIELDS("Service Package");
          ServSurvLocObjDetail.INIT;
          ServSurvLocObjDetail."Survey No." := "Survey No.";
          ServSurvLocObjDetail."Location Code" := "Location Code";
          ServSurvLocObjDetail."Seq. No." := "Seq. No.";
          ServSurvLocObjDetail.VALIDATE("Service Package", ContractObjectMaintenance."Service Package");
          //No validate: Prevent Survey Template Maintenance Scheme to copy lines to upper level
          ServSurvLocObjDetail."Maintenance Scheme Code" := ContractObjectMaintenance."Maintenance Scheme";
          ServSurvLocObjDetail.VALIDATE("Maintenance Interval", ContractObjectMaintenance."Maintenance Interval");
          ServSurvLocObjDetail.VALIDATE(Subcontracting, ContractObjectMaintenance.Subcontracting);
          ServSurvLocObjDetail."Include in Contract" := TRUE;
          ServSurvLocObjDetail.INSERT(TRUE);
        UNTIL ContractObjectMaintenance.NEXT = 0;
      END ELSE
        IF "Include in Contract" = "Include in Contract"::"With Maintenance" THEN
          "Include in Contract" := "Include in Contract"::"Without Maintenance";
      CopyObjectAdditionalWork;
    END;

    PROCEDURE DeleteStructureLines@1100528601();
    VAR
      ServiceSurveyStructureLine@1100528600 : Record 11071806;
    BEGIN
      ServiceSurveyStructureLine.SETRANGE("Survey No.", "Survey No.");
      ServiceSurveyStructureLine.SETRANGE("Location Code", "Location Code");
      ServiceSurveyStructureLine.SETRANGE("Seq. No.", "Seq. No.");
      ServiceSurveyStructureLine.DELETEALL;
    END;

    PROCEDURE UpdateTotals@1100528604();
    VAR
      ServiceSurvey@1100528601 : Record 11071803;
      ServiceSurveyManagement@1100528600 : Codeunit 11012852;
    BEGIN
      ServiceSurvey.GET("Survey No.");

      CALCFIELDS("Net Cost Price", "Surcharge Amount", "Sales Surcharge Amount", Hours);
      CALCFIELDS("Net Cost Price (Material)", "Net Cost Price (Labor)", "Net Cost Price (Subcontr.)", "Net Cost Price (Plant)",
        "Net Cost Price (Sundry)");
      CALCFIELDS("Surcharge Amount (Material)", "Surcharge Amount (Labor)", "Surcharge Amount (Subcontr.)", "Surcharge Amount (Plant)",
        "Surcharge Amount (Sundry)");
      CALCFIELDS("Sales Surch. Amount (Material)", "Sales Surch. Amount (Labor)", "Sales Surch. Amount (Subc.)",
        "Sales Surch. Amount (Plant)", "Sales Surch. Amount (Sundry)");
      "Cost Price" := "Net Cost Price" + "Surcharge Amount";
      "Service Rate" := ServiceSurveyManagement.GetServiceRate(Rec);
      IF ServiceSurvey."Sales Price Based On" = ServiceSurvey."Sales Price Based On"::"Service Rate" THEN
        "Base Sales Price" := "Service Rate"
      ELSE
        "Base Sales Price" := "Cost Price" + "Sales Surcharge Amount";
      "Calculated Sales Price" := ROUND("Base Sales Price" * "Correction Factor");
      IF NOT "Price Agreement" THEN
        VALIDATE("Sales Price", "Calculated Sales Price");
      IF "Include in Contract" <> "Include in Contract"::" " THEN BEGIN
        "Cost Amount" := ROUND("Cost Price" * Quantity);
        "Sales Amount" := ROUND("Sales Price" * Quantity);
        "Calculated Sales Amount" := ROUND("Calculated Sales Price" * Quantity);
        "Service Amount" := ROUND("Service Rate" * Quantity);
        "Total Hours" := ROUND(Hours * Quantity);

        "Total Cost" := ROUND("Net Cost Price" * Quantity);
        "Total Cost (Material)" := ROUND("Net Cost Price (Material)" * Quantity);
        "Total Cost (Labor)" := ROUND("Net Cost Price (Labor)" * Quantity);
        "Total Cost (Subcontr.)" := ROUND("Net Cost Price (Subcontr.)" * Quantity);
        "Total Cost (Plant)" := ROUND("Net Cost Price (Plant)");
        "Total Cost (Sundry)" := ROUND("Net Cost Price (Sundry)");

        "Total Surcharge Amount" := ROUND("Surcharge Amount" * Quantity);
        "Total Surch. Amount (Material)" := ROUND("Surcharge Amount (Material)" * Quantity);
        "Total Surch. Amount (Labor)" := ROUND("Surcharge Amount (Labor)" * Quantity);
        "Total Surch. Amount (Subc.)" := ROUND("Surcharge Amount (Subcontr.)" * Quantity);
        "Total Surch. Amount (Plant)" := ROUND("Surcharge Amount (Plant)" * Quantity);
        "Total Surch. Amount (Sundry)" := ROUND("Surcharge Amount (Sundry)" * Quantity);

        "Total Sales Surch. Amount" := ROUND("Sales Surcharge Amount" * Quantity);
        "Total Sales Surch. Amt. (Mat.)" := ROUND("Sales Surch. Amount (Material)" * Quantity);
        "Total Sales Surch. Amt. (Lab.)" := ROUND("Sales Surch. Amount (Labor)" * Quantity);
        "Total Sales Surch. Amt. (Sub.)" := ROUND("Sales Surch. Amount (Subc.)" * Quantity);
        "Total Sales Surch. Amt. (Plt.)" := ROUND("Sales Surch. Amount (Plant)" * Quantity);
        "Total Sales Surch. Amt. (Sun.)" := ROUND("Sales Surch. Amount (Sundry)" * Quantity);
      END ELSE BEGIN
        "Cost Amount" := 0;
        "Sales Amount" := 0;
        "Service Amount" := 0;
        "Total Hours" := 0;

        "Total Cost" := 0;
        "Total Cost (Material)" := 0;
        "Total Cost (Labor)" := 0;
        "Total Cost (Subcontr.)" := 0;
        "Total Cost (Plant)" := 0;
        "Total Cost (Sundry)" := 0;

        "Total Surcharge Amount" := 0;
        "Total Surch. Amount (Material)" := 0;
        "Total Surch. Amount (Labor)" := 0;
        "Total Surch. Amount (Subc.)" := 0;
        "Total Surch. Amount (Plant)" := 0;
        "Total Surch. Amount (Sundry)" := 0;

        "Total Sales Surch. Amount" := 0;
        "Total Sales Surch. Amt. (Mat.)" := 0;
        "Total Sales Surch. Amt. (Lab.)" := 0;
        "Total Sales Surch. Amt. (Sub.)" := 0;
        "Total Sales Surch. Amt. (Plt.)" := 0;
        "Total Sales Surch. Amt. (Sun.)" := 0;
      END;
    END;

    PROCEDURE SetRemovedFromStructureLine@1100528605(IRemovedFromStructureLine@1100528600 : Boolean);
    BEGIN
      RemovedFromStructureLine := IRemovedFromStructureLine;
    END;

    PROCEDURE UpdateTransferToContract@1100528606(VAR IServSurvLocationObject@1100528600 : Record 11071813;ITransferToContract@1100528602 : Option);
    VAR
      ServSurvLocationObject@1100528601 : Record 11071813;
    BEGIN
      ServSurvLocationObject.COPY(IServSurvLocationObject);
      ServSurvLocationObject.MARKEDONLY(TRUE);
      IF ServSurvLocationObject.FINDSET(TRUE) THEN BEGIN
        REPEAT
          ServSurvLocationObject.VALIDATE("Include in Contract", ITransferToContract);
          ServSurvLocationObject.MODIFY(TRUE);
        UNTIL ServSurvLocationObject.NEXT = 0;
      END ELSE
        ERROR(Text000);
    END;

    PROCEDURE TestObjectsNotCreated@1100528607();
    BEGIN
      IF "Existing Service Object No." <> '' THEN
        EXIT;
      TESTFIELD("Objects Created", FALSE);
    END;

    PROCEDURE AttachSelObjectsToContract@1100528608(VAR IServSurvLocationObject@1100528600 : Record 11071813);
    VAR
      ServSurvLocationObject@1100528601 : Record 11071813;
      ServiceSurvey@1100409000 : Record 11071803;
      ServiceSurveyManagement@1100528602 : Codeunit 11012852;
      AttachToServiceContractFRM@1100528604 : Page 11125306;
      LinkType@1100528609 : 'New Contract,Existing Contract';
      ExistingServiceContractNo@1100528603 : Code[20];
      ServicePackageCode@1100528611 : Code[10];
      ServiceContractTemplate@1210190000 : Code[20];
      ServiceContractStatus@1210190001 : Option;
      ServiceContractStartingDate@1210190002 : Date;
    BEGIN
      ServSurvLocationObject.COPY(IServSurvLocationObject);
      IF NOT ServSurvLocationObject.FINDSET THEN
        ERROR(Text000);

      ServSurvLocationObject.SETFILTER(Quantity, '>%1', 0);
      ServSurvLocationObject.SETFILTER("Include in Contract", '%1|%2',
        ServSurvLocationObject."Include in Contract"::"With Maintenance", ServSurvLocationObject."Include in Contract"::"Without Maintenance");

      IF NOT ServiceSurvey.GET(ServSurvLocationObject."Survey No.") THEN
        ServiceSurvey.INIT;

      IF ServiceSurvey."Existing Contract No." = '' THEN BEGIN
        AttachToServiceContractFRM.LOOKUPMODE(TRUE);
        AttachToServiceContractFRM.PutSettings(
          1, ServiceSurvey."Contract Template Code", 0, ServiceSurvey."Service Package", ServiceSurvey."Starting Date");
        IF AttachToServiceContractFRM.RUNMODAL <> ACTION::LookupOK THEN
          EXIT;
        AttachToServiceContractFRM.GetSettings(
          LinkType, ExistingServiceContractNo, ServiceContractTemplate, ServiceContractStatus, ServicePackageCode,
          ServiceContractStartingDate);
      END ELSE BEGIN
        LinkType := LinkType::"Existing Contract";
        ServiceContractTemplate := ServiceSurvey."Contract Template Code";
        ServicePackageCode := ServiceSurvey."Service Package";
        ServiceContractStartingDate := ServiceSurvey."Starting Date";
        ExistingServiceContractNo := ServiceSurvey."Existing Contract No.";
      END;

      IF LinkType = LinkType::"New Contract" THEN BEGIN
        ServiceSurveyManagement.CreateContractFromObjects(ServSurvLocationObject, '',
          ServiceContractTemplate, ServiceContractStatus, ServicePackageCode, ServiceContractStartingDate);
      END ELSE
        ServiceSurveyManagement.CreateContractFromObjects(ServSurvLocationObject, ExistingServiceContractNo,
          ServiceContractTemplate, ServiceContractStatus, ServicePackageCode, ServiceContractStartingDate);

      IServSurvLocationObject.CLEARMARKS;
    END;

    PROCEDURE GetMarginPerc@1100528609() MarginPerc : Decimal;
    BEGIN
      IF "Sales Amount" <> 0 THEN  //T007899 (C035484)
        MarginPerc := ("Sales Amount" - "Cost Amount") / "Sales Amount" * 100
      ELSE
        MarginPerc := 0;
    END;

    PROCEDURE GetSalesAmountOfRecordSet@1100528610(VAR IServSurvLocationObject@1100528600 : Record 11071813) : Decimal;
    VAR
      ServSurvLocationObject@1100528601 : Record 11071813;
      SalesAmount@1100528602 : Decimal;
    BEGIN
      ServSurvLocationObject.COPY(IServSurvLocationObject);
      IF NOT ServSurvLocationObject.FINDSET THEN
        EXIT;
      REPEAT
        SalesAmount += ServSurvLocationObject."Sales Amount";
      UNTIL ServSurvLocationObject.NEXT = 0;
      EXIT(SalesAmount);
    END;

    PROCEDURE ShowDetails@1100528616();
    VAR
      ServSurvLocObjDetail@1100528600 : Record 11071807;
    BEGIN
      ServSurvLocObjDetail.SETRANGE("Survey No.", "Survey No.");
      ServSurvLocObjDetail.SETRANGE("Location Code", "Location Code");
      ServSurvLocObjDetail.SETRANGE("Seq. No.", "Seq. No.");
      PAGE.RUNMODAL(PAGE::"Service Survey Line Details", ServSurvLocObjDetail);
    END;

    PROCEDURE SelectStdObjects@1100528615() lvRefresh : Boolean;
    VAR
      ServiceSurvey@1100528601 : Record 11071803;
      StandardObject@1100528603 : Record 11020334;
      StandardObjectList@1100528602 : Page 11072547;
      ServiceObjectManagement@1100528604 : Codeunit 11012808;
    BEGIN
      ServiceObjectManagement.ApplyStandardObjectFilter(StandardObject);
      IF "Standard Object No." <> '' THEN
        IF StandardObject.GET("Standard Object No.") THEN;

      StandardObjectList.LOOKUPMODE(TRUE);
      IF NOT ServiceSurvey.GET("Survey No.") THEN
        ServiceSurvey.INIT;
      IF ServiceSurvey."Input Method" = ServiceSurvey."Input Method"::Object THEN
        StandardObjectList.SetSelection(DATABASE::"Serv. Surv. Location Object", "Survey No.", "Location Code", '', 0);
      StandardObjectList.SETTABLEVIEW(StandardObject);
      StandardObjectList.SETRECORD(StandardObject);
      IF StandardObjectList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        ServiceSurvey.TESTFIELD("Input Method", ServiceSurvey."Input Method"::Object);
        StandardObjectList.GETRECORD(StandardObject);
        VALIDATE("Standard Object No.", StandardObject."No.");
      END ELSE BEGIN
        lvRefresh := StandardObjectList.CheckMultiCopy;  //db, 18-12-15
      END;

      EXIT(lvRefresh);
    END;

    PROCEDURE UpdateSurveyLocObjects@1100528614(VAR IServSurvLocationObject@1100525000 : Record 11071813);
    VAR
      ServSurvLocationObject@1100528600 : Record 11071813;
      UpdateSurvLocationObjectsREP@1100528602 : Report 11012738;
    BEGIN
      ServSurvLocationObject.COPY(IServSurvLocationObject);
      IF ServSurvLocationObject.ISEMPTY THEN
        ERROR(Text000);

      UpdateSurvLocationObjectsREP.SETTABLEVIEW(ServSurvLocationObject);
      UpdateSurvLocationObjectsREP.RUNMODAL;

      CLEARMARKS;
    END;

    PROCEDURE RoundSalesAmount@1100528611(VAR IServSurvLocationObject@1100525000 : Record 11071813);
    VAR
      ServSurvLocationObject@1100528601 : Record 11071813;
      SurveyRoundSalesAmountREP@1100528600 : Report 11012739;
    BEGIN
      ServSurvLocationObject.COPY(IServSurvLocationObject);

      IF ServSurvLocationObject.ISEMPTY THEN
        ERROR(Text000);

      ServSurvLocationObject.SETRANGE("Objects Created", FALSE);

      SurveyRoundSalesAmountREP.SetDefaults(ServSurvLocationObject.GetSalesAmountOfRecordSet(ServSurvLocationObject));
      SurveyRoundSalesAmountREP.SETTABLEVIEW(ServSurvLocationObject);
      SurveyRoundSalesAmountREP.RUNMODAL;
    END;

    PROCEDURE AdjustHoursByCostObject@1100528612(VAR IServSurvLocationObject@1100525000 : Record 11071813);
    VAR
      ServSurvLocationObject@1100528600 : Record 11071813;
      AdjSurveyHoursbyCostObj@1100528601 : Report 11012742;
    BEGIN
      ServSurvLocationObject.COPY(IServSurvLocationObject);
      IF ServSurvLocationObject.ISEMPTY THEN
        ERROR(Text000);

      ServSurvLocationObject.SETRANGE("Objects Created", FALSE);

      AdjSurveyHoursbyCostObj.SetDefaults(ServSurvLocationObject);
      AdjSurveyHoursbyCostObj.SETTABLEVIEW(ServSurvLocationObject);
      AdjSurveyHoursbyCostObj.RUNMODAL;
    END;

    LOCAL PROCEDURE CopyAllNecessaryObjectData@1100528623();
    BEGIN
      IF "Existing Service Object No." = '' THEN
        EXIT;
      CopyObjectData;
      CopyContractObjectData;
      CopyObjectLevelSpecsFromObject;
      CopyServiceLocationStucture;

      UpdateTotals;
    END;

    LOCAL PROCEDURE CopyObjectData@1100528628();
    VAR
      ServiceObject@1100528602 : Record 11071691;
      ObjectSpecificationMgt@1100528600 : Codeunit 11012848;
      ContractObjectMaintenance@1100527350 : Record 11071692;
    BEGIN
      "Objects Created" := TRUE;
      CALCFIELDS("Existing Service Contract No.");
      IF "Existing Service Contract No." <> '' THEN BEGIN
        ContractObjectMaintenance.SETRANGE("Service Contract No.", "Existing Service Contract No.");
        ContractObjectMaintenance.SETRANGE("Object No.", "Existing Service Object No.");
        IF ContractObjectMaintenance.FINDSET THEN
          "Include in Contract" := "Include in Contract"::"With Maintenance";
      END;
      TESTFIELD("Location Code");
      ServiceObject.GET("Existing Service Object No.");
      "Standard Object No." := ServiceObject."Standard Object No."; //no validate!
      Description := ServiceObject.Description;
      "Description 2" := ServiceObject."Description 2";
      CASE ServiceObject."Quantity Based on" OF
        ServiceObject."Quantity Based on"::"Service Object":
          BEGIN
            "Quantity to" := "Quantity to"::"Service Object";
            "Quantity per Object" := ServiceObject.Quantity;
          END;
        ServiceObject."Quantity Based on"::"Contract Object":
          "Quantity to" := "Quantity to"::"Price Agreement";
      END;
      "Object Customer" := ServiceObject."Object Customer";
      "In use since" := ServiceObject."In use since";
      "Warranty Code" := ServiceObject."Warranty Code Customer";
      "Warranty Starting Date" := ServiceObject."Warranty Starting Date Cust.";
      Building := ServiceObject.Building;
      Floor := ServiceObject.Floor;
      Room := ServiceObject.Room;
      "Customer Feature" := ServiceObject."Customer Feature";
      Subcontracting := ServiceObject.Subcontracting;
      "Tender Code System 1" := ServiceObject."Tender Code System 1";
      "Tender Code 1" := ServiceObject."Tender Code 1";
      "Tender Code System 2" := ServiceObject."Tender Code System 2";
      "Tender Code 2" := ServiceObject."Tender Code 2";

      "Serial No." := ObjectSpecificationMgt.GetSerialNo(ServiceObject."No.");
      IF EVALUATE("Year of Manufacture", ObjectSpecificationMgt.GetYearOfManufactureValue(ServiceObject."No.")) THEN;
      Latitude := ServiceObject.Latitude;
      Longitude := ServiceObject.Longitude;
    END;

    LOCAL PROCEDURE CopyContractObjectData@1100528629();
    VAR
      ContractObject@1100528600 : Record 11071702;
      ContractAmountsbyDate@1100528601 : Record 11071708;
    BEGIN
      CALCFIELDS("Existing Service Contract No.");
      IF ContractObject.GET("Existing Service Contract No.", "Existing Service Object No.") THEN BEGIN
        SuppressDetailLineCreation := TRUE;
        VALIDATE("Service Package", ContractObject."Service Package"); // this creates detail lines
        SuppressDetailLineCreation := FALSE;
        AddDetailLinesFromObject;
        VALIDATE("Customer Object Group", ContractObject."Customer Object Group");
        "Service Contract No." := "Existing Service Contract No.";

        ContractAmountsbyDate.SETRANGE(Type, ContractAmountsbyDate.Type::"Price Agreement");
        ContractAmountsbyDate.SETRANGE("Service Contract No.", "Existing Service Contract No.");
        ContractAmountsbyDate.SETRANGE("Service Object No.", "Existing Service Object No.");
        ContractAmountsbyDate.SETFILTER("Index Date", '<=%1', GetSurveyReferenceDate);
        ContractAmountsbyDate.SETFILTER("Ending Date", '>%1|%2', GetSurveyReferenceDate, 0D);
        IF ContractAmountsbyDate.FINDLAST THEN BEGIN
          VALIDATE("Sales Price", ContractAmountsbyDate."Amount (LCY)");
          "Price Agreement" := TRUE;
          IF "Quantity to" = "Quantity to"::"Price Agreement" THEN
            "Quantity per Object" := ContractAmountsbyDate.Quantity;
        END;
      END;
    END;

    LOCAL PROCEDURE CopyObjectAdditionalWork@1100528622();
    VAR
      MaintenanceSchemeVersion@1100528600 : Record 11071743;
      MaintSchemeVersionLine@1100528601 : Record 11071744;
      MaintSchemeLineProperty@1100528606 : Record 11071954;
      ServSurvLocObjDetail@1100527350 : Record 11071807;
      ServSurvObjectAddAct@1100528604 : Record 11071814;
      SurvObjAddActProperty@1100528607 : Record 11071955;
      LineNo@1100528605 : Integer;
    BEGIN
      ServSurvLocObjDetail.SETRANGE("Survey No.", "Survey No.");
      ServSurvLocObjDetail.SETRANGE("Location Code", "Location Code");
      ServSurvLocObjDetail.SETRANGE("Seq. No.", "Seq. No.");
      IF ServSurvLocObjDetail.FINDSET THEN BEGIN
        LineNo := 10000;
        REPEAT
          MaintenanceSchemeVersion.SETRANGE("Line Type", MaintenanceSchemeVersion."Line Type"::Object);
          MaintenanceSchemeVersion.SETRANGE(Code, "Existing Service Object No.");
          MaintenanceSchemeVersion.SETRANGE("Belongs to Scheme",  ServSurvLocObjDetail."Maintenance Scheme Code");
          MaintenanceSchemeVersion.SETRANGE("Index Date", 0D, GetSurveyReferenceDate);
          IF MaintenanceSchemeVersion.FINDLAST THEN BEGIN
            MaintSchemeLineProperty.SETRANGE("Line Type", MaintenanceSchemeVersion."Line Type");
            MaintSchemeLineProperty.SETRANGE("Type Code", MaintenanceSchemeVersion.Code);
            MaintSchemeLineProperty.SETRANGE("Belongs to Scheme", MaintenanceSchemeVersion."Belongs to Scheme");
            MaintSchemeLineProperty.SETFILTER("Line Type (Base)", '<%1', MaintSchemeLineProperty."Line Type (Base)"::Object);
            IF MaintSchemeLineProperty.FINDSET THEN
              REPEAT
                SurvObjAddActProperty.INIT;
                SurvObjAddActProperty."Survey No." := ServSurvLocObjDetail."Survey No.";
                SurvObjAddActProperty."Location Code" := ServSurvLocObjDetail."Location Code";
                SurvObjAddActProperty."Seq. No." := ServSurvLocObjDetail."Seq. No.";
                SurvObjAddActProperty."Maintenance Scheme Code" := ServSurvLocObjDetail."Maintenance Scheme Code";
                SurvObjAddActProperty."Line Type (Base)" := MaintSchemeLineProperty."Line Type (Base)";
                SurvObjAddActProperty."Type Code (Base)" := MaintSchemeLineProperty."Type Code (Base)";
                SurvObjAddActProperty."Line No. (Base)" := MaintSchemeLineProperty."Line No. (Base)";
                SurvObjAddActProperty."Belongs to Scheme (Base)" := MaintSchemeLineProperty."Belongs to Scheme (Base)";
                SurvObjAddActProperty.Cancelled := MaintSchemeLineProperty.Cancelled;
                SurvObjAddActProperty."Adjustment Factor Norm" := MaintSchemeLineProperty."Adjustment Factor Norm";
                SurvObjAddActProperty.INSERT(TRUE);
              UNTIL MaintSchemeLineProperty.NEXT = 0;

            MaintSchemeVersionLine.SETRANGE("Line Type", MaintenanceSchemeVersion."Line Type");
            MaintSchemeVersionLine.SETRANGE("Type Code", MaintenanceSchemeVersion.Code);
            MaintSchemeVersionLine.SETRANGE("Belongs to Scheme", MaintenanceSchemeVersion."Belongs to Scheme");
            MaintSchemeVersionLine.SETRANGE("Index Date", MaintenanceSchemeVersion."Index Date");
            IF MaintSchemeVersionLine.FINDSET THEN
              REPEAT
                ServSurvObjectAddAct.INIT;
                ServSurvObjectAddAct."Survey No." := ServSurvLocObjDetail."Survey No.";
                ServSurvObjectAddAct."Location Code" := ServSurvLocObjDetail."Location Code";
                ServSurvObjectAddAct."Seq. No." := ServSurvLocObjDetail."Seq. No.";
                ServSurvObjectAddAct."Maintenance Scheme Code" := ServSurvLocObjDetail."Maintenance Scheme Code";
                ServSurvObjectAddAct."Line No." := LineNo;
                ServSurvObjectAddAct."Original Line No." := MaintSchemeVersionLine."Line No.";
                ServSurvObjectAddAct."Line Type" := ServSurvObjectAddAct."Line Type"::"Survey Object";
                ServSurvObjectAddAct.VALIDATE("Cost Type", MaintSchemeVersionLine."Cost Type");
                ServSurvObjectAddAct.VALIDATE("Cost Object", MaintSchemeVersionLine."Cost Object");
                ServSurvObjectAddAct.VALIDATE(Description, MaintSchemeVersionLine.Description);
                ServSurvObjectAddAct.VALIDATE(Quantity, MaintSchemeVersionLine.Quantity);
                ServSurvObjectAddAct.VALIDATE("Unit of Measure", MaintSchemeVersionLine."Unit of Measure");
                ServSurvObjectAddAct.VALIDATE("Frequency per Year", MaintSchemeVersionLine."Frequency per Year");
                IF MaintSchemeVersionLine."Cost Type" = MaintSchemeVersionLine."Cost Type"::Labor THEN BEGIN
                  ServSurvObjectAddAct.VALIDATE(Norm, MaintSchemeVersionLine.Norm);
                  ServSurvObjectAddAct.VALIDATE("Rate Code", MaintSchemeVersionLine."Rate Code");
                  ServSurvObjectAddAct.VALIDATE(Rate, MaintSchemeVersionLine.Rate);
                END ELSE BEGIN
                  ServSurvObjectAddAct.VALIDATE("Item No.", MaintSchemeVersionLine."Item No.");
                  ServSurvObjectAddAct.VALIDATE(Manufacturer, MaintSchemeVersionLine.Manufacturer);
                  ServSurvObjectAddAct.VALIDATE("Basic Item", MaintSchemeVersionLine."Basic Item");
                  ServSurvObjectAddAct.VALIDATE("Vendor (Trade Item)", MaintSchemeVersionLine."Vendor (Trade Item)");
                  ServSurvObjectAddAct.VALIDATE("Trade Item", MaintSchemeVersionLine."Trade Item");
                  ServSurvObjectAddAct.VALIDATE("Cost Price", MaintSchemeVersionLine."Cost Price");
                  ServSurvObjectAddAct.VALIDATE("Gross Price", MaintSchemeVersionLine."Gross Price");
                  ServSurvObjectAddAct.VALIDATE("Purchase Discount %", MaintSchemeVersionLine."Purchase Discount %");
                END;
                ServSurvObjectAddAct.VALIDATE("Maintenance Interval", MaintSchemeVersionLine."Maintenance Interval");
                ServSurvObjectAddAct.VALIDATE(Vendor, MaintSchemeVersionLine.Vendor);
                ServSurvObjectAddAct.VALIDATE("Line Status", MaintSchemeVersionLine."Line Status");
                ServSurvObjectAddAct.VALIDATE("Text Block", MaintSchemeVersionLine."Text Block");
                ServSurvObjectAddAct.INSERT(TRUE);

                IF MaintSchemeLineProperty.GET(
                  MaintSchemeLineProperty."Line Type"::Object,
                  MaintSchemeVersionLine."Type Code",
                  MaintSchemeVersionLine."Belongs to Scheme",
                  MaintSchemeVersionLine."Index Date",
                  MaintSchemeLineProperty."Line Type (Base)"::Object,
                  MaintSchemeVersionLine."Type Code",
                  MaintSchemeVersionLine."Line No.",
                  MaintenanceSchemeVersion."Belongs to Scheme")
                THEN BEGIN
                //Survey No.,Location Code,Seq. No.,Maintenance Scheme Code,Line Type (Base),Type Code (Base),Line No. (Base),Belongs to Scheme (Base)
                  SurvObjAddActProperty.INIT;
                  SurvObjAddActProperty."Survey No." := ServSurvLocObjDetail."Survey No.";
                  SurvObjAddActProperty."Location Code" := ServSurvLocObjDetail."Location Code";
                  SurvObjAddActProperty."Seq. No." := ServSurvLocObjDetail."Seq. No.";
                  SurvObjAddActProperty."Maintenance Scheme Code" := ServSurvLocObjDetail."Maintenance Scheme Code";
                  SurvObjAddActProperty."Line Type (Base)" := SurvObjAddActProperty."Line Type (Base)"::"Survey Object";
                  SurvObjAddActProperty."Type Code (Base)" := '';
                  SurvObjAddActProperty."Line No. (Base)" := MaintSchemeLineProperty."Line No. (Base)";
                  SurvObjAddActProperty."Belongs to Scheme (Base)" := '';
                  SurvObjAddActProperty.Cancelled := MaintSchemeLineProperty.Cancelled;
                  SurvObjAddActProperty."Adjustment Factor Norm" := MaintSchemeLineProperty."Adjustment Factor Norm";
                  SurvObjAddActProperty.INSERT(TRUE);
                END;
                LineNo += 10000;
              UNTIL MaintSchemeVersionLine.NEXT = 0;
          END;
        UNTIL ServSurvLocObjDetail.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CopyServiceLocationStucture@1100528627();
    VAR
      ServiceLocationStructure@1100528600 : Record 11071719;
      ServiceLocStructureLine@1100528601 : Record 11071720;
      ServiceSurveyStructureLine@1100528603 : Record 11071806;
      ServiceSurveyLocation@1100528604 : Record 11071804;
      LineNo@1100528605 : Integer;
      ServiceLocStructureLine2@1100525000 : Record 11071720;
    BEGIN
      IF "Existing Service Object No." = '' THEN
        EXIT;
      ServiceSurveyLocation.GET("Survey No.", "Location Code");
      ServiceLocationStructure.SETRANGE("Service Location No.", ServiceSurveyLocation."Service Location No.");
      IF ServiceLocationStructure.FINDSET THEN
        REPEAT
          ServiceLocStructureLine.SETRANGE("Service Location No.", ServiceSurveyLocation."Service Location No.");
          ServiceLocStructureLine.SETRANGE("Structure No.", ServiceLocationStructure."No.");
          ServiceLocStructureLine.SETRANGE("Object Line", TRUE);
          ServiceLocStructureLine.SETRANGE("Service Object No.", "Existing Service Object No.");
          IF ServiceLocStructureLine.FINDSET THEN BEGIN
            ServiceSurveyStructureLine.SETRANGE("Survey No.", "Survey No.");
            ServiceSurveyStructureLine.SETRANGE("Location Code", "Location Code");
            ServiceSurveyStructureLine.SETRANGE("Structure No.", ServiceLocationStructure."No.");
            ServiceSurveyStructureLine.SETRANGE(Code, ServiceLocStructureLine."No.");
            IF ServiceSurveyStructureLine.FINDLAST THEN
              LineNo := ServiceSurveyStructureLine."Line No.";
            LineNo += 10000;
            REPEAT
              ServiceSurveyStructureLine.INIT;
              ServiceSurveyStructureLine."Survey No." := "Survey No.";
              ServiceSurveyStructureLine."Location Code" := "Location Code";
              ServiceSurveyStructureLine."Structure No." := ServiceLocStructureLine."Structure No.";
              ServiceSurveyStructureLine.Code := ServiceLocStructureLine."No.";
              ServiceSurveyStructureLine."Line No." := LineNo;
              ServiceSurveyStructureLine."Object Line" := ServiceLocStructureLine."Object Line";
              ServiceSurveyStructureLine."Seq. No." := "Seq. No.";
              ServiceLocStructureLine2.SETRANGE("Service Location No.", ServiceLocStructureLine."Service Location No.");
              ServiceLocStructureLine2.SETRANGE("No.", ServiceLocStructureLine."No.");
              ServiceLocStructureLine2.SETRANGE("Object Line", FALSE);
              IF ServiceLocStructureLine2.FINDFIRST THEN BEGIN
                ServiceSurveyStructureLine."Code Description" := ServiceLocStructureLine2.Description;
                ServiceSurveyStructureLine."Element Level 1" := ServiceLocStructureLine2."Element Level 1";
              END;
              ServiceSurveyStructureLine.INSERT(TRUE);
              LineNo += 10000;
            UNTIL ServiceLocStructureLine.NEXT = 0;
          END;
        UNTIL ServiceLocationStructure.NEXT = 0;
    END;

    LOCAL PROCEDURE TestObjectIsUnique@1100528624();
    VAR
      ServSurvLocationObject@1100528600 : Record 11071813;
    BEGIN
      IF "Existing Service Object No." = '' THEN
        EXIT;
      ServSurvLocationObject.SETRANGE("Survey No.", "Survey No.");
      ServSurvLocationObject.SETRANGE("Existing Service Object No.", "Existing Service Object No.");
      IF ServSurvLocationObject.FINDSET THEN
        REPEAT
          IF (ServSurvLocationObject."Location Code" <> "Location Code") OR (ServSurvLocationObject."Seq. No." <> "Seq. No.") THEN
            ERROR(Text004, "Existing Service Object No.");
        UNTIL ServSurvLocationObject.NEXT = 0;
    END;

    PROCEDURE SetSupressDetailLineCreation@1100528630(ISuppressDetailLineCreation@1100528600 : Boolean);
    BEGIN
      SuppressDetailLineCreation := ISuppressDetailLineCreation;
    END;

    PROCEDURE GetSummarySheetSurchargeAmount@1100528634(ISummaryType@1100528600 : 'Cost,Sales') : Decimal;
    VAR
      ServiceSurvey@1100528602 : Record 11071803;
      ServSurvLocationObject@1100528606 : Record 11071813;
      ServSurvSummarySheet@1100528601 : Record 11072241;
      SummarySheetNo@1100528603 : Code[10];
      SummarySheetSeqNo@1100528604 : Integer;
      TotalAmountSurcharge@1100528605 : Decimal;
      SurchargeAmount@1100528607 : Decimal;
      CostAmount@1100528608 : Decimal;
    BEGIN
      IF (Quantity = 0) OR ("Quantity per Object" = 0) THEN
        EXIT;
      ServiceSurvey.GET("Survey No.");
      CASE ISummaryType OF
        ISummaryType::Cost:
          BEGIN
            SummarySheetNo := ServiceSurvey."Summary Sheet (Cost)";
            SummarySheetSeqNo := ServiceSurvey."Summary Sheet Seq. No. (Cost)";
          END;
        ISummaryType::Sales:
          BEGIN
            SummarySheetNo := ServiceSurvey."Summary Sheet (Sales)";
            SummarySheetSeqNo := ServiceSurvey."Summary Sheet Seq. No. (Sales)";
          END;
      END;
      IF NOT ServSurvSummarySheet.GET(ServSurvSummarySheet."Summary Kind"::Survey, "Survey No.", SummarySheetNo, SummarySheetSeqNo) THEN
        EXIT;

      ServSurvSummarySheet.ReCalcSummaryLines;
      TotalAmountSurcharge := ServSurvSummarySheet.GetSummarySurcharge();
      IF TotalAmountSurcharge = 0 THEN
        EXIT;

      ServSurvLocationObject.SETRANGE("Survey No.", "Survey No.");
      ServSurvLocationObject.SETRANGE("Include in Contract", ServSurvLocationObject."Include in Contract"::"With Maintenance");
      IF ServSurvLocationObject.FINDSET THEN
        REPEAT
          ServSurvLocationObject.CALCFIELDS("Net Cost Price");
          CostAmount += ServSurvLocationObject."Net Cost Price";
          IF ISummaryType = ISummaryType::Sales THEN
            CostAmount += ServSurvLocationObject.GetSummarySheetSurchargeAmount(0);
        UNTIL ServSurvLocationObject.NEXT = 0;
      IF CostAmount = 0 THEN
        EXIT;
      CASE ISummaryType OF
        ISummaryType::Cost:
          BEGIN
            CALCFIELDS("Net Cost Price");
            SurchargeAmount := ("Net Cost Price" / CostAmount * TotalAmountSurcharge) / Quantity;
          END;
        ISummaryType::Sales:
          BEGIN
            CALCFIELDS("Net Cost Price");
            SurchargeAmount := (("Net Cost Price" + GetSummarySheetSurchargeAmount(0)) / CostAmount * TotalAmountSurcharge) / Quantity;
          END;
      END;

      EXIT(SurchargeAmount);
    END;

    PROCEDURE "---"@1100528618();
    BEGIN
    END;

    PROCEDURE CopyObjectLevelSpecs@1100528613();
    VAR
      ObjectSpecificationLine@1100528601 : Record 11071781;
    BEGIN
      IF "Standard Object No." = '' THEN
        EXIT;

      ObjectSpecificationLine.SETRANGE("Specification Type", ObjectSpecificationLine."Specification Type"::"Standard Object");
      ObjectSpecificationLine.SETRANGE(Code, "Standard Object No.");
      ObjectSpecificationLine.SETRANGE("Object Level", TRUE);
      ObjectSpecificationLine.SETRANGE(Type, ObjectSpecificationLine.Type::Line);
      IF ObjectSpecificationLine.FINDSET THEN
        REPEAT
          IF ObjectSpecificationLine.Type = ObjectSpecificationLine.Type::Line THEN BEGIN
            FindOrCreateObjectSpecGroup("Survey No.", "Location Code", "Seq. No.",
              ObjectSpecificationLine.GetObjSpecificationGroupCode);
          END;
          FindOrCreateObjectSpec(
            "Survey No.", "Location Code", "Seq. No.", ObjectSpecificationLine."Specification Code");
        UNTIL ObjectSpecificationLine.NEXT = 0;
    END;

    LOCAL PROCEDURE CopyObjectLevelSpecsFromObject@1100528626();
    VAR
      ObjectSpecificationLine@1100528600 : Record 11071781;
      ServiceSurveyObjectSpec@1100528601 : Record 11071972;
    BEGIN
      IF "Existing Service Object No." = '' THEN
        EXIT;

      ObjectSpecificationLine.SETRANGE("Specification Type", ObjectSpecificationLine."Specification Type"::Object);
      ObjectSpecificationLine.SETRANGE(Code, "Existing Service Object No.");
      IF ObjectSpecificationLine.FINDSET THEN
        REPEAT
          ServiceSurveyObjectSpec."Survey No." := "Survey No.";
          ServiceSurveyObjectSpec."Location Code" := "Location Code";
          ServiceSurveyObjectSpec."Seq. No." := "Seq. No.";
          ServiceSurveyObjectSpec."Line No." := ObjectSpecificationLine."Line No.";
          ServiceSurveyObjectSpec.Type := ObjectSpecificationLine.Type;
          ServiceSurveyObjectSpec.VALIDATE("Specification Code", ObjectSpecificationLine."Specification Code");
          ServiceSurveyObjectSpec.Description := ObjectSpecificationLine.Description;
          ServiceSurveyObjectSpec."Field Type" := ObjectSpecificationLine."Field Type";
          ServiceSurveyObjectSpec."Unit Of Measure" := ObjectSpecificationLine."Unit Of Measure";
          ServiceSurveyObjectSpec.Value := ObjectSpecificationLine.Value;
          ServiceSurveyObjectSpec."Value (Date)" := ObjectSpecificationLine."Value (Date)";
          ServiceSurveyObjectSpec."Value (Value)" := ObjectSpecificationLine."Value (Value)";
          ServiceSurveyObjectSpec.BORG := ObjectSpecificationLine.BORG;
          ServiceSurveyObjectSpec.INSERT(TRUE);
        UNTIL ObjectSpecificationLine.NEXT = 0;
    END;

    LOCAL PROCEDURE FindOrCreateObjectSpec@1100528620(ISurveyNo@1100528601 : Code[20];ILocationCode@1100528603 : Code[10];ISeqNo@1100528606 : Integer;IObjectSpecCode@1100528600 : Code[10]) : Boolean;
    VAR
      BaseObjectSpecificationLine@1100528604 : Record 11071779;
      ServiceSurveyObjectSpec@1100528605 : Record 11071972;
      LineNo@1100528602 : Integer;
    BEGIN
      BaseObjectSpecificationLine.SETRANGE(Code, IObjectSpecCode);
      BaseObjectSpecificationLine.SETRANGE(Level, BaseObjectSpecificationLine.Level::Object);
      IF NOT BaseObjectSpecificationLine.FINDFIRST THEN
        EXIT;

      ServiceSurveyObjectSpec.SETRANGE("Survey No.", ISurveyNo);
      ServiceSurveyObjectSpec.SETRANGE("Location Code", ILocationCode);
      ServiceSurveyObjectSpec.SETRANGE("Seq. No.", ISeqNo);
      IF ServiceSurveyObjectSpec.FINDLAST THEN
        LineNo := ServiceSurveyObjectSpec."Line No.";
      ServiceSurveyObjectSpec.SETRANGE("Specification Code", BaseObjectSpecificationLine.Code);
      IF NOT ServiceSurveyObjectSpec.FINDFIRST THEN BEGIN
        ServiceSurveyObjectSpec.SETRANGE("Specification Code");
        LineNo += 10000;
        ServiceSurveyObjectSpec.VALIDATE("Survey No.", ISurveyNo);
        ServiceSurveyObjectSpec.VALIDATE("Location Code", ILocationCode);
        ServiceSurveyObjectSpec.VALIDATE("Seq. No.", ISeqNo);
        ServiceSurveyObjectSpec.VALIDATE(Type, ServiceSurveyObjectSpec.Type::Line);
        ServiceSurveyObjectSpec.VALIDATE("Specification Code", BaseObjectSpecificationLine.Code);
        ServiceSurveyObjectSpec."Line No." := LineNo;
        ServiceSurveyObjectSpec.INSERT(TRUE);
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE FindOrCreateObjectSpecGroup@1100528619(IServiceSurveyNo@1100528603 : Code[20];ILocationCode@1100528605 : Code[10];ISeqNo@1100528606 : Integer;IObjectSpecGroupCode@1100528601 : Code[10]);
    VAR
      ObjectSpecificationGroup@1100528604 : Record 11071778;
      ServiceSurveyObjectSpec@1100528600 : Record 11071972;
      LineNo@1100528602 : Integer;
    BEGIN
      IF NOT ObjectSpecificationGroup.GET(IObjectSpecGroupCode) THEN
        EXIT;

      ServiceSurveyObjectSpec.SETRANGE("Survey No.", IServiceSurveyNo);
      ServiceSurveyObjectSpec.SETRANGE("Location Code", ILocationCode);
      ServiceSurveyObjectSpec.SETRANGE("Seq. No.", ISeqNo);
      IF ServiceSurveyObjectSpec.FINDLAST THEN
        LineNo := ServiceSurveyObjectSpec."Line No.";
      ServiceSurveyObjectSpec.SETRANGE(Type, ServiceSurveyObjectSpec.Type::Group);
      ServiceSurveyObjectSpec.SETRANGE("Specification Code", ObjectSpecificationGroup.Code);
      ServiceSurveyObjectSpec.SetDontCheckBORGUser(TRUE);
      IF NOT ServiceSurveyObjectSpec.FINDFIRST THEN BEGIN
        ServiceSurveyObjectSpec.SETRANGE("Specification Code");
        LineNo += 10000;
        ServiceSurveyObjectSpec.VALIDATE("Survey No.", IServiceSurveyNo);
        ServiceSurveyObjectSpec.VALIDATE("Location Code", ILocationCode);
        ServiceSurveyObjectSpec.VALIDATE("Seq. No.", ISeqNo);
        ServiceSurveyObjectSpec.VALIDATE(Type, ServiceSurveyObjectSpec.Type::Group);
        ServiceSurveyObjectSpec.VALIDATE("Specification Code", ObjectSpecificationGroup.Code);
        ServiceSurveyObjectSpec."Line No." := LineNo;
        ServiceSurveyObjectSpec.INSERT(TRUE);
      END;
    END;

    LOCAL PROCEDURE "----"@1100528617();
    BEGIN
    END;

    PROCEDURE GetTotalAmountByCostObject@1100528621(ICostObjectFilter@1100528610 : Code[250];IRateCodeFilter@1100528630 : Code[250];IIncludeCostSurcharge@1100528600 : Boolean;IIncludeSalesSurcharge@1100528631 : Boolean;ISummaryType@1100528632 : 'Cost,Sales';VAR OTotalLabor@1100528611 : Decimal;VAR OTotalHours@1100528612 : Decimal;VAR OTotalMaterial@1100528613 : Decimal;VAR OTotalSubcontracting@1100528614 : Decimal;VAR OTotalPlant@1100528615 : Decimal;VAR OTotalSundry@1100528616 : Decimal;VAR OTotalCost@1100528617 : Decimal;VAR OTotalSurcharge@1100528618 : Decimal);
    VAR
      ServSurvLocObjDetail@1100528601 : Record 11071807;
      LaborPerService@1100528602 : Decimal;
      HoursPerService@1100528603 : Decimal;
      MaterialPerService@1100528604 : Decimal;
      SubcontractingPerService@1100528609 : Decimal;
      PlantPerService@1100528605 : Decimal;
      SundryPerService@1100528606 : Decimal;
      TotalCostPerService@1100528607 : Decimal;
      SurchargePerService@1100528608 : Decimal;
      SurchargePerServiceLabor@1100528619 : Decimal;
      SurchargePerServiceMaterial@1100528620 : Decimal;
      SurchargePerServiceSubcontracting@1100528621 : Decimal;
      SurchargePerServicePlant@1100528622 : Decimal;
      SurchargePerServiceSundry@1100528623 : Decimal;
      SalesSurchargePerService@1100528629 : Decimal;
      SalesSurchargePerServiceLabor@1100528628 : Decimal;
      SalesSurchargePerServiceMaterial@1100528627 : Decimal;
      SalesSurchargePerServiceSubcontracting@1100528626 : Decimal;
      SalesSurchargePerServicePlant@1100528625 : Decimal;
      SalesSurchargePerServiceSundry@1100528624 : Decimal;
      CorrectionFactor@1100528633 : Decimal;
    BEGIN
      OTotalLabor := 0;
      OTotalHours := 0;
      OTotalMaterial := 0;
      OTotalSubcontracting := 0;
      OTotalPlant := 0;
      OTotalSundry := 0;
      OTotalCost := 0;
      OTotalSurcharge := 0;

      ServSurvLocObjDetail.SETRANGE("Survey No.", "Survey No.");
      ServSurvLocObjDetail.SETRANGE("Location Code", "Location Code");
      ServSurvLocObjDetail.SETRANGE("Seq. No.", "Seq. No.");
      ServSurvLocObjDetail.SETRANGE("Include in Contract", TRUE);
      IF ServSurvLocObjDetail.FINDSET THEN
        REPEAT
          LaborPerService := 0;
          HoursPerService := 0;
          MaterialPerService := 0;
          SubcontractingPerService := 0;
          PlantPerService := 0;
          SundryPerService := 0;
          TotalCostPerService := 0;
          IF ISummaryType = ISummaryType::Cost THEN
            CorrectionFactor := 1
          ELSE
            CorrectionFactor := "Correction Factor";

          SurchargePerService := 0;
          SurchargePerServiceLabor := 0;
          SurchargePerServiceMaterial := 0;
          SurchargePerServicePlant := 0;
          SurchargePerServiceSubcontracting := 0;
          SurchargePerServiceSundry := 0;
          SalesSurchargePerService := 0;
          SalesSurchargePerServiceLabor := 0;
          SalesSurchargePerServiceMaterial := 0;
          SalesSurchargePerServicePlant := 0;
          SalesSurchargePerServiceSubcontracting := 0;
          SalesSurchargePerServiceSundry := 0;

          IF (ICostObjectFilter <> '') OR (IRateCodeFilter <> '') THEN
            ServiceSurveyManagement.GetCostObjectDetByCostObject(ServSurvLocObjDetail,
              ICostObjectFilter, IRateCodeFilter, TRUE, LaborPerService, HoursPerService, MaterialPerService,
              SubcontractingPerService, PlantPerService, SundryPerService, TotalCostPerService)
          ELSE BEGIN
            LaborPerService := ServSurvLocObjDetail."Labor per Service";
            HoursPerService := ServSurvLocObjDetail."Hours per Service";
            MaterialPerService := ServSurvLocObjDetail."Material per Service";
            SubcontractingPerService := ServSurvLocObjDetail."Subcontracting per Service";
            PlantPerService := ServSurvLocObjDetail."Plant per Service";
            SundryPerService := ServSurvLocObjDetail."Sundry per Service";
            TotalCostPerService := ServSurvLocObjDetail."Total Cost per Service";
          END;

          IF IIncludeCostSurcharge THEN
            SurchargePerService :=
              ServiceSurveyManagement.GetSurveySurchargeAmounts(ServSurvLocObjDetail, 0,
                SurchargePerServiceLabor, SurchargePerServiceMaterial, SurchargePerServiceSubcontracting,
                SurchargePerServicePlant, SurchargePerServiceSundry);

          IF IIncludeSalesSurcharge THEN
            SalesSurchargePerService :=
              ServiceSurveyManagement.GetSurveySurchargeAmounts(ServSurvLocObjDetail, 1,
                SalesSurchargePerServiceLabor, SalesSurchargePerServiceMaterial, SalesSurchargePerServiceSubcontracting,
                SalesSurchargePerServicePlant, SalesSurchargePerServiceSundry);

          OTotalLabor +=
            (LaborPerService + SurchargePerServiceLabor + SalesSurchargePerServiceLabor) *
            ServSurvLocObjDetail."Frequency per Year" * Quantity * "Quantity per Object" * CorrectionFactor;
          OTotalHours +=
            HoursPerService * ServSurvLocObjDetail."Frequency per Year" * Quantity * "Quantity per Object" * CorrectionFactor;
          OTotalMaterial +=
            (MaterialPerService + SurchargePerServiceMaterial + SalesSurchargePerServiceMaterial) *
            ServSurvLocObjDetail."Frequency per Year" * Quantity * "Quantity per Object" * CorrectionFactor;
          OTotalSubcontracting +=
            (SubcontractingPerService + SurchargePerServiceSubcontracting + SalesSurchargePerServiceSubcontracting) *
            ServSurvLocObjDetail."Frequency per Year" * Quantity * "Quantity per Object" * CorrectionFactor;
          OTotalPlant +=
            (PlantPerService + SurchargePerServicePlant + SalesSurchargePerServicePlant) *
            ServSurvLocObjDetail."Frequency per Year" * Quantity * "Quantity per Object" * CorrectionFactor;
          OTotalSundry +=
            (SundryPerService + SurchargePerServiceSundry + SalesSurchargePerServiceSundry) *
            ServSurvLocObjDetail."Frequency per Year" * Quantity * "Quantity per Object" * CorrectionFactor;
          OTotalCost +=
            (TotalCostPerService + SurchargePerService + SalesSurchargePerService) *
            ServSurvLocObjDetail."Frequency per Year" * Quantity * "Quantity per Object" * CorrectionFactor;
          OTotalSurcharge +=
            (SurchargePerService + SalesSurchargePerService) *
            ServSurvLocObjDetail."Frequency per Year" * Quantity * "Quantity per Object" * CorrectionFactor;
        UNTIL ServSurvLocObjDetail.NEXT = 0;
    END;

    LOCAL PROCEDURE GetSurveyReferenceDate@1100528633() : Date;
    VAR
      ServiceSurvey@1100528600 : Record 11071803;
    BEGIN
      IF ServiceSurvey.GET("Survey No.") THEN
        EXIT(ServiceSurvey."Reference Date");
    END;

    PROCEDURE GetSurchargeAmount@1100528631(ISummaryType@1100528601 : 'Cost,Sales') : Decimal;
    VAR
      ServiceSurvey@1100528600 : Record 11071803;
    BEGIN
      IF NOT ServiceSurvey.GET("Survey No.") THEN
        EXIT;
      CASE ISummaryType OF
        ISummaryType::Cost:
          BEGIN
            CALCFIELDS("Surcharge Amount");
            EXIT("Surcharge Amount");
          END;
        ISummaryType::Sales:
          BEGIN
            CALCFIELDS("Sales Surcharge Amount");
            EXIT("Sales Surcharge Amount");
          END;
      END;
    END;

    LOCAL PROCEDURE ValidateGPSCoordinate@1100529400(Value@1100529400 : Code[30]);
    VAR
      ServiceLocation@1100528400 : Record 11012801;
    BEGIN
      ServiceLocation.ValidateGPSCoordinate(Value);
    END;

    LOCAL PROCEDURE UpdateDetailLines@1100528632();
    VAR
      ServSurvLocObjDetail@1100528600 : Record 11071807;
    BEGIN
      ServSurvLocObjDetail.SETRANGE("Survey No.", "Survey No.");
      ServSurvLocObjDetail.SETRANGE("Location Code", "Location Code");
      ServSurvLocObjDetail.SETRANGE("Seq. No.", "Seq. No.");
      IF ServSurvLocObjDetail.FINDSET(TRUE) THEN
        REPEAT
          ServSurvLocObjDetail.UpdateTotals;
          ServSurvLocObjDetail.MODIFY(TRUE);
        UNTIL ServSurvLocObjDetail.NEXT = 0;
    END;

    LOCAL PROCEDURE RenameDetailLines@1100529604();
    VAR
      ServSurvLocObjDetail@1100529600 : Record 11071807;
      ServSurvLocObjDetail2@1100529601 : Record 11071807;
      ServSurvObjectAddAct@1100529604 : Record 11071814;
      ServSurvObjectAddAct2@1100529605 : Record 11071814;
      SurvObjAddActProperty@1100529603 : Record 11071955;
      SurvObjAddActProperty2@1100529606 : Record 11071955;
    BEGIN
      ServSurvLocObjDetail.SETRANGE("Survey No.", xRec."Survey No.");
      ServSurvLocObjDetail.SETRANGE("Location Code", xRec."Location Code");
      ServSurvLocObjDetail.SETRANGE("Seq. No.", xRec."Seq. No.");
      IF ServSurvLocObjDetail.ISEMPTY THEN
        EXIT;

      ServSurvObjectAddAct.SETRANGE("Survey No.", xRec."Survey No.");
      ServSurvObjectAddAct.SETRANGE("Location Code", xRec."Location Code");
      ServSurvObjectAddAct.SETRANGE("Seq. No.", xRec."Seq. No.");

      SurvObjAddActProperty.SETRANGE("Survey No.", xRec."Survey No.");
      SurvObjAddActProperty.SETRANGE("Location Code", xRec."Location Code");
      SurvObjAddActProperty.SETRANGE("Seq. No.", xRec."Seq. No.");

      ServSurvLocObjDetail.FINDSET(TRUE);
      REPEAT
        ServSurvLocObjDetail2 := ServSurvLocObjDetail;
        ServSurvLocObjDetail2.RENAME("Survey No.", "Location Code", "Seq. No.", ServSurvLocObjDetail."Maintenance Scheme Code");

        ServSurvObjectAddAct.SETRANGE("Maintenance Scheme Code", ServSurvLocObjDetail."Maintenance Scheme Code");
        IF ServSurvObjectAddAct.FINDSET(TRUE) THEN
          REPEAT
            ServSurvObjectAddAct2 := ServSurvObjectAddAct;
            ServSurvObjectAddAct2.RENAME("Survey No.", "Location Code", "Seq. No.", ServSurvLocObjDetail."Maintenance Scheme Code", ServSurvObjectAddAct."Line No.");
          UNTIL ServSurvObjectAddAct.NEXT = 0;

        SurvObjAddActProperty.SETRANGE("Maintenance Scheme Code", ServSurvLocObjDetail."Maintenance Scheme Code");
        IF SurvObjAddActProperty.FINDSET(TRUE) THEN
          REPEAT
            SurvObjAddActProperty2 := SurvObjAddActProperty;
            SurvObjAddActProperty2.RENAME("Survey No.", "Location Code", "Seq. No.", ServSurvLocObjDetail."Maintenance Scheme Code",
              SurvObjAddActProperty."Line Type (Base)", SurvObjAddActProperty."Type Code (Base)", SurvObjAddActProperty."Line No. (Base)", SurvObjAddActProperty."Belongs to Scheme (Base)");
          UNTIL SurvObjAddActProperty.NEXT = 0;
      UNTIL ServSurvLocObjDetail.NEXT = 0;
    END;

    LOCAL PROCEDURE RenameSpecificationLines@1100529602();
    VAR
      ServiceSurveyObjectSpec@1100529600 : Record 11071972;
      ServiceSurveyObjectSpec2@1100529601 : Record 11071972;
    BEGIN
      ServiceSurveyObjectSpec.SETRANGE("Survey No.", xRec."Survey No.");
      ServiceSurveyObjectSpec.SETRANGE("Location Code", xRec."Location Code");
      ServiceSurveyObjectSpec.SETRANGE("Seq. No.", xRec."Seq. No.");
      IF ServiceSurveyObjectSpec.ISEMPTY THEN
        EXIT;
      ServiceSurveyObjectSpec.FINDSET(TRUE);
      REPEAT
        ServiceSurveyObjectSpec2 := ServiceSurveyObjectSpec;
        ServiceSurveyObjectSpec2.RENAME("Survey No.", "Location Code", "Seq. No.", ServiceSurveyObjectSpec."Line No.");
      UNTIL ServiceSurveyObjectSpec.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

