OBJECT Page 11012181 Base Part List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Editable=Yes;
    CaptionML=[DEU=Teil šbersicht;
               ENU=Part List;
               NLD=Onderdeel overzicht;
               NOR=Delliste;
               SVE=Dellista];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11012169;
    PageType=List;
    OnInit=BEGIN
             ToggleExpandCollapse3Visible := TRUE;
             ToggleExpandCollapse2Visible := TRUE;
             CopyButtonVisible := TRUE;
           END;

    OnOpenPage=BEGIN
                 IF (g_code1 = '') AND (g_code2 = '') THEN
                   CopyButtonVisible := (FALSE);
                 IF g_code3 <> '' THEN BEGIN
                   RESET;
                   SETRANGE("Part Group", g_code3);
                 END;

                 InitTempTable;
               END;

    OnFindRecord=VAR
                   Found@1100485000 : Boolean;
                 BEGIN
                   TempPartRec.COPY(Rec);
                   Found := TempPartRec.FIND(Which);
                   Rec := TempPartRec;
                   EXIT(Found);
                 END;

    OnNextRecord=VAR
                   ResultSteps@1100485000 : Integer;
                 BEGIN
                   TempPartRec.COPY(Rec);
                   ResultSteps := TempPartRec.NEXT(Steps);
                   Rec := TempPartRec;
                   EXIT(ResultSteps);
                 END;

    OnAfterGetRecord=BEGIN
                       DescriptionIndent := 0;
                       SetExpansionStatus;
                       DescriptionOnFormat;
                       GetNewPart;  //DP00686
                     END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::LookupOK THEN
                         LookupOKOnPush;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 13      ;1   ;Action    ;
                      Name=CopyButton;
                      CaptionML=[DEU=Kopieren;
                                 ENU=Copy;
                                 NLD=Kopieer;
                                 NOR=KOPIER;
                                 SVE=Kopiera];
                      Promoted=Yes;
                      Enabled=CopyButtonVisible;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopyBln := TRUE;  //db, 02-07-10: M19985
                                 CopyPart;
                               END;
                                }
      { 1100485006;1 ;ActionGroup;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unctions;
                                 NLD=F&uncties;
                                 NOR=Fu&nksjon;
                                 SVE=Fu&nktion] }
      { 1100485007;2 ;Action    ;
                      CaptionML=[DEU=All&e aufklappen;
                                 ENU=E&xpand All;
                                 NLD=&Alles uitvouwen;
                                 NOR=E&kspander alle;
                                 SVE=E&xpandera alla];
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExpandAll(TRUE, "Part Group");
                               END;
                                }
      { 1100485008;2 ;Action    ;
                      CaptionML=[DEU=Alle zusa&mmenklappen;
                                 ENU=C&ollapse All;
                                 NLD=Alle&s samenvouwen;
                                 NOR=R&eduser alle;
                                 SVE=R&educera alla];
                      Image=CollapseDepositLines;
                      OnAction=BEGIN
                                 ExpandAll(FALSE, "Part Group");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 1100485000;2;Field  ;
                Name=ToggleExpandCollapse1;
                CaptionML=[DEU=Aufklappen;
                           ENU=Expand;
                           NLD=Uitvouwen;
                           NOR=Ekspander;
                           SVE=Expandera];
                OptionCaptionML=[NOR=Bitmap16,Bitmap4;
                                 SVE=Bitmap16,Bitmap4];
                SourceExpr=ActualExpansionStatus[1];
                Importance=Additional;
                Visible=FALSE;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               ActualExpansionStatus1OnPush;
                             END;
                              }

    { 1100485002;2;Field  ;
                Name=ToggleExpandCollapse2;
                CaptionML=[DEU=Aufklappen;
                           ENU=Expand;
                           NLD=Uitvouwen;
                           NOR=Ekspander;
                           SVE=Expandera];
                OptionCaptionML=[NOR=Bitmap16,Bitmap4;
                                 SVE=Bitmap16,Bitmap4];
                SourceExpr=ActualExpansionStatus[2];
                Importance=Additional;
                Visible=FALSE;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               ActualExpansionStatus2OnPush;
                             END;
                              }

    { 1100485004;2;Field  ;
                Name=ToggleExpandCollapse3;
                CaptionML=[DEU=Aufklappen;
                           ENU=Expand;
                           NLD=Uitvouwen;
                           NOR=Ekspander;
                           SVE=Expandera];
                OptionCaptionML=[NOR=Bitmap16,Bitmap4;
                                 SVE=Bitmap16,Bitmap4];
                SourceExpr=ActualExpansionStatus[3];
                Importance=Additional;
                Visible=FALSE;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               ActualExpansionStatus3OnPush;
                             END;
                              }

    { 1210190000;2;Field  ;
                SourceExpr="Part Group";
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr=Code;
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr=Description;
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="Search Name";
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE;
                Editable=FALSE }

    { 1100409000;2;Field  ;
                Name=NewPart;
                CaptionML=[DEU=Neues Teil;
                           ENU=New Part;
                           NLD=Nieuw onderdeel];
                SourceExpr=NewPart;
                Importance=Additional;
                Visible=FALSE;
                OnValidate=BEGIN
                             //DP00686
                             StoreNewPart;
                             CheckNewChilds;
                           END;
                            }

  }
  CODE
  {
    VAR
      g_table@1210190000 : Integer;
      g_code1@11012000 : Code[20];
      g_code2@11012001 : Code[20];
      g_code3@11012002 : Code[20];
      ActualExpansionStatus@1100485002 : ARRAY [5] OF Integer;
      TempPartRec@1100485001 : TEMPORARY Record 11012169;
      CopyMgt@1100485000 : Codeunit 11012068;
      CopyBln@1100525000 : Boolean;
      CopyButtonVisible@19037030 : Boolean INDATASET;
      DescriptionIndent@19057867 : Integer INDATASET;
      ToggleExpandCollapse2Visible@19021597 : Boolean INDATASET;
      ToggleExpandCollapse3Visible@19021370 : Boolean INDATASET;
      NewPart@1100409000 : Code[20];
      NewPartRec@1100409001 : Record 11229768;
      Text000@1100409002 : TextConst 'DEU=Nur umbenennen, wenn Teil in Kalkulation besteht;ENU=Rename only in case of existing Part in Estimate;NLD=Alleen hernoemen als onderdeel in calculatie al bestaat';

    PROCEDURE SetSelection@2(l_table@1210190000 : Integer;l_code1@11012000 : Code[20];l_code2@11012001 : Code[20];l_code3@11012002 : Code[20]);
    BEGIN
      g_table := l_table;
      g_code1 := l_code1;
      g_code2 := l_code2;
      g_code3 := l_code3;
    END;

    PROCEDURE CopyPart@1100485000();
    VAR
      lvBaseEstimatePartRec@1100525500 : Record 11012169;
    BEGIN
      CopyMgt.SetSelectionPart(g_table, g_code1, g_code2, g_code3, '');
      CopyMgt.SetSelectionProgress(CopyBln);
      CurrPage.SETSELECTIONFILTER(lvBaseEstimatePartRec);
      CopyMgt.CopyEstParts(lvBaseEstimatePartRec);
      CurrPage.CLOSE;
    END;

    PROCEDURE SetExpansionStatus@16();
    VAR
      i@1100485000 : Integer;
    BEGIN
      FOR i:= 1 TO 5 DO
        ActualExpansionStatus[i] := 2;

      CASE TRUE OF
        IsExpanded(Rec):
          ActualExpansionStatus[Level + 1] := 1;
        HasChildren(Rec):
          ActualExpansionStatus[Level + 1] := 0;
        ELSE
          ActualExpansionStatus[Level + 1] := 2;
      END;
    END;

    PROCEDURE InitTempTable@1100485003();
    VAR
      lvPartRec@1100485000 : Record 11012169;
    BEGIN
      ToggleExpandCollapse2Visible := (FALSE);
      ToggleExpandCollapse3Visible := (FALSE);

      TempPartRec.RESET;
      TempPartRec.DELETEALL;

      lvPartRec.RESET;
      lvPartRec.COPYFILTERS(TempPartRec);
      IF lvPartRec.FIND('-') THEN BEGIN
        REPEAT
          IF lvPartRec.Level <= 1 THEN BEGIN
            TempPartRec := lvPartRec;
            TempPartRec.INSERT;
          END;
          IF lvPartRec.Level = 2 THEN
            ToggleExpandCollapse2Visible := (TRUE);
          IF lvPartRec.Level = 3 THEN
            ToggleExpandCollapse3Visible := (TRUE);
        UNTIL lvPartRec.NEXT = 0
      END;
    END;

    PROCEDURE ExpandAll@12(lvExplode@1100485000 : Boolean;lvPartGrp@1100485001 : Code[20]);
    VAR
      lvPartRec@1100485002 : Record 11012169;
    BEGIN
      TempPartRec.RESET;
      TempPartRec.SETRANGE("Part Group", lvPartGrp);
      TempPartRec.DELETEALL;

      lvPartRec.RESET;
      lvPartRec.COPYFILTERS(TempPartRec);
      lvPartRec.SETRANGE("Part Group", lvPartGrp);
      IF lvExplode = FALSE THEN
        lvPartRec.SETFILTER(Level, '<=%1', 1);
      IF lvPartRec.FIND('-') THEN BEGIN
        REPEAT
          TempPartRec := lvPartRec;
          TempPartRec.INSERT;
        UNTIL lvPartRec.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE IsExpanded@20(lvPartRec@1000 : Record 11012169) : Boolean;
    BEGIN
      TempPartRec := lvPartRec;
      IF TempPartRec.NEXT = 0 THEN
        EXIT(FALSE);
      EXIT(TempPartRec.Level > lvPartRec.Level);
    END;

    PROCEDURE HasChildren@1100485002(lvPartRec@1100485000 : Record 11012169) : Boolean;
    VAR
      lvPartRec2@1100485001 : Record 11012169;
    BEGIN
      lvPartRec2 := lvPartRec;
      IF lvPartRec2.NEXT = 0 THEN
        EXIT(FALSE);
      EXIT(lvPartRec2.Level > lvPartRec.Level);
    END;

    PROCEDURE ToggleExpandCollapse@4();
    VAR
      lvPartRec@1100485000 : Record 11012169;
    BEGIN
      IF ActualExpansionStatus[Level + 1] = 0 THEN BEGIN // Has children, but not expanded
        lvPartRec.SETRANGE("Part Group","Part Group");
        lvPartRec.SETRANGE(Level,Level,Level + 1);
        lvPartRec := Rec;
        IF lvPartRec.NEXT <> 0 THEN BEGIN
          REPEAT
            IF lvPartRec.Level > Level THEN BEGIN
              TempPartRec := lvPartRec;
              IF TempPartRec.INSERT THEN;
            END;
          UNTIL (lvPartRec.NEXT = 0) OR (lvPartRec.Level = Level);
        END;
      END ELSE BEGIN
        IF ActualExpansionStatus[Level + 1] = 1 THEN BEGIN // Has children and is already expanded
          TempPartRec := Rec;
          WHILE (TempPartRec.NEXT <> 0) AND (TempPartRec.Level > Level) DO
            TempPartRec.DELETE;
        END;
      END;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ActualExpansionStatus1OnPush@19074939();
    BEGIN
      IF Rec.Level = 0 THEN
        ToggleExpandCollapse;
    END;

    LOCAL PROCEDURE ActualExpansionStatus2OnPush@19078267();
    BEGIN
      IF Rec.Level = 1 THEN
        ToggleExpandCollapse;
    END;

    LOCAL PROCEDURE ActualExpansionStatus3OnPush@19040955();
    BEGIN
      IF Rec.Level = 2 THEN
        ToggleExpandCollapse;
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    BEGIN
      IF g_code1 <> '' THEN BEGIN
        CopyBln := FALSE;  //db, 02-07-10: M19985
        CopyPart;
      END;
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      DescriptionIndent := Level;
    END;

    PROCEDURE GetNewPart@1100528900();
    BEGIN
      //DP00686
      IF NOT NewPartRec.GET("Part Group", Code) THEN NewPartRec.INIT;
      NewPart := NewPartRec."New Part";
    END;

    PROCEDURE StoreNewPart@1100528901();
    VAR
      FormatMgt@1100409000 : Codeunit 11012022;
      EstPartRecNEW@1100528901 : Record 11072073;
      BasePartRec@1100409001 : Record 11012169;
    BEGIN
      //DP00686
      IF NewPartRec.GET("Part Group", Code) THEN BEGIN
        IF NewPart = '' THEN BEGIN
          NewPartRec.DELETE;
          EXIT;
        END;
      END ELSE BEGIN
        IF BasePartRec.GET("Part Group", NewPart) THEN ERROR(Text000);  //db, 29-12-14
        //db.sn, 18-12-14
        EstPartRecNEW.SETRANGE("Estimate No.", g_code1);
        EstPartRecNEW.SETRANGE("Sub-Estimate No.", g_code2);
        EstPartRecNEW.SETRANGE("Part Group", "Part Group");
        EstPartRecNEW.SETRANGE(Part, Code);
        IF NOT EstPartRecNEW.FINDFIRST THEN
          IF Level > 1 THEN //db, 30-12-14 (assumed level 0 present)
            ERROR(Text000);
        //db.en, 18-12-14
        NewPartRec.INIT;
        NewPartRec."Part Group" := "Part Group";
        NewPartRec.Code := Code;
        NewPartRec.INSERT;
      END;

      FormatMgt.FormatElem(NewPart,1,'');
      NewPartRec."New Part" := NewPart;
      NewPartRec.MODIFY;
    END;

    PROCEDURE CheckNewChilds@1100409000();
    VAR
      EstPartRec@1100409002 : Record 11072073;
      BasePartRec@1100409000 : Record 11012169;
      NewParent@1100409005 : Code[20];
      NewChild@1100409001 : Code[20];
      sp1@1100409003 : Integer;
      sp2@1100409004 : Integer;
      FormatManagement@1100528900 : Codeunit 11012022;
    BEGIN
      //db, 30-12-14
      FormatManagement.CheckFormat(1,sp1,sp2);  //C063045
      NewParent := NewPart;

      IF (Level = 0) OR (Level = 3) THEN EXIT;
      BasePartRec.SETRANGE("Part Group", "Part Group");
      BasePartRec.SETFILTER(Code, '<>%1', Code);
      IF Level = 1 THEN
        BasePartRec.SETRANGE(Chapter, Chapter);
      IF Level = 2 THEN
        BasePartRec.SETRANGE(Paragraph, Paragraph);
      IF BasePartRec.FINDSET THEN BEGIN
        REPEAT
          NewChild := BasePartRec.Code;
          IF Level = 1 THEN
            NewChild := COPYSTR(NewParent,1,sp1) + COPYSTR(BasePartRec.Code,sp1+1, STRLEN(BasePartRec.Code)-sp1);
          IF Level = 2 THEN
            NewChild := COPYSTR(NewParent,1,sp2) + COPYSTR(BasePartRec.Code,sp2+1, STRLEN(BasePartRec.Code)-sp2);
          IF NewPartRec.GET(BasePartRec."Part Group", BasePartRec.Code) THEN BEGIN
            NewPartRec."New Part" := NewChild;
            NewPartRec.MODIFY;
          END ELSE BEGIN
            NewPartRec.INIT;
            NewPartRec."Part Group" := BasePartRec."Part Group";
            NewPartRec.Code := BasePartRec.Code;
            NewPartRec."New Part" := NewChild;
            NewPartRec.INSERT;
         END;
        UNTIL BasePartRec.NEXT = 0;
      END;
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

