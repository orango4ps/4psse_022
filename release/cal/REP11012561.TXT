OBJECT Report 11012561 Create Inspections
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Inspektionen erstellen;
               ENU=Create Inspections;
               NLD=Keuringen aanmaken;
               NOR=Opprette inspeksjoner;
               SVE=Skapa inspektioner];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF NextInspectionOn = 0D THEN
                    ERROR(Text001);

                  IF NOT CONFIRM(Text000) THEN
                    CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   MESSAGE(Text002, Counter);
                 END;

    UsageCategory=Tasks;
  }
  DATASET
  {
    { 7452;    ;DataItem;                    ;
               DataItemTable=Table11012563;
               DataItemTableView=SORTING(Plant Type,Inspection Type);
               OnAfterGetRecord=BEGIN
                                  IF InspecTypeRec.GET("Inspection Type") THEN BEGIN
                                    PlantNoRec.SETRANGE("Plant Type","Plant Type");
                                    IF PlantNoRec.FINDSET THEN BEGIN
                                      REPEAT
                                        PlantNoRec.CALCFIELDS("Quantity in Stock");
                                        IF PlantNoRec."Quantity in Stock" > 0 THEN BEGIN
                                          InspectionRec.SETRANGE("Plant Type","Plant Type");
                                          InspectionRec.SETRANGE("Plant No.",PlantNoRec."No.");
                                          InspectionRec.SETRANGE("Inspection Type","Inspection Type");
                                          IF NOT InspectionRec.FINDFIRST THEN BEGIN
                                            IF NextInspectionOn < InspectionRec.EndOfLifetimeDate("Plant Type", PlantNoRec."No.", "Inspection Type") THEN BEGIN
                                              InspectionRec.INIT;
                                              InspectionRec.VALIDATE("Plant Type","Plant Type");
                                              InspectionRec.VALIDATE("Plant No.",PlantNoRec."No.");
                                              InspectionRec."Inspection Type" := "Inspection Type";
                                              IF InspecTypeRec."Meter Reading Type" <> '' THEN
                                                InspectionRec.FillMeterReadingFromInspectionType;
                                              InspectionRec."Inspect before" := NextInspectionOn;
                                              IF InspectionVendor <> '' THEN
                                                InspectionRec."Inspection Vendor" := InspectionVendor
                                              ELSE  //* C-018086
                                                InspectionRec."Inspection Vendor" := InspecTypeRec."Inspection Vendor";
                                              InspectionRec.FillDefaultMaintenanceScheme;
                                              InspectionRec.INSERT(TRUE);
                                              Counter := Counter + 1;
                                            END;
                                          END;
                                        END;
                                      UNTIL PlantNoRec.NEXT = 0;
                                    END;
                                  END;
                                END;

               ReqFilterFields=Plant Type,Inspection Type }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1   ;2   ;Field     ;
                  CaptionML=[DEU=N„chste Inspektion am;
                             ENU=Next Inspection on;
                             NLD=Volgende keuring op;
                             NOR=Neste inspeksjon den;
                             SVE=N„sta inspektion den];
                  SourceExpr=NextInspectionOn }

      { 3   ;2   ;Field     ;
                  CaptionML=[DEU=Lieferant Inspektion;
                             ENU=Inspection Vendor;
                             NLD=Keuringsleverancier;
                             NOR=Inspeksjonsleverand›r;
                             SVE=Inspektionsleverant”r];
                  SourceExpr=InspectionVendor;
                  TableRelation=Vendor }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@11012004 : TextConst 'DEU=M”chten Sie die Inspektionen erstellen?;ENU=Do you want to create Inspections ?;NLD=Wilt u de keuringen aanmaken?;NOR=Vil du opprette inspeksjoner?;SVE=Vill du skapa inspektioner?';
      Text001@11012005 : TextConst 'DEU=Feld ''N„chste Inspektion am'' muss in Registerkarte ''Optionen'' eingegeben werden.;ENU=Field next Inspection not filled out in Option Tab;NLD=Veld Volgende keuring op moet gevuld worden in tabblad Opties.;NOR=Feltet for neste inspeksjon er ikke fylt ut p† fanen alternativer;SVE=F„ltet f”r n„sta inspektion har inte fyllts i p† fliken Alternativ';
      PlantNoRec@11012000 : Record 11012552;
      InspectionRec@11012001 : Record 11012564;
      InspecTypeRec@1100525000 : Record 11012562;
      NextInspectionOn@11012002 : Date;
      Counter@1100525002 : Integer;
      InspectionVendor@11012003 : Code[20];
      Text002@1100525001 : TextConst 'DEU=%1 Inspektionen erstellt.;ENU=%1 inspections created.;NLD=%1 keuringen aangemaakt.;NOR=%1 inspeksjoner er opprettet.;SVE=%1 inspektioner har skapats.';

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

