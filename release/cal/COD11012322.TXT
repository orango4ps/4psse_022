OBJECT Codeunit 11012322 Exp. Plant Inv. (Plant Mgt.)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=VAR
            PlantInventory2@1100525001 : Record 11012555;
            PlantLocation@1100525002 : Record 11012554;
            PlantInventory@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
            XMLDOMManagement4PS@1100525003 : Codeunit 11020220;
          BEGIN
            IF GUIALLOWED THEN
              Window.OPEN(Text000);

            UtilityFunctions.CreateOutFolder;

            DOMDocument := DOMDocument.XmlDocument;

            AppendElement(DOMDocument, 'plantinventory', '', PlantInventory);
            PlantInventory.SetAttribute('version', '1.0');
            PlantInventory.SetAttribute('exportdate', UtilityFunctions.FormatDateTime(CURRENTDATETIME));

            PlantInventory2.SETRANGE(Removed, FALSE);

            IF PlantInventory2.FINDSET THEN
              REPEAT
                IF GUIALLOWED THEN
                  Window.UPDATE;
                PlantInventory2.SETRANGE(Location, PlantInventory2.Location);

                PlantLocation.GET(PlantInventory2.Location);
                IF PlantLocation."Customer No." <> '' THEN
                  IF PlantLocation.Depot = FALSE THEN
                    IF PlantLocation.Status = PlantLocation.Status::Production THEN
                      REPEAT
                        PlantInventory2.SETRANGE("Plant Type", PlantInventory2."Plant Type");
                        REPEAT
                          PlantInventory2.SETRANGE("Plant No.", PlantInventory2."Plant No.");
                          PlantInventory2.CALCSUMS(Quantity);
                          AppendLocationInventory(PlantInventory, PlantInventory2);
                          PlantInventory2.FINDLAST;
                          PlantInventory2.SETRANGE("Plant No.");
                        UNTIL PlantInventory2.NEXT = 0;
                        PlantInventory2.SETRANGE("Plant Type");
                      UNTIL PlantInventory2.NEXT = 0
                    ELSE
                      PlantInventory2.FINDLAST;
                    PlantInventory2.SETRANGE(Location);
              UNTIL PlantInventory2.NEXT = 0;

            IF GUIALLOWED THEN
              XMLDOMManagement4PS.SaveXMLToClientFile(DOMDocument, FileName)
            ELSE
              DOMDocument.Save(FileName);

            IF GUIALLOWED THEN
              Window.CLOSE;
          END;

  }
  CODE
  {
    VAR
      UtilityFunctions@1100525003 : Codeunit 11012318;
      DOMDocument@1100525002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      Window@1100525000 : Dialog;
      Text000@1100525001 : TextConst 'DEU=Werkzeuglager exportieren...;ENU=Exporting Plant Inventory...;NLD=Materieelvoorraad exporteren...;SVE=Exporterar Maskinslager ...';

    PROCEDURE AppendLocationInventory@1100525007(ParentNode@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";PlantInventory@1100525001 : Record 11012555);
    VAR
      PlantInventory2@1100525003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      Dummy@1100525002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
    BEGIN
      AppendElement(ParentNode, 'plantinventory', '', PlantInventory2);
      AppendElement(PlantInventory2, 'location', PlantInventory.Location, Dummy);
      AppendElement(PlantInventory2, 'planttype', PlantInventory."Plant Type", Dummy);
      AppendElement(PlantInventory2, 'plantno', PlantInventory."Plant No.", Dummy);
      AppendElement(PlantInventory2, 'quantity', UtilityFunctions.FormatDecimal(PlantInventory.Quantity), Dummy);
    END;

    LOCAL PROCEDURE AppendElement@1100525004(ParentNode@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";Name@1100525001 : Text[80];Value@1100525003 : Text[1024];VAR NewElement@1100525002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement");
    VAR
      TextNode@1100525004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlText";
    BEGIN
      NewElement := DOMDocument.CreateElement(Name);

      IF Value <> '' THEN BEGIN
        TextNode := DOMDocument.CreateTextNode(Value);
        NewElement.AppendChild(TextNode);
      END;

      ParentNode.AppendChild(NewElement);
    END;

    LOCAL PROCEDURE FileName@1100525010() : Text[260];
    VAR
      PlantMgtFileExchangeSetup@1100525000 : Record 11125655;
    BEGIN
      PlantMgtFileExchangeSetup.GET;
      PlantMgtFileExchangeSetup.TESTFIELD("Export Path");

      EXIT(
        STRSUBSTNO('%1\plantinventory%2.xml', DELCHR(PlantMgtFileExchangeSetup."Export Path", '>', '\'),
          UtilityFunctions.FileNameDateTime));
    END;

    BEGIN
    END.
  }
}

