OBJECT Table 11020628 Project Currency Exchange Rate
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Currency Code;
    CaptionML=[ENU=Project Currency Exchange Rate;
               NOR=Valutakurs for prosjektvaluta;
               SVE=V„xelkurs f”r projektvaluta];
    LookupPageID=Page483;
    DrillDownPageID=Page483;
  }
  FIELDS
  {
    { 1   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Currency Code" = "Relational Currency Code" THEN
                                                                  ERROR(
                                                                    Text000,FIELDCAPTION("Currency Code"),FIELDCAPTION("Relational Currency Code"));
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 2   ;   ;Starting Date       ;Date          ;CaptionML=[ENU=Starting Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum];
                                                   NotBlank=Yes }
    { 3   ;   ;Exchange Rate Amount Sales;Decimal ;OnValidate=BEGIN
                                                                TESTFIELD("Exchange Rate Amount Sales");
                                                              END;

                                                   CaptionML=[ENU=Exchange Rate Amount Sales;
                                                              NOR=Valutakursbel›p, salg;
                                                              SVE=Valutakurs belopp];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 4   ;   ;Adjustment Exch. Rate Amount;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Adjustment Exch. Rate Amount");
                                                              END;

                                                   CaptionML=[ENU=Adjustment Exch. Rate Amount;
                                                              NOR=Justering valutakursbel›p;
                                                              SVE=Justering valutakursbelopp];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 5   ;   ;Relational Currency Code;Code10    ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Currency Code" = "Relational Currency Code" THEN
                                                                  ERROR(
                                                                    Text000,FIELDCAPTION("Currency Code"),FIELDCAPTION("Relational Currency Code"));
                                                              END;

                                                   CaptionML=[ENU=Relational Currency Code;
                                                              NOR=Tilh›rende valutakode;
                                                              SVE=Relationsvalutakod] }
    { 6   ;   ;Relat. Exch. Rate Amt Sales;Decimal;OnValidate=BEGIN
                                                                TESTFIELD("Relat. Exch. Rate Amt Sales");
                                                              END;

                                                   CaptionML=[ENU=Relational Exch. Rate Amount Sales;
                                                              NOR=Tilh›rende valutakursbel›p;
                                                              SVE=Relationsvalutakurs belopp];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 7   ;   ;Fix Exchange Rate Amount;Option    ;CaptionML=[ENU=Fix Exchange Rate Amount;
                                                              NOR=Fast valutakursbel›p;
                                                              SVE=Fast valutakursbelopp];
                                                   OptionCaptionML=[ENU=Currency,Relational Currency,Both;
                                                                    NOR=Valuta,Relasjonsvaluta,Begge;
                                                                    SVE=Valuta,Relationsvaluta,B†da];
                                                   OptionString=Currency,Relational Currency,Both }
    { 8   ;   ;Relational Adjmt Exch Rate Amt;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Relational Adjmt Exch Rate Amt");
                                                              END;

                                                   CaptionML=[ENU=Relational Adjmt Exch Rate Amt;
                                                              NOR=Just. relasjonsvalutakurs bel›p;
                                                              SVE=Just. relationsvalutakurs bel.];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr] }
    { 11  ;   ;Description         ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning];
                                                   Editable=No }
    { 11012000;;Exchange Rate Amount Purchase;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Exchange Rate Amount Purchase");
                                                              END;

                                                   CaptionML=[ENU=Exchange Rate Amount Purchase;
                                                              NOR=Valutakursbel›p, innkj›p;
                                                              SVE=V„xelkursbelopp, ink”p];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 11012001;;Relat. Exch. Rate Amt Purchase;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Relat. Exch. Rate Amt Purchase");
                                                              END;

                                                   CaptionML=[ENU=Relational Exch. Rate Amount Purchase;
                                                              NOR=Relasjonsvalutakurs, Innkj›psbel›p;
                                                              SVE=Relationsv„xelkurs Ink”psbelopp];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
  }
  KEYS
  {
    {    ;Project No.,Currency Code,Starting Date ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The currency code in the %1 field and the %2 field cannot be the same.;NOR=Valutakoden i feltet %1 og i feltet %2 kan ikke v‘re den samme.;SVE=Det f†r inte vara samma valutakod i f„ltet %1 och f„ltet %2.';
      ProjRec@1100528200 : Record 11072003;
      IsReady@1210190000 : Boolean;

    PROCEDURE FindCurrency@7(Project@1100525000 : Code[20];Date@1000 : Date;CurrencyCode@1001 : Code[10];VAR CurrencyExchRateRec@1100525001 : Record 330) : Boolean;
    VAR
      ProjectCurrencyExchRateRec@1100525010 : Record 11020628;
    BEGIN
      IF CURRENTCOMPANY <> COMPANYNAME THEN BEGIN
        ProjectCurrencyExchRateRec.CHANGECOMPANY(CURRENTCOMPANY);
        ProjRec.CHANGECOMPANY(CURRENTCOMPANY);
      END;
      ProjectCurrencyExchRateRec.SETRANGE("Project No.", Project);
      ProjectCurrencyExchRateRec.SETRANGE("Currency Code",CurrencyCode);
      ProjectCurrencyExchRateRec.SETRANGE("Starting Date",0D,Date);
      IF ProjectCurrencyExchRateRec.FINDLAST THEN BEGIN
        CurrencyExchRateRec.TRANSFERFIELDS(ProjectCurrencyExchRateRec);
        EXIT(TRUE);
      END ELSE BEGIN
        IF ProjRec.GET(Project) THEN BEGIN
          IF (ProjRec."Main Project" <> '') AND (ProjRec."Main Project" <> Project) THEN BEGIN
            ProjectCurrencyExchRateRec.SETRANGE("Project No.", ProjRec."Main Project");
            IF ProjectCurrencyExchRateRec.FINDLAST THEN BEGIN
              CurrencyExchRateRec.TRANSFERFIELDS(ProjectCurrencyExchRateRec);
              EXIT(TRUE);
            END;
          END;
        END;
        EXIT(FALSE);
      END;
    END;

    PROCEDURE CopyExchRates@1100528200(General@1100528200 : Boolean;JobNoFrom@1100528201 : Code[20];JobNoTo@1100528202 : Code[20];CurrencyCode@1100528203 : Code[10]);
    BEGIN
      IF General THEN
        CopyExchRatesGeneral(JobNoTo, CurrencyCode)
      ELSE
        CopyExchRatesProject(JobNoFrom, JobNoTo, CurrencyCode)
    END;

    PROCEDURE CopyExchRatesGeneral@1100528201(JobNoTo@1100528202 : Code[20];CurrencyCode@1100528203 : Code[10]);
    VAR
      CurrencyExchRateRec@1100528200 : Record 330;
      ProjectCurrencyExchRateRec@1100528201 : Record 11020628;
      ProjectCurrencyExchRateRec2@1100525000 : Record 11020628;
    BEGIN
      IF JobNoTo = '' THEN EXIT;
      //** M C003144 - Copy may not delete the existing lines.
      //ProjectCurrencyExchRateRec.RESET;
      //ProjectCurrencyExchRateRec.SETRANGE("Project No.", JobNoTo);
      //ProjectCurrencyExchRateRec.SETRANGE("Currency Code",CurrencyCode);
      //ProjectCurrencyExchRateRec.DELETEALL;
      CurrencyExchRateRec.RESET;
      CurrencyExchRateRec.SETRANGE("Currency Code",CurrencyCode);
      IF CurrencyExchRateRec.FINDLAST THEN BEGIN
        IsReady := FALSE;
        REPEAT
          ProjectCurrencyExchRateRec.TRANSFERFIELDS(CurrencyExchRateRec);
          ProjectCurrencyExchRateRec.VALIDATE("Project No.", JobNoTo);
          IF ProjectCurrencyExchRateRec2.GET(
            ProjectCurrencyExchRateRec."Project No.",
            ProjectCurrencyExchRateRec."Currency Code",
            ProjectCurrencyExchRateRec."Starting Date") THEN
              ProjectCurrencyExchRateRec.MODIFY(TRUE) //** M C00314
            ELSE
              ProjectCurrencyExchRateRec.INSERT(TRUE);

          IF ProjectCurrencyExchRateRec."Starting Date" <= TODAY THEN
            IsReady := TRUE;                                            //M26276
        UNTIL IsReady OR (CurrencyExchRateRec.NEXT(-1) = 0);
      END;
    END;

    PROCEDURE CopyExchRatesProject@1100528202(JobNoFrom@1100528200 : Code[20];JobNoTo@1100528201 : Code[20];CurrencyCode@1100528202 : Code[10]);
    VAR
      ProjectCurrencyExchRateRecFrom@1100528203 : Record 11020628;
      ProjectCurrencyExchRateRecTo@1100528204 : Record 11020628;
      ProjectCurrencyExchRateRecTo2@1100525000 : Record 11020628;
    BEGIN
      IF JobNoTo = '' THEN EXIT;

      //** M C003144 - Copy may not delete the existing lines.
      //ProjectCurrencyExchRateRecTo.RESET;
      //ProjectCurrencyExchRateRecTo.SETRANGE("Project No.", JobNoTo);
      //ProjectCurrencyExchRateRecTo.SETRANGE("Currency Code",CurrencyCode);
      //ProjectCurrencyExchRateRecTo.DELETEALL;

      ProjectCurrencyExchRateRecFrom.RESET;
      ProjectCurrencyExchRateRecFrom.SETRANGE("Project No.", JobNoFrom);
      ProjectCurrencyExchRateRecFrom.SETRANGE("Currency Code",CurrencyCode);
      IF ProjectCurrencyExchRateRecFrom.FINDLAST THEN BEGIN
        IsReady := FALSE;
        REPEAT
          ProjectCurrencyExchRateRecTo.TRANSFERFIELDS(ProjectCurrencyExchRateRecFrom);
          ProjectCurrencyExchRateRecTo.VALIDATE("Project No.", JobNoTo);

          IF ProjectCurrencyExchRateRecTo2.GET(
            ProjectCurrencyExchRateRecTo."Project No.",
            ProjectCurrencyExchRateRecTo."Currency Code",
            ProjectCurrencyExchRateRecTo."Starting Date") THEN BEGIN
              ProjectCurrencyExchRateRecTo.TRANSFERFIELDS(ProjectCurrencyExchRateRecTo, FALSE);
              ProjectCurrencyExchRateRecTo2.MODIFY(TRUE) //** M C00314
            END ELSE
              ProjectCurrencyExchRateRecTo.INSERT(TRUE);

          IF ProjectCurrencyExchRateRecTo."Starting Date" <= TODAY THEN
            IsReady := TRUE;                                          //M26276
        UNTIL IsReady OR (ProjectCurrencyExchRateRecFrom.NEXT(-1) = 0);
      END;
    END;

    LOCAL PROCEDURE GetCurrencyFactor@1100528601(IUseSalesExchange@1100528600 : Boolean;ICurrencyCode@1100525001 : Code[10];IProjectNo@1100525002 : Code[20];ICustomerNo@1100525003 : Code[20];IRefDate@1100525004 : Date) : Decimal;
    VAR
      CurrencyExchangeRate@1100528601 : Record 330;
    BEGIN
      //DP00886
      //Type: 0=General, 1=Project, 2=Estimate
      EXIT(CurrencyExchangeRate.ExchangeRate(1, IProjectNo, IRefDate, ICurrencyCode, IUseSalesExchange));
    END;

    LOCAL PROCEDURE GetReferenceDateCurrency@1100525005(IProjectNo@1100525002 : Code[20];ICustomerNo@1100525001 : Code[20]) RefDate : Date;
    VAR
      ProjectPrincipal@1100525000 : Record 11012005;
    BEGIN
      //DP00886
      IF NOT ProjRec.GET(IProjectNo) THEN ProjRec.INIT;  //C036078
      IF ProjectPrincipal.GET(IProjectNo, ICustomerNo) THEN
        RefDate := ProjectPrincipal."Order Date";
      IF ProjRec."Reference Date (Currency)" > RefDate THEN
        RefDate := ProjRec."Reference Date (Currency)";
      IF RefDate = 0D THEN
        RefDate := TODAY;
      EXIT(RefDate);
    END;

    PROCEDURE ExchangeAmtLCYToFCY@1100528602(IAmount@1100528601 : Decimal;IUseSalesExchange@1100528602 : Boolean;IUsePriceRounding@1100528605 : Boolean;ICurrencyCode@1100525001 : Code[10];IProjectNo@1100525003 : Code[20];ICustomerNo@1100525002 : Code[20];IRefDate@1100525005 : Date) : Decimal;
    VAR
      CurrencyExchangeRate@1100528600 : Record 330;
      Currency@1100528604 : Record 4;
      Amount@1100528603 : Decimal;
      RefDate@1100525000 : Date;
      CurrencyFactor@1100525004 : Decimal;
    BEGIN
      //DP00886
      IF ICurrencyCode = '' THEN
        EXIT(IAmount);
      IF IRefDate <> 0D THEN
        RefDate := IRefDate
      ELSE
        RefDate := GetReferenceDateCurrency(IProjectNo, ICustomerNo);
      CurrencyFactor := GetCurrencyFactor(IUseSalesExchange, ICurrencyCode, IProjectNo, ICustomerNo, RefDate);
      Amount := CurrencyExchangeRate.ExchangeAmtLCYToFCY(
        1, IProjectNo, RefDate, ICurrencyCode, IAmount, CurrencyFactor, IUseSalesExchange);  //db, 01-11-16
      IF NOT Currency.GET(ICurrencyCode) THEN
        Currency.InitRoundingPrecision;
      IF IUsePriceRounding THEN
        Amount := ROUND(Amount, Currency."Unit-Amount Rounding Precision")
      ELSE
        Amount := ROUND(Amount, Currency."Amount Rounding Precision");
      EXIT(Amount);
    END;

    PROCEDURE ExchangeAmtFCYToLCY@1100525010(IAmount@1100528601 : Decimal;IUseSalesExchange@1100528602 : Boolean;IUsePriceRounding@1100528605 : Boolean;ICurrencyCode@1100525001 : Code[10];IProjectNo@1100525003 : Code[20];ICustomerNo@1100525002 : Code[20];IRefDate@1100525005 : Date) : Decimal;
    VAR
      CurrencyExchangeRate@1100528600 : Record 330;
      Currency@1100528604 : Record 4;
      Amount@1100528603 : Decimal;
      RefDate@1100525000 : Date;
      CurrencyFactor@1100525004 : Decimal;
    BEGIN
      //DP00886
      IF ICurrencyCode = '' THEN
        EXIT(IAmount);
      IF IRefDate <> 0D THEN
        RefDate := IRefDate
      ELSE
        RefDate := GetReferenceDateCurrency(IProjectNo, ICustomerNo);
      CurrencyFactor := GetCurrencyFactor(IUseSalesExchange, ICurrencyCode, IProjectNo, ICustomerNo, RefDate);
      Amount := CurrencyExchangeRate.ExchangeAmtFCYToLCY(
        1, IProjectNo, RefDate, ICurrencyCode, IAmount, CurrencyFactor, IUseSalesExchange);  //db, 01-11-16
      Currency.InitRoundingPrecision;
      IF IUsePriceRounding THEN
        Amount := ROUND(Amount, Currency."Unit-Amount Rounding Precision")
      ELSE
        Amount := ROUND(Amount, Currency."Amount Rounding Precision");
      EXIT(Amount);
    END;

    PROCEDURE ExchangeAmtFCYToFCY@1100528604(IAmount@1100528606 : Decimal;IFromCurrencyCode@1100528604 : Code[10];IToCurrencyCode@1100528605 : Code[10];IUseSalesExchange@1100528607 : Boolean;IUsePriceRounding@1100528608 : Boolean;IProjectNo@1100525002 : Code[20];ICustomerNo@1100525001 : Code[20];IRefDate@1100525003 : Date) : Decimal;
    VAR
      CurrencyExchangeRate@1100528603 : Record 330;
      Currency@1100528602 : Record 4;
      CurrencyFactor@1100528609 : Decimal;
      Amount@1100528601 : Decimal;
      RefDate@1100525000 : Date;
    BEGIN
      //DP00886
      IF IRefDate <> 0D THEN
        RefDate := IRefDate
      ELSE
        RefDate := GetReferenceDateCurrency(IProjectNo, ICustomerNo);
      Amount := IAmount;
      IF IFromCurrencyCode <> '' THEN BEGIN
        CurrencyFactor := CurrencyExchangeRate.ExchangeRate(1, IProjectNo, RefDate, IFromCurrencyCode, IUseSalesExchange);
        Amount := CurrencyExchangeRate.ExchangeAmtFCYToLCY(1, IProjectNo, RefDate, IFromCurrencyCode, Amount, CurrencyFactor, IUseSalesExchange);
      END;
      IF IToCurrencyCode <> '' THEN BEGIN
        CurrencyFactor := CurrencyExchangeRate.ExchangeRate(1, IProjectNo, RefDate, IToCurrencyCode, IUseSalesExchange);
        Amount := CurrencyExchangeRate.ExchangeAmtLCYToFCY(1, IProjectNo, RefDate, IToCurrencyCode, Amount, CurrencyFactor, IUseSalesExchange);
      END;
      IF NOT Currency.GET(IToCurrencyCode) THEN
        Currency.InitRoundingPrecision;
      IF IUsePriceRounding THEN
        Amount := ROUND(Amount, Currency."Unit-Amount Rounding Precision")
      ELSE
        Amount := ROUND(Amount, Currency."Amount Rounding Precision");
      EXIT(Amount);
    END;

    BEGIN
    END.
  }
}

