OBJECT Page 11012014 Extension List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Extension Contracts;
               NOR=ETA-liste;
               SVE=ŽTA-lista];
    SourceTable=Table11012004;
    DataCaptionFields=Project No.;
    PageType=List;
    UsageCategory=Lists;
    CardPageID=Extension Contract;
    OnInit=BEGIN
             ExtensionButtonENABLE := TRUE;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 //Disable Menubutton if called from other company
                 ExtensionButtonENABLE := (CURRENTCOMPANY = COMPANYNAME);
               END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190003;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1210190010;1 ;ActionGroup;
                      CaptionML=[ENU=&Print;
                                 NOR=Skriv &ut;
                                 SVE=Skriv &ut];
                      Enabled=ExtensionButtonENABLE }
      { 1100528401;2 ;Action    ;
                      CaptionML=[ENU=Extension Reports;
                                 NOR=ETA-rapporter;
                                 SVE=ŽTA-rapporter];
                      Promoted=Yes;
                      Enabled=ExtensionButtonENABLE;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 DocumentPrint@1100528400 : Codeunit 229;
                               BEGIN
                                 DocumentPrint.PrintExtensionContract(Rec);
                               END;
                                }
      { 1100528400;2 ;Action    ;
                      CaptionML=[ENU=Budget Reports;
                                 NOR=Budsjettrapporter;
                                 SVE=Budgetrapporter];
                      Visible=FALSE;
                      Enabled=ExtensionButtonENABLE;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 BudgetLine@11012001 : Record 11012001;
                                 DocumentPrint@1100528400 : Codeunit 229;
                               BEGIN
                                 BudgetLine."Project No." := "Project No.";
                                 BudgetLine."Extension Contract" := "Contract No.";
                                 DocumentPrint.PrintBudget(BudgetLine);
                               END;
                                }
      { 1210190001;2 ;Action    ;
                      CaptionML=[ENU=Extension List;
                                 NOR=ETA-liste;
                                 SVE=ŽTA-lista];
                      Visible=FALSE;
                      Enabled=ExtensionButtonENABLE;
                      Image=PrintReport;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 ExtRec."Project No." := "Project No.";
                                 ExtRec.SETRANGE("Project No.","Project No.");
                                 REPORT.RUN(REPORT::"Extension List",TRUE,FALSE,ExtRec);
                               END;
                                }
      { 1100285002;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100285003;1 ;ActionGroup;
                      Name=<Action1100285003>;
                      CaptionML=[ENU=&Functions;
                                 NOR=&Funksjoner;
                                 SVE=&Funktioner];
                      Enabled=ExtensionButtonENABLE }
      { 1100285000;2 ;Action    ;
                      CaptionML=[ENU=Release extension contract;
                                 NOR=Frigi ETA;
                                 SVE=Sl„pp ŽTA];
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lReleaseExtContract@1100285001 : Page 11125023;
                                 lProjInst@1100285000 : Record 11012018;
                                 lProjInstModify@1100285007 : Record 11012018;
                                 lOption@1100285003 : Integer;
                                 lText001@1100285004 : TextConst 'ENU="Project %1:Contract No. %2\More installments available\Which ones to set chargable? ";NOR=Prosjekt %1, Kontraktsnr %2\Det finnes flere betalingsplaner\Hvilken skal settes til fakturerbar?;SVE="Projekt %1, Kontraktsnr %2\Det finns flera betalplaner\Vilken skall s„ttas till faktureringsbar? "';
                                 lText000@1100285005 : TextConst 'ENU=Only the First, All Installments;NOR=Kun den f›rste,Alle betalingsplaner;SVE=Endast f”rsta,Alla betalplaner';
                                 lExtContract@1100285006 : Record 11012004;
                                 lProjectNo@1100285008 : Code[20];
                                 bmultipleRec@1100285009 : Boolean;
                                 bTest@1100285010 : Boolean;
                                 lTextTmp@1100285011 : Text[200];
                                 ErrorMsg@1100285012 : Text[200];
                                 lbError@1100285013 : Boolean;
                               BEGIN
                                 //IMSE-011
                                 //CurrPage.SETSELECTIONFILTER(Rec);
                                 lExtContract.COPYFILTERS(Rec);
                                 WITH lExtContract DO BEGIN
                                   IF FINDSET THEN
                                      BEGIN
                                        IF COUNT > 1 THEN
                                           bmultipleRec := TRUE
                                        ELSE
                                           bmultipleRec := FALSE;
                                        REPEAT
                                          //130904 +++
                                          lbError := FALSE;
                                          //130904 ---
                                          IF (Status <> Status :: Expired) THEN
                                             BEGIN
                                               // Test +++
                                               IF ("Settlement Method" = "Settlement Method" :: "Fixed Price") THEN
                                                  BEGIN
                                                    IF ("Installment Scheme"    = ''   ) OR
                                                       ("Generate Installments" = FALSE) OR
                                                       ("Contract Amount"       = 0    ) THEN
                                                    BEGIN
                                                       ErrorMsg := '';
                                                       //
                                                       IF ("Contract Amount" = 0 ) THEN
                                                          ErrorMsg := Text001;
                                                       //
                                                       IF ("Generate Installments" = FALSE) THEN BEGIN
                                                          IF (ErrorMsg = '') THEN
                                                              ErrorMsg := Text002
                                                           ELSE
                                                              ErrorMsg := ErrorMsg + '\' + Text002;
                                                       END;
                                                       //
                                                       IF ("Installment Scheme" = '') THEN BEGIN
                                                          IF (ErrorMsg = '') THEN
                                                             ErrorMsg := Text003
                                                          ELSE
                                                             ErrorMsg := ErrorMsg + '\' + Text003;
                                                       END;
                                                       //
                                                       ErrorMsg := ErrorMsg + '\' + Text004;
                                                       //
                                                       MESSAGE (ErrorMsg,"Project No.","Contract No.");
                                                       //130904 +++
                                                       lbError := TRUE;
                                                       //130904 ---
                                                     END;
                                                  END;
                                               //
                                               TESTFIELD("Extension Fixed", FALSE);
                                               // Test ---
                                               //130904 +++
                                               IF NOT lbError THEN BEGIN
                                               //130904 ---
                                                 CLEAR(lReleaseExtContract);
                                                 lReleaseExtContract.InitExtensionContract(lExtContract);
                                                 //
                                                 IF bmultipleRec THEN
                                                    lReleaseExtContract.MultiProcessExtensionContract
                                                 ELSE
                                                    lReleaseExtContract.RUNMODAL;
                                                 //
                                                 IF "Settlement Method" = "Settlement Method" :: "Fixed Price" THEN
                                                    BEGIN
                                                      lProjInst.RESET;
                                                      lProjInst.SETRANGE("Project No."        , "Project No.");
                                                      lProjInst.SETRANGE("Extension Contract" , "Contract No.");
                                                      lProjInst.SETRANGE(Chargeable,FALSE);
                                                      IF lProjInst.FINDFIRST THEN
                                                         BEGIN
                                                           IF lProjInst.COUNT = 1 THEN
                                                              BEGIN
                                                                //IF lProjInst.CheckChargebleAllowed(FALSE) THEN
                                                                   BEGIN
                                                                     lProjInstModify := lProjInst;
                                                                     lProjInstModify.Chargeable := TRUE;
                                                                     lProjInstModify.MODIFY;
                                                                   END;
                                                              END;
                                                           IF lProjInst.COUNT > 1 THEN
                                                              BEGIN
                                                                lTextTmp :='';
                                                                lTextTmp :=STRSUBSTNO(lText001,"Project No.","Contract No.");
                                                                lOption := DIALOG.STRMENU(lText000,1,lTextTmp);
                                                                CASE lOption OF
                                                                1: BEGIN
                                                                     //IF lProjInst.CheckChargebleAllowed(FALSE) THEN
                                                                        BEGIN
                                                                          lProjInstModify := lProjInst;
                                                                          lProjInstModify.Chargeable := TRUE;
                                                                          lProjInstModify.MODIFY;
                                                                        END;
                                                                   END;
                                                                2: BEGIN
                                                                     REPEAT
                                                                     //IF lProjInst.CheckChargebleAllowed(FALSE) THEN
                                                                        BEGIN
                                                                          lProjInstModify := lProjInst;
                                                                          lProjInstModify.Chargeable := TRUE;
                                                                          lProjInstModify.MODIFY;
                                                                        END;
                                                                     UNTIL lProjInst.NEXT = 0;
                                                                   END;
                                                                END;
                                                              END;
                                                         END;
                                                     END;
                                                 END;
                                               COMMIT;
                                          END;
                                       UNTIL lExtContract.NEXT = 0;
                                     END;
                                   //
                                   MARKEDONLY(FALSE);
                                 END;
                                 CurrPage.UPDATE;
                                 //
                               END;
                                }
      { 1100285001;2 ;Action    ;
                      CaptionML=[ENU=Create Invoice;
                                 NOR=Opprette faktura;
                                 SVE=Skapa faktura];
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Job@1100285001 : Record 11072003;
                                 lText001@1100285002 : TextConst 'ENU=Settlement Method is not "Fixed Price" for Project %1, Contract No. %2\Invoice will not be created;NOR=Oppgj›rsmetode er ikke "Fast pris" for prosjekt %1, Kontraktsnr. %2\Faktura vil ikke opprettes;SVE=Avr„kningsmetod „r inte "Fast pris" f”r Projekt %1, Kontraktsnr %2\Faktura kommer inte att skapas';
                                 lExecute@1100285004 : Boolean;
                                 lText002@1100285003 : TextConst 'ENU=Extension status is not "Invoicing Allowed" for Project %1, Contract No. %2\Invoice will not be created;NOR=ETA status er ikke "Fakturering tillatt" for prosjekt %1, Kontraktsnr. %2\Faktura vil ikke opprettes;SVE=ŽTA status „r inte "Fakturing till†ten" f”r Projekt %1, Kontraktsnr %2\Faktura kommer inte att skapas';
                                 lText003@1100285005 : TextConst 'ENU=Installments of Extension are not "Chargeable" for Project %1, Contract No. %2\Invoice will not be created;NOR=Betalingsplan for ETA er ikke satt til "belastbar" for prosjekt %1, Kontraktsnr %2\Faktura vil ikke opprettes;SVE=Betalplan f”r ŽTA „r inte satt till "Faktureringsbar" f”r Projekt %1, Kontraktsnr %2\Faktura kommer inte att skapas';
                                 lProjInst@1100285006 : Record 11012018;
                                 lExtContract@1000 : Record 11012004;
                               BEGIN
                                 //>>170817 ITERO.FH
                                 //>>IMSE-011
                                 ////CurrPage.SETSELECTIONFILTER(Rec);
                                 //lExtContract.COPYFILTERS(Rec);
                                 //<<IMSE-011
                                 CurrPage.SETSELECTIONFILTER(lExtContract);
                                 //<<170817 ITERO.FH

                                 WITH lExtContract DO BEGIN
                                   IF FINDSET THEN
                                      BEGIN
                                         REPEAT
                                           lExecute := TRUE;
                                           //-  "settlement method" is "fixed price"
                                           IF "Settlement Method" <> "Settlement Method" :: "Fixed Price" THEN
                                              BEGIN
                                                MESSAGE( lText001,"Project No.","Contract No.");
                                                lExecute := FALSE;
                                              END;
                                           //-Extension status is "invoicing allowed"
                                           IF Status <> Status :: "Invoicing Allowed" THEN
                                              BEGIN
                                                MESSAGE( lText002,"Project No.","Contract No.");
                                                lExecute := FALSE;
                                              END;
                                           //-installments" of extension are not "chargeable"
                                           lProjInst.RESET;
                                           lProjInst.SETRANGE("Project No."        , "Project No.");
                                           lProjInst.SETRANGE("Extension Contract" , "Contract No.");
                                           lProjInst.SETRANGE(Chargeable           , TRUE);
                                           IF NOT lProjInst.FINDFIRST THEN
                                              BEGIN
                                                MESSAGE( lText003,"Project No.","Contract No.");
                                                lExecute := FALSE;
                                              END;

                                           IF lExecute THEN
                                             BEGIN
                                               Job.GET("Project No.");
                                               Job.MARK(TRUE);
                                             END;
                                        UNTIL lExtContract.NEXT = 0;
                                     END;

                                   IF lExecute THEN
                                      BEGIN
                                        Job.MARKEDONLY(TRUE);
                                        REPORT.RUNMODAL(REPORT::"Create Project Invoices", TRUE, FALSE, Job);
                                      END;

                                   Job.MARKEDONLY(FALSE);
                                   MARKEDONLY(FALSE);
                                 END;
                                 CurrPage.UPDATE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Project No." }

    { 1210190002;2;Field  ;
                SourceExpr="Project Description";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="Contract No." }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 8   ;2   ;Field     ;
                SourceExpr=Principal;
                Importance=Standard }

    { 10  ;2   ;Field     ;
                SourceExpr="Principal Name" }

    { 1210190006;2;Field  ;
                SourceExpr="Your Reference";
                Importance=Standard;
                Visible=FALSE }

    { 1210190000;2;Field  ;
                SourceExpr="Contract Serial No.";
                Importance=Standard;
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr="Version Date";
                Visible=FALSE }

    { 1210190004;2;Field  ;
                SourceExpr="Settlement Method";
                Importance=Standard;
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr=Status }

    { 20  ;2   ;Field     ;
                SourceExpr="Offered Amount" }

    { 22  ;2   ;Field     ;
                SourceExpr="Offering Date" }

    { 1100525004;2;Field  ;
                SourceExpr="Treat like Order";
                Visible=FALSE }

    { 1100525006;2;Field  ;
                SourceExpr="Include in Expectation";
                Visible=FALSE }

    { 1100525002;2;Field  ;
                CaptionML=[ENU=Total Budget;
                           NOR=Budsjett Total;
                           SVE=Total budget];
                SourceExpr=Total }

    { 18  ;2   ;Field     ;
                SourceExpr="Contract Amount (LCY)";
                Visible=FALSE }

    { 1100529600;2;Field  ;
                SourceExpr="Contract Amount" }

    { 24  ;2   ;Field     ;
                SourceExpr="Contract Date" }

    { 1100529601;2;Field  ;
                SourceExpr="Contract Currency Code";
                Visible=FALSE }

    { 1100485000;2;Field  ;
                SourceExpr="Due Date" }

    { 1100525000;2;Field  ;
                SourceExpr="Expected Contract Amount";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Installment Scheme";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr="Installments Generated" }

    { 16  ;2   ;Field     ;
                SourceExpr=Finished;
                Importance=Standard }

    { 30  ;2   ;Field     ;
                SourceExpr=Text;
                Visible=FALSE }

    { 1100525001;2;Field  ;
                SourceExpr="Extra Throughput (Days)";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Input by";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                SourceExpr="Input Date";
                Visible=FALSE }

    { 1100529403;2;Field  ;
                Description=BI033;
                SourceExpr=Claim;
                Importance=Additional;
                Visible=FALSE }

    { 1100529404;2;Field  ;
                SourceExpr="Currency Code";
                Importance=Additional;
                Visible=FALSE }

    { 1100525003;2;Field  ;
                Description=BI033;
                SourceExpr="Claim Status";
                Importance=Additional;
                Visible=FALSE }

    { 1100529400;2;Field  ;
                Description=BI033;
                SourceExpr="Identification Date";
                Importance=Additional;
                Visible=FALSE }

    { 1100525005;2;Field  ;
                Description=BI033;
                SourceExpr="Notification Date";
                Importance=Additional;
                Visible=FALSE }

    { 1100529405;2;Field  ;
                SourceExpr="Submission Date";
                Importance=Additional;
                Visible=FALSE }

    { 1100529406;2;Field  ;
                SourceExpr="Applied Amount";
                Importance=Additional;
                Visible=FALSE }

    { 1100529407;2;Field  ;
                SourceExpr="Probability Code";
                Importance=Additional;
                Visible=FALSE }

    { 1100529408;2;Field  ;
                SourceExpr="Probability %";
                Importance=Additional;
                Visible=FALSE }

    { 1100529401;2;Field  ;
                Description=BI033;
                SourceExpr="Final Date";
                Importance=Additional;
                Visible=FALSE }

    { 1100529409;2;Field  ;
                SourceExpr="Agreed Amount";
                Importance=Additional;
                Visible=FALSE }

    { 1100529402;2;Field  ;
                Description=BI033;
                SourceExpr="Cancelled Date";
                Importance=Additional;
                Visible=FALSE }

    { 1100525007;2;Field  ;
                Description=BI033;
                SourceExpr="Related Planning Activity";
                Importance=Additional;
                Visible=FALSE }

    { 1100525008;2;Field  ;
                Description=BI033;
                SourceExpr="Dispute Adjudication Board";
                Importance=Additional;
                Visible=FALSE }

    { 1100525009;2;Field  ;
                Description=BI033;
                SourceExpr="Dispute Adj. Board Number";
                Importance=Additional;
                Visible=FALSE }

    { 1100529410;2;Field  ;
                SourceExpr=Remarks;
                Importance=Additional;
                Visible=FALSE }

    { 1100527300;2;Field  ;
                SourceExpr="Target Amount";
                Visible=FALSE }

    { 1100285300;2;Field  ;
                SourceExpr=Revenues;
                Visible=false }

    { 1100285301;2;Field  ;
                SourceExpr="Extension Category";
                Visible=false }

    { 1100285302;2;Field  ;
                SourceExpr="Internal Reference";
                Visible=false }

    { 1100527450;2;Field  ;
                SourceExpr="Estimated Amount";
                Visible=FALSE }

    { 111280000;2;Field   ;
                SourceExpr="E-Mail Status" }

  }
  CODE
  {
    VAR
      DPA_IsHardFilter@1100000999 : Boolean;
      ExtensionButtonENABLE@1100525000 : Boolean INDATASET;
      ExtRec@1210190001 : Record 11012004;
      Text001@1100528003 : TextConst 'ENU="Contract amount = 0";NOR="Kontraktsbel›p = 0";SVE="Kontraktsbelopp = 0"';
      Text002@1100528002 : TextConst 'ENU=Generete Installment needs to be TRUE;NOR=Opprette betalingsplan m† v‘re SANN;SVE=Skapa betalplan m†ste vara SANN';
      Text003@1100528001 : TextConst 'ENU=Installment Scheme is empty;NOR=Betalingsplan mangler;SVE=Betalplan saknas';
      Text004@1100528000 : TextConst 'ENU=for Project %1, Contract No. %2;NOR=for prosjekt %1, Kontraktsnr %2;SVE=f”r Projekt %1, Kontraktsnr %2';

    BEGIN
    {
      4PS 25-07-16 UKR-C24997 KD: Use extensions to record claims (BI033) - Added fields "Claim Status", "Notification date", "Related planning activity", "Dispute adjudication board", "Dispute adj. board number",
                                                                            "Identification date", "Final date", "Cancelled date", Claim
      130905 ITERO.GH IMSE-011 - FD Make extensions chargeable
      151015 ITERO.SB Added field Revenues
      160314 ITERO.SB RAD-201 New fields, "Extension Category" and "Internal Reference"
      170817 ITERO.FH Removed IMSE-001 in <Action1100285001>. When pressed it was causing she system to create invoices
                      from all Extentions on the page.
      190903 ORANGO.LP CER 30 New field "E-Mail Status"
    }
    END.
  }
}

