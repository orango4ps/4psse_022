OBJECT Codeunit 11012686 Buyer Management Integration
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      OK@1100525000 : TextConst 'ENU=ok;SVE=OK';

    [External]
    PROCEDURE UpdateOptionStatusOffered@1100409000(ProjectNo@1100409001 : Code[20];PlotNo@1100409002 : Code[10];MainGroup@1100409003 : Code[20];Group@1100409004 : Code[20];SubGroup@1100409005 : Code[20];OptionCode@1100409006 : Code[20]);
    VAR
      Option@1100528700 : Record 11012502;
    BEGIN
      UpdateOptionStatus(
        ProjectNo,
        PlotNo,
        MainGroup,
        Group,
        SubGroup,
        OptionCode,
        Option.Status::Offered);
    END;

    [External]
    PROCEDURE UpdateOptionStatusOrder@1100409003(ProjectNo@1100409001 : Code[20];PlotNo@1100409002 : Code[10];MainGroup@1100409003 : Code[20];Group@1100409004 : Code[20];SubGroup@1100409005 : Code[20];OptionCode@1100409006 : Code[20]);
    VAR
      Option@1100409000 : Record 11012502;
    BEGIN
      UpdateOptionStatus(
        ProjectNo,
        PlotNo,
        MainGroup,
        Group,
        SubGroup,
        OptionCode,
        Option.Status::Order);
    END;

    [External]
    PROCEDURE UpdateOptionStatusExpired@1100529400(ProjectNo@1100409001 : Code[20];PlotNo@1100409002 : Code[10];MainGroup@1100409003 : Code[20];Group@1100409004 : Code[20];SubGroup@1100409005 : Code[20];OptionCode@1100409006 : Code[20]);
    VAR
      Option@1100409000 : Record 11012502;
    BEGIN
      UpdateOptionStatus(
        ProjectNo,
        PlotNo,
        MainGroup,
        Group,
        SubGroup,
        OptionCode,
        Option.Status::Expired);
    END;

    LOCAL PROCEDURE UpdateOptionStatus@1100528703(ProjectNo@1100409001 : Code[20];PlotNo@1100409002 : Code[10];MainGroup@1100409003 : Code[20];Group@1100409004 : Code[20];SubGroup@1100409005 : Code[20];OptionCode@1100409006 : Code[20];Status@1100528703 : Option);
    VAR
      Option@1100409000 : Record 11012502;
      OldOption@1100528700 : Record 11012502;
      DeleteBudget@1100528701 : Boolean;
      UpdateBudget@1100528702 : Boolean;
    BEGIN
      AddOptionToPlotIfNotExist(
        ProjectNo,
        PlotNo,
        MainGroup,
        Group,
        SubGroup,
        OptionCode);

      Option.SETRANGE("Project No.", ProjectNo);
      Option.SETRANGE("Plot No.", PlotNo);
      Option.SETRANGE("Main Group", MainGroup);
      Option.SETRANGE(Group, Group);
      Option.SETRANGE("Sub Group", SubGroup);
      Option.SETRANGE(Option, OptionCode);
      IF Option.FINDSET(TRUE) THEN BEGIN
        OldOption := Option;
        Option.VALIDATE(Status, Status);
        Option.UpdateOptQuoteStatus(Option);
        Option.MODIFY(TRUE);

        DeleteBudget := FALSE;
        UpdateBudget := Option.CheckUpdateBudgetOnStatChange(OldOption.Status, Option.Status);
        IF NOT UpdateBudget THEN
          DeleteBudget := Option.CheckDeleteBudgetOnStatChange(OldOption.Status, Option.Status);

        IF UpdateBudget THEN
          Option.UpdateWorkBudgetOnChanges(Option, FALSE, FALSE)
        ELSE BEGIN
          IF DeleteBudget THEN
            Option.UpdateWorkBudgetOnChanges(OldOption, FALSE, TRUE);
        END;
      END ELSE
        ERROR('');
    END;

    [External]
    PROCEDURE UpdateOptionQuantity@1100525000(ProjectNo@1100409001 : Code[20];PlotNo@1100409002 : Code[10];MainGroup@1100409003 : Code[20];Group@1100409004 : Code[20];SubGroup@1100409005 : Code[20];OptionCode@1100409006 : Code[20];Quantity@1100528703 : Decimal);
    VAR
      Option@1100409000 : Record 11012502;
    BEGIN
      AddOptionToPlotIfNotExist(
        ProjectNo,
        PlotNo,
        MainGroup,
        Group,
        SubGroup,
        OptionCode);

      Option.SETRANGE("Project No.", ProjectNo);
      Option.SETRANGE("Plot No.", PlotNo);
      Option.SETRANGE("Main Group", MainGroup);
      Option.SETRANGE(Group, Group);
      Option.SETRANGE("Sub Group", SubGroup);
      Option.SETRANGE(Option, OptionCode);
      IF Option.FINDSET(TRUE) THEN BEGIN
        IF Option.Quantities THEN BEGIN
          Option.VALIDATE(Quantity, Quantity);
          Option.MODIFY(TRUE);
        END;
      END ELSE
        ERROR('');
    END;

    [External]
    PROCEDURE AddOptionToPlot@1100525001(ProjectNo@1100529400 : Code[20];PlotNo@1100529401 : Code[10];HouseModel@1100529402 : Code[20];MainGroup@1100529403 : Code[20];Group@1100529404 : Code[20];SubGroup@1100529405 : Code[20];OptionCode@1100529406 : Code[20]) : Text;
    VAR
      BuyersManagement@1100528702 : Codeunit 11012500;
      Plot@1100528710 : Record 11012500;
      Option@1100528709 : Record 11012502;
      LevelFrom@1100528701 : 'Standard,Project,Plot';
      LevelTo@1100528700 : 'Standard,Project,Plot';
    BEGIN
      Plot.GET(ProjectNo, PlotNo);
      Option.GET(ProjectNo, '', HouseModel, MainGroup, Group, SubGroup, OptionCode);

      BuyersManagement.BmCopyOptions(LevelFrom::Project, LevelTo::Plot, ProjectNo, ProjectNo, '',
          PlotNo, Plot."House Model", Plot."House Model",
          MainGroup, '', Group, '', SubGroup, '', OptionCode, '', TRUE);
      EXIT(OK);
    END;

    LOCAL PROCEDURE AddOptionToPlotIfNotExist@1100528700(ProjectNo@1100528708 : Code[20];PlotNo@1100528707 : Code[10];MainGroup@1100528706 : Code[20];Group@1100528705 : Code[20];SubGroup@1100528704 : Code[20];OptionCode@1100528703 : Code[20]);
    VAR
      BuyersManagement@1100528702 : Codeunit 11012500;
      Plot@1100528710 : Record 11012500;
      Option@1100528709 : Record 11012502;
      LevelFrom@1100528701 : 'Standard,Project,Plot';
      LevelTo@1100528700 : 'Standard,Project,Plot';
    BEGIN
      IF NOT Plot.GET(ProjectNo, PlotNo) THEN
        ERROR('');

      Option.SETRANGE("Project No.", ProjectNo);
      Option.SETRANGE("Plot No.", PlotNo);
      Option.SETRANGE("Main Group", MainGroup);
      Option.SETRANGE(Group, Group);
      Option.SETRANGE("Sub Group", SubGroup);
      Option.SETRANGE(Option, OptionCode);
      IF NOT Option.FINDFIRST THEN
        BuyersManagement.BmCopyOptions(
          LevelFrom::Project,
          LevelTo::Plot,
          ProjectNo,
          ProjectNo,
          '',
          PlotNo,
          Plot."House Model",
          Plot."House Model",
          MainGroup,
          '',
          Group,
          '',
          SubGroup,
          '',
          OptionCode,
          '',
          TRUE);
    END;

    [External]
    PROCEDURE ProcessContactImport@1100527000(ContactImportID@1100527003 : Integer) : Code[20];
    VAR
      ContactImport@1100527000 : Record 11130045;
      Contact@1100527001 : Record 5050;
      Plot@1100527002 : Record 11012500;
    BEGIN
      WITH ContactImport DO BEGIN
        IF GET(ContactImportID) THEN
          IF Status = Status::Unprocessed THEN BEGIN
            Contact.INIT;
            Contact.Type := Contact.Type::Person;
            IF (ContactImport."Contact No." <> '') THEN BEGIN
              Contact.GET(ContactImport."Contact No.")
            END
            ELSE BEGIN
              Contact.InsertingIsAllowed(TRUE);
              Contact.InitNoSeriesPerson;
              Contact.INSERT(TRUE);
            END;

            Contact.Gender := Gender;
            Contact."First Name" := "First Name";
            Contact."Middle Name" := "Middle Name";
            Contact.Surname := Surname;
            Contact.Initials := Initials;
            Contact.Address := Address;
            Contact."Address 2" := "Address 2";
            Contact.City := City;
            Contact."Post Code" := "Post Code";
            Contact."Phone No." := "Phone No.";
            Contact."Phone No. 2" := "Phone No. 2";
            Contact."Mobile Phone No." := "Mobile Phone No.";
            Contact."Mobile Phone No. 2" := "Mobile Phone No. 2";
            Contact."E-Mail" := "E-Mail";
            Contact."E-Mail 2" := "E-Mail 2";
            Contact."Initials 2" := "Initials 2";
            Contact."First Name 2" := "First Name 2";
            Contact."Middle Name 2" := "Middle Name 2";
            Contact."Surname 2" := "Surname 2";
            Contact."Gender 2" := "Gender 2";
            Contact."Title Behind the Name" := "Title Behind the Name";
            Contact."Title Behind the Name 2" := "Title Behind the Name 2";
            Contact."Name Abbreviation" := "Name Abbreviation";
            Contact."Name Abbreviation 2" := "Name Abbreviation 2";
            Contact."Project No." := "Job No.";
            Contact."Plot No." := "Plot No.";
            Contact.Title := Title;
            Contact."Title 2" := "Title 2";
            Contact."Job Title" := "Job Title";
            Contact."Job Title 2" := "Job Title 2";
            Contact.MODIFY(TRUE);

            IF Plot.GET("Job No.","Plot No.") THEN BEGIN
              Plot.Buyer := Contact."No.";
              Plot.MODIFY(TRUE);
            END;

            Status := Status::Processed;
            MODIFY;
          END;
      END;

      EXIT(Contact."No.");
    END;

    [External]
    PROCEDURE UpdateOptionSalesAmountinclVAT@1100528500(ProjectNo@1100409001 : Code[20];PlotNo@1100409002 : Code[10];MainGroup@1100409003 : Code[20];Group@1100409004 : Code[20];SubGroup@1100409005 : Code[20];OptionCode@1100409006 : Code[20];SalesAmountinclVAT@1100528703 : Decimal);
    VAR
      Option@1100409000 : Record 11012502;
    BEGIN
      AddOptionToPlotIfNotExist(
        ProjectNo,
        PlotNo,
        MainGroup,
        Group,
        SubGroup,
        OptionCode);

      Option.SETRANGE("Project No.", ProjectNo);
      Option.SETRANGE("Plot No.", PlotNo);
      Option.SETRANGE("Main Group", MainGroup);
      Option.SETRANGE(Group, Group);
      Option.SETRANGE("Sub Group", SubGroup);
      Option.SETRANGE(Option, OptionCode);
      IF Option.FINDSET(TRUE) THEN BEGIN
        Option.VALIDATE("Sales Amount incl. VAT", SalesAmountinclVAT);
        Option.MODIFY(TRUE);
      END ELSE
        ERROR('');
    END;

    [External]
    PROCEDURE UpdatePlotSalesStatus@1100528501(ProjectNo@1100528501 : Code[20];PlotNo@1100528500 : Code[10];SalesStatus@1100528503 : ' ,Option,Under Negotiation,Provisional Contract,Consideration Time,Sold,Transferred');
    VAR
      Plot@1100528502 : Record 11012500;
    BEGIN
      IF (Plot.GET(ProjectNo, PlotNo)) THEN BEGIN
        Plot.VALIDATE("Sales Status",SalesStatus);
        Plot.MODIFY(TRUE);
      END
    END;

    [External]
    PROCEDURE AddServiceCall@1100528303(BMIServiceCallWS@1100528300 : XMLport 11012175) : Text;
    BEGIN
      BMIServiceCallWS.IMPORT;
      EXIT(BMIServiceCallWS.GetCallNo);
    END;

    [External]
    PROCEDURE AddServiceText@1100528306(CTRLServiceTextWS@1100528300 : XMLport 11012176) : Text;
    BEGIN
      CTRLServiceTextWS.IMPORT;
      EXIT(FORMAT(CTRLServiceTextWS.GetNoOfLines));
    END;

    BEGIN
    {
      This page is designed for integration with kopersbegeleiding.nl.
    }
    END.
  }
}

