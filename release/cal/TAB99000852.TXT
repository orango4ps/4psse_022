OBJECT Table 99000852 Production Forecast Entry
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ForecastEntry@1000 : Record 99000852;
               Item@1100525000 : Record 27;
               CalendarMgmt@1100525001 : Codeunit 7600;
               CalChange@1100525002 : Record 11072016;
             BEGIN
               TESTFIELD("Forecast Date");
               TESTFIELD("Production Forecast Name");
               LOCKTABLE;
               IF "Entry No." = 0 THEN
                 IF ForecastEntry.FINDLAST THEN
                   "Entry No." := ForecastEntry."Entry No." + 1;
               //**4PS.sn
               IF Item.GET("Item No.") THEN BEGIN
                 "Forecast Date" := CalendarMgmt.CalcDateBOC(
                   WhseInBoundHandlingTime("Location Code") + FORMAT(Item."Safety Lead Time"),"Forecast Date",
                   CalChange."Source Type"::Vendor,Item."Vendor No.",'',
                   CalChange."Source Type"::Location,"Location Code",'',TRUE);
               END;
               //**4PS.en
               PlanningAssignment.AssignOne("Item No.",'',"Location Code","Forecast Date");
             END;

    OnModify=BEGIN
               PlanningAssignment.AssignOne("Item No.",'',"Location Code","Forecast Date");
             END;

    CaptionML=[DEU=Absatzplanposten;
               ENU=Demand Forecast Entry;
               NLD=Vraagprognosepost;
               NOR=Produksjonsprognosepost;
               SVE=Produktionsprognostransaktion];
    LookupPageID=Page99000922;
    DrillDownPageID=Page99000922;
  }
  FIELDS
  {
    { 1   ;   ;Production Forecast Name;Code10    ;TableRelation="Production Forecast Name";
                                                   CaptionML=[DEU=Absatzplanname;
                                                              ENU=Demand Forecast Name;
                                                              NLD=Vraagprognosenaam;
                                                              NOR=Navn p† prod.prognose;
                                                              SVE=Produktionsprognosnamn] }
    { 2   ;   ;Entry No.           ;Integer       ;CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.;
                                                              NLD=Volgnummer;
                                                              NOR=L›penr.;
                                                              SVE=L”pnr] }
    { 3   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.;
                                                              NLD=Artikelnr.;
                                                              NOR=Varenr.;
                                                              SVE=Artikelnr] }
    { 4   ;   ;Forecast Date       ;Date          ;CaptionML=[DEU=Forecastdatum;
                                                              ENU=Forecast Date;
                                                              NLD=Prognosedatum;
                                                              NOR=Prognosedato;
                                                              SVE=Prognosdatum] }
    { 5   ;   ;Forecast Quantity   ;Decimal       ;OnValidate=BEGIN
                                                                "Forecast Quantity (Base)" := "Forecast Quantity" * "Qty. per Unit of Measure";
                                                              END;

                                                   CaptionML=[DEU=Planungsmenge;
                                                              ENU=Forecast Quantity;
                                                              NLD=Prognoseaantal;
                                                              NOR=Prognoseantall;
                                                              SVE=Prognosantal];
                                                   DecimalPlaces=0:5 }
    { 6   ;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   OnValidate=BEGIN
                                                                ItemUnitofMeasure.GET("Item No.","Unit of Measure Code");
                                                                "Qty. per Unit of Measure" := ItemUnitofMeasure."Qty. per Unit of Measure";
                                                                "Forecast Quantity" := "Forecast Quantity (Base)" / "Qty. per Unit of Measure";
                                                              END;

                                                   CaptionML=[DEU=Einheitencode;
                                                              ENU=Unit of Measure Code;
                                                              NLD=Eenheidscode;
                                                              NOR=Enhetskode;
                                                              SVE=Enhetskod] }
    { 7   ;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=[DEU=Menge pro Einheit;
                                                              ENU=Qty. per Unit of Measure;
                                                              NLD=Aantal per eenheid;
                                                              NOR=Antall per enhet;
                                                              SVE=Antal per enhet];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 8   ;   ;Forecast Quantity (Base);Decimal   ;OnValidate=BEGIN
                                                                IF "Unit of Measure Code" = '' THEN BEGIN
                                                                  Item.GET("Item No.");
                                                                  "Unit of Measure Code" := Item."Sales Unit of Measure";
                                                                  ItemUnitofMeasure.GET("Item No.","Unit of Measure Code");
                                                                  "Qty. per Unit of Measure" := ItemUnitofMeasure."Qty. per Unit of Measure";
                                                                END;
                                                                VALIDATE("Unit of Measure Code");
                                                              END;

                                                   CaptionML=[DEU=Planungsmenge (Basis);
                                                              ENU=Forecast Quantity (Base);
                                                              NLD=Prognoseaantal (Basis);
                                                              NOR=Prognoseantall (l.enh);
                                                              SVE=Prognosantal (bas)];
                                                   DecimalPlaces=0:5 }
    { 10  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code;
                                                              NLD=Vestiging;
                                                              NOR=Lokasjonskode;
                                                              SVE=Lagerst„llekod] }
    { 12  ;   ;Component Forecast  ;Boolean       ;CaptionML=[DEU=Komponentenabsatzplanung;
                                                              ENU=Component Forecast;
                                                              NLD=Materiaalprognose;
                                                              NOR=Komponentprognose;
                                                              SVE=Komponentprognos] }
    { 13  ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description;
                                                              NLD=Omschrijving;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 11012000;;Generic Item No.   ;Code20        ;TableRelation="Generic Item";
                                                   CaptionML=[DEU=Generische Artikelnr.;
                                                              ENU=Generic Item No.;
                                                              NLD=Generiekartikelnr.;
                                                              NOR=Generisk artikkelnr;
                                                              SVE=Generellt artikelnr] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Production Forecast Name,Item No.,Location Code,Forecast Date,Component Forecast;
                                                   SumIndexFields=Forecast Quantity (Base) }
    {    ;Production Forecast Name,Item No.,Component Forecast,Forecast Date,Location Code;
                                                   SumIndexFields=Forecast Quantity (Base) }
    {    ;Production Forecast Name,Location Code,Forecast Date,Generic Item No. }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ItemUnitofMeasure@1000 : Record 5404;
      Item@1001 : Record 27;
      PlanningAssignment@1002 : Record 99000850;
      Location@1100525000 : Record 14;

    PROCEDURE WhseInBoundHandlingTime@1100525001(LocationCode@1000 : Code[10]) : Code[10];
    VAR
      InvtSetup@1100525000 : Record 313;
    BEGIN
      // Returns the inbound warehouse handling time in a date formula

      IF LocationCode = '' THEN BEGIN
        InvtSetup.GET;
        EXIT(FORMAT(InvtSetup."Inbound Whse. Handling Time"));
      END;

      GetLocation(LocationCode);
      EXIT(FORMAT(Location."Inbound Whse. Handling Time"));
    END;

    LOCAL PROCEDURE GetLocation@1100525002(LocationCode@1000 : Code[10]);
    BEGIN
      IF Location.Code <> LocationCode THEN
        Location.GET(LocationCode);
    END;

    BEGIN
    {
      4PS HBK 16-07-09: Field added: Generic Item No.
      4PS HBK 16-07-09: Key added: Production Forecast Name,Location Code,Forecast Date,Generic Item No. for r11125616
    }
    END.
  }
}

