OBJECT Report 99001046 Calculate Work Center Calendar
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Arb.-Platzgr.-Kalender berech.;
               ENU=Calculate Work Center Calendar;
               NLD=Afdelingsagenda berekenen;
               NOR=Beregn arbeidssenterkalender;
               SVE=BerÑkna prod.gruppskalender];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  Window.OPEN(
                    Text000 +
                    Text001);
                END;

  }
  DATASET
  {
    { 8481;    ;DataItem;                    ;
               DataItemTable=Table99000754;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=BEGIN
                               IF StartingDate = 0D THEN
                                 ERROR(Text004);

                               IF EndingDate = 0D THEN
                                 ERROR(Text005);
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1,"No.");

                                  TESTFIELD(Efficiency);

                                  Calendar.RESET;
                                  Calendar.SETRANGE("Capacity Type",Calendar."Capacity Type"::"Work Center");
                                  Calendar.SETRANGE("No.","No.");
                                  Calendar.SETRANGE(Date,StartingDate,EndingDate);
                                  Calendar.DELETEALL;

                                  OnAfterDeleteWorkCenterCalendarEntries("Work Center",StartingDate,EndingDate);

                                  IF "Consolidated Calendar" THEN BEGIN
                                    Calendar.SETRANGE("No.");
                                    Calendar.SETCURRENTKEY("Work Center No.",Date);
                                    Calendar.SETRANGE("Work Center No.","No.");
                                    Calendar.SETRANGE("Capacity Type",Calendar."Capacity Type"::"Machine Center");
                                    IF Calendar.FIND('-') THEN
                                      REPEAT
                                        TempCalendar.INIT;
                                        TempCalendar."Capacity Type" := Calendar."Capacity Type"::"Work Center";
                                        TempCalendar."No." := "No.";
                                        TempCalendar."Work Center No." := "No.";
                                        TempCalendar.Date := Calendar.Date;
                                        TempCalendar."Starting Time" := Calendar."Starting Time";
                                        IF TempCalendar.INSERT THEN;
                                        TempCalendar."Starting Time" := Calendar."Ending Time";
                                        IF TempCalendar.INSERT THEN;
                                      UNTIL Calendar.NEXT = 0;

                                    Calendar.RESET;
                                    Calendar.SETCURRENTKEY("Work Center No.",Date);
                                    Calendar.SETRANGE("Capacity Type",Calendar."Capacity Type"::"Machine Center");
                                    Calendar.SETRANGE("Work Center No.","No.");
                                    TempCalendar.SETRANGE("Work Center No.","No.");
                                    IF TempCalendar.FIND('-') THEN
                                      REPEAT
                                        CLEAR(LastTime);
                                        TempCalendar.SETRANGE(Date,TempCalendar.Date);
                                        Calendar.SETRANGE(Date,TempCalendar.Date);
                                        IF TempCalendar.FIND('-') THEN
                                          REPEAT
                                            IF LastTime = 0T THEN
                                              LastTime := TempCalendar."Starting Time"
                                            ELSE BEGIN
                                              Calendar.SETFILTER("Starting Time",'<=%1',LastTime);
                                              Calendar.SETFILTER("Ending Time",'>%1',LastTime);
                                              IF Calendar.FIND('-') THEN BEGIN
                                                Calendar2 := TempCalendar;
                                                Calendar2."Work Shift Code" := '';
                                                Calendar2."Starting Time" := LastTime;
                                                Calendar2.VALIDATE("Ending Time",TempCalendar."Starting Time");
                                                Calendar2.VALIDATE("No.");
                                                Calendar2.Capacity := 0;
                                                REPEAT
                                                  Calendar2.Capacity := Calendar2.Capacity + (Calendar.Capacity - Calendar."Absence Capacity") *
                                                    Calendar.Efficiency / 100;
                                                UNTIL Calendar.NEXT = 0;
                                                IF Calendar2.Capacity <> 0 THEN BEGIN
                                                  Calendar2.VALIDATE(Capacity);
                                                  Calendar2.INSERT;
                                                END;
                                              END;
                                              LastTime := TempCalendar."Starting Time";
                                            END;
                                          UNTIL TempCalendar.NEXT = 0;
                                        TempCalendar.SETRANGE(Date);
                                      UNTIL TempCalendar.NEXT = 0;
                                  END ELSE BEGIN
                                    TESTFIELD(Capacity);
                                    TESTFIELD("Unit of Measure Code");

                                    CalendarMgt.CalculateSchedule(
                                      0,
                                      "No.",
                                      "No.",
                                      StartingDate,
                                      EndingDate);
                                  END;
                                END;

               ReqFilterFields=No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnInit=BEGIN
               IF StartingDate = 0D THEN
                 StartingDate := DMY2DATE(1,1,DATE2DMY(WORKDATE,3));
               IF EndingDate = 0D THEN
                 EndingDate := DMY2DATE(31,12,DATE2DMY(WORKDATE,3));
             END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 3   ;2   ;Field     ;
                  CaptionML=[DEU=Startdatum;
                             ENU=Starting Date;
                             NLD=Begindatum;
                             NOR=Startdato;
                             SVE=Startdatum];
                  ToolTipML=[DEU=Gibt das Datum an, an dem Sie mit der Erstellung der neuen Kalenderposten anfangen mîchten.;
                             ENU=Specifies the date that you will start creating new calendar entries.;
                             NLD=Hiermee wordt de datum opgegeven waarop u wilt beginnen met het maken van nieuwe agendaposten.;
                             NOR=Angir datoen for nÜr du vil begynne Ü opprette nye kalenderposter.;
                             SVE=Anger datumet nÑr du vill bîrja skapa de nya kalendertransaktionerna.];
                  ApplicationArea=#Manufacturing;
                  SourceExpr=StartingDate }

      { 6   ;2   ;Field     ;
                  CaptionML=[DEU=Enddatum;
                             ENU=Ending Date;
                             NLD=Einddatum;
                             NOR=Sluttdato;
                             SVE=Slutdatum];
                  ToolTipML=[DEU=Gibt das letzte Datum an, an dem Sie neue Kalenderposten erstellen.;
                             ENU=Specifies the final date that you will create new calendar entries.;
                             NLD=Hiermee wordt de laatste datum opgegeven waarop u nieuwe agendaposten maakt.;
                             NOR=Angir den siste datoen du vil opprette nye kalenderposter.;
                             SVE=Anger slutdatum fîr nÑr du vill skapa de nya kalendertransaktionerna.];
                  ApplicationArea=#Manufacturing;
                  SourceExpr=EndingDate }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Arbeitsplatzgruppe berechnen...\\;ENU=Calculating Work Centers...\\;NLD=Berekenen afdelingskalender...\\;NOR=Beregner arbeidssenterkalendere...\\;SVE=BerÑknar prod.grupper...\\';
      Text001@1001 : TextConst 'DEU=Nr.            #1##########;ENU=No.            #1##########;NLD=Nr.            #1##########;NOR=Nr.            #1##########;SVE=Nr             #1##########';
      Text004@1002 : TextConst 'DEU=Sie mÅssen das Startdatum eingeben.;ENU=You must fill in the starting date field.;NLD=U moet het veld Begindatum invullen.;NOR=Du mÜ fylle ut feltet Startdato.;SVE=Du mÜste fylla i fÑltet startdatum.';
      Text005@1003 : TextConst 'DEU=Sie mÅssen das Enddatum eingeben.;ENU=You must fill in the ending date field.;NLD=U moet het veld Einddatum invullen.;NOR=Du mÜ fylle ut feltet Sluttdato.;SVE=Du mÜste fylla i fÑltet slutdatum.';
      Calendar@1004 : Record 99000757;
      Calendar2@1005 : Record 99000757;
      TempCalendar@1010 : TEMPORARY Record 99000757;
      CalendarMgt@1006 : Codeunit 99000755;
      Window@1007 : Dialog;
      StartingDate@1008 : Date;
      EndingDate@1009 : Date;
      LastTime@1011 : Time;

    [External]
    PROCEDURE InitializeRequest@1(NewStartingDate@1000 : Date;NewEndingDate@1001 : Date);
    BEGIN
      StartingDate := NewStartingDate;
      EndingDate := NewEndingDate;
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterDeleteWorkCenterCalendarEntries@1001(VAR WorkCenter@1000 : Record 99000754;StartingDate@1001 : Date;EndingDate@1002 : Date);
    BEGIN
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

