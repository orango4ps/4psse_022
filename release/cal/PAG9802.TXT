OBJECT Page 9802 Permission Sets
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.01,4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    Permissions=TableData 9802=d,
                TableData 2000000167=rimd;
    CaptionML=[ENU=Permission Sets;
               NOR=Tillatelsessett;
               SVE=Beh”righetsupps„ttningar];
    ApplicationArea=#Basic,#Suite;
    SourceTable=Table9009;
    DelayedInsert=Yes;
    PageType=List;
    UsageCategory=Lists;
    AdditionalSearchTermsML=[ENU=access rights privilege;
                             NOR=tilgangsrettigheter;
                             SVE=†stkomstr„ttigheter privilegium];
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             CanManageUsersOnTenant := PermissionManager.CanManageUsersOnTenant(USERSECURITYID);
           END;

    OnOpenPage=VAR
                 PermissionPagesMgt@1000 : Codeunit 9001;
               BEGIN
                 PermissionPagesMgt.CheckAndRaiseNotificationIfAppDBPermissionSetsChanged;
                 FillRecordBuffer;

                 IF PermissionManager.IsIntelligentCloud THEN
                   SETRANGE("Role ID",PermissionManager.GetIntelligentCloudTok);
               END;

    OnAfterGetRecord=BEGIN
                       IsPermissionSetEditable := Type = Type::"User-Defined";
                     END;

    OnNewRecord=BEGIN
                  Type := Type::"User-Defined";
                  IsPermissionSetEditable := TRUE;
                  Scope := Scope::Tenant;
                END;

    OnInsertRecord=VAR
                     TenantPermissionSet@1000 : Record 2000000165;
                     PermissionPagesMgt@1003 : Codeunit 9001;
                     ZeroGUID@1002 : GUID;
                   BEGIN
                     PermissionPagesMgt.DisallowEditingPermissionSetsForNonAdminUsers;

                     TenantPermissionSet.INIT;
                     TenantPermissionSet."App ID" := ZeroGUID;
                     TenantPermissionSet."Role ID" := "Role ID";
                     TenantPermissionSet.Name := Name;
                     TenantPermissionSet.INSERT;

                     INSERT;
                     GET(Type::"User-Defined","Role ID");
                     EXIT(FALSE);
                   END;

    OnModifyRecord=VAR
                     TenantPermissionSet@1000 : Record 2000000165;
                     PermissionPagesMgt@1001 : Codeunit 9001;
                   BEGIN
                     PermissionPagesMgt.DisallowEditingPermissionSetsForNonAdminUsers;

                     IF Type = Type::"User-Defined" THEN BEGIN
                       TenantPermissionSet.GET(xRec."App ID",xRec."Role ID");
                       IF xRec."Role ID" <> "Role ID" THEN BEGIN
                         TenantPermissionSet.RENAME(xRec."App ID","Role ID");
                         TenantPermissionSet.GET(xRec."App ID","Role ID");
                       END;
                       TenantPermissionSet.Name := Name;
                     //TenantPermissionSet.MODIFY; //**4PS.o
                       TenantPermissionSet.MODIFY(TRUE); //**4PS.n
                       CurrPage.UPDATE(FALSE);
                       EXIT(TRUE);
                     END;
                     EXIT(FALSE); // Causes UI to stop processing the action - we handled it manually
                   END;

    OnDeleteRecord=VAR
                     PermissionSetLink@1002 : Record 9802;
                     TenantPermissionSet@1000 : Record 2000000165;
                     UserGroupPermissionSet@1003 : Record 9003;
                     PermissionPagesMgt@1001 : Codeunit 9001;
                   BEGIN
                     PermissionPagesMgt.DisallowEditingPermissionSetsForNonAdminUsers;

                     IF Type <> Type::"User-Defined" THEN
                       ERROR(CannotDeletePermissionSetErr);

                     PermissionSetLink.SETRANGE("Linked Permission Set ID","Role ID");
                     PermissionSetLink.DELETEALL;

                     UserGroupPermissionSet.SETRANGE("Role ID","Role ID");
                     UserGroupPermissionSet.DELETEALL;

                     TenantPermissionSet.GET("App ID","Role ID");
                     //TenantPermissionSet.DELETE; //**4PS.o
                     TenantPermissionSet.DELETE(TRUE); //**4PS.n

                     CurrPage.UPDATE;
                     EXIT(TRUE);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           IsPermissionSetEditable := Type = Type::"User-Defined";
                         END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      Name=PermissionActions;
                      CaptionML=[ENU=Permissions;
                                 NOR=Tillatelser;
                                 SVE=Beh”righeter];
                      ActionContainerType=RelatedInformation }
      { 7       ;1   ;ActionGroup;
                      Name=ShowPermissions;
                      CaptionML=[ENU=Permissions;
                                 NOR=Tillatelser;
                                 SVE=Beh”righeter];
                      Image=Permission }
      { 6       ;2   ;Action    ;
                      Name=Permissions;
                      ShortCutKey=Shift+Ctrl+p;
                      CaptionML=[ENU=Permissions;
                                 NOR=Tillatelser;
                                 SVE=Beh”righeter];
                      ToolTipML=[ENU=View or edit which feature objects users need to access, and set up the related permissions in permission sets that you can assign to the users of the database.;
                                 NOR=Vis eller rediger hvilke funksjonsobjekter brukere trenger for † f† tilgang, og definer relaterte tillatelser i tillatelsessett som du kan tilordne brukerne av databasen.;
                                 SVE=Visa eller „ndra vilka funktionsobjekt anv„ndare beh”ver komma †t, och skapa relaterade beh”righeter i beh”righetsupps„ttningar som du kan tilldela anv„ndare i databasen.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Permission;
                      PromotedCategory=Process;
                      Scope=Repeater;
                      OnAction=VAR
                                 PermissionPagesMgt@1001 : Codeunit 9001;
                               BEGIN
                                 PermissionPagesMgt.ShowPermissions(Scope,"App ID","Role ID",FALSE);
                               END;
                                }
      { 11      ;2   ;Action    ;
                      CaptionML=[ENU=Permission Set by User;
                                 NOR=Tillatelsessett etter bruker;
                                 SVE=Beh”righetsupps„ttning efter anv„ndare];
                      ToolTipML=[ENU=View or edit the available permission sets and apply permission sets to existing users.;
                                 NOR=Vis eller rediger de tilgjengelige tillatelsessettene, og bruk tillatelsessett for eksisterende brukere.;
                                 SVE=Visa eller redigera de tillg„ngliga beh”righetsupps„ttningarna och anv„nd beh”righetsupps„ttningar p† befintliga anv„ndare.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 9816;
                      Promoted=Yes;
                      Image=Permission;
                      PromotedCategory=Process }
      { 12      ;2   ;Action    ;
                      CaptionML=[ENU=Permission Set by User Group;
                                 NOR=Tillatelsessett etter brukergruppe;
                                 SVE=Beh”righetsupps„ttning efter anv„ndargrupp];
                      ToolTipML=[ENU=View or edit the available permission sets and apply permission sets to existing user groups.;
                                 NOR=Vis eller rediger de tilgjengelige tillatelsessettene, og bruk tillatelsessett for eksisterende brukergrupper.;
                                 SVE=Visa eller redigera de tillg„ngliga beh”righetsupps„ttningarna och anv„nd beh”righetsupps„ttningar p† befintliga anv„ndargrupper.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 9837;
                      Promoted=Yes;
                      Image=Permission;
                      PromotedCategory=Process }
      { 15      ;1   ;ActionGroup;
                      CaptionML=[ENU=User Groups;
                                 NOR=Brukergrupper;
                                 SVE=Anv„ndargrupper] }
      { 14      ;2   ;Action    ;
                      CaptionML=[ENU=User by User Group;
                                 NOR=Bruker etter brukergruppe;
                                 SVE=Anv„ndare efter anv„ndargrupp];
                      ToolTipML=[ENU=View and assign user groups to users.;
                                 NOR=Vis og tilordne brukergrupper til brukere.;
                                 SVE=Visa och tilldela anv„ndare anv„ndargrupper.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 9838;
                      Promoted=Yes;
                      Image=User;
                      PromotedCategory=Process }
      { 13      ;2   ;Action    ;
                      Name=UserGroups;
                      CaptionML=[ENU=User Groups;
                                 NOR=Brukergrupper;
                                 SVE=Anv„ndargrupper];
                      ToolTipML=[ENU=Set up or modify user groups as a fast way of giving users access to the functionality that is relevant to their work.;
                                 NOR=Definer eller endre brukergrupper som en rask m†te for † gi brukere tilgang til funksjonaliteten p†, som er relevant for deres arbeid.;
                                 SVE=Konfigurera eller „ndra anv„ndargrupper som ett snabbt s„tt att ge anv„ndare †tkomst till funktioner som „r relevanta f”r deras arbete.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 9830;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Users;
                      PromotedCategory=Process }
      { 9       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 5       ;1   ;ActionGroup;
                      Name=<Functions>;
                      CaptionML=[ENU=F&unctions;
                                 NOR=F&unksjoner;
                                 SVE=F&unktioner];
                      Image=Action }
      { 8       ;2   ;Action    ;
                      Name=CopyPermissionSet;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Permission Set;
                                 NOR=Kopier tillatelsessett;
                                 SVE=Kopiera beh”righetsupps„ttning];
                      ToolTipML=[ENU=Create a copy of the selected permission set with a name that you specify.;
                                 NOR=Opprett en kopi av det valgte tillatelsessettet med et navn du angir.;
                                 SVE=Skapa en kopia av den markerade beh”righetsupps„ttningen med ett namn som du anger.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=CanManageUsersOnTenant;
                      Image=Copy;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 AggregatePermissionSet@1035 : Record 2000000167;
                                 CopyPermissionSet@1000 : Report 9802;
                                 ZeroGuid@1001 : GUID;
                               BEGIN
                                 AggregatePermissionSet.SETRANGE(Scope,Scope);
                                 AggregatePermissionSet.SETRANGE("App ID","App ID");
                                 AggregatePermissionSet.SETRANGE("Role ID","Role ID");

                                 CopyPermissionSet.SETTABLEVIEW(AggregatePermissionSet);
                                 CopyPermissionSet.RUNMODAL;

                                 IF AggregatePermissionSet.GET(AggregatePermissionSet.Scope::Tenant,ZeroGuid,CopyPermissionSet.GetNewRoleID) THEN BEGIN
                                   INIT;
                                   TRANSFERFIELDS(AggregatePermissionSet);
                                   SetType;
                                   INSERT;
                                   GET(Type,"Role ID");
                                 END;
                               END;
                                }
      { 18      ;2   ;Action    ;
                      Name=ImportPermissionSets;
                      CaptionML=[ENU=Import Permission Sets;
                                 NOR=Importer tillatelsessett;
                                 SVE=Importera beh”righetsupps„ttningar];
                      ToolTipML=[ENU=Import a file with permissions.;
                                 NOR=Importer en fil med tillatelser.;
                                 SVE=Importera en fil med beh”righeter.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=CanManageUsersOnTenant;
                      PromotedIsBig=No;
                      Image=Import;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 XMLPORT.RUN(XMLPORT::"Import Tenant Permission Sets",FALSE,TRUE);
                                 FillRecordBuffer;
                               END;
                                }
      { 20      ;2   ;Action    ;
                      Name=ExportPermissionSets;
                      CaptionML=[ENU=Export Permission Sets;
                                 NOR=Eksporter tillatelsessett;
                                 SVE=Exportera beh”righetsupps„ttningar];
                      ToolTipML=[ENU=Export one or more permission sets to a file.;
                                 NOR=Eksporter ett eller flere tillatelsessett til en fil.;
                                 SVE=Exportera en eller flera beh”righetsupps„ttningar till en fil.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=No;
                      Image=Export;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 AggregatePermissionSet@1000 : Record 2000000167;
                                 TempBlob@1003 : Record 99008535;
                                 PermissionManager@1002 : Codeunit 9002;
                                 FileManagement@1005 : Codeunit 419;
                                 ExportPermissionSets@1001 : XMLport 9173;
                                 OutStr@1004 : OutStream;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(Rec);
                                 IF FINDSET THEN
                                   REPEAT
                                     IF AggregatePermissionSet.GET(Scope,"App ID","Role ID") THEN
                                       AggregatePermissionSet.MARK(TRUE);
                                   UNTIL NEXT = 0;
                                 RESET;

                                 AggregatePermissionSet.MARKEDONLY(TRUE);
                                 IF PermissionManager.IsSandboxConfiguration THEN
                                   IF CONFIRM(ExportExtensionSchemaQst) THEN BEGIN
                                     TempBlob.INIT;
                                     TempBlob.Blob.CREATEOUTSTREAM(OutStr);
                                     ExportPermissionSets.SetExportToExtensionSchema(TRUE);
                                     ExportPermissionSets.SETTABLEVIEW(AggregatePermissionSet);
                                     ExportPermissionSets.SETDESTINATION(OutStr);
                                     ExportPermissionSets.EXPORT;

                                     FileManagement.BLOBExport(TempBlob,FileManagement.ServerTempFileName('xml'),TRUE);
                                     EXIT;
                                   END;

                                 XMLPORT.RUN(XMLPORT::"Export Permission Sets",FALSE,FALSE,AggregatePermissionSet);
                               END;
                                }
      { 1101285000;2 ;Action    ;
                      Name=Create additive roles;
                      Image=GL;
                      OnAction=VAR
                                 ObjectPermissionMgt@1100285501 : Codeunit 11020223;
                               BEGIN
                                 //4PSSE
                                 ObjectPermissionMgt."Create additive roles"('*-*-R');
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                CaptionML=[ENU=Permission Set;
                           NOR=Tillatelsessett;
                           SVE=Beh”righetsupps„ttning];
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=PermissionSet;
                CaptionML=[ENU=Permission Set;
                           NOR=Tillatelsessett;
                           SVE=Beh”righetsupps„ttning];
                ToolTipML=[ENU=Specifies the permission set.;
                           NOR=Angir tillatelsessettet.;
                           SVE=Anger beh”righetsupps„ttningen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Role ID";
                Editable=IsPermissionSetEditable;
                OnValidate=VAR
                             PermissionPagesMgt@1000 : Codeunit 9001;
                           BEGIN
                             PermissionPagesMgt.DisallowEditingPermissionSetsForNonAdminUsers;
                             RenameTenantPermissionSet;
                           END;
                            }

    { 4   ;2   ;Field     ;
                Name=Name;
                CaptionML=[NOR=Navn;
                           SVE=Namn];
                ToolTipML=[ENU=Specifies the name of the record.;
                           NOR=Angir navnet p† posten.;
                           SVE=Anger postens namn.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name;
                Editable=IsPermissionSetEditable;
                OnValidate=VAR
                             PermissionPagesMgt@1000 : Codeunit 9001;
                           BEGIN
                             PermissionPagesMgt.DisallowEditingPermissionSetsForNonAdminUsers;
                           END;
                            }

    { 22  ;2   ;Field     ;
                Name=Type;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Type;
                Enabled=FALSE;
                Editable=FALSE }

    { 21  ;2   ;Field     ;
                CaptionML=[ENU=Extension Name;
                           NOR=Navn p† utvidelse;
                           SVE=Namn p† till„gg];
                ToolTipML=[ENU=Specifies the name of the extension.;
                           NOR=Angir navnet p† utvidelsen.;
                           SVE=Anger namnet p† till„gget.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="App Name";
                Editable=FALSE }

    { 16  ;    ;Container ;
                ContainerType=FactBoxArea }

    { 17  ;1   ;Part      ;
                CaptionML=[ENU=System Permissions;
                           NOR=Systemtillatelser;
                           SVE=Systembeh”righeter];
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Role ID=FIELD(Role ID);
                PagePartID=Page9804;
                Editable=FALSE;
                PartType=Page }

    { 19  ;1   ;Part      ;
                CaptionML=[ENU=Tenant Permissions;
                           NOR=Tillatelser for leietaker;
                           SVE=Klientorganisationsbeh”righeter];
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Role ID=FIELD(Role ID),
                            App ID=FIELD(App ID);
                PagePartID=Page9840;
                Editable=FALSE;
                PartType=Page }

  }
  CODE
  {
    VAR
      PermissionManager@1001 : Codeunit 9002;
      CanManageUsersOnTenant@1002 : Boolean;
      IsPermissionSetEditable@1004 : Boolean INDATASET;
      CannotDeletePermissionSetErr@1005 : TextConst 'ENU=You can only delete user-created or copied permission sets.;NOR=Du kan bare slette brukeropprettede eller kopierte tillatelsessett.;SVE=Du kan bara ta bort beh”righetsupps„ttningar som skapats av en anv„ndare eller kopierats.';
      ExportExtensionSchemaQst@1003 : TextConst 'ENU=Do you want to export permission sets in a schema that is supported by the extension package?;NOR=Vil du eksportere tillatelsessett i et skjema som st›ttes av utvidelsespakken?;SVE=Vill du exportera beh”righetsupps„ttningarna i ett schema som st”ds av till„ggspaketet?';

    BEGIN
    {
      170615 ITERO.WG Added action Create adaptiv roles
    }
    END.
  }
}

