OBJECT Codeunit 11012050 Generate Delivered Objects
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11072003;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ComplaintSetup@1210190001 : Record 11012108;
      DeliveredProjRec@1210190000 : Record 11012100;
      DeliveredObjRec@1100485001 : Record 11012101;
      GenVendorCU@1210190005 : Codeunit 11012051;
      NoSeriesMgt@1210190004 : Codeunit 396;
      AddCount@1210190007 : Integer;
      Text001@1210190008 : TextConst 'DEU=%1 Neue Åbergebene Objekte hinzugefÅgt.;ENU=%1 New Delivered Objects generated.;NLD=%1 Nieuwe opgeleverde objecten toegevoegd.;NOR=%1 nye leverte objekter er generert;SVE=%1 nya levererade objekt har genererats.';
      Text002@1210190009 : TextConst 'DEU=Keine neuen Åbergebenen Objekte erstellt.;ENU=No new Delivered Objects generated.;NLD=Geen nieuwe opgeleverde objecten aangemaakt.;NOR=Ingen nye leverte objekter er generert;SVE=Inga nya levererade objekt har genererats.';
      Text004@1100485000 : TextConst 'DEU=Kein Kontakt mit Debitor %1 verbunden.;ENU=No Contact attached to Customer %1.;NLD=Geen Relatie verbonden met Klant %1.;NOR=Ingen kontakt tilknyttet Kunde %1;SVE=Det finns ingen kontakt bifogad till kunden %1.';

    [External]
    PROCEDURE CreateDeliveredFromPlot@1210190001(iPlotRec@1210190000 : Record 11012500);
    VAR
      lJobRec@1210190001 : Record 11072003;
    BEGIN
      TestSetup;
      //Eventual generate new delivered project/object
      lJobRec.GET(iPlotRec."Project No.");
      CreateDeliveredProj(lJobRec);

      //Eventual generate new delivered object plot number
      CreateDeliveredObj(iPlotRec);

      NotifyRecordsAdded;
    END;

    [External]
    PROCEDURE CreateDeliveredProj@1100485002(iJobRec@1100485000 : Record 11072003);
    BEGIN
      IF (iJobRec."Delivered Project" = '') OR NOT DeliveredProjRec.GET(iJobRec."Delivered Project") THEN BEGIN
        GenDelPrjNo(iJobRec);
        iJobRec."Delivered Project" := DeliveredProjRec."No.";
        iJobRec.MODIFY;
      END;

      CreateDeliveredProjObj(iJobRec);
    END;

    [External]
    PROCEDURE CreateDeliveredObj@1100485003(iPlotRec@1100485000 : Record 11012500);
    BEGIN
      IF (iPlotRec."Delivered Object" = '') OR NOT DeliveredObjRec.GET(iPlotRec."Delivered Object") THEN BEGIN
        GenDelObjNo(iPlotRec);
        iPlotRec."Delivered Object" := DeliveredObjRec."No.";
        iPlotRec.MODIFY;
      END;
    END;

    [External]
    PROCEDURE CreateDeliveredProjObj@1100485004(iJobRec@1100485000 : Record 11072003);
    VAR
      lProjectPrincipalRec@1100485002 : Record 11012005;
      lBusinessRelRec@1100485003 : Record 5054;
      lDelObjectPrincipal@1100485004 : Record 11012109;
      lDelivery@1100485005 : Record 11012507;
      lPlotRec@1100485006 : Record 11012500;
    BEGIN
      WITH DeliveredObjRec DO BEGIN
        IF (iJobRec."Delivered Object" <> '') AND GET(iJobRec."Delivered Object") THEN
          EXIT;

        INIT;
        "No. Series" := ComplaintSetup."Delivered Object Nos.";
        "No." := NoSeriesMgt.GetNextNo("No. Series",WORKDATE,TRUE);
        "Delivered Project" := DeliveredProjRec."No.";
        Principal := GetProjContact(iJobRec."Bill-to Customer No.");
        VALIDATE("Original Project",DeliveredProjRec."Original Project No.");
        Address := iJobRec.Address;
        "Address 2" := iJobRec."Address 2";
        "Post Code" := iJobRec."Post Code" ;
        City := iJobRec.City ;
        "Creation Date" := TODAY ;
        "Original Plot no." := '';
        "Site Manager" := iJobRec."Site Manager";
        Supervisor := iJobRec.Supervisor;
        "Project Engineer" := iJobRec."Project Engineer";
        "Project Manager" := iJobRec."Project Manager";
        "Responsible Person" := DeliveredProjRec."Responsible Person";
        IF "Responsible Person" = '' THEN
          "Responsible Person" := iJobRec."Project Manager";

        FillContactFields();
        INSERT;
        iJobRec."Delivered Object" := "No.";
        iJobRec.MODIFY;
        lProjectPrincipalRec.SETRANGE("Project No.", iJobRec."No.");
        IF lProjectPrincipalRec.FIND('-') THEN BEGIN
          REPEAT
            lBusinessRelRec.SETRANGE("Link to Table",lBusinessRelRec."Link to Table"::Customer);
            lBusinessRelRec.SETRANGE("No.",lProjectPrincipalRec.Principal);
            IF lBusinessRelRec.FIND('-') THEN BEGIN
              IF NOT lDelObjectPrincipal.GET("No.", lBusinessRelRec."Contact No.") THEN BEGIN
                lDelObjectPrincipal."Delivered Object" := "No.";
                lDelObjectPrincipal.Principal := lBusinessRelRec."Contact No.";
                lDelObjectPrincipal.INSERT;
              END;
            END;
          UNTIL lProjectPrincipalRec.NEXT = 0;
        END;
        lDelivery.SETRANGE("Project No.", lPlotRec."Project No.");
        lDelivery.SETFILTER("Plot No.", '%1', '');
        lDelivery.SETRANGE("Final Delivery", TRUE);
        IF lDelivery.FIND('-') THEN BEGIN
          IF lDelivery."Delivery Date" <> 0DT THEN BEGIN
            VALIDATE("Date Delivered", DT2DATE(lDelivery."Delivery Date")); //kzwerver, 111202, c, #31017
            MODIFY;
          END;
        END;
        AddCount := AddCount + 1;
      END;
    END;

    [External]
    PROCEDURE GenDelPrjNo@1210190000(iJobRec@1210190001 : Record 11072003);
    BEGIN
      WITH DeliveredProjRec DO BEGIN
        INIT;
        "No. Series" := ComplaintSetup."Delivered Project Nos.";
        "No." := NoSeriesMgt.GetNextNo("No. Series",WORKDATE,TRUE);
        Name := iJobRec.Name;
        Address := iJobRec.Address;
        "Address 2" := iJobRec."Address 2";
        "Postal Code" := iJobRec."Post Code";
        City := iJobRec.City;
        "Territory Code" := iJobRec."Territory Code";
        Type := iJobRec.Type;
        "Site Manager" := iJobRec."Site Manager";
        "Project Engineer" := iJobRec."Project Engineer";
        "Buyer Contact" := iJobRec.Buyercontact;
        "Project Manager" := iJobRec."Project Manager";
        "Responsible Person" := iJobRec."Project Manager";
        Supervisor := iJobRec.Supervisor;
        "Creation Date" := TODAY;
        "Original Project No." := iJobRec."No.";
        "Original Project Description" := iJobRec.Description;
        INSERT;

        iJobRec."Delivered Project" := "No.";
        //CopyPrincipals(iJobRec."No.", "No.");  Principals is not linked to delivered object, so not to delivered project
        CopyAuthorities(iJobRec."No.", "No.");
        GenVendorCU.RUN(iJobRec);
      END;
    END;

    [External]
    PROCEDURE GenDelObjNo@1210190002(iPlotRec@1210190001 : Record 11012500);
    VAR
      lBusinessRelRec@1100485000 : Record 5054;
      lDelObjectPrincipal@1100485001 : Record 11012109;
      lDelivery@1100485002 : Record 11012507;
      lJobRec@1210190002 : Record 11072003;
      lCustomer@1210190000 : Record 18;
    BEGIN
      lJobRec.GET(iPlotRec."Project No.");

      WITH DeliveredObjRec DO BEGIN
        INIT;
        "No. Series" := ComplaintSetup."Delivered Object Nos.";
        "No." := NoSeriesMgt.GetNextNo("No. Series",WORKDATE,TRUE);
        "Delivered Project" := lJobRec."Delivered Project";
        Buyer := iPlotRec.Buyer;
        VALIDATE("Original Project",iPlotRec."Project No.");
        Address := iPlotRec.Address;
        "Address 2" := '';
        "Post Code" := iPlotRec."Post Code" ;
        City := iPlotRec.City ;
        "Creation Date" := TODAY ;
        "Original Plot no." := iPlotRec."Plot No.";
        "Site Manager" := DeliveredProjRec."Site Manager";
        IF "Site Manager" = '' THEN
          "Site Manager" := lJobRec."Site Manager";
        Supervisor := DeliveredProjRec.Supervisor;
        IF Supervisor = '' THEN
          Supervisor := lJobRec.Supervisor;
        "Project Engineer" := DeliveredProjRec."Project Engineer";
        IF "Project Engineer" = '' THEN
          "Project Engineer" := lJobRec."Project Engineer";
        "Project Manager" := DeliveredProjRec."Project Manager";
        IF "Project Manager" = '' THEN
          "Project Manager" := lJobRec."Project Manager";
        "Responsible Person" := DeliveredProjRec."Project Manager";
        IF "Responsible Person" = '' THEN
          "Responsible Person" := lJobRec."Project Manager";
        //kzwerver, 110801, sn, #26039
        IF (iPlotRec.Principal <> '') THEN BEGIN
          IF (lCustomer.GET(iPlotRec.Principal)) THEN BEGIN
            "Principal Name" := lCustomer.Name;
            "Principal Name 2" := lCustomer."Name 2";
            "Principal Address" := lCustomer.Address;
            "Principal Address 2" := lCustomer."Address 2";
            "Principal Post Code" := lCustomer."Post Code";
            "Principal City" := lCustomer.City;
          END;
        END;
        //kzwerver, 110801, en, #26039
        "Buy/Rent" := iPlotRec."Buy/Rent";  //C028269

        INSERT;

        lBusinessRelRec.SETRANGE("Link to Table",lBusinessRelRec."Link to Table"::Customer);
        lBusinessRelRec.SETRANGE("No.",iPlotRec.Principal);
        IF lBusinessRelRec.FIND('-') THEN BEGIN
          IF NOT lDelObjectPrincipal.GET(iPlotRec."Delivered Object", lBusinessRelRec."Contact No.") THEN BEGIN
            lDelObjectPrincipal."Delivered Object" := iPlotRec."Delivered Object";
            lDelObjectPrincipal.Principal := lBusinessRelRec."Contact No.";
            lDelObjectPrincipal.INSERT;
          END;
          IF Principal = '' THEN
            Principal := lDelObjectPrincipal.Principal;
        END;
        FillContactFields();
        lDelivery.SETRANGE("Project No.", iPlotRec."Project No.");
        lDelivery.SETRANGE("Plot No.", iPlotRec."Plot No.");
        lDelivery.SETRANGE("Final Delivery", TRUE);
        IF lDelivery.FIND('-') THEN BEGIN
          IF lDelivery."Delivery Date" <> 0DT THEN BEGIN
            VALIDATE("Date Delivered", DT2DATE(lDelivery."Delivery Date")); //kzwerver, 111202, c, #31017
          END;
        END;
        MODIFY;

        IF DeliveredProjRec."No." <> '' THEN
          CopyAuthorities(iPlotRec."Project No.", DeliveredProjRec."No.");

        AddCount := AddCount + 1;
      END;
    END;

    [External]
    PROCEDURE TestSetup@1210190003();
    BEGIN
      ComplaintSetup.GET;
      ComplaintSetup.TESTFIELD("Delivered Project Nos.");
      ComplaintSetup.TESTFIELD("Delivered Object Nos.");
    END;

    [External]
    PROCEDURE GetProjContact@1210190004(lPrincipalNo@1210190001 : Code[20]) : Code[20];
    VAR
      lContBusRel@1210190000 : Record 5054;
    BEGIN
      lContBusRel.SETCURRENTKEY("Link to Table","No.");
      lContBusRel.SETRANGE("Link to Table",lContBusRel."Link to Table"::Customer);
      lContBusRel.SETRANGE("No.",lPrincipalNo);
      IF NOT lContBusRel.FIND('-') THEN BEGIN
        MESSAGE(Text004, lPrincipalNo);
        EXIT('');
      END;

      EXIT(lContBusRel."Contact No.");
    END;

    [External]
    PROCEDURE CopyPrincipals@1100485000(iJobNo@1100485000 : Code[20];iDelObjNo@1100485001 : Code[20]);
    VAR
      lProjectPrincipalRec@1100485002 : Record 11012005;
      lDelObjectPrincipal@1100485003 : Record 11012109;
      lBusinessRelRec@1100485005 : Record 5054;
    BEGIN
      lProjectPrincipalRec.SETRANGE("Project No.",iJobNo);
      IF lProjectPrincipalRec.FIND('-') THEN BEGIN
        REPEAT
          lBusinessRelRec.SETRANGE("Link to Table",lBusinessRelRec."Link to Table"::Customer);
          lBusinessRelRec.SETRANGE("No.",lProjectPrincipalRec.Principal);
          IF lBusinessRelRec.FIND('-') THEN BEGIN
            IF NOT lDelObjectPrincipal.GET(iDelObjNo, lBusinessRelRec."Contact No.") THEN BEGIN
              lDelObjectPrincipal."Delivered Object" := iDelObjNo;
              lDelObjectPrincipal.Principal := lBusinessRelRec."Contact No.";
              lDelObjectPrincipal.INSERT;
            END;
          END;
        UNTIL lProjectPrincipalRec.NEXT = 0;
      END;
    END;

    [External]
    PROCEDURE CopyAuthorities@1100485001(iProjNo@1100485001 : Code[20];iDelProjNo@1100485000 : Code[20]);
    VAR
      lProjAuthRec@1100485003 : Record 11020216;
      lDeliveredProjAuthRec@1100485002 : Record 11012110;
    BEGIN
      lProjAuthRec.SETRANGE("Project No.",iProjNo);
      IF lProjAuthRec.FIND('-') THEN
        REPEAT
          IF NOT lDeliveredProjAuthRec.GET(
                   iDelProjNo,
                   lProjAuthRec."Authority Type",
                   lProjAuthRec."Contact No.",
                   lProjAuthRec."Contact Person No.")
          THEN BEGIN
            lDeliveredProjAuthRec.INIT;
            lDeliveredProjAuthRec."Delivered Project No." := iDelProjNo;
            lDeliveredProjAuthRec."Authority Type" := lProjAuthRec."Authority Type";
            lDeliveredProjAuthRec."Contact No." := lProjAuthRec."Contact No.";
            lDeliveredProjAuthRec."Contact Person No." := lProjAuthRec."Contact No.";
            lDeliveredProjAuthRec.Comment := lProjAuthRec.Comment;
            IF lDeliveredProjAuthRec.INSERT THEN;
          END;
        UNTIL lProjAuthRec.NEXT = 0;
    END;

    [External]
    PROCEDURE NotifyRecordsAdded@1100485006();
    BEGIN
      IF AddCount <> 0 THEN
        MESSAGE(Text001,AddCount)
      ELSE
        MESSAGE(Text002);
    END;

    BEGIN
    {
      //20060705-JE : Modified [OnRun], [GenDelObjNo] => Date functionality
    }
    END.
  }
}

