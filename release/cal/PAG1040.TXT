OBJECT Page 1040 Copy Job
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Copy Job;
               NOR=Kopier prosjekt;
               SVE=Kopiera projekt];
    PageType=StandardDialog;
    OnOpenPage=BEGIN
                 PlanningLineType := PlanningLineType::"Budget+Billable";
                 LedgerEntryType := LedgerEntryType::"Usage+Sale";
                 ValidateSource;
               END;

    OnQueryClosePage=BEGIN
                       IF CloseAction IN [ACTION::OK,ACTION::LookupOK] THEN BEGIN
                         ValidateUserInput;
                         CopyJob.SetCopyOptions(CopyJobPrices,CopyQuantity,CopyDimensions,Source,PlanningLineType,LedgerEntryType);
                         CopyJob.SetJobTaskRange(FromJobTaskNo,ToJobTaskNo);
                         CopyJob.SetJobTaskDateRange(FromDate,ToDate);
                         CopyJob.CopyJob(SourceJob,TargetJobNo,TargetJobDescription,TargetBillToCustomerNo);
                         MESSAGE(Text001);
                       END
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 15  ;1   ;Group     ;
                CaptionML=[ENU=Copy from;
                           NOR=Kopier fra;
                           SVE=Kopiera fr†n] }

    { 11  ;2   ;Field     ;
                CaptionML=[ENU=Job No.;
                           NOR=Prosjektnr.;
                           SVE=Projektnr];
                ToolTipML=[ENU=Specifies the job number.;
                           NOR=Angir prosjektnummeret.;
                           SVE=Anger projektnumret.];
                ApplicationArea=#Jobs;
                SourceExpr=SourceJobNo;
                TableRelation=Job;
                OnValidate=BEGIN
                             IF (SourceJobNo <> '') AND NOT SourceJob.GET(SourceJobNo) THEN
                               ERROR(Text003,SourceJob.TABLECAPTION,SourceJobNo);
                             TargetJobDescription := SourceJob.Description;
                             TargetBillToCustomerNo := SourceJob."Bill-to Customer No.";

                             FromJobTaskNo := '';
                             ToJobTaskNo := '';
                           END;
                            }

    { 9   ;2   ;Field     ;
                CaptionML=[ENU=Job Task No. from;
                           NOR=Prosjektoppgavenr. fra;
                           SVE=Projektaktivitetsnr fr†n];
                ToolTipML=[ENU=Specifies the first job task number to be copied from. Only planning lines with a job task number equal to or higher than the number specified in this field will be included.;
                           NOR=Angir det f›rste prosjektoppgavenummeret det skal kopieres fra. Bare planleggingslinjer med et prosjektoppgavenummer som er lik eller h›yere enn nummeret du angir i dette feltet, inkluderes.;
                           SVE=Anger det f”rsta projektaktivitetsnumret du vill kopiera fr†n. Det „r bara planeringsrader med ett projektaktivitetsnummer som „r samma som, eller h”gre „n, det nummer som har angetts i det h„r f„ltet som kommer att inkluderas.];
                ApplicationArea=#Jobs;
                SourceExpr=FromJobTaskNo;
                OnValidate=VAR
                             JobTask@1000 : Record 11072600;
                           BEGIN
                             IF (FromJobTaskNo <> '') AND NOT JobTask.GET(SourceJob."No.",FromJobTaskNo) THEN
                               ERROR(Text003,JobTask.TABLECAPTION,FromJobTaskNo);
                           END;

                OnLookup=VAR
                           JobTask@1000 : Record 11072600;
                         BEGIN
                           IF SourceJob."No." <> '' THEN BEGIN
                             JobTask.SETRANGE("Job No.",SourceJob."No.");
                             IF PAGE.RUNMODAL(PAGE::"Job Task List",JobTask) = ACTION::LookupOK THEN
                               FromJobTaskNo := JobTask."Job Task No.";
                           END;
                         END;
                          }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Job Task No. to;
                           NOR=Prosjektoppgavenr. til;
                           SVE=Projektaktivitetsnr till];
                ToolTipML=[ENU=Specifies the last job task number to be copied from. Only planning lines with a job task number equal to or lower than the number specified in this field will be included.;
                           NOR=Angir det siste prosjektoppgavenummeret det skal kopieres fra. Bare planleggingslinjer med et prosjektoppgavenummer som er lik eller lavere enn nummeret du angir i dette feltet, inkluderes.;
                           SVE=Anger det sista projektaktivitetsnumret du vill kopiera fr†n. Det „r bara planeringsrader med ett projektaktivitetsnummer som „r samma som, eller l„gre „n, det nummer som har angetts i det h„r f„ltet som kommer att inkluderas.];
                ApplicationArea=#Jobs;
                SourceExpr=ToJobTaskNo;
                OnValidate=VAR
                             JobTask@1000 : Record 11072600;
                           BEGIN
                             IF (ToJobTaskNo <> '') AND NOT JobTask.GET(SourceJobNo,ToJobTaskNo) THEN
                               ERROR(Text003,JobTask.TABLECAPTION,ToJobTaskNo);
                           END;

                OnLookup=VAR
                           JobTask@1000 : Record 11072600;
                         BEGIN
                           IF SourceJobNo <> '' THEN BEGIN
                             JobTask.SETRANGE("Job No.",SourceJobNo);
                             IF PAGE.RUNMODAL(PAGE::"Job Task List",JobTask) = ACTION::LookupOK THEN
                               ToJobTaskNo := JobTask."Job Task No.";
                           END;
                         END;
                          }

    { 13  ;2   ;Field     ;
                Name=From Source;
                CaptionML=[ENU=Source;
                           NOR=Kilde;
                           SVE=K„lla];
                ToolTipML=[ENU=Specifies the basis on which you want the planning lines to be copied. If, for example, you want the planning lines to reflect actual usage and invoicing of items, resources, and general ledger expenses on the job you copy from, then select Job Ledger Entries in this field.;
                           NOR=Angir grunnlaget for kopiering av planleggingslinjene. Hvis du for eksempel vil at planleggingslinjene skal gjenspeile faktisk forbruk og fakturering av varer, ressurser og finansutgifter i prosjektet du kopierer fra, m† du velge Prosjektposter i dette feltet.;
                           SVE=Anger det underlag som du vill anv„nda n„r planeringsraderna ska kopieras. Om du t.ex. vill att planeringsraderna ska reflektera verklig f”rbrukning och fakturering av artiklar, resurser och redovisningskostnader f”r det projekt du kopierar fr†n, v„ljer du Projekttransaktioner i det h„r f„ltet.];
                OptionCaptionML=[ENU=Job Planning Lines,Job Ledger Entries,None;
                                 NOR=Prosjektplanleggingslinjer,Prosjektposter,Ingen;
                                 SVE=Projektplaneringsrader,Projekttransaktioner,Ingen];
                ApplicationArea=#Jobs;
                SourceExpr=Source;
                OnValidate=BEGIN
                             ValidateSource;
                           END;
                            }

    { 23  ;2   ;Field     ;
                Name=Planning Line Type;
                CaptionML=[ENU=Incl. Planning Line Type;
                           NOR=Inkl. planleggingslinjetype;
                           SVE=Inkl. planeringsradtyp];
                ToolTipML=[ENU=Specifies how copy planning lines. Budget+Billable: All planning lines are copied. Budget: Only lines of type Budget or type Both Budget and Billable are copied. Billable: Only lines of type Billable or type Both Budget and Billable are copied.;
                           NOR=Angir hvordan du kopierer planleggingslinjer. Budsjett+Fakturerbar: Alle planleggingslinjer blir kopiert. Budsjett: Bare linjer av typen Budsjett eller B†de Budsjett og Fakturerbar blir kopiert. Fakturerbar: Bare linjer av typen Fakturerbar eller B†de Budsjett og Fakturerbar blir kopiert.;
                           SVE=Anger hur planeringsrader kopieras. Budget+fakturerbart: Alla planeringsrader kopieras. Budget: Bara rader av typen Budget eller typen B†de budget och fakturerbart kopieras. Fakturerbart: Bara rader av typen Fakturerbart eller B†de budget och fakturerbart kopieras.];
                OptionCaptionML=[ENU=Budget+Billable,Budget,Billable;
                                 NOR=Budsjett+Fakturerbar,Budsjett,Fakturerbar;
                                 SVE=Budget+fakturerbart,Budget,Fakturerbart];
                ApplicationArea=#Jobs;
                SourceExpr=PlanningLineType;
                Enabled=PlanningLineTypeEnable }

    { 25  ;2   ;Field     ;
                Name=Ledger Entry Line Type;
                CaptionML=[ENU=Incl. Ledger Entry Line Type;
                           NOR=Inkl. postlinjetype;
                           SVE=Inkl. transaktionsradtyp];
                ToolTipML=[ENU=Specifies how to copy job ledger entries. Usage+Sale: All job ledger entries are copied. Entries of type Usage are copied to new planning lines of type Budget. Entries of type Sale are copied to new planning lines of type Billable. Usage: All job ledger entries of type Usage are copied to new planning lines of type Budget. Sale: All job ledger entries of type Sale are copied to new planning lines of type Billable.;
                           NOR=Angir hvordan du kopierer prosjektposter. Forbruk+Salg: Alle prosjektposter blir kopiert. Poster av typen Forbruk blir kopiert til nye planleggingslinjer av typen Budsjett. Poster av typen Salg blir kopiert til nye planleggingslinjer av typen Fakturerbar. Forbruk: Alle prosjektposter av typen Forbruk blir kopiert til nye planleggingslinjer av typen Budsjett. Salg: Alle prosjektposter av typen Salg blir kopiert til nye planleggingslinjer av typen Fakturerbar.;
                           SVE=Anger hur projekttransaktioner kopieras. F”rbrukning+f”rs„ljning: Alla projekttransaktioner kopieras. Transaktioner av typen F”rbrukning kopieras till nya planeringsrader av typen Budget. Transaktioner av typen F”rs„ljning kopieras till nya planeringsrader av typen Fakturerbart. F”rbrukning: Alla projekttransaktioner av typen F”rbrukning kopieras till nya planeringsrader av typen Budget. F”rs„ljning: Alla projekttransaktioner av typen F”rs„ljning kopieras till nya planeringsrader av typen Fakturerbart.];
                OptionCaptionML=[ENU=Usage+Sale,Usage,Sale;
                                 NOR=Forbruk+Salg,Forbruk,Salg;
                                 SVE=Anv„ndning+F”rs„ljning,Anv„ndning,F”rs„ljning];
                ApplicationArea=#Jobs;
                SourceExpr=LedgerEntryType;
                Enabled=LedgerEntryLineTypeEnable }

    { 7   ;2   ;Field     ;
                CaptionML=[ENU=Starting Date;
                           NOR=Startdato;
                           SVE=Startdatum];
                ToolTipML=[ENU=Specifies the date from which the report or batch job processes information.;
                           NOR=Angir datoen som rapporten eller kj›rselen behandler informasjon fra.;
                           SVE=Anger datumet fr†n vilket rapporten eller batch-jobbet bearbetar information.];
                ApplicationArea=#Jobs;
                SourceExpr=FromDate }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Ending Date;
                           NOR=Sluttdato;
                           SVE=Slutdatum];
                ToolTipML=[ENU=Specifies the date to which the report or batch job processes information.;
                           NOR=Angir datoen som rapporten eller kj›rselen behandler informasjon til.;
                           SVE=Anger datumet till vilket rapporten eller batch-jobbet bearbetar information.];
                ApplicationArea=#Jobs;
                SourceExpr=ToDate }

    { 5   ;1   ;Group     ;
                CaptionML=[ENU=Copy to;
                           NOR=Kopier til;
                           SVE=Kopiera till] }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=Job No.;
                           NOR=Prosjektnr.;
                           SVE=Projektnr];
                ToolTipML=[ENU=Specifies the job number.;
                           NOR=Angir prosjektnummeret.;
                           SVE=Anger projektnumret.];
                ApplicationArea=#Jobs;
                SourceExpr=TargetJobNo }

    { 31  ;2   ;Field     ;
                CaptionML=[ENU=Job Description;
                           NOR=Prosjektbeskrivelse;
                           SVE=Projektbeskrivning];
                ToolTipML=[ENU=Specifies a description of the job.;
                           NOR=Angir en beskrivelse av prosjektet.;
                           SVE=Anger en beskrivning av projektet.];
                ApplicationArea=#Jobs;
                SourceExpr=TargetJobDescription }

    { 33  ;2   ;Field     ;
                CaptionML=[ENU=Bill-To Customer No.;
                           NOR=Faktura til-kundenr.;
                           SVE=Faktureringskundnr];
                ToolTipML=[ENU=Specifies the number of an alternate customer that the job is billed to instead of the main customer.;
                           NOR=Angir nummeret for en alternativ kunde som prosjektet faktureres til i stedet for hovedkunden.;
                           SVE=Anger numret p† den alternativa kunden som projektet faktureras till i st„llet f”r huvudkunden.];
                ApplicationArea=#Jobs;
                SourceExpr=TargetBillToCustomerNo;
                TableRelation=Customer }

    { 6   ;1   ;Group     ;
                CaptionML=[ENU=Apply;
                           NOR=Bruk;
                           SVE=Verkst„ll] }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=Copy Job Prices;
                           NOR=Kopier prosjektpriser;
                           SVE=Kopiera projektpriser];
                ToolTipML=[ENU=Specifies that item prices, resource prices, and G/L prices will be copied from the job that you specified on the Copy From FastTab.;
                           NOR=Angir at varepriser, ressurspriser og finanspriser blir kopiert fra prosjektet du angav i hurtigfanen Kopier fra.;
                           SVE=Anger att artikelpriser, resurspriser och redovisningspriser kopieras fr†n projektet som du anger p† snabbfliken Kopiera fr†n.];
                ApplicationArea=#Jobs;
                SourceExpr=CopyJobPrices }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Copy Quantity;
                           NOR=Kopier mengde;
                           SVE=Kopiera antal];
                ToolTipML=[ENU=Specifies that the quantities will be copied to the new job.;
                           NOR=Angir at alle antallene blir kopiert til det nye prosjektet.;
                           SVE=Anger att antalen kopieras fr†n det nya projektet.];
                ApplicationArea=#Jobs;
                SourceExpr=CopyQuantity }

    { 28  ;2   ;Field     ;
                CaptionML=[ENU=Copy Dimensions;
                           NOR=Kopier dimensjoner;
                           SVE=Kopierar dimensioner];
                ToolTipML=[ENU=Specifies that the dimensions will be copied to the new job.;
                           NOR=Angir at alle dimensjonene blir kopiert til det nye prosjektet.;
                           SVE=Anger att dimensionerna kopieras fr†n det nya projektet.];
                ApplicationArea=#Dimensions;
                SourceExpr=CopyDimensions }

  }
  CODE
  {
    VAR
      SourceJob@1010 : Record 11072003;
      CopyJob@1013 : Codeunit 11072018;
      SourceJobNo@1017 : Code[20];
      FromJobTaskNo@1009 : Code[20];
      ToJobTaskNo@1004 : Code[20];
      TargetJobNo@1008 : Code[20];
      TargetJobDescription@1007 : Text[100];
      TargetBillToCustomerNo@1014 : Code[20];
      FromDate@1006 : Date;
      ToDate@1005 : Date;
      Source@1003 : 'Job Planning Lines,Job Ledger Entries,None';
      PlanningLineType@1002 : 'Budget+Billable,Budget,Billable';
      LedgerEntryType@1001 : 'Usage+Sale,Usage,Sale';
      Text001@1016 : TextConst 'ENU=The job was successfully copied.;NOR=Prosjektet er kopiert.;SVE=Projektet har kopierats.';
      Text002@1019 : TextConst 'ENU=Job No. %1 will be assigned to the new Job. Do you want to continue?;NOR=Prosjektnr. %1 vil bli tilordnet til det nye prosjektet. Vil du fortsette?;SVE=Projektnummer %1 tilldelas det nya projektet. Vill du forts„tta?';
      Text003@1018 : TextConst '@@@=Job Task 1000 does not exist.;ENU=%1 %2 does not exist.;NOR=%1 %2 finnes ikke.;SVE=%1 %2 finns inte.';
      CopyJobPrices@1012 : Boolean;
      CopyQuantity@1011 : Boolean;
      CopyDimensions@1000 : Boolean;
      PlanningLineTypeEnable@1020 : Boolean INDATASET;
      LedgerEntryLineTypeEnable@1021 : Boolean INDATASET;
      Text004@1015 : TextConst 'ENU=Provide a valid source %1.;NOR=Angi en gyldig kilde %1.;SVE=Ange en giltig k„lla %1.';

    LOCAL PROCEDURE ValidateUserInput@1();
    VAR
      JobsSetup@1001 : Record 315;
      NoSeriesManagement@1000 : Codeunit 396;
    BEGIN
      IF (SourceJobNo = '') OR NOT SourceJob.GET(SourceJob."No.") THEN
        ERROR(Text004,SourceJob.TABLECAPTION);

      JobsSetup.GET;
      JobsSetup.TESTFIELD("Job Nos.");
      IF TargetJobNo = '' THEN BEGIN
        TargetJobNo := NoSeriesManagement.GetNextNo(JobsSetup."Job Nos.",0D,TRUE);
        IF NOT CONFIRM(Text002,TRUE,TargetJobNo) THEN BEGIN
          TargetJobNo := '';
          ERROR('');
        END;
      END ELSE
        NoSeriesManagement.TestManual(JobsSetup."Job Nos.");
    END;

    LOCAL PROCEDURE ValidateSource@2();
    BEGIN
      CASE TRUE OF
        Source = Source::"Job Planning Lines":
          BEGIN
            PlanningLineTypeEnable := TRUE;
            LedgerEntryLineTypeEnable := FALSE;
          END;
        Source = Source::"Job Ledger Entries":
          BEGIN
            PlanningLineTypeEnable := FALSE;
            LedgerEntryLineTypeEnable := TRUE;
          END;
        Source = Source::None:
          BEGIN
            PlanningLineTypeEnable := FALSE;
            LedgerEntryLineTypeEnable := FALSE;
          END;
      END;
    END;

    [External]
    PROCEDURE SetFromJob@3(SourceJob2@1000 : Record 11072003);
    BEGIN
      SourceJob := SourceJob2;
      SourceJobNo := SourceJob."No.";
      TargetJobDescription := SourceJob.Description;
      TargetBillToCustomerNo := SourceJob."Bill-to Customer No.";
    END;

    BEGIN
    {
      4PS, Objects renumbered
    }
    END.
  }
}

