OBJECT Page 81649 Job Control Result List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=RFC043, RFC120;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Job Control Result List;
               SVE=Projektkontroll resultatlista];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table81612;
    PageType=List;
    SourceTableTemporary=Yes;
    OnQueryClosePage=BEGIN
                       EXIT(CONFIRM(Text003, FALSE));
                     END;

    ActionList=ACTIONS
    {
      { 1100285104;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100285103;1 ;ActionGroup;
                      CaptionML=[ENU=General;
                                 NOR=Generelt;
                                 SVE=Allm„nt] }
      { 1100285105;2 ;Action    ;
                      CaptionML=[ENU=Get Data;
                                 NOR=Hent Data;
                                 SVE=H„mta underlag];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=RefreshLines;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 GetData;
                               END;
                                }
      { 1100285102;2 ;Action    ;
                      CaptionML=[ENU=To Excel;
                                 SVE=Till Excel];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Excel;
                      PromotedCategory=Report;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 Window.OPEN('#1##################');
                                 Window.UPDATE(1,'CreateHeader');
                                 CreateHeader;
                                 Window.UPDATE(1,'WriteLine');
                                 IF FINDSET THEN
                                 REPEAT
                                   WriteLine;
                                 UNTIL NEXT=0;

                                 Window.UPDATE(1,'CreateBook');
                                 ExcelBuf.CreateBook('',TABLECAPTION);
                                 ExcelBuf.WriteSheet(CurrPage.OBJECTID(TRUE), CompanyInfo.Name, USERID);
                                 ExcelBuf.CloseBook;
                                 ExcelBuf.OpenExcel;
                                 // ExcelBuf.GiveUserControl;
                                 Window.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100285100;0;Container;
                ContainerType=ContentArea }

    { 1100285116;1;Group  ;
                CaptionML=[ENU=Limit Data Loading;
                           NOR=Filter for datautvalg;
                           SVE=Begr„nsa datah„mtning];
                GroupType=Group }

    { 1100285118;2;Field  ;
                CaptionML=[ENU=Dimension;
                           NOR=Dimensjon;
                           SVE=Dimension];
                SourceExpr=DimensionCode;
                OnLookup=VAR
                           Dimension@1100285000 : Record 348;
                         BEGIN
                           IF PAGE.RUNMODAL(0, Dimension) = ACTION::LookupOK THEN
                             DimensionCode := Dimension.Code;
                           CurrPage.UPDATE;
                         END;
                          }

    { 1100285117;2;Field  ;
                CaptionML=[ENU=Dimension Value;
                           NOR=Dimensjonsverdi;
                           SVE=Dimensionsv„rde];
                SourceExpr=DimensionValueCode;
                OnLookup=VAR
                           DimensionValue@1100285000 : Record 349;
                         BEGIN
                           DimensionValue.SETRANGE("Dimension Code", DimensionCode);
                           IF PAGE.RUNMODAL(0, DimensionValue) = ACTION::LookupOK THEN
                             DimensionValueCode := DimensionValue.Code;
                           CurrPage.UPDATE;
                         END;
                          }

    { 1100285107;1;Group  ;
                CaptionML=[ENU=Quick Filters;
                           NOR=Hurtigfilter;
                           SVE=Snabbfilter];
                GroupType=Group }

    { 1100285108;2;Field  ;
                SourceExpr=ValueOption[1];
                CaptionClass='1,5,,'+ValueTxt1;
                OnValidate=BEGIN
                             IF ValueOption[1] THEN
                               SETRANGE("Job Control Field 1", ValueOption[1])
                             ELSE
                               SETRANGE("Job Control Field 1");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100285109;2;Field  ;
                SourceExpr=ValueOption[2];
                CaptionClass='1,5,,'+ValueTxt2;
                OnValidate=BEGIN
                             IF ValueOption[2] THEN
                               SETRANGE("Job Control Field 2", ValueOption[2])
                             ELSE
                               SETRANGE("Job Control Field 2");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100285112;2;Field  ;
                SourceExpr=ValueOption[3];
                CaptionClass='1,5,,'+ValueTxt3;
                OnValidate=BEGIN
                             IF ValueOption[3] THEN
                               SETRANGE("Job Control Field 3", ValueOption[3])
                             ELSE
                               SETRANGE("Job Control Field 3");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100285110;2;Field  ;
                SourceExpr=ValueOption[4];
                CaptionClass='1,5,,'+ValueTxt4;
                OnValidate=BEGIN
                             IF ValueOption[4] THEN
                               SETRANGE("Job Control Field 4", ValueOption[4])
                             ELSE
                               SETRANGE("Job Control Field 4");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100285114;2;Field  ;
                SourceExpr=ValueOption[5];
                CaptionClass='1,5,,'+ValueTxt5;
                OnValidate=BEGIN
                             IF ValueOption[5] THEN
                               SETRANGE("Job Control Field 5", ValueOption[5])
                             ELSE
                               SETRANGE("Job Control Field 5");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100285115;2;Field  ;
                SourceExpr=ValueOption[6];
                CaptionClass='1,5,,'+ValueTxt6;
                OnValidate=BEGIN
                             IF  ValueOption[6] THEN
                               SETRANGE("Job Control Field 6",  ValueOption[6])
                             ELSE
                               SETRANGE("Job Control Field 6");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100285111;2;Field  ;
                SourceExpr=ValueOption[7];
                CaptionClass='1,5,,'+ValueTxt7;
                OnValidate=BEGIN
                             IF ValueOption[7] THEN
                               SETRANGE("Job Control Field 7", ValueOption[7])
                             ELSE
                               SETRANGE("Job Control Field 7");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100285119;2;Field  ;
                SourceExpr=ValueOption[8];
                CaptionClass='1,5,,'+ValueTxt8;
                OnValidate=BEGIN
                             IF ValueOption[8] THEN
                               SETRANGE("Job Control Field 8", ValueOption[8])
                             ELSE
                               SETRANGE("Job Control Field 8");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100285120;2;Field  ;
                SourceExpr=ValueOption[9];
                CaptionClass='1,5,,'+ValueTxt9;
                OnValidate=BEGIN
                             IF ValueOption[9] THEN
                               SETRANGE("Job Control Field 9", ValueOption[9])
                             ELSE
                               SETRANGE("Job Control Field 9");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100285121;2;Field  ;
                SourceExpr=ValueOption[10];
                CaptionClass='1,5,,'+ValueTxt10;
                OnValidate=BEGIN
                             IF ValueOption[10] THEN
                               SETRANGE("Job Control Field 10", ValueOption[10])
                             ELSE
                               SETRANGE("Job Control Field 10");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100285132;2;Field  ;
                SourceExpr=ValueOption[11];
                CaptionClass='1,5,,'+ValueTxt11;
                OnValidate=BEGIN
                             IF ValueOption[11] THEN
                               SETRANGE("Job Control Field 11", ValueOption[11])
                             ELSE
                               SETRANGE("Job Control Field 11");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100285133;2;Field  ;
                SourceExpr=ValueOption[12];
                CaptionClass='1,5,,'+ValueTxt12;
                OnValidate=BEGIN
                             IF ValueOption[12] THEN
                               SETRANGE("Job Control Field 12", ValueOption[12])
                             ELSE
                               SETRANGE("Job Control Field 12");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1000000000;2;Field  ;
                SourceExpr=ValueOption[13];
                CaptionClass='1,5,,'+ValueTxt13;
                OnValidate=BEGIN
                             IF ValueOption[13] THEN
                               SETRANGE("Job Control Field 13", ValueOption[13])
                             ELSE
                               SETRANGE("Job Control Field 13");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1000000002;2;Field  ;
                SourceExpr=ValueOption[14];
                CaptionClass='1,5,,'+ValueTxt14;
                OnValidate=BEGIN
                             IF ValueOption[14] THEN
                               SETRANGE("Job Control Field 14", ValueOption[14])
                             ELSE
                               SETRANGE("Job Control Field 14");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1000000004;2;Field  ;
                SourceExpr=ValueOption[15];
                CaptionClass='1,5,,'+ValueTxt15;
                OnValidate=BEGIN
                             IF ValueOption[15] THEN
                             //>>190521
                             //  SETRANGE("Job Control Field 14", ValueOption[15])
                               SETRANGE("Job Control Field 15", ValueOption[15])
                             //<<190521
                             ELSE
                               SETRANGE("Job Control Field 15");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1101285000;2;Field  ;
                SourceExpr=ValueOption[16];
                CaptionClass='1,5,,'+ValueTxt16;
                OnValidate=BEGIN
                             IF ValueOption[16] THEN
                               SETRANGE("Job Control Field 16", ValueOption[16])
                             ELSE
                               SETRANGE("Job Control Field 16");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100285101;1;Group  ;
                Name=Group;
                Editable=FALSE;
                GroupType=Repeater }

    { 1100285144;2;Field  ;
                SourceExpr="No.";
                Editable=FALSE;
                OnLookup=VAR
                           Job@1100285100 : Record 11072003;
                         BEGIN
                           Job.GET("No.");
                           PAGE.RUN(PAGE::"Job Card",Job);
                         END;
                          }

    { 1100285171;2;Field  ;
                SourceExpr=Description }

    { 1100285170;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1100285169;2;Field  ;
                SourceExpr="Project Address Code";
                Visible=FALSE }

    { 1100285168;2;Field  ;
                SourceExpr="Bill-to Customer No.";
                Visible=FALSE }

    { 1100285166;2;Field  ;
                SourceExpr=Address;
                Visible=FALSE }

    { 1100285165;2;Field  ;
                SourceExpr="Address 2";
                Visible=FALSE }

    { 1100285164;2;Field  ;
                SourceExpr="Post Code";
                Visible=FALSE }

    { 1100285163;2;Field  ;
                SourceExpr=City;
                Visible=FALSE }

    { 1100285162;2;Field  ;
                SourceExpr="Phone No.";
                Visible=FALSE }

    { 1100285161;2;Field  ;
                SourceExpr="Fax No.";
                Visible=FALSE }

    { 1100285160;2;Field  ;
                SourceExpr="Project Type";
                Visible=FALSE }

    { 1100285159;2;Field  ;
                SourceExpr="Territory Code";
                Visible=FALSE }

    { 1100285158;2;Field  ;
                SourceExpr="Global Dimension 1 Code" }

    { 1100285157;2;Field  ;
                SourceExpr=Type;
                Visible=FALSE }

    { 1100285156;2;Field  ;
                SourceExpr="Project Manager";
                Visible=FALSE }

    { 1100285154;2;Field  ;
                SourceExpr="Search Description";
                Visible=FALSE }

    { 1100285153;2;Field  ;
                SourceExpr="Project Status" }

    { 1100285152;2;Field  ;
                SourceExpr="Small Project Status";
                Visible=FALSE }

    { 1100285151;2;Field  ;
                SourceExpr="Urgency Code";
                Visible=FALSE }

    { 1100285150;2;Field  ;
                SourceExpr="Action by";
                Visible=FALSE }

    { 1100285149;2;Field  ;
                SourceExpr="Single/Main/Sub Project" }

    { 1100285148;2;Field  ;
                SourceExpr="Main Project";
                Visible=FALSE }

    { 1100285147;2;Field  ;
                SourceExpr="Prognosis Level";
                Visible=FALSE }

    { 1100285146;2;Field  ;
                SourceExpr="Forecast Level";
                Visible=FALSE }

    { 1100285143;2;Field  ;
                SourceExpr="Starting Date";
                Visible=FALSE }

    { 1100285142;2;Field  ;
                SourceExpr="Ending Date";
                Visible=FALSE }

    { 1100285141;2;Field  ;
                SourceExpr="Requested starting time";
                Visible=FALSE }

    { 1100285140;2;Field  ;
                SourceExpr="Order No. Customer";
                Visible=FALSE }

    { 1100285139;2;Field  ;
                SourceExpr="Purchaser Code";
                Visible=FALSE }

    { 1100285138;2;Field  ;
                SourceExpr="Offers Expired";
                Visible=FALSE }

    { 1100285137;2;Field  ;
                SourceExpr=Text;
                Visible=FALSE }

    { 1100285136;2;Field  ;
                SourceExpr="Settlement Method";
                Visible=TRUE }

    { 1100285131;2;Field  ;
                SourceExpr="Job Control Field 1" }

    { 1100285130;2;Field  ;
                SourceExpr="Job Control Field 2" }

    { 1100285129;2;Field  ;
                SourceExpr="Job Control Field 3" }

    { 1100285128;2;Field  ;
                SourceExpr="Job Control Field 4" }

    { 1100285127;2;Field  ;
                SourceExpr="Job Control Field 5" }

    { 1100285126;2;Field  ;
                SourceExpr="Job Control Field 6" }

    { 1100285125;2;Field  ;
                SourceExpr="Job Control Field 7" }

    { 1100285124;2;Field  ;
                SourceExpr="Job Control Field 8" }

    { 1100285123;2;Field  ;
                SourceExpr="Job Control Field 9" }

    { 1100285122;2;Field  ;
                SourceExpr="Job Control Field 10" }

    { 1100285134;2;Field  ;
                SourceExpr="Job Control Field 11" }

    { 1100285135;2;Field  ;
                SourceExpr="Job Control Field 12" }

    { 1000000001;2;Field  ;
                SourceExpr="Job Control Field 13" }

    { 1000000003;2;Field  ;
                SourceExpr="Job Control Field 14" }

    { 1000000005;2;Field  ;
                SourceExpr="Job Control Field 15" }

    { 1101285001;2;Field  ;
                SourceExpr="Job Control Field 16" }

  }
  CODE
  {
    VAR
      GLSetup@1100285109 : Record 98;
      JobControlBuffer@1100285116 : TEMPORARY Record 81612;
      FilterCostCenter@1100285110 : Text;
      DimensionCode@1100285108 : Code[20];
      DimensionValueCode@1100285107 : Code[20];
      ValueOption@1100285118 : ARRAY [20] OF Boolean;
      Window@1100285103 : Dialog;
      Text001@1100285104 : TextConst 'ENU=Updating';
      Text002@1100285117 : TextConst 'ENU=No cost center filter was applied. Do you want to continue?;NOR=Ingen kostnadssentralfilter ble brukt. Vil du fortsette?;SVE=Inget filter p† kostnadsst„lle har angivits. Vill du g† vidare?';
      Text003@1100285100 : TextConst 'ENU=All loaded data will be lost when leaving the page. Do you want to continue?;SVE=N„r du l„mnar sidan kommer allt ev. underlag som h„mtats att tas bort. Vill du g† vidare?';
      ExcludedEntry@1100285111 : Record 81639;
      ExcelBuf@1100285106 : TEMPORARY Record 370;
      RowNo@1100285105 : Integer;
      CompanyInfo@1100285101 : Record 79;
      startDT@1100285102 : DateTime;
      ValueTxt1@1100285112 : TextConst 'ENU=1. Sub Project has forecast;NOR=1. Underprosjekt har prognose:;SVE=1. Underprojekt har prognos';
      ValueTxt2@1100285113 : TextConst 'ENU=2. Closed main project with open sub project;NOR=2. Stengte hovedprosjekt med †pne underprosjekt:;SVE=2. St„ngda huvudprojekt med ”ppna underprojekt';
      ValueTxt3@1100285114 : TextConst 'ENU=3. Main Proj. is admin ready but sub proj. has lower status;NOR=3. Hovedprosj. adm.ferdig, men underprosj. har lavere status:;SVE=3. Huvudproj. adminklar men underproj. har l„gre status';
      ValueTxt4@1100285115 : TextConst 'ENU=4. Single/Main proj. changed to sub proj.;NOR=4. Enkel/Hovedprosj. har endret til underprosjekt:;SVE=4. Enkel-/huvudproj. „ndrat status till underproj.';
      ValueTxt5@1100285119 : TextConst 'ENU=5. Project is missing cost center;NOR=5. Prosjekt mangler kostnadssted:;SVE=5. Projekt saknar kostnadsst„lle';
      ValueTxt6@1100285120 : TextConst 'ENU=6. Project is missing project type;NOR=6. Prosjekt mangler prosjekttype:;SVE=6. Projekt saknar projekttyp';
      ValueTxt7@1100285121 : TextConst 'ENU=7. Proj.  is missing Installment;NOR=7. Prosjekt mangler betalingsplan:;SVE=7. Projekt saknar betalplan';
      ValueTxt8@1100285122 : TextConst 'ENU=8. Incurred cost mMargin exceeds 100%;NOR=8. Ferdiggrad overstiger 100%:;SVE=8. Upparbetningsgrad ”verstiger 100%';
      ValueTxt9@1100285123 : TextConst 'ENU="9. Proj. has std.cost = 0";NOR="9. Prosjekt har std.kost = 0:";SVE="9. Projekt har std.kostnad = 0"';
      ValueTxt10@1100285124 : TextConst 'ENU=10. Forecast level changed;NOR=10. Prognosemetode er endret:;SVE=10. Prognosmetod „ndrad';
      ValueTxt11@1100285125 : TextConst 'ENU=11. Sub proj. with sub proj.;NOR=11. Underprosjekt med underprosjekt:;SVE=11. Underproj. med underproj.';
      ValueTxt12@1100285126 : TextConst 'ENU=12. Single proj. with sub proj.;NOR=12. Enkelprosjekt med underprosjekt:;SVE=12. Enkelproj. med underproj.';
      ValueTxt13@1100285127 : TextConst 'ENU=13. Missing Prognosis in the period;SVE=13. Saknar prognos i perioden';
      ValueTxt14@1100285128 : TextConst 'ENU=14. Project is missing Budget;SVE=14. Projekt saknar budget';
      ValueTxt15@1100285129 : TextConst 'ENU=15. Transactions exists on Mainproject;SVE=15. Transaktioner finns p† huvudprojekt';
      ValueTxt16@1101285000 : TextConst 'ENU=Projects without prognosis;SVE=16. Projekt saknar prognos';

    PROCEDURE GetData@1100285102();
    VAR
      Job@1100285101 : Record 11072003;
      SubProject@1100285102 : Record 11072003;
      Prognosis@1100285100 : Record 11012034;
      PrognosisLine@1100285104 : Record 11012035;
      PrognosisLineCC@1100285105 : Record 11128270;
      ChangeLogEntry@1100285109 : Record 405;
      ProjEmplWageCostPrice@1100285111 : Record 11020366;
      ProjectEmployeeCostPrice@1100285112 : Record 11020253;
      ProjectTradeAsCostPrice@1100285113 : Record 11020361;
      ProjCostObjectCostPrice@1100285114 : Record 11020365;
      JobLedgerEntryTotals@1100285103 : Query 81611;
      SingleMainSubValue@1100285110 : Text;
      PrognosisTotalCost@1100285106 : Decimal;
      RealCost@1100285107 : Decimal;
      IncurredCostMargin@1100285108 : Decimal;
      CostPriceIsZero@1100285115 : Boolean;
      ProjInstallment@1000000000 : Record 11012018;
      BudgetLine@1000000001 : Record 11012001;
      JobLedEntry@1000000002 : Record 11072005;
      FromDate@1000000003 : Date;
      ToDate@1000000004 : Date;
      HasPrognosis@1101285000 : Boolean;
    BEGIN
      RESET;
      DELETEALL;
      CLEAR(ValueOption);
      JobControlBuffer.RESET;
      JobControlBuffer.DELETEALL;
      Job.RESET;
      CreateCostCenterFilter();

      IF (DimensionCode <> '') AND (FilterCostCenter <> '') THEN
        Job.SETFILTER("Global Dimension 1 Code", FilterCostCenter);
      IF FilterCostCenter = '' THEN
        IF NOT CONFIRM(Text002, FALSE) THEN
          EXIT;

      //>>160711 ITERO.SB RFC-120 Exclude closed projects
      Job.SETFILTER("Project Status", '<%1', Job."Project Status"::Finished);
      //<<

      Window.OPEN(Text001);

      IF Job.FINDSET THEN
      REPEAT
        // 1. Underprojekt som har prognos
        IF Job."Single/Main/Sub Project" = SubProject."Single/Main/Sub Project"::"Sub Project" THEN BEGIN
          IF Job."Forecast Level" = Job."Forecast Level"::"Cost Component" THEN BEGIN
            PrognosisLineCC.SETRANGE("Project No.", Job."No.");
      //      IF PrognosisLineCC.COUNT > 0 THEN BEGIN
            IF NOT PrognosisLineCC.ISEMPTY THEN BEGIN
              AddOrFindProjectBuffer(Job);
              "Job Control Field 1" := TRUE;
              MODIFY;
            END;
          END ELSE BEGIN
            PrognosisLine.SETRANGE("Project No.", Job."No.");
      //      IF PrognosisLine.COUNT > 0 THEN BEGIN
            IF NOT PrognosisLine.ISEMPTY THEN BEGIN
              AddOrFindProjectBuffer(Job);
              "Job Control Field 1" := TRUE;
              MODIFY;
            END;
          END;
        END;
        //>>160711 ITERO.SB RFC-120 Exclude closed projects
        //Closed project cant be excluded from this control (moved out function from the loop)

        // 2. St„ngda huvudprojekt med ”ppna underprojekt
        //IF (Job."Single/Main/Sub Project" = Job."Single/Main/Sub Project"::"Main Project") AND
        //  (Job."Project Status" = Job."Project Status"::Finished) THEN BEGIN
        //  SubProject.RESET;
        //  SubProject.SETRANGE("Main Project", Job."No.");
        //  SubProject.SETFILTER("Project Status", '<%1', SubProject."Project Status"::Finished);
        //  IF SubProject.COUNT > 0 THEN BEGIN
        //    AddOrFindProjectBuffer(Job);
        //    "Job Control Field 2" := TRUE;
        //    MODIFY;
        //  END;
        //END;
        //<<

        // 3. Huvudprojekt som st†r i adminklara men d„r underprojekt har l„gre status
        IF (Job."Single/Main/Sub Project" = Job."Single/Main/Sub Project"::"Main Project") AND
          (Job."Project Status" = Job."Project Status"::"Administrative Finished") THEN BEGIN
          SubProject.RESET;
          SubProject.SETRANGE("Main Project", Job."No.");
          SubProject.SETFILTER("Project Status", '<%1', SubProject."Project Status"::"Administrative Finished");
      //    IF SubProject.COUNT > 0 THEN BEGIN
          IF NOT SubProject.ISEMPTY THEN BEGIN
            AddOrFindProjectBuffer(Job);
            "Job Control Field 3" := TRUE;
            MODIFY;
          END;
        END;

        // 4. Enkel eller huvudprojekt som har „ndrat status till underprojekt under nytt huvudprojekt
        SingleMainSubValue := FORMAT(Job."Single/Main/Sub Project"::"Sub Project",0,9);
        ChangeLogEntry.RESET;
        ChangeLogEntry.SETRANGE("Table No.", DATABASE::Job);
        ChangeLogEntry.SETRANGE("Primary Key Field 1 Value", Job."No.");
        ChangeLogEntry.SETRANGE("Field No.", Job.FIELDNO("Single/Main/Sub Project"));
        ChangeLogEntry.SETRANGE("Type of Change", ChangeLogEntry."Type of Change"::Modification);
        ChangeLogEntry.SETFILTER("Old Value", '<%1', SingleMainSubValue);
        ChangeLogEntry.SETRANGE("New Value", SingleMainSubValue);
      //  IF ChangeLogEntry.COUNT > 0 THEN BEGIN
        IF NOT ChangeLogEntry.ISEMPTY THEN BEGIN
          AddOrFindProjectBuffer(Job);
          "Job Control Field 4" := TRUE;
          MODIFY;
        END;

        // 5. Projekt som saknar kostnadst„lle
        IF Job."Global Dimension 1 Code" = '' THEN BEGIN
          AddOrFindProjectBuffer(Job);
          "Job Control Field 5" := TRUE;
          MODIFY;
        END;

        // 6. Projekt som saknar projekttyp
        IF Job."Project Type" = '' THEN BEGIN
          AddOrFindProjectBuffer(Job);
          "Job Control Field 6" := TRUE;
          MODIFY;

        END;

        // 7. Projekt som har bytt kostnadsst„lle  180607
      //  ChangeLogEntry.RESET;
      //  ChangeLogEntry.SETRANGE("Table No.", DATABASE::Job);
      //  ChangeLogEntry.SETRANGE("Field No.", Job.FIELDNO("Global Dimension 1 Code"));
      //  ChangeLogEntry.SETRANGE("Type of Change", ChangeLogEntry."Type of Change"::Modification);
      //  ChangeLogEntry.SETRANGE("Primary Key Field 1 Value", Job."No.");
      //  IF ChangeLogEntry.COUNT > 0 THEN BEGIN
      //    AddOrFindProjectBuffer(Job);
      //    "Job Control Field 7" := TRUE;
      //    MODIFY;
      //  END;
        //7. Projekt som saknar betalningsplan
        ProjInstallment.RESET;
        ProjInstallment.SETRANGE("Project No.",Job."No.");
      //  IF NOT ProjInstallment.FINDFIRST THEN BEGIN
        IF ProjInstallment.ISEMPTY THEN BEGIN
          AddOrFindProjectBuffer(Job);
          "Job Control Field 7" := TRUE;
          MODIFY;
        END;

      // 8. F„rdigst„llandegraden ”verstiger 100%
      // Ber„kning: Verklig kostnad / Prognos totala kostnader
      Prognosis.SETRANGE("Project No.", Job."No.");
      Prognosis.SETFILTER("Prognosis Date", '<=%1', TODAY);
      IF Prognosis.FINDLAST THEN BEGIN

        IF Job."Forecast Level" = Job."Forecast Level"::"Cost Component" THEN BEGIN
          // Cost Component
          Prognosis.CALCFIELDS("Prognosis Total Cost CC");
          PrognosisTotalCost := Prognosis."Prognosis Total Cost CC";
        END ELSE BEGIN
          // Cost Object, etc.
          Prognosis.CALCFIELDS("Prognosis Total Cost");
          PrognosisTotalCost := Prognosis."Prognosis Total Cost";
        END;

        // Data from Job Ledger Entry (Calculated with a query for performance)
        JobLedgerEntryTotals.SETRANGE(Main_Project_No, Job."No.");
        JobLedgerEntryTotals.SETFILTER(Posting_Date, '..%1', TODAY);
        JobLedgerEntryTotals.OPEN;
        IF JobLedgerEntryTotals.READ THEN
          RealCost := JobLedgerEntryTotals.Sum_Total_Cost_LCY
        ELSE
          RealCost := 0;

        IF PrognosisTotalCost = 0 THEN
          IncurredCostMargin := 0
        ELSE
          IncurredCostMargin := RealCost / PrognosisTotalCost;

        IF IncurredCostMargin > 1 THEN BEGIN
          AddOrFindProjectBuffer(Job);
          "Job Control Field 8" := TRUE;
          MODIFY;
        END;
      END;

        // 9. Projekt med standardkostnad = 0
        // Kolla i listan: Sj„lvkostnadspris, l„st order
        // Tabellerna med l„sorder 2,3,4,5. Om Sj„lvkostnadspris = 0 i n†gon av tabellerna ska projektet med
        // Tabeller: 11020366, 11020253, 11020361, 11020365
        CostPriceIsZero := FALSE;

        IF NOT CostPriceIsZero THEN BEGIN
          ProjEmplWageCostPrice.SETRANGE("Project No.", Job."No.");
          ProjEmplWageCostPrice.SETRANGE("Starting Date",0D,TODAY);
          ProjEmplWageCostPrice.SETFILTER("Ending Date",'%1|>=%2',0D,TODAY);
          ProjEmplWageCostPrice.SETRANGE("Cost Price", 0);
      //    CostPriceIsZero := ProjEmplWageCostPrice.COUNT > 0;
          CostPriceIsZero := NOT ProjEmplWageCostPrice.ISEMPTY;
        END;
        IF NOT CostPriceIsZero THEN BEGIN
          ProjectEmployeeCostPrice.SETRANGE("Project No.", Job."No.");
          ProjectEmployeeCostPrice.SETRANGE("Starting Date",0D,TODAY);
          ProjectEmployeeCostPrice.SETFILTER("Ending Date",'%1|>=%2',0D,TODAY);
          ProjectEmployeeCostPrice.SETRANGE("Cost Price", 0);
      //    CostPriceIsZero := ProjectEmployeeCostPrice.COUNT > 0;
          CostPriceIsZero := NOT ProjectEmployeeCostPrice.ISEMPTY;
        END;
        IF NOT CostPriceIsZero THEN BEGIN
          ProjectTradeAsCostPrice.SETRANGE("Project No.", Job."No.");
          ProjectTradeAsCostPrice.SETRANGE("Starting Date",0D,TODAY);
          ProjectTradeAsCostPrice.SETFILTER("Ending Date",'%1|>=%2',0D,TODAY);
          ProjectTradeAsCostPrice.SETRANGE("Cost Price", 0);
      //    CostPriceIsZero := ProjectTradeAsCostPrice.COUNT > 0;
          CostPriceIsZero := NOT ProjectTradeAsCostPrice.ISEMPTY;
        END;
        IF NOT CostPriceIsZero THEN BEGIN
          ProjCostObjectCostPrice.SETRANGE("Project No.", Job."No.");
          ProjCostObjectCostPrice.SETRANGE("Starting Date",0D,TODAY);
          ProjCostObjectCostPrice.SETFILTER("Ending Date",'%1|>=%2',0D,TODAY);
          ProjCostObjectCostPrice.SETRANGE("Cost Price", 0);
      //    CostPriceIsZero := ProjCostObjectCostPrice.COUNT > 0;
          CostPriceIsZero := NOT ProjCostObjectCostPrice.ISEMPTY;
        END;
        IF CostPriceIsZero THEN BEGIN
          AddOrFindProjectBuffer(Job);
          "Job Control Field 9" := TRUE;
          MODIFY;
        END;

        // 10. Projekt d„r prognosmetod har „ndrats
        // If a forecast exists in the "wrong" prognosis table then include
        IF Job."Forecast Level" = Job."Forecast Level"::"Cost Component" THEN BEGIN
          PrognosisLine.RESET;
          PrognosisLine.SETRANGE("Project No.", Job."No.");
      //    IF PrognosisLine.COUNT > 0 THEN BEGIN
          IF NOT PrognosisLine.ISEMPTY THEN BEGIN
            AddOrFindProjectBuffer(Job);
            "Job Control Field 10" := TRUE;
            MODIFY;
          END;
        END ELSE BEGIN
          PrognosisLineCC.RESET;
          PrognosisLineCC.SETRANGE("Project No.", Job."No.");
      //    IF PrognosisLineCC.COUNT > 0 THEN BEGIN
          IF NOT PrognosisLineCC.ISEMPTY THEN BEGIN
            AddOrFindProjectBuffer(Job);
            "Job Control Field 10" := TRUE;
            MODIFY;
          END;
        END;

        // 11. Underprojekt som har underprojekt
        IF (Job."Single/Main/Sub Project" = Job."Single/Main/Sub Project"::"Sub Project") THEN BEGIN
          SubProject.RESET;
          SubProject.SETRANGE("Main Project", Job."No.");
      //    IF SubProject.COUNT > 0 THEN BEGIN
          IF NOT SubProject.ISEMPTY THEN BEGIN
            AddOrFindProjectBuffer(Job);
            "Job Control Field 11" := TRUE;
            MODIFY;
          END;
        END;

        // 12. Enkelprojekt med underprojekt
        IF (Job."Single/Main/Sub Project" = Job."Single/Main/Sub Project"::Single) THEN BEGIN
          SubProject.RESET;
          SubProject.SETRANGE("Main Project", Job."No.");
          IF SubProject.COUNT > 1 THEN BEGIN
            AddOrFindProjectBuffer(Job);
            "Job Control Field 12" := TRUE;
            MODIFY;
          END;
        END;

        // 13. Saknar prognos i perioden
        Prognosis.RESET;
        Prognosis.SETRANGE("Project No.", Job."No.");
          //VILKEN PERIOD?
        IF DATE2DMY(WORKDATE, 2) < 10 THEN BEGIN
          EVALUATE(FromDate,FORMAT(DATE2DMY(WORKDATE, 3)) + FORMAT('0') + FORMAT(DATE2DMY(WORKDATE, 2)) + FORMAT('01'));
        END ELSE BEGIN
          EVALUATE(FromDate,FORMAT(DATE2DMY(WORKDATE, 3)) + FORMAT(DATE2DMY(WORKDATE, 2)) + FORMAT('01'));
        END;
        ToDate := CALCDATE('+1M-1D',FromDate);
        Prognosis.SETFILTER("Prognosis Date",'%1..%2',FromDate,ToDate);
        IF NOT Prognosis.FINDFIRST THEN BEGIN
          AddOrFindProjectBuffer(Job);
          "Job Control Field 13" := TRUE;
          MODIFY;
        END;



        // 14. Projekt saknar budget
        BudgetLine.RESET;
        BudgetLine.SETRANGE("Project No.",Job."No.");
        BudgetLine.SETRANGE("Extension Contract",'');
      //  IF NOT BudgetLine.FINDFIRST THEN BEGIN
        IF BudgetLine.ISEMPTY THEN BEGIN
          AddOrFindProjectBuffer(Job);
          "Job Control Field 14" := TRUE;
          MODIFY;
        END;

        // 15. Transaktioner finns p† huvudprojekt
        IF Job."Single/Main/Sub Project" = Job."Single/Main/Sub Project"::"Main Project" THEN BEGIN
          JobLedEntry.RESET;
          JobLedEntry.SETCURRENTKEY("Job No.","Posting Date");
          JobLedEntry.SETRANGE("Job No.",Job."No.");
      //>>190521
      //    IF JobLedEntry.FINDFIRST THEN BEGIN
          JobLedEntry.SETRANGE("Actual Preclosure Result",0);
          IF NOT JobLedEntry.ISEMPTY THEN BEGIN
      //<<190521
            IF Job."preCalc. Balance" <> 0 THEN BEGIN
              AddOrFindProjectBuffer(Job);
              "Job Control Field 15" := TRUE;
              MODIFY;
            END;
          END;
        END;

        //>> 190418 RFC1214
        // 16. Projekt saknar prognos
        HasPrognosis := FALSE;
        Prognosis.RESET;
        Prognosis.SETRANGE("Project No.", Job."No.");
        IF Prognosis.FINDSET(FALSE) THEN REPEAT
          Prognosis.CALCFIELDS("Prognosis Total Cost", "Prognosis Total Cost CC", "Prognosis Revenue","Prognosis Total Revenue CC");
          HasPrognosis := (Prognosis."Prognosis Total Cost" <> 0 ) OR
                          (Prognosis."Prognosis Total Cost CC" <> 0 ) OR
                          (Prognosis."Prognosis Revenue" <> 0 ) OR
                          (Prognosis."Prognosis Total Revenue CC" <> 0);
        UNTIL HasPrognosis OR (Prognosis.NEXT = 0);

        IF NOT HasPrognosis THEN BEGIN
          AddOrFindProjectBuffer(Job);
          "Job Control Field 16" := TRUE;
          MODIFY;
        END;
        //<< 190418

      UNTIL Job.NEXT = 0;

      //>>160711 ITERO.SB RFC-120 Exclude closed projects
      //Closed project cant be excluded from this control (moved out function from the loop above)
      // 2. St„ngda huvudprojekt med ”ppna underprojekt
      Job.SETRANGE("Single/Main/Sub Project",Job."Single/Main/Sub Project"::"Main Project");
      Job.SETRANGE("Project Status",Job."Project Status"::Finished);
      IF Job.FINDSET THEN
      REPEAT
        SubProject.RESET;
        SubProject.SETRANGE("Main Project", Job."No.");
        SubProject.SETFILTER("Project Status", '<%1', SubProject."Project Status"::Finished);
      //  IF SubProject.COUNT > 0 THEN BEGIN
        IF NOT SubProject.ISEMPTY THEN BEGIN
          AddOrFindProjectBuffer(Job);
          "Job Control Field 2" := TRUE;
          MODIFY;
        END;
      UNTIL Job.NEXT = 0;
      //<<

      IF FINDFIRST THEN;
      Window.CLOSE;
    END;

    PROCEDURE AddOrFindProjectBuffer@1100285100(Job@1100285102 : Record 11072003);
    BEGIN
      IF NOT GET(Job."No.") THEN BEGIN
        INIT;
        Rec.TRANSFERFIELDS(Job);
        INSERT;
      END;
    END;

    PROCEDURE CreateCostCenterFilter@1100409004();
    VAR
      TEMPDimValueChains@1100285100 : TEMPORARY Record 11128020;
      First@1100285101 : Boolean;
    BEGIN
      //*** Filters on cost center from dimension filter ***
      FilterCostCenter := '';
      GLSetup.GET;

      IF DimensionCode = GLSetup."Shortcut Dimension 1 Code" THEN BEGIN

        FilterCostCenter := DimensionValueCode;

      END ELSE BEGIN

        IF DimensionValueCode <> '' THEN
          TEMPDimValueChains.getSourceDimensions(DimensionCode, DimensionValueCode, GLSetup."Shortcut Dimension 1 Code", TEMPDimValueChains);

        First := TRUE;
        IF TEMPDimValueChains.FINDSET THEN REPEAT

          IF First THEN BEGIN
            FilterCostCenter := TEMPDimValueChains."Start Dimension Value Code";
            First := FALSE
          END ELSE
            FilterCostCenter += '|' + TEMPDimValueChains."Start Dimension Value Code";
        UNTIL TEMPDimValueChains.NEXT = 0;

      END;
    END;

    LOCAL PROCEDURE WriteLine@1100285503();
    BEGIN
      RowNo +=1;
      EnterCell(RowNo,1,"No.",FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,2,Description,FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,3,"Global Dimension 1 Code",FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,4,FORMAT("Project Status"),FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,5,FORMAT("Single/Main/Sub Project"),FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,6,FORMAT("Settlement Method"),FALSE,ExcelBuf."Cell Type"::Text,'');
      IF "Job Control Field 1" THEN EnterCell(RowNo,7,FORMAT("Job Control Field 1"),FALSE,ExcelBuf."Cell Type"::Text,'');
      IF "Job Control Field 2" THEN EnterCell(RowNo,8,FORMAT("Job Control Field 2"),FALSE,ExcelBuf."Cell Type"::Text,'');
      IF "Job Control Field 3" THEN EnterCell(RowNo,9,FORMAT("Job Control Field 3"),FALSE,ExcelBuf."Cell Type"::Text,'');
      IF "Job Control Field 4" THEN EnterCell(RowNo,10,FORMAT("Job Control Field 4"),FALSE,ExcelBuf."Cell Type"::Text,'');
      IF "Job Control Field 5" THEN EnterCell(RowNo,11,FORMAT("Job Control Field 5"),FALSE,ExcelBuf."Cell Type"::Text,'');
      IF "Job Control Field 6" THEN EnterCell(RowNo,12,FORMAT("Job Control Field 6"),FALSE,ExcelBuf."Cell Type"::Text,'');
      IF "Job Control Field 7" THEN EnterCell(RowNo,13,FORMAT("Job Control Field 7"),FALSE,ExcelBuf."Cell Type"::Text,'');
      IF "Job Control Field 8" THEN EnterCell(RowNo,14,FORMAT("Job Control Field 8"),FALSE,ExcelBuf."Cell Type"::Text,'');
      IF "Job Control Field 9" THEN EnterCell(RowNo,15,FORMAT("Job Control Field 9"),FALSE,ExcelBuf."Cell Type"::Text,'');
      IF "Job Control Field 10" THEN EnterCell(RowNo,16,FORMAT("Job Control Field 10"),FALSE,ExcelBuf."Cell Type"::Text,'');
      IF "Job Control Field 11" THEN EnterCell(RowNo,17,FORMAT("Job Control Field 11"),FALSE,ExcelBuf."Cell Type"::Text,'');
      IF "Job Control Field 12" THEN EnterCell(RowNo,18,FORMAT("Job Control Field 12"),FALSE,ExcelBuf."Cell Type"::Text,'');
      IF "Job Control Field 13" THEN EnterCell(RowNo,19,FORMAT("Job Control Field 13"),FALSE,ExcelBuf."Cell Type"::Text,'');
      IF "Job Control Field 14" THEN EnterCell(RowNo,20,FORMAT("Job Control Field 14"),FALSE,ExcelBuf."Cell Type"::Text,'');
      IF "Job Control Field 15" THEN EnterCell(RowNo,21,FORMAT("Job Control Field 15"),FALSE,ExcelBuf."Cell Type"::Text,'');
      IF "Job Control Field 16" THEN EnterCell(RowNo,22,FORMAT("Job Control Field 16"),FALSE,ExcelBuf."Cell Type"::Text,'');
    END;

    LOCAL PROCEDURE CreateHeader@1100285502();
    BEGIN
      ExcelBuf.RESET;
      ExcelBuf.DELETEALL;
      RowNo := 1;

      EnterCell(RowNo,1,FIELDCAPTION("No."),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,2,FIELDCAPTION(Description),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,3,FIELDCAPTION("Global Dimension 1 Code"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,4,FIELDCAPTION("Project Status"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,5,FIELDCAPTION("Single/Main/Sub Project"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,6,FIELDCAPTION("Settlement Method"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,7,FIELDCAPTION("Job Control Field 1"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,8,FIELDCAPTION("Job Control Field 2"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,9,FIELDCAPTION("Job Control Field 3"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,10,FIELDCAPTION("Job Control Field 4"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,11,FIELDCAPTION("Job Control Field 5"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,12,FIELDCAPTION("Job Control Field 6"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,13,FIELDCAPTION("Job Control Field 7"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,14,FIELDCAPTION("Job Control Field 8"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,15,FIELDCAPTION("Job Control Field 9"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,16,FIELDCAPTION("Job Control Field 10"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,17,FIELDCAPTION("Job Control Field 11"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,18,FIELDCAPTION("Job Control Field 12"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,19,FIELDCAPTION("Job Control Field 13"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,20,FIELDCAPTION("Job Control Field 14"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,21,FIELDCAPTION("Job Control Field 15"),TRUE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(RowNo,22,FIELDCAPTION("Job Control Field 16"),TRUE,ExcelBuf."Cell Type"::Text,'');

      EnterCell(1,25,ValueTxt1,FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(2,25,ValueTxt2,FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(3,25,ValueTxt3,FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(4,25,ValueTxt4,FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(5,25,ValueTxt5,FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(6,25,ValueTxt6,FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(7,25,ValueTxt7,FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(8,25,ValueTxt8,FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(9,25,ValueTxt9,FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(10,25,ValueTxt10,FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(11,25,ValueTxt11,FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(12,25,ValueTxt12,FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(13,25,ValueTxt13,FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(14,25,ValueTxt14,FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(15,25,ValueTxt15,FALSE,ExcelBuf."Cell Type"::Text,'');
      EnterCell(16,25,ValueTxt16,FALSE,ExcelBuf."Cell Type"::Text,'');
    END;

    LOCAL PROCEDURE EnterCell@3(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[250];Bold@1003 : Boolean;CellType@1100525000 : Integer;NumberFormat@1100525001 : Text[10]);
    BEGIN
      ExcelBuf.INIT;
      ExcelBuf.VALIDATE("Row No.",RowNo);
      ExcelBuf.VALIDATE("Column No.",ColumnNo);
      ExcelBuf."Cell Value as Text" := CellValue;
      ExcelBuf.Formula := '';
      ExcelBuf.Bold := Bold;
      ExcelBuf.NumberFormat := NumberFormat;

      ExcelBuf."Cell Type" := CellType;
      ExcelBuf.INSERT;
    END;

    BEGIN
    {
      160113 ITERO.LP RFC043 Page for displaying list of messages.
      160203 ITERO.LP RFC043 Question before closing page. OnQueruyClosePage.
      160208 ITERO.DL NOR-”vers„ttnigar
      160711 ITERO.SB RFC-120 Exclude closed projects
      181026 ORANGO.DL RFC1124 Komplettering av rapport "Projektkontroll resultatlista" efter RFC-1053
      190418 ORANGO:FH RFC1214 New slelection: 16. Projects without prognosis
    }
    END.
  }
}

