OBJECT Table 32 Item Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03,4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 32=rimd;
    CaptionML=[ENU=Item Ledger Entry;
               NOR=Varepost;
               SVE=Artikeltransaktion];
    LookupPageID=Page38;
    DrillDownPageID=Page38;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              NOR=Lõpenr.;
                                                              SVE=Lîpnr] }
    { 2   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Item No.;
                                                              NOR=Varenr.;
                                                              SVE=Artikelnr] }
    { 3   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              NOR=Bokfõringsdato;
                                                              SVE=Bokfîringsdatum] }
    { 4   ;   ;Entry Type          ;Option        ;CaptionML=[ENU=Entry Type;
                                                              NOR=Posttype;
                                                              SVE=Transaktionstyp];
                                                   OptionCaptionML=[ENU=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output, ,Assembly Consumption,Assembly Output;
                                                                    NOR=Kjõp,Salg,Oppjust.,Nedjust.,Overfõring,Forbruk,Avgang, ,Monteringsforbruk,Monteringsavgang;
                                                                    SVE=Inkîp,FîrsÑljning,Positiv justering,Negativ justering,ôverfîring,Fîrbrukning,Utflîde, ,Monteringsfîrbrukning,Monteringsutflîde];
                                                   OptionString=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output, ,Assembly Consumption,Assembly Output }
    { 5   ;   ;Source No.          ;Code20        ;TableRelation=IF (Source Type=CONST(Customer)) Customer
                                                                 ELSE IF (Source Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Source Type=CONST(Item)) Item;
                                                   CaptionML=[ENU=Source No.;
                                                              NOR=Kildenr.;
                                                              SVE=Ursprungsnr] }
    { 6   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              NOR=Bilagsnr.;
                                                              SVE=Dokumentnr] }
    { 7   ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 8   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              NOR=Lokasjonskode;
                                                              SVE=LagerstÑllekod] }
    { 12  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5 }
    { 13  ;   ;Remaining Quantity  ;Decimal       ;CaptionML=[ENU=Remaining Quantity;
                                                              NOR=Restantall;
                                                              SVE=èterstÜende antal];
                                                   DecimalPlaces=0:5 }
    { 14  ;   ;Invoiced Quantity   ;Decimal       ;CaptionML=[ENU=Invoiced Quantity;
                                                              NOR=Fakturert antall;
                                                              SVE=Fakturerat antal];
                                                   DecimalPlaces=0:5 }
    { 28  ;   ;Applies-to Entry    ;Integer       ;CaptionML=[ENU=Applies-to Entry;
                                                              NOR=Utligningspost;
                                                              SVE=Kopplas till lîpnr] }
    { 29  ;   ;Open                ;Boolean       ;CaptionML=[ENU=Open;
                                                              NOR=èpne;
                                                              SVE=ôppen] }
    { 33  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Global dimensjon 1 - kode;
                                                              SVE=Global dimension 1 kod];
                                                   CaptionClass='1,1,1' }
    { 34  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Global dimensjon 2 - kode;
                                                              SVE=Global dimension 2 kod];
                                                   CaptionClass='1,1,2' }
    { 36  ;   ;Positive            ;Boolean       ;CaptionML=[ENU=Positive;
                                                              NOR=Positiv;
                                                              SVE=Positiv] }
    { 40  ;   ;Shpt. Method Code   ;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=[ENU=Shpt. Method Code;
                                                              NOR=LeveringsmÜtekode] }
    { 41  ;   ;Source Type         ;Option        ;CaptionML=[ENU=Source Type;
                                                              NOR=Kildetype;
                                                              SVE=Ursprungstyp];
                                                   OptionCaptionML=[ENU=" ,Customer,Vendor,Item";
                                                                    NOR=" ,Kunde,Leverandõr,Vare";
                                                                    SVE=" ,Kund,Leverantîr,Artikel"];
                                                   OptionString=[ ,Customer,Vendor,Item] }
    { 47  ;   ;Drop Shipment       ;Boolean       ;AccessByPermission=TableData 223=R;
                                                   CaptionML=[ENU=Drop Shipment;
                                                              NOR=Direkte levering;
                                                              SVE=Direktutleverans] }
    { 50  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=[ENU=Transaction Type;
                                                              NOR=Transaksjonsart;
                                                              SVE=EU transaktionstyp] }
    { 51  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=[ENU=Transport Method;
                                                              NOR=TransportmÜte;
                                                              SVE=TransportsÑtt] }
    { 52  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              NOR=Lands-/omrÜdekode;
                                                              SVE=Lands-/regionkod] }
    { 59  ;   ;Entry/Exit Point    ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=[ENU=Entry/Exit Point;
                                                              NOR=Inn/Utpunkt;
                                                              SVE=In-/utfîrselplats] }
    { 60  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              NOR=Bilagsdato;
                                                              SVE=Dokumentdatum] }
    { 61  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              NOR=Eksterndokumentnr.;
                                                              SVE=Externt dokumentnr] }
    { 62  ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=[ENU=Area;
                                                              NOR=OmrÜde;
                                                              SVE=OmrÜde] }
    { 63  ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=[ENU=Transaction Specification;
                                                              NOR=Transaksjonsspesifikasjon;
                                                              SVE=EU transaktionsspecifikation] }
    { 64  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              NOR=Nr.serie;
                                                              SVE=Nr-serie] }
    { 70  ;   ;Reserved Quantity   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Reservation Entry"."Quantity (Base)" WHERE (Source ID=CONST(),
                                                                                                                Source Ref. No.=FIELD(Entry No.),
                                                                                                                Source Type=CONST(32),
                                                                                                                Source Subtype=CONST(0),
                                                                                                                Source Batch Name=CONST(),
                                                                                                                Source Prod. Order Line=CONST(0),
                                                                                                                Reservation Status=CONST(Reservation)));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=[ENU=Reserved Quantity;
                                                              NOR=Reservert antall;
                                                              SVE=Reserverat antal];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 79  ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              NOR=Bilagstype;
                                                              SVE=Dokumenttyp];
                                                   OptionCaptionML=[ENU=" ,Sales Shipment,Sales Invoice,Sales Return Receipt,Sales Credit Memo,Purchase Receipt,Purchase Invoice,Purchase Return Shipment,Purchase Credit Memo,Transfer Shipment,Transfer Receipt,Service Shipment,Service Invoice,Service Credit Memo,Posted Assembly,,,,,,,Project Delivery Note,Project Inventory Delivery";
                                                                    NOR=" ,Fõlgeseddel,Salgsfaktura,Salgsreturseddel,Salgskreditnota,Kjõpsmottak,Kjõpsfaktura,Bestillingsreturforsendelse,Kjõpskreditnota,Overfõringsseddel,Overfõringsmottak,Servicefõlgeseddel,Servicefaktura,Salgskreditnota (service),Bokfõrt montering";
                                                                    SVE=" ,Utleverans,FîrsÑljningsfaktura,FîrsÑljningsreturinleverans,FîrsÑljningskreditnota,Inleverans,Inkîpsfaktura,Inkîpsreturutleverans,Inkîpskreditnota,ôverfîringsleverans,ôverfîringsinleverans,Serviceutleverans,Servicefaktura,Servicekreditnota,Bokfîrd montering,,,,,,,Projektleveransbesked,Leverans av projektlager"];
                                                   OptionString=[ ,Sales Shipment,Sales Invoice,Sales Return Receipt,Sales Credit Memo,Purchase Receipt,Purchase Invoice,Purchase Return Shipment,Purchase Credit Memo,Transfer Shipment,Transfer Receipt,Service Shipment,Service Invoice,Service Credit Memo,Posted Assembly,,,,,,,Project Delivery Note,Project Inventory Delivery] }
    { 80  ;   ;Document Line No.   ;Integer       ;CaptionML=[ENU=Document Line No.;
                                                              NOR=Dokumentlinjenr.;
                                                              SVE=Dokumentradnr] }
    { 90  ;   ;Order Type          ;Option        ;CaptionML=[ENU=Order Type;
                                                              NOR=Ordretype;
                                                              SVE=Ordertyp];
                                                   OptionCaptionML=[ENU=" ,Production,Transfer,Service,Assembly";
                                                                    NOR=" ,Produksjon,Overfõring,Service,Montering";
                                                                    SVE=" ,Produktion,ôverfîring,Service,Montering"];
                                                   OptionString=[ ,Production,Transfer,Service,Assembly];
                                                   Editable=No }
    { 91  ;   ;Order No.           ;Code20        ;CaptionML=[ENU=Order No.;
                                                              NOR=Ordrenr.;
                                                              SVE=Ordernr];
                                                   Editable=No }
    { 92  ;   ;Order Line No.      ;Integer       ;CaptionML=[ENU=Order Line No.;
                                                              NOR=Ordrelinjenr.;
                                                              SVE=Orderradnr];
                                                   Editable=No }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              NOR=Dimensjonssett-ID;
                                                              SVE=DimensionsuppsÑttnings-ID];
                                                   Editable=No }
    { 904 ;   ;Assemble to Order   ;Boolean       ;AccessByPermission=TableData 90=R;
                                                   CaptionML=[ENU=Assemble to Order;
                                                              NOR=Monter til ordre;
                                                              SVE=Montering mot kundorder] }
    { 1000;   ;Job No.             ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=[ENU=Job No.;
                                                              NOR=Prosjektnr.;
                                                              SVE=Projektnr] }
    { 1001;   ;Job Task No.        ;Code20        ;TableRelation="Job Task"."Job Task No." WHERE (Job No.=FIELD(Job No.));
                                                   CaptionML=[ENU=Job Task No.;
                                                              NOR=Prosjektoppgavenr.;
                                                              SVE=Projektaktivitetsnr] }
    { 1002;   ;Job Purchase        ;Boolean       ;CaptionML=[ENU=Job Purchase;
                                                              NOR=Prosjektkjõp;
                                                              SVE=Projektinkîp] }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              NOR=Variantkode;
                                                              SVE=Variantkod] }
    { 5404;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=[ENU=Qty. per Unit of Measure;
                                                              NOR=Antall per enhet;
                                                              SVE=Antal per enhet];
                                                   DecimalPlaces=0:5 }
    { 5407;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              NOR=Enhetskode;
                                                              SVE=Enhetskod] }
    { 5408;   ;Derived from Blanket Order;Boolean ;CaptionML=[ENU=Derived from Blanket Order;
                                                              NOR=Stammer fra rammeordre;
                                                              SVE=HÑmtad frÜn avropsorder];
                                                   Description=[4PS: Raam  -> Afroep  ] }
    { 5700;   ;Cross-Reference No. ;Code20        ;CaptionML=[ENU=Cross-Reference No.;
                                                              NOR=Kryssreferansenr.;
                                                              SVE=TvÑrreferensnr] }
    { 5701;   ;Originally Ordered No.;Code20      ;TableRelation=Item;
                                                   AccessByPermission=TableData 5715=R;
                                                   CaptionML=[ENU=Originally Ordered No.;
                                                              NOR=Opprinnelig ordreant.;
                                                              SVE=Ursprungligen bestÑllt nr] }
    { 5702;   ;Originally Ordered Var. Code;Code10;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Originally Ordered No.));
                                                   AccessByPermission=TableData 5715=R;
                                                   CaptionML=[ENU=Originally Ordered Var. Code;
                                                              NOR=Opprin. best. variant - kode;
                                                              SVE=Ursprungligen bestÑllt var.kod] }
    { 5703;   ;Out-of-Stock Substitution;Boolean  ;CaptionML=[ENU=Out-of-Stock Substitution;
                                                              NOR=Tomt pÜ lager-erstatning;
                                                              SVE=Ej i lager ersÑttning] }
    { 5704;   ;Item Category Code  ;Code20        ;TableRelation="Item Category";
                                                   CaptionML=[ENU=Item Category Code;
                                                              NOR=Varekategorikode;
                                                              SVE=Artikelkategorikod] }
    { 5705;   ;Nonstock            ;Boolean       ;CaptionML=[ENU=Catalog;
                                                              NOR=Katalog;
                                                              SVE=Ej lagerfîrd] }
    { 5706;   ;Purchasing Code     ;Code10        ;TableRelation=Purchasing;
                                                   CaptionML=[ENU=Purchasing Code;
                                                              NOR=Kjõpskode;
                                                              SVE=Inkîpskod] }
    { 5707;   ;Product Group Code  ;Code10        ;TableRelation="Product Group".Code WHERE (Item Category Code=FIELD(Item Category Code));
                                                   ValidateTableRelation=No;
                                                   ObsoleteState=Removed;
                                                   ObsoleteReason=Product Groups became first level children of Item Categories.;
                                                   CaptionML=[ENU=Product Group Code;
                                                              NOR=Produktgruppekode;
                                                              SVE=Produktgruppkod] }
    { 5800;   ;Completely Invoiced ;Boolean       ;CaptionML=[ENU=Completely Invoiced;
                                                              NOR=Fullstendig fakturert;
                                                              SVE=FÑrdigt fakturerat] }
    { 5801;   ;Last Invoice Date   ;Date          ;CaptionML=[ENU=Last Invoice Date;
                                                              NOR=Siste fakturadato;
                                                              SVE=Senaste fakturadatum] }
    { 5802;   ;Applied Entry to Adjust;Boolean    ;CaptionML=[ENU=Applied Entry to Adjust;
                                                              NOR=Utlignet post som skal just.;
                                                              SVE=Kopplad trans. att justera] }
    { 5803;   ;Cost Amount (Expected);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Expected)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Cost Amount (Expected);
                                                              NOR=Kostbelõp (forventet);
                                                              SVE=Kost.belopp (fîrvÑntat)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5804;   ;Cost Amount (Actual);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Actual)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Cost Amount (Actual);
                                                              NOR=Kostbelõp (faktisk);
                                                              SVE=Kost.belopp (aktuellt)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5805;   ;Cost Amount (Non-Invtbl.);Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Non-Invtbl.)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Cost Amount (Non-Invtbl.);
                                                              NOR=Kostbelõp (indirekte kost);
                                                              SVE=Kostnadsbelopp (ej-lagerfîrd)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5806;   ;Cost Amount (Expected) (ACY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Expected) (ACY)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Cost Amount (Expected) (ACY);
                                                              NOR=Kostbelõp (forventet) (t.val);
                                                              SVE=Kost.belopp (fîrvÑntat) (AVAL)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 5807;   ;Cost Amount (Actual) (ACY);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Actual) (ACY)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Cost Amount (Actual) (ACY);
                                                              NOR=Kostbelõp (faktisk) (t.val.);
                                                              SVE=Kost.belopp (aktuellt) (AVAL)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 5808;   ;Cost Amount (Non-Invtbl.)(ACY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Non-Invtbl.)(ACY)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Cost Amount (Non-Invtbl.)(ACY);
                                                              NOR=Kostbel. (indirekte kost)(till.val);
                                                              SVE=Kost.belopp (ej lagerf.)(AVAL)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 5813;   ;Purchase Amount (Expected);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Purchase Amount (Expected)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Purchase Amount (Expected);
                                                              NOR=Kjõpsbelõp (forventet);
                                                              SVE=Inkîpsbelopp (fîrvÑntat)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5814;   ;Purchase Amount (Actual);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Purchase Amount (Actual)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Purchase Amount (Actual);
                                                              NOR=Kjõpsbelõp (faktisk);
                                                              SVE=Inkîpsbelopp (aktuellt)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5815;   ;Sales Amount (Expected);Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Sales Amount (Expected)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Sales Amount (Expected);
                                                              NOR=Salgsbelõp (forventet);
                                                              SVE=Fîrs. belopp (fîrvÑntat)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5816;   ;Sales Amount (Actual);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Sales Amount (Actual)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Sales Amount (Actual);
                                                              NOR=Salgsbelõp (faktisk);
                                                              SVE=Fîrs. belopp (aktuellt)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5817;   ;Correction          ;Boolean       ;CaptionML=[ENU=Correction;
                                                              NOR=Korreksjon;
                                                              SVE=RÑttningstransaktion] }
    { 5818;   ;Shipped Qty. Not Returned;Decimal  ;AccessByPermission=TableData 36=R;
                                                   CaptionML=[ENU=Shipped Qty. Not Returned;
                                                              NOR=Levert mengde, ikke returnert;
                                                              SVE=Levererat antal har inte returnerats];
                                                   DecimalPlaces=0:5 }
    { 5833;   ;Prod. Order Comp. Line No.;Integer ;AccessByPermission=TableData 5405=R;
                                                   CaptionML=[ENU=Prod. Order Comp. Line No.;
                                                              NOR=Prod.ordrekomp.linjenr.;
                                                              SVE=Prod.orderkomp.radnr] }
    { 6500;   ;Serial No.          ;Code50        ;OnLookup=BEGIN
                                                              ItemTrackingMgt.LookupLotSerialNoInfo("Item No.","Variant Code",0,"Serial No.");
                                                            END;

                                                   CaptionML=[ENU=Serial No.;
                                                              NOR=Serienr.;
                                                              SVE=Serienr] }
    { 6501;   ;Lot No.             ;Code50        ;OnLookup=BEGIN
                                                              ItemTrackingMgt.LookupLotSerialNoInfo("Item No.","Variant Code",1,"Lot No.");
                                                            END;

                                                   CaptionML=[ENU=Lot No.;
                                                              NOR=Partinr.;
                                                              SVE=Partinr] }
    { 6502;   ;Warranty Date       ;Date          ;CaptionML=[ENU=Warranty Date Vendor;
                                                              NOR=Garantidato;
                                                              SVE=Garantidatum] }
    { 6503;   ;Expiration Date     ;Date          ;CaptionML=[ENU=Expiration Date;
                                                              NOR=UtgÜr den;
                                                              SVE=UtgÜngsdatum] }
    { 6510;   ;Item Tracking       ;Option        ;CaptionML=[ENU=Item Tracking;
                                                              NOR=Varesporing;
                                                              SVE=ArtikelspÜrning];
                                                   OptionCaptionML=[ENU=None,Lot No.,Lot and Serial No.,Serial No.;
                                                                    NOR=Ingen,Partinummer,Parti- og serienummer,Serienummer;
                                                                    SVE=Inget,Partinr.,Parti- och serienr,Serienr.];
                                                   OptionString=None,Lot No.,Lot and Serial No.,Serial No.;
                                                   Editable=No }
    { 6602;   ;Return Reason Code  ;Code10        ;TableRelation="Return Reason";
                                                   CaptionML=[ENU=Return Reason Code;
                                                              NOR=ReturÜrsakskode;
                                                              SVE=Returorsakskod] }
    { 11012000;;Service Order No.  ;Code20        ;TableRelation="Service Order".No. WHERE (No.=FIELD(Service Order No.));
                                                   CaptionML=[ENU=Service Order No.;
                                                              SVE=Serviceordernr] }
    { 11012010;;Element            ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Job No.));
                                                   CaptionML=[ENU=Element;
                                                              SVE=Element];
                                                   Editable=No }
    { 11012015;;Extension Contract ;Code10        ;TableRelation="Extension Contract"."Contract No." WHERE (Project No.=FIELD(Job No.));
                                                   CaptionML=[ENU=Extension Contract;
                                                              SVE=éTA] }
    { 11012021;;Service Location No.;Code20       ;TableRelation="Service Location".No.;
                                                   CaptionML=[ENU=Service Location No.;
                                                              SVE=Serviceplatsnr];
                                                   Editable=No }
    { 11012024;;Service Contract No.;Code20       ;TableRelation=Service-Contract.No.;
                                                   CaptionML=[ENU=Service Contract No.;
                                                              SVE=Servicekontraktnr];
                                                   Editable=No }
    { 11012030;;Description 2      ;Text50        ;CaptionML=[ENU=Description 2;
                                                              SVE=Beskrivning 2] }
    { 11012040;;Country of Origin/Destination;Code10;
                                                   TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country of Origin/Destination;
                                                              SVE=Ursprungsland/destinationsland] }
    { 11012050;;Item Description   ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item.Description WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=[ENU=Item Description;
                                                              SVE=Artikelbeskrivning];
                                                   Editable=No }
    { 11012060;;Item Description 2 ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item."Description 2" WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=[ENU=Item Description 2;
                                                              SVE=Artikelbeskrivning 2];
                                                   Editable=No }
    { 11012070;;SKU Surcharge Amount;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."SKU Surcharge Amount" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=SKU Surcharge;
                                                              SVE=TillÑggsavgift fîr lagerstÑllsenhet];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 11012090;;Shipment with T1   ;Boolean       ;CaptionML=[ENU=Shipment with T1;
                                                              SVE=Frakt med T1] }
    { 11012100;;Customs Destination Code;Code20   ;CaptionML=[ENU=Customs Destination Code;
                                                              SVE=Tulls destinationskod] }
    { 11012110;;Warranty Code Vendor;Code10       ;TableRelation="Service Warranty";
                                                   CaptionML=[ENU=Warranty Code Vendor;
                                                              SVE=Grantikod leveranîr] }
    { 11012120;;Warranty Start Date Vendor;Date   ;CaptionML=[ENU=Warranty Start Date Vendor;
                                                              SVE=Garantistartdatum leverantîr] }
    { 11012130;;Warranty Period Vendor;DateFormula;CaptionML=[ENU=Warranty Period Vendor;
                                                              SVE=Grantiperiod leverantîr] }
    { 11012140;;Warranty Code Customer;Code10     ;TableRelation="Service Warranty";
                                                   CaptionML=[ENU=Warranty Code Customer;
                                                              SVE=Grantikod kund] }
    { 11012150;;Warranty Start Date Customer;Date ;CaptionML=[ENU=Warranty Start Date Customer;
                                                              SVE=Garantistartdatum kund] }
    { 11012160;;Warranty Period Customer;DateFormula;
                                                   CaptionML=[ENU=Warranty Period Customer;
                                                              SVE=Grantiperiod kund] }
    { 11012170;;Warranty Date Customer;Date       ;CaptionML=[ENU=Warranty Date Customer;
                                                              SVE=Grantidatum kund];
                                                   Editable=No }
    { 11012180;;Good Customs       ;Boolean       ;CaptionML=[ENU=Custom Goods;
                                                              SVE=Varutull] }
    { 11012650;;Purchase Route Reference;Code20   ;CaptionML=[ENU=Purchase Route Reference;
                                                              SVE=Referens fîr inkîpsfîljd];
                                                   Editable=No }
    { 11012700;;Cost Component     ;Code20        ;TableRelation="Cost Component".Code;
                                                   CaptionML=[ENU=Cost Component;
                                                              SVE=Kostnadskomponent] }
    { 11012710;;Reason Code        ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              SVE=Uppfîljningskod];
                                                   Editable=No }
    { 11012720;;Service Object No. ;Code20        ;TableRelation="Service Order Object"."Object No." WHERE (Service Order No.=FIELD(Service Order No.));
                                                   CaptionML=[ENU=Service Object No.;
                                                              SVE=Serviceobjektnr];
                                                   Editable=No }
    { 11012730;;Employee No.       ;Code20        ;TableRelation=Employee;
                                                   CaptionML=[ENU=Employee No.;
                                                              SVE=AnstÑllningsnr];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Item No.                                ;SumIndexFields=Invoiced Quantity,Quantity }
    {    ;Item No.,Posting Date                   ;SumIndexFields=Quantity,Invoiced Quantity }
    {    ;Item No.,Entry Type,Variant Code,Drop Shipment,Location Code,Posting Date;
                                                   SumIndexFields=Quantity,Invoiced Quantity }
    {    ;Source Type,Source No.,Item No.,Variant Code,Posting Date;
                                                   SumIndexFields=Quantity }
    {    ;Item No.,Open,Variant Code,Positive,Location Code,Posting Date;
                                                   SumIndexFields=Quantity,Remaining Quantity }
    { No ;Item No.,Open,Variant Code,Positive,Location Code,Posting Date,Expiration Date,Lot No.,Serial No.;
                                                   SumIndexFields=Quantity,Remaining Quantity }
    {    ;Country/Region Code,Entry Type,Posting Date }
    {    ;Document No.,Document Type,Document Line No. }
    {    ;Item No.,Entry Type,Variant Code,Drop Shipment,Global Dimension 1 Code,Global Dimension 2 Code,Location Code,Posting Date;
                                                   SumIndexFields=Quantity,Invoiced Quantity }
    { No ;Source Type,Source No.,Global Dimension 1 Code,Global Dimension 2 Code,Item No.,Variant Code,Posting Date;
                                                   SumIndexFields=Quantity }
    {    ;Order Type,Order No.,Order Line No.,Entry Type,Prod. Order Comp. Line No.;
                                                   SumIndexFields=Quantity;
                                                   MaintainSIFTIndex=No }
    {    ;Item No.,Applied Entry to Adjust         }
    {    ;Item No.,Positive,Location Code,Variant Code;
                                                   SumIndexFields=Quantity }
    { No ;Entry Type,Nonstock,Item No.,Posting Date }
    { No ;Item No.,Location Code,Open,Variant Code,Unit of Measure Code,Lot No.,Serial No.;
                                                   SumIndexFields=Remaining Quantity }
    { No ;Item No.,Open,Variant Code,Positive,Lot No.,Serial No.;
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    { No ;Item No.,Open,Variant Code,Location Code,Item Tracking,Lot No.,Serial No.;
                                                   SumIndexFields=Remaining Quantity;
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Lot No.                                  }
    {    ;Serial No.                               }
    {    ;Location Code,Item No.                   }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Description,Item No.,Posting Date,Entry Type,Document No. }
  }
  CODE
  {
    VAR
      GLSetup@1000 : Record 98;
      ReservEntry@1001 : Record 337;
      ReservEngineMgt@1002 : Codeunit 99000831;
      ReserveItemLedgEntry@1003 : Codeunit 99000841;
      ItemTrackingMgt@1006 : Codeunit 6500;
      GLSetupRead@1005 : Boolean;
      IsNotOnInventoryErr@1004 : TextConst 'ENU=You have insufficient quantity of Item %1 on inventory.;NOR=Du har et utilstrekkelig antall av varen %1 pÜ lager.;SVE=Du har inte ett tillrÑckligt antal av artikeln %1 i lager.';
      DPA_Management@1100000999 : Codeunit 11012783;

    LOCAL PROCEDURE GetCurrencyCode@1() : Code[10];
    BEGIN
      IF NOT GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
      EXIT(GLSetup."Additional Reporting Currency");
    END;

    [External]
    PROCEDURE ShowReservationEntries@2(Modal@1000 : Boolean);
    BEGIN
      ReservEngineMgt.InitFilterAndSortingLookupFor(ReservEntry,TRUE);
      ReserveItemLedgEntry.FilterReservFor(ReservEntry,Rec);
      IF Modal THEN
        PAGE.RUNMODAL(PAGE::"Reservation Entries",ReservEntry)
      ELSE
        PAGE.RUN(PAGE::"Reservation Entries",ReservEntry);
    END;

    [External]
    PROCEDURE SetAppliedEntryToAdjust@66(AppliedEntryToAdjust@1001 : Boolean);
    BEGIN
      IF "Applied Entry to Adjust" <> AppliedEntryToAdjust THEN BEGIN
        "Applied Entry to Adjust" := AppliedEntryToAdjust;
        MODIFY;
      END;
    END;

    [External]
    PROCEDURE SetAvgTransCompletelyInvoiced@80() : Boolean;
    VAR
      ItemApplnEntry@1005 : Record 339;
      InbndItemLedgEntry@1004 : Record 32;
      CompletelyInvoiced@1002 : Boolean;
    BEGIN
      IF "Entry Type" <> "Entry Type"::Transfer THEN
        EXIT(FALSE);

      ItemApplnEntry.SETCURRENTKEY("Item Ledger Entry No.");
      ItemApplnEntry.SETRANGE("Item Ledger Entry No.","Entry No.");
      ItemApplnEntry.FIND('-');
      IF NOT "Completely Invoiced" THEN BEGIN
        CompletelyInvoiced := TRUE;
        REPEAT
          InbndItemLedgEntry.GET(ItemApplnEntry."Inbound Item Entry No.");
          IF NOT InbndItemLedgEntry."Completely Invoiced" THEN
            CompletelyInvoiced := FALSE;
        UNTIL ItemApplnEntry.NEXT = 0;

        IF CompletelyInvoiced THEN BEGIN
          SetCompletelyInvoiced;
          EXIT(TRUE);
        END;
      END;
      EXIT(FALSE);
    END;

    [External]
    PROCEDURE SetCompletelyInvoiced@3();
    BEGIN
      IF NOT "Completely Invoiced" THEN BEGIN
        "Completely Invoiced" := TRUE;
        MODIFY;
      END;
    END;

    [External]
    PROCEDURE AppliedEntryToAdjustExists@40(ItemNo@1001 : Code[20]) : Boolean;
    BEGIN
      RESET;
      SETCURRENTKEY("Item No.","Applied Entry to Adjust");
      SETRANGE("Item No.",ItemNo);
      SETRANGE("Applied Entry to Adjust",TRUE);
      EXIT(FIND('-'));
    END;

    [External]
    PROCEDURE IsOutbndConsump@57() : Boolean;
    BEGIN
      EXIT(("Entry Type" = "Entry Type"::Consumption) AND NOT Positive);
    END;

    [External]
    PROCEDURE IsExactCostReversingPurchase@59() : Boolean;
    BEGIN
      EXIT(
        ("Applies-to Entry" <> 0) AND
        ("Entry Type" = "Entry Type"::Purchase) AND
        ("Invoiced Quantity" < 0));
    END;

    [External]
    PROCEDURE IsExactCostReversingOutput@8() : Boolean;
    BEGIN
      EXIT(
        ("Applies-to Entry" <> 0) AND
        ("Entry Type" IN ["Entry Type"::Output,"Entry Type"::"Assembly Output"]) AND
        ("Invoiced Quantity" < 0));
    END;

    [External]
    PROCEDURE UpdateItemTracking@5();
    VAR
      ItemTrackingMgt@1000 : Codeunit 6500;
    BEGIN
      "Item Tracking" := ItemTrackingMgt.ItemTrackingOption("Lot No.","Serial No.");
    END;

    [External]
    PROCEDURE GetUnitCostLCY@4() : Decimal;
    BEGIN
      IF Quantity = 0 THEN
        EXIT("Cost Amount (Actual)");

      EXIT(ROUND("Cost Amount (Actual)" / Quantity,0.00001));
    END;

    [External]
    PROCEDURE FilterLinesWithItemToPlan@69(VAR Item@1000 : Record 27;NetChange@1001 : Boolean);
    BEGIN
      RESET;
      SETCURRENTKEY("Item No.",Open,"Variant Code",Positive,"Location Code","Posting Date");
      SETRANGE("Item No.",Item."No.");
      SETRANGE(Open,TRUE);
      SETFILTER("Variant Code",Item.GETFILTER("Variant Filter"));
      SETFILTER("Location Code",Item.GETFILTER("Location Filter"));
      SETFILTER("Global Dimension 1 Code",Item.GETFILTER("Global Dimension 1 Filter"));
      SETFILTER("Global Dimension 2 Code",Item.GETFILTER("Global Dimension 2 Filter"));
      IF NetChange THEN
        SETFILTER("Posting Date",Item.GETFILTER("Date Filter"));

      OnAfterFilterLinesWithItemToPlan(Rec,Item);
    END;

    [External]
    PROCEDURE FindLinesWithItemToPlan@7(VAR Item@1000 : Record 27;NetChange@1001 : Boolean) : Boolean;
    BEGIN
      FilterLinesWithItemToPlan(Item,NetChange);
      EXIT(FIND('-'));
    END;

    [External]
    PROCEDURE LinesWithItemToPlanExist@67(VAR Item@1000 : Record 27;NetChange@1001 : Boolean) : Boolean;
    BEGIN
      FilterLinesWithItemToPlan(Item,NetChange);
      EXIT(NOT ISEMPTY);
    END;

    [External]
    PROCEDURE IsOutbndSale@5888() : Boolean;
    BEGIN
      EXIT(("Entry Type" = "Entry Type"::Sale) AND NOT Positive);
    END;

    [External]
    PROCEDURE ShowDimensions@6();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"Entry No."));
    END;

    [External]
    PROCEDURE CalculateRemQuantity@10(ItemLedgEntryNo@1000 : Integer;PostingDate@1001 : Date) : Decimal;
    VAR
      ItemApplnEntry@1002 : Record 339;
      RemQty@1003 : Decimal;
    BEGIN
      ItemApplnEntry.SETCURRENTKEY("Inbound Item Entry No.");
      ItemApplnEntry.SETRANGE("Inbound Item Entry No.",ItemLedgEntryNo);
      RemQty := 0;
      IF ItemApplnEntry.FINDSET THEN
        REPEAT
          IF ItemApplnEntry."Posting Date" <= PostingDate THEN
            RemQty += ItemApplnEntry.Quantity;
        UNTIL ItemApplnEntry.NEXT = 0;
      EXIT(RemQty);
    END;

    [External]
    PROCEDURE VerifyOnInventory@9();
    VAR
      Item@1000 : Record 27;
      IsHandled@1001 : Boolean;
      ManufacturingSetup@1100528500 : Record 99000765;
    BEGIN
      IsHandled := FALSE;
      OnBeforeVerifyOnInventory(Rec,IsHandled);
      IF IsHandled THEN
        EXIT;

      IF NOT Open THEN
        EXIT;
      IF Quantity >= 0 THEN
        EXIT;
      CASE "Entry Type" OF
        "Entry Type"::Consumption,"Entry Type"::"Assembly Consumption","Entry Type"::Transfer:
          //**4PS.sn
          IF "Entry Type" = "Entry Type"::Consumption THEN BEGIN
            IF NOT ManufacturingSetup.GET THEN ManufacturingSetup.INIT;   //db, 23-03-10: M17980
            IF ManufacturingSetup."Block Negative Inventory" THEN  //db, 08-12-08: M13099
              ERROR(IsNotOnInventoryErr,"Item No.");
          END ELSE //db, 24-12-10: M24551
          //**4PS.en
            ERROR(IsNotOnInventoryErr,"Item No.");
        ELSE BEGIN
          Item.GET("Item No.");
          IF Item.PreventNegativeInventory THEN
            ERROR(IsNotOnInventoryErr,"Item No.");
        END;
      END;
    END;

    [External]
    PROCEDURE CalculateRemInventoryValue@12(ItemLedgEntryNo@1000 : Integer;ItemLedgEntryQty@1004 : Decimal;RemQty@1005 : Decimal;IncludeExpectedCost@1001 : Boolean;PostingDate@1006 : Date) : Decimal;
    VAR
      ValueEntry@1002 : Record 5802;
      AdjustedCost@1003 : Decimal;
      TotalQty@1007 : Decimal;
    BEGIN
      ValueEntry.SETCURRENTKEY("Item Ledger Entry No.");
      ValueEntry.SETRANGE("Item Ledger Entry No.",ItemLedgEntryNo);
      ValueEntry.SETFILTER("Valuation Date",'<=%1',PostingDate);
      IF NOT IncludeExpectedCost THEN
        ValueEntry.SETRANGE("Expected Cost",FALSE);
      IF ValueEntry.FINDSET THEN
        REPEAT
          IF ValueEntry."Entry Type" = ValueEntry."Entry Type"::Revaluation THEN
            TotalQty := ValueEntry."Valued Quantity"
          ELSE
            TotalQty := ItemLedgEntryQty;
          IF ValueEntry."Entry Type" <> ValueEntry."Entry Type"::Rounding THEN
            IF IncludeExpectedCost THEN
              AdjustedCost += RemQty / TotalQty * (ValueEntry."Cost Amount (Actual)" + ValueEntry."Cost Amount (Expected)")
            ELSE
              AdjustedCost += RemQty / TotalQty * ValueEntry."Cost Amount (Actual)";
        UNTIL ValueEntry.NEXT = 0;
      EXIT(AdjustedCost);
    END;

    [External]
    PROCEDURE TrackingExists@11() : Boolean;
    BEGIN
      EXIT(("Serial No." <> '') OR ("Lot No." <> ''));
    END;

    [External]
    PROCEDURE SetItemVariantLocationFilters@16(ItemNo@1000 : Code[20];VariantCode@1001 : Code[10];LocationCode@1002 : Code[10];PostingDate@1003 : Date);
    BEGIN
      RESET;
      SETCURRENTKEY("Item No.",Open,"Variant Code",Positive,"Location Code","Posting Date");
      SETRANGE("Item No.",ItemNo);
      SETRANGE("Variant Code",VariantCode);
      SETRANGE("Location Code",LocationCode);
      SETRANGE("Posting Date",0D,PostingDate);
    END;

    [External]
    PROCEDURE SetTrackingFilter@13(SerialNo@1000 : Code[50];LotNo@1001 : Code[50]);
    BEGIN
      SETRANGE("Serial No.",SerialNo);
      SETRANGE("Lot No.",LotNo);
    END;

    [External]
    PROCEDURE SetTrackingFilterFromSpec@14(TrackingSpecification@1000 : Record 336);
    BEGIN
      SETRANGE("Serial No.",TrackingSpecification."Serial No.");
      SETRANGE("Lot No.",TrackingSpecification."Lot No.");
    END;

    PROCEDURE ClearTrackingFilter@15();
    BEGIN
      SETRANGE("Serial No.");
      SETRANGE("Lot No.");
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterFilterLinesWithItemToPlan@17(VAR ItemLedgerEntry@1000 : Record 32;VAR Item@1001 : Record 27);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeVerifyOnInventory@18(VAR ItemLedgerEntry@1000 : Record 32;VAR IsHandled@1001 : Boolean);
    BEGIN
    END;

    PROCEDURE DPA_SetDefaultDpmtFromNoSeries@1100000995(xRecRef@1100525002 : RecordRef);
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      xRecRef.SETTABLE(xRec);
      DPA_Management.SetDepartmentCodeNoSeries(
        TABLENAME,
        "Global Dimension 1 Code",
        "No. Series",
        xRec."No. Series" );
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100528500 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(32) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 32');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Item Ledger Entry", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    BEGIN
    {
      4PS
      D.Borkent, 21-09-2001: project/element added for posting Item Journal (from advice orders)
      4PS, 06-07-2012, DP00121, Serial No. expanded to 40
    }
    END.
  }
}

