OBJECT Codeunit 11012025 Hour Line Template Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      NotInCaoFilterErr@1000 : TextConst 'ENU=is not in %1 Filter (%2).';
      NoFoundErr@1001 : TextConst 'ENU=No %1 found for %2 %3.;SVE=Ingen %1 hittad f”r %2 %3.';

    [External]
    PROCEDURE GetDefaultsSiteMgtLine@1100528300(VAR SiteMngmntHoursLine@1100528300 : Record 11012361);
    VAR
      HourLineTemplate@1100528302 : Record 11229799;
      HourLineTemplateLine@1100528301 : Record 11012078;
      Employee@1100528000 : Record 5200;
    BEGIN
      HourLineTemplateLine.SETRANGE(Source, HourLineTemplateLine.Source::"Site Mngmnt. Hours");
      HourLineTemplateLine.SETRANGE("Receiving Company", SiteMngmntHoursLine."Receiving Company");
      HourLineTemplateLine.SETRANGE("Template Code", SiteMngmntHoursLine."Line Template Code");
      HourLineTemplateLine.SETFILTER("Start Date", '<=%1',
        DWY2DATE(1, SiteMngmntHoursLine.Week, SiteMngmntHoursLine.Year));
      IF (NOT HourLineTemplateLine.FINDLAST) THEN BEGIN
        SiteMngmntHoursLine.Element := '';
        ClearFieldsOnSiteMgtHourLine(SiteMngmntHoursLine);
        ERROR(NoFoundErr, SiteMngmntHoursLine.FIELDCAPTION("Line Template Code"), SiteMngmntHoursLine.FIELDCAPTION("Receiving Company"),
          SiteMngmntHoursLine."Receiving Company");
      END;

      HourLineTemplateLine.CALCFIELDS(Type);
      HourLineTemplate.GET(HourLineTemplateLine.Source, HourLineTemplateLine."Receiving Company",
        HourLineTemplateLine."Template Code");
      HourLineTemplate.TESTFIELD(Blocked, FALSE);
      IF (NOT IsEmployeeInCAOFilter(SiteMngmntHoursLine."Supplying Company", SiteMngmntHoursLine."Employee No.",
        HourLineTemplate."CAO Filter"))
      THEN
        SiteMngmntHoursLine.FIELDERROR("Line Template Code", STRSUBSTNO(NotInCaoFilterErr, HourLineTemplate.FIELDCAPTION("CAO Filter"),
          HourLineTemplate."CAO Filter"));

      ClearFieldsOnSiteMgtHourLine(SiteMngmntHoursLine);

      SiteMngmntHoursLine.Type := HourLineTemplateLine.Type;
      IF (HourLineTemplateLine."Object No." <> '') THEN
        SiteMngmntHoursLine.VALIDATE("Object No.", HourLineTemplateLine."Object No.");
      IF (HourLineTemplateLine.Element <> '') THEN
        SiteMngmntHoursLine.VALIDATE(Element, HourLineTemplateLine.Element);
      IF (HourLineTemplateLine."Department Code" <> '') THEN
        SiteMngmntHoursLine.VALIDATE("Department Code", HourLineTemplateLine."Department Code")
      ELSE
        SiteMngmntHoursLine.FillDepartmentCode; //C034405
      IF (HourLineTemplateLine."Cost Object" <> '') THEN
        SiteMngmntHoursLine.VALIDATE("Cost Object", HourLineTemplateLine."Cost Object")
      ELSE BEGIN
        IF (SiteMngmntHoursLine."Supplying Company" <> '') THEN
          Employee.CHANGECOMPANY(SiteMngmntHoursLine."Supplying Company");
        IF (Employee.GET(SiteMngmntHoursLine."Employee No.")) THEN BEGIN
          IF (Employee."Global Dimension 2 Code" <> '') THEN
            SiteMngmntHoursLine.VALIDATE("Cost Object", Employee."Global Dimension 2 Code")
        END;
      END;
      IF (HourLineTemplateLine."Wage Component" <> '') THEN
        SiteMngmntHoursLine.VALIDATE("Wage Component", HourLineTemplateLine."Wage Component");

      IF (SiteMngmntHoursLine.Type = SiteMngmntHoursLine.Type::Plant) OR (SiteMngmntHoursLine.Type = SiteMngmntHoursLine.Type::UnmannedPlant) THEN BEGIN
        IF (HourLineTemplateLine."Plant Company" <> '') THEN
          SiteMngmntHoursLine.VALIDATE("Plant Company",HourLineTemplateLine."Plant Company");
        IF (HourLineTemplateLine."Plant Type" <> '') THEN
          SiteMngmntHoursLine.VALIDATE("Plant Type",HourLineTemplateLine."Plant Type");
        IF (HourLineTemplateLine."Plant No." <> '') THEN
          SiteMngmntHoursLine.VALIDATE("Plant No.",HourLineTemplateLine."Plant No.");
        IF (HourLineTemplateLine."Plant Location" <> '') THEN
          SiteMngmntHoursLine.VALIDATE("Plant Location",HourLineTemplateLine."Plant Location");
        IF (HourLineTemplateLine."Cost Component Plant" <> '') THEN
          SiteMngmntHoursLine.VALIDATE("Cost Component Plant",HourLineTemplateLine."Cost Component Plant");
      END;
    END;

    [External]
    PROCEDURE FillHourAccountingLineFromTemplate@1100528301(VAR HourAccountingLine@1100528300 : Record 11012039);
    VAR
      HourLineTemplateLine@1100528303 : Record 11012078;
    BEGIN
      GetMatchingHourLineTemplate(
        HourAccountingLine."Receiving Company", HourAccountingLine."Hour Line Template Code",
        DWY2DATE(1, HourAccountingLine.Week, HourAccountingLine.Year) , HourLineTemplateLine,
        HourLineTemplateLine.Source::"Hour Accounting");
      FillFieldsOnHourAccountingLine(HourAccountingLine, HourLineTemplateLine);
    END;

    [External]
    PROCEDURE IsEmployeeInCAOFilter@1100528302(SupplyingCompany@1100528305 : Text[50];EmployeeNo@1100528301 : Code[20];CAOFilter@1100528302 : Code[250]) : Boolean;
    VAR
      SiteMngmntHoursEmployee@1100528300 : Record 11012357;
      StringFunctions@1100528303 : Codeunit 11012273;
    BEGIN
      SiteMngmntHoursEmployee.SETRANGE(Company, SupplyingCompany);
      SiteMngmntHoursEmployee.SETRANGE("No.", EmployeeNo);
      IF (StringFunctions.IsFilterString(CAOFilter)) THEN
        SiteMngmntHoursEmployee.SETFILTER(CAO, CAOFilter)
      ELSE
        SiteMngmntHoursEmployee.SETRANGE(CAO, CAOFilter);
      EXIT(SiteMngmntHoursEmployee.FINDFIRST);
    END;

    [External]
    PROCEDURE FillTempHourLineTemplate@1100528303(VAR TempHourLineTemplate@1100528300 : TEMPORARY Record 11229799;Source@1100528305 : Option;EmployeeNo@1100528301 : Code[20];SupplyingCompany@1100528304 : Text[50];ReceivingCompany@1100528302 : Text[50]);
    VAR
      HourLineTemplate@1100528303 : Record 11229799;
    BEGIN
      HourLineTemplate.SETRANGE(Source, Source);
      HourLineTemplate.SETRANGE("Receiving Company", ReceivingCompany);
      IF (NOT HourLineTemplate.FINDSET) THEN
        EXIT;
      REPEAT
        IF (IsEmployeeInCAOFilter(SupplyingCompany, EmployeeNo, HourLineTemplate."CAO Filter")) THEN BEGIN
          TempHourLineTemplate.COPY(HourLineTemplate);
          TempHourLineTemplate.INSERT;
        END;
      UNTIL (HourLineTemplate.NEXT = 0);
    END;

    LOCAL PROCEDURE ClearFieldsOnSiteMgtHourLine@1100528000(VAR SiteMngmntHoursLine@1100528000 : Record 11012361);
    BEGIN
      SiteMngmntHoursLine."Object No." := '';
      SiteMngmntHoursLine."Object Name" := '';
      SiteMngmntHoursLine.Element := '';
      SiteMngmntHoursLine."Extension Contract" := '';
      SiteMngmntHoursLine."Plant Company" := '';
      SiteMngmntHoursLine."Plant Location" := '';
      SiteMngmntHoursLine."Plant Type" := '';
      SiteMngmntHoursLine."Plant No." := '';
      SiteMngmntHoursLine."Cost Component Plant" := '';
      SiteMngmntHoursLine."Shift Code" := '';
      SiteMngmntHoursLine."Department Code" := '';
      SiteMngmntHoursLine."Cost Object" := '';
      SiteMngmntHoursLine."Cost Object Description" := '';
      SiteMngmntHoursLine."Resource Request No." := '';
      SiteMngmntHoursLine."Wage Component" := '';
      IF (SiteMngmntHoursLine.Type <> SiteMngmntHoursLine.Type::Service) THEN
        SiteMngmntHoursLine."Service Location No." := '';
      IF SiteMngmntHoursLine.Type IN [SiteMngmntHoursLine.Type::Plant, SiteMngmntHoursLine.Type::UnmannedPlant] THEN
        SiteMngmntHoursLine.FillDefaultPlantCompany;
      SiteMngmntHoursLine.FillDepartmentCode;
    END;

    LOCAL PROCEDURE FillFieldsOnHourAccountingLine@1100528003(VAR HourAccountingLine@1100528001 : Record 11012039;HourLineTemplateLine@1100528000 : Record 11012078);
    BEGIN
      IF (HourLineTemplateLine."Department Code" <> '') THEN
        HourAccountingLine.VALIDATE("Department Code", HourLineTemplateLine."Department Code");
      IF (HourLineTemplateLine."Cost Object" <> '') THEN
        HourAccountingLine.VALIDATE("Cost Object", HourLineTemplateLine."Cost Object");
      IF (HourLineTemplateLine.Type = HourLineTemplateLine.Type::Indirect) AND (HourLineTemplateLine."Object No." <> '') THEN
        HourAccountingLine.VALIDATE("Cost Code", HourLineTemplateLine."Object No.");
      IF (HourLineTemplateLine."Wage Component" <> '') THEN
        HourAccountingLine.VALIDATE("Wage Component", HourLineTemplateLine."Wage Component");
    END;

    [External]
    PROCEDURE FillServCostPlusLineFromHourLineTemplate@1100528012(HourLineTemplateCode@1100528000 : Code[20];PostingDate@1100528001 : Date;VAR ServCostPlus@1100528300 : Record 11012825);
    VAR
      HourLineTemplateLine@1100528303 : Record 11012078;
      lSource@1100525000 : 'Hour Accounting,Site Mngmnt. Hours';
      "4PSMobileSetup"@1100525001 : Record 11012676;
    BEGIN
      lSource := lSource::"Hour Accounting";
      IF "4PSMobileSetup".GET THEN
        IF "4PSMobileSetup"."Hours Destination" = "4PSMobileSetup"."Hours Destination"::"Site Mgnmnt. Hours" THEN
          lSource := lSource::"Site Mngmnt. Hours";
      GetMatchingHourLineTemplate(COMPANYNAME, HourLineTemplateCode, PostingDate, HourLineTemplateLine, lSource);
      HourLineTemplateLine.TESTFIELD(Type, HourLineTemplateLine.Type::Service);
      FillFieldsOnServCostPlusLine(ServCostPlus, HourLineTemplateLine);
    END;

    LOCAL PROCEDURE GetMatchingHourLineTemplate@1100528007(ReceivingCompany@1100528000 : Text[30];HourLineTemplateCode@1100528004 : Code[20];PostingDate@1100528005 : Date;VAR HourLineTemplateLine@1100528001 : Record 11012078;ISource@1100525001 : 'Hour Accounting,Site Mngmnt. Hours');
    VAR
      HourLineTemplate@1100528002 : Record 11229799;
      "4PSMobileSetup"@1100525000 : Record 11012676;
    BEGIN
      IF ReceivingCompany = '' THEN
        ReceivingCompany := COMPANYNAME;
      HourLineTemplateLine.SETRANGE(Source, ISource);
      HourLineTemplateLine.SETRANGE("Receiving Company", ReceivingCompany);
      HourLineTemplateLine.SETRANGE("Template Code", HourLineTemplateCode);
      HourLineTemplateLine.SETFILTER("Start Date", '<=%1', PostingDate);
      HourLineTemplateLine.FINDLAST;

      HourLineTemplate.GET(HourLineTemplateLine.Source, HourLineTemplateLine."Receiving Company", HourLineTemplateLine."Template Code");
      HourLineTemplate.TESTFIELD(Blocked, FALSE);
      //IF (NOT IsEmployeeInCAOFilter(HourAccountingLine."Supplying Company", HourAccountingLine."Employee No.", HourLineTemplate."CAO Filter"))
      //THEN
      //  HourAccountingLine.FIELDERROR("Line Template Code");
      HourLineTemplateLine.CALCFIELDS(Type);
    END;

    LOCAL PROCEDURE FillFieldsOnServCostPlusLine@1100528006(VAR ServCostPlus@1100528001 : Record 11012825;HourLineTemplateLine@1100528000 : Record 11012078);
    BEGIN
      IF (HourLineTemplateLine."Cost Object" <> '') THEN
        ServCostPlus.VALIDATE("Cost Object", HourLineTemplateLine."Cost Object");
      IF (HourLineTemplateLine."Wage Component" <> '') THEN
        ServCostPlus.VALIDATE("Wage Component", HourLineTemplateLine."Wage Component");
    END;

    PROCEDURE IsLineTemplateCodeValid@1100525000(SiteMngmntHoursLine@1100525000 : Record 11012361) : Boolean;
    VAR
      HourLineTemplate@1100525001 : Record 11229799;
      HourLineTemplateLine@1100525002 : Record 11012078;
    BEGIN
      IF SiteMngmntHoursLine."Receiving Company" = '' THEN
        SiteMngmntHoursLine."Receiving Company" := COMPANYNAME;
      IF (SiteMngmntHoursLine."Supplying Company" = '') THEN
        SiteMngmntHoursLine."Supplying Company" := COMPANYNAME;

      HourLineTemplateLine.SETRANGE(Source, HourLineTemplateLine.Source::"Site Mngmnt. Hours");
      HourLineTemplateLine.SETRANGE("Receiving Company", SiteMngmntHoursLine."Receiving Company");
      HourLineTemplateLine.SETRANGE("Template Code", SiteMngmntHoursLine."Line Template Code");
      HourLineTemplateLine.SETRANGE(Type, SiteMngmntHoursLine.Type);
      HourLineTemplateLine.SETFILTER("Start Date", '<=%1',
        DWY2DATE(1, SiteMngmntHoursLine.Week, SiteMngmntHoursLine.Year));
      IF (NOT HourLineTemplateLine.FINDSET) THEN
        EXIT(FALSE);

      REPEAT
        IF (HourLineTemplate.GET(HourLineTemplateLine.Source, HourLineTemplateLine."Receiving Company",
          HourLineTemplateLine."Template Code"))
        THEN BEGIN
          IF (HourLineTemplate.Blocked = FALSE) THEN BEGIN
            IF (IsEmployeeInCAOFilter(SiteMngmntHoursLine."Supplying Company", SiteMngmntHoursLine."Employee No.",
                HourLineTemplate."CAO Filter"))
            THEN
              EXIT(TRUE);
          END;
        END;
      UNTIL (HourLineTemplateLine.NEXT = 0);
      EXIT(FALSE);
    END;

    PROCEDURE GetFirstValidLineTemplateCode@1100525002(SiteMngmntHoursLine@1100525000 : Record 11012361) : Code[20];
    VAR
      NewLineTemplateCode@1100525003 : Code[20];
    BEGIN
      IF SiteMngmntHoursLine."Receiving Company" = '' THEN
        SiteMngmntHoursLine."Receiving Company" := COMPANYNAME;
      IF (SiteMngmntHoursLine."Supplying Company" = '') THEN
        SiteMngmntHoursLine."Supplying Company" := COMPANYNAME;

      NewLineTemplateCode := GetFirstValidLineTemplateCodeLocal(SiteMngmntHoursLine);
      IF (NewLineTemplateCode = '') THEN BEGIN
        SiteMngmntHoursLine."Line Template Code" := '';
        NewLineTemplateCode := GetFirstValidLineTemplateCodeLocal(SiteMngmntHoursLine);
      END;
      IF (NewLineTemplateCode = '') THEN BEGIN
        SiteMngmntHoursLine.Type := 999;
        NewLineTemplateCode := GetFirstValidLineTemplateCodeLocal(SiteMngmntHoursLine);
      END;
      EXIT(NewLineTemplateCode);
    END;

    LOCAL PROCEDURE GetFirstValidLineTemplateCodeLocal@1100525001(SiteMngmntHoursLine@1100525000 : Record 11012361) : Code[20];
    VAR
      HourLineTemplate@1100525001 : Record 11229799;
      HourLineTemplateLine@1100525002 : Record 11012078;
    BEGIN
      HourLineTemplate.SETCURRENTKEY(Source, "Receiving Company", "Seq. No.", Code);
      HourLineTemplate.SETRANGE(Source, HourLineTemplate.Source::"Site Mngmnt. Hours");
      HourLineTemplate.SETRANGE("Receiving Company", SiteMngmntHoursLine."Receiving Company");
      HourLineTemplate.SETRANGE(Blocked, FALSE);
      IF (SiteMngmntHoursLine."Line Template Code" <> '') THEN
        HourLineTemplate.SETRANGE(Code, SiteMngmntHoursLine."Line Template Code");
      IF (SiteMngmntHoursLine.Type <> 999) THEN
        HourLineTemplate.SETRANGE(Type, SiteMngmntHoursLine.Type);
      IF (NOT HourLineTemplate.FINDSET) THEN
        EXIT('');

      REPEAT
        HourLineTemplateLine.SETRANGE(Source, HourLineTemplate.Source);
        HourLineTemplateLine.SETRANGE("Receiving Company", HourLineTemplate."Receiving Company");
        HourLineTemplateLine.SETFILTER("Start Date", '<=%1',
          DWY2DATE(1, SiteMngmntHoursLine.Week, SiteMngmntHoursLine.Year));
        HourLineTemplateLine.SETRANGE(Type, HourLineTemplate.Type);
        HourLineTemplateLine.SETRANGE("Template Code", HourLineTemplate.Code);
        IF (HourLineTemplateLine.FINDSET) THEN BEGIN
          REPEAT
            IF (IsEmployeeInCAOFilter(SiteMngmntHoursLine."Supplying Company", SiteMngmntHoursLine."Employee No.",
                HourLineTemplate."CAO Filter"))
            THEN
              EXIT(HourLineTemplateLine."Template Code");
          UNTIL (HourLineTemplateLine.NEXT = 0);
        END;
      UNTIL (HourLineTemplate.NEXT = 0);
      EXIT('');
    END;

    BEGIN
    END.
  }
}

