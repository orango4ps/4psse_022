OBJECT Table 1170 User Task
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Title;
    OnInsert=BEGIN
               VALIDATE("Created DateTime",CURRENTDATETIME);
               "Created By" := USERSECURITYID
             END;

    OnDelete=VAR
               DummyUserTask@1000 : Record 1170;
             BEGIN
               IF ("Percent Complete" > 0) AND ("Percent Complete" < 100) THEN
                 IF NOT CONFIRM(ConfirmDeleteQst) THEN
                   ERROR('');

               IF "Parent ID" > 0 THEN
                 IF CONFIRM(ConfirmDeleteAllOccurrencesQst) THEN BEGIN
                   DummyUserTask.COPYFILTERS(Rec);
                   RESET;
                   SETRANGE("Parent ID","Parent ID");
                   DELETEALL;
                   COPYFILTERS(DummyUserTask);
                 END
             END;

    CaptionML=[ENU=User Task;
               NOR=Brukeroppgave;
               SVE=Uppgift f”r anv„ndaren];
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=ID;
                                                              NOR=ID;
                                                              SVE=ID];
                                                   Editable=No }
    { 2   ;   ;Title               ;Text250       ;CaptionML=[ENU=Subject;
                                                              NOR=Emne;
                                                              SVE=Ang†ende] }
    { 3   ;   ;Created By          ;GUID          ;TableRelation=User."User Security ID" WHERE (License Type=CONST(Full User));
                                                   DataClassification=EndUserPseudonymousIdentifiers;
                                                   CaptionML=[ENU=Created By;
                                                              NOR=Opprettet av;
                                                              SVE=Skapad av];
                                                   Editable=No }
    { 4   ;   ;Created DateTime    ;DateTime      ;CaptionML=[ENU=Created Date;
                                                              NOR=Opprettingsdato;
                                                              SVE=Skapat datum];
                                                   Editable=No }
    { 5   ;   ;Assigned To         ;GUID          ;TableRelation=User."User Security ID" WHERE (License Type=CONST(Full User));
                                                   OnValidate=BEGIN
                                                                IF NOT ISNULLGUID("Assigned To") THEN
                                                                  CLEAR("User Task Group Assigned To");
                                                              END;

                                                   CaptionML=[ENU=Assigned To;
                                                              NOR=Tilordnet til;
                                                              SVE=Tilldelat till] }
    { 7   ;   ;Completed By        ;GUID          ;TableRelation=User."User Security ID" WHERE (License Type=CONST(Full User));
                                                   OnValidate=BEGIN
                                                                IF NOT ISNULLGUID("Completed By") THEN BEGIN
                                                                  "Percent Complete" := 100;
                                                                  IF "Completed DateTime" = 0DT THEN
                                                                    "Completed DateTime" := CURRENTDATETIME;
                                                                  IF "Start DateTime" = 0DT THEN
                                                                    "Start DateTime" := CURRENTDATETIME;
                                                                END ELSE BEGIN
                                                                  "Completed DateTime" := 0DT;
                                                                  "Percent Complete" := 0;
                                                                END;
                                                              END;

                                                   DataClassification=EndUserPseudonymousIdentifiers;
                                                   CaptionML=[ENU=Completed By;
                                                              NOR=Fullf›rt av;
                                                              SVE=Avslutad av] }
    { 8   ;   ;Completed DateTime  ;DateTime      ;OnValidate=BEGIN
                                                                IF "Completed DateTime" <> 0DT THEN BEGIN
                                                                  "Percent Complete" := 100;
                                                                  IF ISNULLGUID("Completed By") THEN
                                                                    "Completed By" := USERSECURITYID;
                                                                  IF "Start DateTime" = 0DT THEN
                                                                    "Start DateTime" := CURRENTDATETIME;
                                                                END ELSE BEGIN
                                                                  CLEAR("Completed By");
                                                                  "Percent Complete" := 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Completed Date;
                                                              NOR=Fullf›ringsdato] }
    { 9   ;   ;Due DateTime        ;DateTime      ;CaptionML=[ENU=Due Date;
                                                              NOR=Forfallsdato;
                                                              SVE=F”rfallodatum] }
    { 10  ;   ;Percent Complete    ;Integer       ;OnValidate=BEGIN
                                                                IF "Percent Complete" = 100 THEN BEGIN
                                                                  "Completed By" := USERSECURITYID;
                                                                  "Completed DateTime" := CURRENTDATETIME;
                                                                END ELSE BEGIN
                                                                  CLEAR("Completed By");
                                                                  CLEAR("Completed DateTime");
                                                                END;

                                                                IF "Percent Complete" = 0 THEN
                                                                  "Start DateTime" := 0DT
                                                                ELSE
                                                                  IF "Start DateTime" = 0DT THEN
                                                                    "Start DateTime" := CURRENTDATETIME;
                                                              END;

                                                   CaptionML=[ENU=% Complete;
                                                              NOR=% fullf›rt];
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 11  ;   ;Start DateTime      ;DateTime      ;CaptionML=[ENU=Start Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum] }
    { 12  ;   ;Priority            ;Option        ;CaptionML=[ENU=Priority;
                                                              NOR=Prioritet;
                                                              SVE=Prioritet];
                                                   OptionCaptionML=[ENU=,Low,Normal,High;
                                                                    NOR=,Lav,Normal,H›y];
                                                   OptionString=,Low,Normal,High }
    { 13  ;   ;Description         ;BLOB          ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning];
                                                   SubType=Memo }
    { 14  ;   ;Created By User Name;Code50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(User."User Name" WHERE (User Security ID=FIELD(Created By),
                                                                                              License Type=CONST(Full User)));
                                                   CaptionML=[ENU=User Created By;
                                                              NOR=Bruker opprettet av];
                                                   Editable=No }
    { 15  ;   ;Assigned To User Name;Code50       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(User."User Name" WHERE (User Security ID=FIELD(Assigned To),
                                                                                              License Type=CONST(Full User)));
                                                   CaptionML=[ENU=User Assigned To;
                                                              NOR=Bruker tilordnet til];
                                                   Editable=No }
    { 16  ;   ;Completed By User Name;Code50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(User."User Name" WHERE (User Security ID=FIELD(Completed By),
                                                                                              License Type=CONST(Full User)));
                                                   CaptionML=[ENU=User Completed By;
                                                              NOR=Bruker fullf›rt av];
                                                   Editable=No }
    { 17  ;   ;Object Type         ;Option        ;CaptionML=[ENU=Link Task To;
                                                              NOR=Koble oppgave til];
                                                   OptionCaptionML=[ENU=,,,Report,,,,,Page;
                                                                    NOR=,,,Rapport,,,,,Side;
                                                                    SVE=,,,Rapport,,,,,Sida];
                                                   OptionString=,,,Report,,,,,Page }
    { 18  ;   ;Object ID           ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=FIELD(Object Type));
                                                   CaptionML=[ENU=Object ID;
                                                              NOR=Objekt-ID;
                                                              SVE=Objekt-ID] }
    { 19  ;   ;Parent ID           ;Integer       ;CaptionML=[ENU=Parent ID;
                                                              NOR=Overordnet ID;
                                                              SVE=™verordnat ID] }
    { 20  ;   ;User Task Group Assigned To;Code20 ;TableRelation="User Task Group".Code;
                                                   OnValidate=BEGIN
                                                                IF "User Task Group Assigned To" <> '' THEN BEGIN
                                                                  CLEAR("Assigned To");
                                                                  CLEAR("Assigned To User Name");
                                                                END;
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=User Task Group Assigned To;
                                                              NOR=Gruppe for brukeroppgave tilordnet til] }
    { 21  ;   ;ShouldShowPendingTasks;Boolean     ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=ShouldShowPendingTasks;
                                                              NOR=ShouldShowPendingTasks];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=Yes }
    {    ;Assigned To,User Task Group Assigned To,Percent Complete,Due DateTime }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ConfirmDeleteQst@1000 : TextConst 'ENU=This task is started but not complete, delete anyway?;NOR=Denne oppgaven er startet, men ikke fullf›rt. Slett likevel?';
      ConfirmDeleteAllOccurrencesQst@1001 : TextConst 'ENU=Delete all occurrences of this task?;NOR=Vil du slette alle forekomster av denne oppgaven?';

    [External]
    PROCEDURE CreateRecurrence@3(RecurringStartDate@1000 : Date;Recurrence@1001 : DateFormula;Occurrences@1002 : Integer);
    VAR
      UserTaskTemp@1005 : Record 1170;
      Count@1004 : Integer;
      TempDueDate@1003 : Date;
    BEGIN
      VALIDATE("Parent ID",ID);
      VALIDATE("Due DateTime",CREATEDATETIME(RecurringStartDate,000000T));
      MODIFY(TRUE);

      TempDueDate := RecurringStartDate;
      WHILE Count < Occurrences - 1 DO BEGIN
        CLEAR(UserTaskTemp);
        UserTaskTemp.VALIDATE(Title,Title);
        UserTaskTemp.SetDescription(GetDescription);
        UserTaskTemp."Created By" := USERSECURITYID;
        UserTaskTemp.VALIDATE("Created DateTime",CURRENTDATETIME);
        UserTaskTemp.VALIDATE("Assigned To","Assigned To");
        UserTaskTemp.VALIDATE("User Task Group Assigned To","User Task Group Assigned To");
        UserTaskTemp.VALIDATE(Priority,Priority);
        UserTaskTemp.VALIDATE("Object Type","Object Type");
        UserTaskTemp.VALIDATE("Object ID","Object ID");
        UserTaskTemp.VALIDATE("Parent ID",ID);
        TempDueDate := CALCDATE(Recurrence,TempDueDate);
        UserTaskTemp.VALIDATE("Due DateTime",CREATEDATETIME(TempDueDate,000000T));
        UserTaskTemp.INSERT(TRUE);
        Count := Count + 1;
      END
    END;

    [External]
    PROCEDURE SetCompleted@2();
    BEGIN
      "Percent Complete" := 100;
      "Completed By" := USERSECURITYID;
      "Completed DateTime" := CURRENTDATETIME;

      IF "Start DateTime" = 0DT THEN
        "Start DateTime" := CURRENTDATETIME;
    END;

    [External]
    PROCEDURE SetStyle@1() : Text;
    BEGIN
      IF "Percent Complete" <> 100 THEN BEGIN
        IF ("Due DateTime" <> 0DT) AND ("Due DateTime" <= CURRENTDATETIME) THEN
          EXIT('Unfavorable')
      END;
      EXIT('');
    END;

    [External]
    PROCEDURE GetDescription@4() : Text;
    VAR
      TypeHelper@1000 : Codeunit 10;
      DescriptionFieldRef@1002 : FieldRef;
      UserTaskRecRef@1003 : RecordRef;
      StreamText@1001 : Text;
    BEGIN
      UserTaskRecRef.GETTABLE(Rec);
      DescriptionFieldRef := UserTaskRecRef.FIELD(FIELDNO(Description));
      StreamText := TypeHelper.ReadTextBlobWithTextEncoding(DescriptionFieldRef,TEXTENCODING::Windows);
      EXIT(StreamText);
    END;

    [External]
    PROCEDURE SetDescription@5(StreamText@1000 : Text);
    VAR
      TypeHelper@1002 : Codeunit 10;
      DescriptionFieldRef@1003 : FieldRef;
      UserTaskRecRef@1004 : RecordRef;
    BEGIN
      CLEAR(Description);
      UserTaskRecRef.GETTABLE(Rec);
      DescriptionFieldRef := UserTaskRecRef.FIELD(FIELDNO(Description));
      IF TypeHelper.WriteBlobWithEncoding(DescriptionFieldRef,StreamText,TEXTENCODING::Windows) THEN BEGIN
        Description := DescriptionFieldRef.VALUE;
        IF MODIFY(TRUE) THEN;
      END;
    END;

    [External]
    PROCEDURE IsCompleted@6() : Boolean;
    BEGIN
      EXIT("Percent Complete" = 100);
    END;

    BEGIN
    END.
  }
}

