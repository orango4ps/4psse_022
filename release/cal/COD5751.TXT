OBJECT Codeunit 5751 Get Source Doc. Inbound
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GetSourceDocuments@1000 : Report 5753;

    LOCAL PROCEDURE CreateWhseReceiptHeaderFromWhseRequest@7(VAR WarehouseRequest@1000 : Record 5765) : Boolean;
    BEGIN
      IF WarehouseRequest.ISEMPTY THEN
        EXIT(FALSE);

      CLEAR(GetSourceDocuments);
      GetSourceDocuments.USEREQUESTPAGE(FALSE);
      GetSourceDocuments.SETTABLEVIEW(WarehouseRequest);
      GetSourceDocuments.SetHideDialog(TRUE);
      GetSourceDocuments.RUNMODAL;

      EXIT(TRUE);
    END;

    [External]
    PROCEDURE GetInboundDocs@1(VAR WhseReceiptHeader@1000 : Record 7316);
    VAR
      WhseGetSourceFilterRec@1001 : Record 5771;
      WhseSourceFilterSelection@1002 : Page 5784;
    BEGIN
      WhseReceiptHeader.FIND;
      WhseSourceFilterSelection.SetOneCreatedReceiptHeader(WhseReceiptHeader);
      WhseGetSourceFilterRec.FILTERGROUP(2);
      WhseGetSourceFilterRec.SETRANGE(Type,WhseGetSourceFilterRec.Type::Inbound);
      WhseGetSourceFilterRec.FILTERGROUP(0);
      WhseSourceFilterSelection.SETTABLEVIEW(WhseGetSourceFilterRec);
      WhseSourceFilterSelection.RUNMODAL;

      WhseReceiptHeader."Document Status" := WhseReceiptHeader.GetHeaderStatus(0);
      WhseReceiptHeader.MODIFY;

      OnAfterGetInboundDocs(WhseReceiptHeader);
    END;

    [External]
    PROCEDURE GetSingleInboundDoc@2(VAR WhseReceiptHeader@1000 : Record 7316);
    VAR
      WhseRqst@1001 : Record 5765;
      SourceDocSelection@1003 : Page 5793;
      IsHandled@1002 : Boolean;
    BEGIN
      OnBeforeGetSingleInboundDoc(WhseReceiptHeader,IsHandled);
      IF IsHandled THEN
        EXIT;

      CLEAR(GetSourceDocuments);
      WhseReceiptHeader.FIND;

      WhseRqst.FILTERGROUP(2);
      WhseRqst.SETRANGE(Type,WhseRqst.Type::Inbound);
      WhseRqst.SETRANGE("Location Code",WhseReceiptHeader."Location Code");
      WhseRqst.FILTERGROUP(0);
      WhseRqst.SETRANGE("Document Status",WhseRqst."Document Status"::Released);
      WhseRqst.SETRANGE("Completely Handled",FALSE);

      SourceDocSelection.LOOKUPMODE(TRUE);
      SourceDocSelection.SETTABLEVIEW(WhseRqst);
      IF SourceDocSelection.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;
      SourceDocSelection.GetResult(WhseRqst);

      GetSourceDocuments.SetOneCreatedReceiptHeader(WhseReceiptHeader);
      GetSourceDocuments.USEREQUESTPAGE(FALSE);
      GetSourceDocuments.SETTABLEVIEW(WhseRqst);
      GetSourceDocuments.RUNMODAL;

      WhseReceiptHeader."Document Status" := WhseReceiptHeader.GetHeaderStatus(0);
      WhseReceiptHeader.MODIFY;

      OnAfterGetSingleInboundDoc(WhseReceiptHeader);
    END;

    [External]
    PROCEDURE CreateFromPurchOrder@3(PurchHeader@1000 : Record 38);
    BEGIN
      OnBeforeCreateFromPurchOrder(PurchHeader);
      ShowDialog(CreateFromPurchOrderHideDialog(PurchHeader));
    END;

    [External]
    PROCEDURE CreateFromPurchOrderHideDialog@15(PurchHeader@1000 : Record 38) : Boolean;
    VAR
      WhseRqst@1001 : Record 5765;
    BEGIN
      FindWarehouseRequestForPurchaseOrder(WhseRqst,PurchHeader);
      EXIT(CreateWhseReceiptHeaderFromWhseRequest(WhseRqst));
    END;

    [External]
    PROCEDURE CreateFromSalesReturnOrder@5(SalesHeader@1000 : Record 36);
    BEGIN
      OnBeforeCreateFromSalesReturnOrder(SalesHeader);
      ShowDialog(CreateFromSalesReturnOrderHideDialog(SalesHeader));
    END;

    [External]
    PROCEDURE CreateFromSalesReturnOrderHideDialog@16(SalesHeader@1000 : Record 36) : Boolean;
    VAR
      WhseRqst@1001 : Record 5765;
    BEGIN
      FindWarehouseRequestForSalesReturnOrder(WhseRqst,SalesHeader);
      EXIT(CreateWhseReceiptHeaderFromWhseRequest(WhseRqst));
    END;

    [External]
    PROCEDURE CreateFromInbndTransferOrder@4(TransHeader@1000 : Record 5740);
    BEGIN
      OnBeforeCreateFromInbndTransferOrder(TransHeader);
      ShowDialog(CreateFromInbndTransferOrderHideDialog(TransHeader));
    END;

    [External]
    PROCEDURE CreateFromInbndTransferOrderHideDialog@17(TransHeader@1000 : Record 5740) : Boolean;
    VAR
      WhseRqst@1001 : Record 5765;
    BEGIN
      FindWarehouseRequestForInbndTransferOrder(WhseRqst,TransHeader);
      EXIT(CreateWhseReceiptHeaderFromWhseRequest(WhseRqst));
    END;

    [External]
    PROCEDURE GetSingleWhsePutAwayDoc@10(CurrentWkshTemplateName@1008 : Code[10];CurrentWkshName@1004 : Code[10];LocationCode@1000 : Code[10]);
    VAR
      WhsePutAwayRqst@1001 : Record 7324;
      GetWhseSourceDocuments@1002 : Report 7306;
      WhsePutAwayDocSelection@1003 : Page 7334;
    BEGIN
      WhsePutAwayRqst.FILTERGROUP(2);
      WhsePutAwayRqst.SETRANGE("Completely Put Away",FALSE);
      WhsePutAwayRqst.SETRANGE("Location Code",LocationCode);
      WhsePutAwayRqst.FILTERGROUP(0);

      WhsePutAwayDocSelection.LOOKUPMODE(TRUE);
      WhsePutAwayDocSelection.SETTABLEVIEW(WhsePutAwayRqst);
      IF WhsePutAwayDocSelection.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;

      WhsePutAwayDocSelection.GetResult(WhsePutAwayRqst);

      GetWhseSourceDocuments.SetWhseWkshName(
        CurrentWkshTemplateName,CurrentWkshName,LocationCode);

      GetWhseSourceDocuments.USEREQUESTPAGE(FALSE);
      GetWhseSourceDocuments.SETTABLEVIEW(WhsePutAwayRqst);
      GetWhseSourceDocuments.RUNMODAL;
    END;

    LOCAL PROCEDURE GetRequireReceiveRqst@6(VAR WhseRqst@1002 : Record 5765);
    VAR
      Location@1000 : Record 14;
      LocationCode@1001 : Text;
    BEGIN
      IF WhseRqst.FINDSET THEN BEGIN
        REPEAT
          IF Location.RequireReceive(WhseRqst."Location Code") THEN
            LocationCode += WhseRqst."Location Code" + '|';
        UNTIL WhseRqst.NEXT = 0;
        IF LocationCode <> '' THEN BEGIN
          LocationCode := COPYSTR(LocationCode,1,STRLEN(LocationCode) - 1);
          IF LocationCode[1] = '|' THEN
            LocationCode := '''''' + LocationCode;
        END;
        WhseRqst.SETFILTER("Location Code",LocationCode);
      END;
    END;

    LOCAL PROCEDURE FindWarehouseRequestForPurchaseOrder@8(VAR WhseRqst@1000 : Record 5765;PurchHeader@1001 : Record 38);
    BEGIN
      WITH PurchHeader DO BEGIN
        TESTFIELD(Status,Status::Released);
        WhseRqst.SETRANGE(Type,WhseRqst.Type::Inbound);
        WhseRqst.SETRANGE("Source Type",DATABASE::"Purchase Line");
        WhseRqst.SETRANGE("Source Subtype","Document Type");
        WhseRqst.SETRANGE("Source No.","No.");
        WhseRqst.SETRANGE("Document Status",WhseRqst."Document Status"::Released);
        GetRequireReceiveRqst(WhseRqst);
      END;

      OnAfterFindWarehouseRequestForPurchaseOrder(WhseRqst,PurchHeader);
    END;

    LOCAL PROCEDURE FindWarehouseRequestForSalesReturnOrder@9(VAR WhseRqst@1000 : Record 5765;SalesHeader@1001 : Record 36);
    BEGIN
      WITH SalesHeader DO BEGIN
        TESTFIELD(Status,Status::Released);
        WhseRqst.SETRANGE(Type,WhseRqst.Type::Inbound);
        WhseRqst.SETRANGE("Source Type",DATABASE::"Sales Line");
        WhseRqst.SETRANGE("Source Subtype","Document Type");
        WhseRqst.SETRANGE("Source No.","No.");
        WhseRqst.SETRANGE("Document Status",WhseRqst."Document Status"::Released);
        GetRequireReceiveRqst(WhseRqst);
      END;

      OnAfterFindWarehouseRequestForSalesReturnOrder(WhseRqst,SalesHeader);
    END;

    LOCAL PROCEDURE FindWarehouseRequestForInbndTransferOrder@12(VAR WhseRqst@1000 : Record 5765;TransHeader@1001 : Record 5740);
    BEGIN
      WITH TransHeader DO BEGIN
        TESTFIELD(Status,Status::Released);
        WhseRqst.SETRANGE(Type,WhseRqst.Type::Inbound);
        WhseRqst.SETRANGE("Source Type",DATABASE::"Transfer Line");
        WhseRqst.SETRANGE("Source Subtype",1);
        WhseRqst.SETRANGE("Source No.","No.");
        WhseRqst.SETRANGE("Document Status",WhseRqst."Document Status"::Released);
        GetRequireReceiveRqst(WhseRqst);
      END;

      OnAfterFindWarehouseRequestForInbndTransferOrder(WhseRqst,TransHeader);
    END;

    LOCAL PROCEDURE OpenWarehouseReceiptPage@14();
    VAR
      WarehouseReceiptHeader@1000 : Record 7316;
    BEGIN
      GetSourceDocuments.GetLastReceiptHeader(WarehouseReceiptHeader);
      PAGE.RUN(PAGE::"Warehouse Receipt",WarehouseReceiptHeader);
    END;

    LOCAL PROCEDURE ShowDialog@11(WhseReceiptCreated@1000 : Boolean);
    BEGIN
      GetSourceDocuments.ShowReceiptDialog;
      IF WhseReceiptCreated THEN
        OpenWarehouseReceiptPage;
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterFindWarehouseRequestForPurchaseOrder@22(VAR WarehouseRequest@1000 : Record 5765;PurchaseHeader@1001 : Record 38);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterFindWarehouseRequestForSalesReturnOrder@23(VAR WarehouseRequest@1000 : Record 5765;SalesHeader@1001 : Record 36);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterFindWarehouseRequestForInbndTransferOrder@24(VAR WarehouseRequest@1000 : Record 5765;TransferHeader@1001 : Record 5740);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterGetInboundDocs@13(WarehouseReceiptHeader@1000 : Record 7316);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterGetSingleInboundDoc@18(WarehouseReceiptHeader@1000 : Record 7316);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCreateFromPurchOrder@19(VAR PurchaseHeader@1000 : Record 38);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCreateFromSalesReturnOrder@20(VAR SalesHeader@1000 : Record 36);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCreateFromInbndTransferOrder@21(VAR TransferHeader@1000 : Record 5740);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeGetSingleInboundDoc@25(VAR WarehouseReceiptHeader@1000 : Record 7316;VAR IsHandled@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

