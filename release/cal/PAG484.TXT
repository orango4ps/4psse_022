OBJECT Page 484 Edit Reclas. Dimensions
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Edit Reclas. Dimensions;
               NOR=Rediger reklassifiseringsdimensjoner;
               SVE=Redigera omklassificeringsdimensioner];
    SourceTable=Table482;
    PageType=List;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 IF FormCaption <> '' THEN
                   CurrPage.CAPTION := FormCaption;
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a dimension code to attach a dimension to a journal line.;
                           NOR=Angir en dimensjonskode for † knytte en dimensjon til en kladdelinje.;
                           SVE=Anger en dimensionskod f”r att koppla en dimension till en journalrad.];
                ApplicationArea=#Dimensions;
                SourceExpr="Dimension Code" }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the descriptive name of the Dimension Code field.;
                           NOR=Angir det beskrivende navnet for feltet Dimensjonskode.;
                           SVE=Anger det beskrivande namnet p† f„ltet Dimensionskod.];
                ApplicationArea=#Dimensions;
                SourceExpr="Dimension Name";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the original dimension value to register the transfer of items from the original dimension value to the new dimension value.;
                           NOR=Angir den opprinnelige dimensjonsverdien for † registrere overf›ringen av varer fra den opprinnelige dimensjonsverdien til den nye dimensjonsverdien.;
                           SVE=Anger det ursprungliga dimensionsv„rdet f”r att registrera ”verf”ringen av artiklar fr†n det ursprungliga dimensionsv„rdet till det nya.];
                ApplicationArea=#Dimensions;
                SourceExpr="Dimension Value Code" }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the new dimension value to register the transfer of items, from the original dimension value to the new dimension value.;
                           NOR=Angir den nye dimensjonsverdien for † registrere overf›ringen av varer fra den opprinnelige dimensjonsverdien til den nye dimensjonsverdien.;
                           SVE=Anger det nya dimensionsv„rdet f”r att registrera ”verf”ringen av artiklar fr†n det ursprungliga dimensionsv„rdet till det nya.];
                ApplicationArea=#Dimensions;
                SourceExpr="New Dimension Value Code" }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the descriptive name of the original Dimension Value Code field.;
                           NOR=Angir det beskrivende navnet for feltet Opprinnelig dimensjonsverdikode.;
                           SVE=Anger det beskrivande namnet p† det ursprungliga Dimensionsv„rdekod-f„ltet.];
                ApplicationArea=#Dimensions;
                SourceExpr="Dimension Value Name" }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the descriptive name of the New Dimension Value Code field.;
                           NOR=Angir det beskrivende navnet for feltet Ny dimensjonsverdikode.;
                           SVE=Anger det beskrivande namnet p† det nya Dimensionsv„rdekod-f„ltet.];
                ApplicationArea=#Dimensions;
                SourceExpr="New Dimension Value Name" }

  }
  CODE
  {
    VAR
      FormCaption@1002 : Text[250];

    [External]
    PROCEDURE GetDimensionIDs@2(VAR DimSetID@1000 : Integer;VAR NewDimSetId@1001 : Integer);
    BEGIN
      DimSetID := GetDimSetID(Rec);
      NewDimSetId := GetNewDimSetID(Rec);
    END;

    [External]
    PROCEDURE SetDimensionIDs@8(DimSetID@1000 : Integer;NewDimSetId@1001 : Integer);
    VAR
      DimSetEntry@1002 : Record 480;
    BEGIN
      DELETEALL;
      DimSetEntry.SETRANGE("Dimension Set ID",DimSetID);
      IF DimSetEntry.FINDSET THEN
        REPEAT
          "Dimension Code" := DimSetEntry."Dimension Code";
          "Dimension Value Code" := DimSetEntry."Dimension Value Code";
          "Dimension Value ID" := DimSetEntry."Dimension Value ID";
          INSERT;
        UNTIL DimSetEntry.NEXT = 0;
      DimSetEntry.SETRANGE("Dimension Set ID",NewDimSetId);
      IF DimSetEntry.FINDSET THEN
        REPEAT
          IF NOT GET(DimSetEntry."Dimension Code") THEN BEGIN
            "Dimension Code" := DimSetEntry."Dimension Code";
            "Dimension Value Code" := '';
            "Dimension Value ID" := 0;
            INSERT;
          END;
          "New Dimension Value Code" := DimSetEntry."Dimension Value Code";
          "New Dimension Value ID" := DimSetEntry."Dimension Value ID";
          MODIFY;
        UNTIL DimSetEntry.NEXT = 0;
    END;

    [External]
    PROCEDURE SetFormCaption@3(NewFormCaption@1000 : Text[250]);
    BEGIN
      FormCaption := COPYSTR(NewFormCaption + ' - ' + CurrPage.CAPTION,1,MAXSTRLEN(FormCaption));
    END;

    BEGIN
    END.
  }
}

