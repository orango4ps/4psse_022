OBJECT Page 11127977 Symbrio Purchase Order List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSEEV.I045#B3P3;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Symbrio Purchase Order List;
               NOR=Liste over Symbrio-innkj›psordre;
               SVE=Symbrio Ink”psordrar];
    InsertAllowed=No;
    ModifyAllowed=Yes;
    SourceTable=Table11127978;
    PageType=List;
    UsageCategory=Lists;
    CardPageID=Symbrio Purchase Order Card;
    ActionList=ACTIONS
    {
      { 1000000036;  ;ActionContainer;
                      Name=ActionContainer;
                      ActionContainerType=NewDocumentItems }
      { 1000000035;1 ;ActionGroup;
                      Name=Buffer;
                      CaptionML=[ENU=Buffer;
                                 NOR=Buffer;
                                 SVE=Buffert] }
      { 1000000003;2 ;Action    ;
                      CaptionML=[ENU=Import from &folder;
                                 NOR=Importer fra &mappe;
                                 SVE=Import fr†n &katalog];
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //>>SYM1000
                                 //CLEAR(SymbrioMgmt);
                                 //SymbrioMgmt.SearchPurchaseFolder();
                                 CODEUNIT.RUN(CODEUNIT::ImportOrders);
                                 //<<SYM1000
                               END;
                                }
      { 1000000037;2 ;Action    ;
                      Name=<Action1000000017>;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Import;
                                 NOR=&Import;
                                 SVE=&Import];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 FileManagement@1100285000 : Codeunit 419;
                                 FileName@1100285001 : Text[250];
                                 Text000001@1100285002 : TextConst 'ENU=Symbrio Purchase File;NOR=Symbrio innkj›psfil;SVE=Symbrio ink”psorderfil';
                                 varXmlFile@1100285502 : File;
                                 varInputStream@1100285501 : InStream;
                                 SymbrioImportPurchaseOrder@1100285503 : XMLport 11127993;
                                 SymbrioSetup@1100285100 : Record 11127975;
                                 ImportOrders@1100285101 : Codeunit 11127984;
                                 lvServerTempFileName@1100285102 : Text;
                               BEGIN
                                 //>>SYM1000
                                 //CLEAR(SymbrioMgmt);
                                 //FileName := FileManagement.OpenFileDialog(Text000001,FileName,'');
                                 //IF FileName <> '' THEN
                                 //  SymbrioMgmt.ProcessPurchaseFile(FileName);
                                 SymbrioSetup.GET;

                                 CASE SymbrioSetup."Import orders by" OF
                                   SymbrioSetup."Import orders by"::XMLport:
                                     IF (UPLOADINTOSTREAM(txtChooseFile, 'C:\', txtFileTypes, FileName, varInputStream)) THEN BEGIN
                                       SymbrioImportPurchaseOrder.SetFileName(FileManagement.GetFileName(FileName),FileName);
                                       SymbrioImportPurchaseOrder.SETSOURCE(varInputStream);
                                       SymbrioImportPurchaseOrder.IMPORT;
                                     END;
                                   SymbrioSetup."Import orders by"::DotNet:
                                     BEGIN
                                       lvServerTempFileName := FileManagement.ServerTempFileName('.xml');
                                       IF UPLOAD(txtChooseFile, 'C:\', txtFileTypes, FileName, lvServerTempFileName) THEN
                                       ImportOrders.ReadXml(FileName,lvServerTempFileName);
                                     END;
                                 END;
                                 CurrPage.ACTIVATE;
                                 //<<SYM1000
                               END;
                                }
      { 1000000038;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=[ENU=Process &Order;
                                 NOR=Behandle &Ordre;
                                 SVE=Behandla &Order];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CLEAR(SymbrioMgmt);
                                 SymbrioMgmt.ProcessOrder(Rec);
                               END;
                                }
      { 1000000040;2 ;Action    ;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Batch-Process &Order;
                                 NOR=Behandle alle &ordre;
                                 SVE=Behandla alla &order];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostBatch;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CLEAR(SymbrioMgmt);
                                 SymbrioMgmt.ProcessAllOrders();
                               END;
                                }
      { 1100285400;2 ;Action    ;
                      CaptionML=[ENU=Show order;
                                 SVE=Visa order];
                      RunObject=Page 50;
                      RunPageLink=No.=FIELD(OrderHeadID),
                                  Document Type=CONST(Order) }
      { 1100409002;2 ;Action    ;
                      CaptionML=[ENU=Clear Error on Marked;
                                 SVE=Rensa fel p† markerade];
                      OnAction=VAR
                                 SymbrioInvHeader@1100285000 : Record 11127978;
                               BEGIN
                                 // SYM060
                                 CurrPage.SETSELECTIONFILTER(SymbrioInvHeader);
                                 SymbrioInvHeader.MODIFYALL("Error Message", '', FALSE);
                               END;
                                }
      { 1100285000;1 ;Action    ;
                      CaptionML=[ENU=Symbrio Error Log;
                                 NOR=Feillogg for Symbrio;
                                 SVE=Symbrio Fellogg];
                      Promoted=Yes;
                      PromotedCategory=Report;
                      RunPageMode=View;
                      OnAction=BEGIN
                                 PAGE.RUN(PAGE::"Symbrio Error Log");
                               END;
                                }
      { 1100409000;1 ;Action    ;
                      Name=Import Orders;
                      CaptionML=[ENU=Import Orders;
                                 SVE=Importera ordrar fr†n fil];
                      Visible=FALSE;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::ImportOrders);
                               END;
                                }
      { 1100409001;1 ;Action    ;
                      CaptionML=[ENU=Process All Orders (w/o errors);
                                 SVE=Behandla orders (som saknar felmeddelande)];
                      RunObject=Codeunit 11127982;
                      Visible=FALSE }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1000000002;2;Field  ;
                SourceExpr=OrderHeadID;
                Editable=FALSE }

    { 1000000039;2;Field  ;
                SourceExpr="Error Message" }

    { 1000000004;2;Field  ;
                SourceExpr=PurchaserIdentification }

    { 1000000005;2;Field  ;
                SourceExpr=SupplierCompanyCode }

    { 1000000006;2;Field  ;
                SourceExpr=ProjectAgreementNo }

    { 1000000007;2;Field  ;
                SourceExpr=OrderCreatedDate }

    { 1000000008;2;Field  ;
                SourceExpr=EarliestDeliveryDate }

    { 1000000009;2;Field  ;
                SourceExpr=PurchaserCompanyName }

    { 1000000010;2;Field  ;
                SourceExpr=PurchaserCompanyOrgNo }

    { 1000000011;2;Field  ;
                SourceExpr=PurchaserCompanyCode }

    { 1000000012;2;Field  ;
                SourceExpr=SupplierCompanyName }

    { 1000000013;2;Field  ;
                SourceExpr=SupplierCompanyOrgNo }

    { 1000000014;2;Field  ;
                SourceExpr=SupplierIdentification }

    { 1000000015;2;Field  ;
                SourceExpr=DeliveryReceiver }

    { 1000000016;2;Field  ;
                SourceExpr=DeliveryAddress }

    { 1000000017;2;Field  ;
                SourceExpr=DeliveryPostalCode }

    { 1000000018;2;Field  ;
                SourceExpr=DeliveryCity }

    { 1000000019;2;Field  ;
                SourceExpr=DeliveryCountry }

    { 1000000020;2;Field  ;
                SourceExpr=DeliveryAddressNoteText }

    { 1000000021;2;Field  ;
                SourceExpr=GoodsLabel }

    { 1000000022;2;Field  ;
                SourceExpr=PurchaserReferenceFirstName }

    { 1000000023;2;Field  ;
                SourceExpr=PurchaserReferenceLastName }

    { 1000000024;2;Field  ;
                SourceExpr=PurchaserReference }

    { 1000000025;2;Field  ;
                SourceExpr=PurchaserCreatorEmail }

    { 1000000026;2;Field  ;
                SourceExpr=PurchaserCreatorPhone }

    { 1000000027;2;Field  ;
                SourceExpr=Currency }

    { 1000000028;2;Field  ;
                SourceExpr=SupplierOrderNo }

    { 1000000029;2;Field  ;
                SourceExpr=OrderOutType }

    { 1000000030;2;Field  ;
                SourceExpr=OrderType }

    { 1000000031;2;Field  ;
                SourceExpr=PurchaserReferenceEmploymentNo }

    { 1000000032;2;Field  ;
                SourceExpr="DateTime Received";
                Editable=FALSE }

    { 1000000034;2;Field  ;
                SourceExpr="Source Filename" }

    { 1100285500;2;Field  ;
                SourceExpr="Date Last Modified" }

    { 1100285501;2;Field  ;
                SourceExpr="Time Last Modified" }

  }
  CODE
  {
    VAR
      SymbrioMgmt@1000000000 : Codeunit 11127976;
      txtChooseFile@1100285500 : TextConst 'ENU=Choose file;NOR=Velg fil';
      txtFileTypes@1100285501 : TextConst 'ENU=XML-files | *.xml;NOR=XML-filer | *.xml;SVE=XML-filer | *.xml';

    BEGIN
    {
      MenuSuite/Partner/Purchase/Periodic/General

      131003 4PSSE ITERO.DJ Adjusted some menu actions to run with updated code in Symbrio Mgt.
      131003 4PSSE ITERO.LP Set menu action "Import from folder" to Visible=FALSE.
      140220 SYM982 Itero.DL, error handling
      140305 SYM994 added fields time last modified,date last modified
      140820 ITERO.DL SYM1000 import orders via XMLport not DotNet/DOM
                              corrections of pageActions
      170124 ITERO.DL made fields in prim.key not editable
    }
    END.
  }
}

