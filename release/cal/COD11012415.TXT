OBJECT Codeunit 11012415 Provisional Work Functions
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 11012403=d,
                TableData 11012783=d;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1100485000 : TextConst 'ENU=No lines selected.;NOR=Ingen rader er valgt.;SVE=Inga rader har valts.';
      Text002@1100485001 : TextConst 'ENU=No document template specified for %1 %2.;SVE=Ingen dokumentmall har angetts f”r %1 %2.';
      Text003@1100485002 : TextConst 'ENU=Number of create documents: %1;SVE=Antal dokument som har skapats: %1';
      Text005@1100485004 : TextConst 'ENU=No relations found for selected notes.';
      gCodNoteCode@1100485005 : Code[20];
      WordAutomationCU@1100485006 : Codeunit 11012400;
      Text006@1210190000 : TextConst 'ENU=Do you want to overwrite the present Word Documents?;SVE=Vill du skriva ”ver de befintliga Word-dokumenten?';
      Text007@1100528700 : TextConst 'ENU=Select %1 for the body of the mail.;SVE=V„lj %1 till br”dtext i e-brevet';
      Text008@1100525000 : TextConst 'ENU=Combine documents?';
      Text009@1100528701 : TextConst 'ENU=Show mail before send?';
      Text010@1100528702 : TextConst 'ENU="%1 Documents sent succesfully; %2 Documents failed."';

    PROCEDURE GenerateProvisionalWorkSpecs@1100485001(iCodTenderApplication@1100485000 : Code[20]);
    VAR
      lTenderSpecificationGrpRec@1100485004 : Record 11012772;
      lTenderSpecificationRec@1100485001 : Record 11012773;
      lProvisionalWorkSpecsRec@1100485002 : Record 11012775;
      lFrmTenderSpecification@1100485003 : Page 11020639;
      lIntNextLineNo@1100485005 : Integer;
    BEGIN
      lFrmTenderSpecification.LOOKUPMODE(TRUE);
      IF lFrmTenderSpecification.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;

      lFrmTenderSpecification.GETRECORD(lTenderSpecificationGrpRec);

      lProvisionalWorkSpecsRec.SETRANGE("Provisional Work No.", iCodTenderApplication);
      lProvisionalWorkSpecsRec.SETRANGE("Specification Type", lTenderSpecificationGrpRec.Type);
      IF lProvisionalWorkSpecsRec.FINDLAST THEN
        lIntNextLineNo := lProvisionalWorkSpecsRec."Line No.";

      lTenderSpecificationRec.SETRANGE("Tender-specification Group", lTenderSpecificationGrpRec.Code);
      IF lTenderSpecificationRec.FINDSET(FALSE, FALSE) THEN
        REPEAT
          lIntNextLineNo += 10000;
          lProvisionalWorkSpecsRec."Provisional Work No." := iCodTenderApplication;
          lProvisionalWorkSpecsRec."Specification Type" := lTenderSpecificationGrpRec.Type;
          lProvisionalWorkSpecsRec."Line No." := lIntNextLineNo;
          lProvisionalWorkSpecsRec.Level := lTenderSpecificationRec.Level;
          lProvisionalWorkSpecsRec.Description := lTenderSpecificationRec.Description;
          lProvisionalWorkSpecsRec."No." := lTenderSpecificationRec."No.";
          lProvisionalWorkSpecsRec.INSERT;
        UNTIL lTenderSpecificationRec.NEXT = 0;
    END;

    PROCEDURE CreateDocuments@1100485000(VAR vProvisionalWorkContactRec@1100485000 : Record 11012779);
    VAR
      lProvisionalWorkDocTypeRec@1100485002 : Record 11012770;
      lProvisionalWorkContactRec@1100485004 : Record 11012779;
      lRecDocumentTemplate@1100485005 : Record 11012401;
      lRecDocument@1100485008 : Record 11012746;
      lRecPreviousDocumentTemplate@1100485007 : Record 11012401;
      lProvisionalWorkDocumentRec@1100485009 : Record 11012783;
      ProvisionalWorkDocTypesPage@1100525000 : Page 11020635;
      CreateProvisionalWorkDoc@1210190002 : Codeunit 11012416;
      lCodPreviousContactNo@1100485006 : Code[20];
      lCodPreviousContactPersonNo@1100528700 : Code[20];
      NewDocumentNo@1210190005 : Code[20];
      lIntCount@1100485012 : Integer;
      lBlnCombineDocuments@1100485003 : Boolean;
      OverwriteExistingDocs@1210190000 : Boolean;
      ConFirmResponded@1210190001 : Boolean;
      CreateDocLinkOnly@1210190004 : Boolean;
    BEGIN
      lProvisionalWorkContactRec.COPY(vProvisionalWorkContactRec);
      IF lProvisionalWorkContactRec.COUNT = 0 THEN
        ERROR(Text001);

      ProvisionalWorkDocTypesPage.LOOKUPMODE(TRUE);
      IF ProvisionalWorkDocTypesPage.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;

      ProvisionalWorkDocTypesPage.GETRECORD(lProvisionalWorkDocTypeRec);
      lBlnCombineDocuments := CONFIRM(Text008, FALSE);

      IF lBlnCombineDocuments THEN
        lProvisionalWorkContactRec.SETCURRENTKEY("Provisional Work No.", "Contact No.", "Contact Person No.");

      //Call 28309 check
      IF lProvisionalWorkContactRec.FINDSET(FALSE, FALSE) THEN
        REPEAT
          IF lProvisionalWorkDocumentRec.GET(
            lProvisionalWorkContactRec."Provisional Work No.",
            lProvisionalWorkContactRec."Feature Group",
            lProvisionalWorkContactRec.Feature,
            lProvisionalWorkContactRec."Contact No.",
            lProvisionalWorkContactRec."Contact Person No.",
            lProvisionalWorkDocTypeRec.Code)
          THEN BEGIN
            IF lProvisionalWorkDocumentRec.GetDocumentNo <> '' THEN BEGIN
              lRecDocument.GET(lProvisionalWorkDocumentRec.GetDocumentNo);
              IF WordAutomationCU.FileExists(lRecDocument) THEN BEGIN
                OverwriteExistingDocs := CONFIRM(Text006,FALSE);
                ConFirmResponded := TRUE;
              END;
            END;
          END;
        UNTIL (lProvisionalWorkContactRec.NEXT = 0) OR ConFirmResponded;

      IF ConFirmResponded AND (NOT OverwriteExistingDocs) THEN
        EXIT;

      IF lProvisionalWorkContactRec.FINDSET THEN
        REPEAT
          IF lProvisionalWorkDocumentRec.GET(
            lProvisionalWorkContactRec."Provisional Work No.",
            lProvisionalWorkContactRec."Feature Group",
            lProvisionalWorkContactRec.Feature,
            lProvisionalWorkContactRec."Contact No.",
            lProvisionalWorkContactRec."Contact Person No.",
            lProvisionalWorkDocTypeRec.Code) THEN
            lProvisionalWorkDocumentRec.DELETE(TRUE);
        UNTIL lProvisionalWorkContactRec.NEXT = 0;

      COMMIT;

      //Call 28309
      IF lProvisionalWorkContactRec.FINDSET(FALSE, FALSE) THEN
        REPEAT
          GetDocumentCode(lProvisionalWorkContactRec, lProvisionalWorkDocTypeRec, lRecDocumentTemplate);

          CreateDocLinkOnly :=
            (lBlnCombineDocuments) AND
            (lProvisionalWorkContactRec."Contact No." = lCodPreviousContactNo) AND
            (lProvisionalWorkContactRec."Contact Person No." = lCodPreviousContactPersonNo) AND
            (lRecDocumentTemplate."Document Group" = lRecPreviousDocumentTemplate."Document Group") AND
            (lRecDocumentTemplate."Template Code" = lRecPreviousDocumentTemplate."Template Code");

          IF NOT CreateDocLinkOnly THEN
            NewDocumentNo := '';

          CLEARLASTERROR;
          CreateProvisionalWorkDoc.SetGlobalValues(
            lRecDocumentTemplate, lProvisionalWorkDocTypeRec,
            OverwriteExistingDocs, CreateDocLinkOnly, NewDocumentNo, gCodNoteCode);
          IF CreateProvisionalWorkDoc.RUN(lProvisionalWorkContactRec) THEN BEGIN
            IF NOT CreateDocLinkOnly THEN BEGIN
              lIntCount := lIntCount + 1;
              NewDocumentNo := CreateProvisionalWorkDoc.GetNewDocumentNo;
            END;
          END ELSE
            IF GETLASTERRORTEXT <> '' THEN
              MESSAGE(GETLASTERRORTEXT);

          lCodPreviousContactNo := lProvisionalWorkContactRec."Contact No.";
          lCodPreviousContactPersonNo := lProvisionalWorkContactRec."Contact Person No.";
          lRecPreviousDocumentTemplate := lRecDocumentTemplate;
        UNTIL lProvisionalWorkContactRec.NEXT = 0;

      vProvisionalWorkContactRec.CLEARMARKS();
      MESSAGE(Text003, lIntCount);
    END;

    PROCEDURE CreateNotes@1100485004(VAR vProvisionalWorkSPecRec@1100485000 : Record 11012775);
    VAR
      lProvisionalWorkContactRec@1100485009 : Record 11012779;
      lProvisionalWorkSpecRec@1100485013 : Record 11012775;
      lProvisionalWorkSpecDtlsRec@1100485014 : Record 11012776;
    BEGIN
      lProvisionalWorkSpecRec.COPY(vProvisionalWorkSPecRec);

      IF lProvisionalWorkSpecRec.COUNT = 0 THEN
        ERROR(Text001);

      lProvisionalWorkSpecRec.FINDFIRST();
      lProvisionalWorkSpecRec.SETRANGE("Specification Type", lProvisionalWorkSpecRec."Specification Type");
      gCodNoteCode := lProvisionalWorkSpecRec.Code;

      lProvisionalWorkSpecDtlsRec.SETRANGE("Provisional Work No.", lProvisionalWorkSpecRec."Provisional Work No.");
      lProvisionalWorkContactRec.SETRANGE("Provisional Work No.", lProvisionalWorkSpecRec."Provisional Work No.");

      IF lProvisionalWorkSpecRec.FINDSET(FALSE, FALSE) THEN
        REPEAT
          lProvisionalWorkSpecDtlsRec.SETRANGE(Type, lProvisionalWorkSpecRec."Specification Type");
          lProvisionalWorkSpecDtlsRec.SETRANGE("Line No.", lProvisionalWorkSpecRec."Line No.");
          IF lProvisionalWorkSpecDtlsRec.FINDFIRST THEN
            IF lProvisionalWorkSpecDtlsRec.Checked THEN BEGIN
              lProvisionalWorkContactRec.SETRANGE("Feature Group", lProvisionalWorkSpecDtlsRec."Feature Group");
              lProvisionalWorkContactRec.SETRANGE(Feature, lProvisionalWorkSpecDtlsRec.Feature);
              IF lProvisionalWorkContactRec.FINDSET(FALSE, FALSE) THEN
                REPEAT
                  lProvisionalWorkContactRec.MARK(TRUE);
                UNTIL lProvisionalWorkContactRec.NEXT = 0;
            END;
        UNTIL lProvisionalWorkSpecRec.NEXT = 0;

      lProvisionalWorkContactRec.SETRANGE("Provisional Work No.");
      lProvisionalWorkContactRec.SETRANGE("Feature Group");
      lProvisionalWorkContactRec.SETRANGE(Feature);
      lProvisionalWorkContactRec.MARKEDONLY(TRUE);
      IF lProvisionalWorkContactRec.COUNT = 0 THEN
        ERROR(Text005);
      CreateDocuments(lProvisionalWorkContactRec);

      vProvisionalWorkSPecRec.CLEARMARKS();
    END;

    PROCEDURE PrintDocuments@1100485003(VAR vProvisionalWorkContactRec@1100485000 : Record 11012779);
    VAR
      lProvisionalWorkContactRec@1100485002 : Record 11012779;
      lProvisionalWorkDocumentRec@1100485003 : Record 11012783;
      lProvisionalWorkDocTypeRec@1100485004 : Record 11012770;
      lRecDocument@1100485005 : Record 11012746;
      lFrmProvWorkDocTypes@1100485006 : Page 11020635;
      lCduWord@1100485001 : Codeunit 11012400;
      FileManagement@1100528400 : Codeunit 419;
      ClientFileName@1100525000 : Text;
    BEGIN
      lProvisionalWorkContactRec.COPY(vProvisionalWorkContactRec);

      IF lProvisionalWorkContactRec.COUNT = 0 THEN
        ERROR(Text001);

      lFrmProvWorkDocTypes.LOOKUPMODE(TRUE);

      IF lFrmProvWorkDocTypes.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;

      lFrmProvWorkDocTypes.GETRECORD(lProvisionalWorkDocTypeRec);

      lCduWord.InitialiseForPrinting;

      IF lProvisionalWorkContactRec.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF lProvisionalWorkDocumentRec.GET(
            lProvisionalWorkContactRec."Provisional Work No.",
            lProvisionalWorkContactRec."Feature Group",
            lProvisionalWorkContactRec.Feature,
            lProvisionalWorkContactRec."Contact No.",
            lProvisionalWorkContactRec."Contact Person No.",
            lProvisionalWorkDocTypeRec.Code)
          THEN BEGIN
            IF lRecDocument.GET(lProvisionalWorkDocumentRec.GetDocumentNo) THEN
              IF (lRecDocument.HasStorageURI) THEN BEGIN
                lRecDocument.WriteContentToClient(ClientFileName);
                lCduWord.Print(ClientFileName);
                FileManagement.DeleteClientFile(ClientFileName);
              END;
            IF lProvisionalWorkDocTypeRec."Print Status" <> lProvisionalWorkDocTypeRec."Print Status"::" " THEN
              lProvisionalWorkContactRec.Status := lProvisionalWorkDocTypeRec."Print Status";
            lProvisionalWorkContactRec.MODIFY;
          END;
        UNTIL lProvisionalWorkContactRec.NEXT = 0;

      lCduWord.TerminateAfterPrinting;
      vProvisionalWorkContactRec.CLEARMARKS();
    END;

    PROCEDURE MailDocuments@1100528701(VAR ProvisionalWorkContact@1100485000 : Record 11012779);
    VAR
      ProvisionalWork@1100528705 : Record 11012774;
      ProvisionalWorkContact2@1100485002 : Record 11012779;
      ProvisionalWorkDocument@1100485003 : Record 11012783;
      ProvisionalWorkDocType@1100485004 : Record 11012770;
      DocumentProperties@1100485005 : Record 11012746;
      DocumentProperties2@1100528709 : Record 11012746;
      ProvisionalWorkDocTypes@1100485006 : Page 11020635;
      DocumentTemplate@1100528702 : Record 11012401;
      DocumentTemplates@1100528703 : Page 11012401;
      Contact@1100528701 : Record 5050;
      DocumentMailing@1100528700 : Codeunit 11012278;
      DocumentLinkRIDs@1100528704 : ARRAY [5] OF RecordID;
      RecRef@1100528706 : RecordRef;
      DocumentManagement@1100528707 : Codeunit 11012406;
      Attachments@1100528710 : ARRAY [5] OF Code[20];
      ShowMailBeforeSend@1100528711 : Boolean;
      NoSucceeded@1100528712 : Integer;
      NoFailed@1100528713 : Integer;
    BEGIN
      ProvisionalWork.GET(ProvisionalWorkContact."Provisional Work No.");

      ProvisionalWorkContact2.COPY(ProvisionalWorkContact);

      IF ProvisionalWorkContact2.COUNT = 0 THEN
        ERROR(Text001);

      ProvisionalWorkDocTypes.LOOKUPMODE(TRUE);
      IF ProvisionalWorkDocTypes.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;
      ProvisionalWorkDocTypes.GETRECORD(ProvisionalWorkDocType);

      DocumentTemplate.SETRANGE(Type, DocumentTemplate.Type::Contact);
      DocumentTemplate.SETFILTER("Use for", '%1|%2',
        DocumentTemplate."Use for"::"E-Mail",
        DocumentTemplate."Use for"::"Document and E-Mail");
      DocumentTemplates.SETTABLEVIEW(DocumentTemplate);
      DocumentTemplates.LOOKUPMODE(TRUE);
      DocumentTemplates.CAPTION := STRSUBSTNO(Text007, DocumentTemplate.TABLECAPTION);
      IF DocumentTemplates.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;
      DocumentTemplates.GETRECORD(DocumentTemplate);

      ShowMailBeforeSend := CONFIRM(Text009, TRUE);
      IF ProvisionalWorkContact2.FINDSET(TRUE, FALSE) THEN BEGIN
        REPEAT
          IF ProvisionalWorkDocument.GET(
            ProvisionalWorkContact2."Provisional Work No.",
            ProvisionalWorkContact2."Feature Group",
            ProvisionalWorkContact2.Feature,
            ProvisionalWorkContact2."Contact No.",
            ProvisionalWorkContact2."Contact Person No.",
            ProvisionalWorkDocType.Code)
          THEN BEGIN
            IF DocumentProperties.GET(ProvisionalWorkDocument.GetDocumentNo) THEN BEGIN
              IF (DocumentProperties.HasStorageURI)
              THEN BEGIN
                Attachments[1] := DocumentProperties."No.";

                IF (ProvisionalWorkContact2."Contact Person No." <> '') THEN
                  Contact.GET(ProvisionalWorkContact2."Contact Person No.")
                ELSE
                  Contact.GET(ProvisionalWorkContact2."Contact No.");

                RecRef.GETTABLE(ProvisionalWorkContact2);
                DocumentLinkRIDs[1] := RecRef.RECORDID;
                RecRef.GETTABLE(ProvisionalWork);
                DocumentLinkRIDs[2] := RecRef.RECORDID;


              //C013837.so
              //DocumentManagement.GenerateDocFromTemplate(
              //  DocumentTemplate,
              //  DocumentLinkRIDs,
              //  '',
              //  ProvisionalWorkContact2."Contact No.",
              //  ProvisionalWorkContact2."Contact Person No.",
              //  '',
              //  FALSE);
              //C013837.eo
              //C013837.sn
                CLEAR(DocumentManagement);
                DocumentManagement.GenerateDocFromTemplate2(
                  DocumentTemplate,
                  DocumentLinkRIDs,
                  '',
                  '',
                  ProvisionalWorkContact2."Contact No.",
                  ProvisionalWorkContact2."Contact Person No.",
                  '',
                  FALSE,
                  FALSE,
                  FALSE);
              //C013837.en

                DocumentProperties2.GET(ProvisionalWorkContact2.GetStandardDocumentNo(DocumentTemplate."Template Code"));

                // Commit after generating the document because sending the mail may take some time
                // and you do not want tables remain locked
                COMMIT;

                IF DocumentMailing.MailDocumentWithAttachments2(
                  Contact."E-Mail", DocumentProperties2, FALSE, Attachments, ShowMailBeforeSend)
                THEN BEGIN
                  IF ProvisionalWorkDocType."Print Status" <> ProvisionalWorkDocType."Print Status"::" " THEN BEGIN
                    ProvisionalWorkContact2.Status := ProvisionalWorkDocType."Print Status";
                    ProvisionalWorkContact2.MODIFY;
                    COMMIT;
                  END;
                  NoSucceeded += 1;
                END ELSE BEGIN
                  DocumentProperties2.DELETE(TRUE); // Rollback
                  COMMIT;
                  NoFailed += 1;
                END;
              END;
            END;
          END;
        UNTIL ProvisionalWorkContact2.NEXT = 0;

        MESSAGE(Text010, NoSucceeded, NoFailed);
      END;
    END;

    LOCAL PROCEDURE GetDocumentCode@1100485002(iProvisionalWorkContactRec@1100485001 : Record 11012779;iProvisionalWorkDocTypeRec@1100485002 : Record 11012770;VAR vRecDocumentTemplate@1100485004 : Record 11012401);
    VAR
      lProvisionalWorkDocGroupRec@1100485000 : Record 11012778;
      lFeatureDocTemplateRec@1100485003 : Record 11012771;
    BEGIN
      IF lProvisionalWorkDocGroupRec.GET(
        iProvisionalWorkContactRec."Provisional Work No.",
        iProvisionalWorkContactRec."Feature Group",
        iProvisionalWorkContactRec.Feature,
        iProvisionalWorkDocTypeRec.Code)
      THEN
        vRecDocumentTemplate.GET(lProvisionalWorkDocGroupRec."Document Group", lProvisionalWorkDocGroupRec."Document Code")
      ELSE
        IF lFeatureDocTemplateRec.GET(
          iProvisionalWorkContactRec."Feature Group",
          iProvisionalWorkContactRec.Feature,
          iProvisionalWorkDocTypeRec.Code)
        THEN
          vRecDocumentTemplate.GET(lFeatureDocTemplateRec."Document Group", lFeatureDocTemplateRec."Document Code")
        ELSE
          ERROR(Text002, iProvisionalWorkDocTypeRec.Code, iProvisionalWorkContactRec.Feature);
    END;

    PROCEDURE SelectOrDeselectAll@1210190000(ProvisionalWorkNo@1210190002 : Code[20];SpecificationType@1210190000 : 'Plan,Design,Note';Select@1210190001 : Boolean);
    BEGIN
      SelectOrDeselectFeature(ProvisionalWorkNo, SpecificationType, -1, '', '', Select);
    END;

    PROCEDURE SelectOrDeselectFeature@1100528700(ProvisionalWorkNo@1210190002 : Code[20];SpecificationType@1210190000 : 'Plan,Design,Note';SpecificationLineNo@1100528700 : Integer;FeatureGroup@1100528701 : Text[50];Feature@1100528702 : Code[20];Select@1210190001 : Boolean);
    VAR
      ProvisionalWorkFeature@1210190003 : Record 11012777;
      ProvisionalWorkSpec@1210190005 : Record 11012775;
      ProvisionalWorkSpecDtls@1210190004 : Record 11012776;
    BEGIN
      ProvisionalWorkSpec.SETRANGE("Provisional Work No.", ProvisionalWorkNo);
      ProvisionalWorkSpec.SETRANGE("Specification Type", SpecificationType);
      IF SpecificationLineNo <> -1 THEN
        ProvisionalWorkSpec.SETRANGE("Line No.", SpecificationLineNo);
      IF ProvisionalWorkSpec.FINDSET THEN
        REPEAT
          ProvisionalWorkFeature.SETRANGE("Provisional Work No.", ProvisionalWorkSpec."Provisional Work No.");
          IF FeatureGroup <> '' THEN
            ProvisionalWorkFeature.SETRANGE("Feature Group", FeatureGroup);
          IF Feature <> '' THEN
            ProvisionalWorkFeature.SETRANGE(Feature, Feature);
          ProvisionalWorkFeature.SETRANGE(Selected, TRUE);
          IF ProvisionalWorkFeature.FINDSET THEN BEGIN
            REPEAT
              IF NOT ProvisionalWorkSpecDtls.GET(
                ProvisionalWorkSpec."Provisional Work No.",
                ProvisionalWorkSpec."Specification Type",
                ProvisionalWorkSpec."Line No.",
                ProvisionalWorkFeature."Feature Group",
                ProvisionalWorkFeature.Feature)
              THEN BEGIN
                IF (Select) THEN BEGIN
                  ProvisionalWorkSpecDtls.INIT;
                  ProvisionalWorkSpecDtls."Provisional Work No." := ProvisionalWorkSpec."Provisional Work No.";
                  ProvisionalWorkSpecDtls.Type := ProvisionalWorkSpec."Specification Type";
                  ProvisionalWorkSpecDtls."Line No." := ProvisionalWorkSpec."Line No.";
                  ProvisionalWorkSpecDtls."Feature Group" := ProvisionalWorkFeature."Feature Group";
                  ProvisionalWorkSpecDtls.Feature := ProvisionalWorkFeature.Feature;
                  ProvisionalWorkSpecDtls.Checked := Select;
                  ProvisionalWorkSpecDtls.INSERT;
                  COMMIT;
                END;
              END ELSE BEGIN
                IF (NOT Select) THEN BEGIN
                  ProvisionalWorkSpecDtls.DELETE;
                  COMMIT;
                END ELSE BEGIN
                  ProvisionalWorkSpecDtls.Checked := Select;
                  ProvisionalWorkSpecDtls.MODIFY;
                  COMMIT;
                END;
              END;
            UNTIL ProvisionalWorkFeature.NEXT = 0;
          END;
        UNTIL ProvisionalWorkSpec.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

