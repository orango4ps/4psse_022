OBJECT Page 11020670 Reference Periods Service
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Leistungszeiten Service;
               ENU=Reference Periods Service;
               NLD=Prestatietijden service;
               NOR=Referanserperioder, service;
               SVE=Referensperiodservice];
    SourceTable=Table11020272;
    DelayedInsert=Yes;
    PageType=List;
    OnOpenPage=BEGIN
                 IF DocumentNo <> '' THEN BEGIN
                   MarkLines(DocumentType,DocumentNo);
                   MARKEDONLY(TRUE);
                 END;
               END;

    OnAfterGetRecord=VAR
                       ReferencePeriod@1100528500 : Record 11020272;
                     BEGIN
                       GetNorm(Rec);
                       RefLimit := ReferencePeriod.CheckRefPeriod(1,Type,"Document No.",Code,0);
                       UpdateEditable;
                     END;

    OnNewRecord=BEGIN
                  IF DocumentNo <> '' THEN BEGIN
                    Type := DocumentType;
                    "Document No." := DocumentNo;
                    MARK(TRUE);
                  END;
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528502;1 ;Action    ;
                      CaptionML=[DEU=Zeige nur prim„re Leistungszeiten;
                                 ENU=Only show primary Reference Periods;
                                 NLD=Toon alleen primaire prestatietijden];
                      Promoted=Yes;
                      Image=LimitedCredit;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetShowOnlyPrimaryRefPeriods;
                               END;
                                }
      { 1100525002;1 ;Action    ;
                      CaptionML=[DEU=Kopieren;
                                 ENU=Copy;
                                 NLD=Kopi‰ren;
                                 NOR=KOPIER;
                                 SVE=Kopiera];
                      Promoted=Yes;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ProgressPhaseRec@1100525000 : Record 11020251;
                               BEGIN
                                 ProgressPhaseRec.CopyRefPeriod(Type, '', "Document No.");  //db, 25-02-11
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100528500;1 ;Action    ;
                      CaptionML=[DEU=L”sche unn”tige Leistungszeiten;
                                 ENU=Remove unnecessary Reference Periods;
                                 NLD=Verwijder overbodige prestatietijden];
                      Promoted=Yes;
                      Visible=FALSE;
                      Image=DeleteExpiredComponents;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 DeleteUnnecessaryReferencePeriods(Type,"Document No.",0);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                GroupType=Repeater }

    { 1100485001;2;Field  ;
                SourceExpr=Type;
                Editable=FALSE }

    { 1100485003;2;Field  ;
                SourceExpr=Code;
                OnLookup=VAR
                           ReferencePeriod@1100485002 : Record 11020272;
                         BEGIN
                           ReferencePeriod.SETRANGE(Type, Type::Common);
                           CASE Type OF
                             Type::ServCall:
                               ReferencePeriod.SETRANGE(Apply, ReferencePeriod.Apply::ServCall);
                             Type::ServOrder:
                               ReferencePeriod.SETRANGE(Apply, ReferencePeriod.Apply::ServOrder);
                             Type::WorkOrder:
                               ReferencePeriod.SETRANGE(Apply, ReferencePeriod.Apply::WorkOrder);
                           END;
                           IF PAGE.RUNMODAL(PAGE::"Reference Periods", ReferencePeriod) = ACTION::LookupOK THEN BEGIN
                             ReferencePeriod.TESTFIELD(Type, Type::Common);
                             VALIDATE(Code, ReferencePeriod.Code);
                           END;
                         END;
                          }

    { 1100485005;2;Field  ;
                SourceExpr=Description }

    { 1100485007;2;Field  ;
                BlankNumbers=BlankZero;
                SourceExpr="Reference Point Start";
                Visible=FALSE }

    { 1100485014;2;Field  ;
                SourceExpr="Description Ref. Point Start" }

    { 1100485012;2;Field  ;
                BlankNumbers=BlankZero;
                SourceExpr="Reference Point End";
                Visible=FALSE }

    { 1100485016;2;Field  ;
                SourceExpr="Description Ref. Point End" }

    { 1100528504;2;Field  ;
                SourceExpr="Second Reference Point End";
                Visible=FALSE }

    { 1100528503;2;Field  ;
                SourceExpr="Description Sec.Ref. Point End" }

    { 1100528501;2;Field  ;
                SourceExpr="Publish on Service Portal" }

    { 1100485018;2;Field  ;
                SourceExpr="Document No.";
                Editable=DocumentNoEditable }

    { 1100527900;2;Field  ;
                SourceExpr="Service Time Table Code" }

    { 1100525000;2;Field  ;
                SourceExpr="Type Hours" }

    { 1100485020;2;Field  ;
                SourceExpr=Norm }

    { 1100485022;2;Field  ;
                SourceExpr=Result }

    { 1100525001;2;Field  ;
                CaptionML=[DEU=Toleranz;
                           ENU=Margin;
                           NLD=Marge;
                           NOR=Marginal;
                           SVE=Marginal];
                DecimalPlaces=0:5;
                SourceExpr=Result - Norm }

    { 1100485024;2;Field  ;
                SourceExpr="Starting Date";
                OnValidate=BEGIN
                             StartingDateOnAfterValidate;
                           END;
                            }

    { 1100485028;2;Field  ;
                SourceExpr="Starting Time";
                OnValidate=BEGIN
                             StartingTimeOnAfterValidate;
                           END;
                            }

    { 1100485026;2;Field  ;
                SourceExpr="Ending Date";
                OnValidate=BEGIN
                             EndingDateOnAfterValidate;
                           END;
                            }

    { 1100485030;2;Field  ;
                SourceExpr="Ending Time";
                OnValidate=BEGIN
                             EndingTimeOnAfterValidate;
                           END;
                            }

    { 1100485034;2;Field  ;
                Name=RefLimit;
                CaptionML=[DEU=Deadline;
                           ENU=Limit Reference;
                           NLD=Deadline;
                           NOR=Referansegrense;
                           SVE=Referensgr„ns];
                SourceExpr=RefLimit;
                Editable=FALSE }

    { 1210190000;2;Field  ;
                SourceExpr=Source;
                Visible=FALSE }

  }
  CODE
  {
    VAR
      RefLimit@1100485000 : Text[250];
      DocumentType@1100528500 : Integer;
      DocumentNo@1100528600 : Code[20];
      DocumentNoEditable@1100525000 : Boolean INDATASET;

    LOCAL PROCEDURE UpdateNextDeadline@1100525000();
    VAR
      ServCallRec@1100525000 : Record 11012822;
      ServOrderRec@1100525001 : Record 11012823;
    BEGIN
      //db, 01-06-10: M19302
      IF Type = Type::ServCall THEN BEGIN
        ServCallRec.GET("Document No.");
        ServCallRec.UpdateNextDeadline;
        ServCallRec.MODIFY;
      END;
      IF Type = Type::ServOrder THEN BEGIN
        ServOrderRec.GET("Document No.");
        ServOrderRec.UpdateNextDeadline;
        ServOrderRec.MODIFY;
      END;
    END;

    PROCEDURE SetServiceCallNo@1100528603(ServiceCallNo@1100528600 : Code[20]);
    BEGIN
      DocumentType := Type::ServCall;
      DocumentNo := ServiceCallNo;
    END;

    PROCEDURE SetServiceOrderNo@1100528600(ServiceOrderNo@1100528600 : Code[20]);
    BEGIN
      DocumentType := Type::ServOrder;
      DocumentNo := ServiceOrderNo;
    END;

    PROCEDURE SetWorkOrderNo@1100528500(WorkOrderNo@1100528500 : Code[20]);
    BEGIN
      DocumentType := Type::WorkOrder;
      DocumentNo := WorkOrderNo;
    END;

    LOCAL PROCEDURE StartingDateOnAfterValidate@19020273();
    BEGIN
      CurrPage.UPDATE;
      UpdateNextDeadline;  //db, 01-06-10: M19302
    END;

    LOCAL PROCEDURE StartingTimeOnAfterValidate@19008557();
    BEGIN
      CurrPage.UPDATE;
      UpdateNextDeadline;  //db, 01-06-10: M19302
    END;

    LOCAL PROCEDURE EndingDateOnAfterValidate@19076447();
    BEGIN
      CurrPage.UPDATE;
      UpdateNextDeadline;  //db, 01-06-10: M19302
    END;

    LOCAL PROCEDURE EndingTimeOnAfterValidate@19075483();
    BEGIN
      CurrPage.UPDATE;
      UpdateNextDeadline;  //db, 01-06-10: M19302
    END;

    LOCAL PROCEDURE UpdateEditable@1100525001();
    BEGIN
      DocumentNoEditable := Type <> Type::Common;
    END;

    LOCAL PROCEDURE SetShowOnlyPrimaryRefPeriods@1100528515();
    BEGIN
      IF GETFILTER(Type) <> '' THEN
        SETRANGE(Type)
      ELSE
        CASE DocumentType OF
          Type::ServCall:
            SETRANGE(Type,Type::ServCall);
          Type::ServOrder:
            SETRANGE(Type,Type::ServOrder);
        END;

      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

