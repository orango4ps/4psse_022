OBJECT Table 12013683 EX Standard Purchase Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF510000;
  }
  PROPERTIES
  {
    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=[ENU=ExFlow Standard Purchase Line;
               SVE=ExFlow Standardink”psrad];
    PasteIsValid=No;
  }
  FIELDS
  {
    { 1   ;   ;EX Standard Purchase Code;Code10   ;TableRelation="EX Standard Purchase Code".Code;
                                                   CaptionML=[ENU=ExFlow Standard Purchase Code;
                                                              SVE=ExFlow Standard ink”pskod];
                                                   Editable=No }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              SVE=Radnr];
                                                   Editable=No }
    { 3   ;   ;Type                ;Option        ;OnValidate=VAR
                                                                OldType@1000 : Integer;
                                                                OldWeight@1100285000 : Integer;
                                                              BEGIN
                                                                OldType := Type;
                                                                OldWeight := Weight;
                                                                INIT;
                                                                Type := OldType;
                                                                Weight := OldWeight;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,,Fixed Asset,Charge (Item)";
                                                                    SVE=" ,Redov.konto,Artikel,,Anl.tillg†ng,Omkostnad (artikel)"];
                                                   OptionString=[ ,G/L Account,Item,,Fixed Asset,Charge (Item)] }
    { 4   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(3)) Resource
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Type=CONST("Charge (Item)")) "Item Charge";
                                                   OnValidate=VAR
                                                                GLAcc@1001 : Record 15;
                                                                Item@1002 : Record 27;
                                                                ItemCharge@1006 : Record 5800;
                                                                FA@1003 : Record 5600;
                                                                StdTxt@1004 : Record 7;
                                                              BEGIN
                                                                "Unit of Measure Code" := '';
                                                                Description := '';
                                                                IF "No." = '' THEN
                                                                  EXIT;
                                                                ExStdPurchCode.GET("EX Standard Purchase Code");
                                                                CASE Type OF
                                                                  Type::" ":
                                                                    BEGIN
                                                                      StdTxt.GET("No.");
                                                                      Description := StdTxt.Description;
                                                                    END;
                                                                  Type::"G/L Account":
                                                                    BEGIN
                                                                      GLAcc.GET("No.");
                                                                      GLAcc.CheckGLAcc;
                                                                      GLAcc.TESTFIELD("Direct Posting",TRUE);
                                                                      Description := GLAcc.Name;
                                                                    END;
                                                                  Type::Item:
                                                                    BEGIN
                                                                      Item.GET("No.");
                                                                      Item.TESTFIELD(Blocked,FALSE);
                                                                      Item.TESTFIELD("Inventory Posting Group");
                                                                      Item.TESTFIELD("Gen. Prod. Posting Group");
                                                                      "Unit of Measure Code" := Item."Purch. Unit of Measure";
                                                                      Description := Item.Description;
                                                                      "Variant Code" := '';
                                                                    END;
                                                                  Type::"3":
                                                                    ERROR(Text001);
                                                                  Type::"Fixed Asset":
                                                                    BEGIN
                                                                      FA.GET("No.");
                                                                      FA.TESTFIELD(Inactive,FALSE);
                                                                      FA.TESTFIELD(Blocked,FALSE);
                                                                      Description := FA.Description;
                                                                    END;
                                                                  Type::"Charge (Item)":
                                                                    BEGIN
                                                                      ItemCharge.GET("No.");
                                                                      Description := ItemCharge.Description;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              SVE=Nr] }
    { 5   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              SVE=Beskrivning] }
    { 6   ;   ;Weight              ;Decimal       ;OnValidate=BEGIN
                                                                IF Weight <> 0 THEN BEGIN
                                                                  TESTFIELD(Type);
                                                                  TESTFIELD("VAT Weight",0);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Weight;
                                                              SVE=Viktning];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 7   ;   ;VAT Weight          ;Decimal       ;OnValidate=BEGIN
                                                                IF "VAT Weight" <> 0 THEN BEGIN
                                                                  TESTFIELD(Type);
                                                                  TESTFIELD(Weight,0);

                                                                  ExStdPurchCode.GET("EX Standard Purchase Code");
                                                                  ExStdPurchCode.TESTFIELD("Propose VAT Line",FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=VAT Weight;
                                                              SVE=Moms Viktning];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 8   ;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Type);
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              SVE=Enhetskod] }
    { 9   ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              SVE=Genv„g dimension 1 kod];
                                                   CaptionClass='1,2,1' }
    { 10  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              SVE=Genv„g dimension 2 kod];
                                                   CaptionClass='1,2,2' }
    { 11  ;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   OnValidate=VAR
                                                                Item@1001 : Record 27;
                                                                ItemVariant@1000 : Record 5401;
                                                              BEGIN
                                                                IF "Variant Code" = '' THEN BEGIN
                                                                  IF Type = Type::Item THEN BEGIN
                                                                    Item.GET("No.");
                                                                    Description := Item.Description;
                                                                  END;
                                                                  EXIT;
                                                                END;

                                                                TESTFIELD(Type,Type::Item);
                                                                ItemVariant.GET("No.","Variant Code");
                                                                Description := ItemVariant.Description;
                                                              END;

                                                   CaptionML=[ENU=Variant Code;
                                                              SVE=Variantkod] }
    { 45  ;   ;Job No.             ;Code20        ;TableRelation=Table167;
                                                   CaptionML=[ENU=Job No.;
                                                              SVE=Projektnr] }
    { 90  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              SVE=Moms produktbokf”ringsmall] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              SVE=Dimensionsupps„ttnings-ID];
                                                   Editable=No }
    { 1001;   ;Job Task No.        ;Code20        ;TableRelation=Table1001.Field2 WHERE (Field1=FIELD(Job No.));
                                                   CaptionML=[ENU=Job Task No.;
                                                              SVE=Projektaktivitetsnr] }
    { 1700;   ;Deferral Code       ;Code10        ;TableRelation="Deferral Template"."Deferral Code";
                                                   OnValidate=VAR
                                                                DeferralPostDate@1000 : Date;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Deferral Code;
                                                              SVE=Periodiseringskod] }
    { 12013603;;First Approver     ;Code50        ;OnValidate=BEGIN
                                                                "First Approver" := ExFlow.FindUserGroup("First Approver",TempApproverName,FALSE);
                                                              END;

                                                   OnLookup=BEGIN
                                                              TempApprover := ExFlow.LookUpUserGroup("First Approver",TempApproverName);
                                                              IF TempApprover <> "First Approver" THEN
                                                                VALIDATE("First Approver", TempApprover);
                                                            END;

                                                   CaptionML=[ENU=First Approver;
                                                              SVE=F”rste attestant] }
  }
  KEYS
  {
    {    ;EX Standard Purchase Code,Line No.      ;SumIndexFields=Weight,VAT Weight;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ExStdPurchCode@1001 : Record 12013682;
      Text000@1003 : TextConst 'ENU=You cannot rename a %1.;SVE=Du kan inte byta namn p† %1.';
      Text001@1004 : TextConst 'ENU=You cannot purchase resources.;SVE=Du kan inte k”pa in resurser.';
      DimMgt@1100285900 : Codeunit 408;
      ExFlow@1100285000 : Codeunit 12013601;
      TempApproverName@1100285001 : Text[100];
      TempApprover@1100285002 : Code[100];

    PROCEDURE EmptyLine@5() : Boolean;
    BEGIN
      EXIT(("No." = '') AND (Weight = 0))
    END;

    PROCEDURE InsertLine@1() : Boolean;
    BEGIN
      EXIT((Type = Type::" ") OR (NOT EmptyLine));
    END;

    PROCEDURE GetCurrency@2() : Code[10];
    VAR
      StdPurchCode@1000 : Record 173;
    BEGIN
      IF StdPurchCode.GET("EX Standard Purchase Code") THEN
        EXIT(StdPurchCode."Currency Code")
      ELSE
        EXIT('');
    END;

    PROCEDURE ShowDimensions@3();
    BEGIN
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',"EX Standard Purchase Code","Line No."));
      DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE ValidateShortcutDimCode@1100285002(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE LookupShortcutDimCode@1100285001(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE ShowShortcutDimCode@1100285000(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    BEGIN
    END.
  }
}

