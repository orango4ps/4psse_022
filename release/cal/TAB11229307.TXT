OBJECT Table 11229307 Controller KPI Cue
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Controller KPI Cue;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              NOR=Prim‘rn›kkel;
                                                              SVE=Prim„rnyckel] }
    { 100 ;   ;Current Ratio       ;Decimal       ;CaptionML=ENU=Current Ratio }
    { 110 ;   ;Quick Ratio         ;Decimal       ;CaptionML=ENU=Quick Ratio }
    { 120 ;   ;Solvency Ratio      ;Decimal       ;CaptionML=ENU=Solvency Ratio }
    { 130 ;   ;Return Total Assets ;Decimal       ;CaptionML=ENU=Return Total Assets }
    { 140 ;   ;Profitability Debt  ;Decimal       ;CaptionML=ENU=Profitability Debt }
    { 150 ;   ;Return On Equity    ;Decimal       ;CaptionML=ENU=Return On Equity }
    { 160 ;   ;Accounts Receivable Turnover;Decimal;
                                                   CaptionML=ENU=Accounts Receivable Turnover }
    { 170 ;   ;Stock Turnover      ;Decimal       ;CaptionML=ENU=Stock Turnover }
    { 180 ;   ;Turnover Creditors  ;Decimal       ;CaptionML=ENU=Turnover Creditors }
    { 190 ;   ;Current Assets      ;Decimal       ;CaptionML=[ENU=Current Assets;
                                                              NOR=Oml›psmidler;
                                                              SVE=Oms„ttningstillg†ngar];
                                                   DecimalPlaces=0:0 }
    { 200 ;   ;Stock               ;Decimal       ;CaptionML=[ENU=Stock;
                                                              NOR=Beholdning;
                                                              SVE=Lager];
                                                   DecimalPlaces=0:0 }
    { 210 ;   ;Short Loan Capital  ;Decimal       ;CaptionML=ENU=Short Loan Capital;
                                                   DecimalPlaces=0:0 }
    { 220 ;   ;Loan Capital        ;Decimal       ;CaptionML=ENU=Loan Capital;
                                                   DecimalPlaces=0:0 }
    { 230 ;   ;Equity              ;Decimal       ;CaptionML=[ENU=Equity;
                                                              NOR="Egenkapital ";
                                                              SVE="Eget kapital "];
                                                   DecimalPlaces=0:0 }
    { 240 ;   ;Total Assets        ;Decimal       ;CaptionML=ENU=Total Assets;
                                                   DecimalPlaces=0:0 }
    { 250 ;   ;Gross Profit        ;Decimal       ;CaptionML=[ENU=Gross Profit;
                                                              NOR=Bruttofortjeneste;
                                                              SVE=Bruttovinst];
                                                   DecimalPlaces=0:0 }
    { 260 ;   ;Debtors             ;Decimal       ;CaptionML=ENU=Debtors;
                                                   DecimalPlaces=0:0 }
    { 270 ;   ;Creditors           ;Decimal       ;CaptionML=ENU=Creditors;
                                                   DecimalPlaces=0:0 }
    { 280 ;   ;Revenue             ;Decimal       ;CaptionML=[ENU=Revenue;
                                                              NOR=Inntekter;
                                                              SVE=Revenue];
                                                   DecimalPlaces=0:0 }
    { 290 ;   ;Cost Of Sales       ;Decimal       ;CaptionML=ENU=Cost Of Price;
                                                   DecimalPlaces=0:0 }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE CalculateFinanceCues@1100529100();
    BEGIN
       CalculateCurrentAssets;
       CalculateStock;
       CalculateShortLoanCapital;
       CalculateLoanCapital;
       CalculateEquity;
       CalculateTotalAssets;
       CalculateGrossProfit;
       CalculateDebtors;
       CalculateCreditors;
       CalculateRevenue;
       CalculateCostOfSales;
       CalculateCurrentRatio;
       CalculateQuickRatio;
       CalculateSolvencyRatio;
       CalculateReturnTotalAssets;
       CalculateProfitabilityDebt;
       CalculateReturnOnEquity;
       CalculateAccountsReceivableTurnover;
       CalculateStockTurnover;
       CalculateTurnoverCreditors;
    END;

    LOCAL PROCEDURE CalculateCurrentAssets@1100529101();
    VAR
      FinancialRatio@1100529100 : Record 11229308;
      GLAccount@1100529101 : Record 15;
    BEGIN
       "Current Assets" := 0;
       FinancialRatio.SETRANGE(Type, FinancialRatio.Type::"Current Assets");
       IF FinancialRatio.FINDSET THEN
        REPEAT
          GLAccount.SETRANGE("No.", FinancialRatio."G/L Account No.");
          IF GLAccount.FINDFIRST THEN BEGIN
            GLAccount.CALCFIELDS(Balance);
            "Current Assets" := "Current Assets" + GLAccount.Balance;
          END;
        UNTIL FinancialRatio.NEXT = 0;
    END;

    LOCAL PROCEDURE CalculateStock@1100529103();
    VAR
      FinancialRatio@1100529101 : Record 11229308;
      GLAccount@1100529100 : Record 15;
    BEGIN
       Stock := 0;
       FinancialRatio.SETRANGE(Type, FinancialRatio.Type::Stock);
       IF FinancialRatio.FINDSET THEN
        REPEAT
          GLAccount.SETRANGE("No.", FinancialRatio."G/L Account No.");
          IF GLAccount.FINDFIRST THEN BEGIN
            GLAccount.CALCFIELDS(Balance);
            Stock := Stock + GLAccount.Balance;
          END;
        UNTIL FinancialRatio.NEXT = 0;
    END;

    LOCAL PROCEDURE CalculateShortLoanCapital@1100529104();
    VAR
      FinancialRatio@1100529101 : Record 11229308;
      GLAccount@1100529100 : Record 15;
    BEGIN
       "Short Loan Capital" := 0;
       FinancialRatio.SETRANGE(Type, FinancialRatio.Type::"Short Loan Capital");
       IF FinancialRatio.FINDSET THEN
        REPEAT
          GLAccount.SETRANGE("No.", FinancialRatio."G/L Account No.");
          IF GLAccount.FINDFIRST THEN BEGIN
            GLAccount.CALCFIELDS(Balance);
            "Short Loan Capital" := "Short Loan Capital" + GLAccount.Balance;
          END;
        UNTIL FinancialRatio.NEXT = 0;
    END;

    LOCAL PROCEDURE CalculateLoanCapital@1100529105();
    VAR
      FinancialRatio@1100529101 : Record 11229308;
      GLAccount@1100529100 : Record 15;
    BEGIN
       "Loan Capital" := 0;
       FinancialRatio.SETRANGE(Type, FinancialRatio.Type::"Loan Capital");
       IF FinancialRatio.FINDSET THEN
        REPEAT
          GLAccount.SETRANGE("No.", FinancialRatio."G/L Account No.");
          IF GLAccount.FINDFIRST THEN BEGIN
            GLAccount.CALCFIELDS(Balance);
            "Loan Capital" := "Loan Capital" + GLAccount.Balance;
          END;
        UNTIL FinancialRatio.NEXT = 0;
    END;

    LOCAL PROCEDURE CalculateEquity@1100529106();
    VAR
      FinancialRatio@1100529101 : Record 11229308;
      GLAccount@1100529100 : Record 15;
    BEGIN
       Equity := 0;
       FinancialRatio.SETRANGE(Type, FinancialRatio.Type::Equity);
       IF FinancialRatio.FINDSET THEN
        REPEAT
          GLAccount.SETRANGE("No.", FinancialRatio."G/L Account No.");
          IF GLAccount.FINDFIRST THEN BEGIN
            GLAccount.CALCFIELDS(Balance);
            Equity := Equity + GLAccount.Balance;
          END;
        UNTIL FinancialRatio.NEXT = 0;
    END;

    LOCAL PROCEDURE CalculateTotalAssets@1100529107();
    VAR
      FinancialRatio@1100529101 : Record 11229308;
      GLAccount@1100529100 : Record 15;
    BEGIN
       "Total Assets" := 0;
       FinancialRatio.SETRANGE(Type, FinancialRatio.Type::"Total Assets");
       IF FinancialRatio.FINDSET THEN
        REPEAT
          GLAccount.SETRANGE("No.", FinancialRatio."G/L Account No.");
          IF GLAccount.FINDFIRST THEN BEGIN
            GLAccount.CALCFIELDS(Balance);
            "Total Assets" := "Total Assets" + GLAccount.Balance;
          END;
        UNTIL FinancialRatio.NEXT = 0;
    END;

    LOCAL PROCEDURE CalculateGrossProfit@1100529108();
    VAR
      FinancialRatio@1100529101 : Record 11229308;
      GLAccount@1100529100 : Record 15;
    BEGIN
       "Gross Profit" := 0;
       FinancialRatio.SETRANGE(Type, FinancialRatio.Type::"Gross Profit");
       IF FinancialRatio.FINDSET THEN
        REPEAT
          GLAccount.SETRANGE("No.", FinancialRatio."G/L Account No.");
          IF GLAccount.FINDFIRST THEN BEGIN
            GLAccount.CALCFIELDS(Balance);
            "Gross Profit" := "Gross Profit" + GLAccount.Balance;
          END;
        UNTIL FinancialRatio.NEXT = 0;
    END;

    LOCAL PROCEDURE CalculateDebtors@1100529102();
    VAR
      FinancialRatio@1100529101 : Record 11229308;
      GLAccount@1100529100 : Record 15;
    BEGIN
       Debtors := 0;
       FinancialRatio.SETRANGE(Type, FinancialRatio.Type::Debtors);
       IF FinancialRatio.FINDSET THEN
        REPEAT
          GLAccount.SETRANGE("No.", FinancialRatio."G/L Account No.");
          IF GLAccount.FINDFIRST THEN BEGIN
            GLAccount.CALCFIELDS(Balance);
            Debtors := Debtors + GLAccount.Balance;
          END;
        UNTIL FinancialRatio.NEXT = 0;
    END;

    LOCAL PROCEDURE CalculateCreditors@1100529109();
    VAR
      FinancialRatio@1100529101 : Record 11229308;
      GLAccount@1100529100 : Record 15;
    BEGIN
       Creditors := 0;
       FinancialRatio.SETRANGE(Type, FinancialRatio.Type::Creditors);
       IF FinancialRatio.FINDSET THEN
        REPEAT
          GLAccount.SETRANGE("No.", FinancialRatio."G/L Account No.");
          IF GLAccount.FINDFIRST THEN BEGIN
            GLAccount.CALCFIELDS(Balance);
            Creditors := Creditors + GLAccount.Balance;
          END;
        UNTIL FinancialRatio.NEXT = 0;
    END;

    LOCAL PROCEDURE CalculateRevenue@1100529110();
    VAR
      FinancialRatio@1100529101 : Record 11229308;
      GLAccount@1100529100 : Record 15;
    BEGIN
       Revenue := 0;
       FinancialRatio.SETRANGE(Type, FinancialRatio.Type::Revenue);
       IF FinancialRatio.FINDSET THEN
        REPEAT
          GLAccount.SETRANGE("No.", FinancialRatio."G/L Account No.");
          IF GLAccount.FINDFIRST THEN BEGIN
            GLAccount.CALCFIELDS(Balance);
            Revenue := Revenue + GLAccount.Balance;
          END;
        UNTIL FinancialRatio.NEXT = 0;
    END;

    LOCAL PROCEDURE CalculateCostOfSales@1100529112();
    VAR
      FinancialRatio@1100529101 : Record 11229308;
      GLAccount@1100529100 : Record 15;
    BEGIN
       "Cost Of Sales" := 0;
       FinancialRatio.SETRANGE(Type, FinancialRatio.Type::"Cost of Sales");
       IF FinancialRatio.FINDSET THEN
        REPEAT
          GLAccount.SETRANGE("No.", FinancialRatio."G/L Account No.");
          IF GLAccount.FINDFIRST THEN BEGIN
            GLAccount.CALCFIELDS(Balance);
            "Cost Of Sales" := "Cost Of Sales" + GLAccount.Balance;
          END;
        UNTIL FinancialRatio.NEXT = 0;
    END;

    LOCAL PROCEDURE CalculateCurrentRatio@1100529129();
    BEGIN
       IF "Short Loan Capital" = 0 THEN
         "Current Ratio" := 0
       ELSE
         "Current Ratio" := "Current Assets" / "Short Loan Capital";
    END;

    LOCAL PROCEDURE CalculateQuickRatio@1100529130();
    BEGIN
       IF "Short Loan Capital" = 0 THEN
         "Quick Ratio" := 0
       ELSE
         "Quick Ratio" := ("Current Assets"-Stock) / "Short Loan Capital";
    END;

    LOCAL PROCEDURE CalculateSolvencyRatio@1100529131();
    BEGIN
       IF "Total Assets" = 0 THEN
         "Solvency Ratio" := 0
       ELSE
         "Solvency Ratio" := Equity / "Total Assets";
    END;

    LOCAL PROCEDURE CalculateReturnTotalAssets@1100529132();
    BEGIN
       IF "Total Assets" = 0 THEN
         "Return Total Assets" := 0
       ELSE
         "Return Total Assets" := "Gross Profit" / "Total Assets";
    END;

    LOCAL PROCEDURE CalculateProfitabilityDebt@1100529133();
    BEGIN
       IF "Loan Capital" = 0 THEN
         "Profitability Debt" := 0
       ELSE
         "Profitability Debt" := "Gross Profit" / "Loan Capital"
    END;

    LOCAL PROCEDURE CalculateReturnOnEquity@1100529134();
    BEGIN
       IF Equity = 0 THEN
         "Return On Equity" := 0
       ELSE
         "Return On Equity" := "Gross Profit" / Equity;
    END;

    LOCAL PROCEDURE CalculateAccountsReceivableTurnover@1100529135();
    BEGIN
       IF Revenue = 0 THEN
         "Accounts Receivable Turnover" := 0
       ELSE
         "Accounts Receivable Turnover" := (Debtors * 365) / Revenue;
    END;

    LOCAL PROCEDURE CalculateStockTurnover@1100529136();
    BEGIN
       IF "Cost Of Sales" = 0 THEN
         "Stock Turnover" := 0
       ELSE
         "Stock Turnover" := (Stock * 365) / "Cost Of Sales";
    END;

    LOCAL PROCEDURE CalculateTurnoverCreditors@1100529137();
    BEGIN
       IF Revenue = 0 THEN
         "Turnover Creditors" := 0
       ELSE
         "Turnover Creditors" := (Creditors * 365) / Revenue;
    END;

    BEGIN
    END.
  }
}

