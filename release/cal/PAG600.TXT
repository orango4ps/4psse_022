OBJECT Page 600 IC Dimensions
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Intercompany Dimensions;
               NOR=Konserninterne dimensjoner;
               SVE=Koncerninterna dimensioner];
    ApplicationArea=#Dimensions;
    SourceTable=Table411;
    PageType=List;
    UsageCategory=Lists;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Dimensions,Import/Export;
                                NOR=Ny,Prosess,Rapport,Dimensjoner,Import/eksport;
                                SVE=Ny,Process,Rapport,Dimensioner,Importera/exportera];
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 15      ;1   ;ActionGroup;
                      CaptionML=[ENU=IC &Dimension;
                                 NOR=KI-&dimensjon;
                                 SVE=Konc.int. &dimension] }
      { 16      ;2   ;Action    ;
                      CaptionML=[ENU=IC Dimension &Values;
                                 NOR=KI-dimensjons&verdier;
                                 SVE=Konc.int. dimensions&v„rden];
                      ToolTipML=[ENU=View or edit how your company's dimension values correspond to the dimension values of your intercompany partners.;
                                 NOR=Vis eller rediger hvordan selskapets dimensjonsverdier tilsvarer dimensjonsverdiene for de konserninterne partnerne.;
                                 SVE=Visa eller redigera hur f”retagets dimensionsv„rden ska motsvara dina koncerninterna partners dimensionsv„rden.];
                      ApplicationArea=#Dimensions;
                      RunObject=Page 601;
                      RunPageLink=Dimension Code=FIELD(Code);
                      Promoted=Yes;
                      Image=ChangeDimensions;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 11      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 NOR=F&unksjoner;
                                 SVE=Fu&nktioner];
                      Image=Action }
      { 17      ;2   ;Action    ;
                      CaptionML=[ENU=Map to Dim. with Same Code;
                                 NOR=Samkj›r med dimensjon med samme kode;
                                 SVE=Koppla till dimension med samma kod];
                      ToolTipML=[ENU=Map the selected intercompany dimensions to dimensions with the same code.;
                                 NOR=Tilordne de valgte konserninterne dimensjonene til dimensjoner med samme kode.;
                                 SVE=Mappa de valda koncerninterna dimensionerna till dimensioner med samma kod.];
                      ApplicationArea=#Dimensions;
                      Promoted=Yes;
                      Image=MapDimensions;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ICDimension@1001 : Record 411;
                                 ICMapping@1000 : Codeunit 428;
                                 ConfirmManagement@1002 : Codeunit 27;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ICDimension);
                                 IF ICDimension.FIND('-') AND ConfirmManagement.ConfirmProcess(Text000,TRUE) THEN
                                   REPEAT
                                     ICMapping.MapIncomingICDimensions(ICDimension);
                                   UNTIL ICDimension.NEXT = 0;
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Name=CopyFromDimensions;
                      CaptionML=[ENU=Copy from Dimensions;
                                 NOR=Kopier fra dimensjoner;
                                 SVE=Kopiera fr†n dimensioner];
                      ToolTipML=[ENU=Creates intercompany dimensions for existing dimensions.;
                                 NOR=Oppretter konserninterne dimensjoner for eksisterende dimensjoner.;
                                 SVE=Skapar koncerninterna dimensioner f”r befintliga dimensioner.];
                      ApplicationArea=#Dimensions;
                      Promoted=Yes;
                      Image=CopyDimensions;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 CopyFromDimensions;
                               END;
                                }
      { 14      ;2   ;Separator  }
      { 18      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Import;
                                 NOR=Importer;
                                 SVE=Importera];
                      ToolTipML=[ENU=Import intercompany dimensions from a file.;
                                 NOR=Importer konserninterne dimensjoner fra en fil.;
                                 SVE=Importera koncerninterna dimensioner fr†n en fil.];
                      ApplicationArea=#Dimensions;
                      Promoted=Yes;
                      Image=Import;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 ImportFromXML;
                               END;
                                }
      { 19      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=E&xport;
                                 NOR=&Eksporter;
                                 SVE=E&xportera];
                      ToolTipML=[ENU=Export intercompany dimensions to a file.;
                                 NOR=Eksporter konserninterne dimensjoner til en fil.;
                                 SVE=Exportera koncerninterna dimensioner till en fil.];
                      ApplicationArea=#Dimensions;
                      Promoted=Yes;
                      Image=Export;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 ExportToXML;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the intercompany dimension code.;
                           NOR=Angir koden for den konserninterne dimensjonen.;
                           SVE=Anger den koncerninterna dimensionskoden.];
                ApplicationArea=#Dimensions;
                SourceExpr=Code }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the intercompany dimension name;
                           NOR=Angir navnet p† den konserninterne dimensjonen;
                           SVE=Anger det koncerninterna dimensionsnamnet];
                ApplicationArea=#Dimensions;
                SourceExpr=Name }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the related record is blocked from being posted in transactions, for example a customer that is declared insolvent or an item that is placed in quarantine.;
                           NOR=Angir at den relaterte posten er blokkert fra † bli bokf›rt i transaksjoner, for eksempel at en kunde blir erkl‘rt betalingsudyktig, eller at en vare blir plassert i karantene.;
                           SVE=Anger att den relaterade posten „r sp„rrad och inte kan bokf”ras i transaktioner, till exempel en kund som har f”rklarats konkursm„ssig eller en artikel som har placerats i karant„n.];
                ApplicationArea=#Dimensions;
                SourceExpr=Blocked }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the dimension in your company that this intercompany dimension corresponds to.;
                           NOR=Angir koden for dimensjonen i selskapet ditt som den konserninterne dimensjonen tilsvarer.;
                           SVE=Anger koden f”r dimensionen i ditt f”retag som den h„r koncerninterna dimensionen motsvarar.];
                ApplicationArea=#Dimensions;
                SourceExpr="Map-to Dimension Code" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                ApplicationArea=#RecordLinks;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                ApplicationArea=#Notes;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Are you sure you want to map the selected lines?;NOR=Er du sikker p† at du vil samkj›re de valgte linjene?;SVE=Vill du koppla de valda raderna?';
      Text001@1004 : TextConst 'ENU=Select file to import into %1;NOR=Velg filen som skal imp. i %1;SVE=V„lj fil f”r import av %1';
      Text002@1003 : TextConst 'ENU=ICDim.xml;NOR=ICDim.xml;SVE=ICDim.xml';
      Text004@1001 : TextConst 'ENU=Are you sure you want to copy from Dimensions?;NOR=Er du sikker p† at du vil kopiere fra dimensjoner?;SVE=Vill du kopiera fr†n dimensioner?';
      Text005@1002 : TextConst 'ENU=Enter the file name.;NOR=Angi filnavn.;SVE=Ange filnamnet.';
      Text006@1005 : TextConst 'ENU=XML Files (*.xml)|*.xml|All Files (*.*)|*.*;NOR=XML-filer (*.xml)|*.xml|Alle filer (*.*)|*.*;SVE=XML-filer (*.xml)|*.xml|Alla filer (*.*)|*.*';

    LOCAL PROCEDURE CopyFromDimensions@1();
    VAR
      Dim@1000 : Record 348;
      DimVal@1005 : Record 349;
      ICDim@1001 : Record 411;
      ICDimVal@1006 : Record 412;
      ConfirmManagement@1007 : Codeunit 27;
      ICDimValEmpty@1002 : Boolean;
      ICDimValExists@1003 : Boolean;
      PrevIndentation@1004 : Integer;
    BEGIN
      IF NOT ConfirmManagement.ConfirmProcess(Text004,TRUE) THEN
        EXIT;

      ICDimVal.LOCKTABLE;
      ICDim.LOCKTABLE;
      Dim.SETRANGE(Blocked,FALSE);
      IF Dim.FIND('-') THEN
        REPEAT
          IF NOT ICDim.GET(Dim.Code) THEN BEGIN
            ICDim.INIT;
            ICDim.Code := Dim.Code;
            ICDim.Name := Dim.Name;
            ICDim.INSERT;
          END;

          ICDimValExists := FALSE;
          DimVal.SETRANGE("Dimension Code",Dim.Code);
          ICDimVal.SETRANGE("Dimension Code",Dim.Code);
          ICDimValEmpty := NOT ICDimVal.FINDFIRST;
          IF DimVal.FIND('-') THEN
            REPEAT
              IF DimVal."Dimension Value Type" = DimVal."Dimension Value Type"::"End-Total" THEN
                PrevIndentation := PrevIndentation - 1;
              IF NOT ICDimValEmpty THEN
                ICDimValExists := ICDimVal.GET(DimVal."Dimension Code",DimVal.Code);
              IF NOT ICDimValExists AND NOT DimVal.Blocked THEN BEGIN
                ICDimVal.INIT;
                ICDimVal."Dimension Code" := DimVal."Dimension Code";
                ICDimVal.Code := DimVal.Code;
                ICDimVal.Name := DimVal.Name;
                ICDimVal."Dimension Value Type" := DimVal."Dimension Value Type";
                ICDimVal.Indentation := PrevIndentation;
                ICDimVal.INSERT;
              END;
              PrevIndentation := ICDimVal.Indentation;
              IF DimVal."Dimension Value Type" = DimVal."Dimension Value Type"::"Begin-Total" THEN
                PrevIndentation := PrevIndentation + 1;
            UNTIL DimVal.NEXT = 0;
        UNTIL Dim.NEXT = 0;
    END;

    LOCAL PROCEDURE ImportFromXML@2();
    VAR
      CompanyInfo@1006 : Record 79;
      ICDimIO@1002 : XMLport 11;
      IFile@1001 : File;
      IStr@1000 : InStream;
      FileName@1004 : Text[1024];
      StartFileName@1003 : Text[1024];
    BEGIN
      CompanyInfo.GET;

      StartFileName := CompanyInfo."IC Inbox Details";
      IF StartFileName <> '' THEN BEGIN
        IF StartFileName[STRLEN(StartFileName)] <> '\' THEN
          StartFileName := StartFileName + '\';
        StartFileName := StartFileName + '*.xml';
      END;

      IF NOT UPLOAD(STRSUBSTNO(Text001,TABLECAPTION),'',Text006,StartFileName,FileName) THEN
        ERROR(Text005);

      IFile.OPEN(FileName);
      IFile.CREATEINSTREAM(IStr);
      ICDimIO.SETSOURCE(IStr);
      ICDimIO.IMPORT;
    END;

    LOCAL PROCEDURE ExportToXML@3();
    VAR
      CompanyInfo@1006 : Record 79;
      FileMgt@1000 : Codeunit 419;
      ICDimIO@1005 : XMLport 11;
      OFile@1002 : File;
      OStr@1001 : OutStream;
      FileName@1004 : Text;
      DefaultFileName@1003 : Text;
    BEGIN
      CompanyInfo.GET;

      DefaultFileName := CompanyInfo."IC Inbox Details";
      IF DefaultFileName <> '' THEN
        IF DefaultFileName[STRLEN(DefaultFileName)] <> '\' THEN
          DefaultFileName := DefaultFileName + '\';
      DefaultFileName := DefaultFileName + Text002;

      FileName := FileMgt.ServerTempFileName('xml');
      IF FileName = '' THEN
        EXIT;

      OFile.CREATE(FileName);
      OFile.CREATEOUTSTREAM(OStr);
      ICDimIO.SETDESTINATION(OStr);
      ICDimIO.EXPORT;
      OFile.CLOSE;
      CLEAR(OStr);

      DOWNLOAD(FileName,'Export',TEMPORARYPATH,'',DefaultFileName);
    END;

    BEGIN
    END.
  }
}

