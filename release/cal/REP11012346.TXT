OBJECT Report 11012346 Create Delivery Group
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Erstellen Lieferungsgruppe;
               ENU=Create Delivery Group;
               NLD=Aanmaken afnamegroep;
               NOR=Opprette leveransegruppe;
               SVE=Skapa leveransgrupp];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   GetDefaultObjects;
                 END;

  }
  DATASET
  {
    { 7575;    ;DataItem;                    ;
               DataItemTable=Table11012333;
               DataItemTableView=SORTING(Vendor,Item Code);
               OnPreDataItem=BEGIN
                               IF gvTable <> DATABASE::"Import Trade Item" THEN CurrReport.BREAK;

                               status.OPEN(Text001);
                               NoOfLines := COUNT;
                             END;

               OnAfterGetRecord=BEGIN
                                  CheckDeliveryGroupFromImport;
                                END;

               OnPostDataItem=BEGIN
                                IF gvTable = DATABASE::"Import Trade Item" THEN
                                  status.CLOSE;
                              END;

               ReqFilterFields=Vendor,Alternative Vendor,Delivery Group Code }

    { 4881;    ;DataItem;                    ;
               DataItemTable=Table11012317;
               DataItemTableView=SORTING(Vendor,Item Code);
               OnPreDataItem=BEGIN
                               IF gvTable <> DATABASE::"Trade Item" THEN CurrReport.BREAK;

                               status.OPEN(Text001);
                               NoOfLines := COUNT;
                             END;

               OnAfterGetRecord=BEGIN
                                  CheckDeliveryGroupTradeItem;
                                END;

               OnPostDataItem=BEGIN
                                IF gvTable = DATABASE::"Trade Item" THEN
                                  status.CLOSE;
                              END;

               ReqFilterFields=Vendor,Delivery Group Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  Name=Update Cost Object;
                  CaptionML=[DEU=Aktualisieren Kostentr„ger;
                             ENU=Update Cost Object;
                             NLD=Bijwerken kostendrager;
                             NOR=Oppdater kostobjekt;
                             SVE=Uppdatera kostnadsobjekt];
                  SourceExpr=ActCostObject;
                  OnValidate=BEGIN
                               IF ActCostObject = FALSE THEN BEGIN
                                 CostObject := '';
                                 CostObjectName := '';
                               END;
                             END;
                              }

      { 1100525003;2;Field  ;
                  Name=Cost Object;
                  CaptionML=[DEU=Kostentr„ger (neu);
                             ENU=Cost Object (new);
                             NLD=Kostendrager (nieuw);
                             NOR=Kostobjekt (nytt);
                             SVE=Kostnadsobjekt (nytt)];
                  SourceExpr=CostObject;
                  Editable=ActCostObject;
                  OnValidate=BEGIN
                               CostObjectName := ValidateDimension(CostObject);
                             END;

                  OnLookup=BEGIN
                             IF NOT ActCostObject THEN EXIT;
                             LookupDimension(CostObject, CostObjectName);
                           END;
                            }

      { 1100525004;2;Field  ;
                  Name=Update Cost Obj. Rem. Cont.;
                  CaptionML=[DEU=Aktualisieren Kostentr„ger Entsorgungsabgabe;
                             ENU=Update Cost Object Removal Contribution;
                             NLD=Bijwerken kostendrager verwijderingsbijdrage;
                             NOR=Oppdater fjerningsbidrag for kostobjekt;
                             SVE=Uppdatera borttagningsbidrag f”r kostnadsobjekt];
                  SourceExpr=ActCostObjectRC;
                  OnValidate=BEGIN
                               IF ActCostObjectRC = FALSE THEN BEGIN
                                 CostObjectRC := '';
                                 CostObjectRCName := '';
                               END;
                             END;
                              }

      { 1100525005;2;Field  ;
                  Name=Cost Object (new);
                  CaptionML=[DEU=Kostentr„ger (neu);
                             ENU=Cost Object (new);
                             NLD=Kostendrager (nieuw);
                             NOR=Kostobjekt (nytt);
                             SVE=Kostnadsobjekt (nytt)];
                  SourceExpr=CostObjectRC;
                  Editable=ActCostObjectRC;
                  OnValidate=BEGIN
                               CostObjectRCName := ValidateDimension(CostObjectRC);
                             END;

                  OnLookup=BEGIN
                             IF NOT ActCostObjectRC THEN EXIT;
                             LookupDimension(CostObjectRC, CostObjectRCName);
                           END;
                            }

      { 1100525006;2;Field  ;
                  Name=Create Delivery Group based on;
                  CaptionML=[DEU=Erstellen Lieferungsgruppe aufgrund;
                             ENU=Create Delivery Group based on;
                             NLD=Aanmaken afnamegroep op basis van;
                             NOR=Opprette leveransegruppe basert p†;
                             SVE=Skapa leveransgrupp baserat p†];
                  OptionCaptionML=[DEU=Kreditor,Allgemein;
                                   ENU=Vendor,Common;
                                   NLD=Leverancier,Algemeen;
                                   NOR=Leverand›r,Vanlig;
                                   SVE=Leverant”r,Vanlig];
                  SourceExpr=CreateDeliveryGroup }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CreateDeliveryGroup@1100528900 : 'Vendor,Common';
      ActCostObject@1100528904 : Boolean INDATASET;
      ActCostObjectRC@1100528903 : Boolean INDATASET;
      CostObject@1100528902 : Code[20];
      CostObjectName@1100528901 : Text[50];
      CostObjectRC@1100528908 : Code[20];
      CostObjectRCName@1100528907 : Text[50];
      gvTable@1100528905 : Integer;
      Text001@1100528906 : TextConst 'DEU=Aktualisieren Lieferungsgruppe @1@@@@@@@@@@@@@@@@@@;ENU=Update Delivery Group @1@@@@@@@@@@@@@@@@@@;NLD=Bijwerken afnamegroep @1@@@@@@@@@@@@@@@@@@;NOR=Oppdater leveransegruppe @1@@@@@@@@@@@@@@@@@@;SVE=Uppdatera leveransgrupp @1@@@@@@@@@@@@@@@@@@';
      status@1100528910 : Dialog;
      NoOfLines@1100528909 : Integer;

    PROCEDURE CheckDeliveryGroupFromImport@1100528900();
    VAR
      DeliveryGroupRec@1100528901 : Record 11012320;
      VendorCode@1100528902 : Code[20];
    BEGIN
      WITH "Import Trade Item" DO BEGIN
        IF DeliveryGroupRec.GET('', "Delivery Group Code") THEN EXIT;

        IF CreateDeliveryGroup = CreateDeliveryGroup::Common THEN BEGIN
          VendorCode := '';
        END ELSE BEGIN
          IF "Alternative Vendor" <> '' THEN
            VendorCode := "Alternative Vendor"
          ELSE
            VendorCode := Vendor;
        END;
        IF NOT DeliveryGroupRec.GET(VendorCode, "Delivery Group Code") THEN BEGIN
          DeliveryGroupRec.Vendor := VendorCode;
          DeliveryGroupRec.Code := "Delivery Group Code";
          DeliveryGroupRec.Description := "Delivery Group Code";
          DeliveryGroupRec.INSERT;
          IF ActCostObject THEN
            DeliveryGroupRec."Cost Object" := CostObject;
          IF ActCostObjectRC THEN
            DeliveryGroupRec."Cost Object (Removal)" := CostObjectRC;
          DeliveryGroupRec.MODIFY;
        END;
      END;
    END;

    PROCEDURE CheckDeliveryGroupTradeItem@1100528903();
    VAR
      DeliveryGroupRec@1100525001 : Record 11012320;
      VendorCode@1100525000 : Code[20];
    BEGIN
      WITH "Trade Item" DO BEGIN
        IF DeliveryGroupRec.GET('', "Delivery Group Code") THEN EXIT;

        IF CreateDeliveryGroup = CreateDeliveryGroup::Common THEN BEGIN
          VendorCode := '';
        END ELSE BEGIN
          VendorCode := Vendor;
        END;
        IF NOT DeliveryGroupRec.GET(VendorCode, "Delivery Group Code") THEN BEGIN
          DeliveryGroupRec.Vendor := VendorCode;
          DeliveryGroupRec.Code := "Delivery Group Code";
          DeliveryGroupRec.Description := "Delivery Group Code";
          DeliveryGroupRec.INSERT;
          IF ActCostObject THEN
            DeliveryGroupRec."Cost Object" := CostObject;
          IF ActCostObjectRC THEN
            DeliveryGroupRec."Cost Object (Removal)" := CostObjectRC;
          DeliveryGroupRec.MODIFY;
        END;
      END;
    END;

    PROCEDURE ValidateDimension@1100485000(lvCostObject@1100485000 : Code[20]) : Text[50];
    VAR
      DimValRec@1100528901 : Record 349;
      DimMgt@1100528900 : Codeunit 408;
    BEGIN
      DimMgt.GetDimValueRec(2, lvCostObject, DimValRec, TRUE,'');
      EXIT(DimValRec.Name);
    END;

    PROCEDURE LookupDimension@1100485001(VAR lvCostObject@1100485000 : Code[20];VAR lvCostObjectName@1100485001 : Text[50]);
    VAR
      DimValRec@1100528900 : Record 349;
    BEGIN
      DimValRec.SETRANGE("Global Dimension No.", 2);
      DimValRec.SETRANGE("Cost Type", DimValRec."Cost Type"::Material);
      IF PAGE.RUNMODAL(PAGE::"Cost Object List", DimValRec) = ACTION::LookupOK THEN BEGIN
        lvCostObject := DimValRec.Code;
        lvCostObjectName := DimValRec.Name;
      END;
    END;

    PROCEDURE GetDefaultObjects@1100525001();
    VAR
      InvtSetup@1100528900 : Record 313;
    BEGIN
      InvtSetup.GET;
      CostObject := InvtSetup."Cost Object";
      IF CostObject <> '' THEN
        CostObjectName := ValidateDimension(CostObject);
      CostObjectRC := InvtSetup."Cost Object (Removal)";
      IF CostObjectRC <> '' THEN
        CostObjectRCName := ValidateDimension(CostObjectRC);
    END;

    PROCEDURE SetSelection@1210190000(lvTable@1210190000 : Integer);
    BEGIN
      gvTable := lvTable;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

