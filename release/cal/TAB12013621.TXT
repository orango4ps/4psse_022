OBJECT Table 12013621 Requisition Rule
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF510000;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Requisition Rule;
               SVE=Rekvisitionsregel];
    LookupPageID=Page12057093;
    DrillDownPageID=Page12057093;
  }
  FIELDS
  {
    { 2   ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 10  ;   ;Name                ;Text30        ;CaptionML=[ENU=Name;
                                                              SVE=Namn] }
    { 11  ;   ;Dimension 1         ;Boolean       ;CaptionML=[ENU=Dimension 1;
                                                              SVE=Dimension 1] }
    { 12  ;   ;Dimension Code 1    ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                Disabled := FALSE;

                                                                "Dimension 1" := "Dimension Code 1" <> '';
                                                              END;

                                                   CaptionML=[ENU=Dimension Code 1;
                                                              SVE=Dimensionskod 1] }
    { 13  ;   ;Dimension Value 1 Filter;Code250   ;OnValidate=BEGIN
                                                                IF ("Dimension Code 1" = '') AND ("Dimension Value 1 Filter" <> '') THEN
                                                                  ERROR(EXF01);
                                                              END;

                                                   CaptionML=[ENU=Dimension Value 1 Filter;
                                                              SVE=Filter f”r dimensionsv„rde 1] }
    { 21  ;   ;Dimension 2         ;Boolean       ;CaptionML=[ENU=Dimension 2;
                                                              SVE=Dimension 2] }
    { 22  ;   ;Dimension Code 2    ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                Disabled := FALSE;

                                                                "Dimension 2" := "Dimension Code 2" <> '';
                                                              END;

                                                   CaptionML=[ENU=Dimension Code 2;
                                                              SVE=Dimensionskod 2] }
    { 23  ;   ;Dimension Value 2 Filter;Code250   ;CaptionML=[ENU=Dimension Value 2 Filter;
                                                              SVE=Filter f”r dimensionsv„rde 2] }
    { 31  ;   ;Created by          ;Boolean       ;CaptionML=[ENU=Created by;
                                                              SVE=Skapad av] }
    { 32  ;   ;Created by Filter   ;Code250       ;OnValidate=BEGIN
                                                                Disabled := FALSE;

                                                                "Created by" := "Created by Filter" <> '';
                                                              END;

                                                   CaptionML=[ENU=Created by Filter;
                                                              SVE=Filter f”r Skapad av] }
    { 41  ;   ;Vendor              ;Boolean       ;CaptionML=[ENU=Vendor;
                                                              SVE=Leverant”r] }
    { 42  ;   ;Vendor Filter       ;Code250       ;OnValidate=BEGIN
                                                                Disabled := FALSE;

                                                                Vendor := "Vendor Filter" <> '';
                                                              END;

                                                   CaptionML=[ENU=Vendor Filter;
                                                              SVE=Leverant”rsfilter] }
    { 60  ;   ;Purchaser Tag       ;Boolean       ;CaptionML=[ENU=Purchaser;
                                                              SVE=Ink”pare] }
    { 61  ;   ;Purchaser Filter    ;Code250       ;OnValidate=BEGIN
                                                                Disabled := FALSE;

                                                                "Purchaser Tag" := "Purchaser Filter" <> '';
                                                              END;

                                                   CaptionML=[ENU=Purchaser Filter;
                                                              SVE=Ink”parfilter] }
    { 80  ;   ;Vendor Posting Group Tag;Boolean   ;CaptionML=[ENU=Vendor Posting Group;
                                                              SVE=Leverant”rsbokf”ringsmall] }
    { 81  ;   ;Vendor Posting Group Filter;Code250;OnValidate=BEGIN
                                                                Disabled := FALSE;

                                                                "Vendor Posting Group Tag" := "Vendor Posting Group Filter" <> '';
                                                              END;

                                                   CaptionML=[ENU=Vendor Posting Group Filter;
                                                              SVE=Leverant”rsbokf”ringsmallfilter] }
    { 90  ;   ;Max Amount          ;Boolean       ;CaptionML=[ENU=Max Amount;
                                                              SVE=Max Belopp] }
    { 91  ;   ;Max Amount Value    ;Decimal       ;CaptionML=[ENU=Max Amount Value;
                                                              SVE=Max Beloppsv„rde] }
    { 100 ;   ;Disabled            ;Boolean       ;CaptionML=[ENU=Disabled;
                                                              SVE=Inaktiverad] }
    { 500 ;   ;Assigned Purchasing Group;Code50   ;TableRelation="EX User Group".Code WHERE (Blocked=CONST(No));
                                                   OnValidate=VAR
                                                                ExFlow@1100285001 : Codeunit 12013601;
                                                                TempGroupName@1100285000 : Text[100];
                                                              BEGIN
                                                                "Assigned Purchasing Group" := ExFlow.FindUserGroup("Assigned Purchasing Group",TempGroupName,FALSE);
                                                              END;

                                                   CaptionML=[ENU=Assigned Purchasing Group;
                                                              SVE=Tilldelad ink”pargrupp] }
    { 510 ;   ;Assigned Receipt Group;Code50      ;TableRelation="EX User Group".Code WHERE (Blocked=CONST(No));
                                                   OnValidate=VAR
                                                                ExFlow@1100285001 : Codeunit 12013601;
                                                                TempGroupName@1100285000 : Text[100];
                                                              BEGIN
                                                                "Assigned Receipt Group" := ExFlow.FindUserGroup("Assigned Receipt Group",TempGroupName,FALSE);
                                                              END;

                                                   CaptionML=[ENU=Assigned Receipt Group;
                                                              SVE=Tilldelad inleveransgrupp] }
    { 515 ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=[ENU=Open,Released;
                                                                    SVE=™ppen,Sl„ppt];
                                                   OptionString=Open,Released }
    { 520 ;   ;Set Created by as First Approv;Boolean;
                                                   CaptionML=[ENU=Set Created by as First Approver;
                                                              SVE=S„tt Skapad av som f”rste attestant] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EXF01@1100285001 : TextConst 'ENU=Dimension code missing!;SVE=Dimensionskod saknas!';

    PROCEDURE FindTemplate@1100285000(PurchHeader@1100285002 : Record 38;VAR RequisitionRule@1100285000 : Record 12013621;CreatedBy@1100285008 : Code[50];NetAmount@1100285003 : Decimal;VAR TempDimValue@1100285005 : TEMPORARY Record 349) : Boolean;
    VAR
      Hit@1100285001 : Integer;
      FilterHit@1100285004 : Integer;
      TempExPriority@1100285011 : TEMPORARY Record 12013647;
    BEGIN
      TempExPriority.RESET;
      TempExPriority.DELETEALL;

      RequisitionRule.RESET;

      RequisitionRule.SETRANGE(Disabled, FALSE);

      IF RequisitionRule.FINDSET THEN
        REPEAT
          Hit := 0;
          FilterHit := 0;

          IF NOT RequisitionRule."Dimension 1" THEN
            Hit := Hit + 1
          ELSE
            IF DimMatch(TRUE, RequisitionRule, TempDimValue) THEN
              BEGIN
                Hit := Hit + 1;
                FilterHit := FilterHit + 1;
              END;

          IF NOT RequisitionRule."Dimension 2" THEN
            Hit := Hit + 1
          ELSE
            IF DimMatch(FALSE, RequisitionRule, TempDimValue) THEN
              BEGIN
                Hit := Hit + 1;
                FilterHit := FilterHit + 1;
              END;

          IF NOT RequisitionRule."Created by" THEN
            Hit := Hit + 1
          ELSE
            IF FirstMatch(CreatedBy, RequisitionRule) THEN
              BEGIN
                Hit := Hit + 1;
                FilterHit := FilterHit + 1;
              END;

          IF NOT RequisitionRule.Vendor THEN
            Hit := Hit + 1
          ELSE
            IF VendorMatch(PurchHeader."Buy-from Vendor No.", RequisitionRule) THEN
              BEGIN
                Hit := Hit + 1;
                FilterHit := FilterHit + 1;
              END;

          IF NOT RequisitionRule."Purchaser Tag" THEN
            Hit := Hit + 1
          ELSE
            BEGIN
              IF PurchaserMatch(PurchHeader."Purchaser Code", RequisitionRule) THEN
                BEGIN
                  Hit := Hit + 1;
                  FilterHit := FilterHit + 1;
                END;
            END;

          IF NOT RequisitionRule."Vendor Posting Group Tag" THEN
            Hit := Hit + 1
          ELSE
            BEGIN
              IF VendorPostGroupMatch(PurchHeader."Pay-to Vendor No.", RequisitionRule) THEN
                BEGIN
                  Hit := Hit + 1;
                  FilterHit := FilterHit + 1;
                END;
            END;

          IF NOT RequisitionRule."Max Amount" THEN
            Hit := Hit + 1
          ELSE
            BEGIN
              IF AmountMatch(NetAmount, RequisitionRule) THEN
                BEGIN
                  Hit := Hit + 1;
                  FilterHit := FilterHit + 1;
                END;
            END;

          IF Hit = 7 THEN
            BEGIN
              TempExPriority.INIT;
              TempExPriority."Template Code" := RequisitionRule.Code;
              TempExPriority.Hits := FilterHit;
              TempExPriority.INSERT;
            END;
        UNTIL RequisitionRule.NEXT = 0;

      TempExPriority.RESET;
      TempExPriority.SETCURRENTKEY(Hits);
      TempExPriority.ASCENDING(FALSE);
      IF TempExPriority.FIND('-') THEN
        BEGIN
          RequisitionRule.GET( TempExPriority."Template Code");
          EXIT(TRUE)
        END
      ELSE
        BEGIN
          CLEAR(RequisitionRule);
          EXIT(FALSE)
        END;
    END;

    PROCEDURE DimMatch@1100285002(First@1100285005 : Boolean;RequisitionRule@1100285003 : Record 12013621;VAR TempDimValue@1100285000 : TEMPORARY Record 349) : Boolean;
    VAR
      DimValue@1100285004 : Record 349;
      TargetValue@1100285007 : Code[20];
    BEGIN
      TargetValue := '';
      TempDimValue.RESET;

      IF First THEN BEGIN
        TempDimValue.SETRANGE("Dimension Code", RequisitionRule."Dimension Code 1");
        IF TempDimValue.FINDFIRST THEN
          TargetValue := TempDimValue.Code;
      END
      ELSE BEGIN
        TempDimValue.SETRANGE("Dimension Code", RequisitionRule."Dimension Code 2");
        IF TempDimValue.FINDFIRST THEN
          TargetValue := TempDimValue.Code;
      END;

      IF TargetValue = '' THEN
        EXIT(FALSE);

      DimValue.RESET;

      IF First THEN
        BEGIN
          DimValue.SETRANGE("Dimension Code", RequisitionRule."Dimension Code 1");
          DimValue.SETFILTER(Code, RequisitionRule."Dimension Value 1 Filter");
        END
      ELSE
        BEGIN
          DimValue.SETRANGE("Dimension Code", RequisitionRule."Dimension Code 2");
          DimValue.SETFILTER(Code, RequisitionRule."Dimension Value 2 Filter");
        END;

      DimValue."Dimension Code" := TempDimValue."Dimension Code";
      DimValue.Code := TargetValue;

      IF DimValue.FIND('=') THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE FirstMatch@1100285005(LineApprover@1100285000 : Code[50];RequisitionRule@1100285001 : Record 12013621) : Boolean;
    VAR
      UserGroup@1100285003 : Record 12013606;
    BEGIN
      UserGroup.RESET;
      UserGroup.SETFILTER(Code,RequisitionRule."Created by Filter");

      UserGroup.Code := LineApprover;

      IF UserGroup.FIND('=') THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE VendorMatch@1100285006(LineVendor@1100285001 : Code[20];RequisitionRule@1100285000 : Record 12013621) : Boolean;
    VAR
      Vend@1100285002 : Record 23;
    BEGIN
      Vend.RESET;
      Vend.SETFILTER("No.", RequisitionRule."Vendor Filter");
      Vend."No." := LineVendor;

      IF Vend.FIND('=') THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE CopyRule@1100285001(FromRule@1100285001 : Record 12013621);
    VAR
      TempRequisitionRule@1100285000 : TEMPORARY Record 12013621;
    BEGIN
      TempRequisitionRule := Rec;
      INIT;
      TRANSFERFIELDS(FromRule,FALSE);

      IF TempRequisitionRule.Name <> '' THEN
        Name := TempRequisitionRule.Name;
      MODIFY;
      GET(TempRequisitionRule.Code);
    END;

    PROCEDURE PurchaserMatch@1100285008(LinePurchaser@1100285001 : Code[10];RequisitionRule@1100285000 : Record 12013621) : Boolean;
    VAR
      PurchaserTab@1100285002 : Record 13;
    BEGIN
      PurchaserTab.RESET;
      PurchaserTab.SETFILTER(Code, RequisitionRule."Purchaser Filter");
      PurchaserTab.Code := LinePurchaser;

      IF PurchaserTab.FIND('=') THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE VendorPostGroupMatch@1100285011(PayToVendorNo@1100285001 : Code[20];RequisitionRule@1100285000 : Record 12013621) : Boolean;
    VAR
      Vendor@1100285002 : Record 23;
    BEGIN
      Vendor.RESET;
      Vendor.SETFILTER("Vendor Posting Group", RequisitionRule."Vendor Posting Group Filter");
      Vendor."No." := PayToVendorNo;
      IF Vendor.FIND('=') THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE AmountMatch@1100285003(NetAmount@1100285002 : Decimal;RequisitionRule@1100285000 : Record 12013621) : Boolean;
    BEGIN
      IF RequisitionRule."Max Amount Value" >= NetAmount THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE LookUpExFlow@1100285004(VAR FilterText@1100285021 : Text[1024];"Column Source"@1100285014 : Code[20]) : Boolean;
    VAR
      Dim1List@1100285001 : Page 560;
      DimValue@1100285010 : Record 349;
      FirstList@1100285015 : Page 12013618;
      First@1100285016 : Record 12013606;
      VendorList@1100285017 : Page 27;
      Vend@1100285018 : Record 23;
      PurchaserList@1100285020 : Page 14;
      Purchaser@1100285019 : Record 13;
      VendorPostingGroupList@1100285024 : Page 111;
      VendorPostingGroup@1100285023 : Record 93;
    BEGIN
      CASE "Column Source" OF
        'DIM1':
          BEGIN
            CLEAR(Dim1List);
            Dim1List.LOOKUPMODE(TRUE);
            DimValue.RESET;
            DimValue.SETRANGE("Dimension Code", "Dimension Code 1");
            Dim1List.SETTABLEVIEW(DimValue);
            IF Dim1List.RUNMODAL = ACTION::LookupOK THEN
              BEGIN
                Dim1List.GETRECORD(DimValue);
                FilterText := FilterText + DimValue.Code;
                EXIT(TRUE);
              END;
        END;

        'DIM2':
          BEGIN
            CLEAR(Dim1List);
            Dim1List.LOOKUPMODE(TRUE);
            DimValue.RESET;
            DimValue.SETRANGE("Dimension Code", "Dimension Code 2");
            Dim1List.SETTABLEVIEW(DimValue);
            IF Dim1List.RUNMODAL = ACTION::LookupOK THEN
              BEGIN
                Dim1List.GETRECORD(DimValue);
                FilterText := FilterText + DimValue.Code;
                EXIT(TRUE);
              END;
        END;

        'FIRST':
           BEGIN
             CLEAR(FirstList);
             FirstList.LOOKUPMODE(TRUE);
             First.RESET;
             FirstList.SETTABLEVIEW(First);
             IF FirstList.RUNMODAL = ACTION::LookupOK THEN
               BEGIN
                 FirstList.GETRECORD(First);
                 FilterText := FilterText + First.Code;
                 EXIT(TRUE);
               END;
           END;

        'VENDOR':
           BEGIN
             CLEAR(VendorList);
             VendorList.LOOKUPMODE(TRUE);
             Vend.RESET;
             VendorList.SETTABLEVIEW(Vend);
             IF VendorList.RUNMODAL = ACTION::LookupOK THEN
               BEGIN
                 VendorList.GETRECORD(Vend);
                 FilterText := FilterText + Vend."No.";
                 EXIT(TRUE);
               END;
           END;

        'PURCHASER':
           BEGIN
             CLEAR(PurchaserList);
             PurchaserList.LOOKUPMODE(TRUE);
             Purchaser.RESET;
             PurchaserList.SETTABLEVIEW(Purchaser);
             IF PurchaserList.RUNMODAL = ACTION::LookupOK THEN
               BEGIN
                 PurchaserList.GETRECORD(Purchaser);
                 FilterText := FilterText + Purchaser.Code;
                 EXIT(TRUE);
               END
           END;

        'VENDPOSTGROUP':
           BEGIN
             CLEAR(VendorPostingGroupList);
             VendorPostingGroupList.LOOKUPMODE(TRUE);
             VendorPostingGroup.RESET;
             VendorPostingGroupList.SETTABLEVIEW(VendorPostingGroup);
             IF VendorPostingGroupList.RUNMODAL = ACTION::LookupOK THEN
               BEGIN
                 VendorPostingGroupList.GETRECORD(VendorPostingGroup);
                 FilterText := FilterText + VendorPostingGroup.Code;
                 EXIT(TRUE);
               END
           END;
      END;

      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

