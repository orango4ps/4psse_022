OBJECT XMLport 11012385 Import Empl LOSA (CTB-Office)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import Employees LOSA (Office);
               SVE=Import anst„llda LOSA (kontor)];
    Direction=Import;
    DefaultFieldsValidation=No;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    HumanResourcesSetup.GET;
                    HumanResourcesSetup.TESTFIELD("Salary Application",HumanResourcesSetup."Salary Application"::"LOSA-CTB");
                    HumanResourcesSetup.TESTFIELD("Exchange Salary Application");
                    HumanResourcesSetup.TESTFIELD("Pathname Files from Salary");
                    HumanResourcesSetup.TESTFIELD("Filename Employees (Alwi)");
                    HumanResourcesSetup.TESTFIELD("Pathname Salary Backup Files");

                    OldFile := HumanResourcesSetup."Pathname Files from Salary" + HumanResourcesSetup."Filename Employees (Alwi)";
                    currXMLport.FILENAME(OldFile);
                  END;

    OnPostXMLport=BEGIN
                    OldFile := currXMLport.FILENAME;
                    NewFile := HumanResourcesSetup.DetermineBackupFile(OldFile);
                    IF NewFile <> OldFile THEN
                      FileMgt.RenameClientFile(OldFile, NewFile, TRUE);
                  END;

    Format=Fixed Text;
    UseRequestPage=No;
  }
  ELEMENTS
  {
    { [{D534E03C-7F55-41B2-9F98-D4609F62026F}];  ;Root                ;Element ;Text     }

    { [{8E824595-81A6-4D29-80B2-D0E8937D336D}];1 ;Employee            ;Element ;Table   ;
                                                  SourceTable=Table5200;
                                                  SourceTableView=SORTING(Field1);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              Employee.INIT;
                                                                              CLEAR(ExtraAddress);
                                                                              CLEAR(ExtraPhoneNo);
                                                                              CLEAR(EmploymentDateText);
                                                                              CLEAR(TerminationDateText);
                                                                              CLEAR(NormDaysText);
                                                                              CLEAR(NormHoursText);
                                                                              CLEAR(BirthDateText);
                                                                              CLEAR(GenderText);
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 Employee2@1100528401 : Record 5200;
                                                                                 RecRef@1100528400 : RecordRef;
                                                                               BEGIN
                                                                                 WITH Employee DO BEGIN
                                                                                   StripZero("No.");
                                                                                   IF "No." = '' THEN "No." := '0';

                                                                                   Address := COPYSTR(STRSUBSTNO(Text000 ,Address, ExtraAddress), 1, MAXSTRLEN(Address));
                                                                                   "Phone No." := STRSUBSTNO(Text000 ,ExtraPhoneNo, "Phone No.");
                                                                                   "Search Name" := "Last Name";

                                                                                   IF NormDaysText <> '' THEN BEGIN
                                                                                     AmountSign := COPYSTR(NormDaysText,5,1);
                                                                                     ValueTextDays := DELCHR(COPYSTR(NormDaysText,1,4),'=','.');
                                                                                     EVALUATE(Value,ValueTextDays);
                                                                                     "Norm Days" := Value/100;
                                                                                     IF AmountSign = '-' THEN "Norm Days" := (Value * -1.0);
                                                                                   END ELSE
                                                                                     "Norm Days" := 0;

                                                                                   IF NormHoursText <> '' THEN BEGIN
                                                                                     AmountSign := COPYSTR(NormHoursText,6,1);
                                                                                     ValueTextHours := DELCHR(COPYSTR(NormHoursText,1,5),'=','.');
                                                                                     EVALUATE(Value,ValueTextHours);
                                                                                     "Norm Hours" := Value/100;
                                                                                     IF AmountSign = '-' THEN "Norm Hours" := (Value * -1.0);
                                                                                   END ELSE
                                                                                     "Norm Hours" := 0;

                                                                                   Status := Status::Active;
                                                                                   "Termination Date" := 0D;
                                                                                   "Birth Date" := 0D;
                                                                                   "Employment Date" := 0D;

                                                                                   "Birth Date" := ConvDate(BirthDateText);
                                                                                   "Employment Date" := ConvDate(EmploymentDateText);
                                                                                   "Termination Date" := ConvDate(TerminationDateText);

                                                                                   IF "Termination Date" <> 0D THEN
                                                                                     Status := Status::Terminated;

                                                                                   IF GenderText = 'M' THEN
                                                                                     Gender := Gender::Male
                                                                                   ELSE
                                                                                     IF GenderText = 'V' THEN
                                                                                       Gender := Gender::Female
                                                                                     ELSE
                                                                                       Gender := Gender::" ";

                                                                                   "Last Date Modified" := TODAY;

                                                                                   DetermineAccountHours;

                                                                                   RecRef.GETTABLE(Employee);
                                                                                   XMLportStatusDialogMgt.ShowImportStatus(RecRef);

                                                                                   IF Employee2.GET("No.") THEN
                                                                                     UpdateEmployee(Employee2, Employee)
                                                                                   ELSE
                                                                                     Employee.INSERT;
                                                                                 END;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{87F7BE6E-ED42-4D89-A464-D135D3839816}];2 ;ParticipantNoLosa   ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Employee::Participant No. (Losa);
                                                  MinOccurs=Zero;
                                                  Width=5 }

    { [{DD6ECF66-9303-449C-AF8D-EDD89D343E29}];2 ;No                  ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Employee::No.;
                                                  MinOccurs=Zero;
                                                  Width=5 }

    { [{BAC8E050-3717-4CC6-9726-151B8E854385}];2 ;LastName            ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Employee::Last Name;
                                                  MinOccurs=Zero;
                                                  Width=30 }

    { [{C482595E-B5EE-475F-9297-C264172B5A0C}];2 ;Initials            ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Employee::Initials;
                                                  MinOccurs=Zero;
                                                  Width=10 }

    { [{1AA963DE-2B61-4255-AE57-86EA3D88C7D7}];2 ;MiddleName          ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Employee::Middle Name;
                                                  MinOccurs=Zero;
                                                  Width=8 }

    { [{27249ED7-88E0-4688-AE31-23501BA4E9DD}];2 ;Address             ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Employee::Address;
                                                  MinOccurs=Zero;
                                                  Width=25 }

    { [{FFF8C59D-7D8F-43D9-81A6-6A39CA6623D1}];2 ;ExtraAddress        ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=10 }

    { [{66382C9B-7026-437D-9E16-885A58C58572}];2 ;PostCode            ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Employee::Post Code;
                                                  MinOccurs=Zero;
                                                  Width=6 }

    { [{0B340926-9BFE-423D-9F8D-E06164A27050}];2 ;City                ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Employee::City;
                                                  MinOccurs=Zero;
                                                  Width=20 }

    { [{9DA2B384-519F-44F5-8F84-19B40E599437}];2 ;PhoneNo             ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Employee::Phone No.;
                                                  MinOccurs=Zero;
                                                  Width=7 }

    { [{8FB21EE5-85EC-4813-8989-02594FA3B876}];2 ;ExtraPhoneNo        ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=5 }

    { [{CDFD7648-AB1D-4BF4-9C42-8117BC4C7BAE}];2 ;Filler1             ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=2 }

    { [{CF607EAE-BD43-402C-B834-A89BE93A3386}];2 ;EmploymentDateText  ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=8 }

    { [{AB622E3C-3051-4C97-A8F9-36E4D41604ED}];2 ;TerminationDateText ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=8 }

    { [{63AED7AB-A5A8-4692-9FCE-3FD714A569BA}];2 ;NormDaysText        ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=5 }

    { [{B8576CD4-73ED-4DC7-B5EB-BBDCD6869E46}];2 ;NormHoursText       ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=6 }

    { [{90B2C738-D8EE-471D-A053-5375D95A74A7}];2 ;Filler2             ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=6 }

    { [{309EE1B2-4C07-4684-B473-F394050E85E9}];2 ;BirthDateText       ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=8 }

    { [{69CD41CD-02B8-47E0-9FA4-7B094C82ECAD}];2 ;Filler3             ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=13 }

    { [{99CBEFE5-0C53-41B9-AB91-A67DFF06DB63}];2 ;TradeAssociation    ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Employee::Trade Association;
                                                  MinOccurs=Zero;
                                                  Width=4 }

    { [{0D7E9EBB-9616-48CF-84EA-3288E6CC808A}];2 ;GenderText          ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=1 }

    { [{F0803C7C-4E06-486B-9F2C-E4C25F013C20}];2 ;Filler4             ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=25 }

    { [{9FFC8C25-7BB1-48B0-A4A6-39C57815FDB5}];2 ;SocialSecurityNo    ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Employee::Social Security No.;
                                                  MinOccurs=Zero;
                                                  Width=9 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      HumanResourcesSetup@1100528414 : Record 5218;
      FileMgt@1100528409 : Codeunit 419;
      XMLportStatusDialogMgt@1100528410 : Codeunit 11130006;
      Value@1100528413 : Integer;
      ValueTextDays@1100528405 : Text[3];
      ValueTextHours@1100528404 : Text[4];
      AmountSign@1100528403 : Text[1];
      OldFile@1100528401 : Text[250];
      NewFile@1100528400 : Text[250];
      Text000@1100528408 : TextConst 'ENU=%1 %2;SVE=%1 %2';

    PROCEDURE StripZero@1(VAR convcde@11012000 : Code[10]);
    VAR
      Position@11012001 : Integer;
    BEGIN
      Position := STRPOS(convcde,'0');
      WHILE Position = 1 DO
        BEGIN
          convcde := DELSTR(convcde,Position,1);
          Position := STRPOS(convcde,'0');
        END;
    END;

    PROCEDURE ConvDate@1210190000(HelpDateText@1210190000 : Text[30]) : Date;
    VAR
      HelpYear@1210190001 : Integer;
      HelpMonth@1210190002 : Integer;
      HelpDay@1210190003 : Integer;
    BEGIN
      IF (HelpDateText <> '') AND (HelpDateText <> '0') THEN BEGIN
        EVALUATE(HelpYear,COPYSTR(HelpDateText,1,4));
        EVALUATE(HelpMonth,COPYSTR(HelpDateText,5,2));
        EVALUATE(HelpDay,COPYSTR(HelpDateText,7,2));
        EXIT(DMY2DATE(HelpDay,HelpMonth,HelpYear));
      END ELSE
        EXIT(0D);
    END;

    PROCEDURE UpdateEmployee@1100525000(VAR Employee@1100525000 : Record 5200;EmployeeImport@1100525001 : Record 5200);
    BEGIN
      Employee."Participant No. (Losa)" := EmployeeImport."Participant No. (Losa)";
      Employee."Last Name" := EmployeeImport."Last Name";
      Employee.Initials := EmployeeImport.Initials;
      Employee."Middle Name" := EmployeeImport."Middle Name";
      Employee.Address := EmployeeImport.Address;
      Employee."Post Code" := EmployeeImport."Post Code";
      Employee.City := EmployeeImport.City;
      Employee."Phone No." := EmployeeImport."Phone No.";
      Employee."Trade Association" := EmployeeImport."Trade Association";
      Employee."Social Security No." := EmployeeImport."Social Security No.";

      Employee."Search Name" := EmployeeImport."Search Name";
      Employee."Norm Days" := EmployeeImport."Norm Days";
      Employee."Norm Hours" := EmployeeImport."Norm Hours";
      Employee.Status := EmployeeImport.Status;
      Employee."Birth Date" := EmployeeImport."Birth Date";
      Employee."Employment Date" := EmployeeImport."Employment Date";
      Employee."Termination Date" := EmployeeImport."Termination Date";
      Employee.Gender := EmployeeImport.Gender;
      Employee."Last Date Modified" := EmployeeImport."Last Date Modified";
      Employee."Account Hours" := EmployeeImport."Account Hours";

      Employee.MODIFY;
    END;

    BEGIN
    END.
  }
}

