OBJECT Page 1180 Data Privacy Wizard
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Data Privacy Utility;
               NOR=Verkt›y forÿpersonverndata;
               SVE=Verktyg f”r datasekretess];
    SourceTable=Table1180;
    PageType=NavigatePage;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             LoadTopBanners;
             CurrentPage := 1;
             PrivacyURL := PrivacyUrlTxt;
           END;

    OnOpenPage=BEGIN
                 EnableControls;
                 DataPrivacyMgmt.CreateEntities;
               END;

    ActionList=ACTIONS
    {
      { 5       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 8       ;1   ;Action    ;
                      Name=PreviewData;
                      CaptionML=[ENU=&Generate and Preview Data;
                                 NOR=&Generer og forh†ndsvis data;
                                 SVE=&Generera och f”rhandsgranska data];
                      ApplicationArea=#Basic,#Suite;
                      Visible=CurrentPage = 3;
                      Enabled=PreviewActionEnabled;
                      InFooterBar=Yes;
                      OnAction=BEGIN
                                 CurrPage.UPDATE;
                                 DataPrivacyMgmt.InitRecords(EntityTypeTableNo,EntityNo,PackageCode,ActionType,FALSE,DataSensitivity);
                                 CurrPage.DataPrivacySubPage.PAGE.GeneratePreviewData(PackageCode);
                                 CurrentPage := CurrentPage + 1;
                               END;
                                }
      { 47      ;1   ;Action    ;
                      Name=BackAction;
                      CaptionML=[ENU=&Back;
                                 NOR=&Tilbake;
                                 SVE=&Tillbaka];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=(CurrentPage > 1) AND (CurrentPage < 5);
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=VAR
                                 PreviousPage@1000 : Integer;
                               BEGIN
                                 PreviousPage := CurrentPage;
                                 CurrentPage := CurrentPage - 1;

                                 NextActionEnabled := TRUE;
                                 PreviewActionEnabled := TRUE;
                                 IF CurrentPage = 3 THEN BEGIN
                                   IF PreviousPage = 4 THEN // Don't clear the entity number if coming back from the preview page
                                     EXIT;
                                   IF PackageCode <> '' THEN
                                     IF STRPOS(PackageCode,'*') > 0 THEN
                                       DataPrivacyMgmt.DeletePackage(PackageCode);
                                   NextActionEnabled := FALSE;
                                   PreviewActionEnabled := FALSE;
                                 END;

                                 CurrPage.UPDATE;
                               END;
                                }
      { 9       ;1   ;Action    ;
                      Name=NextAction;
                      CaptionML=[ENU=&Next;
                                 NOR=&Neste;
                                 SVE=&N„sta];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=NextActionEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=VAR
                                 ActivityLog@1000 : Record 710;
                                 Company@1001 : Record 2000000006;
                                 ConfigPackageTable@1003 : Record 8613;
                                 ConfigPackage@1002 : Record 8623;
                                 SessionId@1004 : Integer;
                               BEGIN
                                 NextActionEnabled := TRUE;
                                 PreviewActionEnabled := TRUE;

                                 CurrentPage := CurrentPage + 1;

                                 IF CurrentPage = 3 THEN BEGIN
                                   EntityNo := '';
                                   NextActionEnabled := FALSE;
                                   PreviewActionEnabled := FALSE;
                                 END;

                                 IF CurrentPage = 4 THEN BEGIN
                                   DataPrivacyMgmt.InitRecords(EntityTypeTableNo,EntityNo,PackageCode,ActionType,FALSE,DataSensitivity);
                                   IF ActionType = ActionType::"Create a data privacy configuration package" THEN
                                     IF ConfigPackage.GET(PackageCode) THEN BEGIN
                                       Company.GET(COMPANYNAME);
                                       NextActionEnabled := FALSE;
                                       PreviewActionEnabled := FALSE;
                                       EditConfigPackage := TRUE;
                                       CurrentPage := 5; // Move to the end
                                       ActivityLog.LogActivity(
                                         Company.RECORDID,ActivityLog.Status::Success,ActivityContextTxt,ActivityDescriptionConfigTxt,
                                         STRSUBSTNO(ActivityMessageConfigTxt,EntityType,EntityNo));
                                     END ELSE BEGIN // No data generated, so no config package created.
                                       CurrentPage := 6; // Move to the end
                                       ActivityLog.LogActivity(
                                         Company.RECORDID,ActivityLog.Status::Failed,ActivityContextTxt,ActivityDescriptionConfigTxt,
                                         STRSUBSTNO(ActivityMessageConfigTxt,EntityType,EntityNo));
                                       NextActionEnabled := FALSE;
                                       PreviewActionEnabled := FALSE;
                                       EditConfigPackage := FALSE;
                                       EXIT;
                                     END;
                                   CurrentPage := 5;
                                 END;

                                 IF CurrentPage = 5 THEN BEGIN
                                   NextActionEnabled := FALSE;
                                   PreviewActionEnabled := FALSE;

                                   Company.GET(COMPANYNAME);
                                   IF ActionType = ActionType::"Export a data subject's data" THEN
                                     IF ConfigPackage.GET(PackageCode) THEN BEGIN
                                       DataPrivacyMgmt.SetPrivacyBlocked(EntityTypeTableNo,EntityNo);
                                       ConfigPackageTable.SETRANGE("Package Code",PackageCode);
                                       IF STARTSESSION(SessionId,CODEUNIT::"Prvacy Data Mgmt Excel",COMPANYNAME,ConfigPackageTable) THEN
                                         ActivityLog.LogActivity(
                                           Company.RECORDID,ActivityLog.Status::Success,ActivityContextTxt,ActivityDescriptionExportTxt,
                                           STRSUBSTNO(ActivityMessageExportTxt,LOWERCASE(FORMAT(DataSensitivity)),EntityType,EntityNo))
                                       ELSE
                                         ActivityLog.LogActivity(
                                           Company.RECORDID,ActivityLog.Status::Failed,ActivityContextTxt,ActivityDescriptionExportTxt,
                                           STRSUBSTNO(ActivityMessageExportTxt,LOWERCASE(FORMAT(DataSensitivity)),EntityType,EntityNo));
                                     END ELSE BEGIN // No data generated, so no config package created.
                                       CurrentPage := 6; // Move to the end
                                       ActivityLog.LogActivity(
                                         Company.RECORDID,ActivityLog.Status::Failed,ActivityContextTxt,ActivityDescriptionExportTxt,
                                         STRSUBSTNO(ActivityMessageExportTxt,LOWERCASE(FORMAT(DataSensitivity)),EntityType,EntityNo));
                                     END;
                                   NextActionEnabled := FALSE;
                                   PreviewActionEnabled := FALSE;
                                 END;

                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=FinishAction;
                      CaptionML=[ENU=&Finish;
                                 NOR=&Fullf›r;
                                 SVE=&Slutf”r];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=CurrentPage >= 5;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=VAR
                                 ConfigPackage@1001 : Record 8623;
                                 ConfigPackages@1000 : Page 8615;
                               BEGIN
                                 IF EditConfigPackage AND (ActionType = ActionType::"Create a data privacy configuration package") THEN BEGIN
                                   ConfigPackage.FILTERGROUP(2);
                                   ConfigPackage.SETFILTER(Code,PackageCode);
                                   ConfigPackage.FILTERGROUP(0);

                                   ConfigPackages.SETTABLEVIEW(ConfigPackage);
                                   ConfigPackages.EDITABLE := TRUE;
                                   ConfigPackages.RUN;
                                 END;
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=Privacy Data Wizard;
                CaptionML=[ENU=Privacy Data Setup;
                           NOR=Oppsett av personverndata;
                           SVE=Konfiguration av sekretessdata];
                ContainerType=ContentArea }

    { 17  ;1   ;Group     ;
                Visible=TopBannerVisible AND NOT (CurrentPage = 5);
                Editable=False;
                GroupType=Group }

    { 18  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 19  ;1   ;Group     ;
                Visible=TopBannerVisible AND (CurrentPage = 5);
                Editable=False;
                GroupType=Group }

    { 20  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 12  ;1   ;Group     ;
                Name=Step1;
                Visible=CurrentPage = 1;
                GroupType=Group;
                InstructionalTextML= }

    { 6   ;2   ;Group     ;
                Name=Para1.1;
                CaptionML=[ENU=Welcome to Data Privacy Utility;
                           NOR=Velkommen til verkt›yet for personverndata;
                           SVE=V„lkommen till verktyget f”r datasekretess];
                GroupType=Group;
                InstructionalTextML= }

    { 7   ;3   ;Group     ;
                Name=Para1.1.1;
                CaptionML=[ENU="";
                           NOR="";
                           SVE=""];
                GroupType=Group;
                InstructionalTextML=[ENU=You can export data for a person to Excel or to a RapidStart configuration package.;
                                     NOR=Du kan eksportere data for en person til Excel eller til en konfigurasjonspakke for RapidStart.;
                                     SVE=Du kan exportera data f”r en person till Excel eller till ett RapidStart-konfigurationspaket.] }

    { 44  ;4   ;Group     ;
                Name=Para1.1.1.1;
                CaptionML=[ENU="";
                           NOR="";
                           SVE=""];
                Visible=CurrentPage = 1;
                GroupType=Group;
                InstructionalTextML=[ENU=Up to date information on privacy requests can be found at the link below.;
                                     NOR=Du finner oppdatert informasjon om personvernforesp›rsler via koblingen nedenfor.;
                                     SVE=Aktuell information om sekretessbeg„randen finns i l„nken nedan.] }

    { 32  ;5   ;Field     ;
                ExtendedDatatype=URL;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PrivacyURL;
                Visible=CurrentPage = 1;
                Editable=false }

    { 29  ;2   ;Group     ;
                Name=Para1.2;
                CaptionML=[ENU=Let's go!;
                           NOR=La oss sette i gang!;
                           SVE=S„tt ig†ng!];
                GroupType=Group }

    { 30  ;3   ;Group     ;
                Name=Para1.2.1;
                CaptionML=[ENU="";
                           NOR="";
                           SVE=""];
                GroupType=Group;
                InstructionalTextML=[ENU=Choose Next to start the process.;
                                     NOR=Velg Neste for † starte prosessen.;
                                     SVE=V„lj N„sta f”r att starta processen.] }

    { 26  ;1   ;Group     ;
                Name=Step2;
                CaptionML=[ENU="";
                           NOR="";
                           SVE=""];
                Visible=CurrentPage = 2;
                GroupType=Group }

    { 4   ;2   ;Group     ;
                Name=Para2.1;
                CaptionML=[ENU=I want to...;
                           NOR=Jeg vil...;
                           SVE=Jag vill ...];
                GroupType=Group }

    { 27  ;3   ;Field     ;
                OptionCaptionML=[@@@=Note to translators.  These options must be translated based on being prefixed with "I want to" text.;
                                 ENU=Export a data subject's data,Create a data privacy configuration package;
                                 NOR=Eksporter et dataemnes data,Opprett en pakke for konfigurasjon av datavern;
                                 SVE=Exportera en registrerads data,Skapa ett konfigurationspaket f”r datasekretess];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ActionType;
                ShowCaption=No }

    { 41  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AvailableOptionsDescription;
                Editable=FALSE;
                MultiLine=Yes;
                ShowCaption=No }

    { 14  ;1   ;Group     ;
                Name=Step3;
                CaptionML=[ENU="";
                           NOR="";
                           SVE=""];
                Visible=CurrentPage = 3;
                GroupType=Group }

    { 13  ;2   ;Group     ;
                Name=Para3.1;
                CaptionML=[ENU=Specify the data that you want to export.;
                           NOR=Angi dataene du vil eksportere.;
                           SVE=Ange de data som du vill exportera.];
                GroupType=Group }

    { 16  ;3   ;Field     ;
                Name=EntityType;
                CaptionML=[ENU=Data Subject;
                           NOR=Dataemne;
                           SVE=Registrerade];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=EntityType;
                TableRelation="Data Privacy Entities"."Table Caption";
                OnLookup=BEGIN
                           RESET;
                           DELETEALL;
                           IF PAGE.RUNMODAL(PAGE::"Data Subject",Rec) = ACTION::LookupOK THEN BEGIN
                             EntityType := "Table Caption";
                             EntityTypeTableNo := "Table No.";
                             IF EntityType <> EntityTypeGlobal THEN
                               EntityNo := '';
                             EntityTypeGlobal := EntityType;
                           END;
                         END;
                          }

    { 25  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=EntityTypeTableNo;
                Visible=FALSE }

    { 21  ;3   ;Field     ;
                Name=EntityNo;
                CaptionML=[ENU=Data Subject Identifier;
                           NOR=Dataemne-ID;
                           SVE=ID f”r registrerad];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=EntityNo;
                OnValidate=VAR
                             Customer@1006 : Record 18;
                             Vendor@1005 : Record 23;
                             Contact@1004 : Record 5050;
                             Resource@1003 : Record 156;
                             Employee@1002 : Record 5200;
                             SalespersonPurchaser@1001 : Record 13;
                             User@1012 : Record 2000000120;
                             FilterAsText@1010 : Text;
                           BEGIN
                             IF EntityNo <> '' THEN BEGIN
                               IF EntityTypeTableNo = DATABASE::Customer THEN BEGIN
                                 IF NOT Customer.GET(FORMAT(EntityNo,20)) THEN
                                   ERROR(RecordNotFoundErr);
                                 SetEntityFilter(DATABASE::Customer,FilterAsText);
                                 Customer.SETVIEW(FilterAsText);
                                 Customer.SETRANGE("No.",FORMAT(EntityNo,20));
                                 IF NOT Customer.FINDFIRST THEN
                                   ERROR(NoPartnerPeopleErr);
                                 IF Customer."Privacy Blocked" THEN
                                   MESSAGE(DataSubjectBlockedMsg);
                               END;

                               IF EntityTypeTableNo = DATABASE::Vendor THEN BEGIN
                                 IF NOT Vendor.GET(FORMAT(EntityNo,20)) THEN
                                   ERROR(RecordNotFoundErr);
                                 SetEntityFilter(DATABASE::Vendor,FilterAsText);
                                 Vendor.SETVIEW(FilterAsText);
                                 Vendor.SETRANGE("No.",FORMAT(EntityNo,20));
                                 IF NOT Vendor.FINDFIRST THEN
                                   ERROR(NoPartnerPeopleErr);
                                 IF Vendor."Privacy Blocked" THEN
                                   MESSAGE(DataSubjectBlockedMsg);
                               END;

                               IF EntityTypeTableNo = DATABASE::Contact THEN BEGIN
                                 IF NOT Contact.GET(FORMAT(EntityNo,20)) THEN
                                   ERROR(RecordNotFoundErr);
                                 SetEntityFilter(DATABASE::Contact,FilterAsText);
                                 Contact.SETVIEW(FilterAsText);
                                 Contact.SETRANGE("No.",FORMAT(EntityNo,20));
                                 IF NOT Contact.FINDFIRST THEN
                                   ERROR(NoPersonErr);
                                 IF Contact."Privacy Blocked" THEN
                                   MESSAGE(DataSubjectBlockedMsg);
                               END;

                               IF EntityTypeTableNo = DATABASE::Resource THEN BEGIN
                                 IF NOT Resource.GET(FORMAT(EntityNo,20)) THEN
                                   ERROR(RecordNotFoundErr);
                                 SetEntityFilter(DATABASE::Resource,FilterAsText);
                                 Resource.SETVIEW(FilterAsText);
                                 Resource.SETRANGE("No.",FORMAT(EntityNo,20));
                                 IF NOT Resource.FINDFIRST THEN
                                   ERROR(NoPersonErr);
                                 IF Resource."Privacy Blocked" THEN
                                   MESSAGE(DataSubjectBlockedMsg);
                               END;

                               IF EntityTypeTableNo = DATABASE::Employee THEN BEGIN
                                 Employee.SETRANGE("No.",FORMAT(EntityNo,20));
                                 IF NOT Employee.FINDFIRST THEN
                                   ERROR(RecordNotFoundErr);
                                 IF Employee."Privacy Blocked" THEN
                                   MESSAGE(DataSubjectBlockedMsg);
                               END;

                               IF EntityTypeTableNo = DATABASE::"Salesperson/Purchaser" THEN BEGIN
                                 SalespersonPurchaser.SETRANGE(Code,FORMAT(EntityNo,20));
                                 IF NOT SalespersonPurchaser.FINDFIRST THEN
                                   ERROR(RecordNotFoundErr);
                                 IF SalespersonPurchaser."Privacy Blocked" THEN
                                   MESSAGE(DataSubjectBlockedMsg);
                               END;

                               IF EntityTypeTableNo = DATABASE::User THEN BEGIN
                                 User.SETRANGE("User Name",EntityNo);
                                 IF NOT User.FINDFIRST THEN
                                   ERROR(RecordNotFoundErr);
                               END;
                             END;

                             OnEntityNoValidate(EntityTypeTableNo,EntityNo);

                             NextActionEnabled := EntityNo <> '';
                             PreviewActionEnabled := EntityNo <> '';
                           END;

                OnDrillDown=VAR
                              Customer@1013 : Record 18;
                              Vendor@1011 : Record 23;
                              Contact@1009 : Record 5050;
                              Resource@1007 : Record 156;
                              Employee@1003 : Record 5200;
                              SalespersonPurchaser@1001 : Record 13;
                              DataPrivacyEntities@1004 : Record 1180;
                              User@1016 : Record 2000000120;
                              CustomerList@1012 : Page 22;
                              VendorList@1010 : Page 27;
                              ContactList@1008 : Page 5052;
                              ResourceList@1006 : Page 77;
                              EmployeeList@1002 : Page 5201;
                              SalespersonsPurchasers@1000 : Page 14;
                              Users@1015 : Page 9800;
                              Instream@1005 : InStream;
                              FilterAsText@1014 : Text;
                            BEGIN
                              IF EntityTypeTableNo = DATABASE::Customer THEN BEGIN
                                IF DataPrivacyEntities.GET(DATABASE::Customer) THEN BEGIN
                                  DataPrivacyEntities.CALCFIELDS("Entity Filter");
                                  DataPrivacyEntities."Entity Filter".CREATEINSTREAM(Instream);
                                  Instream.READTEXT(FilterAsText);
                                END;
                                CustomerList.LOOKUPMODE := TRUE;
                                Customer.SETVIEW(FilterAsText);
                                CustomerList.SETTABLEVIEW(Customer);
                                IF CustomerList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                  CustomerList.GETRECORD(Customer);
                                  IF Customer."Privacy Blocked" THEN
                                    MESSAGE(DataSubjectBlockedMsg);
                                  EntityNo := Customer."No.";
                                END;
                              END;

                              IF EntityTypeTableNo = DATABASE::Vendor THEN BEGIN
                                IF DataPrivacyEntities.GET(DATABASE::Vendor) THEN BEGIN
                                  DataPrivacyEntities.CALCFIELDS("Entity Filter");
                                  DataPrivacyEntities."Entity Filter".CREATEINSTREAM(Instream);
                                  Instream.READTEXT(FilterAsText);
                                END;
                                VendorList.LOOKUPMODE := TRUE;
                                Vendor.SETVIEW(FilterAsText);
                                VendorList.SETTABLEVIEW(Vendor);
                                IF VendorList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                  VendorList.GETRECORD(Vendor);
                                  IF Vendor."Privacy Blocked" THEN
                                    MESSAGE(DataSubjectBlockedMsg);
                                  EntityNo := Vendor."No.";
                                END;
                              END;

                              IF EntityTypeTableNo = DATABASE::Contact THEN BEGIN
                                IF DataPrivacyEntities.GET(DATABASE::Contact) THEN BEGIN
                                  DataPrivacyEntities.CALCFIELDS("Entity Filter");
                                  DataPrivacyEntities."Entity Filter".CREATEINSTREAM(Instream);
                                  Instream.READTEXT(FilterAsText);
                                END;
                                ContactList.LOOKUPMODE := TRUE;
                                Contact.SETVIEW(FilterAsText);
                                ContactList.SETTABLEVIEW(Contact);
                                IF ContactList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                  ContactList.GETRECORD(Contact);
                                  IF Contact."Privacy Blocked" THEN
                                    MESSAGE(DataSubjectBlockedMsg);
                                  EntityNo := Contact."No.";
                                END;
                              END;

                              IF EntityTypeTableNo = DATABASE::Resource THEN BEGIN
                                IF DataPrivacyEntities.GET(DATABASE::Resource) THEN BEGIN
                                  DataPrivacyEntities.CALCFIELDS("Entity Filter");
                                  DataPrivacyEntities."Entity Filter".CREATEINSTREAM(Instream);
                                  Instream.READTEXT(FilterAsText);
                                END;
                                ResourceList.LOOKUPMODE := TRUE;
                                Resource.SETVIEW(FilterAsText);
                                ResourceList.SETTABLEVIEW(Resource);
                                IF ResourceList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                  ResourceList.GETRECORD(Resource);
                                  IF Resource."Privacy Blocked" THEN
                                    MESSAGE(DataSubjectBlockedMsg);
                                  EntityNo := Resource."No.";
                                END;
                              END;

                              IF EntityTypeTableNo = DATABASE::Employee THEN BEGIN
                                EmployeeList.LOOKUPMODE := TRUE;
                                IF EmployeeList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                  EmployeeList.GETRECORD(Employee);
                                  IF Employee."Privacy Blocked" THEN
                                    MESSAGE(DataSubjectBlockedMsg);
                                  EntityNo := Employee."No.";
                                END;
                              END;

                              IF EntityTypeTableNo = DATABASE::"Salesperson/Purchaser" THEN BEGIN
                                SalespersonsPurchasers.LOOKUPMODE := TRUE;
                                IF SalespersonsPurchasers.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                  SalespersonsPurchasers.GETRECORD(SalespersonPurchaser);
                                  IF SalespersonPurchaser."Privacy Blocked" THEN
                                    MESSAGE(DataSubjectBlockedMsg);
                                  EntityNo := SalespersonPurchaser.Code;
                                END;
                              END;

                              IF EntityTypeTableNo = DATABASE::User THEN BEGIN
                                Users.LOOKUPMODE := TRUE;
                                IF Users.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                  Users.GETRECORD(User);
                                  EntityNo := User."User Name";
                                END;
                              END;

                              OnDrillDownForEntityNumber(EntityTypeTableNo,EntityNo); // Integration point to external devs

                              NextActionEnabled := EntityNo <> '';
                              PreviewActionEnabled := EntityNo <> '';
                            END;
                             }

    { 24  ;3   ;Field     ;
                Name=DataSensitivity;
                CaptionML=[ENU=Data Sensitivity;
                           NOR=Datasensitivitet;
                           SVE=Datak„nslighet];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DataSensitivity }

    { 11  ;2   ;Group     ;
                Name=Para3.05;
                CaptionML=[ENU="";
                           NOR="";
                           SVE=""];
                Visible=(CurrentPage = 3) AND (ActionType < 1);
                GroupType=Group;
                InstructionalTextML=[ENU=Choose to generate and preview the data that will be exported. Note that this can take a while, depending on the size of the dataset.;
                                     NOR=Velg † generere og forh†ndsvise dataene som skal eksporteres.ÿV‘r oppmerksom p† at dette kan ta litt tid, avhengig av st›rrelsen p† datasettet.;
                                     SVE=V„lj att generera och f”rhandsgranska de data som ska exporteras. Observera att detta kan ta en stund beroende p† storleken p† dataupps„ttningen.] }

    { 45  ;2   ;Group     ;
                Name=Para3.2;
                CaptionML=[ENU="";
                           NOR="";
                           SVE=""];
                Visible=(CurrentPage = 3) AND (ActionType = 0);
                GroupType=Group;
                InstructionalTextML=[ENU=Choose Next to export the data.;
                                     NOR=Velg Neste for † eksportere dataene.;
                                     SVE=V„lj N„sta f”r att exportera data.] }

    { 37  ;2   ;Group     ;
                Name=Para3.4;
                CaptionML=[ENU="";
                           NOR="";
                           SVE=""];
                Visible=ActionType = 1;
                GroupType=Group;
                InstructionalTextML=[ENU=Choose Next to create the configuration package;
                                     NOR=Velg Neste for † opprette konfigurasjonspakken;
                                     SVE=V„lj N„sta om du vill skapa konfigurationspaketet] }

    { 2   ;1   ;Group     ;
                Name=Step4;
                CaptionML=[ENU="";
                           NOR="";
                           SVE=""];
                Visible=CurrentPage = 4;
                GroupType=Group }

    { 35  ;2   ;Group     ;
                Name=Para4.1;
                CaptionML=[ENU=Preview the data that will be exported;
                           NOR=Forh†ndsvis dataene som skal eksporteres;
                           SVE=F”rhandsgranska de data som ska exporteras];
                GroupType=Group }

    { 3   ;3   ;Part      ;
                Name=DataPrivacySubPage;
                CaptionML=[ENU=" ";
                           NOR=" ";
                           SVE=" "];
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page1181;
                PartType=Page }

    { 22  ;2   ;Group     ;
                Name=Para4.2;
                CaptionML=[ENU="";
                           NOR="";
                           SVE=""];
                Visible=(CurrentPage = 4) AND (ActionType = 0);
                GroupType=Group;
                InstructionalTextML=[ENU=Choose Next to export the data.;
                                     NOR=Velg Neste for † eksportere dataene.;
                                     SVE=V„lj N„sta f”r att exportera data.] }

    { 31  ;1   ;Group     ;
                Name=Step5;
                CaptionML=[ENU=<Step5>;
                           NOR=<Step5>;
                           SVE=<Steg5>];
                Visible=CurrentPage = 5;
                GroupType=Group;
                InstructionalTextML= }

    { 15  ;2   ;Group     ;
                Name=Para5.1;
                CaptionML=[ENU=Success!;
                           NOR=Vellykket!;
                           SVE=Klart!];
                GroupType=Group;
                InstructionalTextML= }

    { 23  ;3   ;Group     ;
                Name=Para5.1.1;
                CaptionML=[ENU="";
                           NOR="";
                           SVE=""];
                Visible=(CurrentPage = 5) AND (ActionType = 0);
                GroupType=Group;
                InstructionalTextML=[ENU=The data is being exported. The Excel workbook will show up in the Report Inbox on your home page.;
                                     NOR=Dataene eksporteres. Excel-arbeidsboken vil vises i rapportinnboksen p† startsiden.;
                                     SVE=Dina data exporteras. Excel-arbetsboken visas i rapportinkorgen p† startsidan.] }

    { 40  ;4   ;Group     ;
                Name=Para5.1.1.1;
                CaptionML=[ENU="";
                           NOR="";
                           SVE=""];
                Visible=(CurrentPage = 5) AND (ActionType = 0);
                GroupType=Group;
                InstructionalTextML=[ENU=We recommend that you verify the data that is exported to Excel. Please also verify the filters in the configuration package to make sure that you are getting the data that you want.;
                                     NOR=Detÿanbefales at du kontrollerer at dataene eksporteres til Excel. Kontroller ogs† filtrene i konfigurasjonspakken for † s›rge for at du f†r dataene du vil.;
                                     SVE=Vi rekommenderar att du kontrollerar de data som har exporterats till Excel. Kontrollera ocks† filtren i konfigurationspaketet s† att du h„mtar de data som du vill ha.] }

    { 38  ;3   ;Group     ;
                Name=Para5.1.3;
                CaptionML=[ENU="";
                           NOR="";
                           SVE=""];
                Visible=(CurrentPage = 5) AND (ActionType = 1);
                GroupType=Group;
                InstructionalTextML=[ENU=Your configuration package has been successfully created.;
                                     NOR=Konfigurasjonspakkenÿer opprettet.;
                                     SVE=Konfigurationspaketet har skapats.] }

    { 39  ;4   ;Field     ;
                CaptionML=[ENU=Edit Configuration Package;
                           NOR=Rediger konfigurasjonspakke;
                           SVE=Redigera konfigurationspaket];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=EditConfigPackage }

    { 43  ;4   ;Group     ;
                Name=Para5.1.4.1;
                CaptionML=[ENU="";
                           NOR="";
                           SVE=""];
                Visible=(CurrentPage = 5) AND (ActionType = 1);
                GroupType=Group;
                InstructionalTextML=[ENU=Please verify the filters in the configuration package to make sure that you will get the data that you want.;
                                     NOR=Kontroller filtrene i konfigurasjonspakken for † s›rge for at du vil f† dataene du vil.;
                                     SVE=Kontrollera filtren i konfigurationspaketet s† att du f†r de data som du vill ha.] }

    { 36  ;1   ;Group     ;
                Name=Step6;
                CaptionML=[ENU=<Step5>;
                           NOR=<Step5>;
                           SVE=<Steg5>];
                Visible=CurrentPage = 6;
                GroupType=Group;
                InstructionalTextML= }

    { 34  ;2   ;Group     ;
                Name=Para6.1;
                CaptionML=[ENU=Process finished.;
                           NOR=Prosess fullf›rt.;
                           SVE=Processen har slutf”rts.];
                GroupType=Group;
                InstructionalTextML= }

    { 33  ;3   ;Group     ;
                Name=Para6.1.1;
                CaptionML=[ENU="";
                           NOR="";
                           SVE=""];
                Visible=(CurrentPage = 6) AND (ActionType = 0);
                GroupType=Group;
                InstructionalTextML=[ENU=No data was found that could be generated, so no export file was created.;
                                     NOR=Ingen data ble funnet som kan genereres, og derfor ble ingen eksportfil opprettet.;
                                     SVE=Det finns inga data som kan genereras, s† ingen exportfil skapades.] }

    { 28  ;3   ;Group     ;
                Name=Para6.1.2;
                CaptionML=[ENU="";
                           NOR="";
                           SVE=""];
                Visible=(CurrentPage = 6) AND (ActionType = 1);
                GroupType=Group;
                InstructionalTextML=[ENU=No data was found that could be generated, so no configuration package was created.;
                                     NOR=Ingen data ble funnet som kan genereres, og derfor ble ingen konfigurasjonspakke opprettet.;
                                     SVE=Det finns inga data som kan genereras, s† inget konfigurationspaket skapades.] }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1005 : Record 9400;
      MediaRepositoryDone@1004 : Record 9400;
      MediaResourcesStandard@1026 : Record 2000000182;
      MediaResourcesDone@1025 : Record 2000000182;
      ClientTypeManagement@1077 : Codeunit 4030;
      DataPrivacyMgmt@1009 : Codeunit 1180;
      CurrentPage@1000 : Integer;
      TopBannerVisible@1006 : Boolean;
      ActionType@1011 : 'Export a data subject''s data,Create a data privacy configuration package';
      EntityType@1007 : Text[80];
      EntityTypeTableNo@1017 : Integer;
      EntityNo@1003 : Code[50];
      DataSensitivity@1001 : 'Sensitive,Personal,Company Confidential,Normal,Unclassified';
      EntityTypeGlobal@1008 : Text[80];
      NextActionEnabled@1012 : Boolean;
      ActivityContextTxt@1010 : TextConst 'ENU=Privacy Activity;NOR=Personvernaktivitet;SVE=Sekretessaktivitet';
      ActivityMessageExportTxt@1018 : TextConst '@@@="%1=The type of information being exported. %2=The type of entity. %3=The entity''s control number.";ENU=Exporting %1 information for %2 %3;NOR=Eksportererÿ%1-informasjon for %2 %3;SVE=Exporterar %1 information f”r %2 %3';
      ActivityDescriptionExportTxt@1019 : TextConst 'ENU=Exporting data subject data;NOR=Eksporterer dataemnedata;SVE=Exporterar data f”r registrerad';
      PreviewActionEnabled@1030 : Boolean;
      PackageCode@1021 : Code[20];
      ActivityMessageConfigTxt@1033 : TextConst '@@@="%1=The type of entity. %2=The entity''s control number.";ENU=Creating data privacy configuration package for %1 %2;NOR=Oppretter pakke for konfigurasjon av datavern for %1 %2;SVE=Skapa datasekretesskonfigurationspaketet f”r %1 %2';
      ActivityDescriptionConfigTxt@1032 : TextConst 'ENU=Creating the data privacy configuration package;NOR=Oppretter pakken for konfigurasjon av datavern;SVE=Skapa datasekretesskonfigurationspaketet';
      RecordNotFoundErr@1022 : TextConst 'ENU=Record not found.;NOR=Fant ikke posten.;SVE=Ingen post hittad.';
      EditConfigPackage@1034 : Boolean;
      OptionsDescriptionTxt@1035 : TextConst 'ENU=\Choose what you want to do with the privacy data.\\You can export data for a specific data subject, such as a customer.\You can also create a configuration package so that you can view and edit the fields and tables that the data will be exported from.;NOR=\Velg hva du vil gj›re med personverndataene.\\Du kan eksportere data for et bestemt dataemne, for eksempel en kunde.\Du kan ogs† opprette en konfigurasjonspakke slik at du kan vise og redigere feltene og tabellene som dataene blir eksportert fra.;SVE=\V„lj vad du vill g”ra med sekretessdata.\\Du kan exportera data f”r en viss registrerad, till exempel en kund.\Du kan ocks† skapa ett konfigurationspaket som g”r det m”jligt att visa och redigera f„lten och tabellerna som den registrerades data exporteras fr†n.';
      AvailableOptionsDescription@1036 : Text;
      DataSubjectBlockedMsg@1015 : TextConst 'ENU=This data subject is already marked as blocked due to privacy. You can export the related data.;NOR=Dette dataemnet er allerede merket som sperret p† grunn av personvern. Du kan eksportere de relaterte dataene.;SVE=Den registrerade har redan markerats som blockerad p† grund av sekretessen. Du kan exportera relaterade data.';
      NoPartnerPeopleErr@1002 : TextConst 'ENU=No records of Partner Type of ''Person'' were found.;NOR=Fant ingen poster forÿpartnertypen Person.;SVE=Det finns inga poster av partnertypen Person.';
      NoPersonErr@1013 : TextConst 'ENU=No records of type ''Person'' were found.;NOR=Fant ingen poster forÿtypen Person.;SVE=Det finns inga poster av typen Person.';
      PrivacyURL@1014 : Text;
      PrivacyUrlTxt@1016 : TextConst '@@@={Locked};ENU=https://docs.microsoft.com/en-us/dynamics365/business-central/admin-responding-to-requests-about-personal-data;NOR=https://docs.microsoft.com/en-us/dynamics365/business-central/admin-responding-to-requests-about-personal-data;SVE=https://docs.microsoft.com/en-us/dynamics365/business-central/admin-responding-to-requests-about-personal-data';

    LOCAL PROCEDURE LoadTopBanners@1();
    BEGIN
      IF MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType)) AND
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType))
      THEN
        IF MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") AND
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        THEN
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    LOCAL PROCEDURE ResetControls@2();
    BEGIN
      NextActionEnabled := TRUE;
      PreviewActionEnabled := TRUE;
      EditConfigPackage := TRUE;
    END;

    LOCAL PROCEDURE EnableControls@3();
    BEGIN
      ResetControls;
      AvailableOptionsDescription := OptionsDescriptionTxt;
    END;

    LOCAL PROCEDURE SetEntityFilter@5(TableId@1000 : Integer;VAR FilterAsText@1001 : Text);
    VAR
      DataPrivacyEntities@1002 : Record 1180;
      Instream@1003 : InStream;
    BEGIN
      IF DataPrivacyEntities.GET(TableId) THEN BEGIN
        DataPrivacyEntities.CALCFIELDS("Entity Filter");
        DataPrivacyEntities."Entity Filter".CREATEINSTREAM(Instream);
        Instream.READTEXT(FilterAsText);
      END;
    END;

    [External]
    PROCEDURE SetEntitityType@6(VAR DataPrivacyEntities2@1002 : Record 1180;EntityTypeText@1000 : Text[80]);
    BEGIN
      EntityType := EntityTypeText;

      DataPrivacyEntities2.SETRANGE("Table Caption",EntityType);
      IF DataPrivacyEntities2.FINDFIRST THEN
        EntityTypeTableNo := DataPrivacyEntities2."Table No.";
      CLEAR(DataPrivacyEntities2);
    END;

    [Integration]
    LOCAL PROCEDURE OnDrillDownForEntityNumber@10(EntityTypeTableNo@1000 : Integer;VAR EntityNo@1001 : Code[50]);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnEntityNoValidate@4(EntityTypeTableNo@1001 : Integer;VAR EntityNo@1000 : Code[50]);
    BEGIN
    END;

    BEGIN
    END.
  }
}

