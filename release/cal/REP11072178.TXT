OBJECT Report 11072178 Reverse Old Preclosure Result
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=RÅckgÑngig machen zwischenzeitliches Ergebnis Service (alt);
               ENU=Reverse Old Preclosure Result;
               NLD=Terugdraaien tussentijds resultaat service (oud)];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF PostingDate = 0D THEN
                    ERROR(Text000);

                  ServiceSetup.GET;
                  ServiceSetup.TESTFIELD("Old Preclosure Result Present");

                  OldPreclosureResultReversed := ReversePostPreclResults;
                END;

    OnPostReport=VAR
                   ClosingProjPrevGenJnlReport@1100525000 : Report 11020272;
                 BEGIN
                   IF NOT (TempGenJnlLineRec1.ISEMPTY AND TempGenJnlLineRec2.ISEMPTY) AND
                     PreviewGenJournalLines
                   THEN BEGIN
                     CLEAR(ClosingProjPrevGenJnlReport);
                     ClosingProjPrevGenJnlReport.SetCloseServiceContract(TRUE);
                     ClosingProjPrevGenJnlReport.ImportTemp1(TempGenJnlLineRec1);
                     ClosingProjPrevGenJnlReport.ImportTemp2(TempGenJnlLineRec2);
                     ClosingProjPrevGenJnlReport.RUNMODAL;
                   END;

                   IF OldPreclosureResultReversed THEN BEGIN
                     ServiceSetup."Old Preclosure Result Present" := FALSE;
                     ServiceSetup.MODIFY;
                     COMMIT;
                   END;

                   ClosingProcedure.DisplayError;
                   ClosingProcedure.StartGenJnl;
                   CLEAR(ClosingProcedure);
                 END;

  }
  DATASET
  {
    { 4178;    ;DataItem;                    ;
               DataItemTable=Table11012812;
               DataItemTableView=SORTING(No.);
               OnAfterGetRecord=VAR
                                  LocServiceContractCtrlPeriod@1100529600 : Record 11071746;
                                BEGIN
                                  TmpServiceContractCtrlPeriod.RESET;
                                  TmpServiceContractCtrlPeriod.DELETEALL;

                                  LocServiceContractCtrlPeriod.SETRANGE("Service Contract No.", "No.");

                                  IF "Rest of Contract" THEN BEGIN
                                    CLEAR(TmpServiceContractCtrlPeriod);
                                    TmpServiceContractCtrlPeriod."Service Contract No." := "No.";
                                    IF LocServiceContractCtrlPeriod.FINDLAST THEN
                                      TmpServiceContractCtrlPeriod."Starting Date" := LocServiceContractCtrlPeriod."Ending Date" + 1
                                    ELSE
                                       TmpServiceContractCtrlPeriod."Starting Date" := "Starting Date";
                                    TmpServiceContractCtrlPeriod."Ending Date" := "Ending Date";
                                    TmpServiceContractCtrlPeriod.INSERT;
                                  END ELSE BEGIN
                                    LocServiceContractCtrlPeriod.SETRANGE("Date Finished", 0D);
                                    IF LocServiceContractCtrlPeriod.FINDSET THEN
                                      REPEAT
                                        TmpServiceContractCtrlPeriod := LocServiceContractCtrlPeriod;
                                        TmpServiceContractCtrlPeriod.INSERT;
                                      UNTIL LocServiceContractCtrlPeriod.NEXT = 0;
                                  END;
                                END;
                                 }

    { 9302;1   ;DataItem;ServiceContractCtrlPeriod;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               SETRANGE(Number, 1, TmpServiceContractCtrlPeriod.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    TmpServiceContractCtrlPeriod.FINDSET
                                  ELSE
                                    TmpServiceContractCtrlPeriod.NEXT;

                                  ClosingProcedure.SetSelection(
                                    gvType::"Service Contract", '', TmpServiceContractCtrlPeriod."Service Contract No.", '',
                                    PostingDate, TRUE, TRUE, TRUE, FALSE, FALSE, '', FALSE,FALSE,FALSE);
                                  IF TmpServiceContractCtrlPeriod.Code = '' THEN
                                    ClosingProcedure.SetSelectionCloseServiceRestOfContract(0, TmpServiceContractCtrlPeriod)
                                  ELSE
                                    ClosingProcedure.SetSelectionCloseService(0, TmpServiceContractCtrlPeriod.Code);
                                  ClosingProcedure.SetCorrectOldPreclosureResult(TRUE);
                                  ClosingProcedure.CheckServicePreclosureResult;
                                  ClosingProcedure.DeleteTempGenJnlLines;
                                  IF ReversePostPreclResults THEN BEGIN
                                    ClosingProcedure.TableLocking;
                                    ClosingProcedure.InitTemplateAndBatch;
                                    IF NOT ClosingProcedure.ErrorsFound THEN
                                      ClosingProcedure.ReverseServicePreclosureResults
                                    ELSE
                                      OldPreclosureResultReversed := FALSE;
                                    COMMIT;
                                  END;

                                  IF PreviewGenJournalLines THEN BEGIN
                                    IF NOT ClosingProcedure.ErrorsFound THEN BEGIN
                                      ClosingProcedure.SetPreview(TRUE);
                                      ClosingProcedure.TableLocking;
                                      ClosingProcedure.InitTemplateAndBatch;
                                      ClosingProcedure.ReverseServicePreclosureResults;
                                      ClosingProcedure.ExportTempGenJnlLine1(TempGenJnlLineRec1);
                                      ClosingProcedure.ExportTempGenJnlLine2(TempGenJnlLineRec2);
                                    END;
                                    COMMIT;
                                  END;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   ServiceSetup.GET;
                   PostOldPreclosureResult := (ServiceSetup."Service Control Method" = ServiceSetup."Service Control Method"::"Real-Time") AND ServiceSetup."Old Preclosure Result Present";
                   OldPreclosureResultVisible := PostOldPreclosureResult;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             SVE=Alternativ] }

      { 2   ;2   ;Field     ;
                  CaptionML=[DEU=Buchungsdatum;
                             ENU=Posting Date;
                             NLD=Boekingsdatum;
                             SVE=Bokfîringsdatum];
                  SourceExpr=PostingDate }

      { 1100528240;2;Field  ;
                  Name=PreviewClosedProjects;
                  CaptionML=[DEU=Gen. Journalzeilen vorab anzeigen;
                             ENU=Preview Gen. Journal Lines;
                             NLD=Overzicht financiele dagboekregels;
                             SVE=Fîrhandsgranska red.journalrader];
                  SourceExpr=PreviewGenJournalLines;
                  OnValidate=BEGIN
                               IF PreviewGenJournalLines THEN
                                 ReversePostPreclResults := FALSE;
                             END;
                              }

      { 1210190002;2;Field  ;
                  Name=ReversePostPreclResults;
                  CaptionML=[DEU=Buchen;
                             ENU=Post;
                             NLD=Boeken;
                             SVE=Bokfîr];
                  SourceExpr=ReversePostPreclResults;
                  OnValidate=BEGIN
                               IF ReversePostPreclResults THEN
                                 PreviewGenJournalLines := FALSE;
                             END;
                              }

      { 1100529600;2;Field  ;
                  Name=PostOldPreclosureResult;
                  CaptionML=[DEU=RÅckgÑngig machen zwischenzeitliches Ergebnis Service (alt);
                             ENU=Reverse Old Preclosure Result;
                             NLD=Terugdraaien tussentijds resultaat service (oud)];
                  SourceExpr=PostOldPreclosureResult;
                  Visible=OldPreclosureResultVisible;
                  Editable=FALSE }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@11012042 : TextConst 'DEU=AuswÑhlen Buchungsdatum auf Registerblatt ''Optionen'';ENU=Select Posting Date on Option Tab;NLD=Selecteer boekingsdatum op tabblad opties;SVE=VÑlj bokfîringsdatum pÜ alternativfliken';
      ServiceSetup@1100529602 : Record 11012800;
      ClosingProcedure@1210190007 : Codeunit 11012046;
      PostingDate@1210190001 : Date;
      gvType@1210190000 : 'Project,Service Contract,Service Order';
      ReversePostPreclResults@1210190006 : Boolean;
      PreviewGenJournalLines@1100528240 : Boolean;
      TempGenJnlLineRec1@1100528242 : TEMPORARY Record 81;
      TempGenJnlLineRec2@1100528241 : TEMPORARY Record 81;
      PostOldPreclosureResult@1100529600 : Boolean;
      OldPreclosureResultVisible@1100529601 : Boolean INDATASET;
      OldPreclosureResultReversed@1100529603 : Boolean;
      TmpServiceContractCtrlPeriod@1100529604 : TEMPORARY Record 11071746;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

