OBJECT Page 12013638 Exflow Get PO Lines
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF422000;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Get Purchase Order Lines;
               SVE=H„mta ink”psorderrader];
    SourceTable=Table39;
    PageType=List;
    OnAfterGetRecord=BEGIN
                       TotalMatchedQty[1] := ExFlow.MatchedQtyStillMatchedInv("Document No.","Line No.",2,TotalMatchedAmt[1],TotalMatchedAmtLCY[1]);
                       TotalMatchedQty[2] := ExFlow.MatchedQtyStillMatchedExWork("Document No.","Line No.",2,TotalMatchedAmt[2],TotalMatchedAmtLCY[2]);
                       TotalMatchedQty[3] := ExFlow.MatchedQtyStillMatchedPostInv("Document No.","Line No.",TotalMatchedAmt[3],TotalMatchedAmtLCY[3]);
                     END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::LookupOK THEN
                         LookupOKOnPush;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 45      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 SVE=Ra&d] }
      { 46      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Show Document;
                                 SVE=Visa dokument];
                      Image=View;
                      OnAction=BEGIN
                                 PurchOrderHeader.GET("Document Type","Document No.");
                                 PAGE.RUN(PAGE::"Purchase Order",PurchOrderHeader);
                               END;
                                }
      { 47      ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 SVE=Dimensioner];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Document No." }

    { 4   ;2   ;Field     ;
                SourceExpr="Buy-from Vendor No." }

    { 6   ;2   ;Field     ;
                SourceExpr=Type }

    { 8   ;2   ;Field     ;
                SourceExpr="No." }

    { 1100285019;2;Field  ;
                SourceExpr="Vendor Item No.";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr=Description }

    { 24  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code" }

    { 22  ;2   ;Field     ;
                SourceExpr=Quantity }

    { 1100285000;2;Field  ;
                SourceExpr="Direct Unit Cost" }

    { 1100285001;2;Field  ;
                SourceExpr="Line Amount" }

    { 1100285002;2;Field  ;
                SourceExpr="Quantity Received" }

    { 40  ;2   ;Field     ;
                SourceExpr="Quantity Invoiced" }

    { 1100285017;2;Field  ;
                SourceExpr="Fully Matched" }

    { 1100285018;2;Field  ;
                SourceExpr="Web Receipt" }

    { 1100285011;2;Field  ;
                DrillDown=Yes;
                CaptionML=[ENU=Matched Quantity (Invoice);
                           SVE=Matchat antal (Faktura)];
                DecimalPlaces=0:5;
                SourceExpr=TotalMatchedQty[1];
                Editable=False;
                OnDrillDown=BEGIN
                              ExFlow.DrillDownMatchedQtyInv("ExFlow Order No.","ExFlow Order Line No.",0);
                            END;
                             }

    { 1100285010;2;Field  ;
                DrillDown=Yes;
                CaptionML=[ENU=Matched Amount (Invoice);
                           SVE=Matchat belopp (Faktura)];
                DecimalPlaces=0:5;
                SourceExpr=TotalMatchedAmt[1];
                Editable=False;
                OnDrillDown=BEGIN
                              ExFlow.DrillDownMatchedQtyInv("ExFlow Order No.","ExFlow Order Line No.",0);
                            END;
                             }

    { 1100285009;2;Field  ;
                DrillDown=Yes;
                CaptionML=[ENU=Matched Quantity (Worksheet);
                           SVE=Matchat antal (Journal)];
                DecimalPlaces=0:5;
                SourceExpr=TotalMatchedQty[2];
                Editable=False;
                OnDrillDown=BEGIN
                              ExFlow.DrillDownMatchedQtyExWork("ExFlow Order No.","ExFlow Order Line No.",0);
                            END;
                             }

    { 1100285008;2;Field  ;
                DrillDown=Yes;
                CaptionML=[ENU=Matched Amount (Worksheet);
                           SVE=Matchat belopp (Journal)];
                DecimalPlaces=0:5;
                SourceExpr=TotalMatchedAmt[2];
                Editable=False;
                OnDrillDown=BEGIN
                              ExFlow.DrillDownMatchedQtyExWork("ExFlow Order No.","ExFlow Order Line No.",0);
                            END;
                             }

    { 1100285007;2;Field  ;
                CaptionML=[ENU=Matched Quantity (Posted Document);
                           SVE=Matchat antal (Bokf”rt Dokument)];
                DecimalPlaces=0:5;
                SourceExpr=TotalMatchedQty[3];
                Editable=False;
                OnDrillDown=BEGIN
                              ExFlow.DrillDownMatchedQtyPostInv("ExFlow Order No.","ExFlow Order Line No.");
                            END;
                             }

    { 1100285006;2;Field  ;
                CaptionML=[ENU=Matched Amount (Posted Document);
                           SVE=Matchat belopp (Bokf”rt Dokument)];
                DecimalPlaces=0:5;
                SourceExpr=TotalMatchedAmt[3];
                Editable=False;
                OnDrillDown=BEGIN
                              ExFlow.DrillDownMatchedQtyPostInv("ExFlow Order No.","ExFlow Order Line No.");
                            END;
                             }

    { 1100285012;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 1100285005;2;Field  ;
                SourceExpr="Job No.";
                Visible=FALSE }

    { 1100285004;2;Field  ;
                SourceExpr="Prod. Order No.";
                Visible=FALSE }

    { 1100285003;2;Field  ;
                SourceExpr="Expected Receipt Date";
                Visible=FALSE }

    { 1100285013;2;Field  ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 1100285016;2;Field  ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 1100285015;2;Field  ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 1100285014;2;Field  ;
                SourceExpr="Location Code";
                Visible=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ExPurchHeader@1100285008 : Record 12013587;
      PurchHeader@1100285007 : Record 38;
      PurchOrderHeader@1001 : Record 38;
      GetReceipts@1003 : Codeunit 12013608;
      ExFlow@1100285002 : Codeunit 12013601;
      GetReceiptsFromPO@1100285005 : Codeunit 12013630;
      TotalMatchedAmt@1100285006 : ARRAY [3] OF Decimal;
      TotalMatchedQty@1100285003 : ARRAY [3] OF Decimal;
      TotalMatchedAmtLCY@1100285000 : ARRAY [3] OF Decimal;

    PROCEDURE SetExPurchHeader@1(ExPurchHeader2@1000 : Record 12013587);
    BEGIN
      ExPurchHeader.GET(ExPurchHeader2."Inbound Document No.");
      ExPurchHeader.TESTFIELD("Document Type", ExPurchHeader."Document Type"::Invoice);
    END;

    PROCEDURE SetPurchHeader@3(PurchHeader2@1000 : Record 38);
    BEGIN
      PurchHeader.GET(PurchHeader2."Document Type",PurchHeader2."No.");
      PurchHeader.TESTFIELD("Document Type", PurchHeader."Document Type"::Invoice);
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    BEGIN
      CurrPage.SETSELECTIONFILTER(Rec);
      IF ExPurchHeader."Inbound Document No." <> 0 THEN
        GetReceipts.CreateInvLines(Rec,ExPurchHeader,TRUE)
      ELSE
        GetReceiptsFromPO.CreateInvLines(Rec,PurchHeader);
    END;

    BEGIN
    END.
  }
}

