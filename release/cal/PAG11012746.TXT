OBJECT Page 11012746 _Project Score MB
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[DEU=Tarifkomponente Ert„ge;
               ENU=Matrix;
               NLD=Matrix;
               NOR=Maskinordre, kostrad;
               SVE=Maskinorder, kostnadsrad];
    LinksAllowed=No;
    SourceTable=Table11012295;
    PageType=ListPart;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             // Use only when the matrix is editable
             //FieldEditable1 := TRUE;
             //...
             FieldVisible1 := TRUE;
             FieldVisible2 := TRUE;
             FieldVisible3 := TRUE;
             FieldVisible4 := TRUE;
             FieldVisible5 := TRUE;
             FieldVisible6 := TRUE;
             FieldVisible7 := TRUE;
             FieldVisible8 := TRUE;
             FieldVisible9 := TRUE;
             FieldVisible10 := TRUE;
             FieldVisible11 := TRUE;
             FieldVisible12 := TRUE;

             ShowDepartmentTotals := -1;
           END;

    OnOpenPage=BEGIN
                 PurchSetup.GET;
               END;

    OnAfterGetRecord=VAR
                       I@1100528700 : Integer;
                     BEGIN
                       FOR I := 1 TO MATRIX_CurrSetLength DO
                         MATRIX_OnAfterGetRecord(I);

                       // Use only when the matrix is editable
                       //FOR I := 1 TO ARRAYLEN(MATRIX_MatrixRecords) DO
                       //  MATRIX_SetFieldEditable(I);

                       TotalLine := ((Level = Level::Total) OR DepartmentTotalLevel());
                     END;

  }
  CONTROLS
  {
    { 1100528731;0;Container;
                ContainerType=ContentArea }

    { 1100528730;1;Group  ;
                GroupType=Repeater;
                FreezeColumnID=Score }

    { 1100529000;2;Field  ;
                SourceExpr=Department;
                Style=Strong;
                StyleExpr=TotalLine }

    { 1100529001;2;Field  ;
                SourceExpr="Department Name";
                Style=Strong;
                StyleExpr=TotalLine }

    { 1100529002;2;Field  ;
                SourceExpr=Criterion;
                Style=Strong;
                StyleExpr=TotalLine }

    { 1100529003;2;Field  ;
                SourceExpr=Description }

    { 1100525000;2;Field  ;
                Name=Score;
                CaptionML=[DEU=Punktzahl;
                           ENU=Score;
                           NLD=Score;
                           NOR=Poengsum;
                           SVE=Po„ng];
                SourceExpr=GetScore(FALSE, '');
                Style=Strong;
                StyleExpr=TotalLine;
                OnDrillDown=BEGIN
                              OnDrillDownScore(FALSE, '');
                            END;
                             }

    { 1100528701;2;Field  ;
                Name=Field1;
                DecimalPlaces=1:1;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[1];
                CaptionClass='3,' + MATRIX_CaptionSet[1];
                Visible=FieldVisible1;
                Editable=FieldEditable1;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(1);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(1);
                            END;
                             }

    { 1100528702;2;Field  ;
                Name=Field2;
                DecimalPlaces=1:1;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[2];
                CaptionClass='3,' + MATRIX_CaptionSet[2];
                Visible=FieldVisible2;
                Editable=FieldEditable2;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(2);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(2);
                            END;
                             }

    { 1100528703;2;Field  ;
                Name=Field3;
                DecimalPlaces=1:1;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[3];
                CaptionClass='3,' + MATRIX_CaptionSet[3];
                Visible=FieldVisible3;
                Editable=FieldEditable3;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(3);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(3);
                            END;
                             }

    { 1100528704;2;Field  ;
                Name=Field4;
                DecimalPlaces=1:1;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[4];
                CaptionClass='3,' + MATRIX_CaptionSet[4];
                Visible=FieldVisible4;
                Editable=FieldEditable4;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(4);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(4);
                            END;
                             }

    { 1100528705;2;Field  ;
                Name=Field5;
                DecimalPlaces=1:1;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[5];
                CaptionClass='3,' + MATRIX_CaptionSet[5];
                Visible=FieldVisible5;
                Editable=FieldEditable5;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(5);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(5);
                            END;
                             }

    { 1100528706;2;Field  ;
                Name=Field6;
                DecimalPlaces=1:1;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[6];
                CaptionClass='3,' + MATRIX_CaptionSet[6];
                Visible=FieldVisible6;
                Editable=FieldEditable6;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(6);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(6);
                            END;
                             }

    { 1100528707;2;Field  ;
                Name=Field7;
                DecimalPlaces=1:1;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[7];
                CaptionClass='3,' + MATRIX_CaptionSet[7];
                Visible=FieldVisible7;
                Editable=FieldEditable7;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(7);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(7);
                            END;
                             }

    { 1100528708;2;Field  ;
                Name=Field8;
                DecimalPlaces=1:1;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[8];
                CaptionClass='3,' + MATRIX_CaptionSet[8];
                Visible=FieldVisible8;
                Editable=FieldEditable8;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(8);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(8);
                            END;
                             }

    { 1100528709;2;Field  ;
                Name=Field9;
                DecimalPlaces=1:1;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[9];
                CaptionClass='3,' + MATRIX_CaptionSet[9];
                Visible=FieldVisible9;
                Editable=FieldEditable9;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(9);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(9);
                            END;
                             }

    { 1100528710;2;Field  ;
                Name=Field10;
                DecimalPlaces=1:1;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[10];
                CaptionClass='3,' + MATRIX_CaptionSet[10];
                Visible=FieldVisible10;
                Editable=FieldEditable10;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(10);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(10);
                            END;
                             }

    { 1100528711;2;Field  ;
                Name=Field11;
                DecimalPlaces=1:1;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[11];
                CaptionClass='3,' + MATRIX_CaptionSet[11];
                Visible=FieldVisible11;
                Editable=FieldEditable11;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(11);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(11);
                            END;
                             }

    { 1100528712;2;Field  ;
                Name=Field12;
                DecimalPlaces=1:1;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[12];
                CaptionClass='3,' + MATRIX_CaptionSet[12];
                Visible=FieldVisible12;
                Editable=FieldEditable12;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(12);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(12);
                            END;
                             }

  }
  CODE
  {
    VAR
      MATRIX_MatrixRecord@1100528723 : Record 11012292;
      MATRIX_MatrixRecords@1100528722 : ARRAY [32] OF Record 11012292;
      MATRIX_CaptionSet@1100528718 : ARRAY [32] OF Text[80];
      MATRIX_CurrSetLength@1100528716 : Integer;
      MATRIX_CellData@1100528715 : ARRAY [32] OF Decimal;
      FieldEditable1@1100528711 : Boolean INDATASET;
      FieldEditable2@1100528710 : Boolean INDATASET;
      FieldEditable3@1100528709 : Boolean INDATASET;
      FieldEditable4@1100528708 : Boolean INDATASET;
      FieldEditable5@1100528707 : Boolean INDATASET;
      FieldEditable6@1100528706 : Boolean INDATASET;
      FieldEditable7@1100528705 : Boolean INDATASET;
      FieldEditable8@1100528704 : Boolean INDATASET;
      FieldEditable9@1100528703 : Boolean INDATASET;
      FieldEditable10@1100528702 : Boolean INDATASET;
      FieldEditable11@1100528701 : Boolean INDATASET;
      FieldEditable12@1100528700 : Boolean INDATASET;
      FieldVisible1@1100409007 : Boolean INDATASET;
      FieldVisible2@1100409006 : Boolean INDATASET;
      FieldVisible3@1100409005 : Boolean INDATASET;
      FieldVisible4@1100409004 : Boolean INDATASET;
      FieldVisible5@1100409003 : Boolean INDATASET;
      FieldVisible6@1100409002 : Boolean INDATASET;
      FieldVisible7@1100409001 : Boolean INDATASET;
      FieldVisible8@1100409000 : Boolean INDATASET;
      FieldVisible9@1100409008 : Boolean INDATASET;
      FieldVisible10@1100409009 : Boolean INDATASET;
      FieldVisible11@1100409010 : Boolean INDATASET;
      FieldVisible12@1100409011 : Boolean INDATASET;
      PurchSetup@1100529001 : Record 312;
      ShowDepartmentTotals@1100529000 : 'No,Yes,Only';
      TotalLine@1100525002 : Boolean INDATASET;
      AssDate@1100525003 : Date;
      PrevAssDate@1100525000 : Date;
      ProjNo@1100525004 : Code[20];
      PrevProjNo@1100525001 : Code[20];

    PROCEDURE Load@1132(VAR CaptionSet@1005 : ARRAY [32] OF Text[80];VAR MatrixRecords@1006 : ARRAY [32] OF Record 11012292;CurrSetLength@1007 : Integer;ProjectNo@1100525001 : Code[20];AssesmentDate@1100525000 : Date;ShowDepartmentTotals2@1100529000 : Option);
    BEGIN
      CLEAR(MATRIX_CellData);
      COPYARRAY(MATRIX_CaptionSet, CaptionSet, 1);
      COPYARRAY(MATRIX_MatrixRecords, MatrixRecords, 1);

      MATRIX_CurrSetLength := CurrSetLength;

      MATRIX_SetFieldVisible;

      ProjNo := ProjectNo;
      AssDate := AssesmentDate;
      IF ShowDepartmentTotals <> ShowDepartmentTotals2 THEN BEGIN
        ShowDepartmentTotals := ShowDepartmentTotals2;
        FILTERGROUP(9);
        CASE ShowDepartmentTotals OF
          ShowDepartmentTotals::No:
            BEGIN
              SETFILTER(Level, '%1|%2', Level::Criterion, Level::Total);
              SETRANGE("Sub Total Sort Code", '');
            END;
          ShowDepartmentTotals::Yes:
            BEGIN
              SETFILTER(Level, '%1|%2', Level::Criterion, Level::Total);
              SETRANGE("Sub Total Sort Code");  // Reset filter
            END;
          ShowDepartmentTotals::Only:
            BEGIN
              SETFILTER(Level, '%1|%2', Level::Department, Level::Total);
              SETRANGE("Sub Total Sort Code", '');
            END;
        END;
        FILTERGROUP(0);
      END;
      BuildTmpTable();
    END;

    LOCAL PROCEDURE MATRIX_OnAfterGetRecord@1135(ColumnNo@1010 : Integer);
    BEGIN
      MATRIX_MatrixRecord := MATRIX_MatrixRecords[ColumnNo];

      MATRIX_CellData[ColumnNo] :=
        GetScore(TRUE, MATRIX_MatrixRecord."Vendor No.");
    END;

    LOCAL PROCEDURE MATRIX_OnValidate@1100525001(ColumnNo@1008 : Integer);
    BEGIN
      MATRIX_UpdateCell(ColumnNo);
    END;

    LOCAL PROCEDURE MATRIX_OnLookup@1100528701(ColumnNo@1100409000 : Integer);
    BEGIN
    END;

    LOCAL PROCEDURE MATRIX_OnDrillDown@1100409000(ColumnNo@1100409000 : Integer);
    BEGIN
      MATRIX_MatrixRecord := MATRIX_MatrixRecords[ColumnNo];
      OnDrillDownScore(TRUE, MATRIX_MatrixRecord."Vendor No.");
    END;

    LOCAL PROCEDURE MATRIX_OnAssistEdit@1100409001(ColumnNo@1100409000 : Integer);
    BEGIN
    END;

    LOCAL PROCEDURE MATRIX_UpdateCell@1100485007(ColumnNo@1100528701 : Integer);
    BEGIN
      MATRIX_MatrixRecord := MATRIX_MatrixRecords[ColumnNo];
    END;

    LOCAL PROCEDURE MATRIX_SetFieldEditable@1100528700(ColumnNo@1100528700 : Integer);
    BEGIN
      // Use only when the matrix is editable
    END;

    LOCAL PROCEDURE MATRIX_SetFieldVisible@1100409002();
    BEGIN
      // Use only when the matrix contains checkboxes
    END;

    LOCAL PROCEDURE BuildTmpTable@1100525000();
    VAR
      AssCrit@1100525002 : Record 11012291;
      VendAssLine@1100525003 : Record 11012293;
      SaveRec@1100525000 : Record 11012295;
      OK@1100525004 : Boolean;
      PrevDepartment@1100525005 : Code[10];
    BEGIN
      // Note: Rec is (must be!) temporary (property SourceTableTemporary is Yes)
      IF (ProjNo = PrevProjNo) AND (AssDate = PrevAssDate) THEN
        EXIT;
      PrevProjNo := ProjNo;
      PrevAssDate := AssDate;
      SaveRec.COPY(Rec);  // Save filters of Rec
      RESET;
      DELETEALL;
      COPY(SaveRec);   // Restore filters of Rec
      INIT;
      Level := Level::Total;
      Department := COPYSTR(FORMAT(Level), 1, MAXSTRLEN(Department));
      "Sub Total Sort Code" := '';
      Criterion := '';
      //Score := GetScore(FALSE, '');
      INSERT;
      IF AssCrit.FINDSET THEN BEGIN
        REPEAT
          OK := AssCrit.Mandatory;
          IF NOT OK THEN BEGIN
            VendAssLine.SETRANGE("Project No.", ProjNo);
            VendAssLine.SETRANGE(Date, AssDate);
            VendAssLine.SETRANGE(Department, AssCrit.Department);
            VendAssLine.SETRANGE(Criterion, AssCrit.Criterion);
            OK := NOT VendAssLine.ISEMPTY;
          END;
          IF OK THEN BEGIN
            AssCrit.CALCFIELDS("Department Name");
            IF AssCrit.Department <> PrevDepartment THEN BEGIN
              PrevDepartment := AssCrit.Department;
              INIT;
              Level := Level::Department;
              Department := AssCrit.Department;
              "Sub Total Sort Code" := '';
              "Department Name" := AssCrit."Department Name";
              Criterion := '';
              //Score := GetScore(FALSE, '');
              INSERT;
              Level := Level::Criterion;  // With 'Sub Total Sort Code' filled is 'Deparment Total', so level 'Deparment'
              "Sub Total Sort Code" := SubTotalSortCode();
              Criterion := COPYSTR(FORMAT(Level::Total), 1, MAXSTRLEN(Criterion));
              INSERT;
            END;
            INIT;
            Level := Level::Criterion;
            Department := AssCrit.Department;
            "Sub Total Sort Code" := '';
            "Department Name" := AssCrit."Department Name";
            Criterion := AssCrit.Criterion;
            Description := AssCrit.Description;
            //Score := GetScore(FALSE, '');
            INSERT;
          END;
        UNTIL AssCrit.NEXT = 0;
      END;
      FINDFIRST;  // There is always a total record
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE GetScore@1210190003(MatrixCellLevel@1100525002 : Boolean;VendNo@1100529003 : Code[20]) : Decimal;
    VAR
      VendAssLine@1100529000 : Record 11012293;
      TotalScore@1100525000 : Decimal;
      MaxScore@1100525001 : Decimal;
    BEGIN
      IF MatrixCellLevel AND (Level = Level::Criterion) AND (NOT DepartmentTotalLevel()) THEN BEGIN
        IF VendAssLine.GET(ProjNo, AssDate, VendNo, Department, Criterion) THEN  // Ass. Line Level
          EXIT(VendAssLine.Score);
        EXIT(0);
      END;
      SetScoreFiltersAssLine(VendAssLine, MatrixCellLevel, VendNo);
      IF VendAssLine.FINDSET THEN BEGIN
        REPEAT
          TotalScore := TotalScore + (VendAssLine."Weight Factor" * VendAssLine.Score);
          MaxScore := MaxScore + (VendAssLine."Weight Factor" * PurchSetup."Max. Score Assessment");
        UNTIL VendAssLine.NEXT = 0;
      END;

      IF MaxScore = 0 THEN
        EXIT(0);
      EXIT(ROUND((TotalScore / MaxScore * PurchSetup."Max. Score Assessment"), 0.1));
    END;

    PROCEDURE OnDrillDownScore@1100525005(MatrixCellLevel@1100525001 : Boolean;VendNo@1100525000 : Code[20]);
    VAR
      VendAssLine@1100525002 : Record 11012293;
    BEGIN
      SetScoreFiltersAssLine(VendAssLine, MatrixCellLevel, VendNo);
      PAGE.RUNMODAL(PAGE::"Vendor Assessment Line List", VendAssLine);
    END;

    PROCEDURE SetScoreFiltersAssLine@1100525002(VAR VendAssLine@1100525000 : Record 11012293;MatrixCellLevel@1100525002 : Boolean;VendNo@1100525001 : Code[20]);
    BEGIN
      // MatrixCellLevel: FALSE=Score for Line
      //   ScoreLevel: Department=Proj/Date/Dep, Criterion=Proj/Date/Dep/Crit, Total=Proj/Date
      // MatrixCellLevel: TRUE=Score for Matrix Cell
      //   ScoreLevel: Department=Proj/Date/Dep/Vendr, Criterion=Proj/Date/Dep/Crit/Vend(=Ass.Line Level), Total=Proj/Date/Vend
      VendAssLine.SETRANGE("Project No.", ProjNo);
      VendAssLine.SETRANGE(Date, AssDate);
      IF MatrixCellLevel THEN
        VendAssLine.SETRANGE("Vendor No.", VendNo);
      IF (Level = Level::Department) OR  (Level = Level::Criterion) THEN  // Or DepartmentTotalLevel, but then Level=Criterion
        VendAssLine.SETRANGE(Department, Department);
      IF (Level = Level::Criterion) AND (NOT DepartmentTotalLevel()) THEN
        VendAssLine.SETRANGE(Criterion, Criterion);
      VendAssLine.SETFILTER(Score, '<>%1', 0);
    END;

    LOCAL PROCEDURE DepartmentTotalLevel@1100525004() : Boolean;
    BEGIN
      EXIT((Level = Level::Criterion) AND ("Sub Total Sort Code" = SubTotalSortCode()));
    END;

    LOCAL PROCEDURE SubTotalSortCode@1100525003() : Code[1];
    BEGIN
      EXIT('T');  //Value not important must be unequal to empty
    END;

    BEGIN
    {
      Rec is temporary, the property SourceTableTemporary is Yes
    }
    END.
  }
}

