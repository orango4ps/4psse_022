OBJECT Table 11012561 Exit Order Cost Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               GetOrderHeader;
               OrderRec.TESTFIELD(Posted,FALSE);
             END;

    OnModify=BEGIN
               GetOrderHeader;
               OrderRec.TESTFIELD(Posted,FALSE);
             END;

    OnDelete=BEGIN
               GetOrderHeader;
               OrderRec.TESTFIELD(Posted,FALSE);
             END;

    OnRename=BEGIN
               GetOrderHeader;
               OrderRec.TESTFIELD(Posted,FALSE);
             END;

    CaptionML=[ENU=Exit Order Cost Line;
               NOR=Sluttordre, Kostrad;
               SVE=Slutorder, kostnadsrad];
    DrillDownPageID=Page11125928;
  }
  FIELDS
  {
    { 10  ;   ;Exit-order No.      ;Code20        ;TableRelation="Exit Order".No.;
                                                   CaptionML=[ENU=Exit Order No.;
                                                              NOR=Sluttordrenr;
                                                              SVE=Slutordernr] }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 30  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                TempOrderLine := Rec;
                                                                INIT;
                                                                Type := TempOrderLine.Type;
                                                                "Exit-date" := TempOrderLine."Exit-date";

                                                                IF Type > Type::Text THEN BEGIN
                                                                  DimValRec.SETFILTER("Global Dimension No.", '2');
                                                                  DimValRec.SETRANGE(Plant, Type);
                                                                  IF DimValRec.COUNT = 1 THEN BEGIN
                                                                    DimValRec.FIND('-');
                                                                    VALIDATE("No.", DimValRec.Code);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=Text,Hours,Transport,Sundry Costs,Damage;
                                                                    NOR=Tekst,Timer,Transport,Diversekoster,Skade;
                                                                    SVE=Text,Timmar,Transport,Diverse kostnader,Skada];
                                                   OptionString=Text,Hours,Transport,Sundry Costs,Damage }
    { 40  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Text)) "Standard Text"
                                                                 ELSE IF (Type=CONST(Hours)) "Dimension Value".Code WHERE (Plant=CONST(Hours),
                                                                                                                           Global Dimension No.=CONST(2))
                                                                                                                           ELSE IF (Type=CONST(Transport)) "Dimension Value".Code WHERE (Plant=CONST(Transport),
                                                                                                                                                                                         Global Dimension No.=CONST(2))
                                                                                                                                                                                         ELSE IF (Type=CONST(Sundry Costs)) "Dimension Value".Code WHERE (Plant=CONST(Sundry),
                                                                                                                                                                                                                                                          Global Dimension No.=CONST(2))
                                                                                                                                                                                                                                                          ELSE IF (Type=CONST(Damage)) "Dimension Value".Code WHERE (Plant=CONST(Damage),
                                                                                                                                                                                                                                                                                                                     Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                IF "No." <> '' THEN
                                                                  CASE Type OF
                                                                    Type::Text:
                                                                      BEGIN
                                                                        StandardText.GET("No.");
                                                                        Description := StandardText.Description;
                                                                      END;
                                                                    ELSE BEGIN
                                                                      DimMgt.GetDimValueRec(2,"No.",DimValRec,TRUE,'');
                                                                      IF ((NOT PlantBasedDamage()) OR ("Plant Type" = '')) AND (NOT PlantDamageCodeBased) THEN BEGIN  //DP00559.n (C005755)
                                                                        Description := DimValRec.Name;
                                                                        "Unit of Measure" := DimValRec."Unit of Measure";
                                                                        VALIDATE(Price,DimValRec."Sales Price");
                                                                      END;
                                                                    END;
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 50  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 60  ;   ;Exit-date           ;Date          ;CaptionML=[ENU=Exit-date;
                                                              NOR=Sluttdato;
                                                              SVE=Avsluta-datum] }
    { 70  ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   OnValidate=BEGIN
                                                                IF ("Unit of Measure" <> '') AND (Type = Type::Text) THEN
                                                                  FIELDERROR(Price);
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=Enhet;
                                                              SVE=M†ttenhet] }
    { 80  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                IF (Quantity <> 0) AND (Type = Type::Text) THEN
                                                                  FIELDERROR(Quantity);

                                                                VALIDATE(Price);
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 90  ;   ;Price               ;Decimal       ;OnValidate=BEGIN
                                                                IF (Price <> 0) AND (Type = Type::Text) THEN
                                                                  FIELDERROR(Price);

                                                                GLSetup.GET;
                                                                Amount := ROUND(Quantity * Price,GLSetup."Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Price;
                                                              NOR=Pris;
                                                              SVE=Pris];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 100 ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                IF (Amount <> 0) THEN BEGIN
                                                                  IF (Type = Type::Text) THEN
                                                                    FIELDERROR(Amount);
                                                                  TESTFIELD(Quantity);
                                                                END;

                                                                IF Quantity <> 0 THEN
                                                                  Price := Amount / Quantity
                                                                ELSE
                                                                  Price := Amount;

                                                                GLSetup.GET;
                                                                Price := ROUND(Price,GLSetup."Unit-Amount Rounding Precision")
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 110 ;   ;Order Plant Amount  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Exit Order Line".Amount WHERE (Exit-order No.=FIELD(Exit-order No.)));
                                                   CaptionML=[ENU=Plant Amount;
                                                              NOR=Maskinbel›p;
                                                              SVE=Maskin belopp];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 115 ;   ;Order Cost Amount   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Exit Order Cost Line".Amount WHERE (Exit-order No.=FIELD(Exit-order No.)));
                                                   CaptionML=[ENU=Cost Amount;
                                                              NOR=Kostbel›p;
                                                              SVE=Kostnadsbelopp];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 120 ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   OnValidate=VAR
                                                                PlantType@1100409000 : Record 11012551;
                                                              BEGIN
                                                                //DP00241 (19918)
                                                                IF ("Plant Type" <> '') AND (Type = Type::Text) THEN
                                                                  FIELDERROR(Type);

                                                                CALCFIELDS(Bulk);

                                                                IF "Plant Type" <> xRec."Plant Type" THEN BEGIN
                                                                  "Plant No." := '';
                                                                  "Damage Code" := '';
                                                                END;

                                                                //DP00559.sn (C005755)
                                                                IF ("Plant Type" <> '') AND PlantBasedDamage() AND (NOT PlantDamageCodeBased) THEN BEGIN
                                                                  PlantType.GET("Plant Type");
                                                                  "Unit of Measure" := PlantType."Unit of Measure";
                                                                  PlantSetup.GET;
                                                                  IF (PlantSetup."Default % Purch. Price Damage" > 0) THEN
                                                                    VALIDATE(Price, ROUND(PlantSetup."Default % Purch. Price Damage" * PlantType."Current Price" /100));
                                                                  Description := GetPlantDescription;
                                                                END;
                                                                //DP00559.en
                                                              END;

                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp] }
    { 125 ;   ;Plant No.           ;Code10        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   OnValidate=BEGIN
                                                                //DP00241 (19918)
                                                                IF "Plant No." = '' THEN
                                                                  EXIT;

                                                                TESTFIELD("Plant Type");

                                                                IF ("Plant Type" <> '') AND ("Plant No." <> '') AND PlantBasedDamage() THEN
                                                                  Description := GetPlantDescription;
                                                              END;

                                                   CaptionML=[ENU=Plant No.;
                                                              NOR=Maskinnr.;
                                                              SVE=Maskinnr] }
    { 130 ;   ;Bulk                ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type".Bulk WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=[ENU=Bulk;
                                                              NOR=Bulk;
                                                              SVE=Bulk];
                                                   Editable=No }
    { 140 ;   ;Element             ;Code20        ;OnValidate=BEGIN
                                                                //*C005404.n
                                                                IF Element = '' THEN
                                                                  EXIT;
                                                                IF Type = Type::Text THEN
                                                                  FIELDERROR(Type);
                                                                GetOrderHeader();
                                                                OrderRec.TESTFIELD(Location);
                                                                PlantElementMgt.OnValidateElement(OrderRec.Location, Element, '', FALSE);
                                                              END;

                                                   OnLookup=VAR
                                                              EditableMode@1100525001 : Boolean;
                                                              NewElement@1100525000 : Code[20];
                                                            BEGIN
                                                              //*C005404.n
                                                              GetOrderHeader();
                                                              EditableMode := ((NOT OrderRec.Posted) AND (Type <> Type::Text));
                                                              NewElement := PlantElementMgt.OnLookupElement(OrderRec.Location, Element, '', EditableMode);
                                                              IF (NewElement <> '') AND (NewElement <> Element) THEN
                                                                VALIDATE(Element, NewElement);
                                                            END;

                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 150 ;   ;Damage Code         ;Code10        ;TableRelation=IF (Type=CONST(Damage)) "Plant Type Damage Code".Code WHERE (Plant Type=FIELD(Plant Type));
                                                   OnValidate=VAR
                                                                PlantTypeDamageCode@1100529000 : Record 11229920;
                                                              BEGIN
                                                                IF "Damage Code" <> '' THEN BEGIN
                                                                  TESTFIELD(Type, Type::Damage);
                                                                  TESTFIELD("Plant Type");
                                                                  PlantTypeDamageCode.GET("Plant Type", "Damage Code");
                                                                  Description := PlantTypeDamageCode.Description;
                                                                  "Unit of Measure" := PlantTypeDamageCode."Unit of Measure";
                                                                  VALIDATE(Price,PlantTypeDamageCode.Price);
                                                                END ELSE BEGIN
                                                                  IF xRec."Damage Code" <> '' THEN BEGIN
                                                                    IF PlantBasedDamage() AND ("Plant Type" <> '') THEN
                                                                      VALIDATE("Plant Type")
                                                                    ELSE BEGIN
                                                                      IF "No." <> '' THEN
                                                                        VALIDATE("No.");
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Damage Code }
    { 800 ;   ;Plant Group         ;Code20        ;TableRelation="Plant Group";
                                                   CaptionML=ENU=Plant Group }
  }
  KEYS
  {
    {    ;Exit-order No.,Line No.                 ;SumIndexFields=Amount;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GLSetup@11012000 : Record 98;
      PlantSetup@1100409000 : Record 11012550;
      OrderRec@11012001 : Record 11012559;
      StandardText@11012002 : Record 7;
      DimValRec@11012003 : Record 349;
      TempOrderLine@11012004 : Record 11012561;
      DimMgt@1210190000 : Codeunit 408;
      PlantElementMgt@1100409001 : Codeunit 11012582;

    PROCEDURE InitRecord@2();
    BEGIN
      IF OrderRec.GET("Exit-order No.") THEN
        "Exit-date" := OrderRec."Exit-date";
    END;

    PROCEDURE GetOrderHeader@5();
    BEGIN
      TESTFIELD("Exit-order No.");
      IF ("Exit-order No." <> OrderRec."No.") THEN
        OrderRec.GET("Exit-order No.");
    END;

    PROCEDURE GetPlantDescription@1100529000() : Text[100];
    VAR
      PlantType@1100529000 : Record 11012551;
      PlantNumber@1100529001 : Record 11012552;
    BEGIN
      //DP00241 (19918)
      IF "Plant Type" <> '' THEN BEGIN
        IF "Plant No." <> '' THEN BEGIN
          IF PlantNumber.GET("Plant Type", "Plant No.") THEN
            EXIT(PlantNumber.Description)
        END;
        IF PlantType.GET("Plant Type") THEN
          EXIT(PlantType.Description)
      END;
      EXIT('');
    END;

    PROCEDURE PlantBasedDamage@1100525003() : Boolean;
    BEGIN
      //DP00559 (C005755)
      IF Type = Type::Damage THEN BEGIN
        PlantSetup.GET;
        IF PlantSetup."Damage Cost PO Based on" = PlantSetup."Damage Cost PO Based on"::Plant THEN
          EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE PlantDamageCodeBased@1100529002() : Boolean;
    BEGIN
      IF (Type = Type::Damage) AND ("Damage Code" <> '') THEN
        EXIT(TRUE);
      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

