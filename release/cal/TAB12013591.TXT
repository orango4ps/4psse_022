OBJECT Table 12013591 Exflow BLOB
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF500000;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnInsert=VAR
               ExfBlob2@1100285001 : Record 12013591;
             BEGIN
               ExfBlob2.RESET;
               ExfBlob2.LOCKTABLE;
               IF ExfBlob2.FINDLAST THEN
                 "No." := ExfBlob2."No." + 1
               ELSE
                 "No." := 1;
             END;

    CaptionML=[ENU=ExFlow Blob;
               SVE=ExFlow Blob];
    LookupPageID=Page12057074;
    DrillDownPageID=Page12057074;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Integer       ;CaptionML=[ENU=No.;
                                                              SVE=Nr.] }
    { 2   ;   ;BLOB                ;BLOB          ;CaptionML=[ENU=Blob;
                                                              SVE=Blob] }
    { 5   ;   ;File Extension      ;Text250       ;CaptionML=[ENU=File Extension;
                                                              SVE=Filtyp] }
    { 190030; ;External Primary Key;Code50        ;CaptionML=[ENU=External Primary Key;
                                                              SVE=Extern prim„rnyckel];
                                                   Description=704 }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EXF100@1100285000 : TextConst 'ENU=Export Attachment;SVE=Exportera bilaga';
      ExflowFileMgmt@1100285004 : Codeunit 12013602;

    PROCEDURE ExportBLOB@2(ExportToFile@1000 : Text[260];ExportToServer@1100285000 : Boolean) : Boolean;
    VAR
      FileName@1002 : Text[260];
      FileFilter@1003 : Text[260];
      ServerFilePath@1100285001 : Text[1024];
    BEGIN
      CALCFIELDS(BLOB);
      IF BLOB.HASVALUE THEN BEGIN
        IF ExportToServer THEN BEGIN
          FileName := ExflowFileMgmt.ClientTempFileName(ExflowFileMgmt.GetFileName(ExportToFile),'');
          ExflowFileMgmt.ExportBLOB(Rec,FileName);
          ServerFilePath := ExflowFileMgmt.Path(ExportToFile);

          UPLOAD('',ExflowFileMgmt.Path(FileName),'',ExflowFileMgmt.GetFileName(FileName),ServerFilePath);
        END
        ELSE BEGIN
          IF ExportToFile = '' THEN BEGIN
            FileFilter := UPPERCASE("File Extension") + ' ';
            FileFilter := FileFilter + '(*.' + "File Extension" + ')|*.' + "File Extension";
            ExflowFileMgmt.FileNameFromDialog(FileName,EXF100,4,FileFilter,1);
          END
          ELSE
            FileName := ExportToFile;

          IF FileName <> '' THEN BEGIN
            ExflowFileMgmt.ExportBLOB(Rec,FileName);

            EXIT(TRUE);
          END
          ELSE
            EXIT(FALSE);
        END;
      END
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE ExportAndShowBLOB@1100285000(ExportToFile@1000 : Text[260]) : Boolean;
    VAR
      FileName@1002 : Text[260];
      FileFilter@1003 : Text[260];
    BEGIN
      CALCFIELDS(BLOB);
      IF BLOB.HASVALUE THEN BEGIN
        IF ExportToFile = '' THEN BEGIN
          FileFilter := UPPERCASE("File Extension") + ' ';
          FileFilter := FileFilter + '(*.' + "File Extension" + ')|*.' + "File Extension";
          ExflowFileMgmt.FileNameFromDialog(FileName,EXF100,4,FileFilter,1);
        END ELSE
          FileName := ExportToFile;

        IF FileName <> '' THEN BEGIN
          ExflowFileMgmt.ShowBLOB(Rec,FileName);
          EXIT(TRUE);
        END
        ELSE
          EXIT(FALSE);
      END
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE ImportBLOB@5(ImportFromFile@1000 : Text[1024];VAR RetBlobNo@1100285000 : Integer;VAR RetFileName@1100285001 : Text[1024]) : Boolean;
    VAR
      ExfFileMgt@1100285002 : Codeunit 12013602;
      FileName@1005 : Text[1024];
      NewBlobNo@1100285003 : Integer;
    BEGIN
      IF ImportFromFile = '' THEN
        ExfFileMgt.FileNameFromDialog(FileName,'',0,'',0)
      ELSE
        FileName := ImportFromFile;

      IF FileName = '' THEN
        EXIT;

      IF (FileName <> '') AND (RetBlobNo = 0) THEN BEGIN
        IF "No." = 0 THEN
          NewBlobNo := ExfFileMgt.InsertBLOB
        ELSE
          NewBlobNo := "No.";

        GET(NewBlobNo);
        ExflowFileMgmt.ImportBLOB(Rec,FileName);
        "File Extension" := UPPERCASE(FileExtension(FileName));
        MODIFY;
      END ELSE BEGIN
        NewBlobNo := RetBlobNo;
        GET(RetBlobNo);
        ExflowFileMgmt.ImportBLOB(Rec,FileName);
        "File Extension" := UPPERCASE(FileExtension(FileName));
        MODIFY;
      END;

      RetBlobNo := NewBlobNo;
      RetFileName := FileName;
    END;

    PROCEDURE FileExtension@4(FileName@1001 : Text[1024]) Extension@1000 : Text[1024];
    VAR
      I@1002 : Integer;
    BEGIN
      I := STRLEN(FileName);
      WHILE COPYSTR(FileName,I,1) <> '.' DO
        I := I - 1;

      Extension := COPYSTR(FileName,I + 1,STRLEN(FileName) - I);
    END;

    PROCEDURE ShowBLOB@6();
    VAR
      FileName@1005 : Text[260];
    BEGIN
      FileName := ConstFilename;
      //342565
      IF UPPERCASE(COPYSTR(FileName, (STRLEN(FileName)-2))) <> UPPERCASE("File Extension") THEN
        FileName := FileName + '.' + "File Extension";
      //342565
      ExportAndShowBLOB(FileName);
    END;

    LOCAL PROCEDURE ConstFilename@9() FileName@1000 : Text[260];
    VAR
      ExFPurchImportHeader@1100285000 : Record 12013587;
      TempFileName@1100285001 : Text[1024];
    BEGIN
      //342584
      ExFPurchImportHeader.SETRANGE("Image Buffer ID", "No.");
      IF ExFPurchImportHeader.FINDFIRST THEN
        FileName := ExflowFileMgmt.GetFileName(ExFPurchImportHeader."Image File Name");

      IF FileName = '' THEN
        FileName := ExflowFileMgmt.GetFileName(ExflowFileMgmt.ClientTempFileName(CREATEGUID,"File Extension"));
    END;

    BEGIN
    END.
  }
}

