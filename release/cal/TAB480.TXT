OBJECT Table 480 Dimension Set Entry
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 480=ri,
                TableData 481=rim;
    OnInsert=BEGIN
               IF (ReceivingCompany <> "Company Filter") AND ("Company Filter" <> '')  THEN  //**4PS n RC2013
                 SetCompany("Company Filter");                                               //**4PS n RC2013

               IF DimVal.GET("Dimension Code","Dimension Value Code") THEN
                 "Dimension Value ID" := DimVal."Dimension Value ID"
               ELSE
                 "Dimension Value ID" := 0;
             END;

    OnModify=BEGIN
               IF (ReceivingCompany <> "Company Filter") AND ("Company Filter" <> '')  THEN  //**4PS n RC2013
                 SetCompany("Company Filter");                                               //**4PS n RC2013

               IF DimVal.GET("Dimension Code","Dimension Value Code") THEN
                 "Dimension Value ID" := DimVal."Dimension Value ID"
               ELSE
                 "Dimension Value ID" := 0;
             END;

    CaptionML=[ENU=Dimension Set Entry;
               NOR=Dimensjonssettpost;
               SVE=Dimensionsupps„ttnings transaktion];
    LookupPageID=Page479;
    DrillDownPageID=Page479;
  }
  FIELDS
  {
    { 1   ;   ;Dimension Set ID    ;Integer       ;CaptionML=[ENU=Dimension Set ID;
                                                              NOR=Dimensjonssett-ID;
                                                              SVE=Dimensionsupps„ttnings-ID] }
    { 2   ;   ;Dimension Code      ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF NOT DimMgt.CheckDim("Dimension Code") THEN
                                                                  ERROR(DimMgt.GetDimErr);
                                                                IF "Dimension Code" <> xRec."Dimension Code" THEN BEGIN
                                                                  "Dimension Value Code" := '';
                                                                  "Dimension Value ID" := 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Dimension Code;
                                                              NOR=Dimensjonskode;
                                                              SVE=Dimensionskod];
                                                   NotBlank=Yes }
    { 3   ;   ;Dimension Value Code;Code20        ;TableRelation=IF (Company Filter=FILTER('')) "Dimension Value".Code WHERE (Dimension Code=FIELD(Dimension Code));
                                                   OnValidate=BEGIN
                                                                IF (ReceivingCompany <> "Company Filter") AND ("Company Filter" <> '')  THEN  //**4PS n RC2013
                                                                  SetCompany("Company Filter");                                               //**4PS n RC2013

                                                                IF NOT DimMgt.CheckDimValue("Dimension Code","Dimension Value Code") THEN
                                                                  ERROR(DimMgt.GetDimErr);

                                                                DimVal.GET("Dimension Code","Dimension Value Code");
                                                                "Dimension Value ID" := DimVal."Dimension Value ID";
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupDimensionValueCode; //**4PS.n
                                                            END;

                                                   CaptionML=[ENU=Dimension Value Code;
                                                              NOR=Dimensjonsverdikode;
                                                              SVE=Dimensionsv„rdekod];
                                                   NotBlank=Yes }
    { 4   ;   ;Dimension Value ID  ;Integer       ;CaptionML=[ENU=Dimension Value ID;
                                                              NOR=Dimensjonsverdi-ID;
                                                              SVE=Dimensionsv„rde-ID] }
    { 5   ;   ;Dimension Name      ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Dimension.Name WHERE (Code=FIELD(Dimension Code)));
                                                   CaptionML=[ENU=Dimension Name;
                                                              NOR=Dimensjonsnavn;
                                                              SVE=Dimensionsnamn];
                                                   Editable=No }
    { 6   ;   ;Dimension Value Name;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dimension Value".Name WHERE (Dimension Code=FIELD(Dimension Code),
                                                                                                    Code=FIELD(Dimension Value Code)));
                                                   CaptionML=[ENU=Dimension Value Name;
                                                              NOR=Navn p† dimensjonsverdi;
                                                              SVE=Dimensionsv„rdesnamn];
                                                   Editable=No }
    { 11012000;;Company Filter     ;Text80        ;FieldClass=Normal;
                                                   CaptionML=[ENU=Company Filter;
                                                              SVE=F”retagsfilter] }
  }
  KEYS
  {
    {    ;Dimension Set ID,Dimension Code         ;Clustered=Yes }
    {    ;Dimension Value ID                       }
    {    ;Dimension Code,Dimension Value Code,Dimension Set ID }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DimVal@1000 : Record 349;
      DimMgt@1001 : Codeunit 408;
      ReceivingCompany@1100525000 : Text[80];

    [External]
    PROCEDURE GetDimensionSetID@3(VAR DimSetEntry@1000 : Record 480) : Integer;
    VAR
      DimSetEntry2@1001 : Record 480;
      DimSetTreeNode@1002 : Record 481;
      Found@1003 : Boolean;
    BEGIN
      OnBeforeGetDimensionSetID(DimSetEntry);

      //**4PS.sn
      IF ReceivingCompany <> '' THEN BEGIN
        DimSetEntry2.CHANGECOMPANY(ReceivingCompany);
        DimSetTreeNode.CHANGECOMPANY(ReceivingCompany);
      END;
      //**4PS.en

      DimSetEntry2.COPY(DimSetEntry);
      IF DimSetEntry."Dimension Set ID" > 0 THEN
        DimSetEntry.SETRANGE("Dimension Set ID",DimSetEntry."Dimension Set ID");

      DimSetEntry.SETCURRENTKEY("Dimension Value ID");
      DimSetEntry.SETFILTER("Dimension Code",'<>%1','');
      DimSetEntry.SETFILTER("Dimension Value Code",'<>%1','');

      IF NOT DimSetEntry.FINDSET THEN
        EXIT(0);

      Found := TRUE;
      DimSetTreeNode."Dimension Set ID" := 0;
      REPEAT
        DimSetEntry.TESTFIELD("Dimension Value ID");
        IF Found THEN
          IF NOT DimSetTreeNode.GET(DimSetTreeNode."Dimension Set ID",DimSetEntry."Dimension Value ID") THEN BEGIN
            Found := FALSE;
            DimSetTreeNode.LOCKTABLE;
          END;
        IF NOT Found THEN BEGIN
          DimSetTreeNode."Parent Dimension Set ID" := DimSetTreeNode."Dimension Set ID";
          DimSetTreeNode."Dimension Value ID" := DimSetEntry."Dimension Value ID";
          DimSetTreeNode."Dimension Set ID" := 0;
          DimSetTreeNode."In Use" := FALSE;
          IF NOT DimSetTreeNode.INSERT(TRUE) THEN
            DimSetTreeNode.GET(DimSetTreeNode."Parent Dimension Set ID",DimSetTreeNode."Dimension Value ID");
        END;
      UNTIL DimSetEntry.NEXT = 0;
      IF NOT DimSetTreeNode."In Use" THEN BEGIN
        IF Found THEN BEGIN
          DimSetTreeNode.LOCKTABLE;
          DimSetTreeNode.GET(DimSetTreeNode."Parent Dimension Set ID",DimSetTreeNode."Dimension Value ID");
        END;
        DimSetTreeNode."In Use" := TRUE;
        DimSetTreeNode.MODIFY;
        InsertDimSetEntries(DimSetEntry,DimSetTreeNode."Dimension Set ID");
      END;

      DimSetEntry.COPY(DimSetEntry2);

      EXIT(DimSetTreeNode."Dimension Set ID");
    END;

    LOCAL PROCEDURE InsertDimSetEntries@13(VAR DimSetEntry@1000 : Record 480;NewID@1001 : Integer);
    VAR
      DimSetEntry2@1002 : Record 480;
    BEGIN
      DimSetEntry2.CHANGECOMPANY(ReceivingCompany); //**4PS.n
      DimSetEntry2.LOCKTABLE;
      IF DimSetEntry.FINDSET THEN
        REPEAT
          DimSetEntry2 := DimSetEntry;
          DimSetEntry2."Company Filter" := ''; //**4PS n RC2013
          DimSetEntry2."Dimension Set ID" := NewID;
          DimSetEntry2.INSERT;
        UNTIL DimSetEntry.NEXT = 0;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeGetDimensionSetID@1(VAR DimensionSetEntry@1000 : Record 480);
    BEGIN
    END;

    PROCEDURE SetCompany@1100525000(Company@1100525000 : Text[80]);
    BEGIN
      //**4PS
      ReceivingCompany := Company;

      "Company Filter" := ReceivingCompany;
      DimVal.CHANGECOMPANY(ReceivingCompany);
      DimMgt.SetCompany(ReceivingCompany);
    END;

    PROCEDURE CheckDimensionAuthorisation@1100525001(TableID@1100525000 : Integer);
    VAR
      GeneralLedgerSetup@1100525001 : Record 98;
    BEGIN
      //**4PS
      IF TableID = 0 THEN
        EXIT;

      GeneralLedgerSetup.GET;
      IF "Dimension Code" = GeneralLedgerSetup."Global Dimension 1 Code" THEN BEGIN
        DimMgt.CheckDimensionAuthorisation(1, TableID);
        DimMgt.CheckDepartmentAuthorization(TableID, "Dimension Value Code");
      END;
      IF "Dimension Code" = GeneralLedgerSetup."Global Dimension 2 Code" THEN
        DimMgt.CheckDimensionAuthorisation(2, TableID);
    END;

    PROCEDURE LookupDimensionValueCode@1100525002();
    BEGIN
      //**4PS
      DimVal.SETRANGE("Dimension Code", "Dimension Code");
      IF PAGE.RUNMODAL(0, DimVal) = ACTION::LookupOK THEN
        VALIDATE("Dimension Value Code", DimVal.Code);
    END;

    BEGIN
    END.
  }
}

