OBJECT Table 11229467 Signhost Signer
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               SignhostLicenseManagement.TestIfUsingSignhostIsAllowed;
               CheckId(Type, "No.");
               TESTFIELD("E-Mail");
             END;

    OnModify=BEGIN
               SignhostLicenseManagement.TestIfUsingSignhostIsAllowed;
               CheckId(Type, "No.");
               TESTFIELD("E-Mail");
             END;

    OnDelete=BEGIN
               DeleteRejectionText;
             END;

    OnRename=BEGIN
               CheckId(xRec.Type, xRec."No.");
               TESTFIELD("E-Mail");
             END;

    CaptionML=ENU=Signhost Signer;
    LookupPageID=Page11129726;
    DrillDownPageID=Page11129726;
  }
  FIELDS
  {
    { 10  ;   ;Record ID           ;RecordID      ;CaptionML=[ENU=Record ID;
                                                              SVE=Post-ID];
                                                   Editable=No }
    { 15  ;   ;Word Document No.   ;Code20        ;TableRelation="Document Properties" WHERE (External Document=CONST(No));
                                                   CaptionML=ENU=Word Document No.;
                                                   Editable=No }
    { 20  ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=ENU=Employee,Contact;
                                                   OptionString=Employee,Contact }
    { 30  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Employee)) Employee
                                                                 ELSE IF (Type=CONST(Contact)) Contact;
                                                   OnValidate=BEGIN
                                                                Id := "No.";
                                                                "E-Mail" := GetDefaultEMail;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              SVE=Nr.] }
    { 40  ;   ;Id                  ;Code20        ;CaptionML=[ENU=Id;
                                                              SVE=ID] }
    { 50  ;   ;Last Activity       ;Option        ;CaptionML=ENU=Last Activity;
                                                   OptionCaptionML=ENU=,,,,,Invitation Sent,Received,Opened,Reminder Sent,Document Opened,,,,,Cancelled,Rejected,Signed,,,,,Signed Document Sent,Signed Document Opened,Signed Document Downloaded,,,,,Receipt Sent,Receipt Opened,Receipt Downloaded;
                                                   OptionString=,,,,,Invitation Sent,Received,Opened,Reminder Sent,Document Opened,,,,,Cancelled,Rejected,Signed,,,,,Signed Document Sent,Signed Document Opened,Signed Document Downloaded,,,,,Receipt Sent,Receipt Opened,Receipt Downloaded;
                                                   BlankNumbers=BlankZero;
                                                   Editable=No }
    { 60  ;   ;Sign Url            ;Text100       ;CaptionML=ENU=Sign Url;
                                                   Editable=No }
    { 70  ;   ;Sign Request Sent Date-Time;DateTime;
                                                   CaptionML=ENU=Sign Request Sent Date-Time;
                                                   Editable=No }
    { 80  ;   ;Signed Date-Time    ;DateTime      ;CaptionML=ENU=Signed Date-Time;
                                                   Editable=No }
    { 85  ;   ;Rejected Date-Time  ;DateTime      ;CaptionML=ENU=Rejected Date-Time;
                                                   Editable=No }
    { 90  ;   ;Sequence No.        ;Integer       ;CaptionML=[ENU=Sequence No.;
                                                              SVE=Sekvensnr] }
    { 100 ;   ;Signed Document Sent Date-Time;DateTime;
                                                   CaptionML=ENU=Signed Document Sent Date-Time;
                                                   Editable=No }
    { 110 ;   ;E-Mail              ;Text80        ;OnValidate=VAR
                                                                MailManagement@1100528402 : Codeunit 9520;
                                                                RecRef@1100528401 : RecordRef;
                                                                FldRef@1100528400 : FieldRef;
                                                                ContactDataValidation@1100528403 : Codeunit 11012275;
                                                              BEGIN
                                                                MailManagement.ValidateEmailAddressField("E-Mail");
                                                                RecRef.GETTABLE(Rec);
                                                                FldRef := RecRef.FIELD(FIELDNO("E-Mail"));
                                                                ContactDataValidation.ValidateEmail(FldRef, "E-Mail");
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=Email;
                                                              SVE=E-post] }
    { 120 ;   ;No. of Rejection Text Lines;Integer;FieldClass=FlowField;
                                                   CalcFormula=Count("Signhost Signer Rejection Text" WHERE (Record ID=FIELD(Record ID),
                                                                                                             Word Document No.=FIELD(Word Document No.),
                                                                                                             Signhost Signer Type=FIELD(Type),
                                                                                                             Signhost Signer No.=FIELD(No.)));
                                                   CaptionML=ENU=No. of Rejection Text Lines;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Record ID,Word Document No.,Type,No.    ;Clustered=Yes }
    {    ;Record ID,Sequence No.                   }
    {    ;Record ID,Word Document No.,Id           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528400 : TextConst 'ENU=Filter on %1 has been removed.';
      SignhostLicenseManagement@1100528401 : Codeunit 11012655;

    LOCAL PROCEDURE CheckId@1100528402(Type2@1100528401 : Integer;No2@1100528402 : Code[20]);
    VAR
      SignhostSigner@1100528400 : Record 11229467;
    BEGIN
      TESTFIELD(Id);
      SignhostSigner.SETRANGE("Record ID", "Record ID");
      SignhostSigner.SETRANGE("Word Document No.", "Word Document No.");
      SignhostSigner.SETRANGE(Id, Id);
      IF SignhostSigner.FINDSET THEN
        REPEAT
          IF (SignhostSigner.Type <> Type2) OR
             (SignhostSigner."No." <> No2)
          THEN
            FIELDERROR(Id);
        UNTIL SignhostSigner.NEXT = 0;
    END;

    PROCEDURE GetFullName@1100528400() FullName : Text;
    VAR
      Contact@1100528400 : Record 5050;
      Employee@1100528401 : Record 5200;
    BEGIN
      IF "No." <> '' THEN
        CASE Type OF
          Type::Contact:
            BEGIN
              Contact.GET("No.");
              FullName := Contact.Name;
            END;
          Type::Employee:
            BEGIN
              Employee.GET("No.");
              FullName := Employee."Full Name";
            END;
        END;
    END;

    PROCEDURE GetEMail@1100528401() : Text;
    BEGIN
      TESTFIELD("E-Mail");
      EXIT("E-Mail");
    END;

    PROCEDURE GetDefaultEMail@1100528406() EMail : Text;
    VAR
      Contact@1100528401 : Record 5050;
      Employee@1100528400 : Record 5200;
    BEGIN
      CASE Type OF
        Type::Contact:
          IF Contact.GET("No.") THEN
            EMail := Contact."E-Mail";
        Type::Employee:
          IF Employee.GET("No.") THEN
            EMail := Employee."E-Mail";
      END;
    END;

    PROCEDURE GetLanguageCode@1100528403() LanguageCode : Code[10];
    VAR
      Contact@1100528401 : Record 5050;
      Employee@1100528400 : Record 5200;
    BEGIN
      IF "No." <> '' THEN
        CASE Type OF
          Type::Contact:
            BEGIN
              Contact.GET("No.");
              LanguageCode := Contact."Language Code";
            END;
          Type::Employee:
            BEGIN
              Employee.GET("No.");
              LanguageCode := '';
            END;
        END;
    END;

    PROCEDURE GetSignhostLanguage@1100528404() SignhostLanguage : Text[10];
    VAR
      Language@1100528401 : Record 8;
      LanguageCode@1100528400 : Code[10];
      LanguageID@1100528402 : Integer;
    BEGIN
      LanguageCode := GetLanguageCode;
      LanguageID := Language.GetLanguageID(LanguageCode);
      CASE LanguageID OF
        1031, 2055, 3079, 4103, 5127:
          SignhostLanguage := 'de-DE';
        1034, 2058, 4106, 5130, 6154, 7178, 8202, 9226, 10250, 11274,
        12298, 13322, 14346, 15370, 16394, 17418, 18442, 19466, 20490:
          SignhostLanguage := 'es-ES';
        1036, 2060, 3084, 4108, 5132, 6156, 7180, 9228, 10252, 11276,
        12300, 13324, 14348:
          SignhostLanguage := 'fr-FR';
        1040, 2064:
          SignhostLanguage := 'it-IT';
        1043, 1122, 2067:
          SignhostLanguage := 'nl-NL';
        ELSE
          SignhostLanguage := 'en-US'
      END;
    END;

    PROCEDURE LookupNo@1100528405(ContactCompanyNoFilter@1100528401 : Text);
    VAR
      Contact@1100528400 : Record 5050;
      Employee@1100528402 : Record 5200;
    BEGIN
      CASE Type OF
        Type::Contact:
          BEGIN
            IF "No." <> '' THEN
              IF Contact.GET("No.") THEN;
            IF ContactCompanyNoFilter <> '' THEN
              Contact.SETFILTER("Company No.", ContactCompanyNoFilter);
            IF PAGE.RUNMODAL(0, Contact) = ACTION::LookupOK THEN
              VALIDATE("No.", Contact."No.");
          END;
        Type::Employee:
          BEGIN
            IF "No." <> '' THEN
              IF Employee.GET("No.") THEN;
            IF PAGE.RUNMODAL(0, Employee) = ACTION::LookupOK THEN
              VALIDATE("No.", Employee."No.");
          END;
      END;
    END;

    PROCEDURE CopyingDefaultSignhostSignersAllowed@1100528418() : Boolean;
    BEGIN
      IF NOT RecordIDFilterContains1ValidRecord THEN
        EXIT(FALSE);
      IF NOT (GETFILTER("Word Document No.") = '''''') AND
        NOT WordDocumentFilterContains1ValidWordDocument
      THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE CopyDefaultSignhostSigners@1100528407();
    VAR
      DefaultSignhostSigner@1100528404 : Record 11229467;
      CurrentRecordID@1100528400 : RecordID;
      RecIDSameDocumentType@1100528401 : RecordID;
      RecIDNoDocumentType@1100528402 : RecordID;
      WordDocumentNo@1100528405 : Code[20];
      RecIDFilterContains1ValidRecord@1100528403 : Boolean;
    BEGIN
      GetRecordIDInfoBasedOnRecordIDFilter(
        CurrentRecordID, RecIDSameDocumentType, RecIDNoDocumentType, RecIDFilterContains1ValidRecord);
      IF NOT RecIDFilterContains1ValidRecord THEN
        ERROR(Text000, FIELDCAPTION("Record ID"));
      IF NOT (GETFILTER("Word Document No.") = '''''') AND
        NOT WordDocumentFilterContains1ValidWordDocument
      THEN
        ERROR(Text000, FIELDCAPTION("Word Document No."));

      DefaultSignhostSigner.SETRANGE("Record ID", RecIDSameDocumentType);
      DefaultSignhostSigner.SETRANGE("Word Document No.", '');
      IF WordDocumentFilterContains1ValidWordDocument THEN
        WordDocumentNo := GETFILTER("Word Document No.");
      IF NOT CopyDefaultSignhostSignersToRecordID(DefaultSignhostSigner, CurrentRecordID, WordDocumentNo) THEN BEGIN
        DefaultSignhostSigner.SETRANGE("Record ID", RecIDNoDocumentType);
        CopyDefaultSignhostSignersToRecordID(DefaultSignhostSigner, CurrentRecordID, WordDocumentNo);
      END;
    END;

    LOCAL PROCEDURE CopyDefaultSignhostSignersToRecordID@1100528409(VAR DefaultSignhostSigner@1100528400 : Record 11229467;RecID@1100528401 : RecordID;WordDocumentNo@1100528403 : Code[20]) Copied : Boolean;
    VAR
      SignhostSigner@1100528402 : Record 11229467;
    BEGIN
      IF DefaultSignhostSigner.FINDSET THEN
        REPEAT
          SignhostSigner := DefaultSignhostSigner;
          SignhostSigner."Record ID" := RecID;
          SignhostSigner."Word Document No." := WordDocumentNo;
          IF SignhostSigner.INSERT(TRUE) THEN;
          Copied := TRUE;
        UNTIL DefaultSignhostSigner.NEXT = 0
    END;

    LOCAL PROCEDURE GetRecordIDInfoBasedOnRecordIDFilter@1100528408(VAR RecID@1100528400 : RecordID;VAR RecIDSameDocumentType@1100528404 : RecordID;VAR RecIDNoDocumentType@1100528405 : RecordID;VAR RecIDFilterContains1ValidRecord@1100528403 : Boolean);
    VAR
      PurchaseHeader@1100528401 : Record 38;
      PurchaseHeader2@1100528406 : Record 38;
      RecRef@1100528402 : RecordRef;
      RecID2@1100528408 : RecordID;
    BEGIN
      CLEAR(RecID);
      CLEAR(RecIDSameDocumentType);
      CLEAR(RecIDFilterContains1ValidRecord);
      RecIDNoDocumentType := RecID2;
      IF GETFILTER("Record ID") = '' THEN
        EXIT;

      IF EVALUATE(RecID, GETFILTER("Record ID")) THEN BEGIN
        RecRef := RecID.GETRECORD;
        CASE RecRef.NUMBER OF
          DATABASE::"Purchase Header":
            BEGIN
              RecRef.SETTABLE(PurchaseHeader);
              PurchaseHeader2 := PurchaseHeader;
              PurchaseHeader2."No." := '';
              RecIDSameDocumentType := PurchaseHeader2.RECORDID;
              IF PurchaseHeader."No." <> '' THEN
                CASE PurchaseHeader."Document Type" OF
                  PurchaseHeader."Document Type"::Order:
                    RecIDFilterContains1ValidRecord := TRUE;
                END;
            END;
        END;
      END;
    END;

    LOCAL PROCEDURE RecordIDFilterContains1ValidRecord@1100528423() RecIDFilterContains1ValidRecord : Boolean;
    VAR
      CurrentRecordID@1100528403 : RecordID;
      RecIDSameDocumentType@1100528401 : RecordID;
      RecIDNoDocumentType@1100528400 : RecordID;
    BEGIN
      GetRecordIDInfoBasedOnRecordIDFilter(
        CurrentRecordID, RecIDSameDocumentType, RecIDNoDocumentType, RecIDFilterContains1ValidRecord);
    END;

    LOCAL PROCEDURE WordDocumentFilterContains1ValidWordDocument@1100528412() : Boolean;
    VAR
      DocumentProperties@1100528400 : Record 11012746;
    BEGIN
      IF GETFILTER("Word Document No.") = '' THEN
        EXIT(FALSE);
      IF NOT DocumentProperties.GET(GETFILTER("Word Document No.")) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE CopyingSignhostSignersFromSourceAllowed@1100528411() : Boolean;
    BEGIN
      IF NOT RecordIDFilterContains1ValidRecord THEN
        EXIT(FALSE);
      IF NOT WordDocumentFilterContains1ValidWordDocument THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE CopyingSignhostSignersFromPreviousVersionAllowed@1100528425() : Boolean;
    VAR
      DocumentProperties@1100528400 : Record 11012746;
    BEGIN
      IF NOT CopyingSignhostSignersFromSourceAllowed THEN
        EXIT(FALSE);
      IF NOT DocumentProperties.GET(GETFILTER("Word Document No.")) THEN
        EXIT(FALSE);
      IF DocumentProperties.Version <= 1 THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE CopySignhostSignersFromSource@1100528410();
    BEGIN
      CopySignhostSignersBasedOnFilters(FALSE);
    END;

    PROCEDURE CopySignhostSignersFromPreviousVersion@1100528413();
    BEGIN
      CopySignhostSignersBasedOnFilters(TRUE);
    END;

    LOCAL PROCEDURE CopySignhostSignersBasedOnFilters@1100528414(FromPreviousVersion@1100528406 : Boolean);
    VAR
      DocumentProperties@1100528403 : Record 11012746;
      RecID@1100528405 : RecordID;
      WordDocumentNoFrom@1100528402 : Code[20];
      WordDocumentNoTo@1100528404 : Code[20];
    BEGIN
      IF NOT RecordIDFilterContains1ValidRecord THEN
        ERROR(Text000, FIELDCAPTION("Record ID"));
      EVALUATE(RecID, GETFILTER("Record ID"));
      WordDocumentNoTo := GETFILTER("Word Document No.");
      IF WordDocumentNoTo = '' THEN
        ERROR(Text000, FIELDCAPTION("Word Document No."));
      DocumentProperties.GET(WordDocumentNoTo);
      IF FromPreviousVersion THEN
        DocumentProperties.GetDocumentNoOfPreviousVersionOfWordDocument(
          DocumentProperties."Doc. Action", RecID, TRUE, WordDocumentNoFrom)
      ELSE
        WordDocumentNoFrom := '';
      CopySignhostSignersWithinRecID(RecID, WordDocumentNoFrom, WordDocumentNoTo, FALSE);
    END;

    PROCEDURE WordDocumentHasSignhostSigners@1100528432(RecordID@1100528400 : RecordID;WordDocumentNo@1100528401 : Code[20]) : Boolean;
    VAR
      SignhostSigner@1100528402 : Record 11229467;
    BEGIN
      SignhostSigner.SETRANGE("Record ID", RecordID);
      SignhostSigner.SETRANGE("Word Document No.", WordDocumentNo);
      IF NOT SignhostSigner.ISEMPTY THEN
        EXIT(TRUE);
    END;

    PROCEDURE CopySignhostSignersWithinRecID@1100528442(RecordID@1100528402 : RecordID;WordDocumentNoFrom@1100528401 : Code[20];WordDocumentNoTo@1100528404 : Code[20];ThrowErrorIfNoSignersFound@1100528405 : Boolean);
    VAR
      SignhostSignerFrom@1100528400 : Record 11229467;
      SignhostSignerTo@1100528403 : Record 11229467;
    BEGIN
      SignhostSignerFrom.SETRANGE("Record ID", RecordID);
      SignhostSignerFrom.SETRANGE("Word Document No.", WordDocumentNoFrom);
      IF ThrowErrorIfNoSignersFound THEN
        SignhostSignerFrom.FINDSET
      ELSE
        IF NOT SignhostSignerFrom.FINDSET THEN
          EXIT;

      REPEAT
        SignhostSignerTo := SignhostSignerFrom;
        SignhostSignerTo."Word Document No." := WordDocumentNoTo;
        SignhostSignerTo."Last Activity" := 0;
        SignhostSignerTo."Sign Url" := '';
        SignhostSignerTo."Sign Request Sent Date-Time" := 0DT;
        SignhostSignerTo."Signed Date-Time" := 0DT;
        SignhostSignerTo."Rejected Date-Time" := 0DT;
        SignhostSignerTo."Signed Document Sent Date-Time" := 0DT;
        IF SignhostSignerTo.INSERT(TRUE) THEN;
      UNTIL SignhostSignerFrom.NEXT = 0;
    END;

    LOCAL PROCEDURE DeleteRejectionText@1100528415();
    VAR
      SignhostSignerRejectionText@1100528400 : Record 11072462;
    BEGIN
      SignhostSignerRejectionText.SETRANGE("Record ID", "Record ID");
      SignhostSignerRejectionText.SETRANGE("Word Document No.", "Word Document No.");
      SignhostSignerRejectionText.SETRANGE("Signhost Signer Type", Type);
      SignhostSignerRejectionText.SETRANGE("Signhost Signer No.", "No.");
      SignhostSignerRejectionText.DELETEALL(TRUE);
    END;

    PROCEDURE GetSignerOrderInPDF@1100528416() SignerOrder : Integer;
    VAR
      SignerTag@1100528400 : Text;
    BEGIN
      GetSignPositioningData(SignerOrder, SignerTag);
    END;

    PROCEDURE GetSignerTagInPDF@1100528417() SignerTag : Text;
    VAR
      SignerOrder@1100528405 : Integer;
    BEGIN
      GetSignPositioningData(SignerOrder, SignerTag);
    END;

    PROCEDURE GetSignPositioningData@1100528419(VAR SignerOrder@1100528406 : Integer;VAR SignerTag@1100528407 : Text);
    VAR
      SignhostSignPositioning@1100528402 : Record 11229472;
      SignhostSigner@1100528403 : Record 11229467;
      SignhostManagement@1100528401 : Codeunit 11012637;
      DocumentType@1100528400 : Integer;
      Counter@1100528404 : Integer;
    BEGIN
      SignerOrder := 0;
      SignerTag := '';
      IF "No." = '' THEN
        EXIT;

      DocumentType := SignhostManagement.DeriveDocumentTypeFromRecordID("Record ID");
      IF NOT SignhostSignPositioning.GET(DocumentType) THEN
        IF SignhostSignPositioning.GET(SignhostSignPositioning."Document Type"::" ") THEN;
      SignhostManagement.SetCurrentKeyOfSignerAccordingToPositioning(SignhostSignPositioning, SignhostSigner);
      SignhostSigner.SETRANGE("Record ID", "Record ID");
      SignhostSigner.SETRANGE("Word Document No.", "Word Document No.");
      SignhostSigner.SETFILTER("Sign Url", '<>%1', '');
      IF SignhostSigner.ISEMPTY THEN
        SignhostSigner.SETRANGE("Sign Url");

      IF SignhostSigner.FINDSET THEN
        REPEAT
          Counter += 1;
          IF (SignhostSigner.Type = Type) AND
             (SignhostSigner."No." = "No.")
          THEN
            SignerOrder := Counter;
        UNTIL (SignhostSigner.NEXT = 0) OR (SignerOrder > 0);

      IF SignerOrder > 0 THEN
        IF SignhostSignPositioning."Use Signer Tags in PDF" THEN
          SignerTag := STRSUBSTNO('{{Signer%1}}', SignerOrder);
    END;

    PROCEDURE DrillDownOnNoOfRejectionTextLines@1100528420();
    VAR
      SignhostSignerRejectionText@1100528400 : Record 11072462;
    BEGIN
      SignhostSignerRejectionText.SETRANGE("Record ID", "Record ID");
      SignhostSignerRejectionText.SETRANGE("Word Document No.", "Word Document No.");
      SignhostSignerRejectionText.SETRANGE("Signhost Signer Type", Type);
      SignhostSignerRejectionText.SETRANGE("Signhost Signer No.", "No.");
      PAGE.RUN(0, SignhostSignerRejectionText);
    END;

    BEGIN
    END.
  }
}

