OBJECT Codeunit 11012013 Period Management Forms
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Calendar@11012001 : Record 2000000007;
      PeriodFormManagement@11012002 : Codeunit 359;
      DetermineProgressDate@11012003 : Codeunit 11012014;
      DeterminePrognosisDate@11012004 : Codeunit 11012029;

    PROCEDURE FindPeriod@1(VAR ProjRec@11012000 : Record 11072003;PeriodType@11012001 : 'Day,Week,Month,Quarter,Year,Accounting Period';SearchString@11012002 : Text[3]);
    BEGIN
      WITH ProjRec DO BEGIN
        SETRANGE("Period Type Filter",PeriodType);
        IF GETFILTER("Period Filter") <> '' THEN BEGIN
          Calendar.SETFILTER("Period Start",GETFILTER("Period Filter"));
          PeriodFormManagement.FindDate('+',Calendar,PeriodType);
          Calendar.SETRANGE("Period Start");
        END;

        PeriodFormManagement.FindDate(SearchString,Calendar,PeriodType);
        IF Calendar."Period Start" = Calendar."Period End" THEN
          SETRANGE("Period Filter",Calendar."Period Start")
        ELSE
          SETRANGE("Period Filter",Calendar."Period Start",Calendar."Period End");
        SETRANGE("Cumulation Filter",0D,Calendar."Period End");

        DetermineProgressDate.DetermineBothDates(ProjRec,FALSE);
        DeterminePrognosisDate.DetermineBothDates(ProjRec);
      END;
    END;

    [External]
    PROCEDURE FindPeriodServiceContract@1100485000(VAR ServContrRec@1100485001 : Record 11012812;PeriodType@11012001 : 'Day,Week,Month,Quarter,Year,Accounting Period';FilterType@1100485000 : 'Period,Cumulative';SearchString@11012002 : Text[3]);
    BEGIN
      WITH ServContrRec DO BEGIN
        SETRANGE("Period Type Filter",PeriodType);
        IF GETFILTER("Period Filter") <> '' THEN BEGIN
          Calendar.SETFILTER("Period Start",GETFILTER("Period Filter"));
          PeriodFormManagement.FindDate('+',Calendar,PeriodType);
          Calendar.SETRANGE("Period Start");
        END;

        SETRANGE("Period Type Filter", PeriodType);
        PeriodFormManagement.FindDate(SearchString,Calendar,PeriodType);
        IF Calendar."Period Start" = Calendar."Period End" THEN
          SETRANGE("Period Filter",Calendar."Period Start")
        ELSE
          SETRANGE("Period Filter",Calendar."Period Start",Calendar."Period End");
        SETRANGE("Cumulative Filter", 0D, Calendar."Period End");

        IF FilterType = FilterType::Cumulative THEN
          SETRANGE("Period Filter", 0D, Calendar."Period End");
      END;
    END;

    [External]
    PROCEDURE FindPeriodServContrWithoutYear@1100485004(VAR ServContrRec@1100485001 : Record 11012812;PeriodType@11012001 : 'Day,Week,Month,Quarter,Year,Accounting Period';FilterType@1100485000 : 'Period,Cumulative';SearchString@11012002 : Text[3]);
    BEGIN
      WITH ServContrRec DO BEGIN
        SETRANGE("Period Type Filter",PeriodType);
        IF GETFILTER("Period Filter") <> '' THEN BEGIN
          Calendar.SETFILTER("Period Start",GETFILTER("Period Filter"));
          PeriodFormManagement.FindDate('+',Calendar,PeriodType);
          Calendar.SETRANGE("Period Start");
        END;

        PeriodFormManagement.FindDate(SearchString,Calendar,PeriodType);
        IF Calendar."Period Start" = Calendar."Period End" THEN
          SETRANGE("Period Filter",Calendar."Period Start")
        ELSE
          SETRANGE("Period Filter",Calendar."Period Start",Calendar."Period End");

        IF FilterType = FilterType::Cumulative THEN
          SETRANGE("Period Filter", 0D, Calendar."Period End");

      END;
    END;

    [External]
    PROCEDURE FindPeriodControlServiceContractCostType@1100528605(VAR ControlServContractCostType@1100485001 : Record 11012870;PeriodType@11012001 : 'Day,Week,Month,Quarter,Year,Accounting Period';FilterType@1100485000 : 'Period,Cumulative';SearchString@11012002 : Text[3]);
    BEGIN
      WITH ControlServContractCostType DO BEGIN
        IF GETFILTER("Period Filter") <> '' THEN BEGIN
          Calendar.SETFILTER("Period Start",GETFILTER("Period Filter"));
          PeriodFormManagement.FindDate('+',Calendar,PeriodType);
          Calendar.SETRANGE("Period Start");
        END;

        SETRANGE("Period Type Filter", PeriodType);
        PeriodFormManagement.FindDate(SearchString,Calendar,PeriodType);
        IF Calendar."Period Start" = Calendar."Period End" THEN
          SETRANGE("Period Filter",Calendar."Period Start")
        ELSE
          SETRANGE("Period Filter",Calendar."Period Start",Calendar."Period End");
        SETRANGE("Cumulative Filter", 0D, Calendar."Period End");

        IF FilterType = FilterType::Cumulative THEN
          SETRANGE("Period Filter", 0D, Calendar."Period End");
      END;
    END;

    [External]
    PROCEDURE FindPeriodServiceOrder@1100485001(VAR ServOrderRec@1100485001 : Record 11012823;PeriodType@11012001 : 'Day,Week,Month,Quarter,Year,Accounting Period';FilterType@1100485000 : 'Period,Cumulative';SearchString@11012002 : Text[3]);
    BEGIN
      WITH ServOrderRec DO BEGIN
        SETRANGE("Period Type Filter",PeriodType);
        IF GETFILTER("Period Filter") <> '' THEN BEGIN
          Calendar.SETFILTER("Period Start",GETFILTER("Period Filter"));
          PeriodFormManagement.FindDate('+',Calendar,PeriodType);
          Calendar.SETRANGE("Period Start");
        END;

        SETRANGE("Period Type Filter", PeriodType);
        PeriodFormManagement.FindDate(SearchString,Calendar,PeriodType);
        IF Calendar."Period Start" = Calendar."Period End" THEN
          SETRANGE("Period Filter",Calendar."Period Start")
        ELSE
          SETRANGE("Period Filter",Calendar."Period Start",Calendar."Period End");
        SETRANGE("Cumulative Filter", 0D, Calendar."Period End");

        IF FilterType = FilterType::Cumulative THEN
          SETRANGE("Period Filter", 0D, Calendar."Period End");
      END;
    END;

    [External]
    PROCEDURE FindPeriodServiceLocation@1100528606(VAR ServiceLocation@1100485001 : Record 11012801;PeriodType@11012001 : 'Day,Week,Month,Quarter,Year,Accounting Period';FilterType@1100485000 : 'Period,Cumulative';SearchString@11012002 : Text[3]);
    BEGIN
      WITH ServiceLocation DO BEGIN
        IF GETFILTER("Period Filter") <> '' THEN BEGIN
          Calendar.SETFILTER("Period Start",GETFILTER("Period Filter"));
          PeriodFormManagement.FindDate('+',Calendar,PeriodType);
          Calendar.SETRANGE("Period Start");
        END;

        SETRANGE("Period Type Filter", PeriodType);
        PeriodFormManagement.FindDate(SearchString,Calendar,PeriodType);
        IF Calendar."Period Start" = Calendar."Period End" THEN
          SETRANGE("Period Filter",Calendar."Period Start")
        ELSE
          SETRANGE("Period Filter",Calendar."Period Start",Calendar."Period End");
        SETRANGE("Cumulative Filter", 0D, Calendar."Period End");

        IF FilterType = FilterType::Cumulative THEN
          SETRANGE("Period Filter", 0D, Calendar."Period End");
      END;
    END;

    [External]
    PROCEDURE FindPeriodRentalUnit@1100485003(VAR RentalUnitRec@11012000 : Record 11012940;PeriodType@11012001 : 'Day,Week,Month,Quarter,Year,Accounting Period';SearchString@11012002 : Text[3]);
    BEGIN
      WITH RentalUnitRec DO BEGIN
        IF GETFILTER("Period Filter") <> '' THEN BEGIN
          Calendar.SETFILTER("Period Start",GETFILTER("Period Filter"));
          PeriodFormManagement.FindDate('+',Calendar,PeriodType);
          Calendar.SETRANGE("Period Start");
        END;

        PeriodFormManagement.FindDate(SearchString,Calendar,PeriodType);
        IF Calendar."Period Start" = Calendar."Period End" THEN
          SETRANGE("Period Filter",Calendar."Period Start")
        ELSE
          SETRANGE("Period Filter",Calendar."Period Start",Calendar."Period End");
      END;
    END;

    [External]
    PROCEDURE GetPeriodFilterText@1100525000(PeriodType@1100525001 : 'Day,Week,Month,Quarter,Year,Accounting Period';SearchString@1100525000 : Text[3];VAR OPeriodFilter@1100525002 : Text[1024]);
    BEGIN
      IF OPeriodFilter <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start", OPeriodFilter);
        PeriodFormManagement.FindDate('+', Calendar, PeriodType);
        Calendar.SETRANGE("Period Start");
      END;

      PeriodFormManagement.FindDate(SearchString, Calendar, PeriodType);
      IF Calendar."Period Start" = Calendar."Period End" THEN
        OPeriodFilter := STRSUBSTNO('%1', Calendar."Period Start")
      ELSE
        OPeriodFilter := STRSUBSTNO('%1..%2', Calendar."Period Start", Calendar."Period End");
    END;

    [External]
    PROCEDURE FindPeriodCompanyStats@1100528600(VAR CompanyStats@1100485001 : Record 11072203;PeriodType@11012001 : 'Day,Week,Month,Quarter,Year,Accounting Period';SearchString@11012002 : Text[3]);
    BEGIN
      WITH CompanyStats DO BEGIN
        IF GETFILTER("Period Filter") <> '' THEN BEGIN
          Calendar.SETFILTER("Period Start", GETFILTER("Period Filter"));
          PeriodFormManagement.FindDate('+', Calendar, PeriodType);
          Calendar.SETRANGE("Period Start");
        END;

        PeriodFormManagement.FindDate(SearchString, Calendar, PeriodType);
        IF Calendar."Period Start" = Calendar."Period End" THEN
          SETRANGE("Period Filter", Calendar."Period Start")
        ELSE
          SETRANGE("Period Filter", Calendar."Period Start", Calendar."Period End");
      END;
    END;

    [External]
    PROCEDURE FindPeriodServiceLocationStats@1100528601(VAR ServiceLocationStats@1100528602 : Record 11072204;PeriodType@1100528601 : 'Day,Week,Month,Quarter,Year,Accounting Period';SearchString@1100528600 : Text[3]);
    BEGIN
      WITH ServiceLocationStats DO BEGIN
        IF GETFILTER("Period Filter") <> '' THEN BEGIN
          Calendar.SETFILTER("Period Start", GETFILTER("Period Filter"));
          PeriodFormManagement.FindDate('+', Calendar, PeriodType);
          Calendar.SETRANGE("Period Start");
        END;

        PeriodFormManagement.FindDate(SearchString, Calendar, PeriodType);
        IF Calendar."Period Start" = Calendar."Period End" THEN
          SETRANGE("Period Filter", Calendar."Period Start")
        ELSE
          SETRANGE("Period Filter", Calendar."Period Start", Calendar."Period End");
      END;
    END;

    [External]
    PROCEDURE FindPeriodCustomerStats@1100528602(VAR CustomerStats@1100528602 : Record 11072202;PeriodType@1100528601 : 'Day,Week,Month,Quarter,Year,Accounting Period';SearchString@1100528600 : Text[3]);
    BEGIN
      WITH CustomerStats DO BEGIN
        IF GETFILTER("Period Filter") <> '' THEN BEGIN
          Calendar.SETFILTER("Period Start", GETFILTER("Period Filter"));
          PeriodFormManagement.FindDate('+', Calendar, PeriodType);
          Calendar.SETRANGE("Period Start");
        END;

        PeriodFormManagement.FindDate(SearchString, Calendar, PeriodType);
        IF Calendar."Period Start" = Calendar."Period End" THEN
          SETRANGE("Period Filter", Calendar."Period Start")
        ELSE
          SETRANGE("Period Filter", Calendar."Period Start", Calendar."Period End");
      END;
    END;

    [External]
    PROCEDURE FindPeriodComplexStats@1100528603(VAR ComplexStats@1100485001 : Record 11072205;PeriodType@11012001 : 'Day,Week,Month,Quarter,Year,Accounting Period';SearchString@11012002 : Text[3]);
    BEGIN
      WITH ComplexStats DO BEGIN
        IF GETFILTER("Period Filter") <> '' THEN BEGIN
          Calendar.SETFILTER("Period Start", GETFILTER("Period Filter"));
          PeriodFormManagement.FindDate('+', Calendar, PeriodType);
          Calendar.SETRANGE("Period Start");
        END;

        PeriodFormManagement.FindDate(SearchString, Calendar, PeriodType);
        IF Calendar."Period Start" = Calendar."Period End" THEN
          SETRANGE("Period Filter", Calendar."Period Start")
        ELSE
          SETRANGE("Period Filter", Calendar."Period Start", Calendar."Period End");
      END;
    END;

    [External]
    PROCEDURE FindPeriodEmployeeStats@1100528604(VAR EmployeeStats@1100485001 : Record 11072216;PeriodType@11012001 : 'Day,Week,Month,Quarter,Year,Accounting Period';SearchString@11012002 : Text[3]);
    BEGIN
      WITH EmployeeStats DO BEGIN
        IF GETFILTER("Posting Date Filter") <> '' THEN BEGIN
          Calendar.SETFILTER("Period Start", GETFILTER("Posting Date Filter"));
          PeriodFormManagement.FindDate('+', Calendar, PeriodType);
          Calendar.SETRANGE("Period Start");
        END;

        PeriodFormManagement.FindDate(SearchString, Calendar, PeriodType);
        IF Calendar."Period Start" = Calendar."Period End" THEN
          SETRANGE("Posting Date Filter", Calendar."Period Start")
        ELSE
          SETRANGE("Posting Date Filter", Calendar."Period Start", Calendar."Period End");
        IF NOT ISEMPTY THEN
          FINDFIRST;
      END;
    END;

    BEGIN
    END.
  }
}

