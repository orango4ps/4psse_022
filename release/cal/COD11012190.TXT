OBJECT Codeunit 11012190 Copy from Proj. Plann. Templ.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11072003;
    OnRun=VAR
            lProjectPlanningTemplate@1100485000 : Record 11012435;
          BEGIN
            IF PAGE.RUNMODAL(0, lProjectPlanningTemplate) = ACTION::LookupOK THEN
              CopyTemplate(Rec, lProjectPlanningTemplate);
          END;

  }
  CODE
  {
    VAR
      Text000@1100485000 : TextConst 'DEU=Es gibt eine oder mehrere ProjektaktivitÑten fÅr %1 %2.\\Mîchten Sie die vorhandenen AktivitÑten ersetzen durch die AkvititÑten aus den ausgewÑhlten %3?;ENU=One or more project activities exist for %1 %2.\\Do you want to replace the existing activities with the ones from the selected %3?;NLD=EÇn of meer projectactiviteiten bestaan voor %1 %2.\\Wilt u de bestaande activiteiten vervangen door de activiteiten uit de geselecteerde %3?;NOR=En eller flere prosjektaktiviteter eksisterer for %1 %2.\\Vil du erstatte de eksisterende aktivitetene med de fra den valgte %3?;SVE=Det finns en eller flera projektaktiviteter fîr %1 %2.\\Vill du ersÑtta befintliga aktiviteter med aktiviteter frÜn vald %3?';

    PROCEDURE CopyTemplate@1210190000(VAR JobRec@1210190000 : Record 11072003;VAR ProjectPlanningTemplate@1210190001 : Record 11012435);
    VAR
      ProjectPlanningTemplateLine@1210190008 : Record 11012436;
      ProjectPlanningActivity@1210190007 : Record 11012431;
      ProjPlanTmplLPlanConstraint@1210190006 : Record 11125718;
      ProjectPlanningConstraint@1210190005 : Record 11012433;
      CombinedCode@1210190004 : Code[40];
      ProjPlanTmplLResourceRec@1210190003 : Record 11125716;
      AssignedActivityCapacityRec@1210190002 : Record 11125710;
    BEGIN
      ProjectPlanningTemplateLine.SETRANGE("Project Activity Template Code", ProjectPlanningTemplate.Code);
      IF ProjectPlanningTemplateLine.ISEMPTY THEN
        EXIT;

      ProjectPlanningActivity.SETRANGE("Project No.", JobRec."No.");
      IF NOT ProjectPlanningActivity.ISEMPTY THEN
        IF NOT CONFIRM(Text000, FALSE, JobRec.TABLECAPTION, JobRec."No.", ProjectPlanningTemplate.TABLECAPTION) THEN
          EXIT;

      ProjectPlanningActivity.DELETEALL(TRUE);

      IF ProjectPlanningTemplateLine.FINDSET THEN
        REPEAT
          ProjectPlanningActivity.INIT;
          ProjectPlanningActivity."Project No." := JobRec."No.";
          ProjectPlanningActivity.VALIDATE(Code, ProjectPlanningTemplateLine."Activity Code");
          ProjectPlanningActivity.INSERT(TRUE);

          ProjectPlanningActivity.VALIDATE(Type, ProjectPlanningTemplateLine.Type);
          ProjectPlanningActivity.Description := ProjectPlanningTemplateLine.Description;
          ProjectPlanningActivity."Production Quantity" := ProjectPlanningTemplateLine."Production Quantity";
          ProjectPlanningActivity."Production Unit" := ProjectPlanningTemplateLine."Production Unit";
          ProjectPlanningActivity."Production Rate per day" := ProjectPlanningTemplateLine."Production Rate per day";
          ProjectPlanningActivity.MODIFY(TRUE);
        UNTIL ProjectPlanningTemplateLine.NEXT = 0;

      ProjPlanTmplLPlanConstraint.RESET;
      ProjPlanTmplLPlanConstraint.SETRANGE("Project Activity Template Code", ProjectPlanningTemplate.Code);
      IF ProjPlanTmplLPlanConstraint.FINDSET THEN BEGIN
        REPEAT
          ProjectPlanningConstraint.INIT;
          CombinedCode := JobRec."No." + ProjPlanTmplLPlanConstraint."From Activity No.";
          ProjectPlanningConstraint.VALIDATE("From Project Activity No.", CombinedCode);
          CombinedCode := JobRec."No." + ProjPlanTmplLPlanConstraint."To Activity No.";
          ProjectPlanningConstraint.VALIDATE("To Project Activity No.", CombinedCode);
          ProjectPlanningConstraint.VALIDATE(Lag, ProjPlanTmplLPlanConstraint.Lag);
          ProjectPlanningConstraint.VALIDATE("Lag Format", ProjPlanTmplLPlanConstraint."Lag Format");
          ProjectPlanningConstraint.VALIDATE(Type, ProjPlanTmplLPlanConstraint.Type);
          ProjectPlanningConstraint.INSERT(TRUE);
        UNTIL ProjPlanTmplLPlanConstraint.NEXT = 0;
      END;

      ProjPlanTmplLResourceRec.RESET;
      ProjPlanTmplLResourceRec.SETRANGE("Project Activity Template Code", ProjectPlanningTemplate.Code);
      IF ProjPlanTmplLResourceRec.FINDSET THEN BEGIN
        REPEAT
          AssignedActivityCapacityRec.INIT;
          AssignedActivityCapacityRec.VALIDATE("Project No.", JobRec."No.");
          AssignedActivityCapacityRec.VALIDATE("Activity Code", ProjPlanTmplLResourceRec."Activity Code");
          AssignedActivityCapacityRec.VALIDATE("Line No.", ProjPlanTmplLResourceRec."Line No." );
          AssignedActivityCapacityRec.VALIDATE("Resource Type", ProjPlanTmplLResourceRec."Resource Type");
          AssignedActivityCapacityRec.VALIDATE("Resource Code", ProjPlanTmplLResourceRec."Resource Code");

          AssignedActivityCapacityRec.INSERT(TRUE);
        UNTIL ProjPlanTmplLResourceRec.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

