OBJECT Table 11229825 DPT Metadata
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Standard Data", FALSE);
               InsertAdditionalDataRec;
             END;

    OnModify=BEGIN
               IF (NOT "Standard Data") THEN
                 Mandatory := FALSE;
             END;

    OnDelete=VAR
               DPTMetadataTranslation@1100528300 : Record 11229826;
             BEGIN
               TESTFIELD("Standard Data", FALSE);
               DPTMetadataTranslation.SETRANGE("Source Type", "Source Type");
               DPTMetadataTranslation.SETRANGE("Metadata Code", Code);
               DPTMetadataTranslation.DELETEALL(TRUE);
             END;

    CaptionML=ENU=DPT Metadata;
  }
  FIELDS
  {
    { 10  ;   ;Source Type         ;Option        ;CaptionML=[ENU=Source Type;
                                                              NOR=Kildetype;
                                                              SVE=Ursprungstyp];
                                                   OptionCaptionML=[ENU=" ,Project,Service Location";
                                                                    SVE=,Project,Serviceplats];
                                                   OptionString=[ ,Project,ServiceLocation];
                                                   Editable=No }
    { 20  ;   ;Code                ;Text30        ;TableRelation=IF (Standard Data=CONST(No)) "DPT Additional Data".Code WHERE (Source Type=FIELD(Source Type));
                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 30  ;   ;Standard Data       ;Boolean       ;CaptionML=ENU=Standard Data;
                                                   Editable=No }
    { 40  ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                UpdateDefaultTranslationDescription;
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 50  ;   ;Show in View OLD    ;Boolean       ;CaptionML=;
                                                   Editable=No }
    { 60  ;   ;Mandatory           ;Boolean       ;OnValidate=BEGIN
                                                                IF (Mandatory) THEN
                                                                  "Show in Edit" := TRUE;
                                                              END;

                                                   CaptionML=[ENU=Mandatory;
                                                              NOR=Obligatorisk;
                                                              SVE=Obligatoriskt];
                                                   Editable=No }
    { 70  ;   ;Position OLD        ;Integer       ;CaptionML=;
                                                   Editable=No }
    { 80  ;   ;Show in Search      ;Boolean       ;OnValidate=BEGIN
                                                                CheckModifySearchAllowed;
                                                              END;

                                                   CaptionML=ENU=Show in Search Center }
    { 90  ;   ;Refiner Code        ;Text30        ;OnValidate=BEGIN
                                                                IF ("Refiner Code" <> '') THEN BEGIN
                                                                  TESTFIELD("Show in Search", TRUE);
                                                                  CASE Code OF
                                                                    'FileType',
                                                                    'Modified',
                                                                    'ModifiedBy':
                                                                      FIELDERROR("Show in Search");
                                                                  END;
                                                                  CheckModifySearchAllowed;
                                                                  CheckRefinerCode;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Refiner Code }
    { 100 ;   ;Refiner Description ;Text50        ;OnValidate=BEGIN
                                                                CheckRefinerDescription;
                                                                UpdateDefaultTranslationRefiner;
                                                              END;

                                                   CaptionML=ENU=Refiner Description }
    { 110 ;   ;Refiner Type        ;Option        ;OnValidate=BEGIN
                                                                CheckModifyAllowed;
                                                              END;

                                                   CaptionML=ENU=Refiner Type;
                                                   OptionCaptionML=ENU=" ,Text,,Value,DateTime";
                                                   OptionString=[ ,Text,,Value,DateTime];
                                                   Editable=No }
    { 120 ;   ;Refiner Position    ;Integer       ;OnValidate=BEGIN
                                                                IF ("Refiner Position" > 0) THEN BEGIN
                                                                  CheckModifySearchAllowed;
                                                                  CheckRefinerPosition;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Refiner Position;
                                                   MinValue=0;
                                                   MaxValue=99;
                                                   BlankZero=Yes }
    { 130 ;   ;Show in Edit        ;Boolean       ;CaptionML=ENU=Show in Properties View }
    { 140 ;   ;Indexed             ;Boolean       ;OnValidate=BEGIN
                                                                CheckIndexed;
                                                              END;

                                                   CaptionML=ENU=Indexed }
    { 200 ;   ;View Allowed OLD    ;Boolean       ;CaptionML=;
                                                   Editable=No }
    { 210 ;   ;Search Allowed      ;Boolean       ;CaptionML=ENU=Search Allowed;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Source Type,Code                        ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Source Type,Code,Standard Data           }
  }
  CODE
  {
    VAR
      MAXINDEXED@1100525000 : TextConst 'ENU=Max. Number of indexed Fields exceeded.';

    PROCEDURE CreateStandardCodes@1100528300(SourceType@1100528300 : Option);
    BEGIN
      CASE SourceType OF
        1: BEGIN
          DeleteMetadata(SourceType, 'SCDescription');

          CopyMetadata(SourceType, 'SCProjectNo', 'SCSourceNo');
          CopyMetadata(SourceType, 'SCProjectDescription', 'SCSourceDescription');
          CreateStandardCodesProject;
        END;
        2: BEGIN
          CopyMetadata(SourceType, 'SCLocationNo', 'SCSourceNo');
          CopyMetadata(SourceType, 'SCLocationDescription', 'SCSourceDescription');
          CreateStandardCodesServiceLocation;
        END;
      END;
      // Name            DataType
      // SourceType      Option
      // MetadataCode    Text30
      // MandatoryField  Boolean
      // Show in Edit    Boolean
      // RefinerAllowed  Boolean
      // DescriptionENU  Text50
      // DescriptionNLD  Text50
      // RefinerCode     Text30
      // RefinerType     Option
      // RefinerPosition Integer
      // Indexed         Boolean
    END;

    LOCAL PROCEDURE CreateStandardCodesProject@1100528301();
    BEGIN
      CreateStandardCodesSharePoint(1);
      CreateStandardCodesDPT(1);
      CreateStandardCode(1, 'SCElementCode', FALSE, FALSE, TRUE, 'Element Code', 'Elementcode', '', 1, 0, FALSE);
      CreateStandardCode(1, 'SCPlotNo', FALSE, FALSE, FALSE, 'Plots', 'Bouwnummers', '', 1, 0, FALSE);
      CreateStandardCode(1, 'SCSiteStatus', FALSE, FALSE, TRUE, 'Project Status', 'Projectstatus', '', 1, 0, FALSE);
      CreateStandardCode(1, 'SCSourceNo', FALSE, FALSE, FALSE, 'Project No', 'Projectnr', '', 1, 0, FALSE);
      CreateStandardCode(1, 'SCSourceDescription', FALSE, FALSE, FALSE, 'Project Description', 'Project omschrijving', '', 1, 0, FALSE);
      CreateStandardCode(1, 'SCRemark', FALSE, FALSE, FALSE, 'Remark', 'Opmerking', '', 1, 0, FALSE);

      //CoverLetter
      //CreateStandardCode(1, 'SCBody', FALSE, FALSE, TRUE, 'Body', 'Inhoud', '', 1, 0, FALSE);
      //CreateStandardCode(1, 'SCCc', FALSE, FALSE, TRUE, 'CC', 'CC', '', 1, 0, FALSE);
      //CreateStandardCode(1, 'SCDocumentVersion', FALSE, FALSE, TRUE, 'Document Version', 'Document Versie', '', 1, 0, FALSE);
      //CreateStandardCode(1, 'SCFrom', FALSE, FALSE, TRUE, 'From', 'Van', '', 1, 0, FALSE);
      //CreateStandardCode(1, 'SCReceivedOn', FALSE, FALSE, TRUE, 'Received on', 'Ontvangen op', '', 1, 0, FALSE);
      //CreateStandardCode(1, 'SCTo', FALSE, FALSE, TRUE, 'To', 'Naar', '', 1, 0, FALSE);
    END;

    LOCAL PROCEDURE CreateStandardCodesServiceLocation@1100528303();
    BEGIN
      CreateStandardCodesSharePoint(2);
      CreateStandardCodesDPT(2);
      CreateStandardCode(2, 'SCSourceNo', FALSE, FALSE, FALSE, 'Location No', 'Locatienr', '', 1, 0, FALSE);
      CreateStandardCode(2, 'SCSourceDescription', FALSE, FALSE, FALSE, 'Location Description', 'Locatie omschrijving', '', 1, 0, FALSE);
    END;

    LOCAL PROCEDURE CreateStandardCodesSharePoint@1100528307(SourceType@1100528300 : Option);
    BEGIN
      CreateStandardCode(SourceType, '_UIVersionString', FALSE, FALSE, FALSE, 'Version', 'Versie', '', 1, 0, FALSE);
      CreateStandardCode(SourceType, 'CheckoutUser', FALSE, FALSE, FALSE, 'Checked Out User', 'Uitgechecked door', '', 1, 0, FALSE);
      CreateStandardCode(SourceType, 'DocIcon', FALSE, FALSE, FALSE, 'Document Icon', 'Document icoon', '', 1, 0, FALSE);
      CreateStandardCode(SourceType, 'Editor', FALSE, FALSE, FALSE, 'Modified By', 'Gewijzigd door', '', 1, 0, TRUE);
      CreateStandardCode(SourceType, 'FileType', FALSE, FALSE, TRUE, 'FileType', 'Bestandtype', 'FileType', 1, 1, FALSE);
      CreateStandardCode(SourceType, 'LinkFilename', FALSE, FALSE, FALSE, 'Name', 'Naam', '', 1, 0, FALSE);
      CreateStandardCode(SourceType, 'Modified', FALSE, FALSE, TRUE, 'Modified', 'Gewijzigd', 'LastModifiedTime', 4, 2, TRUE);
      CreateStandardCode(SourceType, 'Title', FALSE, TRUE, FALSE, 'Description', 'Omschrijving', '', 1, 0, FALSE);
      CreateStandardCode(SourceType, 'Author', FALSE, FALSE, FALSE, 'Created by', 'Aangemaakt door', '', 1, 0, TRUE);
      CreateStandardCode(SourceType, 'Created', FALSE, FALSE, FALSE, 'Created on', 'Aangemaakt op', '', 4, 0, FALSE);
    END;

    LOCAL PROCEDURE CreateStandardCodesDPT@1100528308(SourceType@1100528300 : Option);
    BEGIN
      CreateStandardCode(SourceType, 'SCCompany', FALSE, FALSE, TRUE, 'Company Name', 'Bedrijfsnaam', '', 1, 0, FALSE);
      CreateStandardCode(SourceType, 'SCRelatedCompany', FALSE, TRUE, TRUE, 'Related Company', 'Relatie', '', 1, 0, FALSE);
      CreateStandardCode(SourceType, 'SCContact', FALSE, TRUE, TRUE, 'Contact No', 'Contactnr', '', 1, 0, FALSE);
      CreateStandardCode(SourceType, 'SCContactPerson', FALSE, TRUE, TRUE, 'Contact Person No', 'Contactpersoonnr', '', 1, 0, FALSE);
      CreateStandardCode(SourceType, 'SCDocumentDate', FALSE, FALSE, TRUE, 'Document Date', 'Documentdatum', '', 4, 0, FALSE);
      CreateStandardCode(SourceType, 'SCDocumentId', FALSE, FALSE, FALSE, 'Navision Document Id', 'Navision document-Id', '', 1, 0, FALSE);
      CreateStandardCode(SourceType, 'SCDocumentNo', FALSE, FALSE, FALSE, 'Document Number', 'Documentnummer', '', 1, 0, FALSE);
      CreateStandardCode(SourceType, 'SCDocumentStatus', FALSE, FALSE, TRUE, 'Document Status', 'Documentstatus', '', 1, 0, FALSE);
      CreateStandardCode(SourceType, 'SCDocumentType', TRUE, TRUE, TRUE, 'Document Type', 'Documentsoort', '', 1, 0, TRUE);
      CreateStandardCode(SourceType, 'SCModificationDate', FALSE, FALSE, FALSE, 'Change Date', 'Wijzigingsdatum', '', 4, 0, FALSE);
      CreateStandardCode(SourceType, 'SCSourceType', FALSE, FALSE, FALSE, 'Portal Type', 'Portaalsoort', '', 1, 0, FALSE);
      CreateStandardCode(SourceType, 'SCModifiedByRelation', FALSE, FALSE, TRUE, 'Modified By Relation', 'Gewijzigd door relatie', '', 1, 0, FALSE);
    END;

    LOCAL PROCEDURE CreateStandardCode@1100528302(SourceType@1100528304 : Option;MetadataCode@1100528301 : Text[30];MandatoryField@1100525006 : Boolean;ShowInEdit@1100525002 : Boolean;RefinerAllowed@1100525004 : Boolean;DescriptionENU@1100528302 : Text[50];DescriptionNLD@1100528303 : Text[50];RefinerCode@1100525005 : Text[30];RefinerType@1100525001 : Option;RefinerPosition@1100525000 : Integer;IndexedIn@1100525003 : Boolean);
    VAR
      DPTSetup@1100528305 : Record 11229823;
      DPTMetadata@1100528300 : Record 11229825;
      Language@1100528306 : Record 8;
    BEGIN
      DPTSetup.GET;

      IF (NOT DPTMetadata.GET(SourceType, MetadataCode)) THEN BEGIN
        DPTMetadata.INIT;
        DPTMetadata."Source Type" := SourceType;
        DPTMetadata.Code := MetadataCode;
        DPTMetadata."Standard Data" := TRUE;
        DPTMetadata."Refiner Code" := RefinerCode;
        DPTMetadata."Refiner Type" := RefinerType;
        DPTMetadata."Show in Search" := (RefinerPosition > 0);
        DPTMetadata."Refiner Position" := RefinerPosition;
        DPTMetadata.INSERT;
      END;
      DPTMetadata.Mandatory := MandatoryField;
      DPTMetadata."Show in Edit" := ShowInEdit;
      DPTMetadata."Search Allowed" := RefinerAllowed;
      IF (NOT DPTMetadata."Search Allowed") THEN BEGIN
        DPTMetadata."Show in Search" := FALSE;
        DPTMetadata."Refiner Position" := 0;
      END;
      DPTMetadata.Indexed := IndexedIn;
      DPTMetadata.MODIFY;

      Language.SETFILTER("Windows Language ID", '>%1', 0);
      IF (NOT Language.FINDSET) THEN BEGIN
        DPTMetadata.VALIDATE(Description, DescriptionENU);
        DPTMetadata.VALIDATE("Refiner Description", DescriptionENU);
        EXIT;
      END;

      REPEAT
        CASE TRUE OF
          (Language."Windows Language ID" IN [1043,2067]): BEGIN
            IF (Language.Code = DPTSetup."Language Code") THEN BEGIN
              DPTMetadata.VALIDATE(Description, DescriptionNLD);
              DPTMetadata.VALIDATE("Refiner Description", DescriptionNLD);
            END ELSE BEGIN
              CreateDefaultTranslationDescription(SourceType, 0, MetadataCode, Language.Code, DescriptionNLD);
              CreateDefaultTranslationDescription(SourceType, 1, MetadataCode, Language.Code, DescriptionNLD);
            END;
          END;
          ELSE BEGIN
            IF (Language.Code = DPTSetup."Language Code") THEN BEGIN
              DPTMetadata.VALIDATE(Description, DescriptionENU);
              DPTMetadata.VALIDATE("Refiner Description", DescriptionENU);
            END ELSE BEGIN
              CreateDefaultTranslationDescription(SourceType, 0, MetadataCode, Language.Code, DescriptionENU);
              CreateDefaultTranslationDescription(SourceType, 1, MetadataCode, Language.Code, DescriptionENU);
            END;
          END;
        END;
        DPTMetadata.MODIFY;
      UNTIL (Language.NEXT = 0);
    END;

    LOCAL PROCEDURE CreateDefaultTranslationDescription@1100528310(SourceTypeIn@1100528301 : Option;TypeIn@1100528302 : Option;CodeIn@1100528303 : Text[30];LanguageCodeIn@1100528305 : Code[10];DescriptionIn@1100528306 : Text[50]);
    VAR
      DPTMetadataTranslation@1100528300 : Record 11229826;
    BEGIN
      IF (NOT DPTMetadataTranslation.GET(SourceTypeIn, TypeIn, CodeIn, LanguageCodeIn)) THEN BEGIN
        DPTMetadataTranslation."Source Type" := SourceTypeIn;
        DPTMetadataTranslation.Type := TypeIn;
        DPTMetadataTranslation."Metadata Code" := CodeIn;
        DPTMetadataTranslation."Language Code" := LanguageCodeIn;
        DPTMetadataTranslation.INSERT;
      END;
      DPTMetadataTranslation.Description := DescriptionIn;
      DPTMetadataTranslation.MODIFY;
    END;

    LOCAL PROCEDURE CopyMetadata@1100525003(SourceType@1100525001 : Option;MetadataCodeOld@1100525000 : Text[30];MetadataCodeNew@1100528300 : Text[30]);
    VAR
      DPTMetadataOld@1100525002 : Record 11229825;
      DPTMetadataNew@1100528301 : Record 11229825;
    BEGIN
      IF (DPTMetadataOld.GET(SourceType, MetadataCodeOld)) THEN BEGIN
        IF (DPTMetadataNew.GET(SourceType, MetadataCodeNew)) THEN
          DPTMetadataNew.DELETE;
        DPTMetadataNew.COPY(DPTMetadataOld);
        DPTMetadataNew.Code := MetadataCodeNew;
        DPTMetadataNew.INSERT;
        DPTMetadataOld.DELETE;
      END;
    END;

    LOCAL PROCEDURE DeleteMetadata@1100528309(SourceType@1100525001 : Option;MetadataCode@1100525000 : Text[30]);
    VAR
      DPTMetadata@1100525002 : Record 11229825;
      DPTMetadataTranslation@1100529900 : Record 11229826;
    BEGIN
      IF (DPTMetadata.GET(SourceType, MetadataCode)) THEN BEGIN
        DPTMetadataTranslation.SETRANGE("Source Type", SourceType);
        DPTMetadataTranslation.SETRANGE("Metadata Code", MetadataCode);
        DPTMetadataTranslation.DELETEALL;
        DPTMetadata.DELETE;
      END;
    END;

    LOCAL PROCEDURE CheckRefinerCode@1100528304();
    VAR
      DPTMetadata@1100528301 : Record 11229825;
    BEGIN
      IF ("Refiner Code" = '') THEN
        EXIT;
      DPTMetadata.SETRANGE("Source Type", "Source Type");
      DPTMetadata.SETFILTER(Code, '<>%1', Code);
      DPTMetadata.SETRANGE("Refiner Code", "Refiner Code");
      IF (DPTMetadata.FINDFIRST) THEN
        FIELDERROR("Refiner Code");
    END;

    LOCAL PROCEDURE CheckRefinerDescription@1100528305();
    VAR
      DPTMetadata@1100528300 : Record 11229825;
    BEGIN
      IF ("Refiner Code" = '') THEN
        EXIT;
      DPTMetadata.SETRANGE("Source Type", "Source Type");
      DPTMetadata.SETFILTER(Code, '<>%1', Code);
      DPTMetadata.SETRANGE("Refiner Description", "Refiner Description");
      IF (DPTMetadata.FINDFIRST) THEN
        FIELDERROR("Refiner Description");
    END;

    LOCAL PROCEDURE CheckRefinerPosition@1100528306();
    VAR
      DPTMetadata@1100528300 : Record 11229825;
    BEGIN
      DPTMetadata.SETRANGE("Source Type", "Source Type");
      DPTMetadata.SETFILTER(Code, '<>%1', Code);
      DPTMetadata.SETRANGE("Refiner Position", "Refiner Position");
      IF (DPTMetadata.FINDFIRST) THEN
        FIELDERROR("Refiner Position");
    END;

    LOCAL PROCEDURE CheckModifyAllowed@1100525001();
    BEGIN
      TESTFIELD("Standard Data", FALSE);
    END;

    LOCAL PROCEDURE CheckModifySearchAllowed@1100525000();
    BEGIN
      TESTFIELD("Search Allowed", TRUE);
    END;

    LOCAL PROCEDURE UpdateDefaultTranslationDescription@1100525010();
    VAR
      DPTSetup@1100528304 : Record 11229823;
      DPTMetadataTranslation@1100528300 : Record 11229826;
    BEGIN
      DPTSetup.GET;
      IF (NOT DPTMetadataTranslation.GET("Source Type", 0, Code, DPTSetup."Language Code")) THEN BEGIN
        DPTMetadataTranslation."Source Type" := "Source Type";
        DPTMetadataTranslation.Type := DPTMetadataTranslation.Type::Description;
        DPTMetadataTranslation."Metadata Code" := Code;
        DPTMetadataTranslation."Language Code" := DPTSetup."Language Code";
        DPTMetadataTranslation.INSERT;
      END;
      DPTMetadataTranslation.Description := Description;
      DPTMetadataTranslation.MODIFY;
    END;

    LOCAL PROCEDURE UpdateDefaultTranslationRefiner@1100525012();
    VAR
      DPTSetup@1100528301 : Record 11229823;
      DPTMetadataTranslation@1100528300 : Record 11229826;
    BEGIN
      DPTSetup.GET;
      IF (NOT DPTMetadataTranslation.GET("Source Type", 1, Code, DPTSetup."Language Code")) THEN BEGIN
        DPTMetadataTranslation."Source Type" := "Source Type";
        DPTMetadataTranslation.Type := DPTMetadataTranslation.Type::Refiner;
        DPTMetadataTranslation."Metadata Code" := Code;
        DPTMetadataTranslation."Language Code" := DPTSetup."Language Code";
        DPTMetadataTranslation.INSERT;
      END;
      DPTMetadataTranslation.Description := Description;
      DPTMetadataTranslation.MODIFY;
    END;

    LOCAL PROCEDURE InsertAdditionalDataRec@1100525002();
    VAR
      DPTAdditionalData@1100525000 : Record 11229827;
    BEGIN
      IF (DPTAdditionalData.GET("Source Type", Code)) THEN BEGIN
        VALIDATE(Description, DPTAdditionalData.Description);
        VALIDATE("Refiner Description", DPTAdditionalData.Description);
        "Show in Edit" := TRUE;
        "Search Allowed" := TRUE;
        CASE DPTAdditionalData.Type OF
          DPTAdditionalData.Type::Option:
            "Refiner Type" := "Refiner Type"::Text;
          ELSE
            "Refiner Type" := DPTAdditionalData.Type;
        END;
      END;
    END;

    LOCAL PROCEDURE CheckIndexed@1100525004();
    VAR
      DPTMetadata@1100525000 : Record 11229825;
    BEGIN
      IF (NOT Indexed) THEN BEGIN
        IF (NOT "Standard Data") THEN
          EXIT;
        IF (Code IN ['Modified', 'SCDocumentType']) THEN
          TESTFIELD(Indexed, TRUE);
        EXIT;
      END;

      IF (Code IN ['DocIcon']) THEN
        TESTFIELD(Indexed, FALSE);

      DPTMetadata.SETRANGE("Source Type", "Source Type");
      DPTMetadata.SETFILTER(Code, '<>%1', Code);
      DPTMetadata.SETRANGE(Indexed, TRUE);
      IF (DPTMetadata.COUNT >= 20) THEN
        ERROR(MAXINDEXED);
    END;

    BEGIN
    END.
  }
}

