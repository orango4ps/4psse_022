OBJECT Page 11072085 Save Segment Criteria
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00 (5142);
  }
  PROPERTIES
  {
    CaptionML=[DEU=Segmentkriterien speichern;
               ENU=Save Segment Criteria;
               NLD=Segmentcriteria opslaan;
               NOR=Lagre segmentkriterier;
               SVE=Spara segmentkriterium];
    PageType=StandardDialog;
    OnOpenPage=BEGIN
                 //**4PS.sn
                 IF CalledFromType <> CalledFromType::Segment THEN
                   CurrPage.CAPTION(Text11012000);
                 //**4PS.en
               END;

    OnQueryClosePage=BEGIN
                       IF CloseAction IN [ACTION::OK,ACTION::LookupOK] THEN
                         OKOnPush;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group      }

    { 2   ;2   ;Field     ;
                Name=Code;
                CaptionML=[DEU=Code;
                           ENU=Code;
                           NLD=Code;
                           NOR=Kode;
                           SVE=Kod];
                ToolTipML=[DEU=Gibt den Code fÅr die Segmentkriterien an, die Sie speichern mîchten.;
                           ENU=Specifies the code for the segment criteria that you want to save.;
                           NLD=Hiermee wordt de code opgegeven voor de segmentcriteria die u wilt opslaan.;
                           NOR=Angir koden for segmentkriteriene du vil lagre.;
                           SVE=Anger koden fîr segmentkriteriet som du vill spara.];
                ApplicationArea=#All;
                SourceExpr=Code;
                OnValidate=VAR
                             SavedSegCriteria@1001 : Record 11072049;
                             RefSavedCriteria@1210190001 : Record 11125861;
                           BEGIN
                             //**4PS.so
                             //IF Code <> '' THEN BEGIN
                             //  SavedSegCriteria.Code := Code;
                             //  SavedSegCriteria.INSERT;
                             //  SavedSegCriteria.DELETE;
                             //END;
                             //**4PS.eo

                             //**4PS.sn
                             IF Code = '' THEN
                               EXIT;

                             CASE CalledFromType OF
                               CalledFromType::ReferenceTool:
                                 BEGIN
                                   IF STRLEN(Code) > MAXSTRLEN(RefSavedCriteria.Code) THEN
                                     ERROR(Text11012001, MAXSTRLEN(RefSavedCriteria.Code));
                                   RefSavedCriteria.Code := Code;
                                   RefSavedCriteria.INSERT;
                                   RefSavedCriteria.DELETE;
                                 END;
                               ELSE
                                 BEGIN
                                   IF STRLEN(Code) > MAXSTRLEN(SavedSegCriteria.Code) THEN
                                     ERROR(Text11012001, MAXSTRLEN(SavedSegCriteria.Code));
                                   SavedSegCriteria.Code := Code;
                                   SavedSegCriteria.INSERT;
                                   SavedSegCriteria.DELETE;
                                 END;
                             END;
                             //**4PS.en
                           END;

                OnLookup=VAR
                           SavedSegCriteria@1210190000 : Record 11072049;
                           RefSavedCriteria@1210190003 : Record 11125861;
                         BEGIN
                           //**4PS.sn
                           //* Only code that does not exist allowed (see OnValidate, INSERT will give an error), only show which are exist already.
                           CASE CalledFromType OF
                             CalledFromType::ReferenceTool:
                               PAGE.RUNMODAL(0, RefSavedCriteria);
                             ELSE
                               PAGE.RUNMODAL(0, SavedSegCriteria);
                           END;
                           //**4PS.en
                         END;
                          }

    { 4   ;2   ;Field     ;
                CaptionML=[DEU=Beschreibung;
                           ENU=Description;
                           NLD=Omschrijving;
                           NOR=Beskrivelse;
                           SVE=Beskrivning];
                ToolTipML=[DEU=Gibt eine Beschreibung des Segments an.;
                           ENU=Specifies a description of the segment.;
                           NLD=Hiermee wordt een beschrijving van het segment opgegeven.;
                           NOR=Angir en beskrivelse av segmentet.;
                           SVE=Anger en beskrivning av segmentet.];
                ApplicationArea=#All;
                SourceExpr=Description }

  }
  CODE
  {
    VAR
      ExitAction@1000 : Action;
      Code@1001 : Code[20];
      Description@1002 : Text[100];
      CalledFromType@1210190000 : 'Segment,ReferenceTool';
      Text11012000@1210190001 : TextConst 'DEU=Kriterien speichern;ENU=Save Criterions;NLD=Criteria opslaan;NOR=Lagre kriterier;SVE=Spara kriterier';
      Text11012001@1210190002 : TextConst 'DEU=Max. LÑnge des Codes ist %1.;ENU=Max. length of Code is %1.;NLD=Max. lengte van code is %1.;NOR=Maks. Lengde for kode er %1.;SVE=MaxlÑngd fîr kod Ñr %1.';

    [External]
    PROCEDURE GetValues@1(VAR GetFormAction@1000 : Action;VAR GetCode@1001 : Code[10];VAR GetDescription@1002 : Text[100]);
    BEGIN
      GetFormAction := ExitAction;
      GetCode := Code;
      GetDescription := Description;
    END;

    [External]
    PROCEDURE SetValues@2(SetFormAction@1000 : Action;SetCode@1001 : Code[10];SetDescription@1002 : Text[100]);
    BEGIN
      ExitAction := SetFormAction;
      Code := SetCode;
      Description := SetDescription;
    END;

    LOCAL PROCEDURE OKOnPush@19066895();
    VAR
      SavedSegCriteria@1001 : Record 11072049;
      RefSavedCriteria@1210190001 : Record 11125861;
    BEGIN
      //**4PS.so
      //SavedSegCriteria.Code := Code;
      //SavedSegCriteria.TESTFIELD(Code);
      //**4PS.eo

      //**4PS.sn
      CASE CalledFromType OF
        CalledFromType::ReferenceTool:
          BEGIN
            RefSavedCriteria.Code := Code;
            RefSavedCriteria.TESTFIELD(Code);
          END;
        ELSE
          BEGIN
            SavedSegCriteria.Code := Code;
            SavedSegCriteria.TESTFIELD(Code);
          END;
      END;
      //**4PS.en

      ExitAction := ACTION::OK;
      CurrPage.CLOSE;
    END;

    PROCEDURE SetFromRefTool@1210190000(Description2@1210190000 : Text[50]);
    BEGIN
      //**4PS
      CalledFromType := CalledFromType::ReferenceTool;
      Description := Description2;
    END;

    BEGIN
    END.
  }
}

