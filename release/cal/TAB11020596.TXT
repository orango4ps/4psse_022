OBJECT Table 11020596 Assembly Yard Number Object
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF ("Assembly Project No." <> '') AND ("Assembly Company" = '') THEN
                 "Assembly Company" := COMPANYNAME; //kzwerver, 110111, n
               //kzwerver, 110105, sn, #24415
               IF ("Yard No." = '') AND
                  ("Entity Type" = 0) AND
                  ("System No." = '') AND
                  ("Entity No." = '')
               THEN BEGIN //Manual inserted device
                 "Entity Type" := "Entity Type"::Device;
                 "Entity No." := GetHighestManualItemNo;
               END;
               //kzwerver, 110105, en, #24415
               VALIDATE("Element No."); //kzwerver, 110303, n, #25731
               CheckEntityNo;
               VALIDATE(Quantity);
               InsertDefaultFeatureTypes;
             END;

    OnModify=BEGIN
               IF ("Assembly Project No." <> '') AND ("Assembly Company" = '') THEN
                 "Assembly Company" := COMPANYNAME; //kzwerver, 110111, n
               VALIDATE("Element No."); //kzwerver, 110303, n, #25731
               CheckEntityNo;
             END;

    OnDelete=BEGIN
               CheckIfDeleteIsAllowed;
               DeleteAssemblyFeatureTypes;
               DeleteAYNOElements; //kzwerver, 110601, n, #27789
               DeleteDocumentLinks;
             END;

    OnRename=BEGIN
               //Rename is not possible because of all logistic/finance links and intercompany issues
               //kzwerver, 110106
               ERROR(Text999);
             END;

    CaptionML=[ENU=Assembly Yard Number Object;
               NOR=Monteringsverksted Nummerobjekt;
               SVE=Montering av varvnummerobjekt];
    LookupPageID=Page11124928;
    DrillDownPageID=Page11124928;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr];
                                                   NotBlank=Yes }
    { 20  ;   ;Yard No.            ;Code20        ;CaptionML=[ENU=Yard No.;
                                                              NOR=Plassnr;
                                                              SVE=Platsnr];
                                                   Description=PEC? }
    { 30  ;   ;Entity Type         ;Option        ;CaptionML=[ENU=Entity Type;
                                                              NOR=Enhetstype;
                                                              SVE=Enhetstyp];
                                                   OptionCaptionML=[ENU=None,Cable,Device,Extra Need,,,,,,Position;
                                                                    SVE=Ingen,Kabel,Anordning,Extra behov,,,,,,Position];
                                                   OptionString=None,Cable,Device,ExtraNeed,,,,,,Position }
    { 35  ;   ;System No.          ;Code20        ;CaptionML=[ENU=System No.;
                                                              NOR=Systemnr;
                                                              SVE=Systemnr];
                                                   Description=PEC? }
    { 40  ;   ;Entity No.          ;Code20        ;CaptionML=[ENU=Entity No.;
                                                              NOR=Enhetsnr;
                                                              SVE=Enhetsnr] }
    { 45  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 50  ;   ;Part of             ;Boolean       ;CaptionML=[ENU=Part of Yard No.;
                                                              NOR=Del av plassnr;
                                                              SVE=Del av platsnr] }
    { 60  ;   ;Comment             ;Text250       ;CaptionML=[ENU=Comment;
                                                              NOR=Kommentar;
                                                              SVE=Kommentar] }
    { 70  ;   ;Delivery Date       ;Date          ;CaptionML=[ENU=Delivery Date Entity;
                                                              NOR=Leveringsdato for enhet;
                                                              SVE=Enhetsleveransdatum] }
    { 80  ;   ;Assembly Company    ;Text30        ;TableRelation=Company;
                                                   CaptionML=[ENU=Assembly Company;
                                                              NOR=Monteringsselskap;
                                                              SVE=Monteringsf”retag];
                                                   Description=PEC? }
    { 90  ;   ;Assembly Project No.;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=[ENU=Assembly Job No.;
                                                              NOR=Monteringsjobb nr;
                                                              SVE=Monteringsjobb nr];
                                                   Description=PEC? }
    { 95  ;   ;Assembly Project Status;Option     ;CaptionML=[ENU=Assembly Project Status;
                                                              NOR=Monteringsprosjektstatus;
                                                              SVE=Monteringsprojektstatus];
                                                   OptionCaptionML=[ENU=Estimation,Preparation,Production,Technical Finished,Administrative Finished,Finished,Archive,Archived;
                                                                    NOR=Kalkulering,Forberedelse,Produksjon,Teknisk ferdig,Administrativt ferdig,Ferdig,Arkiv,Arkivert;
                                                                    SVE=Kalkyl,F”rberedelse,Produktion,Tekniskt f„rdig,Administrativt f„rdig,F„rdig,Arkiv,Arkiverad];
                                                   OptionString=Estimation,Preparation,Production,Technical Finished,Administrative Finished,Finished,Archive,Archived }
    { 100 ;   ;Element No.         ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                IF "Element No." <> '' THEN BEGIN;
                                                                  FormatManagement.FormatElem("Element No.", 2, COMPANYNAME);
                                                                  ProjectElement.GET("Project No.", "Element No.");
                                                                  ProjectElement.CheckProjectElementBlocked;
                                                                  ProjectElement.GET("Project No.", "Element No.");
                                                                  IF ("Delivery Date Material" = 0D) THEN
                                                                    "Delivery Date Material" := ProjectElement."Starting Date";
                                                                  IF ("Delivery Date" = 0D) THEN
                                                                    "Delivery Date" := ProjectElement."Ending Date";
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Element No.;
                                                              NOR=Elementnr;
                                                              SVE=Elementnr] }
    { 110 ;   ;Delivery Date Material;Date        ;OnValidate=BEGIN
                                                                IF ("Delivery Date Material" <> xRec."Delivery Date Material") THEN BEGIN
                                                                  AssemblyProjectManagement.SynchronizeMatReqLineDelDate(
                                                                    "Project No.",
                                                                    "Yard No.",
                                                                    "Entity Type",
                                                                    "System No.",
                                                                    "Entity No.",
                                                                    "Delivery Date Material");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Delivery Date Material;
                                                              NOR=Leveringsdato for materiale;
                                                              SVE=Leveransdatum f”r material] }
    { 500 ;   ;Latest Released Version OLD;Code10 ;CaptionML=;
                                                   Description=PEC }
    { 510 ;   ;Latest Distributed Version OLD;Code10;
                                                   CaptionML=;
                                                   Description=PEC }
    { 520 ;   ;Latest Imported Version OLD;Code10 ;CaptionML=;
                                                   Description=PEC }
    { 530 ;   ;Startdate Test      ;Date          ;CaptionML=[ENU=Start Date Test;
                                                              NOR=Startdato for test;
                                                              SVE=Startdatum f”r test] }
    { 550 ;   ;Assembly Status     ;Code10        ;TableRelation="Assembly Status";
                                                   CaptionML=[ENU=Assembly Status;
                                                              NOR=Monteringsstatus;
                                                              SVE=Monteringsstatus] }
    { 570 ;   ;Quantity Project Inventory;Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Project Inventory Entry".Quantity WHERE (Project No.=FIELD(Project No.),
                                                                                                             Yard No.=FIELD(Yard No.),
                                                                                                             Entity Type=FIELD(Entity Type),
                                                                                                             System No.=FIELD(System No.),
                                                                                                             Entity No.=FIELD(Entity No.),
                                                                                                             Assembly Yard Number Object=CONST(Yes)));
                                                   CaptionML=[ENU=Quantity Project Inventory;
                                                              NOR=Antall prosjektlager;
                                                              SVE=Antal projektlager];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 580 ;   ;Posting Element Mandatory;Boolean  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job."Posting Element Mandatory" WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Posting Element Mandatory;
                                                              NOR=Bokf›ringselement obligatorisk;
                                                              SVE=Bokf”ringselement obligatoriskt];
                                                   Editable=No }
    { 585 ;   ;Project Description ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Project Description;
                                                              NOR=Prosjektbeskrivelse;
                                                              SVE=Projektbeskrivning];
                                                   Editable=No }
    { 586 ;   ;Project Creation Date;Date         ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job."Creation Date" WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Project Creation Date;
                                                   Editable=No }
    { 590 ;   ;Project Manager     ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job."Project Manager" WHERE (No.=FIELD(Project No.),
                                                                                                   Assembly Project=CONST(Yes)));
                                                   CaptionML=[ENU=Project Manager;
                                                              NOR=Prosjektleder;
                                                              SVE=Platschef];
                                                   Editable=No }
    { 591 ;   ;Project Manager Name;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Project Manager)));
                                                   CaptionML=[ENU=Project Manager Name;
                                                              NOR=Prosjektleders navn;
                                                              SVE=Platschef namn];
                                                   Description=Flowfield from flowfield does not (always) work correct use Function NemeProjectManager;
                                                   Editable=No }
    { 600 ;   ;Project Mechanic    ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Mechanic WHERE (No.=FIELD(Project No.),
                                                                                          Assembly Project=CONST(Yes)));
                                                   CaptionML=[ENU=Project Mechanic;
                                                              NOR=Mekanisk prosjekt;
                                                              SVE=Mekaniskt projekt];
                                                   Editable=No }
    { 601 ;   ;Project Mechanic Name;Text100      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Project Mechanic)));
                                                   CaptionML=[ENU=Project Mechanic Name;
                                                              NOR=Mekanisk prosjekt, navn;
                                                              SVE=Mekaniskt namn f”r projekt];
                                                   Description=Flowfield from flowfield does not (always) work correct use Function NemeProjectMechanic;
                                                   Editable=No }
    { 610 ;   ;Quantity            ;Decimal       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                "Qty. Service Objects" := Quantity;
                                                                CalcQtyToReportComplete;
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:0 }
    { 611 ;   ;Qty. to Report Complete;Decimal    ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                CheckQtyToReportComplete;
                                                              END;

                                                   CaptionML=[ENU=Qty. to Report Complete;
                                                              NOR=Antall † rapportere fullf›rt;
                                                              SVE=Antal att rapportera fullst„ndigt];
                                                   DecimalPlaces=0:0 }
    { 612 ;   ;Qty. Reported Complete;Decimal     ;CaptionML=[ENU=Qty. Reported Complete;
                                                              NOR=Antall rapportert sluttf›rt;
                                                              SVE=Antal Rapportering slutf”rd];
                                                   DecimalPlaces=0:0;
                                                   Editable=No }
    { 614 ;   ;Qty. Service Objects;Decimal       ;OnValidate=BEGIN
                                                                IF ("Qty. Service Objects" > Quantity) THEN
                                                                  "Qty. Service Objects" := Quantity;
                                                              END;

                                                   CaptionML=[ENU=Qty. Service Objects;
                                                              NOR=Antall serviceobjekter;
                                                              SVE=Antal serviceobjekt];
                                                   DecimalPlaces=0:0 }
    { 620 ;   ;Assigned Quantity   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Assembly Yard No. Obj. Element".Quantity WHERE (Project No.=FIELD(Project No.),
                                                                                                                    Yard No.=FIELD(Yard No.),
                                                                                                                    Entity Type=FIELD(Entity Type),
                                                                                                                    System No.=FIELD(System No.),
                                                                                                                    Entity No.=FIELD(Entity No.),
                                                                                                                    Element=FIELD(Element Filter)));
                                                   CaptionML=[ENU=Assigned Quantity;
                                                              NOR=Tilordnet antall;
                                                              SVE=Tilldelat antal];
                                                   DecimalPlaces=0:0 }
    { 630 ;   ;Element Filter      ;Code20        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Element Filter;
                                                              NOR=Elementfilter;
                                                              SVE=Elementfilter] }
    { 640 ;   ;Total Assigned Qty. ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Assembly Yard No. Obj. Element".Quantity WHERE (Project No.=FIELD(Project No.),
                                                                                                                    Yard No.=FIELD(Yard No.),
                                                                                                                    Entity Type=FIELD(Entity Type),
                                                                                                                    System No.=FIELD(System No.),
                                                                                                                    Entity No.=FIELD(Entity No.),
                                                                                                                    Element Type=FIELD(Element Type Filter)));
                                                   CaptionML=[ENU=Total Assigned Qty.;
                                                              NOR=Totalt tilordnet antall;
                                                              SVE=Totalt tilldelat antal] }
    { 650 ;   ;Element Type Filter ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Element Type Filter;
                                                              NOR=Elementtypefilter;
                                                              SVE=Elementtypfilter];
                                                   OptionCaptionML=[ENU=General,Production,Installation;
                                                                    NOR=Generelt,Produksjon,Installasjon;
                                                                    SVE=Allm„nt,Produktion,Installation];
                                                   OptionString=General,Production,Installation }
    { 680 ;   ;Assembly Hours      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Hour Accounting Line"."Total Line" WHERE (Project No.=FIELD(Project No.),
                                                                                                              Element=FIELD(Element No.),
                                                                                                              Type=CONST(Project),
                                                                                                              Cost Type=CONST(Labor)));
                                                   CaptionML=[ENU=Assembly Hours;
                                                              NOR=Monteringstimer;
                                                              SVE=Monteringstimmar] }
    { 690 ;   ;Test Hours          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Hour Accounting Line"."Total Line" WHERE (Project No.=FIELD(Project No.),
                                                                                                              Element=FIELD(Element No.),
                                                                                                              Type=CONST(Project),
                                                                                                              Cost Type=CONST(Labor)));
                                                   CaptionML=[ENU=Test Hours;
                                                              NOR=Testtimer;
                                                              SVE=Testtimmar] }
    { 700 ;   ;Applicable in       ;Option        ;CaptionML=[ENU=Applicable in;
                                                              NOR=Tilgjengelig i;
                                                              SVE=Till„mpligt i];
                                                   OptionCaptionML=[ENU=Production and Installation,Production,Installation;
                                                                    NOR=Produksjon og installasjon,Produksjon,Installasjon;
                                                                    SVE=Produktion och installation,Produktion,Installation];
                                                   OptionString=Production and Installation,Production,Installation;
                                                   Description=PEC? }
    { 710 ;   ;Drawing             ;Text30        ;CaptionML=[ENU=Drawing;
                                                              NOR=Tegning;
                                                              SVE=Ritning] }
    { 720 ;   ;Standard Object No. ;Code20        ;CaptionML=[ENU=Standard Object No.;
                                                              NOR=Standardobjektnr;
                                                              SVE=Standardobjektsnr] }
    { 730 ;   ;Object No.          ;Code20        ;CaptionML=[ENU=Object No.;
                                                              NOR=Objektnr.;
                                                              SVE=Objektnr] }
    { 800 ;   ;Sales Order No.     ;Code20        ;TableRelation="Sales Header".No. WHERE (Document Type=FILTER(Order));
                                                   CaptionML=[ENU=Sales Order No.;
                                                              NOR=Salgsordrenr.;
                                                              SVE=F”rs.ordernr];
                                                   Description=DP00481;
                                                   Editable=No }
    { 810 ;   ;Estimate No.        ;Code20        ;TableRelation=Estimate;
                                                   CaptionML=[ENU=Estimate No.;
                                                              NOR=Kalkylenr;
                                                              SVE=Kalkylnr] }
    { 820 ;   ;Purchase Route Reference;Code20    ;OnLookup=VAR
                                                              PurchRouteRefManagement@1100528400 : Codeunit 11012045;
                                                            BEGIN
                                                              PurchRouteRefManagement.ShowReferenceList("Purchase Route Reference");
                                                            END;

                                                   CaptionML=[ENU=Purchase Route Reference;
                                                              NOR=Referanse for Innkj›psrute;
                                                              SVE=Referens f”r ink”psf”ljd];
                                                   Editable=No }
    { 830 ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order";
                                                   CaptionML=[ENU=Service Order No.;
                                                              NOR=Serviceordrenr.;
                                                              SVE=Serviceordernr];
                                                   Description=DP01183 }
    { 831 ;   ;Target Company      ;Text50        ;TableRelation=Company;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Target Company;
                                                              SVE=M†lf”retag] }
    { 840 ;   ;Future Item No.     ;Code20        ;TableRelation=Item;
                                                   CaptionML=ENU=Future Item No. }
    { 850 ;   ;Advice Orders       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Advice Order Line" WHERE (Record Type=FILTER(Project),
                                                                                                Processed=FILTER(No),
                                                                                                Project No.=FIELD(Project No.),
                                                                                                Entity Type=FIELD(Entity Type),
                                                                                                Entity No.=FIELD(Entity No.)));
                                                   CaptionML=[ENU=Advice Orders;
                                                              SVE=Best„llningsunderlag] }
    { 860 ;   ;Material Requirement Lines;Integer ;FieldClass=FlowField;
                                                   CalcFormula=Count("Assembly Object Mat. Req. Line" WHERE (Project No.=FIELD(Project No.),
                                                                                                             Entity Type=FIELD(Entity Type),
                                                                                                             Entity No.=FIELD(Entity No.)));
                                                   CaptionML=[ENU=Material Requirement Lines;
                                                              SVE=Materialbehovsrader] }
    { 870 ;   ;Identification Number;Text30       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Identification Number }
    { 880 ;   ;Deliver             ;Option        ;OnValidate=BEGIN
                                                                IF Deliver <> xRec.Deliver THEN
                                                                  "Ship To Location" := '';
                                                              END;

                                                   CaptionML=[ENU=Deliver;
                                                              SVE=Leverera];
                                                   OptionCaptionML=[ENU=" ,Location,Project Location";
                                                                    SVE=" ,Lagerst„lle,Etablering"];
                                                   OptionString=[ ,Location,Project Location] }
    { 890 ;   ;Ship To Location    ;Code20        ;TableRelation=IF (Deliver=CONST(Project Location)) "Project Location".Code WHERE (Project No.=FIELD(Project No.))
                                                                 ELSE IF (Deliver=CONST(Location)) Location.Code;
                                                   OnValidate=BEGIN
                                                                IF ("Ship To Location" <> '') AND (Deliver = Deliver::" ") THEN
                                                                  FIELDERROR(Deliver);
                                                              END;

                                                   CaptionML=[ENU=Ship To Location;
                                                              SVE=Leverera till lagerst„lle] }
  }
  KEYS
  {
    {    ;Project No.,Yard No.,Entity Type,System No.,Entity No.;
                                                   Clustered=Yes }
    {    ;Project No.,Part of,Entity Type          }
    {    ;Project No.,Assembly Status              }
    {    ;Project No.,Yard No.,Entity Type,Entity No.,Delivery Date Material }
    {    ;Project No.,Yard No.,Entity Type,Entity No.,Delivery Date }
    {    ;Project No.,Yard No.,Entity Type,Entity No.,Startdate Test }
    {    ;Purchase Route Reference                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text002@1100526110 : TextConst 'ENU=Manual Item-;NOR=Manuell artikkel-;SVE=Manuell artikel-';
      JobsSetup@1100526111 : Record 315;
      Text005@1100526101 : TextConst 'ENU=Input is aborted.;NOR=Innmating avbrutt;SVE=Indata har tagits bort.';
      Text008@1100526104 : TextConst 'ENU=There are still Material Requirement Lines present for Assembly Project %1.;NOR=Det finnes fortsatt rader for materialekrav for monteringsprosjekt %1.;SVE=Det finns fortfarande rader f”r materialkrav f”r monteringsprojekt %1.';
      Text010@1100528300 : TextConst 'ENU="Some %1 already have a %2; they are removed from the selection.";NOR=Noen %1 har allerede en %2, disse fjernes fra utvalget.;SVE=Vissa %1 har redan en %2, de tas bort fr†n urvalet.';
      AssemblyJob@1100526113 : Record 11072003;
      Text016@1210190000 : TextConst 'ENU=%1 should not be greater than %2 for %3 %4 and %5 %6.;NOR=%1 kan ikke v‘re st›rre enn %2 for %3 %4 og %5 %6.;SVE=%1 f†r inte vara st”rre „n %2 f”r %3 %4 och %5 %6.';
      Text017@1210190001 : TextConst 'ENU=%1 should not be less than %2 for %3 %4 and %5 %6.;NOR=%1 kan ikke v‘re mindre enn %2 for %3 %4 og %5 %6.;SVE=%1 f†r inte vara mindre „n %2 f”r %3 %4 och %5 %6.';
      Text999@1100526115 : TextConst 'ENU=Rename is not allowed.;NOR=Gi nytt navn ikke tillatt;SVE=Att ge nytt namn „r inte till†tet.';
      ProjectElement@1100526116 : Record 11012010;
      FormatManagement@1100526112 : Codeunit 11012022;
      AssemblyProjectManagement@1100526117 : Codeunit 11012248;
      JobsSetupRead@1100526118 : Boolean;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;

    PROCEDURE ShowComments@1100485002();
    VAR
      CommentLineExtended@1100485000 : Record 11020314;
      CommentSheetExt@1100485001 : Page 11071831;
    BEGIN
      CommentLineExtended.SETRANGE("Table1 Name", CommentLineExtended."Table1 Name"::"Assembly Project");
      CommentLineExtended.SETRANGE("Table1 No.", "Project No.");
      CommentLineExtended.SETRANGE("Table2 Name", CommentLineExtended."Table2 Name"::"Build Number");
      CommentLineExtended.SETRANGE("Table2 No.", "Yard No.");
      CommentLineExtended.SETRANGE("Table3 Name", CommentLineExtended."Table3 Name"::Device);
      CommentLineExtended.SETRANGE("Table3 No.", "System No.");
      CommentSheetExt.SETTABLEVIEW(CommentLineExtended);
      CommentSheetExt.RUNMODAL;
    END;

    PROCEDURE PostInProjectInventory@1100526100();
    VAR
      LocationCode@1100526105 : Code[20];
      ShelfCode@1100526106 : Code[20];
      BinCode@1100526111 : Code[20];
    BEGIN
      IF (GetLocationInfoForPosting(LocationCode, ShelfCode, BinCode)) THEN //kzwerver, 110510, c, #27140
        PostAYNOsInProjectInventory(LocationCode, ShelfCode, BinCode);
    END;

    PROCEDURE CreateItemJournalLine@1100528100();
    VAR
      LocationCode@1100526105 : Code[20];
      ShelfCode@1100526106 : Code[20];
      BinCode@1100526111 : Code[20];
    BEGIN
      IF (GetLocationInfoForItemJournalLine(LocationCode, ShelfCode, BinCode)) THEN
        ConvertAYNOsToItemJournalLines(LocationCode, ShelfCode, BinCode);
    END;

    PROCEDURE GetLocationInfoForPosting@1210190005(VAR LocationCode@1210190002 : Code[20];VAR ShelfCode@1210190001 : Code[20];VAR BinCode@1210190000 : Code[20]) : Boolean;
    VAR
      InventorySetup@1210190004 : Record 313;
      ModifyAssemblyData@1210190003 : Report 11072113;
      CostObject@1210190005 : Code[20];
      Cancelled@1210190006 : Boolean;
    BEGIN
      //kkleermaker: Please don't change this function, because it is called by customization of De Groot & Visser.
      InventorySetup.GET;
      InventorySetup.TESTFIELD("Cost Object Proj. Invt. Ass.");

      LocationCode := GetPreferenceLocation;
      BinCode := GetPreferenceBinLocation(LocationCode);

      ModifyAssemblyData.SetProjectNo("Project No.");
      ModifyAssemblyData.SetLocationCode(LocationCode);
      ModifyAssemblyData.SetBinCode(BinCode);
      ModifyAssemblyData.SetCostObject(InventorySetup."Cost Object Proj. Invt. Ass.");
      ModifyAssemblyData.RUNMODAL;
      ModifyAssemblyData.GetDataProjectInventory(LocationCode, BinCode, ShelfCode, CostObject, Cancelled);
      IF Cancelled THEN BEGIN
        MESSAGE(Text005); //kzwerver, 110510, c, #27140
        EXIT(FALSE); //kzwerver, 110510, n, #27140
      END;
      ModifyAssemblyData.ValidateLocationCode(LocationCode);
      ModifyAssemblyData.ValidateBinCode("Project No.", LocationCode, BinCode);
      ModifyAssemblyData.ValidateShelfCode(ShelfCode);
      ModifyAssemblyData.ValidateCostObject(CostObject);
      EXIT(TRUE);
    END;

    PROCEDURE GetLocationInfoForItemJournalLine@1100528101(VAR LocationCode@1210190002 : Code[20];VAR ShelfCode@1210190001 : Code[20];VAR BinCode@1210190000 : Code[20]) : Boolean;
    VAR
      InventorySetup@1210190004 : Record 313;
      ModifyAssemblyData@1210190003 : Report 11072113;
      CostObject@1210190005 : Code[20];
      Cancelled@1210190006 : Boolean;
    BEGIN
      InventorySetup.GET;
      InventorySetup.TESTFIELD("Cost Object Proj. Invt. Ass.");

      LocationCode := GetPreferenceLocation;
      BinCode := GetPreferenceBinLocation(LocationCode);

      ModifyAssemblyData.SetProjectNo("Project No.");
      ModifyAssemblyData.SetLocationCode(LocationCode);
      ModifyAssemblyData.SetBinCode(BinCode);
      ModifyAssemblyData.HideCostObject;
      ModifyAssemblyData.RUNMODAL;
      ModifyAssemblyData.GetDataProjectInventory(LocationCode, BinCode, ShelfCode, CostObject, Cancelled);
      IF Cancelled THEN BEGIN
        MESSAGE(Text005);
        EXIT(FALSE);
      END;
      ModifyAssemblyData.ValidateLocationCode(LocationCode);
      ModifyAssemblyData.ValidateBinCode("Project No.", LocationCode, BinCode);
      ModifyAssemblyData.ValidateShelfCode(ShelfCode);
      EXIT(TRUE);
    END;

    PROCEDURE PostAYNOsInProjectInventory@1210190006(LocationCode@1210190003 : Code[20];ShelfCode@1210190002 : Code[20];BinCode@1210190001 : Code[20]);
    VAR
      AssemblyYardNumberObject@1210190000 : Record 11020596;
    BEGIN
      //kkleermaker: Please don't change this function, because it is called by customization of De Groot & Visser.
      ReadJobsSetup; //kzwerver, 100311, n, #24884
      JobsSetup.TESTFIELD("Assembly Project Base Unit");

      AssemblyYardNumberObject.COPY(Rec);
      IF AssemblyYardNumberObject.FINDSET THEN
        REPEAT
          AssemblyYardNumberObject.PostAYNOInProjectInventory(
            LocationCode,
            ShelfCode,
            BinCode,
            JobsSetup."Assembly Project Base Unit");
        UNTIL AssemblyYardNumberObject.NEXT = 0;
    END;

    PROCEDURE ConvertAYNOsToItemJournalLines@1100528102(LocationCode@1210190003 : Code[20];ShelfCode@1210190002 : Code[20];BinCode@1210190001 : Code[20]);
    VAR
      AssemblyYardNumberObject@1210190000 : Record 11020596;
    BEGIN
      ReadJobsSetup;
      JobsSetup.TESTFIELD("Assembly Project Base Unit");

      AssemblyYardNumberObject.COPY(Rec);
      IF AssemblyYardNumberObject.FINDSET THEN
        REPEAT
          AssemblyYardNumberObject.ConvertAYNOToItemJournalLine(
            LocationCode,
            ShelfCode,
            BinCode,
            JobsSetup."Assembly Project Base Unit");
        UNTIL AssemblyYardNumberObject.NEXT = 0;
    END;

    PROCEDURE PostAYNOInProjectInventory@1210190002(LocationCode@1210190002 : Code[20];ShelfCode@1210190001 : Code[20];BinCode@1210190000 : Code[20];AssemblyProjectBaseUnit@1210190003 : Code[10]);
    VAR
      ProjectInventoryDelivery@1100526102 : Record 11012671;
      ProjectInventDeliveryPost@1100526101 : Codeunit 11012671;
    BEGIN
      TESTFIELD("Qty. to Report Complete");
      TESTFIELD(Description);
      CheckQtyToReportComplete;

      ProjectInventoryDelivery.SETRANGE("Project No.", "Project No.");
      ProjectInventoryDelivery."Project No." := "Project No.";
      ProjectInventoryDelivery."Line No." := GetFirstFreeProjInvDelLineNo;
      ProjectInventoryDelivery."Posting Date" := TODAY;
      ProjectInventoryDelivery."Entry Type" := ProjectInventoryDelivery."Entry Type"::"Positive Adjmt.";
      ProjectInventoryDelivery.Description := COPYSTR(Description, 1, MAXSTRLEN(ProjectInventoryDelivery.Description));
      ProjectInventoryDelivery."Description 2" := '';
      ProjectInventoryDelivery."Location Code" := LocationCode;
      ProjectInventoryDelivery."Bin Code" := BinCode;
      ProjectInventoryDelivery."Shelf No." := ShelfCode;
      ProjectInventoryDelivery.Quantity := "Qty. to Report Complete";
      ProjectInventoryDelivery."Unit of Measure Code" := AssemblyProjectBaseUnit;
      ProjectInventoryDelivery.Element := "Element No.";
      ProjectInventoryDelivery."Yard No." := "Yard No.";
      ProjectInventoryDelivery."Entity Type" := "Entity Type";
      ProjectInventoryDelivery."System No." := "System No.";
      ProjectInventoryDelivery."Entity No." := "Entity No.";
      ProjectInventoryDelivery."Assembly Yard Number Object" := TRUE;
      ProjectInventoryDelivery.Deliver := Deliver;
      ProjectInventoryDelivery."Ship To Location" := "Ship To Location";
      ProjectInventoryDelivery.INSERT(TRUE);

      ProjectInventoryDelivery.SETRECFILTER; //C022380
      ProjectInventDeliveryPost.RunWithCheck(ProjectInventoryDelivery, '');

      CalcQtyFieldsAfterReportCompl;
      MODIFY;
    END;

    PROCEDURE ConvertAYNOToItemJournalLine@1100528103(LocationCode@1210190002 : Code[20];ShelfCode@1210190001 : Code[20];BinCode@1210190000 : Code[20];AssemblyProjectBaseUnit@1210190003 : Code[10]);
    VAR
      ItemJournalLine@1100528102 : Record 83;
      Item@1100528101 : Record 27;
      Job@1100528100 : Record 11072003;
      ItemJournalTemplate@1100528105 : Record 82;
      ItemJournalBatch@1100528104 : Record 233;
      NoSeriesManagement@1100528103 : Codeunit 396;
      InventorySetup@1100528106 : Record 313;
      ItemJnlPostLine@1100528107 : Codeunit 22;
    BEGIN
      TESTFIELD("Qty. to Report Complete");
      TESTFIELD(Description);
      TESTFIELD("Future Item No.");
      CheckQtyToReportComplete;

      InventorySetup.GET;
      InventorySetup.TESTFIELD("Assembly Item Journal Template");
      InventorySetup.TESTFIELD("Assembly Item Journal Batch");

      ItemJournalTemplate.GET(InventorySetup."Assembly Item Journal Template");
      ItemJournalBatch.GET(InventorySetup."Assembly Item Journal Template", InventorySetup."Assembly Item Journal Batch");

      ItemJournalLine.INIT;

      ItemJournalLine.VALIDATE("Journal Template Name", InventorySetup."Assembly Item Journal Template");
      ItemJournalLine.VALIDATE("Journal Batch Name", InventorySetup."Assembly Item Journal Batch");
      ItemJournalLine.VALIDATE("Line No.", GetFirstFreeItemJnlLineNo(ItemJournalLine."Journal Template Name", ItemJournalLine."Journal Batch Name"));
      ItemJournalLine.VALIDATE("Posting Date", WORKDATE);
      ItemJournalLine.VALIDATE("Document Date", WORKDATE);
      ItemJournalLine.VALIDATE("Project Stock", TRUE);
      ItemJournalLine.VALIDATE("Job No.", "Project No.");
      ItemJournalLine.VALIDATE("Entity Type", "Entity Type");
      ItemJournalLine.VALIDATE("Entity No.", "Entity No.");
      ItemJournalLine.VALIDATE("Item No.", "Future Item No.");
      ItemJournalLine.VALIDATE("Entry Type", ItemJournalLine."Entry Type"::Sale);
      ItemJournalLine.VALIDATE(Element, "Element No.");

      IF ItemJournalBatch."Posting No. Series" <> '' THEN BEGIN
        CLEAR(NoSeriesManagement);
        ItemJournalLine.VALIDATE("Document No.",
          NoSeriesManagement.TryGetNextNo(
            ItemJournalBatch."Posting No. Series", ItemJournalLine."Posting Date"));
      END;

      ItemJournalLine.VALIDATE(Quantity, -"Qty. to Report Complete");
      ItemJournalLine.VALIDATE("Location Code", LocationCode);
      ItemJournalLine.VALIDATE("Bin Code", BinCode);
      ItemJournalLine.VALIDATE("Shelf No.", ShelfCode);
      ItemJournalLine.VALIDATE(Deliver, Deliver);
      ItemJournalLine.VALIDATE("Ship To Location", "Ship To Location");

      IF Item.GET("Future Item No.") THEN BEGIN
        ItemJournalLine.VALIDATE("Unit Cost", Item."Unit Cost");
        ItemJournalLine.VALIDATE("Shortcut Dimension 2 Code", Item."Global Dimension 2 Code");
        //ItemJournalLine."Gen. Prod. Posting Group" := Item."Gen. Prod. Posting Group";
      END;

      IF Job.GET("Project No.") THEN
        ItemJournalLine.VALIDATE("Shortcut Dimension 1 Code", Job."Global Dimension 1 Code");

      IF InventorySetup."Post Assembly Item Jnl. Direct" THEN
        ItemJnlPostLine.RunWithCheck(ItemJournalLine)
      ELSE
        ItemJournalLine.INSERT(TRUE);

      CalcQtyFieldsAfterReportCompl;
      MODIFY;
    END;

    LOCAL PROCEDURE GetFirstFreeProjInvDelLineNo@1210190004() : Integer;
    VAR
      ProjectInventoryDelivery@1210190000 : Record 11012671;
    BEGIN
      ProjectInventoryDelivery.SETRANGE("Project No.", "Project No.");
      IF ProjectInventoryDelivery.FINDLAST THEN
        EXIT(ProjectInventoryDelivery."Line No." + 10000);
      EXIT(10000);
    END;

    LOCAL PROCEDURE GetFirstFreeItemJnlLineNo@1100528104(JournalTemplateName@1100528101 : Code[10];JournalBatchName@1100528102 : Code[10]) : Integer;
    VAR
      ItemJournalLine@1210190000 : Record 83;
    BEGIN
      ItemJournalLine.SETRANGE("Journal Template Name", JournalTemplateName);
      ItemJournalLine.SETRANGE("Journal Batch Name", JournalBatchName);
      IF ItemJournalLine.FINDLAST THEN
        EXIT(ItemJournalLine."Line No." + 10000);
      EXIT(10000);
    END;

    PROCEDURE DeleteCurrentMatReqLines@1100526105();
    VAR
      MaterialRequirementLine@1100526100 : Record 11012526;
    BEGIN
      MaterialRequirementLine.RESET;
      MaterialRequirementLine.SETRANGE("Project No.", "Project No.");
      MaterialRequirementLine.SETRANGE("Yard No.", "Yard No.");
      MaterialRequirementLine.SETRANGE("Entity Type", "Entity Type");
      MaterialRequirementLine.SETRANGE("System No.", "System No.");
      MaterialRequirementLine.SETRANGE("Entity No.", "Entity No.");
      MaterialRequirementLine.DELETEALL(TRUE);
    END;

    PROCEDURE OpenMatRequirementLineList@1100526102();
    VAR
      MaterialRequirementLineList@1100526100 : Page 11072352;
      MaterialRequirementLine@1100526101 : Record 11012526;
    BEGIN
      MaterialRequirementLine.RESET;
      MaterialRequirementLine.SETRANGE("Project No.", "Project No.");
      MaterialRequirementLine.SETRANGE("Yard No.", "Yard No.");
      MaterialRequirementLine.SETRANGE("Entity Type", "Entity Type");
      MaterialRequirementLine.SETRANGE("System No.", "System No.");
      MaterialRequirementLine.SETRANGE("Entity No.", "Entity No.");
      CLEAR(MaterialRequirementLineList);
      MaterialRequirementLineList.EDITABLE(FALSE);
      MaterialRequirementLineList.SETTABLEVIEW(MaterialRequirementLine);
      MaterialRequirementLineList.RUNMODAL;
    END;

    PROCEDURE CheckIfDeleteIsAllowed@1100526103();
    VAR
      ProjectMaterialReqLine@1100526100 : Record 11012526;
    BEGIN
      //kzwerver, 20101216
      ProjectMaterialReqLine.SETRANGE("Project No.", "Project No.");
      ProjectMaterialReqLine.SETRANGE("Yard No.", "Yard No.");
      ProjectMaterialReqLine.SETRANGE("Entity Type", "Entity Type");
      ProjectMaterialReqLine.SETRANGE("System No.", "System No.");
      ProjectMaterialReqLine.SETRANGE("Entity No.", "Entity No.");
      IF ProjectMaterialReqLine.COUNT > 0 THEN
        ERROR(Text008, "Project No.");
    END;

    PROCEDURE GetHighestManualItemNo@1100526106() : Code[20];
    VAR
      AssemblyYardNumberObject@1100526101 : Record 11020596;
    BEGIN
      //kzwerver, 110105, n, #24415
      AssemblyYardNumberObject.SETRANGE("Project No.", "Project No.");
      AssemblyYardNumberObject.SETRANGE("Yard No.", '');
      AssemblyYardNumberObject.SETRANGE("Entity Type", "Entity Type"::Device);
      AssemblyYardNumberObject.SETRANGE("System No.", '');
      IF (AssemblyYardNumberObject.FINDLAST) THEN
        EXIT(INCSTR(AssemblyYardNumberObject."Entity No."));
      EXIT(Text002 + '0');
    END;

    LOCAL PROCEDURE GetPreferenceLocation@1100526107() : Code[20];
    VAR
      PreferenceLocation@1100526100 : Record 11020353;
    BEGIN
      PreferenceLocation.SETCURRENTKEY(Priority);
      PreferenceLocation.SETFILTER(Priority, '>=%1', 0);
      PreferenceLocation.SETRANGE(Type, PreferenceLocation.Type::Job);
      PreferenceLocation.SETRANGE("No.", "Project No.");
      IF (PreferenceLocation.FINDFIRST) THEN
        EXIT(PreferenceLocation."Location Code");

       AssemblyJob.GET("Project No.");
       EXIT(AssemblyJob."Ship To Location");
    END;

    LOCAL PROCEDURE GetPreferenceBinLocation@1100526108(LocationCode@1100526101 : Code[20]) : Code[20];
    VAR
      PreferenceBinLocation@1100526100 : Record 11020629;
    BEGIN
      PreferenceBinLocation.SETRANGE(Type, PreferenceBinLocation.Type::Job);
      PreferenceBinLocation.SETRANGE("Location Code", LocationCode);
      PreferenceBinLocation.SETRANGE("No.", "Project No.");
      PreferenceBinLocation.SETRANGE("Default Bin", TRUE);
      IF (PreferenceBinLocation.FINDFIRST) THEN
        EXIT(PreferenceBinLocation."Bin Code");

      PreferenceBinLocation.SETRANGE(Type, PreferenceBinLocation.Type::Job);
      PreferenceBinLocation.SETRANGE("Location Code", LocationCode);
      PreferenceBinLocation.SETRANGE("No.", "Project No.");
      IF (PreferenceBinLocation.FINDFIRST) THEN
        EXIT(PreferenceBinLocation."Bin Code");
      EXIT('');
    END;

    PROCEDURE ReadJobsSetup@1100526109();
    BEGIN
      //kzwerver, 100311, n, #24884
      IF (JobsSetupRead) THEN EXIT;
      JobsSetupRead := JobsSetup.GET;
    END;

    LOCAL PROCEDURE DeleteAssemblyFeatureTypes@1100528400();
    VAR
      AssemblyFeatureType@1100528400 : Record 11020648;
    BEGIN
      AssemblyFeatureType.SETRANGE("Project No.", "Project No.");
      AssemblyFeatureType.SETRANGE("Yard No.", "Yard No.");
      AssemblyFeatureType.SETRANGE("Entity Type", "Entity Type");
      AssemblyFeatureType.SETRANGE("System No.", "System No.");
      AssemblyFeatureType.SETRANGE("Entity No.", "Entity No.");
      AssemblyFeatureType.DELETEALL;
    END;

    LOCAL PROCEDURE CalcQtyFieldsAfterReportCompl@1210190000();
    BEGIN
      "Qty. Reported Complete" := "Qty. Reported Complete" + "Qty. to Report Complete";
      CalcQtyToReportComplete;
    END;

    LOCAL PROCEDURE CalcQtyToReportComplete@1210190003();
    BEGIN
      "Qty. to Report Complete" := Quantity - "Qty. Reported Complete";
    END;

    LOCAL PROCEDURE CheckQtyToReportComplete@1210190001();
    BEGIN
      IF "Qty. to Report Complete" > Quantity - "Qty. Reported Complete" THEN
        ERROR(
          Text016,
          FIELDCAPTION("Qty. to Report Complete"),
          Quantity - "Qty. Reported Complete",
          FIELDCAPTION("Project No."),
          "Project No.",
          FIELDCAPTION("Entity No."),
          "Entity No.");

      CALCFIELDS("Quantity Project Inventory");
      IF "Qty. to Report Complete" + "Quantity Project Inventory" < 0 THEN
        ERROR(
          Text017,
          FIELDCAPTION("Qty. to Report Complete"),
          - "Quantity Project Inventory",
          FIELDCAPTION("Project No."),
          "Project No.",
          FIELDCAPTION("Entity No."),
          "Entity No.");
    END;

    PROCEDURE HasDocumentLinks@1100525004() : Boolean;
    VAR
      DocumentLink@1100528400 : Record 11012747;
      AssemblyYardNumberObject@1100525002 : Record 11020596;
      DocumentLinkMgt@1100525000 : Codeunit 11012401;
      RecRef@1100525001 : RecordRef;
    BEGIN
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN
        EXIT(FALSE);

      //T004566
      AssemblyYardNumberObject := Rec;
      IF NOT AssemblyYardNumberObject.FIND('=') THEN
        EXIT(FALSE);
      //

      RecRef.GETTABLE(Rec);
      EXIT(DocumentLinkMgt.EntityHasDocumentLinks(RecRef));
    END;

    LOCAL PROCEDURE DeleteAYNOElements@1210190007();
    VAR
      AssemblyYardNoObjElement@1210190000 : Record 11020649;
    BEGIN
      //kzwerver, 110601, n, #27789
      AssemblyYardNoObjElement.SETRANGE("Project No.", "Project No.");
      AssemblyYardNoObjElement.SETRANGE("Yard No.", "Yard No.");
      AssemblyYardNoObjElement.SETRANGE("Entity Type", "Entity Type");
      AssemblyYardNoObjElement.SETRANGE("System No.", "System No.");
      AssemblyYardNoObjElement.SETRANGE("Entity No.", "Entity No.");
      AssemblyYardNoObjElement.DELETEALL;
    END;

    LOCAL PROCEDURE DeleteDocumentLinks@1100528401();
    VAR
      DocumentLink@1100528402 : Record 11012747;
      DocumentLinkMgt@1100528400 : Codeunit 11012401;
      RecRef@1100528401 : RecordRef;
    BEGIN
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DocumentLinkMgt.DeleteDocumentLinksFromObject(RecRef);
    END;

    PROCEDURE InsertRelevantFeatureTypes@1100528300();
    BEGIN
      InsertFeatureTypes(FALSE);
    END;

    LOCAL PROCEDURE InsertDefaultFeatureTypes@1100528405();
    BEGIN
      ReadJobsSetup;
      InsertFeatureTypes(JobsSetup."Only Create Obl. Features Aut.");
    END;

    LOCAL PROCEDURE InsertFeatureTypes@1100528403(OnlyObligatoryFeatureTypes@1100528400 : Boolean);
    VAR
      AssemblyFeatureType@1100528300 : Record 11020648;
      AssemblyFeatureGroup@1100528301 : Record 11020646;
    BEGIN
      CASE "Entity Type" OF
        "Entity Type"::Device:
          BEGIN
            AssemblyFeatureGroup.SETRANGE(Devices, TRUE);
            IF OnlyObligatoryFeatureTypes THEN
              AssemblyFeatureGroup.SETRANGE("Obligatory for Devices", TRUE);
          END;
        "Entity Type"::Cable:
          BEGIN
            AssemblyFeatureGroup.SETRANGE(Cables, TRUE);
            IF OnlyObligatoryFeatureTypes THEN
              AssemblyFeatureGroup.SETRANGE("Obligatory for Cables", TRUE);
          END;
        "Entity Type"::ExtraNeed:
          BEGIN
            AssemblyFeatureGroup.SETRANGE("Extra Needs", TRUE);
            IF OnlyObligatoryFeatureTypes THEN
              AssemblyFeatureGroup.SETRANGE("Obligatory for Extra Needs", TRUE);
          END;
        "Entity Type"::Position:
          BEGIN
            AssemblyFeatureGroup.SETRANGE(Positions, TRUE);
            IF OnlyObligatoryFeatureTypes THEN
              AssemblyFeatureGroup.SETRANGE("Obligatory for Positions", TRUE);
          END;
        ELSE
          EXIT;
      END;

      IF AssemblyFeatureGroup.FINDSET THEN
        REPEAT
          AssemblyFeatureType.RESET;
          AssemblyFeatureType.SETRANGE("Project No.", "Project No.");
          AssemblyFeatureType.SETRANGE("Yard No.", "Yard No.");
          AssemblyFeatureType.SETRANGE("Entity Type", "Entity Type");
          AssemblyFeatureType.SETRANGE("System No.", "System No.");
          AssemblyFeatureType.SETRANGE("Entity No.", "Entity No.");
          AssemblyFeatureType.SETRANGE("Feature Group Code", AssemblyFeatureGroup.Code);
          IF (NOT AssemblyFeatureType.FINDFIRST) THEN BEGIN
            AssemblyFeatureType.INIT;
            AssemblyFeatureType."Project No." := "Project No.";
            AssemblyFeatureType."Yard No." := "Yard No.";
            AssemblyFeatureType."Entity Type" := "Entity Type";
            AssemblyFeatureType."System No." := "System No.";
            AssemblyFeatureType."Entity No." := "Entity No.";
            AssemblyFeatureType."Line No." := GetLastLineNoAssemblyFeatureTp + 10000;
            AssemblyFeatureType.VALIDATE("Feature Group Code", AssemblyFeatureGroup.Code);
            AssemblyFeatureType.INSERT(TRUE);
          END;
        UNTIL AssemblyFeatureGroup.NEXT = 0;
    END;

    PROCEDURE GetLastLineNoAssemblyFeatureTp@1100528301() : Integer;
    VAR
      AssemblyFeatureType@1100528300 : Record 11020648;
    BEGIN
      AssemblyFeatureType.SETRANGE("Project No.", "Project No.");
      AssemblyFeatureType.SETRANGE("Yard No.", "Yard No.");
      AssemblyFeatureType.SETRANGE("Entity Type", "Entity Type");
      AssemblyFeatureType.SETRANGE("System No.", "System No.");
      AssemblyFeatureType.SETRANGE("Entity No.", "Entity No.");
      IF (AssemblyFeatureType.FINDLAST) THEN
        EXIT(AssemblyFeatureType."Line No.");

      EXIT(0);
    END;

    PROCEDURE ServiceObjectIsPresent@1100525000() : Boolean;
    VAR
      "Service-Object"@1100525000 : Record 11071691;
    BEGIN
      IF "Target Company" <> '' THEN
        "Service-Object".CHANGECOMPANY("Target Company");
      "Service-Object".SETCURRENTKEY(
        "Project No.", "Yard No. (AYNO)", "Entity Type (AYNO)", "System No. (AYNO)", "Entity No. (AYNO)");
      IF "Target Company" <> '' THEN
        "Service-Object".SETRANGE("Company Name", COMPANYNAME);
      "Service-Object".SETRANGE("Project No.", "Project No.");
      "Service-Object".SETRANGE("Yard No. (AYNO)", "Yard No.");
      "Service-Object".SETRANGE("Entity Type (AYNO)", "Entity Type");
      "Service-Object".SETRANGE("System No. (AYNO)", "System No.");
      "Service-Object".SETRANGE("Entity No. (AYNO)", "Entity No.");
      EXIT("Service-Object".FINDFIRST);
    END;

    PROCEDURE FeatureTypeIsPresent@1210190008() : Boolean;
    VAR
      AssemblyFeatureType@1100525000 : Record 11020648;
    BEGIN
      AssemblyFeatureType.SETRANGE("Project No.", "Project No.");
      AssemblyFeatureType.SETRANGE("Yard No.", "Yard No.");
      AssemblyFeatureType.SETRANGE("Entity Type", "Entity Type");
      AssemblyFeatureType.SETRANGE("System No.", "System No.");
      AssemblyFeatureType.SETRANGE("Entity No.", "Entity No.");
      EXIT(AssemblyFeatureType.FINDFIRST);
    END;

    PROCEDURE SetFilterAssemblyYardNumberObj@1100525002(ProjectNo@1210190001 : Code[20];YardNo@1210190002 : Code[20];EntityType@1100525000 : Option;SystemNo@1100525001 : Code[20];EntityNo@1100525002 : Code[20];ElementFilter@1210190003 : Text[30]);
    BEGIN
      SETRANGE("Project No.", ProjectNo);
      SETRANGE("Yard No.", YardNo);
      SETRANGE("Entity Type", EntityType);
      SETRANGE("System No.", SystemNo);
      SETRANGE("Entity No.", EntityNo);
      SETFILTER("Element Filter", ElementFilter);
    END;

    PROCEDURE GetAssignedQuantity@1100525001(ProjectNo@1100525005 : Code[20];YardNo@1100525004 : Code[20];EntityType@1100525003 : Option;SystemNo@1100525002 : Code[20];EntityNo@1100525001 : Code[20];ElementFilter@1100525000 : Text[30]) : Decimal;
    BEGIN
      SetFilterAssemblyYardNumberObj(ProjectNo,YardNo,EntityType,SystemNo,EntityNo,ElementFilter);

      IF FINDFIRST THEN BEGIN
        CALCFIELDS("Assigned Quantity");
        EXIT("Assigned Quantity");
      END;

      EXIT(0);
    END;

    PROCEDURE UpdateAssignedQuantity@1100525003(ProjectNo@1100525005 : Code[20];YardNo@1100525004 : Code[20];EntityType@1100525003 : Option;SystemNo@1100525002 : Code[20];EntityNo@1100525001 : Code[20];ElementFilter@1100525006 : Text[30];NewAmount@1100525000 : Decimal);
    BEGIN
      SetFilterAssemblyYardNumberObj(ProjectNo,YardNo,EntityType,SystemNo,EntityNo,ElementFilter);

      IF FINDFIRST THEN BEGIN
        VALIDATE("Assigned Quantity", NewAmount);
        MODIFY(TRUE);
      END;
    END;

    PROCEDURE DrillDownAssignedQuantity@1100525005(ProjectNo@1100525005 : Code[20];YardNo@1100525004 : Code[20];EntityType@1100525003 : Option;SystemNo@1100525002 : Code[20];EntityNo@1100525001 : Code[20];ElementFilter@1100525000 : Text[30]);
    VAR
      AssemblyYardNoObjElement@1100525006 : Record 11020649;
    BEGIN
      AssemblyYardNoObjElement.SETRANGE("Project No.", ProjectNo);
      AssemblyYardNoObjElement.SETRANGE("Yard No.", YardNo);
      AssemblyYardNoObjElement.SETRANGE("Entity Type", EntityType);
      AssemblyYardNoObjElement.SETRANGE("System No.", SystemNo);
      AssemblyYardNoObjElement.SETRANGE("Entity No.", EntityNo);
      AssemblyYardNoObjElement.SETFILTER(Element, ElementFilter);

      PAGE.RUNMODAL(0, AssemblyYardNoObjElement);
    END;

    LOCAL PROCEDURE CheckEntityNo@1100528402();
    VAR
      JobsSetup@1100528400 : Record 315;
    BEGIN
      IF "Entity Type" = "Entity Type"::None THEN
        EXIT;

      IF JobsSetup.GET AND
         JobsSetup."Entity No. Mandatory"
      THEN
        TESTFIELD("Entity No.");
    END;

    PROCEDURE StartPageAssemblyObjectsSM@1100528302(VAR iAssemblyYardNumberObject@1100409000 : TEMPORARY Record 11020596);
    VAR
      AssemblyYardNumberObject@1100409002 : Record 11020596;
      ServiceObject@1100528301 : Record 11071691;
    BEGIN
      AssemblyYardNumberObject.COPY(iAssemblyYardNumberObject);
      ServiceObject.SETCURRENTKEY(
        ServiceObject."Project No.",
        ServiceObject."Yard No. (AYNO)",
        ServiceObject."Entity Type (AYNO)",
        ServiceObject."System No. (AYNO)",
        ServiceObject."Entity No. (AYNO)");
      AssemblyYardNumberObject.FINDSET;
      REPEAT
        ServiceObject.SETRANGE("Project No.", AssemblyYardNumberObject."Project No.");
        ServiceObject.SETRANGE("Yard No. (AYNO)", AssemblyYardNumberObject."Yard No.");
        ServiceObject.SETRANGE("Entity Type (AYNO)", AssemblyYardNumberObject."Entity Type");
        ServiceObject.SETRANGE("System No. (AYNO)", AssemblyYardNumberObject."System No.");
        ServiceObject.SETRANGE("Entity No. (AYNO)", AssemblyYardNumberObject."Entity No.");
        IF (ServiceObject.FINDFIRST) THEN
          AssemblyYardNumberObject.MARK(FALSE);
      UNTIL (AssemblyYardNumberObject.NEXT = 0);
      IF (iAssemblyYardNumberObject.COUNT <> AssemblyYardNumberObject.COUNT) THEN
        MESSAGE(Text010, AssemblyYardNumberObject.TABLECAPTION, ServiceObject.TABLECAPTION);

      PAGE.RUNMODAL(PAGE::"Assembly Objects SM", AssemblyYardNumberObject);
    END;

    PROCEDURE NameProjectManager@1100525006() : Text;
    VAR
      Empl@1100525000 : Record 5200;
    BEGIN
      CALCFIELDS("Project Manager");
      IF Empl.GET("Project Manager") THEN
        EXIT(Empl."Full Name");
    END;

    PROCEDURE NameProjectMechanic@1100525007() : Text;
    VAR
      Empl@1100525000 : Record 5200;
    BEGIN
      CALCFIELDS("Project Mechanic");
      IF Empl.GET("Project Mechanic") THEN
        EXIT(Empl."Full Name");
    END;

    BEGIN
    END.
  }
}

