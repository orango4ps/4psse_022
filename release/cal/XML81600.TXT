OBJECT XMLport 81600 Imp. Employee IMSE
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS7.00Toolsv9.MC;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Imp. Employee;
               SVE=Imp. anst„lld];
    DefaultFieldsValidation=No;
    OnInitXMLport=BEGIN
                    XMLNo := 81600;
                    MainTableID := 5200;
                    GenSetupRec.GET();
                  END;

    OnPreXMLport=BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   ContactSetupRec.GET();
                   //>> 150123 ITERO.SB Added field AX
                   ConvMgt.DeleteConComment(XMLNo);
                   ConvMgt.CreateConComment(XMLNo,'Start');
                 END;

    OnPostXMLport=BEGIN
                    IF NOT RunIsImportRunBln THEN
                      currXMLport.BREAK;

                    ConvMgt.CreateConComment(XMLNo,'Stop');
                    ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{755F5B7F-F062-4834-8364-DC4CD51C5A62}];  ;Root                ;Element ;Text     }

    { [{A7DBD164-8D3E-4F8D-B3A0-89F91BC12205}];1 ;Employee            ;Element ;Table   ;
                                                  SourceTable=Table5200;
                                                  SourceTableView=SORTING(Field1);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              ClearFields;
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 ContactPerson@1100409000 : Record 5050;
                                                                               BEGIN
                                                                                 StripData;
                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR(Employee);

                                                                                 //141215
                                                                                 IF A = '' THEN ERROR('Column A ''''MUST'''' have a value!\It cannot be blank!');


                                                                                 WITH Employee DO BEGIN
                                                                                   IF GET(A) THEN BEGIN
                                                                                     //MESSAGE('finns');
                                                                                     IF XInt = 0 THEN             // Only validate Employer in case internal employee
                                                                                       VALIDATE(Employer,B);

                                                                                     VALIDATE("First Name",C);
                                                                                     VALIDATE("Last Name",D);
                                                                                     VALIDATE("Middle Name",E);
                                                                                     VALIDATE(Initials,F);
                                                                                     VALIDATE("Job Title",G);
                                                                                     VALIDATE(Title,H);
                                                                                     IF IInt = 1 THEN
                                                                                       VALIDATE(Gender,Gender::Female)
                                                                                     ELSE
                                                                                       VALIDATE(Gender,Gender::Male);
                                                                                     "E-Mail" := J;
                                                                                     IF (K <> '') AND (K <> "Phone No.") THEN
                                                                                       "Phone No." := K;
                                                                                     "Mobile Phone No." := L;
                                                                                     VALIDATE(Status,Status::Active);
                                                                                     IF MDate <> 0D THEN
                                                                                      VALIDATE("Employment Date",MDate);
                                                                                     VALIDATE("Trade Association",N);
                                                                                     VALIDATE("Norm Hours",ODec);
                                                                                     VALIDATE("Norm Days",PDec);
                                                                                     VALIDATE("Social Security No.",Q);
                                                                                     IF RDate <> 0D THEN
                                                                                       VALIDATE("Birth Date",RDate);

                                                                                     //"Manager No." := S;
                                                                                     IF S <> '' THEN BEGIN
                                                                                       Employee2.SETRANGE("Salary No.",S);
                                                                                       IF Employee2.FINDFIRST THEN
                                                                                         "Manager No.":=Employee2."No.";
                                                                                     END;

                                                                                     VALIDATE("Global Dimension 1 Code",T);
                                                                                     VALIDATE("Global Dimension 2 Code",U);
                                                                                     IF V <> '' THEN BEGIN
                                                                                       IF Dim3Cde = '' THEN
                                                                                         ERROR(Text001);
                                                                                       IF NOT DefaultDimension.GET(5200,"No.",Dim3Cde) THEN
                                                                                         ConvMgt.AddDefaultDim(5200,"No.",Dim3Cde,V)
                                                                                       ELSE IF DefaultDimension.GET(5200,"No.",Dim3Cde) THEN BEGIN
                                                                                         DefaultDimension.VALIDATE("Dimension Value Code",V);
                                                                                         DefaultDimension.MODIFY(TRUE);
                                                                                       END;
                                                                                     END;
                                                                                     IF W <> '' THEN BEGIN
                                                                                       IF Dim4Cde = '' THEN
                                                                                         ERROR(Text002);
                                                                                       IF NOT DefaultDimension.GET(5200,"No.",Dim4Cde) THEN
                                                                                         ConvMgt.AddDefaultDim(5200,"No.",Dim4Cde,W)
                                                                                       ELSE IF DefaultDimension.GET(5200,"No.",Dim4Cde) THEN BEGIN
                                                                                         DefaultDimension.VALIDATE("Dimension Value Code",W);
                                                                                         DefaultDimension.MODIFY(TRUE);
                                                                                       END;
                                                                                     END;
                                                                                     //>> 140520 ITERO.SB Added field AR (CostCenterResponsible)
                                                                                     IF AR <> '' THEN BEGIN
                                                                                       DimensionValue.SETFILTER("Dimension Code",'KOSTNADSSTŽLLE');
                                                                                       DimensionValue.SETFILTER(Code,AR);
                                                                                       //IF DimensionValue.GET('KOSTNADSSTŽLLE',AR) THEN BEGIN
                                                                                       IF DimensionValue.FINDSET THEN REPEAT
                                                                                         DimensionValue2:=DimensionValue;
                                                                                         //DimensionValue2.VALIDATE(CostCenterResponsible,A);
                                                                                         DimensionValue2.VALIDATE(CostCenterResponsible,"No."); //141215 ITERO.DL
                                                                                         DimensionValue2.MODIFY(TRUE);
                                                                                       UNTIL DimensionValue.NEXT=0;//END;
                                                                                     END;
                                                                                     //<<
                                                                                     IF XInt = 1 THEN
                                                                                       VALIDATE(External,TRUE);
                                                                                     IF YInt = 1 THEN
                                                                                       VALIDATE("Pre-Registration Hours",TRUE)
                                                                                     ELSE
                                                                                       VALIDATE("Pre-Registration Hours",FALSE);
                                                                                     //IMSE+++
                                                                                     CASE UPPERCASE(Z) OF
                                                                                       UPPERCASE(FORMAT("Calculate Wage Costs" :: "Fixed Rate")) : "Calculate Wage Costs" := "Calculate Wage Costs" :: "Fixed Rate";
                                                                                       UPPERCASE(FORMAT("Calculate Wage Costs" :: "Actual Rate")): "Calculate Wage Costs" := "Calculate Wage Costs" :: "Actual Rate";
                                                                                     END;
                                                                                     "Salary No."           := AA;
                                                                                     "Country/Region Code"  := AB;
                                                                                     CASE UPPERCASE(AC) OF
                                                                                       UPPERCASE(FORMAT ("Default Line Type" :: Project )):  "Default Line Type" := "Default Line Type" :: Project;
                                                                                       UPPERCASE(FORMAT ("Default Line Type" :: Service )):  "Default Line Type" := "Default Line Type" :: Service;
                                                                                       UPPERCASE(FORMAT ("Default Line Type" :: Indirect)):  "Default Line Type" := "Default Line Type" :: Indirect;
                                                                                       UPPERCASE(FORMAT ("Default Line Type" :: Plant   )):  "Default Line Type" := "Default Line Type" :: Plant;
                                                                                     END;
                                                                                     Employee."Labour Rule" := AD;
                                                                                     IF AE <> '' THEN BEGIN
                                                                                       UserRec.SETRANGE("User Name", UPPERCASE(AE));
                                                                                       IF UserRec.FINDFIRST THEN BEGIN
                                                                                         UserRec."Full Name" := AG;
                                                                                         UserRec.MODIFY(TRUE);
                                                                                         IF UserPers.GET(UserRec."User Security ID") THEN BEGIN
                                                                                           UserPers.VALIDATE("Language ID", AOInt);
                                                                                           UserPers.VALIDATE("Profile ID", AP);
                                                                                           UserPers.VALIDATE(Company,AT);
                                                                                           UserPers.MODIFY(TRUE);
                                                                                         END ELSE IF AP<>'' THEN BEGIN
                                                                                           UserPers.INIT;
                                                                                           UserPers.VALIDATE("User SID",UserRec."User Security ID");
                                                                                           UserPers.VALIDATE("Language ID", AOInt);
                                                                                           UserPers.VALIDATE("Profile ID", AP);
                                                                                           UserPers.VALIDATE(Company,AT);
                                                                                           UserPers.INSERT(TRUE);
                                                                                         END;

                                                                                       END;
                                                                                       IF NOT UserSetup.GET(UPPERCASE(AE)) THEN BEGIN
                                                                                         UserSetup."User ID" := UPPERCASE(AE);
                                                                                         UserSetup.VALIDATE("Employee No.", Employee."No.");
                                                                                         IF AF <> '' THEN
                                                                                           UserSetup."Text Editor Path" := AF;
                                                                                         IF AH <> '' THEN
                                                                                           UserSetup.VALIDATE("Department Code", AH);
                                                                                         IF AI <> '' THEN
                                                                                           UserSetup.VALIDATE("Department Code Filter", AI);

                                                                                         IF AQInt = 1 THEN
                                                                                           UserSetup.VALIDATE("Access own Hours only",TRUE)
                                                                                         ELSE
                                                                                           UserSetup.VALIDATE("Access own Hours only",FALSE);

                                                                                         IF ASInt = 1 THEN
                                                                                           UserSetup.VALIDATE("Department Authoriz. Active",TRUE)
                                                                                         ELSE
                                                                                           UserSetup.VALIDATE("Department Authoriz. Active",FALSE);
                                                                                         //>> 140627 ITERO.SB Added fields, AU,AV.
                                                                                         IF AUInt = 1 THEN
                                                                                           UserSetup.VALIDATE("Project Authoriz. Active",TRUE)
                                                                                         ELSE
                                                                                           UserSetup.VALIDATE("Project Authoriz. Active",FALSE);
                                                                                         IF AVInt = 1 THEN
                                                                                           UserSetup.VALIDATE("Resp.Pers.Closing.Proc.Project",TRUE)
                                                                                         ELSE
                                                                                           UserSetup.VALIDATE("Resp.Pers.Closing.Proc.Project",FALSE);
                                                                                         //<<

                                                                                         UserSetup.INSERT(TRUE);
                                                                                       END ELSE IF UserSetup.GET(UPPERCASE(AE)) THEN BEGIN
                                                                                         UserSetup.VALIDATE("Employee No.", Employee."No.");
                                                                                         IF AF <> '' THEN
                                                                                           UserSetup."Text Editor Path" := AF;
                                                                                         IF AH <> '' THEN
                                                                                           UserSetup.VALIDATE("Department Code", AH);
                                                                                         IF AI <> '' THEN
                                                                                           UserSetup.VALIDATE("Department Code Filter", AI);

                                                                                         IF AQInt = 1 THEN
                                                                                           UserSetup.VALIDATE("Access own Hours only",TRUE)
                                                                                         ELSE
                                                                                           UserSetup.VALIDATE("Access own Hours only",FALSE);

                                                                                         IF ASInt = 1 THEN
                                                                                           UserSetup.VALIDATE("Department Authoriz. Active",TRUE)
                                                                                         ELSE
                                                                                           UserSetup.VALIDATE("Department Authoriz. Active",FALSE);
                                                                                         //>> 140627 ITERO.SB Added fields, AU,AV.
                                                                                         IF AUInt = 1 THEN
                                                                                           UserSetup.VALIDATE("Project Authoriz. Active",TRUE)
                                                                                         ELSE
                                                                                           UserSetup.VALIDATE("Project Authoriz. Active",FALSE);
                                                                                         IF AVInt = 1 THEN
                                                                                           UserSetup.VALIDATE("Resp.Pers.Closing.Proc.Project",TRUE)
                                                                                         ELSE
                                                                                           UserSetup.VALIDATE("Resp.Pers.Closing.Proc.Project",FALSE);
                                                                                         //<<

                                                                                         UserSetup.MODIFY(TRUE);
                                                                                       END;
                                                                                     END;

                                                                                     "Company E-Mail" := AJ;

                                                                                     CASE UPPERCASE(AK) OF
                                                                                       UPPERCASE(FORMAT(Status::Active)) : VALIDATE(Status, Status::Active);
                                                                                       UPPERCASE(FORMAT(Status::Inactive)) : VALIDATE(Status, Status::Inactive);
                                                                                       UPPERCASE(FORMAT(Status::Terminated)) : VALIDATE(Status, Status::Terminated);
                                                                                     END;


                                                                                     CASE UPPERCASE(AL) OF
                                                                                       UPPERCASE(FORMAT("Account Hours"::"Required according to Norm")) : VALIDATE("Account Hours", "Account Hours"::"Required according to Norm");
                                                                                       UPPERCASE(FORMAT("Account Hours"::Optional)) : VALIDATE("Account Hours", "Account Hours"::Optional);
                                                                                       UPPERCASE(FORMAT("Account Hours"::"Not allowed")) : VALIDATE("Account Hours", "Account Hours"::"Not allowed");
                                                                                     END;

                                                                                     IF AMInt = 1 THEN
                                                                                       VALIDATE("Check Hours",TRUE)
                                                                                     ELSE
                                                                                       VALIDATE("Check Hours",FALSE);

                                                                                     IF ANInt = 1 THEN
                                                                                       VALIDATE("Print Man Day Register",TRUE)
                                                                                     ELSE
                                                                                       VALIDATE("Print Man Day Register",FALSE);
                                                                                     //>> 150123 ITERO.SB Added field AX
                                                                                     IF AXInt = 1 THEN
                                                                                       VALIDATE(UTA,TRUE)
                                                                                     ELSE
                                                                                       VALIDATE(UTA,FALSE);
                                                                                     //<<

                                                                                     //>> 141119 ITERO.SB Added AW
                                                                                     IF AW<>'' THEN BEGIN
                                                                                       IF NOT HoursConsenter.GET(AW) THEN BEGIN
                                                                                         HoursConsenter.VALIDATE("User ID",AW);
                                                                                         HoursConsenter.INSERT(TRUE);
                                                                                       END;
                                                                                     END;
                                                                                     //<<
                                                                                     //IMSE---
                                                                                     DetermineAccountHours;

                                                                                     CASE UPPERCASE(AL) OF
                                                                                       UPPERCASE(FORMAT("Account Hours"::"Required according to Norm")) : VALIDATE("Account Hours", "Account Hours"::"Required according to Norm");
                                                                                       UPPERCASE(FORMAT("Account Hours"::Optional)) : VALIDATE("Account Hours", "Account Hours"::Optional);
                                                                                       UPPERCASE(FORMAT("Account Hours"::"Not allowed")) : VALIDATE("Account Hours", "Account Hours"::"Not allowed");
                                                                                     END;

                                                                                     MODIFY(TRUE);

                                                                                     IF (ContactSetupRec."Bus. Rel. Code for Employees" <> '') AND (XInt=0) THEN
                                                                                       OnModifyRelation(Employee,xRec);

                                                                                   END ELSE BEGIN
                                                                                     VALIDATE("No.",A);        // keep old no.
                                                                                     INSERT(TRUE);

                                                                                     IF XInt = 0 THEN             // Only validate Employer in case internal employee
                                                                                       VALIDATE(Employer,B);

                                                                                     VALIDATE("First Name",C);
                                                                                     VALIDATE("Last Name",D);
                                                                                     VALIDATE("Middle Name",E);
                                                                                     VALIDATE(Initials,F);
                                                                                     VALIDATE("Job Title",G);
                                                                                     VALIDATE(Title,H);
                                                                                     IF IInt = 1 THEN
                                                                                       VALIDATE(Gender,Gender::Female)
                                                                                     ELSE
                                                                                       VALIDATE(Gender,Gender::Male);
                                                                                     "E-Mail" := J;
                                                                                     IF (K <> '') AND (K <> "Phone No.") THEN
                                                                                       "Phone No." := K;
                                                                                     "Mobile Phone No." := L;
                                                                                     VALIDATE(Status,Status::Active);
                                                                                     IF MDate <> 0D THEN
                                                                                      VALIDATE("Employment Date",MDate);
                                                                                     VALIDATE("Trade Association",N);
                                                                                     VALIDATE("Norm Hours",ODec);
                                                                                     VALIDATE("Norm Days",PDec);
                                                                                     VALIDATE("Social Security No.",Q);
                                                                                     IF RDate <> 0D THEN
                                                                                       VALIDATE("Birth Date",RDate);

                                                                                     //"Manager No." := S;
                                                                                     IF S <> '' THEN BEGIN
                                                                                       Employee2.SETRANGE("Salary No.",S);
                                                                                       IF Employee2.FINDFIRST THEN
                                                                                         "Manager No.":=Employee2."No.";
                                                                                     END;

                                                                                     VALIDATE("Global Dimension 1 Code",T);
                                                                                     VALIDATE("Global Dimension 2 Code",U);
                                                                                     IF V <> '' THEN BEGIN
                                                                                       IF Dim3Cde = '' THEN
                                                                                         ERROR(Text001);
                                                                                       ConvMgt.AddDefaultDim(5200,"No.",Dim3Cde,V);
                                                                                     END;
                                                                                     IF W <> '' THEN BEGIN
                                                                                       IF Dim4Cde = '' THEN
                                                                                         ERROR(Text002);
                                                                                       ConvMgt.AddDefaultDim(5200,"No.",Dim4Cde,W);
                                                                                     END;
                                                                                     //>> 140520 ITERO.SB Added field AR (CostCenterResponsible)
                                                                                     IF AR <> '' THEN BEGIN
                                                                                       DimensionValue.SETFILTER("Dimension Code",'KOSTNADSSTŽLLE');
                                                                                       DimensionValue.SETFILTER(Code,AR);
                                                                                       //IF DimensionValue.GET('KOSTNADSSTŽLLE',AR) THEN BEGIN
                                                                                       IF DimensionValue.FINDSET THEN REPEAT
                                                                                         DimensionValue2:=DimensionValue;
                                                                                         //DimensionValue2.VALIDATE(CostCenterResponsible,A);
                                                                                         DimensionValue2.VALIDATE(CostCenterResponsible,Employee."No.");    //141215 ITERO.DL, A could be blank
                                                                                         DimensionValue2.MODIFY(TRUE);
                                                                                       UNTIL DimensionValue.NEXT=0;//END;
                                                                                     END;
                                                                                     //<<

                                                                                     IF XInt = 1 THEN
                                                                                       VALIDATE(External,TRUE);
                                                                                     IF YInt = 1 THEN
                                                                                       VALIDATE("Pre-Registration Hours",TRUE);

                                                                                     //IMSE+++
                                                                                     CASE UPPERCASE(Z) OF
                                                                                       UPPERCASE(FORMAT("Calculate Wage Costs" :: "Fixed Rate")) : "Calculate Wage Costs" := "Calculate Wage Costs" :: "Fixed Rate";
                                                                                       UPPERCASE(FORMAT("Calculate Wage Costs" :: "Actual Rate")): "Calculate Wage Costs" := "Calculate Wage Costs" :: "Actual Rate";
                                                                                     END;
                                                                                     "Salary No."           := AA;
                                                                                     "Country/Region Code"  := AB;
                                                                                     CASE UPPERCASE(AC) OF
                                                                                       UPPERCASE(FORMAT ("Default Line Type" :: Project )):  "Default Line Type" := "Default Line Type" :: Project;
                                                                                       UPPERCASE(FORMAT ("Default Line Type" :: Service )):  "Default Line Type" := "Default Line Type" :: Service;
                                                                                       UPPERCASE(FORMAT ("Default Line Type" :: Indirect)):  "Default Line Type" := "Default Line Type" :: Indirect;
                                                                                       UPPERCASE(FORMAT ("Default Line Type" :: Plant   )):  "Default Line Type" := "Default Line Type" :: Plant;
                                                                                     END;
                                                                                     Employee."Labour Rule" := AD;
                                                                                     IF AE <> '' THEN BEGIN
                                                                                       UserRec.SETRANGE("User Name", UPPERCASE(AE));
                                                                                       IF UserRec.FINDFIRST THEN BEGIN
                                                                                         UserRec."Full Name" := AG;
                                                                                         UserRec.MODIFY(TRUE);
                                                                                         IF UserPers.GET(UserRec."User Security ID") THEN BEGIN
                                                                                           UserPers.VALIDATE("Language ID", AOInt);
                                                                                           UserPers.VALIDATE("Profile ID", AP);
                                                                                           UserPers.VALIDATE(Company,AT);
                                                                                           UserPers.MODIFY(TRUE);
                                                                                         END ELSE IF AP<>'' THEN BEGIN
                                                                                           UserPers.INIT;
                                                                                           UserPers.VALIDATE("User SID",UserRec."User Security ID");
                                                                                           UserPers.VALIDATE("Language ID", AOInt);
                                                                                           UserPers.VALIDATE("Profile ID", AP);
                                                                                           UserPers.VALIDATE(Company,AT);
                                                                                           UserPers.INSERT(TRUE);
                                                                                         END;

                                                                                       END;
                                                                                       IF NOT UserSetup.GET(UPPERCASE(AE)) THEN BEGIN
                                                                                         UserSetup."User ID" := UPPERCASE(AE);
                                                                                         UserSetup.VALIDATE("Employee No.", Employee."No.");
                                                                                         IF AF <> '' THEN
                                                                                           UserSetup."Text Editor Path" := AF;
                                                                                         IF AH <> '' THEN
                                                                                           UserSetup.VALIDATE("Department Code", AH);
                                                                                         IF AI <> '' THEN
                                                                                           UserSetup.VALIDATE("Department Code Filter", AI);

                                                                                         IF AQInt = 1 THEN
                                                                                           UserSetup.VALIDATE("Access own Hours only",TRUE)
                                                                                         ELSE
                                                                                           UserSetup.VALIDATE("Access own Hours only",FALSE);

                                                                                         IF ASInt = 1 THEN
                                                                                           UserSetup.VALIDATE("Department Authoriz. Active",TRUE)
                                                                                         ELSE
                                                                                           UserSetup.VALIDATE("Department Authoriz. Active",FALSE);
                                                                                         //>> 140627 ITERO.SB Added fields, AU,AV.
                                                                                         IF AUInt = 1 THEN
                                                                                           UserSetup.VALIDATE("Project Authoriz. Active",TRUE)
                                                                                         ELSE
                                                                                           UserSetup.VALIDATE("Project Authoriz. Active",FALSE);
                                                                                         IF AVInt = 1 THEN
                                                                                           UserSetup.VALIDATE("Resp.Pers.Closing.Proc.Project",TRUE)
                                                                                         ELSE
                                                                                           UserSetup.VALIDATE("Resp.Pers.Closing.Proc.Project",FALSE);
                                                                                         //<<

                                                                                         UserSetup.INSERT(TRUE);
                                                                                       END;
                                                                                     END;

                                                                                     "Company E-Mail" := AJ;

                                                                                     CASE UPPERCASE(AK) OF
                                                                                       UPPERCASE(FORMAT(Status::Active)) : VALIDATE(Status, Status::Active);
                                                                                       UPPERCASE(FORMAT(Status::Inactive)) : VALIDATE(Status, Status::Inactive);
                                                                                       UPPERCASE(FORMAT(Status::Terminated)) : VALIDATE(Status, Status::Terminated);
                                                                                     END;

                                                                                     CASE UPPERCASE(AL) OF
                                                                                       UPPERCASE(FORMAT("Account Hours"::"Required according to Norm")) : VALIDATE("Account Hours", "Account Hours"::"Required according to Norm");
                                                                                       UPPERCASE(FORMAT("Account Hours"::Optional)) : VALIDATE("Account Hours", "Account Hours"::Optional);
                                                                                       UPPERCASE(FORMAT("Account Hours"::"Not allowed")) : VALIDATE("Account Hours", "Account Hours"::"Not allowed");
                                                                                     END;

                                                                                     IF AMInt = 1 THEN
                                                                                       VALIDATE("Check Hours",TRUE)
                                                                                     ELSE
                                                                                       VALIDATE("Check Hours",FALSE);

                                                                                     IF ANInt = 1 THEN
                                                                                       VALIDATE("Print Man Day Register",TRUE)
                                                                                     ELSE
                                                                                       VALIDATE("Print Man Day Register",FALSE);
                                                                                     //>> 150123 ITERO.SB Added field AX
                                                                                     IF AXInt = 1 THEN
                                                                                       VALIDATE(UTA,TRUE)
                                                                                     ELSE
                                                                                       VALIDATE(UTA,FALSE);
                                                                                     //<<
                                                                                     //>> 141119 ITERO.SB Added AW
                                                                                     IF AW<>'' THEN BEGIN
                                                                                       IF NOT HoursConsenter.GET(AW) THEN BEGIN
                                                                                         HoursConsenter.VALIDATE("User ID",AW);
                                                                                         HoursConsenter.INSERT(TRUE);
                                                                                       END;
                                                                                     END;

                                                                                     //IMSE---

                                                                                     DetermineAccountHours;

                                                                                     CASE UPPERCASE(AL) OF
                                                                                       UPPERCASE(FORMAT("Account Hours"::"Required according to Norm")) : VALIDATE("Account Hours", "Account Hours"::"Required according to Norm");
                                                                                       UPPERCASE(FORMAT("Account Hours"::Optional)) : VALIDATE("Account Hours", "Account Hours"::Optional);
                                                                                       UPPERCASE(FORMAT("Account Hours"::"Not allowed")) : VALIDATE("Account Hours", "Account Hours"::"Not allowed");
                                                                                     END;

                                                                                     MODIFY(TRUE);

                                                                                     IF (ContactSetupRec."Bus. Rel. Code for Employees" <> '') AND (XInt=0) THEN
                                                                                       OnModifyRelation(Employee,xRec);
                                                                                   END;
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{5C900A9C-2240-4551-8D3B-A67A2D629F53}];2 ;A                   ;Element ;Text     }

    { [{5E5EE9AF-296C-4B48-B3A4-71FD1D3BDBB8}];2 ;B                   ;Element ;Text     }

    { [{81EF86E1-A401-49BA-998E-C96326459340}];2 ;C                   ;Element ;Text     }

    { [{A4D141C2-7800-4941-8428-EBDFE695445E}];2 ;D                   ;Element ;Text     }

    { [{7009774A-5D5B-4893-B574-E0BA7086A95E}];2 ;E                   ;Element ;Text     }

    { [{61A54020-5A22-4777-8499-A876D2E08C7F}];2 ;F                   ;Element ;Text     }

    { [{C3892DEF-6174-4845-A9BD-FA81350F4D61}];2 ;G                   ;Element ;Text     }

    { [{3B150350-762E-4D06-90AD-0B0A47DC3FEC}];2 ;H                   ;Element ;Text     }

    { [{9843402E-AD67-43E3-83FF-EC975E55B3F2}];2 ;I                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF I <> '' THEN
                                                                                    EVALUATE(IInt,I);
                                                                                END;
                                                                                 }

    { [{E7CE1720-702B-4D9A-AEFC-4D3968919ABC}];2 ;J                   ;Element ;Text     }

    { [{5AE9AE13-7450-478C-8D9E-AC817D7F71FF}];2 ;K                   ;Element ;Text     }

    { [{90053266-B5BA-4C55-8A52-DB7447E9D99D}];2 ;L                   ;Element ;Text     }

    { [{9AB2AB4C-715D-43E4-A2A5-6658CE4140BD}];2 ;M                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF M <> '' THEN
                                                                                    EVALUATE(MDate,M);
                                                                                END;
                                                                                 }

    { [{06BCF328-E298-4C4B-AA49-4C7C37E0CFDB}];2 ;N                   ;Element ;Text     }

    { [{417B5AE0-F7F0-4C62-BF94-8F190859D7E1}];2 ;O                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF O <> '' THEN
                                                                                    EVALUATE(ODec,O);
                                                                                END;
                                                                                 }

    { [{49450BA3-DF78-45C7-B141-CF97138EBB79}];2 ;P                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF P <> '' THEN
                                                                                    EVALUATE(PDec,P);
                                                                                END;
                                                                                 }

    { [{63E88C6F-614C-4576-84AC-E6ED90488EA3}];2 ;Q                   ;Element ;Text     }

    { [{4DE894A5-3D25-4067-B986-25835834C5D6}];2 ;R                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF R <> '' THEN
                                                                                    EVALUATE(RDate,R);
                                                                                END;
                                                                                 }

    { [{64CC39BC-E41F-4BBE-992C-0F61A1F625B0}];2 ;S                   ;Element ;Text     }

    { [{A345EA35-9079-4219-A4A9-19ECE6D4D472}];2 ;T                   ;Element ;Text     }

    { [{80227F89-07D2-4832-82F1-66D5E2AE22F9}];2 ;U                   ;Element ;Text     }

    { [{A4F20BFC-579F-4D4B-9EF4-0BCEA57D7BB9}];2 ;V                   ;Element ;Text     }

    { [{CBF4615E-8F0E-43D6-B477-490FB7ECB247}];2 ;W                   ;Element ;Text     }

    { [{2557FF88-D523-45F8-BFF1-AC27FBFC903D}];2 ;X                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF X <> '' THEN
                                                                                    EVALUATE(XInt,X);
                                                                                END;
                                                                                 }

    { [{ADECDC30-6B6E-4FB2-AEEB-2A777AE89E0D}];2 ;Y                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF Y <> '' THEN
                                                                                    EVALUATE(YInt,Y);
                                                                                END;
                                                                                 }

    { [{57029D5E-951B-4535-B113-CBE44A3801F0}];2 ;Z                   ;Element ;Text     }

    { [{998720E4-DDFF-4745-87F1-E72B49845512}];2 ;AA                  ;Element ;Text     }

    { [{01D7EC32-7FC0-404E-BC91-D97F1D2DE950}];2 ;AB                  ;Element ;Text     }

    { [{FB517B60-DA56-417F-87EA-82FE47A35C10}];2 ;AC                  ;Element ;Text     }

    { [{132C04D5-DFF8-4AC3-949F-381A864FA036}];2 ;AD                  ;Element ;Text     }

    { [{1CE9C550-6BB2-48A1-AA88-26495D0BB1C5}];2 ;AE                  ;Element ;Text     }

    { [{2377DD22-A040-4836-B004-78E21C671660}];2 ;AF                  ;Element ;Text     }

    { [{94F7365D-CE55-42BD-B2DF-851850F63BFE}];2 ;AG                  ;Element ;Text     }

    { [{D356FE66-4DBC-4F8A-AF76-5D0CF8537121}];2 ;AH                  ;Element ;Text     }

    { [{B5A5F069-0E69-4B68-86EF-50BC2002C489}];2 ;AI                  ;Element ;Text     }

    { [{B2EBBA2D-9714-445C-A515-E31606CC218D}];2 ;AJ                  ;Element ;Text     }

    { [{7A5CC2AE-C22C-4F1B-9088-1166EE4B7305}];2 ;AK                  ;Element ;Text     }

    { [{4F8FDBC5-813B-4B49-B3F1-B6931F2763E6}];2 ;AL                  ;Element ;Text     }

    { [{A61A923A-B22E-49DF-947C-433791C01129}];2 ;AM                  ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF AM <> '' THEN
                                                                                    EVALUATE(AMInt,AM);
                                                                                END;
                                                                                 }

    { [{258E6DE1-FC25-4CB0-8001-175FA06D0E79}];2 ;AN                  ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF AN <> '' THEN
                                                                                    EVALUATE(ANInt,AN);
                                                                                END;
                                                                                 }

    { [{E19BB47A-865F-42E5-88A3-C14B7E57BE2D}];2 ;AO                  ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF AO <> '' THEN
                                                                                    EVALUATE(AOInt,AO);
                                                                                END;
                                                                                 }

    { [{A4904224-085D-4418-AF62-B86BE2993FBE}];2 ;AP                  ;Element ;Text     }

    { [{B05BD245-876F-45ED-8987-99135A65AAE1}];2 ;AQ                  ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF AQ <> '' THEN
                                                                                    EVALUATE(AQInt,AQ);
                                                                                END;
                                                                                 }

    { [{F757950F-4E98-481E-9023-EB1F8BCBAE48}];2 ;AR                  ;Element ;Text     }

    { [{405421E2-06DE-4938-AD91-24B68211A4A1}];2 ;AS                  ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF AS <> '' THEN
                                                                                    EVALUATE(ASInt,AS);
                                                                                END;
                                                                                 }

    { [{C2D10E8E-A3A8-458D-A1A9-C98D2C49075F}];2 ;AT                  ;Element ;Text     }

    { [{6E5B31E0-7551-4B24-B383-DF9450D270F4}];2 ;AU                  ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF AU <> '' THEN
                                                                                    EVALUATE(AUInt,AU);
                                                                                END;
                                                                                 }

    { [{826DCCC8-B1C3-4A46-841A-87EAE5BD362D}];2 ;AV                  ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF AV <> '' THEN
                                                                                    EVALUATE(AVInt,AV);
                                                                                END;
                                                                                 }

    { [{51CACC61-2565-4225-89F8-85A2518DAAE2}];2 ;AW                  ;Element ;Text     }

    { [{E9C4C4F4-5F3D-4BF4-839B-F9A7E21BB3CF}];2 ;AX                  ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF AX <> '' THEN
                                                                                    EVALUATE(AXInt,AX);
                                                                                END;
                                                                                 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=[ENU=Lookup Main Project No. based on old Main Project No.;
                 SVE=Val av huvudprojekt baserat p† gammalt huvudprojektnr];
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100409010;;Container;
                  Name=Imp. Employee;
                  ContainerType=ContentArea }

      { 1100409009;1;Group  ;
                  CaptionML=[ENU=Options;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525001;2;Field  ;
                  CaptionML=[ENU=Third dimension;
                             SVE=Tredje dimensionen];
                  SourceExpr=Dim3Cde;
                  TableRelation=Dimension }

      { 1100525002;2;Field  ;
                  CaptionML=[ENU=Fourth dimension;
                             SVE=Fj„rde dimensionen];
                  SourceExpr=Dim4Cde;
                  TableRelation=Dimension }

    }
  }
  CODE
  {
    VAR
      "// GENERAL"@1100525045 : Integer;
      CommentRec@1100525044 : Record 97;
      ConvMgt@1100525043 : Codeunit 11020212;
      NoSerieMgt@1100525042 : Codeunit 396;
      XMLNo@1100525040 : Integer;
      MainTableID@1100525039 : Integer;
      CreateNewNosBln@1100525038 : Boolean;
      ImpLineCounter@1100525037 : Integer;
      CommentCde@1100525036 : Code[10];
      UserSetup@1100285000 : Record 91;
      UserRec@1100285001 : Record 2000000120;
      UserPers@1100285004 : Record 2000000073;
      ContactSetupRec@1100525035 : Record 5079;
      ConversionFileFormat@1100525033 : Record 11020691;
      RunIsImportRunBln@1100525032 : Boolean;
      xRec@1100525031 : Record 5200;
      GenSetupRec@1100525030 : Record 98;
      Dim3Cde@1100525028 : Code[20];
      Dim4Cde@1100525027 : Code[20];
      IInt@1100525018 : Integer;
      MDate@1100525014 : Date;
      ODec@1100525012 : Decimal;
      PDec@1100525011 : Decimal;
      RDate@1100525007 : Date;
      XInt@1100525001 : Integer;
      YInt@1100525000 : Integer;
      Text001@1100525016 : TextConst 'ENU=Third Dimension must be filled;SVE=Tredje dimensionen m†ste fyllas i';
      Text002@1100525015 : TextConst 'ENU=Fourth Dimension must be filled;SVE=Fj„rde dimensionen m†ste fyllas i';
      Text003@1100525010 : TextConst 'ENU="<empty>=Male, [1]=Female";SVE="<tom>=Man, [1]=Kvinna"';
      Text004@1100525009 : TextConst 'ENU=Third Dimension;SVE=Tredje dimensionen';
      Text005@1100525008 : TextConst 'ENU=Fourth Dimension;SVE=Fj„rde dimensionen';
      AMInt@1100285002 : Integer;
      ANInt@1100285003 : Integer;
      AOInt@1100285005 : Integer;
      AQInt@1000000000 : Integer;
      DimensionValue@1100285500 : Record 349;
      DefaultDimension@1100285006 : Record 352;
      ASInt@1100285007 : Integer;
      AUInt@1100285008 : Integer;
      AVInt@1100285009 : Integer;
      Employee2@1100285010 : Record 5200;
      HoursConsenter@1100285011 : Record 11020438;
      DimensionValue2@1100285012 : Record 349;
      AXInt@1100285013 : Integer;

    PROCEDURE StripData@1100485001();
    BEGIN
      A := DELCHR(A,'<>',' ');
      B := DELCHR(B,'<>',' ');
      C := DELCHR(C,'<>',' ');
      D := DELCHR(D,'<>',' ');
      E := DELCHR(E,'<>',' ');
      F := DELCHR(F,'<>',' ');
      G := DELCHR(G,'<>',' ');
      H := DELCHR(H,'<>',' ');
      J := DELCHR(J,'<>',' ');
      K := DELCHR(K,'=',' ');
      K := DELCHR(K,'=','.');
      L := DELCHR(L,'=',' ');
      L := DELCHR(L,'=','.');
      N := DELCHR(N,'<>',' ');
      AE := DELCHR(AE,'=',' ');
      AF := DELCHR(AF,'=',' ');
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    VAR
      DefaultDimension@1100529900 : Record 352;
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,Employee.FIELDNAME("No."),'Code20','');
        InsertColumnLine(XMLNo,'B',MainTableID,Employee.FIELDNAME(Employer),'Code20','');
        InsertColumnLine(XMLNo,'C',MainTableID,Employee.FIELDNAME("First Name"),'Text30','');
        InsertColumnLine(XMLNo,'D',MainTableID,Employee.FIELDNAME("Last Name"),'Text30','');
        InsertColumnLine(XMLNo,'E',MainTableID,Employee.FIELDNAME("Middle Name"),'Text30','');
        InsertColumnLine(XMLNo,'F',MainTableID,Employee.FIELDNAME(Initials),'Text30','');
        InsertColumnLine(XMLNo,'G',MainTableID,Employee.FIELDNAME("Job Title"),'Text30','');
        InsertColumnLine(XMLNo,'H',MainTableID,Employee.FIELDNAME(Gender),'Integer',Text003);
        InsertColumnLine(XMLNo,'J',MainTableID,Employee.FIELDNAME("E-Mail"),'Text80','');
        InsertColumnLine(XMLNo,'K',MainTableID,Employee.FIELDNAME("Phone No."),'Text30','');
        InsertColumnLine(XMLNo,'L',MainTableID,Employee.FIELDNAME("Mobile Phone No."),'Text30','');
        InsertColumnLine(XMLNo,'M',MainTableID,Employee.FIELDNAME("Employment Date"),'Date','');
        InsertColumnLine(XMLNo,'N',MainTableID,Employee.FIELDNAME("Trade Association"),'Code10','');
        InsertColumnLine(XMLNo,'O',MainTableID,Employee.FIELDNAME("Norm Hours"),'Decimal','');
        InsertColumnLine(XMLNo,'P',MainTableID,Employee.FIELDNAME("Norm Days"),'Decimal','');
        InsertColumnLine(XMLNo,'Q',MainTableID,Employee.FIELDNAME("Social Security No."),'Text30','');
        InsertColumnLine(XMLNo,'R',MainTableID,Employee.FIELDNAME("Birth Date"),'Date','');
        InsertColumnLine(XMLNo,'S',MainTableID,Employee.FIELDNAME("Manager No."),'Code20','Manager - Salary No. ');
        InsertColumnLine(XMLNo,'T',MainTableID,Employee.FIELDNAME("Global Dimension 1 Code"),'Code20','');
        InsertColumnLine(XMLNo,'U',MainTableID,Employee.FIELDNAME("Global Dimension 2 Code"),'Code20','');
        InsertColumnLine(XMLNo,'V',352,DefaultDimension.FIELDNAME("Dimension Value Code"),'Code20',Text004);
        InsertColumnLine(XMLNo,'W',352,DefaultDimension.FIELDNAME("Dimension Value Code"),'Code20',Text005);
        InsertColumnLine(XMLNo,'X',MainTableID,Employee.FIELDNAME(External),'Integer','OneTrueTxt');
        InsertColumnLine(XMLNo,'Y',MainTableID,Employee.FIELDNAME("Pre-Registration Hours"),'Integer','OneTrueTxt');
        //IMSE
        InsertColumnLine(XMLNo,'Z',MainTableID,Employee.FIELDNAME("Calculate Wage Costs"),'Text50','');
        InsertColumnLine(XMLNo,'AA',MainTableID,Employee.FIELDNAME("Salary No."),'Code20','');
        InsertColumnLine(XMLNo,'AB',MainTableID,Employee.FIELDNAME("Country/Region Code"),'Code10','');
        InsertColumnLine(XMLNo,'AC',MainTableID,Employee.FIELDNAME("Default Line Type"),'Text50','Project,Service,Indirect,Plant');
        InsertColumnLine(XMLNo,'AD',MainTableID,Employee.FIELDNAME("Labour Rule"),'Code10','');
        InsertColumnLine(XMLNo,'AE',91,UserSetup.FIELDNAME("User ID"),'Code50','');
        InsertColumnLine(XMLNo,'AF',91,UserSetup.FIELDNAME("Text Editor Path"),'Text250','');
        InsertColumnLine(XMLNo,'AG',2000000120,UserRec.FIELDNAME("Full Name"),'Text80','');
        InsertColumnLine(XMLNo,'AH',91,UserSetup.FIELDNAME("Department Code"),'Code20','');
        InsertColumnLine(XMLNo,'AI',91,UserSetup.FIELDNAME("Department Code Filter"),'Text100','');
        InsertColumnLine(XMLNo,'AJ',MainTableID,Employee.FIELDNAME("Company E-Mail"),'Text80','');
        InsertColumnLine(XMLNo,'AK',MainTableID,Employee.FIELDNAME(Status),'Option','Active,Inactive,Terminated');
        InsertColumnLine(XMLNo,'AL',MainTableID,Employee.FIELDNAME("Account Hours"),'Option','Required according to Norm,Optional,Not allowed');
        InsertColumnLine(XMLNo,'AM',MainTableID,Employee.FIELDNAME("Check Hours"),'Integer','OneTrueTxt');
        InsertColumnLine(XMLNo,'AN',MainTableID,Employee.FIELDNAME("Print Man Day Register"),'Integer','OneTrueTxt');
        InsertColumnLine(XMLNo,'AO',2000000073,UserPers.FIELDNAME("Language ID"),'Integer','');
        InsertColumnLine(XMLNo,'AP',2000000073,UserPers.FIELDNAME("Profile ID"),'Code30','');
        //IMSE
        InsertColumnLine(XMLNo,'AQ',91,UserSetup.FIELDNAME("Access own Hours only"),'Integer','OneTrueTxt');
        InsertColumnLine(XMLNo,'AR',349,DimensionValue.FIELDNAME(CostCenterResponsible),'Code20','');
        InsertColumnLine(XMLNo,'AS',91,UserSetup.FIELDNAME("Department Authoriz. Active"),'Integer','OneTrueTxt');
        InsertColumnLine(XMLNo,'AT',2000000073,UserPers.FIELDNAME(Company),'Text30','');
        InsertColumnLine(XMLNo,'AU',91,UserSetup.FIELDNAME("Project Authoriz. Active"),'Integer','OneTrueTxt');
        InsertColumnLine(XMLNo,'AV',91,UserSetup.FIELDNAME("Resp.Pers.Closing.Proc.Project"),'Integer','OneTrueTxt');
        InsertColumnLine(XMLNo,'AW',11020438,HoursConsenter.FIELDNAME("User ID"),'Code','User ID Hours consenter');
        InsertColumnLine(XMLNo,'AX',MainTableID,Employee.FIELDNAME(UTA),'Integer','OneTrueTxt');

      //  InsertColumnLine(XMLNo,'D',MainTableID,Employee.FIELDNAME(Address),'Text50','');
      //  InsertColumnLine(XMLNo,'E',MainTableID,Employee.FIELDNAME("Address 2"),'Text50','');
      //  InsertColumnLine(XMLNo,'F',MainTableID,Employee.FIELDNAME("Post Code"),'Code20','');
      //  InsertColumnLine(XMLNo,'G',MainTableID,Employee.FIELDNAME(City),'Text30','');
      END;
    END;

    PROCEDURE ClearFields@1100529903();
    BEGIN
      CLEAR(Employee);
      CLEAR(Employee2);
      CLEAR(HoursConsenter);
      A := '';
      B := '';
      C := '';
      D := '';
      E := '';
      F := '';
      G := '';
      H := '';
      I := '';
      J := '';
      K := '';
      L := '';
      M := '';
      N := '';
      O := '';
      P := '';
      Q := '';
      R := '';
      S := '';
      T := '';
      U := '';
      V := '';
      W := '';
      X := '';
      Y := '';
      //IMSE
      Z := '';
      AA := '';
      AB := '';
      AC := '';
      AD := '';
      AE := '';
      AF := '';
      AG := '';
      AH := '';
      AI := '';
      AJ := '';
      AK := '';
      AL := '';
      AM := '';
      AN := '';
      AO := '';
      AP := '';
      AQ := '';
      AR := '';
      AS := '';
      AT := '';
      AU := '';
      AV := '';
      AW := '';
      AX :='';
      //IMSE
      IInt := 0;
      MDate := 0D;
      ODec := 0;
      PDec := 0;
      RDate := 0D;
      XInt := 0;
      YInt := 0;
      AMInt:=0;
      ANInt:=0;
      AOInt:=0;
      AQInt:=0;
      ASInt:=0;
      AUInt:=0;
      AVInt:=0;
      AXInt:=0;
    END;

    PROCEDURE FillConversionXMLPortFields@1100409004();
    VAR
      ConversionXMLPort@1100409000 : Record 11020640;
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      ConversionXMLPort."Main Table ID" := MainTableID;
      ConversionXMLPort."Page ID" := 5201;
      ConversionXMLPort.MODIFY;
    END;

    BEGIN
    {
      // Old No.'s are stored in Comment Table (97), marked with [CommentCde].
      // Object No is stored in [XMLNo]. In case of customisation (copy of dataport) change in OnInitDataport;
      //
      // Please use [AddConversionFileFormatLine] in case Import file format is changed.

      FIXME:
      - import Counter.
      - filename in Comment.
      - add address.
      140520 ITERO.SB Added field AR (CostCenterResponsible)
      140819 ITERO.SB Change ManagerNo. (use manager salary no)
      141119 ITERO.SB Added AW
      141119 Handle filter in CostCenterResponsible
      141215 ITERO.DL code mandatory in field 'A'
                      use Employee."No." instead of filed 'A' to update CostCenterResponsible
      150123 ITERO.SB Added field AX
    }
    END.
  }
}

