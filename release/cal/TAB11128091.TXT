OBJECT Table 11128091 Gen. Journal Line Extension
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;TableRelation="Gen. Journal Template";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Journal Template Name;
                                                              SVE=Journalmall] }
    { 2   ;   ;Line No.            ;Integer       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Line No.;
                                                              SVE=Radnr] }
    { 51  ;   ;Journal Batch Name  ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Journal Template Name));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Journal Batch Name;
                                                              SVE=Journalnamn] }
    { 10604;  ;VAT Code            ;Code10        ;TableRelation="VAT Code".Code;
                                                   OnValidate=VAR
                                                                GenJnlLine@100000000 : Record 81;
                                                              BEGIN
                                                                GenJnlLine.GET("Journal Template Name","Journal Batch Name","Line No.");
                                                                NorwegianVATTools.InitPostingGrps_GenJnlLine(GenJnlLine,Rec,FALSE);
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=VAT Code;
                                                              NOR=Mva-kode;
                                                              SVE=Momskod];
                                                   Description=NAVNO }
    { 10605;  ;Bal. VAT Code       ;Code10        ;TableRelation="VAT Code".Code;
                                                   OnValidate=VAR
                                                                GenJnlLine@100000000 : Record 81;
                                                              BEGIN
                                                                GenJnlLine.GET("Journal Template Name","Journal Batch Name","Line No.");
                                                                NorwegianVATTools.InitPostingGrps_GenJnlLine(GenJnlLine,Rec,TRUE);
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Bal. VAT Code;
                                                              NOR=Motkonto-mva. - kode];
                                                   Description=NAVNO }
    { 10606;  ;Source Curr. Inv.tax Amount;Decimal;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Source Curr. Inv.tax Amount;
                                                              NOR=Kildevaluta - investeringsavg.bel›p];
                                                   Description=NAVNO;
                                                   Editable=No }
    { 10607;  ;Source Curr. Inv.tax Base;Decimal  ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Source Curr. Inv.tax Base;
                                                              NOR=Kildevaluta - investeringsavg.gr.lag];
                                                   Description=NAVNO;
                                                   Editable=No }
    { 10608;  ;VAT Base Amount Type;Option        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=VAT Base Amount Type;
                                                              NOR=Mva-grunnlagsbel›p - type];
                                                   OptionCaptionML=[ENU=Automatic,With VAT,Without VAT;
                                                                    NOR=Automatisk,Med mva.,Uten mva.;
                                                                    SVE=Automatisk,Med moms,Utan moms];
                                                   OptionString=Automatic,With VAT,Without VAT;
                                                   Description=NAVNO }
    { 15000000;;Remittance Account Code;Code10    ;TableRelation="Remittance Account".Code;
                                                   OnValidate=VAR
                                                                RemAccount@1080000 : Record 11128506;
                                                              BEGIN
                                                                IF RemAccount.GET("Remittance Account Code") THEN BEGIN
                                                                  VALIDATE("Remittance Type",RemAccount.Type);
                                                                  VALIDATE("Remittance Agreement Code",RemAccount."Remittance Agreement Code");
                                                                END;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Remittance Account Code;
                                                              NOR=Remitteringskontokode];
                                                   Description=NAVNO }
    { 15000001;;BOLS Text Code     ;Option        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=BOLS Text Code;
                                                              NOR=BOLS tekstkode];
                                                   OptionCaptionML=[ENU=Transfer without advice,KID transfer,Transfer with advice,Money order,Salary,Seaman's pay,Agricultural settlement,Pension/ Social security,Advice sent from institution other than BBS,Tax,Free text mass payment,Free text,Self-produced money order;
                                                                    NOR=Overf›ring uten melding,Overf›ring med KID,Overf›ring med melding,Overf›ring med Giro Utbetaling,L›nn,Hyretrekk,Landbruksoppgj›r,Trygd Pensjon,Melding sendt fra annen institusjon enn BBS,Skatt,Fritekst massebetaling,Fritekst,Egenprodusert Giro Utbetaling];
                                                   OptionString=Transfer without advice,KID transfer,Transfer with advice,Money order,Salary,Seaman's pay,Agricultural settlement,Pension/ Social security,Advice sent from institution other than BBS,Tax,Free text mass payment,Free text,Self-produced money order;
                                                   Description=NAVNO }
    { 15000002;;Payment Type Code Domestic;Code2  ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Payment Type Code Domestic;
                                                              NOR=Betalingsartkode innland];
                                                   Description=NAVNO }
    { 15000003;;KID                ;Code30        ;OnValidate=VAR
                                                                Tools@1080000 : Codeunit 11128515;
                                                                ErrorMess@1080001 : Text[250];
                                                                GenJournalLine@100000000 : Record 81;
                                                              BEGIN
                                                                IF KID <> '' THEN BEGIN
                                                                  "Recipient Ref. 1" := '';
                                                                  "Recipient Ref. 2" := '';
                                                                  "Recipient Ref. 3" := '';
                                                                  ErrorMess := Tools.CheckKID(KID);
                                                                  IF ErrorMess <> '' THEN
                                                                    ERROR(ErrorMess);
                                                                END;
                                                                SetStructuredPayment;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=KID;
                                                              NOR=KID;
                                                              SVE=KID];
                                                   Description=NAVNO }
    { 15000004;;Recipient Ref. 1   ;Code80        ;OnValidate=VAR
                                                                RemTools@1080000 : Codeunit 11128515;
                                                              BEGIN
                                                                VALIDATE(KID);
                                                                RemTools.CheckMessage("Remittance Agreement Code","Recipient Ref. 1");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Recipient Ref. 1;
                                                              NOR=Mottakerref. 1];
                                                   Description=NAVNO }
    { 15000005;;Recipient Ref. 2   ;Code80        ;OnValidate=VAR
                                                                RemTools@1080000 : Codeunit 11128515;
                                                              BEGIN
                                                                VALIDATE(KID);
                                                                RemTools.CheckMessage("Remittance Agreement Code","Recipient Ref. 2");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Recipient Ref. 2;
                                                              NOR=Mottakerref. 2];
                                                   Description=NAVNO }
    { 15000006;;Recipient Ref. 3   ;Code80        ;OnValidate=VAR
                                                                RemTools@1080000 : Codeunit 11128515;
                                                              BEGIN
                                                                VALIDATE(KID);
                                                                RemTools.CheckMessage("Remittance Agreement Code","Recipient Ref. 3");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Recipient Ref. 3;
                                                              NOR=Mottakerref. 3];
                                                   Description=NAVNO }
    { 15000007;;Urgent             ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Urgent;
                                                              NOR=Haster];
                                                   Description=NAVNO }
    { 15000008;;Agreed Exch. Rate  ;Decimal       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Agreed Exch. Rate;
                                                              NOR=Avtalt kurs];
                                                   DecimalPlaces=5:5;
                                                   BlankZero=Yes;
                                                   Description=NAVNO }
    { 15000009;;Agreed With        ;Code6         ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Agreed With;
                                                              NOR=Avtalt med];
                                                   Description=NAVNO }
    { 15000010;;Futures Contract No.;Code6        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Futures Contract No.;
                                                              NOR=Terminskontraktnr.];
                                                   Description=NAVNO }
    { 15000011;;Futures Contract Exch. Rate;Decimal;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Futures Contract Exch. Rate;
                                                              NOR=Terminskontraktkurs];
                                                   DecimalPlaces=5:5;
                                                   BlankZero=Yes;
                                                   Description=NAVNO }
    { 15000012;;Check              ;Option        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Check;
                                                              NOR=Sjekk;
                                                              SVE=Kontrollera];
                                                   OptionCaptionML=[ENU=No,Send to employer,Send to beneficiary;
                                                                    NOR=Nei,Sendes oppdragsgiver,Sendes betalingsmottaker];
                                                   OptionString=No,Send to employer,Send to beneficiary;
                                                   Description=NAVNO }
    { 15000013;;Recipient Ref. Abroad;Code35      ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Recipient Ref. Abroad;
                                                              NOR=Mottakerref. utland];
                                                   Description=NAVNO }
    { 15000014;;Payment Type Code Abroad;Code2    ;TableRelation="Payment Type Code Abroad";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Payment Type Code Abroad;
                                                              NOR=Betalingsartkode utland;
                                                              SVE=Betalningstypkod, utland];
                                                   Description=NAVNO }
    { 15000015;;Specification (Norges Bank);Code60;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Specification (Norges Bank);
                                                              NOR=Spesifikasjon (Norges Bank)];
                                                   Description=NAVNO }
    { 15000016;;Remittance Type    ;Option        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Remittance Type;
                                                              NOR=Remitteringstype];
                                                   OptionCaptionML=[ENU=Domestic,Foreign;
                                                                    NOR=Innland,Utland;
                                                                    SVE=Inrikes,Utrikes];
                                                   OptionString=Domestic,Foreign;
                                                   Description=NAVNO;
                                                   Editable=No }
    { 15000017;;Payment Due Date   ;Date          ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Payment Due Date;
                                                              NOR=Betaling forfallsdato];
                                                   Description=NAVNO;
                                                   Editable=No }
    { 15000018;;Remittance Agreement Code;Code10  ;TableRelation="Remittance Agreement".Code;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Remittance Agreement Code;
                                                              NOR=Remitteringsavtalekode];
                                                   Description=NAVNO }
    { 15000019;;Remittance Warning ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Remittance Warning;
                                                              NOR=Remittering advarsel];
                                                   Description=NAVNO }
    { 15000020;;Remittance Warning Text;Text100   ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Remittance Warning Text;
                                                              NOR=Remittering advarseltekst];
                                                   Description=NAVNO }
    { 15000025;;Waiting Journal Reference;Integer ;OnValidate=BEGIN
                                                                IF NOT CONFIRM(RemittanceUpdateWarningQst,FALSE,FIELDCAPTION("Waiting Journal Reference")) THEN
                                                                  ERROR('');
                                                              END;

                                                   OnLookup=VAR
                                                              WaitingJournalLine@1080000 : Record 11128507;
                                                              WaitingJournal@1080001 : Page 11128509;
                                                              GenJnlLine@100000000 : Record 81;
                                                            BEGIN
                                                              GenJnlLine.GET("Journal Template Name","Journal Batch Name","Line No.");
                                                              GenJnlLine.TESTFIELD("Account Type",GenJnlLine."Account Type"::Vendor);
                                                              WaitingJournal.LOOKUPMODE(TRUE);
                                                              IF WaitingJournal.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                WaitingJournal.GETRECORD(WaitingJournalLine);
                                                                VALIDATE("Waiting Journal Reference",WaitingJournalLine.Reference);
                                                              END;
                                                            END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Waiting Journal Reference;
                                                              NOR=Ventekladdreferanse];
                                                   BlankZero=Yes;
                                                   Description=NAVNO }
    { 15000027;;Remittance Handling Ref.;Text6    ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Remittance Handling Ref.;
                                                              NOR=Remittering effektueringsref.];
                                                   Description=NAVNO;
                                                   Editable=No }
    { 15000037;;Execution Ref. 2   ;Text12        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Execution Ref. 2;
                                                              NOR=Effektueringsref. 2];
                                                   Description=NAVNO }
    { 15000040;;Structured Payment ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Structured Payment;
                                                              NOR=Strukturert betaling];
                                                   Description=NAVNO;
                                                   Editable=No }
    { 15000041;;Our Account No.    ;Text20        ;OnValidate=BEGIN
                                                                SetStructuredPayment;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Our Account No.;
                                                              NOR=V†rt kontonr.;
                                                              SVE=V†rt kontonr];
                                                   Description=NAVNO }
    { 15000100;;Warning            ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Warning;
                                                              NOR=Advarsel;
                                                              SVE=Varning];
                                                   Description=NAVNO }
    { 15000101;;Warning text       ;Text100       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Warning text;
                                                              NOR=Advarselstekst];
                                                   Description=NAVNO }
    { 32000000;;Reference No.      ;Code20        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Reference No.;
                                                              FIN=Viitenro;
                                                              SVE=Referensnummer];
                                                   Description=NAVFI }
    { 32000001;;Message Type       ;Option        ;InitValue=Reference No;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Message Type;
                                                              FIN=Viestilaji;
                                                              SVE=Meddelandetyp];
                                                   OptionCaptionML=[ENU=Reference No,Invoice Information,Message,Long Message,Tax Message;
                                                                    FIN=Viitenro,Laskutiedot,Viesti,Pitk„ viesti,Veroviesti];
                                                   OptionString=Reference No,Invoice Information,Message,Long Message,Tax Message;
                                                   Description=NAVFI }
    { 32000002;;Invoice Message    ;Text250       ;OnValidate=BEGIN
                                                                IF ("Invoice Message" <> '' ) AND ("Message Type" = "Message Type"::"Reference No") THEN BEGIN
                                                                  IF STRLEN("Invoice Message")  > 20 THEN
                                                                    ERROR(Text1090006, FIELDCAPTION("Invoice Message"), 20);
                                                                  RefNoCheck.InvReferenceCheck("Invoice Message");
                                                                END;
                                                                IF "Message Type" = "Message Type"::Message THEN
                                                                  IF STRLEN("Invoice Message") > 70 THEN
                                                                    ERROR(Text1090006, FIELDCAPTION("Invoice Message"), 70);
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Invoice Message;
                                                              FIN=Laskuviesti];
                                                   Description=NAVFI }
    { 32000003;;Invoice Message 2  ;Text250       ;OnValidate=BEGIN
                                                                IF "Message Type" = "Message Type"::"Long Message" THEN
                                                                  IF STRLEN("Invoice Message" + "Invoice Message 2") > 420 THEN
                                                                    ERROR(Text1090008, FIELDCAPTION("Invoice Message"), FIELDCAPTION("Invoice Message 2"), 420);
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Invoice Message 2;
                                                              FIN=Laskuviesti 2];
                                                   Description=NAVFI }
    { 32000004;;Payment date       ;Date          ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Payment date;
                                                              FIN=Maksupvm;
                                                              SVE=Betalningsdatum];
                                                   Description=NAVFI }
  }
  KEYS
  {
    {    ;Journal Template Name,Journal Batch Name,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NorwegianVATTools@100000000 : Codeunit 11128500;
      RemittanceUpdateWarningQst@100000001 : TextConst 'ENU=%1 is usually updated automatically by remittance system.\Are you sure you want to change this?;NOR=%1 oppdateres vanligvis automatisk av remitteringssystemet.\Er du sikker p† at du vil endre denne?';
      Text1090006@100000003 : TextConst 'ENU=%1 too long, maximum length is %2 characters.';
      Text1090008@100000002 : TextConst 'ENU=%1 and %2 are too long, maximum length is %3 characters.';
      RefNoCheck@100000004 : Codeunit 11126182;

    PROCEDURE SetStructuredPayment@1080000();
    VAR
      GenJnlLine@100000000 : Record 81;
      PurchInvHeader@111280001 : Record 122;
      SymbrioSetup@111280000 : Record 11127975;
    BEGIN
      GenJnlLine.GET("Journal Template Name","Journal Batch Name","Line No.");
      "Structured Payment" := NOT ((KID = '') AND (GenJnlLine."External Document No." = ''));

      //>>RFC034
      IF SymbrioSetup.GET AND (GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::Invoice) AND (PurchInvHeader.GET(GenJnlLine."Applies-to Doc. No.")) THEN BEGIN
        "Structured Payment" := NOT ((KID = '') AND (GenJnlLine."External Document No." = '') AND (PurchInvHeader."Payment Reference" = ''));
      END;
      //<<RFC034

      //>>RFC155
      IF NOT "Structured Payment" THEN
        "Structured Payment" := NOT ((KID = '') AND (GenJnlLine."External Document No." = '') AND (GenJnlLine."Payment Reference" = ''));
      //<<RFC155
    END;

    PROCEDURE InitGetLine@111280000(GenJnlLine@111280000 : Record 81);
    BEGIN
      IF NOT GET(GenJnlLine."Journal Template Name",GenJnlLine."Journal Batch Name",GenJnlLine."Line No.") THEN
        INIT;
      "Journal Template Name" := GenJnlLine."Journal Template Name";
      "Journal Batch Name" := GenJnlLine."Journal Batch Name";
      "Line No." := GenJnlLine."Line No.";
    END;

    PROCEDURE SaveUpdateLine@111280001(pGenJnlLine@111280006 : Record 81);
    VAR
      GenJnlLineExt@111280003 : Record 11128091;
      GenJnlLineExtInit@111280004 : Record 11128091;
      DeleteExt@111280005 : Boolean;
      JournalTemplateName@111280002 : Code[10];
      JournalBatchName@111280001 : Code[10];
      LineNo@111280000 : Integer;
    BEGIN
      JournalTemplateName := pGenJnlLine."Journal Template Name";
      JournalBatchName := pGenJnlLine."Journal Batch Name";
      LineNo := pGenJnlLine."Line No.";

      GenJnlLineExtInit.INIT;
      GenJnlLineExtInit."Journal Batch Name" := JournalBatchName;
      GenJnlLineExtInit."Journal Template Name" := JournalTemplateName;
      GenJnlLineExtInit."Line No." := LineNo;
      DeleteExt := (FORMAT(Rec) = FORMAT(GenJnlLineExtInit));

      IF NOT GenJnlLineExt.GET(JournalTemplateName,JournalBatchName,LineNo) THEN BEGIN
        IF DeleteExt THEN
          EXIT;
        GenJnlLineExt.INIT;
        GenJnlLineExt."Journal Batch Name" := JournalBatchName;
        GenJnlLineExt."Journal Template Name" := JournalTemplateName;
        GenJnlLineExt."Line No." := LineNo;
        GenJnlLineExt.INSERT;
      END ELSE BEGIN
        IF DeleteExt THEN BEGIN
          GenJnlLineExt.DELETE;
          EXIT;
        END;
      END;
      GenJnlLineExt.TRANSFERFIELDS(Rec,FALSE);
      GenJnlLineExt.MODIFY;
    END;

    BEGIN
    END.
  }
}

