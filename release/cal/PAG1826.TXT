OBJECT Page 1826 Company Consolidation Wizard
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Company Consolidation;
               NOR=Selskapskonsolidering;
               SVE=F”retagskonsolidering];
    PageType=NavigatePage;
    OnInit=BEGIN
             IF NOT BusinessUnitSetup.WRITEPERMISSION THEN
               ERROR(PermissionsErr);
             LoadTopBanners;
           END;

    OnOpenPage=BEGIN
                 Step := Step::Start;
                 NewCompanyData := NewCompanyData::"Standard Data";
                 UpdateDataDescription;
                 EnableControls;
                 ConsolidatedAccountsCreated := FALSE;
                 ThatsItInstructions := ThatsItCreateTxt;
                 DeleteTempRecords;
               END;

    OnClosePage=BEGIN
                  DeleteTempRecords;
                END;

    OnQueryClosePage=BEGIN
                       IF (CloseAction = ACTION::OK) AND (NOT Finished) THEN
                         IF NOT CONFIRM(SetupNotCompletedQst,FALSE) THEN
                           ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 2       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 3       ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=[ENU=Back;
                                 NOR=Tilbake;
                                 SVE=Bak†t];
                      ApplicationArea=#Suite;
                      Enabled=BackActionEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(TRUE);
                               END;
                                }
      { 4       ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=[ENU=Next;
                                 NOR=Neste;
                                 SVE=N„sta];
                      ApplicationArea=#Suite;
                      Enabled=NextActionEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextStep(FALSE);
                               END;
                                }
      { 5       ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=[ENU=Finish;
                                 NOR=Fullf›r;
                                 SVE=Slutf”r];
                      ApplicationArea=#Suite;
                      Enabled=FinishActionEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=VAR
                                 AssistedSetup@1000 : Record 1803;
                               BEGIN
                                 CreateAction;
                                 AssistedSetup.SetStatus(PAGE::"Company Consolidation Wizard",AssistedSetup.Status::Completed);
                                 IF SelectCompanyOption = SelectCompanyOption::"Create a new company" THEN
                                   MESSAGE(AfterCreateCompanyMsg);
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 6   ;1   ;Group     ;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 7   ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 8   ;1   ;Group     ;
                Visible=TopBannerVisible AND FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 9   ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 10  ;1   ;Group     ;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 11  ;2   ;Group     ;
                CaptionML=[ENU=Welcome to the Company Consolidation Assisted Setup Guide;
                           NOR=Velkommen veiledningen for assistert oppsett av selskapskonsolidering;
                           SVE=V„lkommen till guiden med assisterad konfiguration f”r f”retagskonsolidering];
                Visible=FirstStepVisible;
                GroupType=Group }

    { 12  ;3   ;Group     ;
                Visible=FirstStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=This assisted setup guide helps you get ready to run a consolidation report. You will create or choose a company to keep the consolidated transactions in, and choose the companies and accounts to consolidate.;
                                     NOR=Dette assisterte oppsettet veileder deg slik at du blir klar til † kj›re en konsolideringsrapport. Du skal opprette eller velge et selskap du skal beholde de konsoliderte transaksjonene i, og du skal velge selskapene og kontoene som skal konsolideres.;
                                     SVE=Den h„r guiden med assisterad konfiguration hj„lper dig att k”ra en konsolideringsrapport. Du kommer att skapa eller v„lja ett f”retag f”r att beh†lla de konsoliderade transaktionerna och v„lja f”retag och konton f”r konsolidering.] }

    { 27  ;1   ;Group     ;
                Visible=ConsolidatedStepVisible;
                GroupType=Group }

    { 24  ;2   ;Group     ;
                CaptionML=[ENU=Consolidated Company;
                           NOR=Konsolidert selskap;
                           SVE=Konsoliderat f”retag];
                Visible=ConsolidatedStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Create or choose the company that will contain the consolidated transactions. Creating a company will require that you create the setups needed for consolidation reports.;
                                     NOR=Opprett eller velg selskapet som skal inneholde de konsoliderte transaksjonene. N†r du oppretter et selskap, krever det at du utarbeider oppsettene som kreves for konsolideringsrapporter.;
                                     SVE=Skapa eller v„lj f”retaget som ska inneh†lla konsoliderade transaktioner. Att skapa ett f”retag kr„ver att du skapar inst„llningar som beh”vs f”r konsolideringsrapporter.] }

    { 28  ;3   ;Field     ;
                Name=SelectCompanyOption;
                CaptionML=[ENU=I want to;
                           NOR=Jeg vil;
                           SVE=Jag vill];
                OptionCaptionML=[ENU=Create a new company,Use an existing company;
                                 NOR=Opprett et nytt selskap,Bruk et eksisterende selskap;
                                 SVE=Skapa ett nytt f”retag,Anv„nd ett befintligt f”retag];
                ApplicationArea=#Suite;
                SourceExpr=SelectCompanyOption;
                OnValidate=BEGIN
                             IF SelectCompanyOption = SelectCompanyOption::"Use an existing company" THEN BEGIN
                               SelectCompanyInstructions := SelectCompanyUseExistingTxt;
                               ThatsItInstructions := ThatsItUseExistingTxt;
                             END ELSE BEGIN
                               SelectCompanyInstructions := SelectCompanyCreateTxt;
                               ThatsItInstructions := ThatsItCreateTxt;
                             END;
                           END;
                            }

    { 31  ;1   ;Group     ;
                Visible=SelectCompanyVisible;
                GroupType=Group }

    { 32  ;2   ;Group     ;
                CaptionML=[ENU=Select Company;
                           NOR=Velg selskap;
                           SVE=V„lj f”retag];
                GroupType=Group }

    { 55  ;3   ;Field     ;
                CaptionML=[ENU=Select Company;
                           NOR=Velg selskap;
                           SVE=V„lj f”retag];
                ApplicationArea=#Suite;
                SourceExpr=SelectCompanyInstructions;
                Editable=FALSE;
                ShowCaption=No }

    { 29  ;3   ;Field     ;
                Name=Select Company;
                AssistEdit=Yes;
                CaptionML=[ENU=Select Company;
                           NOR=Velg selskap;
                           SVE=V„lj f”retag];
                ApplicationArea=#Suite;
                SourceExpr=SelectCompanyName;
                Editable=FALSE;
                OnAssistEdit=VAR
                               SelectedCompany@1000 : Record 2000000006;
                               AllowedCompanies@1001 : Page 9177;
                             BEGIN
                               AllowedCompanies.Initialize;

                               IF SelectedCompany.GET(COMPANYNAME) THEN
                                 AllowedCompanies.SETRECORD(SelectedCompany);

                               AllowedCompanies.LOOKUPMODE(TRUE);

                               IF AllowedCompanies.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                 AllowedCompanies.GETRECORD(SelectedCompany);
                                 SelectCompanyName := SelectedCompany.Name;
                                 ConsolidatedCompany := SelectCompanyName;
                               END;
                             END;
                              }

    { 13  ;1   ;Group     ;
                Visible=CreationStepVisible;
                GroupType=Group }

    { 14  ;2   ;Group     ;
                CaptionML=[ENU=Specify some basic information;
                           NOR=Angi noe grunnleggende informasjon;
                           SVE=Ange grundl„ggande information];
                Visible=CreationStepVisible;
                GroupType=Group }

    { 20  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=Enter a name for the company.;
                                     NOR=Angi et navn for selskapet.;
                                     SVE=Ange ett namn p† f”retaget.] }

    { 21  ;4   ;Field     ;
                Name=CompanyName;
                ApplicationArea=#Suite;
                SourceExpr=NewCompanyName;
                OnValidate=BEGIN
                             IF Company.GET(NewCompanyName) THEN
                               ERROR(CompanyAlreadyExistsErr);

                             NewCompany := TRUE;
                           END;

                ShowMandatory=TRUE;
                ShowCaption=No }

    { 16  ;3   ;Group     ;
                CaptionML=[ENU=Select the data and setup to get started.;
                           NOR=Velg dataene og oppsettet for † komme i gang.;
                           SVE=V„lj data och konfiguration f”r att komma ig†ng.];
                GroupType=Group }

    { 15  ;4   ;Field     ;
                Name=CompanyData;
                OptionCaptionML=[ENU=Standard Data (Recommended),None (For Advanced Users Only);
                                 NOR=Standarddata (anbefales),Ingen (bare for avanserte brukere);
                                 SVE=Standarddata (rekommenderas),ingen (endast f”r avancerade anv„ndare)];
                ApplicationArea=#Suite;
                SourceExpr=NewCompanyData;
                OnValidate=BEGIN
                             UpdateDataDescription;
                           END;

                ShowCaption=No }

    { 23  ;4   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr=NewCompanyDataDescription;
                Editable=FALSE;
                MultiLine=Yes;
                ShowCaption=No }

    { 39  ;1   ;Group     ;
                Visible=SetupBusUnitsVisible;
                GroupType=Group }

    { 40  ;2   ;Group     ;
                CaptionML=[ENU=Choose the source companies;
                           NOR=Velg kildeselskapene;
                           SVE=V„lj k„llf”retag];
                Visible=SetupBusUnitsVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Choose the companies to consolidate transactions from.;
                                     NOR=Velg selskapene som transaksjonene skal konsolideres fra.;
                                     SVE=V„lj f”retag att konsolidera transaktioner fr†n.] }

    { 41  ;3   ;Part      ;
                CaptionML=[ENU=Companies;
                           NOR=Selskaper;
                           SVE=F”retag];
                ApplicationArea=#Suite;
                PagePartID=Page1827;
                PartType=Page }

    { 25  ;1   ;Group     ;
                CaptionML=[ENU=<Control25>;
                           NOR=<Control25>;
                           SVE=<Control25>];
                Visible=BusinessUnitsVisible;
                GroupType=Group }

    { 26  ;2   ;Group     ;
                CaptionML=[ENU=Set up the consolidated company;
                           NOR=Konfigurer det konsoliderte selskapet;
                           SVE=Ange det konsoliderade f”retaget];
                Visible=BusinessUnitsVisible;
                GroupType=Group }

    { 19  ;3   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr=SetupBusinessUnitsLbl;
                Editable=FALSE }

    { 30  ;3   ;Field     ;
                Name=Code;
                CaptionML=[ENU=Business Unit Code;
                           NOR=Konsernkode;
                           SVE=Aff„rsenhetskod];
                ApplicationArea=#Suite;
                SourceExpr=BusinessUnitCode;
                OnValidate=VAR
                             BusinessUnit@1000 : Record 220;
                           BEGIN
                             BusinessUnitInformation.RESET;
                             BusinessUnitInformation.SETRANGE(Code,BusinessUnitCode);
                             IF BusinessUnitInformation.FINDFIRST THEN
                               ERROR(RecordExistsErr);

                             IF NOT NewCompany THEN BEGIN
                               BusinessUnit.CHANGECOMPANY(ConsolidatedCompany);
                               BusinessUnit.RESET;
                               BusinessUnit.SETRANGE(Code,BusinessUnitCode);
                               IF BusinessUnit.FINDFIRST THEN
                                 ERROR(RecordExistsErr);
                             END;
                           END;

                ShowMandatory=TRUE }

    { 33  ;3   ;Field     ;
                Name=Name;
                CaptionML=[ENU=Name;
                           NOR=Navn;
                           SVE=Namn];
                ApplicationArea=#Suite;
                SourceExpr=BusinessUnitName;
                Editable=FALSE }

    { 34  ;3   ;Field     ;
                Name=Company Name;
                CaptionML=[ENU=Company Name;
                           NOR=Selskapsnavn;
                           SVE=F”retagsnamn];
                ApplicationArea=#Suite;
                SourceExpr=BusinessUnitCompanyName;
                TableRelation=Company.Name;
                Editable=FALSE }

    { 35  ;3   ;Field     ;
                Name=Currency Code;
                CaptionML=[ENU=Currency Code;
                           NOR=Valutakode;
                           SVE=Valutakod];
                ApplicationArea=#Suite;
                SourceExpr=BusinessUnitCurrencyCode;
                TableRelation=Currency }

    { 36  ;3   ;Field     ;
                Name=Currency Exchange Rate Table;
                CaptionML=[ENU=Currency Exchange Rate Table;
                           NOR=Valutakurstabell;
                           SVE=Valutakurstabell];
                OptionCaptionML=[ENU=Local,Business Unit;
                                 NOR=Lokal,Konsern;
                                 SVE=Lokal,Aff„rsenhet];
                ApplicationArea=#Suite;
                SourceExpr=BusinessUnitExchRtTable }

    { 37  ;3   ;Field     ;
                Name=Starting Date;
                CaptionML=[ENU=Starting Date;
                           NOR=Startdato;
                           SVE=Startdatum];
                ApplicationArea=#Suite;
                SourceExpr=BusinessUnitStartingDate }

    { 38  ;3   ;Field     ;
                Name=Ending Date;
                CaptionML=[ENU=Ending Date;
                           NOR=Sluttdato;
                           SVE=Slutdatum];
                ApplicationArea=#Suite;
                SourceExpr=BusinessUnitEndingDate }

    { 42  ;1   ;Group     ;
                Visible=BusinessUnitsVisible2;
                GroupType=Group }

    { 43  ;2   ;Group     ;
                CaptionML=[ENU=Set up the consolidated company;
                           NOR=Konfigurer det konsoliderte selskapet;
                           SVE=Ange det konsoliderade f”retaget];
                Visible=BusinessUnitsVisible2;
                GroupType=Group }

    { 53  ;3   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr=SetupBusinessUnitsLbl;
                Editable=FALSE }

    { 54  ;3   ;Field     ;
                Name=BusinessCode;
                CaptionML=[ENU=Code;
                           NOR=Kode;
                           SVE=Kod];
                ApplicationArea=#Suite;
                SourceExpr=BusinessUnitCode2;
                Editable=FALSE }

    { 44  ;3   ;Field     ;
                Name=ExchRateGainsAcc;
                CaptionML=[ENU=Exch. Rate Gains Acc.;
                           NOR=Agiokonto;
                           SVE=Valutakursvinster];
                ApplicationArea=#Suite;
                SourceExpr=BusinessUnitExchRateGains;
                TableRelation="Consolidation Account" }

    { 45  ;3   ;Field     ;
                Name=ExchRateLossesAcc;
                CaptionML=[ENU=Exch. Rate Losses Acc.;
                           NOR=Disagiokonto;
                           SVE=Kto f”r valutakursf”rluster];
                ApplicationArea=#Suite;
                SourceExpr=BusinessUnitExchRateLosses;
                TableRelation="Consolidation Account" }

    { 46  ;3   ;Field     ;
                Name=CompExchRateGainsAcc;
                CaptionML=[ENU=Comp.Exch. Rate Gains Acc.;
                           NOR=Agiokonto - komp.;
                           SVE=Sammansatt valutakursvinst];
                ApplicationArea=#Suite;
                SourceExpr=BusinessUnitCompExchRateGains;
                TableRelation="Consolidation Account" }

    { 47  ;3   ;Field     ;
                Name=CompExchRateLosses;
                CaptionML=[ENU=Comp. Exch. Rate Losses Acc.;
                           NOR=Disagiokonto - komp.;
                           SVE=Sammansatt valutakursf”rlust];
                ApplicationArea=#Suite;
                SourceExpr=BusinessUnitCompExchRateLosses;
                TableRelation="Consolidation Account" }

    { 48  ;3   ;Field     ;
                Name=EquityExchRateGains;
                CaptionML=[ENU=Equity Exch. Rate Gains Acc.;
                           NOR=Agiokonto - egenkapital;
                           SVE=Aktiekurs valutakursvinst];
                ApplicationArea=#Suite;
                SourceExpr=BusinessUnitEquityExchRateGains;
                TableRelation="Consolidation Account" }

    { 49  ;3   ;Field     ;
                Name=EquityExchRateLosses;
                CaptionML=[ENU=Equity Exch. Rate Losses Acc.;
                           NOR=Disagiokonto - egenkapital;
                           SVE=Aktiekurs valutakursf”rlust];
                ApplicationArea=#Suite;
                SourceExpr=BusinessUnitEquityExchRateLosses;
                TableRelation="Consolidation Account" }

    { 50  ;3   ;Field     ;
                Name=ResidualAccount;
                CaptionML=[ENU=Residual Account;
                           NOR=Avrundingskonto;
                           SVE=Restkonto vid konsolidering];
                ApplicationArea=#Suite;
                SourceExpr=BusinessUnitResidualAccount;
                TableRelation="Consolidation Account" }

    { 51  ;3   ;Field     ;
                Name=MinorityExchRateGains;
                CaptionML=[ENU=Minority Exch. Rate Gains;
                           NOR=Agio - minoritet;
                           SVE=Valutakursvinst minoritet];
                ApplicationArea=#Suite;
                SourceExpr=BusinessUnitMinorityExchRateGains;
                TableRelation="Consolidation Account" }

    { 52  ;3   ;Field     ;
                Name=MinorityExchRateLosses;
                CaptionML=[ENU=Minority Exch. Rate Losses;
                           NOR=Disagio - minoritet;
                           SVE=Valutakursf”rlust minoritet];
                ApplicationArea=#Suite;
                SourceExpr=BusinessUnitMinorityExchRateLosses;
                TableRelation="Consolidation Account" }

    { 17  ;1   ;Group     ;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 18  ;2   ;Group     ;
                CaptionML=[ENU=That's it!;
                           NOR=Det var det!;
                           SVE=Klart!];
                Visible=FinalStepVisible;
                GroupType=Group }

    { 56  ;3   ;Field     ;
                CaptionML=[ENU=Thats It Instructions;
                           NOR=Det var det, instruksjoner;
                           SVE=Klart-instruktionerna];
                ApplicationArea=#Suite;
                SourceExpr=ThatsItInstructions;
                Visible=FinalStepVisible;
                Editable=FALSE;
                ShowCaption=No }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1000 : Record 9400;
      MediaRepositoryDone@1001 : Record 9400;
      MediaResourcesStandard@1030 : Record 2000000182;
      MediaResourcesDone@1029 : Record 2000000182;
      BusinessUnitSetup@1046 : Record 1827;
      BusinessUnitInformation@1047 : Record 1828;
      Company@1018 : Record 2000000006;
      ConsolidationTest@1028 : Report 1826;
      AssistedCompanySetup@1022 : Codeunit 1800;
      ClientTypeManagement@1074 : Codeunit 4030;
      Step@1002 : 'Start,Consolidated,Select,Creation,Business Units Setup,Business Units,Business Units 2,Finish';
      ConsolidatedCompany@1060 : Text[50];
      BusinessUnitCode@1037 : Code[20];
      BusinessUnitCode2@1066 : Code[20];
      BusinessUnitName@1039 : Text[30];
      BusinessUnitCompanyName@1040 : Text[30];
      BusinessUnitCurrencyCode@1041 : Code[10];
      BusinessUnitExchRtTable@1042 : 'Local,Business Unit';
      BusinessUnitStartingDate@1043 : Date;
      BusinessUnitEndingDate@1044 : Date;
      BusinessUnitExchRateGains@1049 : Code[20];
      BusinessUnitExchRateLosses@1050 : Code[20];
      BusinessUnitCompExchRateGains@1051 : Code[20];
      BusinessUnitCompExchRateLosses@1052 : Code[20];
      BusinessUnitEquityExchRateGains@1053 : Code[20];
      BusinessUnitEquityExchRateLosses@1054 : Code[20];
      BusinessUnitResidualAccount@1055 : Code[20];
      BusinessUnitMinorityExchRateGains@1056 : Code[20];
      BusinessUnitMinorityExchRateLosses@1057 : Code[20];
      TopBannerVisible@1003 : Boolean;
      FirstStepVisible@1004 : Boolean;
      CreationStepVisible@1005 : Boolean;
      FinalStepVisible@1006 : Boolean;
      ConsolidatedStepVisible@1038 : Boolean;
      SelectCompanyVisible@1033 : Boolean;
      BusinessUnitsVisible@1036 : Boolean;
      BusinessUnitsVisible2@1048 : Boolean;
      FinishActionEnabled@1007 : Boolean;
      BackActionEnabled@1008 : Boolean;
      NextActionEnabled@1009 : Boolean;
      SetupNotCompletedQst@1013 : TextConst 'ENU=The setup has not yet been completed.\\Are you sure that you want to exit?;NOR=Konfigurasjonen er ikke fullf›rt.\\Er du sikker p† at du vil avslutte?;SVE=Inst„llningen har inte slutf”rts „n.\\Vill du avsluta?';
      NewCompanyName@1010 : Text[30];
      NewCompanyData@1011 : 'Standard Data,None';
      CompanyAlreadyExistsErr@1014 : TextConst 'ENU=A company with that name already exists. Try a different name.;NOR=Det finnes allerede et selskap med det navnet. Pr›v et annet navn.;SVE=Ett f”retag med det namnet finns redan. Anv„nd ett annat namn.';
      SelectCompanyOption@1035 : 'Create a new company,Use an existing company';
      NewCompanyDataDescription@1012 : Text;
      SelectCompanyName@1021 : Text[30];
      SpecifyCompanyNameErr@1016 : TextConst 'ENU=To continue, you must specify a name for the company.;NOR=Hvis du vil fortsette, m† du angi et navn for selskapet.;SVE=Om du vill forts„tta m†ste du ange ett namn p† f”retaget.';
      NoDataTxt@1025 : TextConst 'ENU=\Want to set things up yourself?\\Create a company that does not contain data, and is not already set up for use. For example, select this option when you want to use your own data, and set things up yourself.;NOR=\Vil du konfigurere alt selv?\\Opprett et selskap som ikke inneholder data og ikke allerede er konfigurert for bruk. Velg for eksempel dette alternativet n†r du vil bruke dine egne data og konfigurere alt selv.;SVE=\Vill du konfigurera allt sj„lv?\\Skapa ett f”retag som inte inneh†ller n†gra data och som inte redan konfigurerats att anv„ndas. Detta alternativ v„ljer du exempelvis n„r du vill anv„nda dina egna data och konfigurera allt sj„lv.';
      TrialPeriodTxt@1026 : TextConst 'ENU=\\You will be able to use this company for a 30-day trial period.;NOR=\\Du kan bruke dette selskapet i en 30-dagers pr›veperiode.;SVE=\\Du kan anv„nda detta f”retag under en 30 dagar l†ng testperiod.';
      SetupBusUnitsVisible@1045 : Boolean;
      BackActionBusUnit2@1058 : Boolean;
      CreatingBusinessUnitsMsg@1059 : TextConst 'ENU=Creating Business Units...;NOR=Oppretter konserner...;SVE=Skapar aff„rsenheter...';
      RecordExistsErr@1061 : TextConst 'ENU=The record already exists.;NOR=Posten finnes allerede.;SVE=Posten finns redan.';
      MaxNumberOfSteps@1062 : Integer;
      StepCaptionTxt@1063 : TextConst '@@@="%1 =The current business unit''s position in the list of all available business units being processed. %2=The total number of all available business units being processed.";ENU=Business Unit %1 of %2;NOR=Konsern %1 av %2;SVE=Aff„rsenhet %1 av %2';
      StepIndex@1064 : Integer;
      EmptyCompanyNameErr@1067 : TextConst 'ENU=You must choose a company.;NOR=Du m† velge et selskap.;SVE=Du m†ste v„lja ett f”retags-ID.';
      Finished@1017 : Boolean;
      NewCompany@1019 : Boolean;
      CompanyConsolidationTxt@1020 : TextConst 'ENU=Company Consolidation;NOR=Selskapskonsolidering;SVE=F”retagskonsolidering';
      NoBusinessUnitsSelectedErr@1072 : TextConst 'ENU=No companies have been selected. You must select at least one to consolidate.;NOR=Ingen selskaper er valgt. Du m† velge minst ett for † konsolidere.;SVE=Inga f”retag har valts. Du m†ste v„lja minst ett f”r konsolidering.';
      SelectCompanyInstructions@1032 : Text;
      SelectCompanyUseExistingTxt@1034 : TextConst 'ENU=Select the company that will be used as the consolidated company.;NOR=Velg selskapet som skal brukes som konsolideringsselskapet.;SVE=V„lj det f”retag som ska anv„ndas som det konsoliderade f”retaget.';
      SelectCompanyCreateTxt@1068 : TextConst 'ENU=Select the Company information that will be used to create the consolidated company.;NOR=Velg selskapsinformasjonen som skal brukes til † opprette konsolideringsselskapet.;SVE=V„lj den f”retagsinformation som ska anv„ndas f”r att skapa det konsoliderade f”retaget.';
      ThatsItInstructions@1069 : Text;
      ThatsItUseExistingTxt@1070 : TextConst 'ENU=Choose Finish to create the business units. This can take a few minutes to complete.;NOR=Velg Fullf›r for † opprette konsernene. Dette kan ta et par minutter † fullf›re.;SVE=Skapa aff„rsenheten med Slutf”r. Det kan ta n†gra minuter.';
      ThatsItCreateTxt@1071 : TextConst 'ENU=Choose Finish to create the company. This can take a few minutes to complete.;NOR=Velg Fullf›r for † opprette selskapet. Dette kan ta et par minutter † fullf›re.;SVE=Skapa f”retaget med Slutf”r. Det kan ta n†gra minuter.';
      CreateNewCompanyTxt@1023 : TextConst 'ENU=Create New Company;NOR=Opprett nytt selskap;SVE=Skapa nytt f”retag';
      SetupBusinessUnitsLbl@1027 : TextConst 'ENU=Specify settings for the business unit that will be set up in the consolidated company.;NOR=Angi innstillinger for konsernet som skal konfigureres i det konsoliderte selskapet.;SVE=Ange inst„llningar f”r aff„rsenheten som ska st„llas in i det konsoliderade f”retaget.';
      ConsolidatedAccountsCreated@1015 : Boolean;
      NoBusinessUnitCodeEnteredErr@1065 : TextConst 'ENU=Enter a Business Unit Code.;NOR=Angi en konsernkode.;SVE=Ange en aff„rsenhetskod.';
      NoPermissionsErr@1024 : TextConst 'ENU=You do not have permissions to create a new company. Contact your system administrator.;NOR=Du har ikke tillatelse til † opprette et nytt selskap. Kontakt systemansvarlig.;SVE=Du saknar beh”righet att skapa ett nytt f”retag. Kontakta systemadministrat”ren.';
      PermissionsErr@1031 : TextConst 'ENU=You do not have permissions to run this wizard.;NOR=Du har ikke tillatelser til † kj›re veiviseren.;SVE=Du har inte beh”righet att k”ra den h„r guiden.;ENG=You do not have permissions to run this wizard.';
      AfterCreateCompanyMsg@1073 : TextConst 'ENU=Here is a tip. After you finish this assisted setup guide you can test your settings before you actually transfer data. To run a test, sign in to the company you just created, go to the Business Units page, and then choose the Test Database action.;NOR=Her er et tips. N†r du er ferdig med denne assisterte oppsettsveiledningen, kan du teste innstillingene f›r du faktisk overf›rer data. Hvis du vil kj›re en test, logger du p† selskapet du nettopp opprettet, g†r til siden Konsern, og velger deretter handlingen Test database.;SVE=H„r „r ett tips. N„r du har g†tt igenom den h„r guiden f”r assisterad konfiguration kan du testa dina inst„llningar innan du b”rjar ”verf”ra data p† riktigt. Du k”r ett test genom att logga in p† f”retaget du just skapat, g† till sidan Aff„rsenheter och sedan v„lja †tg„rden Testa databas.';

    LOCAL PROCEDURE EnableControls@1();
    BEGIN
      ResetControls;

      CASE Step OF
        Step::Start:
          ShowStartStep;
        Step::Consolidated:
          ShowConsolidatedStep;
        Step::Select:
          ShowSelectStep;
        Step::Creation:
          ShowCreationStep;
        Step::"Business Units Setup":
          ShowBusinessUnitsSetup;
        Step::"Business Units":
          ShowBusinessUnits;
        Step::"Business Units 2":
          ShowBusinessUnits2;
        Step::Finish:
          ShowFinalStep;
      END;
    END;

    LOCAL PROCEDURE CreateAction@2();
    VAR
      CompanyDataType@1001 : 'Evaluation Data,Standard Data,None,Extended Data,Full No Data';
    BEGIN
      IF NewCompanyName <> '' THEN BEGIN
        AssistedCompanySetup.CreateNewCompany(NewCompanyName);
        CompanyDataType := NewCompanyData + 1;
        AssistedCompanySetup.SetUpNewCompany(NewCompanyName,CompanyDataType);
        ConsolidatedCompany := NewCompanyName;
      END;
      CreateBusinessUnits;

      IF SelectCompanyOption = SelectCompanyOption::"Use an existing company" THEN
        RunConsolidationTestDatabaseReport;
      Finished := TRUE;
    END;

    LOCAL PROCEDURE NextStep@3(Backwards@1000 : Boolean);
    VAR
      BusinessUnitSetup2@1001 : Record 1827;
      GeneralLedgerSetup@1002 : Record 98;
      Company@1003 : Record 2000000006;
      FakeCompanyName@1004 : Text[30];
      FakeCompanyCreated@1005 : Boolean;
      FakeCompanySet@1006 : Boolean;
    BEGIN
      IF (Step = Step::Creation) AND NOT Backwards THEN
        IF NewCompanyName = '' THEN
          ERROR(SpecifyCompanyNameErr);

      IF Step = Step::Creation THEN
        IF SelectCompanyOption = SelectCompanyOption::"Create a new company" THEN
          Step := Step - 1;

      IF Step = Step::Select THEN
        IF NOT Backwards THEN BEGIN
          IF (SelectCompanyName = '') AND (SelectCompanyOption = SelectCompanyOption::"Use an existing company") THEN
            ERROR(EmptyCompanyNameErr);
          Step := Step + 1
        END;

      IF (Step = Step::Consolidated) AND NOT Backwards THEN
        IF SelectCompanyOption = SelectCompanyOption::"Create a new company" THEN BEGIN
          FakeCompanyName := 'ConsolidatedCompany9999';

          IF NewCompanyName = '' THEN BEGIN
            FakeCompanySet := TRUE;
            NewCompanyName := FakeCompanyName;
          END;

          IF NOT Company.GET(NewCompanyName) THEN BEGIN
            FakeCompanyCreated := TRUE;
            Company.INIT;
            Company.Name := NewCompanyName;
            Company.INSERT;
          END;

          IF NOT GeneralLedgerSetup.CHANGECOMPANY(NewCompanyName) THEN BEGIN
            NewCompanyName := '';
            ERROR(NoPermissionsErr);
          END;
          IF NOT GeneralLedgerSetup.WRITEPERMISSION THEN BEGIN
            NewCompanyName := '';
            ERROR(NoPermissionsErr);
          END;

          IF FakeCompanyCreated THEN
            COMMIT;
          RemoveCompanyRecord(Company,FakeCompanyName,FakeCompanyCreated,FakeCompanySet);
          Step := Step + 1;
        END;

      IF Step = Step::"Business Units" THEN
        IF BusinessUnitCode = '' THEN
          ERROR(NoBusinessUnitCodeEnteredErr);

      IF Step = Step::"Business Units 2" THEN
        IF NOT Backwards THEN BEGIN
          BackActionBusUnit2 := FALSE;
          SaveBusinessUnitInformation;
          UpdateBusinessUnitSetupComplete(BusinessUnitCompanyName,TRUE);
          BusinessUnitSetup.SETRANGE(Completed,FALSE);
          IF BusinessUnitSetup.FINDFIRST THEN
            Step := Step - 2;
        END ELSE
          BackActionBusUnit2 := TRUE;

      IF Step = Step::"Business Units Setup" THEN BEGIN
        BusinessUnitSetup2.RESET;
        BusinessUnitSetup2.SETFILTER(Include,'=TRUE');
        IF BusinessUnitSetup2.COUNT = 0 THEN
          ERROR(NoBusinessUnitsSelectedErr);
      END;

      IF (Step = Step::"Business Units") AND Backwards THEN BEGIN
        StepIndex := StepIndex - 1;
        UpdateBusinessUnitSetupComplete(BusinessUnitCompanyName,FALSE);
      END;

      IF Backwards THEN
        Step := Step - 1
      ELSE
        Step := Step + 1;

      EnableControls;
    END;

    LOCAL PROCEDURE ShowStartStep@4();
    BEGIN
      FirstStepVisible := TRUE;

      BackActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowConsolidatedStep@16();
    BEGIN
      ConsolidatedStepVisible := TRUE;
      CurrPage.CAPTION := CompanyConsolidationTxt;
    END;

    LOCAL PROCEDURE ShowSelectStep@14();
    BEGIN
      SelectCompanyVisible := TRUE;
      CurrPage.CAPTION := CompanyConsolidationTxt;
    END;

    LOCAL PROCEDURE ShowCreationStep@5();
    BEGIN
      CreationStepVisible := TRUE;
      CurrPage.CAPTION := CreateNewCompanyTxt;
    END;

    LOCAL PROCEDURE ShowBusinessUnitsSetup@18();
    BEGIN
      IF NOT BusinessUnitSetup.FINDFIRST THEN
        BusinessUnitSetup.FillTable(SelectCompanyName);
      CurrPage.CAPTION := CompanyConsolidationTxt;
      SetupBusUnitsVisible := TRUE;

      BackActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowBusinessUnits@15();
    VAR
      Company@1000 : Record 2000000006;
      ConsolidationAccount@1001 : Record 1829;
    BEGIN
      IF NOT ConsolidatedAccountsCreated THEN BEGIN
        IF SelectCompanyOption = SelectCompanyOption::"Use an existing company" THEN
          ConsolidationAccount.PopulateConsolidationAccountsForExistingCompany(ConsolidatedCompany);
        IF SelectCompanyOption = SelectCompanyOption::"Create a new company" THEN
          IF NewCompanyData = NewCompanyData::"Standard Data" THEN
            ConsolidationAccount.PopulateAccounts;
        ConsolidatedAccountsCreated := TRUE
      END;

      BusinessUnitsVisible := TRUE;
      BackActionEnabled := FALSE;
      IF NOT BackActionBusUnit2 THEN BEGIN
        StepIndex := StepIndex + 1;
        ClearBusinessUnitInformation;
        BusinessUnitSetup.RESET;
        BusinessUnitSetup.SETFILTER(Include,'=TRUE');
        MaxNumberOfSteps := BusinessUnitSetup.COUNT;
        BusinessUnitSetup.SETFILTER(Completed,'=FALSE');
        CurrPage.CAPTION := STRSUBSTNO(StepCaptionTxt,StepIndex,MaxNumberOfSteps);
        IF BusinessUnitSetup.FINDFIRST THEN BEGIN
          BusinessUnitCompanyName := BusinessUnitSetup."Company Name";
          Company.GET(BusinessUnitCompanyName);
          BusinessUnitName := COPYSTR(Company."Display Name",1,30);
        END;
      END;
    END;

    LOCAL PROCEDURE ShowBusinessUnits2@23();
    BEGIN
      BusinessUnitsVisible2 := TRUE;
      BackActionEnabled := TRUE;
      BusinessUnitCode2 := BusinessUnitCode;
    END;

    LOCAL PROCEDURE ShowFinalStep@6();
    BEGIN
      FinalStepVisible := TRUE;
      NextActionEnabled := FALSE;
      FinishActionEnabled := TRUE;
      BackActionEnabled := FALSE;
      CurrPage.CAPTION := CompanyConsolidationTxt;
    END;

    LOCAL PROCEDURE ResetControls@7();
    BEGIN
      FinishActionEnabled := FALSE;
      BackActionEnabled := TRUE;
      NextActionEnabled := TRUE;

      FirstStepVisible := FALSE;
      SelectCompanyVisible := FALSE;
      CreationStepVisible := FALSE;
      SetupBusUnitsVisible := FALSE;
      BusinessUnitsVisible := FALSE;
      BusinessUnitsVisible2 := FALSE;
      FinalStepVisible := FALSE;
      ConsolidatedStepVisible := FALSE;
    END;

    LOCAL PROCEDURE LoadTopBanners@8();
    BEGIN
      IF MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType)) AND
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType))
      THEN
        IF MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") AND
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        THEN
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    LOCAL PROCEDURE SaveBusinessUnitInformation@20();
    BEGIN
      BusinessUnitInformation.RESET;
      BusinessUnitInformation.VALIDATE(Code,BusinessUnitCode);
      BusinessUnitInformation.VALIDATE(Name,BusinessUnitName);
      BusinessUnitInformation.VALIDATE("Company Name",BusinessUnitCompanyName);
      BusinessUnitInformation.VALIDATE("Currency Code",BusinessUnitCurrencyCode);
      BusinessUnitInformation.VALIDATE("Currency Exchange Rate Table",BusinessUnitExchRtTable);
      BusinessUnitInformation.VALIDATE("Starting Date",BusinessUnitStartingDate);
      BusinessUnitInformation.VALIDATE("Ending Date",BusinessUnitEndingDate);
      BusinessUnitInformation.VALIDATE("Exch. Rate Gains Acc.",BusinessUnitExchRateGains);
      BusinessUnitInformation.VALIDATE("Exch. Rate Losses Acc.",BusinessUnitExchRateLosses);
      BusinessUnitInformation.VALIDATE("Comp. Exch. Rate Gains Acc.",BusinessUnitCompExchRateGains);
      BusinessUnitInformation.VALIDATE("Comp. Exch. Rate Losses Acc.",BusinessUnitCompExchRateLosses);
      BusinessUnitInformation.VALIDATE("Equity Exch. Rate Gains Acc.",BusinessUnitEquityExchRateGains);
      BusinessUnitInformation.VALIDATE("Equity Exch. Rate Losses Acc.",BusinessUnitEquityExchRateLosses);
      BusinessUnitInformation.VALIDATE("Residual Account",BusinessUnitResidualAccount);
      BusinessUnitInformation.VALIDATE("Minority Exch. Rate Gains Acc.",BusinessUnitMinorityExchRateGains);
      BusinessUnitInformation.VALIDATE("Minority Exch. Rate Losses Acc",BusinessUnitMinorityExchRateLosses);
      BusinessUnitInformation.INSERT;
    END;

    LOCAL PROCEDURE ClearBusinessUnitInformation@22();
    BEGIN
      CLEAR(BusinessUnitCode);
      CLEAR(BusinessUnitName);
      CLEAR(BusinessUnitCompanyName);
      CLEAR(BusinessUnitCurrencyCode);
      CLEAR(BusinessUnitExchRtTable);
      CLEAR(BusinessUnitStartingDate);
      CLEAR(BusinessUnitEndingDate);
      CLEAR(BusinessUnitExchRateGains);
      CLEAR(BusinessUnitExchRateLosses);
      CLEAR(BusinessUnitCompExchRateGains);
      CLEAR(BusinessUnitCompExchRateLosses);
      CLEAR(BusinessUnitEquityExchRateGains);
      CLEAR(BusinessUnitEquityExchRateLosses);
      CLEAR(BusinessUnitResidualAccount);
      CLEAR(BusinessUnitMinorityExchRateGains);
      CLEAR(BusinessUnitMinorityExchRateLosses);
    END;

    LOCAL PROCEDURE UpdateBusinessUnitSetupComplete@21(CompanyName@1000 : Text[30];CompletedStatus@1001 : Boolean);
    BEGIN
      BusinessUnitSetup.GET(CompanyName);
      BusinessUnitSetup.Completed := CompletedStatus;
      BusinessUnitSetup.MODIFY;
    END;

    LOCAL PROCEDURE DeleteTempRecords@19();
    VAR
      ConsolidationAccount@1000 : Record 1829;
    BEGIN
      BusinessUnitSetup.RESET;
      BusinessUnitSetup.DELETEALL;
      BusinessUnitInformation.RESET;
      BusinessUnitInformation.DELETEALL;
      ConsolidationAccount.RESET;
      ConsolidationAccount.DELETEALL;
    END;

    LOCAL PROCEDURE CreateBusinessUnits@24();
    VAR
      BusinessUnit@1000 : Record 220;
      Window@1001 : Dialog;
    BEGIN
      Window.OPEN(CreatingBusinessUnitsMsg);

      BusinessUnit.CHANGECOMPANY(ConsolidatedCompany);
      WITH BusinessUnitInformation DO BEGIN
        RESET;
        IF FIND('-') THEN BEGIN
          REPEAT
            BusinessUnit.INIT;
            BusinessUnit.Code := Code;
            BusinessUnit.Name := Name;
            BusinessUnit."Company Name" := "Company Name";
            BusinessUnit."Currency Code" := "Currency Code";
            BusinessUnit."Currency Exchange Rate Table" := "Currency Exchange Rate Table";
            BusinessUnit."Starting Date" := "Starting Date";
            BusinessUnit."Ending Date" := "Ending Date";
            BusinessUnit."Exch. Rate Gains Acc." := "Exch. Rate Gains Acc.";
            BusinessUnit."Exch. Rate Losses Acc." := "Exch. Rate Losses Acc.";
            BusinessUnit."Comp. Exch. Rate Gains Acc." := "Comp. Exch. Rate Gains Acc.";
            BusinessUnit."Comp. Exch. Rate Losses Acc." := "Comp. Exch. Rate Losses Acc.";
            BusinessUnit."Equity Exch. Rate Gains Acc." := "Equity Exch. Rate Gains Acc.";
            BusinessUnit."Equity Exch. Rate Losses Acc." := "Equity Exch. Rate Losses Acc.";
            BusinessUnit."Residual Account" := "Residual Account";
            BusinessUnit."Minority Exch. Rate Gains Acc." := "Minority Exch. Rate Gains Acc.";
            BusinessUnit."Minority Exch. Rate Losses Acc" := "Minority Exch. Rate Losses Acc";

            BusinessUnit.INSERT;
          UNTIL NEXT = 0;
        END;
      END;

      COMMIT;

      Window.CLOSE;
    END;

    LOCAL PROCEDURE UpdateDataDescription@17();
    VAR
      TenantLicenseState@1000 : Record 2000000189;
    BEGIN
      CASE NewCompanyData OF
        NewCompanyData::"Standard Data":
          NewCompanyDataDescription := '';
        NewCompanyData::None:
          NewCompanyDataDescription := NoDataTxt;
      END;

      IF NOT TenantLicenseState.FINDLAST THEN
        EXIT;
      IF TenantLicenseState.State = TenantLicenseState.State::Paid THEN
        EXIT;

      CASE NewCompanyData OF
        NewCompanyData::"Standard Data",
        NewCompanyData::None:
          NewCompanyDataDescription += TrialPeriodTxt;
      END;
    END;

    LOCAL PROCEDURE RunConsolidationTestDatabaseReport@9();
    BEGIN
      ConsolidationTest.SetConsolidatedCompany(COPYSTR(ConsolidatedCompany,1,30));
      ConsolidationTest.RUN;
    END;

    [External]
    PROCEDURE RemoveCompanyRecord@10(VAR Company@1000 : Record 2000000006;FakeCompanyName@1003 : Text[30];FakeCompanyCreated@1002 : Boolean;FakeCompanySet@1001 : Boolean);
    BEGIN
      IF FakeCompanyCreated THEN BEGIN
        Company.SETRANGE(Name,FakeCompanyName);
        Company.DELETE;
      END;

      IF FakeCompanySet THEN
        NewCompanyName := '';
    END;

    BEGIN
    END.
  }
}

