OBJECT Codeunit 11125676 Export ZSX
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      XMLDOMManagement4PS@1100525000 : Codeunit 11020220;

    PROCEDURE ExportZSX@1100528700(Estimate@1100528700 : Record 11012151;FileName@1100528701 : Text[250]);
    VAR
      DOMDocument@1100528704 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XMLElement@1100528705 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
    BEGIN
      DOMDocument := DOMDocument.XmlDocument;

      AppendElement(DOMDocument, DOMDocument, 'raw.inschrijvingsstaat', '', XMLElement);

      FillHeader(Estimate, DOMDocument, XMLElement);
      FillPageHeader(Estimate, DOMDocument, XMLElement);
      FillBidForm(Estimate, DOMDocument, XMLElement);
      FillElement(Estimate, DOMDocument, XMLElement);
      FillFooter(Estimate, DOMDocument, XMLElement);

      XMLDOMManagement4PS.SaveXMLToClientFile(DOMDocument, FileName);
    END;

    LOCAL PROCEDURE FillHeader@1100528701(Estimate@1100528703 : Record 11012151;DOMDocument@1100528700 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";XMLParentNode@1100528702 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode");
    VAR
      XMLElement@1100528701 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      XMLElement2@1100528705 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      ConstructionSpecRAW@1100528704 : Record 11125666;
    BEGIN
      IF NOT ConstructionSpecRAW.GET(Estimate."Construction Spec. No.") THEN
        ConstructionSpecRAW.INIT;

      AppendElement(DOMDocument, XMLParentNode, 'raw.contractinfo.orig', '', XMLElement);
      AppendAttribute(DOMDocument, XMLElement, 'tabposities', '');
      AppendElement(DOMDocument, XMLElement, 'versie.jaarversie', ConstructionSpecRAW."RAW Version", XMLElement2);  //C060508
      AppendElement(DOMDocument, XMLElement, 'raw.xml.versie', '1.6 01/03/2015', XMLElement2);  //C060508
      AppendElement(DOMDocument, XMLElement, 'raw.bestek.nr', ConstructionSpecRAW."Specification ID", XMLElement2);  //C060508
      AppendElement(DOMDocument, XMLElement, 'raw.bestek.omschrijving', ConstructionSpecRAW.Description, XMLElement2);
      AppendElement(DOMDocument, XMLElement, 'raw.contr.aangemaakt',
        FORMAT(ConstructionSpecRAW."Creation Date", 0, '<Year4>-<Month,2>-<Day,2>'), XMLElement2);
      AppendElement(DOMDocument, XMLElement, 'raw.code.licentiehouder', ConstructionSpecRAW."RAW User No. (Creator)", XMLElement2);  //C060508
      AppendElement(DOMDocument, XMLElement, 'raw.reg.nr', '00000', XMLElement2);
      AppendElement(DOMDocument, XMLElement, 'raw.reg.datum',
        FORMAT(ConstructionSpecRAW."Creation Date", 0, '<Year4>-<Month,2>-<Day,2>'), XMLElement2);
      AppendElement(DOMDocument, XMLElement, 'raw.overeenkomst.nr', ConstructionSpecRAW."Registration No.", XMLElement2);  //C060508
    END;

    LOCAL PROCEDURE FillPageHeader@1100528704(Estimate@1100528704 : Record 11012151;DOMDocument@1100528700 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";XMLParentNode@1100528701 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode");
    VAR
      XMLElement@1100528702 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      ConstrSpecPageHdrRAW@1100528705 : Record 11125667;
      String@1100528706 : Text[1024];
    BEGIN
      ConstrSpecPageHdrRAW.SETRANGE("Specification No.", Estimate."Construction Spec. No.");
      ConstrSpecPageHdrRAW.SETRANGE(Section, ConstrSpecPageHdrRAW.Section::"Cover Page");
      IF ConstrSpecPageHdrRAW.FINDSET THEN
        REPEAT
          IF String = '' THEN
            String := ConstrSpecPageHdrRAW.Text
          ELSE
            String := STRSUBSTNO('%1 %2', String, ConstrSpecPageHdrRAW.Text);
        UNTIL ConstrSpecPageHdrRAW.NEXT = 0;

      AppendElement(DOMDocument, XMLParentNode, 'dlx.koptekst', String, XMLElement);
    END;

    LOCAL PROCEDURE FillBidForm@1100528705(Estimate@1100528704 : Record 11012151;DOMDocument@1100528700 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";XMLParentNode@1100528701 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode");
    VAR
      XMLElement@1100528702 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      XMLElement2@1100528705 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
    BEGIN
      AppendElement(DOMDocument, XMLParentNode, 'ins.stt.voorblad', '', XMLElement);
      AppendElement(DOMDocument, XMLElement, 'dlx.deel.naam', 'Inschrijvingsstaat', XMLElement2);
      AppendElement(DOMDocument, XMLElement, 'voorblad.inschrijvingsstaat', '', XMLElement2);

      //ConstrSpecBidFormRAW.SETRANGE("Specification No.", Estimate."Construction Spec. No.");
      //ConstrSpecBidFormRAW.SETRANGE(Type, ConstrSpecBidFormRAW.Type::"Bid Form Specification");
      //IF ConstrSpecBidFormRAW.FINDSET THEN
      //  REPEAT
      //    AppendElement(DOMDocument, XMLElement, 'alinea.inschrijvingsdocument', '', XMLElement2);
      //    AppendElement(DOMDocument, XMLElement2, 'hoofdcode.vastetekst', ConstrSpecBidFormRAW.Text, XMLElement2);
      //  UNTIL ConstrSpecBidFormRAW.NEXT = 0;
    END;

    LOCAL PROCEDURE FillElement@1100528706(Estimate@1100528704 : Record 11012151;DOMDocument@1100528700 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";XMLParentNode@1100528701 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode");
    VAR
      XMLElement@1100528702 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      XMLElement2@1100528705 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      XMLElement3@1100528706 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      EstimateElementRAW@1100528703 : Record 11125679;
      RecRef@1100528708 : RecordRef;
      FldRef@1100528709 : FieldRef;
    BEGIN
      AppendElement(DOMDocument, XMLParentNode, 'ins.stt.voorsubtot', '', XMLElement);

      EstimateElementRAW.SETRANGE("Estimate No.", Estimate."No.");
      EstimateElementRAW.SETFILTER("Tender Paragraph No.", '..%1', '899999');
      EstimateElementRAW.SETRANGE(Title, TRUE);
      EstimateElementRAW.SETFILTER(Type, '..%1', EstimateElementRAW.Type::"Commitment (Main Line)");
      IF EstimateElementRAW.FINDSET THEN
        REPEAT
          CASE EstimateElementRAW.Type OF
            EstimateElementRAW.Type::Chapter,
            EstimateElementRAW.Type::Paragraph,
            EstimateElementRAW.Type::Subparagraph,
            EstimateElementRAW.Type::Subsubparagraph:
              BEGIN
                AppendElement(DOMDocument, XMLElement, 'dl22.bpost.tussenhoofd', '', XMLElement2);
                AppendElement(DOMDocument, XMLElement2, 'dl22.bpost.tussenhoofdnr', EstimateElementRAW."Tender Paragraph No.", XMLElement3);
                AppendElement(DOMDocument, XMLElement2, 'romptekst', EstimateElementRAW.Text, XMLElement3);
              END;
            EstimateElementRAW.Type::"Commitment (Main Line)":
              BEGIN
                AppendElement(DOMDocument, XMLElement, 'ins.stt.bpost.6cijfer.0', '', XMLElement2);
                AppendElement(DOMDocument, XMLElement2, 'dl22.bpost.nr6.0', EstimateElementRAW."Tender Paragraph No.", XMLElement3);
                AppendElement(DOMDocument, XMLElement2, 'romptekst', EstimateElementRAW.Text, XMLElement3);

                AppendElement(DOMDocument, XMLElement2, 'dl22.eenheid.res.verpl',
                  EstimateElementRAW."External Unit of Measure Code", XMLElement3);
                AppendAttribute(DOMDocument, XMLElement3, 'eenheidwijzigbaar', 'nee');

                AppendElement(DOMDocument, XMLElement2, 'ins.stt.hoev.res.verpl',
                  FormatDecimal(EstimateElementRAW."Actual Quantity", 2) , XMLElement3);
                RecRef.GETTABLE(EstimateElementRAW);
                FldRef := RecRef.FIELD(EstimateElementRAW.FIELDNO("Quantity Type"));
                AppendAttribute(DOMDocument, XMLElement3, 'kenmerk',
                  SELECTSTR(EstimateElementRAW."Quantity Type" + 1, FldRef.OPTIONCAPTION));

                AppendElement(DOMDocument, XMLElement2, 'ins.stt.totaal.bedrag',
                  FormatDecimal(EstimateElementRAW."Actual Amount", 2), XMLElement3);
              END;
          END;
        UNTIL EstimateElementRAW.NEXT = 0;
    END;

    LOCAL PROCEDURE FillFooter@1100528707(Estimate@1100528703 : Record 11012151;DOMDocument@1100528700 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";XMLParentNode@1100528701 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode");
    VAR
      XMLElement@1100528710 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      XMLElement2@1100528709 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      XMLElement3@1100528708 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      EstimateElementRAW@1100528707 : Record 11125679;
      ElementNo@1100528706 : Integer;
      RecRef@1100528705 : RecordRef;
      FldRef@1100528704 : FieldRef;
    BEGIN
      AppendElement(DOMDocument, XMLParentNode, 'ins.stt.staart', '', XMLElement);

      EstimateElementRAW.SETRANGE("Estimate No.", Estimate."No.");
      EstimateElementRAW.SETFILTER("Tender Paragraph No.", '9..999999');
      EstimateElementRAW.SETRANGE(Title, TRUE);
      EstimateElementRAW.SETFILTER(Type, '..%1', EstimateElementRAW.Type::"Commitment (Main Line)");
      IF EstimateElementRAW.FINDSET THEN
        REPEAT
          EVALUATE(ElementNo, EstimateElementRAW."Tender Paragraph No.");
          CASE TRUE OF
            (EstimateElementRAW.Type = EstimateElementRAW.Type::Chapter):
              BEGIN
                AppendElement(DOMDocument, XMLElement, 'dl22.staart.1cijfer', '', XMLElement2);
                AppendElement(DOMDocument, XMLElement2, 'dl22.staart.nr1', EstimateElementRAW."Tender Paragraph No.", XMLElement3);
                AppendElement(DOMDocument, XMLElement2, 'romptekst', EstimateElementRAW.Text, XMLElement3);
              END;

            // One-time costs
            (EstimateElementRAW.Type = EstimateElementRAW.Type::Paragraph) AND (ElementNo = 91):
              BEGIN
                AppendElement(DOMDocument, XMLElement, 'dl22.staart.2cijfer.ek', '', XMLElement2);
                AppendElement(DOMDocument, XMLElement2, 'dl22.staart.nr2.ek', EstimateElementRAW."Tender Paragraph No.", XMLElement3);
                AppendElement(DOMDocument, XMLElement2, 'romptekst', EstimateElementRAW.Text, XMLElement3);
              END;
            (EstimateElementRAW.Type = EstimateElementRAW.Type::"Commitment (Main Line)") AND
            (ElementNo >= 910000) AND
            (ElementNo <= 919990):
              BEGIN
                AppendElement(DOMDocument, XMLElement, 'ins.stt.staart.6cijfer.0.ek', '', XMLElement2);
                AppendElement(DOMDocument, XMLElement2, 'dl22.staart.nr6.0.ek', EstimateElementRAW."Tender Paragraph No.", XMLElement3);
                AppendElement(DOMDocument, XMLElement2, 'romptekst', EstimateElementRAW.Text, XMLElement3);
                AppendElement(DOMDocument, XMLElement2, 'dl22.staart.eenheid',
                  EstimateElementRAW."External Unit of Measure Code", XMLElement3);

                AppendElement(DOMDocument, XMLElement2, 'ins.stt.hoev.res.verpl',
                  FormatDecimal(EstimateElementRAW."Actual Quantity", 2) , XMLElement3);
                RecRef.GETTABLE(EstimateElementRAW);
                FldRef := RecRef.FIELD(EstimateElementRAW.FIELDNO("Quantity Type"));
                AppendAttribute(DOMDocument, XMLElement3, 'kenmerk',
                  SELECTSTR(EstimateElementRAW."Quantity Type" + 1, FldRef.OPTIONCAPTION));

                AppendElement(DOMDocument, XMLElement2, 'ins.stt.totaal.bedrag',
                  FormatDecimal(EstimateElementRAW."Actual Amount", 2), XMLElement3);
               END;

            // Summary amount (Execution costs/general costs/Profit and risk)
            (EstimateElementRAW.Type = EstimateElementRAW.Type::"Commitment (Main Line)") AND
            (ElementNo >= 920000) AND
            (ElementNo <= 949990):
              BEGIN
                AppendElement(DOMDocument, XMLElement, 'ins.stt.staart.6cijfer.0', '', XMLElement2);
                AppendElement(DOMDocument, XMLElement2, 'dl22.staart.nr6', EstimateElementRAW."Tender Paragraph No.", XMLElement3);
                AppendElement(DOMDocument, XMLElement2, 'romptekst', EstimateElementRAW.Text, XMLElement3);
                AppendElement(DOMDocument, XMLElement2, 'dl22.staart.eenheid',
                  EstimateElementRAW."External Unit of Measure Code", XMLElement3);

                AppendElement(DOMDocument, XMLElement2, 'ins.stt.hoev.res.verpl',
                  FormatDecimal(EstimateElementRAW."Actual Quantity", 2) , XMLElement3);
                RecRef.GETTABLE(EstimateElementRAW);
                FldRef := RecRef.FIELD(EstimateElementRAW.FIELDNO("Quantity Type"));
                AppendAttribute(DOMDocument, XMLElement3, 'kenmerk',
                  SELECTSTR(EstimateElementRAW."Quantity Type" + 1, FldRef.OPTIONCAPTION));

                AppendElement(DOMDocument, XMLElement2, 'ins.stt.totaal.bedrag',
                  FormatDecimal(EstimateElementRAW."Actual Amount", 2), XMLElement3);
              END;

            (EstimateElementRAW.Type = EstimateElementRAW.Type::Paragraph) AND (ElementNo = 95):
              BEGIN
                AppendElement(DOMDocument, XMLElement, 'dl22.staart.2cijfer.stelpost', '', XMLElement2);
                AppendElement(DOMDocument, XMLElement2, 'dl22.staart.nr2.stelpost', EstimateElementRAW."Tender Paragraph No.", XMLElement3);
                AppendElement(DOMDocument, XMLElement2, 'romptekst', EstimateElementRAW.Text, XMLElement3);
              END;
            (EstimateElementRAW.Type = EstimateElementRAW.Type::"Commitment (Main Line)") AND
            (ElementNo >= 950000) AND
            (ElementNo <= 959990):
              BEGIN
                AppendElement(DOMDocument, XMLElement, 'ins.stt.staart.6cijfer.0.stelpost', '', XMLElement2);
                AppendElement(DOMDocument, XMLElement2, 'dl22.staart.nr6.0.stelpost', EstimateElementRAW."Tender Paragraph No.", XMLElement3);
                AppendElement(DOMDocument, XMLElement2, 'romptekst', EstimateElementRAW.Text, XMLElement3);
                AppendElement(DOMDocument, XMLElement2, 'dl22.staart.eenheid',
                  EstimateElementRAW."External Unit of Measure Code", XMLElement3);

                AppendElement(DOMDocument, XMLElement2, 'ins.stt.hoev.res.verpl',
                  FormatDecimal(EstimateElementRAW."Actual Quantity", 2) , XMLElement3);
                RecRef.GETTABLE(EstimateElementRAW);
                FldRef := RecRef.FIELD(EstimateElementRAW.FIELDNO("Quantity Type"));
                AppendAttribute(DOMDocument, XMLElement3, 'kenmerk',
                  SELECTSTR(EstimateElementRAW."Quantity Type" + 1, FldRef.OPTIONCAPTION));

                AppendElement(DOMDocument, XMLElement2, 'ins.stt.totaal.bedrag',
                  FormatDecimal(EstimateElementRAW."Actual Amount", 2), XMLElement3);
              END;

            // Contributions
            (EstimateElementRAW.Type = EstimateElementRAW.Type::Paragraph) AND (ElementNo = 96):
              BEGIN
                AppendElement(DOMDocument, XMLElement, 'dl22.staart.2cijfer.bijdrage', '', XMLElement2);
                AppendElement(DOMDocument, XMLElement2, 'dl22.staart.nr2.bijdrage', EstimateElementRAW."Tender Paragraph No.", XMLElement3);
                AppendElement(DOMDocument, XMLElement2, 'romptekst', EstimateElementRAW.Text, XMLElement3);
              END;
            (EstimateElementRAW.Type = EstimateElementRAW.Type::"Commitment (Main Line)") AND
            (ElementNo >= 960000) AND
            (ElementNo <= 969990):
              BEGIN
                AppendElement(DOMDocument, XMLElement, 'ins.stt.staart.6cijfer.0.bijdrage', '', XMLElement2);
                AppendElement(DOMDocument, XMLElement2, 'dl22.staart.nr6.0.bijdrage', EstimateElementRAW."Tender Paragraph No.", XMLElement3);
                AppendElement(DOMDocument, XMLElement2, 'romptekst', EstimateElementRAW.Text, XMLElement3);
                AppendElement(DOMDocument, XMLElement2, 'dl22.staart.bijdrage.percentage', FormatDecimal(0, 2) , XMLElement3);
                AppendElement(DOMDocument, XMLElement2, 'dl22.staart.eenheid',
                  EstimateElementRAW."External Unit of Measure Code", XMLElement3);

                AppendElement(DOMDocument, XMLElement2, 'ins.stt.hoev.res.verpl',
                  FormatDecimal(EstimateElementRAW."Actual Quantity", 2) , XMLElement3);
                RecRef.GETTABLE(EstimateElementRAW);
                FldRef := RecRef.FIELD(EstimateElementRAW.FIELDNO("Quantity Type"));
                AppendAttribute(DOMDocument, XMLElement3, 'kenmerk',
                  SELECTSTR(EstimateElementRAW."Quantity Type" + 1, FldRef.OPTIONCAPTION));

                AppendElement(DOMDocument, XMLElement2, 'ins.stt.totaal.bedrag',
                  FormatDecimal(EstimateElementRAW."Actual Amount", 2), XMLElement3);
              END;
          END;
        UNTIL EstimateElementRAW.NEXT = 0;
    END;

    LOCAL PROCEDURE AppendElement@1100525025(DOMDocument@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";XMLParentNode@1100525001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";Name@1100525002 : Text[80];Value@1100525003 : Text[1024];VAR XMLElement@1100525004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement");
    VAR
      XMLTextNode@1100525005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlText";
    BEGIN
      XMLElement := DOMDocument.CreateElement(Name);
      XMLParentNode.AppendChild(XMLElement);

      IF Value <> '' THEN BEGIN
        XMLTextNode := DOMDocument.CreateTextNode(Value);
        XMLElement.AppendChild(XMLTextNode);
      END;
    END;

    LOCAL PROCEDURE AppendAttribute@1100528709(DOMDocument@1100528704 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";XMLElement@1100528700 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";Name@1100528702 : Text[80];Value@1100528701 : Text[1024]);
    VAR
      XMLAttribute@1100528706 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlAttribute";
    BEGIN
      XMLAttribute := DOMDocument.CreateAttribute(Name);
      XMLAttribute.Value := Value;
      XMLElement.SetAttributeNode(XMLAttribute);
    END;

    PROCEDURE FormatDecimal@1100528713(Dec@1100528700 : Decimal;DecimalPlaces@1100528701 : Integer) Result : Text[30];
    BEGIN
      Result := FORMAT(Dec, 0, STRSUBSTNO('<Precision,%1:%1><Standard format,2>', DecimalPlaces));
    END;

    BEGIN
    END.
  }
}

