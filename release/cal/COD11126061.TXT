OBJECT Codeunit 11126061 Serv.Port. Call Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1100525000 : TextConst 'DEU=Kommunikation hinzugefÅgt auf SPT;ENU=Communication added on SPT;NLD=Communicatie toegevoegd op het SPT';

    [External]
    PROCEDURE NewCallAlreadyExists@1100528100(ReceivingDate@1100528100 : Date;ReceivingTime@1100528101 : Time;ServiceLocationNo@1100528102 : Code[20];Discipline@1100528103 : Code[10];TradeSpeciality@1100528104 : Code[10];Installation@1100528105 : Code[20];InstallationPart@1100528106 : Code[20];ObjectNo@1100528107 : Code[20];ObjectCustomer@1100528108 : Code[20];CustomerNo@1100528114 : Code[20];OrderNoCustomer@1100528109 : Text[50];YourReference@1100528110 : Text[50];VAR DoubleCallNo@1100528115 : Code[20];VAR DoubleCalDescription@1100528111 : Text[50]) : Integer;
    VAR
      ServiceSetup@1100528113 : Record 11012800;
      ServiceCall@1100528112 : Record 11012822;
    BEGIN
      ServiceSetup.GET;
      IF ServiceSetup."Time Frame Double Call Check" = 0 THEN EXIT(0);  //db, 15-05-14: C007073

      ServiceCall.SETCURRENTKEY("Receiving Date","Receiving Time");
      ServiceCall.SETRANGE("Receiving Date", ReceivingDate);
      ServiceCall.SETRANGE("Receiving Time", GetLowerTimeBoundryTimeFrame(ReceivingTime, ServiceSetup),
                                             GetUpperTimeBoundryTimeFrame(ReceivingTime, ServiceSetup));
      ServiceCall.SETRANGE("Service Location No.", ServiceLocationNo);

      IF Discipline <> '' THEN BEGIN  //db, 15-05-14: C007073
        ServiceCall.SETRANGE(Discipline, Discipline);
        ServiceCall.SETRANGE("Trade Speciality", TradeSpeciality);
        IF ServiceCall.FINDFIRST THEN BEGIN
          GetDoubleCallProperties(ServiceCall, DoubleCallNo, DoubleCalDescription);
          EXIT(DOUBLECALL_DISCIPLINE_TRADESPE);
        END;
        ServiceCall.SETRANGE(Discipline);
        ServiceCall.SETRANGE("Trade Speciality");
      END;

      IF ObjectNo <> '' THEN BEGIN  //db, 15-05-14: C007073
        ServiceCall.SETRANGE("Object No.", ObjectNo);
        IF ServiceCall.FINDFIRST THEN BEGIN
          GetDoubleCallProperties(ServiceCall, DoubleCallNo, DoubleCalDescription);
          EXIT(DOUBLECALL_OBJECTNO);
        END;
        ServiceCall.SETRANGE("Object No.");
      END;

      IF ObjectCustomer <> '' THEN BEGIN  //db, 15-05-14: C007073
        ServiceCall.SETRANGE("Object Customer", ObjectCustomer);
        IF ServiceCall.FINDFIRST THEN BEGIN
          GetDoubleCallProperties(ServiceCall, DoubleCallNo, DoubleCalDescription);
          EXIT(DOUBLECALL_OBJECTNOCUST);
        END;
        ServiceCall.SETRANGE("Object Customer");
      END;

      //ServiceCall.SETRANGE("Receiving Date");  //db, 15-05-14: C007073
      //ServiceCall.SETRANGE("Receiving Time");  //db, 15-05-14: C007073
      ServiceCall.SETRANGE("Service Location No.");
      ServiceCall.SETRANGE("Customer No.", CustomerNo);

      IF OrderNoCustomer <> '' THEN BEGIN  //db, 15-05-14: C007073
        ServiceCall.SETRANGE("Order No. Customer", OrderNoCustomer);
        IF ServiceCall.FINDFIRST THEN BEGIN
          GetDoubleCallProperties(ServiceCall, DoubleCallNo, DoubleCalDescription);
          EXIT(DOUBLECALL_ORDNOCUST);
        END;
        ServiceCall.SETRANGE("Order No. Customer");
      END;

      IF YourReference <> '' THEN BEGIN  //db, 15-05-14: C007073
        ServiceCall.SETRANGE("Your Reference", YourReference);
        IF ServiceCall.FINDFIRST THEN BEGIN
          GetDoubleCallProperties(ServiceCall, DoubleCallNo, DoubleCalDescription);
          EXIT(DOUBLECALL_YOURREFERENCE);
        END;
        ServiceCall.SETRANGE("Your Reference");
      END;

      EXIT(0);
    END;

    LOCAL PROCEDURE GetLowerTimeBoundryTimeFrame@1100528108(ReceivingTime@1100528100 : Time;ServiceSetup@1100528102 : Record 11012800) : Time;
    VAR
      LowerTime@1100528103 : Time;
    BEGIN
      LowerTime := ReceivingTime - ServiceSetup."Time Frame Double Call Check" * 60000;
      IF (LowerTime > ReceivingTime) THEN
        //on day break
        LowerTime := 000000T;
      EXIT(LowerTime);
    END;

    LOCAL PROCEDURE GetUpperTimeBoundryTimeFrame@1100528107(ReceivingTime@1100528100 : Time;ServiceSetup@1100528102 : Record 11012800) : Time;
    VAR
      UpperTime@1100528101 : Time;
    BEGIN
      UpperTime := ReceivingTime + ServiceSetup."Time Frame Double Call Check" * 60000;
      IF (UpperTime < ReceivingTime) THEN
        //on day break
        UpperTime := 235959T;
      EXIT(UpperTime);
    END;

    LOCAL PROCEDURE GetDoubleCallProperties@1100528106(ServiceCall@1100528100 : Record 11012822;VAR DoubleCallNo@1100528102 : Code[20];VAR DoubleCalDescription@1100528101 : Text[50]);
    BEGIN
      DoubleCallNo := ServiceCall."No.";
      DoubleCalDescription := ServiceCall.Description;
    END;

    [External]
    PROCEDURE DOUBLECALL_DISCIPLINE_TRADESPE@1100528109() : Integer;
    BEGIN
      EXIT(1);
    END;

    [External]
    PROCEDURE DOUBLECALL_INSTALL_INSTALLPART@1100528105() : Integer;
    BEGIN
      EXIT(2);
    END;

    [External]
    PROCEDURE DOUBLECALL_OBJECTNO@1100528103() : Integer;
    BEGIN
      EXIT(3);
    END;

    [External]
    PROCEDURE DOUBLECALL_OBJECTNOCUST@1100528102() : Integer;
    BEGIN
      EXIT(4);
    END;

    [External]
    PROCEDURE DOUBLECALL_ORDNOCUST@1100528104() : Integer;
    BEGIN
      EXIT(5);
    END;

    [External]
    PROCEDURE DOUBLECALL_YOURREFERENCE@1100528101() : Integer;
    BEGIN
      EXIT(6);
    END;

    [External]
    PROCEDURE DefaultCustomerProblem@1100409000(CustomerNo@1100409000 : Code[20];ProblemCode@1100409001 : Code[10];CustomerProblemCode@1100409002 : Code[10]) : Code[10];
    VAR
      CustomerServiceAnalysis@1100409004 : Record 11071728;
    BEGIN
      IF (CustomerNo <> '') AND (ProblemCode <> '') THEN BEGIN
        CustomerServiceAnalysis.SETRANGE("Analysis Type", CustomerServiceAnalysis."Analysis Type"::Problem);
        CustomerServiceAnalysis.SETRANGE("Customer No.", CustomerNo);
        CustomerServiceAnalysis.SETRANGE("Standard Analysis Code", ProblemCode);
        IF CustomerServiceAnalysis.COUNT = 1 THEN BEGIN
          CustomerServiceAnalysis.FINDFIRST;
          EXIT(CustomerServiceAnalysis.Code);
        END;
      END;
      IF (CustomerNo <> '') AND (CustomerProblemCode <> '') THEN BEGIN
        IF CustomerServiceAnalysis.GET(CustomerServiceAnalysis."Analysis Type"::Problem, CustomerNo, CustomerProblemCode ) THEN
          EXIT(CustomerServiceAnalysis.Code);
      END;
      EXIT('');
    END;

    [External]
    PROCEDURE AddCommunicationTextLines@1100525000(CallNo@1100525000 : Code[20];FieldNo@1100525003 : Integer;CommunicationTextWS@1100528001 : XMLport 11012807) : Text;
    VAR
      ServiceCall@1100525001 : Record 11012822;
      ServiceOrder@1100525008 : Record 11012823;
      UserSetup@1100525007 : Record 91;
      RecRef@1100525002 : RecordRef;
      RecordLinkManagement@1100525004 : Codeunit 447;
      TextString@1100525005 : Text;
      ServiceCallCard@1100525006 : Page 11125208;
      ServiceOrderGeneralCard@1100525009 : Page 11125209;
    BEGIN
      ServiceCall.GET(CallNo);
      RecRef.GETTABLE(ServiceCall);

      CommunicationTextWS.SetTableNo(DATABASE::"Service Call");
      CommunicationTextWS.SetFieldNo(FieldNo);
      CommunicationTextWS.SetRecId(RecRef.RECORDID);
      CommunicationTextWS.IMPORT;

      TextString := STRSUBSTNO(Text001);
      IF (ServiceCall."Service Order No." <> '') THEN BEGIN
        ServiceOrder.GET(ServiceCall."Service Order No.");
        RecRef.GETTABLE(ServiceOrder);
        IF (ServiceOrder."Assigned to" <> '') THEN BEGIN
          UserSetup.SETRANGE("Employee No.", ServiceOrder."Assigned to");
          IF (UserSetup.FINDFIRST) THEN
            RecordLinkManagement.CreateNote(RecRef, ServiceOrderGeneralCard.OBJECTID(FALSE), TextString, UserSetup."User ID");
        END;
      END ELSE IF (ServiceCall."Assigned to" <> '') THEN BEGIN
        UserSetup.SETRANGE("Employee No.", ServiceCall."Assigned to");
        IF (UserSetup.FINDFIRST) THEN
          RecordLinkManagement.CreateNote(RecRef, ServiceCallCard.OBJECTID(FALSE), TextString, UserSetup."User ID");
      END;

      EXIT('ok');
    END;

    [External]
    PROCEDURE SetUpdateFlagServiceCall@1100525001(CallNo@1100525000 : Code[20];Flag@1100525001 : Boolean) : Text;
    VAR
      ServiceCall@1100525002 : Record 11012822;
    BEGIN
      IF (ServiceCall.GET(CallNo)) THEN BEGIN
        ServiceCall."Communication Text Changed" := Flag;
        IF ServiceCall.MODIFY THEN;
      END;
      EXIT('ok');
    END;

    BEGIN
    END.
  }
}

