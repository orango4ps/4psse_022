OBJECT Report 11125724 Copy Requested Act. Cap.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Angefragte Akt.-Kapazit„t kopieren;
               ENU=Copy Requested Act. Cap.;
               NLD=Gevraagde act. capaciteit kopi‰ren;
               NOR=Kopier anmodet faktisk kapasitet;
               SVE=Kopiera beg„rd †tg. Kap.];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   EVALUATE(TimePeriodBetwStartDatesLines, '0D');
                 END;

  }
  DATASET
  {
    { 6269;    ;DataItem;                    ;
               DataItemTable=Table11125708;
               DataItemTableView=SORTING(Project No.,Activity Code,Line No.);
               OnAfterGetRecord=VAR
                                  PreviousStartingDate@1100528400 : Date;
                                  StartingDate@1100528401 : Date;
                                  DiffBetweenStartingDates@1100528402 : Integer;
                                  I@1100528403 : Integer;
                                BEGIN
                                  PreviousStartingDate := "Requested Activity Capacity"."Starting Date";
                                  DiffBetweenStartingDates := CalculateDiffBetweenStartDates("Requested Activity Capacity");
                                  FOR I := 1 TO NoOfTimes DO BEGIN
                                    StartingDate := CalculateStartingDate(PreviousStartingDate, DiffBetweenStartingDates);
                                    CopyReqActCapacity("Requested Activity Capacity", StartingDate);
                                    PreviousStartingDate := StartingDate;
                                  END;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=[DEU=Frequenz;
                             ENU=No. of Times;
                             NLD=Aantal keren;
                             NOR=Antall ganger;
                             SVE=Antal g†nger];
                  SourceExpr=NoOfTimes }

      { 1100525003;2;Field  ;
                  CaptionML=[DEU=Zeitperiode zwischen Startdaten Zeilen;
                             ENU=Time Period between Starting Dates of Lines;
                             NLD=Tijdsperiode tussen startdata regels;
                             NOR=Tidsperiode mellom startdato for rader;
                             SVE=Tidsperiod mellan startdatum f”r rader];
                  SourceExpr=TimePeriodBetwStartDatesLines }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      TimePeriodBetwStartDatesLines@1100528400 : DateFormula;
      NoOfTimes@1100528401 : Integer;
      Text000@1100528402 : TextConst 'DEU=%1 der kopierten %2-Zeile muss nach %1 der originalen %2-Zeile sein.;ENU=%1 of copied %2 lines should be after %1 of original %2 line.;NLD=%1 van gekopieerde %2 regel moet na %1 van originele %2 regel zijn.;NOR=%1 av kopierte %2-rader skal komme etter %1 av original %2-rad.;SVE=%1 av kopierade %2-rader ska komma efter %1 av ursprunglig %2-rad.';
      Text001@1100528403 : TextConst 'DEU=Zeitperiode zwischen 2 aufeinanderfolgenden kopierten %1 Zeilen muss gleich sein.;ENU=Time period between 2 succesive copied %1 lines should be the same.;NLD=Tijdsperiode tussen 2 opeenvolgende gekopieerde %1 regels moet hetzelfde zijn.;NOR=Tidsperioden mellom 2 p†f›lgende kopierte %1-rader m† v‘re lik.;SVE=Tidsperioden mellan tv† efter varandra f”ljande kopierade %1 rader b”r vara densamma.';

    LOCAL PROCEDURE CopyReqActCapacity@1100528404(OrigRequestedActivityCapacity@1100528400 : Record 11125708;StartingDate@1100528401 : Date);
    VAR
      RequestedActivityCapacity@1100528402 : Record 11125708;
      ReqActCapMgt@1100528403 : Codeunit 11125707;
    BEGIN
      RequestedActivityCapacity.COPY(OrigRequestedActivityCapacity);
      RequestedActivityCapacity."Starting Date" := StartingDate;
      RequestedActivityCapacity."Ending Date" :=
        ReqActCapMgt.CalculateEndingDate(RequestedActivityCapacity);
      RequestedActivityCapacity."Line No." :=
        GetFirstFreeLineNo(
          RequestedActivityCapacity."Project No.",
          RequestedActivityCapacity."Activity Code");
      RequestedActivityCapacity.INSERT(TRUE);
    END;

    LOCAL PROCEDURE CalculateStartingDate@1100528405(PreviousStartingDate@1100528400 : Date;DiffBetweenStartingDates@1100528401 : Integer) StartingDate : Date;
    VAR
      RequestedActivityCapacity@1100528402 : Record 11125708;
    BEGIN
      StartingDate := CALCDATE(TimePeriodBetwStartDatesLines, PreviousStartingDate);
      IF StartingDate - PreviousStartingDate <> DiffBetweenStartingDates THEN
        ERROR(Text001, RequestedActivityCapacity.TABLECAPTION);
    END;

    LOCAL PROCEDURE CalculateDiffBetweenStartDates@1100528406(RequestedActivityCapacity@1100528400 : Record 11125708) DiffBetweenStartingDates : Integer;
    BEGIN
      DiffBetweenStartingDates :=
        CALCDATE(TimePeriodBetwStartDatesLines, RequestedActivityCapacity."Starting Date") -
        RequestedActivityCapacity."Starting Date";
      IF DiffBetweenStartingDates <= 0 THEN
        ERROR(
          Text000,
          RequestedActivityCapacity.FIELDCAPTION("Starting Date"),
          RequestedActivityCapacity.TABLECAPTION);
    END;

    LOCAL PROCEDURE GetFirstFreeLineNo@1100528411(ProjectNo@1100528400 : Code[20];ActivityCode@1100528401 : Code[10]) LineNo : Integer;
    VAR
      RequestedActivityCapacity@1100528402 : Record 11125708;
    BEGIN
      RequestedActivityCapacity.SETRANGE("Project No.", ProjectNo);
      RequestedActivityCapacity.SETRANGE("Activity Code", ActivityCode);
      IF RequestedActivityCapacity.FINDLAST THEN
        LineNo := ROUND(RequestedActivityCapacity."Line No.", 10000, '<') + 10000
      ELSE
        LineNo := 10000;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

