OBJECT Report 11126180 Import Ref. Payment
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVFI10.00 (32000000);
  }
  PROPERTIES
  {
    CaptionML=ENU=Import Ref. Payment;
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 9952;    ;DataItem;BankPayments        ;
               DataItemTable=Table11126181;
               DataItemTableView=SORTING(No.)
                                 ORDER(Ascending);
               OnPreDataItem=VAR
                               FileMgt@1000 : Codeunit 419;
                               Year@1001 : Integer;
                               Month@1002 : Integer;
                               Day@1003 : Integer;
                             BEGIN
                               IF FINDSET THEN
                                 REPEAT
                                   RefPmtImportTemp := BankPayments;
                                   RefPmtImportTemp.INSERT;
                                 UNTIL NEXT = 0;
                               MatchPayments.GetRefPmtImportTemp(RefPmtImportTemp);
                               IF BankAccCode = '' THEN
                                 ERROR(Text1090000);
                               BankFile.TEXTMODE(TRUE);
                               FileSetup.SETFILTER("No.",BankAccCode);
                               IF NOT FileSetup.FINDFIRST THEN
                                 ERROR(Text1090002,BankAccCode);
                               IF FileMgt.CanRunDotNetOnClient THEN BEGIN
                                 FileSetup.TESTFIELD("Import Reference Payments");
                                 FileName := FileMgt.UploadFileSilent(FileSetup."Import Reference Payments");
                               END ELSE BEGIN
                                 FileName := FileMgt.ServerTempFileName('');
                                 UPLOAD('','','','',FileName);
                               END;
                               BankFile.OPEN(FileName);

                               IF RefPmtImport.FINDLAST THEN BEGIN
                                 LineNo := RefPmtImport."No." + 1;
                                 BatchNo := RefPmtImport."Batch No." + 1;
                               END;

                               Counter := 0;
                               LineCounter := ROUND(BankFile.LEN,1);
                               LineCounter := ROUND(BankFile.LEN / 92,1);
                               IF LineCounter < 1 THEN
                                 EXIT;

                               REPEAT
                                 BankFile.READ(Line);
                                 LineCode := COPYSTR(Line,1,1);

                                 IF LineCode = '0' THEN
                                   BEGIN
                                   CheckAccount := TRUE;
                                   INIT;
                                   "No." := LineNo;
                                   "Record ID" := 0;
                                   "Filing Code" := '';
                                   "Reference No." := '';
                                   "Bank Code" := COPYSTR(Line,12,2);
                                   "Agent Code" := COPYSTR(Line,14,9);
                                   "Currency Code" := COPYSTR(Line,23,1);
                                   "Account Owner Code" := COPYSTR(Line,24,9);
                                   "Bank Account Code" := '';
                                   "Batch No." := BatchNo;
                                   INSERT;
                                   LineNo := LineNo + 1;
                                 END
                                 ELSE
                                   IF (LineCode = '3') OR (LineCode = '5') THEN
                                     BEGIN
                                     LineAccountNo := COPYSTR(Line,2,14);
                                     IF CheckAccount THEN
                                       BankAccCode := SelectBankAccount(LineAccountNo);

                                     LineReference := COPYSTR(Line,44,20);
                                     ClearReferenceZeros(LineReference);

                                     EVALUATE(Day,COPYSTR(Line,20,2));
                                     EVALUATE(Month,COPYSTR(Line,18,2));
                                     EVALUATE(Year,COPYSTR(Line,16,2));
                                     LinePostingDate := DMY2DATE(Day,Month,2000 + Year);

                                     EVALUATE(Day,COPYSTR(Line,26,2));
                                     EVALUATE(Month,COPYSTR(Line,24,2));
                                     EVALUATE(Year,COPYSTR(Line,22,2));
                                     LinePaymentDate := DMY2DATE(Day,Month,2000 + Year);

                                     EVALUATE(LineAmount,COPYSTR(Line,78,10));

                                     "No." := LineNo;
                                     INIT;
                                     CASE LineCode OF
                                       '3':
                                         "Record ID" := 3;
                                       '5':
                                         "Record ID" := 5;
                                     END;
                                     "Account No." := LineAccountNo;
                                     "Banks Posting Date" := LinePostingDate;
                                     "Banks Payment Date" := LinePaymentDate;
                                     "Filing Code" := COPYSTR(Line,28,16);
                                     "Reference No." := LineReference;
                                     "Payers Name" := COPYSTR(Line,64,12);
                                     "Currency Code 2" := COPYSTR(Line,76,1);
                                     "Name Source" := COPYSTR(Line,77,1);
                                     "Correction Code" := COPYSTR(Line,88,1);
                                     "Delivery Method" := COPYSTR(Line,89,1);
                                     "Feedback Code" := COPYSTR(Line,90,1);
                                     Amount := LineAmount / 100;
                                     "Bank Account Code" := BankAccCode;
                                     "Batch No." := BatchNo;
                                     INSERT;
                                     LineNo := LineNo + 1;
                                   END
                                   ELSE
                                     IF LineCode = '9' THEN
                                       BEGIN
                                       EVALUATE(LineAmountAll,COPYSTR(Line,8,11));
                                       EVALUATE(LineAmountCor,COPYSTR(Line,25,11));
                                       EVALUATE(LineAmountFaild,COPYSTR(Line,42,11));

                                       INIT;
                                       "No." := LineNo;
                                       "Record ID" := 9;
                                       "Filing Code" := '';
                                       "Reference No." := '';
                                       "Bank Account Code" := '';
                                       "Transaction Qty." := COPYSTR(Line,2,6);
                                       "Corrections Qty." := COPYSTR(Line,19,6);
                                       "Failed Direct Debiting Qty." := COPYSTR(Line,36,6);
                                       "Payments Qty." := LineAmountAll / 100;
                                       "Corrections Amount" := LineAmountCor / 100;
                                       "Failed Direct Debiting Amount" := LineAmountFaild / 100;
                                       "Batch No." := BatchNo;
                                       INSERT;
                                       LineNo := LineNo + 1;
                                       BatchNo := BatchNo + 1;
                                     END;
                                 Counter := Counter + 1;
                               UNTIL Counter >= LineCounter;
                             END;

               OnPostDataItem=VAR
                                FileMgt@1001 : Codeunit 419;
                              BEGIN
                                BankFile.CLOSE;
                                IF FileMgt.CanRunDotNetOnClient THEN BEGIN
                                  BackUp := '.000';

                                  WHILE FileMgt.ClientFileExists(FileSetup."Import Reference Payments" + BackUp) DO
                                    BackUp := INCSTR(BackUp);
                                  FileMgt.MoveAndRenameClientFile(
                                    FileSetup."Import Reference Payments",
                                    FileSetup."Import Reference Payments" + BackUp,
                                    '');
                                END;
                                MatchPayments.MatchLines(TemplateName,BatchName);
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 3   ;0   ;Container ;
                  ContainerType=ContentArea }

      { 1   ;1   ;Group     ;
                  CaptionML=[ENU=Options;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 2   ;2   ;Field     ;
                  CaptionML=[ENU=Bank Account;
                             NOR=Bankkonto;
                             SVE=Bankkonto];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=BankAccCode;
                  TableRelation="Bank Account".No. }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      BankAccount@1090000 : Record 270;
      FileSetup@1090002 : Record 11126180;
      RefPmtImport@1090050 : Record 11126181;
      RefPmtImportTemp@1090011 : TEMPORARY Record 11126181;
      BankAccFormat@1090047 : Codeunit 11126182;
      MatchPayments@1090010 : Codeunit 11126180;
      BankFile@1090001 : File;
      LineAmount@1090003 : Integer;
      LineAmountAll@1090004 : Integer;
      LineAmountFaild@1090005 : Integer;
      LineAmountCor@1090006 : Integer;
      LineCode@1090008 : Text[1];
      LineAccountNo@1090015 : Text[15];
      LinePostingDate@1090016 : Date;
      LinePaymentDate@1090017 : Date;
      LineReference@1090019 : Text[20];
      Line@1090033 : Text[90];
      Counter@1090035 : Integer;
      LineCounter@1090036 : Integer;
      RefCounter@1090039 : Integer;
      RefStartPos@1090040 : Integer;
      BankAccCode@1090041 : Code[20];
      Text1090000@1090044 : TextConst 'ENU=Select Bank Account Code.';
      Text1090002@1090046 : TextConst 'ENU=Set Transfer File settings for Bank Account %1.';
      CheckAccount@1090048 : Boolean;
      BackUp@1090049 : Code[10];
      BatchName@1090007 : Code[20];
      TemplateName@1090009 : Code[20];
      LineNo@1090052 : Integer;
      BatchNo@1090051 : Integer;
      FileName@1090013 : Text;

    PROCEDURE SelectBankAccount@1090000(LineBankAcctNo@1090000 : Text[15]) AccountCode@1090001 : Code[10];
    BEGIN
      CLEAR(AccountCode);
      BankAccount.RESET;
      BankAccount.SETFILTER("Bank Account No.",'<>%1','');
      CheckAccount := FALSE;
      IF BankAccount.FINDSET THEN
        REPEAT
          BankAccFormat.ConvertBankAcc(BankAccount."Bank Account No.",BankAccount."No.");
          IF LineBankAcctNo = BankAccount."Bank Account No." THEN
            AccountCode := BankAccount."No.";
        UNTIL BankAccount.NEXT = 0;
    END;

    PROCEDURE ClearReferenceZeros@1090012(VAR ReferenceNum@1090000 : Text[20]);
    BEGIN
      RefCounter := 1;
      REPEAT
        IF COPYSTR(ReferenceNum,RefCounter,1) <> '0' THEN BEGIN
          RefStartPos := RefCounter;
          RefCounter := 19;
        END;
        RefCounter := RefCounter + 1;
      UNTIL RefCounter = 20;
      ReferenceNum := COPYSTR(ReferenceNum,RefStartPos);
    END;

    PROCEDURE SetLedgerNames@1090001(Batch@1090000 : Code[20];Template@1090001 : Code[20]);
    BEGIN
      BatchName := Batch;
      TemplateName := Template;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

