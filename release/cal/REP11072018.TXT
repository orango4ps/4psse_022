OBJECT Report 11072018 Copy Capacity Need Details
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Kopiere KapazitÑtsbedarf Details;
               ENU=Copy Capacity Need Details;
               NLD=Kopieer capaciteitsbehoefte details];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   GetPeriodDates;
                 END;

    OnPreReport=BEGIN
                  IF "Capacity Need Detail".GETFILTER("Source Code") = '' THEN
                    ERROR(Text000)
                  ELSE
                    IF ("Capacity Need Detail".GETRANGEMIN("Source Code") <> "Capacity Need Detail".GETRANGEMAX("Source Code")) AND
                       (NewSourceNo <> '')
                    THEN
                      ERROR(Text000);
                END;

  }
  DATASET
  {
    { 1100528600;;DataItem;                  ;
               DataItemTable=Table11012884;
               OnPreDataItem=BEGIN
                               SETRANGE(Date, StartDatePeriodFrom, EndDatePeriodFrom);
                             END;

               OnAfterGetRecord=VAR
                                  CapacityNeedDetail@1100528600 : Record 11012884;
                                  DayNo@1100528601 : Integer;
                                  WeekNo@1100529600 : Integer;
                                  Month@1100528602 : Integer;
                                  YearNo@1100529601 : Integer;
                                BEGIN
                                  CapacityNeedDetail := "Capacity Need Detail";
                                  CapacityNeedDetail."Entry No." := 0;

                                  CASE PeriodType OF
                                    PeriodType::Day:
                                      CapacityNeedDetail.Date := StartDatePeriodTo;
                                    PeriodType::Week:
                                      BEGIN
                                        DayNo := DATE2DWY(Date, 1);
                                        WeekNo := DATE2DWY(StartDatePeriodTo, 2);
                                        YearNo := DATE2DWY(StartDatePeriodTo, 3);
                                        CapacityNeedDetail.Date := DWY2DATE(DayNo, WeekNo, YearNo);
                                      END;
                                    PeriodType::Month:
                                      BEGIN
                                        DayNo := DATE2DMY(Date, 1);
                                        Month := DATE2DMY(StartDatePeriodTo, 2);
                                        YearNo := DATE2DMY(StartDatePeriodTo, 3);
                                        CapacityNeedDetail.Date := GetNewDate(DayNo, Month, YearNo);
                                      END;
                                    PeriodType::Year:
                                      BEGIN
                                        DayNo := DATE2DMY(Date, 1);
                                        Month := DATE2DMY(Date, 2);
                                        YearNo := DATE2DMY(StartDatePeriodTo, 3);
                                        CapacityNeedDetail.Date := GetNewDate(DayNo, Month, YearNo);
                                      END;
                                  END;

                                  IF NewSourceNo <> '' THEN
                                    CASE OccupationType OF
                                      OccupationType::Employee:
                                        CapacityNeedDetail."Source Code" := NewSourceNo;
                                      OccupationType::Department:
                                        CapacityNeedDetail."Global Dimension 1 Code" := NewSourceNo;
                                      OccupationType::Territory:
                                        CapacityNeedDetail."Territory Code" := NewSourceNo;
                                    END;
                                  CapacityNeedDetail.INSERT(TRUE);
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   GetPeriodDates;
                 END;

    }
    CONTROLS
    {
      { 1100528600;;Container;
                  ContainerType=ContentArea }

      { 1100528601;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100529614;2;Field  ;
                  Name=PeriodType;
                  CaptionML=[DEU=Periodentyp;
                             ENU=Period Type;
                             NLD=Periodesoort;
                             SVE=Periodtyp];
                  OptionCaptionML=[DEU=Tag,Woche,Monat,Quartal,Jahr;
                                   ENU=Day,Week,Month,Quarter,Year;
                                   NLD=Dag,Week,Maand,Kwartaal,Jaar;
                                   SVE=Dag,Vecka,MÜnad,Kvartal,èr];
                  SourceExpr=PeriodType;
                  OnValidate=BEGIN
                               GetPeriodDates;
                             END;
                              }

      { 1100529612;2;Field  ;
                  Name=StartDatePeriodFrom;
                  SourceExpr=StartDatePeriodFrom;
                  CaptionClass=GetPeriodCaption(0);
                  OnValidate=VAR
                               Calendar@1100529600 : Record 2000000007;
                             BEGIN
                               IF StartDatePeriodFrom = 0D THEN
                                 StartDatePeriodFrom := WORKDATE;
                               Calendar.SETRANGE("Period Type", PeriodType);
                               Calendar.SETFILTER("Period Start", '<=%1', StartDatePeriodFrom);
                               IF Calendar.FINDLAST THEN BEGIN
                                 StartDatePeriodFrom := Calendar."Period Start";
                                 EndDatePeriodFrom := NORMALDATE(Calendar."Period End");
                               END ELSE
                                 EndDatePeriodFrom := StartDatePeriodFrom;
                             END;
                              }

      { 1100529608;2;Field  ;
                  Name=StartDatePeriodTo;
                  SourceExpr=StartDatePeriodTo;
                  CaptionClass=GetPeriodCaption(1);
                  OnValidate=VAR
                               Calendar@1100529600 : Record 2000000007;
                             BEGIN
                               IF StartDatePeriodTo = 0D THEN
                                 StartDatePeriodTo := WORKDATE;
                               Calendar.SETRANGE("Period Type", PeriodType);
                               Calendar.SETFILTER("Period Start", '<=%1', StartDatePeriodTo);
                               IF Calendar.FINDLAST THEN BEGIN
                                 StartDatePeriodTo := Calendar."Period Start";
                                 EndDatePeriodTo := NORMALDATE(Calendar."Period End");
                               END ELSE
                                 EndDatePeriodTo := StartDatePeriodTo;
                             END;
                              }

      { 1100528604;2;Field  ;
                  CaptionML=[DEU=In Herkunftsnr.;
                             ENU=To Source No.;
                             NLD=Naar Bronnr.<Undefined>;
                             NOR=Til kildenr.;
                             SVE=Till ursprungsnr];
                  SourceExpr=NewSourceNo;
                  OnLookup=VAR
                             Employee@1100528600 : Record 5200;
                             ServiceContract@1100528601 : Record 11012812;
                             DimensionValue@1100528603 : Record 349;
                             Territory@1100528604 : Record 286;
                           BEGIN
                             CASE Type OF
                               "Capacity Need Detail".Type::Occupation:
                                 CASE OccupationType OF
                                   OccupationType::Employee:
                                     IF PAGE.RUNMODAL(0, Employee) = ACTION::LookupOK THEN
                                       NewSourceNo := Employee."No.";
                                   OccupationType::Department:
                                     BEGIN
                                       DimensionValue.SETRANGE("Global Dimension No.", 1);
                                       IF PAGE.RUNMODAL(0, DimensionValue) = ACTION::LookupOK THEN
                                         NewSourceNo := DimensionValue.Code;
                                     END;
                                   OccupationType::Territory:
                                     BEGIN
                                       IF PAGE.RUNMODAL(0, Territory) = ACTION::LookupOK THEN
                                         NewSourceNo := Territory.Code;
                                     END;
                                 END;
                               "Capacity Need Detail".Type::Workload:
                                 IF PAGE.RUNMODAL(0, ServiceContract) = ACTION::LookupOK THEN
                                   NewSourceNo := ServiceContract."No.";
                             END;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      NewSourceNo@1100528603 : Code[20];
      Type@1100528602 : 'Occupation,Workload';
      Text000@1100528604 : TextConst 'DEU=Kopie zu anderer Herkunftsnr.. nicht mîglich, mehr als ein Original ausgewÑhlt.;ENU=Cannot copy to different Source No., more then one original selected.;NLD="Kan niet naar een ander Bronnr. kopieren, meer dan ÇÇn origineel geselecteerd. "';
      OccupationType@1100528606 : 'Employee,Department,Territory';
      PeriodType@1100529600 : 'Day,Week,Month,Quarter,Year';
      StartDatePeriodFrom@1100529601 : Date;
      EndDatePeriodFrom@1100529607 : Date;
      StartDatePeriodTo@1100529602 : Date;
      Text001@1100529605 : TextConst 'DEU=Von %1:;ENU=From %1:;NLD=Van %1:';
      Text002@1100529604 : TextConst 'DEU=Von %1 (%2):;ENU=From %1 (%2):;NLD=Van %1 (%2):';
      Text003@1100529606 : TextConst 'DEU=Zu %1:;ENU=To %1:;NLD=Naar %1:';
      Text004@1100529603 : TextConst 'DEU=Zu %1 (%2):;ENU=To %1 (%2):;NLD=Naar %1 (%2):';
      EndDatePeriodTo@1100529608 : Date;

    PROCEDURE SetToPeriod@1100485000(NewPeriodType@1100529601 : 'Day,Week,Month,Quarter,Year';NewStartDatePeriodFrom@1100529600 : Date);
    BEGIN
      PeriodType := NewPeriodType;
      StartDatePeriodFrom := NewStartDatePeriodFrom;
      GetPeriodDates;
    END;

    PROCEDURE SetType@1100485001(IType@1100485000 : Option);
    BEGIN
      Type := IType;
    END;

    PROCEDURE SetOccupationType@1100528600(IOccupationType@1100528600 : 'Employee,Department,Territory');
    BEGIN
      OccupationType := IOccupationType;
    END;

    LOCAL PROCEDURE GetPeriodDates@1100529600();
    VAR
      Calendar@1100529600 : Record 2000000007;
    BEGIN
      IF StartDatePeriodFrom = 0D THEN BEGIN
        StartDatePeriodFrom := WORKDATE;
        EndDatePeriodFrom := WORKDATE;
      END;

      StartDatePeriodTo := 0D;
      EndDatePeriodTo := 0D;

      Calendar.SETRANGE("Period Type", PeriodType);
      Calendar.SETFILTER("Period Start", '<=%1', StartDatePeriodFrom);
      IF Calendar.FINDLAST THEN BEGIN
        StartDatePeriodFrom := Calendar."Period Start";
        EndDatePeriodFrom := NORMALDATE(Calendar."Period End");
        Calendar.SETRANGE("Period Start");
        IF Calendar.NEXT <> 0 THEN BEGIN
          StartDatePeriodTo := Calendar."Period Start";
          EndDatePeriodTo := NORMALDATE(Calendar."Period End");
        END;
      END;

      IF StartDatePeriodTo = 0D THEN BEGIN
        StartDatePeriodTo := StartDatePeriodFrom;
        EndDatePeriodTo := EndDatePeriodFrom;
      END;
    END;

    LOCAL PROCEDURE GetPeriodCaption@1100529601(PeriodOption@1100529600 : 'From,To') : Text;
    VAR
      PeriodFormManagement@1100529601 : Codeunit 359;
    BEGIN
      IF PeriodOption = PeriodOption::From THEN
        IF PeriodType = PeriodType::Day THEN
          EXIT(STRSUBSTNO(Text001, PeriodType))
        ELSE
          EXIT(STRSUBSTNO(Text002, PeriodType, PeriodFormManagement.CreatePeriodFormat(PeriodType, StartDatePeriodFrom)))
      ELSE
        IF PeriodType = PeriodType::Day THEN
          EXIT(STRSUBSTNO(Text003, PeriodType))
        ELSE
          EXIT(STRSUBSTNO(Text004, PeriodType, PeriodFormManagement.CreatePeriodFormat(PeriodType, StartDatePeriodTo)))
    END;

    LOCAL PROCEDURE GetNewDate@1100529603(DayNo@1100529602 : Integer;MonthNo@1100529601 : Integer;YearNo@1100529600 : Integer) NewDate : Date;
    BEGIN
      WHILE NOT TryGetNewDate(DayNo, MonthNo, YearNo, NewDate) DO
        DayNo -= 1;
    END;

    [TryFunction]
    LOCAL PROCEDURE TryGetNewDate@1100529602(DayNo@1100529603 : Integer;MonthNo@1100529601 : Integer;YearNo@1100529600 : Integer;VAR NewDate@1100529602 : Date);
    BEGIN
      NewDate := DMY2DATE(DayNo, MonthNo, YearNo);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

