OBJECT Table 7113 Analysis Type
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Name;
    CaptionML=[ENU=Analysis Type;
               NOR=Analysetype;
               SVE=Analystyp];
    LookupPageID=Page7111;
    DrillDownPageID=Page7111;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              NOR=Navn;
                                                              SVE=Namn] }
    { 3   ;   ;Value Type          ;Option        ;OnValidate=BEGIN
                                                                IF xRec."Value Type" <> "Value Type" THEN BEGIN
                                                                  "Item Ledger Entry Type Filter" := '';
                                                                  "Value Entry Type Filter" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Value Type;
                                                              NOR=Verditype;
                                                              SVE=VÑrdetyp];
                                                   OptionCaptionML=[ENU=" ,Quantity,Sales Amount,Cost Amount,Non-Invntble Amount,Unit Price,Standard Cost,Indirect Cost,Unit Cost";
                                                                    NOR=" ,Antall,Salgsbelõp,Kostbelõp,Belõp for indirekte kost,Salgspris,Standardkost,Indirekte kost,Enhetskost"];
                                                   OptionString=[ ,Quantity,Sales Amount,Cost Amount,Non-Invntble Amount,Unit Price,Standard Cost,Indirect Cost,Unit Cost] }
    { 4   ;   ;Item Ledger Entry Type Filter;Text250;
                                                   OnValidate=BEGIN
                                                                IF "Item Ledger Entry Type Filter" <> '' THEN
                                                                  IF NOT ("Value Type" IN
                                                                          ["Value Type"::Quantity,
                                                                           "Value Type"::"Cost Amount",
                                                                           "Value Type"::"Non-Invntble Amount",
                                                                           "Value Type"::"Sales Amount"])
                                                                  THEN
                                                                    ERROR(Text000,FIELDCAPTION("Item Ledger Entry Type Filter"),"Value Type");
                                                                AnalysisRepMgmt.ValidateFilter(
                                                                  "Item Ledger Entry Type Filter",DATABASE::"Analysis Type",
                                                                  FIELDNO("Item Ledger Entry Type Filter"),CurrFieldNo <> FIELDNO("Item Ledger Entry Type Filter"));
                                                              END;

                                                   CaptionML=[ENU=Item Ledger Entry Type Filter;
                                                              NOR=Filter for vareposttype] }
    { 5   ;   ;Value Entry Type Filter;Text250    ;OnValidate=BEGIN
                                                                IF "Value Entry Type Filter" <> '' THEN
                                                                  IF NOT ("Value Type" IN
                                                                          ["Value Type"::"Cost Amount",
                                                                           "Value Type"::"Non-Invntble Amount",
                                                                           "Value Type"::"Sales Amount"])
                                                                  THEN
                                                                    ERROR(Text000,FIELDCAPTION("Value Entry Type Filter"),"Value Type");
                                                                AnalysisRepMgmt.ValidateFilter(
                                                                  "Value Entry Type Filter",DATABASE::"Analysis Type",
                                                                  FIELDNO("Value Entry Type Filter"),CurrFieldNo <> FIELDNO("Value Entry Type Filter"));
                                                              END;

                                                   CaptionML=[ENU=Value Entry Type Filter;
                                                              NOR=Filter for verdiposttype] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot specify a %1 for %2.;NOR=Du kan ikke angi %1 for %2.';
      Text001@1001 : TextConst 'ENU=COGS;NOR=VAREFORBR';
      Text002@1002 : TextConst 'ENU=Non-Inventoriable Cost;NOR=Indirekte kost';
      Text003@1003 : TextConst 'ENU=Sales Amount;NOR=Salgsbelõp;SVE=FîrsÑljningsbelopp';
      Text004@1004 : TextConst 'ENU=Sales Quantity;NOR=Salgsantall';
      Text005@1005 : TextConst 'ENU=Unit Price;NOR=Salgspris;SVE=A-pris';
      Text006@1006 : TextConst 'ENU=COGS;NOR=Vareforbr.';
      Text007@1007 : TextConst 'ENU=NON-INVTBL;NOR=INDIREKTE';
      Text008@1008 : TextConst 'ENU=SALES-AMT;NOR=SALGSBELùP';
      Text009@1009 : TextConst 'ENU=SALES-QTY;NOR=SALGSANT';
      Text010@1010 : TextConst 'ENU=UNIT-PRICE;NOR=SALGSPRIS';
      Text011@1011 : TextConst 'ENU=Direct Cost;NOR=Kjõpspris/prod.kost;SVE=Direkt kostnad';
      Text012@1012 : TextConst 'ENU=DIRCOST;NOR=DIRENHKOST';
      Text013@1013 : TextConst 'ENU=Purchases;NOR=Kjõp;SVE=Inkîp';
      Text014@1014 : TextConst 'ENU=PURCHASES;NOR=KJùP;SVE=Inkîp';
      Text015@1015 : TextConst 'ENU=Purchases Quantity;NOR=Kjõpsantall';
      Text016@1016 : TextConst 'ENU=PURCH-QTY;NOR=KJùPSANT';
      Text017@1017 : TextConst 'ENU=Direct Cost - Capacity;NOR=Kjõpspris/prodkost - kapasitet';
      Text018@1018 : TextConst 'ENU=DIRCOSTCAP;NOR=DIRKOSTKAP';
      Text019@1019 : TextConst 'ENU=Indirect Cost;NOR=Indirekte kost;SVE=Indirekt kostnad';
      Text020@1020 : TextConst 'ENU=INDIRCOST;NOR=INDIRKOST';
      Text021@1021 : TextConst 'ENU=Revaluation;NOR=Revaluering';
      Text022@1022 : TextConst 'ENU=REVAL;NOR=REVAL';
      Text023@1023 : TextConst 'ENU=Rounding;NOR=Avrunding;SVE=Avrundning';
      Text024@1024 : TextConst 'ENU=ROUNDING;NOR=AVRUNDING;SVE=Avrundning';
      Text025@1025 : TextConst 'ENU=Variance;NOR=Avvik;SVE=Varians';
      Text026@1026 : TextConst 'ENU=VARIANCE;NOR=AVVIK;SVE=Varians';
      Text027@1027 : TextConst 'ENU=Inventory;NOR=Lager;SVE=Lager';
      Text028@1028 : TextConst 'ENU=INVENTORY;NOR=LAGER;SVE=Lager';
      Text029@1029 : TextConst 'ENU=Consumption;NOR=Forbruk';
      Text030@1030 : TextConst 'ENU=CONSUMP;NOR=FORBRUK';
      Text031@1031 : TextConst 'ENU=Negative Adjustment;NOR=Nedjustering;SVE=Negativ justering';
      Text032@1032 : TextConst 'ENU=N-ADJTM;NOR=NEDJUSTER';
      Text033@1033 : TextConst 'ENU=Output;NOR=Avgang;SVE=Utflîde';
      Text034@1034 : TextConst 'ENU=OUTPUT;NOR=AVGANG;SVE=Utflîde';
      Text035@1035 : TextConst 'ENU=Postive Adjustment;NOR=Oppjustering';
      Text036@1036 : TextConst 'ENU=P-ADJTM;NOR=OPPJUSTER';
      Text037@1037 : TextConst 'ENU=Transfer;NOR=Overfõr;SVE=ôverfîring';
      Text038@1038 : TextConst 'ENU=TRANSFER;NOR=OVERFùR;SVE=ôverfîring';
      Text039@1039 : TextConst 'ENU=Consumption Quantity;NOR=Forbruksantall;SVE=Fîrbrukningsantal';
      Text040@1040 : TextConst 'ENU=CONSUMPQTY;NOR=FORBRUKANT';
      Text041@1041 : TextConst 'ENU=Inventory Quantity;NOR=Lagerantall;SVE=Lagerantal';
      Text042@1042 : TextConst 'ENU=INVT-QTY;NOR=LAGERANT';
      Text043@1043 : TextConst 'ENU=Neg. Adjmt. Quantity;NOR=Nedjusteringsantall';
      Text044@1044 : TextConst 'ENU=N-ADJTMQTY;NOR=NEDJUSTANT';
      Text045@1045 : TextConst 'ENU=Output Quantity;NOR=Avgangsantall;SVE=Utflîde antal';
      Text046@1046 : TextConst 'ENU=OUTPUT-QTY;NOR=AVGANGSANT';
      Text047@1047 : TextConst 'ENU=Pos. Adjmt. Quantity;NOR=Oppjusteringsantall';
      Text048@1048 : TextConst 'ENU=P-ADJTMQTY;NOR=OPPJUSTANT';
      Text049@1049 : TextConst 'ENU=Transfer Quantity;NOR=Overfõringsantall';
      Text050@1050 : TextConst 'ENU=TRANS-QTY;NOR=OVERFùRANT';
      Text051@1051 : TextConst 'ENU=Standard Cost;NOR=Kostpris (standard);SVE=Standardkostnad';
      Text052@1052 : TextConst 'ENU=STDCOST;NOR=STDKOST';
      Text053@1053 : TextConst 'ENU=Indirect Cost %;NOR=Indirekte kost-%;SVE=Indirekt kostnad %';
      Text054@1054 : TextConst 'ENU=INDCOSTPCT;NOR=INDKOSTPRS';
      Text055@1055 : TextConst 'ENU=The default Analysis Types have been recreated.;NOR=Standard analysetyper er opprettet pÜ nytt.';
      AnalysisRepMgmt@1056 : Codeunit 7110;

    [External]
    PROCEDURE ResetDefaultAnalysisTypes@1(ShowMessage@1000 : Boolean);
    VAR
      ItemStatBuf@1001 : Record 5821;
    BEGIN
      InsertItemAnalysisType(
        Text001,
        Text006,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('<>''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Revaluation)),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text007,
        Text002,
        '<>'' ''',
        '',
        "Value Type"::"Non-Invntble Amount");
      InsertItemAnalysisType(
        Text008,
        Text003,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('<>''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Revaluation)),
        "Value Type"::"Sales Amount");
      InsertItemAnalysisType(
        Text009,
        Text004,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text010,
        Text005,
        '',
        '',
        "Value Type"::"Unit Price");
      InsertItemAnalysisType(
        Text012,
        Text011,
        STRSUBSTNO('<>''%1''&<>'' ''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::"Direct Cost")),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text014,
        Text013,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Purchase)),
        '',
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text016,
        Text015,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Purchase)),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text018,
        Text017,
        ''' ''',
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::"Direct Cost")),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text020,
        Text019,
        STRSUBSTNO('<>''%1''&<>'' ''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::"Indirect Cost")),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text022,
        Text021,
        STRSUBSTNO('<>''%1''&<>'' ''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Revaluation)),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text024,
        Text023,
        STRSUBSTNO('<>''%1''&<>'' ''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Rounding)),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text026,
        Text025,
        STRSUBSTNO('<>''%1''&<>'' ''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Variance)),
        "Value Type"::"Cost Amount");

      InsertItemAnalysisType(
        Text028,
        Text027,
        '<>'' ''',
        '',
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text030,
        Text029,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Consumption)),
        '',
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text032,
        Text031,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Negative Adjmt.")),
        '',
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text034,
        Text033,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Output)),
        STRSUBSTNO('<>''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Variance)),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text036,
        Text035,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Positive Adjmt.")),
        '',
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text038,
        Text037,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Transfer)),
        '',
        "Value Type"::"Cost Amount");

      InsertItemAnalysisType(
        Text040,
        Text039,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Consumption)),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text042,
        Text041,
        '<>'' ''',
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text044,
        Text043,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Negative Adjmt.")),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text046,
        Text045,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Output)),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text048,
        Text047,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Positive Adjmt.")),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text050,
        Text049,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Transfer)),
        '',
        "Value Type"::Quantity);

      InsertItemAnalysisType(
        Text052,
        Text051,
        '',
        '',
        "Value Type"::"Standard Cost");
      InsertItemAnalysisType(
        Text054,
        Text053,
        '',
        '',
        "Value Type"::"Indirect Cost");

      IF ShowMessage THEN
        MESSAGE(Text055);
    END;

    LOCAL PROCEDURE InsertItemAnalysisType@2(Code2@1006 : Code[10];Name2@1000 : Text[30];ItemLedgEntryTypeFilter@1001 : Text[250];ValueEntryTypeFilter@1002 : Text[250];ValueType@1003 : ' ,Quantity,Sales Amount,Cost Amount,Non-Invntble Amount,Unit Price,Standard Cost,Indirect Cost,Unit Cost');
    VAR
      AnalysisType@1004 : Record 7113;
    BEGIN
      WITH AnalysisType DO BEGIN
        INIT;
        Code := Code2;
        Name := Name2;
        VALIDATE("Value Type",ValueType);
        VALIDATE("Item Ledger Entry Type Filter",ItemLedgEntryTypeFilter);
        VALIDATE("Value Entry Type Filter",ValueEntryTypeFilter);
        IF NOT INSERT(TRUE) THEN
          MODIFY(TRUE);
      END;
    END;

    BEGIN
    END.
  }
}

