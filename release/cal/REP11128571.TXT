OBJECT Report 11128571 Create DK Elec. Credit Memos
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVDK10.00 (13601);
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create Electronic Credit Memos;
               NOR=Opprette elektroniske kreditnotaer;
               SVE=Skapa elektroniska kreditnoter];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF NOT CurrReport.USEREQUESTPAGE THEN
                    InitLogInteraction;
                END;

    UsageCategory=ReportsAndAnalysis;
  }
  DATASET
  {
    { 8098;    ;DataItem;                    ;
               DataItemTable=Table114;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=VAR
                               SalesCrMemoHeader@1101100000 : Record 114;
                             BEGIN
                               Counter := 0;

                               // Any electronic credit memos?
                               SalesCrMemoHeader.COPY("Sales Cr.Memo Header");
                               SalesCrMemoHeader.FILTERGROUP(8);
                               SalesCrMemoHeader.SETFILTER("EAN No.",'<>%1','');
                               IF NOT SalesCrMemoHeader.FINDFIRST THEN
                                 ERROR(Text003);

                               // All electronic credit memos?
                               SalesCrMemoHeader.SETRANGE("EAN No.",'');
                               IF SalesCrMemoHeader.FINDFIRST THEN
                                 IF NOT CONFIRM(Text000,TRUE) THEN
                                   CurrReport.QUIT;
                               SalesCrMemoHeader.SETRANGE("EAN No.");

                               // Some already sent?
                               SalesCrMemoHeader.SETRANGE("Electronic Credit Memo Created",TRUE);
                               IF SalesCrMemoHeader.FINDFIRST THEN
                                 IF NOT CONFIRM(Text001,TRUE) THEN
                                   CurrReport.QUIT;

                               SETFILTER("EAN No.", '<>%1', '');
                             END;

               OnAfterGetRecord=VAR
                                  OIOUBLExportSalesCrMemo@1060000 : Codeunit 11128580;
                                BEGIN
                                  OIOUBLExportSalesCrMemo.ExportXML("Sales Cr.Memo Header");

                                  IF LogInteraction THEN
                                    SegManagement.LogDocument(
                                      6,"No.",0,0,DATABASE::Customer,"Sell-to Customer No.","Salesperson Code",
                                      "Campaign No.","Posting Description",'');

                                  COMMIT;

                                  Counter := Counter + 1;
                                END;

               OnPostDataItem=BEGIN
                                MESSAGE(Text002, Counter);
                              END;

               ReqFilterFields=No.,Sell-to Customer No.,Bill-to Customer No.,EAN No.,Electronic Credit Memo Created }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnInit=BEGIN
               LogInteractionEnable := TRUE;
             END;

      OnOpenPage=BEGIN
                   InitLogInteraction;
                   LogInteractionEnable := LogInteraction;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1101100000;2;Field  ;
                  Name=LogInteraction;
                  CaptionML=[ENU=Log Interaction;
                             NOR=Logg Interaksjon;
                             SVE=Logga interaktion];
                  ToolTipML=ENU=Specifies if you want to record the related interactions with the involved contact person in the Interaction Log Entry table.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=LogInteraction;
                  Enabled=LogInteractionEnable }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      SegManagement@1101100007 : Codeunit 5051;
      Counter@1101100000 : Integer;
      Text000@1101100002 : TextConst 'ENU=One or more credit memos that match your filter criteria are not electronic credit memos and will be skipped.\\Do you want to continue?;NOR=En eller flere kreditnotaer som passer i ditt utvalg er ikke elektroniske kreditnotaer og hoppes over.\\Vil du fortsette?;SVE=En eller flera kreditnoter som passar i ditt urval „r inte elektroniska kretidnoter och hoppas ”ver.\\Vill du forts„tta?';
      Text001@1101100003 : TextConst 'ENU=One or more credit memos that match your filter criteria have been created before.\\Do you want to continue?;NOR=En eller flere kreditnotaer som passer i ditt utvalg har blitt opprettet tidligere.\\Vil du fortsette?;SVE=En eller flera kreditnoter som passar i ditt urval har skapats tidigare.\\Vill du forts„tta?';
      Text002@1101100004 : TextConst 'ENU=Successfully created %1 electronic credit memos.;NOR=Opprettet %1 elektroniske kreditnotaer;SVE=Lyckades skapa %1 elektroniska kreditnoter';
      Text003@1101100005 : TextConst 'ENU=There is nothing to create.;NOR=Det finnes ingenting † opprette.;SVE=Det finns inget att skapa.';
      LogInteraction@1101100006 : Boolean;
      LogInteractionEnable@19003940 : Boolean INDATASET;

    PROCEDURE InitLogInteraction@1101100006();
    BEGIN
      LogInteraction := SegManagement.FindInteractTmplCode(4) <> '';
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

