OBJECT Table 11229800 Document Update (PPT)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Creation Date" := TODAY;
               "Creation Time" := TIME;

               AddCurrentUserToMembers;
             END;

    OnModify=BEGIN
               TESTFIELD("E-Mail Send On", 0DT);
             END;

    OnDelete=VAR
               DocumentUpdateMemberPPT@1100525000 : Record 11229801;
               DocumentUpdateDocumentPPT@1100525001 : Record 11229802;
               DocumentUpdateTextPPT@1100525002 : Record 11229803;
             BEGIN
               TESTFIELD("E-Mail Send On", 0DT);

               DocumentUpdateMemberPPT.SETRANGE("Project No.", "Project No.");
               DocumentUpdateMemberPPT.SETRANGE("Seq. No.", "Seq. No.");
               DocumentUpdateMemberPPT.DELETEALL(TRUE);

               DocumentUpdateDocumentPPT.SETRANGE("Project No.", "Project No.");
               DocumentUpdateDocumentPPT.SETRANGE("Seq. No.", "Seq. No.");
               DocumentUpdateDocumentPPT.DELETEALL(TRUE);

               DocumentUpdateTextPPT.SETRANGE("Project No.", "Project No.");
               DocumentUpdateTextPPT.SETRANGE("Seq. No.", "Seq. No.");
               DocumentUpdateTextPPT.DELETEALL(TRUE);
             END;

    OnRename=BEGIN
               ERROR('');
             END;

    CaptionML=ENU=Document Update;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job WHERE (Project Portal Project=CONST(Yes));
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr];
                                                   NotBlank=Yes }
    { 20  ;   ;Seq. No.            ;Integer       ;CaptionML=[ENU=Seq. No.;
                                                              NOR=Sekv. nr;
                                                              SVE=Sekv. nr];
                                                   Editable=No }
    { 30  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 40  ;   ;Start Text Block    ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Document Update Text (PPT)" WHERE (Project No.=FIELD(Project No.),
                                                                                                         Seq. No.=FIELD(Seq. No.),
                                                                                                         Type=CONST(Start Text)));
                                                   CaptionML=ENU=Start Text Block;
                                                   Editable=No }
    { 50  ;   ;End Text Block      ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Document Update Text (PPT)" WHERE (Project No.=FIELD(Project No.),
                                                                                                         Seq. No.=FIELD(Seq. No.),
                                                                                                         Type=CONST(End Text)));
                                                   CaptionML=ENU=End Text Block;
                                                   Editable=No }
    { 60  ;   ;Document Count      ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Document Update Document (PPT)" WHERE (Project No.=FIELD(Project No.),
                                                                                                             Seq. No.=FIELD(Seq. No.)));
                                                   CaptionML=ENU=Document Count;
                                                   Editable=No }
    { 61  ;   ;Responsible Person Count;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Count("Document Update Member (PPT)" WHERE (Project No.=FIELD(Project No.),
                                                                                                           Seq. No.=FIELD(Seq. No.),
                                                                                                           Type=CONST(Responsible Person)));
                                                   CaptionML=ENU=Responsible Person Count;
                                                   Editable=No }
    { 62  ;   ;Authority Count     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Document Update Member (PPT)" WHERE (Project No.=FIELD(Project No.),
                                                                                                           Seq. No.=FIELD(Seq. No.),
                                                                                                           Type=CONST(Authority)));
                                                   CaptionML=ENU=Authority Count;
                                                   Editable=No }
    { 70  ;   ;Creation Date       ;Date          ;CaptionML=[ENU=Creation Date;
                                                              NOR=Opprettet den;
                                                              SVE=Uppl„ggningsdatum];
                                                   Editable=No }
    { 71  ;   ;Creation Time       ;Time          ;CaptionML=[ENU=Creation Time;
                                                              NOR=Opprettet (tid);
                                                              SVE=Skapades (tid)];
                                                   Editable=No }
    { 80  ;   ;E-Mail Send On      ;DateTime      ;CaptionML=[ENU=Email Sent On;
                                                              NOR=E-post sendt den;
                                                              SVE=E-post skickades den];
                                                   Editable=No }
    { 90  ;   ;Uploaded to Project Portal;DateTime;CaptionML=ENU=Uploaded to Document Portal;
                                                   Editable=No }
    { 91  ;   ;Cover Letter        ;Text50        ;CaptionML=[ENU=Library Name;
                                                              NOR=Biblioteksnavn;
                                                              SVE=Biblioteksnamn];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Project No.,Seq. No.                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ErrorRec@1100409000 : Record 11012051;
      LastLineNo@1100409001 : Integer;
      Text000@1100409002 : TextConst 'ENU=Document %4: %1 %2 (%3) has no Permission to this Document (%5).';
      Text001@1100409003 : TextConst 'ENU=Document %6: %1 %2 %3 (%4 %5) has no Permission to this Document (%7).';
      Text002@1100409004 : TextConst 'ENU=Continue to send the Email?';

    PROCEDURE SendMail@1100525000();
    VAR
      DocumentPortalProject@1100528300 : Codeunit 11012948;
    BEGIN
      IF (CheckDocumentUpdate) THEN
        DocumentPortalProject.AddDocumentUpdate("Project No.", "Seq. No.");
    END;

    PROCEDURE ImportData@1100525001();
    VAR
      DocumentUpdateImportPPT@1100525000 : Report 11012911;
    BEGIN
      DocumentUpdateImportPPT.SetGlobalVars("Project No.", "Seq. No.");
      DocumentUpdateImportPPT.RUNMODAL;
    END;

    PROCEDURE CheckDocumentUpdate@1100409000() : Boolean;
    VAR
      DocumentUpdateDocumentPPT@1100409000 : Record 11229802;
      DocumentUpdateMemberPPT@1100409001 : Record 11229801;
    BEGIN
      DocumentUpdateDocumentPPT.SETRANGE("Project No.", "Project No.");
      DocumentUpdateDocumentPPT.SETRANGE("Seq. No.", "Seq. No.");
      IF (NOT DocumentUpdateDocumentPPT.FINDSET) THEN
        EXIT(TRUE);
      REPEAT
        DocumentUpdateMemberPPT.SETRANGE("Project No.", DocumentUpdateDocumentPPT."Project No.");
        DocumentUpdateMemberPPT.SETRANGE("Seq. No.", DocumentUpdateDocumentPPT."Seq. No.");
        IF (DocumentUpdateMemberPPT.FINDSET) THEN BEGIN
          REPEAT
            CASE DocumentUpdateMemberPPT.Type OF
              DocumentUpdateMemberPPT.Type::"Responsible Person":
                CheckResponsiblePerson(DocumentUpdateDocumentPPT, DocumentUpdateMemberPPT);
              DocumentUpdateMemberPPT.Type::Authority:
                CheckAuthority(DocumentUpdateDocumentPPT, DocumentUpdateMemberPPT);
            END;
          UNTIL (DocumentUpdateMemberPPT.NEXT = 0);
        END;
      UNTIL (DocumentUpdateDocumentPPT.NEXT = 0);

      IF (ErrorRec.COUNT > 0) THEN BEGIN
        COMMIT;
        PAGE.RUNMODAL(PAGE::Errors, ErrorRec);
        EXIT(CONFIRM(Text002, FALSE));
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CheckResponsiblePerson@1100409001(DocumentUpdateDocumentPPT@1100409001 : Record 11229802;DocumentUpdateMemberPPT@1100409000 : Record 11229801);
    VAR
      DocumentProperties@1100409003 : Record 11012746;
      ProjectPortalSubsite@1100409004 : Record 11229810;
      RespPersPermPPT@1100409002 : Record 11229812;
    BEGIN
      DocumentProperties.GET(DocumentUpdateDocumentPPT."Document No.");
      ProjectPortalSubsite.GET(ProjectPortalSubsite.Type::Project, DocumentProperties."Project Portal Subsite");

      RespPersPermPPT.SETRANGE("Subsite Type", RespPersPermPPT."Subsite Type"::Project);
      RespPersPermPPT.SETRANGE(Type, RespPersPermPPT.Type::Access);
      RespPersPermPPT.SETRANGE("Project No.", DocumentUpdateDocumentPPT."Project No.");
      RespPersPermPPT.SETRANGE("Employee No.", DocumentUpdateMemberPPT."Employee No.");
      RespPersPermPPT.SETRANGE("Project Portal Subsite", DocumentProperties."Project Portal Subsite");
      RespPersPermPPT.SETRANGE("Document Type", '');
      IF (ProjectPortalSubsite."High Security Subsite") THEN
        RespPersPermPPT.SETRANGE("Document Type", DocumentProperties."Document Type");
      IF (RespPersPermPPT.FINDFIRST) THEN BEGIN
        IF (DocumentProperties."Private Company Document") THEN BEGIN
          IF (RespPersPermPPT."Permission Level" < RespPersPermPPT."Permission Level"::Owner) THEN
            AddLineToError(DocumentUpdateDocumentPPT, DocumentUpdateMemberPPT);
        END ELSE BEGIN
          IF (RespPersPermPPT."Permission Level" = 0) THEN //None
            AddLineToError(DocumentUpdateDocumentPPT, DocumentUpdateMemberPPT);
        END;
      END;
    END;

    LOCAL PROCEDURE CheckAuthority@1100409002(DocumentUpdateDocumentPPT@1100409001 : Record 11229802;DocumentUpdateMemberPPT@1100409000 : Record 11229801);
    VAR
      DocumentProperties@1100409002 : Record 11012746;
      ProjectPortalSubsite@1100409004 : Record 11229810;
      AuthorityPermPPT@1100409003 : Record 11229813;
    BEGIN
      DocumentProperties.GET(DocumentUpdateDocumentPPT."Document No.");
      ProjectPortalSubsite.GET(ProjectPortalSubsite.Type::Project, DocumentProperties."Project Portal Subsite");

      IF (DocumentProperties."Private Company Document") THEN BEGIN
        IF (DocumentProperties."Contact No." <> DocumentUpdateMemberPPT."Contact No.") THEN
          AddLineToError(DocumentUpdateDocumentPPT, DocumentUpdateMemberPPT);
      END ELSE BEGIN
        AuthorityPermPPT.SETRANGE("Subsite Type", AuthorityPermPPT."Subsite Type"::Project);
        AuthorityPermPPT.SETRANGE(Type, AuthorityPermPPT.Type::Access);
        AuthorityPermPPT.SETRANGE("Project No.", DocumentUpdateDocumentPPT."Project No.");
        AuthorityPermPPT.SETRANGE("Contact No.", DocumentUpdateMemberPPT."Contact No.");
        AuthorityPermPPT.SETRANGE("Contact Person No.", DocumentUpdateMemberPPT."Contact Person No.");
        AuthorityPermPPT.SETRANGE("Project Portal Subsite", DocumentProperties."Project Portal Subsite");
        AuthorityPermPPT.SETRANGE("Document Type", '');
        IF (ProjectPortalSubsite."High Security Subsite") THEN
          AuthorityPermPPT.SETRANGE("Document Type", DocumentProperties."Document Type");
        IF (AuthorityPermPPT.FINDFIRST) THEN BEGIN
          IF (DocumentProperties."Private Company Document") THEN BEGIN
            IF (AuthorityPermPPT."Permission Level" < AuthorityPermPPT."Permission Level"::Member) THEN
              AddLineToError(DocumentUpdateDocumentPPT, DocumentUpdateMemberPPT);
          END ELSE BEGIN
            IF (AuthorityPermPPT."Permission Level" = 0) THEN //None
              AddLineToError(DocumentUpdateDocumentPPT, DocumentUpdateMemberPPT);
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE AddLineToError@1100409003(DocumentUpdateDocumentPPT@1100409004 : Record 11229802;DocumentUpdateMemberPPT@1100409003 : Record 11229801);
    BEGIN
      LastLineNo += 10000;
      DocumentUpdateDocumentPPT.CALCFIELDS(Description);
      DocumentUpdateMemberPPT.CALCFIELDS("Name Employee", "Contact Name", "Contact Person Name");

      ErrorRec.INIT;
      ErrorRec."User ID" := USERID;
      ErrorRec."Source Type" := ErrorRec."Source Type"::General;
      ErrorRec."Line No." := LastLineNo;
      ErrorRec."Document No." := DocumentUpdateDocumentPPT."Document No.";
      ErrorRec.Description := DocumentUpdateDocumentPPT.Description;
      ErrorRec."Project No." := DocumentUpdateDocumentPPT."Project No.";
      CASE DocumentUpdateMemberPPT.Type OF
        DocumentUpdateMemberPPT.Type::"Responsible Person":
          ErrorRec."Error message" := STRSUBSTNO(Text000, DocumentUpdateMemberPPT.Type,
            DocumentUpdateMemberPPT."Employee No.", DocumentUpdateMemberPPT."Name Employee",
            DocumentUpdateDocumentPPT."Document No.", DocumentUpdateDocumentPPT.Description);
        DocumentUpdateMemberPPT.Type::Authority:
          ErrorRec."Error message" := STRSUBSTNO(Text001, DocumentUpdateMemberPPT.Type,
            DocumentUpdateMemberPPT."Contact No.", DocumentUpdateMemberPPT."Contact Person No.",
            DocumentUpdateMemberPPT."Contact Name", DocumentUpdateMemberPPT."Contact Person Name",
            DocumentUpdateDocumentPPT."Document No.", DocumentUpdateDocumentPPT.Description);
      END;
      ErrorRec.INSERT;
    END;

    PROCEDURE AddCurrentUserToMembers@1100409004();
    VAR
      UserSetup@1100409000 : Record 91;
      ProjectResponsiblePerson@1100409002 : Record 11012040;
      DocumentUpdateMemberPPT@1100409001 : Record 11229801;
    BEGIN
      IF (NOT UserSetup.GET(USERID)) THEN
        EXIT;
      ProjectResponsiblePerson.SETRANGE("Project No.", "Project No.");
      ProjectResponsiblePerson.SETRANGE("Employee No.", UserSetup."Employee No.");
      IF (NOT ProjectResponsiblePerson.FINDFIRST) THEN
        EXIT;

      DocumentUpdateMemberPPT.INIT;
      DocumentUpdateMemberPPT."Project No." := "Project No.";
      DocumentUpdateMemberPPT."Seq. No." := "Seq. No.";
      DocumentUpdateMemberPPT.Type := DocumentUpdateMemberPPT.Type::"Responsible Person";
      DocumentUpdateMemberPPT."Employee No." := UserSetup."Employee No.";
      DocumentUpdateMemberPPT.INSERT;
    END;

    BEGIN
    END.
  }
}

