OBJECT Table 11012063 Quote Comparison
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Quote Comparison;
               NOR=Tilbudssammenligning;
               SVE=Offertj„mf”relse];
  }
  FIELDS
  {
    { 10  ;   ;Line Type           ;Option        ;CaptionML=[ENU=Line Type;
                                                              NOR=Radtype;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[ENU=Line,Total,Quote Line;
                                                                    NOR=Rad,totalt,Tilbudsrad;
                                                                    SVE=Rad,totalt,offertrad];
                                                   OptionString=Line,Total,Quote Line }
    { 20  ;   ;Comparison Quote    ;Code20        ;TableRelation="Comparison Quotes"."Comparison Quote" WHERE (Type=CONST(Comparison Quote));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Comparison Quote;
                                                              NOR=Sammenligning av tilbud;
                                                              SVE=Offertj„mf”relse] }
    { 30  ;   ;Quote No.           ;Code20        ;TableRelation="Purchase Header".No. WHERE (Document Type=CONST(Quote));
                                                   CaptionML=[ENU=Quote No.;
                                                              NOR=Foresp›rselsnr.;
                                                              SVE=Offertnr] }
    { 40  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 50  ;   ;Quote Line No.      ;Integer       ;CaptionML=[ENU=Quote Line No.;
                                                              NOR=Tilbudsradnr.;
                                                              SVE=Offertradnr] }
    { 60  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Vendor No.;
                                                              NOR=Leverand›rnr.;
                                                              SVE=Leverant”rsnr] }
    { 65  ;   ;Contact No.         ;Code20        ;TableRelation=Contact;
                                                   CaptionML=[ENU=Contact No.;
                                                              NOR=Kontaktnr.;
                                                              SVE=Kontaktnr] }
    { 70  ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostnadsobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 80  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Item No.;
                                                              NOR=Artikkelnr;
                                                              SVE=Artikelnr] }
    { 85  ;   ;Item Composition    ;Code40        ;CaptionML=[ENU=Item Composition;
                                                              NOR=Artikkelsammensetning;
                                                              SVE=Artikel f”r offentligt ackord] }
    { 90  ;   ;Basic Item          ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   CaptionML=[ENU=Basic Item;
                                                              NOR=Fabrikantartikkel;
                                                              SVE=Basartikel] }
    { 91  ;   ;Trade Item          ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   CaptionML=[ENU=Trade Item;
                                                              NOR=Katalogartikkel;
                                                              SVE=Anskaffningsartikel] }
    { 93  ;   ;Manufacturer        ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   CaptionML=[ENU=Manufacturer;
                                                              NOR=Fabrikant;
                                                              SVE=Tillverkare] }
    { 94  ;   ;Vendor (Trade Item) ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   CaptionML=[ENU=Vendor (Trade Item);
                                                              NOR=Leverand›r (katalogartikkel);
                                                              SVE=Leverant”r (skaffningsartikel)] }
    { 140 ;   ;Unit of Measure Code;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=M†leenhet;
                                                              SVE=M†ttenhet] }
    { 150 ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 151 ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2] }
    { 160 ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal] }
    { 170 ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp];
                                                   AutoFormatType=1 }
  }
  KEYS
  {
    {    ;Line Type,Comparison Quote,Quote No.,Line No.,Quote Line No.;
                                                   SumIndexFields=Amount;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Comparison Quote,Line Type,Cost Object,Item No.,Unit of Measure Code }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1210190000 : TextConst 'ENU=Total Quote;NOR=Totalt tilbud;SVE=Total offert';
      HomeCurrency@1100528901 : Code[10];
      GeneralLedgerSetup@1100528900 : Record 98;

    PROCEDURE CreateQuoteCompLines@1210190000(VAR OQuoteCompRec@1210190000 : Record 11012063;ICompQuote@1210190001 : Code[20];ICurrencyCode@1100528900 : Code[10]);
    VAR
      lvLinkedQuoteRec@1210190002 : Record 11020214;
      lvQuoteRec@1210190008 : Record 38;
      lvQuoteLineRec@1210190003 : Record 39;
      lvQuoteLineRec2@1210190004 : Record 39;
      lvNextLineNo@1210190006 : Integer;
      lvLineNo@1210190007 : Integer;
      lvQuantity@1210190005 : Decimal;
    BEGIN
      WITH OQuoteCompRec DO BEGIN
        DeleteQuoteCompLines(OQuoteCompRec, ICompQuote);
        IF ICompQuote = '' THEN
          EXIT;

        lvNextLineNo := 1;
        lvLinkedQuoteRec.SETRANGE("Comparison Quote", ICompQuote);
        IF NOT lvLinkedQuoteRec.FIND('-') THEN
          EXIT;
        //DP01137.sn
        GeneralLedgerSetup.GET;
        HomeCurrency := GeneralLedgerSetup."LCY Code";
        //DP01137.en
        REPEAT
          IF NOT lvQuoteRec.GET(lvQuoteRec."Document Type"::Quote , lvLinkedQuoteRec."Quote No.") THEN
            lvQuoteRec.INIT;
          lvQuoteLineRec.SETRANGE("Document Type", lvQuoteLineRec."Document Type"::Quote);
          lvQuoteLineRec.SETRANGE("Document No.", lvLinkedQuoteRec."Quote No.");
          lvQuoteLineRec.SETFILTER(Type, '<>%1', lvQuoteLineRec.Type::" ");
          IF lvQuoteLineRec.FINDSET THEN BEGIN
            REPEAT
              IF NOT IsGLTextLine(lvQuoteLineRec) THEN BEGIN //C009130.n

                lvQuantity := lvQuoteLineRec.Quantity;
                lvQuoteLineRec2.SETRANGE("Document Type", lvQuoteLineRec."Document Type");
                lvQuoteLineRec2.SETRANGE("Document No.", lvQuoteLineRec."Document No.");
                lvQuoteLineRec2.SETFILTER(Type, '<>%1', lvQuoteLineRec.Type::" ");
                lvQuoteLineRec2.SETFILTER("Line No.", '<%1', lvQuoteLineRec."Line No.");
                lvQuoteLineRec2.SETRANGE("Shortcut Dimension 2 Code", lvQuoteLineRec."Shortcut Dimension 2 Code");
                lvQuoteLineRec2.SETRANGE("Item No.", lvQuoteLineRec."Item No.");
                lvQuoteLineRec2.SETRANGE("Basic Item", lvQuoteLineRec."Basic Item");
                lvQuoteLineRec2.SETRANGE("Trade Item", lvQuoteLineRec."Trade Item");
                lvQuoteLineRec2.SETRANGE(Manufacturer, lvQuoteLineRec.Manufacturer);
                lvQuoteLineRec2.SETRANGE("Vendor (Trade Item)", lvQuoteLineRec."Vendor (Trade Item)");
                lvQuoteLineRec2.SETRANGE("Unit of Measure Code", lvQuoteLineRec."Unit of Measure Code");
                lvQuoteLineRec2.SETRANGE(Description, lvQuoteLineRec.Description);
                lvQuoteLineRec2.SETRANGE("Description 2", lvQuoteLineRec."Description 2");
                IF NOT lvQuoteLineRec2.FINDFIRST THEN BEGIN
                  lvQuoteLineRec2.SETFILTER("Line No.", '>%1', lvQuoteLineRec."Line No.");
                  IF lvQuoteLineRec2.FINDSET THEN BEGIN
                    REPEAT
                      lvQuantity := lvQuantity + lvQuoteLineRec2.Quantity;
                    UNTIL lvQuoteLineRec2.NEXT = 0;
                  END;
                  SETRANGE("Line Type", "Line Type"::Line);
                  SETRANGE("Comparison Quote", ICompQuote);
                  SETRANGE("Cost Object", lvQuoteLineRec."Shortcut Dimension 2 Code");
                  SETRANGE("Item No.", lvQuoteLineRec."Item No.");
                  SETRANGE("Basic Item", lvQuoteLineRec."Basic Item");
                  SETRANGE("Trade Item", lvQuoteLineRec."Trade Item");
                  SETRANGE(Manufacturer, lvQuoteLineRec.Manufacturer);
                  SETRANGE("Vendor (Trade Item)", lvQuoteLineRec."Vendor (Trade Item)");
                  SETRANGE("Unit of Measure Code", lvQuoteLineRec."Unit of Measure Code");
                  SETRANGE(Description, lvQuoteLineRec.Description);
                  SETRANGE("Description 2", lvQuoteLineRec."Description 2");
                  SETRANGE(Quantity, lvQuantity);
                  IF NOT FINDFIRST THEN BEGIN
                    INIT;
                    "Line Type" := "Line Type"::Line;
                    "Comparison Quote" := ICompQuote;
                    "Quote No." := '';
                    "Line No." := lvNextLineNo;
                    "Quote Line No." := 0;
                    "Cost Object" := lvQuoteLineRec."Shortcut Dimension 2 Code";
                    "Item No.":= lvQuoteLineRec."Item No.";
                    "Basic Item" := lvQuoteLineRec."Basic Item";
                    "Trade Item" := lvQuoteLineRec."Trade Item";
                    Manufacturer := lvQuoteLineRec.Manufacturer;
                    "Vendor (Trade Item)" := lvQuoteLineRec."Vendor (Trade Item)";
                    "Item Composition" := FillItemComposition(
                      "Item No.", "Basic Item", "Trade Item", Manufacturer, "Vendor (Trade Item)");
                    "Unit of Measure Code" := lvQuoteLineRec."Unit of Measure Code";
                    Description := lvQuoteLineRec.Description;
                    "Description 2" := lvQuoteLineRec."Description 2";
                    Quantity := lvQuantity;
                    INSERT;
                    lvNextLineNo := lvNextLineNo + 1;
                  END;
                  lvLineNo := "Line No.";

                  INIT;
                  "Line Type" := "Line Type"::"Quote Line";
                  "Comparison Quote" := ICompQuote;
                  "Quote No." := lvQuoteLineRec."Document No.";
                  "Line No." := lvLineNo;
                  "Quote Line No." := lvQuoteLineRec."Line No.";
                  "Vendor No." := lvQuoteRec."Buy-from Vendor No.";
                  "Contact No." := lvQuoteRec."Buy-from Contact No.";
                  "Cost Object" := lvQuoteLineRec."Shortcut Dimension 2 Code";
                  "Item No.":= lvQuoteLineRec."Item No.";
                  "Basic Item" := lvQuoteLineRec."Basic Item";
                  "Trade Item" := lvQuoteLineRec."Trade Item";
                  Manufacturer := lvQuoteLineRec.Manufacturer;
                  "Vendor (Trade Item)" := lvQuoteLineRec."Vendor (Trade Item)";
                  "Item Composition" := FillItemComposition(
                    "Item No.", "Basic Item", "Trade Item", Manufacturer, "Vendor (Trade Item)");
                  "Unit of Measure Code" := lvQuoteLineRec."Unit of Measure Code";
                  Description := lvQuoteLineRec.Description;
                  "Description 2" := lvQuoteLineRec."Description 2";
                  Quantity := lvQuoteLineRec.Quantity;
                  Amount := GetAmount(lvQuoteLineRec, ICurrencyCode, HomeCurrency);  //DP01137
                  INSERT;
                  IF lvQuoteLineRec2.FINDSET THEN BEGIN
                    REPEAT
                     "Quote Line No." := lvQuoteLineRec2."Line No.";
                      Quantity := lvQuoteLineRec2.Quantity;
                      Amount := GetAmount(lvQuoteLineRec2, ICurrencyCode, HomeCurrency);  //DP01137
                      INSERT;
                    UNTIL lvQuoteLineRec2.NEXT = 0;
                  END;
                END;
              END;  //C009130.n
            UNTIL lvQuoteLineRec.NEXT = 0;
          END;
        UNTIL lvLinkedQuoteRec.NEXT = 0;
      END;
    END;

    PROCEDURE CreateQuoteCompTotalLine@1210190001(VAR OQuoteCompRec@1210190001 : Record 11012063;ICompQuote@1210190000 : Code[20];ICurrencyCode@1100528900 : Code[10]);
    BEGIN
      WITH OQuoteCompRec DO BEGIN
        INIT;
        "Line Type" := "Line Type"::Total;
        "Comparison Quote" := ICompQuote;
        "Quote No." := '';
        "Line No." := 0;
        "Quote Line No." := 0;
        Description := Text000;
        INSERT;
      END;
    END;

    PROCEDURE DeleteQuoteCompLines@1210190002(VAR OQuoteCompRec@1210190001 : Record 11012063;ICompQuote@1210190000 : Code[20]);
    BEGIN
      WITH OQuoteCompRec DO BEGIN
        RESET;
        SETRANGE("Comparison Quote", ICompQuote);
        DELETEALL;
      END;
    END;

    PROCEDURE FillItemComposition@1210190005(IItemNo@1210190000 : Code[20];IBasicItem@1210190003 : Code[20];ITradeItem@1210190002 : Code[20];IManufacturer@1210190004 : Code[15];IVendor@1210190005 : Code[15]) : Code[40];
    BEGIN
      IF ITradeItem <> '' THEN
        EXIT(IVendor + '-' + ITradeItem);

      IF IBasicItem <> '' THEN
        EXIT(IManufacturer + '-' + IBasicItem);

      IF IItemNo <> '' THEN
        EXIT(IItemNo);

      EXIT('');
    END;

    PROCEDURE IsGLTextLine@1100525000(PurchLine@1100525000 : Record 39) : Boolean;
    BEGIN
      //C009130
      // Text lines (with Type is empty) are already skiped (filter). But there are also textlines of Type = "G/L Account".
      // Then Account No. can be empty, but if Project or Service Order filled then the Account No. can also be filled
      // with the WIP account. Type en Accont No. then not editable, so then not possible to make these fields empty.
      // So also lines of type is "G/L Account" with items, plant type, quantity and amount empty/zero be processed as
      // textlines. So also skip these lines.
      WITH PurchLine DO BEGIN
        IF (Type = Type::"G/L Account") AND
           (("No." = '') OR ("Job No." <> '') OR ("Service Order No." <> '')) AND
           ("Item No." = '') AND ("Basic Item" = '') AND ("Trade Item" = '') AND
           ("Plant Type" = '') AND
           (Quantity = 0) AND ("Direct Unit Cost" = 0) AND (Amount = 0)
        THEN
          EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE GetAmount@1100528900(QuoteLine@1100528901 : Record 39;LineCurrency@1100528902 : Code[10];HomeCurrency@1100528903 : Code[10]) Amnt : Decimal;
    VAR
      ProjectCurrencyExchangeRate@1100528904 : Record 11020628;
    BEGIN
      //DP01137
      IF LineCurrency = QuoteLine."Currency Code" THEN
        EXIT (QuoteLine.Amount);

      IF LineCurrency = HomeCurrency THEN
        EXIT(QuoteLine."Amount (LCY)");

      Amnt := ProjectCurrencyExchangeRate.ExchangeAmtLCYToFCY(QuoteLine."Amount (LCY)", FALSE, FALSE, LineCurrency, QuoteLine."Job No.", '', 0D);
    END;

    BEGIN
    END.
  }
}

