OBJECT Codeunit 11012401 Document Link Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            GeneratePossibleDocLinks();
          END;

  }
  CODE
  {
    VAR
      Text000@1100525003 : TextConst 'ENU=%1(s) already exists for this %2.;NOR=%1 finnes allerede for denne %2.;SVE=%1 finns redan fîr denna %2.';
      Text001@1199198000 : TextConst 'ENU=%1: %2;NOR=%1: %2;SVE=%1 %2';
      Text002@1100525004 : TextConst 'ENU=No %1(s) exist for this %2.;NOR=Det finnes ingen %1 for denne %2.;SVE=Det finns inga %1 fîr den hÑr %2.';
      Text003@1100525005 : TextConst 'ENU=View existing %1(s),Create new %1;NOR=Vis eksisterende %1(er),opprett ny %1;SVE=Visa befintlig %1(s),Skapa ny %1';
      Text004@1100525006 : TextConst 'ENU=Specifying code for this %1 not supported.;NOR=è angi kode for denne %1 stõttes ikke.;SVE=Att ange kod fîr den hÑr %1 stîds inte.';
      Text005@1100525007 : TextConst 'ENU=%1 "%2" cannot be found.;NOR=Kan ikke finne %1 "%2";SVE=%1 "%2" kan inte hittas.';
      Text006@1100409000 : TextConst 'ENU="This Document Link relation can not be made. Please contact your System Administrator.\\(Values: LinkDocument2; %1)";NOR="Denne Dokumentkoblingsrelasjon kan ikke gjõres. Kontakt din systemadministrator\\\\(Values: LinkDocument2; %1)";SVE="Denna dokumentlÑnkrelation kan inte gîras. Kontakta din systemadministratîr\\(VÑrden: LÑnkDokument2; %1)"';
      gResetSource@1100528000 : Boolean;
      Text007@1100525000 : TextConst 'ENU=Not Posted,Posted;SVE=Ej bokfîrd,Bokfîrd';
      gDocumentCompany@1100529000 : Text;
      gDocumentProperties@1100527300 : Record 11012746;
      DocumentsSelected@1100527301 : Boolean;

    PROCEDURE OpenDocumentPropertiesLookup@1100525076(RecRef@1100525000 : RecordRef;DepartmentCode@1100528700 : Code[20]) : Code[20];
    VAR
      DocumentList@1100525001 : Page 11012407;
      DocumentProperties@1100525002 : Record 11012746;
    BEGIN
      FilterFromDocLinks(RecRef, DocumentProperties, '');

      DocumentList.SetVars(RecRef.RECORDID, DepartmentCode, FALSE, FALSE); // Set Vars

      DocumentList.SETTABLEVIEW(DocumentProperties);
      DocumentList.SETRECORD(DocumentProperties);
      DocumentList.LOOKUPMODE := TRUE;
      IF DocumentList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        DocumentList.GETRECORD(DocumentProperties);
        EXIT(DocumentProperties."No.");
      END ELSE BEGIN
        EXIT('');
      END;
    END;

    PROCEDURE OpenDocuments2@1100525019(VAR DocumentProperties@1100525000 : Record 11012746;RecRef@1100525003 : RecordRef;DepartmentCode@1100528700 : Code[20];Copy@1199198001 : Boolean;ByCompany@1199198002 : Boolean);
    VAR
      DocumentLink@1100525005 : Record 11012747;
      DocumentProperties2@1210190000 : Record 11012746;
      DocumentList@1199198000 : Page 11012407;
    BEGIN
      // This function opened the Word Documents List
      // Table Document Properties is opened whit filters

      DocumentLink.RESET;
      DocumentLink.SETCURRENTKEY("Record ID");
      DocumentLink.SETFILTER("Record ID", FORMAT(RecRef.RECORDID));
      DocumentLink.SETRANGE("Internal Company", COMPANYNAME);
      IF DocumentLink.FINDSET THEN
        REPEAT
          DocumentProperties.SETRANGE("No.", DocumentLink."Document No.");
          DocumentProperties.SETRANGE("Internal Company", COMPANYNAME);
          IF DocumentProperties.FINDFIRST THEN BEGIN
            DocumentProperties2 := DocumentProperties;
            DocumentProperties2.MARK(TRUE);
          END;
        UNTIL DocumentLink.NEXT = 0;

      DocumentProperties2.SETCURRENTKEY("Document No.","Creation Date","Creation Time");
      DocumentProperties2.ASCENDING(FALSE);
      DocumentProperties2.MARKEDONLY(TRUE);

      // Set Vars
      DocumentList.SetVars(RecRef.RECORDID, DepartmentCode, Copy, ByCompany);
      DocumentList.SETTABLEVIEW(DocumentProperties2);
      DocumentList.SETRECORD(DocumentProperties2);
      DocumentList.RUN;

      DocumentProperties.CLEARMARKS;
    END;

    PROCEDURE GetDocuments@1199198003(VAR DocumentProperties@1199198001 : Record 11012746;RecRef@1199198002 : RecordRef);
    VAR
      DocumentLink@1199198000 : Record 11012747;
    BEGIN
      // Mark Documents
      DocumentLink.SETCURRENTKEY("Record ID"); //mg, 05-07-11: M27801
      DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', RecRef.RECORDID));
      DocumentLink.SETRANGE("Internal Company", COMPANYNAME);
      IF DocumentLink.FINDSET THEN BEGIN
        REPEAT
          IF DocumentProperties.GET(DocumentLink."Document No.") THEN
            DocumentProperties.MARK(TRUE);
        UNTIL DocumentLink.NEXT = 0;
      END;
    END;

    PROCEDURE GetDocumentsComp@1100525014(VAR DocumentProperties@1199198001 : Record 11012746;RecRef@1199198002 : RecordRef;CurrentCompany@1100525000 : Text[30]);
    VAR
      DocumentLink@1199198000 : Record 11012747;
    BEGIN
      // Mark Documents
      DocumentLink.SETCURRENTKEY("Record ID"); //mg, 05-07-11: M27801
      IF CurrentCompany <> '' THEN BEGIN
        DocumentLink.SETRANGE("Internal Company", CurrentCompany);
      END;
      DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', RecRef.RECORDID));
      IF DocumentLink.FINDSET THEN BEGIN
        REPEAT
          IF DocumentProperties.GET(DocumentLink."Document No.") THEN
            DocumentProperties.MARK(TRUE);
        UNTIL DocumentLink.NEXT = 0;
      END;
    END;

    PROCEDURE GetShortDescription@1199198005(DocumentProperties@1199198000 : Record 11012746) : Text[30];
    VAR
      DocumentLink@1199198006 : Record 11012747;
      RecRef@1199198001 : RecordRef;
      KeyRef@1199198002 : KeyRef;
      RID@1199198007 : RecordID;
      String@1199198003 : Text[250];
      i@1199198004 : Integer;
    BEGIN
      // Function return a short description for the reference in a document
      DocumentLink.RESET;
      DocumentLink.SETRANGE("Document No.", DocumentProperties."No.");
      DocumentLink.SETRANGE(Source, TRUE);
      IF DocumentLink.FINDFIRST THEN BEGIN
        IF FORMAT(DocumentLink."Record ID") <> '' THEN BEGIN
          RID := DocumentLink."Record ID";
          RecRef.OPEN(RID.TABLENO, FALSE, DocumentLink."Internal Company");
          IF RecRef.GET(RID) THEN BEGIN
            KeyRef := RecRef.KEYINDEX(1);
            FOR i := 1 TO KeyRef.FIELDCOUNT DO BEGIN
              IF String <> '' THEN
                String := FORMAT(STRSUBSTNO(String + ', '));
              String := FORMAT(STRSUBSTNO(String + FORMAT(KeyRef.FIELDINDEX(i))));
            END;
          END;
        END;
      END;

      // Return Source Document Link, if empty then return Document No.
      IF String <> '' THEN
        EXIT(COPYSTR(String, 1, 30))
      ELSE
        EXIT(DocumentProperties."Document No.");
    END;

    PROCEDURE GetLongDescription@1199198006(DocumentLink@1199198002 : Record 11012747) : Text[1024];
    VAR
      RID@1199198001 : RecordID;
      RecRef@1100525006 : RecordRef;
      FieldRef@1199198006 : FieldRef;
      KeyRef@1100525000 : KeyRef;
      String@1100525004 : Text[1024];
      IndexString@1199198003 : Text[1024];
      i@1100525003 : Integer;
      Field@1199198004 : Integer;
      Text001@1100525002 : TextConst 'ENU=Document Link not found in company "%2". (Record ID %1);NOR=Dokumentlinken ble ikke funnet firma "%2". (Post-ID %1);SVE=DokumentlÑnken hittades inte i fîretag "%2". (Post-ID %1)';
    BEGIN
      // Function return a long description and is used for the Document Links form
      WITH DocumentLink DO BEGIN
        IF FORMAT("Record ID") <> '' THEN BEGIN
          RID := "Record ID";
          RecRef.OPEN(RID.TABLENO, FALSE, DocumentLink."Internal Company");
          IF NOT RecRef.GET(RID) THEN
            EXIT(STRSUBSTNO(Text001, FORMAT(RID), DocumentLink."Internal Company"));

          KeyRef := RecRef.KEYINDEX(1);

          // No exceptions defined
          // filter out the string field from the keyindex
          IndexString := DELCHR(FORMAT(RecRef.KEYINDEX(1)), '=', 'Field');

          FOR i := 1 TO KeyRef.FIELDCOUNT DO BEGIN
            IF String <> '' THEN
              String += ', ';

            EVALUATE(Field, SELECTSTR(i, IndexString));
            FieldRef := RecRef.FIELD(Field);

            IF FORMAT(FieldRef.VALUE) <> '' THEN BEGIN
              // if filter expression filled, return only the fields that not found in the filter expression
              IF "Filter Expression" <> '' THEN BEGIN
                IF STRPOS("Filter Expression", STRSUBSTNO('WHERE(Field' + FORMAT(Field))) = 0 THEN BEGIN
                  // If one field in key than show only the field value. This cases is used for exceptions.
                  // Table 36 has 2 fields in key, but we show only one field without field caption.
                  CASE TRUE OF
                    (RecRef.NUMBER = 11072055) OR
                    (RecRef.NUMBER = 36) OR (RecRef.NUMBER = 38): String += FORMAT(FieldRef);
                    // if key more than 2 fields, add the exceptions here for each table and field
                  END;
                END;
              END ELSE BEGIN
                // if one field in key than show only the field value.
                IF KeyRef.FIELDCOUNT = 1 THEN
                  String += FORMAT(FieldRef)
                ELSE
                  String += FieldRef.CAPTION + ': ' + FORMAT(FieldRef);
              END;
            END;
          END;

          String += GetFieldDescription(RecRef);

          EXIT(COPYSTR(String, 1, 1024));
        END;
      END;
    END;

    PROCEDURE GetFieldDescription@1100525006(RecRef@1100525000 : RecordRef) retValue : Text[100];
    VAR
      Field@1100525001 : Record 2000000041;
      FieldRef@1100525002 : FieldRef;
    BEGIN
      Field.SETRANGE(TableNo, RecRef.NUMBER);
      Field.SETFILTER(FieldName, '%1|%2', 'Description', 'Name');
      IF Field.FINDFIRST THEN BEGIN
        FieldRef := RecRef.FIELD(Field."No.");
        IF FORMAT(FieldRef.VALUE) <> '' THEN
          EXIT(COPYSTR(STRSUBSTNO(' (' + FORMAT(FieldRef.VALUE) + ')'), 1, MAXSTRLEN(retValue)));
      END;

      EXIT('');
    END;

    PROCEDURE GetProjectNo@1199198008(No@1199198001 : Code[20]) : Code[20];
    VAR
      DocumentLink@1199198000 : Record 11012747;
      RID@1199198002 : RecordID;
      RecRef@1199198003 : RecordRef;
    BEGIN
      // Get Project No
      DocumentLink.RESET;
      DocumentLink.SETRANGE("Document No.", No);
      DocumentLink.SETRANGE("Table No.", DATABASE::Job);
      DocumentLink.SETRANGE("Internal Company", COMPANYNAME);
      IF DocumentLink.FINDSET THEN BEGIN
        REPEAT
          IF FORMAT(DocumentLink."Record ID") <> '' THEN BEGIN
            RID := DocumentLink."Record ID";
            RecRef := RID.GETRECORD();
            EXIT(FORMAT(RecRef.FIELD(1)));
          END;
        UNTIL DocumentLink.NEXT = 0;
      END;

      EXIT('');
    END;

    PROCEDURE GetSourceLinkRID@1199198013(SourceLinkRID@1199198000 : RecordID) : Text[30];
    VAR
      RecRef@1199198001 : RecordRef;
      KeyRef@1199198002 : KeyRef;
      String@1199198004 : Text[250];
      i@1199198003 : Integer;
    BEGIN
      // First RID is always the source record
      RecRef := SourceLinkRID.GETRECORD;

      CASE RecRef.NUMBER OF
        36,38: EXIT(FORMAT(RecRef.FIELD(3)));

        ELSE
          BEGIN
            KeyRef := RecRef.KEYINDEX(1);

            FOR i := 1 TO KeyRef.FIELDCOUNT DO BEGIN
              IF String <> '' THEN
                String += '-';

              String += FORMAT(KeyRef.FIELDINDEX(i));
            END;

            EXIT(COPYSTR(String, 1, 20));
          END;
      END; // END CASE
    END;

    PROCEDURE GetInfo@1100525009(RecRef@1100525004 : RecordRef) : Integer;
    BEGIN
      EXIT(GetInfoFiltered(RecRef, FALSE));
    END;

    PROCEDURE GetInfoFiltered@1100409002(RecRef@1100525004 : RecordRef;FilterCreatedByFieldService@1100409000 : Boolean) : Integer;
    VAR
      DocumentMgtSetup@1100525000 : Record 11071831;
      CompanyInformation@1100528700 : Record 79;
      DocumentProperties@1100525001 : Record 11012746;
      DocumentLink@1100525002 : Record 11012747;
      i@1100525003 : Integer;
    BEGIN
      DocumentMgtSetup.GET;
      CompanyInformation.GET;
      i := 0;
      DocumentLink.SETCURRENTKEY("Record ID"); //db, 06-05-11: M25697
      DocumentLink.SETRANGE("Table No.", RecRef.NUMBER);
      DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', RecRef.RECORDID()));
      DocumentLink.SETRANGE("Internal Company", COMPANYNAME);
      IF DocumentLink.FINDSET THEN BEGIN
        REPEAT
          DocumentProperties.SETRANGE("No.", DocumentLink."Document No.");
          IF (NOT CompanyInformation."Archive Company") OR (DocumentMgtSetup."Show Only Own Documents") THEN // See cod11012432
            DocumentProperties.SETRANGE("Internal Company", COMPANYNAME);
          IF FilterCreatedByFieldService THEN
            DocumentProperties.SETRANGE("Created by Field Service", TRUE);
          i += DocumentProperties.COUNT;
        UNTIL DocumentLink.NEXT = 0;
      END;

      EXIT(i)
    END;

    PROCEDURE CreateOneDocumentLink@1100528100(DocumentProperties@1199198001 : Record 11012746;DocLinkRID@1199198003 : RecordID);
    VAR
      ArrDocLinkRID@1100528100 : ARRAY [5] OF RecordID;
    BEGIN
      // Create Document Link when creating a document
      ArrDocLinkRID[1] := DocLinkRID;
      CreateDocumentLinkComp(DocumentProperties, ArrDocLinkRID, COMPANYNAME);
    END;

    PROCEDURE CreateDocumentLink@1199198007(DocumentProperties@1199198001 : Record 11012746;DocLinkRID@1199198003 : ARRAY [20] OF RecordID);
    BEGIN
      // Create Document Links when creating a document
      CreateDocumentLinkComp(DocumentProperties, DocLinkRID, COMPANYNAME);
    END;

    PROCEDURE CreateDocumentLinkComp@1100528720(DocumentProperties@1199198001 : Record 11012746;DocLinkRID@1199198003 : ARRAY [20] OF RecordID;CurrentCompany@1100528700 : Text[30]);
    VAR
      DocumentLink@1199198000 : Record 11012747;
      SeqNo@1199198002 : Integer;
      i@1199198004 : Integer;
    BEGIN
      DocumentLink.SETRANGE("Document No.", DocumentProperties."No.");
      IF DocumentLink.FINDLAST THEN
        SeqNo := DocumentLink."Seq. No." + 10000
      ELSE
        SeqNo := 10000;

      FOR i := 1 TO ARRAYLEN(DocLinkRID) DO BEGIN
        IF FORMAT(DocLinkRID[i]) <> '' THEN BEGIN
          DocumentLink.INIT;
          DocumentLink."Document No." := DocumentProperties."No.";
          DocumentLink."Seq. No." := SeqNo;
          DocumentLink."Table No." := DocLinkRID[i].TABLENO;
          DocumentLink."Filter Expression" := GetFilterExpression(DocLinkRID[i]);
          DocumentLink."Internal Company" := CurrentCompany;
          DocumentLink."Record ID" := DocLinkRID[i];
          DocumentLink.Source := (i = 1);
          IF NOT DocumentLinkExists(DocumentLink) THEN BEGIN
            DocumentLink.INSERT(TRUE); //true added: kzwerver, 121017, Project Site (CTB Project Portal)
            SeqNo += 10000;
          END;
        END;
      END;
    END;

    PROCEDURE GetAdditionalDocumentLinksFromMultipleRecordIDs@1100527803(VAR DocLinkRIDOriginal@1100527801 : ARRAY [20] OF RecordID;VAR DocLinkRIDAdditional@1100527800 : ARRAY [20] OF RecordID);
    VAR
      DocLinkRIDTemp@1100527802 : ARRAY [10] OF RecordID;
      i@1100527803 : Integer;
      j@1100527804 : Integer;
    BEGIN
      FOR i:=1 TO ARRAYLEN(DocLinkRIDOriginal) DO BEGIN
        CLEAR(DocLinkRIDTemp);
        DoGetAdditionalDocumentLinksFromRecordID(DocLinkRIDOriginal[i], DocLinkRIDTemp,TRUE);
        FOR  j:=1 TO ARRAYLEN(DocLinkRIDTemp) DO BEGIN
          IF (FORMAT(DocLinkRIDTemp[j]) <> '') THEN
            AddRecIDItemToArray(DocLinkRIDTemp[j],DocLinkRIDAdditional);
        END;
      END;
    END;

    PROCEDURE GetOnlyAdditionalDocumentLinksFromMultipleRecordIDs@1100527809(VAR DocLinkRIDOriginal@1100527801 : ARRAY [20] OF RecordID;VAR DocLinkRIDAdditional@1100527800 : ARRAY [20] OF RecordID);
    VAR
      DocLinkRIDTemp@1100527802 : ARRAY [10] OF RecordID;
      i@1100527803 : Integer;
      j@1100527804 : Integer;
    BEGIN
      FOR i:=1 TO ARRAYLEN(DocLinkRIDOriginal) DO BEGIN
        CLEAR(DocLinkRIDTemp);
        DoGetAdditionalDocumentLinksFromRecordID(DocLinkRIDOriginal[i], DocLinkRIDTemp,FALSE);
        FOR  j:=1 TO ARRAYLEN(DocLinkRIDTemp) DO BEGIN
          IF (FORMAT(DocLinkRIDTemp[j]) <> '') THEN
            AddRecIDItemToArray(DocLinkRIDTemp[j],DocLinkRIDAdditional);
        END;
      END;
    END;

    PROCEDURE GetAdditionalDocumentLinksFromRecordID@1100527800(DocLinkRID@1100527800 : RecordID;VAR DocLinkRIDArray@1100527801 : ARRAY [20] OF RecordID);
    BEGIN
      DoGetAdditionalDocumentLinksFromRecordID(DocLinkRID,DocLinkRIDArray,TRUE);
    END;

    LOCAL PROCEDURE DoGetAdditionalDocumentLinksFromRecordID@1100527801(DocLinkRID@1100527800 : RecordID;VAR DocLinkRIDArray@1100527801 : ARRAY [20] OF RecordID;IncludeSource@1100527803 : Boolean);
    VAR
      RecRef@1100527804 : RecordRef;
      AdditionalDocumentLink@1100527805 : Record 11071834;
      FieldRef@1100527808 : FieldRef;
      iArrayCount@1100527811 : Integer;
      FieldValue@1100527812 : ARRAY [2] OF Variant;
      RecId@1100527802 : RecordID;
    BEGIN
      iArrayCount := 1;

      IF (IncludeSource) THEN BEGIN
          DocLinkRIDArray[iArrayCount] := DocLinkRID;
          iArrayCount := iArrayCount + 1;
      END;

      AdditionalDocumentLink.SETRANGE("Source Doc. Link Table No.",DocLinkRID.TABLENO);
      AdditionalDocumentLink.SETRANGE(Linked,TRUE);
      IF (AdditionalDocumentLink.FINDSET) THEN
      BEGIN
        REPEAT
          CLEAR(FieldValue);
          IF ( NOT CheckForSpecificFieldReference(DocLinkRID,AdditionalDocumentLink."Additional Doc. Link Table No.",FieldValue)) THEN BEGIN
            IF RecRef.GET(DocLinkRID) THEN BEGIN
              FieldRef:= RecRef.FIELD(AdditionalDocumentLink."Key Field 1");
              FieldValue[1] :=FieldRef.VALUE;
              IF (AdditionalDocumentLink."Key Field 2" <> 0) THEN BEGIN
                FieldRef:= RecRef.FIELD(AdditionalDocumentLink."Key Field 2");
                FieldValue[2] :=FieldRef.VALUE;
              END;
            END;
          END;

          IF NOT (FORMAT(FieldValue[1]) = '') THEN
          BEGIN
            IF GetRecIdByPrimaryKeyValue(AdditionalDocumentLink."Additional Doc. Link Table No.",FieldValue,RecId) THEN
            BEGIN
              DocLinkRIDArray[iArrayCount] := RecId;
              iArrayCount := iArrayCount + 1;
            END;
          END;

        UNTIL AdditionalDocumentLink.NEXT = 0
      END;
    END;

    PROCEDURE AddAdditionalDocumentLinksFromTempTable@1100527805(VAR TempDocumentLink@1100527800 : TEMPORARY Record 11012747;VAR DocumentCount@1100527806 : Integer;VAR DocumentLinkCount@1100527805 : Integer);
    VAR
      DocumentLink@1100527801 : Record 11012747;
      DocNo@1100527802 : Code[20];
      SequenceNo@1100527803 : Integer;
      RecID@1100527804 : RecordID;
    BEGIN
      IF NOT (TempDocumentLink.ISTEMPORARY) THEN
        EXIT;

      IF TempDocumentLink.FINDSET THEN BEGIN
        REPEAT
          DocumentLink.RESET;
          DocumentLink.SETRANGE("Document No.",TempDocumentLink."Document No.");
          DocumentLink.SETRANGE("Record ID",TempDocumentLink."Record ID");
          IF (DocumentLink.FINDFIRST) THEN
            TempDocumentLink.DELETE;
        UNTIL TempDocumentLink.NEXT = 0;
      END;

      DocumentLink.LOCKTABLE;
      IF TempDocumentLink.FINDSET THEN BEGIN
        REPEAT
          IF TempDocumentLink."Document No." <> DocNo THEN BEGIN
            DocumentCount +=1;
            DocNo := TempDocumentLink."Document No." ;
            SequenceNo := GetFirstFreeSeqNo(DocNo);
          END ELSE BEGIN
            SequenceNo += 1000;
          END;

          DocumentLinkCount += 1;
          RecID := TempDocumentLink."Record ID";

          DocumentLink.INIT;
          DocumentLink.COPY(TempDocumentLink);
          DocumentLink."Seq. No." := SequenceNo;
          DocumentLink."Filter Expression" := GetFilterExpression(RecID);
          DocumentLink."Table No." := RecID.TABLENO;
          DocumentLink.INSERT;
        UNTIL TempDocumentLink.NEXT = 0;
      END;
      COMMIT;
    END;

    LOCAL PROCEDURE GetRecIdByPrimaryKeyValue@1100527802(TableNo@1100527802 : Integer;KeyValue@1100527801 : ARRAY [2] OF Variant;VAR RecId@1100527800 : RecordID) : Boolean;
    VAR
      RecRef@1100527803 : RecordRef;
      FieldRef@1100527804 : FieldRef;
      i@1100527805 : Integer;
      Value@1100528500 : Variant;
    BEGIN
      //assume the primary key of the target table is in ascending order, compared to the table fields and without any gabs.
      RecRef.OPEN(TableNo);

      FOR i := 1 TO ARRAYLEN(KeyValue) DO BEGIN
        Value := KeyValue[i];
        IF (Value.ISTEXT OR Value.ISCODE) THEN BEGIN
          FieldRef := RecRef.FIELDINDEX(i);
          FieldRef.SETRANGE(KeyValue[i]);
        END;
      END;

      IF (RecRef.FINDFIRST) THEN BEGIN
        RecId := RecRef.RECORDID;
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE CheckForSpecificFieldReference@1100527813(RecId@1100527800 : RecordID;TargetTableNo@1100527803 : Integer;VAR FieldValue@1100527801 : ARRAY [2] OF Variant) : Boolean;
    VAR
      RecRef@1100527802 : RecordRef;
      WorkOrder@1100527804 : Record 11229279;
      ServiceOrder@1100527805 : Record 11012823;
      ResourceRequest@1100527806 : Record 11124901;
      ServiceCall@1100527808 : Record 11012822;
      ServiceContract@1100527809 : Record 11012812;
      ServiceLocation@1100527810 : Record 11012801;
      ServiceObject@1100527811 : Record 11071691;
      MaintenanceManagement@1100527812 : Codeunit 11012829;
      ContractNo@1100527813 : Code[20];
    BEGIN
      IF (RecRef.GET(RecId)) THEN BEGIN
        CASE RecId.TABLENO  OF
          DATABASE::"Work Order":
          BEGIN
            RecRef.SETTABLE(WorkOrder);

            IF ((WorkOrder."Source Type" = WorkOrder."Source Type"::Project) AND (TargetTableNo =  DATABASE::Job)) THEN
              FieldValue[1] := WorkOrder."Source No.";

            IF ((WorkOrder."Source Type" = WorkOrder."Source Type"::ServiceOrder) AND (TargetTableNo =   DATABASE::"Service Order")) THEN
              FieldValue[1] := WorkOrder."Source No.";

            IF ((WorkOrder."Source Type" = WorkOrder."Source Type"::ServiceOrder) AND (TargetTableNo =   DATABASE::"Service Location")) THEN
            BEGIN
               IF (ServiceOrder.GET(WorkOrder."Source No.")) THEN
                      FieldValue[1] := ServiceOrder."Service Location No.";
            END;
            IF ((WorkOrder."Source Type" = WorkOrder."Source Type"::ServiceOrder) AND (TargetTableNo = DATABASE::Contact)) THEN BEGIN
              IF (ServiceOrder.GET(WorkOrder."Source No.")) THEN
                GetContactNoFromBusinessRelation(ServiceOrder."Customer No.", FieldValue[1]);
            END;
          END;
          DATABASE::"Resource Request":
          BEGIN
            RecRef.SETTABLE(ResourceRequest);
            IF ((ResourceRequest."Source Type" = ResourceRequest."Source Type"::ServiceOrder) AND  (TargetTableNo = DATABASE::"Service Order")) THEN
                FieldValue[1] := ResourceRequest."Source No.";

            IF ((ResourceRequest."Source Type" = ResourceRequest."Source Type"::Project) AND  (TargetTableNo = DATABASE::Job)) THEN
                FieldValue[1] := ResourceRequest."Source No.";

            IF ((ResourceRequest."Source Type" = ResourceRequest."Source Type"::Customer) AND  (TargetTableNo = DATABASE::Customer)) THEN
              FieldValue[1] := ResourceRequest."Source No.";
          END;

          DATABASE::"Service Order":
          BEGIN
            IF (TargetTableNo = DATABASE::Contact) THEN BEGIN
              RecRef.SETTABLE(ServiceOrder);
              GetContactNoFromBusinessRelation(ServiceOrder."Customer No.", FieldValue[1]);
            END;
          END;

          DATABASE::"Service Call":
          BEGIN
            IF (TargetTableNo = DATABASE::Contact) THEN BEGIN
              RecRef.SETTABLE(ServiceCall);
              GetContactNoFromBusinessRelation(ServiceCall."Customer No.",FieldValue[1]);
            END;
          END;

          DATABASE::"Service-Contract":
          BEGIN
            IF (TargetTableNo = DATABASE::Contact) THEN BEGIN
              RecRef.SETTABLE(ServiceContract);
              GetContactNoFromBusinessRelation(ServiceContract."Customer No.", FieldValue[1]);
            END;
          END;

          DATABASE::"Service Location":
          BEGIN
            IF (TargetTableNo = DATABASE::Contact) THEN BEGIN
              RecRef.SETTABLE(ServiceLocation);
              GetContactNoFromBusinessRelation(ServiceLocation."Customer No.", FieldValue[1]);
            END;
          END;

          DATABASE::"Service-Object":
          BEGIN
            IF (TargetTableNo = DATABASE::Contact) THEN BEGIN
              RecRef.SETTABLE(ServiceObject);
              ContractNo := MaintenanceManagement.GetActualContractsForObject(ServiceObject."No.",TODAY);

              IF (ServiceContract.GET(ContractNo)) THEN
                 GetContactNoFromBusinessRelation(ServiceContract."Customer No.", FieldValue[1]);

              IF (FORMAT(FieldValue[1]) = '') THEN BEGIN
                IF (ServiceLocation.GET(ServiceObject."Service Location No." )) THEN
                   GetContactNoFromBusinessRelation(ServiceLocation."Customer No.", FieldValue[1]);
              END;
            END;
          END;

        END;
        EXIT (FORMAT(FieldValue[1]) <> '');
      END;
    END;

    PROCEDURE ArchiveDocumentLinks@1100528721(RecRef@1100528700 : RecordRef;ArchiveCompany@1100528701 : Text[30];DeleteInCurrentCompany@1100528702 : Boolean);
    VAR
      PossibleDocumentLink@1100528705 : Record 11012748;
      DocumentLink@1100528703 : Record 11012747;
      DocumentLink2@1100528704 : Record 11012747;
    BEGIN
      PossibleDocumentLink.SETRANGE("Table No.", RecRef.NUMBER);
      IF PossibleDocumentLink.ISEMPTY THEN
        EXIT;

      DocumentLink.SETCURRENTKEY("Record ID");
      DocumentLink.SETRANGE("Table No.", RecRef.NUMBER);
      DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', RecRef.RECORDID));
      DocumentLink.SETRANGE("Internal Company", COMPANYNAME);
      IF DocumentLink.FINDSET(TRUE) THEN BEGIN
        REPEAT
          IF DeleteInCurrentCompany THEN BEGIN
            DocumentLink."Internal Company" := ArchiveCompany;
            DocumentLink.MODIFY;
          END ELSE BEGIN
            DocumentLink2.TRANSFERFIELDS(DocumentLink);
            DocumentLink2."Seq. No." := GetFirstFreeSeqNo(DocumentLink2."Document No.");
            DocumentLink2."Internal Company" := ArchiveCompany;
            DocumentLink2.INSERT;
          END;
        UNTIL DocumentLink.NEXT = 0;
      END;
    END;

    PROCEDURE GetFilterExpression@1199198015(DocLinkRID@1199198000 : RecordID) : Text[100];
    VAR
      PossibleDocumentLink@1199198004 : Record 11012748;
      RecRef@1199198003 : RecordRef;
    BEGIN
      IF DocLinkRID.TABLENO = 0 THEN
        EXIT;
      // Get the FilterExpression
      RecRef := DocLinkRID.GETRECORD();
      RecRef.SETRECFILTER();

      PossibleDocumentLink.SETRANGE("Table No.", DocLinkRID.TABLENO);
      IF PossibleDocumentLink.FINDSET THEN BEGIN
        REPEAT
          RecRef.FILTERGROUP(2);
          RecRef.SETVIEW(PossibleDocumentLink."Filter Expression");
          RecRef.FILTERGROUP(0);
          IF RecRef.FINDFIRST THEN
            EXIT(PossibleDocumentLink."Filter Expression");

        UNTIL PossibleDocumentLink.NEXT = 0;
      END;

      EXIT('');
    END;

    PROCEDURE FillDefaultDocumentLink@1199198009(DocumentProperties@1199198003 : Record 11012746;FromDocType@1100525000 : Boolean);
    VAR
      DocumentLink@1199198000 : Record 11012747;
    BEGIN
      // Fill Mandatory Document Links into the Document Link table
      FillDefaultDocumentLinkTable(DocumentProperties, DocumentLink, FromDocType);
    END;

    PROCEDURE FillDefaultDocumentLinkTable@1199197400(DocumentProperties@1199198003 : Record 11012746;VAR DocumentLink@1199197400 : Record 11012747;FromDocType@1100525000 : Boolean);
    VAR
      DefaultDocumentLink@1199198000 : Record 11012749;
      SeqNo@1199198002 : Integer;
    BEGIN
      // Fill Mandatory Document Links into the Document Link table (which can be a temp table)
      WITH DocumentProperties DO BEGIN
        IF FromDocType THEN BEGIN
          DefaultDocumentLink.SETRANGE("Related To", DefaultDocumentLink."Related To"::"Document Type");
          DefaultDocumentLink.SETRANGE("Document Type", "Document Type");
        END ELSE BEGIN
          DefaultDocumentLink.SETRANGE("Related To", DefaultDocumentLink."Related To"::"Document Template");
          DefaultDocumentLink.SETRANGE("Document Group", "Document Group");
          DefaultDocumentLink.SETRANGE("Template Code", "Document Template");
        END;

        IF DefaultDocumentLink.FINDSET THEN BEGIN
          DocumentLink.RESET;
          DocumentLink.SETRANGE("Document No.", "No.");
          IF DocumentLink.FINDLAST THEN
            SeqNo := DocumentLink."Seq. No." + 10000
          ELSE
            SeqNo := 10000;

          REPEAT
            DocumentLink.RESET;
            DocumentLink.SETRANGE("Document No.", "No.");
            DocumentLink.SETRANGE("Table No.", DefaultDocumentLink."Table No.");
            DocumentLink.SETRANGE("Filter Expression", DefaultDocumentLink."Filter Expression");
            DocumentLink.SETRANGE("Internal Company", "Internal Company");
            DefaultDocumentLink.SETRANGE("Table No.", DefaultDocumentLink."Table No.");
            DefaultDocumentLink.SETRANGE("Filter Expression", DefaultDocumentLink."Filter Expression");
            IF DocumentLink.COUNT < DefaultDocumentLink.COUNT THEN BEGIN
              //check whether at least same number of links already exists call C-027709
              DocumentLink.INIT;
              DocumentLink."Document No." := "No.";
              DocumentLink."Seq. No." := SeqNo;
              DocumentLink."Table No." := DefaultDocumentLink."Table No.";
              DocumentLink."Filter Expression" := DefaultDocumentLink."Filter Expression";
              DocumentLink."Internal Company" := "Internal Company";
              DocumentLink.INSERT;
              SeqNo += 10000;
            END;
            DefaultDocumentLink.SETRANGE("Table No.");
            DefaultDocumentLink.SETRANGE("Filter Expression");
          UNTIL DefaultDocumentLink.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE FilterFromDocLinks@1100525008(RecRef@1100525000 : RecordRef;VAR DocumentProperties@1100525001 : Record 11012746;CurrentCompany@1100525003 : Text[30]);
    VAR
      DocumentLink@1100525002 : Record 11012747;
    BEGIN
      DocumentLink.SETCURRENTKEY("Record ID"); //mg, 05-07-11: M27801
      IF CurrentCompany <> '' THEN BEGIN
        DocumentLink.SETRANGE("Internal Company", CurrentCompany);
      END;
      DocumentLink.SETRANGE("Table No.", RecRef.NUMBER);
      DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', RecRef.RECORDID));
      IF DocumentLink.FINDSET THEN BEGIN
        REPEAT
          IF DocumentProperties.GET(DocumentLink."Document No.") THEN
            DocumentProperties.MARK(TRUE);
        UNTIL DocumentLink.NEXT = 0;
      END;

      DocumentProperties.MARKEDONLY(TRUE);
    END;

    PROCEDURE HandleRenameDocumentLink@1210190012(lvCompanyname@1210190000 : Text[30];OldRID@1100525001 : RecordID;NewRID@1100525002 : RecordID);
    VAR
      DocumentProperties@1100525003 : Record 11012746;
      DocumentLink@1100525000 : Record 11012747;
    BEGIN
      // Handle Rename Document Links. Search alway first in document properties whit filter on field
      // "Internal Company

      WITH DocumentProperties DO BEGIN
        SETRANGE("Internal Company", lvCompanyname);
        IF FINDSET THEN BEGIN
          REPEAT
            DocumentLink.SETRANGE("Document No.", "No.");
            DocumentLink.SETRANGE("Table No.", OldRID.TABLENO);
            DocumentLink.SETFILTER("Record ID",  STRSUBSTNO('''%1''',OldRID));
            DocumentLink.SETRANGE("Internal Company", "Internal Company");
            IF DocumentLink.FINDSET THEN BEGIN
              REPEAT
                DocumentLink."Record ID" := NewRID;
                DocumentLink.MODIFY(FALSE);
              UNTIL DocumentLink.NEXT = 0;
            END;
          UNTIL NEXT = 0;
        END;
      END;
    END;

    PROCEDURE CopyDocumentLink@1199198010(OldDocumentPropertiesNo@1199198000 : Code[20];NewDocumentPropertiesNo@1199198001 : Code[20];CopyOnlyFilledLinks@1100528700 : Boolean);
    VAR
      DocumentLink@1199198002 : Record 11012747;
      NewDocumentLink@1199198003 : Record 11012747;
      ID@1100528701 : Text[250];
      CopyLink@1100528702 : Boolean;
    BEGIN
      // Copy Document Links
      DocumentLink.SETRANGE("Document No.", OldDocumentPropertiesNo);
      DocumentLink.SETRANGE("Internal Company", COMPANYNAME);
      IF DocumentLink.FINDSET THEN BEGIN
        REPEAT
          CopyLink := TRUE;
          IF CopyOnlyFilledLinks THEN BEGIN
            ID := FORMAT(DocumentLink."Record ID");
            CopyLink := (ID <> '');
          END;
          IF CopyLink THEN BEGIN
            NewDocumentLink.COPY(DocumentLink);
            NewDocumentLink."Document No." := NewDocumentPropertiesNo;
            NewDocumentLink.INSERT(TRUE);
          END;
        UNTIL DocumentLink.NEXT = 0;
      END;
    END;

    PROCEDURE DeleteDocumentLink@1100525004(DocumentProperties@1100525000 : Record 11012746);
    VAR
      DocumentLink@1100525001 : Record 11012747;
    BEGIN
      DocumentLink.SETRANGE("Document No.", DocumentProperties."No.");
      DocumentLink.SETRANGE("Internal Company", DocumentProperties."Internal Company");
      IF NOT DocumentLink.ISEMPTY THEN
        DocumentLink.DELETEALL(TRUE);
    END;

    PROCEDURE DeleteDocumentLink2@1100529400(DocumentProperties@1100525000 : Record 11012746;RecId@1100529400 : RecordID);
    VAR
      DocumentLink@1100525001 : Record 11012747;
    BEGIN
      DocumentLink.SETRANGE("Document No.", DocumentProperties."No.");
      DocumentLink.SETRANGE("Internal Company", DocumentProperties."Internal Company");
      DocumentLink.SETRANGE("Record ID", RecId);
      IF NOT DocumentLink.ISEMPTY THEN
        DocumentLink.DELETEALL;
    END;

    PROCEDURE DeleteDocumentLinksFromObject@1100528406(RecRef@1100525000 : RecordRef);
    BEGIN
      DeleteDocumentLinksInCompany(RecRef, COMPANYNAME);
    END;

    PROCEDURE DeleteDocumentLinksInCompany@1210190013(IRecRef@1210190001 : RecordRef;ICompanyName@1210190000 : Text[30]);
    BEGIN
      DeleteDocumentLinksByRecordIDInCompany(IRecRef.RECORDID, ICompanyName);
    END;

    PROCEDURE DeleteDocumentLinksByRecordID@1100528601(IRecordID@1100528600 : RecordID);
    BEGIN
      DeleteDocumentLinksByRecordIDInCompany(IRecordID, COMPANYNAME);
    END;

    PROCEDURE DeleteDocumentLinksByRecordIDInCompany@1100528602(IRecordID@1100528600 : RecordID;ICompanyName@1100528601 : Text[30]);
    VAR
      DocumentLink@1100528602 : Record 11012747;
    BEGIN
      DocumentLink.SETCURRENTKEY("Record ID");
      DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', IRecordID));
      DocumentLink.SETRANGE("Internal Company", ICompanyName);
      DocumentLink.DELETEALL(ICompanyName = COMPANYNAME);
    END;

    PROCEDURE CreateExternalDoc@1100525022(RecRef@1100525001 : RecordRef);
    VAR
      DocumentProperties@1100525002 : Record 11012746;
      DocumentLink@1100525000 : Record 11012747;
    BEGIN
      DocumentLink.RESET;
      DocumentLink.SETCURRENTKEY("Record ID"); //mg, 05-07-11: M27801
      DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', RecRef.RECORDID()));
      DocumentLink.SETRANGE(Source, TRUE);
      DocumentLink.SETRANGE("Internal Company", COMPANYNAME);
      IF DocumentLink.FINDFIRST THEN BEGIN
        CASE STRMENU(STRSUBSTNO(Text003, DocumentProperties.TABLECAPTION),
                                        1,
                                        STRSUBSTNO(Text000,DocumentProperties.TABLECAPTION,
                                        RecRef.CAPTION)) OF
          0: EXIT;
          1: ViewExternalDoc(1, RecRef);
          2: InsertAndViewExternalDoc(RecRef);
        END;
      END ELSE
        InsertAndViewExternalDoc(RecRef);
    END;

    PROCEDURE InsertAndViewExternalDoc@1100526500(RecRef@1100525004 : RecordRef);
    VAR
      DocumentProperties@1100525000 : Record 11012746;
      DocumentLink@1100525002 : Record 11012747;
    BEGIN
      DocumentProperties."External Document" := TRUE;
      DocumentProperties.INSERT(TRUE);

      DocumentLink.INIT;
      DocumentLink."Document No." := DocumentProperties."No.";
      DocumentLink."Seq. No." := 10000;
      DocumentLink."Table No." := RecRef.NUMBER;
      //DocumentLink."Filter Expression"
      DocumentLink."Internal Company" := COMPANYNAME;
      DocumentLink."Record ID" := RecRef.RECORDID();
      DocumentLink.VALIDATE(Source, TRUE);
      DocumentLink.INSERT(TRUE);

      COMMIT;
      ViewExternalDoc(0,RecRef);
    END;

    PROCEDURE ViewExternalDoc@1100525021(FormType@1100526502 : 'Card,List';RecRef@1100525003 : RecordRef);
    VAR
      DocumentProperties@1100525001 : Record 11012746;
      DocumentLink@1100525002 : Record 11012747;
    BEGIN
      DocumentLink.RESET;
      DocumentLink.SETCURRENTKEY("Record ID"); //mg, 05-07-11: M27801
      DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', RecRef.RECORDID()));
      DocumentLink.SETRANGE(Source, TRUE);
      DocumentLink.SETRANGE("Internal Company", COMPANYNAME);
      IF DocumentLink.ISEMPTY THEN BEGIN
        MESSAGE(Text002, DocumentProperties.TABLECAPTION, RecRef.CAPTION);
      //Doc is the main table, DocAddData is just the expansion part
        EXIT;
      END;

      DocumentProperties.CLEARMARKS;
      IF DocumentLink.FINDSET THEN BEGIN
        REPEAT
          DocumentProperties.GET(DocumentLink."Document No.");
          DocumentProperties.MARK(TRUE);
        UNTIL DocumentLink.NEXT = 0;
      END;

      DocumentProperties.MARKEDONLY(TRUE);
      IF FormType = FormType::List THEN
        PAGE.RUNMODAL(PAGE::"Document List", DocumentProperties)
      ELSE
        PAGE.RUNMODAL(PAGE::"External Document", DocumentProperties);
    END;

    PROCEDURE SetTable@1100525001(VAR DocumentLink@1100525000 : Record 11012747;Lookup@1100525001 : Boolean);
    VAR
      RecRef@1100528701 : RecordRef;
      RID@1100528700 : RecordID;
    BEGIN
      IF DocumentLink."Internal Company" <> '' THEN
        RecRef.OPEN(DocumentLink."Table No.", FALSE, DocumentLink."Internal Company")
      ELSE
        RecRef.OPEN(DocumentLink."Table No.");

      IF FORMAT(DocumentLink."Record ID") <> '' THEN BEGIN
        RID := DocumentLink."Record ID";
        RecRef.GET(RID);
      END ELSE BEGIN
        // SetProjectFilterForPlot causes SetPlot to not set current record. Therefore only do this when no Plot is selected yet
        IF Lookup THEN
          SetProjectFilterForPlot(DocumentLink, RecRef);
      END;

      CASE DocumentLink."Table No." OF
        11072003: SetProject(DocumentLink, RecRef, Lookup);
        11012500: SetPlot(DocumentLink, RecRef, Lookup);
        11012750: SetTryOut(DocumentLink, RecRef, Lookup);
        11012758: SetTryOutQuote(DocumentLink, RecRef, Lookup);
        11012763: SetTryOutQuoteVersion(DocumentLink, RecRef, Lookup);
        11012823: SetServiceOrder(DocumentLink, RecRef, Lookup);
        11229279: SetWorkOrder(DocumentLink, RecRef, Lookup);
        11012801: SetServiceLocation(DocumentLink, RecRef, Lookup);
        11012812: SetServiceContract(DocumentLink, RecRef, Lookup);
        11012151: SetEstimate(DocumentLink, RecRef, Lookup);
        11012507: SetDelivery(DocumentLink, RecRef, Lookup);
        11012100: SetDeliveredProject(DocumentLink, RecRef, Lookup);  //DP00846
        11012101: SetDeliveredObject(DocumentLink, RecRef, Lookup);
      //11012155: SetRecipe(DocumentLink, RecRef, Lookup);  //DP01090
        11020581: SetBaseRecipe(DocumentLink, RecRef, Lookup);  //DP00381
        11012912: SetInvestmentProposal(DocumentLink, RecRef, Lookup);
        11012004: SetExtensionContract(DocumentLink, RecRef, Lookup);
        5714:     SetResponsibilityCenter(DocumentLink, RecRef, Lookup);
        11012026: SetProjectPurchaseAction(DocumentLink, RecRef, Lookup);
        11229330: SetPurchaseRequisition(DocumentLink, RecRef, Lookup);  //DP01137
        11012450: SetComplaint(DocumentLink, RecRef, Lookup);
        11012456: SetProjectAssignment(DocumentLink, RecRef, Lookup);
        11012501: SetHouseModel(DocumentLink, RecRef, Lookup);     //
        11012509: SetOptionMainGroup(DocumentLink, RecRef, Lookup);
        11012504: SetOptionGroup(DocumentLink, RecRef, Lookup);
        11012505: SetOptionSubGroup(DocumentLink, RecRef, Lookup);
        11012502: SetOption(DocumentLink, RecRef, Lookup);
        11012551: SetPlantType(DocumentLink, RecRef, Lookup);
        11012554: SetPlantLocation(DocumentLink, RecRef, Lookup);
        11012552: SetPlantNumber(DocumentLink, RecRef, Lookup);
        11012540: SetPlantLeaseContract(DocumentLink, RecRef, Lookup);  //DP00331
        11072667: SetPlantVehicle(DocumentLink, RecRef, Lookup);  //DP00331
        11012556: SetPlantOrder(DocumentLink, RecRef, Lookup);
        11012557: SetPlantOrderLine(DocumentLink, RecRef, Lookup);  //DP00183
        11012559: SetExitOrder(DocumentLink, RecRef, Lookup);
        11012560: SetExitOrderLine(DocumentLink, RecRef, Lookup);  //DP00183
        11012564: SetPlantInspection(DocumentLink, RecRef, Lookup);  //DP00899
        11012565: SetRentalCorrection(DocumentLink, RecRef, Lookup);
        11020505: SetPlantTransportOrder(DocumentLink, RecRef, Lookup);
        11020507: SetPostedPlantTransportOrder(DocumentLink, RecRef, Lookup);
        11020517: SetPlantTransportRide(DocumentLink, RecRef, Lookup);
        11020520: SetPlantRequest(DocumentLink, RecRef, Lookup);
        11020552: SetPlantRentalFreeOrder(DocumentLink, RecRef, Lookup);
        11229918: SetPlantQuote(DocumentLink, RecRef, Lookup);
        11229935: SetPlantRentalAgreement(DocumentLink, RecRef, Lookup);
        11012910: SetStandardDevelopmentPhase(DocumentLink, RecRef, Lookup);
        11012940: SetRentalUnit(DocumentLink, RecRef, Lookup);
        11012941: SetRentalPackage(DocumentLink, RecRef, Lookup);  //DP00617
        11012752: SetContactFeature(DocumentLink, RecRef, Lookup);
        11012770: SetProvisionalWorkDocumentType(DocumentLink, RecRef, Lookup);
        23:       SetVendor(DocumentLink, RecRef, Lookup);
        5080:     SetTodo(DocumentLink, RecRef, Lookup);
        11012822: SetServiceCall(DocumentLink, RecRef, Lookup);
        11012005: SetProjecPrincipal(DocumentLink, RecRef, Lookup);
        11012018: SetProjectInstallment(DocumentLink, RecRef, Lookup);
        11012020: SetCommission(DocumentLink, RecRef, Lookup);
        11012021: SetSettlementSheet(DocumentLink, RecRef, Lookup);
        11012471: SetInstallmentMotivation(DocumentLink, RecRef, Lookup);
        11012240: SetParcel(DocumentLink, RecRef, Lookup);
        11012774: SetProvisionalWork(DocumentLink, RecRef, Lookup);
        112:      SetSalesInvoiceHeader(DocumentLink, RecRef, Lookup);
        38:       SetPurchaseHeader(DocumentLink, RecRef, Lookup);
        114:      SetSalesCrMemoHeader(DocumentLink, RecRef, Lookup);
        11012968: SetKOMOInstallationbyPlot(DocumentLink, RecRef, Lookup);
        36:       SetSalesHeader(DocumentLink, RecRef, Lookup);
        11012513: SetOptionQuoteHeader(DocumentLink, RecRef, Lookup);
        11020413: SetVendorCertificate(DocumentLink, RecRef, Lookup);
        11020587: SetLoanHeader(DocumentLink, RecRef, Lookup);
        11125986: SetQADeviation(DocumentLink, RecRef, Lookup);
        11126005: SetAccidentQA(DocumentLink, RecRef, Lookup);
        11125531: SetGetOrderSMF(DocumentLink, RecRef, Lookup);
        11125533: SetStandardInspectionSMF(DocumentLink, RecRef, Lookup); //*32793.n
        11125534: SetProjectInspectionSMF(DocumentLink, RecRef, Lookup);  //*32793.n
        11125535: SetInspectionSMF(DocumentLink, RecRef, Lookup);
        11012779: SetProvisionalWorkContact(DocumentLink, RecRef, Lookup); // jhoek.100111
        122:      SetPurchInvoiceHeader(DocumentLink, RecRef, Lookup);
        124:      SetPurchCredMemHeader(DocumentLink, RecRef, Lookup);
        11020630: SetProjectForecastHeader(DocumentLink, RecRef, Lookup);
        11012034: SetPrognosisHeader(DocumentLink, RecRef, Lookup);
        11020596: SetAssemblyYardNumberObject(DocumentLink, RecRef, Lookup);
        11012055: SetAdviceOrderLine(DocumentLink, RecRef, Lookup);
        11020665: SetWarrantyDataPurchaseOrder(DocumentLink, RecRef, Lookup); // RFC 337
        5200:     SetEmployee(DocumentLink, RecRef, Lookup); // jhoek.250511
        11012526: SetProjectMaterialReqLine(DocumentLink, RecRef, Lookup); //kkleermaker.n, 110822, M28687
        11020663: SetAssemblyObjectMatReqLine(DocumentLink, RecRef, Lookup); //kkleermaker.n, 110929, M29188
        11020670: SetFrostOutRegistration(DocumentLink, RecRef, Lookup);
        11020671: SetFrostOutRequest(DocumentLink, RecRef, Lookup);
        11071691: SetServiceObject(DocumentLink, RecRef, Lookup);
        11072055: SetSalesHeaderArchive(DocumentLink, RecRef, Lookup);
        11072651: SetDispatchNoteSiB(DocumentLink, RecRef, Lookup);  //DP00065
        11072653: SetInvoiceSiB(DocumentLink, RecRef, Lookup);  //DP00065
        5050:     SetContact(DocumentLink, RecRef, Lookup);
        18:       SetCustomer(DocumentLink, RecRef, Lookup);
        295:      SetReminderHeader(DocumentLink, RecRef, Lookup);
        11071816: SetComplex(DocumentLink, RecRef, Lookup);  //DP00095
        11071819: SetPremises(DocumentLink, RecRef, Lookup);  //DP00095
        27:       SetItem(DocumentLink, RecRef, Lookup);  // dp00116.n
        11012915: SetProjectDevelopment(DocumentLink, RecRef, Lookup);
        1230:     SetSepaDirectDebitMandate(DocumentLink, RecRef, Lookup); //DP00640
        11020334: SetStandardObject(DocumentLink, RecRef, Lookup); //DP00642
        11229833: SetPurchaseOrderLineGuarantee(DocumentLink, RecRef, Lookup);  //DP00561
        11071772: SetSUPRecordingLine(DocumentLink, RecRef, Lookup);  // dp00515.n
        11072193: SetChangeRequest(DocumentLink, RecRef, Lookup); //DP00545.n
        11125777: SetGlazingServiceCall(DocumentLink, RecRef, Lookup);//C020855
        11229900: SetRiskOpportunitySchedule(DocumentLink, RecRef, Lookup); //DP00732
        11229903: SetRiskLine(DocumentLink, RecRef, Lookup); //DP00732
        11229904: SetOpportunityLine(DocumentLink, RecRef, Lookup); //DP00732
        11072243: SetSettlementQuantity(DocumentLink, RecRef, Lookup); //DP00771
        11072245: SetPlotUnit(DocumentLink, RecRef, Lookup); //DP00771
        11072252: SetPlotSQRecordingLine(DocumentLink, RecRef, Lookup); //DP00771
        11072254: SetPlotRecordingListBaseLine(DocumentLink, RecRef, Lookup); //DP00771
        11072656: SetGS1Invoice(DocumentLink, RecRef, Lookup); //DP00881
        11229390: SetImplementationActivity(DocumentLink, RecRef, Lookup); //DP00913
        11125886: SetFieldServiceTransit(DocumentLink, RecRef, Lookup); //DP00966
        11125880: SetFieldServiceWorksheetTransitLine(DocumentLink, RecRef, Lookup); //DP00966
        120:      SetPurchRcptHeader(DocumentLink, RecRef, Lookup);
        11229311: SetProjectObject(DocumentLink, RecRef, Lookup);
        11124901: SetResourceRequest(DocumentLink, RecRef, Lookup);
        11125823: SetBimModel(DocumentLink, RecRef, Lookup);
        11125827: SetBimModelIfcFile(DocumentLink, RecRef, Lookup);
        11126011: SetSHWorkplan(DocumentLink, RecRef, Lookup);
        11126012: SetSHWorkplanParticipant(DocumentLink, RecRef, Lookup);
        11126025: SetSHWorkplanProcessReportDetail(DocumentLink, RecRef, Lookup);
        11071803: SetServiceSurvey(DocumentLink, RecRef, Lookup);
        11072350: SetINSBOUMaintInstruction(DocumentLink, RecRef, Lookup);
        11072351: SetINSBOUMaintInstructionLine(DocumentLink, RecRef, Lookup);
        11128785: SetNEN2767LTMPLine(DocumentLink, RecRef, Lookup);
        11012003: SetBudgetAdjustment(DocumentLink, Lookup);
        11229320: SetBankGuarantee(DocumentLink, Lookup);
        11012655: SetReturnedLossOrder(DocumentLink, RecRef, Lookup);
        5740:     SetTransferOrder(DocumentLink, RecRef, Lookup);
        5744:     SetTransferShipment(DocumentLink, RecRef, Lookup);
        5746:     SetTransferReceipt(DocumentLink, RecRef, Lookup);
        11020276: SetVendorWKACheck(DocumentLink, RecRef, Lookup);
        11012010: SetProjectElement(DocumentLink, RecRef, Lookup);
        11125907: SetGenIssue(DocumentLink, RecRef, Lookup);
      END; // END CASE

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetProjectFilterForPlot@1210190009(VAR DocumentLink@1100525004 : Record 11012747;VAR RecRef@1100525000 : RecordRef);
    VAR
      DocumentLink2@1210190000 : Record 11012747;
      RecRef2@1210190001 : RecordRef;
      FldRef@1210190003 : FieldRef;
      FldRef2@1210190004 : FieldRef;
      RID@1210190002 : RecordID;
    BEGIN
      DocumentLink2.SETCURRENTKEY("Document No.", "Seq. No.");
      DocumentLink2.SETRANGE("Document No.", DocumentLink."Document No.");
      DocumentLink2.SETFILTER("Seq. No.", '<%1', DocumentLink."Seq. No.");
      CASE DocumentLink."Table No." OF
        DATABASE::Plot: DocumentLink2.SETRANGE("Table No.", DATABASE::Job);
      END;
      // Find first before current document link
      IF DocumentLink2.FINDLAST THEN BEGIN
        IF FORMAT(DocumentLink2."Record ID") <> '' THEN BEGIN
          RID := DocumentLink2."Record ID";
          IF DocumentLink2."Internal Company" <> '' THEN
            RecRef2.OPEN(DocumentLink2."Table No.", FALSE, DocumentLink2."Internal Company")
          ELSE
            RecRef2.OPEN(DocumentLink2."Table No.");
          IF RecRef2.GET(RID) THEN BEGIN
            CASE DocumentLink."Table No." OF
              DATABASE::Plot:
                BEGIN
                  FldRef2 := RecRef2.FIELD(1); // Job."No."
                  FldRef := RecRef.FIELD(10); // Plot."Project No."
                  FldRef.SETRANGE(FldRef2.VALUE);
                END;
            END;
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE SetPlot@1100525005(VAR DocumentLink@1100525004 : Record 11012747;VAR RecRef@1100525000 : RecordRef;Lookup@1100525001 : Boolean);
    VAR
      Plot@1100525003 : Record 11012500;
      ActionResult@1100525002 : Action;
    BEGIN
      IF RecRef.HASFILTER THEN
        Plot.SETVIEW(RecRef.GETVIEW) //this is needed because SETTABLE removes filter! This is not what you read in the OLH. See mibuso.
      ELSE
        RecRef.SETTABLE(Plot);

      IF DocumentLink."Internal Company" <> '' THEN
        Plot.CHANGECOMPANY(DocumentLink."Internal Company");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Plot);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Plot);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetProject@1100525002(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525003 : RecordRef;Lookup@1100525002 : Boolean);
    VAR
      Project@1100525001 : Record 11072003;
      ActionResult@1100525000 : Action;
      PageNo@1100525005 : Integer;
    BEGIN
      RecRef.SETTABLE(Project);

      IF DocumentLink."Internal Company" <> '' THEN
        Project.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Project.SETVIEW(DocumentLink."Filter Expression");

      IF RefersToOtherCompany(DocumentLink) THEN
        PageNo := PAGE::"Job List IC";

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(PageNo, Project);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Project);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetTryOut@1100525012(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      TryOut@1100525004 : Record 11012750;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(TryOut);

      IF DocumentLink."Internal Company" <> '' THEN
        TryOut.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        TryOut.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, TryOut);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(TryOut);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetTryOutQuote@1100525016(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      TryOutQuote@1100525004 : Record 11012758;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(TryOutQuote);

      IF DocumentLink."Internal Company" <> '' THEN
        TryOutQuote.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        TryOutQuote.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, TryOutQuote);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(TryOutQuote);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetTryOutQuoteVersion@1100525026(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      TryOutQuoteVersion@1100525004 : Record 11012763;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(TryOutQuoteVersion);

      IF DocumentLink."Internal Company" <> '' THEN
        TryOutQuoteVersion.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        TryOutQuoteVersion.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, TryOutQuoteVersion);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(TryOutQuoteVersion);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetServiceOrder@1100525027(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ServiceOrder@1100525004 : Record 11012823;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(ServiceOrder);

      IF DocumentLink."Internal Company" <> '' THEN
        ServiceOrder.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ServiceOrder.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ServiceOrder);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ServiceOrder);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetWorkOrder@1100528003(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      WorkOrder@1100525004 : Record 11229279;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(WorkOrder);

      IF DocumentLink."Internal Company" <> '' THEN
        WorkOrder.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        WorkOrder.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, WorkOrder);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(WorkOrder);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetServiceLocation@1100525028(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ServiceLocation@1100525004 : Record 11012801;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(ServiceLocation);

      IF DocumentLink."Internal Company" <> '' THEN
        ServiceLocation.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ServiceLocation.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ServiceLocation);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ServiceLocation);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetServiceContract@1100525031(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ServiceContract@1100525004 : Record 11012812;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(ServiceContract);

      IF DocumentLink."Internal Company" <> '' THEN
        ServiceContract.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ServiceContract.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ServiceContract);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ServiceContract);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetEstimate@1100525032(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      Estimate@1100525004 : Record 11012151;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(Estimate);

      IF DocumentLink."Internal Company" <> '' THEN
        Estimate.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Estimate.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Estimate);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Estimate);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetDelivery@1100525033(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      Delivery@1100525004 : Record 11012507;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(Delivery);

      IF DocumentLink."Internal Company" <> '' THEN
        Delivery.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Delivery.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Delivery);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Delivery);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetDeliveredProject@1100529004(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      DeliveredProject@1100525004 : Record 11012100;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP00846
      RecRef.SETTABLE(DeliveredProject);

      IF DocumentLink."Internal Company" <> '' THEN
        DeliveredProject.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        DeliveredProject.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, DeliveredProject);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(DeliveredProject);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetDeliveredObject@1100525034(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      DeliveredObject@1100525004 : Record 11012101;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(DeliveredObject);

      IF DocumentLink."Internal Company" <> '' THEN
        DeliveredObject.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        DeliveredObject.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, DeliveredObject);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(DeliveredObject);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetBaseRecipe@1100528901(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      Recipe@1100525004 : Record 11020581;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP00381
      RecRef.SETTABLE(Recipe);

      IF DocumentLink."Internal Company" <> '' THEN
        Recipe.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Recipe.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Recipe);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Recipe);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetInvestmentProposal@1100525036(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      InvestmentProposal@1100525004 : Record 11012912;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(InvestmentProposal);

      IF DocumentLink."Internal Company" <> '' THEN
        InvestmentProposal.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        InvestmentProposal.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, InvestmentProposal);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(InvestmentProposal);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetExtensionContract@1100525037(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ExtensionContract@1100525004 : Record 11012004;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(ExtensionContract);

      IF DocumentLink."Internal Company" <> '' THEN
        ExtensionContract.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ExtensionContract.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ExtensionContract);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ExtensionContract);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetResponsibilityCenter@1100525038(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ResponsibilityCenter@1100525004 : Record 5714;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(ResponsibilityCenter);

      IF DocumentLink."Internal Company" <> '' THEN
        ResponsibilityCenter.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ResponsibilityCenter.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ResponsibilityCenter);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ResponsibilityCenter);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetProjectPurchaseAction@1100525039(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ProjectPurchaseAction@1100525004 : Record 11012026;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(ProjectPurchaseAction);

      IF DocumentLink."Internal Company" <> '' THEN
        ProjectPurchaseAction.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ProjectPurchaseAction.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ProjectPurchaseAction);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ProjectPurchaseAction);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPurchaseRequisition@1100528903(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      PurchaseRequisition@1100525004 : Record 11229330;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP01137
      RecRef.SETTABLE(PurchaseRequisition);

      IF DocumentLink."Internal Company" <> '' THEN
        PurchaseRequisition.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PurchaseRequisition.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, PurchaseRequisition);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PurchaseRequisition);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetComplaint@1100525040(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      Complaint@1100525004 : Record 11012450;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(Complaint);

      IF DocumentLink."Internal Company" <> '' THEN
        Complaint.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Complaint.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Complaint);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Complaint);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetProjectAssignment@1100525041(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ProjectAssignment@1100525004 : Record 11012456;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(ProjectAssignment);

      IF DocumentLink."Internal Company" <> '' THEN
        ProjectAssignment.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ProjectAssignment.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ProjectAssignment);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ProjectAssignment);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetHouseModel@1100525042(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      HouseModel@1100525004 : Record 11012501;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(HouseModel);

      IF DocumentLink."Internal Company" <> '' THEN
        HouseModel.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        HouseModel.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, HouseModel);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(HouseModel);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetOptionMainGroup@1100525043(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      OptionMainGroup@1100525003 : Record 11012509;
      ActionResult@1100525004 : Action;
    BEGIN
      RecRef.SETTABLE(OptionMainGroup);

      IF DocumentLink."Internal Company" <> '' THEN
        OptionMainGroup.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        OptionMainGroup.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, OptionMainGroup);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(OptionMainGroup);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetOptionGroup@1100525044(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      OptionGroup@1100525004 : Record 11012504;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(OptionGroup);

      IF DocumentLink."Internal Company" <> '' THEN
        OptionGroup.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        OptionGroup.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, OptionGroup);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(OptionGroup);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetOptionSubGroup@1100525045(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      OptionSubGroup@1100525004 : Record 11012505;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(OptionSubGroup);

      IF DocumentLink."Internal Company" <> '' THEN
        OptionSubGroup.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        OptionSubGroup.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, OptionSubGroup);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(OptionSubGroup);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetOption@1100525046(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      Option@1100525004 : Record 11012502;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(Option);

      IF DocumentLink."Internal Company" <> '' THEN
        Option.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Option.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Option);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Option);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPlantType@1100525047(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      PlantType@1100525004 : Record 11012551;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(PlantType);

      IF DocumentLink."Internal Company" <> '' THEN
        PlantType.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PlantType.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, PlantType);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PlantType);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPlantLocation@1100525048(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      PlantLocation@1100525004 : Record 11012554;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(PlantLocation);

      IF DocumentLink."Internal Company" <> '' THEN
        PlantLocation.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PlantLocation.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, PlantLocation);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PlantLocation);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPlantNumber@1100525049(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      PlantNumber@1100525004 : Record 11012552;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(PlantNumber);

      IF DocumentLink."Internal Company" <> '' THEN
        PlantNumber.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PlantNumber.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, PlantNumber);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PlantNumber);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPlantVehicle@1100529002(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      Vehicle@1100525004 : Record 11072667;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP00331
      RecRef.SETTABLE(Vehicle);

      IF DocumentLink."Internal Company" <> '' THEN
        Vehicle.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Vehicle.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Vehicle);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Vehicle);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPlantLeaseContract@1100529003(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      LeaseContract@1100525004 : Record 11012540;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP00331
      RecRef.SETTABLE(LeaseContract);

      IF DocumentLink."Internal Company" <> '' THEN
        LeaseContract.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        LeaseContract.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, LeaseContract);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(LeaseContract);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPlantOrder@1100525050(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      PlantOrder@1100525004 : Record 11012556;
      ActionResult@1100525003 : Action;
      SelectedNo@1100525006 : Integer;
    BEGIN
      RecRef.SETTABLE(PlantOrder);

      IF DocumentLink."Internal Company" <> '' THEN
        PlantOrder.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PlantOrder.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN BEGIN
        IF PlantOrder."No." <> '' THEN BEGIN
          IF PlantOrder.Posted THEN
            SelectedNo := 2
          ELSE
            SelectedNo := 1;
        END;
        IF SelectedNo = 0 THEN
          SelectedNo := STRMENU(Text007, 1, PlantOrder.TABLECAPTION);
        CASE SelectedNo OF
          1: ActionResult := PAGE.RUNMODAL(0, PlantOrder);
          2: ActionResult := PAGE.RUNMODAL(PAGE::"Posted Plant Order List", PlantOrder);
        END;
      END;

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PlantOrder);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPlantOrderLine@1100529000(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      PlantOrderLine@1100525004 : Record 11012557;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP00183
      RecRef.SETTABLE(PlantOrderLine);

      IF DocumentLink."Internal Company" <> '' THEN
        PlantOrderLine.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PlantOrderLine.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, PlantOrderLine);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PlantOrderLine);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetExitOrder@1100525051(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ExitOrder@1100525004 : Record 11012559;
      ActionResult@1100525003 : Action;
      SelectedNo@1100525005 : Integer;
    BEGIN
      RecRef.SETTABLE(ExitOrder);

      IF DocumentLink."Internal Company" <> '' THEN
        ExitOrder.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ExitOrder.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN BEGIN
        IF ExitOrder."No." <> '' THEN BEGIN
          IF ExitOrder.Posted THEN
            SelectedNo := 2
          ELSE
            SelectedNo := 1;
        END;
        IF SelectedNo = 0 THEN
          SelectedNo := STRMENU(Text007, 1, ExitOrder.TABLECAPTION);
        CASE SelectedNo OF
          1: ActionResult := PAGE.RUNMODAL(0, ExitOrder);
          2: ActionResult := PAGE.RUNMODAL(PAGE::"Posted Exit Order List", ExitOrder);
        END;
      END;

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ExitOrder);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetExitOrderLine@1100529001(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ExitOrderLine@1100525004 : Record 11012560;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP00183
      RecRef.SETTABLE(ExitOrderLine);

      IF DocumentLink."Internal Company" <> '' THEN
        ExitOrderLine.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ExitOrderLine.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ExitOrderLine);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ExitOrderLine);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPlantInspection@1100529007(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      Inspection@1100525004 : Record 11012564;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP00899
      RecRef.SETTABLE(Inspection);

      IF DocumentLink."Internal Company" <> '' THEN
        Inspection.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Inspection.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Inspection);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Inspection);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetRentalCorrection@1100525052(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      RentalCorrection@1100525004 : Record 11012565;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(RentalCorrection);

      IF DocumentLink."Internal Company" <> '' THEN
        RentalCorrection.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        RentalCorrection.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, RentalCorrection);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(RentalCorrection);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPlantTransportOrder@1100525053(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      PlantTransportOrder@1100525004 : Record 11020505;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(PlantTransportOrder);

      IF DocumentLink."Internal Company" <> '' THEN
        PlantTransportOrder.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PlantTransportOrder.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, PlantTransportOrder);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PlantTransportOrder);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPostedPlantTransportOrder@1100525003(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      PostedPlantTransportOrder@1100525004 : Record 11020507;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(PostedPlantTransportOrder);

      IF DocumentLink."Internal Company" <> '' THEN
        PostedPlantTransportOrder.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PostedPlantTransportOrder.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, PostedPlantTransportOrder);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PostedPlantTransportOrder);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPlantTransportRide@1100525017(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      PlantTransportRide@1100525004 : Record 11020517;
      ActionResult@1100525003 : Action;
      SelectedNo@1100525006 : Integer;
    BEGIN
      RecRef.SETTABLE(PlantTransportRide);

      IF DocumentLink."Internal Company" <> '' THEN
        PlantTransportRide.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PlantTransportRide.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN BEGIN
        IF PlantTransportRide."No." <> '' THEN BEGIN
          IF PlantTransportRide.Posted THEN
            SelectedNo := 2
          ELSE
            SelectedNo := 1;
        END;
        IF SelectedNo = 0 THEN
          SelectedNo := STRMENU(Text007, 1, PlantTransportRide.TABLECAPTION);
        CASE SelectedNo OF
          1: ActionResult := PAGE.RUNMODAL(0, PlantTransportRide);
          2: ActionResult := PAGE.RUNMODAL(PAGE::"Posted Transport Ride List", PlantTransportRide);
        END;
      END;

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PlantTransportRide);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPlantRequest@1100525030(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      PlantRequest@1100525004 : Record 11020520;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(PlantRequest);

      IF DocumentLink."Internal Company" <> '' THEN
        PlantRequest.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PlantRequest.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, PlantRequest);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PlantRequest);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPlantRentalFreeOrder@1100529009(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      PlantRentalFreeOrder@1100525004 : Record 11020552;
      ActionResult@1100525003 : Action;
      SelectedNo@1100529000 : Integer;
    BEGIN
      RecRef.SETTABLE(PlantRentalFreeOrder);

      IF DocumentLink."Internal Company" <> '' THEN
        PlantRentalFreeOrder.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PlantRentalFreeOrder.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN BEGIN
        IF PlantRentalFreeOrder."No." <> '' THEN BEGIN
          IF PlantRentalFreeOrder.Posted THEN
            SelectedNo := 2
          ELSE
            SelectedNo := 1;
        END;
        IF SelectedNo = 0 THEN
          SelectedNo := STRMENU(Text007, 1, PlantRentalFreeOrder.TABLECAPTION);
        CASE SelectedNo OF
          1: ActionResult := PAGE.RUNMODAL(0, PlantRentalFreeOrder);
          2: ActionResult := PAGE.RUNMODAL(PAGE::"Posted Pl. Rt. Fr. Order List", PlantRentalFreeOrder);
        END;
      END;

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PlantRentalFreeOrder);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPlantQuote@1100529008(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      PlantQuote@1100525004 : Record 11229918;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(PlantQuote);

      IF DocumentLink."Internal Company" <> '' THEN
        PlantQuote.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PlantQuote.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, PlantQuote);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PlantQuote);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPlantRentalAgreement@1100529012(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      PlantRentalAgreement@1100525004 : Record 11229935;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(PlantRentalAgreement);

      IF DocumentLink."Internal Company" <> '' THEN
        PlantRentalAgreement.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PlantRentalAgreement.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(PAGE::"Plant Rental Agreements", PlantRentalAgreement);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PlantRentalAgreement);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetStandardDevelopmentPhase@1100525054(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      StandardDevelopmentPhase@1100525004 : Record 11012910;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(StandardDevelopmentPhase);

      IF DocumentLink."Internal Company" <> '' THEN
        StandardDevelopmentPhase.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        StandardDevelopmentPhase.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, StandardDevelopmentPhase);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(StandardDevelopmentPhase);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetRentalUnit@1100525055(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      RentalUnit@1100525004 : Record 11012940;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(RentalUnit);

      IF DocumentLink."Internal Company" <> '' THEN
        RentalUnit.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        RentalUnit.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, RentalUnit);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(RentalUnit);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetRentalPackage@1100529005(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      RentalPackage@1100525004 : Record 11012941;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP00617
      RecRef.SETTABLE(RentalPackage);

      IF DocumentLink."Internal Company" <> '' THEN
        RentalPackage.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        RentalPackage.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, RentalPackage);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(RentalPackage);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetContactFeature@1100525056(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ContactFeature@1100525004 : Record 11012752;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(ContactFeature);

      IF DocumentLink."Internal Company" <> '' THEN
        ContactFeature.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ContactFeature.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ContactFeature);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ContactFeature);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetProvisionalWorkDocumentType@1100525057(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ProvisionalWorkDocumentType@1100525004 : Record 11012770;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(ProvisionalWorkDocumentType);

      IF DocumentLink."Internal Company" <> '' THEN
        ProvisionalWorkDocumentType.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ProvisionalWorkDocumentType.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ProvisionalWorkDocumentType);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ProvisionalWorkDocumentType);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetVendor@1100525058(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      Vendor@1100525004 : Record 23;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(Vendor);

      IF DocumentLink."Internal Company" <> '' THEN
        Vendor.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Vendor.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Vendor);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Vendor);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetTodo@1100525059(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      Todo@1100525004 : Record 5080;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(Todo);

      IF DocumentLink."Internal Company" <> '' THEN
        Todo.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Todo.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Todo);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Todo);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetServiceCall@1100525060(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ServiceCall@1100525004 : Record 11012822;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(ServiceCall);

      IF DocumentLink."Internal Company" <> '' THEN
        ServiceCall.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ServiceCall.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ServiceCall);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ServiceCall);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetProjecPrincipal@1100525061(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ProjectPrincipal@1100525004 : Record 11012005;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(ProjectPrincipal);

      IF DocumentLink."Internal Company" <> '' THEN
        ProjectPrincipal.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ProjectPrincipal.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ProjectPrincipal);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ProjectPrincipal);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetProjectInstallment@1100529700(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ProjectInstallment@1100525004 : Record 11012018;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(ProjectInstallment);

      IF DocumentLink."Internal Company" <> '' THEN
        ProjectInstallment.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ProjectInstallment.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ProjectInstallment);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ProjectInstallment);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetCommission@1100525062(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      Commission@1100525004 : Record 11012020;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(Commission);

      IF DocumentLink."Internal Company" <> '' THEN
        Commission.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Commission.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Commission);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Commission);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetSettlementSheet@1100525063(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      SettlementSheet@1100525004 : Record 11012021;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(SettlementSheet);

      IF DocumentLink."Internal Company" <> '' THEN
        SettlementSheet.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        SettlementSheet.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, SettlementSheet);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(SettlementSheet);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetInstallmentMotivation@1100525064(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      InstallmentMotivation@1100525004 : Record 11012471;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(InstallmentMotivation);

      IF DocumentLink."Internal Company" <> '' THEN
        InstallmentMotivation.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        InstallmentMotivation.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, InstallmentMotivation);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(InstallmentMotivation);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetParcel@1100525065(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      Parcel@1100525004 : Record 11012240;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(Parcel);

      IF DocumentLink."Internal Company" <> '' THEN
        Parcel.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Parcel.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Parcel);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Parcel);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetProvisionalWork@1100525066(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ProvisionalWork@1100525004 : Record 11012774;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(ProvisionalWork);

      IF DocumentLink."Internal Company" <> '' THEN
        ProvisionalWork.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ProvisionalWork.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ProvisionalWork);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ProvisionalWork);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetSalesInvoiceHeader@1100525069(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      SalesInvoiceHeader@1100525004 : Record 112;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(SalesInvoiceHeader);

      IF DocumentLink."Internal Company" <> '' THEN
        SalesInvoiceHeader.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        SalesInvoiceHeader.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, SalesInvoiceHeader);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(SalesInvoiceHeader);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPurchaseHeader@1100525070(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      PurchaseHeader@1100525004 : Record 38;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(PurchaseHeader);

      IF DocumentLink."Internal Company" <> '' THEN
        PurchaseHeader.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PurchaseHeader.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, PurchaseHeader);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PurchaseHeader);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetSalesCrMemoHeader@1100525071(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      SalesCrMemoHeader@1100525004 : Record 114;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(SalesCrMemoHeader);

      IF DocumentLink."Internal Company" <> '' THEN
        SalesCrMemoHeader.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        SalesCrMemoHeader.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, SalesCrMemoHeader);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(SalesCrMemoHeader);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetKOMOInstallationbyPlot@1100525072(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      KOMOInstallationbyPlot@1100525004 : Record 11012968;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(KOMOInstallationbyPlot);

      IF DocumentLink."Internal Company" <> '' THEN
        KOMOInstallationbyPlot.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        KOMOInstallationbyPlot.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, KOMOInstallationbyPlot);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(KOMOInstallationbyPlot);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetSalesHeader@1100525073(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      SalesHeader@1100525004 : Record 36;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(SalesHeader);

      IF DocumentLink."Internal Company" <> '' THEN
        SalesHeader.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        SalesHeader.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, SalesHeader);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(SalesHeader);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetSalesHeaderArchive@1100529701(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      SalesHeaderArchive@1100525004 : Record 11072055;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(SalesHeaderArchive);

      IF DocumentLink."Internal Company" <> '' THEN
        SalesHeaderArchive.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        SalesHeaderArchive.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, SalesHeaderArchive);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(SalesHeaderArchive);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetOptionQuoteHeader@1100525074(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      OptionQuoteHeader@1100525004 : Record 11012513;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(OptionQuoteHeader);

      IF DocumentLink."Internal Company" <> '' THEN
        OptionQuoteHeader.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        OptionQuoteHeader.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, OptionQuoteHeader);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(OptionQuoteHeader);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetVendorCertificate@1100525018(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525000 : RecordRef;Lookup@1100525001 : Boolean);
    VAR
      VendorCertificate@1100525003 : Record 11020413;
      ActionResult@1100525002 : Action;
    BEGIN
      RecRef.SETTABLE(VendorCertificate);

      IF DocumentLink."Internal Company" <> '' THEN
        VendorCertificate.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        VendorCertificate.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, VendorCertificate);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(VendorCertificate);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetLoanHeader@1100525020(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525000 : RecordRef;Lookup@1100525001 : Boolean);
    VAR
      LoanHeader@1100525003 : Record 11020587;
      ActionResult@1100525002 : Action;
    BEGIN
      RecRef.SETTABLE(LoanHeader);

      IF DocumentLink."Internal Company" <> '' THEN
        LoanHeader.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        LoanHeader.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, LoanHeader);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(LoanHeader);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetQADeviation@1100525023(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525000 : RecordRef;Lookup@1100525001 : Boolean);
    VAR
      ActionResult@1100525002 : Action;
      QADeviation@1100525003 : Record 11125986;
    BEGIN
      RecRef.SETTABLE(QADeviation);

      IF DocumentLink."Internal Company" <> '' THEN
        QADeviation.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        QADeviation.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, QADeviation);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(QADeviation);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetAccidentQA@1100525025(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525000 : RecordRef;Lookup@1100525001 : Boolean);
    VAR
      Accident@1100525003 : Record 11126005;
      ActionResult@1100525002 : Action;
    BEGIN
      RecRef.SETTABLE(Accident);

      IF DocumentLink."Internal Company" <> '' THEN
        Accident.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Accident.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Accident);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Accident);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetGetOrderSMF@1100529704(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      GetOrderSMF@1100525004 : Record 11125531;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(GetOrderSMF);

      IF DocumentLink."Internal Company" <> '' THEN
        GetOrderSMF.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        GetOrderSMF.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, GetOrderSMF);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(GetOrderSMF);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetStandardInspectionSMF@1100409001(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      StndInspecSMF@1100525004 : Record 11125533;
      ActionResult@1100525003 : Action;
    BEGIN
      //*32793.n
      RecRef.SETTABLE(StndInspecSMF);

      IF DocumentLink."Internal Company" <> '' THEN
        StndInspecSMF.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        StndInspecSMF.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, StndInspecSMF);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(StndInspecSMF);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetProjectInspectionSMF@1100409000(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ProjInspecSMF@1100525004 : Record 11125534;
      ActionResult@1100525003 : Action;
    BEGIN
      //*32793.n
      RecRef.SETTABLE(ProjInspecSMF);

      IF DocumentLink."Internal Company" <> '' THEN
        ProjInspecSMF.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ProjInspecSMF.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ProjInspecSMF);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ProjInspecSMF);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetInspectionSMF@1100525024(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      InspecSMF@1100525004 : Record 11125535;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(InspecSMF);

      IF DocumentLink."Internal Company" <> '' THEN
        InspecSMF.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        InspecSMF.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, InspecSMF);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(InspecSMF);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetProvisionalWorkContact@1100530000(VAR DocumentLink@1100530002 : Record 11012747;RecRef@1100530001 : RecordRef;Lookup@1100530000 : Boolean);
    VAR
      ProvisionalWorkContact@1100530003 : Record 11012779;
      ActionResult@1100530004 : Action;
    BEGIN
      // jhoek.100111
      RecRef.SETTABLE(ProvisionalWorkContact);

      IF DocumentLink."Internal Company" <> '' THEN
        ProvisionalWorkContact.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ProvisionalWorkContact.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ProvisionalWorkContact);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ProvisionalWorkContact);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPurchInvoiceHeader@1100530002(VAR DocumentLink@1100530002 : Record 11012747;RecRef@1100530001 : RecordRef;Lookup@1100530000 : Boolean);
    VAR
      PurchInvoiceHeader@1100530003 : Record 122;
      ActionResult@1100530004 : Action;
    BEGIN
      RecRef.SETTABLE(PurchInvoiceHeader);

      IF DocumentLink."Internal Company" <> '' THEN
        PurchInvoiceHeader.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PurchInvoiceHeader.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, PurchInvoiceHeader);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PurchInvoiceHeader);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPurchCredMemHeader@1100530001(VAR DocumentLink@1100530002 : Record 11012747;RecRef@1100530001 : RecordRef;Lookup@1100530000 : Boolean);
    VAR
      PurchCredMemHeader@1100530003 : Record 124;
      ActionResult@1100530004 : Action;
    BEGIN
      RecRef.SETTABLE(PurchCredMemHeader);

      IF DocumentLink."Internal Company" <> '' THEN
        PurchCredMemHeader.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PurchCredMemHeader.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, PurchCredMemHeader);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PurchCredMemHeader);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetProjectForecastHeader@1210190000(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ProjectForecastHeader@1100525004 : Record 11020630;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(ProjectForecastHeader);

      IF DocumentLink."Internal Company" <> '' THEN
        ProjectForecastHeader.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ProjectForecastHeader.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ProjectForecastHeader);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ProjectForecastHeader);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPrognosisHeader@1210190001(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      Prognosis@1100525004 : Record 11012034;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(Prognosis);

      IF DocumentLink."Internal Company" <> '' THEN
        Prognosis.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Prognosis.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Prognosis);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Prognosis);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetAssemblyYardNumberObject@1100528400(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525000 : RecordRef;Lookup@1100525001 : Boolean);
    VAR
      ActionResult@1100525002 : Action;
      AssemblyYardNumberObject@1100525003 : Record 11020596;
    BEGIN
      RecRef.SETTABLE(AssemblyYardNumberObject);

      IF DocumentLink."Internal Company" <> '' THEN
        AssemblyYardNumberObject.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        AssemblyYardNumberObject.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, AssemblyYardNumberObject);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(AssemblyYardNumberObject);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetAdviceOrderLine@1100528401(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525000 : RecordRef;Lookup@1100525001 : Boolean);
    VAR
      ActionResult@1100525002 : Action;
      AdviceOrderLine@1100525003 : Record 11012055;
    BEGIN
      RecRef.SETTABLE(AdviceOrderLine);

      IF DocumentLink."Internal Company" <> '' THEN
        AdviceOrderLine.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        AdviceOrderLine.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, AdviceOrderLine);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(AdviceOrderLine);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetWarrantyDataPurchaseOrder@1210190004(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525000 : RecordRef;Lookup@1100525001 : Boolean);
    VAR
      ActionResult@1100525002 : Action;
      WarrantyDataPurchaseOrder@1100525003 : Record 11020665;
    BEGIN
      RecRef.SETTABLE(WarrantyDataPurchaseOrder);

      IF DocumentLink."Internal Company" <> '' THEN
        WarrantyDataPurchaseOrder.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        WarrantyDataPurchaseOrder.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, WarrantyDataPurchaseOrder);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(WarrantyDataPurchaseOrder);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetEmployee@1210190002(VAR DocumentLink@1210190000 : Record 11012747;RecRef@1210190001 : RecordRef;Lookup@1210190002 : Boolean);
    VAR
      Employee@1210190003 : Record 5200;
      ActionResult@1210190004 : Action;
    BEGIN
      // jhoek.250511
      RecRef.SETTABLE(Employee);

      IF DocumentLink."Internal Company" <> '' THEN
        Employee.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Employee.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Employee);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Employee);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetProjectMaterialReqLine@1210190006(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525000 : RecordRef;Lookup@1100525001 : Boolean);
    VAR
      ActionResult@1100525002 : Action;
      ProjectMaterialReqLine@1100525003 : Record 11012526;
    BEGIN
      //kkleermaker, 110822, M28687
      RecRef.SETTABLE(ProjectMaterialReqLine);

      IF DocumentLink."Internal Company" <> '' THEN
        ProjectMaterialReqLine.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ProjectMaterialReqLine.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ProjectMaterialReqLine);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ProjectMaterialReqLine);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetAssemblyObjectMatReqLine@1210190008(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525000 : RecordRef;Lookup@1100525001 : Boolean);
    VAR
      ActionResult@1100525002 : Action;
      AssemblyObjectMatReqLine@1100525003 : Record 11020663;
    BEGIN
      //kkleermaker, 110929, M29188
      RecRef.SETTABLE(AssemblyObjectMatReqLine);

      IF DocumentLink."Internal Company" <> '' THEN
        AssemblyObjectMatReqLine.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        AssemblyObjectMatReqLine.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, AssemblyObjectMatReqLine);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(AssemblyObjectMatReqLine);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetFrostOutRegistration@1100528700(VAR DocumentLink@1210190000 : Record 11012747;RecRef@1210190001 : RecordRef;Lookup@1210190002 : Boolean);
    VAR
      FrostOutRegistration@1210190003 : Record 11020670;
      ActionResult@1210190004 : Action;
    BEGIN
      RecRef.SETTABLE(FrostOutRegistration);

      IF DocumentLink."Internal Company" <> '' THEN
        FrostOutRegistration.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        FrostOutRegistration.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, FrostOutRegistration);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(FrostOutRegistration);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetFrostOutRequest@1100528701(VAR DocumentLink@1210190000 : Record 11012747;RecRef@1210190001 : RecordRef;Lookup@1210190002 : Boolean);
    VAR
      FrostOutRequest@1210190003 : Record 11020671;
      ActionResult@1210190004 : Action;
    BEGIN
      RecRef.SETTABLE(FrostOutRequest);

      IF DocumentLink."Internal Company" <> '' THEN
        FrostOutRequest.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        FrostOutRequest.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, FrostOutRequest);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(FrostOutRequest);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetServiceObject@1100528600(VAR DocumentLink@1100528602 : Record 11012747;RecRef@1100528601 : RecordRef;Lookup@1100528600 : Boolean);
    VAR
      ServiceObject@1100528604 : Record 11071691;
      ActionResult@1100528603 : Action;
    BEGIN
      RecRef.SETTABLE(ServiceObject);

      IF DocumentLink."Internal Company" <> '' THEN
        ServiceObject.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ServiceObject.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ServiceObject);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ServiceObject);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetEmployeePerVendor@1210190011(VAR DocumentLink@1100528602 : Record 11012747;RecRef@1100528601 : RecordRef;Lookup@1100528600 : Boolean);
    VAR
      EmployeePerVendor@1100528604 : Record 11020693;
      ActionResult@1100528603 : Action;
    BEGIN
      RecRef.SETTABLE(EmployeePerVendor);

      IF DocumentLink."Internal Company" <> '' THEN
        EmployeePerVendor.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        EmployeePerVendor.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, EmployeePerVendor);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(EmployeePerVendor);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetDispatchNoteSiB@1100528900(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      DispatchNote@1100525004 : Record 11072651;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP00065
      RecRef.SETTABLE(DispatchNote);

      IF DocumentLink."Internal Company" <> '' THEN
        DispatchNote.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        DispatchNote.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, DispatchNote);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(DispatchNote);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetInvoiceSiB@1100528902(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      InvoiceSiB@1100525004 : Record 11072653;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP00065
      RecRef.SETTABLE(InvoiceSiB);

      IF DocumentLink."Internal Company" <> '' THEN
        InvoiceSiB.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        InvoiceSiB.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, InvoiceSiB);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(InvoiceSiB);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetContact@1100528702(VAR DocumentLink@1210190000 : Record 11012747;RecRef@1210190001 : RecordRef;Lookup@1210190002 : Boolean);
    VAR
      Contact@1210190003 : Record 5050;
      ActionResult@1210190004 : Action;
    BEGIN
      RecRef.SETTABLE(Contact);

      IF DocumentLink."Internal Company" <> '' THEN
        Contact.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Contact.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Contact);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Contact);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetCustomer@1100528703(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      Customer@1100525004 : Record 18;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(Customer);

      IF DocumentLink."Internal Company" <> '' THEN
        Customer.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Customer.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Customer);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Customer);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetReminderHeader@1100528704(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ReminderHeader@1100525004 : Record 295;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(ReminderHeader);

      IF DocumentLink."Internal Company" <> '' THEN
        ReminderHeader.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ReminderHeader.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ReminderHeader);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ReminderHeader);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetComplex@1100528300(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      Complex@1100525004 : Record 11071816;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP00095
      RecRef.SETTABLE(Complex);

      IF DocumentLink."Internal Company" <> '' THEN
        Complex.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Complex.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Complex);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Complex);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPremises@1100528301(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      Premises@1100525004 : Record 11071819;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP00095
      RecRef.SETTABLE(Premises);

      IF DocumentLink."Internal Company" <> '' THEN
        Premises.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Premises.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Premises);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Premises);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetItem@1100528801(VAR DocumentLink@1210190000 : Record 11012747;RecRef@1210190001 : RecordRef;Lookup@1210190002 : Boolean);
    VAR
      Item@1210190003 : Record 27;
      ActionResult@1210190004 : Action;
    BEGIN
      // dp00116.n
      RecRef.SETTABLE(Item);

      IF DocumentLink."Internal Company" <> '' THEN
        Item.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        Item.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, Item);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Item);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetProjectDevelopment@1100409003(VAR DocumentLink@1210190000 : Record 11012747;RecRef@1210190001 : RecordRef;Lookup@1210190002 : Boolean);
    VAR
      ProjectDevelopment@1210190003 : Record 11012915;
      ActionResult@1210190004 : Action;
    BEGIN
      RecRef.SETTABLE(ProjectDevelopment);

      IF DocumentLink."Internal Company" <> '' THEN
        ProjectDevelopment.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ProjectDevelopment.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ProjectDevelopment);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ProjectDevelopment);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetSepaDirectDebitMandate@1100529006(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      SepaMandate@1100525004 : Record 1230;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP00640
      RecRef.SETTABLE(SepaMandate);

      IF DocumentLink."Internal Company" <> '' THEN
        SepaMandate.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        SepaMandate.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, SepaMandate);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(SepaMandate);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetStandardObject@1100409004(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      StandardObject@1100525004 : Record 11020334;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP00640
      RecRef.SETTABLE(StandardObject);

      IF DocumentLink."Internal Company" <> '' THEN
        StandardObject.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        StandardObject.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, StandardObject);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(StandardObject);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPurchaseOrderLineGuarantee@1100409005(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      PurchaseOrderLineGuarantee@1100525004 : Record 11229833;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP00561
      RecRef.SETTABLE(PurchaseOrderLineGuarantee);

      IF DocumentLink."Internal Company" <> '' THEN
        PurchaseOrderLineGuarantee.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PurchaseOrderLineGuarantee.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, PurchaseOrderLineGuarantee);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PurchaseOrderLineGuarantee);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetSUPRecordingLine@1100528101(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      SUPRecordingLine@1100525004 : Record 11071772;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP00095
      RecRef.SETTABLE(SUPRecordingLine);

      IF DocumentLink."Internal Company" <> '' THEN
        SUPRecordingLine.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        SUPRecordingLine.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, SUPRecordingLine);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(SUPRecordingLine);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetFieldServiceTransit@1100528001(VAR DocumentLink@1100528002 : Record 11012747;RecRef@1100528001 : RecordRef;Lookup@1100528000 : Boolean);
    VAR
      FSTransit@1100528004 : Record 11125886;
      ActionResult@1100528003 : Action;
    BEGIN
      //DP00966
      RecRef.SETTABLE(FSTransit);

      IF DocumentLink."Internal Company" <> '' THEN
        FSTransit.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        FSTransit.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, FSTransit);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(FSTransit);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetFieldServiceWorksheetTransitLine@1100528002(VAR DocumentLink@1100528002 : Record 11012747;RecRef@1100528001 : RecordRef;Lookup@1100528000 : Boolean);
    VAR
      FSWTransitLine@1100528004 : Record 11125880;
      ActionResult@1100528003 : Action;
    BEGIN
      //DP00966
      RecRef.SETTABLE(FSWTransitLine);

      IF DocumentLink."Internal Company" <> '' THEN
        FSWTransitLine.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        FSWTransitLine.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, FSWTransitLine);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(FSWTransitLine);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetChangeRequest@1100409007(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ChangeRequest@1100525004 : Record 11072193;
      ActionResult@1100525003 : Action;
    BEGIN
      //DP00545
      RecRef.SETTABLE(ChangeRequest);

      IF DocumentLink."Internal Company" <> '' THEN
        ChangeRequest.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ChangeRequest.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ChangeRequest);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ChangeRequest);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetGlazingServiceCall@1100409008(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      GlazingServiceCall@1100525004 : Record 11125777;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(GlazingServiceCall);

      IF DocumentLink."Internal Company" <> '' THEN
        GlazingServiceCall.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        GlazingServiceCall.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, GlazingServiceCall);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(GlazingServiceCall);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetRiskOpportunitySchedule@1100528800(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525003 : RecordRef;Lookup@1100525002 : Boolean);
    VAR
      RiskOpportunitySchedule@1100525001 : Record 11229900;
      ActionResult@1100525000 : Action;
    BEGIN
      RecRef.SETTABLE(RiskOpportunitySchedule);

      IF DocumentLink."Internal Company" <> '' THEN
        RiskOpportunitySchedule.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        RiskOpportunitySchedule.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, RiskOpportunitySchedule);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(RiskOpportunitySchedule);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetRiskLine@1100528802(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525003 : RecordRef;Lookup@1100525002 : Boolean);
    VAR
      RiskLine@1100525001 : Record 11229903;
      ActionResult@1100525000 : Action;
    BEGIN
      RecRef.SETTABLE(RiskLine);

      IF DocumentLink."Internal Company" <> '' THEN
        RiskLine.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        RiskLine.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, RiskLine);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(RiskLine);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetOpportunityLine@1100528803(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525003 : RecordRef;Lookup@1100525002 : Boolean);
    VAR
      OpportunityLine@1100525001 : Record 11229904;
      ActionResult@1100525000 : Action;
    BEGIN
      RecRef.SETTABLE(OpportunityLine);

      IF DocumentLink."Internal Company" <> '' THEN
        OpportunityLine.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        OpportunityLine.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, OpportunityLine);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(OpportunityLine);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetSettlementQuantity@1100525015(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525003 : RecordRef;Lookup@1100525002 : Boolean);
    VAR
      SettlementQuantity@1100525001 : Record 11072243;
      ActionResult@1100525000 : Action;
    BEGIN
      //DP00771
      RecRef.SETTABLE(SettlementQuantity);

      IF DocumentLink."Internal Company" <> '' THEN
        SettlementQuantity.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        SettlementQuantity.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, SettlementQuantity);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(SettlementQuantity);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPlotUnit@1100525013(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525003 : RecordRef;Lookup@1100525002 : Boolean);
    VAR
      PlotUnit@1100525001 : Record 11072245;
      ActionResult@1100525000 : Action;
    BEGIN
      //DP00771
      RecRef.SETTABLE(PlotUnit);

      IF DocumentLink."Internal Company" <> '' THEN
        PlotUnit.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PlotUnit.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, PlotUnit);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PlotUnit);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPlotSQRecordingLine@1100525011(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525003 : RecordRef;Lookup@1100525002 : Boolean);
    VAR
      PlotSQRecordingLine@1100525001 : Record 11072252;
      ActionResult@1100525000 : Action;
    BEGIN
      //DP00771
      RecRef.SETTABLE(PlotSQRecordingLine);

      IF DocumentLink."Internal Company" <> '' THEN
        PlotSQRecordingLine.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PlotSQRecordingLine.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, PlotSQRecordingLine);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PlotSQRecordingLine);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPlotRecordingListBaseLine@1100525010(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525003 : RecordRef;Lookup@1100525002 : Boolean);
    VAR
      PlotRecordingListBaseLine@1100525001 : Record 11072254;
      ActionResult@1100525000 : Action;
    BEGIN
      //DP00771
      RecRef.SETTABLE(PlotRecordingListBaseLine);

      IF DocumentLink."Internal Company" <> '' THEN
        PlotRecordingListBaseLine.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PlotRecordingListBaseLine.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, PlotRecordingListBaseLine);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PlotRecordingListBaseLine);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetGS1Invoice@1100528302(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525003 : RecordRef;Lookup@1100525002 : Boolean);
    VAR
      GS1Invoice@1100525001 : Record 11072656;
      ActionResult@1100525000 : Action;
    BEGIN
      RecRef.SETTABLE(GS1Invoice);

      IF DocumentLink."Internal Company" <> '' THEN
        GS1Invoice.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        GS1Invoice.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, GS1Invoice);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(GS1Invoice);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetImplementationActivity@1100529200(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525003 : RecordRef;Lookup@1100525002 : Boolean);
    VAR
      ImplActivity@1100525001 : Record 11229390;
      ActionResult@1100525000 : Action;
    BEGIN
      RecRef.SETTABLE(ImplActivity);

      IF DocumentLink."Internal Company" <> '' THEN
        ImplActivity.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ImplActivity.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ImplActivity);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ImplActivity);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetPurchRcptHeader@1100529401(VAR DocumentLink@1100525004 : Record 11012747;RecRef@1100525003 : RecordRef;Lookup@1100525002 : Boolean);
    VAR
      PurchRcptHeader@1100525001 : Record 120;
      ActionResult@1100525000 : Action;
    BEGIN
      RecRef.SETTABLE(PurchRcptHeader);

      IF DocumentLink."Internal Company" <> '' THEN
        PurchRcptHeader.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        PurchRcptHeader.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, PurchRcptHeader);

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(PurchRcptHeader);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetProjectObject@1100529403(VAR DocumentLink@1100528602 : Record 11012747;RecRef@1100528601 : RecordRef;Lookup@1100528600 : Boolean);
    VAR
      ProjectObject@1100528604 : Record 11229311;
      ActionResult@1100528603 : Action;
    BEGIN
      RecRef.SETTABLE(ProjectObject);
      IF DocumentLink."Internal Company" <> '' THEN
        ProjectObject.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        ProjectObject.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ProjectObject);
      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ProjectObject);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;
      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetResourceRequest@1100529010(VAR DocumentLink@1100528602 : Record 11012747;RecRef@1100528601 : RecordRef;Lookup@1100528600 : Boolean);
    VAR
      ResourceRequest@1100528604 : Record 11124901;
      ActionResult@1100528603 : Action;
    BEGIN
      RecRef.SETTABLE(ResourceRequest);
      IF DocumentLink."Internal Company" <> '' THEN
        ResourceRequest.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        ResourceRequest.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ResourceRequest);
      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ResourceRequest);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;
      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetBimModel@1100529402(VAR DocumentLink@1100528602 : Record 11012747;RecRef@1100528601 : RecordRef;Lookup@1100528600 : Boolean);
    VAR
      BimModel@1100528604 : Record 11125823;
      ActionResult@1100528603 : Action;
    BEGIN
      RecRef.SETTABLE(BimModel);
      IF DocumentLink."Internal Company" <> '' THEN
        BimModel.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        BimModel.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, BimModel);
      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(BimModel);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;
      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetBimModelIfcFile@1100529405(VAR DocumentLink@1100528602 : Record 11012747;RecRef@1100528601 : RecordRef;Lookup@1100528600 : Boolean);
    VAR
      BimModelIfcFile@1100528604 : Record 11125827;
      ActionResult@1100528603 : Action;
    BEGIN
      RecRef.SETTABLE(BimModelIfcFile);
      IF DocumentLink."Internal Company" <> '' THEN
        BimModelIfcFile.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        BimModelIfcFile.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, BimModelIfcFile);
      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(BimModelIfcFile);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;
      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetSHWorkplan@1100529406(VAR DocumentLink@1100528602 : Record 11012747;RecRef@1100528601 : RecordRef;Lookup@1100528600 : Boolean);
    VAR
      SHWorkplan@1100528604 : Record 11126011;
      ActionResult@1100528603 : Action;
    BEGIN
      RecRef.SETTABLE(SHWorkplan);
      IF DocumentLink."Internal Company" <> '' THEN
        SHWorkplan.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        SHWorkplan.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, SHWorkplan);
      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(SHWorkplan);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;
      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetSHWorkplanParticipant@1100525029(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      SHWorkplanParticipant@1100525004 : Record 11126012;
      ActionResult@1100525003 : Action;
    BEGIN
      RecRef.SETTABLE(SHWorkplanParticipant);
      IF DocumentLink."Internal Company" <> '' THEN
        SHWorkplanParticipant.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        SHWorkplanParticipant.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, SHWorkplanParticipant);
      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(SHWorkplanParticipant);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;
      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetSHWorkplanProcessReportDetail@1100529407(VAR DocumentLink@1100528602 : Record 11012747;RecRef@1100528601 : RecordRef;Lookup@1100528600 : Boolean);
    VAR
      SHWorkpProcessReportDetail@1100528604 : Record 11126025;
      ActionResult@1100528603 : Action;
    BEGIN
      RecRef.SETTABLE(SHWorkpProcessReportDetail);
      IF DocumentLink."Internal Company" <> '' THEN
        SHWorkpProcessReportDetail.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        SHWorkpProcessReportDetail.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, SHWorkpProcessReportDetail);
      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(SHWorkpProcessReportDetail);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;
      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetServiceSurvey@1100528603(VAR DocumentLink@1100528602 : Record 11012747;RecRef@1100528601 : RecordRef;Lookup@1100528600 : Boolean);
    VAR
      ServiceSurvey@1100528603 : Record 11071803;
      ActionResult@1100528604 : Action;
    BEGIN
      RecRef.SETTABLE(ServiceSurvey);
      IF DocumentLink."Internal Company" <> '' THEN
        ServiceSurvey.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        ServiceSurvey.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ServiceSurvey);
      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ServiceSurvey);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;
      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetINSBOUMaintInstruction@1100528804(VAR DocumentLink@1100528602 : Record 11012747;RecRef@1100528601 : RecordRef;Lookup@1100528600 : Boolean);
    VAR
      INSBOUMaintInstruction@1100528603 : Record 11072350;
      ActionResult@1100528604 : Action;
    BEGIN
      RecRef.SETTABLE(INSBOUMaintInstruction);
      IF DocumentLink."Internal Company" <> '' THEN
        INSBOUMaintInstruction.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        INSBOUMaintInstruction.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, INSBOUMaintInstruction);
      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(INSBOUMaintInstruction);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;
      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetINSBOUMaintInstructionLine@1100528805(VAR DocumentLink@1100528602 : Record 11012747;RecRef@1100528601 : RecordRef;Lookup@1100528600 : Boolean);
    VAR
      INSBOUMaintInstructionLine@1100528603 : Record 11072351;
      ActionResult@1100528604 : Action;
    BEGIN
      RecRef.SETTABLE(INSBOUMaintInstructionLine);
      IF DocumentLink."Internal Company" <> '' THEN
        INSBOUMaintInstructionLine.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        INSBOUMaintInstructionLine.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, INSBOUMaintInstructionLine);
      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(INSBOUMaintInstructionLine);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;
      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetNEN2767LTMPLine@1100528004(VAR DocumentLink@1100528602 : Record 11012747;RecRef@1100528601 : RecordRef;Lookup@1100528600 : Boolean);
    VAR
      NEN2767LTMPLine@1100528603 : Record 11128785;
      ActionResult@1100528604 : Action;
    BEGIN
      RecRef.SETTABLE(NEN2767LTMPLine);
      IF DocumentLink."Internal Company" <> '' THEN
        NEN2767LTMPLine.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        NEN2767LTMPLine.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, NEN2767LTMPLine);
      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(NEN2767LTMPLine);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;
      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetBudgetAdjustment@1100529601(VAR DocumentLink@1100528602 : Record 11012747;Lookup@1100528600 : Boolean);
    VAR
      BudgetAdjustment@1100528603 : Record 11012003;
      ActionResult@1100528604 : Action;
    BEGIN
      IF DocumentLink."Internal Company" <> '' THEN
        BudgetAdjustment.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        BudgetAdjustment.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, BudgetAdjustment);
      IF ActionResult = ACTION::LookupOK THEN
        DocumentLink."Record ID" := BudgetAdjustment.RECORDID;
    END;

    LOCAL PROCEDURE SetBankGuarantee@1100529602(VAR DocumentLink@1100528602 : Record 11012747;Lookup@1100528600 : Boolean);
    VAR
      BankGuarantee@1100528603 : Record 11229320;
      ActionResult@1100528604 : Action;
    BEGIN
      IF DocumentLink."Internal Company" <> '' THEN
        BankGuarantee.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        BankGuarantee.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, BankGuarantee);
      IF ActionResult = ACTION::LookupOK THEN
        DocumentLink."Record ID" := BankGuarantee.RECORDID;
    END;

    LOCAL PROCEDURE SetReturnedLossOrder@1100527302(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      ReturnedLossOrder@1100525004 : Record 11012655;
      ActionResult@1100525003 : Action;
      SelectedNo@1100525005 : Integer;
    BEGIN
      RecRef.SETTABLE(ReturnedLossOrder);

      IF DocumentLink."Internal Company" <> '' THEN
        ReturnedLossOrder.CHANGECOMPANY(DocumentLink."Internal Company");

      IF DocumentLink."Filter Expression" <> '' THEN
        ReturnedLossOrder.SETVIEW(DocumentLink."Filter Expression");

      IF Lookup THEN BEGIN
        IF ReturnedLossOrder."No." <> '' THEN
          IF ReturnedLossOrder.Posted THEN
            SelectedNo := 2
          ELSE
            SelectedNo := 1;

        IF SelectedNo = 0 THEN
          SelectedNo := STRMENU(Text007, 1, ReturnedLossOrder.TABLECAPTION);
        CASE SelectedNo OF
          1: ActionResult := PAGE.RUNMODAL(0, ReturnedLossOrder);
          2: ActionResult := PAGE.RUNMODAL(PAGE::"Posted Returned Loss OrderList", ReturnedLossOrder);
        END;
      END;

      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ReturnedLossOrder);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetTransferOrder@1100525035(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      TransferHeader@1100525005 : Record 5740;
      ActionResult@1100525004 : Action;
    BEGIN
      IF DocumentLink."Internal Company" <> '' THEN
        TransferHeader.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        TransferHeader.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, TransferHeader);
      IF ActionResult = ACTION::LookupOK THEN
        DocumentLink."Record ID" := TransferHeader.RECORDID;
    END;

    LOCAL PROCEDURE SetTransferShipment@1100525067(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      TransferShipmentHeader@1100525005 : Record 5744;
      ActionResult@1100525004 : Action;
    BEGIN
      IF DocumentLink."Internal Company" <> '' THEN
        TransferShipmentHeader.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        TransferShipmentHeader.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, TransferShipmentHeader);
      IF ActionResult = ACTION::LookupOK THEN
        DocumentLink."Record ID" := TransferShipmentHeader.RECORDID;
    END;

    LOCAL PROCEDURE SetTransferReceipt@1100525068(VAR DocumentLink@1100525002 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525000 : Boolean);
    VAR
      TransferReceiptHeader@1100525005 : Record 5746;
      ActionResult@1100525004 : Action;
    BEGIN
      IF DocumentLink."Internal Company" <> '' THEN
        TransferReceiptHeader.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        TransferReceiptHeader.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, TransferReceiptHeader);
      IF ActionResult = ACTION::LookupOK THEN
        DocumentLink."Record ID" := TransferReceiptHeader.RECORDID;
    END;

    LOCAL PROCEDURE SetVendorWKACheck@1100525078(VAR DocumentLink@1100525000 : Record 11012747;RecRef@1100525001 : RecordRef;Lookup@1100525002 : Boolean);
    VAR
      VendorWKACheck@1100525003 : Record 11020276;
      ActionResult@1100525004 : Action;
    BEGIN
      RecRef.SETTABLE(VendorWKACheck);
      IF DocumentLink."Internal Company" <> '' THEN
        VendorWKACheck.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        VendorWKACheck.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, VendorWKACheck);
      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(VendorWKACheck);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;
      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetProjectElement@1100528006(VAR DocumentLink@1100528002 : Record 11012747;RecRef@1100528001 : RecordRef;Lookup@1100528000 : Boolean);
    VAR
      ProjectElement@1100528003 : Record 11012010;
      ActionResult@1100528004 : Action;
    BEGIN
      RecRef.SETTABLE(ProjectElement);
      IF DocumentLink."Internal Company" <> '' THEN
        ProjectElement.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        ProjectElement.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, ProjectElement);
      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ProjectElement);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;
      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SetGenIssue@1100528705(VAR DocumentLink@1100528002 : Record 11012747;RecRef@1100528001 : RecordRef;Lookup@1100528000 : Boolean);
    VAR
      GenIssue@1100528003 : Record 11125907;
      ActionResult@1100528004 : Action;
    BEGIN
      RecRef.SETTABLE(GenIssue);
      IF DocumentLink."Internal Company" <> '' THEN
        GenIssue.CHANGECOMPANY(DocumentLink."Internal Company");
      IF DocumentLink."Filter Expression" <> '' THEN
        GenIssue.SETVIEW(DocumentLink."Filter Expression");
      IF Lookup THEN
        ActionResult := PAGE.RUNMODAL(0, GenIssue);
      IF ActionResult = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(GenIssue);
        DocumentLink."Record ID" := RecRef.RECORDID;
      END;
      RecRef.CLOSE;
    END;

    PROCEDURE GetJobRID@1199198000(ProjectNo@1199198000 : Code[20];VAR DocLinkRID@1199198002 : RecordID);
    VAR
      Job@1199198001 : Record 11072003;
      RecRef@1199198003 : RecordRef;
    BEGIN
      Job.GET(ProjectNo);
      RecRef.GETTABLE(Job);

      DocLinkRID := RecRef.RECORDID;
    END;

    PROCEDURE GetRespCenterRID@1199198004(Code@1199198001 : Code[10];VAR DocLinkRID@1199198003 : RecordID);
    VAR
      ResponsibilityCenter@1199198000 : Record 5714;
      RecRef@1199198002 : RecordRef;
    BEGIN
      ResponsibilityCenter.GET(Code);
      RecRef.GETTABLE(ResponsibilityCenter);

      DocLinkRID := RecRef.RECORDID;
    END;

    PROCEDURE GeneratePossibleDocLinks@1100525137();
    VAR
      PossibleDocumentLink@1100525000 : Record 11012748;
    BEGIN
      ProcessPossibleDocLink(11072003, '', 0, 0); // Job
      ProcessPossibleDocLink(11012500, '', 0, 0); // Plot
      ProcessPossibleDocLink(11012750, '', 0, 0); // Try-Out
      ProcessPossibleDocLink(11012758, '', 0, 0); // Try-Out Quote
      ProcessPossibleDocLink(11012763, '', 0, 0); // Try-out Quote Version
      ProcessPossibleDocLink(11012823, '', 0, 0); // Service Order
      ProcessPossibleDocLink(11229279, '', 0, 0); // Work Order
      ProcessPossibleDocLink(11012801, '', 0, 0); // Service Location
      ProcessPossibleDocLink(11012812, '', 0, 0); // Service-Contract
      ProcessPossibleDocLink(11012151, '', 0, 0); // Estimate
      ProcessPossibleDocLink(11012507, '', 0, 0); // Delivery
      ProcessPossibleDocLink(11012100, '', 0, 0); // Delivered Project  //DP00846
      ProcessPossibleDocLink(11012101, '', 0, 0); // Delivered Object
      //ProcessPossibleDocLink(11012155, '', 0, 0); // Recipe OLD (DP01090)
      ProcessPossibleDocLink(11020581, '', 0, 0); // Base Recipe (DP00381)
      ProcessPossibleDocLink(11012912, '', 0, 0); // Investment Proposal
      ProcessPossibleDocLink(11012004, '', 0, 0); // Extension Contract
      ProcessPossibleDocLink(5714, '', 0, 0);     // Responsibility Center
      ProcessPossibleDocLink(11012026, '', 0, 0); // Project Purchase Action
      ProcessPossibleDocLink(11229330, '', 0, 0); // Purchase Requisition  //DP01137
      ProcessPossibleDocLink(11012450, '', 0, 0); // Complaint
      ProcessPossibleDocLink(11012456, '', 0, 0); // Project Assignment
      ProcessPossibleDocLink(11012501, '', 0, 0); // House Model
      ProcessPossibleDocLink(11012509, '', 0, 0); // Option Main Group
      ProcessPossibleDocLink(11012504, '', 0, 0); // Option Group
      ProcessPossibleDocLink(11012505, '', 0, 0); // Option Sub Group
      ProcessPossibleDocLink(11012502, '', 0, 0); // Option
      ProcessPossibleDocLink(11012551, '', 0, 0); // Plant Type
      ProcessPossibleDocLink(11012554, '', 0, 0); // Plant Location
      ProcessPossibleDocLink(11012552, '', 0, 0); // Plant Number
      ProcessPossibleDocLink(11072667, '', 0, 0); // Vehicle (Plant)  //DP00331
      ProcessPossibleDocLink(11012540, '', 0, 0); // Lease Contract (Plant)  //DP00331
      ProcessPossibleDocLink(11012556, '', 0, 0); // Plant Order
      ProcessPossibleDocLink(11012557, '', 0, 0); // Plant Order Line  //DP00183
      ProcessPossibleDocLink(11012559, '', 0, 0); // Exit Order
      ProcessPossibleDocLink(11012560, '', 0, 0); // Exit Order Line  //DP00183
      ProcessPossibleDocLink(11012564, '', 0, 0); // Inspection  //DP00899
      ProcessPossibleDocLink(11012565, '', 0, 0); // Rental Correction
      ProcessPossibleDocLink(11020505, '', 0, 0); // Plant Transport Order
      ProcessPossibleDocLink(11020507, '', 0, 0); // Posted Plant Transport Order
      ProcessPossibleDocLink(11020517, '', 0, 0); // Plant Transport Ride
      ProcessPossibleDocLink(11020520, '', 0, 0); // Plant Request
      ProcessPossibleDocLink(11020552, '', 0, 0); // Plant Rental Free Order
      ProcessPossibleDocLink(11229918, '', 0, 0); // Plant Quote
      ProcessPossibleDocLink(11229935, '', 0, 0); // Plant Rental Agreement
      ProcessPossibleDocLink(11012910, '', 0, 0); // Standard Development Phase
      ProcessPossibleDocLink(11012940, '', 0, 0); // Rental Unit
      ProcessPossibleDocLink(11012941, '', 0, 0); // Rental Package  //DP00617
      ProcessPossibleDocLink(11012752, '', 0, 0); // Contact Feature
      ProcessPossibleDocLink(11012770, '', 0, 0); // Provisional Work Document Type
      ProcessPossibleDocLink(23, '', 0, 0);       // Vendor
      ProcessPossibleDocLink(5080, '', 0, 0);     // To-do
      ProcessPossibleDocLink(11012822, '', 0, 0); // Service Call
      ProcessPossibleDocLink(11012005, '', 0, 0); // Project Principal
      ProcessPossibleDocLink(11012018, '', 0, 0); // Project Installment
      ProcessPossibleDocLink(11012020, '', 0, 0); // Commision
      ProcessPossibleDocLink(11012021, '', 0, 0); // Settlement Sheet
      ProcessPossibleDocLink(11012471, '', 0, 0); // Installment Motivation
      ProcessPossibleDocLink(11012240, '', 0, 0); // Parcel
      ProcessPossibleDocLink(11012774, '', 0, 0); // Provisional Work
      ProcessPossibleDocLink(112, '', PossibleDocumentLink."Use Caption from Object Type"::Page, 132); // Sales Invoice Header
      ProcessPossibleDocLink(38, 'WHERE(Field1=CONST(Quote))', PossibleDocumentLink."Use Caption from Object Type"::Page, 49); // Purchase Quote
      ProcessPossibleDocLink(38, 'WHERE(Field1=CONST(Order))', PossibleDocumentLink."Use Caption from Object Type"::Page, 50); // Purchase Order
      ProcessPossibleDocLink(38, 'WHERE(Field1=CONST(Blanket Order))', PossibleDocumentLink."Use Caption from Object Type"::Page, 509); // Purchase Blanket Order
      ProcessPossibleDocLink(114, '', PossibleDocumentLink."Use Caption from Object Type"::Page, 134); // Sales Cr.Memo Header
      ProcessPossibleDocLink(11012968, '', 0, 0);                               // KOMO Installation by Plot
      ProcessPossibleDocLink(36, 'WHERE(Field1=CONST(Quote))', PossibleDocumentLink."Use Caption from Object Type"::Page, 41); // Sales Header
      ProcessPossibleDocLink(36, 'WHERE(Field1=CONST(Order))', PossibleDocumentLink."Use Caption from Object Type"::Page, 42); // Sales Header
      ProcessPossibleDocLink(11072055, 'WHERE(Field1=CONST(Quote))', PossibleDocumentLink."Use Caption from Object Type"::Page, 11072097); // Sales Quote Archive
      ProcessPossibleDocLink(11072055, 'WHERE(Field1=CONST(Order))', PossibleDocumentLink."Use Caption from Object Type"::Page, 11072094); // Sales Order Archive
      ProcessPossibleDocLink(11012513, '', 0, 0);                               // Option Quote Header
      ProcessPossibleDocLink(11012450, '', 0, 0); // Complaint
      ProcessPossibleDocLink(11020413, '', 0, 0); // Vendor Certificate
      ProcessPossibleDocLink(11020587, '', 0, 0); // Loan Header
      ProcessPossibleDocLink(11125986, '', 0, 0); // QA Deviation
      ProcessPossibleDocLink(11126005, '', 0, 0); // Accident QA
      ProcessPossibleDocLink(11125531, '', 0, 0); // Get Order (SMF)
      ProcessPossibleDocLink(11125533, '', 0, 0); // Standard Inspection (SMF) //*32793.n
      ProcessPossibleDocLink(11125534, '', 0, 0); // Project Inspection (SMF)  //*32793.n
      ProcessPossibleDocLink(11125535, '', 0, 0); // Inspection (SMF)
      ProcessPossibleDocLink(11012779, '', 0, 0); // Provisional Work Contact // jhoek.100111
      ProcessPossibleDocLink(38, 'WHERE(Field1=FILTER(Invoice))', 2, 51); // Purchase Invoice
      ProcessPossibleDocLink(38, 'WHERE(Field1=FILTER(Credit Memo))', 2, 52); // Purchase Credit Memo
      ProcessPossibleDocLink(122, '', 2, 138); // Purchase Invoice
      ProcessPossibleDocLink(124, '', 2, 140); // Purchase Credit Memo
      ProcessPossibleDocLink(36, 'WHERE(Field1=CONST(Invoice))', 2, 43);          // Sales Invoice
      ProcessPossibleDocLink(36, 'WHERE(Field1=CONST(Credit Memo))', 2, 44);          // Sales Credit Memo
      ProcessPossibleDocLink(38, 'WHERE(Field1=CONST(Invoice))', 2, 51); // Purchase Invoice
      ProcessPossibleDocLink(38, 'WHERE(Field1=CONST(Credit Memo))', 2, 52); // Purchase Credit Memo
      ProcessPossibleDocLink(122, '', 2, 138); // Purchase Invoice
      ProcessPossibleDocLink(124, '', 2, 140); // Purchase Credit Memo
      ProcessPossibleDocLink(36, 'WHERE(Field1=CONST(Invoice))', 2, 43);          // Sales Invoice
      ProcessPossibleDocLink(36, 'WHERE(Field1=CONST(Credit Memo))', 2, 44);          // Sales Credit Memo
      ProcessPossibleDocLink(38, 'WHERE(Field1=CONST(Invoice))', PossibleDocumentLink."Use Caption from Object Type"::Page, 51); // Purchase Invoice
      ProcessPossibleDocLink(38, 'WHERE(Field1=CONST(Credit Memo))', PossibleDocumentLink."Use Caption from Object Type"::Page, 52); // Purchase Credit Memo
      ProcessPossibleDocLink(122, '', PossibleDocumentLink."Use Caption from Object Type"::Page, 138); // Purchase Invoice
      ProcessPossibleDocLink(124, '', PossibleDocumentLink."Use Caption from Object Type"::Page, 140); // Purchase Credit Memo
      ProcessPossibleDocLink(36, 'WHERE(Field1=CONST(Invoice))', PossibleDocumentLink."Use Caption from Object Type"::Page, 43); // Sales Invoice
      ProcessPossibleDocLink(36, 'WHERE(Field1=CONST(Credit Memo))', PossibleDocumentLink."Use Caption from Object Type"::Page, 44); // Sales Credit Memo
      ProcessPossibleDocLink(11020630, '', 0, 0); //Project Forecast Header
      ProcessPossibleDocLink(11012034, '', 0, 0); //Prognosis
      ProcessPossibleDocLink(11020596, '', 0, 0); // Assembly Yard Number Object
      ProcessPossibleDocLink(11012055, '', 0, 0); // Advice Order Line
      ProcessPossibleDocLink(11020665, '', 0, 0); // Warranty Data per Purchase Order, RFC 337
      ProcessPossibleDocLink(5200, '', 0, 0); // Employee, jhoek.250511
      ProcessPossibleDocLink(11012526, '', 0, 0); // Proj. Mat. Req. Line, kkleermaker.n, 110822, M28687
      ProcessPossibleDocLink(11020663, '', 0, 0); // Assemb. Obj. Mat. Req. Line, kkleermaker.n, 110929, M29188
      ProcessPossibleDocLink(11020670, '', 0, 0); // Frost Out Registration
      ProcessPossibleDocLink(11020671, '', 0, 0); // Frost Out Request
      ProcessPossibleDocLink(11071691, '', 0, 0); // Service-Object
      ProcessPossibleDocLink(11020693, '', 0, 0); // Employee per Vendor
      //DP00065.sn
      ProcessPossibleDocLink(11072651, '', 0, 0); // Dispatch Note (SiB)
      ProcessPossibleDocLink(11072653, '', 0, 0); // Invoice (SiB)
      //DP00065.en
      ProcessPossibleDocLink(5050, '', 0, 0); // Contact dp00030
      ProcessPossibleDocLink(36, 'WHERE(Field1=CONST(Return Order))', PossibleDocumentLink."Use Caption from Object Type"::Page, 6630); // Sales Return Order dp00030a
      ProcessPossibleDocLink(36, 'WHERE(Field1=CONST(Blanket Order))', PossibleDocumentLink."Use Caption from Object Type"::Page, 507); // Sales Blanket Order dp00030a
      ProcessPossibleDocLink(18, '', 0, 0); // Customer dp00030a
      ProcessPossibleDocLink(295, '', 0, 0); // Reminder Header dp00030a
      ProcessPossibleDocLink(11071803, '', 0, 0); // Service Survey
      ProcessPossibleDocLink(11071816, '', 0, 0); // Complex  DP00095
      ProcessPossibleDocLink(11071819, '', 0, 0); // Premises DP00095
      ProcessPossibleDocLink(27, '', 0, 0); // Item, dp00116.n
      ProcessPossibleDocLink(11012915, '', 0, 0); // Project Development
      ProcessPossibleDocLink(11128777, '', 0, 0); // NEN2767 Condition Meas. Line
      ProcessPossibleDocLink(11128782, 'WHERE(Field20=CONST())', 0, 0); // LT. Maint. Plan Budget Header
      ProcessPossibleDocLink(11071753, '', 0, 0); // Service Order Inspection Line
      ProcessPossibleDocLink(1230, '', 0, 0); // SEPA Direct Debit Mandate (DP00640)
      ProcessPossibleDocLink(11020334, '', 0, 0); // Standard Object
      ProcessPossibleDocLink(11229833, '', 0, 0); // Purchase Order Line Guarantee DP00561
      ProcessPossibleDocLink(11071772, '', 0, 0); // SUP Recording Line
      ProcessPossibleDocLink(11072193, '', 0, 0); // Change Request //DP00545.n
      ProcessPossibleDocLink(11125777, '', 0, 0); // Glazing Service Call
      ProcessPossibleDocLink(11229900, '', 0, 0); //Risk Opportunity Schedule (DP00732)
      ProcessPossibleDocLink(11229903, '', 0, 0); //Risk Lines (DP00732)
      ProcessPossibleDocLink(11229904, '', 0, 0); //Opportunity Lines (DP00732)
      ProcessPossibleDocLink(11072243, '', 0, 0); //Settlement Quantity   (DP00771)
      ProcessPossibleDocLink(11072245, '', 0, 0); //Plot Unit             (DP00771)
      ProcessPossibleDocLink(11072252, '', 0, 0); //Plot SQ Rcording Line (DP00771)
      ProcessPossibleDocLink(11072254, '', 0, 0); //Plot Recording List Base Line (DP00771)
      ProcessPossibleDocLink(11072656, '', 0, 0); //GS1 Invoice (DP00881)
      ProcessPossibleDocLink(11229390, '', 0, 0); //Implementation Activity (DP00913)
      ProcessPossibleDocLink(11125880, '', 0, 0); // Field Service Worksheet Line DP00966
      ProcessPossibleDocLink(11125886, '', 0, 0); // Field Service Worksheet DP00966
      ProcessPossibleDocLink(11128785, '', 0, 0); //NEN2767/LTMP Line
      ProcessPossibleDocLink(11229311, '', 0, 0); //Project Object
      ProcessPossibleDocLink(120, '', 0, 0); //Purch. Rcpt. Header)
      ProcessPossibleDocLink(11124901, '', 0, 0); //Resource Request (GRP)
      ProcessPossibleDocLink(11125823, '', 0, 0); //BIM Model
      ProcessPossibleDocLink(11125827, '', 0, 0); //BIM Model Ifc file
      ProcessPossibleDocLink(11126011, '', 0, 0); //SH Workplan
      ProcessPossibleDocLink(11126012, '', 0, 0); //SH Workplan Participant
      ProcessPossibleDocLink(11126025, '', 0, 0); //SH Workp Process Report Detail
      ProcessPossibleDocLink(11072350, '', 0, 0); //INSBOU Maint. Instruction
      ProcessPossibleDocLink(11072351, '', 0, 0); //INSBOU Maint. Instruction Line
      ProcessPossibleDocLink(11020623, '', 0, 0); // Shipping Order (DP01449)
      ProcessPossibleDocLink(11020625, '', 0, 0); // Posted Shipping Order (C038018)
      ProcessPossibleDocLink(11126727, '', 0, 0); //DSP Adjustment Message
      ProcessPossibleDocLink(11012003, '', 0, 0); //Budget Adjustment
      ProcessPossibleDocLink(11229320, '', 0, 0); //Bank Guarantee
      ProcessPossibleDocLink(11071773, '', 0, 0); //SUP Production
      ProcessPossibleDocLink(11126740, '', 0, 0); //DSP Assignment
      ProcessPossibleDocLink(11126737, '', 0, 0); //DSP Judgement Production Recording
      ProcessPossibleDocLink(11071724, '', 0, 0); //Service Order Object
      ProcessPossibleDocLink(11126733, '', 0, 0); //DSP Cancellation
      ProcessPossibleDocLink(11126727, '', 0, 0); //DSP Adjustment Message
      ProcessPossibleDocLink(11126752, '', 0, 0); //DSP Plan Message
      ProcessPossibleDocLink(11012655, '', 0, 0); //Returned Loss Order
      ProcessPossibleDocLink(11126755, '', 0, 0); //DSP LIP Request
      ProcessPossibleDocLink(11126754, '', 0, 0); //DSP Assignment Ready
      ProcessPossibleDocLink(5740, '', 0, 0); // Transfer Order
      ProcessPossibleDocLink(5744, '', 0, 0); // Transfer Shipment
      ProcessPossibleDocLink(5746, '', 0, 0); // Transfer Receipt
      ProcessPossibleDocLink(11020276, '', 0, 0); // Vendor WKA Check
      ProcessPossibleDocLink(11012010, '', 0, 0); // Project Element
      ProcessPossibleDocLink(11125903, '', 0, 0); // Gen. Checklist Copy Line
      ProcessPossibleDocLink(11125907, '', 0, 0); // Gen. Issue
    END;

    PROCEDURE ProcessPossibleDocLink@1100525139(TableNo@1100525001 : Integer;FilterExpression@1199198000 : Text[100];UseCaptionFromObjectType@1100530000 : Integer;UseCaptionFromObjectID@1100530001 : Integer);
    VAR
      PossibleDocLink@1100525000 : Record 11012748;
    BEGIN
      // jhoek.190111.begin
      IF (UseCaptionFromObjectType = 0) AND (UseCaptionFromObjectID = 0) THEN BEGIN
        UseCaptionFromObjectType := PossibleDocLink."Use Caption from Object Type"::Table;
        UseCaptionFromObjectID := TableNo;
      END;
      // jhoek.190111.end

      IF PossibleDocLink.GET(TableNo, FilterExpression) THEN BEGIN
        IF (PossibleDocLink."Filter Expression" <> FilterExpression) OR
           (PossibleDocLink."Use Caption from Object Type" <> UseCaptionFromObjectType) OR // jhoek.190111
           (PossibleDocLink."Use Caption from Object ID" <> UseCaptionFromObjectID) // jhoek.190111
        THEN BEGIN
          PossibleDocLink."Filter Expression" := FilterExpression;
          PossibleDocLink."Use Caption from Object Type" := UseCaptionFromObjectType; // jhoek.190111
          PossibleDocLink."Use Caption from Object ID" := UseCaptionFromObjectID; // jhoek.190111
          PossibleDocLink.MODIFY;
        END;
        IF (PossibleDocLink."Link Type" = 0) THEN BEGIN //#C029551.sn
          PossibleDocLink."Link Type" := PossibleDocLink."Link Type"::Standard;
          PossibleDocLink.MODIFY;
        END; //#C029551.en
      END ELSE BEGIN
        PossibleDocLink.INIT;
        PossibleDocLink."Table No." := TableNo;
        PossibleDocLink."Filter Expression" := FilterExpression;
        PossibleDocLink."Use Caption from Object Type" := UseCaptionFromObjectType; // jhoek.190111
        PossibleDocLink."Use Caption from Object ID" := UseCaptionFromObjectID; // jhoek.190111
        PossibleDocLink."Link Type" := PossibleDocLink."Link Type"::Standard; //#C029551.n
        PossibleDocLink.INSERT;
      END;
    END;

    PROCEDURE ReplaceDocLink@1100525175(SourceLinkRecRef@1100525000 : RecordRef;TargetLinkRecRef@1100525001 : RecordRef);
    BEGIN
      MoveDocLinks(SourceLinkRecRef, TargetLinkRecRef, TRUE);
    END;

    PROCEDURE CopyDocLinks@1100528402(SourceLinkRecRef@1100528401 : RecordRef;TargetLinkRecRef@1100528400 : RecordRef);
    BEGIN
      MoveDocLinks(SourceLinkRecRef, TargetLinkRecRef, FALSE);
    END;

    LOCAL PROCEDURE MoveDocLinks@1100528403(SourceLinkRecRef@1100525000 : RecordRef;TargetLinkRecRef@1100525001 : RecordRef;DeleteSourceLink@1100528400 : Boolean);
    VAR
      SourceDocumentLink@1100525002 : Record 11012747;
      TargetDocumentLink@1100525003 : Record 11012747;
      SourceLinkRecID@1100525005 : RecordID;
      TargetLinkRecID@1100525004 : RecordID;
    BEGIN
      SourceLinkRecID := SourceLinkRecRef.RECORDID;
      TargetLinkRecID := TargetLinkRecRef.RECORDID;
      SourceDocumentLink.SETCURRENTKEY("Record ID");
      SourceDocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', SourceLinkRecID));
      SourceDocumentLink.SETRANGE("Internal Company", COMPANYNAME);
      IF DocumentsSelected THEN
        FilterFromDocProperties(SourceDocumentLink);
      IF SourceDocumentLink.FINDSET(TRUE, TRUE) THEN
        REPEAT
          IF FORMAT(TargetLinkRecID) <> '' THEN BEGIN
            TargetDocumentLink.INIT;
            TargetDocumentLink."Document No." := SourceDocumentLink."Document No.";
            IF DeleteSourceLink THEN
              TargetDocumentLink."Seq. No." := SourceDocumentLink."Seq. No."
            ELSE
              TargetDocumentLink."Seq. No." := GetFirstFreeSeqNo(SourceDocumentLink."Document No.");
            TargetDocumentLink."Table No." := TargetLinkRecID.TABLENO;
            TargetDocumentLink."Filter Expression" := GetFilterExpression(TargetLinkRecID);
            TargetDocumentLink."Internal Company" := SourceDocumentLink."Internal Company";
            TargetDocumentLink."Record ID" := TargetLinkRecID;
            TargetDocumentLink.Source := SourceDocumentLink.Source;
            IF gResetSource THEN
              TargetDocumentLink.Source := FALSE;
            IF DeleteSourceLink THEN
              SourceDocumentLink.DELETE;
            IF NOT DocumentLinkExists(TargetDocumentLink) THEN
              TargetDocumentLink.INSERT;
          END;
        UNTIL SourceDocumentLink.NEXT = 0;
    END;

    PROCEDURE SetResetSource@1100528000(ResetSource@1100525000 : Boolean);
    BEGIN
      gResetSource := ResetSource;  //Target
    END;

    LOCAL PROCEDURE DocumentLinkExists@1100528404(TargetDocumentLink@1100528400 : Record 11012747) : Boolean;
    VAR
      DocumentLink@1100528401 : Record 11012747;
    BEGIN
      DocumentLink.SETCURRENTKEY("Record ID"); //call
      DocumentLink.SETRANGE("Document No.", TargetDocumentLink."Document No.");
      DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', TargetDocumentLink."Record ID"));
      EXIT(NOT DocumentLink.ISEMPTY);
    END;

    LOCAL PROCEDURE GetFirstFreeSeqNo@1100528405(DocumentNo@1100528401 : Code[20]) : Integer;
    VAR
      DocumentLink@1100528400 : Record 11012747;
    BEGIN
      DocumentLink.SETRANGE("Document No.", DocumentNo);
      IF DocumentLink.FINDLAST THEN
        EXIT(DocumentLink."Seq. No." + 10000)
      ELSE
        EXIT(10000);
    END;

    PROCEDURE FindRecordIDForCode@1100525176(VAR DocumentLink@1100525000 : Record 11012747;Code@1100525001 : Text[250]);
    VAR
      PossibleDocumentLink@1100525012 : Record 11012748;
      RecRef@1100525010 : RecordRef;
      FieldRef@1100525009 : FieldRef;
      KeyRef@1100525008 : KeyRef;
      IndexString@1100525005 : Text[1024];
      Field@1100525002 : Integer;
    BEGIN
      WITH DocumentLink DO BEGIN
        RecRef.OPEN("Table No.", FALSE, "Internal Company");
        IF "Filter Expression" <> '' THEN BEGIN
          RecRef.SETVIEW("Filter Expression");
          CASE TRUE OF
            (RecRef.NUMBER = 36) OR (RecRef.NUMBER = 38):
              BEGIN
                FieldRef := RecRef.FIELD(3);
              END;
            ELSE BEGIN
              ERROR(Text004, TABLECAPTION)
            END;
          END;
        END ELSE BEGIN
          KeyRef := RecRef.KEYINDEX(1);
          IF KeyRef.FIELDCOUNT = 1 THEN BEGIN
            IndexString := DELCHR(FORMAT(RecRef.KEYINDEX(1)), '=', 'Field');
            EVALUATE(Field, SELECTSTR(1, IndexString));
            FieldRef := RecRef.FIELD(Field);
          END ELSE BEGIN
            ERROR(Text004, TABLECAPTION)
          END;
        END;
        FieldRef.SETFILTER(Code);
        IF RecRef.COUNT = 1 THEN BEGIN
          RecRef.FINDFIRST;
          "Record ID" := RecRef.RECORDID;
        END ELSE BEGIN
          ERROR(Text005, PossibleDocumentLink.GetLinkName("Table No.", "Filter Expression"), Code);
        END;
      END; //end with
    END;

    PROCEDURE EntityHasDocumentLinks@1100525075(RecRef@1100525000 : RecordRef) : Boolean;
    VAR
      DocumentLink@1100525001 : Record 11012747;
    BEGIN
      DocumentLink.SETCURRENTKEY("Record ID");
      DocumentLink.SETFILTER("Record ID",  STRSUBSTNO('''%1''',RecRef.RECORDID));
      DocumentLink.SETRANGE("Internal Company", COMPANYNAME);
      IF gDocumentCompany <> '' THEN
        DocumentLink.SETRANGE("Internal Company", gDocumentCompany);
      EXIT(NOT DocumentLink.ISEMPTY);
    END;

    PROCEDURE EntityNumberOfDocumentLinks@1100525007(RecRef@1100525000 : RecordRef) : Integer;
    VAR
      DocumentLink@1100525001 : Record 11012747;
      DocumentMgtSetup@1100528400 : Record 11071831;
    BEGIN
      DocumentLink.SETCURRENTKEY("Record ID");
      DocumentLink.SETFILTER("Record ID",  STRSUBSTNO('''%1''',RecRef.RECORDID));
      IF DocumentMgtSetup.GET THEN
        IF DocumentMgtSetup."Show Only Own Documents" THEN
          DocumentLink.SETRANGE("Internal Company", COMPANYNAME);
      IF gDocumentCompany <> '' THEN
        DocumentLink.SETRANGE("Internal Company", gDocumentCompany);
      EXIT(DocumentLink.COUNT);
    END;

    PROCEDURE ReplaceDocRelation@1210190005(SourceLinkRecRef@1210190006 : RecordRef;TargetLinkRecRef@1210190005 : RecordRef);
    VAR
      DocumentRelation@1210190002 : Record 11012407;
      NewDocumentRelation@1210190004 : Record 11012407;
      SalesHeader@1210190007 : Record 36;
      SalesInvoiceHeader@1210190008 : Record 112;
      SalesCrMemoHeader@1210190009 : Record 114;
      SourceNo@1210190000 : Code[20];
      TargetNo@1210190001 : Code[20];
    BEGIN
      // **4PS MVOS
      CASE SourceLinkRecRef.NUMBER OF
        DATABASE::"Sales Header":
          BEGIN
            SourceLinkRecRef.SETTABLE(SalesHeader);
            SourceNo := SalesHeader."No.";
          END;
      END;

      CASE TargetLinkRecRef.NUMBER OF
        DATABASE::"Sales Invoice Header":
          BEGIN
            TargetLinkRecRef.SETTABLE(SalesInvoiceHeader);
            TargetNo := SalesInvoiceHeader."No.";
          END;
        DATABASE::"Sales Cr.Memo Header":
          BEGIN
            TargetLinkRecRef.SETTABLE(SalesCrMemoHeader);
            TargetNo := SalesCrMemoHeader."No.";
          END;
      END;

      DocumentRelation.RESET;
      DocumentRelation.SETCURRENTKEY("Document Type", "No.", "Seq. No.");

      CASE SalesHeader."Document Type" OF
        SalesHeader."Document Type"::Invoice:
          DocumentRelation.SETRANGE("Document Type", DocumentRelation."Document Type"::"Sales Invoice");
        SalesHeader."Document Type"::"Credit Memo":
          DocumentRelation.SETRANGE("Document Type", DocumentRelation."Document Type"::"Sales Cr.Memo");
      END;

      DocumentRelation.SETRANGE("No.", SourceNo);
      IF DocumentRelation.FINDSET THEN BEGIN
        REPEAT
          NewDocumentRelation.INIT;
          NewDocumentRelation := DocumentRelation;

          CASE NewDocumentRelation."Document Type" OF
            DocumentRelation."Document Type"::"Sales Invoice":
              NewDocumentRelation."Document Type" := NewDocumentRelation."Document Type"::"Posted Sales Invoice";
            DocumentRelation."Document Type"::"Sales Cr.Memo":
              NewDocumentRelation."Document Type" := NewDocumentRelation."Document Type"::"Posted Sales Cr.Memo";
          END;

          NewDocumentRelation."No." := TargetNo;

          DocumentRelation.DELETE(FALSE);
          NewDocumentRelation.INSERT(TRUE);
        UNTIL DocumentRelation.NEXT = 0;
      END;
    END;

    PROCEDURE RefersToOtherCompany@1100525000(DocumentLink@1100525000 : Record 11012747) : Boolean;
    BEGIN
      EXIT((DocumentLink."Internal Company" <> '') AND (DocumentLink."Internal Company" <> COMPANYNAME));
    END;

    PROCEDURE GetLinkDocRecRef@1100409006(TableNo@1100409003 : Integer;EntityKey@1100528101 : ARRAY [10] OF Code[20];VAR RecRef@1100409002 : RecordRef);
    VAR
      ServiceOrder@1100528104 : Record 11012823;
      WorkOrder@1100528003 : Record 11229279;
      ServiceCall@1100528105 : Record 11012822;
      ServiceContract@1100528106 : Record 11012812;
      ServiceLocation@1100528107 : Record 11012801;
      PurchaseHeader@1100528300 : Record 38;
      Job@1100528302 : Record 11072003;
      Contact@1100528301 : Record 5050;
      Employee@1100528307 : Record 5200;
      ProjectElement@1100528308 : Record 11012010;
      ProjectAuthority@1100528309 : Record 11020216;
      ProjectPrincipal@1100528310 : Record 11012005;
      ExtensionContract@1100528311 : Record 11012004;
      ProjectPurchaseAction@1100528312 : Record 11012026;
      PurchaseRequisition@1100528900 : Record 11229330;
      Plot@1100528313 : Record 11012500;
      TryOut@1100528314 : Record 11012750;
      HouseModel@1100409000 : Record 11012501;
      ServiceOrderInspectionLine@1100525000 : Record 11071753;
      SUPRecordingLine@1100528103 : Record 11071772;
      Complaint@1100409001 : Record 11012450;
      PlantOrder@1100528400 : Record 11012556;
      PlantOrderLine@1100528401 : Record 11012557;
      PlantRequest@1100525010 : Record 11020520;
      PlantRentalFreeOrder@1100529001 : Record 11020552;
      PlantQuote@1100529000 : Record 11229918;
      PlantRentalAgreement@1100529003 : Record 11229935;
      ChangeRequest@1100528000 : Record 11072193;
      ServiceObject@1100525001 : Record 11071691;
      StandardObject@1100525002 : Record 11020334;
      SettlementQuantity@1100525003 : Record 11072243;
      PlotUnit@1100525004 : Record 11072245;
      PlotSQRecordingLine@1100525005 : Record 11072252;
      PlotRecordingListBaseLine@1100525009 : Record 11072254;
      GS1Invoice@1100525006 : Record 11072656;
      SalesInvoiceHeader@1100525007 : Record 112;
      SalesCrMemoHeader@1100525008 : Record 114;
      ProjectObject@1100529401 : Record 11229311;
      ResourceRequest@1100529002 : Record 11124901;
      BimModel@1100529402 : Record 11125823;
      BimModelIfcFile@1100529403 : Record 11125827;
      KeyValueInteger@1100409004 : Integer;
      LineNo@1100409005 : Integer;
      FSTransit@1100528001 : Record 11125886;
      FSWorksheetTransitLine@1100528002 : Record 11125880;
      PurchRcptHeader@1100529400 : Record 120;
      SHWorkplan@1100529500 : Record 11126011;
      SHWorkplanParticipant@1100525011 : Record 11126012;
      SHWorkpProcessReportDetail@1100529501 : Record 11126025;
      NEN2767LTMPLine@1100528004 : Record 11128785;
      Option@1100525012 : Record 11012502;
      ReturnedLossOrder@1100527300 : Record 11012655;
      VendorWKACheck@1100525013 : Record 11020276;
      GenChecklistCopyLine@1100528700 : Record 11125903;
      GenIssue@1100528701 : Record 11125907;
      PurchCrMemoHdr@1100528200 : Record 124;
      PurchInvHeader@1100528201 : Record 122;
      DSPLIPRequest@1100528303 : Record 11126755;
      DSPAssignment@1100528305 : Record 11126740;
      BgInt@1100528304 : BigInteger;
    BEGIN
      CASE TableNo OF
        DATABASE::Contact:
          BEGIN
            Contact.GET(EntityKey[1]);
            RecRef.GETTABLE(Contact);
          END;
        DATABASE::Employee:
          BEGIN
            Employee.GET(EntityKey[1]);
            RecRef.GETTABLE(Employee);
          END;
        DATABASE::"Extension Contract":
          BEGIN
            ExtensionContract.GET(EntityKey[1], EntityKey[2]);
            RecRef.GETTABLE(ExtensionContract);
          END;
        DATABASE::"House Model":
          BEGIN
            HouseModel.GET(EntityKey[1], EntityKey[2]);
            RecRef.GETTABLE(HouseModel);
          END;
        DATABASE::Job:
          BEGIN
            Job.GET(EntityKey[1]);
            RecRef.GETTABLE(Job);
          END;
        DATABASE::Plot:
          BEGIN
            Plot.GET(EntityKey[1], EntityKey[2]);
            RecRef.GETTABLE(Plot);
          END;
        DATABASE::"Project Authority":
          BEGIN
            ProjectAuthority.GET(EntityKey[1], EntityKey[2], EntityKey[3], EntityKey[4]);
            RecRef.GETTABLE(ProjectAuthority);
          END;
        DATABASE::"Project Element":
          BEGIN
            ProjectElement.GET(EntityKey[1], EntityKey[2]);
            RecRef.GETTABLE(ProjectElement);
          END;
        DATABASE::"Project Principal":
          BEGIN
            ProjectPrincipal.GET(EntityKey[1], EntityKey[2]);
            RecRef.GETTABLE(ProjectPrincipal);
          END;
        DATABASE::"Project Purchase Action":
          BEGIN
            ProjectPurchaseAction.GET(EntityKey[1], EntityKey[2]);
            RecRef.GETTABLE(ProjectPurchaseAction);
          END;
        DATABASE::"Purchase Requisition":  //DP01137
          BEGIN
            PurchaseRequisition.GET(EntityKey[1], EntityKey[2]);
            RecRef.GETTABLE(PurchaseRequisition);
          END;
        DATABASE::"Purchase Header":
          BEGIN
            EVALUATE(KeyValueInteger, EntityKey[1]);
            PurchaseHeader.GET(KeyValueInteger, EntityKey[2]);
            RecRef.GETTABLE(PurchaseHeader);
          END;
        DATABASE::"Purch. Inv. Header":
          BEGIN
            PurchInvHeader.GET(EntityKey[1]);
            RecRef.GETTABLE(PurchInvHeader);
          END;
        DATABASE::"Purch. Cr. Memo Hdr.":
          BEGIN
            PurchCrMemoHdr.GET(EntityKey[1]);
            RecRef.GETTABLE(PurchCrMemoHdr);
          END;
        DATABASE::"Service Call":
          BEGIN
            ServiceCall.GET(EntityKey[1]);
            RecRef.GETTABLE(ServiceCall);
          END;
        DATABASE::"Service-Contract":
          BEGIN
            ServiceContract.GET(EntityKey[1]);
            RecRef.GETTABLE(ServiceContract);
          END;
        DATABASE::"Service Location":
          BEGIN
            ServiceLocation.GET(EntityKey[1]);
            RecRef.GETTABLE(ServiceLocation);
          END;
        DATABASE::"Service Order":
          BEGIN
            ServiceOrder.GET(EntityKey[1]);
            RecRef.GETTABLE(ServiceOrder);
          END;
        DATABASE::"Work Order":
          BEGIN
            WorkOrder.GET(EntityKey[1]);
            RecRef.GETTABLE(WorkOrder);
          END;
        DATABASE::"Try-out":
          BEGIN
            TryOut.GET(EntityKey[1]);
            RecRef.GETTABLE(TryOut);
          END;
        DATABASE::"Service Order Inspection Line":
          BEGIN
            //Service Order No.,Service Object No.,Maintenance Scheme Code,Line No.
            IF EVALUATE(LineNo, EntityKey[4]) THEN BEGIN
              ServiceOrderInspectionLine.GET(EntityKey[1], EntityKey[2], EntityKey[3], LineNo);
              RecRef.GETTABLE(ServiceOrderInspectionLine);
            END ELSE BEGIN
              ERROR(Text006, TableNo);
            END;
          END;
        DATABASE::"SUP Recording Line":
          BEGIN
            SUPRecordingLine.GET(EntityKey[1], EntityKey[2]);
            RecRef.GETTABLE(SUPRecordingLine);
          END;
        DATABASE::Complaint:  //DP00688 (C017839)
          BEGIN
            Complaint.GET(EntityKey[1]);
            RecRef.GETTABLE(Complaint);
          END;
        DATABASE::"Plant Order":
          BEGIN
            PlantOrder.GET(EntityKey[1]);
            RecRef.GETTABLE(PlantOrder);
          END;
        DATABASE::"Plant Order Line":
          BEGIN
            PlantOrderLine.GET(EntityKey[1], EntityKey[2]);
            RecRef.GETTABLE(PlantOrderLine);
          END;
        DATABASE::"Plant Request":
          BEGIN
            PlantRequest.GET(EntityKey[1]);
            RecRef.GETTABLE(PlantRequest);
          END;
        DATABASE::"Plant Rental Free Order":
          BEGIN
            PlantRentalFreeOrder.GET(EntityKey[1]);
            RecRef.GETTABLE(PlantRentalFreeOrder);
          END;
        DATABASE::"Plant Quote":
          BEGIN
            PlantQuote.GET(EntityKey[1]);
            RecRef.GETTABLE(PlantQuote);
          END;
        DATABASE::"Plant Rental Agreement":
          BEGIN
            PlantRentalAgreement.GET(EntityKey[1], EntityKey[2], EntityKey[3]);
            RecRef.GETTABLE(PlantRentalAgreement);
          END;
        DATABASE::"Change Request":
          BEGIN
            ChangeRequest.GET(EntityKey[1]);
            RecRef.GETTABLE(ChangeRequest);
          END;
        DATABASE::"Service-Object":
          BEGIN
            ServiceObject.GET(EntityKey[1]);
            RecRef.GETTABLE(ServiceObject);
          END;
        DATABASE::"Standard Object":
          BEGIN
            StandardObject.GET(EntityKey[1]);
            RecRef.GETTABLE(StandardObject);
          END;
        DATABASE::"Settlement Quantity":  //DP00771
          BEGIN
            SettlementQuantity.GET(EntityKey[1]);
            RecRef.GETTABLE(SettlementQuantity);
          END;
        DATABASE::"Plot Unit":  //DP00771
          BEGIN
            PlotUnit.GET(EntityKey[1]);
            RecRef.GETTABLE(PlotUnit);
          END;
        DATABASE::"Plot SQ Recording Line":  //DP00771
          BEGIN
            PlotSQRecordingLine.GET(EntityKey[1]);
            RecRef.GETTABLE(PlotSQRecordingLine);
          END;
        DATABASE::"Plot Recording List Base Line":  //DP00771
          BEGIN
            PlotRecordingListBaseLine.GET(EntityKey[1], EntityKey[2], EntityKey[3], EntityKey[4], EntityKey[5]);
            RecRef.GETTABLE(PlotRecordingListBaseLine);
          END;
        DATABASE::"INSBOU Invoice":  //DP00881
          BEGIN
            GS1Invoice.GET(EntityKey[1]);
            RecRef.GETTABLE(GS1Invoice);
          END;
        DATABASE::"Sales Invoice Header":
          BEGIN
            SalesInvoiceHeader.GET(EntityKey[1]);
            RecRef.GETTABLE(SalesInvoiceHeader);
          END;
        DATABASE::"Sales Cr.Memo Header":
          BEGIN
            SalesCrMemoHeader.GET(EntityKey[1]);
            RecRef.GETTABLE(SalesCrMemoHeader);
          END;
        DATABASE::"FS Transit": //DP00966
            BEGIN
            FSTransit.GET(EntityKey[1]);
            RecRef.GETTABLE(FSTransit);
          END;
        DATABASE::"FS Worksh. Transit Line": //DP00966
          BEGIN
            FSWorksheetTransitLine.GET(EntityKey[1], EntityKey[2]);
            RecRef.GETTABLE(FSWorksheetTransitLine);
          END;
        DATABASE::"Purch. Rcpt. Header":
          BEGIN
            PurchRcptHeader.GET(EntityKey[1]);
            RecRef.GETTABLE(PurchRcptHeader);
          END;
        DATABASE::"Project Object":
          BEGIN
            ProjectObject.GET(EntityKey[1]);
            RecRef.GETTABLE(ProjectObject);
          END;
        DATABASE::"Resource Request":
          BEGIN
            ResourceRequest.GET(EntityKey[1]);
            RecRef.GETTABLE(ResourceRequest);
          END;
        DATABASE::"BIM Model":
          BEGIN
            BimModel.GET(EntityKey[1]);
            RecRef.GETTABLE(BimModel);
          END;
        DATABASE::"BIM Model IFC File":
          BEGIN
            BimModelIfcFile.GET(EntityKey[1]);
            RecRef.GETTABLE(BimModelIfcFile);
          END;
        DATABASE::"SH Workplan":
          BEGIN
            SHWorkplan.GET(EntityKey[1]);
            RecRef.GETTABLE(SHWorkplan);
          END;
        DATABASE::"SH Workplan Participant":
          BEGIN
            SHWorkplanParticipant.GET(EntityKey[1]);
            RecRef.GETTABLE(SHWorkplanParticipant);
          END;
        DATABASE::"SH Workp Process Report Detail":
          BEGIN
            SHWorkpProcessReportDetail.GET(EntityKey[1]);
            RecRef.GETTABLE(SHWorkpProcessReportDetail);
          END;
        DATABASE::"NEN2767/LTMP Line":
          BEGIN
            NEN2767LTMPLine.GET(EntityKey[1],EntityKey[2],EntityKey[3]);
            RecRef.GETTABLE(NEN2767LTMPLine);
          END;
        DATABASE::Option:
          BEGIN
            Option.GET(EntityKey[1],EntityKey[2],EntityKey[3],EntityKey[4],EntityKey[5],EntityKey[6],EntityKey[7]);
            RecRef.GETTABLE(Option);
          END;
        DATABASE::"Returned Loss Order":
          BEGIN
            ReturnedLossOrder.GET(EntityKey[1]);
            RecRef.GETTABLE(ReturnedLossOrder);
          END;
        DATABASE::"Vendor WKA Check":
          BEGIN
            VendorWKACheck.GET(EntityKey[1],EntityKey[2]);
            RecRef.GETTABLE(VendorWKACheck);
          END;
        DATABASE::"Gen. Checklist Copy Line":
          BEGIN
            GenChecklistCopyLine.GET(EntityKey[1], EntityKey[2]);
            RecRef.GETTABLE(GenChecklistCopyLine);
          END;
        DATABASE::"Gen. Issue":
          BEGIN
            GenIssue.GET(EntityKey[1]);
            RecRef.GETTABLE(GenIssue);
          END;
        DATABASE::"DSP LIP Request":
          BEGIN
            IF EVALUATE(BgInt, EntityKey[1]) THEN BEGIN
              DSPLIPRequest.GET(BgInt);
              RecRef.GETTABLE(DSPLIPRequest);
            END ELSE
              ERROR(Text006, TableNo);
          END;
        DATABASE::"DSP Assignment":
          BEGIN
            IF EVALUATE(BgInt, EntityKey[1]) THEN BEGIN
              DSPAssignment.GET(BgInt);
              RecRef.GETTABLE(DSPAssignment);
            END ELSE
              ERROR(Text006, TableNo);
          END;
      ELSE
        ERROR(Text006, TableNo);
      END;
    END;

    PROCEDURE SetDocumentCompany@1100529011(DocumentCompany@1100525000 : Text);
    BEGIN
      gDocumentCompany := DocumentCompany;
    END;

    PROCEDURE CopyDocumentLinkOtherCompany@1100529605(VAR RecRefFrom@1100525000 : RecordRef;VAR RecRefTo@1100525001 : RecordRef;CompanyFrom@1100525002 : Text[50];DeleteOldLink@1100525006 : Boolean);
    VAR
      FileSystemOnPremiseSetup@1100529602 : Record 11125739;
      DocumentLink@1100525004 : Record 11012747;
      DocumentProperties@1100525005 : Record 11012746;
      NewDocumentProperties@1100525007 : Record 11012746;
      DocumentLinkMgt@1100525009 : Codeunit 11012401;
      ExternalDocumentMgt@1100529600 : Codeunit 11012403;
      DocumentManagement@1100528401 : Codeunit 11012406;
      TargetStorageType@1100528400 : Option;
      TargetDirectory@1100529601 : Text[250];
      TargetFileURI@1100528402 : Text;
    BEGIN
      //DP01497
      DocumentLink.SETCURRENTKEY("Record ID");
      DocumentLink.SETRANGE("Table No.", RecRefFrom.NUMBER);
      DocumentLink.SETRANGE("Internal Company", CompanyFrom);
      DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', RecRefFrom.RECORDID));
      IF DocumentLink.FINDSET THEN BEGIN
        FileSystemOnPremiseSetup.GET;
        DocumentManagement.GetStorageLocation('', '', '', '', 0D, TargetDirectory, TargetStorageType);
        REPEAT
          IF DocumentProperties.GET(DocumentLink."Document No.") THEN
            IF NOT DocumentLinkFileExist(RecRefTo, DocumentProperties.GetStorageURI) THEN
              IF (DocumentProperties."Internal Company" = CompanyFrom) AND (CompanyFrom <> COMPANYNAME) THEN BEGIN
                ExternalDocumentMgt.SendExtDocToFolder(
                  DocumentProperties, TargetStorageType, TargetDirectory, TargetFileURI);
                CopyDocumentProperties(
                  DocumentProperties, NewDocumentProperties, TargetStorageType, TargetFileURI);
                DocumentLinkMgt.CreateOneDocumentLink(NewDocumentProperties, RecRefTo.RECORDID);
              END ELSE BEGIN
                IF DeleteOldLink THEN
                  DocumentLinkMgt.DeleteDocumentLink2(DocumentProperties, RecRefFrom.RECORDID);
                DocumentLinkMgt.CreateOneDocumentLink(DocumentProperties, RecRefTo.RECORDID);
              END;
        UNTIL DocumentLink.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE DocumentLinkFileExist@1100529604(RecRefTo@1100525004 : RecordRef;StorageURI@1100525003 : Text[250]) : Boolean;
    VAR
      DocumentLink@1100525006 : Record 11012747;
      DocumentProperties@1100525005 : Record 11012746;
    BEGIN
      //DP01497
      DocumentLink.SETCURRENTKEY("Record ID");
      DocumentLink.SETRANGE("Table No.", RecRefTo.NUMBER);
      DocumentLink.SETRANGE("Internal Company", COMPANYNAME);
      DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', RecRefTo.RECORDID));
      IF DocumentLink.FINDSET THEN
        REPEAT
          IF DocumentProperties.GET(DocumentLink."Document No.") THEN
            IF DocumentProperties.GetStorageURI = StorageURI THEN
              EXIT(TRUE);
        UNTIL DocumentLink.NEXT = 0;

      EXIT(FALSE);
    END;

    LOCAL PROCEDURE CopyDocumentProperties@1100529603(VAR OldDocumentProperies@1100525000 : Record 11012746;VAR NewDocumentProperties@1100525001 : Record 11012746;NewStorageType@1100528400 : Option;NewFileURI@1100528401 : Text);
    BEGIN
      //DP01497
      NewDocumentProperties := OldDocumentProperies;

      WITH NewDocumentProperties DO BEGIN
        "Internal Company" := COMPANYNAME;
        "No." := '';
        ValidateStorageURI(NewStorageType, NewFileURI);
        INSERT(TRUE);
      END;
    END;

    PROCEDURE SetSelectedDocuments@1100527301(DocumentPropertiesNo@1100527300 : Code[20]);
    BEGIN
      IF gDocumentProperties.GET(DocumentPropertiesNo) THEN BEGIN
        gDocumentProperties.MARK(TRUE);
        DocumentsSelected := TRUE;
      END;
    END;

    LOCAL PROCEDURE FilterFromDocProperties@1100527300(VAR DocumentLink@1100527300 : Record 11012747);
    BEGIN
      IF DocumentLink.FINDSET THEN BEGIN
        gDocumentProperties.MARKEDONLY(TRUE);
        REPEAT
          gDocumentProperties.SETRANGE("No.", DocumentLink."Document No.");
          IF NOT gDocumentProperties.ISEMPTY THEN
            DocumentLink.MARK(TRUE);
        UNTIL DocumentLink.NEXT = 0;

        DocumentLink.MARKEDONLY(TRUE);
        gDocumentProperties.CLEARMARKS;
        DocumentsSelected := FALSE;
      END;
    END;

    PROCEDURE HasPPTProject@1100527808(DocLinkRID@1100527800 : ARRAY [20] OF RecordID;VAR Job@1100527801 : Record 11072003) : Boolean;
    VAR
      i@1100527802 : Integer;
      RecordID@1100527803 : RecordID;
    BEGIN
      FOR i := 1 TO ARRAYLEN(DocLinkRID) DO BEGIN
        IF FORMAT(DocLinkRID[i]) <> '' THEN BEGIN
          RecordID:= DocLinkRID[i];
          IF (RecordID.TABLENO = DATABASE::Job) THEN
            BEGIN
              IF (Job.GET(RecordID)) THEN
                BEGIN
                  IF (Job.IsJobInProjectPortal) THEN
                    EXIT(TRUE);
                END;
            END;
        END;
      END;
      EXIT(FALSE);
    END;

    PROCEDURE HasDPTDualProject@1100527814(DocLinkRID@1100527800 : ARRAY [20] OF RecordID;VAR Job@1100527801 : Record 11072003;VAR ServiceLocation@1100527804 : Record 11012801) : Boolean;
    VAR
      i@1100527802 : Integer;
      RecordID@1100527803 : RecordID;
    BEGIN
      FOR i := 1 TO ARRAYLEN(DocLinkRID) DO BEGIN
        IF FORMAT(DocLinkRID[i]) <> '' THEN BEGIN
          RecordID:= DocLinkRID[i];
          IF (RecordID.TABLENO = DATABASE::Job) THEN
          BEGIN
            IF (Job.GET(RecordID)) THEN
              BEGIN
                IF (Job.IsDocumentPortalDualProject) THEN
                  EXIT(TRUE);
              END;
          END;

        IF (RecordID.TABLENO = DATABASE::"Service Location") THEN
          BEGIN
            IF (ServiceLocation.GET(RecordID)) THEN
              BEGIN
                IF (ServiceLocation.IsDocumentPortalServiceLocation) THEN
                  EXIT(TRUE);
              END;
          END;
        END;
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE AddRecIDItemToArray@1100527807(RID@1100527800 : RecordID;VAR ArrRecordID@1100527801 : ARRAY [20] OF RecordID);
    VAR
      i@1100527802 : Integer;
    BEGIN
      FOR i:=1 TO ARRAYLEN(ArrRecordID) DO BEGIN
        IF (RID = ArrRecordID[i]) THEN
          EXIT;

        IF (FORMAT(ArrRecordID[i]) = '') THEN BEGIN
          ArrRecordID[i] := RID;
          EXIT;
        END;
      END;
    END;

    LOCAL PROCEDURE GetContactNoFromBusinessRelation@1100527804(CustomerNo@1100527800 : Code[20];VAR VariantValue@1100527802 : Variant);
    VAR
      ContactBusinessRelation@1100527801 : Record 5054;
    BEGIN
      ContactBusinessRelation.SETCURRENTKEY("Link to Table","No.");
      ContactBusinessRelation.SETRANGE("Link to Table",ContactBusinessRelation."Link to Table"::Customer);
      ContactBusinessRelation.SETRANGE("No.", CustomerNo);
      IF ContactBusinessRelation.FINDFIRST THEN BEGIN
        IF (ContactBusinessRelation."Contact No." <> '') THEN
          VariantValue := ContactBusinessRelation."Contact No.";
      END;
    END;

    PROCEDURE CreatePurchDocumentRelation@1100527650(PurchDocNo@1100527655 : Code[20];PurchDocType@1100527656 : Option;SourceRecordId@1100527651 : RecordID);
    VAR
      DocumentProperties@1100527654 : Record 11012746;
      DocumentType@1100527653 : Record 11012405;
      DocumentRelation@1100527652 : Record 11012407;
      SourceDocumentLink@1100527650 : Record 11012747;
      PurchaseHeader@1100527657 : Record 38;
    BEGIN
      SourceDocumentLink.SETCURRENTKEY("Record ID");
      SourceDocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', SourceRecordId));
      SourceDocumentLink.SETRANGE("Internal Company", COMPANYNAME);
      IF SourceDocumentLink.FINDFIRST THEN
        REPEAT
          IF DocumentProperties.GET(SourceDocumentLink."Document No.") THEN
            IF DocumentType.GET(DocumentProperties."Document Type") AND DocumentType."Attach to Document Relation" THEN BEGIN

              DocumentRelation.INIT;
              CASE PurchDocType OF
                PurchaseHeader."Document Type"::Order : DocumentRelation."Document Type" := DocumentRelation."Document Type"::"Purchase Order";
                PurchaseHeader."Document Type"::Quote : DocumentRelation."Document Type" := DocumentRelation."Document Type"::"Purchase Quote";
              END;
              DocumentRelation."No." := PurchDocNo;  //C058986: PurchDocNo (10->20)
              DocumentRelation.VALIDATE("Related Document No.", SourceDocumentLink."Document No.");
              DocumentRelation.Description := DocumentProperties.Description;
              DocumentRelation."Send by E-Mail" := TRUE;
              IF DocumentProperties.FileCanBeConvertedToPDF THEN
                DocumentRelation.Print := TRUE;
              IF DocumentRelation.INSERT THEN;
            END;
        UNTIL SourceDocumentLink.NEXT = 0;
    END;

    BEGIN
    {
      kk, 11-11-2010: Added function EntityHasDocumentLinks (rfc 369)
    }
    END.
  }
}

