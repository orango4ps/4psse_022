OBJECT Page 11125920 Plant Number List SF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[DEU=Werkzeugnummern;
               ENU=Plant Numbers;
               NLD=Materieelnummers;
               NOR=Maskinnr.;
               SVE=Maskinnummer];
    SourceTable=Table11012552;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
               END;

    OnAfterGetRecord=BEGIN
                       "Quantity in StockHideValue" := FALSE;
                       QuantityinStockOnFormat;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Plant Type";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="No." }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 8   ;2   ;Field     ;
                SourceExpr=Bulk;
                Visible=FALSE }

    { 1100485000;2;Field  ;
                SourceExpr=External }

    { 10  ;2   ;Field     ;
                SourceExpr=Quantity }

    { 12  ;2   ;Field     ;
                SourceExpr="Unit of Measure" }

    { 1100485002;2;Field  ;
                SourceExpr=Vendor;
                Visible=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="Vendor Name";
                Visible=FALSE }

    { 1100525001;2;Field  ;
                SourceExpr="Licence Number";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                SourceExpr="Technical Specifications";
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Serial No.";
                Visible=FALSE }

    { 1100525002;2;Field  ;
                SourceExpr="Registration No.";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Quantity in Stock";
                HideValue="Quantity in StockHideValue" }

    { 1210190002;2;Field  ;
                SourceExpr="Department Code" }

    { 1210190004;2;Field  ;
                SourceExpr="Purchase Order No.";
                Visible=FALSE }

    { 1100485004;2;Field  ;
                SourceExpr="Inspection No.";
                Visible=FALSE }

    { 1210190000;2;Field  ;
                SourceExpr="Fixed Asset";
                Visible=FALSE }

    { 1100525003;2;Field  ;
                CaptionML=[DEU=Anzahl Anl.;
                           ENU=Quantity FA;
                           NLD=Aantal VA;
                           NOR=Antall driftsmidler;
                           SVE=Antal FA];
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=GetQuantityFA();
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr=Posted;
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Posting Date";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      DPA_IsHardFilter@1100000999 : Boolean;
      "Quantity in StockHideValue"@19059762 : Boolean INDATASET;

    PROCEDURE Card@1210190016();
    VAR
      PlantNumber@1210190000 : Record 11012552;
    BEGIN
      PlantNumber.SETRANGE("Plant Type","Plant Type");
      IF "No." <> '' THEN
        PlantNumber.SETRANGE("No.","No.");
      PAGE.RUNMODAL(PAGE::"Plant Number",PlantNumber);
    END;

    PROCEDURE LedgerEntries@1210190000();
    VAR
      PlantLedgerEntry@1210190000 : Record 11012572;
    BEGIN
      PlantLedgerEntry.SETCURRENTKEY("Plant Type","Plant No.","Posting Date");
      PlantLedgerEntry.SETRANGE("Plant Type","Plant Type");
      PlantLedgerEntry.SETRANGE("Plant No.","No.");
      PAGE.RUNMODAL(PAGE::"Plant Ledger Entries",PlantLedgerEntry);
    END;

    PROCEDURE RentEntries@1210190001();
    VAR
      PlantRentEntry@1210190000 : Record 11012535;
    BEGIN
      PlantRentEntry.SETCURRENTKEY("Plant Type","Plant No.","Vendor No.");
      PlantRentEntry.SETRANGE("Plant Type","Plant Type");
      PlantRentEntry.SETRANGE("Plant No.","No.");
      PAGE.RUNMODAL(PAGE::"Plant Rent Entries",PlantRentEntry);
    END;

    PROCEDURE Inspection@1210190002();
    VAR
      Inspection@1210190000 : Record 11012564;
    BEGIN
      Inspection.SETRANGE("Plant Type","Plant Type");
      Inspection.SETRANGE("Plant No.","No.");
      //Inspection.SETFILTER("Present Location",'<>%1','');  //C000220.o
      PAGE.RUNMODAL(PAGE::Inspection,Inspection);
    END;

    PROCEDURE CarLeaseContracts@1210190003();
    VAR
      CarLeaseContract@1210190000 : Record 11012540;
    BEGIN
      CarLeaseContract.SETRANGE("Plant Type","Plant Type");
      CarLeaseContract.SETRANGE("Plant No.","No.");
      PAGE.RUNMODAL(PAGE::"Car Lease Contract",CarLeaseContract);
    END;

    PROCEDURE Translations@1210190004();
    VAR
      PlantTranslation@1210190000 : Record 11012542;
    BEGIN
      //DP00241.sn (27089)
      PlantTranslation.FILTERGROUP(9);
      PlantTranslation.SETRANGE(Type,PlantTranslation.Type::PlantNo);
      PlantTranslation.FILTERGROUP(0);
      //DP00241.en
      PlantTranslation.SETRANGE(Code,"Plant Type");
      PlantTranslation.SETRANGE("No.","No.");
      PAGE.RUNMODAL(PAGE::"Plant Translations",PlantTranslation);
    END;

    PROCEDURE RentalRates@1210190007();
    VAR
      RentalRate@1210190000 : Record 11012567;
    BEGIN
      RentalRate.SETRANGE("Rental Type",RentalRate."Rental Type"::Rental);
      RentalRate.SETRANGE("Plant Type","Plant Type");
      RentalRate.SETRANGE("Plant No.","No.");
      PAGE.RUNMODAL(PAGE::"Rental Rates Plant Numbers",RentalRate);
    END;

    PROCEDURE RentalDiscount@1210190005();
    VAR
      RentDistRec@1210190001 : Record 11012544;
      RentDiscFrm@1210190002 : Page 11020599;
    BEGIN
      TESTFIELD("No.");
      RentDistRec.FILTERGROUP(9);
      RentDistRec.SETRANGE("Customer Discount Group", '');
      RentDistRec.SETRANGE(Location, '');
      RentDistRec.SETRANGE("Group Level", '');
      RentDistRec.SETRANGE("Plant Type", "Plant Type");
      RentDistRec.SETRANGE(Level, RentDistRec.Level::PlantNo);
      RentDistRec.FILTERGROUP(0);
      RentDistRec.SETRANGE("Plant No.", "No.");
      RentDiscFrm.SETTABLEVIEW(RentDistRec);
      RentDistRec."Plant Type" := "Plant Type";
      RentDistRec."Plant No." := "No.";
      RentDiscFrm.SETRECORD(RentDistRec);
      RentDiscFrm.SetCalledFrom(2);
      RentDiscFrm.RUNMODAL;
    END;

    PROCEDURE HourRates@1210190006();
    VAR
      RentalRate@1210190000 : Record 11012567;
    BEGIN
      RentalRate.SETRANGE("Rental Type",RentalRate."Rental Type"::"Plant Hours");
      RentalRate.SETRANGE("Plant Type","Plant Type");
      RentalRate.SETRANGE("Plant No.","No.");
      PAGE.RUNMODAL(PAGE::"Hour Rates Plant Numbers",RentalRate);
    END;

    PROCEDURE CreateNewComplaint@1210190008();
    VAR
      ComplRec@1210190001 : Record 11012450;
      ComplMgtCU@1210190000 : Codeunit 11012418;
    BEGIN
      TESTFIELD("Plant Type");
      TESTFIELD("No.");
      ComplMgtCU.CreateNewComplaintOnSource(ComplRec."Source Type"::Plant, "Plant Type", "No.");
    END;

    PROCEDURE OpenComplaints@1210190009();
    VAR
      Complaint@1210190000 : Record 11012450;
    BEGIN
      Complaint.SETCURRENTKEY("Source Type","Source No.","Source No. 2");
      Complaint.FILTERGROUP(9);
      Complaint.SETRANGE("Source Type",Complaint."Source Type"::Plant);
      Complaint.SETFILTER(Status,'<>%1',Complaint.Status::Finished);
      Complaint.FILTERGROUP(0);
      Complaint.SETRANGE("Source No.","Plant Type");
      Complaint.SETRANGE("Source No. 2","No.");
      PAGE.RUNMODAL(PAGE::"Complaint List",Complaint);
    END;

    PROCEDURE Complaints@1210190011();
    VAR
      Complaint@1210190000 : Record 11012450;
    BEGIN
      Complaint.SETCURRENTKEY("Source Type","Source No.","Source No. 2");
      Complaint.FILTERGROUP(9);
      Complaint.SETRANGE("Source Type",Complaint."Source Type"::Plant);
      Complaint.FILTERGROUP(0);
      Complaint.SETRANGE("Source No.","Plant Type");
      Complaint.SETRANGE("Source No. 2","No.");
      PAGE.RUNMODAL(PAGE::"Complaint List",Complaint);
    END;

    PROCEDURE Inventory@1210190010();
    VAR
      PlantInventory@1210190000 : Record 11012555;
    BEGIN
      PlantInventory.SETCURRENTKEY(Removed,"Plant Type","Plant No.","Rate Code",Location);
      PlantInventory.SETRANGE(Removed,FALSE);
      PlantInventory.SETRANGE("Plant Type","Plant Type");
      PlantInventory.SETRANGE("Plant No.","Stock No.");
      PAGE.RUNMODAL(PAGE::"Plant Inventory",PlantInventory);
    END;

    PROCEDURE InventoryCourse@1210190013();
    VAR
      PlantInventory@1210190000 : Record 11012555;
    BEGIN
      PlantInventory.SETCURRENTKEY("Plant Type","Plant No.","Present from");
      PlantInventory.SETRANGE("Plant Type","Plant Type");
      PlantInventory.SETRANGE("Plant No.","Stock No.");
      PAGE.RUNMODAL(PAGE::"Plant Inventory Course",PlantInventory);
    END;

    PROCEDURE Costs@1210190012();
    VAR
      PlantNumber@1210190000 : Record 11012552;
    BEGIN
      PlantNumber.SETRANGE("Plant Type","Plant Type");
      PlantNumber."Plant Type" := "Plant Type";
      PlantNumber."No." := "No.";
      PAGE.RUNMODAL(PAGE::"Plant No. Costs",PlantNumber);
    END;

    PROCEDURE CostsPerComponent@1210190014();
    VAR
      PlantNumber@1210190000 : Record 11012552;
    BEGIN
      PlantNumber.SETRANGE("Plant Type","Plant Type");
      PlantNumber."Plant Type" := "Plant Type";
      PlantNumber."No." := "No.";
      PAGE.RUNMODAL(PAGE::"Plant No. Costs -Comp. Matrix",PlantNumber);
    END;

    PROCEDURE Documents@1210190015();
    BEGIN
      ShowDocuments();  //DP00183.c
    END;

    LOCAL PROCEDURE QuantityinStockOnFormat@19021934();
    BEGIN
      IF "Stock No." = '0' THEN
        "Quantity in StockHideValue" := TRUE;
    END;

    PROCEDURE GetQuantityFA@1100485000() : Decimal;
    VAR
      FA@1100485000 : Record 5600;
    BEGIN
      IF ("Fixed Asset" = '') THEN
        EXIT(0);

      FA."No." := "Fixed Asset";
      EXIT(FA.GetQuantity('', FALSE));
    END;

    BEGIN
    END.
  }
}

