OBJECT Table 291 Shipping Agent
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00,4PS14.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Name;
    OnDelete=VAR
               ShippingAgentServices@1000 : Record 5790;
               TranspPlanWsIdShipAgent@1100529000 : Record 11229917;
             BEGIN
               ShippingAgentServices.SETRANGE("Shipping Agent Code",Code);
               ShippingAgentServices.DELETEALL;

               CalendarManagement.DeleteCustomizedBaseCalendarData(CustomizedCalendarChange."Source Type"::"Shipping Agent",Code);

               //**4PS.sn
               TranspPlanWsIdShipAgent.SETRANGE("Shipping Agent", Code);
               TranspPlanWsIdShipAgent.MODIFYALL(Blocked, TRUE);
               //**4PS.en
             END;

    OnRename=BEGIN
               CalendarManagement.RenameCustomizedBaseCalendarData(CustomizedCalendarChange."Source Type"::"Shipping Agent",Code,xRec.Code);
             END;

    CaptionML=[ENU=Shipping Agent;
               NOR=Transport›r;
               SVE=Spedit”r];
    LookupPageID=Page428;
    DrillDownPageID=Page428;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text100       ;CaptionML=[ENU=Name;
                                                              NOR=Navn;
                                                              SVE=Namn];
                                                   Description=4PS: expanded to 100 }
    { 3   ;   ;Internet Address    ;Text250       ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Internet Address;
                                                              NOR=Internett-adresse;
                                                              SVE=Internet-adress] }
    { 4   ;   ;Account No.         ;Text30        ;CaptionML=[ENU=Account No.;
                                                              NOR=Kontonr.;
                                                              SVE=Nr] }
    { 11012001;;Reference          ;Code8         ;CaptionML=[ENU=Reference;
                                                              SVE=Referens] }
    { 11012002;;Default Packing Unit;Code3        ;TableRelation="Shipping Agent Unit".Unit WHERE (Shipping Agent Code=FIELD(Code));
                                                   CaptionML=[ENU=Default Packing Unit;
                                                              SVE=Standardf”rpackningsenhet] }
    { 11012010;;External           ;Boolean       ;OnValidate=VAR
                                                                MeansOfTransport@1100409000 : Record 11020503;
                                                              BEGIN
                                                                //**4PS
                                                                //DP00672.sn
                                                                IF External THEN BEGIN
                                                                  MeansOfTransport.SETRANGE("Shipping Agent", Code);
                                                                  MeansOfTransport.SETFILTER("Plant Type", '<>%1', '');
                                                                  IF MeansOfTransport.FINDFIRST THEN
                                                                    MeansOfTransport.TESTFIELD("Plant Type", '');
                                                                END;
                                                                //DP00672.sn
                                                              END;

                                                   CaptionML=[ENU=External;
                                                              SVE=Externt] }
    { 11012020;;Vendor No.         ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                IF ("Vendor No." <> '') AND (("Vendor No." <> xRec."Vendor No.") OR (Name = '')) THEN BEGIN
                                                                  VendRec.GET("Vendor No.");
                                                                  Name := VendRec.Name;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Vendor No.;
                                                              SVE=Leverant”rsnr] }
    { 11012030;;Cost Centre        ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Cost Centre;
                                                              SVE=Kostnadscenter];
                                                   CaptionClass='1,1,1' }
    { 11012550;;Transport Date Filter;Date        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Transport Date Filter;
                                                              SVE=Transportdatumfilter] }
    { 11012551;;Means of Transport Filter;Code20  ;FieldClass=FlowFilter;
                                                   TableRelation="Means of Transport".Code;
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Means of Transport;
                                                              SVE=Transports„tt] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Vendor No.                               }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CustomizedCalendarChange@1001 : Record 11072016;
      CalendarManagement@1000 : Codeunit 7600;
      VendRec@1100485000 : Record 23;
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100528500 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(291) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 291');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Shipping Agent", "Cost Centre", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Cost Centre"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Cost Centre");
    END;

    BEGIN
    END.
  }
}

