OBJECT Report 11012614 Create Plant Stocktaking Lines
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Werkzeuginventurzeilen erstellen;
               ENU=Create Plant Stocktaking Lines;
               NLD=Materieelinventarisatieregels aanmaken;
               NOR=Opprette rader for maskinbeholdning;
               SVE=Skapa rader f”r Maskinsinventering];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  CheckStocktakingNo();
                  Window.OPEN(Text000);
                END;

  }
  DATASET
  {
    { 9306;    ;DataItem;                    ;
               DataItemTable=Table11012554;
               DataItemTableView=SORTING(Code);
               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1, Code);
                                END;

               ReqFilterFields=Code,Depot,Status,Department Code }

    { 8651;1   ;DataItem;                    ;
               DataItemTable=Table11012551;
               DataItemTableView=SORTING(Code);
               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1, "Plant Location".Code + ' / ' + Code);

                                  QuantityOnLoc := StocktakingLine.GetQuantityOnDate("Plant Location".Code, Code, StocktakingHead."Counting Date");
                                  IF QuantityOnLoc <> 0 THEN BEGIN
                                    IF NOT StocktakingLine.GET(StocktakingHead."No.", "Plant Location".Code, Code) THEN BEGIN
                                      StocktakingLine.INIT;
                                      StocktakingLine."Stocktaking No." := StocktakingHead."No.";
                                      StocktakingLine.Location := "Plant Location".Code;
                                      StocktakingLine."Plant Type" := Code;
                                      StocktakingLine."Quantity On Location" := QuantityOnLoc;
                                      StocktakingLine.INSERT(TRUE);
                                    END ELSE BEGIN
                                      IF  QuantityOnLoc <> StocktakingLine."Quantity On Location" THEN BEGIN
                                        StocktakingLine."Quantity On Location" := QuantityOnLoc;
                                        StocktakingLine.MODIFY(TRUE);
                                      END;
                                    END;
                                  END ELSE BEGIN
                                    IF StocktakingLine.GET(StocktakingHead."No.", "Plant Location".Code, Code) THEN BEGIN
                                      IF (StocktakingLine."Counted Quantity" = 0) AND (NOT StocktakingLine."Counted Is Zero") THEN
                                        StocktakingLine.DELETE
                                      ELSE BEGIN
                                        StocktakingLine."Quantity On Location" := 0;
                                        StocktakingLine.MODIFY(TRUE);
                                      END;
                                    END;
                                  END;
                                END;

               ReqFilterFields=Code,Department Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      StocktakingHead@1100525000 : Record 11012653;
      StocktakingLine@1100525001 : Record 11012654;
      Window@1100525004 : Dialog;
      QuantityOnLoc@1100525003 : Decimal;
      Text000@1100525005 : TextConst 'DEU=Standort / Werkzeugart #1####################;ENU=Location / Plant Type #1####################;NLD=Locatie / materieelsoort #1####################;NOR=Plassering/Maskintype #1####################;SVE=Plats / Maskintyp     #1####################';

    PROCEDURE SetStocktakingNo@1100525000(StocktakingNo@1100525000 : Code[20]);
    BEGIN
      StocktakingHead."No." := StocktakingNo;
      CheckStocktakingNo();
    END;

    PROCEDURE CheckStocktakingNo@1210190001();
    BEGIN
      StocktakingHead.TESTFIELD("No.");
      StocktakingHead.GET(StocktakingHead."No.");
      StocktakingHead.TESTFIELD("Counting Date");
      IF StocktakingHead.Status >= StocktakingHead.Status::Finished THEN
        StocktakingHead.FIELDERROR(Status);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

