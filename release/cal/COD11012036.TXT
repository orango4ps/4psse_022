OBJECT Codeunit 11012036 Sales Price Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      DimValRec@1210190006 : Record 349;
      ItemRec@1210190005 : Record 27;
      HourRateRec@1210190004 : Record 11012022;
      CustHourRateRec@1210190003 : Record 11012023;
      ProjPrincHourRateRec@1210190007 : Record 11012024;
      CostObjCustSlsPriceRec@1210190002 : Record 11012080;
      CustItemPriceRec@1210190001 : Record 7002;
      EmplRec@1100485001 : Record 5200;
      DimMgt@1210190000 : Codeunit 408;
      MeansPriceCalculation@1100485000 : Codeunit 11012064;
      Text001@1100485002 : TextConst 'ENU="Table %1 ; %2";NOR="Table %1 ; %2";SVE="Tabell %1 ; %2"';
      Text002@1100525000 : TextConst 'ENU=Cost Price;NOR=Selvkost;SVE=Sj„lvkostnadspris';

    [External]
    PROCEDURE GetSalesPriceOperationLine@1210190001(IOperLineRec@1210190007 : Record 11012092;IRefDate@1210190000 : Date;IProjNo@1210190003 : Code[20];ICustNo@1210190001 : Code[20]) : Decimal;
    VAR
      lvSalesPrice@1210190002 : Decimal;
    BEGIN
      WITH IOperLineRec DO BEGIN
        IF (IOperLineRec.Type = IOperLineRec.Type::Means) AND
           NOT (IOperLineRec."Cost Type" = IOperLineRec."Cost Type"::Labor)
        THEN BEGIN
          lvSalesPrice := MeansPriceCalculation.FindSalesPrice2(ICustNo,'',IOperLineRec."No.",IOperLineRec.Quantity,
                            IOperLineRec."Unit of Measure",'',IRefDate,FALSE);
          EXIT(lvSalesPrice);
        END ELSE BEGIN
          IF (ICustNo <> '') THEN BEGIN
            lvSalesPrice := GetCustomerSalesPrice(IRefDate, IProjNo, ICustNo, "Cost Object", "No.", "Hour Rate Code", "Cost Type");
            IF lvSalesPrice <> 0 THEN
              EXIT(lvSalesPrice);
          END;
          EXIT(GetStandardSalesPrice("Cost Object", "No.", "Hour Rate Code", "Cost Type", IRefDate));
        END;
      END;
    END;

    [External]
    PROCEDURE GetSalesPriceDefCustAgreement@1210190008(IDefCustAgreeRec@1210190007 : Record 11020203;IRefDate@1210190000 : Date;IProjNo@1210190001 : Code[20]) : Decimal;
    VAR
      lvSalesPrice@1210190002 : Decimal;
    BEGIN
      WITH IDefCustAgreeRec DO BEGIN
        IF ("Customer No." <> '') THEN BEGIN
          lvSalesPrice := GetCustomerSalesPrice(IRefDate, IProjNo, "Customer No.", "Cost Object",
                                                "Item No.", "Hour Rate Code", "Cost Type");
          IF lvSalesPrice <> 0 THEN
            EXIT(lvSalesPrice);
        END;
        EXIT(GetStandardSalesPrice("Cost Object", "Item No.", "Hour Rate Code", "Cost Type", IRefDate));
      END;
    END;

    [External]
    PROCEDURE GetCustomerSalesPrice@1210190016(IRefDate@1210190000 : Date;IProjNo@1210190007 : Code[20];ICustNo@1210190006 : Code[20];ICostObject@1210190004 : Code[20];IItemNo@1210190003 : Code[20];IHourRateCode@1210190001 : Code[10];ICostType@1210190005 : 'Labor,Material,Subcontracting,Plant,Sundry,Revenue') : Decimal;
    VAR
      lvSalesPrice@1210190002 : Decimal;
    BEGIN
      lvSalesPrice := 0;
      IF ICostType <> ICostType::Labor THEN BEGIN
        IF IItemNo <> '' THEN BEGIN
          IF GetCustItemPrice(IRefDate, ICustNo, IItemNo, lvSalesPrice) THEN
            EXIT(lvSalesPrice);
        END ELSE BEGIN
          IF ICostObject <> '' THEN
            IF GetCustCostObjectPrice(IRefDate, ICustNo, ICostObject, lvSalesPrice) THEN
              EXIT(lvSalesPrice);
        END;
      END ELSE BEGIN
        IF IHourRateCode <> '' THEN BEGIN
          IF GetCustHourRate(IRefDate, IProjNo, ICustNo, IHourRateCode, lvSalesPrice) THEN
            EXIT(lvSalesPrice);
        END;
      END;
      EXIT(lvSalesPrice);
    END;

    [External]
    PROCEDURE GetStandardSalesPrice@1210190017(ICostObject@1210190003 : Code[20];IItemNo@1210190002 : Code[20];IHourRateCode@1210190001 : Code[10];ICostType@1210190004 : 'Labor,Material,Subcontracting,Plant,Sundry,Revenue';IRefDate@1100485000 : Date) : Decimal;
    VAR
      lvSalesPrice@1210190000 : Decimal;
    BEGIN
      lvSalesPrice := 0;
      IF ICostType <> ICostType::Labor THEN BEGIN
        IF IItemNo <> '' THEN BEGIN
          IF GetItemPrice(IItemNo, lvSalesPrice) THEN
            EXIT(lvSalesPrice);
        END ELSE BEGIN
          IF ICostObject <> '' THEN
            IF GetCostObjectPrice(ICostObject, lvSalesPrice) THEN
              EXIT(lvSalesPrice);
        END;
      END ELSE BEGIN
        IF IHourRateCode <> '' THEN BEGIN
          IF GetHourRate(IHourRateCode, lvSalesPrice, IRefDate) THEN
            EXIT(lvSalesPrice);
        END;
      END;
      EXIT(lvSalesPrice);
    END;

    [External]
    PROCEDURE GetCustItemPrice@1210190005(IRefDate@1210190002 : Date;ICustNo@1210190001 : Code[20];IItemNo@1210190003 : Code[20];VAR OSalesPrice@1210190000 : Decimal) : Boolean;
    BEGIN
      OSalesPrice := 0;
      IF (ICustNo <> '') THEN BEGIN
        CustItemPriceRec.RESET;
        CustItemPriceRec.SETRANGE("Item No.", IItemNo);
        CustItemPriceRec.SETRANGE("Sales Type", CustItemPriceRec."Sales Type"::Customer);
        CustItemPriceRec.SETRANGE("Sales Code", ICustNo);
        CustItemPriceRec.SETRANGE("Starting Date", 0D, IRefDate);
        CustItemPriceRec.SETFILTER("Ending Date",'%1|>=%2', 0D, IRefDate);
        CustItemPriceRec.SETRANGE("Currency Code", '');
        CustItemPriceRec.SETRANGE("Variant Code", '');
        CustItemPriceRec.SETRANGE("Unit of Measure Code", '');
        CustItemPriceRec.SETRANGE("Minimum Quantity", 0);
        IF CustItemPriceRec.FINDLAST THEN
          OSalesPrice := CustItemPriceRec."Unit Price";
      END;
      IF OSalesPrice = 0 THEN
        EXIT(FALSE)
      ELSE
        EXIT(TRUE);
    END;

    [External]
    PROCEDURE GetItemPrice@1210190004(IItemNo@1210190001 : Code[20];VAR OSalesPrice@1210190000 : Decimal) : Boolean;
    BEGIN
      ItemRec.GET(IItemNo);
      IF (ItemRec."Unit Price" <> 0) THEN
        OSalesPrice := ItemRec."Unit Price"
      ELSE
        OSalesPrice := ItemRec."Unit Cost";
      IF OSalesPrice = 0 THEN
        EXIT(FALSE)
      ELSE
        EXIT(TRUE);
    END;

    [External]
    PROCEDURE GetCustCostObjectPrice@1210190003(IRefDate@1210190001 : Date;ICustNo@1210190000 : Code[20];ICostObject@1210190003 : Code[20];VAR OSalesPrice@1210190002 : Decimal) : Boolean;
    BEGIN
      OSalesPrice := 0;
      IF (ICustNo <> '') THEN BEGIN
        CostObjCustSlsPriceRec.RESET;
        CostObjCustSlsPriceRec.SETRANGE("Cost Object", ICostObject);
        CostObjCustSlsPriceRec.SETRANGE("Customer No.", ICustNo);
        CostObjCustSlsPriceRec.SETRANGE("Starting Date", 0D, IRefDate);
        CostObjCustSlsPriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IRefDate);
        IF CostObjCustSlsPriceRec.FINDLAST THEN
          OSalesPrice := CostObjCustSlsPriceRec."Sales Price (LCY)";
      END;
      IF OSalesPrice = 0 THEN
        EXIT(FALSE)
      ELSE
        EXIT(TRUE);
    END;

    [External]
    PROCEDURE GetCostObjectPrice@1210190002(ICostObject@1210190001 : Code[20];VAR OSalesPrice@1210190000 : Decimal) : Boolean;
    BEGIN
      DimMgt.GetDimValueRec(2, ICostObject, DimValRec, TRUE,'');
      IF (DimValRec."Sales Price" <> 0) THEN
        OSalesPrice := DimValRec."Sales Price"
      ELSE
        OSalesPrice := DimValRec.Price;
      IF OSalesPrice = 0 THEN
        EXIT(FALSE)
      ELSE
        EXIT(TRUE);
    END;

    [External]
    PROCEDURE GetCustHourRate@1210190007(IRefDate@1210190002 : Date;IProjNo@1210190004 : Code[20];ICustNo@1210190001 : Code[20];IHourRateCode@1210190003 : Code[10];VAR OSalesPrice@1210190000 : Decimal) : Boolean;
    BEGIN
      OSalesPrice := 0;

      IF (IProjNo <> '') AND (ICustNo <> '') THEN BEGIN
        ProjPrincHourRateRec.RESET;
        ProjPrincHourRateRec.SETRANGE("Project No.", IProjNo);
        ProjPrincHourRateRec.SETRANGE(Principal, ICustNo);
        ProjPrincHourRateRec.SETRANGE("Hour Rate Code",IHourRateCode);
        ProjPrincHourRateRec.SETRANGE("Starting Date", 0D, IRefDate);
        ProjPrincHourRateRec.SETFILTER("Ending Date",'%1|>=%2',0D, IRefDate);
        IF ProjPrincHourRateRec.FINDLAST THEN
          OSalesPrice := ProjPrincHourRateRec."Hour Rate";
      END;

      IF (ICustNo <> '') AND (OSalesPrice = 0) THEN BEGIN
        CustHourRateRec.RESET;
        CustHourRateRec.SETRANGE("Customer No.", ICustNo);
        CustHourRateRec.SETRANGE("Hour Rate Code",IHourRateCode);
        CustHourRateRec.SETRANGE("Starting Date", 0D, IRefDate);
        CustHourRateRec.SETFILTER("Ending Date",'%1|>=%2',0D, IRefDate);
        IF CustHourRateRec.FINDLAST THEN
           OSalesPrice := CustHourRateRec."Hour Rate (LCY)";
      END;
      IF OSalesPrice = 0 THEN
        EXIT(FALSE)
      ELSE
        EXIT(TRUE);
    END;

    [External]
    PROCEDURE GetHourRate@1210190006(IHourRateCode@1210190001 : Code[10];VAR OSalesPrice@1210190000 : Decimal;IRefDate@1100485000 : Date) : Boolean;
    BEGIN
      HourRateRec.RESET;
      HourRateRec.SETRANGE(Code,IHourRateCode);
      HourRateRec.SETRANGE("Starting Date", 0D, IRefDate);  //db, 18-11-05
      HourRateRec.SETFILTER("Ending Date",'%1|>=%2',0D, IRefDate);
      IF HourRateRec.FINDLAST THEN
        OSalesPrice := HourRateRec."Hour Rate";
      IF OSalesPrice = 0 THEN
        EXIT(FALSE)
      ELSE
        EXIT(TRUE);
    END;

    [External]
    PROCEDURE GetSalesPrice@1100485032(IPriceType@1100485026 : 'Project,Service';IProject@1100485027 : Code[20];IServiceOrder@1100485037 : Code[20];IServiceContract@1100485028 : Code[20];IPrincipal@1100485033 : Code[20];ICostObject@1100485029 : Code[20];IWageComp@1100485030 : Code[20];IEmployeeCompany@1100529002 : Text[30];IEmployee@1100485031 : Code[20];IHourRate@1100485034 : Code[10];IElement@1100485035 : Code[20];IExtContract@1100485036 : Code[20];IPlantLocation@1100529003 : Code[20];IReceivingCompany@1100529006 : Text[30];IDiscipline@1100529010 : Code[10];IPostingDate@1100485032 : Date;ICostPrice@1100525000 : Decimal;VAR VPriceFoundAt@1100485038 : Text[250]) RetSalesPrice : Decimal;
    VAR
      lSalesPriceReadOrderLine@1100485022 : Record 11020376;
      lExceptionalSalesPriceRec@1100485025 : Record 11020388;
      lExceptSalesPriceperDateRec@1100485000 : Record 11020389;
      lProjEmplCostObjWagePriceRec@1100485024 : Record 11020387;
      lProjEmplCostObjSalesPriceRec@1100485023 : Record 11020386;
      lProjEmplSalesPriceRec@1100485021 : Record 11020385;
      lProjCostObjWageSalesPriceRec@1100485020 : Record 11020384;
      lProjCostObjSalesPriceRec@1100485019 : Record 11020383;
      lProjPrincCostObjSalesPriceRec@1100485017 : Record 11020255;
      lCustEmplCostObjWagePriceRec@1100485016 : Record 11020382;
      lCustEmplCostObjSalesPriceRec@1100525001 : Record 11020381;
      lCustEmplSalesPriceRec@1100485014 : Record 11020380;
      lCustCostObjWageSalesPriceRec@1100485013 : Record 11020379;
      lCustCostObjSalesPriceRec@1100485012 : Record 11012080;
      lProjPrincHourRateRec@1100485011 : Record 11012024;
      lCustHourRateRec@1100485010 : Record 11012023;
      lEmplCostObjWageSalesPriceRec@1100485009 : Record 11020378;
      lEmplCostObjSalesPriceRec@1100485008 : Record 11020377;
      lHourRateRec@1100485007 : Record 11012022;
      CostObjWageCompSalesPrice@1210190000 : Record 11020658;
      lCostObjectSalesPrice@1100485039 : Record 11020351;
      lServEmplCostObjWagePriceRec@1100485006 : Record 11020331;
      lServEmplCostObjSalesPriceRec@1100485005 : Record 11020330;
      lServEmplSalesPriceRec@1100485004 : Record 11020329;
      lServCostObjWageSalesPriceRec@1100485003 : Record 11020328;
      lServCostObjSalesPriceRec@1100485002 : Record 11020327;
      lServHourRateRec@1100485001 : Record 11012815;
      lDepartmentHourRate@1100528600 : Record 11071896;
      lDepartmentCustomerHourRate@1100528601 : Record 11071897;
      lCustomerPriceGroupHourRate@1100528602 : Record 11229790;
      lRecRef@1100485018 : RecordRef;
      Customer@1100528603 : Record 18;
      PlantExceptionalSalesPrice@1100529000 : Record 11229881;
      PlantExceptSalesPriceDate@1100529001 : Record 11229882;
      TradeAssociationCostPrice@1100529004 : Record 11020269;
      Employee@1100529005 : Record 5200;
      DisciplineSalesPrice@1100529009 : Record 11229343;
      CustomerDisciplineSPrice@1100529008 : Record 11229344;
      EmployeeDisciplineSPrice@1100529007 : Record 11229345;
      lCostObjCostCentSalesPrice@1100285103 : Record 11128043;
      lCostObjCustSalesPriceDisc@1100285102 : Record 11128044;
      Job@1100285101 : Record 11072003;
      ServOrder@1100285100 : Record 11012823;
    BEGIN
      WITH lSalesPriceReadOrderLine DO BEGIN
        VPriceFoundAt := '';

        IF (IPriceType = "Price Type"::Plant) AND (IReceivingCompany <> '') THEN  //DP00812
          CHANGECOMPANY(IReceivingCompany);
        SETCURRENTKEY("Price Type", "Read Order");
        SETRANGE("Price Type", IPriceType);
        SETFILTER("Read Order",'1..');
        IF FINDSET THEN
          REPEAT
            CASE "Table No." OF
              DATABASE::"Proj - Empl - C -Wage S. Price":
                BEGIN
                  lProjEmplCostObjWagePriceRec.SETRANGE("Project No.", IProject);
                  lProjEmplCostObjWagePriceRec.SETRANGE("Employee No.", IEmployee);
                  lProjEmplCostObjWagePriceRec.SETRANGE("Cost Object", ICostObject);
                  lProjEmplCostObjWagePriceRec.SETRANGE("Wage Component", IWageComp);
                  lProjEmplCostObjWagePriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lProjEmplCostObjWagePriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lProjEmplCostObjWagePriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lProjEmplCostObjWagePriceRec."Sales Price";
                    lRecRef.GETTABLE(lProjEmplCostObjWagePriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Proj - Empl - Cost Ob S. Price":
                BEGIN
                  lProjEmplCostObjSalesPriceRec.SETRANGE("Project No.", IProject);
                  lProjEmplCostObjSalesPriceRec.SETRANGE("Employee No.", IEmployee);
                  lProjEmplCostObjSalesPriceRec.SETRANGE("Cost Object", ICostObject);
                  lProjEmplCostObjSalesPriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lProjEmplCostObjSalesPriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lProjEmplCostObjSalesPriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lProjEmplCostObjSalesPriceRec."Sales Price";
                    lRecRef.GETTABLE(lProjEmplCostObjSalesPriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Project - Employee Sales Price":
                BEGIN
                  lProjEmplSalesPriceRec.SETRANGE("Project No.", IProject);
                  lProjEmplSalesPriceRec.SETRANGE("Employee No.", IEmployee);
                  lProjEmplSalesPriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lProjEmplSalesPriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lProjEmplSalesPriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lProjEmplSalesPriceRec."Sales Price";
                    lRecRef.GETTABLE(lProjEmplSalesPriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Proj - Cost Ob - Wage S. Price":
                BEGIN
                  lProjCostObjWageSalesPriceRec.SETRANGE("Project No.", IProject);
                  lProjCostObjWageSalesPriceRec.SETRANGE("Cost Object", ICostObject);
                  lProjCostObjWageSalesPriceRec.SETRANGE("Wage Component", IWageComp);
                  lProjCostObjWageSalesPriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lProjCostObjWageSalesPriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lProjCostObjWageSalesPriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lProjCostObjWageSalesPriceRec."Sales Price";
                    lRecRef.GETTABLE(lProjCostObjWageSalesPriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Proj - Cost Object Sales Price":
                BEGIN
                  lProjCostObjSalesPriceRec.SETRANGE("Project No.", IProject);
                  lProjCostObjSalesPriceRec.SETRANGE("Cost Object", ICostObject);
                  lProjCostObjSalesPriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lProjCostObjSalesPriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lProjCostObjSalesPriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lProjCostObjSalesPriceRec."Sales Price";
                    lRecRef.GETTABLE(lProjCostObjSalesPriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Proj - Princ - Cost O S. Price":
                BEGIN
                  lProjPrincCostObjSalesPriceRec.SETRANGE("Project No.", IProject);
                  lProjPrincCostObjSalesPriceRec.SETRANGE("Principal No.", IPrincipal);
                  lProjPrincCostObjSalesPriceRec.SETRANGE("Cost Object", ICostObject);
                  lProjPrincCostObjSalesPriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lProjPrincCostObjSalesPriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lProjPrincCostObjSalesPriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lProjPrincCostObjSalesPriceRec."Sales Price";
                    lRecRef.GETTABLE(lProjPrincCostObjSalesPriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Cust - Empl - C -Wage S. Price":
                BEGIN
                  lCustEmplCostObjWagePriceRec.SETRANGE("Customer No.", IPrincipal);
                  lCustEmplCostObjWagePriceRec.SETRANGE("Employee No.", IEmployee);
                  lCustEmplCostObjWagePriceRec.SETRANGE("Cost Object", ICostObject);
                  lCustEmplCostObjWagePriceRec.SETRANGE("Wage Component", IWageComp);
                  lCustEmplCostObjWagePriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lCustEmplCostObjWagePriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lCustEmplCostObjWagePriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lCustEmplCostObjWagePriceRec."Sales Price (LCY)";
                    lRecRef.GETTABLE(lCustEmplCostObjWagePriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Cust - Empl - Cost Ob S. Price":
                BEGIN
                  lCustEmplCostObjSalesPriceRec.SETRANGE("Customer No.", IPrincipal);
                  lCustEmplCostObjSalesPriceRec.SETRANGE("Employee No.", IEmployee);
                  lCustEmplCostObjSalesPriceRec.SETRANGE("Cost Object", ICostObject);
                  lCustEmplCostObjSalesPriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lCustEmplCostObjSalesPriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lCustEmplCostObjSalesPriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lCustEmplCostObjSalesPriceRec."Sales Price (LCY)";
                    lRecRef.GETTABLE(lCustEmplCostObjSalesPriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Cust - Employee Sales Price":
                BEGIN
                  lCustEmplSalesPriceRec.SETRANGE("Customer No.", IPrincipal);
                  lCustEmplSalesPriceRec.SETRANGE("Employee No.", IEmployee);
                  lCustEmplSalesPriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lCustEmplSalesPriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lCustEmplSalesPriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lCustEmplSalesPriceRec."Sales Price (LCY)";
                    lRecRef.GETTABLE(lCustEmplSalesPriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Cust - Cost Obj -Wage S. Price":
                BEGIN
                  lCustCostObjWageSalesPriceRec.SETRANGE("Customer No.", IPrincipal);
                  lCustCostObjWageSalesPriceRec.SETRANGE("Cost Object", ICostObject);
                  lCustCostObjWageSalesPriceRec.SETRANGE("Wage Component", IWageComp);
                  lCustCostObjWageSalesPriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lCustCostObjWageSalesPriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lCustCostObjWageSalesPriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lCustCostObjWageSalesPriceRec."Sales Price (LCY)";
                    lRecRef.GETTABLE(lCustCostObjWageSalesPriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Cust - Cost Object Sales Price":
                BEGIN
                  lCustCostObjSalesPriceRec.SETRANGE("Customer No.", IPrincipal);
                  lCustCostObjSalesPriceRec.SETRANGE("Cost Object", ICostObject);
                  lCustCostObjSalesPriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lCustCostObjSalesPriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lCustCostObjSalesPriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lCustCostObjSalesPriceRec."Sales Price (LCY)";
                    lRecRef.GETTABLE(lCustCostObjSalesPriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Project Principal Hour Rate":
                BEGIN
                  lProjPrincHourRateRec.SETRANGE("Project No.", IProject);
                  lProjPrincHourRateRec.SETRANGE(Principal, IPrincipal);
                  lProjPrincHourRateRec.SETRANGE("Hour Rate Code", IHourRate);
                  lProjPrincHourRateRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lProjPrincHourRateRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lProjPrincHourRateRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lProjPrincHourRateRec."Hour Rate";
                    lRecRef.GETTABLE(lProjPrincHourRateRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Customer Hour Rate":
                BEGIN
                  lCustHourRateRec.SETRANGE("Customer No.", IPrincipal);
                  lCustHourRateRec.SETRANGE("Hour Rate Code", IHourRate);
                  lCustHourRateRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lCustHourRateRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lCustHourRateRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lCustHourRateRec."Hour Rate (LCY)";
                    lRecRef.GETTABLE(lCustHourRateRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Empl - Cost Obj -Wage S. Price":
                BEGIN
                  lEmplCostObjWageSalesPriceRec.SETRANGE("Employee No.", IEmployee);
                  lEmplCostObjWageSalesPriceRec.SETRANGE("Cost Object", ICostObject);
                  lEmplCostObjWageSalesPriceRec.SETRANGE("Wage Component", IWageComp);
                  lEmplCostObjWageSalesPriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lEmplCostObjWageSalesPriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lEmplCostObjWageSalesPriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lEmplCostObjWageSalesPriceRec."Sales Price";
                    lRecRef.GETTABLE(lEmplCostObjWageSalesPriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Empl - Cost Object Sales Price":
                BEGIN
                  lEmplCostObjSalesPriceRec.SETRANGE("Employee No.", IEmployee);
                  lEmplCostObjSalesPriceRec.SETRANGE("Cost Object", ICostObject);
                  lEmplCostObjSalesPriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lEmplCostObjSalesPriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lEmplCostObjSalesPriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lEmplCostObjSalesPriceRec."Sales Price";
                    lRecRef.GETTABLE(lEmplCostObjSalesPriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Hour Rate":
                BEGIN
                  lHourRateRec.SETRANGE(Code, IHourRate);
                  lHourRateRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lHourRateRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lHourRateRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lHourRateRec."Hour Rate";
                    lRecRef.GETTABLE(lHourRateRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Cost Obj - Wage Comp. S. Price":
                BEGIN
                  CostObjWageCompSalesPrice.SETRANGE("Cost Object", ICostObject);
                  CostObjWageCompSalesPrice.SETRANGE("Wage Component", IWageComp);
                  CostObjWageCompSalesPrice.SETRANGE("Starting Date", 0D, IPostingDate);
                  CostObjWageCompSalesPrice.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF CostObjWageCompSalesPrice.FINDLAST THEN BEGIN
                    RetSalesPrice := CostObjWageCompSalesPrice."Sales Price";
                    lRecRef.GETTABLE(CostObjWageCompSalesPrice);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;

              DATABASE::"Cost Object Sales Price":
                BEGIN
                  lCostObjectSalesPrice.SETRANGE("Cost Object", ICostObject);
                  lCostObjectSalesPrice.SETRANGE("Starting Date", 0D, IPostingDate);
                  lCostObjectSalesPrice.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lCostObjectSalesPrice.FINDLAST THEN BEGIN
                    RetSalesPrice := lCostObjectSalesPrice."Sales Price";
                    lRecRef.GETTABLE(lCostObjectSalesPrice);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              //200520 ORANGO.PR
              DATABASE::"Cost Obj Cost Cent Sales Price":
                BEGIN
                  IF IPriceType = IPriceType::Project THEN BEGIN
                    IF Job.GET(IProject) THEN BEGIN
                      lCostObjCostCentSalesPrice.SETRANGE("Cost Object", ICostObject);
                      lCostObjCostCentSalesPrice.SETRANGE("Cost Center",Job."Global Dimension 1 Code");
                      lCostObjCostCentSalesPrice.SETRANGE("Starting Date", 0D, IPostingDate);
                      lCostObjCostCentSalesPrice.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                      IF lCostObjCostCentSalesPrice.FINDLAST THEN BEGIN
                        RetSalesPrice := lCostObjCostCentSalesPrice."Sales Price";
                        lRecRef.GETTABLE(lCostObjCostCentSalesPrice);
                        VPriceFoundAt := FillSalesPriceFound(lRecRef);
                        EXIT;
                      END;
                    END;
                  END;
                  IF IPriceType = IPriceType::Service THEN BEGIN
                    IF ServOrder.GET(IProject) THEN BEGIN
                      lCostObjCostCentSalesPrice.SETRANGE("Cost Object", ICostObject);
                      lCostObjCostCentSalesPrice.SETRANGE("Cost Center",ServOrder."Global Dimension 1 Code");
                      lCostObjCostCentSalesPrice.SETRANGE("Starting Date", 0D, IPostingDate);
                      lCostObjCostCentSalesPrice.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                      IF lCostObjCostCentSalesPrice.FINDLAST THEN BEGIN
                        RetSalesPrice := lCostObjCostCentSalesPrice."Sales Price";
                        lRecRef.GETTABLE(lCostObjCostCentSalesPrice);
                        VPriceFoundAt := FillSalesPriceFound(lRecRef);
                        EXIT;
                      END;
                    END;
                  END;
                END;
              DATABASE::"Cost Obj Cust Sales Price/Disc":
                BEGIN
                  lCostObjCustSalesPriceDisc.SETRANGE("Cost Object", ICostObject);
                  lCostObjCustSalesPriceDisc.SETRANGE("Customer No.",IPrincipal);
                  lCostObjCustSalesPriceDisc.SETRANGE("Starting Date", 0D, IPostingDate);
                  lCostObjCustSalesPriceDisc.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lCostObjCustSalesPriceDisc.FINDLAST THEN BEGIN
                    RetSalesPrice := lCostObjCustSalesPriceDisc."Sales Price" - lCostObjCustSalesPriceDisc."Sales Discount %";
                    lRecRef.GETTABLE(lCostObjCustSalesPriceDisc);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              //200520 ORANGO.PR
              DATABASE::"Serv - Empl - C -Wage S. Price":
                BEGIN
                  lServEmplCostObjWagePriceRec.SETRANGE("Service Contract No.", IServiceContract);
                  lServEmplCostObjWagePriceRec.SETRANGE("Employee No.", IEmployee);
                  lServEmplCostObjWagePriceRec.SETRANGE("Cost Object", ICostObject);
                  lServEmplCostObjWagePriceRec.SETRANGE("Wage Component", IWageComp);
                  lServEmplCostObjWagePriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lServEmplCostObjWagePriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lServEmplCostObjWagePriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lServEmplCostObjWagePriceRec."Sales Price (LCY)";
                    lRecRef.GETTABLE(lServEmplCostObjWagePriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Serv - Empl - Cost - S. Price":
                BEGIN
                  lServEmplCostObjSalesPriceRec.SETRANGE("Service Contract No.", IServiceContract);
                  lServEmplCostObjSalesPriceRec.SETRANGE("Employee No.", IEmployee);
                  lServEmplCostObjSalesPriceRec.SETRANGE("Cost Object", ICostObject);
                  lServEmplCostObjSalesPriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lServEmplCostObjSalesPriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lServEmplCostObjSalesPriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lServEmplCostObjSalesPriceRec."Sales Price (LCY)";
                    lRecRef.GETTABLE(lServEmplCostObjSalesPriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Serv - Employee - Sales Price":
                BEGIN
                  lServEmplSalesPriceRec.SETRANGE("Service Contract No.", IServiceContract);
                  lServEmplSalesPriceRec.SETRANGE("Employee No.", IEmployee);
                  lServEmplSalesPriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lServEmplSalesPriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lServEmplSalesPriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lServEmplSalesPriceRec."Sales Price (LCY)";
                    lRecRef.GETTABLE(lServEmplSalesPriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Serv - Cost Obj -Wage S. Price":
                BEGIN
                  lServCostObjWageSalesPriceRec.SETRANGE("Service Contract No.", IServiceContract);
                  lServCostObjWageSalesPriceRec.SETRANGE("Cost Object", ICostObject);
                  lServCostObjWageSalesPriceRec.SETRANGE("Wage Component", IWageComp);
                  lServCostObjWageSalesPriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lServCostObjWageSalesPriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lServCostObjWageSalesPriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lServCostObjWageSalesPriceRec."Sales Price (LCY)";
                    lRecRef.GETTABLE(lServCostObjWageSalesPriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Serv - Cost Object Sales Price":
                BEGIN
                  lServCostObjSalesPriceRec.SETRANGE("Service Contract No.", IServiceContract);
                  lServCostObjSalesPriceRec.SETRANGE("Cost Object", ICostObject);
                  lServCostObjSalesPriceRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lServCostObjSalesPriceRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lServCostObjSalesPriceRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lServCostObjSalesPriceRec."Sales Price (LCY)";
                    lRecRef.GETTABLE(lServCostObjSalesPriceRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Service Contract Hour Rate":
                BEGIN
                  lServHourRateRec.SETRANGE("Service Contract No.", IServiceContract);
                  lServHourRateRec.SETRANGE("Hour Rate Code", IHourRate);
                  lServHourRateRec.SETRANGE("Starting Date", 0D, IPostingDate);
                  lServHourRateRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lServHourRateRec.FINDLAST THEN BEGIN
                    RetSalesPrice := lServHourRateRec."Hour Rate (LCY)";
                    lRecRef.GETTABLE(lServHourRateRec);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Exceptional Sales Price":
                BEGIN
                  IF lExceptionalSalesPriceRec.FINDLAST THEN
                    REPEAT
                      IF TestExceptionalPrice(
                           lExceptionalSalesPriceRec, IProject, IServiceOrder, IServiceContract, IPrincipal,
                           ICostObject, IWageComp, IEmployee, IHourRate, IElement, IExtContract) THEN
                      BEGIN
                        lExceptSalesPriceperDateRec.SETRANGE(Level, lExceptionalSalesPriceRec.Level);
                        lExceptSalesPriceperDateRec.SETRANGE("Starting Date", 0D, IPostingDate);
                        lExceptSalesPriceperDateRec.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                        IF lExceptSalesPriceperDateRec.FINDLAST THEN BEGIN
                          RetSalesPrice := lExceptSalesPriceperDateRec."Sales Price";
                          lRecRef.GETTABLE(lExceptSalesPriceperDateRec);
                          VPriceFoundAt := FillSalesPriceFound(lRecRef);
                          EXIT;
                        END;
                      END;
                    UNTIL lExceptionalSalesPriceRec.NEXT(-1) = 0;
                END;
              DATABASE::"Cost Price Read Order Line":
                BEGIN
                  RetSalesPrice := ICostPrice;
                  VPriceFoundAt := Text002;
                  EXIT;
                END;
              DATABASE::"Department Hour Rate":
                BEGIN
                  lDepartmentHourRate.SETRANGE("Department Code", GetDepartmentCode(IPriceType, IProject, IServiceOrder));
                  lDepartmentHourRate.SETRANGE("Hour Rate Code", IHourRate);
                  lDepartmentHourRate.SETRANGE("Starting Date", 0D, IPostingDate);
                  lDepartmentHourRate.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lDepartmentHourRate.FINDLAST THEN BEGIN
                    RetSalesPrice := lDepartmentHourRate."Hour Rate";
                    lRecRef.GETTABLE(lDepartmentHourRate);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Department Customer Hour Rate":
                BEGIN
                  lDepartmentCustomerHourRate.SETRANGE("Department Code", GetDepartmentCode(IPriceType, IProject, IServiceOrder));
                  lDepartmentCustomerHourRate.SETRANGE("Customer No.", IPrincipal);
                  lDepartmentCustomerHourRate.SETRANGE("Hour Rate Code", IHourRate);
                  lDepartmentCustomerHourRate.SETRANGE("Starting Date", 0D, IPostingDate);
                  lDepartmentCustomerHourRate.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lDepartmentCustomerHourRate.FINDLAST THEN BEGIN
                    RetSalesPrice := lDepartmentCustomerHourRate."Hour Rate (LCY)";
                    lRecRef.GETTABLE(lDepartmentCustomerHourRate);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Customer Price Group Hour Rate":
                BEGIN
                  IF NOT Customer.GET(IPrincipal) THEN
                    Customer.INIT;
                  lCustomerPriceGroupHourRate.SETRANGE("Customer Price Group", Customer."Customer Price Group");
                  lCustomerPriceGroupHourRate.SETRANGE("Hour Rate Code", IHourRate);
                  lCustomerPriceGroupHourRate.SETRANGE("Starting Date", 0D, IPostingDate);
                  lCustomerPriceGroupHourRate.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lCustomerPriceGroupHourRate.FINDLAST THEN BEGIN
                    RetSalesPrice := lCustomerPriceGroupHourRate."Hour Rate (LCY)";
                    lRecRef.GETTABLE(lCustomerPriceGroupHourRate);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
              DATABASE::"Plant Exceptional Sales Price":  //DP00812
                BEGIN
                  IF IReceivingCompany <> '' THEN BEGIN
                    PlantExceptionalSalesPrice.CHANGECOMPANY(IReceivingCompany);
                    PlantExceptSalesPriceDate.CHANGECOMPANY(IReceivingCompany);
                  END;
                  IF PlantExceptionalSalesPrice.FINDLAST THEN BEGIN
                    REPEAT
                      IF TestPlantExceptionalPrice(PlantExceptionalSalesPrice,
                        IEmployeeCompany, IEmployee, IWageComp, IPlantLocation, IPrincipal, IReceivingCompany)
                      THEN BEGIN
                        PlantExceptSalesPriceDate.SETRANGE(Level, PlantExceptionalSalesPrice.Level);
                        PlantExceptSalesPriceDate.SETRANGE("Starting Date", 0D, IPostingDate);
                        PlantExceptSalesPriceDate.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                        IF PlantExceptSalesPriceDate.FINDLAST THEN BEGIN
                          RetSalesPrice := PlantExceptSalesPriceDate."Sales Price";
                          lRecRef.GETTABLE(PlantExceptSalesPriceDate);
                          VPriceFoundAt := FillSalesPriceFound(lRecRef);
                          EXIT;
                        END;
                      END;
                    UNTIL PlantExceptionalSalesPrice.NEXT(-1) = 0;
                  END;
                END;
              DATABASE::"Trade Association Cost Price":  //DP00812
                BEGIN
                  IF IEmployee <> '' THEN BEGIN
                    IF IEmployeeCompany <> '' THEN
                      Employee.CHANGECOMPANY(IEmployeeCompany);
                    IF Employee.GET(IEmployee) THEN BEGIN
                      IF IReceivingCompany <> '' THEN
                        TradeAssociationCostPrice.CHANGECOMPANY(IReceivingCompany);
                      TradeAssociationCostPrice.SETRANGE("Trade Association", Employee."Trade Association");
                      TradeAssociationCostPrice.SETRANGE("Starting Date", 0D, IPostingDate);
                      TradeAssociationCostPrice.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                      IF TradeAssociationCostPrice.FINDLAST THEN BEGIN
                        RetSalesPrice := TradeAssociationCostPrice."Cost Price";
                        lRecRef.GETTABLE(TradeAssociationCostPrice);
                        VPriceFoundAt := FillSalesPriceFound(lRecRef);
                        EXIT;
                      END;
                    END;
                  END;
                END;
              DATABASE::"Discipline Sales Price":
                BEGIN
                  DetermineDiscipline(IEmployee, IDiscipline);
                  IF IDiscipline <> '' THEN BEGIN
                    DisciplineSalesPrice.SETRANGE(Discipline, IDiscipline);
                    DisciplineSalesPrice.SETRANGE("Starting Date", 0D, IPostingDate);
                    DisciplineSalesPrice.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                    IF DisciplineSalesPrice.FINDLAST THEN BEGIN
                      RetSalesPrice := DisciplineSalesPrice."Sales Price";
                      lRecRef.GETTABLE(DisciplineSalesPrice);
                      VPriceFoundAt := FillSalesPriceFound(lRecRef);
                      EXIT;
                    END;
                  END;
                END;
              DATABASE::"Customer - Discipline S. Price":
                BEGIN
                  IF IPrincipal <> '' THEN
                    DetermineDiscipline(IEmployee, IDiscipline);
                  IF (IPrincipal <> '') AND (IDiscipline <> '') THEN BEGIN
                    CustomerDisciplineSPrice.SETRANGE("Customer No.", IPrincipal);
                    CustomerDisciplineSPrice.SETRANGE(Discipline, IDiscipline);
                    CustomerDisciplineSPrice.SETRANGE("Starting Date", 0D, IPostingDate);
                    CustomerDisciplineSPrice.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                    IF CustomerDisciplineSPrice.FINDLAST THEN BEGIN
                      RetSalesPrice := CustomerDisciplineSPrice."Sales Price";
                      lRecRef.GETTABLE(CustomerDisciplineSPrice);
                      VPriceFoundAt := FillSalesPriceFound(lRecRef);
                      EXIT;
                    END;
                  END;
                END;
              DATABASE::"Employee - Discipline S. Price":
                BEGIN
                  DetermineDiscipline(IEmployee, IDiscipline);
                  IF (IEmployee <> '') AND (IDiscipline <> '') THEN BEGIN
                    EmployeeDisciplineSPrice.SETRANGE("Employee No.", IEmployee);
                    EmployeeDisciplineSPrice.SETRANGE(Discipline, IDiscipline);
                    EmployeeDisciplineSPrice.SETRANGE("Starting Date", 0D, IPostingDate);
                    EmployeeDisciplineSPrice.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                    IF EmployeeDisciplineSPrice.FINDLAST THEN BEGIN
                      RetSalesPrice := EmployeeDisciplineSPrice."Sales Price";
                      lRecRef.GETTABLE(EmployeeDisciplineSPrice);
                      VPriceFoundAt := FillSalesPriceFound(lRecRef);
                      EXIT;
                    END;
                  END;
                END;
            END;
          UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE TestExceptionalPrice@1100485035(IExceptionalSalesPriceRec@1100485000 : Record 11020388;IProject@1100485010 : Code[20];IServiceOrder@1100485009 : Code[20];IServiceContract@1100485008 : Code[20];IPrincipal@1100485007 : Code[20];ICostObject@1100485006 : Code[20];IWageComp@1100485005 : Code[20];IEmployee@1100485004 : Code[20];IHourRate@1100485003 : Code[10];IElement@1100485002 : Code[20];IExtContract@1100485001 : Code[20]) : Boolean;
    VAR
      lvServiceOrder@1101285000 : Record 11012823;
    BEGIN
      IF (IExceptionalSalesPriceRec."Employee No." <> '') AND
         (IExceptionalSalesPriceRec."Employee No." <> IEmployee) THEN
        EXIT(FALSE);

      IF (IExceptionalSalesPriceRec."Cost Object" <> '') AND
         (IExceptionalSalesPriceRec."Cost Object" <> ICostObject) THEN
        EXIT(FALSE);

      IF (IExceptionalSalesPriceRec."Project No." <> '') AND
         (IExceptionalSalesPriceRec."Project No." <> IProject) THEN
        EXIT(FALSE);

      IF (IExceptionalSalesPriceRec.Element <> '') AND
         (IExceptionalSalesPriceRec.Element <> IElement) THEN
        EXIT(FALSE);

      IF (IExceptionalSalesPriceRec."Wage Component" <> '') AND
         (IExceptionalSalesPriceRec."Wage Component" <> IWageComp) THEN
        EXIT(FALSE);

      IF (IExceptionalSalesPriceRec."Extension Contract" <> '') AND
         (IExceptionalSalesPriceRec."Extension Contract" <> IExtContract) THEN
        EXIT(FALSE);

      IF (IExceptionalSalesPriceRec."Service Order No." <> '') AND
         (IExceptionalSalesPriceRec."Service Order No." <> IServiceOrder) THEN
        EXIT(FALSE);

      IF (IExceptionalSalesPriceRec."Service Contract No." <> '') AND
         (IExceptionalSalesPriceRec."Service Contract No." <> IServiceContract) THEN
        EXIT(FALSE);

      IF (IExceptionalSalesPriceRec."Customer No." <> '') AND
         (IExceptionalSalesPriceRec."Customer No." <> IPrincipal) THEN
        EXIT(FALSE);


      IF IEmployee <> '' THEN BEGIN
        IF EmplRec."No." <> IEmployee THEN
          IF NOT EmplRec.GET(IEmployee) THEN
            CLEAR(EmplRec);
        IF EmplRec."No." = IEmployee THEN BEGIN
          IF (IExceptionalSalesPriceRec."Trade Association" <> '') AND
             (IExceptionalSalesPriceRec."Trade Association" <> EmplRec."Trade Association") THEN
            EXIT(FALSE);

          IF (IExceptionalSalesPriceRec."Department Code" <> '') AND
             (IExceptionalSalesPriceRec."Department Code" <> EmplRec."Global Dimension 1 Code") THEN
            EXIT(FALSE);
        END;
      //>>190304
      END ELSE BEGIN
        IF IServiceOrder <> '' THEN BEGIN
          IF NOT lvServiceOrder.GET(IServiceOrder) THEN
            CLEAR(lvServiceOrder);
          IF (IExceptionalSalesPriceRec."Department Code" <> '') AND
             (IExceptionalSalesPriceRec."Department Code" <> lvServiceOrder."Global Dimension 1 Code") THEN
            EXIT(FALSE);
          END;
      //<<190304
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE TestPlantExceptionalPrice@1100529004(PlantExceptionalSalesPrice@1100485000 : Record 11229881;EmployeeCompany@1100485010 : Text[30];EmployeeNo@1100529000 : Code[20];WageComponent@1100529001 : Code[20];PlantLocation@1100485009 : Code[20];CustomerNo@1100485007 : Code[20];PlantCompany@1100529005 : Text[30]) : Boolean;
    VAR
      Employee@1100529002 : Record 5200;
      EmplPriceCompany@1100529004 : Text[30];
    BEGIN
      //DP00812
      IF EmployeeCompany = '' THEN
        EmployeeCompany := COMPANYNAME;
      EmplPriceCompany := PlantExceptionalSalesPrice."Employee Company";
      IF (PlantCompany = '') OR (PlantCompany = COMPANYNAME) THEN BEGIN
        IF EmplPriceCompany = '' THEN
          EmplPriceCompany := COMPANYNAME;
      END ELSE BEGIN
        IF EmplPriceCompany = '' THEN
          EmplPriceCompany := PlantCompany;
      END;

      IF (PlantExceptionalSalesPrice."Employee No." <> '') AND
         ((EmplPriceCompany <> EmployeeCompany) OR (PlantExceptionalSalesPrice."Employee No." <> EmployeeNo))
      THEN
        EXIT(FALSE);

      IF (PlantExceptionalSalesPrice."Wage Component" <> '') AND
         (PlantExceptionalSalesPrice."Wage Component" <> WageComponent)
      THEN
        EXIT(FALSE);

      IF (PlantExceptionalSalesPrice."Plant Location" <> '') AND
         (PlantExceptionalSalesPrice."Plant Location" <> PlantLocation)
      THEN
        EXIT(FALSE);

      IF (PlantExceptionalSalesPrice."Customer No." <> '') AND
         (PlantExceptionalSalesPrice."Customer No." <> CustomerNo)
      THEN
        EXIT(FALSE);

      IF EmployeeNo <> '' THEN BEGIN
        IF EmployeeCompany <> '' THEN
          Employee.CHANGECOMPANY(EmployeeCompany);
        IF NOT Employee.GET(EmployeeNo) THEN
          CLEAR(Employee);

        IF (PlantExceptionalSalesPrice."Trade Association" <> '') AND
           (PlantExceptionalSalesPrice."Trade Association" <> Employee."Trade Association")
        THEN
          EXIT(FALSE);

        IF (PlantExceptionalSalesPrice."Department Code" <> '') AND
           (PlantExceptionalSalesPrice."Department Code" <> Employee."Global Dimension 1 Code")
        THEN
          EXIT(FALSE);
      END;
      EXIT(TRUE);
    END;

    [External]
    PROCEDURE FillSalesPriceFound@1100485033(lRecRef@1100485006 : RecordRef) : Text[250];
    VAR
      lAllObjWithCapRec@1100485001 : Record 2000000058;
    BEGIN
      lAllObjWithCapRec.SETRANGE("Object Type", lAllObjWithCapRec."Object Type"::Table);
      lAllObjWithCapRec.SETRANGE("Object ID", lRecRef.NUMBER);
      IF lAllObjWithCapRec.FINDFIRST THEN;

      lRecRef.RESET;
      lRecRef.SETRECFILTER;

      EXIT(STRSUBSTNO(Text001, lAllObjWithCapRec."Object Caption", lRecRef.GETFILTERS));
    END;

    [External]
    PROCEDURE GetDepartmentCode@1100528603(IPriceType@1100528604 : 'Project,Service';IProjectNo@1100528602 : Code[20];IServiceOrderNo@1100528603 : Code[20]) : Code[20];
    VAR
      Job@1100528600 : Record 11072003;
      ServiceOrder@1100528601 : Record 11012823;
    BEGIN
      CASE IPriceType OF
        IPriceType::Project:
          IF Job.GET(IProjectNo) THEN
            EXIT(Job."Global Dimension 1 Code");
        IPriceType::Service:
          IF ServiceOrder.GET(IServiceOrderNo) THEN
            EXIT(ServiceOrder."Global Dimension 1 Code");
      END;
    END;

    LOCAL PROCEDURE DetermineDiscipline@1100529001(EmployeeNo@1100529000 : Code[20];VAR Discipline@1100529001 : Code[10]);
    VAR
      Employee@1100529002 : Record 5200;
    BEGIN
      IF (Discipline = '') AND (EmployeeNo <> '') THEN BEGIN
        IF Employee.GET(EmployeeNo) THEN
          Discipline := Employee.Discipline;
      END;
    END;

    [External]
    PROCEDURE GetSalesDisc@1000000000(IPriceType@1100485026 : 'Project,Service';IProject@1100485027 : Code[20];IServiceOrder@1100485037 : Code[20];IServiceContract@1100485028 : Code[20];IPrincipal@1100485033 : Code[20];ICostObject@1100485029 : Code[20];IWageComp@1100485030 : Code[20];IEmployeeCompany@1100529002 : Text[30];IEmployee@1100485031 : Code[20];IHourRate@1100485034 : Code[10];IElement@1100485035 : Code[20];IExtContract@1100485036 : Code[20];IPlantLocation@1100529003 : Code[20];IReceivingCompany@1100529006 : Text[30];IDiscipline@1100529010 : Code[10];IPostingDate@1100485032 : Date;ICostPrice@1100525000 : Decimal;VAR VPriceFoundAt@1100485038 : Text[250]) RetSalesDisc : Decimal;
    VAR
      lSalesPriceReadOrderLine@1100485022 : Record 11020376;
      lExceptionalSalesPriceRec@1100485025 : Record 11020388;
      lExceptSalesPriceperDateRec@1100485000 : Record 11020389;
      lProjEmplCostObjWagePriceRec@1100485024 : Record 11020387;
      lProjEmplCostObjSalesPriceRec@1100485023 : Record 11020386;
      lProjEmplSalesPriceRec@1100485021 : Record 11020385;
      lProjCostObjWageSalesPriceRec@1100485020 : Record 11020384;
      lProjCostObjSalesPriceRec@1100485019 : Record 11020383;
      lProjPrincCostObjSalesPriceRec@1100485017 : Record 11020255;
      lCustEmplCostObjWagePriceRec@1100485016 : Record 11020382;
      lCustEmplCostObjSalesPriceRec@1100525001 : Record 11020381;
      lCustEmplSalesPriceRec@1100485014 : Record 11020380;
      lCustCostObjWageSalesPriceRec@1100485013 : Record 11020379;
      lCustCostObjSalesPriceRec@1100485012 : Record 11012080;
      lProjPrincHourRateRec@1100485011 : Record 11012024;
      lCustHourRateRec@1100485010 : Record 11012023;
      lEmplCostObjWageSalesPriceRec@1100485009 : Record 11020378;
      lEmplCostObjSalesPriceRec@1100485008 : Record 11020377;
      lHourRateRec@1100485007 : Record 11012022;
      CostObjWageCompSalesPrice@1210190000 : Record 11020658;
      lCostObjectSalesPrice@1100485039 : Record 11020351;
      lServEmplCostObjWagePriceRec@1100485006 : Record 11020331;
      lServEmplCostObjSalesPriceRec@1100485005 : Record 11020330;
      lServEmplSalesPriceRec@1100485004 : Record 11020329;
      lServCostObjWageSalesPriceRec@1100485003 : Record 11020328;
      lServCostObjSalesPriceRec@1100485002 : Record 11020327;
      lServHourRateRec@1100485001 : Record 11012815;
      lDepartmentHourRate@1100528600 : Record 11071896;
      lDepartmentCustomerHourRate@1100528601 : Record 11071897;
      lCustomerPriceGroupHourRate@1100528602 : Record 11229790;
      lRecRef@1100485018 : RecordRef;
      Customer@1100528603 : Record 18;
      PlantExceptionalSalesPrice@1100529000 : Record 11229881;
      PlantExceptSalesPriceDate@1100529001 : Record 11229882;
      TradeAssociationCostPrice@1100529004 : Record 11020269;
      Employee@1100529005 : Record 5200;
      DisciplineSalesPrice@1100529009 : Record 11229343;
      CustomerDisciplineSPrice@1100529008 : Record 11229344;
      EmployeeDisciplineSPrice@1100529007 : Record 11229345;
      lCostObjCostCentSalesPrice@1000000000 : Record 11128043;
      lCostObjCustSalesPriceDisc@1000000001 : Record 11128044;
      Job@1000000002 : Record 11072003;
      ServOrder@1000000003 : Record 11012823;
    BEGIN
      WITH lSalesPriceReadOrderLine DO BEGIN
        VPriceFoundAt := '';

        IF (IPriceType = "Price Type"::Plant) AND (IReceivingCompany <> '') THEN  //DP00812
          CHANGECOMPANY(IReceivingCompany);
        SETCURRENTKEY("Price Type", "Read Order");
        SETRANGE("Price Type", IPriceType);
        SETFILTER("Read Order",'1..');
        IF FINDSET THEN
          REPEAT
            CASE "Table No." OF
              DATABASE::"Cost Obj Cust Sales Price/Disc":
                BEGIN
                  lCostObjCustSalesPriceDisc.SETRANGE("Cost Object", ICostObject);
                  lCostObjCustSalesPriceDisc.SETRANGE("Customer No.",IPrincipal);
                  lCostObjCustSalesPriceDisc.SETRANGE("Starting Date", 0D, IPostingDate);
                  lCostObjCustSalesPriceDisc.SETFILTER("Ending Date",'%1|>=%2',0D, IPostingDate);
                  IF lCostObjCustSalesPriceDisc.FINDLAST THEN BEGIN
                    RetSalesDisc := lCostObjCustSalesPriceDisc."Sales Discount %";
                    lRecRef.GETTABLE(lCostObjCustSalesPriceDisc);
                    VPriceFoundAt := FillSalesPriceFound(lRecRef);
                    EXIT;
                  END;
                END;
            END;
          UNTIL NEXT = 0;
      END;
    END;

    BEGIN
    {
      190304 ORANGO.DL #22983, wrong exeptional salesprices is selected when employeeno is missing
      200520 ORANGO.PR Added Code in GetSalesPrice
      200525 ORANGO.PR New function GetSalesDisc
    }
    END.
  }
}

