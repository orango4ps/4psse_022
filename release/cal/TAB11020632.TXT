OBJECT Table 11020632 Project Forecast in Period
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckForecastFixed(TRUE);
               UpdateLog;

               IF "Line No." = 0 THEN
                 "Line No." := GetNextLineNo;
             END;

    OnModify=BEGIN
               CheckForecastFixed(TRUE);
               UpdateLog;
             END;

    OnDelete=BEGIN
               CheckForecastFixed(TRUE);
               UpdateLog;
             END;

    OnRename=BEGIN
               ERROR(Text002);
             END;

    CaptionML=[ENU=Project Forecast in Period;
               NOR=Prosjektprognose i periode;
               SVE=Projektprognos i period];
    LookupPageID=Page11124950;
    DrillDownPageID=Page11124950;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr];
                                                   NotBlank=Yes }
    { 20  ;   ;Forecast Date       ;Date          ;CaptionML=[ENU=Forecast Date;
                                                              NOR=Prognosedato;
                                                              SVE=Prognosdatum];
                                                   NotBlank=Yes }
    { 30  ;   ;Cost Type           ;Option        ;CaptionML=[ENU=Cost Type;
                                                              NOR=Kostnadstype;
                                                              SVE=Kostnadstyp];
                                                   OptionCaptionML=[ENU=Labor,Material,Subcontracting,Plant,Sundry,Revenue;
                                                                    NOR=Arbeidskraft,Materiale,Underentrepen›r,Maskin,Diverse,Inntekt;
                                                                    SVE=Arbetskraft,Material,Underentreprenad,Maskin,Diverse,Int„kt];
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry,Revenue;
                                                   Editable=No }
    { 40  ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Project Filter=FIELD(Project No.),
                                                                                               Cost Type=FIELD(Cost Type));
                                                   OnValidate=VAR
                                                                DimVal@1100525001 : Record 349;
                                                                DimMgt@1100525000 : Codeunit 408;
                                                              BEGIN
                                                                IF ("Cost Object" <> '') AND ("Cost Object" <> xRec."Cost Object") THEN BEGIN
                                                                  DimMgt.GetDimValueRec(2, "Cost Object", DimVal, TRUE, '');
                                                                  "Cost Type" := DimVal."Cost Type";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostnadsobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 50  ;   ;Cost Object Description;Text50     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dimension Value".Name WHERE (Code=FIELD(Cost Object),
                                                                                                    Global Dimension No.=CONST(2)));
                                                   CaptionML=[ENU=Cost Object Description;
                                                              NOR=Kostnadsobjekt, Beskrivelse;
                                                              SVE=Kostnadsobjekt, beskrivning];
                                                   Editable=No;
                                                   CaptionClass='1,11012000,2, , ' + Text000 }
    { 60  ;   ;Project Cost Object Name;Text50    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project - Cost Object".Name WHERE (Project No.=FIELD(Project No.),
                                                                                                          Cost Object=FIELD(Cost Object)));
                                                   CaptionML=[ENU=Project Cost Object Name;
                                                              NOR=Navn p† kostnadsobjekt for prosjekt;
                                                              SVE=Projektkostnadsobjektnamn];
                                                   Editable=No }
    { 80  ;   ;Element             ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                ElementFormat@1100525000 : Codeunit 11012022;
                                                              BEGIN
                                                                ElementFormat.FormatElem(Element,2,'');
                                                                CALCFIELDS("Element Description");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 85  ;   ;Element Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Element".Description WHERE (Project No.=FIELD(Project No.),
                                                                                                           Element=FIELD(Element)));
                                                   CaptionML=[ENU=Element Description;
                                                              NOR=Elementbeskrivelse;
                                                              SVE=Elementbeskrivning];
                                                   Editable=No }
    { 100 ;   ;Date                ;Date          ;OnValidate=BEGIN
                                                                IF Date <= "Forecast Date" THEN
                                                                  ERROR(Text003, FIELDCAPTION(Date), FIELDCAPTION("Forecast Date"));
                                                              END;

                                                   CaptionML=[ENU=Date;
                                                              NOR=Dato;
                                                              SVE=Datum];
                                                   NotBlank=Yes }
    { 110 ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 120 ;   ;Document No.        ;Code20        ;TableRelation=IF (Source=FILTER(Outstanding Purchase|Received Not Invoiced)) "Purchase Header".No. WHERE (Document Type=CONST(Order));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Document No.;
                                                              NOR=Dokumentnr.;
                                                              SVE=Dokumentnr];
                                                   Editable=No }
    { 1000;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                CalcAmount;
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5 }
    { 1010;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                CalculatePriceRateOrQuantity; //DP01426.n
                                                              END;

                                                   CaptionML=ENU=Cost to complete;
                                                   AutoFormatType=1 }
    { 1030;   ;Rate Code           ;Code10        ;TableRelation="Budget Rate".Code WHERE (Project Filter=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                BudgetRateManagement@1100528600 : Codeunit 11012358;
                                                                Job@1100528601 : Record 11072003;
                                                                BudgetRateFoundAt@1100528602 : Text[250];
                                                              BEGIN
                                                                TESTFIELD("Cost Type", "Cost Type"::Labor);
                                                                Job.GET("Project No.");
                                                                Rate := BudgetRateManagement.GetBudgetRate(
                                                                  0, "Project No.", '', '', Job."Global Dimension 1 Code", "Rate Code", Date, BudgetRateFoundAt);
                                                                CalcAmount;
                                                              END;

                                                   CaptionML=[ENU=Rate Code;
                                                              NOR=Avgiftskode;
                                                              SVE=Avgiftskod] }
    { 1040;   ;Rate                ;Decimal       ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO(Rate) THEN
                                                                  TESTFIELD("Rate Code", '');

                                                                CalcAmount;
                                                              END;

                                                   CaptionML=[ENU=Rate;
                                                              NOR=Avgift;
                                                              SVE=Avgift];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 1050;   ;Comment             ;Text50        ;CaptionML=[ENU=Comment;
                                                              NOR=Kommentar;
                                                              SVE=Kommentar] }
    { 1060;   ;Price               ;Decimal       ;OnValidate=BEGIN
                                                                CalcAmount;
                                                              END;

                                                   CaptionML=[ENU=Price;
                                                              NOR=Pris;
                                                              SVE=Pris];
                                                   Description=DP01426;
                                                   AutoFormatType=2 }
    { 2000;   ;Source              ;Option        ;CaptionML=[ENU=Source;
                                                              NOR=Kilde;
                                                              SVE=K„lla];
                                                   OptionCaptionML=ENU=Forecast,Outstanding Purchase,Received Not Invoiced,Outstanding Hours,Overhead Surcharge Forecast,Outstanding Inventory,Planning,Planning-error;
                                                   OptionString=Forecast,Outstanding Purchase,Received Not Invoiced,Outstanding Hours,Overhead Surcharge Forecast,Outstanding Inventory,Planning,Planning-error;
                                                   Editable=No }
    { 2010;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod];
                                                   Description=BI042;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Project No.,Forecast Date,Cost Type,Element,Cost Object,Currency Code,Date,Line No.;
                                                   SumIndexFields=Amount,Quantity;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Project No.,Forecast Date,Cost Type,Date,Comment;
                                                   SumIndexFields=Amount }
    {    ;Project No.,Forecast Date,Cost Type,Element,Cost Object,Source,Date;
                                                   SumIndexFields=Amount,Quantity }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProjectSetup@1100529601 : Record 315;
      SkipFixedCheck@1100525000 : Boolean;
      Text001@1100525002 : TextConst 'ENU=Forecast is frozen, Changes not allowed.;NOR=Prognosen er fryst, endringer er ikke tillatte.;SVE=Prognosen „r fryst, „ndringar „r inte till†tna.';
      Text002@1100525001 : TextConst 'ENU=Renaming is not allowed.;NOR=Ikke tillatt † gi nytt navn.;SVE=Att ge nytt namn „r inte till†tet.';
      Text003@1100525003 : TextConst 'ENU=%1 must be after %2;NOR=%1 m† v‘re etter %2.;SVE=%1 m†ste vara efter %2.';
      Text000@1100527350 : TextConst 'ENU=Description;SVE=Beskrivning';
      HasGotProjectSetup@1100529600 : Boolean;

    PROCEDURE GetNextLineNo@1100525000() : Integer;
    VAR
      ProjectForecastInPeriod@1100525000 : Record 11020632;
    BEGIN
      ProjectForecastInPeriod := Rec;
      ProjectForecastInPeriod.SETRECFILTER;
      ProjectForecastInPeriod.SETRANGE("Line No.");
      IF ProjectForecastInPeriod.FINDLAST THEN
        EXIT(ProjectForecastInPeriod."Line No." + 10000)
      ELSE
        EXIT(10000);
    END;

    PROCEDURE InitLaborRate@1100525002();
    VAR
      ProjectForecastLine@1100525000 : Record 11020631;
    BEGIN
      IF "Cost Type" <> "Cost Type"::Labor THEN
        EXIT;

      ProjectForecastLine.SETRANGE("Project No.", "Project No.");
      ProjectForecastLine.SETRANGE("Forecast Date", "Forecast Date");
      ProjectForecastLine.SETRANGE("Cost Type", "Cost Type");
      ProjectForecastLine.SETRANGE(Element, Element);
      ProjectForecastLine.SETRANGE("Cost Object", "Cost Object");
      ProjectForecastLine.SETRANGE("Currency Code", "Currency Code"); //**4PS.n BI042 KD 23-11-16
      IF ProjectForecastLine.FINDFIRST THEN
        IF ProjectForecastLine."Rate Code" <> '' THEN
          VALIDATE("Rate Code", ProjectForecastLine."Rate Code")
        ELSE
          VALIDATE(Rate, ProjectForecastLine.Rate);
    END;

    PROCEDURE InitPrice@1100529600();
    VAR
      ProjectForecastLine@1100525000 : Record 11020631;
    BEGIN
      //DP01426.sn
      IF "Cost Type" = "Cost Type"::Labor THEN
        EXIT;

      ProjectForecastLine.SETRANGE("Project No.", "Project No.");
      ProjectForecastLine.SETRANGE("Forecast Date", "Forecast Date");
      ProjectForecastLine.SETRANGE("Cost Type", "Cost Type");
      ProjectForecastLine.SETRANGE(Element, Element);
      ProjectForecastLine.SETRANGE("Cost Object", "Cost Object");
      ProjectForecastLine.SETRANGE("Currency Code", "Currency Code");
      IF ProjectForecastLine.FINDFIRST THEN
        VALIDATE(Price, ProjectForecastLine.Price);
      //DP01426.en
    END;

    PROCEDURE CalcAmount@1100525001();
    BEGIN
      IF "Cost Type" = "Cost Type"::Labor THEN BEGIN
        IF (Quantity * Rate = 0) AND
           ((Quantity <> 0) OR (Rate <> 0)) AND
           (xRec.Quantity * xRec.Rate = 0)
        THEN
          IF CalculatePriceRateOrQuantity THEN
            EXIT;

        VALIDATE(Amount, Quantity * Rate);
        Price := 0;
      //DP01426.sn
      END ELSE BEGIN
        Rate := 0;

        IF (Quantity * Price = 0) AND
           ((Quantity <> 0) OR (Price <> 0)) AND
           (xRec.Quantity * xRec.Price = 0)
        THEN
          IF CalculatePriceRateOrQuantity THEN
            EXIT;

        VALIDATE(Amount, Quantity * Price);
      END;
      //DP01426.en
    END;

    LOCAL PROCEDURE CalculatePriceRateOrQuantity@1100529606() : Boolean;
    BEGIN
      //DP01426.sn
      GetProjectSetup;
      IF "Cost Type" = "Cost Type"::Labor THEN
        IF NOT ProjectSetup."Forecast Labour in Amounts" THEN
          EXIT(FALSE);

      CASE CurrFieldNo OF
        FIELDNO(Quantity):
          IF Quantity <> 0 THEN BEGIN
            IF "Cost Type" = "Cost Type"::Labor THEN
              Rate := ROUND(Amount / Quantity, 0.00001)
            ELSE
              Price := ROUND(Amount / Quantity, 0.00001);
            EXIT(TRUE);
          END;
        FIELDNO(Price):
          IF Price <> 0 THEN BEGIN
            Quantity := ROUND(Amount / Price, 0.00001);
            EXIT(TRUE);
          END;
        FIELDNO(Rate), FIELDNO("Rate Code"):
          IF Rate <> 0 THEN BEGIN
            Quantity := ROUND(Amount / Rate, 0.00001);
            EXIT(TRUE);
          END;
        FIELDNO(Amount), 0:
          IF ProjectSetup."Recalc Rate or Hours Prognosis" = ProjectSetup."Recalc Rate or Hours Prognosis"::Rate THEN BEGIN
            IF Quantity <> 0 THEN BEGIN
              IF "Cost Type" = "Cost Type"::Labor THEN
                Rate := ROUND(Amount / Quantity, 0.00001)
              ELSE
                Price := ROUND(Amount / Quantity, 0.00001);
              EXIT(TRUE);
            END;
          END ELSE
            IF "Cost Type" = "Cost Type"::Labor THEN BEGIN
              IF Rate <> 0 THEN BEGIN
                Quantity := ROUND(Amount / Rate, 0.00001);
                EXIT(TRUE);
              END;
            END ELSE
              IF Price <> 0 THEN BEGIN
                Quantity := ROUND(Amount / Price, 0.00001);
                EXIT(TRUE);
              END;
      END;

      EXIT(FALSE);
      //DP01426.en
    END;

    PROCEDURE CheckForecastFixed@1100525007(ShowErrorMessage@1100525001 : Boolean) : Boolean;
    VAR
      ProjectForecastHeader@1100525000 : Record 11020630;
    BEGIN
      IF SkipFixedCheck THEN
        EXIT(FALSE);

      IF NOT ProjectForecastHeader.GET("Project No.", "Forecast Date") THEN
        EXIT(FALSE);

      IF ProjectForecastHeader.Fixed THEN
        IF ShowErrorMessage THEN
          ERROR(Text001)
        ELSE
          EXIT(TRUE);
    END;

    PROCEDURE SetSkipFixedCheck@1100525013();
    BEGIN
      SkipFixedCheck := TRUE;
    END;

    PROCEDURE UpdateLog@1100525012();
    VAR
      ProjectForecastHeader@1100525000 : Record 11020630;
    BEGIN
      ProjectForecastHeader.UpdateLog("Project No.", "Forecast Date");
    END;

    PROCEDURE LookupDocumentNo@1210190000();
    VAR
      HourAccountingLine@1210190000 : Record 11012039;
      Project@1210190001 : Record 11072003;
      PurchHeader@1210190002 : Record 38;
      ItemJnlLine@1100526200 : Record 83;
      IemmJnl@1100526201 : Page 40;
    BEGIN
      CASE Source OF
        Source::"Outstanding Purchase", Source::"Received Not Invoiced":
          BEGIN
            PurchHeader.SETRANGE("Document Type", PurchHeader."Document Type"::Order);
            PurchHeader.GET(PurchHeader."Document Type"::Order, "Document No.");
            PAGE.RUNMODAL(PAGE::"Purchase Order", PurchHeader);
          END;
        Source::"Outstanding Hours":
          BEGIN
            Project.GET("Project No.");
            HourAccountingLine.SETRANGE("Main Project No.", Project."Main Project");
            IF Project."No." <> Project."Main Project" THEN
              HourAccountingLine.SETRANGE("Project No.", "Project No.");
            HourAccountingLine.SETRANGE("Posting Date", Date);
            IF Date <= "Forecast Date" + 1 THEN                            //*C005703.n
              HourAccountingLine.SETFILTER("Posting Date", '..%1', Date);  //*C005703.n
            CASE Project."Forecast Level" OF
              Project."Forecast Level"::"Element - Cost Object":
                BEGIN
                  HourAccountingLine.SETCURRENTKEY(
                    "Main Project No.","Project No.",Element);
                  HourAccountingLine.SETRANGE(Element, Element);
                  HourAccountingLine.SETRANGE("Cost Object", "Cost Object");
                END;
              Project."Forecast Level"::"Element - Cost Type":
                BEGIN
                  HourAccountingLine.SETCURRENTKEY(
                    "Main Project No.","Project No.",Element);
                  HourAccountingLine.SETRANGE(Element, Element);
                  HourAccountingLine.SETRANGE("Cost Type", "Cost Type");
                END;
              Project."Forecast Level"::"Cost Object":
                BEGIN
                  HourAccountingLine.SETCURRENTKEY(
                    "Main Project No.","Cost Type", "Cost Object");
                  HourAccountingLine.SETRANGE("Cost Object", "Cost Object");
                END;
              Project."Forecast Level"::"Cost Type":
                BEGIN
                  HourAccountingLine.SETCURRENTKEY(
                    "Main Project No.","Cost Type");
                  HourAccountingLine.SETRANGE("Cost Type", "Cost Type");
                END;
            END;
            HourAccountingLine.SETRANGE("Document No.", "Document No.");
            PAGE.RUNMODAL(0, HourAccountingLine);
          END;
        Source::"Outstanding Inventory":  //*C005928.n
          BEGIN
            Project.GET("Project No.");
            ItemJnlLine.SETRANGE("Main Project No.", Project."Main Project");
            IF Project."No." <> Project."Main Project" THEN
              ItemJnlLine.SETRANGE("Job No.", "Project No.");
            ItemJnlLine.SETRANGE("Document No.", "Document No.");
            IF ItemJnlLine.FINDFIRST THEN BEGIN
              IemmJnl.SETTABLEVIEW(ItemJnlLine);  // First pass document, then setselection(/filters) on Templ. and Batch
              IemmJnl.SetSelectionTemplateAndBatch(ItemJnlLine."Journal Template Name", ItemJnlLine."Journal Batch Name");
              IemmJnl.RUNMODAL;
            END;
          END;
      END;
    END;

    LOCAL PROCEDURE GetProjectSetup@1100529601();
    BEGIN
      IF HasGotProjectSetup THEN
        EXIT;
      ProjectSetup.GET;
      HasGotProjectSetup := TRUE;
    END;

    BEGIN
    {
      4PS 19-08-16 UKR-C26352 KD: Foreign currency in the forecast (BI042) - Added field "Currency Code"; field "Currency Code" added to Primary Key
      4PS 13-10-16 UKR-C25269 KD: Fill forecast & progress with planning activities (BI045) - Option Planning added to field Source
    }
    END.
  }
}

