OBJECT Report 11072076 Index Insurance
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00 (5691);
  }
  PROPERTIES
  {
    CaptionML=[DEU=Versicherung indexieren;
               ENU=Index Insurance;
               NLD=Verzekering indexeren;
               NOR=Indekser Forsikring;
               SVE=Indexera fîrsÑkring];
    ApplicationArea=#FixedAssets;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF PostingDate = 0D THEN
                    ERROR(Text000,InsuranceJnlLine.FIELDCAPTION("Posting Date"));
                  IF PostingDate <> NORMALDATE(PostingDate) THEN
                    ERROR(Text001);
                  IF IndexFigure = 100 THEN
                    ERROR(Text002);
                  IF IndexFigure <= 0 THEN
                    ERROR(Text003);
                  FASetup.GET;
                  FASetup.TESTFIELD("Insurance Depr. Book");
                  DeprBook.GET(FASetup."Insurance Depr. Book");
                  InsuranceJnlLine.LOCKTABLE;
                  FAJnlSetup.InsuranceJnlName(DeprBook,InsuranceJnlLine,NextLineNo);
                  NoSeries := FAJnlSetup.GetInsuranceNoSeries(InsuranceJnlLine);
                  IF DocumentNo = '' THEN
                    DocumentNo := FAJnlSetup.GetInsuranceJnlDocumentNo(InsuranceJnlLine,PostingDate);
                  InsuranceJnlLine."Posting Date" := PostingDate;
                  Window.OPEN(Text004);
                END;

    UsageCategory=Tasks;
  }
  DATASET
  {
    { 3794;    ;DataItem;                    ;
               DataItemTable=Table5600;
               OnPreDataItem=BEGIN
                               InsCoverageLedgEntry.SETCURRENTKEY("FA No.","Insurance No.");
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Blocked OR Inactive THEN
                                    CurrReport.SKIP;
                                  Window.UPDATE(1,"No.");
                                  InsuranceTmp.DELETEALL;
                                  InsCoverageLedgEntry.SETRANGE("FA No.","No.");
                                  InsCoverageLedgEntry.SETRANGE("Posting Date",0D,PostingDate);
                                  IF InsCoverageLedgEntry.FIND('-') THEN
                                    REPEAT
                                      InsuranceTmp."No." := InsCoverageLedgEntry."Insurance No.";
                                      IF InsuranceTmp.INSERT THEN BEGIN
                                        InsCoverageLedgEntry.SETRANGE("Insurance No.",InsCoverageLedgEntry."Insurance No.");
                                        InsCoverageLedgEntry.CALCSUMS(Amount);
                                        InsCoverageLedgEntry.SETRANGE("Insurance No.");
                                        IF InsCoverageLedgEntry.Amount <> 0 THEN BEGIN
                                          IF Insurance.GET(InsCoverageLedgEntry."Insurance No.") THEN BEGIN
                                            IF Insurance.Blocked THEN
                                              CurrReport.SKIP;
                                          END ELSE
                                            CurrReport.SKIP;
                                          InsuranceJnlLine."Line No." := 0;
                                          FAJnlSetup.SetInsuranceJnlTrailCodes(InsuranceJnlLine);
                                          InsuranceJnlLine.VALIDATE("Insurance No.",InsCoverageLedgEntry."Insurance No.");
                                          InsuranceJnlLine.VALIDATE("FA No.","No.");
                                          InsuranceJnlLine.VALIDATE(
                                            Amount,ROUND(InsCoverageLedgEntry.Amount * (IndexFigure / 100 - 1)));
                                          InsuranceJnlLine."Document No." := DocumentNo;
                                          InsuranceJnlLine."Posting No. Series" := NoSeries;
                                          InsuranceJnlLine.Description := PostingDescription;
                                          InsuranceJnlLine."Index Entry" := TRUE;
                                          NextLineNo := NextLineNo + 10000;
                                          InsuranceJnlLine."Line No." := NextLineNo;
                                          InsuranceJnlLine.INSERT(TRUE);
                                        END;
                                      END;
                                    UNTIL InsCoverageLedgEntry.NEXT = 0;
                                END;

               ReqFilterFields=No.,FA Class Code,FA Subclass Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 5   ;2   ;Field     ;
                  CaptionML=[DEU=Indexzahl;
                             ENU=Index Figure;
                             NLD=Indexcijfer;
                             NOR=Indeksreg.tall;
                             SVE=Indextal];
                  ToolTipML=[DEU="Gibt eine Indexzahl an, die zur Berechnung der im Buch.-Blatt eingetragenen IndexbetrÑge verwendet wird. Wenn Sie z.ˇB. einen Index von 2ˇ% verwenden mîchten, geben Sie 102 in dieses Feld ein; wenn Sie einen Index von -3ˇ% verwenden mîchten, geben Sie in dieses Feld 97 ein.";
                             ENU="Specifies an index figure that is to calculate the index amounts entered in the journal. For example, if you want to index by 2%, enter 102 in this field; if you want to index by -3% percent, enter 97 in this field.";
                             NLD=Hiermee wordt een indexcijfer opgegeven waarmee de indexbedragen moeten worden berekend die in het dagboek worden ingevoerd. Als u een indexering van 2% wilt, voert u 102 in dit veld in. Als u een indexering van -3% wilt, voert u 97 in dit veld in.;
                             NOR=Angir et indeksreguleringstall som bruker til Ü beregne indeksreguleringsbelõp som er angitt i kladden. Hvis du for eksempel vil indeksregulere med 2 %, skriver du 102 i dette feltet. Hvis du vil indeksregulere med -3 %, skriver du 97 i dette feltet.;
                             SVE="Anger ett indextal tal som ska anvÑndas fîr att berÑkna de indexbelopp som angetts i journalen. Om du vill anvÑnda t.ex. ett index pÜ 2 % skriver du 102 i det hÑr fÑltet; om du vill anvÑnda ett index pÜ -3 % skriver du 97 i det hÑr fÑltet."];
                  ApplicationArea=#FixedAssets;
                  DecimalPlaces=0:8;
                  SourceExpr=IndexFigure }

      { 3   ;2   ;Field     ;
                  CaptionML=[DEU=Buchungsdatum;
                             ENU=Posting Date;
                             NLD=Boekingsdatum;
                             NOR=Bokfõringsdato;
                             SVE=Bokfîringsdatum];
                  ToolTipML=[DEU=Gibt das von der Stapelverarbeitung zu verwendende Buchungsdatum an. Dieses Datum erscheint im Feld "Buchungsdatum" der Versicherungs Buch.-Blattzeilen.;
                             ENU=Specifies the posting date to be used by the batch job. This date appears in the Posting Date field on the insurance journal lines.;
                             NLD=Hiermee wordt de boekingsdatum opgegeven die moet worden gebruikt door de batchverwerking. Deze datum verschijnt in het veld Boekingsdatum op de verzekeringsdagboekregels.;
                             NOR=Angir bokfõringsdatoen som skal brukes av kjõrselen. Denne datoen vises i feltet Bokfõringsdato pÜ forsikringskladdelinjene.;
                             SVE=Anger det bokfîringsdatum som ska anvÑndas i batch-jobbet. Detta datum visas i fÑltet Bokfîringsdatum pÜ fîrsÑkringsjournalraderna.];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=PostingDate }

      { 8   ;2   ;Field     ;
                  CaptionML=[DEU=Belegnr.;
                             ENU=Document No.;
                             NLD=Documentnr.;
                             NOR=Dokumentnr.;
                             SVE=Dokumentnr];
                  ToolTipML=[DEU=Gibt, wenn das Feld leer ist, die nÑchste verfÅgbare Nummer in der resultierenden Buch.-Blattzeile an. Wenn keine Nummernserie eingerichtet wurde, geben Sie die Belegnummer ein, die der resultierenden Buch.-Blattzeile zugewiesen werden soll.;
                             ENU=Specifies, if you leave the field empty, the next available number on the resulting journal line. If a number series is not set up, enter the document number that you want assigned to the resulting journal line.;
                             NLD=Hiermee wordt, als u het veld leeg laat, het volgende beschikbare nummer op de resulterende dagboekregel opgegeven. Als geen nummerreeks is ingesteld, voert u het documentnummer in dat u wilt toewijzen aan de resulterende dagboekregel.;
                             NOR=Angir, hvis du lar feltet vëre tomt, det neste tilgjengelige nummeret for den resulterende kladdelinjen. Hvis en nummer serie ikke er definert, angir du bilagsnummeret som du vil tilordne til den resulterende kladdelinjen.;
                             SVE=Om du inte anger nÜgot i fÑltet anges nÑsta lediga nummer pÜ journalraden. Om ingen nummerserie har konfigurerats anger du det dokumentnummer som du vill tilldela journalraden.];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=DocumentNo }

      { 1   ;2   ;Field     ;
                  CaptionML=[DEU=Buchungsbeschreibung;
                             ENU=Posting Description;
                             NLD=Omschrijving;
                             NOR=Bokfõringsbeskrivelse;
                             SVE=Bokfîringsbeskrivning];
                  ToolTipML=[DEU=Gibt eine Buchungsbeschreibung an, die in den resultierenden Buch.-Blattzeilen erscheint.;
                             ENU=Specifies a posting description to appear on the resulting journal lines.;
                             NLD=Hiermee wordt een boekingsomschrijving opgegeven die op de resulterende dagboekregels verschijnt.;
                             NOR=Angir en bokfõringsbeskrivelse som vises pÜ kladdelinjene.;
                             SVE=Anger en bokfîringsbeskrivning som visas pÜ de journalrader som blir resultatet.];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=PostingDescription }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Sie mÅssen %1 angeben.;ENU=You must specify %1.;NLD=U moet %1 opgeven.;NOR=Du mÜ spesifisere %1.;SVE=Du mÜste specificera %1.';
      Text001@1001 : TextConst 'DEU=Das Buchungsdatum darf kein Ultimodatum sein.;ENU=Posting Date must not be a closing date.;NLD=Boekingsdatum mag geen ultimodatum zijn.;NOR=Bokfõringsdato kan ikke vëre en sluttdato.;SVE=Bokfîringsdatum fÜr inte vara ett avslutsdatum.';
      Text002@1002 : TextConst 'DEU=Die Indexzahl darf nicht 100 betragen.;ENU=Index Figure must not be 100.;NLD=Indexcijfer mag niet 100 zijn.;NOR=Indekstallet kan ikke vëre 100.;SVE=Indextalet fÜr inte vara 100.';
      Text003@1003 : TextConst 'DEU=Die Indexzahl muss positiv sein.;ENU=Index Figure must be positive.;NLD=Indexcijfer moet positief zijn.;NOR=Indekstallet mÜ vëre positivt.;SVE=Indextalet mÜste vara positivt.';
      Text004@1004 : TextConst 'DEU=Versicherung wird indexiert   #1##########;ENU=Indexing insurance    #1##########;NLD=Indexeren verzekering #1##########;NOR=Indekserer forsikring  #1##########;SVE=Indexerar fîrsÑkring  #1##########';
      FASetup@1005 : Record 5603;
      DeprBook@1006 : Record 5611;
      Insurance@1007 : Record 11072087;
      FAJnlSetup@1008 : Record 5605;
      InsuranceTmp@1009 : TEMPORARY Record 11072087;
      InsCoverageLedgEntry@1010 : Record 11072088;
      InsuranceJnlLine@1011 : Record 11072092;
      Window@1012 : Dialog;
      PostingDate@1013 : Date;
      IndexFigure@1014 : Decimal;
      DocumentNo@1015 : Code[20];
      NoSeries@1016 : Code[20];
      PostingDescription@1017 : Text[100];
      NextLineNo@1018 : Integer;

    [External]
    PROCEDURE InitializeRequest@1(DocumentNoFrom@1003 : Code[20];PostingDescriptionFrom@1002 : Text[100];PostingDateFrom@1001 : Date;IndexFigureFrom@1000 : Decimal);
    BEGIN
      DocumentNo := DocumentNoFrom;
      PostingDescription := PostingDescriptionFrom;
      PostingDate := PostingDateFrom;
      IndexFigure := IndexFigureFrom;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

