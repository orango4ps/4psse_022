OBJECT Table 11020436 Hours Consent Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Hours Consent Setup;
               NOR=Attestinnstillinger for timer;
               SVE=Godk„nnandeinst„llningar f”r timmar];
  }
  FIELDS
  {
    { 10  ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=Project,Service,Indirect,,Plant,All Hours;
                                                                    NOR=Prosjekt,Service,Indirekt,,Maskin,Alle timer;
                                                                    SVE=Projekt,Service,Indirekt,,Maskin,Alla tider];
                                                   OptionString=Project,Service,Indirect,,Plant,All Hours }
    { 20  ;   ;Serial Number       ;Integer       ;CaptionML=[ENU=Consent level;
                                                              NOR=Serienummer;
                                                              SVE=Godk„nnandeniv†] }
    { 30  ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 40  ;   ;Approver            ;Code50        ;TableRelation=User."User Name";
                                                   OnValidate=BEGIN
                                                                UserMgt.ValidateUserID(Approver);
                                                              END;

                                                   OnLookup=BEGIN
                                                              UserMgt.LookupUserID(Approver);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Approver;
                                                              NOR=Godkjenner;
                                                              SVE=Godk„nnare] }
    { 50  ;   ;Approver Denied Lines;Code50       ;TableRelation=User."User Name";
                                                   OnValidate=BEGIN
                                                                UserMgt.ValidateUserID("Approver Denied Lines");
                                                              END;

                                                   OnLookup=BEGIN
                                                              UserMgt.LookupUserID("Approver Denied Lines");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Approver Denied Lines }
    { 60  ;   ;Source              ;Option        ;CaptionML=[ENU=Source;
                                                              NOR=Source;
                                                              SVE=K„lla];
                                                   OptionCaptionML=[ENU=Hour Accounting,Site Mngmnt. Hours;
                                                                    SVE=Tidrapportering,Byggledning Timmar];
                                                   OptionString=Hour Accounting,Site Mngmnt. Hours }
  }
  KEYS
  {
    {    ;Type,No.,Serial Number,Approver         ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      UserMgt@1100485000 : Codeunit 418;
      Text000@1100528400 : TextConst 'ENU=%1 %2 is not linked to %3.;NOR=%1 %2 er ikke linket til %3.;SVE=%1 %2 „r inte kopplad till %3.';

    PROCEDURE GetHourApproverInfo@1100528401(VAR SerialNumber@1100528400 : Integer;VAR ApproverName@1100528401 : Code[50];CurrentSource@1100528415 : Integer;CurrentType@1100528408 : Integer;ProjectNo@1100528413 : Code[20];ServiceContractNo@1100528412 : Code[20];ServiceOrderNo@1100528411 : Code[20];EmployeeNo@1100528410 : Code[20];PlantLocationCode@1100528403 : Code[20];ReceivingCompany@1100528409 : Text[30];SupplyingCompany@1100528414 : Text[30];MinimumSerialNo@1100528407 : Integer;ShortcutDimension1Code@1101285000 : Code[20]) : Boolean;
    VAR
      Job@1100528402 : Record 11072003;
      ServiceContract@1100528404 : Record 11012812;
      ServiceOrder@1100525000 : Record 11012823;
      Employee@1100528405 : Record 5200;
      HoursConsentSetup@1100528406 : Record 11020436;
      GLSetup@1101285001 : Record 98;
      DimVal@1101285002 : Record 349;
    BEGIN
      IF GetApplicableHoursConsentSetup(
        HoursConsentSetup, CurrentSource, CurrentType, ProjectNo, ServiceContractNo, ServiceOrderNo,
        EmployeeNo, PlantLocationCode, MinimumSerialNo)
      THEN BEGIN
        IF HoursConsentSetup.Approver <> '' THEN
          ApproverName := HoursConsentSetup.Approver
        ELSE BEGIN
          CASE CurrentType OF
            Type::Project:
              BEGIN
                IF (CurrentSource < 0) OR (CurrentSource > 1) THEN
                  EXIT(FALSE);
                IF ((CurrentSource = 0) AND (ReceivingCompany <> '')) OR
                   ((CurrentSource = 1) AND (ReceivingCompany <> COMPANYNAME))
                THEN
                  EXIT(FALSE); //Approver (project manager) should be employee of current company.
                Job.GET(ProjectNo);
                Job.TESTFIELD("Project Manager");
                ApproverName := GetUserIDOfEmployee(Job."Project Manager");
              END;
            Type::Service:
              BEGIN
                IF ((CurrentSource = 0) AND (ReceivingCompany <> '')) OR
                   ((CurrentSource = 1) AND (ReceivingCompany <> COMPANYNAME))
                THEN
                  EXIT(FALSE); //Approver (service contr. manager) should be employee of current company.
                IF ServiceContractNo <> '' THEN BEGIN
                  ServiceContract.GET(ServiceContractNo);
                  ServiceContract.TESTFIELD("Contract Manager");
                  ApproverName := GetUserIDOfEmployee(ServiceContract."Contract Manager");
                END ELSE BEGIN
                  ServiceOrder.GET(ServiceOrderNo);
                  ServiceOrder.TESTFIELD("Order Manager");
                  ApproverName := GetUserIDOfEmployee(ServiceOrder."Order Manager");
                END;
              END;
            Type::"All Hours",  //INC#127749
            Type::Indirect:
              BEGIN
                IF (SupplyingCompany <> '') AND (SupplyingCompany <> COMPANYNAME) THEN
                  EXIT(FALSE); //Approver (manager of employee) should be employee of current company.
                Employee.GET(EmployeeNo);
                Employee.TESTFIELD("Manager No.");
      //rfc086
                //ConsenterName := GetUserIDOfEmployee(Employee."Manager No.");
                IF (ShortcutDimension1Code = Employee."Global Dimension 1 Code") OR (NOT Employee."Allow other department indir") OR (Type<>Type::Indirect) THEN
                  ApproverName := GetUserIDOfEmployee(Employee."Manager No.")
                ELSE BEGIN
                  GLSetup.GET;
                  IF DimVal.GET(GLSetup."Global Dimension 1 Code",ShortcutDimension1Code) THEN
                    ApproverName := GetUserIDOfEmployee(DimVal.CostCenterResponsible);
                  IF ApproverName = '' THEN
                    ApproverName := GetUserIDOfEmployee(Employee."Manager No.");
                END;
      //rfc086
              END;
            Type::Plant:
              HoursConsentSetup.TESTFIELD(Approver);
          END;
        END;
        SerialNumber := HoursConsentSetup."Serial Number";
        EXIT(TRUE);
      END;
    END;

    PROCEDURE GetApplicableHoursConsentSetup@1100528405(VAR HoursConsentSetup@1100528400 : Record 11020436;CurrentSource@1100528412 : Integer;CurrentType@1100528403 : Integer;ProjectNo@1100528404 : Code[20];ServiceContractNo@1100528405 : Code[20];ServiceOrderNo@1100528410 : Code[20];EmployeeNo@1100528411 : Code[20];PlantLocationCode@1100528402 : Code[20];MinimumSerialNo@1100528401 : Integer) : Boolean;
    VAR
      HoursConsentSetupForAllNos@1100528406 : Record 11020436;
      HoursConsentSetupForCurrentNo@1100528407 : Record 11020436;
      ConsentSetupForAllNosFound@1100528408 : Boolean;
      ConsentSetupForCurrentNoFound@1100528409 : Boolean;
    BEGIN
      HoursConsentSetupForAllNos.SETFILTER("Serial Number", '>=%1', MinimumSerialNo);
      HoursConsentSetupForAllNos.SETRANGE("No.", '');
      HoursConsentSetupForAllNos.SETRANGE(Source, CurrentSource);
      HoursConsentSetupForAllNos.SETRANGE(Type, CurrentType);
      IF HoursConsentSetupForAllNos.FINDFIRST THEN
        ConsentSetupForAllNosFound := TRUE;

      HoursConsentSetupForCurrentNo.SETFILTER("Serial Number", '>=%1', MinimumSerialNo);
      HoursConsentSetupForCurrentNo.SETRANGE(Source, CurrentSource);
      HoursConsentSetupForCurrentNo.SETRANGE(Type, CurrentType);
      CASE CurrentType OF
        Type::Project:
          HoursConsentSetupForCurrentNo.SETRANGE("No.", ProjectNo);
        Type::Service:
          HoursConsentSetupForCurrentNo.SETRANGE("No.", ServiceContractNo);
        Type::Indirect:
          HoursConsentSetupForCurrentNo.SETRANGE("No.", EmployeeNo);
        Type::Plant:
          HoursConsentSetupForCurrentNo.SETRANGE("No.", PlantLocationCode);
      END;
      IF HoursConsentSetupForCurrentNo.FINDFIRST THEN
        ConsentSetupForCurrentNoFound := TRUE;

      CASE TRUE OF
        ConsentSetupForAllNosFound AND ConsentSetupForCurrentNoFound:
          BEGIN
            IF HoursConsentSetupForAllNos."Serial Number" < HoursConsentSetupForCurrentNo."Serial Number" THEN
              HoursConsentSetup := HoursConsentSetupForAllNos
            ELSE
              HoursConsentSetup := HoursConsentSetupForCurrentNo;
            EXIT(TRUE);
          END;
       ConsentSetupForAllNosFound AND NOT ConsentSetupForCurrentNoFound:
          BEGIN
            HoursConsentSetup := HoursConsentSetupForAllNos;
            EXIT(TRUE);
          END;
        NOT ConsentSetupForAllNosFound AND ConsentSetupForCurrentNoFound:
          BEGIN
            HoursConsentSetup := HoursConsentSetupForCurrentNo;
            EXIT(TRUE);
          END;
        NOT ConsentSetupForAllNosFound AND NOT ConsentSetupForCurrentNoFound:
          EXIT(FALSE);
      END;
    END;

    PROCEDURE GetUserIDOfEmployee@1100528404(EmployeeNo@1100528400 : Code[20]) : Code[50];
    VAR
      UserSetup@1100528401 : Record 91;
      Employee@1100528402 : Record 5200;
    BEGIN
      UserSetup.SETCURRENTKEY("Employee No.");
      UserSetup.SETRANGE("Employee No.", EmployeeNo);
      IF UserSetup.FINDFIRST THEN
        EXIT(UserSetup."User ID")
      ELSE
        ERROR(Text000, Employee.TABLECAPTION, EmployeeNo, UserSetup.TABLECAPTION);
    END;

    BEGIN
    {
      SESB.I026 2 step approval
         ASH 15.07.2013 Field 10 Type changed - option "All Hours" added

      140320 added caption 'all hours'
      170707 ITERO.DL GetUserIDOfEmployee Local yes->no
    }
    END.
  }
}

