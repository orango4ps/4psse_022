OBJECT Table 99000880 Order Promising Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Lieferterminzusagenzeile;
               ENU=Order Promising Line;
               NLD=Ordertoezeggingsregel;
               NOR=Ordrebekreftelseslinje;
               SVE=Orderlîftesrad];
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.;
                                                              NLD=Volgnummer;
                                                              NOR=Lõpenr.;
                                                              SVE=Lîpnr] }
    { 10  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[DEU=Artikelnr.;
                                                              ENU=Item No.;
                                                              NLD=Artikelnr.;
                                                              NOR=Varenr.;
                                                              SVE=Artikelnr] }
    { 11  ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[DEU=Variantencode;
                                                              ENU=Variant Code;
                                                              NLD=Variant;
                                                              NOR=Variantkode;
                                                              SVE=Variantkod];
                                                   Editable=No }
    { 12  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code;
                                                              NLD=Vestiging;
                                                              NOR=Lokasjonskode;
                                                              SVE=LagerstÑllekod];
                                                   Editable=No }
    { 13  ;   ;Quantity            ;Decimal       ;CaptionML=[DEU=Menge;
                                                              ENU=Quantity;
                                                              NLD=Aantal;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5 }
    { 14  ;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[DEU=Einheitencode;
                                                              ENU=Unit of Measure Code;
                                                              NLD=Eenheidscode;
                                                              NOR=Enhetskode;
                                                              SVE=Enhetskod];
                                                   Editable=No }
    { 15  ;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=[DEU=Menge pro Einheit;
                                                              ENU=Qty. per Unit of Measure;
                                                              NLD=Aantal per eenheid;
                                                              NOR=Antall per enhet;
                                                              SVE=Antal per enhet];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 16  ;   ;Unavailable Quantity;Decimal       ;CaptionML=[DEU=Nicht verfÅgbare Menge;
                                                              ENU=Unavailable Quantity;
                                                              NLD=Onbeschikbaar aantal;
                                                              NOR=Ikke-disponibelt antall;
                                                              SVE=Ej disponibelt antal];
                                                   DecimalPlaces=0:5 }
    { 17  ;   ;Quantity (Base)     ;Decimal       ;CaptionML=[DEU=Menge (Basis);
                                                              ENU=Quantity (Base);
                                                              NLD=Aantal (Basis);
                                                              NOR=Antall (lagerenhet);
                                                              SVE=Antal (bas)];
                                                   DecimalPlaces=0:5 }
    { 18  ;   ;Unavailable Quantity (Base);Decimal;CaptionML=[DEU=Nicht verfÅgbare Menge (Basis);
                                                              ENU=Unavailable Quantity (Base);
                                                              NLD=Onbeschikbaar aantal (Basis);
                                                              NOR=Ikke-disponibelt ant. (l.enh);
                                                              SVE=Ej disponibelt antal (bas)];
                                                   DecimalPlaces=0:5 }
    { 19  ;   ;Required Quantity (Base);Decimal   ;CaptionML=[DEU=Erforderliche Menge (Basis);
                                                              ENU=Required Quantity (Base);
                                                              NLD=Vereist aantal (Basis);
                                                              NOR=Nõdvendig antall (l.enh);
                                                              SVE=Obligatoriskt antal (bas)];
                                                   DecimalPlaces=0:5 }
    { 20  ;   ;Source Type         ;Option        ;CaptionML=[DEU=Herkunftsart;
                                                              ENU=Source Type;
                                                              NLD=Bronsoort;
                                                              NOR=Kildetype;
                                                              SVE=Ursprungstyp];
                                                   OptionCaptionML=[DEU=" ,Verkauf,Bestellvorschlagszeile,Einkauf,Artikel Buch.-Blatt,StÅckliste Buch.-Blatt,Artikelposten,FA-Zeile,FA-Komponente,Planungszeile,Planungskomponente,Umlagerung,Serviceauftrag,Aufgabe";
                                                                    ENU=" ,Sales,Requisition Line,Purchase,Item Journal,BOM Journal,Item Ledger Entry,Prod. Order Line,Prod. Order Component,Planning Line,Planning Component,Transfer,Service Order,Job";
                                                                    NLD=" ,Verkoop,Ink.-voorstelregel,Inkoop,Artikeldagboek,Stuklijstdagboek,Artikelpost,Prod.orderregel,Prod.ordermateriaal,Planningsregel,Planningsmateriaal,Transfer,Serviceorder,Taak";
                                                                    NOR=" ,Salg,Bestillingsforslagslinje,Kjõp,Varekladd,Stykklistekladd,Varepost,Prod.ordrelinje,Prod.ordrekomponent,Planleggingslinje,Planleggingskomponent,Overfõring,Serviceordre,Jobb";
                                                                    SVE=" ,FîrsÑljning,Rekvisitionsrad,Inkîp,Artikeljnl,Strukturjnl,Artikeltrans.,Prod.orderrad,Prod.orderkomponent,Planeringsrad,Planeringskomponent,ôverfîring,Serviceorder,Projekt"];
                                                   OptionString=[ ,Sales,Requisition Line,Purchase,Item Journal,BOM Journal,Item Ledger Entry,Prod. Order Line,Prod. Order Component,Planning Line,Planning Component,Transfer,Service Order,Job] }
    { 21  ;   ;Source Subtype      ;Integer       ;CaptionML=[DEU=Herkunftsunterart;
                                                              ENU=Source Subtype;
                                                              NLD=Bronsubsoort;
                                                              NOR=Kildeundertype;
                                                              SVE=Ursprungssubtyp] }
    { 22  ;   ;Source ID           ;Code20        ;CaptionML=[DEU=Herkunfts-ID;
                                                              ENU=Source ID;
                                                              NLD=Voor id;
                                                              NOR=Kilde-ID;
                                                              SVE=Ursprungs-ID] }
    { 23  ;   ;Source Batch Name   ;Code10        ;CaptionML=[DEU=Herkunftsbuch.-Blattname;
                                                              ENU=Source Batch Name;
                                                              NLD=Voor batch;
                                                              NOR=Navn pÜ kildebunke;
                                                              SVE=Ursprungsjnlnamn] }
    { 25  ;   ;Source Line No.     ;Integer       ;CaptionML=[DEU=Herkunftszeilennr.;
                                                              ENU=Source Line No.;
                                                              NLD=Bronregelnr.;
                                                              NOR=Kildelinjenr.;
                                                              SVE=Ursprungsradnr] }
    { 30  ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description;
                                                              NLD=Omschrijving;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 31  ;   ;Required Quantity   ;Decimal       ;CaptionML=[DEU=Erforderliche Menge;
                                                              ENU=Required Quantity;
                                                              NLD=Vereist aantal;
                                                              NOR=Nõdvendig antall;
                                                              SVE=Obligatoriskt antal];
                                                   DecimalPlaces=0:5 }
    { 40  ;   ;Requested Delivery Date;Date       ;OnValidate=VAR
                                                                SalesLine@1000 : Record 37;
                                                                ServLine@1001 : Record 5902;
                                                                JobPlanningLine@1002 : Record 11020401;
                                                              BEGIN
                                                                CASE "Source Type" OF
                                                                  "Source Type"::Sales:
                                                                    BEGIN
                                                                      SalesLine.GET("Source Subtype","Source ID","Source Line No.");
                                                                      "Requested Shipment Date" := CalcReqShipDate(SalesLine);
                                                                    END;
                                                                  "Source Type"::"Service Order":
                                                                    BEGIN
                                                                      ServLine.GET("Source Subtype","Source ID","Source Line No.");
                                                                      "Requested Shipment Date" := ServLine."Needed by Date";
                                                                    END;
                                                                  "Source Type"::Job:
                                                                    BEGIN
                                                                      JobPlanningLine.SETRANGE("Job No.","Source ID");
                                                                      JobPlanningLine.SETRANGE("Job Contract Entry No.","Source Line No.");
                                                                      JobPlanningLine.FINDFIRST;
                                                                      "Requested Shipment Date" := JobPlanningLine."Planning Date";
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[DEU=GewÅnschtes Lieferdatum;
                                                              ENU=Requested Delivery Date;
                                                              NLD=Verzochte leverdatum;
                                                              NOR=ùnsket leveringsdato;
                                                              SVE=BegÑrt leveransdatum] }
    { 41  ;   ;Planned Delivery Date;Date         ;OnValidate=VAR
                                                                SalesLine@1000 : Record 37;
                                                              BEGIN
                                                                IF "Planned Delivery Date" <> 0D THEN
                                                                  CASE "Source Type" OF
                                                                    "Source Type"::Sales:
                                                                      BEGIN
                                                                        SalesLine.GET("Source Subtype","Source ID","Source Line No.");
                                                                        SalesLine."Planned Delivery Date" := "Planned Delivery Date";
                                                                        SalesLine."Planned Shipment Date" := SalesLine.CalcPlannedDate;
                                                                        SalesLine."Shipment Date" := SalesLine.CalcShipmentDate;
                                                                        "Planned Delivery Date" := SalesLine."Planned Delivery Date";
                                                                        "Earliest Shipment Date" := SalesLine."Shipment Date";
                                                                        IF "Earliest Shipment Date" > "Planned Delivery Date" THEN
                                                                          "Planned Delivery Date" := "Earliest Shipment Date";
                                                                      END;
                                                                    "Source Type"::"Service Order","Source Type"::Job:
                                                                      "Earliest Shipment Date" := "Planned Delivery Date";
                                                                  END;
                                                              END;

                                                   CaptionML=[DEU=Geplantes Lieferdatum;
                                                              ENU=Planned Delivery Date;
                                                              NLD=Geplande leverdatum;
                                                              NOR=Planlagt lev.dato;
                                                              SVE=Planerat leveransdatum] }
    { 42  ;   ;Original Shipment Date;Date        ;CaptionML=[DEU=Urspr. Warenausgangsdatum;
                                                              ENU=Original Shipment Date;
                                                              NLD=Oorspronkelijk verzenddatum;
                                                              NOR=Opprinnelig forsendelsesdato;
                                                              SVE=Ursprungligt utleveransdatum] }
    { 43  ;   ;Earliest Shipment Date;Date        ;OnValidate=VAR
                                                                SalesLine@1000 : Record 37;
                                                              BEGIN
                                                                CASE "Source Type" OF
                                                                  "Source Type"::Sales:
                                                                    IF "Earliest Shipment Date" <> 0D THEN BEGIN
                                                                      SalesLine.GET("Source Subtype","Source ID","Source Line No.");
                                                                      SalesLine.VALIDATE("Shipment Date","Earliest Shipment Date");
                                                                      "Planned Delivery Date" := SalesLine."Planned Delivery Date";
                                                                    END;
                                                                  "Source Type"::"Service Order":
                                                                    IF "Earliest Shipment Date" <> 0D THEN
                                                                      "Planned Delivery Date" := "Earliest Shipment Date";
                                                                  "Source Type"::Job:
                                                                    IF "Earliest Shipment Date" <> 0D THEN
                                                                      "Planned Delivery Date" := "Earliest Shipment Date";
                                                                END;
                                                              END;

                                                   CaptionML=[DEU=FrÅhestmîg. Warenausgangsdatum;
                                                              ENU=Earliest Shipment Date;
                                                              NLD=Eerste verzenddatum;
                                                              NOR=Tidligste forsendelsesdato;
                                                              SVE=Tidigaste utleveransdatum] }
    { 44  ;   ;Requested Shipment Date;Date       ;CaptionML=[DEU=GewÅnschtes Versanddatum;
                                                              ENU=Requested Shipment Date;
                                                              NLD=Verzochte verzenddatum;
                                                              NOR=ùnsket forsendelsesdato;
                                                              SVE=BegÑrt utleveransdatum];
                                                   Editable=No }
    { 45  ;   ;Unavailability Date ;Date          ;CaptionML=[DEU=NichtverfÅgbarkeitsdatum;
                                                              ENU=Unavailability Date;
                                                              NLD=Datum van niet-beschikbaarheid;
                                                              NOR=Utilgjengelighetsdato;
                                                              SVE=Disposition upphîr] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Requested Shipment Date                  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE TransferFromSalesLine@2(VAR SalesLine@1000 : Record 37);
    BEGIN
      "Source Type" := "Source Type"::Sales;
      "Source Subtype" := SalesLine."Document Type";
      "Source ID" := SalesLine."Document No.";
      "Source Line No." := SalesLine."Line No.";

      "Item No." := SalesLine."No.";
      "Variant Code" := SalesLine."Variant Code";
      "Location Code" := SalesLine."Location Code";
      VALIDATE("Requested Delivery Date",SalesLine."Requested Delivery Date");
      "Original Shipment Date" := SalesLine."Shipment Date";
      Description := SalesLine.Description;
      Quantity := SalesLine."Outstanding Quantity";
      "Unit of Measure Code" := SalesLine."Unit of Measure Code";
      "Qty. per Unit of Measure" := SalesLine."Qty. per Unit of Measure";
      "Quantity (Base)" := SalesLine."Outstanding Qty. (Base)";

      OnAfterTransferFromSalesLine(Rec,SalesLine);
    END;

    [External]
    PROCEDURE TransferFromServLine@3(VAR ServLine@1000 : Record 5902);
    BEGIN
      "Source Type" := "Source Type"::"Service Order";
      "Source Subtype" := ServLine."Document Type";
      "Source ID" := ServLine."Document No.";
      "Source Line No." := ServLine."Line No.";

      "Item No." := ServLine."No.";
      "Variant Code" := ServLine."Variant Code";
      "Location Code" := ServLine."Location Code";
      VALIDATE("Requested Delivery Date",ServLine."Requested Delivery Date");
      "Original Shipment Date" := ServLine."Needed by Date";
      Description := ServLine.Description;
      Quantity := ServLine."Outstanding Quantity";
      "Unit of Measure Code" := ServLine."Unit of Measure Code";
      "Qty. per Unit of Measure" := ServLine."Qty. per Unit of Measure";
      "Quantity (Base)" := ServLine."Outstanding Qty. (Base)";

      OnAfterTransferFromServLine(Rec,ServLine);
    END;

    [External]
    PROCEDURE TransferFromJobPlanningLine@4(VAR JobPlanningLine@1000 : Record 11020401);
    BEGIN
      "Source Type" := "Source Type"::Job;
      "Source Subtype" := JobPlanningLine.Status;
      "Source ID" := JobPlanningLine."Job No.";
      "Source Line No." := JobPlanningLine."Job Contract Entry No.";

      "Item No." := JobPlanningLine."No.";
      "Variant Code" := JobPlanningLine."Variant Code";
      "Location Code" := JobPlanningLine."Location Code";
      VALIDATE("Requested Delivery Date",JobPlanningLine."Requested Delivery Date");
      "Original Shipment Date" := JobPlanningLine."Planning Date";
      Description := JobPlanningLine.Description;
      Quantity := JobPlanningLine."Remaining Qty.";
      "Unit of Measure Code" := JobPlanningLine."Unit of Measure Code";
      "Qty. per Unit of Measure" := JobPlanningLine."Qty. per Unit of Measure";
      "Quantity (Base)" := JobPlanningLine."Remaining Qty. (Base)";

      OnAfterTransferFromJobPlanningLine(Rec,JobPlanningLine);
    END;

    LOCAL PROCEDURE CalcReqShipDate@1(SalesLine@1000 : Record 37) : Date;
    BEGIN
      IF (SalesLine."Requested Delivery Date" <> 0D) AND
         (SalesLine."Promised Delivery Date" = 0D)
      THEN BEGIN
        SalesLine.SuspendStatusCheck(TRUE);
        SalesLine.VALIDATE("Requested Delivery Date",SalesLine."Requested Delivery Date");
      END;
      EXIT(SalesLine."Shipment Date");
    END;

    [External]
    PROCEDURE GetLastEntryNo@5() LastEntryNo : Integer;
    VAR
      CopyOfOrderPromisingLine@1000 : Record 99000880;
    BEGIN
      CopyOfOrderPromisingLine.COPY(Rec);
      RESET;
      IF FINDLAST THEN
        LastEntryNo := "Entry No.";
      COPY(CopyOfOrderPromisingLine);
    END;

    [External]
    PROCEDURE CalcAvailability@18() : Decimal;
    VAR
      Item@1004 : Record 27;
      AvailableToPromise@1001 : Codeunit 5790;
      GrossRequirement@1002 : Decimal;
      ScheduledReceipt@1003 : Decimal;
      PeriodType@1006 : 'Day,Week,Month,Quarter,Year';
      LookaheadDateformula@1005 : DateFormula;
      AvailabilityDate@1007 : Date;
    BEGIN
      IF Item.GET("Item No.") THEN BEGIN
        IF "Original Shipment Date" > 0D THEN
          AvailabilityDate := "Original Shipment Date"
        ELSE
          AvailabilityDate := WORKDATE;

        Item.RESET;
        Item.SETRANGE("Date Filter",0D,AvailabilityDate);
        Item.SETRANGE("Variant Filter","Variant Code");
        Item.SETRANGE("Location Filter","Location Code");
        Item.SETRANGE("Drop Shipment Filter",FALSE);
        EXIT(
          AvailableToPromise.QtyAvailabletoPromise(
            Item,
            GrossRequirement,
            ScheduledReceipt,
            AvailabilityDate,
            PeriodType,
            LookaheadDateformula));
      END;
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterTransferFromSalesLine@6(VAR OrderPromisingLine@1000 : Record 99000880;SalesLine@1001 : Record 37);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterTransferFromServLine@7(VAR OrderPromisingLine@1000 : Record 99000880;ServiceLine@1001 : Record 5902);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterTransferFromJobPlanningLine@8(VAR OrderPromisingLine@1000 : Record 99000880;JobPlanningLine@1001 : Record 11020401);
    BEGIN
    END;

    BEGIN
    {
      4PS, Renumbered objects
    }
    END.
  }
}

