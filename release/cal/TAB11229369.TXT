OBJECT Table 11229369 SC Order Variation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=SC Order Variation;
    LookupPageID=Page11130286;
    DrillDownPageID=Page11130286;
  }
  FIELDS
  {
    { 10  ;   ;Purchase Order Number;Code20       ;TableRelation="Purchase Header".No. WHERE (Document Type=CONST(Order));
                                                   CaptionML=ENU=Purchase Order Number;
                                                   NotBlank=Yes }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 30  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   OnValidate=BEGIN
                                                                IF "Project No." <> '' THEN
                                                                  TESTFIELD("Service Order No.", '');

                                                                IF "Project No." <> xRec."Project No." THEN BEGIN
                                                                  Element := '';
                                                                  "Extension Contract" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr] }
    { 40  ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order".No.;
                                                   OnValidate=BEGIN
                                                                IF "Service Order No." <> '' THEN
                                                                  TESTFIELD("Project No.", '');
                                                              END;

                                                   CaptionML=[ENU=Service Order No.;
                                                              NOR=Serviceordrenr.;
                                                              SVE=Serviceordernr] }
    { 50  ;   ;Element             ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 60  ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Cost Type=FILTER(Labor..Sundry),
                                                                                               Global Dimension No.=CONST(2),
                                                                                               Project Filter=FIELD(Project No.),
                                                                                               Blocked=CONST(No));
                                                   OnValidate=VAR
                                                                DimensionValue@1100529600 : Record 349;
                                                              BEGIN
                                                                IF GLSetup."Global Dimension 2 Code" = '' THEN
                                                                  GLSetup.GET;
                                                                IF DimensionValue.GET(GLSetup."Global Dimension 2 Code", "Cost Object") THEN
                                                                  Description := DimensionValue.Name;
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostnadsobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 70  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 80  ;   ;Status              ;Code10        ;TableRelation="SC Variation Status".Code WHERE (Final status=CONST(No));
                                                   CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status] }
    { 90  ;   ;Extension Contract  ;Code10        ;TableRelation="Extension Contract"."Contract No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=Extension Contract;
                                                              NOR=ETA;
                                                              SVE=ŽTA] }
    { 100 ;   ;Claimed amount      ;Decimal       ;CaptionML=ENU=Claimed amount }
    { 110 ;   ;Expected amount     ;Decimal       ;CaptionML=[ENU=Expected amount;
                                                              SVE=F”rv„ntat belopp] }
    { 120 ;   ;Assessed amount     ;Decimal       ;CaptionML=ENU=Assessed amount }
    { 130 ;   ;Agreed amount       ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Line Amount", "Agreed amount");
                                                              END;

                                                   CaptionML=[ENU=Agreed amount;
                                                              SVE=Avtalat belopp] }
    { 140 ;   ;Date claimed        ;Date          ;CaptionML=ENU=Date claimed }
    { 150 ;   ;Date assessment     ;Date          ;CaptionML=ENU=Date assessment }
    { 160 ;   ;Date agreed         ;Date          ;CaptionML=ENU=Date agreed }
    { 170 ;   ;Date instructed     ;Date          ;CaptionML=ENU=Date instructed }
    { 180 ;   ;Definitive          ;Boolean       ;CaptionML=ENU=Definitive;
                                                   Editable=No }
    { 190 ;   ;Unit of Measure Code;Code10        ;TableRelation="Unit of Measure";
                                                   OnValidate=VAR
                                                                UnitofMeasure@1100528200 : Record 204;
                                                                UnitOfMeasureTranslation@1000 : Record 5402;
                                                              BEGIN
                                                                IF "Unit of Measure Code" = '' THEN
                                                                  "Unit of Measure" := ''
                                                                ELSE BEGIN
                                                                  UnitofMeasure.GET("Unit of Measure Code");
                                                                  "Unit of Measure" := UnitofMeasure.Description;
                                                                  GetPurchHeader;
                                                                  IF PurchaseHeader."Language Code" <> '' THEN BEGIN
                                                                    UnitOfMeasureTranslation.SETRANGE(Code,"Unit of Measure Code");
                                                                    UnitOfMeasureTranslation.SETRANGE("Language Code",PurchaseHeader."Language Code");
                                                                    IF UnitOfMeasureTranslation.FINDFIRST THEN
                                                                      "Unit of Measure" := UnitOfMeasureTranslation.Description;
                                                                  END;
                                                                END;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              SVE=Enhetskod] }
    { 200 ;   ;Unit of Measure     ;Text50        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Unit of Measure;
                                                              SVE=M†ttenhet] }
    { 210 ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                GetPurchHeader;
                                                                IF Quantity <> 0 THEN BEGIN
                                                                  IF PurchaseHeader."Amounts only" THEN
                                                                    TESTFIELD(Quantity,0);
                                                                END;

                                                                IF Quantity <> 0 THEN BEGIN
                                                                  "Line Amount" := Quantity * "Direct Unit Cost";
                                                                END ELSE BEGIN
                                                                  "Line Amount" := "Direct Unit Cost";
                                                                END;

                                                                "Line Amount" := ROUND("Line Amount",Currency."Amount Rounding Precision");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Quantity;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5 }
    { 220 ;   ;Direct Unit Cost    ;Decimal       ;OnValidate=BEGIN
                                                                GetPurchHeader;
                                                                IF Quantity <> 0 THEN BEGIN
                                                                  "Line Amount" := Quantity * "Direct Unit Cost";
                                                                END ELSE BEGIN
                                                                  "Line Amount" := "Direct Unit Cost";
                                                                END;
                                                                "Line Amount" := ROUND("Line Amount",Currency."Amount Rounding Precision");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Direct Unit Cost;
                                                              SVE=Ink”pspris];
                                                   AutoFormatType=2 }
    { 230 ;   ;Line Amount         ;Decimal       ;OnValidate=VAR
                                                                lvText11012001@1210190004 : TextConst 'ENU=may not be less than invoiced amount (%1);SVE=f†r inte vara mindre „n fakturerat belopp (%1)';
                                                              BEGIN
                                                                GetPurchHeader;
                                                                IF Quantity <> 0 THEN BEGIN
                                                                  "Direct Unit Cost":= "Line Amount" / Quantity;
                                                                END ELSE BEGIN
                                                                  "Direct Unit Cost" := "Line Amount";
                                                                END;
                                                                "Direct Unit Cost" := ROUND("Direct Unit Cost",Currency."Amount Rounding Precision");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Line Amount;
                                                              SVE=Radbelopp];
                                                   AutoFormatType=1 }
  }
  KEYS
  {
    {    ;Purchase Order Number,Line No.          ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GLSetup@1100529600 : Record 98;
      Text000@1100527301 : TextConst 'ENU=Posting on element is mandatory on this project.';
      Text003@1100525000 : TextConst 'ENU=The approval process must be cancelled or completed to reopen this document.;NOR=Godkjenningsprosessen m† avbrytes eller fullf›res f›r du kan †pne dette dokumentet p† nytt.;SVE=Godk„nnandeprocessen m†ste avbrytas eller slutf”ras f”r att det h„r dokumentet ska kunna ”ppnas igen.';
      PurchaseHeader@1100528200 : Record 38;
      Currency@1100528201 : Record 4;

    PROCEDURE InitRecord@1100529600();
    VAR
      PurchaseOrder@1100529600 : Record 38;
    BEGIN
      IF PurchaseOrder.GET(PurchaseOrder."Document Type"::Order, "Purchase Order Number") THEN BEGIN
        "Project No." := PurchaseOrder."Job No.";
        "Service Order No." := PurchaseOrder."Service Order No.";
      END;
    END;

    PROCEDURE MakeDefinitive@1100529601(VAR SCOrderVariation@1100529600 : Record 11229369);
    VAR
      PurchaseOrder@1100529601 : Record 38;
      PurchaseOrderLine@1100529602 : Record 39;
      SCVariationStatus@1100529609 : Record 11229368;
      SCOrderVariation2@1100529606 : Record 11229369;
      DocumentPhase@1100529607 : Record 11020418;
      PurchPlanMgt@1100529608 : Codeunit 11012242;
      ReleasePurchaseDocument@1100529604 : Codeunit 415;
      POStatusOld@1100529603 : Integer;
      LastLineNo@1100529605 : Integer;
      ApprovalsMgmt@1100525000 : Codeunit 1535;
      Job@1100527300 : Record 11072003;
    BEGIN
      WITH SCOrderVariation DO BEGIN
        SETRANGE(Definitive, FALSE);
        IF ISEMPTY THEN
          EXIT;

        FINDFIRST;
        IF NOT PurchaseOrder.GET(PurchaseOrder."Document Type"::Order, "Purchase Order Number") THEN
          EXIT;

        IF ("Project No." <> '') OR ("Service Order No." <> '') THEN BEGIN
          TESTFIELD("Cost Object");
          IF Job.GET("Project No.") THEN
            IF Job."Posting Element Mandatory" AND (Element = '') THEN
              ERROR(Text000);
        END;

        SCVariationStatus.SETRANGE("Final status", TRUE);
        IF NOT SCVariationStatus.FINDFIRST THEN
          CLEAR(SCVariationStatus);

        PurchaseOrderLine.SETRANGE("Document Type", PurchaseOrderLine."Document Type"::Order);
        PurchaseOrderLine.SETRANGE("Document No.", "Purchase Order Number");
        IF PurchaseOrderLine.FINDLAST THEN
          LastLineNo := PurchaseOrderLine."Line No."
        ELSE
          LastLineNo := 0;

        POStatusOld := PurchaseOrder.Status;

        DocumentPhase.SETRANGE("Document Type", DocumentPhase."Document Type"::Order);
        DocumentPhase.SETRANGE("Document No.", "Purchase Order Number");
        DocumentPhase.SETRANGE("Purchase Plan", PurchaseOrder."Purchase Plan");
        DocumentPhase.SETFILTER(Status, '%1..', DocumentPhase.Status::Finished);
        WHILE NOT DocumentPhase.ISEMPTY DO BEGIN
          PurchPlanMgt.OnePhaseBack(PurchaseOrder);
          PurchaseOrder.GET(PurchaseOrder."Document Type"::Order, "Purchase Order Number");
        END;

        IF (PurchaseOrder.Status = PurchaseOrder.Status::"Pending Approval") AND ApprovalsMgmt.HasOpenOrPendingApprovalEntries(PurchaseOrder.RECORDID) THEN BEGIN
          IF ApprovalsMgmt.CanCancelApprovalForRecord(PurchaseOrder.RECORDID) THEN
            ApprovalsMgmt.OnCancelPurchaseApprovalRequest(PurchaseOrder)
          ELSE
            ERROR(Text003);
        END;

        IF PurchaseOrder.Status <> PurchaseOrder.Status::Open THEN
          ReleasePurchaseDocument.Reopen(PurchaseOrder);

        REPEAT
          LastLineNo += 10000;

          PurchaseOrderLine.INIT;
          PurchaseOrderLine."Document Type" := PurchaseOrderLine."Document Type"::Order;
          PurchaseOrderLine."Document No." := "Purchase Order Number";
          PurchaseOrderLine."Line No." := LastLineNo;
          PurchaseOrderLine.INSERT(TRUE);

          PurchaseOrderLine.VALIDATE("Service Order No.", "Service Order No.");
          PurchaseOrderLine.VALIDATE("Job No.", "Project No.");
          IF Element <> '' THEN
            PurchaseOrderLine.VALIDATE(Element, Element);
          IF "Extension Contract" <> '' THEN
            PurchaseOrderLine.VALIDATE("Extension Contract", "Extension Contract");
          PurchaseOrderLine.VALIDATE("Shortcut Dimension 2 Code", "Cost Object");
          PurchaseOrderLine.VALIDATE("Unit of Measure Code", "Unit of Measure Code");
          PurchaseOrderLine.VALIDATE("Unit of Measure", "Unit of Measure");
          PurchaseOrderLine.Description := Description;
          IF NOT PurchaseOrder."Amounts only" THEN
            PurchaseOrderLine.VALIDATE(Quantity, SCOrderVariation.Quantity);
          PurchaseOrderLine.VALIDATE("Direct Unit Cost", SCOrderVariation."Direct Unit Cost");
          PurchaseOrderLine.MODIFY(TRUE);

          SCOrderVariation2 := SCOrderVariation;
          SCOrderVariation2.Definitive := TRUE;
          SCOrderVariation2.Status := SCVariationStatus.Code;
          SCOrderVariation2.MODIFY;
        UNTIL NEXT = 0;

        IF POStatusOld <> 0 THEN
          IF ApprovalsMgmt.IsPurchaseApprovalsWorkflowEnabled(PurchaseOrder) THEN
            ApprovalsMgmt.OnSendPurchaseDocForApproval(PurchaseOrder)
          ELSE
            ReleasePurchaseDocument.PerformManualRelease(PurchaseOrder);

      END;
    END;

    LOCAL PROCEDURE GetPurchHeader@1();
    BEGIN
      TESTFIELD("Purchase Order Number");
      IF ("Purchase Order Number" <> PurchaseHeader."No.") THEN BEGIN

        PurchaseHeader.GET(PurchaseHeader."Document Type"::Order,"Purchase Order Number");
        IF PurchaseHeader."Currency Code" = '' THEN
          Currency.InitRoundingPrecision
        ELSE BEGIN
          PurchaseHeader.TESTFIELD("Currency Factor");
          Currency.GET(PurchaseHeader."Currency Code");
          Currency.TESTFIELD("Amount Rounding Precision");
        END;
      END;
    END;

    BEGIN
    END.
  }
}

