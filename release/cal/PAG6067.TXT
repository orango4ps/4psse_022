OBJECT Page 6067 Contract Gain/Loss (Customers)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Contract Gain/Loss (Customers);
               NOR=Kontraktresultat (kunder);
               SVE=Kontrakt vinst/fîrlust (kunder)];
    ApplicationArea=#Service;
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table2000000007;
    DataCaptionExpr='';
    PageType=Card;
    UsageCategory=Tasks;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 IF PeriodStart = 0D THEN
                   PeriodStart := WORKDATE;

                 MATRIX_GenerateColumnCaptions(SetWanted::Initial);
               END;

    OnFindRecord=BEGIN
                   EXIT(TRUE);
                 END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 77      ;1   ;Action    ;
                      Name=ShowMatrix;
                      CaptionML=[ENU=&Show Matrix;
                                 NOR=Vi&s matrise;
                                 SVE=Vi&sa matris];
                      ToolTipML=[ENU=View the data overview according to the selected filters and options.;
                                 NOR=Vis den dataoversikten i henhold til de valgte filtrene og alternativene.;
                                 SVE=Visa dataîversikten med hÑnsyn taget till de valda filtren och alternativen.];
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShowMatrix;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MatrixForm@1098 : Page 9261;
                               BEGIN
                                 IF CustomerNo = '' THEN
                                   ERROR(Text003);
                                 IF PeriodStart = 0D THEN
                                   PeriodStart := WORKDATE;
                                 CLEAR(MatrixForm);

                                 MatrixForm.Load(MATRIX_CaptionSet,MatrixRecords,MATRIX_CurrentNoOfColumns,AmountType,PeriodType,
                                   CustomerNo,PeriodStart,ShipToCodeFilter);
                                 MatrixForm.RUNMODAL;
                               END;
                                }
      { 1110    ;1   ;Action    ;
                      CaptionML=[ENU=Previous Set;
                                 NOR=Forrige sett;
                                 SVE=FîregÜende uppsÑttning];
                      ToolTipML=[ENU=Go to the previous set of data.;
                                 NOR=GÜ til forrige datasett.;
                                 SVE=GÜ till fîregÜende datauppsÑttning.];
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(SetWanted::Previous);
                               END;
                                }
      { 1112    ;1   ;Action    ;
                      CaptionML=[ENU=Next Set;
                                 NOR=Neste sett;
                                 SVE=NÑsta uppsÑttning];
                      ToolTipML=[ENU=Go to the next set of data.;
                                 NOR=GÜ til neste datasett.;
                                 SVE=GÜ till nÑsta datauppsÑttning.];
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(SetWanted::Next);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 22  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=AllmÑnt] }

    { 15  ;2   ;Field     ;
                CaptionML=[ENU=Period Start;
                           NOR=Periodens start;
                           SVE=Periodstart];
                ToolTipML=[ENU=Specifies the starting date of the period that you want to view.;
                           NOR=Angir startdatoen for perioden du vil vise.;
                           SVE=Anger startdatumet fîr tidsperioden som du vill visa.];
                ApplicationArea=#Service;
                SourceExpr=PeriodStart;
                OnValidate=BEGIN
                             MATRIX_GenerateColumnCaptions(SetWanted::Initial);
                           END;
                            }

    { 1907524401;1;Group  ;
                CaptionML=[ENU=Filters;
                           NOR=Filtre;
                           SVE=Filter] }

    { 1   ;2   ;Field     ;
                CaptionML=[ENU=Customer No. Filter;
                           NOR=Kundenr.filter;
                           SVE=Kundnr];
                ToolTipML=[ENU=Specifies which customers are included in the window by setting filters.;
                           NOR=Angir hvilke kunder som er inkludert i vinduet ved Ü angi filtre.;
                           SVE=Anger vilka kunder som ska ingÜ i fînstret genom att filter anges.];
                ApplicationArea=#Service;
                SourceExpr=CustomerNo;
                OnValidate=BEGIN
                             IF NOT Cust.GET(CustomerNo) THEN
                               CLEAR(Cust);
                             ShipToCodeFilter := '';
                             MATRIX_GenerateColumnCaptions(SetWanted::Initial);
                             CustomerNoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF PAGE.RUNMODAL(0,Cust) = ACTION::LookupOK THEN BEGIN
                             Text := Cust."No.";
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Ship-to Code Filter;
                           NOR=Lever til-kodefilter;
                           SVE=Leveransadr.kodfilter];
                ToolTipML=[ENU=Specifies which customers are included in the view by setting filters in Ship-to fields. If you do not set any filters, the window will include information about all customers.;
                           NOR=Angir hvilke kunder som skal tas med i visningen, ved Ü definere filtre i feltet Lever til. Hvis du ikke definerer filtre, inngÜr opplysninger om alle kundene i vinduet.;
                           SVE=Anger vilka kunder som ska ingÜ i vyn genom att filter stÑlls in i leveransfÑlten. Om du inte anger nÜgra filter tas information om samtliga kunder med i fînstret.];
                ApplicationArea=#Service;
                SourceExpr=ShipToCodeFilter;
                OnValidate=BEGIN
                             MATRIX_GenerateColumnCaptions(SetWanted::Initial);
                             ShipToCodeFilterOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           ShiptoAddr.RESET;
                           ShiptoAddr.SETRANGE("Customer No.",CustomerNo);
                           IF PAGE.RUNMODAL(0,ShiptoAddr) = ACTION::LookupOK THEN BEGIN
                             Text := ShiptoAddr.Code;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 1906098301;1;Group  ;
                CaptionML=[ENU=Matrix Options;
                           NOR=Matrisealternativer;
                           SVE=Matrisalternativ] }

    { 1107;2   ;Field     ;
                CaptionML=[ENU=View by;
                           NOR=Vis etter;
                           SVE=Visa per];
                ToolTipML=[ENU=Specifies by which period amounts are displayed.;
                           NOR=Angir hvilken periode belõp vises basert pÜ.;
                           SVE=Anger efter vilken period belopp visas.];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year;
                                 NOR=Dag,Uke,MÜned,Kvartal,èr;
                                 SVE=Dag,Vecka,MÜnad,Kvartal,èr];
                ApplicationArea=#Service;
                SourceExpr=PeriodType }

    { 1108;2   ;Field     ;
                CaptionML=[ENU=View as;
                           NOR=Vis som;
                           SVE=Visa som];
                ToolTipML=[ENU=Specifies how amounts are displayed. Net Change: The net change in the balance for the selected period. Balance at Date: The balance as of the last day in the selected period.;
                           NOR=Angir hvordan belõp skal vises. Bevegelse: Bevegelsen i balansen for den valgte perioden. Saldo per dato: Saldoen per siste dag i den valgte perioden.;
                           SVE=Anger hur belopp visas. NettofîrÑndring: NettofîrÑndringen i saldot fîr den valda perioden. Saldo t.o.m. datum: Saldot per den sista dagen i den valda perioden.];
                OptionCaptionML=[ENU=Net Change,Balance at Date;
                                 NOR=Bevegelse,Saldo per dato;
                                 SVE=NettofîrÑndring,Saldo t.o.m. datum];
                ApplicationArea=#Service;
                SourceExpr=AmountType }

    { 1109;2   ;Field     ;
                CaptionML=[ENU=Column Set;
                           NOR=Kolonnesett;
                           SVE=KolumnuppsÑttning];
                ToolTipML=[ENU=Specifies the range of values that are displayed in the matrix window, for example, the total period. To change the contents of the field, choose Next Set or Previous Set.;
                           NOR=Angir verdiomrÜdene som vises i matrisevinduet, for eksempel hele perioden. Hvis du vil endre innholdet i feltet, velger du Neste sett eller Forrige sett.;
                           SVE=Anger vÑrdeintervallen som visas i tabellfînstret, till exempel hela perioden. Om du vill Ñndra innehÜllet i fÑltet vÑljer du NÑsta uppsÑttning eller FîregÜende uppsÑttning.];
                ApplicationArea=#Service;
                SourceExpr=MATRIX_CaptionRange;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      ShiptoAddr@1024 : Record 222;
      Cust@1023 : Record 18;
      MatrixRecords@1099 : ARRAY [32] OF Record 222;
      MatrixRecord@1019 : Record 222;
      MATRIX_CaptionSet@1100 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1101 : Text;
      PKFirstRecInCurrSet@1105 : Text;
      MATRIX_CurrentNoOfColumns@1106 : Integer;
      AmountType@1004 : 'Net Change,Balance at Date';
      PeriodType@1005 : 'Day,Week,Month,Quarter,Year';
      PeriodStart@1008 : Date;
      CustomerNo@1002 : Code[20];
      ShipToCodeFilter@1022 : Text[250];
      Text003@1025 : TextConst 'ENU=You must choose a customer in Filters, Customer No. Filter.;NOR=Du mÜ velge en kunde i Filtre, Kundenr.filter.;SVE=Du mÜste vÑlja en kund i Filter, Kundnr.';
      SetWanted@1006 : 'Initial,Previous,Same,Next';

    LOCAL PROCEDURE MATRIX_GenerateColumnCaptions@1107(SetWanted@1001 : 'First,Previous,Same,Next');
    VAR
      MatrixMgt@1003 : Codeunit 9200;
      RecRef@1002 : RecordRef;
      CurrentMatrixRecordOrdinal@1000 : Integer;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MatrixRecords);
      CurrentMatrixRecordOrdinal := 1;
      MatrixRecord.SETRANGE("Customer No.",CustomerNo);
      IF ShipToCodeFilter <> '' THEN
        MatrixRecord.SETFILTER(Code,ShipToCodeFilter);
      RecRef.GETTABLE(MatrixRecord);
      RecRef.SETTABLE(MatrixRecord);

      MatrixMgt.GenerateMatrixData(RecRef,SetWanted,ARRAYLEN(MatrixRecords),2,PKFirstRecInCurrSet,
        MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
      IF MATRIX_CurrentNoOfColumns > 0 THEN BEGIN
        MatrixRecord.SETPOSITION(PKFirstRecInCurrSet);
        MatrixRecord.FIND;
        REPEAT
          MatrixRecords[CurrentMatrixRecordOrdinal].COPY(MatrixRecord);
          CurrentMatrixRecordOrdinal := CurrentMatrixRecordOrdinal + 1;
        UNTIL (CurrentMatrixRecordOrdinal > MATRIX_CurrentNoOfColumns) OR (MatrixRecord.NEXT <> 1);
      END;
    END;

    LOCAL PROCEDURE CustomerNoOnAfterValidate@19016267();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE ShipToCodeFilterOnAfterValidat@19068628();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    BEGIN
    END.
  }
}

