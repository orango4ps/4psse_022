OBJECT Codeunit 1331 Trial Balance Cache Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      RefreshFrequencyErr@1000 : TextConst 'ENU=Refresh intervals of less than 10 minutes are not supported.;NOR=Oppdateringsintervaller p† mindre enn 10 minutter st›ttes ikke.';

    PROCEDURE IsCacheStale@2() : Boolean;
    VAR
      TrialBalanceCacheInfo@1000 : Record 1317;
    BEGIN
      IF NOT TrialBalanceCacheInfo.GET THEN
        EXIT(TRUE);

      EXIT(CURRENTDATETIME - TrialBalanceCacheInfo."Last Modified Date/Time" >= GetCacheRefreshInterval);
    END;

    PROCEDURE LoadFromCache@3(VAR DescriptionsArr@1002 : ARRAY [9] OF Text[100];VAR ValuesArr@1001 : ARRAY [9,2] OF Decimal;VAR PeriodCaptionTxt@1000 : ARRAY [2] OF Text) : Boolean;
    VAR
      TrialBalanceCache@1003 : Record 1318;
      TrialBalanceCacheInfo@1006 : Record 1317;
      Index@1004 : Integer;
      CaptionsSaved@1005 : Boolean;
    BEGIN
      CLEAR(DescriptionsArr);
      CLEAR(ValuesArr);
      CLEAR(PeriodCaptionTxt);

      // If the number of trial balance cached is <> array length means that
      // something went wrong. Reset if thats the case
      IF TrialBalanceCache.COUNT <> ARRAYLEN(DescriptionsArr) THEN BEGIN
        TrialBalanceCache.DELETEALL;
        TrialBalanceCacheInfo.DELETEALL;
        EXIT(FALSE);
      END;

      Index := 1;
      IF TrialBalanceCache.FINDSET THEN
        REPEAT
          DescriptionsArr[Index] := TrialBalanceCache.Description;
          ValuesArr[Index,1] := TrialBalanceCache."Period 1 Amount";
          ValuesArr[Index,2] := TrialBalanceCache."Period 2 Amount";
          IF NOT CaptionsSaved THEN BEGIN
            PeriodCaptionTxt[1] := TrialBalanceCache."Period 1 Caption";
            PeriodCaptionTxt[2] := TrialBalanceCache."Period 2 Caption";
            CaptionsSaved := TRUE;
          END;
          Index := Index + 1;
        UNTIL TrialBalanceCache.NEXT = 0;
      EXIT(TRUE);
    END;

    PROCEDURE SaveToCache@4(DescriptionsArr@1002 : ARRAY [9] OF Text[100];ValuesArr@1001 : ARRAY [9,2] OF Decimal;PeriodCaptionTxt@1000 : ARRAY [2] OF Text);
    VAR
      TrialBalanceCacheInfo@1003 : Record 1317;
      TrialBalanceCache@1005 : Record 1318;
      Index@1004 : Integer;
      CaptionsSaved@1006 : Boolean;
      CacheFound@1007 : Boolean;
    BEGIN
      TrialBalanceCache.LOCKTABLE;

      CacheFound := TrialBalanceCache.FINDSET;

      IF NOT IsCacheStale THEN
        EXIT;

      Index := 1;
      IF CacheFound THEN
        REPEAT
          TrialBalanceCache.Description := DescriptionsArr[Index];
          TrialBalanceCache."Period 1 Amount" := ValuesArr[Index,1];
          TrialBalanceCache."Period 2 Amount" := ValuesArr[Index,2];
          IF NOT CaptionsSaved THEN BEGIN
            TrialBalanceCache."Period 1 Caption" := COPYSTR(PeriodCaptionTxt[1],1,MAXSTRLEN(TrialBalanceCache."Period 1 Caption"));
            TrialBalanceCache."Period 2 Caption" := COPYSTR(PeriodCaptionTxt[2],1,MAXSTRLEN(TrialBalanceCache."Period 2 Caption"));
            CaptionsSaved := TRUE;
          END;
          TrialBalanceCache.MODIFY;
          Index := Index + 1;
        UNTIL TrialBalanceCache.NEXT = 0
      ELSE
        FOR Index := 1 TO ARRAYLEN(DescriptionsArr) DO BEGIN
          TrialBalanceCache.INIT;
          TrialBalanceCache."Entry No." := Index;
          TrialBalanceCache.Description := DescriptionsArr[Index];
          TrialBalanceCache."Period 1 Amount" := ValuesArr[Index,1];
          TrialBalanceCache."Period 2 Amount" := ValuesArr[Index,2];
          IF NOT CaptionsSaved THEN BEGIN
            TrialBalanceCache."Period 1 Caption" := COPYSTR(PeriodCaptionTxt[1],1,MAXSTRLEN(TrialBalanceCache."Period 1 Caption"));
            TrialBalanceCache."Period 2 Caption" := COPYSTR(PeriodCaptionTxt[2],1,MAXSTRLEN(TrialBalanceCache."Period 2 Caption"));
            CaptionsSaved := TRUE;
          END;
          TrialBalanceCache.INSERT;
        END;

      IF TrialBalanceCacheInfo.GET THEN BEGIN
        TrialBalanceCacheInfo."Last Modified Date/Time" := CURRENTDATETIME;
        TrialBalanceCacheInfo.MODIFY;
      END ELSE BEGIN
        TrialBalanceCacheInfo.INIT;
        TrialBalanceCacheInfo."Last Modified Date/Time" := CURRENTDATETIME;
        TrialBalanceCacheInfo.INSERT;
      END
    END;

    LOCAL PROCEDURE GetCacheRefreshInterval@5() Interval : Duration;
    VAR
      MinInterval@1000 : Duration;
    BEGIN
      MinInterval := 10 * 60 * 1000; // 10 minutes
      Interval := 60 * 60 * 1000; // 1 hr
      OnGetCacheRefreshInterval(Interval);
      IF Interval < MinInterval THEN
        ERROR(RefreshFrequencyErr);
    END;

    [Integration]
    LOCAL PROCEDURE OnGetCacheRefreshInterval@16(VAR Interval@1000 : Duration);
    BEGIN
    END;

    BEGIN
    END.
  }
}

