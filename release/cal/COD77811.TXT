OBJECT Codeunit 77811 Export AL Translation Files
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=TTool;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Window@1100525000 : Dialog;
      NoFolderSpecifiedErr@1100525002 : TextConst 'ENU=No folder specified for exporting translations.';
      NotProjectLanguageErr@1100525004 : TextConst 'ENU=Language with code %1 isn''t a target language of project %2';
      LanguageEmptyErr@1100525005 : TextConst 'ENU=Language to export can''t be empty';
      WindowPlaceholderLbl@1100525001 : TextConst 'ENU=#1###############\@2@@@@@@@@@@@@';
      XMLDOMManagement4PS@1100525003 : Codeunit 11020220;
      ExportingFileMsg@1100525006 : TextConst 'ENU=Exporting file %1';

    PROCEDURE ExportTranslations@1100525002(TTProject@1100525001 : Record 77810;FolderName@1100525000 : Text;IncludeSourceFile@1100525002 : Boolean);
    VAR
      XmlDoc@1100525003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
    BEGIN
      WindowOpen;
      IF FolderName = '' THEN
        ERROR(NoFolderSpecifiedErr);

      IF IncludeSourceFile THEN
        ExportSourceFile(TTProject,FolderName);

      ExportTranslationFile(TTProject,TTProject."Target Language ID",FolderName);

      IF TTProject."Third Language ID" <> '' THEN
        ExportTranslationFile(TTProject,TTProject."Third Language ID",FolderName);
      WindowClose;
    END;

    PROCEDURE ExportTranslationFile@1100525008(TTProject@1100525001 : Record 77810;TTLanguageCode@1100525002 : Code[20];FolderName@1100525000 : Text);
    VAR
      TargetTTLanguage@1100525004 : Record 77781;
      SourceTTLanguage@1100525005 : Record 77781;
      XmlDoc@1100525003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
    BEGIN


      WindowUpdateCaption(STRSUBSTNO(ExportingFileMsg,CreateFileName(FolderName,TTProject."Original File",LOWERCASE(TargetTTLanguage."ISO Code Short"))));

      IF TTLanguageCode = '' THEN
        ERROR(LanguageEmptyErr);

      IF NOT (TTLanguageCode IN [TTProject."Target Language ID", TTProject."Third Language ID"]) THEN
        ERROR(NotProjectLanguageErr,TTLanguageCode,TTProject.Code);

      XmlDoc := XmlDoc.XmlDocument;

      SourceTTLanguage.GET(TTProject."Source Language ID");
      TargetTTLanguage.GET(TTLanguageCode);

      CreateXLFFileTemplate(XmlDoc,SourceTTLanguage."ISO Code Long",TargetTTLanguage."ISO Code Long",TTProject."Original File");
      CreateSourceTransUnits(XmlDoc,TTProject);

      AppendTargetCaptionsToTransUnits(XmlDoc,TTProject,TargetTTLanguage);

      XMLDOMManagement4PS.SaveXMLToClientFile(XmlDoc,CreateFileName(FolderName,TTProject."Original File",LOWERCASE(TargetTTLanguage."ISO Code Short")));
    END;

    PROCEDURE ExportSourceFile@1100525005(TTProject@1100525000 : Record 77810;FolderName@1100525001 : Text);
    VAR
      TTLanguage@1100525005 : Record 77781;
      XmlDoc@1100525002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
    BEGIN

      WindowUpdateCaption(STRSUBSTNO(ExportingFileMsg,CreateFileName(FolderName,TTProject."Original File",'g')));

      XmlDoc := XmlDoc.XmlDocument;
      TTLanguage.GET(TTProject."Source Language ID");
      CreateXLFFileTemplate(XmlDoc,TTLanguage."ISO Code Long",TTLanguage."ISO Code Long",TTProject."Original File");
      CreateSourceTransUnits(XmlDoc,TTProject);

      XMLDOMManagement4PS.SaveXMLToClientFile(XmlDoc,CreateFileName(FolderName,TTProject."Original File",'g'));
    END;

    LOCAL PROCEDURE CreateXLFFileTemplate@1100525006(VAR XmlDoc@1100525003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";SourceLanguageISO@1100525000 : Text;TargetLanguageISO@1100525001 : Text;Origin@1100525002 : Text);
    VAR
      XmlDeclaration@1100525004 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDeclaration";
      RootXmlElement@1100525005 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      FileXmlElement@1100525006 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      BodyXmlElement@1100525007 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
    BEGIN
      RootXmlElement := XmlDoc.CreateElement('xliff');
      RootXmlElement.SetAttribute('version','1.2');
      RootXmlElement.SetAttribute('xmlns','urn:oasis:names:tc:xliff:document:1.2');
      RootXmlElement.SetAttribute('xmlns:xsi','http://www.w3.org/2001/XMLSchema-instance');
      RootXmlElement.SetAttribute('xsi:schemaLocation','urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd');

      FileXmlElement := XmlDoc.CreateElement('file');
      FileXmlElement.SetAttribute('datatype','xml');
      FileXmlElement.SetAttribute('source-language',SourceLanguageISO);
      FileXmlElement.SetAttribute('target-language',TargetLanguageISO);
      FileXmlElement.SetAttribute('original',Origin);

      BodyXmlElement := XmlDoc.CreateElement('body');

      FileXmlElement.AppendChild(BodyXmlElement);
      RootXmlElement.AppendChild(FileXmlElement);
      XmlDoc.AppendChild(RootXmlElement);
      XMLDOMManagement4PS.AddDeclaration(XmlDoc,'1.0','utf-8','');
    END;

    LOCAL PROCEDURE CreateSourceTransUnits@1100525010(VAR XmlDoc@1100525001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";TTProject@1100525002 : Record 77810);
    VAR
      TTCaption@1100525000 : Record 77812;
      BodyXmlNode@1100525003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      XMLDOMManagement4PS.FindNode(XmlDoc.DocumentElement,'/xliff/file/body',BodyXmlNode);

      TTCaption.SETCURRENTKEY("Group Name");
      TTCaption.SETRANGE("Project Code",TTProject.Code);
      TTCaption.SETRANGE("Language ID",TTProject."Source Language ID");

      IF TTCaption.FINDSET THEN
        REPEAT
          TTCaption.SETRANGE("Group Name",TTCaption."Group Name");
          ProcessCaptionGroup(XmlDoc,TTCaption,TTCaption."Group Name");
          TTCaption.SETRANGE("Group Name");
        UNTIL TTCaption.NEXT = 0;
    END;

    LOCAL PROCEDURE AppendTargetCaptionsToTransUnits@1100525014(VAR XmlDoc@1100525001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";TTProject@1100525000 : Record 77810;TTLanguage@1100525002 : Record 77781);
    VAR
      TransUnitXmlElement@1100525004 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      TargetXmlElement@1100525005 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      TTCaption@1100525003 : Record 77812;
      TTObject@1100525007 : Record 77811;
      SearchXPath@1100525008 : Text;
    BEGIN
      TTCaption.SETRANGE("Project Code",TTProject.Code);
      TTCaption.SETRANGE("Language ID",TTLanguage.ID);
      TTCaption.SETFILTER(Caption1,'<>%1','');

      IF TTCaption.FINDSET THEN
        REPEAT
          SearchXPath := STRSUBSTNO('/xliff/file/body/group[@id=''%1'']/trans-unit[@id=''%2'']',TTCaption."Group Name",TTObject.GetTransUnitObjectIdByNo(TTCaption."Object No."));
          IF XMLDOMManagement4PS.FindNode(XmlDoc.DocumentElement,SearchXPath,TransUnitXmlElement) THEN BEGIN
            TargetXmlElement := XmlDoc.CreateElement('target');
            TargetXmlElement.InnerText := TTCaption.GetCaption;
            TransUnitXmlElement.AppendChild(TargetXmlElement);
          END;
        UNTIL TTCaption.NEXT = 0;
    END;

    LOCAL PROCEDURE CreateFileName@1100525007(FolderName@1100525000 : Text;OriginalFileName@1100525001 : Text;LanguageAlias@1100525002 : Text) : Text;
    BEGIN
      EXIT(FolderName + '\' + OriginalFileName + '.' + LanguageAlias + '.xlf');
    END;

    LOCAL PROCEDURE ProcessCaptionGroup@1100525011(VAR XmlDoc@1100525000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";VAR TTCaption@1100525002 : Record 77812;GroupName@1100525001 : Text);
    VAR
      BodyXmlElement@1100525004 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      GroupXmlElement@1100525003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      TransUnitXmlElement@1100525005 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      SourceXmlElement@1100525007 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      TTObject@1100525006 : Record 77811;
      TranslationUnitCount@1100525008 : Integer;
      Counter@1100525009 : Integer;
    BEGIN
      XMLDOMManagement4PS.FindNode(XmlDoc,'//body',BodyXmlElement);

      GroupXmlElement := XmlDoc.CreateElement('group');
      GroupXmlElement.SetAttribute('id',GroupName);
      BodyXmlElement.AppendChild(GroupXmlElement);

      Counter := 0;
      TranslationUnitCount := TTCaption.COUNT;

      REPEAT
        Counter += 1;
        WindowUpdateCounter((Counter / TranslationUnitCount * 10000) DIV 1);
        TransUnitXmlElement := XmlDoc.CreateElement('trans-unit');
        TransUnitXmlElement.SetAttribute('id',TTObject.GetTransUnitObjectIdByNo(TTCaption."Object No."));
        TransUnitXmlElement.SetAttribute('size-unit','char');
        TransUnitXmlElement.SetAttribute('xml:space','preserve');
        GroupXmlElement.AppendChild(TransUnitXmlElement);

        SourceXmlElement := XmlDoc.CreateElement('source');
        TransUnitXmlElement.AppendChild(SourceXmlElement);
        SourceXmlElement.InnerText := TTCaption.GetCaption;

        TTCaption.CALCFIELDS("Xliff Generator Note","Developer Note");
        AddNote(XmlDoc,TransUnitXmlElement,'Developer','general','2',TTCaption."Developer Note");
        AddNote(XmlDoc,TransUnitXmlElement,'Xliff Generator','general','3',TTCaption."Xliff Generator Note");
      UNTIL TTCaption.NEXT = 0;
    END;

    LOCAL PROCEDURE AddNote@1100525009(VAR XmlDoc@1100525004 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";VAR TransUnitXmlElement@1100525000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";From@1100525001 : Text;Annotates@1100525006 : Text;Priority@1100525002 : Text;NoteText@1100525003 : Text);
    VAR
      NoteXmlElement@1100525005 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
    BEGIN
      NoteXmlElement := XmlDoc.CreateElement('note');
      NoteXmlElement.SetAttribute('from',From);
      NoteXmlElement.SetAttribute('annotates',Annotates);
      NoteXmlElement.SetAttribute('priority',Priority);
      NoteXmlElement.InnerText := NoteText;

      TransUnitXmlElement.AppendChild(NoteXmlElement);
    END;

    LOCAL PROCEDURE WindowOpen@1100525000();
    BEGIN
      IF GUIALLOWED THEN
        Window.OPEN(WindowPlaceholderLbl);
    END;

    LOCAL PROCEDURE WindowUpdateCaption@1100525001(Msg@1100525000 : Text);
    BEGIN
      IF GUIALLOWED THEN
        Window.UPDATE(1,Msg);
    END;

    LOCAL PROCEDURE WindowUpdateCounter@1100525003(Value@1100525000 : Integer);
    BEGIN
      IF GUIALLOWED THEN
        Window.UPDATE(2,Value);
    END;

    LOCAL PROCEDURE WindowClose@1100525004();
    BEGIN
      IF GUIALLOWED THEN
        Window.CLOSE;
    END;

    BEGIN
    END.
  }
}

