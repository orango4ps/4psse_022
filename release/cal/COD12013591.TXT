OBJECT Codeunit 12013591 Exflow to Invoice (Yes/No)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF400000;
  }
  PROPERTIES
  {
    TableNo=12013587;
    OnRun=VAR
            PurchHeader@1100285001 : Record 38;
            ExflowToInvoice@1100285000 : Codeunit 12013592;
            ExFlowToInvoicePreCreate@1100285002 : Codeunit 12013632;
          BEGIN
            IF NOT CONFIRM(Text000,FALSE,LOWERCASE(FORMAT("Document Type"))) THEN
              EXIT;

            ExFlowToInvoicePreCreate.VerifyDocument(Rec);
            COMMIT;

            GET("Inbound Document No.");
            IF NOT "Validation Error" THEN BEGIN
              ExflowToInvoice.SetRealCreate(TRUE);
              IF ExflowToInvoice.RUN(Rec) THEN BEGIN
                ExflowToInvoice.GetPurchInvoiceHeader(PurchHeader);

                MESSAGE(
                  Text001,
                    PurchHeader."No.",LOWERCASE(FORMAT(PurchHeader."Document Type")));
              END
              ELSE BEGIN
                IF GET("Inbound Document No.") THEN BEGIN
                  "Error Message" := COPYSTR(GETLASTERRORTEXT,1,MAXSTRLEN("Error Message"));
                  MODIFY;
                  COMMIT;
                END;
              END;
            END;

            IF "Error Message" <> '' THEN
              MESSAGE(STRSUBSTNO(Text002,"Error Message"));
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Do you want to convert the exflow document to an %1?;SVE=Vill du konvertera ExFlow dokumentet till en %1?';
      Text001@1001 : TextConst 'ENU=The ExFlow document has been converted to %2 number %1.;SVE=ExFlow dokumentet har blivit konverterat till %2 nummer %1.';
      Text002@1100285000 : TextConst 'ENU=%1;SVE=%1';

    BEGIN
    END.
  }
}

