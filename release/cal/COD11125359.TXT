OBJECT Codeunit 11125359 Resize Image
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [External]
    PROCEDURE CompressPicture@1100529000(OriginalFullFileName@1100529000 : Text;VAR ResizeFullFileName@1100529001 : Text;MaxSize@1100529008 : Integer);
    VAR
      OriginalImage@1100529006 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Bitmap";
      ResizedImage@1100529005 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Bitmap";
      NewSize@1100529004 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Size";
    BEGIN
      OriginalImage := OriginalImage.FromFile(OriginalFullFileName);

      IF ((OriginalImage.Width*OriginalImage.Height)>(MaxSize*MaxSize)) THEN BEGIN
        NewSize := NewSize.Size(0,0);
        GetNewSize(OriginalImage.Width, OriginalImage.Height, NewSize, MaxSize);

        ResizedImage := ResizedImage.Bitmap(OriginalImage, NewSize);
        ResizedImage.Save(ResizeFullFileName);
      END ELSE BEGIN
        ResizeFullFileName:=OriginalFullFileName;
      END;
    END;

    [External]
    PROCEDURE CompressPictureStream@1100525002(OriginalStream@1100529000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";VAR ResizedStream@1100529001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";MaxSize@1100529008 : Integer);
    VAR
      OriginalImage@1100529006 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Bitmap";
      ResizedImage@1100529005 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Bitmap";
      NewSize@1100529004 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Size";
      ImageFormat@1100525000 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Imaging.ImageFormat";
    BEGIN
      OriginalImage := OriginalImage.FromStream(OriginalStream);

      IF ((OriginalImage.Width*OriginalImage.Height)>(MaxSize*MaxSize)) THEN BEGIN
        NewSize := NewSize.Size(0,0);
        GetNewSize(OriginalImage.Width, OriginalImage.Height, NewSize, MaxSize);

        ResizedImage := ResizedImage.Bitmap(OriginalImage, NewSize);
        ResizedImage.Save(ResizedStream, ImageFormat.Jpeg);
      END ELSE BEGIN
        ResizedStream := OriginalStream;
      END;

      ResizedStream.Position := 0;
    END;

    [External]
    PROCEDURE CompressPictureNavStream@1100530800(OriginalStream@1100530800 : InStream;VAR ResizedStream@1100529001 : OutStream;MaxSize@1100529008 : Integer);
    VAR
      OriginalImage@1100529006 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Bitmap";
      ResizedImage@1100529005 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Bitmap";
      NewSize@1100529004 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Size";
      ImageFormat@1100525000 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Imaging.ImageFormat";
    BEGIN
      OriginalImage := OriginalImage.FromStream(OriginalStream);

      IF ((OriginalImage.Width*OriginalImage.Height)>(MaxSize*MaxSize)) THEN BEGIN
        NewSize := NewSize.Size(0,0);
        GetNewSize(OriginalImage.Width, OriginalImage.Height, NewSize, MaxSize);

        ResizedImage := ResizedImage.Bitmap(OriginalImage, NewSize);
        ResizedImage.Save(ResizedStream, ImageFormat.Jpeg);
      END ELSE BEGIN
        COPYSTREAM(ResizedStream,OriginalStream);
      END;
    END;

    LOCAL PROCEDURE GetNewSize@1100525001(sourceWidth@1100525000 : Integer;sourceHeight@1100525001 : Integer;VAR size@1100525002 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Size";maxSize@1100525007 : Integer);
    VAR
      nPercentW@1100525006 : Decimal;
      nPercentH@1100525005 : Decimal;
      nPercent@1100525003 : Decimal;
      destWidth@1100525008 : Decimal;
      destHeight@1100525009 : Decimal;
    BEGIN
      nPercentW := maxSize / sourceWidth;
      nPercentH := maxSize / sourceHeight;

      IF (nPercentH < nPercentW) THEN
        nPercent := nPercentH
      ELSE
        nPercent := nPercentW;

      destWidth := sourceWidth * nPercent;
      destHeight := sourceHeight * nPercent;

      size.Width:= DecimalToInteger(destWidth);
      size.Height := DecimalToInteger(destHeight);
    END;

    LOCAL PROCEDURE DecimalToInteger@1100525000(DecimalValue@1100525000 : Decimal) : Integer;
    BEGIN
      EXIT(ROUND(DecimalValue, 1));
    END;

    BEGIN
    {
      Resize (compress) image
    }
    END.
  }
}

