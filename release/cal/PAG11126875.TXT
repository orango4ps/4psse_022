OBJECT Page 11126875 Estimate Paragraphs RAW
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Estimate Paragraphs;
    SourceTable=Table11125679;
    DataCaptionFields=Estimate No.;
    PageType=List;
    OnOpenPage=VAR
                 Estimate@1100525000 : Record 11012151;
               BEGIN
                 IF GETFILTER("Estimate No.") <> '' THEN BEGIN
                   IF GETRANGEMIN("Estimate No.") = GETRANGEMAX("Estimate No.") THEN BEGIN
                     Estimate.GET(GETRANGEMIN("Estimate No."));
                     PageEditable := NOT Estimate.Finished;
                   END;
                 END;
                 ShowDetailText;  //DP01619
               END;

    OnAfterGetRecord=BEGIN
                       isBold := Type <= Type::"Commitment (Main Line)";
                       IF Activity = '000000' THEN
                         Activity := '';
                     END;

    OnNewRecord=BEGIN
                  InitRecord;
                END;

    OnInsertRecord=BEGIN
                     CheckEstEditable;
                     IF NOT FixedOff THEN  //C043451
                       ERROR(Text000);
                   END;

    OnModifyRecord=BEGIN
                     CheckEstEditable;
                     IF NOT FixedOff THEN //C043451
                       ERROR(Text001);
                   END;

    OnDeleteRecord=BEGIN
                     CheckEstEditable;
                     IF NOT FixedOff THEN  //C043451
                       ERROR(Text002);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateControls;
                         END;

    ActionList=ACTIONS
    {
      { 1100525025;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100525026;1 ;Action    ;
                      Name=Conditions;
                      CaptionML=ENU=Conditions;
                      Image=Splitlines;
                      OnAction=BEGIN
                                 ShowConditions;
                               END;
                                }
      { 1100525027;1 ;Action    ;
                      Name=VAT Specifications;
                      CaptionML=ENU=VAT Specifications;
                      RunObject=Page 11125743;
                      RunPageLink=Estimate No.=FIELD(Estimate No.),
                                  Tender Paragraph No.=FIELD(Tender Paragraph No.);
                      Image=SetupList }
      { 1100525040;1 ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=ENU=Statistics;
                      RunObject=Page 11125758;
                      RunPageLink=No.=FIELD(Estimate No.);
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process }
      { 1100525044;1 ;Action    ;
                      CaptionML=ENU=Comments;
                      Image=ViewComments;
                      OnAction=BEGIN
                                 EditCommentRAW;
                               END;
                                }
      { 1100525028;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525029;1 ;ActionGroup;
                      CaptionML=ENU=Functions }
      { 1100525030;2 ;Action    ;
                      Name=Copy Constr. Spec. to Estimate;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Constr. Spec. to Estimate;
                      Image=Copy;
                      OnAction=VAR
                                 EstimateRAW@1100525000 : Record 11012151;
                               BEGIN
                                 IF GETFILTER("Estimate No.") <> '' THEN
                                   IF GETRANGEMIN("Estimate No.") = GETRANGEMAX("Estimate No.") THEN BEGIN
                                     EstimateRAW."No." := GETRANGEMIN("Estimate No.");
                                     EstimateRAW.SETRECFILTER;
                                     REPORT.RUNMODAL(REPORT::"Copy Constr. Spec. to Estimate", TRUE, FALSE, EstimateRAW);
                                     CurrPage.UPDATE(TRUE);
                                   END;
                               END;
                                }
      { 1100528919;2 ;Action    ;
                      Name=Copy Information Notice;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Information Notice to Estimate;
                      Image=Copy;
                      OnAction=BEGIN
                                 //DP02278a
                                 ProcessInformationNotice;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100525031;2 ;Action    ;
                      Name=CopyEstimateParagraphs;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Estimate Paragraphs;
                      Image=Copy;
                      OnAction=VAR
                                 CopyEstElems@1100525000 : Page 11125748;
                                 EstimateElement@1100525001 : Record 11125679;
                               BEGIN
                                 //DP00088
                                 CurrPage.SETSELECTIONFILTER(EstimateElement);
                                 CopyEstElems.SetSelection(EstimateElement);
                                 CopyEstElems.StdDialogRunModal;
                               END;
                                }
      { 1100528910;2 ;Action    ;
                      Name=CopyEstimateLinesFromSourceEstimate;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Estimate Lines from Source Estimate;
                      Image=Copy;
                      OnAction=VAR
                                 EstimateParagraphListRAW@1100525000 : Page 11125683;
                               BEGIN
                                 //DP00088
                                 EstimateParagraphListRAW.SetSelection("Estimate No.");
                                 EstimateParagraphListRAW.RUNMODAL;
                               END;
                                }
      { 1100525032;2 ;Action    ;
                      Name=InsertSummaryParagraphs;
                      Ellipsis=Yes;
                      CaptionML=ENU=Insert Summary Paragraphs;
                      Image=Payment;
                      OnAction=VAR
                                 Estimate@1100525000 : Record 11012151;
                               BEGIN
                                 IF GETFILTER("Estimate No.") <> '' THEN
                                   IF GETRANGEMIN("Estimate No.") = GETRANGEMAX("Estimate No.") THEN BEGIN
                                     Estimate.GET(GETRANGEMIN("Estimate No."));
                                     Estimate.SETRECFILTER;
                                     CODEUNIT.RUN(CODEUNIT::"Insert Estimate Totals RAW", Estimate);
                                     CurrPage.UPDATE(TRUE);
                                   END;
                               END;
                                }
      { 1100525033;2 ;Action    ;
                      Name=Recalculate;
                      ShortCutKey=F9;
                      CaptionML=ENU=Recalculate;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Refresh;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 RecalcRAWEstimateRecur@1100525000 : Codeunit 11125669;
                               BEGIN
                                 IF GETFILTER("Estimate No.") <> '' THEN
                                   IF GETRANGEMIN("Estimate No.") = GETRANGEMAX("Estimate No.") THEN BEGIN
                                     RecalcRAWEstimateRecur.RecalculateEstimateRAW(GETRANGEMIN("Estimate No."));
                                     CurrPage.UPDATE(FALSE);
                                   END;
                               END;
                                }
      { 1100525012;2 ;Action    ;
                      Name=ShowDetails;
                      CaptionML=ENU=ShowDetailText;
                      Image=Comment;
                      OnAction=BEGIN
                                 ShowDetailText;  //DP01619
                               END;
                                }
      { 1100528916;2 ;Action    ;
                      Name=ImportExcel;
                      CaptionML=ENU=Import from Excel;
                      Image=Excel;
                      OnAction=BEGIN
                                 ActivateExcel(FALSE);  //DP01561
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100525000;0;Container;
                ContainerType=ContentArea }

    { 1100525001;1;Group  ;
                Name=Group;
                Editable=pageEditable;
                IndentationColumnName=Indentation;
                IndentationControls=Text;
                GroupType=Repeater }

    { 1100525002;2;Field  ;
                SourceExpr="Tender Paragraph No.";
                Editable=InformationNoticeEditable;
                Style=Strong;
                StyleExpr=isBold;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;  //C043497
                           END;
                            }

    { 1100525003;2;Field  ;
                SourceExpr=Type;
                Visible=FALSE;
                Style=Strong;
                StyleExpr=isBold }

    { 1100525039;2;Field  ;
                Width=4;
                CaptionML=ENU=1;
                SourceExpr=FillDefiCode(1);
                Visible=DetailLinesVisible }

    { 1100525046;2;Field  ;
                Width=4;
                CaptionML=ENU=2;
                SourceExpr=FillDefiCode(2);
                Visible=DetailLinesVisible }

    { 1100525047;2;Field  ;
                Width=4;
                CaptionML=ENU=3;
                SourceExpr=FillDefiCode(3);
                Visible=DetailLinesVisible }

    { 1100525048;2;Field  ;
                Width=4;
                CaptionML=ENU=4;
                SourceExpr=FillDefiCode(4);
                Visible=DetailLinesVisible }

    { 1100525049;2;Field  ;
                Width=4;
                CaptionML=ENU=5;
                SourceExpr=FillDefiCode(5);
                Visible=DetailLinesVisible }

    { 1100525050;2;Field  ;
                Width=4;
                CaptionML=ENU=6;
                SourceExpr=FillDefiCode(6);
                Visible=DetailLinesVisible }

    { 1100525024;2;Field  ;
                CaptionML=ENU=Conditions;
                SourceExpr=HasConditions }

    { 1100525004;2;Field  ;
                SourceExpr="Information Notice";
                OnValidate=BEGIN
                             UpdateControls;
                           END;
                            }

    { 1100525042;2;Field  ;
                SourceExpr="Base Element";
                Importance=Additional }

    { 1100525005;2;Field  ;
                SourceExpr=Activity;
                Editable=ActivityEditable;
                Style=Strong;
                StyleExpr=isBold;
                OnValidate=BEGIN
                             IF Activity = '000000' THEN
                               Activity := '';

                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525006;2;Field  ;
                SourceExpr="Construction Spec. Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525007;2;Field  ;
                SourceExpr=Text;
                Editable=InformationNoticeEditable;
                Style=Strong;
                StyleExpr=isBold }

    { 1100525045;2;Field  ;
                SourceExpr=Comments;
                OnDrillDown=BEGIN
                              EditCommentRAW;
                              CALCFIELDS(Comments);
                            END;
                             }

    { 1100525023;2;Field  ;
                SourceExpr="Status Code";
                Importance=Additional }

    { 1100525011;2;Field  ;
                SourceExpr="Quantity Type";
                Editable=InformationNoticeEditable;
                Style=Strong;
                StyleExpr=isBold }

    { 1100525010;2;Field  ;
                SourceExpr=Quantity;
                Editable=QuantityEditable;
                Style=Strong;
                StyleExpr=isBold;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525008;2;Field  ;
                SourceExpr="External Unit of Measure Code";
                Importance=Additional;
                Editable=UnitOfMeasureEditable;
                Style=Strong;
                StyleExpr=isBold }

    { 1100525009;2;Field  ;
                SourceExpr="Internal Unit of Measure Code";
                Editable=UnitOfMeasureEditable;
                Style=Strong;
                StyleExpr=isBold }

    { 1100528904;2;Field  ;
                SourceExpr="Quantity (Result Obligation)";
                Editable=ObligationEditable }

    { 1100528907;2;Field  ;
                SourceExpr="Unit of Measure (Obligation)";
                Editable=ObligationEditable }

    { 1100528917;2;Field  ;
                SourceExpr="Production Rate";
                Visible=FALSE }

    { 1100528918;2;Field  ;
                CaptionML=ENU=Original Quantity Tender Paragraph;
                BlankZero=Yes;
                SourceExpr=OriginalQuantityConstructionSpec;
                Visible=FALSE }

    { 1100525013;2;Field  ;
                SourceExpr="Calculated Unit Price";
                Style=Strong;
                StyleExpr=isBold }

    { 1100525014;2;Field  ;
                SourceExpr="Calculated Amount";
                Style=Strong;
                StyleExpr=isBold }

    { 1100525015;2;Field  ;
                SourceExpr="Actual Quantity";
                Style=Strong;
                StyleExpr=isBold }

    { 1100525016;2;Field  ;
                SourceExpr="Actual Unit Price";
                Style=Strong;
                StyleExpr=isBold }

    { 1100525017;2;Field  ;
                SourceExpr="Actual Amount";
                Style=Strong;
                StyleExpr=isBold }

    { 1100525018;2;Field  ;
                SourceExpr="Lock Actual Amount for Updates";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525019;2;Field  ;
                SourceExpr="Calculated Amount Labor" }

    { 1100525020;2;Field  ;
                SourceExpr="Calculated Amount Material" }

    { 1100525021;2;Field  ;
                SourceExpr="Calculated Amount Subcontr." }

    { 1100525022;2;Field  ;
                SourceExpr="Calculated Amount Plant" }

    { 1100528500;2;Field  ;
                SourceExpr="Calculated Amount Sundry" }

    { 1100528912;2;Field  ;
                SourceExpr="Surcharge % Labor";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100528911;2;Field  ;
                SourceExpr="Surcharge Amount Labor" }

    { 1100528909;2;Field  ;
                SourceExpr="Surcharge % Material";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100528908;2;Field  ;
                SourceExpr="Surcharge Amount Material" }

    { 1100528906;2;Field  ;
                SourceExpr="Surcharge % Subcontracting";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100528905;2;Field  ;
                SourceExpr="Surcharge Amount Subcontr." }

    { 1100528903;2;Field  ;
                SourceExpr="Surcharge % Plant";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100528902;2;Field  ;
                SourceExpr="Surcharge Amount Plant" }

    { 1100528915;2;Field  ;
                SourceExpr="Excel Estimate Template";
                Visible=FALSE;
                Editable=FixedOff;
                OnAssistEdit=BEGIN
                               ActivateExcel(TRUE);  //DP01561
                             END;
                              }

    { 1100528914;2;Field  ;
                CaptionML=ENU=Excel Estimate Exists;
                SourceExpr=ExcelFileExists;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528913;2;Field  ;
                SourceExpr="Updated form Excel";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525041;1;Part   ;
                SubPageView=SORTING(Estimate No.,Tender Paragraph No.,Line No.);
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Tender Paragraph No.=FIELD(Tender Paragraph No.);
                PagePartID=Page11126876;
                PartType=Page }

    { 1100525037;0;Container;
                ContainerType=FactBoxArea }

    { 1100525038;1;Part   ;
                CaptionML=ENU=Estimate Totals;
                SubPageLink=No.=FIELD(Estimate No.);
                PagePartID=Page11125753;
                PartType=Page }

    { 1100528900;1;Part   ;
                CaptionML=ENU=Paragraph Totals;
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Tender Paragraph No.=FIELD(Tender Paragraph No.);
                PagePartID=Page11125756;
                PartType=Page }

    { 1100528901;1;Part   ;
                CaptionML=ENU=Line Totals;
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Tender Paragraph No.=FIELD(Tender Paragraph No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11126874;
                ProviderID=1100525041;
                PartType=Page }

    { 1100525035;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

    { 1100525034;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

  }
  CODE
  {
    VAR
      PageEditable@1100525000 : Boolean INDATASET;
      isBold@1100525001 : Boolean INDATASET;
      QuantityEditable@1100525002 : Boolean INDATASET;
      ActivityEditable@1100525005 : Boolean INDATASET;
      UnitOfMeasureEditable@1100525006 : Boolean INDATASET;
      InformationNoticeEditable@1100525007 : Boolean INDATASET;
      ShowDetailLines@1100525008 : Boolean;
      DetailLinesVisible@1100528900 : Boolean INDATASET;
      Text000@1100528903 : TextConst 'ENU=Adding not allowed, Estimate is fixed.';
      Text001@1100528902 : TextConst 'ENU=Changing not allowed, Estimate is fixed.';
      Text002@1100528901 : TextConst 'ENU=Deleting not allowed, Estimate is fixed.';
      FixedOff@1100528904 : Boolean;
      ObligationEditable@1100528905 : Boolean INDATASET;

    PROCEDURE InitRecord@1100525000();
    BEGIN
      "Construction Spec. Line No." := '00';
      Title := TRUE;
      "Information Notice" := TRUE;
    END;

    PROCEDURE UpdateControls@1100525003();
    BEGIN
      //DP01676.sn
      //-skip check on price/amount conform page SalesDetails
      //-skip page SalesDetails
      //ActualUnitPriceEditable := IsActualUnitPriceEditable;
      //ActualAmountEditable := IsActualAmountEditable;
      //DP01676.en
      CheckEstEditable;
      IF NOT FixedOff THEN BEGIN //C043451
        QuantityEditable := FALSE;
        ActivityEditable := FALSE;
        UnitOfMeasureEditable := FALSE;
        InformationNoticeEditable := FALSE;
        ObligationEditable := FALSE;
      END ELSE BEGIN
        QuantityEditable := IsQuantityEditable;
        ActivityEditable := IsActivityEditable;
        UnitOfMeasureEditable := IsUnitOfMeasureEditable;
        InformationNoticeEditable := "Information Notice";
        CheckObligationEditable;
      END;
    END;

    PROCEDURE IsQuantityEditable@1100525001() : Boolean;
    BEGIN
      EXIT(
        ("Information Notice") OR
        ((Source = Source::"Construction Specification") AND (QuantityDefinedOnConstructionSpec=FALSE)) OR  //C034000 (db, 30-12-16)
        ((Source <> Source::"Construction Specification") AND (STRLEN("Tender Paragraph No.") = 6)));
    END;

    PROCEDURE IsActualAmountEditable@1100525005() : Boolean;
    BEGIN
      EXIT(IsEuroParagraph AND
        "Information Notice");
    END;

    PROCEDURE IsActualUnitPriceEditable@1100525006() : Boolean;
    BEGIN
      EXIT(
        (Type = Type::"Commitment (Main Line)") AND
        (NOT IsEuroParagraph) AND
        "Information Notice");
    END;

    PROCEDURE IsActivityEditable@1100525002() : Boolean;
    BEGIN
      EXIT((STRLEN("Tender Paragraph No.") = 6) AND
        "Information Notice");
    END;

    PROCEDURE IsUnitOfMeasureEditable@1100525004() : Boolean;
    BEGIN
      IF "Information Notice" THEN
        EXIT(TRUE);

      IF "Units Inherited from Activity" THEN
        EXIT(FALSE);

      IF STRLEN("Tender Paragraph No.") < 6 THEN
        EXIT(FALSE);

      IF Source = Source::"Construction Specification" THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE EditCommentRAW@1100525007();
    VAR
      CommentLineRAW@1100525000 : Record 11125684;
    BEGIN
      //DP01086
      TESTFIELD("Estimate No.");
      TESTFIELD("Tender Paragraph No.");
      CommentLineRAW."Table No." := DATABASE::"Estimate Paragraph RAW";
      CommentLineRAW."Estimate No." := "Estimate No.";
      CommentLineRAW."Tender Paragraph No." := "Tender Paragraph No.";
      CommentLineRAW."Tender Paragraph Line" := "Line No.";
      CommentLineRAW.EditCommentLines(TRUE);
    END;

    LOCAL PROCEDURE ShowDetailText@1100525008();
    BEGIN
      //DP01619
      IF ShowDetailLines THEN BEGIN
        SETRANGE("Construction Spec. Line No.");
        ShowDetailLines := FALSE;
      END ELSE BEGIN
        SETRANGE("Construction Spec. Line No.", '00');
        ShowDetailLines := TRUE;
      END;
      DetailLinesVisible := (ShowDetailLines = FALSE);  //DP01676
    END;

    LOCAL PROCEDURE FillDefiCode@1100525009(iAction@1100525000 : Integer) : Code[2];
    BEGIN
      //DP01619
      CASE iAction OF
        1: EXIT("Defi Code Position 1");
        2: EXIT("Defi Code Position 2");
        3: EXIT("Defi Code Position 3");
        4: EXIT("Defi Code Position 4");
        5: EXIT("Defi Code Position 5");
        6: EXIT("Defi Code Position 6");
      END;
      EXIT('');
    END;

    PROCEDURE CheckEstEditable@3();
    VAR
      EstRec@11012000 : Record 11012151;
    BEGIN
      //C043451
      IF EstRec.GET("Estimate No.") THEN
        FixedOff := NOT EstRec.Fixed;
    END;

    LOCAL PROCEDURE ActivateExcel@1100528900(AssistEdit@1100528901 : Boolean);
    VAR
      EstimateParagraphRAW@1100528900 : Record 11125679;
      EstimateExcelMgt@1100528902 : Codeunit 11012231;
    BEGIN
      //DP01561
      IF AssistEdit THEN BEGIN
        CurrPage.SAVERECORD;
        EstimateParagraphRAW := Rec;
      END ELSE BEGIN
        EstimateParagraphRAW.SETRANGE("Estimate No.", "Estimate No.");
        EstimateParagraphRAW.FINDFIRST;
        EstimateParagraphRAW.CheckExcelTemplateFilled;
        EstimateParagraphRAW.MODIFY;
      END;
      EstimateParagraphRAW.TESTFIELD("Excel Estimate Template");
      EstimateExcelMgt.OpenExcelFileRAW(EstimateParagraphRAW);
      CLEAR(EstimateExcelMgt);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ProcessInformationNotice@1100528901();
    VAR
      Estimate@1100528903 : Record 11012151;
      ConstructionSpecificationRAW@1100528902 : Record 11125666;
      CopyConstrSpectoEstimate@1100528905 : Report 11125667;
    BEGIN
      //DP02278a
      Estimate.GET("Estimate No.");
      ConstructionSpecificationRAW.GET(Estimate."Construction Spec. No.");
      Estimate.SETRECFILTER;
      CopyConstrSpectoEstimate.SetSelection("Estimate No.");
      CopyConstrSpectoEstimate.SETTABLEVIEW(Estimate);
      CopyConstrSpectoEstimate.RUNMODAL;
    END;

    LOCAL PROCEDURE CheckObligationEditable@1100528902();
    VAR
      EstimateUnitMappingRAW@1100528900 : Record 11125675;
    BEGIN
      //C060816
      ObligationEditable := TRUE;
      IF NOT EstimateUnitMappingRAW.GET("External Unit of Measure Code") THEN EXIT;
      ObligationEditable := (EstimateUnitMappingRAW."Ignore Result Obligation" = FALSE);
    END;

    BEGIN
    END.
  }
}

