OBJECT Report 11125356 Intercompany Clearing
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 17=r,
                TableData 11012057=r,
                TableData 11020674=r;
    CaptionML=[DEU=Abrechnung Kontokorrent;
               ENU=Intercompany Clearing;
               NLD=Rekening courant vereffening];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  TmpGenJournalLine.RESET;
                  TmpGenJournalLine.DELETEALL;
                  TmpICClearingRelation.RESET;
                  TmpICClearingRelation.DELETEALL;
                END;

    OnPostReport=VAR
                   GenJournalTemplate@1100529600 : Record 80;
                   GenJournalLine@1100529601 : Record 81;
                   GenJnlPost@1100529602 : Codeunit 231;
                 BEGIN
                   IF CreateGenJnlLines THEN
                     IF PostLines THEN BEGIN
                       COMMIT;
                       GenJournalLine.FILTERGROUP(2);
                       GenJournalLine.SETRANGE("Journal Template Name", GLSetup."Intercompany Journal Template");
                       GenJournalLine.SETRANGE("Journal Batch Name", GLSetup."Intercompany Batch Name");
                       GenJournalLine.SETRANGE("Line No.", FirstLineNo, LastLineNo);
                       GenJournalLine.FILTERGROUP(0);
                       GenJournalLine.FINDFIRST;

                       GenJnlPost.Background(TRUE);
                       GenJnlPost.RUN(GenJournalLine);
                     END ELSE
                       IF GUIALLOWED THEN BEGIN
                         GenJournalTemplate.GET(GLSetup."Intercompany Journal Template");
                         IF GenJournalTemplate."Page ID" <> 0 THEN BEGIN
                           COMMIT;
                           GenJournalLine.SETRANGE("Journal Template Name", GLSetup."Intercompany Journal Template");
                           GenJournalLine.SETRANGE("Journal Batch Name", GLSetup."Intercompany Batch Name");
                           PAGE.RUNMODAL(GenJournalTemplate."Page ID", GenJournalLine);
                         END;
                       END;
                 END;

    UsageCategory=Tasks;
  }
  DATASET
  {
    { 1100529600;;DataItem;ICRelationSupplying;
               DataItemTable=Table11012057;
               DataItemTableView=SORTING(Supplying Company,Receiving Company);
               OnPreDataItem=BEGIN
                               SETRANGE("Supplying Company", COMPANYNAME);
                             END;

               OnAfterGetRecord=BEGIN
                                  GetGLAccAmounts(TRUE, "Supplying Company IC Account", "Receiving Company", "Receiving Company IC Account");
                                END;
                                 }

    { 1100529601;;DataItem;ICRelationReceiving;
               DataItemTable=Table11012057;
               DataItemTableView=SORTING(Supplying Company,Receiving Company);
               OnPreDataItem=BEGIN
                               SETRANGE("Receiving Company", COMPANYNAME);
                             END;

               OnAfterGetRecord=BEGIN
                                  GetGLAccAmounts(FALSE, "Receiving Company IC Account", "Supplying Company", "Supplying Company IC Account");
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100529600;;Container;
                  ContainerType=ContentArea }

      { 1100529605;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1100529601;2;Field  ;
                  Name=DateFilter;
                  CaptionML=[DEU=Datumsfilter;
                             ENU=Date Filter;
                             NLD=Datumfilter;
                             NOR=Dato filter;
                             SVE=Datumfilter];
                  SourceExpr=DateFilter;
                  OnValidate=VAR
                               TextManagement@1001 : Codeunit 41;
                               GLAccount@1100529600 : Record 15;
                             BEGIN
                               IF TextManagement.MakeDateFilter(DateFilter) = 0 THEN;
                               GLAccount.SETFILTER("Date Filter", DateFilter);
                               DateFilter := GLAccount.GETFILTER("Date Filter");
                             END;
                              }

      { 1100529602;2;Field  ;
                  Name=PostLines;
                  CaptionML=[DEU=Buch.-Blattzeilen buchen;
                             ENU=Post Journal Lines;
                             NLD=Boeken dagboekregels];
                  SourceExpr=PostLines }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      GLSetup@1100529609 : Record 98;
      TmpGenJournalLine@1100529600 : TEMPORARY Record 81;
      ICGLEntry@1100529603 : Record 17;
      TmpGLEntry@1100529605 : TEMPORARY Record 17;
      TmpICGLEntry@1100529606 : TEMPORARY Record 17;
      ICApplGLEntry@1100529604 : Record 17;
      ICClearingRelation@1100529611 : Record 11229426;
      TmpICClearingRelation@1100529610 : TEMPORARY Record 11229426;
      DateFilter@1100529601 : Text[250];
      JournalLineDescription@1100529602 : TextConst 'DEU=IC-Anwendung %1;ENU=IC application %1;NLD=Vereffening RC %1';
      PostLines@1100529607 : Boolean;
      FirstLineNo@1100529608 : Integer;
      LastLineNo@1100529612 : Integer;

    LOCAL PROCEDURE GetCustomerAndVendor@1100529603(CompanyNameLoc@1100529606 : Text[30];VAR Customer@1100529605 : Record 18;VAR Vendor@1100529607 : Record 23);
    VAR
      CompanyData@1100529600 : Record 11020674;
      CustContact@1100529604 : Record 5050;
      CustContactBusinessRelation@1100529601 : Record 5054;
      VendContactBusinessRelation@1100529602 : Record 5054;
      OfficeManagement@1100529603 : Codeunit 1630;
    BEGIN
      CLEAR(Customer);
      CLEAR(Vendor);

      IF CompanyData.GET(CompanyNameLoc) THEN
        IF CompanyData."Customer No." <> '' THEN
          IF Customer.GET(CompanyData."Customer No.") THEN ;

      IF Customer."No." = '' THEN
        EXIT;

      CustContactBusinessRelation.SETRANGE("Link to Table", CustContactBusinessRelation."Link to Table"::Customer);
      CustContactBusinessRelation.SETRANGE("No.", Customer."No.");
      IF CustContactBusinessRelation.FINDSET THEN BEGIN
        VendContactBusinessRelation.SETRANGE("Link to Table", VendContactBusinessRelation."Link to Table"::Vendor);
        REPEAT
          VendContactBusinessRelation.SETRANGE("Contact No.", CustContactBusinessRelation."Contact No.");
          IF VendContactBusinessRelation.FINDSET THEN
            REPEAT
              IF Vendor.GET(VendContactBusinessRelation."No.") THEN
                EXIT;
            UNTIL VendContactBusinessRelation.NEXT = 0;
        UNTIL CustContactBusinessRelation.NEXT = 0;
      END;

      IF OfficeManagement.GetContact(CustContact, Customer."No.") THEN BEGIN
        VendContactBusinessRelation.SETRANGE("Link to Table", VendContactBusinessRelation."Link to Table"::Vendor);
        CustContact.FINDSET;
        REPEAT
          VendContactBusinessRelation.SETRANGE("Contact No.", CustContact."No.");
          IF VendContactBusinessRelation.FINDSET THEN
            REPEAT
              IF Vendor.GET(VendContactBusinessRelation."No.") THEN
                EXIT;
            UNTIL VendContactBusinessRelation.NEXT = 0;
        UNTIL CustContact.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE GetGLAccAmounts@1100529600(IsSupplyingCompany@1100529600 : Boolean;GLAccountNo@1100529603 : Code[20];CheckCompanyName@1100529604 : Text[30];CheckGLAccountNo@1100529605 : Code[20]);
    VAR
      GLEntry@1100529601 : Record 17;
      Customer@1100529606 : Record 18;
      Vendor@1100529602 : Record 23;
    BEGIN
      GLEntry.SETRANGE("G/L Account No.", GLAccountNo);
      IF IsSupplyingCompany THEN
        GLEntry.SETRANGE("Receiving Company", CheckCompanyName)
      ELSE
        GLEntry.SETRANGE("Supplying Company", CheckCompanyName);

      IF DateFilter <> '' THEN
        GLEntry.SETFILTER("Posting Date", DateFilter);
      GLEntry.SETRANGE("Intercompany Transaction", TRUE);
      GLEntry.SETRANGE(Reversed, FALSE);
      GLEntry.SETRANGE("IC Application Entry No.", 0);

      IF GLEntry.ISEMPTY THEN
        EXIT;

      DeleteGenJnlLines;

      ICGLEntry.RESET;
      ICGLEntry.CHANGECOMPANY(CheckCompanyName);
      ICGLEntry.SETRANGE("Intercompany Transaction", TRUE);
      ICGLEntry.SETRANGE(Reversed, FALSE);
      ICGLEntry.SETRANGE("G/L Account No.", CheckGLAccountNo);
      ICApplGLEntry.CHANGECOMPANY(CheckCompanyName);
      ICClearingRelation.RESET;
      ICClearingRelation.CHANGECOMPANY(CheckCompanyName);
      ICClearingRelation.SETAUTOCALCFIELDS("Journal Document No.");
      TmpGLEntry.DELETEALL;
      TmpICGLEntry.DELETEALL;

      GLEntry.FINDSET;
      REPEAT
        GetGLEntries(GLEntry);
      UNTIL GLEntry.NEXT = 0;

      TmpGLEntry.RESET;
      IF TmpGLEntry.ISEMPTY THEN
        EXIT;

      TmpGenJournalLine.RESET;
      IF IsSupplyingCompany THEN
        TmpGenJournalLine.SETRANGE("Receiving Company", CheckCompanyName)
      ELSE
        TmpGenJournalLine.SETRANGE("Supplying Company", CheckCompanyName);

      TmpGLEntry.FINDSET;
      REPEAT
        TmpGenJournalLine.SETRANGE("Bal. Account No.", GLAccountNo);
        TmpGenJournalLine.SETRANGE("Dimension Set ID", TmpGLEntry."Dimension Set ID");
        TmpGenJournalLine.SETRANGE("IC Partner Transaction No.", TmpGLEntry."Close Income Statement Dim. ID");
        TmpGenJournalLine.SETRANGE("External Document No.", TmpGLEntry."External Document No.");
        TmpGenJournalLine.SETRANGE("Incoming Document Entry No.", TmpGLEntry."Reversed by Entry No.");
        TmpGenJournalLine.SETRANGE("Source Line No.", TmpGLEntry."Reversed Entry No.");

        IF TmpGenJournalLine.FINDFIRST THEN BEGIN
          TmpGenJournalLine.Amount += TmpGLEntry.Amount;
          TmpGenJournalLine.MODIFY;
        END ELSE BEGIN
          TmpGenJournalLine.INIT;
          TmpGenJournalLine."Line No." := TmpGLEntry."Entry No.";
          IF IsSupplyingCompany THEN
            TmpGenJournalLine."Receiving Company" := CheckCompanyName
          ELSE
            TmpGenJournalLine."Supplying Company" := CheckCompanyName;
          TmpGenJournalLine.Amount := TmpGLEntry.Amount;
          TmpGenJournalLine."Bal. Account No." := GLAccountNo;
          TmpGenJournalLine."Dimension Set ID" := TmpGLEntry."Dimension Set ID";
          TmpGenJournalLine."Shortcut Dimension 1 Code" := TmpGLEntry."Global Dimension 1 Code";
          TmpGenJournalLine."Shortcut Dimension 2 Code" := TmpGLEntry."Global Dimension 2 Code";
          TmpGenJournalLine."External Document No." := TmpGLEntry."External Document No.";
          TmpGenJournalLine."IC Partner Transaction No." := TmpGLEntry."Close Income Statement Dim. ID";
          TmpGenJournalLine."Incoming Document Entry No." := TmpGLEntry."Reversed by Entry No.";
          TmpGenJournalLine."Source Line No." := TmpGLEntry."Reversed Entry No.";
          TmpGenJournalLine.INSERT;
        END;

        TmpICClearingRelation."Journal Line No." := TmpGenJournalLine."Line No.";
        TmpICClearingRelation."Source Entry No." := TmpGLEntry."Entry No.";
        TmpICClearingRelation."Receiving Company" := CheckCompanyName;
        TmpICClearingRelation."External Document No." := TmpGLEntry."External Document No.";
        TmpICClearingRelation.INSERT;
      UNTIL TmpGLEntry.NEXT = 0;

      TmpGenJournalLine.RESET;
      TmpGenJournalLine.SETRANGE(Amount, 0);
      TmpGenJournalLine.DELETEALL;

      TmpGenJournalLine.RESET;
      IF IsSupplyingCompany THEN
        TmpGenJournalLine.SETRANGE("Receiving Company", CheckCompanyName)
      ELSE
        TmpGenJournalLine.SETRANGE("Supplying Company", CheckCompanyName);
      IF TmpGenJournalLine.ISEMPTY THEN
        EXIT;

      GetCustomerAndVendor(CheckCompanyName, Customer, Vendor);

      TmpGenJournalLine.FINDSET;
      REPEAT
        IF TmpGenJournalLine.Amount < 0 THEN BEGIN
          TmpGenJournalLine."Account Type" := TmpGenJournalLine."Account Type"::Vendor;
          TmpGenJournalLine."Account No." := Vendor."No.";
          TmpGenJournalLine.Description := Vendor.Name;
        END ELSE BEGIN
          TmpGenJournalLine."Account Type" := TmpGenJournalLine."Account Type"::Customer;
          TmpGenJournalLine."Account No." := Customer."No.";
          TmpGenJournalLine.Description := Customer.Name;
        END;
        TmpGenJournalLine.MODIFY;
      UNTIL TmpGenJournalLine.NEXT = 0;
    END;

    LOCAL PROCEDURE GetGLEntries@1100529605(VAR GLEntry@1100529601 : Record 17);
    VAR
      ICClearingRelationLoc@1100529604 : Record 11229426;
      GLEntryLoc@1100529608 : Record 17;
      GLEntryFound@1100529600 : Boolean;
    BEGIN
      IF TmpGLEntry.GET(GLEntry."Entry No.") THEN
        EXIT;

      ICClearingRelationLoc.SETRANGE("Source Entry No.", GLEntry."Entry No.");
      IF NOT ICClearingRelationLoc.ISEMPTY THEN
        EXIT;

      ICGLEntry.SETRANGE("IC Application Entry No.");
      ICGLEntry.SETRANGE("Document No.", GLEntry."Document No.");
      ICGLEntry.SETRANGE("Posting Date", GLEntry."Posting Date");
      IF ICGLEntry.ISEMPTY THEN
        EXIT;

      ICGLEntry.FINDSET;
      REPEAT
        IF ICGLEntry.Amount = - GLEntry.Amount THEN
          IF NOT TmpICGLEntry.GET(ICGLEntry."Entry No.") THEN BEGIN
            TmpGLEntry := GLEntry;
            TmpGLEntry."Close Income Statement Dim. ID" := ICGLEntry."Dimension Set ID";
            TmpGLEntry."Reversed by Entry No." := 0;
            TmpGLEntry."Reversed Entry No." := 0;
            TmpGLEntry."External Document No." := '';
            TmpGLEntry.INSERT;

            TmpICGLEntry := ICGLEntry;
            TmpICGLEntry.INSERT;

            IF ICGLEntry."IC Application Entry No." <> 0 THEN
              IF ICApplGLEntry.GET(ICGLEntry."IC Application Entry No.") THEN BEGIN
                TmpGLEntry."Reversed by Entry No." := ICApplGLEntry."Entry No.";
                TmpGLEntry."External Document No." := ICApplGLEntry."Document No.";
                TmpGLEntry.MODIFY;

                GLEntryLoc.COPYFILTERS(GLEntry);

                ICGLEntry.SETRANGE("Document No.");
                ICGLEntry.SETRANGE("Posting Date");
                ICGLEntry.SETRANGE("IC Application Entry No.", ICApplGLEntry."Entry No.");
                ICGLEntry.FINDSET;
                REPEAT
                  IF (ICGLEntry."Entry No." <> ICGLEntry."IC Application Entry No.") AND
                     (NOT TmpICGLEntry.GET(ICGLEntry."Entry No." ))
                  THEN BEGIN
                    GLEntryFound := FALSE;
                    GLEntryLoc.SETRANGE("Document No.", ICGLEntry."Document No.");
                    GLEntryLoc.SETRANGE("Posting Date", ICGLEntry."Posting Date");
                    IF GLEntryLoc.FINDSET THEN
                      REPEAT
                        IF ICGLEntry.Amount = - GLEntryLoc.Amount THEN
                          IF NOT TmpGLEntry.GET(GLEntryLoc."Entry No.") THEN BEGIN
                            TmpGLEntry := GLEntryLoc;
                            TmpGLEntry."Close Income Statement Dim. ID" := ICGLEntry."Dimension Set ID";
                            TmpGLEntry."Reversed by Entry No." := ICApplGLEntry."Entry No.";
                            TmpGLEntry."Reversed Entry No." := 0;
                            TmpGLEntry."External Document No." := ICApplGLEntry."Document No.";
                            TmpGLEntry.INSERT;

                            TmpICGLEntry := ICGLEntry;
                            TmpICGLEntry.INSERT;
                            GLEntryFound := TRUE;
                          END;
                      UNTIL (GLEntryLoc.NEXT = 0) OR GLEntryFound;
                  END;
                UNTIL ICGLEntry.NEXT = 0;
                EXIT;
              END;

            ICClearingRelation.SETRANGE("Journal Template Name");
            ICClearingRelation.SETRANGE("Journal Batch Name");
            ICClearingRelation.SETRANGE("Journal Line No.");
            ICClearingRelation.SETRANGE("Source Entry No.");
            ICClearingRelation.SETRANGE("Source Entry No.", ICGLEntry."Entry No.");
            IF ICClearingRelation.FINDFIRST THEN BEGIN
              TmpGLEntry."Reversed Entry No." := ICClearingRelation."Journal Line No.";
              TmpGLEntry."External Document No." := ICClearingRelation."Journal Document No.";
              TmpGLEntry.MODIFY;

              GLEntryLoc.COPYFILTERS(GLEntry);

              ICClearingRelation.SETRANGE("Journal Template Name", ICClearingRelation."Journal Template Name");
              ICClearingRelation.SETRANGE("Journal Batch Name", ICClearingRelation."Journal Batch Name");
              ICClearingRelation.SETRANGE("Journal Line No.", ICClearingRelation."Journal Line No.");
              ICClearingRelation.SETRANGE("Source Entry No.");
              ICClearingRelation.FINDSET;
              REPEAT
                IF (ICGLEntry.GET(ICClearingRelation."Source Entry No.")) AND
                   (NOT TmpICGLEntry.GET(ICGLEntry."Entry No." ))
                THEN BEGIN
                  GLEntryLoc.SETRANGE("Document No.", ICGLEntry."Document No.");
                  GLEntryLoc.SETRANGE("Posting Date", ICGLEntry."Posting Date");
                  IF GLEntryLoc.FINDSET THEN
                    REPEAT
                      IF ICGLEntry.Amount = - GLEntryLoc.Amount THEN
                        IF NOT TmpICGLEntry.GET(ICGLEntry."Entry No.") THEN BEGIN
                          TmpGLEntry := GLEntryLoc;
                          TmpGLEntry."Close Income Statement Dim. ID" := ICGLEntry."Dimension Set ID";
                          TmpGLEntry."Reversed by Entry No." := 0;
                          TmpGLEntry."Reversed Entry No." := ICClearingRelation."Journal Line No.";
                          TmpGLEntry."External Document No." := ICClearingRelation."Journal Document No.";
                          TmpGLEntry.INSERT;

                          TmpICGLEntry := ICGLEntry;
                          TmpICGLEntry.INSERT;
                        END;
                    UNTIL GLEntryLoc.NEXT = 0;
                END;
              UNTIL ICClearingRelation.NEXT = 0;
            END;
            EXIT;
          END;
      UNTIL ICGLEntry.NEXT = 0;
    END;

    LOCAL PROCEDURE CreateGenJnlLines@1100529612() : Boolean;
    VAR
      GenJournalBatch@1100529603 : Record 232;
      GenJournalLine@1100529600 : Record 81;
      LastGenJournalLine@1100529601 : Record 81;
      ICClearingRelationLoc@1100529606 : Record 11229426;
      NoSeriesMgt@1100529602 : Codeunit 396;
      DocumentNo@1100529604 : Code[20];
      GenJournalLineNo@1100529605 : Integer;
    BEGIN
      TmpGenJournalLine.RESET;
      IF TmpGenJournalLine.ISEMPTY THEN
        EXIT(FALSE);

      GenJournalBatch.GET(GLSetup."Intercompany Journal Template", GLSetup."Intercompany Batch Name");
      GenJournalBatch.TESTFIELD("No. Series");
      DocumentNo := NoSeriesMgt.TryGetNextNo(GenJournalBatch."No. Series", WORKDATE);

      LastGenJournalLine.SETRANGE("Journal Template Name", GLSetup."Intercompany Journal Template");
      LastGenJournalLine.SETRANGE("Journal Batch Name", GLSetup."Intercompany Batch Name");
      IF LastGenJournalLine.FINDLAST THEN BEGIN
        GenJournalLineNo := (LastGenJournalLine."Line No." DIV 10000) * 10000;
        IF (DocumentNo = '') AND (LastGenJournalLine."Document No." <> '') THEN
          DocumentNo := INCSTR(LastGenJournalLine."Document No.");
      END;

      FirstLineNo := GenJournalLineNo + 10000;

      TmpGenJournalLine.FINDSET;
      REPEAT
        GenJournalLineNo += 10000;

        GenJournalLine.INIT;
        GenJournalLine."Journal Template Name" := GLSetup."Intercompany Journal Template";
        GenJournalLine."Journal Batch Name" := GLSetup."Intercompany Batch Name";
        GenJournalLine."Line No." := GenJournalLineNo;
        GenJournalLine.INSERT(TRUE);

        GenJournalLine."System-Created Entry" := TRUE;
        GenJournalLine."Posting Date" := WORKDATE;
        GenJournalLine."Document Date" := WORKDATE;
        GenJournalLine."Document Type" := GenJournalLine."Document Type"::Invoice;
        GenJournalLine."Document No." := DocumentNo;
        GenJournalLine."Account Type" := TmpGenJournalLine."Account Type";
        IF TmpGenJournalLine."Account No." <> '' THEN
          GenJournalLine.VALIDATE("Account No.", TmpGenJournalLine."Account No.");
        GenJournalLine."Bal. Account Type" := TmpGenJournalLine."Bal. Account Type";
        GenJournalLine.VALIDATE("Bal. Account No.", TmpGenJournalLine."Bal. Account No.");
        GenJournalLine.VALIDATE(Amount, TmpGenJournalLine.Amount);
        GenJournalLine."Dimension Set ID" := TmpGenJournalLine."Dimension Set ID";
        GenJournalLine."Shortcut Dimension 1 Code" := TmpGenJournalLine."Shortcut Dimension 1 Code";
        GenJournalLine."Shortcut Dimension 2 Code" := TmpGenJournalLine."Shortcut Dimension 2 Code";
        GetLineDescription(TmpGenJournalLine."Account No.", TmpGenJournalLine.Description,
                           GenJournalLine.Description, GenJournalLine."Description 2");
        GenJournalLine."External Document No." := TmpGenJournalLine."External Document No.";
        GenJournalLine."IC Application" := TRUE;
        IF GenJournalLine."Account Type" = GenJournalLine."Account Type"::Vendor THEN
          GenJournalLine.Approved := TRUE;
        GenJournalLine.MODIFY;

        TmpICClearingRelation.SETRANGE("Journal Line No.", TmpGenJournalLine."Line No.");
        TmpICClearingRelation.FINDSET;
        REPEAT
          ICClearingRelationLoc := TmpICClearingRelation;
          ICClearingRelationLoc."Journal Template Name" := GenJournalLine."Journal Template Name";
          ICClearingRelationLoc."Journal Batch Name" := GenJournalLine."Journal Batch Name";
          ICClearingRelationLoc."Journal Line No." := GenJournalLine."Line No.";
          ICClearingRelationLoc.INSERT;
        UNTIL TmpICClearingRelation.NEXT = 0;

        DocumentNo := INCSTR(DocumentNo);
      UNTIL TmpGenJournalLine.NEXT = 0;
      LastLineNo := GenJournalLineNo;

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE GetLineDescription@1100529610(AccountNo@1100529601 : Code[20];AccountName@1100529602 : Text[100];VAR LineDescription@1100529600 : Text[100];VAR LineDescription2@1100529603 : Text[50]);
    BEGIN
      LineDescription := STRSUBSTNO(JournalLineDescription, WORKDATE);
      LineDescription2 := '';
      IF AccountNo <> '' THEN
        LineDescription := COPYSTR(LineDescription + ' ' + AccountNo, 1, MAXSTRLEN(LineDescription));
      IF AccountName <> '' THEN
        IF STRLEN(LineDescription + ' ' + AccountName) <= MAXSTRLEN(LineDescription) THEN
          LineDescription := LineDescription + ' ' + AccountName
        ELSE
          LineDescription2 := AccountName;
    END;

    LOCAL PROCEDURE DeleteGenJnlLines@1100529614() : Boolean;
    VAR
      GenJournalLine@1100529600 : Record 81;
    BEGIN
      GLSetup.GET;
      GLSetup.TESTFIELD("Intercompany Journal Template");
      GLSetup.TESTFIELD("Intercompany Batch Name");

      GenJournalLine.LOCKTABLE;
      GenJournalLine.SETRANGE("Journal Template Name", GLSetup."Intercompany Journal Template");
      GenJournalLine.SETRANGE("Journal Batch Name", GLSetup."Intercompany Batch Name");
      GenJournalLine.SETRANGE("IC Application", TRUE);
      GenJournalLine.DELETEALL(TRUE);
      COMMIT;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

