OBJECT Codeunit 11012574 CalculateOccupation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      InventoryRec@1210190000 : Record 11012555;
      StartingDate@1210190001 : Date;
      EndingDate@1210190002 : Date;

    PROCEDURE OccupationPercentage@1210190000(VAR IRec@1210190002 : Record 11012551;IPlantNo@1100485000 : Code[10];VAR ONoOfDaysMultQuan@1210190001 : Decimal;VAR ONoOfRentalDaysMultQuan@1210190000 : Decimal) Occupation@1210190003 : Decimal;
    VAR
      PlantRec@1210190004 : Record 11012551;
      lvNoOfDays@1210190005 : Integer;
    BEGIN
      //* IF the input argument 'Plant Number' (IPlantNo) is filled then calculate occupation on Plant Number level.
      PlantRec.COPY(IRec);

      ONoOfDaysMultQuan := 0;
      ONoOfRentalDaysMultQuan := 0;
      StartingDate := 0D;
      EndingDate := 99991231D;

      WITH PlantRec DO BEGIN
        IF GETFILTER("Date Filter") <> '' THEN BEGIN
          StartingDate := GETRANGEMIN("Date Filter");
          EndingDate := GETRANGEMAX("Date Filter");
        END;

        InventoryRec.RESET;
        InventoryRec.SETCURRENTKEY(Removed,"Plant Type","Plant No.");
        InventoryRec.SETRANGE(Removed,TRUE);
        InventoryRec.SETRANGE("Plant Type",Code);
        IF (IPlantNo <> '') THEN
          InventoryRec.SETRANGE("Plant No.",IPlantNo);
        InventoryRec.SETRANGE(Sold,FALSE);
        InventoryRec.SETFILTER(Quantity,'>0');
        IF GETFILTER("Date Filter") <> '' THEN BEGIN
          InventoryRec.SETFILTER("Present from",'..%1',GETRANGEMAX("Date Filter"));
          InventoryRec.SETFILTER("Removed on",'%1..',GETRANGEMIN("Date Filter"));
        END;
        IF InventoryRec.FINDSET THEN
          REPEAT
            lvNoOfDays := NumberOfDays();
            ONoOfDaysMultQuan := ONoOfDaysMultQuan + (InventoryRec.Quantity * lvNoOfDays);
            IF NOT InventoryRec.Depot THEN
              ONoOfRentalDaysMultQuan := ONoOfRentalDaysMultQuan + (InventoryRec.Quantity * lvNoOfDays);
          UNTIL InventoryRec.NEXT = 0;

        InventoryRec.SETRANGE(Removed,FALSE);
        InventoryRec.SETRANGE("Removed on");
        IF InventoryRec.FINDSET THEN
          REPEAT
            lvNoOfDays := NumberOfDays();
            ONoOfDaysMultQuan := ONoOfDaysMultQuan + (InventoryRec.Quantity * lvNoOfDays);
            IF NOT InventoryRec.Depot THEN
              ONoOfRentalDaysMultQuan := ONoOfRentalDaysMultQuan + (InventoryRec.Quantity * lvNoOfDays);
          UNTIL InventoryRec.NEXT = 0;

        IF ONoOfDaysMultQuan = 0 THEN
          Occupation := 0
        ELSE
          Occupation := ROUND(ONoOfRentalDaysMultQuan / ONoOfDaysMultQuan * 100, 0.01);

      END;
    END;

    LOCAL PROCEDURE NumberOfDays@11() NoOfDays@11012000 : Integer;
    VAR
      lvLocationRec@1210190001 : Record 11012554;
      lvOrderLineRec@1210190003 : Record 11012557;
      FirstDay@11012002 : Date;
      LastDay@11012003 : Date;
      lvDatePresentFrom@1210190002 : Date;
      lvDateRemovedOn@1210190000 : Date;
    BEGIN
      NoOfDays := 0;

      lvDatePresentFrom := InventoryRec."Present from";
      IF (InventoryRec."Arrival Order Type" = InventoryRec."Arrival Order Type"::"Plant Order") AND
         (InventoryRec.Depot) AND (lvDatePresentFrom >= StartingDate) AND (lvDatePresentFrom <= EndingDate)
      THEN BEGIN
        IF (lvOrderLineRec.GET(InventoryRec."Arrival Order", InventoryRec."Arrival Order Line")) THEN BEGIN
          IF (lvLocationRec.GET(lvOrderLineRec."From Location")) AND (NOT lvLocationRec.Depot) THEN
            lvDatePresentFrom := lvDatePresentFrom + 1;
        END;
      END;


      lvDateRemovedOn := InventoryRec."Removed on";
      IF (InventoryRec."Removal Order Type" = InventoryRec."Removal Order Type"::"Plant Order") AND
         (InventoryRec.Removed) AND (lvDateRemovedOn >= StartingDate) AND
         (lvDateRemovedOn <= EndingDate) AND (lvDateRemovedOn <= TODAY)
      THEN BEGIN
        InventoryRec.CALCFIELDS("Removed to Location");
        IF (InventoryRec."Removed to Location" <> '') THEN BEGIN
          IF InventoryRec.Depot THEN BEGIN
            lvDateRemovedOn := lvDateRemovedOn - 1;
          END ELSE BEGIN
            IF (lvLocationRec.GET(InventoryRec."Removed to Location")) AND (NOT lvLocationRec.Depot) THEN
              lvDateRemovedOn := lvDateRemovedOn - 1;
          END;
        END;
      END;

      IF lvDatePresentFrom < StartingDate THEN
        FirstDay := StartingDate
      ELSE
        FirstDay := lvDatePresentFrom;

      IF (lvDateRemovedOn > EndingDate) OR
         ((lvDateRemovedOn = 0D) AND (EndingDate <> 99991231D))
      THEN
        LastDay := EndingDate
      ELSE
        LastDay := lvDateRemovedOn;
      IF LastDay > TODAY THEN
        LastDay := TODAY;

      IF LastDay > 0D THEN
        NoOfDays := LastDay - FirstDay + 1;
      IF NoOfDays < 0 THEN
        NoOfDays := 0;
    END;

    BEGIN
    END.
  }
}

