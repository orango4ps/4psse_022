OBJECT Codeunit 6085921 DC Purchase Line Subscr.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW19.00.00.5.00.01,4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      PurchLineMatchedErr@6085574 : TextConst 'DEU=%1 %2 (%3 %4 - %5) ist abgeglichen auf %1 %6. Sie k”nnen %7 nicht auf abgeglichenen Zeilen „ndern.;ENU=%1 %2 (%3 %4 - %5) is matched to %1 %6. You cannot change %7 on matched lines.;NLD=%1 %2 (%3 %4 - %5) is gematched aan %1 %6. U kunt %7 niet veranderen op gematchte regels.';
      PurchLineRefTxt@6085573 : TextConst 'DEU="%1=%2, %3=%4, %5=%6";ENU="%1=%2, %3=%4, %5=%6";NLD="%1=%2, %3=%4, %5=%6"';

    [EventSubscriber(Table,39,OnBeforeInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnBeforeInsert@6085584(VAR Rec@6085573 : Record 39;RunTrigger@6085574 : Boolean);
    VAR
      PurchDocManagement@6085575 : Codeunit 6085709;
    BEGIN
      IF Rec.ISTEMPORARY THEN
        EXIT;

      SetSuspendStatusCheck(Rec,TRUE);
    END;

    [EventSubscriber(Table,39,OnBeforeDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnBeforeDelete@6085573(VAR Rec@6085573 : Record 39;RunTrigger@6085574 : Boolean);
    VAR
      PurchDocManagement@6085575 : Codeunit 6085709;
    BEGIN
      IF Rec.ISTEMPORARY THEN
        EXIT;

      PurchDocManagement.CheckMatchedToQtyOnDelete(Rec);
      SetSuspendStatusCheck(Rec,TRUE);
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,Type,Skip)]
    LOCAL PROCEDURE OnBeforeValidateType@6085614(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      TestPurchLineRelationship(Rec,Rec.FIELDNO(Type));
      SetSuspendStatusCheck(Rec,TRUE);
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"No.",Skip)]
    LOCAL PROCEDURE OnBeforeValidateNo@6085595(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      TestPurchLineRelationship(Rec,Rec.FIELDNO("No."));
      SetSuspendStatusCheck(Rec,TRUE);
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,Quantity,Skip)]
    LOCAL PROCEDURE OnBeforeValidateQuantity@6085650(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    VAR
      PurchDocManagement@6085576 : Codeunit 6085709;
    BEGIN
      IF Rec.ISTEMPORARY THEN
        EXIT;

      PurchDocManagement.CheckMatchedToQtyOnValidateQty(Rec);
      SetSuspendStatusCheck(Rec,TRUE);
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"Location Code",Skip)]
    LOCAL PROCEDURE OnBeforeValidateLocationCode@6085615(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      TestPurchLineRelationship(Rec,Rec.FIELDNO("Location Code"));
      SetSuspendStatusCheck(Rec,TRUE);
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"Job No.",Skip)]
    LOCAL PROCEDURE OnBeforeValidateJobNo@6085617(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      TestPurchLineRelationship(Rec,Rec.FIELDNO("Job No."));
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"Job Task No.",Skip)]
    LOCAL PROCEDURE OnBeforeValidateJobTaskNo@6085598(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      TestPurchLineRelationship(Rec,Rec.FIELDNO("Job Task No."));
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"Job Line Type",Skip)]
    LOCAL PROCEDURE OnBeforeValidateJobLineType@6085619(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      TestPurchLineRelationship(Rec,Rec.FIELDNO("Job Line Type"));
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"Job Unit Price",Skip)]
    LOCAL PROCEDURE OnBeforeValidateJobUnitPrice@6085599(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      TestPurchLineRelationship(Rec,Rec.FIELDNO("Job Unit Price"));
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"Job Line Amount",Skip)]
    LOCAL PROCEDURE OnBeforeValidateJobLineAmount@6085600(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      TestPurchLineRelationship(Rec,Rec.FIELDNO("Job Line Amount"));
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"Job Line Discount Amount",Skip)]
    LOCAL PROCEDURE OnBeforeValidateJobLineDiscountAmount@6085601(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      TestPurchLineRelationship(Rec,Rec.FIELDNO("Job Line Discount Amount"));
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"Job Line Discount %",Skip)]
    LOCAL PROCEDURE OnBeforeValidateJobLineDiscountPct@6085605(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      TestPurchLineRelationship(Rec,Rec.FIELDNO("Job Line Discount %"));
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"Job Unit Price (LCY)",Skip)]
    LOCAL PROCEDURE OnBeforeValidateJobUnitPriceLCY@6085604(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      TestPurchLineRelationship(Rec,Rec.FIELDNO("Job Unit Price (LCY)"));
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"Job Line Amount (LCY)",Skip)]
    LOCAL PROCEDURE OnBeforeValidateJobLineAmountLCY@6085603(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      TestPurchLineRelationship(Rec,Rec.FIELDNO("Job Line Amount (LCY)"));
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"Job Line Disc. Amount (LCY)",Skip)]
    LOCAL PROCEDURE OnBeforeValidateJobLineDiscAmountLCY@6085606(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      TestPurchLineRelationship(Rec,Rec.FIELDNO("Job Line Disc. Amount (LCY)"));
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"Variant Code",Skip)]
    LOCAL PROCEDURE OnBeforeValidateVariantCode@6085608(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      IF xRec."Variant Code" <> Rec."Variant Code" THEN
        TestPurchLineRelationship(Rec,Rec.FIELDNO("Variant Code"));
      SetSuspendStatusCheck(Rec,TRUE);
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"Unit of Measure Code",Skip)]
    LOCAL PROCEDURE OnBeforeValidateUnitOfMeasureCode@6085621(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      IF Rec."Unit of Measure Code" <> xRec."Unit of Measure Code" THEN
        TestPurchLineRelationship(Rec,Rec.FIELDNO("Unit of Measure Code"));
      SetSuspendStatusCheck(Rec,TRUE);
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"Line Discount %",Skip)]
    LOCAL PROCEDURE OnBeforeValidateLineDiscountPct@6085592(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      SetSuspendStatusCheck(Rec,TRUE);
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"Line Discount Amount",Skip)]
    LOCAL PROCEDURE OnBeforeValidateLineDiscountAmount@6085594(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      SetSuspendStatusCheck(Rec,TRUE);
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"Planned Receipt Date",Skip)]
    LOCAL PROCEDURE OnBeforeValidatePlannedReceiiptDate@6085602(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      SetSuspendStatusCheck(Rec,TRUE);
    END;

    [EventSubscriber(Table,39,OnBeforeValidateEvent,"VAT Prod. Posting Group",Skip)]
    LOCAL PROCEDURE OnBeforeValidateVATProdPostingGroup@6085623(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      SetSuspendStatusCheck(Rec,TRUE);
    END;

    [EventSubscriber(Table,39,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsert@6085587(VAR Rec@6085573 : Record 39;RunTrigger@6085574 : Boolean);
    VAR
      PurchDocManagement@6085575 : Codeunit 6085709;
    BEGIN
      IF Rec.ISTEMPORARY THEN
        EXIT;

      SetSuspendStatusCheck(Rec,FALSE);
    END;

    [EventSubscriber(Table,39,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDelete@6085574(VAR Rec@6085573 : Record 39;RunTrigger@6085574 : Boolean);
    VAR
      PurchDocManagement@6085575 : Codeunit 6085709;
    BEGIN
      IF Rec.ISTEMPORARY THEN
        EXIT;

      SetSuspendStatusCheck(Rec,FALSE);
      PurchDocManagement.PurchLineOnDelete(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,Type,Skip)]
    LOCAL PROCEDURE OnAfterValidateType@6085575(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      SetSuspendStatusCheck(Rec,FALSE);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"No.",Skip)]
    LOCAL PROCEDURE OnAfterValidateNo@6085637(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      SetSuspendStatusCheck(Rec,FALSE);
      UpdPurchLineJobPricesFromMatch(Rec);

      //IF Rec.Type = Rec.Type::"G/L Account" THEN //**4PS.n
      //  Rec.VALIDATE("Direct Unit Cost",xRec."Direct Unit Cost"); //**4PS.n
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,Quantity,Skip)]
    LOCAL PROCEDURE OnAfterValidateQuantity@6085590(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    VAR
      PurchLine@6085576 : Record 39;
    BEGIN
      SetSuspendStatusCheck(Rec,FALSE);
      UpdPurchLineJobPricesFromMatch(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Location Code",Skip)]
    LOCAL PROCEDURE OnAfterValidateLocationCode@6085577(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    VAR
      PurchLine@6085576 : Record 39;
    BEGIN
      SetSuspendStatusCheck(Rec,FALSE);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Unit Cost (LCY)",Skip)]
    LOCAL PROCEDURE OnAfterValidateUnitCostLCY@6085591(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    VAR
      PurchLine@6085576 : Record 39;
    BEGIN
      UpdPurchLineJobPricesFromMatch(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Job Task No.",Skip)]
    LOCAL PROCEDURE OnAfterValidateJobTaskNo@6085639(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      UpdPurchLineJobPricesFromMatch(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Job Unit Price",Skip)]
    LOCAL PROCEDURE OnAfterValidateJobUnitPrice@6085640(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      UpdPurchLineJobPricesFromMatch(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Job Line Amount",Skip)]
    LOCAL PROCEDURE OnAfterValidateJobLineAmount@6085641(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      UpdPurchLineJobPricesFromMatch(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Job Line Discount Amount",Skip)]
    LOCAL PROCEDURE OnAfterValidateJobLineDiscountAmount@6085642(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      UpdPurchLineJobPricesFromMatch(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Job Line Discount %",Skip)]
    LOCAL PROCEDURE OnAfterValidateJobLineDiscountPct@6085647(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      UpdPurchLineJobPricesFromMatch(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Job Unit Price (LCY)",Skip)]
    LOCAL PROCEDURE OnAfterValidateJobUnitPriceLCY@6085646(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      UpdPurchLineJobPricesFromMatch(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Job Line Amount (LCY)",Skip)]
    LOCAL PROCEDURE OnAfterValidateJobLineAmountLCY@6085645(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      UpdPurchLineJobPricesFromMatch(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Job Line Disc. Amount (LCY)",Skip)]
    LOCAL PROCEDURE OnAfterValidateJobLineDiscAmountLCY@6085644(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      UpdPurchLineJobPricesFromMatch(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Variant Code",Skip)]
    LOCAL PROCEDURE OnAfterValidateVariantCode@6085609(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    VAR
      PurchLine@6085576 : Record 39;
    BEGIN
      SetSuspendStatusCheck(Rec,FALSE);
      UpdPurchLineJobPricesFromMatch(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Unit of Measure Code",Skip)]
    LOCAL PROCEDURE OnAfterValidateUnitOfMeasureCode@6085627(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      SetSuspendStatusCheck(Rec,FALSE);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Line Discount %",Skip)]
    LOCAL PROCEDURE OnAfterValidateLineDiscountPct@6085597(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    VAR
      PurchLine@6085576 : Record 39;
    BEGIN
      SetSuspendStatusCheck(Rec,FALSE);
      UpdPurchLineJobPricesFromMatch(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Line Discount Amount",Skip)]
    LOCAL PROCEDURE OnAfterValidateLineDiscountAmount@6085633(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    VAR
      PurchLine@6085576 : Record 39;
    BEGIN
      SetSuspendStatusCheck(Rec,FALSE);
      UpdPurchLineJobPricesFromMatch(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,Amount,Skip)]
    LOCAL PROCEDURE OnAfterValidateAmount@6085632(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    VAR
      PurchLine@6085576 : Record 39;
    BEGIN
      UpdPurchLineJobPricesFromMatch(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Amount Including VAT",Skip)]
    LOCAL PROCEDURE OnAfterValidateAmountIncludingVAT@6085631(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    VAR
      PurchLine@6085576 : Record 39;
    BEGIN
      UpdPurchLineJobPricesFromMatch(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Allow Invoice Disc.",Skip)]
    LOCAL PROCEDURE OnAfterValidateAllowInvoiceDisc@6085630(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    VAR
      PurchLine@6085576 : Record 39;
    BEGIN
      UpdPurchLineJobPricesFromMatch(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Indirect Cost %",Skip)]
    LOCAL PROCEDURE OnAfterValidateIndirectCostPct@6085629(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    VAR
      PurchLine@6085576 : Record 39;
    BEGIN
      UpdPurchLineJobPricesFromMatch(Rec);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Inv. Discount Amount",Skip)]
    LOCAL PROCEDURE OnAfterValidateInvDiscountAmount@6085628(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    VAR
      PurchLine@6085576 : Record 39;
    BEGIN
      SetSuspendStatusCheck(Rec,FALSE);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Planned Receipt Date",Skip)]
    LOCAL PROCEDURE OnAfterValidatePlannedReceiiptDate@6085612(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      SetSuspendStatusCheck(Rec,FALSE);
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"VAT Prod. Posting Group",Skip)]
    LOCAL PROCEDURE OnAfterValidateVATProdPostingGroup@6085624(VAR Rec@6085573 : Record 39;VAR xRec@6085574 : Record 39;CurrFieldNo@6085575 : Integer);
    BEGIN
      SetSuspendStatusCheck(Rec,FALSE);
    END;

    LOCAL PROCEDURE UpdPurchLineJobPricesFromMatch@6085596(VAR PurchLine@6085574 : Record 39);
    VAR
      JobAndDimMgt@6085573 : Codeunit 6086004;
    BEGIN
      IF PurchLine.ISTEMPORARY THEN
        EXIT;

      IF PurchLine.JobTaskIsSet THEN
        JobAndDimMgt.UpdPurchLineJobPricesFromMatch(PurchLine);
    END;

    LOCAL PROCEDURE TestPurchLineRelationship@6085611(VAR PurchLine@6085573 : Record 39;FieldNumber@6085576 : Integer);
    VAR
      PurchLineRel@6085575 : Record 6085702;
      RelatedPurchLine@6085579 : Record 39;
      Field@6085577 : Record 2000000041;
      TempTxt1@6085574 : Text[250];
      TempTxt2@6085578 : Text[250];
    BEGIN
      IF PurchLine.ISTEMPORARY THEN
        EXIT;

      IF PurchLineRel.GET(PurchLine."Document Type",PurchLine."Document No.",PurchLine."Line No.") THEN
        // Code called via Event so we can not used std. NAV function call on table to supress validation code. Using field in table instead of
        // Single Instance codeunit as variables in Single instance codeunit is retained when an error happens
        IF NOT PurchLineRel."Suppress Matched Error" THEN BEGIN
          Field.GET(DATABASE::"Purchase Line",FieldNumber);

          TempTxt1 := STRSUBSTNO(PurchLineRefTxt,PurchLine.FIELDCAPTION("Document Type"),PurchLine."Document Type",
            PurchLine.FIELDCAPTION("Document No."),PurchLine."Document No.",PurchLine.FIELDCAPTION("Line No."),PurchLine."Line No.");

          TempTxt2 := STRSUBSTNO(PurchLineRefTxt,PurchLine.FIELDCAPTION("Document Type"),PurchLineRel."Related Document Type",
            PurchLine.FIELDCAPTION("Document No."),PurchLineRel."Related Document No.",PurchLine.FIELDCAPTION("Line No."),PurchLineRel."Related Line No.");

          ERROR(PurchLineMatchedErr,PurchLine.TABLECAPTION,TempTxt1,PurchLine.Type,PurchLine."No.",PurchLine.Description,TempTxt2,Field."Field Caption");
        END;
    END;

    LOCAL PROCEDURE SetSuspendStatusCheck@6085576(VAR Rec@6085573 : Record 39;Suspend@6085574 : Boolean);
    VAR
      PurchHeader@6085575 : Record 38;
    BEGIN
      IF Rec."Document Type" IN [Rec."Document Type"::Invoice, Rec."Document Type"::"Credit Memo"] THEN BEGIN
        IF PurchHeader.GET(Rec."Document Type",Rec."Document No.") THEN
          IF PurchHeader.Status = PurchHeader.Status::"Pending Approval" THEN
            Rec.SuspendStatusCheck(Suspend);
      END;
    END;

    BEGIN
    END.
  }
}

