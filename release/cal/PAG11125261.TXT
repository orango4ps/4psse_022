OBJECT Page 11125261 Service Order Inspection Lines
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Serviceinspektionszeilen;
               ENU=Service Order Inspection Lines;
               NLD=Serviceorder inspectieregels;
               NOR=Serviceordre, inspeksjonsrader;
               SVE=Inspektionsrader f”r serviceorder];
    InsertAllowed=No;
    SourceTable=Table11071753;
    DataCaptionFields=Service Order No.,Service Object No.;
    PageType=List;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             ValueEditable := TRUE;
           END;

    OnAfterGetRecord=VAR
                       ServiceOrderInspectionLine@1100528100 : Record 11071753;
                     BEGIN
                       TmpValue := GetValue;
                       OnAfterGetCurrRecord;
                       DescriptionOnFormat;
                       DependingOnLineNo := 0;
                       IF "Depending on Id" <> '' THEN BEGIN
                         ServiceOrderInspectionLine.SETRANGE("Service Order No.", "Service Order No.");
                         ServiceOrderInspectionLine.SETRANGE("Service Object No.", "Service Object No.");
                         ServiceOrderInspectionLine.SETRANGE("Maintenance Scheme Code", "Maintenance Scheme Code");
                         ServiceOrderInspectionLine.SETRANGE(Id, "Depending on Id");
                         IF ServiceOrderInspectionLine.FINDFIRST THEN
                           DependingOnLineNo := ServiceOrderInspectionLine."Line No.";
                       END;
                     END;

    OnNewRecord=BEGIN
                  TmpValue := '';
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1100528604;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100528606;1 ;Action    ;
                      CaptionML=[DEU=Belege;
                                 ENU=Documents;
                                 NLD=Documenten;
                                 NOR=Dokument;
                                 SVE=Dokument];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Documents;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TESTFIELD(Type, Type::Line);
                                 ShowDocuments;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100528600;1;Group  ;
                IndentationColumnName=DescriptionIndentationValue;
                IndentationControls=Description;
                GroupType=Repeater }

    { 1100528601;2;Field  ;
                SourceExpr="Service Order No.";
                Visible=FALSE }

    { 1100528603;2;Field  ;
                SourceExpr="Service Object No.";
                Visible=FALSE }

    { 1100528605;2;Field  ;
                SourceExpr="Maintenance Scheme Code";
                Visible=FALSE }

    { 1100528607;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE }

    { 1100528609;2;Field  ;
                SourceExpr="Inspection Type";
                Visible=FALSE }

    { 1100528611;2;Field  ;
                SourceExpr="Service Contract No.";
                Visible=FALSE }

    { 1100528613;2;Field  ;
                SourceExpr=Code;
                Visible=FALSE }

    { 1100528615;2;Field  ;
                SourceExpr="Index Date";
                Visible=FALSE }

    { 1100528632;2;Field  ;
                SourceExpr="Inspection Line No.";
                Visible=FALSE }

    { 1100528617;2;Field  ;
                SourceExpr=Type;
                Visible=FALSE }

    { 1100528619;2;Field  ;
                SourceExpr="Inspection Code" }

    { 1100528621;2;Field  ;
                SourceExpr=Description;
                Style=Strong;
                StyleExpr=DescriptionEmphasize }

    { 1100529500;2;Field  ;
                SourceExpr="Description 2";
                Style=Strong;
                StyleExpr=DescriptionEmphasize }

    { 1100528623;2;Field  ;
                SourceExpr="Field Type" }

    { 1100528625;2;Field  ;
                CaptionML=[DEU=Wert;
                           ENU=Value;
                           NLD=Waarde;
                           NOR=Verdi;
                           SVE=V„rde];
                SourceExpr=TmpValue;
                Editable=ValueEditable;
                StyleExpr=ValueStyle;
                OnValidate=BEGIN
                             VALIDATE(Value, TmpValue);
                             CurrPage.UPDATE(TRUE);
                           END;

                OnLookup=BEGIN
                           UpdateEditable;

                           IF ValueEditable THEN BEGIN
                             IF LookupValue(TmpValue) THEN BEGIN
                               VALIDATE(Value, TmpValue);
                               CurrPage.UPDATE(TRUE);
                             END;
                           END;
                         END;
                          }

    { 1100528627;2;Field  ;
                SourceExpr="Unit Of Measure" }

    { 1210190000;2;Field  ;
                SourceExpr=Mandatory }

    { 1100528602;2;Field  ;
                SourceExpr=Comment;
                Editable=ValueEditable }

    { 1100525000;2;Field  ;
                CaptionML=[DEU=Belege;
                           ENU=Documents;
                           NLD=Documenten;
                           NOR=Dokument;
                           SVE=Dokument];
                SourceExpr=DocumentsExists }

    { 1100528608;2;Field  ;
                SourceExpr="Lower Value" }

    { 1100528610;2;Field  ;
                SourceExpr="Upper Value" }

    { 1100528100;2;Field  ;
                CaptionML=[DEU=Abh„ngig von Zeilennr.;
                           ENU=Depending on Line No.;
                           NLD=Afhankelijk van regelnr.];
                BlankZero=Yes;
                SourceExpr=DependingOnLineNo;
                Visible=false;
                Editable=false }

    { 1100528101;2;Field  ;
                SourceExpr="Depending Condition";
                Visible=false }

    { 1100528102;2;Field  ;
                SourceExpr="Dependency Effect";
                Visible=false }

  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'DEU=šberischt Inspektionszeilen;ENU=Inspection Line List;NLD=Overzicht inspectieregels;NOR=Inspeksjonsradliste;SVE=Lista f”r inspektionsrader';
      DescriptionEmphasize@19010547 : Boolean INDATASET;
      DescriptionIndentationValue@1100525000 : Integer INDATASET;
      ValueEditable@19072790 : Boolean INDATASET;
      TmpValue@1100528601 : Text[80];
      ValueStyle@1100528100 : Text;
      DependingOnLineNo@1100528101 : Integer;

    PROCEDURE UpdateEditable@1100528600();
    VAR
      ServiceOrderInspectionLine@1100528100 : Record 11071753;
    BEGIN
      ValueEditable := Type = Type::Line;

      IF ValueEditable AND ("Depending on Id" <> '') THEN BEGIN
        ServiceOrderInspectionLine.SETRANGE("Service Order No.", "Service Order No.");
        ServiceOrderInspectionLine.SETRANGE("Service Object No.", "Service Object No.");
        ServiceOrderInspectionLine.SETRANGE("Maintenance Scheme Code", "Maintenance Scheme Code");
        ServiceOrderInspectionLine.SETRANGE(Id, "Depending on Id");

        IF ServiceOrderInspectionLine.FINDFIRST THEN BEGIN
          ValueEditable := IsLineEditableBasedOnDependency(ServiceOrderInspectionLine, Rec);
        END;
      END;

      IF ValueEditable THEN
        ValueStyle := 'Standard'
      ELSE
        ValueStyle := 'Subordinate';
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      IF "Service Order No." = '' THEN BEGIN
        CurrPage.CAPTION := Text000;
        CurrPage.EDITABLE := FALSE;
      END;

      UpdateEditable;
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      DescriptionEmphasize := FALSE;
      DescriptionIndentationValue := 0;
      IF Type = Type::Group THEN
        DescriptionEmphasize := TRUE
      ELSE
        DescriptionIndentationValue := 1;
    END;

    BEGIN
    END.
  }
}

