OBJECT Table 11012199 Target Amounts
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnModify=VAR
               lvEstPartRec@1100528900 : Record 11072073;
               lvSubEstRec@1100528901 : Record 11072074;
             BEGIN
               CASE Type OF
                 Type::"Sub-Estimate":
                   BEGIN
                     lvSubEstRec.GET("Estimate No.", "Sub-Estimate No.");
                     lvSubEstRec."Target Hours" := "Target Hours";
                     lvSubEstRec."Target Amount Labor" := "Target Amount Labor";
                     lvSubEstRec."Target Amount Material" := "Target Amount Material";
                     lvSubEstRec."Target Amount Subcontracting" := "Target Amount Subcontracting";
                     lvSubEstRec."Target Amount Plant" := "Target Amount Plant";
                     lvSubEstRec.MODIFY;
                   END;
                 Type::Part:
                   BEGIN
                     lvEstPartRec.GET("Estimate No.", "Sub-Estimate No.", "Part Group", Part);
                     lvEstPartRec."Target Hours" := "Target Hours";
                     lvEstPartRec."Target Amount Labor" := "Target Amount Labor";
                     lvEstPartRec."Target Amount Material" := "Target Amount Material";
                     lvEstPartRec."Target Amount Subcontracting" := "Target Amount Subcontracting";
                     lvEstPartRec."Target Amount Plant" := "Target Amount Plant";
                     lvEstPartRec.MODIFY;
                   END;
               END;
             END;

    CaptionML=[ENU=Target Amounts;
               NOR=M†l (bel›p);
               SVE=M†lbelopp];
  }
  FIELDS
  {
    { 10  ;   ;Estimate No.        ;Code20        ;TableRelation=Estimate.No.;
                                                   CaptionML=[ENU=Estimate No.;
                                                              NOR=Kalkylenr;
                                                              SVE=Kalkylnr];
                                                   Editable=No }
    { 11  ;   ;Estimate Description;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Estimate.Description WHERE (No.=FIELD(Estimate No.)));
                                                   CaptionML=[ENU=Estimate Description;
                                                              NOR=Kalkylebeskrivelse;
                                                              SVE=Kalkylbeskrivning];
                                                   Editable=No }
    { 20  ;   ;Sub-Estimate No.    ;Code20        ;TableRelation=Sub-Estimate."Sub-Estimate No." WHERE (Estimate No.=FIELD(Estimate No.));
                                                   CaptionML=[ENU=Sub-Estimate No.;
                                                              NOR=Delkalkylenummer;
                                                              SVE=Delkalkylnr];
                                                   Editable=No }
    { 21  ;   ;Sub-Estimate Description;Text50    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Sub-Estimate.Description WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                      Sub-Estimate No.=FIELD(Sub-Estimate No.)));
                                                   CaptionML=[ENU=Sub-Estimate Description;
                                                              NOR=Beskrivelse av delkalkyle;
                                                              SVE=Beskrivning av delkalkyl];
                                                   Editable=No }
    { 30  ;   ;Part Group          ;Code10        ;TableRelation="Estimate Part"."Part Group" WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                     Sub-Estimate No.=FIELD(Sub-Estimate No.));
                                                   CaptionML=[ENU=Part Group;
                                                              NOR=Del gruppe;
                                                              SVE=Delgrupp];
                                                   Editable=No }
    { 40  ;   ;Part                ;Code20        ;TableRelation="Estimate Part".Part WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                             Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                                                                             Part Group=FIELD(Part Group));
                                                   CaptionML=[ENU=Part;
                                                              NOR=Del;
                                                              SVE=Del];
                                                   Editable=No }
    { 50  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning];
                                                   Editable=No }
    { 60  ;   ;Level (Sub-Estimate);Integer       ;CaptionML=[ENU=Level (Sub-Estimate);
                                                              NOR=Niv† (Delkalkyle);
                                                              SVE=Niv† (delkalkyl)];
                                                   Editable=No }
    { 65  ;   ;Level (Part)        ;Integer       ;CaptionML=[ENU=Level (Part);
                                                              NOR=Niv† (Del);
                                                              SVE=Niv† (del)];
                                                   Editable=No }
    { 70  ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=Estimate,Sub-Estimate,Part;
                                                                    NOR=Kalkyle,Delkalkyle,Del;
                                                                    SVE=Kalkyl,Delkalkyl,Del];
                                                   OptionString=Estimate,Sub-Estimate,Part;
                                                   Editable=No }
    { 80  ;   ;Chapter (Sub-Estimate);Code20      ;CaptionML=[ENU=Chapter (Sub-Estimate);
                                                              NOR=Kapittel (Delkalkyle);
                                                              SVE=Kapitel (delkalkyl)] }
    { 81  ;   ;Chapter (Part)      ;Code20        ;CaptionML=[ENU=Chapter (Part);
                                                              NOR=Kapittel (Del);
                                                              SVE=Kapitel (del)] }
    { 82  ;   ;Paragraph (Part)    ;Code20        ;CaptionML=[ENU=Paragraph (Part);
                                                              NOR=Avsnitt (Del);
                                                              SVE=Stycke (del)] }
    { 85  ;   ;Paragraph (Sub-Estimate);Code20    ;CaptionML=[ENU=Paragraph (Sub-Estimate);
                                                              NOR=Avsnitt (Delkalkyle);
                                                              SVE=Stycke (delkalkyl)] }
    { 100 ;   ;Target Hours        ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Target Amount Labor", 0);
                                                              END;

                                                   CaptionML=[ENU=Target Hours;
                                                              NOR=M†ltimer;
                                                              SVE=M†ltimmar] }
    { 101 ;   ;Target Amount Labor ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Target Hours", 0);
                                                              END;

                                                   CaptionML=[ENU=Target Amount Labor;
                                                              NOR=M†lbel›p for arbeidskraft;
                                                              SVE=M†lbelopp f”r arbetskraft] }
    { 102 ;   ;Target Amount Material;Decimal     ;CaptionML=[ENU=Target Amount Material;
                                                              NOR=M†lbel›p for Materiale;
                                                              SVE=M†lbelopp f”r material] }
    { 103 ;   ;Target Amount Subcontracting;Decimal;
                                                   CaptionML=[ENU=Target Amount Subcontracting;
                                                              NOR=M†lbel›p for underentrepen›r;
                                                              SVE=M†lbelopp f”r underentreprenad] }
    { 104 ;   ;Target Amount Plant ;Decimal       ;CaptionML=[ENU=Target Amount Plant;
                                                              NOR=M†lbel›p for maskin;
                                                              SVE=M†lbelopp f”r Maskin] }
    { 200 ;   ;Original Hours      ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Target Amount Labor", 0);
                                                              END;

                                                   CaptionML=[ENU=Hours (not adjusted);
                                                              NOR=Timer (ikke justert);
                                                              SVE=Timmar (inte justerade)] }
    { 201 ;   ;Original Amount Labor;Decimal      ;OnValidate=BEGIN
                                                                TESTFIELD("Target Hours", 0);
                                                              END;

                                                   CaptionML=[ENU=Amount Labor (not adjusted);
                                                              NOR=Bel›p, arbeidskraft (ikke justert);
                                                              SVE=Belopp, arbetskraft (inte justerat)] }
    { 202 ;   ;Original Amount Material;Decimal   ;CaptionML=[ENU=Amount Material (not adjusted);
                                                              NOR=Bel›p, Materiale (ikke justert);
                                                              SVE=Belopp, material (inte justerat)] }
    { 203 ;   ;Original Amount Subcontracting;Decimal;
                                                   CaptionML=[ENU=Amount Subcontracting (not adjusted);
                                                              NOR=Bel›p, underentrepen›r (ikke justert);
                                                              SVE=Belopp, underentreprenad (inte justerat)] }
    { 204 ;   ;Original Amount Plant;Decimal      ;CaptionML=[ENU=Amount Plant (not adjusted);
                                                              NOR=Bel›p, maskin (ikke justert);
                                                              SVE=Belopp, Maskin (inte justerat)] }
  }
  KEYS
  {
    {    ;Estimate No.,Sub-Estimate No.,Part Group,Part;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CurrLevel@1100485000 : Integer;
      sp1@1100485001 : Integer;
      sp2@1100485002 : Integer;
      dummyDec@1100485003 : Decimal;

    PROCEDURE BuildStructure@1210190000(IEstNo@1210190000 : Code[20]);
    VAR
      lvEstRec@1210190004 : Record 11012151;
      lvTargetAmtRec@1210190001 : Record 11012199;
      lvEstPartRec@1100528901 : Record 11072073;
      lvSubEstRec@1100528900 : Record 11072074;
    BEGIN
      WITH lvTargetAmtRec DO BEGIN
        DeleteStructure(IEstNo);
        IF NOT lvEstRec.GET(IEstNo) THEN
          EXIT;

        lvSubEstRec.SETRANGE("Estimate No.", IEstNo);
        IF lvSubEstRec.FINDSET THEN BEGIN
          REPEAT
            INIT;
            "Estimate No." := IEstNo;
            "Sub-Estimate No." := lvSubEstRec."Sub-Estimate No.";
            "Part Group" := '';
            Part := '';
            Description := lvSubEstRec.Description;
            "Level (Sub-Estimate)" := lvSubEstRec.Level;
            Type := Type::"Sub-Estimate";
            "Chapter (Sub-Estimate)" := lvSubEstRec.Chapter;
            "Paragraph (Sub-Estimate)" := lvSubEstRec.Paragraph;
            "Target Hours" := lvSubEstRec."Target Hours";
            "Target Amount Labor" := lvSubEstRec."Target Amount Labor";
            "Target Amount Material" := lvSubEstRec."Target Amount Material";
            "Target Amount Subcontracting" := lvSubEstRec."Target Amount Subcontracting";
            "Target Amount Plant" := lvSubEstRec."Target Amount Plant";
            INSERT;
            CalcFieldsAmounts(lvTargetAmtRec,
              "Original Hours", "Original Amount Labor", "Original Amount Material",
              "Original Amount Subcontracting", "Original Amount Plant", dummyDec, TRUE);
            MODIFY;

            lvEstPartRec.SETRANGE("Estimate No.", IEstNo);
            lvEstPartRec.SETRANGE("Sub-Estimate No.", lvSubEstRec."Sub-Estimate No.");
            IF lvEstPartRec.FINDSET THEN BEGIN
              REPEAT
                INIT;
                "Estimate No." := IEstNo;
                "Sub-Estimate No." := lvSubEstRec."Sub-Estimate No.";
                "Part Group" := lvEstPartRec."Part Group";
                Part := lvEstPartRec.Part;
                Description := lvEstPartRec.Description;
                "Level (Sub-Estimate)" := lvSubEstRec.Level;
                "Level (Part)" := lvEstPartRec.Level;
                Type := Type::Part;
                "Chapter (Sub-Estimate)" := lvSubEstRec.Chapter;
                "Chapter (Part)" := lvEstPartRec.Chapter;
                "Paragraph (Part)" := lvEstPartRec.Paragraph;
                "Target Hours" := lvEstPartRec."Target Hours";
                "Target Amount Labor" := lvEstPartRec."Target Amount Labor";
                "Target Amount Material" := lvEstPartRec."Target Amount Material";
                "Target Amount Subcontracting" := lvEstPartRec."Target Amount Subcontracting";
                "Target Amount Plant" := lvEstPartRec."Target Amount Plant";
                INSERT;
                CalcFieldsAmounts(lvTargetAmtRec,
                  "Original Hours", "Original Amount Labor", "Original Amount Material",
                  "Original Amount Subcontracting", "Original Amount Plant", dummyDec, TRUE);
                MODIFY;
              UNTIL lvEstPartRec.NEXT = 0;
            END;

          UNTIL lvSubEstRec.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE DeleteStructure@1210190001(IEstNo@1210190000 : Code[20]);
    VAR
      lvTargetAmtRec@1210190001 : Record 11012199;
    BEGIN
      lvTargetAmtRec.SETRANGE("Estimate No.", IEstNo);
      lvTargetAmtRec.DELETEALL;
    END;

    PROCEDURE CheckFormat@1100485000(lvAction@1100485006 : Integer;VAR sp1@1100485004 : Integer;VAR sp2@1100485005 : Integer);
    VAR
      EstSetupRec@11012000 : Record 11012150;
      lvText000@1100485000 : TextConst 'ENU=only 3 levels allowed;NOR=kun tre niv†er tillates;SVE=endast tre niv†er till†ts';
      x@1100485002 : Integer;
      lp@1100485001 : Integer;
      Frmt@1100485003 : Code[20];
    BEGIN
      x := 0;
      sp1 := 0;
      sp2 := 0;

      EstSetupRec.GET();
      IF lvAction = 1 THEN BEGIN
        EstSetupRec.TESTFIELD("Sub-Estimate Format");
        Frmt := EstSetupRec."Sub-Estimate Format";
      END;

      IF lvAction = 2 THEN BEGIN
        EstSetupRec.TESTFIELD("Part Format");
        Frmt := EstSetupRec."Part Format";
      END;

      lp := STRLEN(Frmt);

      REPEAT
        x := x + 1;
        IF COPYSTR(Frmt,x,1) = '.' THEN BEGIN
          IF sp1 = 0 THEN
            sp1 := x
          ELSE
            IF sp2 = 0 THEN
              sp2 :=x
            ELSE
              ERROR(lvText000);
        END;
      UNTIL x = lp;
    END;

    PROCEDURE GetOrigAmount@1100485001(ITargetAmntRec@1100485001 : Record 11012199;CurrLevel@1100485002 : Integer;VAR OrigHours@1100485000 : Decimal;VAR OrigLabor@1100485008 : Decimal;VAR OrigMaterial@1100485007 : Decimal;VAR OrigSubc@1100485006 : Decimal;VAR OrigPlant@1100485005 : Decimal);
    VAR
      EstLineRec@1100528900 : Record 11072072;
      RcpLineRec@1100528901 : Record 11072075;
      EstimateLineTotal@1100528902 : Record 11072077;
    BEGIN
      OrigHours := 0;
      OrigLabor := 0;
      OrigMaterial := 0;
      OrigSubc := 0;
      OrigPlant := 0;
      //OrigTotal := 0;

      WITH ITargetAmntRec DO BEGIN
        EstLineRec.RESET;
        EstLineRec.SETRANGE("Estimate No.", "Estimate No.");
        IF Type = Type::"Sub-Estimate" THEN BEGIN
          IF CurrLevel = 0 THEN
            EstLineRec.SETRANGE("Chapter (Sub-Estimate)", "Chapter (Sub-Estimate)");
          IF CurrLevel = 1 THEN
            EstLineRec.SETRANGE("Paragraph (Sub-Estimate)", "Paragraph (Sub-Estimate)");
          IF CurrLevel = 2 THEN
            EstLineRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
        END;
        IF Type = Type::Part THEN BEGIN
          EstLineRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
          EstLineRec.SETRANGE("Part Group", "Part Group");
          IF CurrLevel = 1 THEN
            EstLineRec.SETRANGE(Chapter, "Chapter (Part)");
          IF CurrLevel = 2 THEN
            EstLineRec.SETRANGE(Paragraph, "Paragraph (Part)");
          IF CurrLevel = 3 THEN
            EstLineRec.SETRANGE(Part, Part);
        END;
        IF EstLineRec.FINDSET THEN BEGIN
          REPEAT
            IF NOT EstimateLineTotal.GET(EstLineRec."Estimate No.", EstLineRec."Sub-Estimate No.", EstLineRec."Part Group", EstLineRec.Part, EstLineRec."Line No.") THEN
              EstimateLineTotal.INIT;
            IF EstLineRec.Recipe = '' THEN BEGIN
              IF EstLineRec."Cum. Adj. Factor Hours" = 0 THEN
                EstLineRec."Cum. Adj. Factor Hours" := 1;
              IF EstLineRec."Cum. Adj. Factor Price" = 0 THEN
                EstLineRec."Cum. Adj. Factor Price" := 1;
              OrigHours := OrigHours + (EstimateLineTotal."Cumulative Hours" / EstLineRec."Cum. Adj. Factor Hours");
              OrigLabor := OrigLabor + (EstimateLineTotal."Cumulative Labor" / EstLineRec."Cum. Adj. Factor Hours");
              IF EstLineRec."Cost Type (Price)" = EstLineRec."Cost Type (Price)"::Material THEN
                OrigMaterial := OrigMaterial + (EstimateLineTotal."Cumulative Material" / EstLineRec."Cum. Adj. Factor Price");
              IF EstLineRec."Cost Type (Price)" = EstLineRec."Cost Type (Price)"::Subcontracting THEN
                OrigSubc := OrigSubc + (EstimateLineTotal."Cumulative Subcontracting" / EstLineRec."Cum. Adj. Factor Price");
              IF EstLineRec."Cost Type (Price)" = EstLineRec."Cost Type (Price)"::Plant THEN
                OrigPlant := OrigPlant + (EstimateLineTotal."Cumulative Plant" / EstLineRec."Cum. Adj. Factor Price");
            END ELSE BEGIN
              //db: Receipt Header has no adjustment factor
              RcpLineRec.SETRANGE("Estimate No.", EstLineRec."Estimate No.");
              RcpLineRec.SETRANGE("Sub-Estimate No.", EstLineRec."Sub-Estimate No.");
              RcpLineRec.SETRANGE("Part Group", EstLineRec."Part Group");
              RcpLineRec.SETRANGE(Part, EstLineRec.Part);
              RcpLineRec.SETRANGE("Estimate Line", EstLineRec."Line No.");
              IF RcpLineRec.FINDSET THEN BEGIN
                REPEAT
                  IF RcpLineRec."Cum. Adj. Factor Hours" = 0 THEN
                    RcpLineRec."Cum. Adj. Factor Hours" := 1;
                  IF RcpLineRec."Cum. Adj. Factor Price" = 0 THEN
                   RcpLineRec."Cum. Adj. Factor Price" := 1;
                  OrigHours := OrigHours +
                    (EstLineRec.Quantity * RcpLineRec."Cumulative Hours" / RcpLineRec."Cum. Adj. Factor Hours");
                  OrigLabor := OrigLabor +
                    (EstLineRec.Quantity * RcpLineRec."Cumulative Labor" / RcpLineRec."Cum. Adj. Factor Hours");
                  IF RcpLineRec."Cost Type (Price)" = RcpLineRec."Cost Type (Price)"::Material THEN
                    OrigMaterial := OrigMaterial +
                      (EstLineRec.Quantity * RcpLineRec."Cumulative Net Amount" / RcpLineRec."Cum. Adj. Factor Price");
                  IF RcpLineRec."Cost Type (Price)" = RcpLineRec."Cost Type (Price)"::Subcontracting THEN
                    OrigSubc := OrigSubc +
                      (EstLineRec.Quantity * RcpLineRec."Cumulative Net Amount" / RcpLineRec."Cum. Adj. Factor Price");
                  IF RcpLineRec."Cost Type (Price)" = RcpLineRec."Cost Type (Price)"::Plant THEN
                    OrigPlant := OrigPlant +
                      (EstLineRec.Quantity * RcpLineRec."Cumulative Net Amount" / RcpLineRec."Cum. Adj. Factor Price");
                UNTIL RcpLineRec.NEXT = 0;
              END;
            END;
          UNTIL EstLineRec.NEXT = 0;
        END;
        //OrigTotal := OrigLabor + OrigMaterial + OrigSubc + OrigPlant;
      END;
    END;

    PROCEDURE CalcFieldsAmounts@1100485003(ITargetAmntRec@1210190000 : Record 11012199;VAR OHours@1210190001 : Decimal;VAR OLabor@1210190002 : Decimal;VAR OMaterial@1210190003 : Decimal;VAR OSubcontracting@1210190004 : Decimal;VAR OPlant@1210190005 : Decimal;VAR OTotal@1210190006 : Decimal;CalcOrig@1100485000 : Boolean);
    VAR
      lvEstPartRec@1100528901 : Record 11072073;
      lvSubEstRec@1100528900 : Record 11072074;
      EstimatePartTotal@1100528902 : Record 11229767;
    BEGIN
      OHours := 0;
      OLabor := 0;
      OMaterial := 0;
      OSubcontracting := 0;
      OPlant := 0;
      OTotal := 0;

      WITH ITargetAmntRec DO BEGIN
        CASE Type OF
          Type::"Sub-Estimate":
            BEGIN
              lvSubEstRec.GET("Estimate No.", "Sub-Estimate No.");

              CheckFormat(1,sp1,sp2);
              CurrLevel := "Level (Sub-Estimate)";
              IF (sp1 = 0) AND (CurrLevel = 0) THEN CurrLevel := CurrLevel + 1;
              IF (sp2 = 0) AND (CurrLevel = 1) THEN CurrLevel := CurrLevel + 1;

              CASE CurrLevel OF
                0:
                  BEGIN
                    lvSubEstRec.CALCFIELDS("Cum. Hours Chapter", "Cum. Labor Chapter", "Cum. Material Chapter",
                      "Cum. Subcontracting Chapter", "Cum. Plant Chapter");
                    OHours := lvSubEstRec."Cum. Hours Chapter";
                    OLabor := lvSubEstRec."Cum. Labor Chapter";
                    OMaterial := lvSubEstRec."Cum. Material Chapter";
                    OSubcontracting := lvSubEstRec."Cum. Subcontracting Chapter";
                    OPlant := lvSubEstRec."Cum. Plant Chapter";
                  END;
                1:
                  BEGIN
                    lvSubEstRec.CALCFIELDS("Cum. Hours Paragraph", "Cum. Labor Paragraph", "Cum. Material Paragraph",
                      "Cum. Subcontracting Paragraph", "Cum. Plant Paragraph");
                    OHours := lvSubEstRec."Cum. Hours Paragraph";
                    OLabor := lvSubEstRec."Cum. Labor Paragraph";
                    OMaterial := lvSubEstRec."Cum. Material Paragraph";
                    OSubcontracting := lvSubEstRec."Cum. Subcontracting Paragraph";
                    OPlant := lvSubEstRec."Cum. Plant Paragraph";
                  END;
                2:
                  BEGIN
                    lvSubEstRec.CALCFIELDS("Cum. Hours", "Cum. Labor", "Cum. Material",
                      "Cum. Subcontracting", "Cum. Plant");
                    OHours := lvSubEstRec."Cum. Hours";
                    OLabor := lvSubEstRec."Cum. Labor";
                    OMaterial := lvSubEstRec."Cum. Material";
                    OSubcontracting := lvSubEstRec."Cum. Subcontracting";
                    OPlant := lvSubEstRec."Cum. Plant";
                  END;
              END;
            END;
          Type::Part:
            BEGIN
              lvEstPartRec.GET("Estimate No.", "Sub-Estimate No.", "Part Group", Part);
              EstimatePartTotal.GET("Estimate No.", "Sub-Estimate No.", "Part Group", Part);

              CheckFormat(2,sp1,sp2);
              CurrLevel := "Level (Part)";
              IF (sp1 = 0) AND (CurrLevel = 1) THEN CurrLevel := CurrLevel + 1;
              IF (sp2 = 0) AND (CurrLevel = 2) THEN CurrLevel := CurrLevel + 1;

              CASE CurrLevel OF
                0:
                  BEGIN
                    WITH EstimatePartTotal DO BEGIN
                      CALCFIELDS("Cum. Hours Total", "Cum. Labor Total", "Cum. Material Total",
                        "Cum. Subcontracting Total", "Cum. Plant Total");
                      OHours := "Cum. Hours Total";
                      OLabor := "Cum. Labor Total";
                      OMaterial := "Cum. Material Total";
                      OSubcontracting := "Cum. Subcontracting Total";
                      OPlant := "Cum. Plant Total";
                    END;
                  END;
                1:
                  BEGIN
                    WITH EstimatePartTotal DO BEGIN
                      CALCFIELDS("Cum. Hours Chapter", "Cum. Labor Chapter", "Cum. Material Chapter",
                        "Cum. Subcontracting Chapter", "Cum. Plant Chapter");
                      OHours := "Cum. Hours Chapter";
                      OLabor := "Cum. Labor Chapter";
                      OMaterial := "Cum. Material Chapter";
                      OSubcontracting := "Cum. Subcontracting Chapter";
                      OPlant := "Cum. Plant Chapter";
                    END;
                  END;
                2:
                  BEGIN
                    WITH EstimatePartTotal DO BEGIN
                      CALCFIELDS("Cum. Hours Paragraph", "Cum. Labor Paragraph", "Cum. Material Paragraph",
                        "Cum. Subcontracting Paragraph", "Cum. Plant Paragraph");
                      OHours := "Cum. Hours Paragraph";
                      OLabor := "Cum. Labor Paragraph";
                      OMaterial := "Cum. Material Paragraph";
                      OSubcontracting := "Cum. Subcontracting Paragraph";
                      OPlant := "Cum. Plant Paragraph";
                    END;
                  END;
                3:
                  BEGIN
                    WITH EstimatePartTotal DO BEGIN
                      CALCFIELDS("Cum. Hours Part", "Cum. Labor Part", "Cum. Material Part",
                        "Cum. Subcontracting Part", "Cum. Plant Part");
                      OHours := "Cum. Hours Part";
                      OLabor := "Cum. Labor Part";
                      OMaterial := "Cum. Material Part";
                      OSubcontracting := "Cum. Subcontracting Part";
                      OPlant := "Cum. Plant Part";
                    END;
                  END;
              END;
            END;
        END;
        OTotal := OLabor + OMaterial + OSubcontracting + OPlant;
        IF CalcOrig = TRUE THEN  //db: ignore result calcfields
          GetOrigAmount(ITargetAmntRec, CurrLevel, OHours, OLabor, OMaterial, OSubcontracting, OPlant);
      END;
    END;

    BEGIN
    {
      db, 01-05-20: procedures for old estimate module ready to use in new estimate tables; result is based on Cost Price
    }
    END.
  }
}

