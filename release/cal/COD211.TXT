OBJECT Codeunit 211 Res. Jnl.-Check Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.01,4PS14.00;
  }
  PROPERTIES
  {
    TableNo=207;
    OnRun=BEGIN
            RunCheck(Rec);
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=cannot be a closing date;NOR=kan ikke v‘re en avslutningsdato;SVE=kan inte vara ett avslutsdatum';
      Text002@1002 : TextConst 'ENU=The combination of dimensions used in %1 %2, %3, %4 is blocked. %5;NOR=Kombinasjonen av dimensjonene som brukes i %1 %2, %3, %4 er sperret. %5;SVE=Kombinationen av dimensioner i %1 %2, %3, %4 „r sp„rrad. %5';
      Text003@1003 : TextConst 'ENU=A dimension used in %1 %2, %3, %4 has caused an error. %5;NOR=En dimensjon som brukes i %1 %2, %3, %4 har for†rsaket en feil. %5;SVE=En dimension anv„nd i %1 %2, %3, %4 har orsakat ett fel. %5';
      GLSetup@1004 : Record 98;
      DimMgt@1007 : Codeunit 408;
      TimeSheetMgt@1006 : Codeunit 950;

    [External]
    PROCEDURE RunCheck@1(VAR ResJnlLine@1000 : Record 207);
    VAR
      UserSetupManagement@1001 : Codeunit 5700;
      TableID@1002 : ARRAY [10] OF Integer;
      No@1003 : ARRAY [10] OF Code[20];
      IsHandled@1004 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforeRunCheck(ResJnlLine,IsHandled);
      IF IsHandled THEN
        EXIT;

      GLSetup.GET;
      WITH ResJnlLine DO BEGIN
        IF EmptyLine THEN
          EXIT;

        TESTFIELD("Resource No.");
        TESTFIELD("Posting Date");
        TESTFIELD("Gen. Prod. Posting Group");

        IF "Posting Date" <> NORMALDATE("Posting Date") THEN
          FIELDERROR("Posting Date",Text000);

        UserSetupManagement.CheckAllowedPostingDate("Posting Date");

        IF "Document Date" <> 0D THEN
          IF "Document Date" <> NORMALDATE("Document Date") THEN
            FIELDERROR("Document Date",Text000);

        IF ("Entry Type" = "Entry Type"::Usage) AND ("Time Sheet No." <> '') THEN
          TimeSheetMgt.CheckResJnlLine(ResJnlLine);

        IF NOT DimMgt.CheckDimIDComb("Dimension Set ID") THEN
          ERROR(
            Text002,
            TABLECAPTION,"Journal Template Name","Journal Batch Name","Line No.",
            DimMgt.GetDimCombErr);

        TableID[1] := DATABASE::Resource;
        No[1] := "Resource No.";
        TableID[2] := DATABASE::"Resource Group";
        No[2] := "Resource Group No.";
        TableID[3] := DATABASE::Job;
        No[3] := "Job No.";
        IF NOT DimMgt.CheckDimValuePosting(TableID,No,"Dimension Set ID") THEN
          IF "Line No." <> 0 THEN
            ERROR(
              Text003,
              TABLECAPTION,"Journal Template Name","Journal Batch Name","Line No.",
              DimMgt.GetDimValuePostingErr)
          ELSE
            ERROR(DimMgt.GetDimValuePostingErr);
      END;

      OnAfterRunCheck(ResJnlLine);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterRunCheck@2(VAR ResJournalLine@1000 : Record 207);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeRunCheck@3(VAR ResJournalLine@1000 : Record 207;VAR IsHandled@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

