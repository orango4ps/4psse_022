OBJECT XMLport 11128023 Import Employee Phone/E-mail A
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import Employee Phone/E-mail AGDA;
               SVE=L„s in anst„lldas telefon/email fr AGDA];
    Direction=Import;
    DefaultFieldsValidation=No;
    TextEncoding=WINDOWS;
    Format=Variable Text;
    FieldSeparator=[;];
    UseRequestPage=No;
  }
  ELEMENTS
  {
    { [{755F5B7F-F062-4834-8364-DC4CD51C5A62}];  ;Root                ;Element ;Text     }

    { [{A7DBD164-8D3E-4F8D-B3A0-89F91BC12205}];1 ;Employee            ;Element ;Table   ;
                                                  SourceTable=Table5200;
                                                  SourceTableView=SORTING(Field1);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              ClearFields;
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 ContactPerson@1100409000 : Record 5050;
                                                                                 ErrText@1100285100 : Text;
                                                                               BEGIN

                                                                                 StripData;
                                                                                 CLEAR(Employee);

                                                                                 IF NOT Employee.GET(AnstNr) THEN
                                                                                   LogError(Text003);

                                                                                 IF FNamn = '' THEN
                                                                                   LogError(Text004);

                                                                                 Employee.VALIDATE("First Name", FNamn);
                                                                                 Employee.VALIDATE("Last Name", ENamn);


                                                                                 Employee."Phone No." := PhoneNr;
                                                                                 Employee."Mobile Phone No." := MobNr;

                                                                                 IF NOT ValidateEmail(EmailPers,Employee.FIELDCAPTION("E-Mail"),ErrText) THEN
                                                                                   LogError(ErrText);
                                                                                 Employee.VALIDATE("E-Mail",EmailPers);

                                                                                 IF NOT ValidateEmail(EmailComp,Employee.FIELDCAPTION("Company E-Mail"),ErrText) THEN
                                                                                   LogError(ErrText);
                                                                                 Employee.VALIDATE("Company E-Mail",EmailComp);

                                                                                 Employee.MODIFY(TRUE);

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{5C900A9C-2240-4551-8D3B-A67A2D629F53}];2 ;AnstNr              ;Element ;Text     }

    { [{5E5EE9AF-296C-4B48-B3A4-71FD1D3BDBB8}];2 ;FNamn               ;Element ;Text     }

    { [{34E04898-7960-407E-9AF6-7E634E1189DF}];2 ;ENamn               ;Element ;Text     }

    { [{1A554F6D-783B-46D4-A49C-1E48A89A51F1}];2 ;PhoneNr             ;Element ;Text     }

    { [{7A0432AE-610E-47A2-97EB-572B27903898}];2 ;MobNr               ;Element ;Text     }

    { [{9737E6A0-0A11-4E6E-BC32-40A174825071}];2 ;EmailPers           ;Element ;Text     }

    { [{6362E6D3-C788-4AEE-BE57-7BF691C0FD8F}];2 ;EmailComp           ;Element ;Text     }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=[ENU=Lookup Main Project No. based on old Main Project No.;
                 SVE=Val av huvudprojekt baserat p† gammalt huvudprojektnr];
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text001@1100285101 : TextConst 'ENU=%1 should contain a ''@'' once;SVE=%1 skall inneh†lla enbart ett ''@''';
      Text002@1100285100 : TextConst 'ENU=%1 should contain at least one ''.'' behind the ''@'';SVE=%1 skall inneh†lla minst en ''.'' efter ''@''';
      gErrText@1100285102 : Text;
      g_fileName@1000000000 : Text;
      Text003@1000000001 : TextConst 'ENU=Employee No. in the file is missing in 4PS;SVE=Anst„llningsnr. i filen saknas i 4PS';
      Text004@1000000002 : TextConst 'ENU=Employee in file has no name;SVE=Anst„lld i filen saknar f”rnamn';

    PROCEDURE LogError@1100285100(ErrText@1100285102 : Text);
    VAR
      ErrorLogWorkSchedule@1100285100 : Record 11128052;
      EntryNo@1100285101 : Integer;
      Empl@1000000000 : Record 5200;
    BEGIN
      IF ErrText = '' THEN
        EXIT;
      EntryNo := 1;
      IF ErrorLogWorkSchedule.FINDLAST THEN
        EntryNo := ErrorLogWorkSchedule."Entry No." + 1;

      IF Empl.GET(AnstNr) THEN
        AnstNr := Empl."Salary No.";

      ErrorLogWorkSchedule.INIT;
      ErrorLogWorkSchedule."Entry No." := EntryNo;
      ErrorLogWorkSchedule."Salary No." := AnstNr;
      ErrorLogWorkSchedule."Error TimeStamp" := CURRENTDATETIME;
      ErrorLogWorkSchedule.FileName := currXMLport.FILENAME;
      IF ErrorLogWorkSchedule.FileName = '' THEN
        ErrorLogWorkSchedule.FileName := g_fileName;
      ErrorLogWorkSchedule."Error Message" := COPYSTR(ErrText,1,MAXSTRLEN(ErrorLogWorkSchedule."Error Message"));
      ErrorLogWorkSchedule.INSERT;


      ClearFields;
      currXMLport.SKIP;
    END;

    PROCEDURE StripData@1100485001();
    BEGIN
      AnstNr := DELCHR(AnstNr,'<>',' ');
      FNamn := DELCHR(FNamn,'<>',' ');
      ENamn := DELCHR(ENamn,'<>',' ');
      PhoneNr := DELCHR(PhoneNr,'<>',' ');
      MobNr := DELCHR(MobNr,'<>',' ');
      EmailPers := DELCHR(EmailPers,'<>',' ');
      EmailComp := DELCHR(EmailComp,'<>',' ');
    END;

    PROCEDURE ClearFields@1100529903();
    BEGIN
      CLEAR(Employee);
      AnstNr := '';
      FNamn := '';
      ENamn := '';
      PhoneNr := '';
      MobNr := '';
      EmailPers := '';
      EmailComp := '';
    END;

    PROCEDURE ValidateEmail@1100528702(FieldValue@1100528703 : Text[100];FldRefCAPTION@1100285101 : Text;VAR ErrText@1100285100 : Text) : Boolean;
    VAR
      EMail@1100528700 : Text[1024];
      RecRef@1100528701 : RecordRef;
      Pos1@1100528704 : Integer;
      Pos2@1100528705 : Integer;
      StringFunctions@1100409000 : Codeunit 11012273;
      EMailArray@1100409001 : ARRAY [10] OF Text[250];
      I@1100409002 : Integer;
    BEGIN
      ErrText := '';

      EMail := FieldValue;

      IF EMail = '' THEN
        EXIT(TRUE);

      EMail := LOWERCASE(EMail);
      FieldValue := EMail;

      StringFunctions.SplitString(EMail, ';', EMailArray);

      FOR I := 1 TO ARRAYLEN(EMailArray) DO BEGIN
        IF EMailArray[I] <> '' THEN BEGIN
          Pos1 := STRPOS(EMailArray[I], '@');
          IF Pos1 = 0 THEN BEGIN
            //ERROR(Text001, FldRef.CAPTION)
            ErrText := STRSUBSTNO(Text001, FldRefCAPTION);
            EXIT(FALSE);
          END
          ELSE BEGIN
            Pos2 := STRPOS(COPYSTR(EMailArray[I], Pos1 + 1), '@');
            IF Pos2 <> 0 THEN BEGIN
              //ERROR(Text001, FldRef.CAPTION);
              ErrText := STRSUBSTNO(Text001, FldRefCAPTION);
            EXIT(FALSE);
            END;
          END;

          IF STRPOS(COPYSTR(EMailArray[I], Pos1 + 1), '.') = 0 THEN BEGIN
            //ERROR(Text002, FldRef.CAPTION);
            ErrText := STRSUBSTNO(Text002, FldRefCAPTION);
            EXIT(FALSE);
          END;
        END;
      END;

      EXIT(ErrText = '');
    END;

    PROCEDURE ValidateName@1210190000(VAR Name@1210190000 : Text[80]);
    BEGIN
      IF Name <> '' THEN
        Name := UPPERCASE(COPYSTR(Name, 1, 1)) + COPYSTR(Name, 2);
    END;

    PROCEDURE SetFileName@1000000000(p_fileName@1000000000 : Text);
    BEGIN
      g_fileName := p_fileName;
    END;

    BEGIN
    {
      160830 ITERO.DL RFC112 new xmlport to import contact data from AGDA
    }
    END.
  }
}

