OBJECT Page 11229513 Settlement Quantity Budget SP
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Verrechnungsmenge Budget;
               ENU=Settlement Quantity Budget;
               NLD=Begroting verrekenbare hoeveelheid];
    SourceTable=Table11072244;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Budget Summary Line=FILTER(No));
    PageType=ListPart;
    TimerUpdate=1;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             CostComponentEditable := TRUE;
           END;

    OnOpenPage=VAR
                 JobSetup@1100525000 : Record 315;
                 FPSLicenseManagement@1100527400 : Codeunit 11229289;
               BEGIN
                 TradeItemEnabled := TRUE;
                 IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(ItemSetup) THEN
                   TradeItemEnabled := FALSE;

                 JobSetup.GET;
                 CostComponentEditable := JobSetup."Cost Component Editable";
               END;

    OnClosePage=BEGIN
                  RecalcSummarySheet;
                END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  VALIDATE("Cost Type", xRec."Cost Type");
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=BEGIN
                     IF (Quantity <> 0) OR
                        (Amount <> 0)
                     THEN BEGIN
                       FillChangedSummarySheet;
                       RecalcSummarySheet;
                     END;
                   END;

    OnModifyRecord=BEGIN
                     IF (Quantity <> 0) OR (xRec.Quantity <> 0) OR
                        (Amount <> 0) OR (xRec.Amount <> 0) THEN
                       FillChangedSummarySheet;
                   END;

    ActionList=ACTIONS
    {
      { 1210190035;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528202;1 ;ActionGroup;
                      CaptionML=[DEU=&Budget;
                                 ENU="&Budget ";
                                 NLD=&Begroting;
                                 NOR=&Budsjett;
                                 SVE="&Budget "] }
      { 1100528201;2 ;Action    ;
                      CaptionML=[DEU=Endblatt;
                                 ENU=Summary Sheet;
                                 NLD=Staartblad;
                                 NOR=Sammendragsark;
                                 SVE=Summeringsark];
                      OnAction=VAR
                                 lvSettlementQuantityManagement@1210190000 : Codeunit 11071690;
                                 lvSettlementQuantity@1210190001 : Record 11072243;
                               BEGIN
                                 IF lvSettlementQuantity.GET("Project No.","House Model","Settlement Quantity Code") THEN
                                   lvSettlementQuantityManagement.MMREditSettlQuanSummarySheet(lvSettlementQuantity);
                               END;
                                }
      { 1100528203;2 ;Action    ;
                      CaptionML=[DEU=Zu&schl„ge;
                                 ENU=Sur&charges;
                                 NLD=Toe&slagen;
                                 NOR=Tilleggs&gebyrer;
                                 SVE=Till„ggs&avgifter];
                      OnAction=BEGIN
                                 SettlementQuantityManagement.MMREditSettlQuanSurcharges(Rec);
                               END;
                                }
      { 1100528200;2 ;Action    ;
                      CaptionML=[DEU=Gesamtbudget;
                                 ENU=Total Budget;
                                 NLD=Totale begroting;
                                 NOR=Budsjett Total;
                                 SVE=Total budget];
                      RunObject=Page 11229527;
                      RunPageLink=Project No.=FIELD(Project No.),
                                  House Model=FIELD(House Model),
                                  Settlement Quantity Code=FIELD(Settlement Quantity Code) }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Cost Type";
                Editable=CostTypeEditable;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr=Element }

    { 6   ;2   ;Field     ;
                SourceExpr="Item No.";
                Visible=FALSE;
                Editable=ItemNoEditable;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;

                OnLookup=BEGIN
                           IF NOT ItemNoEditable THEN
                             EXIT;

                           CLEAR(ItemFrm);
                           ItemFrm.LOOKUPMODE(TRUE);

                           IF ItemRec.GET("Item No.") THEN
                             ItemFrm.SETRECORD(ItemRec);
                           IF ItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             VALIDATE("Cost Type", "Cost Type"::Material);
                             IF "Cost Type" = "Cost Type"::Material THEN BEGIN
                               ItemFrm.GETRECORD(ItemRec);
                               VALIDATE("Item No.", ItemRec."No.");
                             END;
                           END ELSE BEGIN
                             IF ItemFrm.CheckMultiCopy THEN
                               CurrPage.UPDATE(TRUE);
                           END;
                           SetFieldsEditable;
                         END;
                          }

    { 8   ;2   ;Field     ;
                SourceExpr=Manufacturer;
                Visible=FALSE;
                Enabled=TradeItemEnabled;
                Editable=ManufacturerEditable;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Basic Item";
                Visible=FALSE;
                Enabled=TradeItemEnabled;
                Editable=BasicItemEditable;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;

                OnLookup=BEGIN
                           IF NOT BasicItemEditable THEN
                             EXIT;

                           CLEAR(BasicItemFrm);
                           BasicItemFrm.LOOKUPMODE(TRUE);

                           BasicItemRec.InitLookup(BasicItemRec, "Basic Item", Manufacturer);
                           BasicItemFrm.SETRECORD(BasicItemRec);

                           IF BasicItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             VALIDATE("Cost Type", "Cost Type"::Material);
                             IF "Cost Type" = "Cost Type"::Material THEN BEGIN
                               BasicItemFrm.GETRECORD(BasicItemRec);
                               Manufacturer := BasicItemRec.Manufacturer;
                               VALIDATE("Basic Item", BasicItemRec."Product Code");
                             END;
                           END ELSE BEGIN
                             IF BasicItemFrm.CheckMultiCopy THEN
                               CurrPage.UPDATE(TRUE);
                           END;
                           SetFieldsEditable;
                         END;
                          }

    { 12  ;2   ;Field     ;
                SourceExpr="Vendor (Trade Item)";
                Visible=FALSE;
                Enabled=TradeItemEnabled;
                Editable=VendorTradeItemEditable;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;
                            }

    { 14  ;2   ;Field     ;
                SourceExpr="Trade Item";
                Visible=FALSE;
                Enabled=TradeItemEnabled;
                Editable=TradeItemEditable;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;

                OnLookup=BEGIN
                           IF NOT TradeItemEditable THEN
                             EXIT;

                           CLEAR(TradeItemFrm);
                           TradeItemFrm.LOOKUPMODE(TRUE);

                           TradeItemRec.InitLookup(TradeItemRec, "Basic Item", Manufacturer, "Trade Item", "Vendor (Trade Item)");
                           TradeItemFrm.SETRECORD(TradeItemRec);

                           IF TradeItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             VALIDATE("Cost Type", "Cost Type"::Material);
                             IF "Cost Type" = "Cost Type"::Material THEN BEGIN
                               TradeItemFrm.GETRECORD(TradeItemRec);
                               Manufacturer := TradeItemRec.Manufacturer;
                               "Basic Item" := TradeItemRec."Product Code";
                               "Vendor (Trade Item)" := TradeItemRec.Vendor;
                               VALIDATE("Trade Item", TradeItemRec."Item Code");
                             END;
                           END ELSE BEGIN
                             IF TradeItemFrm.CheckMultiCopy THEN
                               CurrPage.UPDATE(TRUE);
                           END;
                           SetFieldsEditable;
                         END;
                          }

    { 18  ;2   ;Field     ;
                SourceExpr="Cost Object";
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;
                            }

    { 1100485000;2;Field  ;
                SourceExpr="Cost Component";
                Editable=CostComponentEditable }

    { 20  ;2   ;Field     ;
                SourceExpr=Description }

    { 1210190006;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Time Quantity";
                OnValidate=BEGIN
                             UpdateSummary;
                           END;
                            }

    { 24  ;2   ;Field     ;
                SourceExpr="Unit of Time" }

    { 26  ;2   ;Field     ;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             UpdateSummary;
                             SetFieldsEditable;
                           END;
                            }

    { 28  ;2   ;Field     ;
                SourceExpr="Unit of Measure" }

    { 30  ;2   ;Field     ;
                SourceExpr=Norm;
                Editable=NormEditable;
                OnValidate=BEGIN
                             UpdateSummary;
                             SetFieldsEditable;
                           END;
                            }

    { 32  ;2   ;Field     ;
                SourceExpr="Rate Code";
                Editable=RateCodeEditable;
                OnValidate=BEGIN
                             UpdateSummary;
                             SetFieldsEditable;
                           END;
                            }

    { 34  ;2   ;Field     ;
                SourceExpr=Rate;
                Enabled=RateEditable;
                OnValidate=BEGIN
                             UpdateSummary;
                             SetFieldsEditable;
                           END;
                            }

    { 1210190108;2;Field  ;
                SourceExpr="Gross Price";
                Visible=FALSE;
                Editable=GrossPriceEditable }

    { 1210190010;2;Field  ;
                SourceExpr="Discount %";
                Visible=FALSE;
                Editable=DiscountPercEditable }

    { 36  ;2   ;Field     ;
                SourceExpr=Price;
                Editable=PriceEditable;
                OnValidate=BEGIN
                             UpdateSummary;
                           END;
                            }

    { 38  ;2   ;Field     ;
                SourceExpr=Hours }

    { 40  ;2   ;Field     ;
                SourceExpr=Amount;
                Editable=AmountEditable;
                OnValidate=BEGIN
                             UpdateSummary;
                           END;
                            }

    { 1100528900;2;Field  ;
                SourceExpr="Location Code (CUF)";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      ItemSetup@1100525002 : Record 11012300;
      ItemRec@1210190004 : Record 27;
      BasicItemRec@1210190005 : Record 11012316;
      TradeItemRec@1210190006 : Record 11012317;
      TmpBudgetSummarySheet@1100485002 : TEMPORARY Record 11012064;
      ItemFrm@11012001 : Page 31;
      BasicItemFrm@11012003 : Page 11012333;
      TradeItemFrm@11012005 : Page 11012334;
      Text000@1210190003 : TextConst 'DEU=M”chten Sie das Standardoptionsbudget kopieren?;ENU=Copy Standard Option Budget?;NLD=Wilt u de standaard optiebegroting kopi‰ren?;NOR=Kopiere StandardBudsjettjustering?;SVE=Kopiera standardalternativbudget?';
      Text001@1210190001 : TextConst 'DEU=M”chten Sie das Projekt-Optionsbudget kopieren?;ENU=Copy Project Option Budget?;NLD=Wilt u de project-optiebegroting kopi‰ren?;NOR=Kopier prosjektBudsjettjustering?;SVE=Kopiera projektalternativbudget?';
      Text002@1210190002 : TextConst 'DEU=%1 der %2 Optionsbudgetzeilen wurden kopiert.;ENU=%1 of the %2 Option Budget Lines have been copied.;NLD=%1 van de %2 optiebegrotingregels zijn gekopieerd.;NOR=%1 av %2 Budsjettjusteringrader er kopiert.;SVE=%1 av %2 alternativbudgetrader har kopierats.';
      SettlementQuantityManagement@1100528200 : Codeunit 11071690;
      CalcSummaryWindow@1100485006 : Dialog;
      Text011@1100485007 : TextConst 'DEU=Aktualisieren Endblatt #1###############;ENU=Update Summary #1###############;NLD=Bijwerken staartblad #1###############;NOR=Oppdater sammendrag #1###############;SVE=Uppdatera sammandrag #1###############';
      CostComponentEditable@19073195 : Boolean INDATASET;
      TradeItemEnabled@1210190009 : Boolean INDATASET;
      ItemNoEditable@1210190026 : Boolean INDATASET;
      NormEditable@1210190021 : Boolean INDATASET;
      RateCodeEditable@1210190019 : Boolean INDATASET;
      RateEditable@1210190018 : Boolean INDATASET;
      GrossPriceEditable@1210190017 : Boolean INDATASET;
      DiscountPercEditable@1210190016 : Boolean INDATASET;
      PriceEditable@1210190015 : Boolean INDATASET;
      AmountEditable@1210190012 : Boolean INDATASET;
      CostTypeEditable@1210190011 : Boolean INDATASET;
      ManufacturerEditable@1210190020 : Boolean INDATASET;
      BasicItemEditable@1210190014 : Boolean INDATASET;
      VendorTradeItemEditable@1210190013 : Boolean INDATASET;
      TradeItemEditable@1210190010 : Boolean INDATASET;
      UpdateSummaryFB@1100525003 : Boolean;

    PROCEDURE CopyBudget@1210190003(IProjNo@1210190000 : Code[20];IPlotNo@1210190001 : Code[10];IHouseModel@1210190009 : Code[20];IMainGroup@1210190010 : Code[20];IGroup@1210190012 : Code[20];ISubGroup@1210190011 : Code[20];IOption@1210190002 : Code[20]);
    VAR
      lvPlotOptionBudgetRec@1210190006 : Record 11012503;
      lvProjOptionBudgetRec@1210190005 : Record 11012503;
      lvProjOptionSummaryRec@1210190008 : Record 11012064;
      lvPlotOptionSummaryRec@1210190007 : Record 11012064;
      lvBuyerMgt@1100525000 : Codeunit 11012500;
      lvCounter@1210190004 : Integer;
      lvCounterOK@1210190003 : Integer;
      lvProjFrom@1210190013 : Code[20];
    BEGIN
      IF IProjNo = '' THEN
        EXIT;

      IF IPlotNo = '' THEN BEGIN
        IF NOT CONFIRM(Text000) THEN
          EXIT;
        lvProjFrom := '';
      END ELSE BEGIN
        IF NOT CONFIRM(Text001) THEN
          EXIT;
        lvProjFrom := IProjNo;
      END;

      lvCounter := 0;
      lvCounterOK := 0;

      lvProjOptionBudgetRec.SETRANGE("Project No.", lvProjFrom);
      lvProjOptionBudgetRec.SETRANGE("Plot No.", '');      //* Copy from standard or project level, so always from plot empty.
      lvProjOptionBudgetRec.SETRANGE("House Model", IHouseModel);
      lvProjOptionBudgetRec.SETRANGE("Main Group", IMainGroup);
      lvProjOptionBudgetRec.SETRANGE(Group, IGroup);
      lvProjOptionBudgetRec.SETRANGE("Sub Group", ISubGroup);
      lvProjOptionBudgetRec.SETRANGE(Option, IOption);
      IF lvProjOptionBudgetRec.FINDSET THEN BEGIN
        REPEAT
          lvCounter := lvCounter + 1;
          IF NOT lvPlotOptionBudgetRec.GET(
            IProjNo, IPlotNo, IHouseModel, IMainGroup, IGroup, ISubGroup, IOption, lvProjOptionBudgetRec."Line No." )
          THEN BEGIN
            lvPlotOptionBudgetRec.TRANSFERFIELDS(lvProjOptionBudgetRec, TRUE);
            lvPlotOptionBudgetRec."Project No." := IProjNo;
            lvPlotOptionBudgetRec."Plot No." := IPlotNo;
            lvBuyerMgt.CheckProjectElement(
              lvPlotOptionBudgetRec."Project No.", lvPlotOptionBudgetRec.Element,
              lvProjOptionBudgetRec.TABLECAPTION, lvProjFrom,'',IHouseModel,IMainGroup,IGroup,ISubGroup,IOption); //*C-019091.n
            lvPlotOptionBudgetRec.INSERT(TRUE);
            lvCounterOK := lvCounterOK + 1;
          END;
        UNTIL lvProjOptionBudgetRec.NEXT = 0;
      END;

      lvProjOptionSummaryRec.SETRANGE("Project No.", lvProjFrom);
      lvProjOptionSummaryRec.SETRANGE("Contract No.", '');
      lvProjOptionSummaryRec.SETRANGE("Plot No.", '');
      lvProjOptionSummaryRec.SETRANGE("House Model", IHouseModel);
      lvProjOptionSummaryRec.SETRANGE("Main Group", IMainGroup);
      lvProjOptionSummaryRec.SETRANGE(Group, IGroup);
      lvProjOptionSummaryRec.SETRANGE("Sub Group", ISubGroup);
      lvProjOptionSummaryRec.SETRANGE(Option, IOption);
      IF lvProjOptionSummaryRec.FIND('-') THEN BEGIN
        REPEAT
          IF NOT lvPlotOptionSummaryRec.GET(
            IProjNo, '', IPlotNo, IHouseModel, IMainGroup, IGroup, ISubGroup, IOption, lvProjOptionSummaryRec."Row No.")
          THEN BEGIN
            lvPlotOptionSummaryRec.TRANSFERFIELDS(lvProjOptionSummaryRec, TRUE);
            lvPlotOptionSummaryRec."Project No." := IProjNo;
            lvPlotOptionSummaryRec."Plot No." := IPlotNo;
            lvBuyerMgt.CheckProjectElement(
              lvPlotOptionSummaryRec."Project No.", lvPlotOptionSummaryRec.Element,
              lvProjOptionSummaryRec.TABLECAPTION, lvProjFrom,'',IHouseModel,IMainGroup,IGroup,ISubGroup,IOption); //*C-019091.n
            lvPlotOptionSummaryRec.INSERT(TRUE);
          END;
        UNTIL lvProjOptionSummaryRec.NEXT = 0;
      END;

      MESSAGE(Text002, lvCounterOK, lvCounter);
    END;

    PROCEDURE ActualiseItemPrices@1100525000(Option@1100525000 : Record 11012502);
    VAR
      Option2@1100525001 : Record 11012502;
    BEGIN
      Option2 := Option;
      Option2.SETRECFILTER;
      REPORT.RUNMODAL(REPORT::"Actualise Item Option Prices",TRUE,FALSE,Option2);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      SetFieldsEditable;
    END;

    PROCEDURE SetFieldsEditable@1210190002();
    BEGIN
      PriceEditable := NOT ("Cost Type" = "Cost Type"::Labor);
      DiscountPercEditable := NOT ("Cost Type" = "Cost Type"::Labor);
      GrossPriceEditable := NOT ("Cost Type" = "Cost Type"::Labor);

      RateCodeEditable := "Cost Type" = "Cost Type"::Labor;
      NormEditable := "Cost Type" = "Cost Type"::Labor;

      RateEditable := ("Cost Type" = "Cost Type"::Labor) AND ("Rate Code" = '');
      AmountEditable := ("Cost Type" = "Cost Type"::Labor) AND (Norm = 0) AND (Quantity = 0);

      TradeItemEditable := ("Cost Type" = "Cost Type"::Material) AND TradeItemEnabled;
      VendorTradeItemEditable := ("Cost Type" = "Cost Type"::Material) AND TradeItemEnabled;
      BasicItemEditable := ("Cost Type" = "Cost Type"::Material) AND TradeItemEnabled;
      ManufacturerEditable := ("Cost Type" = "Cost Type"::Material) AND TradeItemEnabled;
      ItemNoEditable := ("Cost Type" = "Cost Type"::Material);

      CostTypeEditable := ("Item No." + "Basic Item" + "Trade Item" = '');
    END;

    PROCEDURE SetDataCaptionExpr@1100525001() : Text[50];
    BEGIN
      CALCFIELDS("Settlement Quantity Descr.");
      EXIT(COPYSTR(FORMAT("Project No." + ' ' + "Settlement Quantity Code" + ' ' + "Settlement Quantity Descr."), 1,50));
    END;

    LOCAL PROCEDURE UpdateSummary@1100528401();
    BEGIN
      CurrPage.UPDATE(TRUE);
      CalcTotals;
      CurrPage.UPDATE;
      IF UpdateSummaryFB THEN
        RecalcSummarySheet();
    END;

    PROCEDURE RecalcSummarySheet@1100485006() : Boolean;
    VAR
      lvBudgetSummarySheet@1100485000 : Record 11012064;
    BEGIN
      IF NOT TmpBudgetSummarySheet.FIND('-') THEN
        EXIT(FALSE);

      CalcSummaryWindow.OPEN(Text011);

      REPEAT
        CalcSummaryWindow.UPDATE(1, "Project No.");

        lvBudgetSummarySheet.SETRANGE("Project No.", TmpBudgetSummarySheet."Project No.");
        lvBudgetSummarySheet.SETRANGE("Contract No.", '');
        lvBudgetSummarySheet.SETRANGE(Option, '');
        lvBudgetSummarySheet.SETRANGE("Settlement Quantity Code", TmpBudgetSummarySheet."Settlement Quantity Code");

        IF lvBudgetSummarySheet.FIND('-') THEN BEGIN
          lvBudgetSummarySheet.ReCalcSettlQuanSummaryLines();
          lvBudgetSummarySheet.UpdateSettlQuanBudgLines();
        END;
        TmpBudgetSummarySheet.DELETE;
      UNTIL TmpBudgetSummarySheet.NEXT = 0;

      CalcSummaryWindow.CLOSE;

      EXIT(TRUE);
    END;

    PROCEDURE FillChangedSummarySheet@1100485002();
    VAR
      lvBudgetSummarySheet@1100485001 : Record 11012064;
    BEGIN
      lvBudgetSummarySheet.SETRANGE("Project No.", "Project No.");
      lvBudgetSummarySheet.SETRANGE("Contract No.", '');
      lvBudgetSummarySheet.SETRANGE(Option, '');
      lvBudgetSummarySheet.SETRANGE("Settlement Quantity Code", "Settlement Quantity Code");
      IF NOT lvBudgetSummarySheet.FIND('-') THEN
        EXIT;

      TmpBudgetSummarySheet.RESET;
      TmpBudgetSummarySheet.SETRANGE("Project No.", "Project No.");
      TmpBudgetSummarySheet.SETRANGE("Contract No.", '');
      TmpBudgetSummarySheet.SETRANGE(Option, '');
      TmpBudgetSummarySheet.SETRANGE("Settlement Quantity Code", "Settlement Quantity Code");
      IF NOT TmpBudgetSummarySheet.FIND('-') THEN BEGIN
        TmpBudgetSummarySheet.INIT;
        TmpBudgetSummarySheet."Project No." := "Project No.";
        TmpBudgetSummarySheet."Contract No." := '';
        TmpBudgetSummarySheet.Option := '';
        TmpBudgetSummarySheet."Settlement Quantity Code" := "Settlement Quantity Code";
        TmpBudgetSummarySheet.INSERT;
      END;
      TmpBudgetSummarySheet.RESET;
    END;

    PROCEDURE SetUpdateSummaryFB@1100525002(iUpdateSummaryFB@1100525000 : Boolean);
    BEGIN
      UpdateSummaryFB := iUpdateSummaryFB;
    END;

    BEGIN
    {
      4PS, 11-11-13, Report "Option list" no longer supported in NAV2013
    }
    END.
  }
}

