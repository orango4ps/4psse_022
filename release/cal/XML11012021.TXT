OBJECT XMLport 11012021 Export Service Order - FSA OLD
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Export Service Orders - FSA;
    Direction=Export;
    OnPreXMLport=BEGIN
                   FSASetupRec.GET('');
                   EmptySignSplittedInstCode := '';
                   IF FSASetupRec."Field Service Administration" = FSASetupRec."Field Service Administration"::FieldVision THEN
                     EmptySignSplittedInstCode := '0';  //* Field Vision need this, to show lines of which the installation/-part is empty.
                 END;

  }
  ELEMENTS
  {
    { [{66BEC9F8-C5AB-422A-B48E-F31762EBB04C}];  ;Message             ;Element ;Text     }

    { [{4D5830E6-413C-4362-921B-F9E4F3786A81}];1 ;MessageID           ;Attribute;Text   ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 MessageID := MessID;
                                                                               END;
                                                                                }

    { [{E28E3AD4-B274-4602-B78C-3F503C28670D}];1 ;MessageType         ;Attribute;Text   ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 MessageType := 'SERVICEORDER';
                                                                               END;
                                                                                }

    { [{42B8EF16-FFE4-49B8-BF17-F9A10FCF5A85}];1 ;ListServiceorders   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{3B4FD430-F6BD-47BE-BD07-4C01B86BF571}];2 ;Serviceorder        ;Element ;Table   ;
                                                  SourceTable=Table11012823;
                                                  SourceTableView=SORTING(Field10)
                                                                  WHERE(Field10=FILTER(<>''),
                                                                        Field11012990=CONST(Yes));
                                                  MinOccurs=Zero;
                                                  Export::OnAfterGetRecord=VAR
                                                                             lvEmplRec@1100485000 : Record 5200;
                                                                             lvDocRefPointRec@1100485001 : Record 11020296;
                                                                             ServCallRec@1100525000 : Record 11012822;
                                                                           BEGIN
                                                                             IF (("Service Order".Status > "Service Order".Status::"In Process") AND
                                                                                 ("Service Order".Status <> "Service Order".Status::Cancelled)) OR
                                                                                (("Service Order".Status = "Service Order".Status::Cancelled) AND
                                                                                 ("Service Order"."Date/Time Export to FSA" = 0DT)) OR
                                                                                ("Service Order".CheckBlockedByFSA())
                                                                             THEN BEGIN
                                                                               "Service Order"."Export to FSA" := FALSE;
                                                                               "Service Order".MODIFY;
                                                                               currXMLport.SKIP;
                                                                             END;

                                                                             "Service Order".CALCFIELDS(
                                                                               "Customer Name",
                                                                               "Service Contract Description",
                                                                               "Service Location Description",
                                                                               "Remote Control",
                                                                               //"Calling Contact",    //db, 07-09-10
                                                                               //"Calling Phone No.",  //db, 07-09-10
                                                                               "Flow FSA",
                                                                               "Description Order Kind",
                                                                               "Description Order Type",
                                                                               "Description On Hold",
                                                                               "Subcontractor Name",
                                                                               //Installation,
                                                                               //"Installation Part",
                                                                               //"Object No.",
                                                                               //"Object Customer",
                                                                               "Budget Hours");

                                                                             //db.sn, 07-09-10
                                                                             IF NOT ServCallRec.GET("Service Order"."Call No.") THEN ServCallRec.INIT;
                                                                             Order_CallingContact := ServCallRec."Calling Contact";
                                                                             Order_CallingPhoneNo := ServCallRec."Calling Phone No.";
                                                                             //db.en, 07-09-10

                                                                             IF NOT lvEmplRec.GET("Service Order"."Employee No.") THEN
                                                                               lvEmplRec.External := FALSE;
                                                                             Order_EmplExternal := XMLFormatMgtCU.FormatBoolean(lvEmplRec.External);

                                                                             //* FV and NEMO (possible other BDA's') need this for control at reading.
                                                                             CASE FSASetupRec."Field Service Administration" OF
                                                                               FSASetupRec."Field Service Administration"::FieldVision:
                                                                                 BEGIN
                                                                                   //* For FV this field should be filled with a specific value.
                                                                                   IF ("Service Order".Status = "Service Order".Status::Cancelled) THEN
                                                                                     Order_StatusFSA := '120'  //* Expired
                                                                                   ELSE BEGIN
                                                                                     IF ("Service Order"."Date/Time Export to FSA" = 0DT) THEN
                                                                                       Order_StatusFSA := '30'  //* Planned  (first time, Note: only planned orders will be sent)
                                                                                     ELSE
                                                                                       Order_StatusFSA := '170';  //* Changed (next time)
                                                                                   END;
                                                                                 END;
                                                                               ELSE
                                                                                 BEGIN
                                                                                   //* Standard (if no specific value is needed for BDA).
                                                                                   IF ("Service Order".Status = "Service Order".Status::Cancelled) THEN
                                                                                     Order_StatusFSA := 'CANCELLED'  //* Expired
                                                                                   ELSE BEGIN
                                                                                     IF ("Service Order"."Date/Time Export to FSA" = 0DT) THEN
                                                                                       Order_StatusFSA := 'NEW'  //* Sent first time
                                                                                     ELSE
                                                                                       Order_StatusFSA := 'MODIFIED';  //* Changed (next time)
                                                                                   END;
                                                                                 END;
                                                                             END;

                                                                             FillTmpInstallationTables();
                                                                             FillTmpHistoryOrdersTable();

                                                                             Counter := Counter + 1;
                                                                             "Service Order"."Export to FSA" := FALSE;
                                                                             "Service Order"."Date/Time Export to FSA" := CURRENTDATETIME;
                                                                             "Service Order".MODIFY;

                                                                             IF (FSASetupRec."Ref. Point Sending SO" <> 0) THEN BEGIN
                                                                               lvDocRefPointRec.INIT;
                                                                               lvDocRefPointRec.Type := lvDocRefPointRec.Type::ServOrder;
                                                                               lvDocRefPointRec."Document No." := "Service Order"."No.";
                                                                               //lvDocRefPointRec."OLD Date-Time (registrated)" := lvDocRefPointRec.DateAndTime2DateTime(TODAY,TIME);
                                                                               lvDocRefPointRec."Date-Time (registrated)" := CREATEDATETIME(TODAY,TIME);
                                                                               lvDocRefPointRec."Reference Point" := FSASetupRec."Ref. Point Sending SO";
                                                                               IF lvDocRefPointRec.INSERT(TRUE) THEN;
                                                                             END;
                                                                           END;
                                                                            }

    { [{F466EBED-4556-4A98-9D18-7292404358C8}];3 ;Order_No            ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::No. }

    { [{6A926512-E354-4682-937A-4A892402534A}];3 ;Order_Description   ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order::Description }

    { [{F46FB7EA-09AF-4694-A94C-9F6A37E65688}];3 ;Order_CustomerNo    ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Customer No. }

    { [{66931DB5-4068-45DA-964A-40BD4E16FE1D}];3 ;Order_CustomerName  ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order::Customer Name }

    { [{DCF1CE2F-0D6D-444F-B4B3-0E96154321A3}];3 ;Order_Name          ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order::Name }

    { [{39547493-7B65-4F88-8184-73BA8556FB47}];3 ;Order_Address       ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order::Address }

    { [{4AB6CCDF-8148-4540-BECD-B9B1CA106DD3}];3 ;Order_City          ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order::City }

    { [{A1846132-806F-4178-943C-BFC96AAD0D1C}];3 ;Order_PostCode      ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Post Code }

    { [{E983826A-7C68-4DCA-AA51-D2D70AE9FBE1}];3 ;Order_PhoneNo       ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order::Phone No. }

    { [{D7E4887E-E922-40DB-A6B5-DE5892D39082}];3 ;Order_PhoneNo2      ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order::Phone No. 2 }

    { [{0A31C4D4-9278-4A7E-AF14-31051AF2A067}];3 ;Order_MobilePhoneNo ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order::Mobile Phone No. }

    { [{16400B67-E9B4-4EEB-9507-7F5F330EFCFB}];3 ;Order_FaxNo         ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order::Fax No. }

    { [{0375C9EB-E291-452D-9B73-6FD37292112F}];3 ;Order_YourReference ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order::Your Reference }

    { [{D0463214-D0E9-4FF6-B92A-9F06D78F9A86}];3 ;Order_OrderNoCustomer;Element;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order::Order No. Customer }

    { [{F428E7BB-71D8-431E-ADF5-BBBA646FA2EA}];3 ;Order_E-Mail        ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order::E-Mail }

    { [{2671622B-1C92-45F7-AA76-C19A199A54F7}];3 ;Order_ContactName   ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order::Contact Name }

    { [{BCC1B259-3072-4FE3-A9B7-57F162F78433}];3 ;Order_OrderDateTime ;Element ;Text    ;
                                                  DataType=Date;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_OrderDateTime := XMLFormatMgtCU.FormatDateAndTimeToDateTime("Service Order"."Order Date", "Service Order"."Order Time");
                                                                               END;
                                                                                }

    { [{913DDAB7-35C4-46CD-AC3A-20A623C36518}];3 ;Order_StartingDateTime;Element;Text   ;
                                                  DataType=Date;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_StartingDateTime :=
                                                                                   XMLFormatMgtCU.FormatDateAndTimeToDateTime("Service Order"."Starting Date", "Service Order"."Starting Time");
                                                                               END;
                                                                                }

    { [{9FB1B4A8-559F-4433-9B46-B70E5C4BDCBE}];3 ;Order_EndingDateTime;Element ;Text    ;
                                                  DataType=Date;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_EndingDateTime :=
                                                                                   XMLFormatMgtCU.FormatDateAndTimeToDateTime("Service Order"."Ending Date", "Service Order"."Ending Time");
                                                                               END;
                                                                                }

    { [{D1C14C04-6D6A-40D8-8F72-36F367573A6C}];3 ;Order_Hours         ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_Hours := XMLFormatMgtCU.FormatDecimal("Service Order"."Expected Hours");
                                                                               END;
                                                                                }

    { [{CEECE6A3-6BB6-4A8F-81D1-E64DD1052E6F}];3 ;Order_ModifiedOn    ;Element ;Text    ;
                                                  DataType=Date;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_ModifiedOn := XMLFormatMgtCU.FormatDate("Service Order"."Modified on");
                                                                               END;
                                                                                }

    { [{EE82D966-CAC5-4DF0-A0E5-1C4C5D11712C}];3 ;Order_ModifiedBy    ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Modified by }

    { [{137CB0B9-6CE1-45A8-A1DF-34542F1E407C}];3 ;Order_AssignedTo    ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Assigned to }

    { [{C8C4218B-8819-4C03-B421-EA1FF03537BB}];3 ;Order_ServiceContractNo;Element;Field ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Service Contract No. }

    { [{89308887-36F6-4B54-A860-83B462E6460C}];3 ;Order_ServiceContractDescription;Element;Field;
                                                  DataType=Text;
                                                  SourceField=Service Order::Service Contract Description }

    { [{45E24E05-584E-4BC6-A9C2-9556E4398C93}];3 ;Order_ServicePackage;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Service Package }

    { [{3999CAE2-8F57-43E1-B40F-CF2C810FBA2C}];3 ;Order_ServiceLocationCode;Element;Field;
                                                  DataType=Code;
                                                  SourceField=Service Order::Service Location No. }

    { [{049AD7C5-0D72-4C31-A32F-3E30216E9D63}];3 ;Order_ServiceLocationDescription;Element;Field;
                                                  DataType=Text;
                                                  SourceField=Service Order::Service Location Description }

    { [{D514E3EF-8A6E-471E-9A0E-0ED076329086}];3 ;Order_RemoteControlLocation;Element;Text;
                                                  DataType=Boolean;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_RemoteControlLocation := XMLFormatMgtCU.FormatBoolean("Service Order"."Remote Control");
                                                                               END;
                                                                                }

    { [{DF6D78DF-6182-4193-9A6C-01229192CBE2}];3 ;Order_TerritoryCode ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Territory Code }

    { [{78050F8D-4DE1-4649-8481-3425300E996B}];3 ;Order_ServiceTypeOther;Element;Field  ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Service Type (Other) }

    { [{7C9A590D-E117-49FC-8E05-FD0BCF85C932}];3 ;Order_ServiceTypeContract;Element;Field;
                                                  DataType=Code;
                                                  SourceField=Service Order::Service Type }

    { [{BB3D80B3-067D-4E7B-8FD2-98B657C3E1CF}];3 ;Order_StatusOptionNo;Element ;Text    ;
                                                  DataType=Option;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_StatusOptionNo := XMLFormatMgtCU.FormatOptionNo("Service Order".Status);
                                                                               END;
                                                                                }

    { [{783D19F7-7895-424E-A008-5F483B1B00A5}];3 ;Order_StatusCaption ;Element ;Field   ;
                                                  DataType=Option;
                                                  SourceField=Service Order::Status }

    { [{3404B027-2E3D-4926-9BA8-9D85DDA3C237}];3 ;Order_Priority      ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Priority }

    { [{7CBA6B63-5C48-4687-B597-16E3A4E30190}];3 ;Order_SourceTypeOptionNo;Element;Text ;
                                                  DataType=Option;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_SourceTypeOptionNo := XMLFormatMgtCU.FormatOptionNo("Service Order"."Source Type");
                                                                               END;
                                                                                }

    { [{33936BF0-C1FB-490B-A584-858838F4D726}];3 ;Order_SourceTypeCaption;Element;Field ;
                                                  DataType=Option;
                                                  SourceField=Service Order::Source Type }

    { [{5176A625-6161-4C7D-987D-EF3A41067C4E}];3 ;Order_ProblemText   ;Element ;Text    ;
                                                  DataType=Text }

    { [{F7D8AF33-469B-4F16-8A95-FED871C56E8B}];3 ;Order_InternalText  ;Element ;Text    ;
                                                  DataType=Text }

    { [{2C5151D9-F49E-44F4-9FBC-0D41AEE38B4F}];3 ;Order_SolutionText  ;Element ;Text    ;
                                                  DataType=Text }

    { [{672AEA8B-7C23-4BA0-A57E-A8547FA39CA6}];3 ;Order_CallNo.       ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Call No. }

    { [{2398C9DD-55D5-48C1-8A5A-E9D5F12379B5}];3 ;Order_CallingContact;Element ;Text    ;
                                                  DataType=Text }

    { [{87693996-6020-4370-8D00-6DEB942F47A3}];3 ;Order_CallingPhoneNo;Element ;Text    ;
                                                  DataType=Text }

    { [{5FE977F9-0C84-42EF-9208-B1A101C1EB5A}];3 ;Order_FlowFSA       ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order::Flow FSA }

    { [{688F5552-5160-45C1-A69B-F2CD6BD3C59E}];3 ;Order_OrderKind     ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Order Kind }

    { [{3324EA70-AFC3-4FE3-9718-4BBD05594B56}];3 ;Order_DescriptionOrderKind;Element;Field;
                                                  DataType=Text;
                                                  SourceField=Service Order::Description Order Kind }

    { [{5B830F07-3982-468A-AFF3-61101BA9B913}];3 ;Order_OrderType     ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Order Type }

    { [{09BA6D09-0B47-4B56-A2A6-B5C22AC06DB0}];3 ;Order_DescriptionOrderType;Element;Field;
                                                  DataType=Text;
                                                  SourceField=Service Order::Description Order Type }

    { [{3F90D318-9243-49DE-9621-AA0F1A1BC412}];3 ;Order_Problem       ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Problem }

    { [{A12F4076-2D61-42D7-B4F2-58E914D03753}];3 ;Order_Cause         ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Cause }

    { [{045A80C7-0F13-4201-BCE1-54909BB5F470}];3 ;Order_Solution      ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Solution }

    { [{71C12368-F606-4D96-A06E-3A945B02C27E}];3 ;Order_PreviousServiceOrderNo;Element;Field;
                                                  DataType=Code;
                                                  SourceField=Service Order::Previous Service Order No. }

    { [{01D9DC6A-6477-408E-92E8-1C459E1F1CB6}];3 ;Order_OrderAmount   ;Element ;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_OrderAmount := XMLFormatMgtCU.FormatDecimal("Service Order"."Order Amount (LCY)");
                                                                               END;
                                                                                }

    { [{05248860-8B88-44C7-813C-6E628286BEA0}];3 ;Order_DepartmentCodeOther;Element;Field;
                                                  DataType=Code;
                                                  SourceField=Service Order::Department Code (Other) }

    { [{29512D22-0F35-4F64-A35E-F901C2C5F3B6}];3 ;Order_DepartmentCodeContract;Element;Field;
                                                  DataType=Code;
                                                  SourceField=Service Order::Global Dimension 1 Code }

    { [{D68E1CF2-A499-495D-AD47-6751989E9346}];3 ;Order_OnHold        ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::On Hold }

    { [{4B2732B3-85B9-49B6-B194-4D88EDD1A5CD}];3 ;Order_DescriptionOnHold;Element;Field ;
                                                  DataType=Text;
                                                  SourceField=Service Order::Description On Hold }

    { [{37FE003F-956E-41EF-B5C0-9A1525033C79}];3 ;Order_ShippingAgentCode;Element;Field ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Shipping Agent Code }

    { [{88620602-07D3-4FD4-810E-E6579D2AC078}];3 ;Order_EmployeeNo    ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Employee No. }

    { [{34436864-2046-4A91-8EA3-6B44DD96A8F4}];3 ;Order_EmplExternal  ;Element ;Text     }

    { [{7EAA2497-329C-4B73-B74C-D5B6AF135D2B}];3 ;Order_Subcontractor ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Subcontractor }

    { [{ABF4C527-57B0-4A99-821F-6EDC646B9344}];3 ;Order_SubcontractorName;Element;Field ;
                                                  DataType=Text;
                                                  SourceField=Service Order::Subcontractor Name }

    { [{7CBB3ED7-6C9C-49A1-805D-BCABFF5A2D8D}];3 ;Order_Installation  ;Element ;Text    ;
                                                  DataType=Code }

    { [{FDA3F34B-841C-44C5-A9D4-E04EF36FA648}];3 ;Order_InstallationPart;Element;Text   ;
                                                  DataType=Code }

    { [{19FFF308-AB46-40AF-A3B5-17B53D07668D}];3 ;Order_ObjectNo      ;Element ;Text    ;
                                                  DataType=Code }

    { [{694CA761-31E4-42D3-97E3-6B227DBEBB1C}];3 ;Order_ObjectCustomer;Element ;Text    ;
                                                  DataType=Code }

    { [{011AA479-1D3C-4974-9809-3C22C490EBB5}];3 ;Order_Discipline    ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order::Discipline }

    { [{CF243C44-D42C-4499-B1C1-38870AA21A9A}];3 ;Order_FirstPossibleStartingDate;Element;Text;
                                                  DataType=Date;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_FirstPossibleStartingDate := XMLFormatMgtCU.FormatDate("Service Order"."First Possible Starting Date");
                                                                               END;
                                                                                }

    { [{C0115F0C-78A0-4831-A250-00D698104D45}];3 ;Order_LastPossibleEndingDate;Element;Text;
                                                  DataType=Date;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_LastPossibleEndingDate := XMLFormatMgtCU.FormatDate("Service Order"."Last Possible Ending Date");
                                                                               END;
                                                                                }

    { [{77F98F5F-B68E-4D46-ACAB-F484DC5B7253}];3 ;Order_ScheduleRelationOptionNo;Element;Text;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_ScheduleRelationOptionNo := XMLFormatMgtCU.FormatOptionNo("Service Order"."Schedule Relation");
                                                                               END;
                                                                                }

    { [{CCC24A49-000C-4ACF-B512-48167D1E422A}];3 ;Order_ScheduleRelationCaption;Element;Field;
                                                  DataType=Option;
                                                  SourceField=Service Order::Schedule Relation }

    { [{2E84D0AD-C03B-4DE0-BEBF-263E9FC4B3D9}];3 ;Order_HoursBudget   ;Element ;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_HoursBudget := XMLFormatMgtCU.FormatDecimal("Service Order"."Budget Hours");
                                                                               END;
                                                                                }

    { [{EE343424-9B3F-48EF-BE3B-89C1B54D03C6}];3 ;Order_LimitBudgetLabor;Element;Text   ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_LimitBudgetLabor := XMLFormatMgtCU.FormatDecimal("Service Order"."Limit Budget Labor");
                                                                               END;
                                                                                }

    { [{77BD83FF-8720-40E3-B252-122E609F2655}];3 ;Order_LimitBudgetHours;Element;Text   ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_LimitBudgetHours := XMLFormatMgtCU.FormatDecimal("Service Order"."Limit Budget Hours");
                                                                               END;
                                                                                }

    { [{FE9EC4A5-30E5-4237-AC8B-3EEEA2328F18}];3 ;Order_LimitBudgetMaterial;Element;Text;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_LimitBudgetMaterial := XMLFormatMgtCU.FormatDecimal("Service Order"."Limit Budget Material");
                                                                               END;
                                                                                }

    { [{C7A86DCC-940B-4FFF-AEF5-9364EE7C8CFB}];3 ;Order_LimitBudgetTotal;Element;Text   ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_LimitBudgetTotal := XMLFormatMgtCU.FormatDecimal("Service Order"."Limit Budget Total");
                                                                               END;
                                                                                }

    { [{DBFED849-5C94-4885-BBD4-FC9C38D9998A}];3 ;Order_InvoiceBaseAmountLabor;Element;Text;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_InvoiceBaseAmountLabor := XMLFormatMgtCU.FormatDecimal("Service Order"."Invoice Base Amount Labor");
                                                                               END;
                                                                                }

    { [{CEB77A4E-202D-40D2-8BA9-F901804784D8}];3 ;Order_InvoiceBaseHours;Element;Text   ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_InvoiceBaseHours := XMLFormatMgtCU.FormatDecimal("Service Order"."Invoice Base Hours");
                                                                               END;
                                                                                }

    { [{A1DF48C7-DCA2-4C3E-890F-1B10C988F4F2}];3 ;Order_InvoiceBaseAmountMaterial;Element;Text;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_InvoiceBaseAmountMaterial := XMLFormatMgtCU.FormatDecimal("Service Order"."Invoice Base Amount Material");
                                                                               END;
                                                                                }

    { [{74DB30BF-408B-4087-9469-CC2C8718F322}];3 ;Order_InvoiceBaseAmountTotal;Element;Text;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_InvoiceBaseAmountTotal := XMLFormatMgtCU.FormatDecimal("Service Order"."Invoice Base Amount Total");
                                                                               END;
                                                                                }

    { [{439C612A-EE79-4ABD-BD9A-917C0688DE6E}];3 ;Order_InvoiceBaseMethodOptionNo;Element;Text;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Order_InvoiceBaseMethodOptionNo := XMLFormatMgtCU.FormatOptionNo("Service Order"."Invoice Base Method");
                                                                               END;
                                                                                }

    { [{8D184D5D-A694-4FCD-9AF9-C7ECBD6028F9}];3 ;Order_InvoiceBaseMethodCaption;Element;Field;
                                                  DataType=Option;
                                                  SourceField=Service Order::Invoice Base Method }

    { [{A54830E4-66AC-4862-8ED5-50E2FA5D01B9}];3 ;Order_StatusFSA     ;Element ;Text     }

    { [{05B8A328-8861-40A1-A010-20E30001C883}];3 ;ListInstallations   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{D354335E-AB41-4315-AAE0-BE82B0C73D79}];4 ;ServiceInstallation ;Element ;Table   ;
                                                  VariableName=ServInstallation;
                                                  SourceTable=Table2000000026;
                                                  SourceTableView=SORTING(Field1)
                                                                  WHERE(Field1=FILTER(1..));
                                                  MinOccurs=Zero;
                                                  Export::OnPreXMLItem=BEGIN
                                                                         //IF NOT TmpInstalRec.FINDSET(FALSE, FALSE) THEN BEGIN //Table11012802 does not exist anymore
                                                                         //  ServInstallation.SETRANGE(Number,-1);  //* Break doesn't work well (yet) in XML-ports, for that reason solved this way.
                                                                           currXMLport.BREAK;
                                                                         //END;
                                                                       END;

                                                  Export::OnAfterGetRecord=BEGIN
                                                                             //IF ServInstallation.Number > 1 THEN BEGIN
                                                                             //  IF TmpInstalRec.NEXT = 0 THEN //Table11012802 does not exist anymore.
                                                                                 currXMLport.BREAK;
                                                                             //END;

                                                                             //Instal_ServiceOrderNo := "Service Order"."No.";
                                                                             //Instal_Location := TmpInstalRec."Service Location No.";
                                                                             //Instal_Installation := TmpInstalRec.Installation;
                                                                             //Instal_Description := TmpInstalRec.Description;
                                                                             //Instal_Level := FORMAT(TmpInstalRec.Level);
                                                                             //Instal_Chapter := TmpInstalRec.Chapter;
                                                                             //Instal_Paragraph := TmpInstalRec.Paragraph;

                                                                             //lvFrom := 3;
                                                                             //IF TmpInstalRec.Text = '1' THEN
                                                                             //  lvFrom := 1
                                                                             //ELSE BEGIN
                                                                             //  IF TmpInstalRec.Text = '2' THEN
                                                                             //    lvFrom := 2;
                                                                             //END;
                                                                             //GetSplittedCodes(TmpInstalRec.Installation,lvFrom,Instal_InstalChap,Instal_InstalPara,Instal_InstalInst);

                                                                             //Counter := Counter + 1;
                                                                           END;
                                                                            }

    { [{68217F2A-BE76-4129-96FA-118DDD461885}];5 ;Instal_ServiceOrderNo;Element;Text     }

    { [{8E0C9D92-870C-463C-BA42-F98F28C58ED3}];5 ;Instal_Location     ;Element ;Text     }

    { [{6AC3B848-86F1-4E00-A967-656B19B0F11A}];5 ;Instal_Installation ;Element ;Text     }

    { [{0919A76D-D5CE-4AA9-A4BD-2C875FECBED1}];5 ;Instal_Description  ;Element ;Text     }

    { [{37CBCC6E-5936-4572-9057-DB91B419E60E}];5 ;Instal_Level        ;Element ;Text     }

    { [{9018BB72-D851-40CC-A056-DE2023281533}];5 ;Instal_Chapter      ;Element ;Text     }

    { [{F845522E-42DD-4BA2-B594-54E0175F8395}];5 ;Instal_Paragraph    ;Element ;Text     }

    { [{BCCD247C-B7B0-4930-A2D4-6B12D78DBDFD}];5 ;Instal_InstalChap   ;Element ;Text     }

    { [{C4925DCE-D00F-410E-9492-53A6122B3AA7}];5 ;Instal_InstalPara   ;Element ;Text     }

    { [{489A774B-7819-4E7B-9B72-DB6F2E689E20}];5 ;Instal_InstalInst   ;Element ;Text     }

    { [{9B39C892-6F27-4A0C-9E33-FBCFBFA86CAD}];3 ;ListInstallationParts;Element;Text    ;
                                                  MinOccurs=Zero }

    { [{BC7C008B-558D-4373-9440-D0D79C9B14B7}];4 ;ServiceInstalPart   ;Element ;Table   ;
                                                  VariableName=ServInstalPart;
                                                  SourceTable=Table2000000026;
                                                  SourceTableView=SORTING(Field1)
                                                                  WHERE(Field1=FILTER(1..));
                                                  MinOccurs=Zero;
                                                  Export::OnPreXMLItem=BEGIN
                                                                         //IF NOT TmpPartRec.FINDSET(FALSE, FALSE) THEN BEGIN //Table11012803 does not exist anymore.
                                                                         //  ServInstalPart.SETRANGE(Number,-1);  //*Break doesn't work well (yet) in XML-ports, for that reason solved this way.
                                                                           currXMLport.BREAK;
                                                                         //END;
                                                                       END;

                                                  Export::OnAfterGetRecord=BEGIN
                                                                             //IF ServInstalPart.Number > 1 THEN BEGIN
                                                                             //  IF TmpPartRec.NEXT = 0 THEN
                                                                                 currXMLport.BREAK;
                                                                             //END;

                                                                             //InstalPart_ServiceOrderNo := "Service Order"."No.";
                                                                             //InstalPart_Location := TmpPartRec."Service Location No.";
                                                                             //InstalPart_Installation := TmpPartRec.Installation;
                                                                             //InstalPart_Part := TmpPartRec."Installation Part";
                                                                             //InstalPart_Description := TmpPartRec.Description;
                                                                             //InstalPart_Level := FORMAT(TmpPartRec.Level);
                                                                             //InstalPart_Chapter := TmpPartRec.Chapter;
                                                                             //InstalPart_Paragraph := TmpPartRec.Paragraph;

                                                                             //lvFrom := 3;
                                                                             //IF TmpPartRec.Text = '1' THEN
                                                                             //  lvFrom := 1
                                                                             //ELSE BEGIN
                                                                             //  IF TmpPartRec.Text = '2' THEN
                                                                             //    lvFrom := 2;
                                                                             //END;
                                                                             //GetSplittedCodes(TmpPartRec.Installation,3,InstalPart_InstalChap,InstalPart_InstalPara,InstalPart_InstalInst);
                                                                             //GetSplittedCodes(TmpPartRec."Installation Part",lvFrom,InstalPart_PartChap,InstalPart_PartPara,InstalPart_PartPart);

                                                                             //Counter := Counter + 1;
                                                                           END;
                                                                            }

    { [{BE49A099-B72F-478D-95DE-A56DFB53BB92}];5 ;InstalPart_ServiceOrderNo;Element;Text }

    { [{0022C18C-E1B2-471C-94B0-0E57ADCABDB7}];5 ;InstalPart_Location ;Element ;Text     }

    { [{7CDB2C7E-C278-484B-A610-BBA0070AC327}];5 ;InstalPart_Installation;Element;Text   }

    { [{C53CC95D-3F3F-4FD2-8DFD-82F552A2D6A8}];5 ;InstalPart_Part     ;Element ;Text     }

    { [{A4DC9C5A-8A9F-4C71-9F44-0EA260B8BC0C}];5 ;InstalPart_Description;Element;Text    }

    { [{83E75FBF-3776-4417-A9A3-76D57A3E0C39}];5 ;InstalPart_Level    ;Element ;Text     }

    { [{7B11824F-419D-44D2-93FD-E7FD36D5A700}];5 ;InstalPart_Chapter  ;Element ;Text     }

    { [{5F509B7D-A52A-433C-BFB7-8743DC91A589}];5 ;InstalPart_Paragraph;Element ;Text     }

    { [{1951F1FB-B0DC-403D-BD0A-8D1E309021BE}];5 ;InstalPart_InstalChap;Element;Text     }

    { [{CFF4952E-4C6E-436D-9868-761B088D8961}];5 ;InstalPart_InstalPara;Element;Text     }

    { [{0054618F-F90E-44D3-A782-6A8564728116}];5 ;InstalPart_InstalInst;Element;Text     }

    { [{8670EF1A-654A-46BC-A32F-F7345A97E9E4}];5 ;InstalPart_PartChap ;Element ;Text     }

    { [{9B2C0D95-9B2C-4BF1-BC46-A64E2B5053A6}];5 ;InstalPart_PartPara ;Element ;Text     }

    { [{0D4EE8E5-C0B3-4F63-A24A-ECA75D2E474C}];5 ;InstalPart_PartPart ;Element ;Text     }

    { [{66FFB66E-7575-45C8-80B6-7D6FF899E2E1}];3 ;ListSpecifications  ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{EAB4D25A-1BB5-4B6F-B253-E58C7F26F41A}];3 ;ListServiceorderBudgetLines;Element;Text;
                                                  MinOccurs=Zero }

    { [{A908834E-5D95-497D-A652-042BA9FD06E0}];4 ;ServiceorderBudgetLine;Element;Table  ;
                                                  SourceTable=Table11012875;
                                                  SourceTableView=SORTING(Field440,Field10,Field370,Field300,Field630,Field20)
                                                                  WHERE(Field440=CONST(0));
                                                  LinkFields=Field10=FIELD(Field10);
                                                  LinkTable=Service Order;
                                                  MinOccurs=Zero;
                                                  Export::OnAfterGetRecord=BEGIN
                                                                             //* 04-04-2008: Skip lines of cost type 'Subcontracting' if source type of serviceorder is "Estimate".
                                                                             //* Changed at the request of JH/Imtech, according to JH this will be no problem for other customers. DB thinks differently about this.
                                                                             //* Leave it this way as long as no other customer encounter a problem, otherwise JH should find a solution.
                                                                             IF ("Service Order"."Source Type" = "Service Order"."Source Type"::Estimate) AND
                                                                                ("Service Order Budget Line"."Cost Type" = "Service Order Budget Line"."Cost Type"::Subcontracting)
                                                                             THEN
                                                                               currXMLport.SKIP;

                                                                             Budget_InstallationDescription := '';
                                                                             Budget_InstalChapter := '';
                                                                             Budget_InstalChapterDescription := '';
                                                                             Budget_InstalParagraph := '';
                                                                             Budget_InstalParagraphDescription := '';
                                                                             Budget_PartDescription := '';
                                                                             Budget_PartChapter := '';
                                                                             Budget_PartChapterDescription := '';
                                                                             Budget_PartParagraph := '';
                                                                             Budget_PartParagraphDescription := '';
                                                                             Budget_InstalChap := '';
                                                                             Budget_InstalPara := '';
                                                                             Budget_InstalInst := '';
                                                                             Budget_PartChap := '';
                                                                             Budget_PartPara := '';
                                                                             Budget_PartPart := '';

                                                                             //IF "Service Order Budget Line".Installation <> '' THEN BEGIN
                                                                             //  GetSplittedCodes("Service Order Budget Line".Installation,3,Budget_InstalChap,Budget_InstalPara,Budget_InstalInst);
                                                                             //  IF lvInstalRec.GET("Service Order Budget Line"."Service Location No.","Service Order Budget Line".Installation) THEN BEGIN
                                                                             //    Budget_InstallationDescription := lvInstalRec.Description;
                                                                             //    Budget_InstalChapter := lvInstalRec.Chapter;
                                                                             //    Budget_InstalParagraph := lvInstalRec.Paragraph;
                                                                             //    IF lvInstalRec.Chapter <> '' THEN BEGIN
                                                                             //      IF lvInstalRec2.GET(lvInstalRec."Service Location No.",lvInstalRec.Chapter) THEN
                                                                             //        Budget_InstalChapterDescriptio := lvInstalRec2.Description;
                                                                             //    END;
                                                                             //    IF lvInstalRec.Paragraph <> '' THEN BEGIN
                                                                             //      IF lvInstalRec2.GET(lvInstalRec."Service Location No.",lvInstalRec.Paragraph) THEN
                                                                             //        Budget_InstalParagraphDescript := lvInstalRec2.Description;
                                                                             //    END;
                                                                             //    IF "Service Order Budget Line"."Installation Part" <> '' THEN BEGIN
                                                                             //      GetSplittedCodes("Service Order Budget Line"."Installation Part",3,Budget_PartChap,Budget_PartPara,Budget_PartPart);
                                                                             //      IF lvPartRec.GET(
                                                                             //        lvInstalRec."Service Location No.",lvInstalRec.Installation,
                                                                             //        lvInstalRec."Part Group","Service Order Budget Line"."Installation Part")
                                                                             //      THEN BEGIN
                                                                             //        Budget_PartDescription := lvPartRec.Description;
                                                                             //        Budget_PartChapter := lvPartRec.Chapter;
                                                                             //        Budget_PartParagraph := lvPartRec.Paragraph;
                                                                             //        IF lvPartRec.Chapter <> '' THEN BEGIN
                                                                             //          IF lvPartRec2.GET(
                                                                             //            lvInstalRec."Service Location No.",lvInstalRec.Installation,
                                                                             //            lvInstalRec."Part Group",lvPartRec.Chapter)
                                                                             //          THEN
                                                                             //            Budget_PartChapterDescription := lvPartRec2.Description;
                                                                             //        END;
                                                                             //        IF lvPartRec.Paragraph <> '' THEN BEGIN
                                                                             //          IF lvPartRec2.GET(
                                                                             //            lvInstalRec."Service Location No.",lvInstalRec.Installation,
                                                                             //            lvInstalRec."Part Group",lvPartRec.Paragraph)
                                                                             //          THEN
                                                                             //            Budget_PartParagraphDescriptio := lvPartRec2.Description;
                                                                             //        END;
                                                                             //      END;
                                                                             //    END;
                                                                             //  END;
                                                                             //END;

                                                                             IF EmptySignSplittedInstCode <> '' THEN BEGIN
                                                                               IF Budget_InstalChap = '' THEN
                                                                                 Budget_InstalChap := EmptySignSplittedInstCode;
                                                                               IF Budget_InstalPara = '' THEN
                                                                                 Budget_InstalPara := EmptySignSplittedInstCode;
                                                                               IF Budget_InstalInst = '' THEN
                                                                                 Budget_InstalInst := EmptySignSplittedInstCode;
                                                                               IF Budget_PartChap = '' THEN
                                                                                 Budget_PartChap := EmptySignSplittedInstCode;
                                                                               IF Budget_PartPara = '' THEN
                                                                                 Budget_PartPara := EmptySignSplittedInstCode;
                                                                               IF Budget_PartPart = '' THEN BEGIN
                                                                                 Budget_PartPart := EmptySignSplittedInstCode;
                                                                                 Budget_PartDescription := Text000;
                                                                               END;
                                                                             END;

                                                                             Counter := Counter + 1;
                                                                           END;
                                                                            }

    { [{5F7ACF3C-1891-4605-AE15-E0B4B881E989}];5 ;Budget_ServiceOrderNo;Element;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Service Order No. }

    { [{E42DBEC8-F808-45FC-8F65-77382FF232F7}];5 ;Budget_LineNo       ;Element ;Field   ;
                                                  DataType=Integer;
                                                  SourceField=Service Order Budget Line::Line No. }

    { [{2215E35B-224B-4BB5-8E18-642EA5BEA225}];5 ;Budget_CombinedKey  ;Element ;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Budget_CombinedKey :=
                                                                                   "Service Order Budget Line"."Service Order No." + '_' +
                                                                                   FormatLineNoToText("Service Order Budget Line"."Line No.");
                                                                               END;
                                                                                }

    { [{ACE8DE93-ECB3-4D8E-ADAE-9188350FDFC6}];5 ;Budget_Description  ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order Budget Line::Description }

    { [{A6104E30-B71F-469E-8B29-70877A213DEB}];5 ;Budget_Description2 ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order Budget Line::Description 2 }

    { [{AB52E24E-8ED8-441F-9BB6-280EBE68074B}];5 ;Budget_Quantity     ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Budget_Quantity := XMLFormatMgtCU.FormatDecimal("Service Order Budget Line".Quantity);
                                                                               END;
                                                                                }

    { [{ECFED49F-3C2B-49A1-8553-AB75C3083CC3}];5 ;Budget_UnitOfMeasure;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Unit of Measure }

    { [{833282F4-2F75-414C-8CE0-C6DAEFE211D0}];5 ;Budget_TimeQuantity ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Budget_TimeQuantity := XMLFormatMgtCU.FormatDecimal("Service Order Budget Line"."Time Quantity");
                                                                               END;
                                                                                }

    { [{CC8437D3-E38E-4ECA-AD89-13C3FCD9C2BF}];5 ;Budget_UnitOfTime   ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Unit of Time }

    { [{8FB849F1-7752-45F1-87BD-CB3A99FCAFC9}];5 ;Budget_CostTypeOptionNo;Element;Text  ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Budget_CostTypeOptionNo := XMLFormatMgtCU.FormatOptionNo("Service Order Budget Line"."Cost Type");
                                                                               END;
                                                                                }

    { [{D252B50C-09D0-4A30-8269-BB52A9DCDD00}];5 ;Budget_CostTypeCaption;Element;Field  ;
                                                  DataType=Option;
                                                  SourceField=Service Order Budget Line::Cost Type }

    { [{1416082F-3C1C-4DD3-B3F0-C38D71C897E6}];5 ;Budget_CostObject   ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Cost Object }

    { [{8EB9359A-96F2-4832-8968-6367E0CDB11D}];5 ;Budget_Norm         ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Budget_Norm := XMLFormatMgtCU.FormatDecimal("Service Order Budget Line".Norm);
                                                                               END;
                                                                                }

    { [{87746B6A-8EAC-4EC2-89ED-28484AC0B3B0}];5 ;Budget_RateCode     ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Rate Code }

    { [{27C23444-40D7-4357-BA96-D77BA1971973}];5 ;Budget_Rate         ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Budget_Rate := XMLFormatMgtCU.FormatDecimal("Service Order Budget Line".Rate);
                                                                               END;
                                                                                }

    { [{6BCFECBD-E64C-4422-8533-D500F5A8D604}];5 ;Budget_Hours        ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Budget_Hours := XMLFormatMgtCU.FormatDecimal("Service Order Budget Line".Hours);
                                                                               END;
                                                                                }

    { [{5DDF1346-08C1-4764-B83E-A4FB73AA80E3}];5 ;Budget_Price        ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Budget_Price := XMLFormatMgtCU.FormatDecimal("Service Order Budget Line".Price);
                                                                               END;
                                                                                }

    { [{05A36047-6595-43C0-915D-9FA4107E3C80}];5 ;Budget_GrossPrice   ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Budget_GrossPrice := XMLFormatMgtCU.FormatDecimal("Service Order Budget Line"."Gross Price");
                                                                               END;
                                                                                }

    { [{98739E12-B16D-4CDA-AEB1-A0BDC491CBF9}];5 ;Budget_DiscountPerc ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Budget_DiscountPerc := XMLFormatMgtCU.FormatDecimal("Service Order Budget Line"."Discount %");
                                                                               END;
                                                                                }

    { [{93B7F85A-61BD-42B5-921B-3C2623B83EAD}];5 ;Budget_Amount       ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Budget_Amount := XMLFormatMgtCU.FormatDecimal("Service Order Budget Line".Amount);
                                                                               END;
                                                                                }

    { [{CA1BE4A2-F89F-4879-8904-34166F66EDEA}];5 ;Budget_ItemNo       ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Item No. }

    { [{412CE951-C9CA-4966-98E4-EB37E9EB0C80}];5 ;Budget_BasicItem    ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Basic Item }

    { [{144EBB4C-C559-4D93-87D8-536AA014FABF}];5 ;Budget_TradeItem    ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Trade Item }

    { [{992D4CC1-CF7C-41AF-8F0E-2912108DF68C}];5 ;Budget_VendorTradeItem;Element;Field  ;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Manufacturer }

    { [{5771E397-A1EC-4B36-BFD8-766C1660540B}];5 ;Budget_Manufacturer ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Vendor (Trade Item) }

    { [{B8147B96-07AB-4E68-81F6-4A293D8706F1}];5 ;Budget_CostComponent;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Cost Component }

    { [{CB0E0AA3-27DA-45D9-8191-C52A046C2AC2}];5 ;Budget_VendorNo     ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Vendor }

    { [{A500B4BC-2C36-4C91-B269-60D7FE04E6AD}];5 ;Budget_Finished     ;Element ;Text    ;
                                                  DataType=Boolean;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Budget_Finished := XMLFormatMgtCU.FormatBoolean("Service Order Budget Line".Finished);
                                                                               END;
                                                                                }

    { [{58388556-8BCE-433F-9D27-67273E6DA81E}];5 ;Budget_ServiceLocationCode;Element;Field;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Service Location No. }

    { [{9C3509D4-C2E6-4992-9E53-69131635BBE5}];5 ;Budget_Installation ;Element ;Text    ;
                                                  DataType=Code }

    { [{3BD27FC8-EF1B-4B2E-B40B-B2845C4BA76C}];5 ;Budget_InstallationDescription;Element;Text }

    { [{5B0CDA76-54D1-4718-A528-23EC6D3B10CC}];5 ;Budget_InstalChapter;Element ;Text     }

    { [{B5ACBF98-E547-4ED1-A2B3-500D974CB374}];5 ;Budget_InstalChapterDescription;Element;Text }

    { [{0DDE7A46-7A9C-4108-ADED-F0ECC0A4ED2E}];5 ;Budget_InstalParagraph;Element;Text    }

    { [{1C64DAF5-9ECD-4F22-9E18-32832B3219BD}];5 ;Budget_InstalParagraphDescription;Element;Text }

    { [{7019660B-8879-4CCB-AE66-763F5E88B7C8}];5 ;Budget_InstallationPart;Element;Text  ;
                                                  DataType=Code }

    { [{40D917EC-4C69-474C-BE1A-18B17945879C}];5 ;Budget_PartDescription;Element;Text    }

    { [{B7365C51-CCFE-4D63-A86D-6637CE347C11}];5 ;Budget_PartChapter  ;Element ;Text     }

    { [{B35B991B-6C73-4B70-B993-FD2672CFF53D}];5 ;Budget_PartChapterDescription;Element;Text }

    { [{5BB6B3A5-8E20-48E8-AF6E-50FB84F663C1}];5 ;Budget_PartParagraph;Element ;Text     }

    { [{DB2FDE8C-4694-455D-9032-8D7C0014703A}];5 ;Budget_PartParagraphDescription;Element;Text }

    { [{5C9CB065-BB1A-47BA-88CA-9E8843AF4597}];5 ;Budget_InstalChap   ;Element ;Text     }

    { [{E12BAB79-4FAC-4934-91AD-744C46FE5C1D}];5 ;Budget_InstalPara   ;Element ;Text     }

    { [{4F1B3ABF-E8E3-42F5-B2F0-456E851AFE82}];5 ;Budget_InstalInst   ;Element ;Text     }

    { [{35CDE5E1-F120-4B87-A108-8C714A38AEE5}];5 ;Budget_PartChap     ;Element ;Text     }

    { [{D15E97EA-C81D-4CB7-84E1-24591EE805C5}];5 ;Budget_PartPara     ;Element ;Text     }

    { [{DCCBEE07-10CB-4A5D-AFF0-C79DC6A9C1B0}];5 ;Budget_PartPart     ;Element ;Text     }

    { [{40A03875-2473-4808-BED0-A1BD57F0D1BD}];5 ;Budget_ObjectNo     ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Object No. }

    { [{A83F15B2-D943-49CD-93A0-67D4486EA990}];5 ;Budget_ObjectCustomer;Element;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Object Customer }

    { [{15A8C371-D303-4302-8AB0-7D7284EC496E}];5 ;Budget_Building     ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order Budget Line::Building }

    { [{11191640-6580-4A47-9D17-E5D27A296F15}];5 ;Budget_Floor        ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order Budget Line::Floor }

    { [{E47454C6-84BE-4319-9F5A-55B9E3C01793}];5 ;Budget_Room         ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Order Budget Line::Room }

    { [{5CDE260D-30DA-424C-B0AC-CEDBA0A65226}];5 ;Budget_Discipline   ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Discipline }

    { [{4787CE8A-C8F7-47A9-9F93-58AE12322704}];5 ;Budget_TradeSpeciality;Element;Field  ;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Trade Speciality }

    { [{FBEB293E-2EEC-4BF6-A38C-04DB9AA69557}];5 ;Budget_TradeExpertise;Element;Field   ;
                                                  DataType=Code;
                                                  SourceField=Service Order Budget Line::Trade Expertise }

    { [{1443163B-EF90-442D-851F-701CD863BFE2}];3 ;ListServiceAdviceOrderLines;Element;Text;
                                                  MinOccurs=Zero }

    { [{C9506C35-829D-4389-9920-620514417B8F}];4 ;ServiceAdviceOrderLine;Element;Table  ;
                                                  SourceTable=Table11012055;
                                                  SourceTableView=SORTING(Field800,Field1,Field810,Field5)
                                                                  WHERE(Field800=CONST(1));
                                                  LinkFields=Field810=FIELD(Field10);
                                                  LinkTable=Service Order;
                                                  MinOccurs=Zero;
                                                  Export::OnAfterGetRecord=BEGIN
                                                                             "Advice Order Line".CALCFIELDS(
                                                                               "Item Type",
                                                                               "Item Brand",
                                                                               "Item Series");

                                                                             Advice_InstallationDescription := '';
                                                                             Advice_InstalChapter := '';
                                                                             Advice_InstalChapterDescription := '';
                                                                             Advice_InstalParagraph := '';
                                                                             Advice_InstalParagraphDescription := '';
                                                                             Advice_PartDescription := '';
                                                                             Advice_PartChapter := '';
                                                                             Advice_PartChapterDescription := '';
                                                                             Advice_PartParagraph := '';
                                                                             Advice_PartParagraphDescription := '';
                                                                             Advice_InstalChap := '';
                                                                             Advice_InstalPara := '';
                                                                             Advice_InstalInst := '';
                                                                             Advice_PartChap := '';
                                                                             Advice_PartPara := '';
                                                                             Advice_PartPart := '';

                                                                             //IF "Advice Order Line"."Service Installation" <> '' THEN BEGIN
                                                                             //  GetSplittedCodes("Advice Order Line"."Service Installation",3,Advice_InstalChap,Advice_InstalPara,Advice_InstalInst);
                                                                             //  IF lvInstalRec.GET("Service Order"."Service Location No.","Advice Order Line"."Service Installation") THEN BEGIN
                                                                             //    Advice_InstallationDescription := lvInstalRec.Description;
                                                                             //    Advice_InstalChapter := lvInstalRec.Chapter;
                                                                             //    Advice_InstalParagraph := lvInstalRec.Paragraph;
                                                                             //    IF lvInstalRec.Chapter <> '' THEN BEGIN
                                                                             //      IF lvInstalRec2.GET(lvInstalRec."Service Location No.",lvInstalRec.Chapter) THEN
                                                                             //        Advice_InstalChapterDescriptio := lvInstalRec2.Description;
                                                                             //    END;
                                                                             //    IF lvInstalRec.Paragraph <> '' THEN BEGIN
                                                                             //      IF lvInstalRec2.GET(lvInstalRec."Service Location No.",lvInstalRec.Paragraph) THEN
                                                                             //        Advice_InstalParagraphDescript := lvInstalRec2.Description;
                                                                             //    END;
                                                                             //    IF "Advice Order Line"."Service Installation Part" <> '' THEN BEGIN
                                                                             //      GetSplittedCodes("Advice Order Line"."Service Installation Part",3,Advice_PartChap,Advice_PartPara,Advice_PartPart);
                                                                             //      IF lvPartRec.GET(
                                                                             //        lvInstalRec."Service Location No.",lvInstalRec.Installation,
                                                                             //        lvInstalRec."Part Group","Advice Order Line"."Service Installation Part")
                                                                             //      THEN BEGIN
                                                                             //        Advice_PartDescription := lvPartRec.Description;
                                                                             //        Advice_PartChapter := lvPartRec.Chapter;
                                                                             //        Advice_PartParagraph := lvPartRec.Paragraph;
                                                                             //        IF lvPartRec.Chapter <> '' THEN BEGIN
                                                                             //          IF lvPartRec2.GET(
                                                                             //            lvInstalRec."Service Location No.",lvInstalRec.Installation,
                                                                             //            lvInstalRec."Part Group",lvPartRec.Chapter)
                                                                             //          THEN
                                                                             //            Advice_PartChapterDescription := lvPartRec2.Description;
                                                                             //        END;
                                                                             //        IF lvPartRec.Paragraph <> '' THEN BEGIN
                                                                             //          IF lvPartRec2.GET(
                                                                             //            lvInstalRec."Service Location No.",lvInstalRec.Installation,
                                                                             //            lvInstalRec."Part Group",lvPartRec.Paragraph)
                                                                             //          THEN
                                                                             //            Advice_PartParagraphDescriptio := lvPartRec2.Description;
                                                                             //        END;
                                                                             //      END;
                                                                             //    END;
                                                                             //  END;
                                                                             //END;

                                                                             IF EmptySignSplittedInstCode <> '' THEN BEGIN
                                                                               IF Advice_InstalChap = '' THEN
                                                                                 Advice_InstalChap := EmptySignSplittedInstCode;
                                                                               IF Advice_InstalPara = '' THEN
                                                                                 Advice_InstalPara := EmptySignSplittedInstCode;
                                                                               IF Advice_InstalInst = '' THEN
                                                                                 Advice_InstalInst := EmptySignSplittedInstCode;
                                                                               IF Advice_PartChap = '' THEN
                                                                                 Advice_PartChap := EmptySignSplittedInstCode;
                                                                               IF Advice_PartPara = '' THEN
                                                                                 Advice_PartPara := EmptySignSplittedInstCode;
                                                                               IF Advice_PartPart = '' THEN BEGIN
                                                                                 Advice_PartPart := EmptySignSplittedInstCode;
                                                                                 Advice_PartDescription := Text000;
                                                                               END;
                                                                             END;

                                                                             Counter := Counter + 1;
                                                                           END;
                                                                            }

    { [{42D4E5EC-072B-4FCE-A0F6-D7481F9C1F3C}];5 ;Advice_ServiceOrderNo;Element;Field   ;
                                                  DataType=Code;
                                                  SourceField=Advice Order Line::Service Order No. }

    { [{27264DBC-207D-49D2-9E3C-A538A0E91030}];5 ;Advice_LineNo       ;Element ;Field   ;
                                                  DataType=Integer;
                                                  SourceField=Advice Order Line::Line No. }

    { [{97BC2417-8F14-4923-BD4B-1CB6A40D8963}];5 ;Advice_CombinedKey  ;Element ;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Advice_CombinedKey :=
                                                                                   "Advice Order Line"."Service Order No." + '_' +
                                                                                   FormatLineNoToText("Advice Order Line"."Line No.");
                                                                               END;
                                                                                }

    { [{303DB77B-B329-4560-A588-11125B77A5E1}];5 ;Advice_ItemNo       ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Advice Order Line::Item No. }

    { [{BB9178CE-773E-4CD1-995B-954B52F7EDF5}];5 ;Advice_BasicItem    ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Advice Order Line::Basic Item }

    { [{9D0EDC39-449F-4547-99E4-FB948FA00DCF}];5 ;Advice_TradeItem    ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Advice Order Line::Trade Item }

    { [{2A287C51-F223-4561-9B5D-156762DD5D98}];5 ;Advice_VendorTradeItem;Element;Field  ;
                                                  DataType=Code;
                                                  SourceField=Advice Order Line::Vendor (Trade Item) }

    { [{006AAFEB-F37C-4121-8621-E4D7E7E6400A}];5 ;Advice_Manufacturer ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Advice Order Line::Manufacturer }

    { [{8E4A6D63-05DD-4023-9DDF-6A1AB8AA7405}];5 ;Advice_ItemType     ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Advice Order Line::Item Type }

    { [{2BE49C7F-578C-4A71-8C68-67580E9892CE}];5 ;Advice_ItemBrand    ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Advice Order Line::Item Brand }

    { [{FA62D65D-5999-4E33-A829-656FF8D72797}];5 ;Advice_ItemSeries   ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Advice Order Line::Item Series }

    { [{23D09BAB-E90A-43EB-8377-40167AD3EEED}];5 ;Advice_Vendor       ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Advice Order Line::Vendor }

    { [{160F08CA-C272-404B-A494-E19E44E364A0}];5 ;Advice_CostTypeOptionNo;Element;Text  ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Advice_CostTypeOptionNo := XMLFormatMgtCU.FormatOptionNo("Advice Order Line"."Cost Type");
                                                                               END;
                                                                                }

    { [{90667082-7BAC-4B7F-B7A0-5FB60CC0DAA7}];5 ;Advice_CostTypeCaption;Element;Field  ;
                                                  DataType=Option;
                                                  SourceField=Advice Order Line::Cost Type }

    { [{84DB4FBC-0F60-4416-ACFA-C1EC2869A4EE}];5 ;Advice_CostObject   ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Advice Order Line::Cost Object }

    { [{AB4EC03B-37FF-48ED-AA8F-51A55274CF74}];5 ;Advice_CostComponent;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Advice Order Line::Cost Component }

    { [{C027E36A-FD2C-4854-A237-4CE22A9B7D38}];5 ;Advice_Description  ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Advice Order Line::Description }

    { [{D4FB75EB-FDB6-4BCC-B6D8-8A8118795F65}];5 ;Advice_Description2 ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Advice Order Line::Description 2 }

    { [{ED568EB9-334F-42C6-BFC2-1B8A7DE63799}];5 ;Advice_AdditionalCost;Element;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Advice_AdditionalCost := XMLFormatMgtCU.FormatBoolean("Advice Order Line"."Additional Cost (Service)");
                                                                               END;
                                                                                }

    { [{A8125CEE-D3A9-4C16-88CF-0C6EEB5CA5FC}];5 ;Advice_QuantityBudget;Element;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Advice_QuantityBudget := XMLFormatMgtCU.FormatDecimal("Advice Order Line"."Quantity (Budget)");
                                                                               END;
                                                                                }

    { [{5D57AA84-2C6E-47E4-9319-056084DECEEE}];5 ;Advice_QuantityAdvice;Element;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Advice_QuantityAdvice := XMLFormatMgtCU.FormatDecimal("Advice Order Line"."Quantity (Advice)");
                                                                               END;
                                                                                }

    { [{29CA90F5-F9EC-46B6-8F8A-EBCAF9C04ECD}];5 ;Advice_QuantityProcessed;Element;Text ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Advice_QuantityProcessed := XMLFormatMgtCU.FormatDecimal("Advice Order Line"."Quantity (Processed)");
                                                                               END;
                                                                                }

    { [{EEDB0BA8-F241-4EDA-81F8-254C10C066DE}];5 ;Advice_QuantityReceived;Element;Text  ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Advice_QuantityReceived := XMLFormatMgtCU.FormatDecimal("Advice Order Line".ReceivedPurchaseQuantity(''));
                                                                               END;
                                                                                }

    { [{956E45A3-B5D2-4AF8-B4AE-171F71B221B1}];5 ;Advice_UnitOfMeasure;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Advice Order Line::Unit of Measure }

    { [{6CA72794-51D2-4E29-8BEB-22E3274C432D}];5 ;Advice_GrossPrice   ;Element ;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Advice_GrossPrice := XMLFormatMgtCU.FormatDecimal("Advice Order Line"."Gross Price (LCY)");
                                                                               END;
                                                                                }

    { [{E57F7AE8-FF1D-4996-BC68-E75B0CB937AA}];5 ;Advice_DiscountPerc ;Element ;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Advice_DiscountPerc := XMLFormatMgtCU.FormatDecimal("Advice Order Line"."Discount %");
                                                                               END;
                                                                                }

    { [{17167FDF-AA3E-4E3C-80B5-77E9E91FEC90}];5 ;Advice_Price        ;Element ;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Advice_Price := XMLFormatMgtCU.FormatDecimal("Advice Order Line"."Price (LCY)");
                                                                               END;
                                                                                }

    { [{F6C62426-C309-451A-B19E-B5C5AE057617}];5 ;Advice_TransactionOptionNo;Element;Text;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Advice_TransactionOptionNo := XMLFormatMgtCU.FormatOptionNo("Advice Order Line".Transaction);
                                                                               END;
                                                                                }

    { [{633C59CE-252E-47AF-A80A-18C68DB752DC}];5 ;Advice_TransactionCaption;Element;Field;
                                                  DataType=Option;
                                                  SourceField=Advice Order Line::Transaction }

    { [{2778193E-7EC5-4850-B4E1-DC3E9A354E6D}];5 ;Advice_ProcessStatusOptionNo;Element;Text;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Advice_ProcessStatusOptionNo := XMLFormatMgtCU.FormatOptionNo("Advice Order Line"."Process Status");
                                                                               END;
                                                                                }

    { [{14B397DF-2AE1-4BC5-AFA1-3AF20E46E72A}];5 ;Advice_ProcessStatusCaption;Element;Field;
                                                  DataType=Option;
                                                  SourceField=Advice Order Line::Process Status }

    { [{11751EC1-5200-4D71-9308-B190870E2F1B}];5 ;Advice_Processed    ;Element ;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Advice_Processed := XMLFormatMgtCU.FormatBoolean("Advice Order Line".Processed);
                                                                               END;
                                                                                }

    { [{20C19A3B-99F8-4B37-B8F4-B592596C91F2}];5 ;Advice_OrderDate    ;Element ;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Advice_OrderDate := XMLFormatMgtCU.FormatDate("Advice Order Line"."Order Date");
                                                                               END;
                                                                                }

    { [{74349581-2385-40F5-AC7D-3DA8BC3CD0C1}];5 ;Advice_DeliveryPeriod;Element;Field   ;
                                                  DataType=Code;
                                                  SourceField=Advice Order Line::Delivery Period }

    { [{12E6FDC0-FC97-4306-882F-F9B5A0234D3F}];5 ;Advice_ShipmentDate ;Element ;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Advice_ShipmentDate := XMLFormatMgtCU.FormatDate("Advice Order Line"."Receipt Date");
                                                                               END;
                                                                                }

    { [{A5164047-CE79-4BDE-8E90-FC336DD6C1A1}];5 ;Advice_DeliverOptionNo;Element;Text   ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Advice_DeliverOptionNo := XMLFormatMgtCU.FormatOptionNo("Advice Order Line".Deliver);
                                                                               END;
                                                                                }

    { [{F62D5BB3-B944-4E03-830D-C543499CA59B}];5 ;Advice_DeliverCaption;Element;Field   ;
                                                  DataType=Option;
                                                  SourceField=Advice Order Line::Deliver }

    { [{B5472846-292B-4981-8D26-6B8BDC38C08F}];5 ;Advice_Location     ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Advice Order Line::Location Code }

    { [{3130E52E-DB55-4017-8AD1-89A1CE86CAA7}];5 ;Advice_ShipToLocation;Element;Field   ;
                                                  DataType=Code;
                                                  SourceField=Advice Order Line::Ship To Location }

    { [{361FE0D9-F300-43EE-A5FB-EC75BAAD9AC9}];5 ;Advice_Installation ;Element ;Text    ;
                                                  DataType=Code }

    { [{571913C4-4F0D-4ABC-BA98-0EB66AE9BA50}];5 ;Advice_InstallationDescription;Element;Text }

    { [{3DE44CEE-DEAD-44F8-BE40-4664D3DD019D}];5 ;Advice_InstalChapter;Element ;Text     }

    { [{6442F48B-19AE-496E-BCAF-A79A5F8E31E9}];5 ;Advice_InstalChapterDescription;Element;Text }

    { [{5703E575-A39D-40FF-A065-5E616DDE122B}];5 ;Advice_InstalParagraph;Element;Text    }

    { [{0DE4A9DE-99D0-482F-9416-7E6692D8F03C}];5 ;Advice_InstalParagraphDescription;Element;Text }

    { [{FD443D44-1369-4B6E-B797-F7C9ADAC399D}];5 ;Advice_InstallationPart;Element;Text  ;
                                                  DataType=Code }

    { [{6D686761-08F4-4841-A0CD-C6590289D574}];5 ;Advice_PartDescription;Element;Text    }

    { [{770CB73B-53BB-4F4E-9A02-191275FA64FE}];5 ;Advice_PartChapter  ;Element ;Text     }

    { [{54BCD138-3C1D-49CF-90F0-B5E1E80D8157}];5 ;Advice_PartChapterDescription;Element;Text }

    { [{5D34C49B-554A-4582-92CA-3E2E34B4D7B9}];5 ;Advice_PartParagraph;Element ;Text     }

    { [{F41C5C51-F81A-46E1-B170-A9DFF67B9B06}];5 ;Advice_PartParagraphDescription;Element;Text }

    { [{2C8CD1E3-212F-4641-874F-91F60E170D8B}];5 ;Advice_InstalChap   ;Element ;Text     }

    { [{3BF1DEA3-AB18-4E32-BED2-534F494B4E08}];5 ;Advice_InstalPara   ;Element ;Text     }

    { [{3FC33F74-3AEF-438F-972B-3248A72EB7A1}];5 ;Advice_InstalInst   ;Element ;Text     }

    { [{671871E4-BAD1-4F24-B5A7-D4C289F720E6}];5 ;Advice_PartChap     ;Element ;Text     }

    { [{2154D0D4-56FB-466E-98C2-6245CA745E78}];5 ;Advice_PartPara     ;Element ;Text     }

    { [{D0C70337-1493-41F7-B69C-319E456FA502}];5 ;Advice_PartPart     ;Element ;Text     }

    { [{3368ADC0-6848-4E3E-8C19-D3E4A3F3E198}];3 ;ListContractAgreement;Element;Text    ;
                                                  MinOccurs=Zero }

    { [{9FB426B3-5702-4C10-8EAD-B36077057863}];4 ;ServorderContractAgreement;Element;Table;
                                                  SourceTable=Table11012882;
                                                  SourceTableView=SORTING(Field1,Field2,Field7,Field3)
                                                                  WHERE(Field1=CONST(1),
                                                                        Field7=CONST(0));
                                                  LinkFields=Field2=FIELD(Field60);
                                                  LinkTable=Service Order;
                                                  MinOccurs=Zero;
                                                  Export::OnAfterGetRecord=BEGIN
                                                                             Counter := Counter + 1;
                                                                           END;
                                                                            }

    { [{A4D5D2A1-1D8D-4379-B9E2-CD6A248F7D1E}];5 ;ContrAgree_ServiceOrderNo;Element;Text;
                                                  DataType=Code;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 ContrAgree_ServiceOrderNo := "Service Order"."No.";
                                                                               END;
                                                                                }

    { [{56931CAF-8429-4817-AA24-117AAB3BAFBF}];5 ;ContrAgree_LineNo   ;Element ;Field   ;
                                                  DataType=Integer;
                                                  SourceField=Service Text::Line No. }

    { [{F3537EE8-384C-4E7C-A1A9-9E371C29679B}];5 ;ContrAgree_CombinedKey;Element;Text   ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 ContrAgree_CombinedKey := "Service Order"."No." + '_' + FormatLineNoToText("Service Text"."Line No.");
                                                                               END;
                                                                                }

    { [{04B0F055-E6F5-44B1-81AB-726E48E489A5}];5 ;ContrAgree_Date     ;Element ;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 ContrAgree_Date := XMLFormatMgtCU.FormatDate("Service Text".Date);
                                                                               END;
                                                                                }

    { [{EA1D2636-A39C-4DE4-A115-3FE12DEB8CF7}];5 ;ContrAgree_Comment  ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Service Text::Comment }

    { [{684FEAB3-31D7-466E-90AE-035F5B40F8AC}];3 ;ListReportProcedure ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{C14D182D-80E7-43AD-BAC4-C4186CA8689A}];4 ;ServorderReportProcedure;Element;Table;
                                                  VariableName=<Service Text>;
                                                  SourceTable=Table11012882;
                                                  SourceTableView=SORTING(Field1,Field2,Field7,Field3)
                                                                  WHERE(Field1=CONST(0));
                                                  LinkFields=Field2=FIELD(Field65);
                                                  LinkTable=Service Order;
                                                  MinOccurs=Zero;
                                                  Export::OnAfterGetRecord=BEGIN
                                                                             Counter := Counter + 1;
                                                                           END;
                                                                            }

    { [{9DAF411D-829B-42FF-86A0-9F6AD195DEBD}];5 ;ReportProc_ServiceOrderNo;Element;Text;
                                                  DataType=Code;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 ReportProc_ServiceOrderNo := "Service Order"."No.";
                                                                               END;
                                                                                }

    { [{5DFFB44B-5FC4-423C-8BC0-FFA4177D1D53}];5 ;ReportProc_LineNo   ;Element ;Field   ;
                                                  DataType=Integer;
                                                  SourceField=<Service Text>::Line No. }

    { [{4150A19B-C5BA-422C-80E2-EFC1B2D8EBB5}];5 ;ReportProc_CombinedKey;Element;Text   ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 ReportProc_CombinedKey := "Service Order"."No." + '_' + FormatLineNoToText("<Service Text>"."Line No.");
                                                                               END;
                                                                                }

    { [{6E99FC0C-6ED4-47B4-899C-A76EC8D9D093}];5 ;ReportProc_Date     ;Element ;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 ReportProc_Date := XMLFormatMgtCU.FormatDate("<Service Text>".Date);
                                                                               END;
                                                                                }

    { [{7CE2899F-AEAF-4B92-8255-CA2E71CEE395}];5 ;ReportProc_Comment  ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=<Service Text>::Comment }

    { [{B2862F23-1218-44F4-8E50-0FB9FA4348E6}];3 ;ListReferencePeriod ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{10259741-F06A-4A95-ACBC-85CBB1456547}];4 ;ServorderReferencePeriod;Element;Table;
                                                  SourceTable=Table11020272;
                                                  SourceTableView=SORTING(Field10,Field100,Field20)
                                                                  WHERE(Field10=CONST(3));
                                                  LinkFields=Field100=FIELD(Field10);
                                                  LinkTable=Service Order;
                                                  MinOccurs=Zero;
                                                  Export::OnAfterGetRecord=BEGIN
                                                                             "Reference Period".CALCFIELDS(
                                                                               "Description Ref. Point Start",
                                                                               "Description Ref. Point End");

                                                                             "Reference Period".GetNorm("Reference Period");

                                                                             Counter := Counter + 1;
                                                                           END;
                                                                            }

    { [{1423A6DB-A7AA-4457-976E-145E0B1CA898}];5 ;RefPeriod_ServiceOrderNo;Element;Field;
                                                  DataType=Code;
                                                  SourceField=Reference Period::Document No. }

    { [{7146982C-BE41-4B26-9A12-998F69063925}];5 ;RefPeriod_Code      ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Reference Period::Code }

    { [{72D8CC03-CB79-49EC-B4E7-D384AD37592E}];5 ;RefPeriod_CombinedKey;Element;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 RefPeriod_CombinedKey := "Reference Period"."Document No." + '_' + "Reference Period".Code;
                                                                               END;
                                                                                }

    { [{9BDF9139-46F2-439A-AB40-327644AA6689}];5 ;RefPeriod_Description;Element;Field   ;
                                                  DataType=Text;
                                                  SourceField=Reference Period::Description }

    { [{FDCAEEF0-A583-49A3-9C22-7CFCF5D2F30F}];5 ;RefPeriod_RefPointStart;Element;Field ;
                                                  DataType=Integer;
                                                  SourceField=Reference Period::Reference Point Start }

    { [{9DCAE106-E057-409B-86BD-488A2017D7AA}];5 ;RefPeriod_DescrRefPointStart;Element;Field;
                                                  DataType=Text;
                                                  SourceField=Reference Period::Description Ref. Point Start }

    { [{C86CD7F4-7BE1-46F3-B8AD-116393CD5098}];5 ;RefPeriod_RefPointEnd;Element;Field   ;
                                                  DataType=Integer;
                                                  SourceField=Reference Period::Reference Point End }

    { [{182A96DE-116F-4069-8DB6-1399186D91B6}];5 ;RefPeriod_DescrRefPointEnd;Element;Field;
                                                  DataType=Text;
                                                  SourceField=Reference Period::Description Ref. Point End }

    { [{817FEF99-9F62-43B0-A3F2-39D112B5AB3B}];5 ;RefPeriod_LimitHours;Element ;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 RefPeriod_LimitHours := XMLFormatMgtCU.FormatDecimal("Reference Period".Norm);
                                                                               END;
                                                                                }

    { [{798C83B4-ECCD-4926-9863-4AD440626B71}];5 ;RefPeriod_StartingDateTime;Element;Text;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 RefPeriod_StartingDateTime :=
                                                                                   XMLFormatMgtCU.FormatDateAndTimeToDateTime("Reference Period"."Starting Date", "Reference Period"."Starting Time");
                                                                               END;
                                                                                }

    { [{4EDC9A88-965A-4226-82CE-7694FF75433C}];5 ;RefPeriod_EndingDateTime;Element;Text ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 RefPeriod_EndingDateTime :=
                                                                                   XMLFormatMgtCU.FormatDateAndTimeToDateTime("Reference Period"."Ending Date", "Reference Period"."Ending Time");
                                                                               END;
                                                                                }

    { [{32BBAF95-B94C-4B37-8ADA-C80BB9E0A20C}];5 ;RefPeriod_Result    ;Element ;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 RefPeriod_Result := XMLFormatMgtCU.FormatDecimal("Reference Period".Result);
                                                                               END;
                                                                                }

    { [{DA6A42BA-246F-44EB-BD27-D20E5D23E163}];5 ;RefPeriod_Deadline  ;Element ;Text    ;
                                                  Export::OnBeforePassVariable=VAR
                                                                                 lvRefPeriod@1100485002 : Record 11020272;
                                                                                 lvDatetimeMgtCU@1100485000 : Codeunit 11020218;
                                                                                 lvDate@1100485004 : Date;
                                                                                 lvTime@1100485005 : Time;
                                                                                 lvDateTimeDec@1100485003 : Decimal;
                                                                                 lvDeadlineTxt@1100485001 : Text[30];
                                                                               BEGIN
                                                                                 lvDeadlineTxt :=  lvRefPeriod.CheckRefPeriod(1,"Reference Period".Type,"Reference Period"."Document No.","Reference Period".Code,0
                                                                                 );
                                                                                 IF (lvDeadlineTxt = '') THEN
                                                                                   RefPeriod_Deadline := ''
                                                                                 ELSE BEGIN
                                                                                   lvDateTimeDec := lvDatetimeMgtCU.OLDText2Datetime(lvDeadlineTxt);
                                                                                   lvDate := lvDatetimeMgtCU.Datetime2Date(lvDateTimeDec);
                                                                                   lvTime := lvDatetimeMgtCU.Datetime2Time(lvDateTimeDec);
                                                                                   RefPeriod_Deadline := XMLFormatMgtCU.FormatDateAndTimeToDateTime(lvDate, lvTime);
                                                                                 END;
                                                                               END;
                                                                                }

    { [{161020DF-0DAB-4BA7-8841-10D54E665F35}];3 ;ListHistoryOrders   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{00B52CB8-534E-4FD5-8A7C-FC604B263E88}];4 ;HistoryOrder        ;Element ;Table   ;
                                                  VariableName=HistoryOrder;
                                                  SourceTable=Table2000000026;
                                                  SourceTableView=SORTING(Field1)
                                                                  WHERE(Field1=FILTER(1..));
                                                  LinkTable=Service Order;
                                                  MinOccurs=Zero;
                                                  Export::OnPreXMLItem=BEGIN
                                                                         TmpHistOrderRec.RESET;
                                                                         TmpHistOrderRec.SETCURRENTKEY("Starting Date");
                                                                         TmpHistOrderRec.ASCENDING(FALSE);  //* Descending (Note: Key on date, so most recent previous orders)
                                                                         IF NOT TmpHistOrderRec.FINDFIRST THEN BEGIN   //* Note: FINDSET in combination with descending is not allowed
                                                                           HistoryOrder.SETRANGE(Number,-1);  //* Break doesn't work well (yet) in XML-ports, for that reason solved this way.
                                                                           currXMLport.BREAK;
                                                                         END;
                                                                       END;

                                                  Export::OnAfterGetRecord=VAR
                                                                             lvServOrderRec@1100485000 : Record 11012823;
                                                                             ServOrderExtensionRec@1100528900 : Record 11071727;
                                                                           BEGIN
                                                                             IF HistoryOrder.Number > 1 THEN BEGIN
                                                                               IF TmpHistOrderRec.NEXT = 0 THEN
                                                                                 currXMLport.BREAK;
                                                                             END;

                                                                             IF NOT lvServOrderRec.GET(TmpHistOrderRec."No.") THEN
                                                                               lvServOrderRec.INIT;

                                                                             lvServOrderRec.CALCFIELDS("Employee Name");
                                                                             //IF (lvServOrderRec.Installation <> '') THEN BEGIN
                                                                             //  IF lvInstalRec.GET(lvServOrderRec."Service Location No.", lvServOrderRec.Installation) THEN BEGIN
                                                                             //    IF (lvServOrderRec."Installation Part" <> '') THEN BEGIN
                                                                             //      IF lvPartRec.GET(
                                                                             //        lvInstalRec."Service Location No.",lvInstalRec.Installation,
                                                                             //        lvInstalRec."Part Group",lvServOrderRec."Installation Part") THEN;
                                                                             //    END;
                                                                             //  END;
                                                                             //END;

                                                                             HistOrder_ServiceOrderNo := "Service Order"."No.";
                                                                             HistOrder_HistOrderNo := lvServOrderRec."No.";
                                                                             HistOrder_Description := lvServOrderRec.Description;
                                                                             //HistOrder_Installation := lvServOrderRec.Installation;
                                                                             //HistOrder_InstallationDescript := lvInstalRec.Description;
                                                                             //HistOrder_InstallationPart := lvServOrderRec."Installation Part";
                                                                             //HistOrder_PartDescription := lvPartRec.Description;
                                                                             HistOrder_OrderDate := XMLFormatMgtCU.FormatDate(lvServOrderRec."Order Date");
                                                                             HistOrder_StartingDate := XMLFormatMgtCU.FormatDate(lvServOrderRec."Starting Date");
                                                                             HistOrder_EmployeeNo := lvServOrderRec."Employee No.";
                                                                             HistOrder_EmployeeName := lvServOrderRec."Employee Name";

                                                                             //DP00106.sn
                                                                             IF NOT ServOrderExtensionRec.GET(TmpHistOrderRec."No.") THEN
                                                                               ServOrderExtensionRec.INIT;

                                                                             //HistOrder_ProblemText := ServOrderExtensionRec."Problem Text OLD";
                                                                             //HistOrder_InternalText := ServOrderExtensionRec."Internal Text OLD";
                                                                             //HistOrder_SolutionText := ServOrderExtensionRec."Solution Text OLD";
                                                                             //DP00106.en

                                                                             Counter := Counter + 1;
                                                                           END;
                                                                            }

    { [{7C088BB2-AE7B-4879-9209-92FA2EC975D3}];5 ;HistOrder_ServiceOrderNo;Element;Text  }

    { [{7486E0FB-AF99-470D-A084-2636FAD8AA3B}];5 ;HistOrder_HistOrderNo;Element;Text     }

    { [{6951D83E-2FAF-4C17-BFC4-1A07F1FBDCEE}];5 ;HistOrder_Description;Element;Text     }

    { [{9B2F28D2-1A2F-4C71-B8CB-658F16301467}];5 ;HistOrder_Installation;Element;Text    }

    { [{3A84019E-D8BA-4D44-908B-92AF8B9A0D60}];5 ;HistOrder_InstallationDescription;Element;Text }

    { [{43B05FA5-718B-4CB9-97AC-365837543A83}];5 ;HistOrder_InstallationPart;Element;Text }

    { [{7C0DB5CC-6A6E-40E7-8EC4-9A6BA9192B08}];5 ;HistOrder_PartDescription;Element;Text }

    { [{C88537C4-6E6C-4D9C-9FF9-BE962932CB80}];5 ;HistOrder_OrderDate ;Element ;Text     }

    { [{6EEA492F-E484-4222-B1F3-24C1C773238F}];5 ;HistOrder_StartingDate;Element;Text    }

    { [{7BA443D1-8DC2-49E3-B101-AAB3912096E8}];5 ;HistOrder_EmployeeNo;Element ;Text     }

    { [{CFF05F1F-FBB2-4DA1-A852-DD3E569EE063}];5 ;HistOrder_EmployeeName;Element;Text    }

    { [{C097D56C-A338-466F-8058-8C0FC85840A7}];5 ;HistOrder_ProblemText;Element;Text     }

    { [{B88D4641-9534-4F6F-AF0F-57B25075D862}];5 ;HistOrder_InternalText;Element;Text    }

    { [{EEC9F284-9CB3-4536-9E13-562C4A2484B9}];5 ;HistOrder_SolutionText;Element;Text    }

    { [{E698F6C3-6E32-45EB-9F13-888782231933}];3 ;ListEmployees       ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{7687BC93-5C9A-4F07-B5FB-A518CAF686E4}];4 ;Employee            ;Element ;Table   ;
                                                  SourceTable=Table11229279;
                                                  SourceTableView=SORTING(Field20,Field30,Field40)
                                                                  WHERE(Field30=CONST(1),
                                                                        Field150=CONST(1));
                                                  LinkFields=Field40=FIELD(Field10);
                                                  LinkTable=Service Order;
                                                  MinOccurs=Zero;
                                                  Export::OnPreXMLItem=BEGIN
                                                                         "Work Order".FILTERGROUP(7);
                                                                         "Work Order".SETRANGE("Source Company", COMPANYNAME);
                                                                         "Work Order".SETFILTER("Resource No.", '<>%1', '');
                                                                         "Work Order".FILTERGROUP(0);

                                                                         IF FSASetupRec."Field Service Administration" = FSASetupRec."Field Service Administration"::FieldVision THEN  BEGIN
                                                                           "Work Order".SETRANGE("Source Type",-1);  //*  Break doesn't work well (yet) in XML-ports, for that reason solved this way.
                                                                           currXMLport.BREAK;
                                                                         END;
                                                                       END;

                                                  Export::OnAfterGetRecord=BEGIN
                                                                             //Employee_OccupationPerc := XMLFormatMgtCU.FormatDecimal("Employee by Service Call/Order"."Occupation Perc.");
                                                                             //Employee_TeamLeader := XMLFormatMgtCU.FormatBoolean("Employee by Service Call/Order"."Team Leader");
                                                                           END;
                                                                            }

    { [{00906579-E6FA-4E08-BADA-B82AB00B2BB9}];5 ;Employee_ServiceOrderNo;Element;Field ;
                                                  DataType=Code;
                                                  SourceField=Work Order::Source No. }

    { [{A36208D0-6D4B-42FC-9F03-7D21935176DF}];5 ;Employee_EmployeeNo ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Work Order::Resource No. }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      FSASetupRec@1100485003 : Record 11012138;
      gLogbookRec@1100485001 : Record 11012271;
      TmpHistOrderRec@1100485007 : TEMPORARY Record 11012823;
      XMLFormatMgtCU@1100485002 : Codeunit 11012092;
      Counter@1100485000 : Integer;
      MessID@1100485006 : Code[30];
      EmptySignSplittedInstCode@1100485004 : Text[1];
      Text000@1100485005 : TextConst 'ENU=Work Instruction';

    PROCEDURE SetExportData@1100485001(ILogbookRec@1100485000 : Record 11012271;IMessID@1100485001 : Code[30]);
    BEGIN
      gLogbookRec := ILogbookRec;
      MessID := IMessID;
    END;

    PROCEDURE GetExportData@1100485000() : Integer;
    BEGIN
      EXIT(Counter);
    END;

    PROCEDURE FormatLineNoToText@1100485002(ILineNo@1100485000 : Integer) : Text[10];
    BEGIN
      //* Linenumber (integer) max. more than 2 billion, so 10 positions
      EXIT(FORMAT(ILineNo));
    END;

    PROCEDURE FillTmpInstallationTables@1100485003();
    VAR
      lvServOrderBudgLineRec@1100485000 : Record 11012875;
      lvAdvOrderRec@1100485005 : Record 11012055;
    BEGIN
      //TmpInstalRec.RESET; //Table11012802 does not exist anymore.
      //TmpInstalRec.DELETEALL;
      //TmpPartRec.RESET; //Table11012803 does not exist anymore.
      //TmpPartRec.DELETEALL;

      IF FSASetupRec."Field Service Administration" = FSASetupRec."Field Service Administration"::FieldVision THEN
        EXIT;  //* FV do not use this, they get all data from budget-/advicelines (so empty 'List' for FV).

      //lvServOrderInstalRec.SETRANGE("Service Order No.", "Service Order"."No."); //Table11012824 does not exist anymore.
      //lvServOrderInstalRec.SETFILTER(Installation, '<>%1', '');
      //IF lvServOrderInstalRec.FINDSET(FALSE, FALSE) THEN BEGIN
      //  REPEAT
      //    ReadDataForTmpInstalTables(
      //      lvServOrderInstalRec."Service Location No.",
      //      lvServOrderInstalRec.Installation,
      //      lvServOrderInstalRec."Installation Part");
      //  UNTIL lvServOrderInstalRec.NEXT = 0;
      //END;

      lvServOrderBudgLineRec.SETRANGE("Service Order No.", "Service Order"."No.");
      //lvServOrderBudgLineRec.SETFILTER(Installation, '<>%1', ''); //Field Installation does not exist anymore.
      IF lvServOrderBudgLineRec.FINDSET(FALSE, FALSE) THEN BEGIN
        REPEAT
          ReadDataForTmpInstalTables(
            lvServOrderBudgLineRec."Service Location No.",
            '', //lvServOrderBudgLineRec.Installation, //Field Installation does not exist anymore.
            ''); //lvServOrderBudgLineRec."Installation Part"); //Field Installation Part does not exist anymore.
        UNTIL lvServOrderBudgLineRec.NEXT = 0;
      END;

      lvAdvOrderRec.SETRANGE("Record Type", lvAdvOrderRec."Record Type"::ServOrder);
      lvAdvOrderRec.SETRANGE("Service Order No.", "Service Order"."No.");
      //lvAdvOrderRec.SETFILTER("Service Installation", '<>%1', ''); //Field Service Installation does not exist anymore.
      IF lvAdvOrderRec.FINDSET(FALSE, FALSE) THEN BEGIN
        REPEAT
          ReadDataForTmpInstalTables(
            "Service Order"."Service Location No.",
            '', //lvAdvOrderRec."Service Installation", //Field Service Installation does not exist anymore.
            ''); //lvAdvOrderRec."Service Installation Part"); //Field Service Installation Part does not exist anymore.
        UNTIL lvAdvOrderRec.NEXT = 0;
      END;
    END;

    PROCEDURE ReadDataForTmpInstalTables@1100485008(IServLoc@1100485006 : Code[20];IServInstal@1100485007 : Code[20];IServInstalPart@1100485008 : Code[20]);
    BEGIN
      //IF (IServInstal <> '') THEN BEGIN
      //  IF lvInstalRec.GET(IServLoc, IServInstal) THEN BEGIN
      //    WriteTmpInstal(lvInstalRec,3);
      //    IF (lvInstalRec.Chapter <> '') AND (lvInstalRec.Chapter <> lvInstalRec.Installation) THEN BEGIN
      //      IF lvInstalRec2.GET(IServLoc, lvInstalRec.Chapter) THEN
      //        WriteTmpInstal(lvInstalRec2,1);
      //    END;
      //    IF (lvInstalRec.Paragraph <> '') AND (lvInstalRec.Paragraph <> lvInstalRec.Installation) THEN BEGIN
      //      IF lvInstalRec2.GET(IServLoc, lvInstalRec.Paragraph) THEN
      //        WriteTmpInstal(lvInstalRec2,2);
      //    END;
      //    IF (IServInstalPart <> '') THEN BEGIN
      //      IF lvPartRec.GET(IServLoc, IServInstal, lvInstalRec."Part Group",IServInstalPart) THEN BEGIN
      //        WriteTmpInstalPart(lvPartRec,3);
      //        IF (lvPartRec.Chapter <> '') AND (lvPartRec.Chapter <> lvPartRec."Installation Part") THEN BEGIN
      //          IF lvPartRec2.GET(IServLoc, IServInstal, lvInstalRec."Part Group", lvPartRec.Chapter) THEN
      //            WriteTmpInstalPart(lvPartRec2,1);
      //        END;
      //        IF (lvPartRec.Paragraph <> '') AND (lvPartRec.Paragraph <> lvPartRec."Installation Part") THEN BEGIN
      //          IF lvPartRec2.GET(IServLoc, IServInstal, lvInstalRec."Part Group", lvPartRec.Paragraph) THEN
      //            WriteTmpInstalPart(lvPartRec2,2);
      //        END;
      //      END;
      //    END;
      //  END;
      //END;
    END;

    PROCEDURE WriteTmpInstal@1100485004(IFrom@1100485001 : Integer);
    BEGIN
      //TmpInstalRec := IInstalRec; //Table11012802 does not exist anymore.
      //TmpInstalRec.Text := FORMAT(IFrom);
      //IF TmpInstalRec.INSERT THEN;
    END;

    PROCEDURE WriteTmpInstalPart@1100485005(IFrom@1100485001 : Integer);
    BEGIN
      //TmpPartRec := IPartRec; Table11012803 does not exist anymore.
      //TmpPartRec.Text := FORMAT(IFrom);
      //IF TmpPartRec.INSERT THEN;
    END;

    PROCEDURE GetSplittedCodes@1100485006(ICode@1100485000 : Code[20];IFrom@1100485004 : Integer;VAR OChap@1100485001 : Text[20];VAR OPara@1100485002 : Text[20];VAR OInst@1100485003 : Text[20]);
    VAR
      lvP1@1100485005 : Integer;
      lvP2@1100485006 : Integer;
    BEGIN
      //* IFrom: 1=Chapter, 2=Paragraph, 3=Installation or Installationpart

      OChap := '';
      OPara := '';
      OInst := '';  //* Can also be 'Part'

      IF ICode = '' THEN
        EXIT;

      lvP1 := STRPOS(ICode, '.');
      IF lvP1 = 0 THEN BEGIN
        IF IFrom = 3 THEN
          OInst := ICode;
        EXIT;
      END;

      OChap := COPYSTR(ICode,1,lvP1-1);

      lvP2 := STRPOS(COPYSTR(ICode,lvP1+1), '.');
      IF lvP2 = 0 THEN BEGIN
        IF IFrom = 3 THEN
          OInst := COPYSTR(ICode,lvP1+1);
        EXIT;
      END;

      lvP2 := lvP1 + lvP2;
      IF (IFrom = 2) OR (IFrom = 3)THEN
        OPara := COPYSTR(ICode,lvP1+1,lvP2-lvP1-1);
      IF IFrom = 3 THEN
        OInst := COPYSTR(ICode,lvP2+1);
    END;

    PROCEDURE FillTmpHistoryOrdersTable@1100485007();
    VAR
      lvServOrderRec@1100485001 : Record 11012823;
      lvTmpHistOrderRec@1100485000 : TEMPORARY Record 11012823;
      lvCounter@1100485002 : Integer;
      lvLevelCounter@1100485003 : Integer;
      lvI@1100485004 : Integer;
      lvMaxI@1100485005 : Integer;
    BEGIN
      lvCounter := 0;
      TmpHistOrderRec.RESET;
      TmpHistOrderRec.DELETEALL;

      IF (FSASetupRec."Number of History Orders" < 1) OR ("Service Order"."Service Location No." = '') OR
         (NOT ("Service Order"."Source Type" IN ["Service Order"."Source Type"::Call, "Service Order"."Source Type"::Direct]))
      THEN
        EXIT;

      WITH lvServOrderRec DO BEGIN
        SETCURRENTKEY("Service Location No.");
        SETRANGE("Service Location No.", "Service Order"."Service Location No.");
        SETFILTER("Source Type", '%1|%2', "Source Type"::Call, "Source Type"::Direct);
        SETFILTER("No.", '<>%1', "Service Order"."No.");
        SETRANGE("Order Date", 0D, "Service Order"."Order Date");

      //  IF "Service Order".Installation <> '' THEN BEGIN
      //    SETRANGE(Installation, "Service Order".Installation);
      //    IF "Service Order"."Installation Part" <> '' THEN
      //      SETRANGE("Installation Part", "Service Order"."Installation Part");
      //  END;
      //  IF "Service Order"."Object No." <> '' THEN
      //    SETRANGE("Object No.", "Service Order"."Object No.");

        REPEAT
          IF FINDSET(FALSE,FALSE) THEN BEGIN
            lvLevelCounter := 0;
            lvTmpHistOrderRec.RESET;
            lvTmpHistOrderRec.DELETEALL;
            lvTmpHistOrderRec.SETCURRENTKEY("Starting Date");
            lvTmpHistOrderRec.ASCENDING(FALSE);  //* Descending (NB: Key on date, so most recent previous orders)

            REPEAT
              IF NOT TmpHistOrderRec.GET("No.") THEN BEGIN  //* Read TmpRec, not local lvTmpRec (in local not present)
                lvTmpHistOrderRec."Starting Date" := "Order Date";
                lvTmpHistOrderRec."No." := "No.";
                lvTmpHistOrderRec.INSERT;
                lvLevelCounter := lvLevelCounter + 1;
              END;
            UNTIL NEXT = 0;
            IF lvLevelCounter > 1 THEN BEGIN
              IF lvCounter + lvLevelCounter <= FSASetupRec."Number of History Orders" THEN
                lvMaxI := lvLevelCounter
              ELSE
                lvMaxI := FSASetupRec."Number of History Orders" - lvCounter;
              FOR lvI := 1 TO lvMaxI DO BEGIN
                IF lvI = 1 THEN
                  lvTmpHistOrderRec.FINDFIRST   //* NB: FINDSET in combination with descending is not allowed
                ELSE
                  lvTmpHistOrderRec.NEXT;
                TmpHistOrderRec."Starting Date" := lvTmpHistOrderRec."Starting Date";
                TmpHistOrderRec."No." := lvTmpHistOrderRec."No.";
                TmpHistOrderRec.INSERT;
                lvCounter := lvCounter + 1;
              END;
            END;
          END;

          //* Reset filters
      //    IF lvServOrderRec.GETFILTER("Object No.") <> '' THEN
      //      SETRANGE("Object No.")
      //    ELSE BEGIN
      //      IF lvServOrderRec.GETFILTER("Installation Part") <> '' THEN
      //        SETRANGE("Installation Part")
      //      ELSE BEGIN
      //        IF lvServOrderRec.GETFILTER(Installation) <> '' THEN
      //          SETRANGE(Installation)
      //        ELSE
      //          EXIT;  //* End search history (read on all op all levels)
      //      END;
      //    END;
        UNTIL (lvCounter >= FSASetupRec."Number of History Orders");
      END;
    END;

    BEGIN
    END.
  }
}

