OBJECT Codeunit 11012670 Project Inventory-Post Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 313=r,
                TableData 11012063=ri;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ProjInventEntryRec@11012000 : Record 11012670;
      ProjInventEntryRec2@1210190000 : Record 11012670;
      ProjSetup@1210190001 : Record 315;
      NextEntryNo@11012004 : Integer;

    PROCEDURE RunWithCheck@1210190000(VAR IoProjInventEntryRec@1210190000 : Record 11012670);
    BEGIN
      CheckCompanyIC(IoProjInventEntryRec.CURRENTCOMPANY);
      ProjInventEntryRec.COPY(IoProjInventEntryRec);
      Code;
      IoProjInventEntryRec := ProjInventEntryRec;
    END;

    LOCAL PROCEDURE Code@1();
    BEGIN
      WITH ProjInventEntryRec DO BEGIN
        IF ("Project No." = '') OR ("Location Code" = '') OR (Quantity = 0) OR
           (("Item No." = '') AND ("Basic Item" = '') AND ("Trade Item" = '') AND (Description = '')) THEN
          EXIT;

        IF NextEntryNo = 0 THEN BEGIN
          ProjInventEntryRec2.LOCKTABLE;
          IF ProjInventEntryRec2.FIND('+') THEN
            NextEntryNo := ProjInventEntryRec2."Entry No.";
          NextEntryNo := NextEntryNo + 1;
        END;

        "Entry No." := NextEntryNo;
        //call 31763.sn
        IF (Element <> '') AND (ProjInventEntryRec."Entry Type" = ProjInventEntryRec."Entry Type"::Receipt)  THEN BEGIN
          ProjSetup.GET;
          IF ProjSetup."No Elements In Project Invent." THEN
            Element := '';
        END;
        //call 31763.en
        INSERT(TRUE);  // Trigger must be 'TRUE'!!

        NextEntryNo := NextEntryNo + 1;
      END;
    END;

    LOCAL PROCEDURE CheckCompanyIC@1100527000(IReceivingCompany@1100527000 : Text[30]);
    BEGIN
      IF IReceivingCompany = COMPANYNAME THEN
        EXIT;

      ProjInventEntryRec.CHANGECOMPANY(IReceivingCompany);
      ProjInventEntryRec2.CHANGECOMPANY(IReceivingCompany);
      ProjSetup.CHANGECOMPANY(IReceivingCompany);
    END;

    [EventSubscriber(Table,27,OnAfterRenameEvent,"",Skip)]
    PROCEDURE OnRenameItem@1100527300(VAR Rec@1100527301 : Record 27;VAR xRec@1100527302 : Record 27;RunTrigger@1100527303 : Boolean);
    VAR
      ProjectInventoryEntry@1100527300 : Record 11012670;
      RequisitionLine@1100527304 : Record 246;
      ProjectInventoryDelivery@1100527305 : Record 11012671;
      ProjectDeliveryNoteLine@1100527306 : Record 11012673;
    BEGIN
      IF Rec.ISTEMPORARY OR NOT RunTrigger THEN
        EXIT;

      ProjectInventoryEntry.SETRANGE("Item No.",Rec."No.");
      IF ProjectInventoryEntry.FINDSET THEN
        REPEAT
          ProjectInventoryEntry.VALIDATE("Item Composition");
          ProjectInventoryEntry.MODIFY;
        UNTIL ProjectInventoryEntry.NEXT = 0;

      RequisitionLine.SETRANGE(Type, RequisitionLine.Type::Item);
      RequisitionLine.SETRANGE("No.", Rec."No.");
      IF RequisitionLine.FINDSET THEN
        REPEAT
          RequisitionLine.GetItemComposition;
          RequisitionLine.MODIFY;
        UNTIL RequisitionLine.NEXT = 0;

      ProjectInventoryDelivery.SETRANGE("Item No.", Rec."No.");
      IF ProjectInventoryDelivery.FINDSET THEN
        REPEAT
          ProjectInventoryDelivery.VALIDATE("Item Composition");
          ProjectInventoryDelivery.MODIFY;
        UNTIL ProjectInventoryDelivery.NEXT = 0;

      ProjectDeliveryNoteLine.SETRANGE("Item No.", Rec."No.");
      IF ProjectDeliveryNoteLine.FINDSET THEN
        REPEAT
          ProjectDeliveryNoteLine.VALIDATE("Item Composition");
          ProjectDeliveryNoteLine.MODIFY;
        UNTIL ProjectDeliveryNoteLine.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

