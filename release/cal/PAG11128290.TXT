OBJECT Page 11128290 Prognosis CC Matrix
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Prognosis Overview;
               SVE=Prognos”versikt];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table11072003;
    PageType=ListPlus;
    ShowFilter=No;
    OnInit=BEGIN
             PeriodType := PeriodType::Day;
           END;

    OnOpenPage=VAR
                 SESetup@1100285100 : Record 11128004;
               BEGIN
                 LastLoadedProj := '';
                 MATRIX_MaximumSetLength := 12;
                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                 UpdateMatrixSubForm;

                 //>>191219, BYGG006
                 IF NOT SESetup.GET(SESetup."Line type"::Setup,'PROGOVER','LINECOM') THEN BEGIN
                   SESetup.INIT;
                   SESetup."Line type" := SESetup."Line type"::Setup;
                   SESetup.Code := 'PROGOVER';
                   SESetup."Code 2" := 'LINECOM';
                   SESetup.Description := 'Visa radkommentarer fr†n prognoser p† prognos”versikten (bool)';
                   IF SESetup.INSERT THEN;
                 END;
                 Show_CellDataText := SESetup."Value (bool)";
                 CurrPage.MATRIX.PAGE.setShow_CellDataText(Show_CellDataText);
                 //<<190219
               END;

    OnAfterGetRecord=BEGIN
                       MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                       UpdateMatrixSubForm;
                     END;

    ActionList=ACTIONS
    {
      { 1100285101;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100285102;1 ;Action    ;
                      Name=send to excel;
                      CaptionML=[ENU=Send to Excel;
                                 SVE=Skicka till Excel];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Excel;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 CurrPage.MATRIX.PAGE.CreateExcel;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528703;;Container;
                ContainerType=ContentArea }

    { 1100528729;1;Group  ;
                CaptionML=[ENU=Selection;
                           NOR=Utvalg;
                           SVE=Urval];
                GroupType=Group }

    { 1100285100;2;Field  ;
                CaptionML=[ENU=Qty of prognosis to show;
                           SVE=Antal prognoser att visa];
                SourceExpr=MATRIX_MaximumSetLength;
                OnValidate=BEGIN
                             LastLoadedProj := '';
                             MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                             UpdateMatrixSubForm;
                           END;
                            }

    { 1100285103;2;Field  ;
                CaptionML=[ENU=Show linecomments from prognosis;
                           SVE=Visa radkommentarer fr†n prognoser];
                SourceExpr=Show_CellDataText;
                OnValidate=BEGIN
                             //191219, BYGG006
                             CurrPage.MATRIX.PAGE.setShow_CellDataText(Show_CellDataText);
                             CurrPage.MATRIX.PAGE.UpdatePage;
                           END;
                            }

    { 1100528700;1;Part   ;
                Name=MATRIX;
                SubPageLink=Project No.=FIELD(No.);
                PagePartID=Page11128291;
                PartType=Page }

  }
  CODE
  {
    VAR
      MATRIX_MatrixRecord@1100528708 : Record 2000000007;
      MATRIX_MatrixRecords@1100528707 : ARRAY [64] OF Record 2000000007;
      MATRIX_MaximumSetLength@1100528706 : Integer;
      MATRIX_PrimKeyRecInCurrSet@1100528705 : Text[1024];
      MATRIX_CaptionSet@1100528704 : ARRAY [64] OF Text[80];
      MATRIX_CaptionRange@1100528703 : Text[250];
      MATRIX_CurrSetLength@1100528702 : Integer;
      MATRIX_Step@1100528701 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec';
      PeriodType@1100528709 : 'Day,Week,Month,Quarter,Year';
      LastPrognosisDate@1100285100 : Date;
      LastLoadedProj@1100285101 : Code[20];
      Show_CellDataText@1100285102 : Boolean INDATASET;

    LOCAL PROCEDURE MATRIX_GenerateColumnCaptions@1152(MATRIX_SetWanted@1000 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn');
    VAR
      MatrixManagement@1002 : Codeunit 9200;
      I@1004 : Integer;
      RecRef@1006 : RecordRef;
      FieldRef@1011 : FieldRef;
      Prognosis@1100285100 : Record 11012034;
      PrognosisDateFilter@1100285101 : Text;
      PrognosisDateFilterLast@1100285102 : Text;
    BEGIN
      IF LastLoadedProj = "No." THEN
        EXIT;
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MATRIX_MatrixRecords);

      LastPrognosisDate := 0D;
      PrognosisDateFilter:= '';
      Prognosis.SETRANGE("Project No.","No.");
      IF Prognosis.FINDLAST THEN BEGIN
        LastPrognosisDate := Prognosis."Prognosis Date";
        PrognosisDateFilterLast := FORMAT(Prognosis."Prognosis Date");
        IF MATRIX_MaximumSetLength > 1 THEN
          IF Prognosis.NEXT(-(MATRIX_MaximumSetLength-1))=0 THEN
            Prognosis.FINDFIRST;
        PrognosisDateFilter := FORMAT(Prognosis."Prognosis Date") + '..' + PrognosisDateFilterLast;
      END;

      I:=1;
      Prognosis.SETFILTER("Prognosis Date",PrognosisDateFilter);
      IF Prognosis.FINDSET THEN REPEAT
        MATRIX_CaptionSet[I] := FORMAT(Prognosis."Prognosis Date");

        MATRIX_MatrixRecords[I]."Period Type":=MATRIX_MatrixRecords[I]."Period Type"::Date;
        MATRIX_MatrixRecords[I]."Period Start" := Prognosis."Prognosis Date";
        MATRIX_MatrixRecords[I]."Period End" := Prognosis."Prognosis Date";
        MATRIX_CurrSetLength := I;
        I+=1;
      UNTIL Prognosis.NEXT=0;
    END;

    LOCAL PROCEDURE UpdateMatrixSubForm@7();
    BEGIN
      IF LastLoadedProj = "No." THEN
        EXIT;
      CurrPage.MATRIX.PAGE.SetUserData(USERID,LastPrognosisDate);
      CurrPage.MATRIX.PAGE.Load(
        MATRIX_CaptionSet,
        MATRIX_MatrixRecords,
        MATRIX_CurrSetLength,
        PeriodType,
        "No.");

      CurrPage.UPDATE(FALSE);
      LastLoadedProj := "No.";
      CurrPage.MATRIX.PAGE.UpdatePage;
    END;

    BEGIN
    {
      180307 ORANGO.DL new prognosis overview

      https://dynamicsuser.net/nav/b/vanvugt/posts/how-to-create-a-one-page-matrix

      180509 ORANGO.DL add 'send to excel' button
      190219 BYGG006 Add more columns and comments
    }
    END.
  }
}

