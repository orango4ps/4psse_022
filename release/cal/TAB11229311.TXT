OBJECT Table 11229311 Project Object
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 ProjSetup.GET;
                 ProjSetup.TESTFIELD("Project Object Nos.");
                 NoSeriesMgt.InitSeries(ProjSetup."Project Object Nos.", xRec."No. Series", 0D, "No.", "No. Series");
               END;
               "Purchase Order No." := '';
               "Created by" := USERID;
               "Created on" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               "Modified by" := USERID;
               "Modified on" := CURRENTDATETIME;
             END;

    OnDelete=VAR
               ProjectObjectProperty@1100529000 : Record 11229314;
             BEGIN
               ProjectObjectProperty.SETRANGE("Project Object No.", "No.");
               ProjectObjectProperty.DELETEALL;
             END;

    CaptionML=ENU=Project Object;
    LookupPageID=Page11126594;
    DrillDownPageID=Page11126594;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  ProjSetup.GET;
                                                                  NoSeriesMgt.TestManual(ProjSetup."Project Object Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr;
                                                              SVE=Nr] }
    { 20  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                IF "Item No." <> '' THEN BEGIN
                                                                  IF ("Item No." <> xRec."Item No.") THEN
                                                                    ValidateItem(ItemTypeOpt::Item);
                                                                END;
                                                                CALCFIELDS("Item Description");
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              NOR=Artikkelnr;
                                                              SVE=Artikelnr] }
    { 21  ;   ;Item Description    ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item.Description WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=[ENU=Item Description;
                                                              NOR=Artikkelbeskrivelse;
                                                              SVE=Artikelbeskrivning];
                                                   Editable=No }
    { 30  ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=VAR
                                                                DimVal@1100525000 : Record 349;
                                                                xRecDimVal@1100525002 : Record 349;
                                                                DimMgt@1100525001 : Codeunit 408;
                                                              BEGIN
                                                                ValidateShortcutDimCode(2,"Cost Object");
                                                                IF "Cost Object" <> '' THEN BEGIN
                                                                  IF "Item No." = '' THEN BEGIN
                                                                    DimMgt.GetDimValueRec(2, "Cost Object", DimVal, TRUE, '');
                                                                    IF Description = '' THEN
                                                                      VALIDATE(Description, DimVal.Name)
                                                                    ELSE BEGIN
                                                                      IF ("Cost Object" <> xRec."Cost Object") AND (xRec."Cost Object" <> '') THEN BEGIN
                                                                        DimMgt.GetDimValueRec(2, xRec."Cost Object", xRecDimVal, FALSE, '');
                                                                        IF (Description = xRecDimVal.Name) THEN
                                                                          VALIDATE(Description, DimVal.Name);
                                                                      END;
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostnadsobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 50  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 51  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2] }
    { 60  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Project Description");
                                                              END;

                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr] }
    { 61  ;   ;Project Description ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Project Description;
                                                              NOR=Prosjektbeskrivelse;
                                                              SVE=Projektbeskrivning];
                                                   Editable=No }
    { 70  ;   ;Building            ;Text30        ;CaptionML=[ENU=Building;
                                                              NOR=Byggning;
                                                              SVE=Byggnad] }
    { 80  ;   ;Floor               ;Text30        ;CaptionML=[ENU=Floor;
                                                              NOR=Gulv;
                                                              SVE=V†ning] }
    { 90  ;   ;Room                ;Text30        ;CaptionML=[ENU=Room;
                                                              NOR=Rom;
                                                              SVE=Rum] }
    { 100 ;   ;Blocked             ;Boolean       ;CaptionML=[ENU=Blocked;
                                                              NOR=Blokkert;
                                                              SVE=Sp„rrad] }
    { 110 ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                CheckVendorRelation(FIELDNO("Vendor No."));
                                                                CALCFIELDS("Vendor Name");
                                                              END;

                                                   CaptionML=[ENU=Vendor No.;
                                                              NOR=Leverand›rnr.;
                                                              SVE=Leverant”rsnr] }
    { 111 ;   ;Vendor Name         ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=[ENU=Vendor Name;
                                                              NOR=Leverand›rsnavn;
                                                              SVE=Leverant”rsnamn];
                                                   Editable=No }
    { 115 ;   ;Purchase Route Reference;Code20    ;OnLookup=VAR
                                                              PurchRouteRefManagement@1210190000 : Codeunit 11012045;
                                                            BEGIN
                                                              PurchRouteRefManagement.ShowReferenceList("Purchase Route Reference");
                                                            END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Purchase Route Reference;
                                                              SVE=Referens f”r ink”psf”ljd];
                                                   Description=DP02375;
                                                   Editable=No }
    { 120 ;   ;Purchase Order No.  ;Code20        ;TableRelation="Purchase Header".No. WHERE (Document Type=CONST(Order));
                                                   OnLookup=VAR
                                                              PurchOrder@1100529000 : Record 38;
                                                            BEGIN
                                                              IF "Purchase Order No." <> '' THEN BEGIN
                                                                IF PurchOrder.GET(PurchOrder."Document Type"::Order, "Purchase Order No.") THEN BEGIN
                                                                  PAGE.RUNMODAL(PAGE::"Purchase Order", PurchOrder);
                                                                  EXIT;
                                                                END;
                                                              END;
                                                              PurchOrder.SETCURRENTKEY("Document Type", "Job No.");
                                                              PurchOrder.SETRANGE("Job No.", "Project No.");
                                                              PAGE.RUNMODAL(PAGE::"Purchase Order List", PurchOrder);
                                                            END;

                                                   CaptionML=[ENU=Purchase Order No.;
                                                              NOR=Innkj›psordrenr.;
                                                              SVE=Ink”psordernr];
                                                   Editable=No }
    { 125 ;   ;Advice Order Line No.;Integer      ;TableRelation="Advice Order Line"."Line No." WHERE (Record Type=CONST(Project),
                                                                                                       Project No.=FIELD(Project No.));
                                                   OnLookup=VAR
                                                              AdviceOrderLine@1100529000 : Record 11012055;
                                                            BEGIN
                                                              AdviceOrderLine.SETRANGE("Record Type", AdviceOrderLine."Record Type"::Project);
                                                              AdviceOrderLine.SETRANGE("Project No.", "Project No.");
                                                              AdviceOrderLine."Line No." := "Advice Order Line No.";
                                                              PAGE.RUNMODAL(PAGE::"Advice Orders by Project", AdviceOrderLine);
                                                            END;

                                                   CaptionML=[ENU=Advice Order Line No.;
                                                              NOR=Radnr. for bestillingsunderlag;
                                                              SVE=Radnr f”r best„llningsunderlag];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 126 ;   ;Advised             ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Advised;
                                                              SVE=F”reslaget material];
                                                   Description=DP02375 }
    { 130 ;   ;Manufacturer        ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   CaptionML=[ENU=Manufacturer;
                                                              NOR=Fabrikant;
                                                              SVE=Tillverkare] }
    { 131 ;   ;Manufacturer Name   ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ETIM Vendor - Central Mgt".Name WHERE (Code=FIELD(Manufacturer)));
                                                   CaptionML=[ENU=Manufacturer Name;
                                                              NOR=Fabrikantens navn;
                                                              SVE=Tillverkarens namn];
                                                   Editable=No }
    { 135 ;   ;Basic Item          ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   OnValidate=BEGIN
                                                                IF ("Basic Item" <> xRec."Basic Item") AND ("Basic Item" <> '') THEN
                                                                  ValidateItem(ItemTypeOpt::"Basic Item");
                                                              END;

                                                   CaptionML=[ENU=Basic Item;
                                                              NOR=Fabrikantartikkel;
                                                              SVE=Basartikel] }
    { 140 ;   ;Vendor (Trade Item) ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   OnValidate=VAR
                                                                TradeVendor@1100525000 : Record 11012304;
                                                                TradeItem@1100529000 : Record 11012317;
                                                              BEGIN
                                                                IF ("Vendor (Trade Item)" <> xRec."Vendor (Trade Item)") AND ("Vendor (Trade Item)" <> '') THEN BEGIN
                                                                  TradeVendor.HandleVendorValidate("Vendor (Trade Item)");
                                                                  IF "Trade Item" <> '' THEN BEGIN
                                                                    VALIDATE("Trade Item");
                                                                    IF TradeItem.CheckReplaceVendor(xRec."Vendor (Trade Item)", xRec."Trade Item", "Vendor (Trade Item)", "Trade Item") THEN
                                                                      ValidateItem(ItemTypeOpt::"Trade Item")
                                                                    ELSE
                                                                      ValidateItem(ItemTypeOpt::"Trade Vendor");
                                                                  END;
                                                                  CheckVendorRelation(FIELDNO("Vendor (Trade Item)"));
                                                                END;
                                                                CALCFIELDS("Vendor Name (Trade Item)");
                                                              END;

                                                   CaptionML=[ENU=Vendor (Trade Item);
                                                              NOR=Leverand›r (katalogartikkel);
                                                              SVE=Leverant”r (skaffningsartikel)] }
    { 141 ;   ;Vendor Name (Trade Item);Text100   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ETIM Vendor - Central Mgt".Name WHERE (Code=FIELD("Vendor (Trade Item)")));
                                                   CaptionML=[ENU=Vendor Name (Trade Item);
                                                              NOR=Leverand›rsnavn (katalogartikkel);
                                                              SVE=Leverant”rsnamn (skaffningsartikel)];
                                                   Editable=No }
    { 145 ;   ;Trade Item          ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   OnValidate=BEGIN
                                                                IF ("Trade Item" <> xRec."Trade Item") AND ("Trade Item" <> '') THEN
                                                                  ValidateItem(ItemTypeOpt::"Trade Item");
                                                              END;

                                                   CaptionML=[ENU=Trade Item;
                                                              NOR=Katalogartikkel;
                                                              SVE=Anskaffningsartikel] }
    { 150 ;   ;GTIN Code (Item)    ;Code20        ;CaptionML=[ENU=GTIN Code (Item);
                                                              NOR=GTIN-kode (Artikkel);
                                                              SVE=GTIN-kod (artikel)] }
    { 160 ;   ;Quantity            ;Decimal       ;InitValue=1;
                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 161 ;   ;Quantity (External) ;Decimal       ;InitValue=1;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Quantity (External);
                                                              SVE=Antal (externt)];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   Description=DP02375 }
    { 170 ;   ;Unit of Measure     ;Code10        ;TableRelation=IF (Item No.=FILTER(<>'')) "Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.))
                                                                 ELSE IF (Item No.=FILTER('')) "ETIM Unit".Code;
                                                   OnValidate=BEGIN
                                                                CheckUnitConversion;  //DP02375
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=M†leenhet;
                                                              SVE=Enhet] }
    { 171 ;   ;Unit of Measure (External);Code10  ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Unit of Measure (External);
                                                   Description=DP02375 }
    { 200 ;   ;Modified by         ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Modified by;
                                                              NOR=Endret av;
                                                              SVE=Žndrad av];
                                                   Editable=No }
    { 201 ;   ;Modified on         ;DateTime      ;CaptionML=[ENU=Modified on;
                                                              NOR=Endret den;
                                                              SVE=Žndrad den];
                                                   Editable=No }
    { 205 ;   ;Created by          ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Created by;
                                                              NOR=Opprettet av;
                                                              SVE=Skapades av];
                                                   Editable=No }
    { 206 ;   ;Created on          ;DateTime      ;CaptionML=[ENU=Created on;
                                                              NOR=Opprettet den;
                                                              SVE=Skapades];
                                                   Editable=No }
    { 210 ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              NOR=Nr-serie;
                                                              SVE=Nr-serie];
                                                   Editable=No }
    { 230 ;   ;BIM Model No.       ;Code20        ;TableRelation="BIM Model";
                                                   CaptionML=[ENU=BIM Model No.;
                                                              SVE=BIM-modellnr.];
                                                   Editable=No }
    { 240 ;   ;IFC Object ID       ;Text30        ;CaptionML=[ENU=IFC Object ID;
                                                              SVE=IFC-objekt-ID];
                                                   Editable=No }
    { 250 ;   ;Element             ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                ProjectElement@1100529000 : Record 11012010;
                                                                FormatMgt@1100529001 : Codeunit 11012022;
                                                              BEGIN
                                                                FormatMgt.FormatElem(Element, 2, '');
                                                                IF Element <> '' THEN BEGIN
                                                                  ProjectElement.GET("Project No.", Element);
                                                                  ProjectElement.CheckProjectElementBlocked;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 260 ;   ;Plot No.            ;Code10        ;TableRelation=Plot."Plot No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=Plot No.;
                                                              NOR=Tegningnr;
                                                              SVE=Ritningnr] }
    { 270 ;   ;Phase               ;Text30        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Phase;
                                                              SVE=Fas] }
    { 280 ;   ;Prefab              ;Boolean       ;CaptionML=ENU=Prefab }
    { 290 ;   ;IFC Object ID As Hex;Text60        ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=IFC Object ID As Hex;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Project No.                              }
    {    ;BIM Model No.,IFC Object ID              }
    {    ;BIM Model No.,IFC Object ID As Hex       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProjSetup@1100525000 : Record 315;
      NoSeriesMgt@1100525001 : Codeunit 396;
      Text007@1100529000 : TextConst 'ENU=No %1 selected with %2 filled and %3 empty';
      Text008@1100529001 : TextConst 'ENU=Create purchase order(s)?;SVE=Skapa ink”psorder?';
      Text009@1100529002 : TextConst 'ENU=Created order: %1';
      ItemTypeOpt@1100529003 : 'Item,Basic Item,Trade Item,Trade Vendor';

    PROCEDURE AssistEdit@2(OldProjectObject@1000 : Record 11229311) : Boolean;
    VAR
      ProjectObject@1001 : Record 11229311;
    BEGIN
      WITH ProjectObject DO BEGIN
        ProjectObject := Rec;
        ProjSetup.GET;
        ProjSetup.TESTFIELD("Project Object Nos.");
        IF NoSeriesMgt.SelectSeries(ProjSetup."Project Object Nos.",OldProjectObject."No. Series", "No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := ProjectObject;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE ValidateShortcutDimCode@8(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    VAR
      DimMgt@1100525000 : Codeunit 408;
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE GetCostObjectDescription@1100529000() : Text;
    VAR
      DimVal@1100529000 : Record 349;
      DimMgt@1100529001 : Codeunit 408;
    BEGIN
      DimMgt.GetDimValueRec(2, "Cost Object", DimVal, FALSE, "Project No.");
      EXIT(DimVal.Name);
    END;

    PROCEDURE ShowDocuments@1100529400();
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentFilters@1100525001 : Codeunit 11012432;
    BEGIN
      TESTFIELD("No.");
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, TRUE);
    END;

    LOCAL PROCEDURE CheckVendorRelation@1100485004(CurrFieldNo@1100525000 : Integer);
    VAR
      Vendor@1100485001 : Record 23;
      VendorRelation@1100485000 : Record 11012313;
    BEGIN
      CASE CurrFieldNo OF
        FIELDNO("Vendor (Trade Item)"):
          BEGIN
            IF "Vendor (Trade Item)" = '' THEN
              EXIT;
            VendorRelation.GET("Vendor (Trade Item)");
            VALIDATE("Vendor No.", VendorRelation."Vendor (Purchase)");
          END;

        FIELDNO("Vendor No."):
          BEGIN
            IF ("Vendor No." = '') OR ("Trade Item" = '') THEN
              EXIT;
            Vendor.GET(Vendor);
            IF Vendor."Vendor (Trade Item)" <> '' THEN
              "Vendor (Trade Item)" := Vendor."Vendor (Trade Item)";
          END;
      END;
    END;

    PROCEDURE ValidateItem@31(LTypeArtOpt@11012000 : 'Item,Basic Item,Trade Item');
    VAR
      ValidateItems@1100529001 : Codeunit 11012033;
      DummyDat@11012001 : Date;
      DummyNetPrice@1100529004 : Decimal;
      DummyGrossPrice@1100529005 : Decimal;
      DummyDiscountPerc@1100529008 : Decimal;
      DummyCostComponent@1100529007 : Code[20];
      TradeItem@1100528900 : Record 11012317;
      Item@1100528901 : Record 27;
    BEGIN
      ValidateItems.ValidateItem(
        LTypeArtOpt, "Trade Item", "Item No.", Manufacturer, "Vendor (Trade Item)", "Basic Item",
        "Cost Object", Description, "Unit of Measure", DummyNetPrice,
        DummyDiscountPerc, DummyDat, DummyGrossPrice, "Description 2", DummyCostComponent,
        '', '', 0D, '');

      //DP02375.sn
      IF "Trade Item" <> '' THEN BEGIN
        TradeItem.GET("Vendor (Trade Item)", "Trade Item");
        "GTIN Code (Item)" := TradeItem."GTIN Code (Item)";
      END ELSE BEGIN
        IF "Item No." <> '' THEN BEGIN
          Item.GET("Item No.");
          "GTIN Code (Item)" := Item."GTIN Code";
        END;
      END;
      //DP02375.en
    END;

    LOCAL PROCEDURE CheckUnitMapping@1100528900(BaseUnit@1100528901 : Text) UnitFactor : Decimal;
    VAR
      ItemUnitMapping@1100528900 : Record 11072463;
    BEGIN
      //DP02375
      UnitFactor := 1;
      ItemUnitMapping.SETRANGE("External Unit of Measure Code", "Unit of Measure (External)");
      ItemUnitMapping.SETRANGE("Internal Unit of Measure Code", BaseUnit);
      IF "Trade Item" <> '' THEN
        ItemUnitMapping.SETRANGE(Source, ItemUnitMapping.Source::TradeItem)
      ELSE
        ItemUnitMapping.SETRANGE(Source, ItemUnitMapping.Source::NavItem);
      IF ItemUnitMapping.FINDFIRST THEN
        IF ItemUnitMapping."Qty. per Unit of Measure" <> 0 THEN
          UnitFactor := 1 / ItemUnitMapping."Qty. per Unit of Measure";

      EXIT(UnitFactor);
    END;

    PROCEDURE CheckUnitConversion@1100528901();
    VAR
      UnitFactor@1100528900 : Decimal;
      UnitFactor2@1100528903 : Decimal;
      Item@1100528901 : Record 27;
      TradeItem@1100528902 : Record 11012317;
      ItemUnitofMeasure@1100528904 : Record 5404;
      BaseUnit@1100528905 : Text;
    BEGIN
      //DP02375
      IF "Trade Item" <> '' THEN BEGIN
        TradeItem.GET("Vendor (Trade Item)", "Trade Item");
        BaseUnit := TradeItem."Application ID";
      END ELSE BEGIN
        IF "Item No."<> '' THEN BEGIN
          Item.GET("Item No.");
          BaseUnit := Item."Base Unit of Measure";
        END;
      END;
      //
      UnitFactor := CheckUnitMapping(BaseUnit);
      Quantity := "Quantity (External)" * UnitFactor;
      //
      UnitFactor2 := 1;
      IF "Trade Item" <> '' THEN BEGIN
        IF "Unit of Measure" <> BaseUnit THEN BEGIN
          IF "Unit of Measure" <> TradeItem."Packaging Unit" THEN
            TESTFIELD("Unit of Measure", TradeItem."Application Unit")  //db, 08-10-19
          ELSE
            UnitFactor2 := TradeItem."Application Unit Quantity";
        END;
      END ELSE BEGIN
        IF "Item No." <> '' THEN BEGIN
          IF "Unit of Measure" <> BaseUnit THEN BEGIN
            ItemUnitofMeasure.GET("Item No.", "Unit of Measure");
            UnitFactor2 := ItemUnitofMeasure."Qty. per Unit of Measure";
          END;
        END;
      END;
      Quantity := Quantity / UnitFactor2;
    END;

    PROCEDURE GetPurchaseOrder@1100528902(ShowFilter@1100528902 : Boolean) PurchaseOrder : Text;
    VAR
      PurchaseLine@1100528900 : Record 39;
      NumDoc@1100528901 : Integer;
      PurchaseFilter@1100528903 : Text;
    BEGIN
      //DP02375
      IF "Purchase Route Reference" = '' THEN EXIT('');

      PurchaseLine.SETCURRENTKEY("Document Type","Purchase Route Reference");
      PurchaseLine.SETRANGE("Document Type", PurchaseLine."Document Type"::Order);
      PurchaseLine.SETRANGE("Purchase Route Reference", "Purchase Route Reference");
      IF PurchaseLine.FINDSET THEN BEGIN
        REPEAT
          IF (PurchaseOrder <> PurchaseLine."Document No.") THEN BEGIN
            PurchaseOrder := PurchaseLine."Document No.";
            IF PurchaseFilter = '' THEN
              PurchaseFilter := PurchaseLine."Document No."
            ELSE
              PurchaseFilter := PurchaseFilter + '|' + PurchaseLine."Document No.";
            NumDoc := NumDoc + 1;
          END;
        UNTIL PurchaseLine.NEXT = 0;
      END;

      IF (ShowFilter = TRUE) THEN
        EXIT(PurchaseFilter);

      IF (NumDoc = 1) THEN
        EXIT(PurchaseOrder)
      ELSE
        EXIT(STRSUBSTNO('[%1]', NumDoc));
    END;

    PROCEDURE LookupPurchaseOrder@1100528903();
    VAR
      PurchaseHeader@1100528900 : Record 38;
      PurchaseFilter@1100528901 : Text;
    BEGIN
      //DP02375
      PurchaseFilter := GetPurchaseOrder(TRUE);
      IF PurchaseFilter = '' THEN EXIT;

      PurchaseHeader.SETRANGE("Document Type", PurchaseHeader."Document Type"::Order);
      PurchaseHeader.SETFILTER("No.", PurchaseFilter);
      PAGE.RUNMODAL(0, PurchaseHeader);
    END;

    PROCEDURE GetAdviceOrder@1100528905() : Text;
    VAR
      AdviceOrderLine@1100528900 : Record 11012055;
      NumLines@1100528901 : Integer;
    BEGIN
      //DP02375
      IF "Purchase Route Reference" = '' THEN EXIT('');

      AdviceOrderLine.SETRANGE("Record Type", AdviceOrderLine."Record Type"::Project);
      AdviceOrderLine.SETRANGE("Project No.", "Project No.");
      AdviceOrderLine.SETRANGE("Purchase Route Reference", "Purchase Route Reference");
      IF AdviceOrderLine.FINDSET THEN BEGIN
        REPEAT
          NumLines := NumLines + 1;
        UNTIL AdviceOrderLine.NEXT = 0;
      END;

      IF (NumLines = 1) THEN
        EXIT(STRSUBSTNO('%1', AdviceOrderLine."Line No."))
      ELSE
        EXIT(STRSUBSTNO('[%1]', NumLines));
    END;

    PROCEDURE LookupAdviceOrder@1100528904();
    VAR
      AdviceOrderLine@1100528900 : Record 11012055;
      AdviceOrderPage@1100528901 : Page 11012122;
    BEGIN
      //DP02375
      AdviceOrderLine.SETRANGE("Record Type", AdviceOrderLine."Record Type"::Project);
      AdviceOrderLine.SETRANGE("Project No.", "Project No.");
      AdviceOrderLine.SETRANGE("Purchase Route Reference", "Purchase Route Reference");
      //
      AdviceOrderPage.SetSelection(0, "Purchase Route Reference");  //skip filter on Status (Processed)
      AdviceOrderPage.LOOKUPMODE(TRUE);
      AdviceOrderPage.SETTABLEVIEW(AdviceOrderLine);
      AdviceOrderPage.RUNMODAL;
    END;

    BEGIN
    {
      DP02375: function CreatePurchaseOrder removed; use procedure for Advice Order
    }
    END.
  }
}

