OBJECT XMLport 81622 Imp. Inventory per Loc IMSE
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS7.00Toolsv9.MC;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Imp. Item Inventory per Location IMSE;
               SVE=Imp. artikellager per lagerst„lle];
    DefaultFieldsValidation=No;
    Format/Evaluate=C/SIDE Format/Evaluate;
    PreserveWhiteSpace=Yes;
    OnInitXMLport=BEGIN
                    XMLNo := 81622;
                    MainTableID := 83;
                  END;

    OnPreXMLport=VAR
                   FileManagement@1100525001 : Codeunit 419;
                 BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   ConversionXMLPort.GET(XMLNo);

                   ConvMgt.CheckComCde(UseOldItemNosBln,27,ItemCommentCde);
                   ConvMgt.CheckTemplateFilled(82,ConversionXMLPort."Journal Template Name");
                   ConvMgt.CheckBatchFilled(233,ConversionXMLPort."Journal Batch Name");

                   //IF NOT PostingDateFromImportFile THEN
                   //  ConvMgt.CheckPostingDateFilled(vPostDate);

                   ConvMgt.CreateConComment(XMLNo,'Start');
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XMLNo,'Stop');
                    ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{7B539476-C20A-46BC-A552-62FED55766AD}];  ;Root                ;Element ;Text     }

    { [{A667E51D-CE85-4A0D-946E-DE2CCC52ED51}];1 ;ItemJournalLine     ;Element ;Table   ;
                                                  SourceTable=Table83;
                                                  SourceTableView=SORTING(Field1,Field41,Field2);
                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 IF A = '' THEN
                                                                                   currXMLport.SKIP;

                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Item Journal Line");

                                                                                 WITH "Item Journal Line" DO BEGIN
                                                                                   ItemCde := ConvMgt.DetermineNewCode(UseOldItemNosBln,27,ItemCommentCde,A);


                                                                                   IF PostingDateFromImportFile AND (PDate <> 0D) THEN
                                                                                     "Posting Date" := PDate
                                                                                   ELSE
                                                                                     "Posting Date" := ConversionXMLPort."Posting Date";

                                                                                   IF CDec = 0 THEN
                                                                                     currXMLport.SKIP;

                                                                                   ItemCde := ConvMgt.DetermineNewCode(UseOldItemNosBln,27,ItemCommentCde,A);

                                                                                   ConvMgt.GenerateItemJnlLine(
                                                                                     ConversionXMLPort."Journal Template Name",
                                                                                     ConversionXMLPort."Journal Batch Name",
                                                                                     "Posting Date",
                                                                                     Text100,
                                                                                     "Item Journal Line");

                                                                                   IF ConvMgt.IsItemPresent(ItemCde) THEN BEGIN
                                                                                     VALIDATE("Item No.",ItemCde);
                                                                                     VALIDATE("Location Code",B);
                                                                                   END ELSE BEGIN
                                                                                     ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateFieldNotFilledCommentTxt(
                                                                                       27,
                                                                                       A,
                                                                                       FIELDCAPTION("Item No."),
                                                                                       MainTableID,
                                                                                       STRSUBSTNO('%1-%2-%3',"Journal Template Name","Journal Batch Name","Line No.")));
                                                                                   END;

                                                                                   IF CDec > 0 THEN
                                                                                     "Entry Type" := "Entry Type"::"Positive Adjmt.";
                                                                                   IF CDec < 0 THEN BEGIN
                                                                                     "Entry Type" := "Entry Type"::"Negative Adjmt.";
                                                                                     CDec := CDec * -1;
                                                                                   END;

                                                                                   VALIDATE(Quantity,CDec);
                                                                                   IF GenBusGrpCde <> '' THEN
                                                                                     VALIDATE("Gen. Prod. Posting Group",GenBusGrpCde);
                                                                                   IF N <> '' THEN
                                                                                     VALIDATE("Bin Code",N);

                                                                                   MODIFY(TRUE);

                                                                                   IF (ConvMgt.IsItemPresent(ItemCde)) AND (AddSKUBln) AND (B<>'') THEN
                                                                                     AddSKU(ItemCde);
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{3AC77EC7-9326-4B76-BA5F-EA1F70D4DA67}];2 ;A                   ;Element ;Text    ;
                                                  Width=20 }

    { [{1B889F9B-B9E2-4749-96B0-D22BA1117049}];2 ;B                   ;Element ;Text    ;
                                                  Width=50 }

    { [{D76B46B3-243B-4FF7-8D1D-C7B64CCFA492}];2 ;C                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF C <> '' THEN
                                                                                    EVALUATE(CDec,C);
                                                                                END;

                                                  Width=50 }

    { [{11AAC24C-6612-4FE6-9973-FE5EF2EF2C43}];2 ;D                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF D <> '' THEN
                                                                                    EVALUATE(DInt,D);
                                                                                END;

                                                  Width=50 }

    { [{F0633544-507F-4C5E-A35B-A0DD95F11E63}];2 ;E                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF E <> '' THEN
                                                                                    EVALUATE(EDateF,E);
                                                                                END;

                                                  Width=50 }

    { [{98E7308F-19D5-4AF6-89FB-48DB78E52124}];2 ;F                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF F <> '' THEN
                                                                                    EVALUATE(FDateF,F);
                                                                                END;

                                                  Width=50 }

    { [{23B2F6EB-78F9-48FB-BC70-858F6A53A74C}];2 ;G                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF G <> '' THEN
                                                                                    EVALUATE(GDec,G);
                                                                                END;

                                                  Width=50 }

    { [{007CC416-7129-43EA-90B0-193FFE5FCA68}];2 ;H                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF H <> '' THEN
                                                                                    EVALUATE(HDec,H);
                                                                                END;

                                                  Width=50 }

    { [{8F9BF873-E7E2-450A-B9C5-33703DAFE6BE}];2 ;I                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF I <> '' THEN
                                                                                    EVALUATE(IDec,I);
                                                                                END;

                                                  Width=50 }

    { [{F0890EEC-4257-4AFD-B88A-7442730D3214}];2 ;J                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF J <> '' THEN
                                                                                    EVALUATE(JDec,J);
                                                                                END;

                                                  Width=50 }

    { [{659442CF-3753-4298-9149-BE36CD412787}];2 ;K                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF K <> '' THEN
                                                                                    EVALUATE(KDec,K);
                                                                                END;

                                                  Width=50 }

    { [{575C2CA6-4C40-4A7F-A50C-2A6AD26B4DC0}];2 ;L                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF L <> '' THEN
                                                                                    EVALUATE(LDec,L);
                                                                                END;

                                                  Width=50 }

    { [{C820A9D4-97D5-4DE5-B9B8-37016A0E8AD8}];2 ;M                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF M <> '' THEN
                                                                                    EVALUATE(MDec,M);
                                                                                END;

                                                  Width=50 }

    { [{71D99CDA-4BD2-4C4F-864A-4C58FF70202A}];2 ;N                   ;Element ;Text    ;
                                                  Width=50 }

    { [{2B61BAAC-2E0C-4942-8622-A3E310053AB1}];2 ;O                   ;Element ;Text    ;
                                                  Width=50 }

    { [{3777C5E2-F12B-426C-AF23-B2EB58C9D28C}];2 ;P                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF P <> '' THEN
                                                                                    EVALUATE(PDate,P);
                                                                                END;

                                                  Width=50 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                   UseOldItemNosBln := FALSE;
                 END;

    }
    CONTROLS
    {
      { 1100409000;;Container;
                  Name=Imp. Inventory per Location;
                  ContainerType=ContentArea }

      { 1100409001;1;Group  ;
                  CaptionML=[ENU=Options;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=[ENU=General Product Posting Group;
                             SVE=Allm„nna produktbokf”ringsmallar];
                  SourceExpr=GenBusGrpCde;
                  TableRelation="Gen. Product Posting Group" }

      { 1100525003;2;Field  ;
                  Name=DateFromImport;
                  CaptionML=[ENU=Posting Date from Import File;
                             SVE=Bokf”ringsdatum fr†n importfil];
                  SourceExpr=PostingDateFromImportFile }

      { 1100525005;2;Field  ;
                  CaptionML=[ENU=Add SKU's;
                             SVE=L„gga till lagerst„llsenheter];
                  SourceExpr=AddSKUBln }

      { 1100525006;2;Field  ;
                  CaptionML=[ENU=Lookup Item No. based on old Item No.;
                             SVE=Val av artikelnr baserat p† gammalt artikelnr];
                  SourceExpr=UseOldItemNosBln;
                  OnValidate=BEGIN
                               IF NOT UseOldItemNosBln THEN
                                 ItemCommentCde := '';
                             END;
                              }

      { 1100525007;2;Field  ;
                  Name=ItemComCde;
                  CaptionML=[ENU=Comment Code for searching Item No.;
                             SVE=Kommentarskod f”r s”kning efter artikelnr];
                  SourceExpr=ItemCommentCde;
                  TableRelation="Comment Code" }

    }
  }
  CODE
  {
    VAR
      Text100@1100525014 : TextConst 'ENU=OPENING;SVE=™PPNAR';
      Text001@1100525002 : TextConst 'ENU=Document No. in Description;SVE=Dokumentnr i beskrivning';
      Text002@1100525001 : TextConst 'ENU="<empty>=not app, [1]=Fixed Reorder Qty., [2]=Maximum Qty., [3]=Order, [4]=Lot-for-Lot";SVE="<tom>=ej till„mp., [1]=Fast ombest.antal, [2]=Max. antal, [3]=Order, [4]=Parti f”r parti"';
      CommentRec@1100525036 : Record 97;
      ItemJournalBatch@1100525035 : Record 233;
      StockkeepingUnit@1100525034 : Record 5700;
      ConversionXMLPort@1100525015 : Record 11020640;
      UseOldItemNosBln@1100525033 : Boolean;
      ItemCommentCde@1100525032 : Code[20];
      ItemCde@1100525031 : Code[20];
      XMLNo@1100525026 : Integer;
      MainTableID@1100525025 : Integer;
      ConvMgt@1100525023 : Codeunit 11020212;
      ConversionFileFormat@1100525022 : Record 11020691;
      RunIsImportRunBln@1100525021 : Boolean;
      PostingDateFromImportFile@1100525020 : Boolean;
      GenBusGrpCde@1100525019 : Code[20];
      AddSKUBln@1100525018 : Boolean;
      DelSKUBln@1100525017 : Boolean;
      ImpLineCounter@1100525016 : Integer;
      CDec@1100525013 : Decimal;
      DInt@1100525012 : Integer;
      EDateF@1100525011 : DateFormula;
      FDateF@1100525010 : DateFormula;
      GDec@1100525009 : Decimal;
      HDec@1100525008 : Decimal;
      IDec@1100525007 : Decimal;
      JDec@1100525006 : Decimal;
      KDec@1100525005 : Decimal;
      LDec@1100525004 : Decimal;
      MDec@1100525003 : Decimal;
      PDate@1100525000 : Date;

    PROCEDURE AddSKU@1100525000(ItemCde@1100525000 : Code[20]);
    VAR
      lvItemRec@1100525001 : Record 27;
    BEGIN
      lvItemRec.GET(ItemCde);
      IF NOT StockkeepingUnit.GET(B,ItemCde,'') THEN BEGIN
        StockkeepingUnit.INIT;
        StockkeepingUnit.VALIDATE("Location Code",B);
        StockkeepingUnit.VALIDATE("Item No.",ItemCde);
        StockkeepingUnit.INSERT(TRUE);
        StockkeepingUnit.VALIDATE("Unit Cost",lvItemRec."Unit Cost");
        StockkeepingUnit.VALIDATE("Standard Cost",lvItemRec."Standard Cost");
        StockkeepingUnit.VALIDATE("Last Direct Cost",lvItemRec."Last Direct Cost");
        StockkeepingUnit.VALIDATE("Reordering Policy",DInt);
        StockkeepingUnit.VALIDATE("Time Bucket",EDateF);
        StockkeepingUnit.VALIDATE("Safety Lead Time",FDateF);
        StockkeepingUnit.VALIDATE("Safety Stock Quantity",GDec);
        StockkeepingUnit.VALIDATE("Reorder Point",HDec);
        StockkeepingUnit.VALIDATE("Maximum Inventory",IDec);
        StockkeepingUnit.VALIDATE("Reorder Quantity",JDec);
        StockkeepingUnit.VALIDATE("Minimum Order Quantity",KDec);
        StockkeepingUnit.VALIDATE("Maximum Order Quantity",LDec);
        StockkeepingUnit.VALIDATE("Order Multiple",MDec);
        IF O <> '' THEN
          StockkeepingUnit.VALIDATE("Shelf No.",AddShelf);
        StockkeepingUnit.MODIFY(TRUE);
      END;
    END;

    PROCEDURE AddShelf@1210190019() : Code[10];
    VAR
      ShelfperLocation@1100525000 : Record 11020241;
    BEGIN
      ShelfperLocation.INIT;
      ShelfperLocation."Location Code" := B;
      ShelfperLocation.Code := O;
      IF ShelfperLocation.INSERT THEN;
      EXIT(O);
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,"Item Journal Line".FIELDNAME("Item No."),'Code20','OldTxt');
        InsertColumnLine(XMLNo,'B',MainTableID,"Item Journal Line".FIELDNAME("Location Code"),'Code10','');
        InsertColumnLine(XMLNo,'C',MainTableID,"Item Journal Line".FIELDNAME(Quantity),'Decimal','');
        InsertColumnLine(XMLNo,'D',5700,StockkeepingUnit.FIELDNAME("Reordering Policy"),'Integer',Text002);
        InsertColumnLine(XMLNo,'E',5700,StockkeepingUnit.FIELDNAME("Time Bucket"),'DateFormula','');
        InsertColumnLine(XMLNo,'F',5700,StockkeepingUnit.FIELDNAME("Safety Lead Time"),'DateFormula','');
        InsertColumnLine(XMLNo,'G',5700,StockkeepingUnit.FIELDNAME("Safety Stock Quantity"),'Decimal','');
        InsertColumnLine(XMLNo,'H',5700,StockkeepingUnit.FIELDNAME("Reorder Point"),'Decimal','');
        InsertColumnLine(XMLNo,'I',5700,StockkeepingUnit.FIELDNAME("Maximum Inventory"),'Decimal','');
        InsertColumnLine(XMLNo,'J',5700,StockkeepingUnit.FIELDNAME("Reorder Quantity"),'Decimal','');
        InsertColumnLine(XMLNo,'K',5700,StockkeepingUnit.FIELDNAME("Minimum Order Quantity"),'Decimal','');
        InsertColumnLine(XMLNo,'L',5700,StockkeepingUnit.FIELDNAME("Maximum Order Quantity"),'Decimal','');
        InsertColumnLine(XMLNo,'M',5700,StockkeepingUnit.FIELDNAME("Order Multiple"),'Decimal','');
        InsertColumnLine(XMLNo,'N',MainTableID,"Item Journal Line".FIELDNAME("Bin Code"),'Code20','');
        InsertColumnLine(XMLNo,'O',5700,StockkeepingUnit.FIELDNAME("Shelf No."),'Code20','');
        InsertColumnLine(XMLNo,'P',MainTableID,"Item Journal Line".FIELDNAME("Posting Date"),'Date','');
      END;
    END;

    PROCEDURE ClearFields@1100529902();
    BEGIN
      CLEAR("Item Journal Line");
      CLEAR(StockkeepingUnit);
      A := '';
      B := '';
      C := '';
      D := '';
      CLEAR(E);
      CLEAR(F);
      G := '';
      H := '';
      I := '';
      J := '';
      K := '';
      L := '';
      M := '';
      N := '';
      O := '';
      P := '';

      CDec := 0;
      DInt := 0;
      CLEAR(EDateF);
      CLEAR(FDateF);
      GDec := 0;
      HDec := 0;
      IDec := 0;
      JDec := 0;
      KDec := 0;
      LDec := 0;
      MDec := 0;
      PDate := 0D;
    END;

    PROCEDURE FillConversionXMLPortFields@1100409004();
    VAR
      ConversionXMLPort@1100409000 : Record 11020640;
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      ConversionXMLPort."Post by Journal Template Batch" := TRUE;
      ConversionXMLPort."Journal Template Type" := ConversionXMLPort."Journal Template Type"::Inventory;
      ConversionXMLPort."Main Table ID" := MainTableID;
      ConversionXMLPort."Page ID" := 519;
      ConversionXMLPort.MODIFY;
    END;

    BEGIN
    END.
  }
}

