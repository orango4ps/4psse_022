OBJECT Table 11071961 Location Specification Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               //CentralDataManagement.EditObjectSpecificationLine(Rec, 1, xRec);
               IF BORG AND NOT DontCheckBORGUser THEN
                 BORGManagement.TestBORGUser;
             END;

    OnModify=BEGIN
               //CentralDataManagement.EditObjectSpecificationLine(Rec, 2, xRec);
               IF BORG AND (xRec."Specification Code" <> '') THEN
                 BORGManagement.TestBORGUser;
             END;

    OnDelete=BEGIN
               //CentralDataManagement.EditObjectSpecificationLine(Rec, 4, xRec);
               IF BORG THEN
                 BORGManagement.TestBORGUser;
             END;

    CaptionML=ENU=Location Specification Line;
    LookupPageID=Page11126458;
    DrillDownPageID=Page11126458;
  }
  FIELDS
  {
    { 10  ;   ;Service Location No.;Code20        ;TableRelation="Service Location";
                                                   OnValidate=BEGIN
                                                                //IF Code <> xRec.Code THEN BEGIN
                                                                //  MainRec := xRec;
                                                                //  IF MainRec.FIND THEN
                                                                //    CentralDataManagement.EditObjectSpecificationLine(Rec, 3, xRec);
                                                                //END;
                                                              END;

                                                   CaptionML=[ENU=Service Location No.;
                                                              NOR=Servicelokasjon Nr.;
                                                              SVE=Serviceplatsnr];
                                                   Editable=No }
    { 30  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr];
                                                   Editable=No }
    { 40  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF (xRec.Type <> Type) AND (Type = Type::Group) THEN BEGIN
                                                                  "Field Type" := "Field Type"::" ";
                                                                  "Unit Of Measure" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=Group,Line;
                                                                    NOR=Gruppe,Rad;
                                                                    SVE=Grupp,Rad];
                                                   OptionString=Group,Line }
    { 50  ;   ;Specification Code  ;Code10        ;TableRelation=IF (Type=CONST(Group)) "Location Specification Group"
                                                                 ELSE IF (Type=CONST(Line)) "Base Location Spec. Line";
                                                   OnValidate=VAR
                                                                LocationSpecificationGroup@1100528601 : Record 11071958;
                                                                BaseLocationSpecLine@1100528600 : Record 11071959;
                                                              BEGIN
                                                                CASE Type OF
                                                                  Type::Group:
                                                                    BEGIN
                                                                      LocationSpecificationGroup.GET("Specification Code");
                                                                      VALIDATE(Description, LocationSpecificationGroup.Description);
                                                                    END;
                                                                  Type::Line:
                                                                    BEGIN
                                                                      IF NOT BaseLocationSpecLine.GET("Specification Code") THEN
                                                                        BaseLocationSpecLine.INIT;
                                                                      VALIDATE(Description, BaseLocationSpecLine.Description);
                                                                      VALIDATE("Field Type", BaseLocationSpecLine."Field Type");
                                                                      VALIDATE("Unit Of Measure", BaseLocationSpecLine."Unit Of Measure");
                                                                      BORG := BaseLocationSpecLine.BORG;
                                                                      IF BORG AND (CurrFieldNo = FIELDNO("Specification Code")) THEN
                                                                        BORGManagement.TestBORGUser;
                                                                      Value := '';
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Specification Code;
                                                              NOR=Spesifikasjonskode;
                                                              SVE=Specifikationskod] }
    { 60  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 70  ;   ;Field Type          ;Option        ;OnValidate=BEGIN
                                                                IF "Field Type" = "Field Type"::" " THEN
                                                                  TESTFIELD(Type, Type::Group);
                                                              END;

                                                   CaptionML=[ENU=Field Type;
                                                              NOR=Field Type;
                                                              SVE=Field Type];
                                                   OptionCaptionML=[ENU="Date,Value,Text,Option, ";
                                                                    NOR="Dato,Verdi,Tekst,Alternativ, ";
                                                                    SVE="Datum,V„rde,Text,Alternativ, "];
                                                   OptionString=[Date,Value,Text,Option, ];
                                                   Editable=No }
    { 80  ;   ;Unit Of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=[ENU=Unit Of Measure;
                                                              NOR=Enhet;
                                                              SVE=Enhet];
                                                   Editable=No }
    { 90  ;   ;Value               ;Text80        ;OnValidate=BEGIN
                                                                EvaluateValue;
                                                                IF BORG THEN
                                                                  Value := BORGManagement.EncodeValue(Value);
                                                              END;

                                                   OnLookup=BEGIN
                                                              HandleLookupValue;
                                                            END;

                                                   CaptionML=[ENU=Value;
                                                              NOR=Verdi;
                                                              SVE=V„rde] }
    { 100 ;   ;Visible for Field Service;Boolean  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Base Location Spec. Line"."Visible for Field Service" WHERE (Code=FIELD(Specification Code)));
                                                   CaptionML=[ENU=Visible for Field Service;
                                                              NOR=Synlig for feltservice;
                                                              SVE=Visas f”r f„ltservice];
                                                   Editable=No }
    { 110 ;   ;Editable by Field Service;Boolean  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Base Location Spec. Line"."Editable by Field Service" WHERE (Code=FIELD(Specification Code)));
                                                   CaptionML=[ENU=Editable by Field Service;
                                                              NOR=Redigerbar gjennom feltservice;
                                                              SVE=Redigerbar genom f„ltservice];
                                                   Editable=No }
    { 130 ;   ;Value (Date)        ;Date          ;OnValidate=BEGIN
                                                                Value := FORMAT("Value (Date)");
                                                              END;

                                                   CaptionML=[ENU=Value (Date);
                                                              NOR=Verdi (Dato);
                                                              SVE=Valuteringsdag];
                                                   Editable=No }
    { 140 ;   ;Value (Value)       ;Decimal       ;CaptionML=[ENU=Value (Value);
                                                              NOR=Verdi (Verdi);
                                                              SVE=V„rde (v„rde)];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 150 ;   ;BORG                ;Boolean       ;OnValidate=VAR
                                                                BORGManagement@1100528600 : Codeunit 11012859;
                                                                DecodedValue@1100528601 : Text[80];
                                                                Decoded@1100528602 : Boolean;
                                                              BEGIN
                                                                IF xRec.BORG <> BORG THEN BEGIN
                                                                  BORGManagement.TestBORGUser;
                                                                  IF BORG THEN
                                                                    Value := BORGManagement.EncodeValue(Value)
                                                                  ELSE BEGIN
                                                                    DecodedValue := BORGManagement.DecodeValue(Value, TRUE, Decoded);
                                                                    IF NOT Decoded THEN
                                                                      ERROR(Text004);
                                                                    VALIDATE(Value, DecodedValue);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=BORG;
                                                              NOR=BORG] }
  }
  KEYS
  {
    {    ;Service Location No.,Line No.           ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100528601 : TextConst 'ENU=Option Value %1 not found;NOR=Alternativverdi %1 ikke funnet;SVE=Alternativv„rde %1 hittades inte';
      Text002@1100528600 : TextConst 'ENU=t;NOR=t;SVE=t';
      BORGManagement@1100528603 : Codeunit 11012859;
      Text004@1100528604 : TextConst 'ENU=Vaue not decoded;NOR=Verdi er ikke dekodet';
      DontCheckBORGUser@1100409000 : Boolean;

    PROCEDURE GetLocSpecificationGroupCode@1100528601() : Code[10];
    VAR
      LocationSpecificationLine@1100528600 : Record 11071961;
      BaseLocationSpecLine@1100528900 : Record 11071959;
    BEGIN
      LocationSpecificationLine.SETRANGE("Service Location No.", "Service Location No.");
      LocationSpecificationLine.SETRANGE("Service Location No.", "Service Location No.");
      LocationSpecificationLine.SETFILTER("Line No.", '<%1', "Line No.");
      LocationSpecificationLine.SETRANGE(Type, Type::Group);
      IF LocationSpecificationLine.FINDLAST THEN
        EXIT(LocationSpecificationLine."Specification Code");

      //DP00118.sn
      IF BaseLocationSpecLine.GET("Specification Code") THEN
        EXIT(BaseLocationSpecLine."Specification Group Code");
      //DP00118.en
    END;

    PROCEDURE EvaluateValue@1100528603();
    VAR
      DummyDate@1100528600 : Date;
      DummyDecimal@1100528601 : Decimal;
    BEGIN
      "Value (Date)" := 0D;
      "Value (Value)" := 0;
      IF Value = '' THEN EXIT;
      CASE "Field Type" OF
        "Field Type"::Date:
          BEGIN
            IF LOWERCASE(Value) = Text002 THEN BEGIN
              Value := FORMAT(TODAY);
              IF NOT BORG THEN
                "Value (Date)" := TODAY;
            END ELSE BEGIN
              EVALUATE(DummyDate, Value);
              Value := FORMAT(DummyDate);
              IF NOT BORG THEN
                "Value (Date)" := DummyDate;
            END;
          END;
        "Field Type"::Value:
          BEGIN
            EVALUATE(DummyDecimal, Value);
            Value := FORMAT(DummyDecimal);
            IF NOT BORG THEN
              "Value (Value)" := DummyDecimal;
          END;
        "Field Type"::Text:;
        "Field Type"::Option:
          Value := CheckOptionValue;
      END;
    END;

    PROCEDURE CheckOptionValue@1100528604() : Text[80];
    VAR
      BaseLocationSpecOption@1100528600 : Record 11071960;
    BEGIN
      BaseLocationSpecOption.SETRANGE("Base Location Spec. Line Code", "Specification Code");
      BaseLocationSpecOption.SETRANGE(Description, Value);
      IF BaseLocationSpecOption.FINDFIRST THEN
        EXIT(BaseLocationSpecOption.Description);
      BaseLocationSpecOption.SETFILTER(Description, '@' + Value + '*');
      IF BaseLocationSpecOption.COUNT = 1 THEN BEGIN
        BaseLocationSpecOption.FINDFIRST;
        EXIT(BaseLocationSpecOption.Description);
      END;
      ERROR(Text001, Value);
    END;

    PROCEDURE HandleLookupSpecificationCode@1100528600(Edit@1100528600 : Boolean);
    VAR
      LocationSpecificationGroup@1100528601 : Record 11071958;
      BaseLocationSpecLine@1100528602 : Record 11071959;
    BEGIN
      CASE Type OF
        Type::Group:
          BEGIN
            IF PAGE.RUNMODAL(0, LocationSpecificationGroup) = ACTION::LookupOK THEN
              IF Edit THEN
                VALIDATE("Specification Code", LocationSpecificationGroup.Code);
          END;
        Type::Line:
          BEGIN
            BaseLocationSpecLine.SETFILTER("Specification Group Code", '%1|%2', '', GetLocSpecificationGroupCode);
            IF PAGE.RUNMODAL(0, BaseLocationSpecLine) = ACTION::LookupOK THEN
              IF Edit THEN
                VALIDATE("Specification Code", BaseLocationSpecLine.Code);
          END;
      END;
    END;

    PROCEDURE GetValue@1100528602(VAR ODecoded@1100528601 : Boolean) : Text[80];
    BEGIN
      ODecoded := TRUE;
      IF NOT BORG THEN
        EXIT(Value);
      EXIT(BORGManagement.DecodeValue(Value, FALSE, ODecoded));
    END;

    PROCEDURE HandleLookupValue@1100528605();
    VAR
      BaseLocationSpecOption@1100528600 : Record 11071960;
      BORGUserManagement@1100528601 : Codeunit 11012861;
    BEGIN
      IF BORG THEN
        IF BORGUserManagement.IsBorgEmplTimedOut THEN
          EXIT;
      IF "Field Type" = "Field Type"::Option THEN BEGIN
        BaseLocationSpecOption.SETRANGE("Base Location Spec. Line Code", "Specification Code");
        IF PAGE.RUNMODAL(0, BaseLocationSpecOption) = ACTION::LookupOK THEN
          VALIDATE(Value, BaseLocationSpecOption.Description);
      END;
    END;

    PROCEDURE SetDontCheckBORGUser@1100409001(IDontCheckBORGUser@1100409000 : Boolean);
    BEGIN
      DontCheckBORGUser := IDontCheckBORGUser;
    END;

    BEGIN
    END.
  }
}

