OBJECT Page 11126985 DSP Plan Message Dialog
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Planung ausw„hlen;
               ENU=Select Planning;
               NLD=Planning selecteren];
    PageType=StandardDialog;
  }
  CONTROLS
  {
    { 1100528300;0;Container;
                ContainerType=ContentArea }

    { 1100528316;1;Field  ;
                CaptionML=[DEU=Startdatum;
                           ENU=Start Date;
                           NLD=Startdatum];
                SourceExpr=StartDate;
                OnValidate=BEGIN
                             StartDateTime := CREATEDATETIME(StartDate, StartTime);
                           END;
                            }

    { 1100528315;1;Field  ;
                CaptionML=[DEU=Start Time;
                           ENU=Start Time;
                           NLD=Starttijd];
                SourceExpr=StartTime;
                OnValidate=BEGIN
                             StartDateTime := CREATEDATETIME(StartDate, StartTime);
                           END;
                            }

    { 1100528314;1;Field  ;
                CaptionML=[DEU=Enddatum;
                           ENU=End Date;
                           NLD=Einddatum];
                SourceExpr=EndDate;
                OnValidate=BEGIN
                             EndDateTime := CREATEDATETIME(EndDate, EndTime);
                           END;
                            }

    { 1100528313;1;Field  ;
                CaptionML=[DEU=Endzeit;
                           ENU=End Time;
                           NLD=Eindtijd];
                SourceExpr=EndTime;
                OnValidate=BEGIN
                             EndDateTime := CREATEDATETIME(EndDate, EndTime);
                           END;
                            }

    { 1100528312;1;Field  ;
                CaptionML=[DEU=Planungszeitnr.;
                           ENU=Planning Time No.;
                           NLD=TypeTijdstipnr.];
                SourceExpr=PlanningTimeNo;
                OnValidate=VAR
                             DSPCode@1100528300 : Record 11126753;
                           BEGIN
                             CheckCodeNo(DSPCode.Type::PlanTypeTime, PlanningTimeNo, PlanningTimeDescription);
                           END;

                OnLookup=VAR
                           DSPCode@1100528300 : Record 11126753;
                         BEGIN
                           DSPCode.SETRANGE(Type, DSPCode.Type::PlanTypeTime);
                           IF FirstVersion THEN DSPCode.SETRANGE("Used in First Version", TRUE);
                           IF SecondVersion THEN DSPCode.SETRANGE("Used in Second Version", TRUE);
                           IF (PAGE.RUNMODAL(0, DSPCode) = ACTION::LookupOK) THEN BEGIN
                             PlanningTimeNo := DSPCode."No.";
                             CheckCodeNo(DSPCode.Type::PlanTypeTime, PlanningTimeNo, PlanningTimeDescription);
                             CurrPage.UPDATE;
                           END ELSE
                             PlanningTimeNo := 0;
                         END;
                          }

    { 1100528302;1;Field  ;
                CaptionML=[DEU=Planungszeitbeschreibung;
                           ENU=Planning Time Description;
                           NLD=Typetijdstip omschrijving];
                SourceExpr=PlanningTimeDescription;
                Editable=false }

    { 1100528310;1;Field  ;
                CaptionML=[DEU=Ursachenr.;
                           ENU=Reason No.;
                           NLD=Redennr.];
                SourceExpr=ReasonNo;
                OnValidate=VAR
                             DSPCode@1100528300 : Record 11126753;
                           BEGIN
                             CheckCodeNo(DSPCode.Type::PlanReason, ReasonNo, ReasonDescription);
                           END;

                OnLookup=VAR
                           DSPAssignment@1100528302 : Record 11126740;
                           DSPCode@1100528301 : Record 11126753;
                           DSPManagement@1100528300 : Codeunit 11126714;
                         BEGIN
                           DSPCode.SETRANGE(Type, DSPCode.Type::PlanReason);
                           IF FirstVersion THEN DSPCode.SETRANGE("Used in First Version", TRUE);
                           IF SecondVersion THEN DSPCode.SETRANGE("Used in Second Version", TRUE);
                           IF (PAGE.RUNMODAL(0, DSPCode) = ACTION::LookupOK) THEN BEGIN
                             ReasonNo := DSPCode."No.";
                             CheckCodeNo(DSPCode.Type::PlanReason, ReasonNo, ReasonDescription);
                           END ELSE
                             ReasonNo := 0;
                         END;
                          }

    { 1100528301;1;Field  ;
                CaptionML=[DEU=Ursache Beschreibung;
                           ENU=Reason Description;
                           NLD=Reden omschrijving];
                SourceExpr=ReasonDescription;
                Editable=false }

    { 1100528308;1;Field  ;
                CaptionML=[DEU=Bediener erforderlich;
                           ENU=Operator Mandatory;
                           NLD=Opdrachtgever benodigd];
                SourceExpr=OperatorMandatory }

    { 1100528307;1;Field  ;
                CaptionML=[DEU=Bemerkung;
                           ENU=Remark;
                           NLD=Toelichting];
                SourceExpr=RemarkText;
                Editable=false;
                OnAssistEdit=VAR
                               TextEditor@1100528300 : Codeunit 11012001;
                               IStream@1100528302 : InStream;
                             BEGIN
                               //CALCFIELDS(Remark);
                               //TempBlob.Blob := Remark;
                               TextEditor.BlobTextAssistEdit(TempBlob, TRUE);
                               //Remark := TempBlob.Blob;
                               //Remark.CREATEINSTREAM(IStream);
                               //IStream.READ(RemarkText);
                               TempBlob.Blob.CREATEINSTREAM(IStream);
                               IStream.READ(RemarkText);
                             END;
                              }

  }
  CODE
  {
    VAR
      TempBlob@1100528307 : TEMPORARY Record 99008535;
      EndDate@1100528305 : Date;
      EndDateTime@1100528308 : DateTime;
      EndTime@1100528306 : Time;
      FirstVersion@1100528301 : Boolean;
      OperatorMandatory@1100528311 : Boolean;
      PlanningTimeDescription@1100528314 : Text;
      PlanningTimeNo@1100528312 : Integer;
      SecondVersion@1100528302 : Boolean;
      ReasonDescription@1100528313 : Text;
      ReasonNo@1100528310 : Integer;
      RemarkText@1100528303 : Text;
      StartDate@1100528300 : Date;
      StartDateTime@1100528309 : DateTime;
      StartTime@1100528304 : Time;

    PROCEDURE GetEndTime@1100528307() : DateTime;
    BEGIN
      EXIT(EndDateTime);
    END;

    PROCEDURE GetNo@1100528300() : Integer;
    BEGIN
      EXIT(ReasonNo);
    END;

    PROCEDURE GetOperatorMandatory@1100528312() : Boolean;
    BEGIN
      EXIT(OperatorMandatory);
    END;

    PROCEDURE GetRemark@1100528301(VAR TempBlobInOut@1100528300 : TEMPORARY Record 99008535);
    BEGIN
      TempBlobInOut.Blob := TempBlob.Blob;
    END;

    PROCEDURE GetStartTime@1100528306() : DateTime;
    BEGIN
      EXIT(StartDateTime);
    END;

    PROCEDURE GetTimeNo@1100528305() : Integer;
    BEGIN
      EXIT(PlanningTimeNo);
    END;

    PROCEDURE SetVars@1100528302(FirstVersionIn@1100528300 : Boolean;SecondVersionIn@1100528301 : Boolean);
    BEGIN
      FirstVersion := FirstVersionIn;
      SecondVersion := SecondVersionIn;
    END;

    LOCAL PROCEDURE "---locals---"@1100528304();
    BEGIN
    END;

    LOCAL PROCEDURE CheckCodeNo@1100528303(TypeIn@1100528301 : Option;NoIn@1100528302 : Integer;VAR DescriptionInOut@1100528303 : Text);
    VAR
      DSPCode@1100528300 : Record 11126753;
    BEGIN
      DSPCode.SETRANGE(Type, TypeIn);
      DSPCode.SETRANGE("No.", NoIn);
      IF FirstVersion THEN DSPCode.SETRANGE("Used in First Version", TRUE);
      IF SecondVersion THEN DSPCode.SETRANGE("Used in Second Version", TRUE);
      DSPCode.FINDFIRST;
      DescriptionInOut := DSPCode.Description;
    END;

    BEGIN
    END.
  }
}

