OBJECT XMLport 11012405 Imp. Std. Object Maint. Scheme
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Imp. Std. Object Maint. Scheme;
               SVE=Imp. Std objektunderh. Plan];
    DefaultFieldsValidation=No;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    XmlPortID := 11012405;
                    MainTableID := 11071703;
                    MainTableLookupPageID := 11125168;
                    XMLPortRequestPageID := 11230053;
                  END;

    OnPreXMLport=VAR
                   ConversionXMLPort4PS@1100527700 : Record 11020640;
                 BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     ConversionXMLPort4PS.UpdateFromXMLPort(XmlPortID,MainTableID,MainTableLookupPageID,XMLPortRequestPageID,FALSE,0);
                     COMMIT;
                     ERROR('');
                   END;

                   ConvMgt.CheckComCde(UseOldStdObjNoBln,11020334,StdObjCommentCde);

                   ConvMgt.DeleteConComment(XmlPortID);
                   ConvMgt.CreateConComment(XmlPortID,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XmlPortID,'Start');
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XmlPortID,'Stop');
                    ConvMgt.CreateConComment(XmlPortID,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{755F5B7F-F062-4834-8364-DC4CD51C5A62}];  ;Root                ;Element ;Text     }

    { [{A7DBD164-8D3E-4F8D-B3A0-89F91BC12205}];1 ;Std.ObjectMaintenanceScheme;Element;Table;
                                                  SourceTable=Table11071703;
                                                  SourceTableView=SORTING(Field10,Field40,Field20);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              ClearFields;
                                                                            END;

                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 StripData;
                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Std. Object Maintenance Scheme");

                                                                                 WITH "Std. Object Maintenance Scheme" DO BEGIN
                                                                                   StdObjCde := ConvMgt.DetermineNewCode(UseOldStdObjNoBln,CommentRec."Table Name"::"Standard Object",StdObjCommentCde,A);

                                                                                   IF ConvMgt.IsStandardObjectPresent(StdObjCde) THEN BEGIN
                                                                                     VALIDATE("Object No.",StdObjCde);
                                                                                     CALCFIELDS("Object Group");
                                                                                     VALIDATE("Service Package",B);
                                                                                     VALIDATE("Maintenance Scheme",C);
                                                                                     INSERT(TRUE);
                                                                                     IF DInt = 1 THEN
                                                                                       VALIDATE(Subcontracting,TRUE);
                                                                                     IF E <> '' THEN
                                                                                       VALIDATE("Base Inspection List Code",E);
                                                                                     MODIFY(TRUE);
                                                                                   END ELSE
                                                                                     ConvMgt.CreateConComment(XmlPortID,ConvMgt.CreateNoRecAddedCommentTxt(
                                                                                      11020334,
                                                                                      A,
                                                                                      MainTableID,
                                                                                      STRSUBSTNO('%1-%2',A,B)));
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{5C900A9C-2240-4551-8D3B-A67A2D629F53}];2 ;A                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{5E5EE9AF-296C-4B48-B3A4-71FD1D3BDBB8}];2 ;B                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{81EF86E1-A401-49BA-998E-C96326459340}];2 ;C                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{4A9198DB-9B81-4D44-B612-817F3667EF54}];2 ;D                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF D <> '' THEN
                                                                                    EVALUATE(DInt,D);
                                                                                END;
                                                                                 }

    { [{03F1C562-1C83-4D8C-9E6D-FF926ECD50BA}];2 ;E                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=[ENU=Imp. Contract Object;
                 SVE=Imp. kontraktsobjekt];
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100409010;;Container;
                  Name=Imp. Service Object;
                  CaptionML=ENU=<Imp. Service Object>;
                  ContainerType=ContentArea }

      { 1100409009;1;Group  ;
                  CaptionML=[ENU=Options;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525000;2;Field  ;
                  CaptionML=[ENU=Lookup new Standard Object based on old No.;
                             SVE=Val av nytt standardobjekt baserat p† gammalt nr];
                  SourceExpr=UseOldStdObjNoBln;
                  OnValidate=BEGIN
                               IF NOT UseOldStdObjNoBln THEN
                                 StdObjCommentCde := '';
                             END;
                              }

      { 1100525001;2;Field  ;
                  Name=StdObjCde;
                  CaptionML=[ENU=Comment Code for searching Standard Object No.;
                             SVE=Kommentarskod f”r s”kning efter standardobjektnr];
                  SourceExpr=StdObjCommentCde;
                  TableRelation="Comment Code" }

    }
  }
  CODE
  {
    VAR
      CommentRec@1100525018 : Record 97;
      ConvMgt@1100525017 : Codeunit 11020212;
      XmlPortID@1100525014 : Integer;
      MainTableID@1100525013 : Integer;
      MainTableLookupPageID@1100527701 : Integer;
      XMLPortRequestPageID@1100527700 : Integer;
      ImpLineCounter@1100525012 : Integer;
      ConversionFileFormat@1100525010 : Record 11020691;
      RunIsImportRunBln@1100525009 : Boolean;
      UseOldStdObjNoBln@1100525005 : Boolean;
      StdObjCommentCde@1100525004 : Code[20];
      StdObjCde@1100525003 : Code[20];
      DInt@1100409000 : Integer;

    PROCEDURE StripData@1100485001();
    BEGIN
      A := DELCHR(A,'<>',' ');
      B := DELCHR(B,'<>',' ');
      C := DELCHR(C,'<>',' ');
      D := DELCHR(D,'<>',' ');
      E := DELCHR(E,'<>',' ');
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XmlPortID);
        InsertColumnLine(XmlPortID,'A',MainTableID,"Std. Object Maintenance Scheme".FIELDNAME("Object No."),'Code20','OldTxt');
        InsertColumnLine(XmlPortID,'B',MainTableID,"Std. Object Maintenance Scheme".FIELDNAME("Service Package"),'Code10','');
        InsertColumnLine(XmlPortID,'C',MainTableID,"Std. Object Maintenance Scheme".FIELDNAME("Maintenance Scheme"),'Code10','');
        InsertColumnLine(XmlPortID,'D',MainTableID,"Std. Object Maintenance Scheme".FIELDNAME(Subcontracting),'Integer','OneTrueTxt');
        InsertColumnLine(XmlPortID,'E',MainTableID,"Std. Object Maintenance Scheme".FIELDNAME("Base Inspection List Code"),'Code20','');
      END;
    END;

    PROCEDURE ClearFields@1100529900();
    BEGIN
      CLEAR("Std. Object Maintenance Scheme");
      StdObjCde := '';

      A := '';
      B := '';
      C := '';
      D := '';
      E := '';

      DInt := 0;
    END;

    PROCEDURE InitXMLport@1100529500(iUseOldStdObjNoBln@1100529501 : Boolean;iStdObjCommentCde@1100529500 : Code[20]);
    BEGIN
      UseOldStdObjNoBln := iUseOldStdObjNoBln;
      StdObjCommentCde := iStdObjCommentCde;
    END;

    BEGIN
    {
      // Old No.'s are stored in Comment Table (97), marked with [CommentCde].
      // Object No is stored in [XmlPortID]. In case of customisation (copy of dataport) change in OnInitDataport;
      //
      // Please use [AddConversionFileFormatLine] in case Import file format is changed.
    }
    END.
  }
}

