OBJECT Page 11072028 Base Calendar Entries Subform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00,4PS14.00 (7604),4PSSE;
  }
  PROPERTIES
  {
    Editable=Yes;
    CaptionML=[ENU=Lines;
               NOR=Rader;
               SVE=Rader];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table2000000007;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 RESET;
                 // SETFILTER("Period Start",'>=%1',00000101D);
                 SETFILTER("Period Start",'>=%1',19000101D);
               END;

    OnFindRecord=BEGIN
                   EXIT(PeriodFormMgt.FindDate(Which,Rec,PeriodType));
                 END;

    OnNextRecord=BEGIN
                   EXIT(PeriodFormMgt.NextDate(Steps,Rec,PeriodType));
                 END;

    OnAfterGetRecord=BEGIN
                       Nonworking := CalendarMgmt.CheckDateStatus(CurrentCalendarCode,"Period Start",Description);
                       WeekNo := DATE2DWY("Period Start",2);
                       AbsenceCode := CheckAbsenceCode(CurrentCalendarCode,"Period Start");  //**4PS.n
                       CurrentCalendarCodeOnFormat;
                       PeriodStartOnFormat;
                       PeriodNameOnFormat;
                       DescriptionOnFormat;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 8   ;2   ;Field     ;
                Name=CurrentCalendarCode;
                CaptionML=[ENU=Base Calendar Code;
                           NOR=Hovedkalenderkode;
                           SVE=Baskalenderkod];
                ToolTipML=ENU=Specifies which base calendar was used as the basis.;
                ApplicationArea=#Suite;
                SourceExpr=CurrentCalendarCode;
                Visible=FALSE;
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Date;
                           NOR=Dato;
                           SVE=Datum];
                ToolTipML=ENU=Specifies the date.;
                ApplicationArea=#Suite;
                SourceExpr="Period Start";
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                CaptionML=[ENU=Day;
                           NOR=Dag;
                           SVE=Dag];
                ToolTipML=ENU=Specifies the day of the week.;
                ApplicationArea=#Suite;
                SourceExpr="Period Name";
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                CaptionML=[ENU=Week No.;
                           NOR=Ukenr;
                           SVE=Veckonr];
                ToolTipML=ENU=Specifies the week number for the calendar entries.;
                ApplicationArea=#Suite;
                SourceExpr=WeekNo;
                Visible=FALSE;
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Nonworking;
                           NOR=Ikke arbeidsdag;
                           SVE=Ej arbetsdag];
                ToolTipML=[ENU=Specifies the date entry as a nonworking day. You can also remove the check mark to return the status to working day.;
                           NOR=Angir at datoen er en fridag. Hvis du vil g† tilbakestille til statusen Virkedag, fjerner du merket.;
                           SVE=Anger att datumet „r en arbetsfri dag. Du kan „ven ta bort markeringen om du vill „ndra tillbaka statusen till arbetsdag.];
                ApplicationArea=#Suite;
                SourceExpr=Nonworking;
                Editable=TRUE;
                OnValidate=BEGIN
                             UpdateBaseCalendarChanges;
                           END;
                            }

    { 4   ;2   ;Field     ;
                Name=Description;
                CaptionML=[ENU=Description;
                           NOR=Beskrivelse;
                           SVE=Beskrivning];
                ToolTipML=ENU=Specifies the description of the entry to be applied.;
                ApplicationArea=#Suite;
                SourceExpr=Description;
                OnValidate=BEGIN
                             UpdateBaseCalendarChanges;
                           END;
                            }

    { 1210190000;2;Field  ;
                CaptionML=[ENU=Cause of Absence Code;
                           NOR=Kode frav‘rs†rsak;
                           SVE=Kod f”r Orsak till fr†nvaro];
                SourceExpr=AbsenceCode;
                OnValidate=BEGIN
                             //**4PS
                             IF AbsenceCode <> '' THEN
                               AbsenceRec.GET(AbsenceCode);
                             UpdateBaseCalendarChanges;
                           END;

                OnLookup=BEGIN
                           //**4PS
                           AbsenceRec.Code := AbsenceCode;
                           IF PAGE.RUNMODAL(0, AbsenceRec) = ACTION::LookupOK THEN BEGIN
                             AbsenceCode := AbsenceRec.Code;
                             UpdateBaseCalendarChanges;
                           END;
                         END;
                          }

  }
  CODE
  {
    VAR
      BaseCalendarChange@1005 : Record 11072015;
      PeriodFormMgt@1006 : Codeunit 359;
      CalendarMgmt@1004 : Codeunit 7600;
      PeriodType@1009 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      Nonworking@1001 : Boolean;
      WeekNo@1007 : Integer;
      Description@1002 : Text[30];
      CurrentCalendarCode@1000 : Code[10];
      AbsenceCode@1210190005 : Code[10];
      AbsenceRec@1210190001 : Record 5206;

    [External]
    PROCEDURE SetCalendarCode@1(CalendarCode@1000 : Code[10]);
    BEGIN
      CurrentCalendarCode := CalendarCode;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE UpdateBaseCalendarChanges@2();
    BEGIN
      BaseCalendarChange.RESET;
      BaseCalendarChange.SETRANGE("Base Calendar Code",CurrentCalendarCode);
      BaseCalendarChange.SETRANGE(Date,"Period Start");
      IF BaseCalendarChange.FINDFIRST THEN
        BaseCalendarChange.DELETE;
      BaseCalendarChange.INIT;
      CLEAR(BaseCalendarChange); //**4PS.n  clears recurring system call C000384
      BaseCalendarChange."Base Calendar Code" := CurrentCalendarCode;
      BaseCalendarChange.Date := "Period Start";
      BaseCalendarChange.Description := Description;
      BaseCalendarChange.Nonworking := Nonworking;
      BaseCalendarChange.Day := "Period No.";
      BaseCalendarChange."Cause of Absence Code" := AbsenceCode;  //**4PS.n
      BaseCalendarChange.INSERT;

      BaseCalendarChange.CheckAbsenceEmployee;  //**4PS.n db, 14-06-05 function moved to table
    END;

    LOCAL PROCEDURE CurrentCalendarCodeOnFormat@19017924();
    BEGIN
      IF Nonworking THEN;
    END;

    LOCAL PROCEDURE PeriodStartOnFormat@19061537();
    BEGIN
      IF Nonworking THEN;
    END;

    LOCAL PROCEDURE PeriodNameOnFormat@19063590();
    BEGIN
      IF Nonworking THEN;
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      IF Nonworking THEN;
    END;

    PROCEDURE CheckAbsenceCode@5(CalendarCode@1000 : Code[10];TargetDate@1210190004 : Date) : Code[10];
    BEGIN
      //**4PS: copy of function checkdatestatus (codeunit 7600);
      BaseCalendarChange.RESET;
      BaseCalendarChange.SETRANGE("Base Calendar Code",CalendarCode);
      IF BaseCalendarChange.FIND('-') THEN
      REPEAT
        CASE BaseCalendarChange."Recurring System" OF
          BaseCalendarChange."Recurring System"::" ":
            IF TargetDate = BaseCalendarChange.Date THEN
              EXIT( BaseCalendarChange."Cause of Absence Code" );
          BaseCalendarChange."Recurring System"::"Weekly Recurring":
            IF DATE2DWY(TargetDate,1) = BaseCalendarChange.Day THEN
              EXIT( BaseCalendarChange."Cause of Absence Code" );
          BaseCalendarChange."Recurring System"::"Annual Recurring":
            IF (DATE2DMY(TargetDate,2) = DATE2DMY(BaseCalendarChange.Date,2)) AND
               (DATE2DMY(TargetDate,1) = DATE2DMY(BaseCalendarChange.Date,1)) THEN
              EXIT( BaseCalendarChange."Cause of Absence Code");
        END;
      UNTIL BaseCalendarChange.NEXT=0;

      EXIT('');
    END;

    BEGIN
    END.
  }
}

