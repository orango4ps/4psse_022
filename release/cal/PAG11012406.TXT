OBJECT Page 11012406 Word Document
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Word Document;
               NOR=Word-dokument;
               SVE=Word-dokument];
    SourceTable=Table11012746;
    PopulateAllFields=Yes;
    SourceTableView=WHERE(External Document=CONST(No));
    PageType=ListPlus;
    TimerUpdate=1;
    OnInit=BEGIN
             StatusEditable := TRUE;
             "SharePoint PhaseEditable" := TRUE;
             "Handled ByEditable" := TRUE;
             "Final PrintedEditable" := TRUE;
             ConfidentialEditable := TRUE;
             SenderEditable := TRUE;
             EditorEditable := TRUE;
             "Archive LocationEditable" := TRUE;
             "Mobile Phone No.Editable" := TRUE;
             "Phone No. 2Editable" := TRUE;
             "Phone No.Editable" := TRUE;
             "Fax No.Editable" := TRUE;
             "Intended for 2Editable" := TRUE;
             "Intended ForEditable" := TRUE;
             "Salutation (Informal)Editable" := TRUE;
             "Salutation (Formal)Editable" := TRUE;
             ReferenceEditable := TRUE;
             "Document CategoryEditable" := TRUE;
             "Document TypeEditable" := TRUE;
             "Contact Person Name 2Editable" := TRUE;
             "Contact Person NameEditable" := TRUE;
             "Contact Name 2Editable" := TRUE;
             "Contact NameEditable" := TRUE;
             "No.Editable" := TRUE;
             "Document TemplateEditable" := TRUE;
             "Document GroupEditable" := TRUE;
             "Country/Region CodeEditable" := TRUE;
             CountyEditable := TRUE;
             CityEditable := TRUE;
             "Post CodeEditable" := TRUE;
             "Address 2Editable" := TRUE;
             AddressEditable := TRUE;
             DescriptionEditable := TRUE;
             SubjectEditable := TRUE;
             "Contact Person No.Editable" := TRUE;
             "Contact No.Editable" := TRUE;
             "Document No.Editable" := TRUE;
             "Internal CompanyEditable" := TRUE;
           END;

    OnOpenPage=VAR
                 Contact@1100409000 : Record 5050;
               BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 IF EVALUATE(ShowingResultDocumentFilter, GETFILTER("Showing Result Document Filter")) THEN;

                 DocumentMgtSetup.GET;
                 IF NOT ShowingResultDocumentFilter THEN BEGIN
                   IF DocumentMgtSetup."Show Only Own Documents" THEN BEGIN
                     FILTERGROUP(2);
                     SETRANGE("Internal Company",COMPANYNAME);
                     FILTERGROUP(0);
                     "Internal CompanyEditable" := FALSE;
                   END;
                 END ELSE
                   "Internal CompanyEditable" := FALSE;

                 IF Contact.GET(GETFILTER("Contact No.")) THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Contact No.", Contact."No.");
                   FILTERGROUP(0);
                 END;
                 IF Contact.GET(GETFILTER("Contact Person No.")) THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Contact Person No.", Contact."No.");
                   FILTERGROUP(0);
                 END;
                 FILTERGROUP(2);
                 IF GETFILTER("RID Filter") <> '''''' THEN
                   IF EVALUATE(RID, GETFILTER("RID Filter")) THEN;
                 IF GETFILTER("Department Code Filter") <> '''''' THEN
                   DepartmentCode := GETFILTER("Department Code Filter");
                 FILTERGROUP(0);

                 IF NOT UserSetup.GET(USERID) THEN UserSetup.INIT;
               END;

    OnAfterGetRecord=BEGIN
                       // Check if Default Document Links are coupled with a record in the database.
                       IF xRec."No." <> '' THEN BEGIN
                         IF "No." <> xRec."No." THEN BEGIN
                           CheckDefaultDocumentLink(xRec, TRUE);
                         END;
                       END;
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=VAR
                  DocumentManagement@1100528401 : Codeunit 11012406;
                BEGIN
                  IF (FORMAT(RID) <> '') AND (DepartmentCode <> '') THEN
                    "Department Code" := DepartmentCode;

                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02

                  "Storage Type" := DocumentManagement.GetMainStorageType;
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=VAR
                     lContactRec@1210190002 : Record 5050;
                     lContact@1210190001 : Code[100];
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     MARKEDONLY(FALSE); // Doc Mgt
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05

                     lContact := DELCHR(GETFILTER("Contact No."),'<>');

                     IF STRLEN(lContact) > 20 THEN
                       lContact := COPYSTR(lContact,1,20);

                     IF lContact <> '' THEN
                       IF lContactRec.GET(lContact) THEN
                         VALIDATE("Contact No.", lContact)
                       ELSE
                         ERROR(Text005);

                     CopyPostAddress();

                     lContact := DELCHR(GETFILTER("Contact Person No."),'<>');

                     IF STRLEN(lContact) > 20 THEN
                       lContact := COPYSTR(lContact,1,20);

                     IF lContact <> '' THEN
                       IF lContactRec.GET(lContact) THEN
                         VALIDATE("Contact Person No.", lContact)
                       ELSE
                         ERROR(Text005);
                   END;

    OnQueryClosePage=BEGIN
                       EXIT(CheckDefaultDocumentLink(Rec, FALSE)); // Doc Mgt
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190050;1 ;ActionGroup;
                      CaptionML=[ENU=Document Properties;
                                 NOR=Dokumentegenskaper;
                                 SVE=Dokumentegenskaper] }
      { 1210190053;2 ;Action    ;
                      CaptionML=[ENU=Document Relations;
                                 NOR=Dokumentrelasjoner;
                                 SVE=Dokumentrelationer];
                      Image=Relationship;
                      OnAction=VAR
                                 DocRelFrm@1210190001 : Page 11012413;
                                 DocRelRec@1210190000 : Record 11012407;
                                 DocumentLinkMgt@1199198001 : Codeunit 11012401;
                                 ProjectNo@1199198002 : Code[20];
                               BEGIN
                                 DocRelRec.SETRANGE("Document Type", DocRelRec."Document Type"::Document);
                                 DocRelRec.SETRANGE("No.", "No.");
                                 DocRelFrm.SETTABLEVIEW(DocRelRec);

                                 ProjectNo := DocumentLinkMgt.GetProjectNo("No.");
                                 IF ProjectNo <> '' THEN
                                   DocRelFrm.SetProjFilter(ProjectNo);

                                 DocRelFrm.RUNMODAL;
                               END;
                                }
      { 1100485052;2 ;Action    ;
                      CaptionML=[ENU=Previous Versions;
                                 NOR=Tidligere versjoner;
                                 SVE=F”reg†ende versioner];
                      Image=ListPage;
                      OnAction=VAR
                                 DocumentList@1100485001 : Page 11012407;
                                 lRecDocumentProperties@1100485000 : Record 11012746;
                                 DocumentLink@1199198001 : Record 11012747;
                                 RID@1199198002 : RecordID;
                               BEGIN
                                 lRecDocumentProperties.SETRANGE("Document Group", "Document Group");
                                 lRecDocumentProperties.SETRANGE("Document Template", "Document Template");
                                 lRecDocumentProperties.SETRANGE("Contact No.", "Contact No.");
                                 lRecDocumentProperties.SETRANGE("Internal Company", COMPANYNAME);
                                 lRecDocumentProperties.SETRANGE("Doc. Action", "Doc. Action");

                                 DocumentLink.SETRANGE("Document No.", "No.");
                                 DocumentLink.SETRANGE(Source, TRUE);
                                 DocumentLink.SETRANGE("Internal Company", "Internal Company");
                                 IF DocumentLink.FINDFIRST THEN BEGIN
                                   RID := DocumentLink."Record ID";

                                   DocumentLink.RESET;
                                   DocumentLink.SETCURRENTKEY("Record ID"); //mg, 05-07-11: M27801
                                   DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', RID));
                                   DocumentLink.SETRANGE("Internal Company", "Internal Company");
                                   DocumentLink.SETRANGE(Source, TRUE);
                                   IF DocumentLink.FINDSET THEN BEGIN
                                     REPEAT
                                       IF lRecDocumentProperties.GET(DocumentLink."Document No.") THEN
                                         lRecDocumentProperties.MARK(TRUE);
                                     UNTIL DocumentLink.NEXT = 0;
                                   END;
                                 END;

                                 lRecDocumentProperties.MARKEDONLY(TRUE);

                                 DocumentList.SETTABLEVIEW(lRecDocumentProperties);
                                 DocumentList.SETRECORD(lRecDocumentProperties);
                                 DocumentList.RUNMODAL;

                                 lRecDocumentProperties.CLEARMARKS;
                               END;
                                }
      { 1100528302;1 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 NOR=Ko&mmentarer;
                                 SVE=Ko&mmentarer];
                      Image=ViewComments;
                      OnAction=BEGIN
                                 OpenCommentSheet;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 63      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 NOR=Fu&nksjon;
                                 SVE=F&unktioner] }
      { 1000000001;2 ;Action    ;
                      CaptionML=[ENU=Create;
                                 NOR=Opprett;
                                 SVE=Skapa];
                      Promoted=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //**4PS01.sn
                                 CheckConfidentialRights();

                                 IF "Final Printed" THEN
                                   ERROR(Text014, FIELDCAPTION("Final Printed"));

                                 //**4PS01.en

                                 CreateDocument(FALSE);
                               END;
                                }
      { 1210190013;2 ;Action    ;
                      CaptionML=[ENU=C&reate and Edit;
                                 NOR=O&pprett og Rediger;
                                 SVE=S&kapa och redigera];
                      Promoted=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //**4PS01.sn
                                 CheckConfidentialRights();

                                 IF "Final Printed" THEN
                                   ERROR(Text014, FIELDCAPTION("Final Printed"));

                                 //**4PS01.sn
                                 CreateDocument(TRUE);

                                 IF FIND('=') THEN;

                                 SLEEP(10000);

                                 IF "D3 Document ID" = '' THEN //D3 Doc already opened in creating process
                                   EditDocument;
                               END;
                                }
      { 65      ;2   ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Edit;
                                 NOR=Rediger;
                                 SVE=Redigera];
                      Promoted=Yes;
                      Image=DocumentEdit;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CheckConfidentialRights();
                                 EditDocument;
                               END;
                                }
      { 1100527802;2 ;Action    ;
                      ShortCutKey=Return;
                      CaptionML=ENU=Open;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Document;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //**4PS01.sn
                                 IF NOT IsConfidentialOwner() THEN
                                   TESTFIELD(Confidential, FALSE);
                                 //**4PS01.en
                                 OpenDocument;
                               END;
                                }
      { 1100527801;2 ;Action    ;
                      CaptionML=ENU=Back to Storage;
                      Promoted=Yes;
                      Enabled=BacktoStorageEnabled;
                      PromotedIsBig=Yes;
                      Image=Restore;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MoveDocumentToMainStorage();
                               END;
                                }
      { 1210190020;2 ;Action    ;
                      CaptionML=[ENU=C&opy;
                                 NOR=K&opier;
                                 SVE=K&opiera];
                      Image=Copy;
                      OnAction=VAR
                                 DocumentTemplate@1199198001 : Record 11012401;
                               BEGIN
                                 IF NOT TypeIsMisc() THEN BEGIN
                                   DocumentTemplate.Type := DocumentTemplate.Type::Miscellaneous;
                                   ERROR(Text013, DocumentTemplate.FIELDCAPTION(Type),
                                                  FORMAT(DocumentTemplate.Type),
                                                  DocumentTemplate.TABLECAPTION);
                                 END;

                                 IF (UserSetup."Employee No." <> Editor) AND
                                    (UserSetup."Employee No." <> Sender) THEN
                                   TESTFIELD(Confidential, FALSE);

                                 IF NOT CONFIRM(Text010, TRUE, "No.") THEN
                                   EXIT;

                                 DocumentManagement.CopyDocument(Rec, TRUE, FALSE);
                               END;
                                }
      { 1100525004;2 ;Action    ;
                      CaptionML=[ENU=Select Address;
                                 NOR=Velg adresse;
                                 SVE=V„lj adress];
                      Image=IndustryGroups;
                      OnAction=BEGIN
                                 CopyAddress();
                               END;
                                }
      { 1210190017;1 ;ActionGroup;
                      CaptionML=[ENU=Pr&int;
                                 NOR=Sk&riv ut;
                                 SVE=Sk&riv ut] }
      { 1210190027;2 ;Action    ;
                      CaptionML=[ENU=Print;
                                 NOR=Skriv ut;
                                 SVE=Skriv ut];
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 //**4PS01.sn
                                 CheckConfidentialRights();
                                 //**4PS01.sn

                                 IF (File <> '') OR
                                    ("Document Service URL" <>'')
                                 THEN BEGIN
                                   PrintDocument;
                                 END;
                               END;
                                }
      { 1210190028;2 ;Action    ;
                      CaptionML=[ENU=Print &Final;
                                 NOR=Skriv ut &resultat;
                                 SVE=Skriv ut &resultat];
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 lPrinterRec@1100485002 : Record 2000000039;
                                 lCduWord@11012001 : Codeunit 11012400;
                                 lPrinterSelection@1100485001 : Page 356;
                                 FilePath@1100525002 : Text[1024];
                                 FileManagement@1100528700 : Codeunit 419;
                               BEGIN
                                 FileManagement.TestIsWindowsClient;
                                 //**4PS01.sn
                                 CheckConfidentialRights();
                                 IF "Final Printed" THEN
                                   EXIT;
                                 //**4PS01.sn

                                 IF (HasStorageURI) THEN BEGIN
                                   lPrinterSelection.LOOKUPMODE(TRUE);
                                   IF lPrinterSelection.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                     lPrinterSelection.GETRECORD(lPrinterRec);
                                     WriteContentToClient(FilePath);
                                     lCduWord.InitialiseForPrinting;
                                 //    lPrinterRec.ID := 'DELL3115cn on SRV001 (from SR01517) in session 17'; testje simulatie citrix omgeving
                                     lCduWord.PrintToSelectedPrinter(lPrinterRec.ID, FilePath);
                                     lCduWord.TerminateAfterPrinting;
                                     VALIDATE("Final Printed", TRUE);
                                     "Final Printed Date" := TODAY;
                                     FileManagement.DeleteClientFile(FilePath);
                                     MODIFY;
                                   END;
                                 END;
                               END;
                                }
      { 1210190029;2 ;Action    ;
                      CaptionML=[ENU=Word Document Reports;
                                 NOR=Word-dokumentrapporter;
                                 SVE=Word-dokumentrapporter];
                      Image=Report;
                      OnAction=VAR
                                 PrintDoc@1210190000 : Codeunit 229;
                               BEGIN
                                 PrintDoc.PrintDocW(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generell;
                           SVE=Allm„nt] }

    { 1210190003;2;Field  ;
                SourceExpr="No.";
                Editable="No.Editable";
                OnValidate=BEGIN
                             NoOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1210190023;2;Field  ;
                SourceExpr=Description;
                Editable=DescriptionEditable }

    { 10  ;2   ;Field     ;
                SourceExpr="Contact No.";
                Importance=Promoted;
                Editable="Contact No.Editable" }

    { 23  ;2   ;Field     ;
                SourceExpr="Contact Name";
                Importance=Promoted;
                Editable="Contact NameEditable" }

    { 1210190002;2;Field  ;
                SourceExpr="Contact Name 2";
                Importance=Additional;
                Editable="Contact Name 2Editable" }

    { 15  ;2   ;Field     ;
                SourceExpr="Contact Person No.";
                Editable="Contact Person No.Editable" }

    { 24  ;2   ;Field     ;
                SourceExpr="Contact Person Name";
                Editable="Contact Person NameEditable" }

    { 1210190004;2;Field  ;
                SourceExpr="Contact Person Name 2";
                Importance=Additional;
                Editable="Contact Person Name 2Editable" }

    { 32  ;2   ;Field     ;
                SourceExpr="Document Group";
                Editable="Document GroupEditable";
                OnValidate=BEGIN
                             DocumentGroupOnAfterValidate;
                           END;
                            }

    { 34  ;2   ;Field     ;
                SourceExpr="Description Document Group";
                Importance=Additional;
                Editable=FALSE }

    { 3   ;2   ;Field     ;
                SourceExpr="Document Template";
                Importance=Promoted;
                Editable="Document TemplateEditable";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE); // update default document links in subform
                           END;

                OnLookup=BEGIN
                           LookupDocumentTemplate("Document TemplateEditable");

                           CurrPage.UPDATE(TRUE); // update default document links in subform
                         END;
                          }

    { 35  ;2   ;Field     ;
                SourceExpr="Description Document Template";
                Importance=Additional;
                Editable=FALSE }

    { 1100525006;2;Field  ;
                AccessByPermission=Codeunit 11012203=X;
                SourceExpr="Project Portal Subsite";
                Visible=false }

    { 1100528301;2;Field  ;
                AccessByPermission=Codeunit 11012203=X;
                SourceExpr="Project Portal Subsite Descr";
                Importance=Additional;
                Visible=false }

    { 1100528304;2;Field  ;
                AccessByPermission=Codeunit 11012451=X;
                SourceExpr="Document Portal Subsite" }

    { 1210190006;2;Field  ;
                SourceExpr="Document Type";
                Editable="Document TypeEditable";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE); // update default document links in subform
                           END;
                            }

    { 1210190010;2;Field  ;
                SourceExpr="Document Type Description";
                Importance=Additional;
                Editable=FALSE }

    { 1100528300;2;Field  ;
                AccessByPermission=Codeunit 11012203=X;
                SourceExpr="Private Company Document";
                Visible=false }

    { 1100528306;2;Field  ;
                AccessByPermission=Codeunit 11012451=X;
                SourceExpr="Document Portal Private Doc" }

    { 1100527800;2;Field  ;
                SourceExpr="Storage Type" }

    { 1100485048;2;Field  ;
                SourceExpr="Document Category";
                Editable="Document CategoryEditable" }

    { 1100485049;2;Field  ;
                SourceExpr="Document Category Description";
                Importance=Additional;
                Editable=FALSE }

    { 1100525008;2;Field  ;
                SourceExpr="Project Element" }

    { 1100525007;2;Field  ;
                SourceExpr="Project Element Description";
                Importance=Additional }

    { 26  ;2   ;Field     ;
                SourceExpr=Sender;
                Editable=SenderEditable;
                OnValidate=BEGIN
                             SenderOnAfterValidate;
                           END;
                            }

    { 36  ;2   ;Field     ;
                Name=NameSender;
                SourceExpr="Name Sender";
                Importance=Additional }

    { 28  ;2   ;Field     ;
                SourceExpr=Editor;
                Editable=EditorEditable;
                OnValidate=BEGIN
                             EditorOnAfterValidate;
                           END;
                            }

    { 37  ;2   ;Field     ;
                Name=NameEditor;
                SourceExpr="Name Editor";
                Importance=Additional }

    { 1100485007;2;Field  ;
                SourceExpr="Handled By";
                Editable="Handled ByEditable";
                OnValidate=BEGIN
                             HandledByOnAfterValidate;
                           END;
                            }

    { 1100485009;2;Field  ;
                SourceExpr="Name Handled By";
                Importance=Additional }

    { 11012005;2;Field    ;
                SourceExpr=Reference;
                Editable=ReferenceEditable }

    { 17  ;2   ;Field     ;
                CaptionML=[ENU=Subject;
                           NOR=Emne;
                           SVE=Ang†ende];
                SourceExpr=Subject;
                Editable=SubjectEditable }

    { 21  ;2   ;Field     ;
                SourceExpr="Internal Company";
                Editable="Internal CompanyEditable" }

    { 1100525001;1;Part   ;
                Name=DocumentLink;
                SubPageView=SORTING(Document No.,Seq. No.);
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page11072478 }

    { 1903073101;1;Group  ;
                CaptionML=[ENU=Address;
                           NOR=Adresse;
                           SVE=Adress] }

    { 1210190076;2;Field  ;
                SourceExpr="Salutation (Formal)";
                Editable="Salutation (Formal)Editable" }

    { 1210190079;2;Field  ;
                SourceExpr="Salutation (Informal)";
                Editable="Salutation (Informal)Editable" }

    { 1210190078;2;Field  ;
                SourceExpr="Intended For";
                Editable="Intended ForEditable" }

    { 1210190011;2;Field  ;
                SourceExpr="Intended for 2";
                Importance=Additional;
                Editable="Intended for 2Editable" }

    { 1210190069;2;Field  ;
                SourceExpr=Address;
                Importance=Promoted;
                Editable=AddressEditable }

    { 1210190070;2;Field  ;
                SourceExpr="Address 2";
                Importance=Additional;
                Editable="Address 2Editable" }

    { 1210190071;2;Field  ;
                SourceExpr="Post Code";
                Importance=Promoted;
                Editable="Post CodeEditable" }

    { 1210190072;2;Field  ;
                SourceExpr=City;
                Importance=Promoted;
                Editable=CityEditable }

    { 1210190073;2;Field  ;
                SourceExpr=County;
                Editable=CountyEditable }

    { 1210190074;2;Field  ;
                SourceExpr="Country/Region Code";
                Editable="Country/Region CodeEditable" }

    { 1210190083;2;Field  ;
                SourceExpr="Fax No.";
                Editable="Fax No.Editable" }

    { 1210190084;2;Field  ;
                SourceExpr="Phone No.";
                Editable="Phone No.Editable" }

    { 1210190085;2;Field  ;
                SourceExpr="Phone No. 2";
                Importance=Additional;
                Editable="Phone No. 2Editable" }

    { 1210190086;2;Field  ;
                SourceExpr="Mobile Phone No.";
                Editable="Mobile Phone No.Editable" }

    { 1902597601;1;Group  ;
                CaptionML=[ENU=Document;
                           NOR=Dokument;
                           SVE=Dokument] }

    { 1210190043;2;Field  ;
                SourceExpr=File;
                Editable=FALSE }

    { 1100525009;2;Field  ;
                SourceExpr="Web link";
                Editable=false }

    { 1100528702;2;Field  ;
                SourceExpr="Document Service URL" }

    { 1210190000;2;Field  ;
                SourceExpr="Department Code" }

    { 1199198000;2;Field  ;
                SourceExpr="Document No.";
                Editable="Document No.Editable" }

    { 1210190054;2;Field  ;
                SourceExpr=Status;
                Importance=Promoted;
                Editable=StatusEditable }

    { 1210190045;2;Field  ;
                SourceExpr="Final Printed";
                Editable="Final PrintedEditable";
                OnValidate=BEGIN
                             IF "Final Printed" THEN
                               "Final Printed Date" := TODAY
                             ELSE
                               "Final Printed Date" := 0D;

                             FinalPrintedOnAfterValidate;
                           END;
                            }

    { 1210190046;2;Field  ;
                SourceExpr="Final Printed Date";
                Editable=FALSE }

    { 1210190044;2;Field  ;
                SourceExpr="User ID";
                Editable=FALSE }

    { 1210190048;2;Field  ;
                SourceExpr="Creation Date";
                Editable=FALSE }

    { 1210190057;2;Field  ;
                SourceExpr="Creation Time";
                Editable=FALSE }

    { 1100485044;2;Field  ;
                SourceExpr=Modified;
                Editable=FALSE }

    { 1100485046;2;Field  ;
                SourceExpr="Modified By";
                Editable=FALSE }

    { 1210190075;2;Field  ;
                SourceExpr="E-Mail Sent On";
                Importance=Additional }

    { 1210190088;2;Field  ;
                SourceExpr="E-Mail Sent By";
                Importance=Additional }

    { 1210190090;2;Field  ;
                SourceExpr="E-Mail Sent To";
                Importance=Additional }

    { 1210190055;2;Field  ;
                SourceExpr=Confidential;
                Importance=Additional;
                Editable=ConfidentialEditable;
                OnValidate=BEGIN
                             ConfidentialOnAfterValidate;
                           END;
                            }

    { 1210190008;2;Field  ;
                SourceExpr=Secure;
                Importance=Additional;
                Editable=SecureEditable }

    { 1100528305;2;Field  ;
                SourceExpr="Show in Control" }

    { 1100528100;2;Field  ;
                SourceExpr="Publish on Service Portal";
                Importance=Additional }

    { 1100409000;2;Field  ;
                SourceExpr="Publish on Subcont.Portal" }

    { 1100409001;2;Field  ;
                SourceExpr="Available for Field Service" }

    { 1100485014;2;Field  ;
                SourceExpr="SharePoint Phase";
                Importance=Additional;
                Editable="SharePoint PhaseEditable" }

    { 1100485040;2;Field  ;
                SourceExpr="Archive Location";
                Importance=Additional;
                Editable="Archive LocationEditable" }

    { 1100528303;2;Field  ;
                AccessByPermission=Codeunit 11012203=X;
                SourceExpr="Project Portal Publish Date" }

  }
  CODE
  {
    VAR
      Text001@11012002 : TextConst 'ENU=Do you want to update the existing Word Document %1? (Press No to keep the current document);NOR=Vil du oppdatere det eksisterende Word-dokumentet %1? (Velg Nei for † beholde eksisterendet dokument);SVE=Vill du uppdatera det befintliga Word-dokumentet %1? (V„lj Nej f”r att beh†lla befintligt dokument)';
      Text002@11012003 : TextConst 'ENU=Only Documents with %1 %2 Miscellaneous can be created here.';
      DocumentMgtSetup@11012007 : Record 11071831;
      UserSetup@1210190005 : Record 91;
      Text003@11012008 : TextConst 'ENU=Job Number not filled for Document Number %1;NOR=Jobbnummeret er ikke fylt ut for Dokumentnummer %1;SVE=Jobbnumret har inte fyllts i f”r dokumentnummer %1';
      DocumentManagement@1210190002 : Codeunit 11012406;
      Text005@1210190006 : TextConst 'ENU=Filter om Contact No. Must be removed before insert.;NOR=Filter for kontaktnr m† tas bort f›r innsetting.;SVE=Filter f”r kontaktnr m†ste tas bort f”re infogning.';
      Text007@1210190008 : TextConst 'ENU=Job Number not filled for Document Number %1. Continue ?;NOR=Jobbnummeret er ikke fylt ut for Dokumentnummer %1. Vil du fortsette?;SVE=Jobnumret har inte fyllts i f”r dokumentnummer %1. Vill du forts„tta?';
      WordAutomation@1100485001 : Codeunit 11012400;
      Text010@1100485000 : TextConst 'ENU=Do you want to copy Document %1?;NOR=Vil du kopiere dokument %1?;SVE=Vill du kopiera dokument %1?';
      DPA_IsHardFilter@1100000999 : Boolean;
      Text011@1100525005 : TextConst 'ENU=New version based on the previous version and update the bookmarks,New version based on the document template (%1),Update the bookmarks in the current version;NOR=Den nye versjonen baseres p† den forrige versjonen og oppdaterer bokmerkene,Ny versjon basert p† dokumentmalen (%1),Oppdater bokmerkene i den n†v‘rende versjonen;SVE=Den nya versionen baseras p† den f”reg†ende versionen och uppdaterar bokm„rkena,Den nya versionen baseras p† dokumentmallen (%1),Uppdatera bokm„rkena i aktuell version';
      Text013@1199198004 : TextConst 'ENU=%1 must be %2 in %3!;NOR=%1 m† v‘re %2 i %3!;SVE=%1 m†ste vara %2 i %3!';
      Text014@1199198005 : TextConst 'ENU=Can not create Word Document when document is "%1"!;NOR=Kan ikke opprette Word-dokument n†r dokumentet er "%1"!;SVE=Det g†r inte att skapa Word-dokument n„r dokumentet „r "%1"!';
      Text015@1199197400 : TextConst 'ENU=This document is %1.;NOR=Dette Dokumentet er %1.;SVE=Det h„r dokumentet „r %1.';
      Text016@1100525006 : TextConst 'ENU=Select how to create a Word Document.;NOR=Velg hvordan Word-dokumentet skal opprettes.;SVE=V„lj hur Word-dokumentet ska skapas.';
      RID@1100528702 : RecordID;
      DepartmentCode@1100528700 : Code[20];
      "Internal CompanyEditable"@19016623 : Boolean INDATASET;
      "Document No.Editable"@19064841 : Boolean INDATASET;
      "Contact No.Editable"@19030566 : Boolean INDATASET;
      "Contact Person No.Editable"@19005505 : Boolean INDATASET;
      SubjectEditable@19033439 : Boolean INDATASET;
      DescriptionEditable@19061412 : Boolean INDATASET;
      AddressEditable@19025954 : Boolean INDATASET;
      "Address 2Editable"@19054460 : Boolean INDATASET;
      "Post CodeEditable"@19041336 : Boolean INDATASET;
      CityEditable@19066647 : Boolean INDATASET;
      CountyEditable@19055389 : Boolean INDATASET;
      "Country/Region CodeEditable"@19033023 : Boolean INDATASET;
      "Document GroupEditable"@19050152 : Boolean INDATASET;
      "Document TemplateEditable"@19012798 : Boolean INDATASET;
      "No.Editable"@19005397 : Boolean INDATASET;
      "Contact NameEditable"@19044726 : Boolean INDATASET;
      "Contact Name 2Editable"@19055915 : Boolean INDATASET;
      "Contact Person NameEditable"@19060320 : Boolean INDATASET;
      "Contact Person Name 2Editable"@19049223 : Boolean INDATASET;
      "Document TypeEditable"@19007804 : Boolean INDATASET;
      "Document CategoryEditable"@19024261 : Boolean INDATASET;
      ReferenceEditable@19020273 : Boolean INDATASET;
      "Salutation (Formal)Editable"@19072479 : Boolean INDATASET;
      "Salutation (Informal)Editable"@19054194 : Boolean INDATASET;
      "Intended ForEditable"@19069124 : Boolean INDATASET;
      "Intended for 2Editable"@19020607 : Boolean INDATASET;
      "Fax No.Editable"@19043622 : Boolean INDATASET;
      "Phone No.Editable"@19012872 : Boolean INDATASET;
      "Phone No. 2Editable"@19065587 : Boolean INDATASET;
      "Mobile Phone No.Editable"@19054400 : Boolean INDATASET;
      "Archive LocationEditable"@19002479 : Boolean INDATASET;
      EditorEditable@19019685 : Boolean INDATASET;
      SenderEditable@19042414 : Boolean INDATASET;
      ConfidentialEditable@19013874 : Boolean INDATASET;
      "Final PrintedEditable"@19066743 : Boolean INDATASET;
      "Handled ByEditable"@19025706 : Boolean INDATASET;
      "SharePoint PhaseEditable"@19017761 : Boolean INDATASET;
      StatusEditable@19074876 : Boolean INDATASET;
      SecureEditable@19010427 : Boolean INDATASET;
      ShowingResultDocumentFilter@1100528701 : Boolean;
      BacktoStorageEnabled@1100527800 : Boolean INDATASET;

    PROCEDURE CreateDocument@1210190001(lvEdit@1100525003 : Boolean);
    VAR
      DocTemplateRec@1100485002 : Record 11012401;
      DocumentLinkMgt@1199198001 : Codeunit 11012401;
      lvExtension@1100485000 : Text[30];
      UpdateDocument@1100525000 : Boolean;
      UpdateChoice@1100525002 : Integer;
      ChoiceText@1100525001 : Text[300];
      ArrRecID@1100527800 : ARRAY [5] OF RecordID;
    BEGIN
      TESTFIELD("Interaction Entry No.", 0);
      TESTFIELD("No.");
      TESTFIELD("Document Group");
      TESTFIELD("Document Template");
      TESTFIELD(Description);

      DocumentMgtSetup.GET;

      DocTemplateRec.GET("Document Group", "Document Template");
      IF DocTemplateRec.Type <> DocTemplateRec.Type::Miscellaneous THEN
        ERROR(Text002, DocTemplateRec.TABLECAPTION, DocTemplateRec.FIELDCAPTION(Type));

      UpdateDocument := FALSE;

      IF WordAutomation.FileExists(Rec) THEN BEGIN
        UpdateDocument := TRUE;
        IF DocumentMgtSetup."Version Mgt. Word Doc." THEN BEGIN
          ChoiceText := STRSUBSTNO(Text011, "Document Template");
          UpdateChoice := STRMENU(ChoiceText, 1, Text016);
          CASE UpdateChoice OF
            0://Cancel
              BEGIN
                EXIT;
              END;
            1://copydocument + update bookmarks
              BEGIN
                 //UpdateDocument is already TRUE;
                 DocumentManagement.CopyDocument(Rec, FALSE, TRUE);
              END;
            2://copy template + update bookmarks
              BEGIN
                DocumentManagement.CopyDocument(Rec, FALSE, TRUE);
                UpdateDocument := FALSE;
              END;
            3: //update bookmarks in current document
              BEGIN
                //UpdateDocument is already TRUE;
                CheckFileIsInUse;
              END;
          END;
        END ELSE BEGIN
          IF NOT CONFIRM(Text001, FALSE, File + lvExtension) THEN
            EXIT;
        END;
      END;

      IF DocumentLinkMgt.GetProjectNo("No.") = '' THEN BEGIN
        CASE DocTemplateRec."Project Mandatory" OF
          DocTemplateRec."Project Mandatory"::Mandatory:
            ERROR(Text003, "No.");
          DocTemplateRec."Project Mandatory"::Warning:
            IF NOT CONFIRM(Text007, FALSE, "No.") THEN
              EXIT;
        END;
      END;

      CLEAR(DocumentManagement);
      IF DocTemplateRec.GET("Document Group","Document Template") THEN BEGIN
        ArrRecID[1] := RECORDID;
        IF Secure THEN
          DocTemplateRec."Secured Document" := DocTemplateRec."Secured Document"::Always
        ELSE
          DocTemplateRec."Secured Document" := DocTemplateRec."Secured Document"::"Not";

        DocumentManagement.GenerateDocFromDocProperties(
          DocTemplateRec, "No.", ArrRecID, "Contact No.", "Contact Person No.", UpdateDocument, lvEdit);
      END;
    END;

    PROCEDURE HandleEditableTypeMisc@1210190003(ControlEditable@1210190000 : Boolean);
    BEGIN
      "Document No.Editable" := ControlEditable;
      "Contact No.Editable" := ControlEditable;
      "Contact Person No.Editable" := ControlEditable;
      SubjectEditable := ControlEditable;
      DescriptionEditable := ControlEditable;
      AddressEditable := ControlEditable;
      "Address 2Editable" := ControlEditable;
      "Post CodeEditable" := ControlEditable;
      CityEditable := ControlEditable;
      CountyEditable := ControlEditable;
      "Country/Region CodeEditable" := ControlEditable;
      "Document GroupEditable" := ControlEditable;
      "Document TemplateEditable" := ControlEditable;

      // When form is not editable, subform must also be not editable.
      IF "Final Printed" THEN
        CurrPage.DocumentLink.PAGE.EDITABLE(FALSE)
      ELSE
        CurrPage.DocumentLink.PAGE.EDITABLE(TRUE);
    END;

    PROCEDURE HandleEditableOther@1210190004(ControlEditable@1210190000 : Boolean);
    BEGIN
      "No.Editable" := ControlEditable;
      "Contact NameEditable" := ControlEditable;
      "Contact Name 2Editable" := ControlEditable;
      "Contact Person NameEditable" := ControlEditable;
      "Contact Person Name 2Editable" := ControlEditable;
      "Document TypeEditable" := ControlEditable;
      "Document CategoryEditable" := ControlEditable;
      ReferenceEditable := ControlEditable;
      "Internal CompanyEditable" := ControlEditable AND NOT DocumentMgtSetup."Show Only Own Documents";
      "Salutation (Formal)Editable" := ControlEditable;
      "Salutation (Informal)Editable" := ControlEditable;
      "Intended ForEditable" := ControlEditable;
      "Intended for 2Editable" := ControlEditable;
      "Fax No.Editable" := ControlEditable;
      "Phone No.Editable" := ControlEditable;
      "Phone No. 2Editable" := ControlEditable;
      "Mobile Phone No.Editable" := ControlEditable;
      SubjectEditable := ControlEditable;
      DescriptionEditable := ControlEditable;
      "Archive LocationEditable" := ControlEditable;
    END;

    PROCEDURE HandleEditableOwnerShip@1210190005(ControlEDitable@1210190000 : Boolean);
    BEGIN
      EditorEditable := ControlEDitable;
      SenderEditable := ControlEDitable;

      ConfidentialEditable := ControlEDitable;
      "Final PrintedEditable" := ControlEDitable;
      "Handled ByEditable" := ControlEDitable;
      "SharePoint PhaseEditable" := ControlEDitable;
      StatusEditable := ControlEDitable;
    END;

    PROCEDURE HandleEditable@1210190002();
    VAR
      lvDocTemplateRec@1100485000 : Record 11012401;
    BEGIN
      IF NOT ("Final Printed" OR Confidential) THEN BEGIN
        HandleEditableTypeMisc(TypeIsMisc());
        HandleEditableOther(TRUE);
        HandleEditableOwnerShip(TRUE);
        IF (UserSetup."Employee No." <> Editor) AND
           (UserSetup."Employee No." <> Sender) THEN
          ConfidentialEditable := FALSE;
      END ELSE BEGIN
        IF ("Final Printed") OR
           ((UserSetup."Employee No." <> Editor) AND
            (UserSetup."Employee No." <> Sender))
        THEN BEGIN
          HandleEditableTypeMisc(FALSE);
          HandleEditableOther(FALSE);
        END ELSE BEGIN
          HandleEditableTypeMisc(TypeIsMisc());
          HandleEditableOther(TRUE);
        END;
        HandleEditableOwnerShip(FALSE);

        IF UserSetup."Employee No." = Editor THEN BEGIN
          "Final PrintedEditable" := TRUE;
          StatusEditable := TRUE;
          IF NOT "Final Printed" THEN BEGIN
            EditorEditable := TRUE;
            ConfidentialEditable := TRUE;
            IF Sender = '' THEN
              SenderEditable := TRUE;
          END;
        END;
        IF UserSetup."Employee No." = Sender THEN BEGIN
          "Final PrintedEditable" := TRUE;
          StatusEditable := TRUE;
          IF NOT "Final Printed" THEN BEGIN
            SenderEditable := TRUE;
            ConfidentialEditable := TRUE;
            IF Editor = '' THEN
              EditorEditable := TRUE;
          END;
        END;
        IF (Editor = '') AND
           (Sender = '') THEN BEGIN
          IF NOT "Final Printed" THEN BEGIN
            HandleEditableOwnerShip(TRUE);
            ConfidentialEditable := FALSE;
          END ELSE BEGIN
            "Final PrintedEditable" := TRUE;
            StatusEditable := TRUE;
          END;
        END;
      END;

      SecureEditable := FALSE;
      IF lvDocTemplateRec.GET("Document Group","Document Template") THEN BEGIN
        IF lvDocTemplateRec."Secured Document" = lvDocTemplateRec."Secured Document"::Both THEN
          SecureEditable := TRUE;
        IF lvDocTemplateRec.Type = lvDocTemplateRec.Type::Miscellaneous THEN
          "Document TemplateEditable" := TRUE;
      END;
    END;

    PROCEDURE CheckConfidentialRights@1199197400();
    BEGIN
      IF NOT IsConfidentialOwner() THEN
        ERROR(Text015, FIELDCAPTION(Confidential));
    END;

    LOCAL PROCEDURE SenderOnAfterValidate@19073269();
    BEGIN
      CALCFIELDS("Name Sender");
      CALCFIELDS("Name Editor");
      IF "Document No." <> '' THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE EditorOnAfterValidate@19032650();
    BEGIN
      CALCFIELDS("Name Editor");
      IF "Document No." <> '' THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DocumentGroupOnAfterValidate@19039670();
    BEGIN
      CALCFIELDS("Description Document Group");
    END;

    LOCAL PROCEDURE HandledByOnAfterValidate@19004207();
    BEGIN
      CALCFIELDS("Name Handled By");
      IF "Document No." <> '' THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE FinalPrintedOnAfterValidate@19050120();
    BEGIN
      HandleEditable;
    END;

    LOCAL PROCEDURE ConfidentialOnAfterValidate@19046777();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      SetFieldsEditable;
      HandleEditable;
    END;

    LOCAL PROCEDURE SetFieldsEditable@1100528601();
    VAR
      DocumentManagement@1100528600 : Codeunit 11012406;
    BEGIN
      BacktoStorageEnabled :=  (DocumentManagement.GetStorageType <> DocumentManagement.GetEditStorageType) AND ("Storage Type" = DocumentManagement.GetEditStorageType);
    END;

    BEGIN
    {
      4PS02 Jan ter Harmsel, Call 3153, Fill default company at insert
      MVOS, 16-08-2010, Call C-019333, Get new document after copy document
      4PS MVOS 20101005 23172 : Moved function CopyDocument to "Document Management" codeunit
                                Changed function CreateDocument.
    }
    END.
  }
}

