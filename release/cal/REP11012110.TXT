OBJECT Report 11012110 Update Sales Price by Customer
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Aktualisieren VK-Preise nach Debitor;
               ENU=Update Sales Prices by Customer;
               NLD=Bijwerken verkoopprijzen per klant;
               NOR=Oppdater salgspriser etter kunde;
               SVE=Uppdatera fîrsÑljningspriser efter kund];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF (NOT PricesByCostObject) AND (NOT PricesByItem) AND (NOT PricesByHourRateCode) THEN
                    ERROR(Text000);
                  IF (Customer.GETFILTER("No.") = '') THEN
                    ERROR(Text001);
                  IF (RefDateTo = 0D) THEN
                    ERROR(Text002);

                  IF (RefDateFrom = RefDateTo) THEN BEGIN
                    IF UpdatePerc = 0 THEN
                      ERROR(Text003);
                    IF NOT CONFIRM(Text004) THEN
                      ERROR('');
                  END;
                END;

  }
  DATASET
  {
    { 6836;    ;DataItem;                    ;
               DataItemTable=Table18;
               DataItemTableView=SORTING(No.);
               ReqFilterFields=No. }

    { 2193;1   ;DataItem;                    ;
               DataItemTable=Table11012080;
               DataItemTableView=SORTING(Customer No.,Starting Date,Cost Object);
               OnPreDataItem=BEGIN
                               IF NOT PricesByCostObject THEN
                                 CurrReport.SKIP;

                               SETRANGE("Starting Date", RefDateFrom);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF (RefDateFrom = RefDateTo) THEN BEGIN
                                    "Sales Price (LCY)" := ROUND(("Sales Price (LCY)" + ((UpdatePerc / 100) * "Sales Price (LCY)")), 0.00001);
                                    MODIFY(TRUE);
                                  END ELSE BEGIN
                                    CostObjectPriceRec.INIT;
                                    CostObjectPriceRec."Cost Object" := "Cost Object";
                                    CostObjectPriceRec."Customer No." := "Customer No.";
                                    CostObjectPriceRec."Starting Date" := RefDateTo;
                                    CostObjectPriceRec."Sales Price (LCY)" := ROUND(("Sales Price (LCY)" + ((UpdatePerc / 100) * "Sales Price (LCY)")), 0.00001);
                                    IF CostObjectPriceRec.INSERT(TRUE) THEN;
                                  END;
                                END;

               ReqFilterFields=Cost Object;
               DataItemLink=Customer No.=FIELD(No.) }

    { 7331;1   ;DataItem;                    ;
               DataItemTable=Table7002;
               DataItemTableView=SORTING(Sales Type,Sales Code,Item No.,Starting Date,Currency Code,Variant Code,Unit of Measure Code,Minimum Quantity)
                                 WHERE(Sales Type=CONST(Customer),
                                       Currency Code=FILTER(''),
                                       Variant Code=FILTER(''),
                                       Unit of Measure Code=FILTER(''),
                                       Minimum Quantity=CONST(0));
               ReqFilterHeadingML=[DEU=VK-Preis nach Artikel/Debitor;
                                   ENU=Sales Price by Item No. Object/Customer;
                                   NLD=Verkoopprijs per artikel/ klant;
                                   NOR=Salgspris etter artikkelnr. Objekt/Kunde;
                                   SVE=FîrsÑljningspris efter artikelnr, objekt/kund];
               OnPreDataItem=BEGIN
                               IF NOT PricesByItem THEN
                                 CurrReport.SKIP;

                               SETRANGE("Starting Date", RefDateFrom);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF (RefDateFrom = RefDateTo) THEN BEGIN
                                    "Unit Price" := ROUND(("Unit Price" + ((UpdatePerc / 100) * "Unit Price")), 0.00001);
                                    MODIFY(TRUE);
                                  END ELSE BEGIN
                                    ItemPriceRec.INIT;
                                    ItemPriceRec."Item No." := "Item No.";
                                    ItemPriceRec."Sales Type" := ItemPriceRec."Sales Type"::Customer;
                                    ItemPriceRec."Sales Code" := "Sales Code";
                                    ItemPriceRec."Starting Date" := RefDateTo;
                                    ItemPriceRec."Unit Price" := ROUND(("Unit Price" + ((UpdatePerc / 100) * "Unit Price")), 0.00001);
                                    IF ItemPriceRec.INSERT(TRUE) THEN;
                                  END;
                                END;

               ReqFilterFields=Item No.;
               DataItemLink=Sales Code=FIELD(No.) }

    { 7036;1   ;DataItem;                    ;
               DataItemTable=Table11012023;
               DataItemTableView=SORTING(Customer No.,Starting Date,Hour Rate Code);
               OnPreDataItem=BEGIN
                               IF NOT PricesByHourRateCode THEN
                                 CurrReport.SKIP;

                               SETRANGE("Starting Date", RefDateFrom);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF (RefDateFrom = RefDateTo) THEN BEGIN
                                    "Hour Rate (LCY)" := ROUND(("Hour Rate (LCY)" + ((UpdatePerc / 100) * "Hour Rate (LCY)")), 0.00001);
                                    MODIFY(TRUE);
                                  END ELSE BEGIN
                                    HourRateRec.INIT;
                                    HourRateRec."Customer No." := "Customer No.";
                                    HourRateRec."Starting Date" := RefDateTo;
                                    HourRateRec."Hour Rate Code" := "Hour Rate Code";
                                    HourRateRec."Hour Rate (LCY)" := ROUND(("Hour Rate (LCY)" + ((UpdatePerc / 100) * "Hour Rate (LCY)")), 0.00001);
                                    IF HourRateRec.INSERT(TRUE) THEN;
                                  END;
                                END;

               ReqFilterFields=Hour Rate Code;
               DataItemLink=Customer No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   IF gInitSelections THEN BEGIN
                     RefDateFrom := gRefDateFrom;
                     PricesByCostObject := gPricesByCostObject;
                     PricesByItem := gPricesByItem;
                     PricesByHourRateCode := gPricesByHourRateCode;
                   END;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1210190000;2;Field  ;
                  CaptionML=[DEU=Stichtag von;
                             ENU=Reference Date From;
                             NLD=Peildatum van;
                             NOR=Referansedato fra;
                             SVE=Referensdatum frÜn];
                  SourceExpr=RefDateFrom }

      { 1210190002;2;Field  ;
                  CaptionML=[DEU=Stichtag zu;
                             ENU=Reference Date To;
                             NLD=Peildatum naar;
                             NOR=Referansedato til;
                             SVE=Referensdatum till];
                  SourceExpr=RefDateTo }

      { 1210190010;2;Field  ;
                  CaptionML=[DEU=Prozentuale Erhîhung;
                             ENU=Increase Percentage;
                             NLD=Procentuele verhoging;
                             NOR=ùk prosent;
                             SVE=ôka procent];
                  SourceExpr=UpdatePerc;
                  MinValue=-100 }

      { 1210190005;2;Field  ;
                  CaptionML=[DEU=Preis pro KostentrÑger;
                             ENU=Price by Cost Object;
                             NLD=Prijs per kostendrager;
                             NOR=Pris etter kostobjekt;
                             SVE=Pris efter kostnadsobjekt];
                  SourceExpr=PricesByCostObject }

      { 1210190004;2;Field  ;
                  CaptionML=[DEU=Preis pro Artikel;
                             ENU=Price by Item;
                             NLD=Prijs per artikel;
                             NOR=Pris etter artikkel;
                             SVE=Pris efter artikel];
                  SourceExpr=PricesByItem }

      { 1210190008;2;Field  ;
                  CaptionML=[DEU=Preis pro Stundentarifcode;
                             ENU=Price by Hour Rate Code;
                             NLD=Prijs per uurtariefcode;
                             NOR=Pris etter timesatskode;
                             SVE=Pris efter timavgiftskod];
                  SourceExpr=PricesByHourRateCode }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CostObjectPriceRec@1210190005 : Record 11012080;
      ItemPriceRec@1210190012 : Record 7002;
      HourRateRec@1210190013 : Record 11012023;
      RefDateFrom@1210190000 : Date;
      RefDateTo@1210190001 : Date;
      gRefDateFrom@1210190007 : Date;
      PricesByCostObject@1210190002 : Boolean;
      PricesByItem@1210190003 : Boolean;
      PricesByHourRateCode@1210190004 : Boolean;
      gInitSelections@1210190011 : Boolean;
      gPricesByCostObject@1210190010 : Boolean;
      gPricesByItem@1210190009 : Boolean;
      gPricesByHourRateCode@1210190008 : Boolean;
      UpdatePerc@1210190006 : Decimal;
      Text000@1210190014 : TextConst 'DEU=Keine Art VK-Preis zur Aktualisierung ausgewÑhlt.;ENU=No type of sales price selected for update.;NLD=Geen soort verkoopprijs geselecteerd voor bijwerken.;NOR=Ingen type salgspris er valgt for oppdatering.;SVE=Ingen typ av fîrsÑljningspris har valts fîr uppdatering.';
      Text001@1210190015 : TextConst 'DEU=Keine Debitorennr. ausgewÑhlt.;ENU=There is not selected a Customer No.;NLD=Geen klantnr. geselecteerd.;NOR=Det er ikke valgt et kundenummer;SVE=Inget kundnummer har valts.';
      Text002@1210190016 : TextConst 'DEU=''Referenzdatum zu'' muss noch eingegeben werden.;ENU=Reference Date To must be filled in.;NLD=''Referentiedatum naar'' moet worden ingegeven.;NOR=Referansedato til mÜ fylles ut.;SVE=Referensdatum till mÜste fyllas i.';
      Text003@1210190018 : TextConst 'DEU=Prozentsatz muss eingegeben werden.;ENU=Percentage must be filled in.;NLD=Percentage moet worden ingegeven.;NOR=Prosent mÜ fylles ut.;SVE=Procent mÜste fyllas i.';
      Text004@1210190017 : TextConst 'DEU=Vorhandene Preise werden aktualisiert (Åberschrieben). Mîchten Sie fortfahren?;ENU="Existing price will be updated. Continue ? ";NLD=Bestaande prijzen worden bijgewerkt (overschreven). Doorgaan ?;NOR=Eksisterende pris vil oppdateres. Fortsette?;SVE="Befintligt pris kommer att uppdateras. FortsÑtta? "';

    PROCEDURE InitSelections@1210190000(IRefDateFrom@1210190000 : Date;IPricesByCostObject@1210190003 : Boolean;IPricesByItem@1210190002 : Boolean;IPricesByHourRateCode@1210190001 : Boolean);
    BEGIN
      gInitSelections := TRUE;
      gRefDateFrom := IRefDateFrom;
      gPricesByCostObject := IPricesByCostObject;
      gPricesByItem := IPricesByItem;
      gPricesByHourRateCode := IPricesByHourRateCode;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

