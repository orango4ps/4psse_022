OBJECT Codeunit 11012594 Plant Quote Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1100529000 : TextConst 'DEU=%1 erstellen fÅr %2 ''%3''?;ENU=Create %1 for %2 ''%3''?;NLD=%1 aanmaken voor %2 ''%3''?';
      PlantSetup@1100529001 : Record 11012550;
      Text002@1100529002 : TextConst 'DEU=Und/oder %1 muss ausgefÅllt sein;ENU=and/or %1 must be filled;NLD=en/of %1 moet gevuld zijn';

    PROCEDURE CreateOrder@1100529000(VAR Rec@1100529000 : Record 11229918);
    VAR
      PlantQuote@1100529001 : Record 11229918;
      PlantOrder@1100529002 : Record 11012556;
      ExitOrder@1100529003 : Record 11012559;
    BEGIN
      WITH PlantQuote DO BEGIN
        COPY(Rec);
        IF GUIALLOWED THEN BEGIN
          CASE Type OF
            Type::Rental:
              IF NOT CONFIRM(Text001 ,TRUE, PlantOrder.TABLECAPTION, TABLECAPTION, "No.") THEN
                EXIT;
            Type::Sales:
              IF NOT CONFIRM(Text001,TRUE, ExitOrder.TABLECAPTION, TABLECAPTION, "No.") THEN
                EXIT;
          END;
        END;
        PlantSetup.GET;
        TESTFIELD("No.");
        TESTFIELD(Status, PlantQuote.Status::Order);
        TESTFIELD("Delivery Date");
        TESTFIELD("Order No.", '');
        TESTFIELD("From Location");
        CASE Type OF
          Type::Rental:
            BEGIN
              TESTFIELD("Plant Location");
              CheckPlantQuoteLinesPO(PlantQuote);
              CreatePlantOrder(PlantQuote);
            END;
          Type::Sales:
            BEGIN
              IF ("Customer No." = '') AND ("Plant Location" = '') THEN
                FIELDERROR("Customer No.", STRSUBSTNO(Text002, FIELDCAPTION("Plant Location")));
              CheckPlantQuoteLinesExit(PlantQuote);
              CreateExitOrder(PlantQuote);
            END;
        ELSE
          FIELDERROR(Type);
        END;
      END;
      Rec := PlantQuote;
    END;

    LOCAL PROCEDURE CheckPlantQuoteLinesPO@1100529004(PlantQuote@1100529000 : Record 11229918);
    VAR
      PlantQuoteLine@1100529001 : Record 11229919;
    BEGIN
      PlantQuoteLine.SETRANGE("Plant Quote No.", PlantQuote."No.");
      PlantQuoteLine.SETFILTER(Type, '<>%1', PlantQuoteLine.Type::Text);
      PlantQuoteLine.FINDFIRST;
      PlantQuoteLine.SETRANGE(Type);
      PlantQuoteLine.FINDSET;
      REPEAT
        PlantQuoteLine.CALCFIELDS(Bulk);
        CASE PlantQuoteLine.Type OF
          PlantQuoteLine.Type::Plant:
            BEGIN
              PlantQuoteLine.TESTFIELD("Plant Type");
              IF PlantSetup."Rate Codes" AND (PlantQuoteLine."Rate Code" = '') THEN BEGIN
                IF NOT PlantQuoteLine.IsSalesBuyBackPlant THEN
                  PlantQuoteLine.TESTFIELD("Rate Code");
              END;
              PlantQuoteLine.TESTFIELD(Quantity);
              IF NOT PlantQuoteLine.IsSalesBuyBackPlant THEN
                PlantQuoteLine.TESTFIELD("Time Quantity")
              ELSE BEGIN
                IF PlantQuoteLine."Discount %" <> 100 THEN
                  PlantQuoteLine.TESTFIELD(Amount);
              END;
            END;
          PlantQuoteLine.Type::Item:
            BEGIN
              PlantQuoteLine.TESTFIELD("Item No.");
              PlantQuoteLine.TESTFIELD(Quantity);
              IF PlantQuoteLine."Discount %" <> 100 THEN
                PlantQuoteLine.TESTFIELD(Amount);
            END;
        END;
        PlantQuoteLine.TESTFIELD(Description);
      UNTIL PlantQuoteLine.NEXT = 0;
    END;

    LOCAL PROCEDURE CreatePlantOrder@1100529002(VAR PlantQuote@1100529000 : Record 11229918);
    VAR
      PlantOrder@1100529001 : Record 11012556;
    BEGIN
      PlantOrder.INIT;
      PlantOrder."No." := '';
      PlantOrder.INSERT(TRUE);
      PlantOrder.TESTFIELD("No.");
      IF PlantQuote."Department Code" <> '' THEN
        PlantOrder.VALIDATE("Department Code", PlantQuote."Department Code");
      PlantOrder.Type := PlantOrder.Type::Arrival;
      PlantOrder.VALIDATE("Transfer Date", PlantQuote."Delivery Date");
      PlantOrder.VALIDATE("From Location", PlantQuote."From Location");
      PlantOrder.VALIDATE("To Location", PlantQuote."Plant Location");
      IF PlantQuote."Contact Person" <> '' THEN BEGIN
        PlantOrder."To Location Contact" := PlantQuote."Contact Person";
        PlantOrder."To Location Contact Phone No" := PlantQuote."Contact Phone No.";
        PlantOrder."To Location Country/Region" := PlantQuote.Country;
      END;
      PlantOrder."Your Reference" := PlantQuote."Your Reference";
      PlantOrder.MODIFY(TRUE);
      CreatePlantOrderLines(PlantQuote, PlantOrder);

      PlantQuote.GET(PlantQuote."No.");
      PlantQuote."Order Type" := PlantQuote."Order Type"::PlantOrder;
      PlantQuote."Order No." := PlantOrder."No.";
      PlantQuote.MODIFY;
    END;

    LOCAL PROCEDURE CreatePlantOrderLines@1100529003(PlantQuote@1100529000 : Record 11229918;PlantOrder@1100529001 : Record 11012556);
    VAR
      PlantQuoteLine@1100529002 : Record 11229919;
      PlantOrderLine@1100529003 : Record 11012557;
      NextLineNo@1100529004 : Integer;
    BEGIN
      PlantQuoteLine.SETRANGE("Plant Quote No.", PlantQuote."No.");
      IF PlantQuoteLine.FINDSET THEN BEGIN
        NextLineNo := 10000;
        REPEAT
          PlantOrderLine.INIT;
          PlantOrderLine."Plant Order No." := PlantOrder."No.";
          PlantOrderLine."Line No." := NextLineNo;
          PlantOrderLine.InitRecord;
          PlantOrderLine.INSERT(TRUE);
          NextLineNo := NextLineNo + 10000;
          PlantOrderLine."Plant Quote No." := PlantQuote."No.";
          PlantOrderLine."Plant Quote Line No." := PlantQuoteLine."Line No.";
          CASE PlantQuoteLine.Type OF
            PlantQuoteLine.Type::Plant:
              BEGIN
                PlantOrderLine.VALIDATE(Type, PlantOrderLine.Type::Plant);
                PlantOrderLine.VALIDATE("Plant Type", PlantQuoteLine."Plant Type");
                IF PlantQuoteLine."Plant No." <> '' THEN
                  PlantOrderLine.VALIDATE("No.", PlantQuoteLine."Plant No.");
                IF (PlantOrderLine."Rental Type" = PlantOrderLine."Rental Type"::Rental) AND PlantSetup."Rate Codes" THEN BEGIN
                  IF PlantQuoteLine."Rate Code" <> '' THEN
                    PlantOrderLine.VALIDATE("To Rate Code", PlantQuoteLine."Rate Code");
                END;
                IF PlantSetup."Extended Picking Procedure" THEN
                  PlantOrderLine.VALIDATE("Asked Quantity", PlantQuoteLine.Quantity)
                ELSE
                  PlantOrderLine.VALIDATE(Quantity, PlantQuoteLine.Quantity);
                IF PlantOrderLine."Rental Type" = PlantOrderLine."Rental Type"::Sales THEN
                  PlantOrderLine.VALIDATE("Sales Rate",
                    ROUND(PlantQuoteLine.Amount / PlantQuoteLine.Quantity, PlantOrderLine.PriceRoundingPrecision));
              END;
            PlantQuoteLine.Type::Item:
              BEGIN
                PlantOrderLine.VALIDATE(Type, PlantOrderLine.Type::Item);
                PlantOrderLine.VALIDATE("Item No.", PlantQuoteLine."Item No.");
                IF PlantSetup."Extended Picking Procedure" THEN
                  PlantOrderLine.VALIDATE("Asked Quantity", PlantQuoteLine.Quantity)
                ELSE
                  PlantOrderLine.VALIDATE(Quantity, PlantQuoteLine.Quantity);
                PlantOrderLine.VALIDATE("Item Amount", PlantQuoteLine.Amount);
              END;
            PlantQuoteLine.Type::Text:
              BEGIN
                PlantOrderLine.VALIDATE(Type, PlantOrderLine.Type::Text);
              END;
          END;
          PlantOrderLine.VALIDATE("To Plant Group", PlantQuoteLine."Plant Group");
          IF PlantQuoteLine.Description <> '' THEN
            PlantOrderLine.Description := PlantQuoteLine.Description;
          PlantOrderLine.MODIFY(TRUE);
        UNTIL PlantQuoteLine.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CheckPlantQuoteLinesExit@1100529001(PlantQuote@1100529000 : Record 11229918);
    VAR
      PlantQuoteLine@1100529001 : Record 11229919;
    BEGIN
      PlantQuoteLine.SETRANGE("Plant Quote No.", PlantQuote."No.");
      PlantQuoteLine.SETFILTER(Type, '<>%1', PlantQuoteLine.Type::Text);
      PlantQuoteLine.FINDFIRST;
      PlantQuoteLine.SETRANGE(Type);
      PlantQuoteLine.FINDSET;
      REPEAT
        PlantQuoteLine.CALCFIELDS(Bulk);
        CASE PlantQuoteLine.Type OF
          PlantQuoteLine.Type::Plant:
            BEGIN
              PlantQuoteLine.TESTFIELD("Plant Type");
              PlantQuoteLine.TESTFIELD(Quantity);
              IF PlantQuoteLine."Discount %" <> 100 THEN
                PlantQuoteLine.TESTFIELD(Amount);
            END;
          PlantQuoteLine.Type::Item:
            PlantQuoteLine.FIELDERROR(Type);
        END;
        PlantQuoteLine.TESTFIELD(Description);
      UNTIL PlantQuoteLine.NEXT = 0;
    END;

    LOCAL PROCEDURE CreateExitOrder@1100529008(VAR PlantQuote@1100529000 : Record 11229918);
    VAR
      ExitOrder@1100529001 : Record 11012559;
    BEGIN
      ExitOrder.INIT;
      ExitOrder."No." := '';
      ExitOrder.INSERT(TRUE);
      ExitOrder.TESTFIELD("No.");
      IF ExitOrder."Department Code" <> '' THEN
        ExitOrder.VALIDATE("Department Code", PlantQuote."Department Code");
      ExitOrder.Type := ExitOrder.Type::Sales;

      IF PlantQuote."Plant Location" <> '' THEN
        ExitOrder.VALIDATE(Location, PlantQuote."Plant Location")
      ELSE
        ExitOrder.VALIDATE("Customer No.", PlantQuote."Customer No.");
      ExitOrder.VALIDATE("Exit-date", PlantQuote."Delivery Date");
      ExitOrder.MODIFY(TRUE);
      CreateExitOrderLines(PlantQuote, ExitOrder);

      PlantQuote.GET(PlantQuote."No.");
      PlantQuote."Order Type" := PlantQuote."Order Type"::ExitOrder;
      PlantQuote."Order No." := ExitOrder."No.";
      PlantQuote.MODIFY;
    END;

    LOCAL PROCEDURE CreateExitOrderLines@1100529006(PlantQuote@1100529000 : Record 11229918;ExitOrder@1100529001 : Record 11012559);
    VAR
      PlantQuoteLine@1100529002 : Record 11229919;
      ExitOrderLine@1100529003 : Record 11012560;
      NextLineNo@1100529004 : Integer;
    BEGIN
      PlantQuoteLine.SETRANGE("Plant Quote No.", PlantQuote."No.");
      IF PlantQuoteLine.FINDSET THEN BEGIN
        NextLineNo := 10000;
        REPEAT
          ExitOrderLine.INIT;
          ExitOrderLine."Exit-order No." := ExitOrder."No.";
          ExitOrderLine."Line No." := NextLineNo;
          ExitOrderLine.InitRecord;
          ExitOrderLine.INSERT(TRUE);
          NextLineNo := NextLineNo + 10000;
          ExitOrderLine."Plant Quote No." := PlantQuote."No.";
          ExitOrderLine."Plant Quote Line No." := PlantQuoteLine."Line No.";
          ExitOrderLine.VALIDATE("From Location", PlantQuote."From Location");
          CASE ExitOrderLine.Type OF
            PlantQuoteLine.Type::Plant:
              BEGIN
                ExitOrderLine.VALIDATE(Type, ExitOrderLine.Type::Plant);
                ExitOrderLine.VALIDATE("Plant Type", PlantQuoteLine."Plant Type");
                IF PlantQuoteLine."Plant No." <> '' THEN
                  ExitOrderLine.VALIDATE("No.", PlantQuoteLine."Plant No.");
                ExitOrderLine.VALIDATE(Quantity, PlantQuoteLine.Quantity);
                ExitOrderLine.VALIDATE(Amount, PlantQuoteLine.Amount);
              END;
            PlantQuoteLine.Type::Text:
              BEGIN
                ExitOrderLine.VALIDATE(Type, ExitOrderLine.Type::Text);
              END;
          END;
          ExitOrderLine.VALIDATE("Plant Group", PlantQuoteLine."Plant Group");
          IF PlantQuoteLine.Description <> '' THEN
            ExitOrderLine.Description := PlantQuoteLine.Description;
          ExitOrderLine.MODIFY(TRUE);
        UNTIL PlantQuoteLine.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

