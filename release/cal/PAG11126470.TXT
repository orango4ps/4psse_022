OBJECT Page 11126470 Collective Plan Team
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Collective Plan Team;
    SourceTable=Table11071979;
    PageType=List;
    SourceTableTemporary=Yes;
    OnNewRecord=BEGIN
                  IF COUNT = 0 THEN
                    "Team Leader" := TRUE;
                END;

  }
  CONTROLS
  {
    { 1100528600;0;Container;
                ContainerType=ContentArea }

    { 1100528601;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100528602;2;Field  ;
                SourceExpr="Resource No.";
                OnValidate=VAR
                             ResourceWOP@1100528601 : Record 11229278;
                             ResourceMgtWorkOrderPlan@1100528600 : Codeunit 11229277;
                           BEGIN
                             ResourceMgtWorkOrderPlan.TestResourceWithinCompanyPlanGroup("Resource No.");
                             IF "Resource No." <> '' THEN BEGIN
                               ResourceWOP.GET("Resource No.");
                               IF ResourceWOP."Link WO to WO Leading Resource" THEN
                                 VALIDATE("Team Leader", FALSE);
                             END;
                           END;

                OnLookup=VAR
                           ResourceWOP@1100528601 : Record 11229278;
                           TempCollectivePlanTeam@1100528604 : TEMPORARY Record 11071979;
                           ResourceMgtWorkOrderPlan@1100528600 : Codeunit 11229277;
                           ResourceListWOP@1100528603 : Page 11229278;
                         BEGIN
                           ResourceMgtWorkOrderPlan.GetResourceDSByServiceOrderDS(
                             ServiceOrder, ResourceWOP, PlanDateFrom, PlanDateUntil, PlanSeqNo, DisciplineFilter, TradeSpecialityFilter, TerritoryFilter);
                           ResourceListWOP.LOOKUPMODE(TRUE);
                           ResourceListWOP.SetTemporaryDestination(TRUE);
                           ResourceListWOP.DetermineInterface(DATABASE::"Collective Plan Team");
                           ResourceListWOP.SETTABLEVIEW(ResourceWOP);
                           COMMIT;
                           IF ResourceListWOP.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             ResourceListWOP.GETRECORD(ResourceWOP);
                             VALIDATE("Resource No.", ResourceWOP."No.");
                           END ELSE BEGIN
                             IF ResourceListWOP.CheckMultiCopy THEN BEGIN
                               TempCollectivePlanTeam.COPY(Rec, TRUE);
                               ResourceListWOP.GetSelectedDS(ResourceWOP);
                               IF ResourceWOP.FINDSET THEN
                                 REPEAT
                                   IF NOT TempCollectivePlanTeam.GET(ResourceWOP."No.") THEN BEGIN
                                     INIT;
                                     VALIDATE("Resource No.", ResourceWOP."No.");
                                     INSERT;
                                   END;
                                 UNTIL ResourceWOP.NEXT = 0;
                               CurrPage.UPDATE;
                             END;
                           END;
                         END;
                          }

    { 1100528603;2;Field  ;
                SourceExpr="Employee Name" }

    { 1100528604;2;Field  ;
                SourceExpr="Team Leader";
                OnValidate=VAR
                             TmpCollectivePlanTeam@1100528600 : TEMPORARY Record 11071979;
                             ResourceWOP@1100528601 : Record 11229278;
                           BEGIN
                             TmpCollectivePlanTeam.COPY(Rec, TRUE);
                             IF "Team Leader" THEN BEGIN
                               IF ResourceWOP.GET("Resource No.") THEN
                                 ResourceWOP.TESTFIELD("Link WO to WO Leading Resource", FALSE);
                               TmpCollectivePlanTeam.SETRANGE("Team Leader", TRUE);
                               TmpCollectivePlanTeam.SETFILTER("Resource No.", '<>%1', "Resource No.");
                               TmpCollectivePlanTeam.MODIFYALL("Team Leader", FALSE);
                             END;
                           END;
                            }

  }
  CODE
  {
    VAR
      ServiceOrder@1100528600 : Record 11012823;
      PlanIndividually@1100528601 : Boolean;
      PlanDateFrom@1100528602 : Date;
      PlanDateUntil@1100528603 : Date;
      PlanSeqNo@1100528604 : Integer;
      DisciplineFilter@1100528605 : Text;
      TradeSpecialityFilter@1100528607 : Text;
      TerritoryFilter@1100528606 : Text;

    PROCEDURE SetPageData@1100528600(VAR ITmpCollectivePlanTeam@1100528602 : TEMPORARY Record 11071979;VAR IServiceOrder@1100528600 : Record 11012823;IPlanIndividually@1100528601 : Boolean;IPlanDateFrom@1100528603 : Date;IPlanDateUntil@1100528604 : Date;IPlanSeqNo@1100528605 : Integer;IDisciplineFilter@1100528606 : Text;ITradeSpecialityFilter@1100528608 : Text;ITerritoryFilter@1100528607 : Text);
    BEGIN
      RESET;
      DELETEALL;
      IF ITmpCollectivePlanTeam.FINDSET THEN
        REPEAT
          Rec := ITmpCollectivePlanTeam;
          Rec.INSERT;
        UNTIL ITmpCollectivePlanTeam.NEXT = 0;
      ServiceOrder.COPY(IServiceOrder);
      PlanIndividually := IPlanIndividually;
      PlanDateFrom := IPlanDateFrom;
      PlanDateUntil := IPlanDateUntil;
      PlanSeqNo := IPlanSeqNo;
      DisciplineFilter := IDisciplineFilter;
      TradeSpecialityFilter := ITradeSpecialityFilter;
      TerritoryFilter := ITerritoryFilter;
    END;

    PROCEDURE GetCollectivePlanTeam@1100528601(VAR OTmpCollectivePlanTeam@1100528600 : TEMPORARY Record 11071979);
    BEGIN
      OTmpCollectivePlanTeam.RESET;
      OTmpCollectivePlanTeam.DELETEALL;
      IF FINDSET THEN
        REPEAT
          OTmpCollectivePlanTeam := Rec;
          OTmpCollectivePlanTeam.INSERT;
        UNTIL NEXT = 0;
    END;

    BEGIN
    END.
  }
}

