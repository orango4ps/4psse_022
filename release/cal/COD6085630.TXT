OBJECT Codeunit 6085630 Approval User Group Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW13.70.00.5.00.01,4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      DimTrans@1160040000 : Record 388;
      CurrCompanyName@1160040001 : Text[30];
      AllTxt@6085580 : TextConst 'DEU=Alle;ENU=All;NLD=Alle;SVE=Alla';
      IncludeOneTxt@6085579 : TextConst 'DEU=%1 Datensatz aufgenommen;ENU=%1 record included;NLD=%1 record opgenomen';
      IncludeTxt@6085578 : TextConst 'DEU=%1 Datens„tze augenommen;ENU=%1 records included;NLD=%1 records opgenomen';
      ExcludeOnetxt@6085577 : TextConst 'DEU=%1 Datensatz ausgeschlossen;ENU=%1 record excluded;NLD=%1 record uitgesloten';
      Excludetxt@6085576 : TextConst 'DEU=%1 Datens„tze ausgeschlossen;ENU=%1 records excluded;NLD=%1 records uitgesloten';
      FilterOneTxt@6085575 : TextConst 'DEU=Filter, %1 record;ENU=Filter, %1 record;NLD=Filter, %1 record';
      FilterTxt@6085574 : TextConst 'DEU=Filter, %1 records;ENU=Filter, %1 records;NLD=Filter, %1 records';
      SameAsAssigningTxt@6085573 : TextConst 'DEU=Gleich wie Zuordnung;ENU=Same as Assigning;NLD=Zelfde als toewijzing';

    PROCEDURE SetCurrCompanyName@1160040019(NewCompanyName@1160040000 : Text[30]);
    BEGIN
      CurrCompanyName := NewCompanyName;
    END;

    PROCEDURE GetCurrCompanyName@1160040024() : Text[30];
    BEGIN
      IF CurrCompanyName = '' THEN
        EXIT(COMPANYNAME)
      ELSE
        EXIT(CurrCompanyName);
    END;

    PROCEDURE DeleteContUserPmsSelection@1160040000(NewCompanyName@1160040001 : Text[30];PermissionType@1160040006 : 'Assigning Permission,Approval Permission,Both';ApprovalUserGroupCode@1160040005 : Code[20];ContiniaUserID@1160040004 : Code[50];Type@1160040003 : Integer;DimensionCode@1160040002 : Code[20]);
    VAR
      ContiniaUserPmsSelection@1160040000 : Record 6085635;
    BEGIN
      SetCurrCompanyName(NewCompanyName);
      ContiniaUserPmsSelection.CHANGECOMPANY(GetCurrCompanyName);

      IF PermissionType <> PermissionType::Both THEN
        ContiniaUserPmsSelection.SETRANGE("Permission Type",PermissionType);

      ContiniaUserPmsSelection.SETRANGE("Approval User Group Code",ApprovalUserGroupCode);
      ContiniaUserPmsSelection.SETRANGE("Continia User ID",ContiniaUserID);
      ContiniaUserPmsSelection.SETRANGE(Type,Type);
      ContiniaUserPmsSelection.SETRANGE("Dimension Code",DimensionCode);
      IF NOT ContiniaUserPmsSelection.ISEMPTY THEN
        ContiniaUserPmsSelection.DELETEALL;
    END;

    PROCEDURE GetDimMLName@3(NewCompanyName@1160040004 : Text[30];LanguageID@1001 : Integer;Code@1160040000 : Code[20];Name@1160040001 : Text[30]) : Text[30];
    BEGIN
      SetCurrCompanyName(NewCompanyName);
      GetDimTrans(GetCurrCompanyName,LanguageID,Code,Name);
      EXIT(DimTrans.Name);
    END;

    LOCAL PROCEDURE GetDimTrans@19(NewCompanyName@1160040005 : Text[30];LanguageID@1160040004 : Integer;Code@1160040003 : Code[20];Name@1160040002 : Text[30]);
    BEGIN
      SetCurrCompanyName(NewCompanyName);
      DimTrans.CHANGECOMPANY(GetCurrCompanyName);

      IF (DimTrans.Code <> Code) OR (DimTrans."Language ID" <> LanguageID) THEN BEGIN
        IF NOT DimTrans.GET(Code,LanguageID) THEN BEGIN
          DimTrans.INIT;
          DimTrans.Code := Code;
          DimTrans."Language ID" := LanguageID;
          DimTrans.Name := Name;
        END;
      END;
    END;

    PROCEDURE CanUserApproveAcccountOrDim@1160040001(ContiniaUserID@1160040000 : Code[50];Type@1160040007 : 'G/L Account,Item,Resource,Fixed Asset,Charge (Item),Dimension,Job';CodeNo@1160040009 : Code[20];DimensionCode@1160040005 : Code[20];CheckPermissionType@1160040008 : 'Assigning Permission,Approval Permission') : Boolean;
    VAR
      GLAcc@1160040010 : Record 15;
      FixedAsset@1160040013 : Record 5600;
      Resource@1160040012 : Record 156;
      Item@1160040003 : Record 27;
      DimValue@1160040014 : Record 349;
      Job@1160040011 : Record 11072003;
      ContiniaUserPermission@1160040002 : Record 6085634;
      ContiniaUserPmsSelection@1160040001 : Record 6085635;
      ExcludeSelectedExist@1160040004 : Boolean;
      PermissionOption@1160040006 : ' ,All,Include Selected,Exclude Selected,Filter,Same as Assigning';
      Filter@6085573 : Text[250];
    BEGIN
      ContiniaUserPermission.SETRANGE("Continia User ID",ContiniaUserID);
      ContiniaUserPermission.SETRANGE(Type,Type);
      ContiniaUserPermission.SETRANGE("Dimension Code",DimensionCode);

      IF CheckPermissionType = CheckPermissionType::"Assigning Permission" THEN
        ContiniaUserPermission.SETRANGE("Assigning Permission",ContiniaUserPermission."Assigning Permission"::"Exclude Selected")
      ELSE BEGIN
        ContiniaUserPermission.SETFILTER("Approval Permission",'%1|%2',ContiniaUserPermission."Approval Permission"::"Exclude Selected",
          ContiniaUserPermission."Approval Permission"::"Same as Assigning");
      END;

      IF ContiniaUserPermission.FINDSET THEN
        REPEAT
          IF (CheckPermissionType = CheckPermissionType::"Assigning Permission") OR
            ((CheckPermissionType = CheckPermissionType::"Approval Permission") AND
            (ContiniaUserPermission."Approval Permission" = ContiniaUserPermission."Approval Permission"::"Exclude Selected")) OR
            ((CheckPermissionType = CheckPermissionType::"Approval Permission") AND
            (ContiniaUserPermission."Approval Permission" = ContiniaUserPermission."Approval Permission"::"Same as Assigning") AND
            (ContiniaUserPermission."Assigning Permission" = ContiniaUserPermission."Assigning Permission"::"Exclude Selected"))
          THEN BEGIN
            IF CheckPermissionType = CheckPermissionType::"Assigning Permission" THEN
              ContiniaUserPmsSelection.SETRANGE("Permission Type",ContiniaUserPmsSelection."Permission Type"::"Assigning Permission")
            ELSE
              IF (ContiniaUserPermission."Approval Permission" = ContiniaUserPermission."Approval Permission"::"Same as Assigning") AND
                (ContiniaUserPermission."Assigning Permission" = ContiniaUserPermission."Assigning Permission"::"Exclude Selected")
              THEN
                ContiniaUserPmsSelection.SETRANGE("Permission Type",ContiniaUserPmsSelection."Permission Type"::"Assigning Permission")
              ELSE
                ContiniaUserPmsSelection.SETRANGE("Permission Type",ContiniaUserPmsSelection."Permission Type"::"Approval Permission");

            ExcludeSelectedExist := TRUE;
            ContiniaUserPmsSelection.SETRANGE("Continia User ID",ContiniaUserPermission."Continia User ID");
            ContiniaUserPmsSelection.SETRANGE(Type,ContiniaUserPermission.Type);
            ContiniaUserPmsSelection.SETRANGE("Dimension Code",ContiniaUserPermission."Dimension Code");
            ContiniaUserPmsSelection.SETRANGE("Approval User Group Code",ContiniaUserPermission."Approval User Group Code");
            ContiniaUserPmsSelection.SETRANGE("Code / No.",CodeNo);
            IF NOT ContiniaUserPmsSelection.ISEMPTY THEN
              EXIT(FALSE);
          END;
        UNTIL ContiniaUserPermission.NEXT = 0;

      IF CheckPermissionType = CheckPermissionType::"Assigning Permission" THEN
        ContiniaUserPermission.SETFILTER("Assigning Permission",'<>%1',
          ContiniaUserPermission."Assigning Permission"::"Exclude Selected")
      ELSE
        ContiniaUserPermission.SETFILTER("Approval Permission",'<>%1',ContiniaUserPermission."Approval Permission"::"Exclude Selected");

      IF ContiniaUserPermission.FINDSET THEN BEGIN
        REPEAT
          IF CheckPermissionType = CheckPermissionType::"Assigning Permission" THEN BEGIN
            PermissionOption := ContiniaUserPermission."Assigning Permission";
            Filter := ContiniaUserPermission."Assigning Filter";
          END ELSE BEGIN
            IF ContiniaUserPermission."Approval Permission" = ContiniaUserPermission."Approval Permission"::"Same as Assigning"
            THEN BEGIN
              PermissionOption := ContiniaUserPermission."Assigning Permission";
              Filter := ContiniaUserPermission."Assigning Filter";
            END ELSE BEGIN
              PermissionOption := ContiniaUserPermission."Approval Permission";
              Filter := ContiniaUserPermission."Approval Filter";
            END;
          END;

          CASE PermissionOption OF
            PermissionOption::" ":
              BEGIN
                // Do nothing (not included)
              END;
            PermissionOption::All:
              BEGIN
                EXIT(TRUE);
              END;
            PermissionOption::"Include Selected":
              BEGIN
                ContiniaUserPmsSelection.RESET;
                IF (CheckPermissionType = CheckPermissionType::"Assigning Permission") OR
                  ((CheckPermissionType = CheckPermissionType::"Approval Permission") AND
                  (ContiniaUserPermission."Approval Permission" = ContiniaUserPermission."Approval Permission"::"Same as Assigning"))
                THEN
                  ContiniaUserPmsSelection.SETRANGE("Permission Type",ContiniaUserPmsSelection."Permission Type"::"Assigning Permission")
                ELSE
                  ContiniaUserPmsSelection.SETRANGE("Permission Type",ContiniaUserPmsSelection."Permission Type"::"Approval Permission");

                ContiniaUserPmsSelection.SETRANGE("Continia User ID",ContiniaUserPermission."Continia User ID");
                ContiniaUserPmsSelection.SETRANGE(Type,ContiniaUserPermission.Type);
                ContiniaUserPmsSelection.SETRANGE("Dimension Code",ContiniaUserPermission."Dimension Code");
                ContiniaUserPmsSelection.SETRANGE("Approval User Group Code",ContiniaUserPermission."Approval User Group Code");
                ContiniaUserPmsSelection.SETRANGE("Code / No.",CodeNo);
                IF NOT ContiniaUserPmsSelection.ISEMPTY THEN
                  EXIT(TRUE);
              END;
            PermissionOption::Filter:
              BEGIN
                CASE ContiniaUserPermission.Type OF
                  ContiniaUserPermission.Type::"G/L Account":
                    BEGIN
                      WITH GLAcc DO BEGIN
                        RESET;
                        SETRANGE("No.",CodeNo);
                        FILTERGROUP := 2;
                        SETFILTER("No.",Filter);

                        IF NOT ISEMPTY THEN
                          EXIT(TRUE);
                      END;
                    END;
                  ContiniaUserPermission.Type::Item:
                    BEGIN
                      WITH Item DO BEGIN
                        RESET;
                        SETRANGE("No.",CodeNo);
                        FILTERGROUP := 2;
                        SETFILTER("No.",Filter);

                        IF NOT ISEMPTY THEN
                          EXIT(TRUE);
                      END;
                    END;
                  ContiniaUserPermission.Type::Resource:
                    BEGIN
                      WITH Resource DO BEGIN
                        RESET;
                        SETRANGE("No.",CodeNo);
                        FILTERGROUP := 2;
                        SETFILTER("No.",Filter);

                        IF NOT ISEMPTY THEN
                          EXIT(TRUE);
                      END;
                    END;
                  ContiniaUserPermission.Type::"Fixed Asset":
                    BEGIN
                      WITH FixedAsset DO BEGIN
                        RESET;
                        SETRANGE("No.",CodeNo);
                        FILTERGROUP := 2;
                        SETFILTER("No.",Filter);

                        IF NOT ISEMPTY THEN
                          EXIT(TRUE);
                      END;
                    END;
                  ContiniaUserPermission.Type::Dimension:
                    BEGIN
                      WITH DimValue DO BEGIN
                        RESET;
                        SETRANGE("Dimension Code",DimensionCode);
                        SETRANGE(Code,CodeNo);
                        FILTERGROUP := 2;
                        SETFILTER(Code,Filter);

                        IF NOT ISEMPTY THEN
                          EXIT(TRUE);
                      END;
                    END;
                  ContiniaUserPermission.Type::Job:
                    BEGIN
                      WITH Job DO BEGIN
                        RESET;
                        SETRANGE("No.",CodeNo);
                        FILTERGROUP := 2;
                        SETFILTER("No.",Filter);

                        IF NOT ISEMPTY THEN
                          EXIT(TRUE);
                      END;
                    END;
                END;
              END;
          END;
        UNTIL ContiniaUserPermission.NEXT = 0;

        EXIT(FALSE);
      END ELSE
        IF ExcludeSelectedExist THEN
          EXIT(TRUE)
        ELSE
          EXIT(FALSE);
    END;

    PROCEDURE FieldOptionValueToText@1160040004(InputInteger@1160040002 : Integer;OptionRecordId@1160040001 : Integer;OptionFieldId@1160040000 : Integer) OutputText : Text[250];
    VAR
      OptionString@1160040003 : Text[1024];
    BEGIN
      OptionString := GetOptionCaption(OptionRecordId,OptionFieldId);
      IF (InputInteger >= 0) AND (InputInteger <= GetOptionsQuantity(OptionString)) THEN
        OutputText := SELECTSTR(InputInteger + 1,OptionString);
    END;

    PROCEDURE GetOptionCaption@1160040002(TableId@1160040001 : Integer;FieldId@1160040000 : Integer) OptionCaption : Text[1024];
    VAR
      OptionRecordRef@1160040004 : RecordRef;
      OptionFieldRef@1160040003 : FieldRef;
    BEGIN
      OptionRecordRef.OPEN(TableId);
      OptionFieldRef := OptionRecordRef.FIELD(FieldId);
      OptionCaption := OptionFieldRef.OPTIONCAPTION;
      OptionRecordRef.CLOSE;
    END;

    PROCEDURE GetOptionsQuantity@1160040003(OptionString@1160040000 : Text[1024]) : Integer;
    VAR
      Counter@1160040001 : Integer;
      CommaPosition@1160040002 : Integer;
    BEGIN
      IF STRPOS(OptionString,',') = 0 THEN
        EXIT(0);

      REPEAT
        CommaPosition := STRPOS(OptionString,',');
        OptionString := DELSTR(OptionString,1,CommaPosition);
        Counter := Counter + 1;
      UNTIL CommaPosition = 0;

      EXIT(Counter - 1);
    END;

    PROCEDURE GetPermissionTxt@6085573(_CompanyName@6085583 : Text[30];CalcGroupPms@1160040002 : Boolean;Type@6085587 : 'G/L Account,Item,Resource,Fixed Asset,Charge (Item),Dimension,Job';DimCode@6085582 : Code[20];CheckPermissionType@6085580 : 'Assigning Permission,Approval Permission';AssigningFilter@6085585 : Text[250];AssigningPermissionOption@1160040000 : ' ,All,Include Selected,Exclude Selected,Filter';ApprovalFilter@6085586 : Text[250];ApprovalPermissionOption@1160040001 : ' ,All,Include Selected,Exclude Selected,Filter,Same as Assigning';ContiniaUserID@1160040006 : Code[50];ApprovalUserGroupCode@1160040007 : Code[20]) : Text[1024];
    VAR
      PermissionOption@1160040003 : ' ,All,Include Selected,Exclude Selected,Filter,Same as Assigning';
      NoOfRecords@1160040005 : Integer;
    BEGIN
      IF CheckPermissionType = CheckPermissionType::"Assigning Permission" THEN
        PermissionOption := AssigningPermissionOption
      ELSE
        PermissionOption := ApprovalPermissionOption;

      IF PermissionOption IN [PermissionOption::"Include Selected",PermissionOption::"Exclude Selected",
        PermissionOption::Filter]
      THEN
        NoOfRecords := CalcNoOfRecords(_CompanyName,CalcGroupPms,Type,DimCode,CheckPermissionType,AssigningFilter,
          AssigningPermissionOption,ApprovalFilter,ApprovalPermissionOption,ContiniaUserID,ApprovalUserGroupCode);

      CASE PermissionOption OF
        PermissionOption::" ":
          EXIT('');
        PermissionOption::All:
          EXIT(AllTxt);
        PermissionOption::"Include Selected":
          BEGIN
            IF NoOfRecords = 1 THEN
              EXIT(STRSUBSTNO(IncludeOneTxt,NoOfRecords))
            ELSE
              EXIT(STRSUBSTNO(IncludeTxt,NoOfRecords));
          END;
        PermissionOption::"Exclude Selected":
          BEGIN
            NoOfRecords := CalcNoOfRecords(_CompanyName,CalcGroupPms,Type,DimCode,CheckPermissionType,AssigningFilter,
              AssigningPermissionOption,ApprovalFilter,ApprovalPermissionOption,ContiniaUserID,ApprovalUserGroupCode);

            IF NoOfRecords = 1 THEN
              EXIT(STRSUBSTNO(ExcludeOnetxt,NoOfRecords))
            ELSE
              EXIT(STRSUBSTNO(Excludetxt,NoOfRecords));
          END;
        PermissionOption::Filter:
          BEGIN
            NoOfRecords := CalcNoOfRecords(_CompanyName,CalcGroupPms,Type,DimCode,CheckPermissionType,AssigningFilter,
              AssigningPermissionOption,ApprovalFilter,ApprovalPermissionOption,ContiniaUserID,ApprovalUserGroupCode);

            IF NoOfRecords = 1 THEN
              EXIT(STRSUBSTNO(FilterOneTxt,NoOfRecords))
            ELSE
              EXIT(STRSUBSTNO(FilterTxt,NoOfRecords));
          END;
        PermissionOption::"Same as Assigning":
          BEGIN
            EXIT(SameAsAssigningTxt);
          END;
      END;
    END;

    PROCEDURE GetTypeTxt@6085574(TypeOption@6085575 : 'G/L Account,Item,Resource,Fixed Asset,Charge (Item),Dimension,Job';TypeTxt@6085573 : Text[80];DimCode@6085574 : Code[20]) : Text[150];
    BEGIN
      IF TypeOption = TypeOption::Dimension THEN
        EXIT(STRSUBSTNO('%1 %2',DimCode,TypeTxt))
      ELSE
        EXIT(FORMAT(TypeTxt));
    END;

    PROCEDURE CalcNoOfRecords@1160040005(_CompanyName@6085583 : Text[30];CalcGroupPms@1160040002 : Boolean;Type1@6085587 : 'G/L Account,Item,Resource,Fixed Asset,Charge (Item),Dimension,Job';DimCode@6085582 : Code[20];CheckPermissionType@6085580 : 'Assigning Permission,Approval Permission';AssigningFilter@1160040008 : Text[250];AssigningPermissionOption@1160040007 : ' ,All,Include Selected,Exclude Selected,Filter';ApprovalFilter@1160040006 : Text[250];ApprovalPermissionOption@1160040005 : ' ,All,Include Selected,Exclude Selected,Filter,Same as Assigning';ContiniaUserID@1160040004 : Code[50];ApprovalUserGroupCode@1160040003 : Code[20]) : Integer;
    VAR
      GLAccount@6085579 : Record 15;
      Item@6085578 : Record 27;
      FA@6085577 : Record 5600;
      ItemCharge@6085576 : Record 5800;
      DimVal@6085575 : Record 349;
      Job@6085574 : Record 11072003;
      Resource@6085573 : Record 156;
      ApprovalUserGroupPermission@1160040000 : Record 6085632;
      ContiniaUserPermission@1160040001 : Record 6085634;
      PermissionOption@1160040009 : ' ,All,Include Selected,Exclude Selected,Filter,Same as Assigning';
      Filter@1160040010 : Text[250];
    BEGIN
      IF CheckPermissionType = CheckPermissionType::"Assigning Permission" THEN BEGIN
        PermissionOption := AssigningPermissionOption;
        Filter := AssigningFilter;
      END ELSE BEGIN
        IF ApprovalPermissionOption = ApprovalPermissionOption::"Same as Assigning" THEN BEGIN
          PermissionOption := AssigningPermissionOption;
          CheckPermissionType := CheckPermissionType::"Assigning Permission";
          Filter := AssigningFilter;
        END ELSE BEGIN
          PermissionOption := ApprovalPermissionOption;
          Filter := ApprovalFilter;
        END;
      END;

      CASE PermissionOption OF
        PermissionOption::" ":
          EXIT(0);
        PermissionOption::All:
          BEGIN
            CASE Type1 OF
              Type1::"G/L Account":
                BEGIN
                  WITH GLAccount DO BEGIN
                    CHANGECOMPANY(_CompanyName);
                    EXIT(COUNT);
                  END;
                END;
              Type1::Item:
                BEGIN
                  WITH Item DO BEGIN
                    CHANGECOMPANY(_CompanyName);
                    EXIT(COUNT);
                  END;
                END;
              Type1::Resource:
                BEGIN
                  WITH Resource DO BEGIN
                    CHANGECOMPANY(_CompanyName);
                    EXIT(COUNT);
                  END;
                END;
              Type1::"Fixed Asset":
                BEGIN
                  WITH FA DO BEGIN
                    CHANGECOMPANY(_CompanyName);
                    EXIT(COUNT);
                  END;
                END;
              Type1::"Charge (Item)":
                BEGIN
                  WITH ItemCharge DO BEGIN
                    CHANGECOMPANY(_CompanyName);
                    EXIT(COUNT);
                  END;
                END;
              Type1::Dimension:
                BEGIN
                  WITH DimVal DO BEGIN
                    SETRANGE("Dimension Code",DimCode);
                    CHANGECOMPANY(_CompanyName);
                    EXIT(COUNT);
                  END;
                END;
              Type1::Job:
                BEGIN
                  WITH Job DO BEGIN
                    CHANGECOMPANY(_CompanyName);
                    EXIT(COUNT);
                  END;
                END;
            END;
          END;
        PermissionOption::"Include Selected",PermissionOption::"Exclude Selected":
          BEGIN
            IF CalcGroupPms THEN BEGIN
              WITH ApprovalUserGroupPermission DO BEGIN
                CHANGECOMPANY(_CompanyName);
                GET(ApprovalUserGroupCode,Type1,DimCode);
                IF CheckPermissionType = CheckPermissionType::"Assigning Permission" THEN BEGIN
                  CALCFIELDS("No. of Assigning Selections");
                  EXIT("No. of Assigning Selections");
                END ELSE BEGIN
                  CALCFIELDS("No. of Approval Selections");
                  EXIT("No. of Approval Selections");
                END;
              END;
            END ELSE BEGIN
              WITH ContiniaUserPermission DO BEGIN
                CHANGECOMPANY(_CompanyName);
                GET(ContiniaUserID,Type1,DimCode,ApprovalUserGroupCode);
                IF CheckPermissionType = CheckPermissionType::"Assigning Permission" THEN BEGIN
                  CALCFIELDS("No. of Assigning Selections");
                  EXIT("No. of Assigning Selections");
                END ELSE BEGIN
                  CALCFIELDS("No. of Approval Selections");
                  EXIT("No. of Approval Selections");
               END;
              END;
            END;
          END;
        PermissionOption::Filter:
          BEGIN
            CASE Type1 OF
              Type1::"G/L Account":
                BEGIN
                  WITH GLAccount DO BEGIN
                    CHANGECOMPANY(_CompanyName);
                    SETFILTER("No.",Filter);
                    EXIT(COUNT);
                  END;
                END;
              Type1::Item:
                BEGIN
                  WITH Item DO BEGIN
                    CHANGECOMPANY(_CompanyName);
                    SETFILTER("No.",Filter);
                    EXIT(COUNT);
                  END;
                END;
              Type1::Resource:
                BEGIN
                  WITH Resource DO BEGIN
                    RESET;
                    CHANGECOMPANY(_CompanyName);
                    SETFILTER("No.",Filter);
                    EXIT(COUNT);
                  END;
                END;
              Type1::"Fixed Asset":
                BEGIN
                  WITH FA DO BEGIN
                    CHANGECOMPANY(_CompanyName);
                    SETFILTER("No.",Filter);
                    EXIT(COUNT);
                  END;
                END;
              Type1::"Charge (Item)":
                BEGIN
                  WITH ItemCharge DO BEGIN
                    CHANGECOMPANY(_CompanyName);
                    SETFILTER("No.",Filter);
                    EXIT(COUNT);
                  END;
                END;
              Type1::Dimension:
                BEGIN
                  WITH DimVal DO BEGIN
                    CHANGECOMPANY(_CompanyName);
                    SETRANGE("Dimension Code",DimCode);
                    SETFILTER(Code,Filter);
                    EXIT(COUNT);
                  END;
                END;
              Type1::Job:
                BEGIN
                  WITH Job DO BEGIN
                    CHANGECOMPANY(_CompanyName);
                    SETFILTER("No.",Filter);
                    EXIT(COUNT);
                  END;
                END;
            END;
          END;
      END;
    END;

    BEGIN
    {
      4PS, Objects renumbered
    }
    END.
  }
}

