OBJECT Report 11012528 Process Option Cross List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Optionskreuzliste durchlesen;
               ENU=Process Option Cross List;
               NLD=Optie-kruisjeslijst verwerken;
               NOR=Behandle alternativer avkrysningsliste;
               SVE=Behandla alternativkorslista];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   GenerateInstallmentsBln := TRUE;
                   JobsSetup.GET;
                 END;

    OnPreReport=BEGIN
                  TmpOptionRec.DELETEALL;
                END;

  }
  DATASET
  {
    { 4274;    ;DataItem;                    ;
               DataItemTable=Table11012515;
               DataItemTableView=SORTING(Project No.,House Model,Main Group,Group,Sub Group,Option);
               OnPreDataItem=BEGIN
                               IF NOT gOnDeleteCrossListRun THEN BEGIN
                                 //* Niet bij deze run het window openen, want je krijgt dan (soms) opeens vraag de vraag 'Naam record wijzigen?' en
                                 //* daarna een aantal meldingen. (vreemd, oorzaak onbekend).
                                 Window.OPEN(Text000 + '\' + Text002 + '\ \ \' + Text003);
                                 Counter := 0;
                                 NoOfLines := COUNT;
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF NOT gOnDeleteCrossListRun THEN BEGIN
                                    Counter := Counter + 1;
                                    Window.UPDATE(1, Option);
                                    Window.UPDATE(2, ROUND(Counter / NoOfLines * 10000,1));

                                    IF ("Last Date Processed" > "Last Date Modified") OR
                                       (("Last Date Processed" = "Last Date Modified") AND ("Last Time Processed" > "Last Time Modified"))
                                    THEN
                                      CurrReport.SKIP;

                                    ProjOptionRec.GET("Project No.", '', "House Model", "Main Group", Group, "Sub Group", Option);
                                    IF ("Option No. External" <> '') AND (ProjOptionRec."Option No. External" <> "Option No. External") THEN BEGIN
                                      ProjOptionRec."Option No. External" := "Option No. External";
                                      ProjOptionRec.MODIFY;
                                    END;

                                    "Last Date Processed" := TODAY;
                                    "Last Time Processed" := TIME;
                                    MODIFY;
                                  END;
                                END;

               ReqFilterFields=Project No.,House Model,Main Group,Group,Sub Group,Option }

    { 6921;1   ;DataItem;Plot Option         ;
               DataItemTable=Table11012502;
               DataItemTableView=SORTING(Project No.,House Model,Main Group,Group,Sub Group,Option,Plot No.)
                                 WHERE(Project No.=FILTER(<>''),
                                       Plot No.=FILTER(<>''));
               OnAfterGetRecord=BEGIN
                                  //* Delete the (plot) options that are no longer in the 'Option Cross List'. Only delete the option if it is NOT a plot
                                  //* specific option (present on project level).

                                  IF (Status < Status::Order) OR
                                    ((Status = Status::Order) AND JobsSetup."Allow Change Ordered Options") THEN BEGIN //mg.c, 07-01-11: M19282
                                    IF ProjOptionRec.GET("Project No.", '', "House Model", "Main Group", Group, "Sub Group", Option) THEN BEGIN
                                      IF NOT CrossListLineRec.GET("Project No.", "House Model", "Main Group", Group, "Sub Group", Option, "Plot No.") THEN BEGIN
                                        //mg.sn, 07-01-11: M19282
                                        IF Status = Status::Order THEN
                                          VALIDATE(Status, Status::Applied);
                                        //mg.en, 07-01-11: M19282
                                        DELETE(TRUE);
                                      END;
                                    END;
                                  END;
                                END;

               DataItemLink=Project No.=FIELD(Project No.),
                            House Model=FIELD(House Model),
                            Main Group=FIELD(Main Group),
                            Group=FIELD(Group),
                            Sub Group=FIELD(Sub Group),
                            Option=FIELD(Option) }

    { 6551;1   ;DataItem;                    ;
               DataItemTable=Table11012516;
               DataItemTableView=SORTING(Project No.,House Model,Main Group,Group,Sub Group,Option,Plot No.)
                                 WHERE(Plot No.=FILTER(<>''));
               OnPreDataItem=BEGIN
                               IF gOnDeleteCrossListRun THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=VAR
                                  lvNewPlotOptionCreate@1100525000 : Boolean;
                                BEGIN
                                  IF Quantity = 0 THEN BEGIN  //* Zouden er in principe al niet moeten zijn
                                    DELETE;
                                    CurrReport.SKIP;
                                  END;

                                  IF PlotOptionRec.GET("Project No.", "Plot No.", "House Model", "Main Group", Group, "Sub Group", Option) THEN BEGIN
                                    IF (Quantity = PlotOptionRec.Quantity) THEN
                                      CurrReport.SKIP;
                                    //* Als status groter dan 'Opdracht' dan maar overslaan, hier geen error gewenst. Bij deze status kan Cross List regel toch
                                    //* niet meer gewijzigd worden (aantal zal dan al wel gelijk zijn aan die van de optie).
                                    IF (PlotOptionRec.Status > PlotOptionRec.Status::Order) OR
                                      ((PlotOptionRec.Status = PlotOptionRec.Status::Order) AND
                                       NOT JobsSetup."Allow Change Ordered Options") THEN //mg.c, 07-01-11: M19282
                                      CurrReport.SKIP;
                                    lvNewPlotOptionCreate := FALSE;
                                  END ELSE BEGIN
                                    BuyerMgtCU.BmCopyOptions(
                                      Level::Project, Level::Plot,
                                      "Project No.", "Project No.",
                                      '', "Plot No.",
                                      "House Model", "House Model",
                                      "Main Group", "Main Group",
                                      Group, Group,
                                      "Sub Group", "Sub Group",
                                      Option, Option,TRUE);
                                    lvNewPlotOptionCreate := TRUE;
                                  END;

                                  IF PlotOptionRec.GET("Project No.", "Plot No.", "House Model", "Main Group", Group, "Sub Group", Option) THEN BEGIN
                                    IF (PlotOptionRec.Status < PlotOptionRec.Status::Order) OR
                                      ((PlotOptionRec.Status = PlotOptionRec.Status::Order) AND
                                       JobsSetup."Allow Change Ordered Options") THEN BEGIN //mg.c, 07-01-11: M19282
                                      IF (Quantity <> PlotOptionRec.Quantity) THEN BEGIN
                                        IF (NOT PlotOptionRec.Quantities) AND (Quantity <> 1) THEN  //* Zou normaal gesproken niet voor moeten komen (inrichting)
                                          PlotOptionRec.Quantities := TRUE;                         //* daarom dan maar aanzetten (mogelijk moet dit later Error)
                                        //mg.sn, 07-01-11: M19282
                                        IF PlotOptionRec.Status = PlotOptionRec.Status::Order THEN
                                          PlotOptionRec.VALIDATE(Status, PlotOptionRec.Status::Applied);
                                        //mg.en, 07-01-11: M19282
                                        PlotOptionRec.Quantity := Quantity;   //* Niet vullen met VALIDATE want geen
                                        PlotOptionRec.DetermineTotal(FALSE);  //* vraag gewenst bij bepalen totalen.
                                        IF lvNewPlotOptionCreate THEN
                                          PlotOptionRec.CheckUpdateOptionCrossList(PlotOptionRec);
                                      END;
                                      IF NewStatus <> NewStatus::Chargeable THEN
                                        PlotOptionRec.VALIDATE(Status, PlotOptionRec.Status::Order)
                                      ELSE
                                        PlotOptionRec.VALIDATE(Status, PlotOptionRec.Status::Invoice);
                                      IF GenerateInstallmentsBln AND
                                         (NOT PlotOptionRec."Generate Installments") AND
                                         (PlotOptionRec."Installment Scheme" <> '')
                                      THEN
                                        PlotOptionRec."Generate Installments" := TRUE;
                                      PlotOptionRec.MODIFY;
                                      PlotOptionRec.UpdateWorkBudgetOnChanges(PlotOptionRec, FALSE, FALSE);
                                    END;
                                    IF GenerateInstallmentsBln AND (PlotOptionRec."Generate Installments") AND
                                       (PlotOptionRec."Installment Scheme" <> '') AND (NOT  PlotOptionRec."Installments Generated")
                                    THEN BEGIN
                                      TmpOptionRec := PlotOptionRec;
                                      TmpOptionRec.INSERT;
                                    END;
                                  END;
                                END;

               DataItemLink=Project No.=FIELD(Project No.),
                            House Model=FIELD(House Model),
                            Main Group=FIELD(Main Group),
                            Group=FIELD(Group),
                            Sub Group=FIELD(Sub Group),
                            Option=FIELD(Option) }

    { 5444;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               IF gOnDeleteCrossListRun OR (NOT GenerateInstallmentsBln) THEN
                                 CurrReport.BREAK;
                               IF NOT TmpOptionRec.FINDFIRST THEN
                                 CurrReport.BREAK;

                               COMMIT;
                               Window.OPEN(Text001 + '\' + Text002 + '\ \ \' + Text003);
                               Counter := 0;
                               NoOfLines := TmpOptionRec.COUNT;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number > 1 THEN BEGIN
                                    IF TmpOptionRec.NEXT = 0 THEN
                                      CurrReport.BREAK;
                                  END;

                                  Counter := Counter + 1;
                                  Window.UPDATE(1, TmpOptionRec.Option);
                                  Window.UPDATE(2, ROUND(Counter / NoOfLines * 10000,1));

                                  GenerateProjInstalmCU.FromOptionNotAsk(
                                    TmpOptionRec."Project No.", TmpOptionRec."Plot No.", TmpOptionRec."House Model",
                                    TmpOptionRec."Main Group", TmpOptionRec.Group, TmpOptionRec."Sub Group", TmpOptionRec.Option);
                                  COMMIT;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1210190000;2;Field  ;
                  CaptionML=[DEU=Raten erstellen;
                             ENU=Generate Installments;
                             NLD=Termijnen genereren;
                             NOR=Generer avdrag;
                             SVE=Generera avbetalningar];
                  SourceExpr=GenerateInstallmentsBln }

      { 1100485000;2;Field  ;
                  CaptionML=[DEU=Status;
                             ENU=Status;
                             NLD=Status;
                             NOR=Status;
                             SVE=Status];
                  OptionCaptionML=[DEU=Auftrag,Fakturierbar;
                                   ENU=Order,Chargeable;
                                   NLD=Opdracht,Factureerbaar;
                                   NOR=Ordre,Fakturerbar;
                                   SVE=Order,Debiterbar];
                  SourceExpr=NewStatus }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CrossListLineRec@1210190007 : Record 11012516;
      ProjOptionRec@1210190000 : Record 11012502;
      PlotOptionRec@1210190001 : Record 11012502;
      TmpOptionRec@1210190004 : TEMPORARY Record 11012502;
      JobsSetup@1100530000 : Record 315;
      BuyerMgtCU@1210190003 : Codeunit 11012500;
      GenerateProjInstalmCU@1210190006 : Codeunit 11012007;
      Window@1210190008 : Dialog;
      Level@1210190002 : 'Standard,Project,Plot';
      NewStatus@1100485000 : 'Order,Chargeable';
      gOnDeleteCrossListRun@1210190015 : Boolean;
      GenerateInstallmentsBln@1210190005 : Boolean;
      Text000@1210190009 : TextConst 'DEU=Baunummeroptionen aktualisieren;ENU=Update Plot Options;NLD=Bouwnummer opties bijwerken;NOR=Oppdater tegningsalternativer;SVE=Uppdatera Ritningsalternativ';
      Text001@1210190010 : TextConst 'DEU=Raten erstellen;ENU=Generate Installments;NLD=Termijnen aanmaken;NOR=Generer avdrag;SVE=Generera avbetalningar';
      Text002@1210190011 : TextConst 'DEU=Option  #1##########;ENU=Option  #1##########;NLD=Optie   #1##########;NOR=Alternativ  #1##########;SVE=Alternativ  #1##########';
      Text003@1210190012 : TextConst 'DEU=@2@@@@@@@@@@@@@@@@@@;ENU=@2@@@@@@@@@@@@@@@@@@;NLD=@2@@@@@@@@@@@@@@@@@@;NOR=@2@@@@@@@@@@@@@@@@@@';
      NoOfLines@1210190013 : Integer;
      Counter@1210190014 : Integer;

    PROCEDURE SetOnDeleteCrossListRun@1210190000();
    BEGIN
      gOnDeleteCrossListRun := TRUE;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

