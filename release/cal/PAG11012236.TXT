OBJECT Page 11012236 Estimate Quantity Sheet
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Auszugsblatt;
               ENU=Estimate Quantity Sheet;
               NLD=Uittrekstaat;
               NOR=Kalkyle Í antallsspesifikasjon;
               SVE=Kalkyl Í antalsspecifikation];
    SourceTable=Table11012186;
    PageType=List;
    AutoSplitKey=Yes;
    OnOpenPage=VAR
                 EstRec@1100409000 : Record 11012151;
               BEGIN
                 EstNo := GETFILTER("Estimate No.");
                 SubEstNo := GETFILTER("Sub-Estimate No.");
                 PrtGrp := GETFILTER("Part Group");
                 Prt := GETFILTER(Part);
                 EVALUATE(EstLino, GETFILTER("Estimate Line"));
                 RcpGrp := GETFILTER("Recipe Group");
                 Rcp := GETFILTER(Recipe);
                 EVALUATE(RcpLino, GETFILTER("Recipe Line"));

                 FILTERGROUP(2);
                 IF EstLino <> 0 THEN BEGIN
                   IF NOT EstRec.GET(EstNo) THEN BEGIN  //DP00686
                     EstNo := '';
                     SubEstNo := '';
                   END;
                   IF EstNo = '' THEN  //DP00686
                     SETFILTER("Estimate No.", '%1', '')
                   ELSE
                     SETRANGE("Estimate No.", GETRANGEMAX("Estimate No."));
                   IF SubEstNo = '' THEN  //DP00686
                     SETFILTER("Sub-Estimate No.", '%1', '')
                   ELSE
                     SETRANGE("Sub-Estimate No.", GETRANGEMAX("Sub-Estimate No."));
                   SETRANGE("Part Group", GETRANGEMAX("Part Group"));
                   SETRANGE(Part, GETRANGEMAX(Part));
                   SETRANGE("Estimate Line", GETRANGEMAX("Estimate Line"));
                 END;
                 IF RcpLino <> 0 THEN BEGIN
                   SETRANGE("Recipe Group", GETRANGEMAX("Recipe Group"));
                   SETRANGE(Recipe, GETRANGEMAX(Recipe));
                   SETRANGE("Recipe Line", GETRANGEMAX("Recipe Line"));
                 END;
                 FILTERGROUP(0);
               END;

    OnAfterGetRecord=BEGIN
                       IF Type <> Type::Subtotal THEN  //db, 02-09-14
                         "Sum Result":= 0;
                     END;

    OnNewRecord=BEGIN
                  IF EstLino <> 0 THEN BEGIN
                    "Estimate No." := EstNo;
                    "Sub-Estimate No." := SubEstNo;
                    "Part Group" := PrtGrp;
                    Part := Prt;
                    "Estimate Line" := EstLino;
                  END;
                  IF RcpLino <> 0 THEN BEGIN
                    "Recipe Group" := RcpGrp;
                    Recipe := Rcp;
                    "Recipe Line" := RcpLino;
                  END;
                END;

    OnInsertRecord=BEGIN
                     TESTFIELD("Row No.");
                   END;

    OnModifyRecord=BEGIN
                     TESTFIELD("Row No.");
                   END;

    OnDeleteRecord=BEGIN
                     RefreshTotalAfterDelete;
                   END;

    ActionList=ACTIONS
    {
      { 1100525009;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525008;1 ;ActionGroup;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unctions;
                                 NLD=F&uncties;
                                 NOR=Fu&nksjon;
                                 SVE=F&unktioner] }
      { 1100525006;2 ;Action    ;
                      ShortCutKey=Shift+F11;
                      CaptionML=[DEU=Auszugsblatt aktualisieren;
                                 ENU=Update Quantity Sheet;
                                 NLD=Uittrekstaat bijwerken];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Refresh;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CalculateResultSheet;  //db, 09-07-15
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190000;1;Group  ;
                GroupType=Repeater }

    { 1210190017;2;Field  ;
                SourceExpr="Row No.";
                Editable=FALSE }

    { 1210190029;2;Field  ;
                SourceExpr=Description }

    { 1210190019;2;Field  ;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100525001;2;Field  ;
                SourceExpr="Quantity Length";
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100525002;2;Field  ;
                SourceExpr="Quantity Height";
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1210190021;2;Field  ;
                SourceExpr=Length;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1210190023;2;Field  ;
                SourceExpr=Width;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1210190025;2;Field  ;
                SourceExpr=Height;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100525000;2;Field  ;
                SourceExpr=Weight;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100485000;2;Field  ;
                SourceExpr=Formula;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1210190027;2;Field  ;
                SourceExpr=Result }

    { 1100525003;2;Field  ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);  //db, 02-09-14
                           END;
                            }

    { 1100525004;2;Field  ;
                SourceExpr=Totaling;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);  //db, 02-09-14
                           END;
                            }

    { 1100525005;2;Field  ;
                SourceExpr="Sum Result" }

  }
  CODE
  {
    VAR
      EstNo@1210190007 : Code[20];
      SubEstNo@1210190006 : Code[20];
      PrtGrp@1210190005 : Code[20];
      Prt@1210190004 : Code[20];
      EstLino@1210190003 : Integer;
      RcpGrp@1210190002 : Code[20];
      Rcp@1210190001 : Code[20];
      RcpLino@1210190000 : Integer;

    PROCEDURE RecalcTotals@1210190000();
    BEGIN
      IF "Row No." = 0 THEN EXIT; //db, 17-11-14: C019160 (due to call function from OnValidate instead of OnAfterValidate in classic version)

      CurrPage.SAVERECORD;
      CalculateResultSheet;
      CurrPage.UPDATE(FALSE); //db, 17-11-14
    END;

    PROCEDURE RefreshTotalAfterDelete@1210190001();
    VAR
      QuanRec@1210190001 : Record 11012186;
      TotalFound@1210190000 : Boolean;
    BEGIN
      TotalFound := FALSE;
      IF RcpLino <> 0 THEN BEGIN
        IF QuanRec.GET(EstNo, SubEstNo, PrtGrp, Prt, EstLino, RcpGrp, Rcp, RcpLino, 0) THEN
          TotalFound := TRUE;
      END ELSE BEGIN
        IF QuanRec.GET(EstNo, SubEstNo, PrtGrp, Prt, EstLino, '', '', 0, 0) THEN
          TotalFound := TRUE;
      END;
      IF TotalFound = TRUE THEN BEGIN
        QuanRec.Result := QuanRec.Result - Result;
        QuanRec.MODIFY;
        CurrPage.UPDATE(FALSE); //db, 17-11-14
      END;
    END;

    BEGIN
    END.
  }
}

