OBJECT Table 11020563 Mapping XML Invoices
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Mapping XML Invoices;
               NOR=Mapping for XML-fakturaer;
               SVE=Kartl„ggning f”r XML-fakturor];
  }
  FIELDS
  {
    { 10  ;   ;Supplying GLN       ;Code20        ;TableRelation="ETIM Vendor - Local Mgt";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Supplying GLN;
                                                              NOR=Leverer GLN;
                                                              SVE=Levererar GLN];
                                                   NotBlank=Yes }
    { 20  ;   ;Data Type           ;Option        ;OnValidate=BEGIN
                                                                DetermineReceivingNo;
                                                                TestDataTypeSupplyingRelation;
                                                                TestDataTypeSequenceRelation;
                                                                TestDataTypeSuppFilterRelation;
                                                                TestDataTypeReceivTypeRelation;
                                                              END;

                                                   CaptionML=[ENU=Data Type;
                                                              NOR=Datatype;
                                                              SVE=Datatyp];
                                                   OptionCaptionML=[ENU=Cost Object,Cost Object Filter,Department,Department Filter,Project,Project Filter,Service Order,Service Order Filter,G/L Account,G/L Account Filter,Unit of Measure,Cost Object Cost Plus Line,Cost Object Cost Plus Line Filter;
                                                                    NOR=Kostnadsobjekt,Kostnadsobjektsfilter,Avdeling,Avdelingsfilter,Prosjekt,Prosjektfilter,Serviceordre,Serviceordrefilter,Hovedbokskonto,Hovedbokskontofilter,M†leenhet,Selvkostsrad for kostnadsobjekt,Selvkostsradfilter for kostnadsobjekt;
                                                                    SVE=Kostnadsobjekt,Kostnadsobjektsfilter,Avdelning,Avdelningsfilter,Projekt,Projektfilter,Serviceorder,Serviceorderfilter,Redovisningskonto,Redovisningskontofilter,Enhet,Sj„lvkostnadsrad f”r kostnadsobjekt,Sj„lvkostnadsradfilter f”r kostnadsobjekt];
                                                   OptionString=Cost Object,Cost Object Filter,Department,Department Filter,Project,Project Filter,Service Order,Service Order Filter,G/L Account,G/L Account Filter,Unit,Cost Object Cost Plus Line,Cost Object Cost Plus Line Filter }
    { 30  ;   ;Supplying No.       ;Code20        ;OnValidate=BEGIN
                                                                DetermineReceivingNo;
                                                                TestDataTypeSupplyingRelation;
                                                                IF "Supplying No." <> '' THEN
                                                                  CASE "Data Type" OF
                                                                    "Data Type"::"Cost Object Filter",
                                                                    "Data Type"::"Department Filter",
                                                                    "Data Type"::"Project Filter",
                                                                    "Data Type"::"Service Order Filter",
                                                                    "Data Type"::"G/L Account Filter",
                                                                    "Data Type"::"Cost Object Cost Plus Line Filter":
                                                                      ERROR(Text001, FIELDCAPTION("Supplying No."), FIELDCAPTION("Data Type"), "Data Type");
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Supplying No.;
                                                              NOR=Leveransenr.;
                                                              SVE=Leveransnr] }
    { 40  ;   ;Sequence No.        ;Integer       ;OnValidate=BEGIN
                                                                TestDataTypeSequenceRelation;
                                                                IF "Sequence No." > 0 THEN
                                                                  CASE "Data Type" OF
                                                                    "Data Type"::"Cost Object",
                                                                    "Data Type"::Department,
                                                                    "Data Type"::Project,
                                                                    "Data Type"::"Service Order",
                                                                    "Data Type"::"G/L Account",
                                                                    "Data Type"::Unit,
                                                                    "Data Type"::"Cost Object Cost Plus Line":
                                                                      ERROR(Text001, FIELDCAPTION("Sequence No."), FIELDCAPTION("Data Type"), "Data Type");
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Sequence No.;
                                                              NOR=Sekvensnummer;
                                                              SVE=Sekvensnr];
                                                   BlankZero=Yes }
    { 50  ;   ;Supplying No. Filter;Code250       ;OnValidate=BEGIN
                                                                TestDataTypeSuppFilterRelation;
                                                                IF "Supplying No. Filter" <> '' THEN
                                                                  CASE "Data Type" OF
                                                                    "Data Type"::"Cost Object",
                                                                    "Data Type"::Department,
                                                                    "Data Type"::Project,
                                                                    "Data Type"::"Service Order",
                                                                    "Data Type"::"G/L Account",
                                                                    "Data Type"::Unit,
                                                                    "Data Type"::"Cost Object Cost Plus Line":
                                                                      ERROR(Text001, FIELDCAPTION("Supplying No. Filter"), FIELDCAPTION("Data Type"), "Data Type");
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Supplying No. Filter;
                                                              NOR=Leveransenummerfilter;
                                                              SVE=Leveransnrfilter] }
    { 60  ;   ;Convert             ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT Convert THEN
                                                                  "Receiving No." := '';

                                                                DetermineReceivingNo;
                                                              END;

                                                   CaptionML=[ENU=Convert;
                                                              NOR=Konverter;
                                                              SVE=Konvertera] }
    { 70  ;   ;Receiving Type      ;Option        ;OnValidate=BEGIN
                                                                TestDataTypeReceivTypeRelation;
                                                                CASE "Data Type" OF
                                                                  "Data Type"::"Cost Object",
                                                                  "Data Type"::"Cost Object Filter",
                                                                  "Data Type"::Department,
                                                                  "Data Type"::"Department Filter",
                                                                  "Data Type"::"G/L Account",
                                                                  "Data Type"::"G/L Account Filter",
                                                                  "Data Type"::Unit:
                                                                    IF NOT ("Receiving Type" < "Receiving Type"::Project) THEN
                                                                      ERROR(Text001, FIELDCAPTION("Receiving Type"), FIELDCAPTION("Data Type"), "Data Type");
                                                                  "Data Type"::Project,
                                                                  "Data Type"::"Project Filter",
                                                                  "Data Type"::"Service Order",
                                                                  "Data Type"::"Service Order Filter":
                                                                    IF ("Receiving Type" <> "Receiving Type"::"Service Order") AND
                                                                       ("Receiving Type" <> "Receiving Type"::Project) THEN
                                                                      ERROR(Text001, FIELDCAPTION("Receiving Type"), FIELDCAPTION("Data Type"), "Data Type");
                                                                  "Data Type"::"Cost Object Cost Plus Line",
                                                                  "Data Type"::"Cost Object Cost Plus Line Filter":
                                                                    IF ("Receiving Type" <> "Receiving Type"::"Cost Object") THEN
                                                                      ERROR(Text001, FIELDCAPTION("Receiving Type"), FIELDCAPTION("Data Type"), "Data Type");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Receiving Type;
                                                              NOR=Mottakstype;
                                                              SVE=Mottagningstyp];
                                                   OptionCaptionML=[ENU=Not Appl,Project,Service Order,G/L Account,Cost Object,Department;
                                                                    NOR=Ikke utlignet,Prosjekt,Serviceordre,Hovedbokskonto,Kostnadsobjekt,Avdeling;
                                                                    SVE=Ej till„mpl,Projekt,Serviceorder,Redovisningskonto,Kostnadsobjekt,Avdelning];
                                                   OptionString=Not Appl,Project,Service Order,G/L Account,Cost Object,Department }
    { 80  ;   ;Receiving No.       ;Code20        ;TableRelation=IF (Receiving Type=CONST(Project)) Job
                                                                 ELSE IF (Receiving Type=CONST(Service Order)) "Service Order"
                                                                 ELSE IF (Receiving Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Data Type=CONST(Cost Object)) "Dimension Value".Code WHERE (Global Dimension No.=CONST(2))
                                                                 ELSE IF (Data Type=CONST(Department)) "Dimension Value".Code WHERE (Global Dimension No.=CONST(1))
                                                                 ELSE IF (Data Type=CONST(Unit)) "Unit of Measure";
                                                   OnValidate=BEGIN
                                                                IF "Receiving No." <> '' THEN
                                                                  TESTFIELD("Inherit Supplying No.", FALSE);
                                                                DetermineReceivingNo;
                                                              END;

                                                   CaptionML=[ENU=Receiving No.;
                                                              NOR=Mottaksnr.;
                                                              SVE=Inleveransnr] }
    { 90  ;   ;Inherit Supplying No.;Boolean      ;OnValidate=BEGIN
                                                                IF "Inherit Supplying No." THEN
                                                                  "Receiving No." := '';
                                                              END;

                                                   CaptionML=[ENU=Inherit Supplying No.;
                                                              NOR=Arv leveransenr;
                                                              SVE=Žrv leveransnr] }
  }
  KEYS
  {
    {    ;Supplying GLN,Data Type,Supplying No.,Sequence No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100525000 : TextConst 'ENU=%1 not allowed for %1 %2.;NOR=%1 er ikke tillatt for %1 %2.;SVE=%1 „r inte till†tet f”r %1 %2.';
      Text002@1100525003 : TextConst 'ENU=Receiving Nummer is not allowed in case Convert is set to NO;NOR=Mottaksnr er ikke tillatt hivs konvertering er satt til NEI;SVE=Mottagningsnummer „r inte till†tet om konvertering „r satt till NEJ';
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE DetermineReceivingNo@1100525000();
    BEGIN
      IF (NOT Convert) AND
         ("Receiving No." <> "Supplying No.") AND
         ("Receiving No." <> '') THEN
      BEGIN
        MESSAGE(Text002);
        "Receiving No." := '';
      END;
    END;

    PROCEDURE TestDataTypeSupplyingRelation@1100525001();
    BEGIN
      CASE "Data Type" OF
        "Data Type"::"Cost Object Filter",
        "Data Type"::"Department Filter",
        "Data Type"::"Project Filter",
        "Data Type"::"Service Order Filter",
        "Data Type"::"G/L Account Filter",
        "Data Type"::"Cost Object Cost Plus Line Filter":
          "Supplying No." := '';
      END;
    END;

    PROCEDURE TestDataTypeSequenceRelation@1100525002();
    BEGIN
      CASE "Data Type" OF
        "Data Type"::"Cost Object",
        "Data Type"::Department,
        "Data Type"::Project,
        "Data Type"::"Service Order",
        "Data Type"::"G/L Account",
        "Data Type"::Unit,
        "Data Type"::"Cost Object Cost Plus Line":
          "Sequence No." := 0;
      END;
    END;

    PROCEDURE TestDataTypeSuppFilterRelation@1100525003();
    BEGIN
      CASE "Data Type" OF
        "Data Type"::"Cost Object",
        "Data Type"::Department,
        "Data Type"::Project,
        "Data Type"::"Service Order",
        "Data Type"::"G/L Account",
        "Data Type"::Unit,
        "Data Type"::"Cost Object Cost Plus Line":
          "Supplying No. Filter" := '';
      END;
    END;

    PROCEDURE TestDataTypeReceivTypeRelation@1100525004();
    BEGIN
      CASE "Data Type" OF
        "Data Type"::"Cost Object",
        "Data Type"::"Cost Object Filter",
        "Data Type"::Department,
        "Data Type"::"Department Filter",
        "Data Type"::Unit:
          "Receiving Type" := "Receiving Type"::"Not Appl";
        "Data Type"::"Cost Object Cost Plus Line",
        "Data Type"::"Cost Object Cost Plus Line Filter":
          "Receiving Type" := "Receiving Type"::"Cost Object";
      END;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11020563) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11020563');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Mapping XML Invoices", "Receiving No.", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Receiving No."));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Receiving No.");
    END;

    BEGIN
    END.
  }
}

