OBJECT Codeunit 8615 Config. Progress Bar
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW111.00,4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Window@1001 : Dialog;
      Text000@1009 : TextConst 'ENU=#1##################\\;NOR=#1##################\\;SVE=#1##################\\';
      Text001@1003 : TextConst 'ENU=#2##################\;NOR=#2##################\;SVE=#2##################\';
      MaxCount@1000 : Integer;
      Text002@1002 : TextConst 'ENU=@3@@@@@@@@@@@@@@@@@@\;NOR=@3@@@@@@@@@@@@@@@@@@\;SVE=@3@@@@@@@@@@@@@@@@@@\';
      StepCount@1004 : Integer;
      Counter@1007 : Integer;
      LastWindowText@1005 : Text;
      WindowTextCount@1006 : Integer;

    [External]
    PROCEDURE Init@21(NewMaxCount@1000 : Integer;NewStepCount@1002 : Integer;WindowTitle@1001 : Text);
    BEGIN
      Counter := 0;
      MaxCount := NewMaxCount;
      IF NewStepCount = 0 THEN
        NewStepCount := 1;
      StepCount := NewStepCount;

      Window.OPEN(Text000 + Text001 + Text002);
      Window.UPDATE(1,FORMAT(WindowTitle));
      Window.UPDATE(3,0);
    END;

    [External]
    PROCEDURE Update@19(WindowText@1001 : Text);
    BEGIN
      IF WindowText <> '' THEN BEGIN
        Counter := Counter + 1;
        IF Counter MOD StepCount = 0 THEN BEGIN
          Window.UPDATE(2,FORMAT(WindowText));
          IF MaxCount <> 0 THEN
            Window.UPDATE(3,ROUND(Counter / MaxCount * 10000,1));
        END;
      END;
    END;

    [TryFunction]
    [External]
    PROCEDURE UpdateCount@22(WindowText@1001 : Text;Count@1002 : Integer);
    BEGIN
      IF WindowText <> '' THEN BEGIN
        IF LastWindowText = WindowText THEN
          WindowTextCount += 1
        ELSE
          WindowTextCount := 0;
        LastWindowText := WindowText;
        Window.UPDATE(2,PADSTR(WindowText + ' ',STRLEN(WindowText) + WindowTextCount,'.'));
        IF MaxCount <> 0 THEN
          Window.UPDATE(3,ROUND((MaxCount - Count) / MaxCount * 10000,1));
      END;
    END;

    [External]
    PROCEDURE Close@48();
    BEGIN
      Window.CLOSE;
    END;

    PROCEDURE SetCounter@1100525000(NewCounter@1100525000 : Integer);
    BEGIN
      //**4PS
      Counter := NewCounter - 1;
    END;

    BEGIN
    {
      4PS.n 15-03-2013:
        Added function to set counter from calling function. Needed if not every step of the counter should result in dialog update.
        Example: reading a file and counter represents File.POS
    }
    END.
  }
}

