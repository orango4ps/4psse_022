OBJECT Table 11072302 Service Process Field Assignm.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               CALCFIELDS("No. of Conditions");
               TESTFIELD("No. of Conditions", 0);
             END;

    CaptionML=ENU=Service Process Field Assignment;
    LookupPageID=Page11126787;
    DrillDownPageID=Page11126787;
  }
  FIELDS
  {
    { 5   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                CASE Type OF
                                                                  Type::"Service Call":
                                                                    VALIDATE("Table Type", "Table Type"::"Service Call");
                                                                END;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Type;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=ENU=Service Order,Service Call;
                                                   OptionString=Service Order,Service Call }
    { 10  ;   ;Process Structure Code;Code10      ;TableRelation="Service Process Structure".Code WHERE (Type=FIELD(Type));
                                                   CaptionML=ENU=Process Structure Code;
                                                   NotBlank=Yes }
    { 20  ;   ;Table Type          ;Option        ;OnValidate=BEGIN
                                                                CALCFIELDS("No. of Conditions");
                                                                TESTFIELD("No. of Conditions", 0);
                                                                IF "Table Type" = "Table Type"::"Service Call" THEN
                                                                  TESTFIELD(Type, Type::"Service Call")
                                                                ELSE
                                                                  TESTFIELD(Type, Type::"Service Order");
                                                                CASE "Table Type" OF
                                                                  "Table Type"::"Service Order":
                                                                    "Table No." := DATABASE::"Service Order";
                                                                  "Table Type"::"Work Order":
                                                                    "Table No." := DATABASE::"Work Order";
                                                                  "Table Type"::"Advice Order":
                                                                    "Table No." := DATABASE::"Advice Order Line";
                                                                  "Table Type"::"Service Order Extension":
                                                                    "Table No." := DATABASE::"Service Order Extension";
                                                                  "Table Type"::"Service Call":
                                                                    "Table No." := DATABASE::"Service Call";
                                                                END;
                                                                VALIDATE("Field No.", 0);
                                                              END;

                                                   CaptionML=[ENU=Table Type;
                                                              NOR=Tabelltype;
                                                              SVE=Tabelltyp];
                                                   OptionCaptionML=ENU=Service Order,Work Order,Advice Order,Service Order Extension,Service Call;
                                                   OptionString=Service Order,Work Order,Advice Order,Service Order Extension,Service Call }
    { 30  ;   ;Table No.           ;Integer       ;InitValue=11012823;
                                                   CaptionML=[ENU=Table No.;
                                                              NOR=Tabellnr;
                                                              SVE=Tabellnr];
                                                   Editable=No }
    { 35  ;   ;Seq. No.            ;Integer       ;CaptionML=[ENU=Seq. No.;
                                                              NOR=Sekv. nr;
                                                              SVE=Sekv. nr];
                                                   BlankZero=Yes }
    { 40  ;   ;Field No.           ;Integer       ;TableRelation=Field.No. WHERE (TableNo=FIELD(Table No.),
                                                                                  Class=CONST(Normal),
                                                                                  Type=FILTER(<>BLOB));
                                                   OnValidate=BEGIN
                                                                IF "Field No." <> 0 THEN BEGIN
                                                                  TESTFIELD("Insert Prohibited", FALSE);
                                                                  CALCFIELDS("Field Type", "Field Caption");
                                                                END;
                                                                ClearAllowedValuesFilter;
                                                              END;

                                                   OnLookup=VAR
                                                              Field@1100528600 : Record 2000000041;
                                                              FieldTableManagement@1100528601 : Codeunit 11012372;
                                                            BEGIN
                                                              Field.SETRANGE(TableNo, "Table No.");
                                                              Field.SETRANGE(Class, Field.Class::Normal);
                                                              Field.SETFILTER(Type, '<>%1', Field.Type::BLOB);
                                                              FieldTableManagement.SelectFieldFromList("Table No.", "Field No.", Field);
                                                              VALIDATE("Field No.");
                                                            END;

                                                   CaptionML=[ENU=Field No.;
                                                              NOR=Feltnr.;
                                                              SVE=F„ltnr];
                                                   BlankZero=Yes }
    { 50  ;   ;Value               ;Text80        ;OnValidate=BEGIN
                                                                TESTFIELD("Insert Prohibited", FALSE);
                                                                EvaluateValue;
                                                              END;

                                                   CaptionML=[ENU=Value;
                                                              NOR=Verdi;
                                                              SVE=V„rde] }
    { 60  ;   ;Value (Date)        ;Date          ;CaptionML=[ENU=Value (Date);
                                                              NOR=Verdi (Dato);
                                                              SVE=Valuteringsdag];
                                                   Editable=No }
    { 70  ;   ;Value (Value)       ;Decimal       ;CaptionML=[ENU=Value (Value);
                                                              NOR=Verdi (Verdi);
                                                              SVE=V„rde (v„rde)];
                                                   Editable=No }
    { 80  ;   ;Field Name          ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field.FieldName WHERE (TableNo=FIELD(Table No.),
                                                                                             No.=FIELD(Field No.)));
                                                   CaptionML=[ENU=Field Name;
                                                              NOR=Feltnavn;
                                                              SVE=F„ltnamn];
                                                   Editable=No }
    { 90  ;   ;Field Caption       ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=FIELD(Table No.),
                                                                                                   No.=FIELD(Field No.)));
                                                   CaptionML=[ENU=Field Caption;
                                                              NOR=Felttekst;
                                                              SVE=F„ltrubrik];
                                                   Editable=No }
    { 100 ;   ;Field Type          ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Type Name" WHERE (TableNo=FIELD(Table No.),
                                                                                               No.=FIELD(Field No.)));
                                                   CaptionML=[ENU=Field Type;
                                                              NOR=Felttype;
                                                              SVE=Field Type];
                                                   Editable=No }
    { 110 ;   ;Allowed Value Filter;Text250       ;OnValidate=BEGIN
                                                                EvaluateAllowedValuesFilter;
                                                              END;

                                                   CaptionML=ENU=Allowed Value Filter }
    { 120 ;   ;Unallowed Value Check;Option       ;CaptionML=ENU=Unallowed Value Check;
                                                   OptionCaptionML=ENU=Error,Warning;
                                                   OptionString=Error,Warning }
    { 130 ;   ;Value (Option)      ;Integer       ;CaptionML=ENU=Value (Option);
                                                   Editable=No }
    { 140 ;   ;Insert Prohibited   ;Boolean       ;OnValidate=BEGIN
                                                                IF "Insert Prohibited" THEN BEGIN
                                                                  TESTFIELD("Field No.", 0);
                                                                  TESTFIELD(Value, '');
                                                                  CALCFIELDS("No. of Conditions");
                                                                  TESTFIELD("No. of Conditions", 0);
                                                                  IF "Table Type" IN ["Table Type"::"Service Order", "Table Type"::"Service Order Extension"] THEN
                                                                    FIELDERROR("Table Type");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Insert Prohibited }
    { 150 ;   ;Allowed Value Filter (ENU);Text250 ;OnValidate=BEGIN
                                                                EvaluateAllowedValuesFilter;
                                                              END;

                                                   CaptionML=ENU=Allowed Value Filter (ENU);
                                                   Editable=No }
    { 160 ;   ;Value (Boolean)     ;Boolean       ;CaptionML=ENU=Value (Boolean);
                                                   Editable=No }
    { 170 ;   ;No. of Conditions   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("S.Process F.Assignm. Condition" WHERE (Type=FIELD(Type),
                                                                                                             Process Structure Code=FIELD(Process Structure Code),
                                                                                                             Field Assignm. Table No.=FIELD(Table No.),
                                                                                                             Field Assignm. Seq. No.=FIELD(Seq. No.)));
                                                   CaptionML=ENU=No. of Conditions;
                                                   Editable=No }
    { 200 ;   ;Condition Table Type OLD;Option    ;CaptionML=ENU=Condition Table Type;
                                                   OptionCaptionML=ENU=" ,Service Order,Service Order Extension,Service Call";
                                                   OptionString=[ ,Service Order,Service Order Extension,Service Call] }
    { 210 ;   ;Condition Table No. OLD;Integer    ;CaptionML=ENU=Condition Table No.;
                                                   Editable=No }
    { 220 ;   ;Condition Field No. OLD;Integer    ;TableRelation=Field.No. WHERE (TableNo=FIELD(Condition Table No. OLD),
                                                                                  Class=CONST(Normal),
                                                                                  Type=FILTER(<>BLOB));
                                                   CaptionML=ENU=Condition Field No.;
                                                   BlankZero=Yes }
    { 260 ;   ;Condition Field Filter OLD;Text250 ;CaptionML=ENU=Condition Field Filter }
    { 270 ;   ;Condition Field Filter ENU OLD;Text250;
                                                   CaptionML=ENU=Condition Field Filter }
  }
  KEYS
  {
    {    ;Type,Process Structure Code,Table No.,Seq. No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=Filter may cause problems in a multi language environment';
      Text001@1100528601 : TextConst 'ENU=Option ''%1'' is not valid. Valid options are: %2';

    LOCAL PROCEDURE EvaluateValue@1100528603();
    VAR
      Field@1100528602 : Record 2000000041;
      RecRef@1100528605 : RecordRef;
      OptionFieldTools@1100528606 : Codeunit 11012271;
      FieldRef@1100528604 : FieldRef;
      DummyDate@1100528600 : Date;
      DummyDecimal@1100528601 : Decimal;
      DummyInteger@1100528603 : Integer;
      DummyBoolean@1100528607 : Boolean;
    BEGIN
      IF NOT Field.GET("Table No.", "Field No.") THEN
        EXIT;
      RecRef.OPEN("Table No.");
      FieldRef := RecRef.FIELD("Field No.");
      "Value (Date)" := 0D;
      "Value (Value)" := 0;
      "Value (Option)" := 0;
      "Value (Boolean)" := FALSE;
      IF Value = '' THEN EXIT;
      CASE Field.Type OF
        Field.Type::Date:
          BEGIN
            EVALUATE(DummyDate, Value);
            Value := FORMAT(DummyDate);
            "Value (Date)" := DummyDate;
          END;
        Field.Type::Decimal:
          BEGIN
            EVALUATE(DummyDecimal, Value);
            Value := FORMAT(DummyDecimal, 0, 1);
            "Value (Value)" := DummyDecimal;
          END;
        Field.Type::Integer:
          BEGIN
            EVALUATE(DummyInteger, Value);
            Value := FORMAT(DummyInteger, 0, 1);
            "Value (Value)" := DummyInteger;
          END;
        Field.Type::Option:
          BEGIN
            TestIfValidOptionValue(FieldRef, Value);
            FieldRef.SETFILTER(Value);
            Value := FieldRef.GETFILTER;
            OptionFieldTools.ReadableOptionToOptionValue2(FieldRef, Value, "Value (Option)");
          END;
        Field.Type::Boolean:
          BEGIN
            EVALUATE(DummyBoolean, Value);
            Value := FORMAT(DummyBoolean);
            "Value (Boolean)" := DummyBoolean;
          END;
      END;
    END;

    LOCAL PROCEDURE TestIfValidOptionValue@1100528601(IFieldRef@1100528601 : FieldRef;VAR IValue@1100528600 : Text[80]);
    VAR
      TmpOptionTable@1100528605 : TEMPORARY Record 11020579;
      OptionString@1100528602 : Text;
      I@1100528603 : Integer;
      P@1100528604 : Integer;
    BEGIN
      OptionString := IFieldRef.OPTIONCAPTION;
      I := -1;
      P := STRPOS(OptionString, ',');
      WHILE OptionString <> '' DO BEGIN
        I += 1;
        TmpOptionTable."Key Code1" := FORMAT(I);
        IF P > 0 THEN
          TmpOptionTable.Text1 := COPYSTR(OptionString, 1, P - 1)
        ELSE
          TmpOptionTable.Text1 := OptionString;
        TmpOptionTable.Text2 := UPPERCASE(TmpOptionTable.Text1);
        TmpOptionTable.INSERT;
        IF P > 0 THEN BEGIN
          OptionString := COPYSTR(OptionString, P + 1);
          P := STRPOS(OptionString, ',');
        END ELSE
          OptionString := '';
      END;
      TmpOptionTable.SETFILTER(Text2, UPPERCASE(IValue));
      IF TmpOptionTable.ISEMPTY THEN
        TmpOptionTable.SETFILTER(Text2, UPPERCASE(IValue) + '*');
      IF NOT TmpOptionTable.FINDFIRST THEN
        ERROR(Text001, IValue, IFieldRef.OPTIONCAPTION)
      ELSE
        IValue := TmpOptionTable.Text1;
    END;

    LOCAL PROCEDURE EvaluateAllowedValuesFilter@1100528606();
    VAR
      Field@1100528602 : Record 2000000041;
      ServiceProcessManagement@1100528604 : Codeunit 11012883;
      RecRef@1100528601 : RecordRef;
      FieldRef@1100528600 : FieldRef;
      CurrentLanguageID@1100528603 : Integer;
    BEGIN
      IF "Allowed Value Filter" = '' THEN
        EXIT;
      IF NOT Field.GET("Table No.", "Field No.") THEN
        EXIT;
      IF Field.Type IN [Field.Type::Date, Field.Type::DateTime] THEN
        MESSAGE(Text000);

      RecRef.OPEN("Table No.");
      FieldRef := RecRef.FIELD("Field No.");

      FieldRef.SETFILTER("Allowed Value Filter");
      CurrentLanguageID := GLOBALLANGUAGE;
      IF Field.Type IN [Field.Type::Date, Field.Type::DateTime, Field.Type::Option, Field.Type::Boolean] THEN
        "Allowed Value Filter" := FieldRef.GETFILTER;
      CASE Field.Type OF
        Field.Type::Boolean,
        Field.Type::Option:
          BEGIN
            GLOBALLANGUAGE(1033);
            "Allowed Value Filter (ENU)" := FieldRef.GETFILTER;
            GLOBALLANGUAGE(CurrentLanguageID);
          END;
        Field.Type::Decimal:
          "Allowed Value Filter (ENU)" := ServiceProcessManagement.ConvertDecimalFilterToENU("Allowed Value Filter");
      END;
    END;

    LOCAL PROCEDURE ClearAllowedValuesFilter@1100528602();
    BEGIN
      "Allowed Value Filter" := '';
      "Allowed Value Filter (ENU)" := '';
    END;

    PROCEDURE DetermineSeqNo@1100528600();
    VAR
      ServiceProcessFieldAssignm@1100528600 : Record 11072302;
    BEGIN
      ServiceProcessFieldAssignm := Rec;
      ServiceProcessFieldAssignm.SETRECFILTER;
      ServiceProcessFieldAssignm.SETRANGE("Seq. No.");
      IF NOT ServiceProcessFieldAssignm.FINDLAST THEN
        "Seq. No." := 1
      ELSE
        "Seq. No." := ServiceProcessFieldAssignm."Seq. No." +1;
    END;

    BEGIN
    END.
  }
}

