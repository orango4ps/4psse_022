OBJECT Table 11012357 Site Mngmnt. Hours Employee
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    CaptionML=[ENU=Site Mngmnt. Hours Employee;
               NOR=Byggeledelsetimer, ansatt;
               SVE=Byggledning Timmar, anst„lld];
    LookupPageID=Page11072212;
    DrillDownPageID=Page11072212;
  }
  FIELDS
  {
    { 10  ;   ;Company             ;Text50        ;TableRelation=Company.Name;
                                                   CaptionML=[ENU=Company;
                                                              NOR=Selskap;
                                                              SVE=F”retag] }
    { 11  ;   ;Relation Code       ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Site Mngmnt. Hours Companies"."Relation Code" WHERE (Company=FIELD(Company)));
                                                   CaptionML=[ENU=Relation Code;
                                                              SVE=Kontaktnr];
                                                   Editable=No }
    { 20  ;   ;No.                 ;Code20        ;AltSearchField=Search Name;
                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr;
                                                              SVE=Nr] }
    { 30  ;   ;Full Name           ;Text100       ;CaptionML=[ENU=Full Name;
                                                              NOR=Fullstendig navn;
                                                              SVE=Fullst„ndigt namn];
                                                   Editable=No }
    { 40  ;   ;Norm Hours          ;Decimal       ;CaptionML=[ENU=Norm Hours;
                                                              NOR=Normtimer;
                                                              SVE=Norm (timmar)];
                                                   DecimalPlaces=0:3 }
    { 50  ;   ;Norm Days           ;Decimal       ;CaptionML=[ENU=Norm Days;
                                                              NOR=Normdager;
                                                              SVE=Normdagar];
                                                   DecimalPlaces=0:3 }
    { 60  ;   ;Trade Association   ;Code10        ;TableRelation="Trade Association".Code;
                                                   CaptionML=[ENU=Trade Association;
                                                              NOR=Bransjeorganisasjon;
                                                              SVE=Branschorganisation] }
    { 70  ;   ;External            ;Boolean       ;CaptionML=[ENU=External;
                                                              NOR=Eksternt;
                                                              SVE=Externt] }
    { 80  ;   ;Employer            ;Code20        ;TableRelation=IF (External=CONST(No)) Employer.Code
                                                                 ELSE IF (External=CONST(Yes)) Vendor.No.;
                                                   OnValidate=VAR
                                                                EmployerRecord@1100527101 : Record 11012013;
                                                                VendorRecord@1100525000 : Record 23;
                                                              BEGIN
                                                                IF Employer = '' THEN BEGIN
                                                                  "Employer Description" := '';
                                                                  EXIT;
                                                                END;

                                                                IF (Company <> COMPANYNAME) THEN BEGIN
                                                                  EmployerRecord.CHANGECOMPANY(Company);
                                                                  VendorRecord.CHANGECOMPANY(Company);
                                                                END;

                                                                IF NOT External THEN BEGIN
                                                                  EmployerRecord.CHANGECOMPANY(Company);
                                                                  IF EmployerRecord.GET(Employer) THEN
                                                                    "Employer Description" := EmployerRecord.Description;
                                                                END ELSE BEGIN
                                                                  VendorRecord.CHANGECOMPANY(Company);
                                                                  IF VendorRecord.GET(Employer) THEN
                                                                    "Employer Description" := VendorRecord.Name;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Employer;
                                                              NOR=Arbeidsgiver;
                                                              SVE=Arbetsgivare] }
    { 81  ;   ;Employer Description;Text100       ;CaptionML=ENU=Employer Description;
                                                   Editable=No }
    { 90  ;   ;Search Name         ;Code100       ;CaptionML=[ENU=Search Name;
                                                              NOR=S›kenavn;
                                                              SVE=S”knamn] }
    { 100 ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Global Dimensjon 2-kode;
                                                              SVE=Global dimension 2 kod];
                                                   CaptionClass='1,1,2' }
    { 110 ;   ;Territory Code      ;Code10        ;TableRelation=Territory.Code;
                                                   CaptionML=[ENU=Territory Code;
                                                              NOR=Distriktskode;
                                                              SVE=Distriktskod] }
    { 130 ;   ;Account Hours       ;Option        ;CaptionML=[ENU=Account Hours;
                                                              NOR=Kontotimer;
                                                              SVE=Kontotimmar];
                                                   OptionCaptionML=[ENU=Required according to Norm,Optional,Not allowed;
                                                                    NOR=Kreves i henhold til norm,Valgfri,Ikke tillatt;
                                                                    SVE=Kr„vs enligt Norm,Valfri,Inte till†ten];
                                                   OptionString=Required according to Norm,Optional,Not allowed }
    { 140 ;   ;CAO                 ;Code10        ;CaptionML=[ENU=CAO;
                                                              NOR=CAO;
                                                              SVE=KA];
                                                   Editable=No }
    { 150 ;   ;Show in Hours Portal;Boolean       ;CaptionML=[ENU=Show in Hours Portal;
                                                              NOR=Vis i timeportal;
                                                              SVE=Visa i timportal];
                                                   Editable=No }
    { 160 ;   ;Job Title           ;Text50        ;CaptionML=[ENU=Job Title;
                                                              NOR=Stilling;
                                                              SVE=Yrkestitel];
                                                   Editable=No }
    { 200 ;   ;Department Code     ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Avdelingskode;
                                                              SVE=Avdelningskod];
                                                   CaptionClass='1,1,1' }
    { 210 ;   ;Employment Date     ;Date          ;CaptionML=[ENU=Employment Date;
                                                              SVE=Anst„llningsdatum] }
    { 220 ;   ;Inactive Date       ;Date          ;CaptionML=[ENU=Inactive Date;
                                                              SVE=Inaktivitetsdatum] }
    { 230 ;   ;Termination Date    ;Date          ;CaptionML=[ENU=Termination Date;
                                                              SVE=Avg†ngsdatum] }
  }
  KEYS
  {
    {    ;Company,No.                             ;Clustered=Yes }
    {    ;No.                                      }
    {    ;Company,Search Name                      }
    {    ;Search Name                              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DPA_Management@1100525000 : Codeunit 11012783;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11012038) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11012359');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Hour Accounting", "Department Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Department Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Department Code");
    END;

    PROCEDURE GetEmployerName@1100525011(SupplyingCompany@1100525001 : Text[50];EmployeeNo@1100525002 : Code[20]) : Text[100];
    BEGIN
      IF (SupplyingCompany = '') OR (EmployeeNo = '') THEN
        EXIT('');
      IF GET(SupplyingCompany, EmployeeNo) THEN
        EXIT("Employer Description");
    END;

    BEGIN
    END.
  }
}

