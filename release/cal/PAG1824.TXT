OBJECT Page 1824 Jobs Setup Wizard
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Jobs Setup;
               NOR=Prosjektoppsett;
               SVE=Projektinst„llningar];
    SourceTable=Table315;
    DelayedInsert=Yes;
    PageType=NavigatePage;
    OnInit=BEGIN
             LoadTopBanners;
           END;

    OnOpenPage=BEGIN
                 INIT;

                 Step := Step::Welcome;
                 EnableControls;

                 IF ResourcesSetup.FINDFIRST THEN;
                 IF JobsSetup.FINDFIRST THEN;

                 IF NoSeries.GET(JobTxt) THEN
                   NoSeriesJob := JobTxt;
                 IF NoSeries.GET(ResourceTxt) THEN
                   NoSeriesResource := ResourceTxt;
                 IF NoSeries.GET(TimeSheetTxt) THEN
                   NoSeriesTimeSheet := TimeSheetTxt;
                 IF NoSeries.GET(JobWipTxt) THEN
                   NoSeriesJobWIP := JobWipTxt;
               END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 51      ;1   ;Action    ;
                      Name=ActionAddResource;
                      ShortCutKey=Ctrl+A;
                      CaptionML=[ENU=Add;
                                 NOR=Legg til;
                                 SVE=L„gg till];
                      ApplicationArea=#Basic,#Suite;
                      Visible=AddResourcesVisible;
                      Enabled=AddResourcesActionEnabled;
                      InFooterBar=Yes;
                      Image=Add;
                      OnAction=BEGIN
                                 AddResourceAction;
                               END;
                                }
      { 15      ;1   ;Action    ;
                      Name=ActionBack;
                      ShortCutKey=Ctrl+B;
                      CaptionML=[ENU=Back;
                                 NOR=Tilbake;
                                 SVE=Bak†t];
                      ApplicationArea=#Basic,#Suite;
                      Visible=NOT FinalStepVisible;
                      Enabled=BackActionEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(TRUE);
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=ActionNext;
                      ShortCutKey=Ctrl+N;
                      CaptionML=[ENU=Next;
                                 NOR=Neste;
                                 SVE=N„sta];
                      ApplicationArea=#Basic,#Suite;
                      Visible=NOT FinalStepVisible;
                      Enabled=NextActionEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextStep(FALSE);
                               END;
                                }
      { 44      ;1   ;Action    ;
                      Name=ActionCreateJob;
                      ShortCutKey=Ctrl+C;
                      CaptionML=[ENU=Create a new job;
                                 NOR=Oppretter et nytt prosjekt;
                                 SVE=Skapa ett nytt projekt];
                      ApplicationArea=#Basic,#Suite;
                      Visible=FinalStepVisible;
                      Enabled=CreateJobActionEnabled;
                      InFooterBar=Yes;
                      Image=Job;
                      OnAction=BEGIN
                                 CreateAJobAction;
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ActionFinish;
                      ShortCutKey=Ctrl+F;
                      CaptionML=[ENU=Finish;
                                 NOR=Fullf›r;
                                 SVE=Slutf”r];
                      ApplicationArea=#Basic,#Suite;
                      Visible=FinalStepVisible;
                      Enabled=FinishActionEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                ApplicationArea=#Jobs;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 98  ;1   ;Group     ;
                Visible=TopBannerVisible AND FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                ApplicationArea=#Jobs;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 5   ;1   ;Group     ;
                Visible=WelcomeStepVisible;
                GroupType=Group }

    { 3   ;2   ;Group     ;
                CaptionML=[ENU=Welcome to Jobs Setup;
                           NOR=Velkommen til prosjektoppsettet;
                           SVE=V„lkommen till Konfiguration av projekt];
                Visible=WelcomeStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=You can use jobs to track costs such as time sheets that you can then charge to your customer. Choose between many reports to track your job's profitability.;
                                     NOR=Du kan bruke prosjekter til † spore kostnader, for eksempel timelister som du deretter kan fakturere kunden din. Velg mellom mange rapporter for † spore prosjektets l›nnsomhet.;
                                     SVE=Du kan anv„nda projekt f”r att sp†ra kostnader som exempelvis tidrapporter som du sedan kan fakturera din kund f”r. V„lj mellan m†nga olika rapporter f”r att sp†ra ditt projekts l”nsamhet.] }

    { 28  ;2   ;Group     ;
                CaptionML=[ENU=Let's Go!;
                           NOR=La oss sette i gang!;
                           SVE=S„tt ig†ng!];
                GroupType=Group;
                InstructionalTextML=[ENU=Choose Next so you can start the setup.;
                                     NOR=Velg Neste slik at du kan starte oppsettet.;
                                     SVE=V„lj N„sta om du vill b”rja konfigurationen.] }

    { 25  ;1   ;Group     ;
                Visible=NoSeriesStepVisible;
                GroupType=Group }

    { 24  ;2   ;Group     ;
                Name=NumberSeriesHelpMessage;
                CaptionML=[ENU=Number series are used to group jobs with consecutive IDs. Please specify the number series that you want to use for the different types of job.;
                           NOR=Nummerserier brukes til † gruppere prosjekter med etterf›lgende ID-er. Angi nummerseriene som du vil bruke for de forskjellige prosjekttypene.;
                           SVE=Nummerserier anv„nds f”r att gruppera projekt med l”pande ID:n. Ange den nummerserie som du vill anv„nda f”r de olika projekttyperna.];
                Visible=NoSeriesStepVisible;
                GroupType=Group }

    { 32  ;3   ;Field     ;
                CaptionML=[ENU=Jobs No Series:;
                           NOR=Prosjektnr.serie:;
                           SVE=Projektnrserie:];
                ApplicationArea=#Jobs;
                SourceExpr=NoSeriesJob;
                TableRelation="No. Series".Code;
                OnValidate=BEGIN
                             IF NOT NoSeries.GET(NoSeriesJob) THEN BEGIN
                               MESSAGE(ValueNotExistMsg,JobsSetup.FIELDNAME("Job Nos."));
                               NoSeriesJob := ''
                             END
                           END;
                            }

    { 35  ;3   ;Field     ;
                CaptionML=[ENU=Resource No Series:;
                           NOR=Ressursnr.serie:;
                           SVE=Resursnrserie:];
                ApplicationArea=#Jobs;
                SourceExpr=NoSeriesResource;
                TableRelation="No. Series".Code;
                OnValidate=BEGIN
                             IF NOT NoSeries.GET(NoSeriesResource) THEN BEGIN
                               MESSAGE(ValueNotExistMsg,ResourcesSetup.FIELDNAME("Resource Nos."));
                               NoSeriesResource := ''
                             END
                           END;
                            }

    { 34  ;3   ;Field     ;
                CaptionML=[ENU=Time Sheet No Series:;
                           NOR=Nr.serie for timeliste:;
                           SVE=Tidrapportnrserie:];
                ApplicationArea=#Jobs;
                SourceExpr=NoSeriesTimeSheet;
                TableRelation="No. Series".Code;
                OnValidate=BEGIN
                             IF NOT NoSeries.GET(NoSeriesTimeSheet) THEN BEGIN
                               MESSAGE(ValueNotExistMsg,ResourcesSetup.FIELDNAME("Time Sheet Nos."));
                               NoSeriesTimeSheet := ''
                             END
                           END;
                            }

    { 33  ;3   ;Field     ;
                CaptionML=[ENU=Job-WIP No Series:;
                           NOR=Nr.serie for prosjekt-VIA:;
                           SVE=Projekt-PIA-nrserie:];
                ApplicationArea=#Jobs;
                SourceExpr=NoSeriesJobWIP;
                TableRelation="No. Series".Code;
                OnValidate=BEGIN
                             IF NOT NoSeries.GET(NoSeriesTimeSheet) THEN BEGIN
                               MESSAGE(ValueNotExistMsg,JobsSetup.FIELDNAME("Job WIP Nos."));
                               NoSeriesJobWIP := ''
                             END
                           END;
                            }

    { 7   ;1   ;Group     ;
                Visible=PostWIPStepVisible;
                GroupType=Group }

    { 6   ;2   ;Group     ;
                CaptionML=[ENU=Specify the default posting group and WIP method.;
                           NOR=Angi standard bokf›ringsgruppe og VIA-metode.;
                           SVE=Ange standardbokf”ringsmall och PIA-metod.];
                Visible=PostWIPStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Specify the default accounts that will be used to post to for jobs. The information is used when you create a new job, but you can change that for each job.;
                                     NOR=Angi standardkonti som det bokf›res til for prosjekter. Informasjonen brukes n†r du oppretter et nytt prosjekt, men du kan endre dette for hvert prosjekt.;
                                     SVE=Ange de standardkonton som ska anv„ndas vid publiceringar f”r projekt. Informationen anv„nds n„r du skapar ett nytt projekt, men du kan „ndra denna f”r varje projekt.] }

    { 17  ;3   ;Field     ;
                CaptionML=[ENU=Default Job Posting Group;
                           NOR=Standard bokf›ringsgruppe - prosjekt;
                           SVE=Standardprojektbokf”ringsmall];
                ApplicationArea=#Jobs;
                SourceExpr=DefaultJobPostingGroup;
                TableRelation="Job Posting Group".Code;
                OnValidate=VAR
                             JobPostingGroup@1000 : Record 11072006;
                           BEGIN
                             IF NOT JobPostingGroup.GET(DefaultJobPostingGroup) THEN BEGIN
                               MESSAGE(ValueNotExistMsg,JobsSetup.FIELDNAME("Default Job Posting Group"));
                               DefaultJobPostingGroup := ''
                             END
                           END;
                            }

    { 26  ;3   ;Group     ;
                Visible=PostWIPStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Specify the default method to be used for calculating work in process (WIP). If you do not want to calculate WIP, choose Completed Contract.;
                                     NOR=Angi standardmetoden som brukes til beregning av VIA (varer i arbeid). Hvis du ikke vil beregne VIA, velger du Ved avslutning.;
                                     SVE=Ange den standardmetod som ska anv„ndas f”r att ber„kna p†g†ende projekt (PIA). Om du inte vill ber„kna PIA v„ljer du Slutf”rt avtal.] }

    { 29  ;3   ;Field     ;
                CaptionML=[ENU=Default WIP Method;
                           NOR=Standard VIA-metode;
                           SVE=Standard-PIA-metod];
                ApplicationArea=#Jobs;
                SourceExpr=DefaultWIPMethod;
                TableRelation="Job WIP Method".Code;
                OnValidate=VAR
                             JobWIPMethod@1000 : Record 1006;
                           BEGIN
                             IF NOT JobWIPMethod.GET(DefaultWIPMethod) THEN BEGIN
                               MESSAGE(ValueNotExistMsg,JobsSetup.FIELDNAME("Default WIP Posting Method"));
                               DefaultWIPMethod := ''
                             END
                           END;
                            }

    { 16  ;1   ;Group     ;
                Visible=AskTimeSheetStepVisible;
                GroupType=Group }

    { 23  ;2   ;Group     ;
                CaptionML=[ENU=Do you want to set up time sheets?;
                           NOR=Vil du konfigurere timelister?;
                           SVE=Vill du konfigurera tidrapporter?];
                Visible=AskTimeSheetStepVisible;
                GroupType=Group }

    { 41  ;3   ;Group     ;
                Visible=AskTimeSheetStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU="To start setting up time sheets, choose Yes. First, you will set up at least one user and one resource. ";
                                     NOR="Velg Ja hvis du vil begynne † konfigurere timelister. Konfigurer f›rst mint ‚n bruker og ‚n ressurs. ";
                                     SVE="F”r att b”rja konfigurera tidrapporter, v„lj Ja. F”rst skapar du minst en anv„ndare och en resurs. "] }

    { 21  ;4   ;Field     ;
                Name=YesCheckbox;
                CaptionML=[ENU=Yes;
                           NOR=Ja;
                           SVE=Ja];
                ApplicationArea=#Jobs;
                SourceExpr=CreateTimesheetYes;
                OnValidate=BEGIN
                             IF CreateTimesheetYes THEN BEGIN
                               CreateTimesheetNo := FALSE;
                               Step := Step::ResourcesSetup;
                             END
                           END;
                            }

    { 42  ;3   ;Group     ;
                Visible=AskTimeSheetStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=To finish, choose No. You can set up time sheets later in the Time Sheet Setup window.;
                                     NOR=Velg Nei for † fullf›re. Du kan konfigurere timeregistrering senere i vinduet for oppsett av timelister.;
                                     SVE=F”r att avsluta v„ljer du Nej. Du kan konfigurera tidrapporter senare i konfigurationsf”nstret f”r tidrapporter.] }

    { 22  ;4   ;Field     ;
                Name=NoCheckbox;
                CaptionML=[ENU=No;
                           NOR=Nei;
                           SVE=Nej];
                ApplicationArea=#Jobs;
                SourceExpr=CreateTimesheetNo;
                OnValidate=BEGIN
                             IF CreateTimesheetNo THEN BEGIN
                               CreateTimesheetYes := FALSE;
                               Step := Step::Finish;
                             END
                           END;
                            }

    { 19  ;1   ;Group     ;
                Visible=ResourcesSetupStepVisible;
                GroupType=Group }

    { 18  ;2   ;Group     ;
                CaptionML=[ENU=Set up time sheet options;
                           NOR=Konfigurer alternativer for timeliste;
                           SVE=Konfigurera alternativ f”r tidrapporter];
                Visible=ResourcesSetupStepVisible;
                GroupType=Group }

    { 13  ;3   ;Field     ;
                Name=FirstWeekday;
                CaptionML=[ENU=Time Sheet First Weekday;
                           NOR=F›rste ukedag i timeliste;
                           SVE=F”rsta veckodag i tidrapport];
                OptionCaptionML=[ENU=Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday;
                                 NOR=Mandag,Tirsdag,Onsdag,Torsdag,Fredag,L›rdag,S›ndag;
                                 SVE=M†ndag,Tisdag,Onsdag,Torsdag,Fredag,L”rdag,S”ndag];
                ApplicationArea=#Jobs;
                SourceExpr=FirstWeekday }

    { 36  ;3   ;Field     ;
                Name=SuiteJobApproval;
                CaptionML=[ENU=Time Sheet by Job Approval;
                           NOR=Timeliste etter jobbgodkjenning;
                           SVE=Tidrapport per projektgodk„nnande];
                OptionCaptionML=[ENU=Time Sheet Approver User ID,Machine Only,Person Responsible;
                                 NOR=Bruker-ID for godkjenner av timeliste,Bare maskin,Ansvarlig person;
                                 SVE=Anv„ndar-ID f”r tidrapportgodk„nnare,Endast maskin,Ansvarig person];
                ApplicationArea=#Jobs;
                SourceExpr=SuiteJobApproval }

    { 2   ;2   ;Group     ;
                Visible=ResourcesSetupStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=The time sheet approver that is specified for the resource will approve time sheets.;
                                     NOR=Godkjenner av timelister som er angitt for ressursen, vil godkjenne timelister.;
                                     SVE=Den tidrapportgodk„nnare som har angetts f”r resursen godk„nner tidrapporterna.] }

    { 30  ;2   ;Group     ;
                Visible=ResourcesSetupStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Machine Only - For machine time sheets that are linked to a job, the responsible person for the job will approve the time sheets. For machine time sheets that are linked to a resource, the time sheets are approved by the specified time sheet approver.;
                                     NOR=Bare maskin - For maskintimelister som er koblet til et prosjekt, vil ansvarlig person for prosjektet godkjenne timelistene. For maskintimelister som er koblet til en ressurs, vil angitt godkjenner av timeliste godkjenne timelistene.;
                                     SVE=Endast maskin - F”r maskinkodrapporter som kopplats till ett projekt kommer den projektansvarige att godk„nna tidrapporterna. F”r maskintidrapporter som kopplats till en resurs godk„nns tidrapporterna av angiven tidrapportgodk„nnare.] }

    { 9   ;2   ;Group     ;
                Visible=ResourcesSetupStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=The person who is specified as the responsible person for the job will approve time sheets.;
                                     NOR=Personen som er angitt som ansvarlig person for prosjektet vil godkjenne timelister.;
                                     SVE=Den person som angetts som ansvarig f”r projektet godk„nner tidrapporterna.] }

    { 20  ;1   ;Group     ;
                Name=AddUsers;
                CaptionML=[ENU=Add Users;
                           NOR=Legg til brukere;
                           SVE=L„gg till anv„ndare];
                Visible=AddUsersVisible;
                GroupType=Group }

    { 39  ;2   ;Group     ;
                CaptionML=[ENU=Set up Users;
                           NOR=Konfigurer brukere;
                           SVE=Konfigurera anv„ndare];
                Visible=AddUsersVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Add one or more users that you want to be able to create or approve time sheets. You can add more later.;
                                     NOR=Legg til ‚n eller flere brukere som du vil skal kunne opprette eller godkjenne timelister. Du kan legge til flere senere.;
                                     SVE=L„gg till en eller flera anv„ndare som du vill ska kunna skapa eller godk„nna tidrapporter. Du kan l„gga till fler senare.] }

    { 45  ;3   ;Part      ;
                CaptionML=[ENU=Add one or more users;
                           NOR=Legg til ‚n eller flere brukere;
                           SVE=L„gg till en eller flera anv„ndare];
                ApplicationArea=#Jobs;
                PagePartID=Page1825;
                PartType=Page }

    { 31  ;1   ;Group     ;
                Name=AddResources;
                CaptionML=[ENU=Add Resources;
                           NOR=Legg til ressurser;
                           SVE=L„gg till resurser];
                Visible=AddResourcesVisible;
                GroupType=Group }

    { 40  ;2   ;Group     ;
                CaptionML=[ENU=Set up Resources;
                           NOR=Konfigurer ressurser;
                           SVE=Konfigurera resurser];
                Visible=AddResourcesVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Add one or more resources that you want to be able to use time sheets. Assign time sheet approvers as well. You can add more later. Click Next to continue after adding resources.;
                                     NOR=Legg til ‚n eller flere ressurser som du vil skal kunne bruke timelister. Tilordne ogs† godkjennere av timelister. Du kan legge til flere senere. Klikk Neste for † fortsette etter † ha lagt til ressurser.;
                                     SVE=L„gg till en eller fler resurser som du vill ska kunna anv„nda tidrapporter. Tilldela „ven tidrapportgodk„nnare. Du kan l„gga till fler senare. Klicka p† N„sta f”r att forts„tta n„r du har lagt till resurserna.] }

    { 27  ;3   ;Field     ;
                Name=ResourceNo;
                CaptionML=[ENU=Resource No:;
                           NOR=Ressursnr.:;
                           SVE=Resursnr:];
                ApplicationArea=#Jobs;
                SourceExpr=ResourceNo;
                TableRelation=Resource.No. }

    { 47  ;3   ;Field     ;
                Name=ResourceName;
                CaptionML=[ENU=Name:;
                           NOR=Navn:;
                           SVE=Namn:];
                ApplicationArea=#Jobs;
                SourceExpr=ResourceName }

    { 52  ;3   ;Field     ;
                Name=ResourceType;
                CaptionML=[ENU=Type:;
                           NOR=Type:;
                           SVE=Typ:];
                OptionCaptionML=[ENU=Person,Machine;
                                 NOR=Person,Maskin;
                                 SVE=Person,Maskin];
                ApplicationArea=#Jobs;
                SourceExpr=ResourceType }

    { 48  ;3   ;Field     ;
                Name=ResourceUseTimeSheet;
                CaptionML=[ENU=Use Time Sheets:;
                           NOR=Bruk timelister:;
                           SVE=Anv„nd tidrapporter:];
                ApplicationArea=#Jobs;
                SourceExpr=ResourceUseTimeSheet }

    { 49  ;3   ;Field     ;
                Name=ResourceTimeSheetOwnerID;
                CaptionML=[ENU=Time Sheet Owner User ID:;
                           NOR=Bruker-ID for eier av timeliste:;
                           SVE=Anv„ndar-ID f”r tidrapportens „gare:];
                ApplicationArea=#Jobs;
                SourceExpr=ResourceTimeSheetOwnerID;
                TableRelation="User Setup" }

    { 50  ;3   ;Field     ;
                Name=ResourceTimeSheetApproverID;
                CaptionML=[ENU=Time Sheet Approver User ID:;
                           NOR=Bruker-ID for godkjenner av timeliste:;
                           SVE=Anv„ndar-ID f”r tidrapportens godk„nnare:];
                ApplicationArea=#Jobs;
                SourceExpr=ResourceTimeSheetApproverID;
                TableRelation="User Setup" }

    { 38  ;1   ;Group     ;
                Visible=DoTimeSheetStepVisible;
                GroupType=Group }

    { 37  ;2   ;Group     ;
                CaptionML=[ENU=Create Time Sheets;
                           NOR=Opprett timelister;
                           SVE=Skapa tidrapporter];
                Visible=DoTimeSheetStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Click Next to create time sheets.;
                                     NOR=Klikk Neste for † opprette timelister.;
                                     SVE=Klicka p† N„sta f”r att skapa tidrapporter.] }

    { 8   ;1   ;Group     ;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 12  ;2   ;Group     ;
                CaptionML=[ENU=That's it!;
                           NOR=Det er alt!;
                           SVE=Klart!];
                GroupType=Group }

    { 4   ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=You have now set things up so you can start creating jobs.;
                                     NOR=Du kar n† konfigurert det slik at du kan begynne † opprette prosjekter.;
                                     SVE=Du har nu konfigurerat det som beh”vs f”r att b”rja skapa projekt.] }

    { 43  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=Let's get started with your first job!;
                                     NOR=La oss komme i gang med ditt f›rste prosjekt!;
                                     SVE=Nu s„tter vi ig†ng med ditt f”rsta projekt!] }

    { 46  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=Click Finish then refresh your role center to see the Jobs activities.;
                                     NOR=Klikk Fullf›r og oppdater deretter rollesenteret for † se prosjektaktivitetene.;
                                     SVE=Klicka p† Avsluta och uppdatera sedan ditt rollcenter f”r att se projektaktiviteterna.] }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1040 : Record 9400;
      MediaRepositoryDone@1041 : Record 9400;
      MediaResourcesStandard@1049 : Record 2000000182;
      MediaResourcesDone@1048 : Record 2000000182;
      JobsSetup@1030 : Record 315;
      ResourcesSetup@1032 : Record 314;
      Resource@1038 : Record 156;
      NoSeries@1047 : Record 308;
      ClientTypeManagement@1050 : Codeunit 4030;
      NoSeriesJob@1001 : Code[10];
      NoSeriesResource@1003 : Code[10];
      NoSeriesTimeSheet@1004 : Code[10];
      NoSeriesJobWIP@1005 : Code[10];
      Step@1012 : 'Welcome,NoSeries,PostWIP,AskTimeSheet,ResourcesSetup,Users,Resources,DoTimeSheet,Finish';
      TopBannerVisible@1042 : Boolean;
      AddUsersVisible@1027 : Boolean;
      AddResourcesVisible@1031 : Boolean;
      WelcomeStepVisible@1000 : Boolean;
      NoSeriesStepVisible@1007 : Boolean;
      PostWIPStepVisible@1008 : Boolean;
      AskTimeSheetStepVisible@1011 : Boolean;
      ResourcesSetupStepVisible@1016 : Boolean;
      DoTimeSheetStepVisible@1017 : Boolean;
      FinalStepVisible@1015 : Boolean;
      FinishActionEnabled@1009 : Boolean;
      CreateJobActionEnabled@1026 : Boolean;
      BackActionEnabled@1013 : Boolean;
      NextActionEnabled@1014 : Boolean;
      AddResourcesActionEnabled@1043 : Boolean;
      CreateTimesheetYes@1022 : Boolean;
      CreateTimesheetNo@1021 : Boolean;
      SelectYesNoMsg@1025 : TextConst 'ENU=To continue, specify if you want to set up time sheets.;NOR=Hvis du vil fortsette, angir du om du vil konfigurere timelister.;SVE=Ange om du vill konfigurera tidrapporter f”r att forts„tta.';
      DefaultJobPostingGroup@1010 : Code[20];
      DefaultWIPMethod@1018 : Code[20];
      SelectGroupAndBatchMsg@1020 : TextConst 'ENU=To continue, specify a default job posting group and WIP method.;NOR=Hvis du vil fortsette, angir du en standard prosjektbokf›ringsgruppe og VIA-metode.;SVE=Ange en standardbokf”ringsmall och PIA-metod om du vill forts„tta.';
      ModifyRecord@1023 : Boolean;
      FirstWeekday@1019 : Option;
      SuiteJobApproval@1028 : Option;
      EnterResourceNoMsg@1039 : TextConst 'ENU=To add this resource, specify a resource number.;NOR=Hvis du vil legge til denne ressursen, angir du et ressursnummer.;SVE=Ange ett resursnummer f”r att l„gga till denna resurs.';
      ExistingResourceMsg@1046 : TextConst 'ENU=This resource number already exists. To continue, specify a new resource number.;NOR=Dette ressursnummeret finnes allerede. Hvis du vil fortsette, angir du et nytt ressursnummer.;SVE=Detta resursnummer finns redan. Ange ett nytt resursnummer f”r att forts„tta.';
      JobTxt@1002 : TextConst '@@@={Locked};ENU=JOB;NOR=JOB;SVE=JOB';
      ResourceTxt@1006 : TextConst '@@@={Locked};ENU=RES;NOR=RES;SVE=RES';
      TimeSheetTxt@1024 : TextConst 'ENU=TS;NOR=ES;SVE=DS';
      JobWipTxt@1029 : TextConst '@@@={Locked};ENU=JOB-WIP;NOR=JOB-WIP;SVE=JOB-WIP';
      ResourceNo@1033 : Code[20];
      ResourceName@1034 : Text[100];
      ResourceUseTimeSheet@1035 : Boolean;
      ResourceTimeSheetOwnerID@1036 : Code[50];
      ResourceTimeSheetApproverID@1037 : Code[50];
      ResourceType@1044 : 'Person,Machine';
      ValueNotExistMsg@1045 : TextConst '@@@="%1=field name";ENU=The value for field %1 does not exist. To continue, select an existing value from the lookup.;NOR=Verdien for feltet %1 finnes ikke. Hvis du vil fortsette, velger du en eksisterende verdi fra oppslaget.;SVE=V„rdet f”r f„ltet %1 finns inte. V„lj ett befintligt v„rde fr†n s”kningen.';

    LOCAL PROCEDURE EnableControls@2();
    BEGIN
      IF Step = Step::AskTimeSheet THEN
        IF (DefaultJobPostingGroup = '') OR (DefaultWIPMethod = '') THEN BEGIN
          MESSAGE(SelectGroupAndBatchMsg);
          Step := Step - 1;
          EXIT;
        END;

      IF Step = Step::ResourcesSetup THEN
        IF (NOT CreateTimesheetNo) AND (NOT CreateTimesheetYes) THEN BEGIN
          MESSAGE(SelectYesNoMsg);
          Step := Step - 1;
          EXIT;
        END;

      ResetControls;

      CASE Step OF
        Step::Welcome:
          ShowWelcomeStep;
        Step::Users:
          ShowAddUsersStep;
        Step::Resources:
          ShowAddResourcesStep;
        Step::NoSeries:
          ShowNoSeriesStep;
        Step::PostWIP:
          ShowPostWIPStep;
        Step::AskTimeSheet:
          ShowAskTimeSheetStep;
        Step::ResourcesSetup:
          ShowResourcesSetupStep;
        Step::DoTimeSheet:
          ShowDoTimeSheetStep;
        Step::Finish:
          ShowFinalStep;
      END;
    END;

    LOCAL PROCEDURE FinishAction@12();
    BEGIN
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE NextStep@41(Backwards@1000 : Boolean);
    BEGIN
      IF Backwards THEN
        Step := Step - 1
      ELSE
        IF Step <> Step::Finish THEN
          Step := Step + 1;

      EnableControls;
    END;

    LOCAL PROCEDURE AddResourceAction@15();
    BEGIN
      IF ResourceNo = '' THEN
        MESSAGE(EnterResourceNoMsg)
      ELSE BEGIN
        WITH Resource DO
          IF NOT GET(ResourceNo) THEN BEGIN
            INIT;
            "No." := ResourceNo;
            Name := ResourceName;
            "Search Name" := FORMAT(ResourceName);
            Type := ResourceType;
            "Use Time Sheet" := ResourceUseTimeSheet;
            "Time Sheet Owner User ID" := ResourceTimeSheetOwnerID;
            "Time Sheet Approver User ID" := ResourceTimeSheetApproverID;
            INSERT;
            ResourceNo := '';
            ResourceName := '';
            ResourceType := 0;
            ResourceUseTimeSheet := TRUE;
            ResourceTimeSheetOwnerID := '';
            ResourceTimeSheetApproverID := '';
          END ELSE
            MESSAGE(ExistingResourceMsg)
      END;
    END;

    LOCAL PROCEDURE ShowAddUsersStep@9();
    BEGIN
      SetAllStepsFalse;
      AddUsersVisible := TRUE;
      BackActionEnabled := TRUE;
      FinishActionEnabled := FALSE;
      AddResourcesActionEnabled := FALSE;
      CreateJobActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowAddResourcesStep@10();
    VAR
      NoSeriesManagement@1000 : Codeunit 396;
    BEGIN
      SetAllStepsFalse;
      AddResourcesVisible := TRUE;
      FinishActionEnabled := FALSE;
      CreateJobActionEnabled := FALSE;

      ResourceUseTimeSheet := TRUE;

      IF (NoSeriesResource <> '') AND (ResourceNo = '') THEN // Number series for Resource is set, auto-populate the Resource number
        ResourceNo := NoSeriesManagement.GetNextNo(NoSeriesResource,0D,TRUE);
    END;

    LOCAL PROCEDURE ShowWelcomeStep@3();
    BEGIN
      SetAllStepsFalse;
      WelcomeStepVisible := TRUE;
      FinishActionEnabled := FALSE;
      BackActionEnabled := FALSE;
      AddResourcesActionEnabled := FALSE;
      CreateJobActionEnabled := FALSE;
      CreateTimesheetYes := TRUE;
      CreateTimesheetNo := FALSE;
    END;

    LOCAL PROCEDURE ShowNoSeriesStep@4();
    BEGIN
      SetAllStepsFalse;
      NoSeriesStepVisible := TRUE;
      FinishActionEnabled := FALSE;
      AddResourcesActionEnabled := FALSE;
      CreateJobActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowPostWIPStep@5();
    BEGIN
      SetAllStepsFalse;
      PostWIPStepVisible := TRUE;
      FinishActionEnabled := FALSE;
      AddResourcesActionEnabled := FALSE;
      CreateJobActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowAskTimeSheetStep@6();
    BEGIN
      SetAllStepsFalse;
      AskTimeSheetStepVisible := TRUE;
      FinishActionEnabled := FALSE;
      AddResourcesActionEnabled := FALSE;
      CreateJobActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowResourcesSetupStep@7();
    BEGIN
      SetAllStepsFalse;
      ResourcesSetupStepVisible := TRUE;
      FinishActionEnabled := FALSE;
      AddResourcesActionEnabled := FALSE;
      CreateJobActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowDoTimeSheetStep@8();
    BEGIN
      SaveResourceInformation;
      SaveJobsSetup;

      COMMIT;

      SetAllStepsFalse;
      FinalStepVisible := TRUE;
      NextActionEnabled := FALSE;
      AddResourcesActionEnabled := FALSE;

      REPORT.RUN(REPORT::"Create Time Sheets");
    END;

    LOCAL PROCEDURE ShowFinalStep@34();
    BEGIN
      SetAllStepsFalse;
      FinalStepVisible := TRUE;
      BackActionEnabled := FALSE;
      NextActionEnabled := FALSE;
      AddResourcesActionEnabled := FALSE;

      IF CreateTimesheetNo THEN BEGIN
        SaveResourceInformation;
        SaveJobsSetup;
      END;
    END;

    LOCAL PROCEDURE ResetControls@1();
    BEGIN
      FinishActionEnabled := TRUE;
      BackActionEnabled := TRUE;
      NextActionEnabled := TRUE;
      AddResourcesActionEnabled := TRUE;
      CreateJobActionEnabled := TRUE;

      SetAllStepsFalse;
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      IF MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType)) AND
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType))
      THEN
        IF MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") AND
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        THEN
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    LOCAL PROCEDURE SaveJobsSetup@13();
    BEGIN
      WITH JobsSetup DO
        IF NOT FINDFIRST THEN BEGIN
          INIT;
          "Job Nos." := NoSeriesJob;
          "Job WIP Nos." := NoSeriesJobWIP;
          "Default Job Posting Group" := DefaultJobPostingGroup;
          "Default WIP Method" := DefaultWIPMethod;
          INSERT;
        END ELSE BEGIN
          GET;
          IF "Job Nos." <> NoSeriesJob THEN BEGIN
            ModifyRecord := TRUE;
            "Job Nos." := NoSeriesJob;
          END;

          IF "Job WIP Nos." <> NoSeriesJobWIP THEN BEGIN
            ModifyRecord := TRUE;
            "Job WIP Nos." := NoSeriesJobWIP;
          END;

          IF "Default Job Posting Group" <> DefaultJobPostingGroup THEN BEGIN
            ModifyRecord := TRUE;
            "Default Job Posting Group" := DefaultJobPostingGroup;
          END;

          IF "Default WIP Method" <> DefaultWIPMethod THEN BEGIN
            ModifyRecord := TRUE;
            "Default WIP Method" := DefaultWIPMethod;
          END;

          IF ModifyRecord = TRUE THEN
            MODIFY;
        END;
    END;

    LOCAL PROCEDURE SaveResourceInformation@14();
    BEGIN
      SaveNoSeriesResourceTimeSheet;
      WITH ResourcesSetup DO
        IF CreateTimesheetYes THEN
          IF NOT FINDFIRST THEN BEGIN
            INIT;
            "Time Sheet First Weekday" := FirstWeekday;
            "Time Sheet by Job Approval" := SuiteJobApproval;
            INSERT;
          END ELSE BEGIN
            GET;
            IF "Time Sheet First Weekday" <> FirstWeekday THEN BEGIN
              ModifyRecord := TRUE;
              "Time Sheet First Weekday" := FirstWeekday;
            END;

            IF "Time Sheet by Job Approval" <> SuiteJobApproval THEN BEGIN
              ModifyRecord := TRUE;
              "Time Sheet by Job Approval" := SuiteJobApproval;
            END;

            IF ModifyRecord = TRUE THEN
              MODIFY;
          END
    END;

    LOCAL PROCEDURE CreateAJobAction@29();
    BEGIN
      PAGE.RUN(PAGE::"Job Card");
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE SetAllStepsFalse@11();
    BEGIN
      WelcomeStepVisible := FALSE;
      AddUsersVisible := FALSE;
      AddResourcesVisible := FALSE;
      NoSeriesStepVisible := FALSE;
      PostWIPStepVisible := FALSE;
      AskTimeSheetStepVisible := FALSE;
      ResourcesSetupStepVisible := FALSE;
      DoTimeSheetStepVisible := FALSE;
      FinalStepVisible := FALSE;
    END;

    LOCAL PROCEDURE SaveNoSeriesResourceTimeSheet@17();
    BEGIN
      WITH ResourcesSetup DO
        IF NOT FINDFIRST THEN BEGIN
          INIT;
          "Resource Nos." := NoSeriesResource;
          "Time Sheet Nos." := NoSeriesTimeSheet;
          INSERT;
        END ELSE BEGIN
          GET;
          IF "Resource Nos." <> NoSeriesResource THEN BEGIN
            ModifyRecord := TRUE;
            "Resource Nos." := NoSeriesResource;
          END;

          IF "Time Sheet Nos." <> NoSeriesTimeSheet THEN BEGIN
            ModifyRecord := TRUE;
            "Time Sheet Nos." := NoSeriesTimeSheet;
          END;

          IF ModifyRecord = TRUE THEN
            MODIFY;
        END;
    END;

    BEGIN
    END.
  }
}

