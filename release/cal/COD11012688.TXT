OBJECT Codeunit 11012688 Gen. Checklist Link Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            InsertPossibleLinks();
          END;

  }
  CODE
  {
    VAR
      Text001@1100526000 : TextConst 'DEU=%1: %2;ENU=%1: %2;NLD=%1: %2;SVE=%1 %2';

    LOCAL PROCEDURE InsertPossibleLinks@1100525137();
    VAR
      PossibleDocumentLink@1100525000 : Record 11012748;
    BEGIN
      InsertPossibleLink(DATABASE::Job, 0, 0);
      InsertPossibleLink(DATABASE::Plot, 0, 0);
      InsertPossibleLink(DATABASE::"Project Element", 0, 0);
      InsertPossibleLink(DATABASE::"Gen. Checklist Copy Line", 0, 0);
      InsertPossibleLink(DATABASE::"Gen. Issue", 0, 0);
    END;

    LOCAL PROCEDURE InsertPossibleLink@1100525139(TableNo@1100525001 : Integer;CaptionOfObjectType@1100530000 : Integer;CaptionOfObjectID@1100530001 : Integer);
    VAR
      GenChecklistPossibleLink@1100525000 : Record 11125906;
    BEGIN
      IF (CaptionOfObjectType = 0) AND (CaptionOfObjectID = 0) THEN BEGIN
        CaptionOfObjectType := GenChecklistPossibleLink."Caption Of Object Type"::Table;
        CaptionOfObjectID := TableNo;
      END;

      IF GenChecklistPossibleLink.GET(TableNo) THEN BEGIN
        GenChecklistPossibleLink."Caption Of Object Type" := CaptionOfObjectType;
        GenChecklistPossibleLink."Caption Of Object ID" := CaptionOfObjectID;
        GenChecklistPossibleLink.MODIFY;
      END ELSE BEGIN
        GenChecklistPossibleLink.INIT;
        GenChecklistPossibleLink."Table No." := TableNo;
        GenChecklistPossibleLink."Caption Of Object Type" := CaptionOfObjectType;
        GenChecklistPossibleLink."Caption Of Object ID" := CaptionOfObjectID;
        GenChecklistPossibleLink.INSERT;
      END;
    END;

    PROCEDURE GetLinkedToDescription@1199198006(LinkedTo@1100528700 : RecordID) : Text;
    VAR
      RecRef@1100525006 : RecordRef;
      FldRef@1199198006 : FieldRef;
      KeyRef@1100525000 : KeyRef;
      String@1100525004 : Text;
      IndexString@1199198003 : Text;
      I@1100525003 : Integer;
      FieldNo@1199198004 : Integer;
      Text001@1100525002 : TextConst 'DEU=Verbindung nicht gefunden in Unternehmen "%2". (Datensatz ID %1);ENU=Document Link not found in company "%2". (Record ID %1);NLD=Koppeling niet gevonden in bedrijf "%2". (Record ID %1);SVE=Dokumentl„nken hittades inte i f”retag "%2". (Post-ID %1)';
    BEGIN
      IF FORMAT(LinkedTo) <> '' THEN BEGIN
        RecRef.OPEN(LinkedTo.TABLENO, FALSE);
        IF NOT RecRef.GET(LinkedTo) THEN
          EXIT(FORMAT(LinkedTo));

        KeyRef := RecRef.KEYINDEX(1);
        IndexString := DELCHR(FORMAT(RecRef.KEYINDEX(1)), '=', 'Field');
        FOR I := 1 TO KeyRef.FIELDCOUNT DO BEGIN
          IF String <> '' THEN
            String += ', ';

          EVALUATE(FieldNo, SELECTSTR(I, IndexString));
          FldRef := RecRef.FIELD(FieldNo);

          IF FORMAT(FldRef.VALUE) <> '' THEN
            String += FldRef.CAPTION + ': ' + FORMAT(FldRef);
        END;

        String += GetFieldDescription(RecRef);

        EXIT(String);
      END;
    END;

    LOCAL PROCEDURE GetFieldDescription@1100525006(RecRef@1100525000 : RecordRef) : Text;
    VAR
      Field@1100525001 : Record 2000000041;
      FieldRef@1100525002 : FieldRef;
    BEGIN
      Field.SETRANGE(TableNo, RecRef.NUMBER);
      Field.SETFILTER(FieldName, '%1|%2', 'Description', 'Name');
      IF Field.FINDFIRST THEN BEGIN
        FieldRef := RecRef.FIELD(Field."No.");
        IF FORMAT(FieldRef.VALUE) <> '' THEN
          EXIT(' (' + FORMAT(FieldRef.VALUE) + ')');
      END;
    END;

    PROCEDURE GetRecRefToLinkedTable@1100528700(TableNo@1100528703 : Integer;KeyValues@1100528704 : ARRAY [10] OF Code[20];VAR RecRef@1100528705 : RecordRef);
    VAR
      Job@1100528700 : Record 11072003;
      ProjectElement@1100528701 : Record 11012010;
      Plot@1100528702 : Record 11012500;
      GenChecklistCopyLine@1100528706 : Record 11125903;
      GenIssue@1100528707 : Record 11125907;
    BEGIN
      CASE TableNo OF
        DATABASE::Job:
          BEGIN
            Job.GET(KeyValues[1]);
            RecRef.GETTABLE(Job);
          END;
        DATABASE::"Project Element":
          BEGIN
            ProjectElement.GET(KeyValues[1], KeyValues[2]);
            RecRef.GETTABLE(ProjectElement);
          END;
        DATABASE::Plot:
          BEGIN
            Plot.GET(KeyValues[1], KeyValues[2]);
            RecRef.GETTABLE(Plot);
          END;
        DATABASE::"Gen. Checklist Copy Line":
          BEGIN
            GenChecklistCopyLine.GET(KeyValues[1], KeyValues[2]);
            RecRef.GETTABLE(GenChecklistCopyLine);
          END;
        DATABASE::"Gen. Issue":
          BEGIN
            GenIssue.GET(KeyValues[1]);
            RecRef.GETTABLE(GenIssue);
          END;
      END;
    END;

    PROCEDURE SelectPossibleLink@1100528701(CurrentTableNo@1100526001 : Integer;VAR SelectedTableNo@1100526002 : Integer) : Boolean;
    VAR
      GenChecklistPossibleLink@1100526003 : Record 11125906;
      GenChecklistPossibleLinks@1100526000 : Page 11127294;
    BEGIN
      GenChecklistPossibleLinks.FillSourceTable(CurrentTableNo);
      GenChecklistPossibleLinks.LOOKUPMODE(TRUE);
      IF GenChecklistPossibleLinks.RUNMODAL = ACTION::LookupOK THEN BEGIN
        GenChecklistPossibleLinks.GETRECORD(GenChecklistPossibleLink);
        SelectedTableNo := GenChecklistPossibleLink."Table No.";
        EXIT(TRUE);
      END;
    END;

    PROCEDURE SelectLinkedTo@1100526001(TableNo@1100528700 : Integer;LinkedTo@1100528701 : RecordID;VAR SelectedLinkedTo@1100528702 : RecordID) Ret : Boolean;
    VAR
      RecRef@1100526001 : RecordRef;
    BEGIN
      IF TableNo = 0 THEN
        EXIT;

      RecRef.OPEN(TableNo);

      IF FORMAT(LinkedTo) <> '' THEN
        IF RecRef.GET(LinkedTo) THEN;

      CASE TableNo OF
        DATABASE::Job : Ret := SelectProject(RecRef, SelectedLinkedTo);
        DATABASE::"Project Element" : Ret := SelectProjectElement(RecRef, SelectedLinkedTo);
        DATABASE::Plot : Ret := SelectPlot(RecRef, SelectedLinkedTo);
        DATABASE::"Gen. Checklist Copy Line" : Ret := FALSE;
        DATABASE::"Gen. Issue" : Ret := SelectIssue(RecRef, SelectedLinkedTo);
      END;

      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE SelectProject@1100526000(RecRef@1100526003 : RecordRef;VAR SelectedLinkedTo@1100528700 : RecordID) : Boolean;
    VAR
      Job@1100526002 : Record 11072003;
    BEGIN
      RecRef.SETTABLE(Job);
      IF PAGE.RUNMODAL(0, Job) = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Job);
        SelectedLinkedTo := RecRef.RECORDID;
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE SelectProjectElement@1100526002(RecRef@1100526001 : RecordRef;VAR SelectedLinkedTo@1100528702 : RecordID) : Boolean;
    VAR
      ProjectElement@1100526002 : Record 11012010;
    BEGIN
      RecRef.SETTABLE(ProjectElement);
      IF PAGE.RUNMODAL(0, ProjectElement) = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(ProjectElement);
        SelectedLinkedTo := RecRef.RECORDID;
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE SelectPlot@1100526003(RecRef@1100526001 : RecordRef;VAR SelectedLinkedTo@1100528701 : RecordID) : Boolean;
    VAR
      Plot@1100526002 : Record 11012500;
    BEGIN
      RecRef.SETTABLE(Plot);
      IF PAGE.RUNMODAL(0, Plot) = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(Plot);
        SelectedLinkedTo := RecRef.RECORDID;
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE SelectIssue@1100528702(RecRef@1100526001 : RecordRef;VAR SelectedLinkedTo@1100528701 : RecordID) : Boolean;
    VAR
      GenIssue@1100526002 : Record 11125907;
    BEGIN
      RecRef.SETTABLE(GenIssue);
      IF PAGE.RUNMODAL(0, GenIssue) = ACTION::LookupOK THEN BEGIN
        RecRef.GETTABLE(GenIssue);
        SelectedLinkedTo := RecRef.RECORDID;
        EXIT(TRUE);
      END;
    END;

    BEGIN
    END.
  }
}

