OBJECT Page 345 Reconciliation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Reconciliation;
               NOR=Avstemming;
               SVE=Avst„mning];
    SourceTable=Table269;
    DataCaptionExpr=Heading;
    PageType=List;
    SourceTableTemporary=Yes;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 6   ;1   ;Group     ;
                GroupType=Repeater }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Account;
                           NOR=Konto;
                           SVE=Konto];
                ToolTipML=[ENU=Specifies the bank account that is being reconciled.;
                           NOR=Angir bankkontoen som blir avstemt.;
                           SVE=Anger bankkontot som st„ms av.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No." }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the record.;
                           NOR=Angir navnet p† posten.;
                           SVE=Anger postens namn.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the net change that will occur on the bank when you post the journal.;
                           NOR=Angir bevegelsen som oppst†r i banken n†r du bokf›rer kladden.;
                           SVE=Anger nettof”r„ndringen som intr„ffar i banken n„r du bokf”r journalen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Net Change in Jnl." }

    { 11  ;2   ;Field     ;
                CaptionML=[ENU=Balance after Posting;
                           NOR=Saldo etter bokf›ring;
                           SVE=Saldo efter bokf”ring];
                ToolTipML=[ENU=Specifies the current balance on the bank account.;
                           NOR=Angir den n†v‘rende saldoen p† bankkontoen.;
                           SVE=Anger bankkontots aktuella saldo.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Balance after Posting" }

  }
  CODE
  {
    VAR
      GenJnlLine@1000 : Record 81;
      GLAcc@1001 : Record 15;
      BankAccPostingGr@1002 : Record 277;
      BankAcc@1003 : Record 270;
      Heading@1005 : Code[10];

    [External]
    PROCEDURE SetGenJnlLine@1(VAR NewGenJnlLine@1000 : Record 81);
    BEGIN
      GenJnlLine.COPY(NewGenJnlLine);
      Heading := GenJnlLine."Journal Batch Name";
      DELETEALL;
      GLAcc.SETCURRENTKEY("Reconciliation Account");
      GLAcc.SETRANGE("Reconciliation Account",TRUE);
      IF GLAcc.FIND('-') THEN
        REPEAT
          InsertGLAccNetChange;
        UNTIL GLAcc.NEXT = 0;

      IF GenJnlLine.FIND('-') THEN
        REPEAT
          SaveNetChange(
            GenJnlLine."Account Type",GenJnlLine."Account No.",
            ROUND(GenJnlLine."Amount (LCY)" / (1 + GenJnlLine."VAT %" / 100)));
          SaveNetChange(
            GenJnlLine."Bal. Account Type",GenJnlLine."Bal. Account No.",
            -ROUND(GenJnlLine."Amount (LCY)" / (1 + GenJnlLine."Bal. VAT %" / 100)));
        UNTIL GenJnlLine.NEXT = 0;
      IF FIND('-') THEN;
    END;

    LOCAL PROCEDURE SaveNetChange@2(AccType@1000 : Integer;AccNo@1001 : Code[20];NetChange@1002 : Decimal);
    BEGIN
      IF AccNo = '' THEN
        EXIT;
      CASE  AccType OF
        GenJnlLine."Account Type"::"G/L Account":
          IF NOT GET(AccNo) THEN
            EXIT;
        GenJnlLine."Account Type"::"Bank Account":
          BEGIN
            IF AccNo <> BankAcc."No." THEN BEGIN
              BankAcc.GET(AccNo);
              BankAcc.TESTFIELD("Bank Acc. Posting Group");
              BankAccPostingGr.GET(BankAcc."Bank Acc. Posting Group");
              BankAccPostingGr.TESTFIELD("G/L Bank Account No.");
            END;
            AccNo := BankAccPostingGr."G/L Bank Account No.";
            IF NOT GET(AccNo) THEN BEGIN
              GLAcc.GET(AccNo);
              InsertGLAccNetChange;
            END;
          END;
        ELSE
          EXIT;
      END;

      "Net Change in Jnl." := "Net Change in Jnl." + NetChange;
      "Balance after Posting" := "Balance after Posting" + NetChange;
      MODIFY;
    END;

    LOCAL PROCEDURE InsertGLAccNetChange@6();
    BEGIN
      GLAcc.CALCFIELDS("Balance at Date");
      INIT;
      "No." := GLAcc."No.";
      Name := GLAcc.Name;
      "Balance after Posting" := GLAcc."Balance at Date";
      OnBeforeGLAccNetChangeInsert(Rec);
      INSERT;
    END;

    [External]
    PROCEDURE ReturnGLAccountNetChange@25(VAR GLAccountNetChange@1000 : Record 269);
    VAR
      OldGLAccountNetChange@1001 : Record 269;
    BEGIN
      OldGLAccountNetChange := Rec;
      FINDSET;
      REPEAT
        GLAccountNetChange.INIT;
        GLAccountNetChange := Rec;
        GLAccountNetChange.INSERT;
      UNTIL NEXT = 0;

      Rec := OldGLAccountNetChange;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeGLAccNetChangeInsert@3(VAR GLAccountNetChange@1000 : Record 269);
    BEGIN
    END;

    BEGIN
    END.
  }
}

