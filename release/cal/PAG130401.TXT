OBJECT Page 130401 CAL Test Tool
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    AccessByPermission=TableData 130401=RIMD;
    CaptionML=[ENU=Test Tool;
               NLD=Test Tool];
    ApplicationArea=#All;
    SaveValues=Yes;
    DeleteAllowed=Yes;
    ModifyAllowed=Yes;
    SourceTable=Table130401;
    DataCaptionExpr=CurrentSuiteName;
    DelayedInsert=Yes;
    PageType=Worksheet;
    UsageCategory=Administration;
    AutoSplitKey=Yes;
    OnOpenPage=BEGIN
                 IF NOT CALTestSuite.GET(CurrentSuiteName) THEN
                   IF CALTestSuite.FINDFIRST THEN
                     CurrentSuiteName := CALTestSuite.Name
                   ELSE BEGIN
                     CreateTestSuite(CurrentSuiteName);
                     COMMIT;
                   END;

                 FILTERGROUP(2);
                 SETRANGE("Test Suite",CurrentSuiteName);
                 FILTERGROUP(0);

                 IF FIND('-') THEN;
                 CurrPage.UPDATE(FALSE);

                 CALTestSuite.GET(CurrentSuiteName);
                 CALTestSuite.CALCFIELDS("Tests to Execute");
               END;

    OnAfterGetRecord=BEGIN
                       CalcTestResults(Success,Failure,Skipped,NotExecuted);
                       NameIndent := "Line Type";
                       LineTypeEmphasize := "Line Type" IN ["Line Type"::Group,"Line Type"::Codeunit];
                       TestCodeunitEmphasize := "Line Type" = "Line Type"::Codeunit;
                       NameEmphasize := "Line Type" = "Line Type"::Group;
                       ResultEmphasize := Result = Result::Success;
                       IF "Line Type" <> "Line Type"::Codeunit THEN
                         "Hit Objects" := 0;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 19      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 NLD=F&unctions] }
      { 12      ;2   ;Action    ;
                      Name=DeleteLines;
                      CaptionML=[ENU=Delete Lines;
                                 NLD=Delete Lines];
                      ToolTipML=[ENU=Delete the selected line.;
                                 NLD=Delete the selected line.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Delete;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CALTestLine@1000 : Record 130401;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(CALTestLine);
                                 CALTestLine.DELETEALL(TRUE);
                                 CalcTestResults(Success,Failure,Skipped,NotExecuted);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 7       ;2   ;Action    ;
                      Name=GetTestCodeunits;
                      CaptionML=[ENU=Get Test Codeunits;
                                 NLD=Get Test Codeunits];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SelectEntries;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CALTestMgt@1000 : Codeunit 130401;
                               BEGIN
                                 CALTestSuite.GET(CurrentSuiteName);
                                 CALTestMgt.GetTestCodeunitsSelection(CALTestSuite);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 24      ;2   ;Action    ;
                      Name=Run;
                      ShortCutKey=Shift+Ctrl+L;
                      CaptionML=[ENU=&Run;
                                 NLD=&Run];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CALTestLine@1002 : Record 130401;
                                 CALTestMgt@1001 : Codeunit 130401;
                               BEGIN
                                 WarnNonEnglishLanguage;

                                 CALTestLine := Rec;
                                 CALTestMgt.RunSuiteYesNo(Rec);
                                 Rec := CALTestLine;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 10      ;2   ;Action    ;
                      Name=RunSelected;
                      CaptionML=[ENU=Run &Selected;
                                 NLD=Run &Selected];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=TestFile;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SelectedCALTestLine@1000 : Record 130401;
                                 CALTestMgt@1001 : Codeunit 130401;
                               BEGIN
                                 WarnNonEnglishLanguage;

                                 CurrPage.SETSELECTIONFILTER(SelectedCALTestLine);
                                 SelectedCALTestLine.SETRANGE("Test Suite","Test Suite");
                                 CALTestMgt.RunSelected(SelectedCALTestLine);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 26      ;2   ;Action    ;
                      Name=ClearResults;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Clear &Results;
                                 NLD=Clear &Results];
                      ApplicationArea=#All;
                      Image=ClearLog;
                      OnAction=VAR
                                 CALTestLine@1001 : Record 130401;
                               BEGIN
                                 CALTestLine := Rec;
                                 ClearResults(CALTestSuite);
                                 Rec := CALTestLine;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 6       ;2   ;Action    ;
                      Name=GetTestMethods;
                      ShortCutKey=F9;
                      CaptionML=[ENU=Get Test Methods;
                                 NLD=Get Test Methods];
                      ApplicationArea=#All;
                      Image=RefreshText;
                      OnAction=VAR
                                 CALTestMgt@1001 : Codeunit 130401;
                               BEGIN
                                 CALTestMgt.RunSuite(Rec,FALSE);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 8       ;1   ;ActionGroup;
                      CaptionML=[ENU=TCM;
                                 NLD=TCM] }
      { 5       ;2   ;Action    ;
                      Name=TestCoverageMap;
                      CaptionML=[ENU=Test Coverage Map;
                                 NLD=Test Coverage Map];
                      ApplicationArea=#All;
                      Image=Workdays;
                      OnAction=VAR
                                 CALTestCoverageMap@1000 : Record 130406;
                               BEGIN
                                 CALTestCoverageMap.Show;
                               END;
                                }
      { 13      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&rojects;
                                 NLD=P&rojects] }
      { 17      ;2   ;Action    ;
                      Name=ExportProject;
                      CaptionML=[ENU=Export;
                                 NLD=Export];
                      ToolTipML=[ENU=Export the picture to a file.;
                                 NLD=Export the picture to a file.];
                      ApplicationArea=#All;
                      Image=Export;
                      OnAction=VAR
                                 CALTestProjectMgt@1000 : Codeunit 130404;
                               BEGIN
                                 CALTestProjectMgt.Export(CurrentSuiteName);
                               END;
                                }
      { 18      ;2   ;Action    ;
                      Name=ImportProject;
                      CaptionML=[ENU=Import;
                                 NLD=Import];
                      ApplicationArea=#All;
                      Image=Import;
                      OnAction=VAR
                                 CALTestProjectMgt@1000 : Codeunit 130404;
                               BEGIN
                                 CALTestProjectMgt.Import;
                               END;
                                }
      { 2       ;1   ;Action    ;
                      Name=NextError;
                      CaptionML=[ENU=Next Error;
                                 NLD=Next Error];
                      ToolTipML=[ENU=Go to the next error.;
                                 NLD=Go to the next error.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindError('>=');
                               END;
                                }
      { 3       ;1   ;Action    ;
                      Name=PreviousError;
                      CaptionML=[ENU=Previous Error;
                                 NLD=Previous Error];
                      ToolTipML=[ENU=Go to the previous error.;
                                 NLD=Go to the previous error.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindError('<=');
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 30  ;1   ;Field     ;
                Name=CurrentSuiteName;
                CaptionML=[ENU=Suite Name;
                           NLD=Suite Name];
                ApplicationArea=#All;
                SourceExpr=CurrentSuiteName;
                OnValidate=BEGIN
                             CALTestSuite.GET(CurrentSuiteName);
                             CALTestSuite.CALCFIELDS("Tests to Execute");
                             CurrentSuiteNameOnAfterValidat;
                           END;

                OnLookup=VAR
                           CALTestSuite@1000 : Record 130400;
                         BEGIN
                           CALTestSuite.Name := CurrentSuiteName;
                           IF PAGE.RUNMODAL(0,CALTestSuite) <> ACTION::LookupOK THEN
                             EXIT(FALSE);
                           Text := CALTestSuite.Name;
                           EXIT(TRUE);
                         END;
                          }

    { 1   ;1   ;Group     ;
                IndentationColumnName=NameIndent;
                IndentationControls=Name;
                ShowAsTree=Yes;
                GroupType=Repeater }

    { 16  ;2   ;Field     ;
                Name=LineType;
                CaptionML=[ENU=Line Type;
                           NLD=Line Type];
                ApplicationArea=#All;
                SourceExpr="Line Type";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=LineTypeEmphasize }

    { 22  ;2   ;Field     ;
                Name=TestCodeunit;
                CaptionML=[ENU=Codeunit ID;
                           NLD=Codeunit ID];
                ApplicationArea=#All;
                BlankZero=Yes;
                SourceExpr="Test Codeunit";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TestCodeunitEmphasize }

    { 20  ;2   ;Field     ;
                Name=Name;
                ToolTipML=[ENU=Specifies the name of the test tool.;
                           NLD=Specifies the name of the test tool.];
                ApplicationArea=#All;
                SourceExpr=Name;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=NameEmphasize }

    { 11  ;2   ;Field     ;
                ApplicationArea=#All;
                BlankZero=Yes;
                SourceExpr="Hit Objects";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=NameEmphasize;
                OnDrillDown=VAR
                              CALTestCoverageMap@1000 : Record 130406;
                            BEGIN
                              CALTestCoverageMap.ShowHitObjects("Test Codeunit");
                            END;
                             }

    { 25  ;2   ;Field     ;
                Name=Run;
                ApplicationArea=#All;
                SourceExpr=Run;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 28  ;2   ;Field     ;
                Name=Result;
                ApplicationArea=#All;
                BlankZero=Yes;
                SourceExpr=Result;
                Editable=FALSE;
                Style=Favorable;
                StyleExpr=ResultEmphasize }

    { 31  ;2   ;Field     ;
                Name=First Error;
                DrillDown=Yes;
                ApplicationArea=#All;
                SourceExpr="First Error";
                Editable=FALSE;
                Style=Unfavorable;
                StyleExpr=TRUE;
                OnDrillDown=BEGIN
                              ShowTestResults
                            END;
                             }

    { 4   ;2   ;Field     ;
                Name=Duration;
                CaptionML=[ENU=Duration;
                           NLD=Duration];
                ApplicationArea=#All;
                SourceExpr="Finish Time" - "Start Time" }

    { 14  ;1   ;Group      }

    { 38  ;2   ;Field     ;
                Name=SuccessfulTests;
                CaptionML=[ENU=Successful Tests;
                           NLD=Successful Tests];
                ApplicationArea=#All;
                SourceExpr=Success;
                AutoFormatType=1;
                Editable=FALSE }

    { 15  ;2   ;Field     ;
                Name=FailedTests;
                CaptionML=[ENU=Failed Tests;
                           NLD=Failed Tests];
                ApplicationArea=#All;
                SourceExpr=Failure;
                AutoFormatType=1;
                Editable=FALSE }

    { 36  ;2   ;Field     ;
                Name=SkippedTests;
                CaptionML=[ENU=Skipped Tests;
                           NLD=Skipped Tests];
                ApplicationArea=#All;
                SourceExpr=Skipped;
                AutoFormatType=1;
                Editable=FALSE }

    { 40  ;2   ;Field     ;
                Name=NotExecutedTests;
                CaptionML=[ENU=Tests not Executed;
                           NLD=Tests not Executed];
                ApplicationArea=#All;
                SourceExpr=NotExecuted;
                AutoFormatType=1;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      CALTestSuite@1001 : Record 130400;
      LanguageWarningNotification@1013 : Notification;
      CurrentSuiteName@1000 : Code[10];
      Skipped@1002 : Integer;
      Success@1003 : Integer;
      Failure@1004 : Integer;
      NotExecuted@1006 : Integer;
      NameIndent@1007 : Integer INDATASET;
      LineTypeEmphasize@1008 : Boolean INDATASET;
      NameEmphasize@1012 : Boolean;
      TestCodeunitEmphasize@1009 : Boolean INDATASET;
      ResultEmphasize@1011 : Boolean INDATASET;
      LanguageWarningShown@1005 : Boolean;
      LanguageWarningMsg@1010 : TextConst 'ENU=Warning: The current language is not set to English (US). The tests may only contain captions in English (US), which will cause the tests to fail. Resolve the issue by switching the language or introducing translations in the test.;NLD=Warning: The current language is not set to English (US). The tests may only contain captions in English (US), which will cause the tests to fail. Resolve the issue by switching the language or introducing translations in the test.';

    LOCAL PROCEDURE ClearResults@3(CALTestSuite@1002 : Record 130400);
    VAR
      CALTestLine@1001 : Record 130401;
    BEGIN
      IF CALTestSuite.Name <> '' THEN
        CALTestLine.SETRANGE("Test Suite",CALTestSuite.Name);

      CALTestLine.MODIFYALL(Result,Result::" ");
      CALTestLine.MODIFYALL("First Error",'');
      CALTestLine.MODIFYALL("Start Time",0DT);
      CALTestLine.MODIFYALL("Finish Time",0DT);
    END;

    LOCAL PROCEDURE FindError@4(Which@1000 : Code[10]);
    VAR
      CALTestLine@1001 : Record 130401;
    BEGIN
      CALTestLine.COPY(Rec);
      CALTestLine.SETRANGE(Result,Result::Failure);
      IF CALTestLine.FIND(Which) THEN
        Rec := CALTestLine;
    END;

    LOCAL PROCEDURE CreateTestSuite@2(VAR NewSuiteName@1001 : Code[10]);
    VAR
      CALTestSuite@1003 : Record 130400;
      CALTestMgt@1000 : Codeunit 130401;
    BEGIN
      CALTestMgt.CreateNewSuite(NewSuiteName);
      CALTestSuite.GET(NewSuiteName);
    END;

    LOCAL PROCEDURE CurrentSuiteNameOnAfterValidat@19020347();
    BEGIN
      CurrPage.SAVERECORD;

      FILTERGROUP(2);
      SETRANGE("Test Suite",CurrentSuiteName);
      FILTERGROUP(0);

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE WarnNonEnglishLanguage@1();
    BEGIN
      IF LanguageWarningShown THEN
        EXIT;

      IF GLOBALLANGUAGE <> 1033 THEN BEGIN
        LanguageWarningNotification.MESSAGE := LanguageWarningMsg;
        LanguageWarningNotification.SEND;
      END;

      LanguageWarningShown := TRUE;
    END;

    BEGIN
    END.
  }
}

