OBJECT Report 11012633 Copy Plant Budget
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Werkzeugbudget kopieren;
               ENU=Copy Plant Budget;
               NLD=Materieelbudget kopiâren];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  CheckSelections;
                  Counter := 0;
                END;

    OnPostReport=BEGIN
                   MESSAGE(Text000, Counter);
                 END;

  }
  DATASET
  {
    { 1100529000;;DataItem;                  ;
               DataItemTable=Table11229878;
               DataItemTableView=SORTING(Plant Budget,Plant Type,Plant No.,Cost Component,Date);
               OnPreDataItem=BEGIN
                               FILTERGROUP(6);
                               SETRANGE("Plant Budget", PlantBudgetFrom);
                               SETRANGE(Date, DMY2DATE(1,1,YearFrom), DMY2DATE(31,12,YearFrom));
                               FILTERGROUP(6);
                             END;

               OnAfterGetRecord=VAR
                                  PlantBudgetEntryTo@1100529000 : Record 11229878;
                                  PlantBudgetEntry2@1100529004 : Record 11229878;
                                  DayNo@1100529001 : Integer;
                                  MonthNo@1100529002 : Integer;
                                  NewDate@1100529003 : Date;
                                BEGIN
                                  PlantBudgetEntryTo := "Plant Budget Entry";
                                  DayNo := DATE2DMY(Date, 1);
                                  MonthNo := DATE2DMY(Date, 2);
                                  IF (DayNo = 29) AND (MonthNo = 2) THEN BEGIN
                                    DayNo := 28;
                                    IF PlantBudgetEntry2.GET("Plant Budget", "Plant Type", "Plant No.", "Cost Component", DMY2DATE(DayNo, MonthNo, YearTo)) THEN BEGIN
                                      PlantBudgetEntryTo.Amount += PlantBudgetEntry2.Amount;
                                      PlantBudgetEntry2.DELETE;
                                    END;
                                  END;
                                  NewDate := DMY2DATE(DayNo, MonthNo, YearTo);
                                  PlantBudgetEntryTo.Date := NewDate;
                                  PlantBudgetEntryTo.INSERT(TRUE);
                                  Counter := Counter + 1;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnQueryClosePage=BEGIN
                         IF CloseAction  = ACTION::OK THEN
                           CheckSelections;
                       END;

    }
    CONTROLS
    {
      { 1100529000;;Container;
                  ContainerType=ContentArea }

      { 1100529004;1;Group  ;
                  CaptionML=[DEU=Kopieren von;
                             ENU=Copy from;
                             NLD=Kopiâren van;
                             NOR=Kopier fra;
                             SVE=Kopiera frÜn];
                  GroupType=Group }

      { 1100529001;2;Field  ;
                  CaptionML=[DEU=Veranschlagt Werkzeug;
                             ENU=Plant Budget;
                             NLD=Materieelbudget;
                             NOR=Maskinbudsjett;
                             SVE=Maskinbudget];
                  NotBlank=Yes;
                  SourceExpr=PlantBudgetFrom;
                  TableRelation="Plant Budget";
                  OnValidate=BEGIN
                               ValidatePlantBudget(ModeFromTo::From, PlantBudgetFrom);
                             END;
                              }

      { 1100529002;2;Field  ;
                  CaptionML=[DEU=Jahr;
                             ENU=Year;
                             NLD=Jaar;
                             NOR=èr;
                             SVE=èr];
                  NotBlank=Yes;
                  BlankZero=Yes;
                  SourceExpr=YearFrom;
                  OnValidate=BEGIN
                               ValidateYear(ModeFromTo::From, PlantBudgetFrom, YearFrom);
                             END;
                              }

      { 1100529003;1;Group  ;
                  CaptionML=[DEU=Kopieren in;
                             ENU=Copy to;
                             NLD=Kopiâren naar;
                             NOR=Kopier til;
                             SVE=Kopiera till];
                  GroupType=Group }

      { 1100529005;2;Field  ;
                  CaptionML=[DEU=Veranschlagt Werkzeug;
                             ENU=Plant Budget;
                             NLD=Materieelbudget;
                             NOR=Maskinbudsjett;
                             SVE=Maskinbudget];
                  NotBlank=Yes;
                  SourceExpr=PlantBudgetTo;
                  TableRelation="Plant Budget";
                  OnValidate=BEGIN
                               ValidatePlantBudget(ModeFromTo::"To", PlantBudgetTo);
                             END;
                              }

      { 1100529006;2;Field  ;
                  CaptionML=[DEU=Jahr;
                             ENU=Year;
                             NLD=Jaar;
                             NOR=èr;
                             SVE=èr];
                  NotBlank=Yes;
                  BlankZero=Yes;
                  SourceExpr=YearTo;
                  OnValidate=BEGIN
                               ValidateYear(ModeFromTo::"To", PlantBudgetTo, YearTo);
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      PlantBudgetFrom@1100529000 : Code[10];
      PlantBudgetTo@1100529002 : Code[10];
      YearFrom@1100529001 : Integer;
      YearTo@1100529003 : Integer;
      Text000@1100529007 : TextConst 'DEU=%1 Budgetzeilen kopiert;ENU=%1 budget lines copied;NLD=%1 budgetregels gekopieerd';
      Text001@1100529004 : TextConst 'DEU=Alle Auswahlen mÅssen eingeben werden.;ENU=All selections must be filled;NLD=Alle selecties moeten gevuld zijn';
      Counter@1100529006 : Integer;
      ModeFromTo@1100529005 : 'From,To';
      Text002@1100529008 : TextConst 'DEU=Nur Jahr (%1) %2 bis %3 erlaubt;ENU=Only year (%1) %2 to %3 allowed;NLD=Alleen jaar (%1) %2 t/m %3 toegestaan';
      Text003a@1100529009 : TextConst 'DEU=von;ENU=from;NLD=van;SVE=FrÜn';
      Text003b@1100529010 : TextConst 'DEU=bis;ENU=to;NLD=naar;SVE=Till';
      Text004@1100529011 : TextConst 'DEU=Kein Budget vorhanden von %1 (%2) ''%3'' in %4;ENU=No budget presen of %1 (%2) ''%3'' in %4;NLD=Geen budget aanwezig van %1 (%2) ''%3'' in %4';
      Text005@1100529012 : TextConst 'DEU=Bereits Budget vorhanden von %1 ''%2'' (%3) in %4;ENU=Already budget presen of %1 ''%2'' (%3) in %4;NLD=Al budget aanwezig van %1 (%2) ''%3'' in %4';

    PROCEDURE SetSelections@1100529000(PlantBudgetOrigin@1100529000 : Code[10];YearOrigin@1100529001 : Integer;PlantBudgetDest@1100529002 : Code[10];YearDest@1100529003 : Integer);
    BEGIN
      PlantBudgetFrom := PlantBudgetOrigin;
      YearFrom := YearOrigin;
      PlantBudgetTo := PlantBudgetDest;
      YearTo := YearDest;
    END;

    LOCAL PROCEDURE CheckSelections@1100529003();
    BEGIN
      IF (PlantBudgetFrom = '') OR (YearFrom = 0) OR (PlantBudgetTo = '') OR (YearFrom = 0) THEN
        ERROR(Text001);
      ValidatePlantBudget(ModeFromTo::From, PlantBudgetFrom);
      ValidatePlantBudget(ModeFromTo::"To", PlantBudgetTo);
      ValidateYear(ModeFromTo::From, PlantBudgetFrom, YearFrom);
      ValidateYear(ModeFromTo::"To", PlantBudgetTo, YearTo);
    END;

    LOCAL PROCEDURE ValidatePlantBudget@1100529001(Mode@1100529000 : Option;BudgetCode@1100529001 : Code[10]);
    VAR
      PlantBudget@1100529002 : Record 11229876;
    BEGIN
      PlantBudget.GET(BudgetCode);
      IF Mode = ModeFromTo::"To"  THEN
        PlantBudget.TESTFIELD(Fixed, FALSE);
    END;

    LOCAL PROCEDURE ValidateYear@1100529002(Mode@1100529000 : Option;BudgetCode@1100529004 : Code[10];YearNo@1100529001 : Integer);
    VAR
      PlantBudgetEntry@1100529002 : Record 11229878;
      CurrentYear@1100529003 : Integer;
    BEGIN
      CurrentYear := DATE2DMY(TODAY, 3);
      PlantBudgetEntry.SETCURRENTKEY("Plant Budget", Date, "Plant Type", "Plant No.", "Cost Component");
      PlantBudgetEntry.SETRANGE("Plant Budget", BudgetCode);
      PlantBudgetEntry.SETRANGE(Date, DMY2DATE(1,1,YearNo), DMY2DATE(31,12,YearNo));
      CASE Mode OF
        ModeFromTo::From:
          BEGIN
            IF (YearNo < CurrentYear-1) OR (YearNo > CurrentYear) THEN
              ERROR(Text002, Text003a, CurrentYear-1, CurrentYear);
           IF PlantBudgetEntry.ISEMPTY THEN
             ERROR(Text004, PlantBudgetEntry.FIELDCAPTION("Plant Budget"), Text003a, BudgetCode, YearNo);
          END;
        ModeFromTo::"To":
          BEGIN
            IF (YearNo < CurrentYear) OR (YearNo > CurrentYear+1) THEN
              ERROR(Text002, Text003b, CurrentYear, CurrentYear+1 );
           IF NOT PlantBudgetEntry.ISEMPTY THEN
             ERROR(Text005, PlantBudgetEntry.FIELDCAPTION("Plant Budget"), Text003b, BudgetCode, YearNo);
          END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

