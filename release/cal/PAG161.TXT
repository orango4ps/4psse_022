OBJECT Page 161 Purchase Statistics
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Purchase Statistics;
               NOR=Kj›psstatistikk;
               SVE=Ink”psstatistik];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table38;
    PageType=ListPlus;
    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 PurchSetup.GET;
                 AllowInvDisc :=
                   NOT (PurchSetup."Calc. Inv. Discount" AND VendInvDiscRecExists("Invoice Disc. Code"));
                 AllowVATDifference :=
                   PurchSetup."Allow VAT Difference" AND
                   NOT ("Document Type" IN ["Document Type"::Quote,"Document Type"::"Blanket Order"]);
                 OnOpenPageOnBeforeSetEditable(AllowInvDisc,AllowVATDifference);
                 CurrPage.EDITABLE := AllowVATDifference OR AllowInvDisc;
                 SetVATSpecification;
               END;

    OnAfterGetRecord=BEGIN
                       CurrPage.CAPTION(STRSUBSTNO(Text000,"Document Type"));
                       IF PrevNo = "No." THEN BEGIN
                         GetVATSpecification;
                         EXIT;
                       END;

                       PrevNo := "No.";
                       FILTERGROUP(2);
                       SETRANGE("No.",PrevNo);
                       FILTERGROUP(0);

                       CalculateTotals;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    OnQueryClosePage=BEGIN
                       GetVATSpecification;
                       IF TempVATAmountLine.GetAnyLineModified THEN
                         UpdateVATOnPurchLines;
                       EXIT(TRUE);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=Allm„nt] }

    { 97  ;2   ;Field     ;
                Name=Amount;
                CaptionML=[ENU=Amount;
                           NOR=Bel›p;
                           SVE=Belopp];
                ToolTipML=[ENU=Specifies the net amount of all the lines in the purchase document.;
                           NOR=Angir nettobel›pet til alle linjene i kj›psdokumentet.;
                           SVE=Anger nettobeloppet f”r alla rader p† ink”psdokumentet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchLine."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,FALSE);
                Importance=Promoted;
                Editable=FALSE }

    { 93  ;2   ;Field     ;
                Name=InvDiscountAmount;
                CaptionML=[ENU=Inv. Discount Amount;
                           NOR=Fakturarabattbel›p;
                           SVE=Fakturarabatt];
                ToolTipML=[ENU=Specifies the invoice discount amount for the purchase document.;
                           NOR=Angir kj›psdokumentets fakturarabattbel›p.;
                           SVE=Anger fakturarabatten f”r ink”psdokumentet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchLine."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                OnValidate=BEGIN
                             UpdateInvDiscAmount;
                           END;
                            }

    { 80  ;2   ;Field     ;
                CaptionML=[ENU=Total;
                           NOR=I alt;
                           SVE=Totalt];
                ToolTipML=[ENU=Specifies the total amount less any invoice discount amount and excluding VAT for the purchase document.;
                           NOR=Angir det totale bel›pet for ordren, minus fakturarabattbel›p og uten mva for kj›psdokumentet.;
                           SVE=Anger ink”psdokumentets totalbelopp exklusive moms och minus fakturarabatt.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalAmount1;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text002,FALSE);
                Importance=Promoted;
                OnValidate=BEGIN
                             UpdateTotalAmount;
                           END;
                            }

    { 75  ;2   ;Field     ;
                CaptionML=[ENU=VAT Amount;
                           NOR=Mva-bel›p;
                           SVE=Momsbelopp];
                ToolTipML=[ENU=Specifies the total VAT amount that has been calculated for all the lines in the purchase document.;
                           NOR=Angir det totale mva.-bel›pet som er beregnet for alle linjene i kj›psdokumentet.;
                           SVE=Anger totalt momsbelopp ber„knat p† alla ink”psdokumentets rader.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT(VATAmountText);
                Editable=FALSE }

    { 76  ;2   ;Field     ;
                CaptionML=[ENU=Total Incl. VAT;
                           NOR=Totalt inkl. mva.;
                           SVE=Totalt inkl. moms];
                ToolTipML=[ENU=Specifies the total amount including VAT that will be posted to the vendor's account for all the lines in the purchase document. This is the amount that you owe the vendor based on this purchase document. If the document is a credit memo, it is the amount that the vendor owes you.;
                           NOR=Angir det totale bel›pet, inklusiv mva. som vil bli bokf›rt til leverand›rens konto for alle linjene i kj›psdokumentet. Dette er bel›pet som du skylder til leverand›ren basert p† dette kj›psdokumentet. Hvis dokumentet er en kreditnota, er dette bel›pet som leverand›ren skylder deg.;
                           SVE=Anger totalbeloppet inklusive moms f”r alla rader p† ink”psdokumentet som bokf”rs p† leverant”rens konto. Det h„r „r beloppet som du „r skyldig leverant”ren enligt det h„r ink”psdokumentet. Om dokumentet „r en kreditnota „r det h„r beloppet som leverant”ren „r skyldig dig.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalAmount2;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text002,TRUE);
                Editable=FALSE }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=Purchase (LCY);
                           NOR=Kj›p (NOK);
                           SVE=Ink”p (BVA)];
                ToolTipML=[ENU=Specifies your total purchases. It is calculated from amounts excluding VAT on all completed and open purchase invoices and credit memos.;
                           NOR=Angir dine totale kj›p. Dette beregnes fra bel›p uten mva for alle fullf›rte og †pne kj›psfakturaer og kreditnotaer.;
                           SVE=Anger totala ink”p. Det ber„knas fr†n belopp exklusive moms p† alla avslutade och ”ppna ink”psfakturor och kreditnotor.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchLineLCY.Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 95  ;2   ;Field     ;
                Name=Quantity;
                CaptionML=[ENU=Quantity;
                           NOR=Antall;
                           SVE=Antal];
                ToolTipML=[ENU=Specifies the total quantity of G/L account entries, items, and/or resources in the purchase document.;
                           NOR=Angir det totale antall finansposter, varer og/eller ressurser i kj›psdokumentet.;
                           SVE=Anger totalt antal redovisningstransaktioner, artiklar och/eller resurser i ink”psdokumentet.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine.Quantity;
                Editable=FALSE }

    { 73  ;2   ;Field     ;
                CaptionML=[ENU=Parcels;
                           NOR=Kolli;
                           SVE=F”rpackningar];
                ToolTipML=[ENU=Specifies the total number of parcels in the purchase document.;
                           NOR=Angir antall kolli i kj›psdokumentet.;
                           SVE=Anger totalt antal f”rpackningar i ink”psdokumentet.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine."Units per Parcel";
                Editable=FALSE }

    { 91  ;2   ;Field     ;
                CaptionML=[ENU=Net Weight;
                           NOR=Nettovekt;
                           SVE=Nettovikt];
                ToolTipML=[ENU=Specifies the total net weight of the items in the purchase document.;
                           NOR=Angir den totale nettovekten av varene i kj›psdokumentet.;
                           SVE=Anger total nettovikt f”r artiklarna i ink”psdokumentet.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine."Net Weight";
                Editable=FALSE }

    { 82  ;2   ;Field     ;
                CaptionML=[ENU=Gross Weight;
                           NOR=Bruttovekt;
                           SVE=Bruttovikt];
                ToolTipML=[ENU=Specifies the total gross weight of the items in the purchase document.;
                           NOR=Angir den totale bruttovekten av varene i kj›psdokumentet.;
                           SVE=Anger total bruttovikt f”r artiklarna i ink”psdokumentet.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine."Gross Weight";
                Editable=FALSE }

    { 71  ;2   ;Field     ;
                CaptionML=[ENU=Volume;
                           NOR=Volum;
                           SVE=Volym];
                ToolTipML=[ENU=Specifies the total volume of the items in the purchase document.;
                           NOR=Angir det totale volumet av varene i kj›psdokumentet.;
                           SVE=Anger total volym f”r artiklarna i ink”psdokumentet.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine."Unit Volume";
                Editable=FALSE }

    { 5   ;1   ;Part      ;
                Name=SubForm;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page576 }

    { 1901061301;1;Group  ;
                CaptionML=[ENU=Vendor;
                           NOR=Leverand›r;
                           SVE=Leverant”r] }

    { 67  ;2   ;Field     ;
                CaptionML=[ENU=Balance (LCY);
                           NOR=Saldo (NOK);
                           SVE=Saldo (BVA)];
                ToolTipML=[ENU=Specifies the balance on the vendor's account.;
                           NOR=Angir saldoen p† leverand›rens konto.;
                           SVE=Anger saldot p† leverant”rens konto.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Vend."Balance (LCY)";
                AutoFormatType=1;
                Importance=Promoted;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Purchase %1 Statistics;NOR=Kj›psstatistikk - %1;SVE=Ink”p %1 statistik';
      Text001@1001 : TextConst 'ENU=Amount;NOR=Bel›p;SVE=Belopp';
      Text002@1002 : TextConst 'ENU=Total;NOR=I alt;SVE=Totalt';
      Text003@1003 : TextConst 'ENU=%1 must not be 0.;NOR=%1 skal ikke v‘re 0.;SVE=%1 f†r inte vara 0.';
      Text004@1004 : TextConst 'ENU=%1 must not be greater than %2.;NOR=%1 skal ikke v‘re st›rre enn %2.;SVE=%1 f†r inte vara st”rre „n %2.';
      Text005@1005 : TextConst 'ENU=You cannot change the invoice discount because a vendor invoice discount with the code %1 exists.;NOR=Du kan ikke endre fakturarabatten ettersom det finnes en leverand›rfakturarabatt med koden %1.;SVE=Du kan inte „ndra fakturarabatten eftersom det finns en leverant”rsfakturarabatt med koden %1.';
      TotalPurchLine@1006 : Record 39;
      TotalPurchLineLCY@1007 : Record 39;
      Vend@1008 : Record 23;
      TempVATAmountLine@1009 : TEMPORARY Record 290;
      PurchSetup@1010 : Record 312;
      PurchPost@1011 : Codeunit 90;
      TotalAmount1@1012 : Decimal;
      TotalAmount2@1013 : Decimal;
      VATAmount@1014 : Decimal;
      VATAmountText@1015 : Text[30];
      PrevNo@1016 : Code[20];
      AllowInvDisc@1017 : Boolean;
      AllowVATDifference@1018 : Boolean;
      DPA_IsHardFilter@1100000999 : Boolean;

    LOCAL PROCEDURE UpdateHeaderInfo@5();
    VAR
      CurrExchRate@1000 : Record 330;
      UseDate@1001 : Date;
    BEGIN
      TotalPurchLine."Inv. Discount Amount" := TempVATAmountLine.GetTotalInvDiscAmount;
      TotalAmount1 :=
        TotalPurchLine."Line Amount" - TotalPurchLine."Inv. Discount Amount";
      VATAmount := TempVATAmountLine.GetTotalVATAmount;
      IF "Prices Including VAT" THEN BEGIN
        TotalAmount1 := TempVATAmountLine.GetTotalAmountInclVAT;
        TotalAmount2 := TotalAmount1 - VATAmount;
        TotalPurchLine."Line Amount" := TotalAmount1 + TotalPurchLine."Inv. Discount Amount";
      END ELSE
        TotalAmount2 := TotalAmount1 + VATAmount;

      IF "Prices Including VAT" THEN
        TotalPurchLineLCY.Amount := TotalAmount2
      ELSE
        TotalPurchLineLCY.Amount := TotalAmount1;
      IF "Currency Code" <> '' THEN BEGIN
        IF ("Document Type" IN ["Document Type"::"Blanket Order","Document Type"::Quote]) AND
           ("Posting Date" = 0D)
        THEN
          UseDate := WORKDATE
        ELSE
          UseDate := "Posting Date";

        TotalPurchLineLCY.Amount :=
          CurrExchRate.ExchangeAmtFCYToLCY(
      //    UseDate,"Currency Code",TotalPurchLineLCY.Amount,"Currency Factor"); //**4PS.o
            0, '', UseDate,"Currency Code",TotalPurchLineLCY.Amount,"Currency Factor",FALSE); //**4PS.n

      END;
    END;

    LOCAL PROCEDURE GetVATSpecification@21();
    BEGIN
      CurrPage.SubForm.PAGE.GetTempVATAmountLine(TempVATAmountLine);
      IF TempVATAmountLine.GetAnyLineModified THEN
        UpdateHeaderInfo;
    END;

    LOCAL PROCEDURE SetVATSpecification@11();
    BEGIN
      CurrPage.SubForm.PAGE.SetTempVATAmountLine(TempVATAmountLine);
      CurrPage.SubForm.PAGE.InitGlobals(
        "Currency Code",AllowVATDifference,AllowVATDifference,
        "Prices Including VAT",AllowInvDisc,"VAT Base Discount %");
    END;

    LOCAL PROCEDURE UpdateTotalAmount@16();
    VAR
      SaveTotalAmount@1000 : Decimal;
    BEGIN
      CheckAllowInvDisc;
      IF "Prices Including VAT" THEN BEGIN
        SaveTotalAmount := TotalAmount1;
        UpdateInvDiscAmount;
        TotalAmount1 := SaveTotalAmount;
      END;

      WITH TotalPurchLine DO
        "Inv. Discount Amount" := "Line Amount" - TotalAmount1;
      UpdateInvDiscAmount;
    END;

    LOCAL PROCEDURE UpdateInvDiscAmount@3();
    VAR
      InvDiscBaseAmount@1000 : Decimal;
    BEGIN
      CheckAllowInvDisc;
      InvDiscBaseAmount := TempVATAmountLine.GetTotalInvDiscBaseAmount(FALSE,"Currency Code");
      IF InvDiscBaseAmount = 0 THEN
        ERROR(Text003,TempVATAmountLine.FIELDCAPTION("Inv. Disc. Base Amount"));

      IF TotalPurchLine."Inv. Discount Amount" / InvDiscBaseAmount > 1 THEN
        ERROR(
          Text004,
          TotalPurchLine.FIELDCAPTION("Inv. Discount Amount"),
          TempVATAmountLine.FIELDCAPTION("Inv. Disc. Base Amount"));

      TempVATAmountLine.SetInvoiceDiscountAmount(
        TotalPurchLine."Inv. Discount Amount","Currency Code","Prices Including VAT","VAT Base Discount %");
      CurrPage.SubForm.PAGE.SetTempVATAmountLine(TempVATAmountLine);
      UpdateHeaderInfo;

      "Invoice Discount Calculation" := "Invoice Discount Calculation"::Amount;
      "Invoice Discount Value" := TotalPurchLine."Inv. Discount Amount";
      MODIFY;
      UpdateVATOnPurchLines;
    END;

    LOCAL PROCEDURE GetCaptionClass@2(FieldCaption@1000 : Text[100];ReverseCaption@1001 : Boolean) : Text[80];
    BEGIN
      IF "Prices Including VAT" XOR ReverseCaption THEN
        EXIT('2,1,' + FieldCaption);

      EXIT('2,0,' + FieldCaption);
    END;

    LOCAL PROCEDURE UpdateVATOnPurchLines@1();
    VAR
      PurchLine@1000 : Record 39;
    BEGIN
      GetVATSpecification;
      IF TempVATAmountLine.GetAnyLineModified THEN BEGIN
        PurchLine.UpdateVATOnLines(0,Rec,PurchLine,TempVATAmountLine);
        PurchLine.UpdateVATOnLines(1,Rec,PurchLine,TempVATAmountLine);
      END;
      PrevNo := '';
    END;

    LOCAL PROCEDURE VendInvDiscRecExists@4(InvDiscCode@1000 : Code[20]) : Boolean;
    VAR
      VendInvDisc@1001 : Record 24;
    BEGIN
      VendInvDisc.SETRANGE(Code,InvDiscCode);
      EXIT(VendInvDisc.FINDFIRST);
    END;

    LOCAL PROCEDURE CheckAllowInvDisc@8();
    BEGIN
      IF NOT AllowInvDisc THEN
        ERROR(Text005,"Invoice Disc. Code");
    END;

    LOCAL PROCEDURE CalculateTotals@6();
    VAR
      PurchLine@1001 : Record 39;
      TempPurchLine@1000 : TEMPORARY Record 39;
    BEGIN
      CLEAR(PurchLine);
      CLEAR(TotalPurchLine);
      CLEAR(TotalPurchLineLCY);
      CLEAR(PurchPost);

      PurchPost.GetPurchLines(Rec,TempPurchLine,0);
      CLEAR(PurchPost);
      PurchPost.SumPurchLinesTemp(
        Rec,TempPurchLine,0,TotalPurchLine,TotalPurchLineLCY,VATAmount,VATAmountText);

      IF "Prices Including VAT" THEN BEGIN
        TotalAmount2 := TotalPurchLine.Amount;
        TotalAmount1 := TotalAmount2 + VATAmount;
        TotalPurchLine."Line Amount" := TotalAmount1 + TotalPurchLine."Inv. Discount Amount";
      END ELSE BEGIN
        TotalAmount1 := TotalPurchLine.Amount;
        TotalAmount2 := TotalPurchLine."Amount Including VAT";
      END;

      IF Vend.GET("Pay-to Vendor No.") THEN
        Vend.CALCFIELDS("Balance (LCY)")
      ELSE
        CLEAR(Vend);

      PurchLine.CalcVATAmountLines(0,Rec,TempPurchLine,TempVATAmountLine);
      TempVATAmountLine.MODIFYALL(Modified,FALSE);
      SetVATSpecification;

      OnAfterCalculateTotals(Rec,TotalPurchLine,TotalPurchLineLCY,TempVATAmountLine);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCalculateTotals@13(VAR PurchHeader@1000 : Record 38;VAR TotalPurchLine@1002 : Record 39;VAR TotalPurchLineLCY@1001 : Record 39;VAR TempVATAmountLine@1003 : TEMPORARY Record 290);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnOpenPageOnBeforeSetEditable@7(VAR AllowInvDisc@1000 : Boolean;VAR AllowVATDifference@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

