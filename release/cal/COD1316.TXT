OBJECT Codeunit 1316 Top Ten Customers Chart Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CustomerXCaptionTxt@1002 : TextConst 'ENU=Customer Name;NOR=Kundenavn;SVE=Kundens namn';
      SalesLCYYCaptionTxt@1001 : TextConst 'ENU=Sales (LCY);NOR=Salg (NOK);SVE=F”rs„ljning (BVA)';

    PROCEDURE UpdateChart@3(VAR BusChartBuf@1000 : Record 485);
    VAR
      ColumnIndex@1003 : Integer;
      CustomerName@1002 : ARRAY [11] OF Text[100];
      SalesLCY@1001 : ARRAY [11] OF Decimal;
    BEGIN
      WITH BusChartBuf DO BEGIN
        Initialize;
        AddMeasure(SalesLCYYCaptionTxt,1,"Data Type"::Decimal,"Chart Type"::StackedColumn);
        SetXAxis(CustomerXCaptionTxt,"Data Type"::String);
        CalcTopTenSalesCustomers(CustomerName,SalesLCY);
        FOR ColumnIndex := 1 TO 11 DO BEGIN
          IF SalesLCY[ColumnIndex] = 0 THEN
            EXIT;
          AddColumn(CustomerName[ColumnIndex]);
          SetValueByIndex(0,ColumnIndex - 1,SalesLCY[ColumnIndex]);
        END;
      END;
    END;

    PROCEDURE DrillDown@5(VAR BusChartBuf@1000 : Record 485);
    VAR
      CustomerName@1001 : Variant;
    BEGIN
      BusChartBuf.GetXValue(BusChartBuf."Drill-Down X Index",CustomerName);
      // drill down only for top 10 customers
      // for the 11th column "all other customers", it drills down to customer list of all other customers
      IF (BusChartBuf."Drill-Down Measure Index" = 0) AND (BusChartBuf."Drill-Down X Index" < 10) THEN
        DrillDownCust(FORMAT(CustomerName));
      IF (BusChartBuf."Drill-Down Measure Index" = 0) AND (BusChartBuf."Drill-Down X Index" = 10) THEN
        DrillDownOtherCustList;
    END;

    LOCAL PROCEDURE CalcTopTenSalesCustomers@9(VAR CustomerName@1002 : ARRAY [11] OF Text[100];VAR SalesLCY@1000 : ARRAY [11] OF Decimal);
    VAR
      TopCustomersBySalesBuffer@1004 : Record 1328;
      TopCustomersBySalesJob@1003 : Codeunit 1328;
      ChartManagement@1005 : Codeunit 1315;
    BEGIN
      IF TopCustomersBySalesBuffer.ISEMPTY THEN
        TopCustomersBySalesJob.UpdateCustomerTopList;

      IF TopCustomersBySalesBuffer.FINDSET THEN BEGIN
        REPEAT
          CustomerName[TopCustomersBySalesBuffer.Ranking] := TopCustomersBySalesBuffer.CustomerName;
          SalesLCY[TopCustomersBySalesBuffer.Ranking] := TopCustomersBySalesBuffer.SalesLCY;
        UNTIL TopCustomersBySalesBuffer.NEXT = 0;
        ChartManagement.ScheduleTopCustomerListRefreshTask
      END;
    END;

    LOCAL PROCEDURE DrillDownCust@1(DrillDownName@1000 : Text[50]);
    VAR
      Customer@1001 : Record 18;
    BEGIN
      Customer.SETRANGE(Name,DrillDownName);
      Customer.FINDFIRST;
      PAGE.RUN(PAGE::"Customer Card",Customer);
    END;

    LOCAL PROCEDURE DrillDownOtherCustList@8();
    VAR
      Customer@1001 : Record 18;
    BEGIN
      Customer.SETFILTER("No.",GetFilterToExcludeTopTenCustomers);
      Customer.SETCURRENTKEY(Name);
      Customer.ASCENDING(TRUE);
      PAGE.RUN(PAGE::"Customer List",Customer);
    END;

    LOCAL PROCEDURE GetFilterToExcludeTopTenCustomers@11() : Text;
    VAR
      TopCustomersBySalesBuffer@1002 : Record 1328;
      CustomerCounter@1001 : Integer;
      FilterToExcludeTopTenCustomers@1000 : Text;
    BEGIN
      CustomerCounter := 1;
      IF TopCustomersBySalesBuffer.FINDSET THEN
        REPEAT
          IF CustomerCounter = 1 THEN
            FilterToExcludeTopTenCustomers := STRSUBSTNO('<>%1',TopCustomersBySalesBuffer.CustomerNo)
          ELSE
            FilterToExcludeTopTenCustomers += STRSUBSTNO('&<>%1',TopCustomersBySalesBuffer.CustomerNo);
          CustomerCounter += 1;
        UNTIL (TopCustomersBySalesBuffer.NEXT = 0) OR (CustomerCounter = 11);
      EXIT(FilterToExcludeTopTenCustomers);
    END;

    BEGIN
    END.
  }
}

