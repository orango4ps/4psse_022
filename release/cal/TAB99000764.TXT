OBJECT Table 99000764 Routing Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TestStatus;
             END;

    OnModify=BEGIN
               TestStatus;
             END;

    OnDelete=BEGIN
               TestStatus;

               DeleteRelations;
             END;

    OnRename=BEGIN
               TestStatus;

               SetRecalcStatus;
             END;

    CaptionML=[DEU=Arbeitsgang;
               ENU=Routing Line;
               NLD=Bewerkingsplanregel;
               NOR=Rutelinje;
               SVE=Operationsfîljdsrad];
  }
  FIELDS
  {
    { 1   ;   ;Routing No.         ;Code20        ;TableRelation="Routing Header";
                                                   CaptionML=[DEU=Arbeitsplannr.;
                                                              ENU=Routing No.;
                                                              NLD=Bew.-plannr.;
                                                              NOR=Rutenr.;
                                                              SVE=Operationsfîljdsnr];
                                                   NotBlank=Yes }
    { 2   ;   ;Version Code        ;Code20        ;TableRelation="Routing Version"."Version Code" WHERE (Routing No.=FIELD(Routing No.));
                                                   CaptionML=[DEU=Versionscode;
                                                              ENU=Version Code;
                                                              NLD=Versiecode;
                                                              NOR=Versjonskode;
                                                              SVE=Versionskod] }
    { 4   ;   ;Operation No.       ;Code10        ;OnValidate=BEGIN
                                                                TestStatus;

                                                                SetRecalcStatus;
                                                              END;

                                                   CaptionML=[DEU=Arbeitsgangnr.;
                                                              ENU=Operation No.;
                                                              NLD=Bewerkingsnr.;
                                                              NOR=Operasjonsnr.;
                                                              SVE=Operationsnr];
                                                   NotBlank=Yes }
    { 5   ;   ;Next Operation No.  ;Code30        ;OnValidate=BEGIN
                                                                SetRecalcStatus;
                                                              END;

                                                   CaptionML=[DEU=NÑchste Arbeitsgangnr.;
                                                              ENU=Next Operation No.;
                                                              NLD=Volgend bewerkingsnr.;
                                                              NOR=Neste operasjonsnr.;
                                                              SVE=NÑsta operationsnr] }
    { 6   ;   ;Previous Operation No.;Code30      ;OnValidate=BEGIN
                                                                SetRecalcStatus;
                                                              END;

                                                   CaptionML=[DEU=Vorherige Arbeitsgangnr.;
                                                              ENU=Previous Operation No.;
                                                              NLD=Vorig bewerkingsnr.;
                                                              NOR=Forrige operasjonsnr.;
                                                              SVE=FîregÜende operationsnr] }
    { 7   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                SetRecalcStatus;

                                                                "No." := '';
                                                                "Work Center No." := '';
                                                                "Work Center Group Code" := '';
                                                              END;

                                                   CaptionML=[DEU=Art;
                                                              ENU=Type;
                                                              NLD=Soort;
                                                              NOR=Type;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[DEU="Arbeitsplatzgruppe,Arbeitsplatz, ";
                                                                    ENU="Work Center,Machine Center, ";
                                                                    NLD="Afdeling,Bewerkingsplaats, ";
                                                                    NOR="Arbeidssenter,Maskinsenter, ";
                                                                    SVE="Produktionsgrupp,Maskingrupp, "];
                                                   OptionString=[Work Center,Machine Center, ] }
    { 8   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Work Center)) "Work Center"
                                                                 ELSE IF (Type=CONST(Machine Center)) "Machine Center";
                                                   OnValidate=BEGIN
                                                                SetRecalcStatus;

                                                                IF "No." = '' THEN
                                                                  EXIT;

                                                                CASE Type OF
                                                                  Type::"Work Center":
                                                                    BEGIN
                                                                      WorkCenter.GET("No.");
                                                                      WorkCenter.TESTFIELD(Blocked,FALSE);
                                                                      WorkCenterTransferFields;
                                                                    END;
                                                                  Type::"Machine Center":
                                                                    BEGIN
                                                                      MachineCenter.GET("No.");
                                                                      MachineCenter.TESTFIELD(Blocked,FALSE);
                                                                      MachineCtrTransferFields;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[DEU=Nr.;
                                                              ENU=No.;
                                                              NLD=Nr.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 9   ;   ;Work Center No.     ;Code20        ;TableRelation="Work Center";
                                                   CaptionML=[DEU=Arbeitsplatzgruppennr.;
                                                              ENU=Work Center No.;
                                                              NLD=Afdelingsnr.;
                                                              NOR=Arbeidssenternr.;
                                                              SVE=Produktionsgruppsnr];
                                                   Editable=No }
    { 10  ;   ;Work Center Group Code;Code10      ;TableRelation="Work Center Group";
                                                   CaptionML=[DEU=Abteilungscode;
                                                              ENU=Work Center Group Code;
                                                              NLD=Afdelingsgroepcode;
                                                              NOR=Arbeidssentergruppekode;
                                                              SVE=Produktionsavd.kod];
                                                   Editable=No }
    { 11  ;   ;Description         ;Text100       ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description;
                                                              NLD=Omschrijving;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 12  ;   ;Setup Time          ;Decimal       ;CaptionML=[DEU=RÅstzeit;
                                                              ENU=Setup Time;
                                                              NLD=Insteltijd;
                                                              NOR=Oppstillingstid;
                                                              SVE=OmstÑllningstid];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 13  ;   ;Run Time            ;Decimal       ;CaptionML=[DEU=Bearbeitungszeit;
                                                              ENU=Run Time;
                                                              NLD=Bewerkingstijd;
                                                              NOR=Operasjonstid;
                                                              SVE=Bearbetningstid];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 14  ;   ;Wait Time           ;Decimal       ;CaptionML=[DEU=Wartezeit;
                                                              ENU=Wait Time;
                                                              NLD=Wachttijd na bew.;
                                                              NOR=Ventetid;
                                                              SVE=VÑntetid];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 15  ;   ;Move Time           ;Decimal       ;CaptionML=[DEU=Transportzeit;
                                                              ENU=Move Time;
                                                              NLD=Transporttijd;
                                                              NOR=Transporttid;
                                                              SVE=Transporttid];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 16  ;   ;Fixed Scrap Quantity;Decimal       ;OnValidate=BEGIN
                                                                SetRecalcStatus;
                                                              END;

                                                   CaptionML=[DEU=Fixe Ausschussmenge;
                                                              ENU=Fixed Scrap Quantity;
                                                              NLD=Vaste uitvalaantal;
                                                              NOR=Fast vrakantall;
                                                              SVE=Fast kassationsantal];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 17  ;   ;Lot Size            ;Decimal       ;CaptionML=[DEU=Losgrî·e;
                                                              ENU=Lot Size;
                                                              NLD=Lotgrootte;
                                                              NOR=Partistõrrelse;
                                                              SVE=Partistorlek];
                                                   DecimalPlaces=0:5 }
    { 18  ;   ;Scrap Factor %      ;Decimal       ;OnValidate=BEGIN
                                                                SetRecalcStatus;
                                                              END;

                                                   CaptionML=[DEU=Ausschussfaktor %;
                                                              ENU=Scrap Factor %;
                                                              NLD=Uitvalfactor %;
                                                              NOR=Vrakfaktor-%;
                                                              SVE=Kassationsfaktor %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 19  ;   ;Setup Time Unit of Meas. Code;Code10;
                                                   TableRelation="Capacity Unit of Measure";
                                                   CaptionML=[DEU=RÅstzeiteinheitencode;
                                                              ENU=Setup Time Unit of Meas. Code;
                                                              NLD=Tijdseenheid insteltijd;
                                                              NOR=Oppstillingstid - enhetskode;
                                                              SVE=OmstÑllningstid enhetskod] }
    { 20  ;   ;Run Time Unit of Meas. Code;Code10 ;TableRelation="Capacity Unit of Measure";
                                                   CaptionML=[DEU=Bearbeitungszeiteinheitencode;
                                                              ENU=Run Time Unit of Meas. Code;
                                                              NLD=Tijdseenheid bewerkingstijd;
                                                              NOR=Operasjonstid - enhetskode;
                                                              SVE=Bearbetningstid enhetskod] }
    { 21  ;   ;Wait Time Unit of Meas. Code;Code10;TableRelation="Capacity Unit of Measure";
                                                   CaptionML=[DEU=Wartezeiteinheitencode;
                                                              ENU=Wait Time Unit of Meas. Code;
                                                              NLD=Tijdseenheid wachttijd na bew.;
                                                              NOR=Ventetid - enhetskode;
                                                              SVE=VÑntetid enhetskod] }
    { 22  ;   ;Move Time Unit of Meas. Code;Code10;TableRelation="Capacity Unit of Measure";
                                                   CaptionML=[DEU=Transportzeiteinheitencode;
                                                              ENU=Move Time Unit of Meas. Code;
                                                              NLD=Tijdseenheid transporttijd;
                                                              NOR=Transporttid - enhetskode;
                                                              SVE=Transporttid enhetskod] }
    { 27  ;   ;Minimum Process Time;Decimal       ;CaptionML=[DEU=Minimale Prozesszeit;
                                                              ENU=Minimum Process Time;
                                                              NLD=Minimale verwerkingstijd;
                                                              NOR=Minimum behandlingstid;
                                                              SVE=Min. operationstid];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 28  ;   ;Maximum Process Time;Decimal       ;CaptionML=[DEU=Maximale Prozesszeit;
                                                              ENU=Maximum Process Time;
                                                              NLD=Maximale verwerkingstijd;
                                                              NOR=Maksimal behandlingstid;
                                                              SVE=Max. operationstid];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 30  ;   ;Concurrent Capacities;Decimal      ;InitValue=1;
                                                   CaptionML=[DEU=Gleichzeitig zu belasten;
                                                              ENU=Concurrent Capacities;
                                                              NLD=Gelijktijdige capaciteit;
                                                              NOR=Samtidige kapasiteter;
                                                              SVE=Samtidiga kapaciteter];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 31  ;   ;Send-Ahead Quantity ;Decimal       ;CaptionML=[DEU=Weitergabemenge;
                                                              ENU=Send-Ahead Quantity;
                                                              NLD=Doorgifteaantal;
                                                              NOR=Overlappantall;
                                                              SVE=ôverlappningsantal];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 34  ;   ;Routing Link Code   ;Code10        ;TableRelation="Routing Link";
                                                   CaptionML=[DEU=Verbindungscode;
                                                              ENU=Routing Link Code;
                                                              NLD=Bew.-plankoppeling;
                                                              NOR=Rutekoblingskode;
                                                              SVE=OperationsfîljdslÑnkkod] }
    { 35  ;   ;Standard Task Code  ;Code10        ;TableRelation="Standard Task";
                                                   OnValidate=VAR
                                                                StandardTask@1000 : Record 99000778;
                                                              BEGIN
                                                                IF "Standard Task Code" = '' THEN
                                                                  IF "Standard Task Code" <> xRec."Standard Task Code" THEN BEGIN
                                                                    DeleteRelations;
                                                                    EXIT;
                                                                  END;

                                                                StandardTask.GET("Standard Task Code");
                                                                Description := StandardTask.Description;

                                                                DeleteRelations;

                                                                StdTaskTool.SETRANGE("Standard Task Code","Standard Task Code");
                                                                IF StdTaskTool.FIND('-') THEN
                                                                  REPEAT
                                                                    RtngTool."Routing No." := "Routing No.";
                                                                    RtngTool."Version Code" := "Version Code";
                                                                    RtngTool."Operation No." := "Operation No.";
                                                                    RtngTool."Line No." := StdTaskTool."Line No.";
                                                                    RtngTool."No." := StdTaskTool."No.";
                                                                    RtngTool.Description := StdTaskTool.Description;
                                                                    RtngTool.INSERT;
                                                                  UNTIL StdTaskTool.NEXT = 0;

                                                                StdTaskPersonnel.SETRANGE("Standard Task Code","Standard Task Code");
                                                                IF StdTaskPersonnel.FIND('-') THEN
                                                                  REPEAT
                                                                    RtngPersonnel."Routing No." := "Routing No.";
                                                                    RtngPersonnel."Version Code" := "Version Code";
                                                                    RtngPersonnel."Operation No." := "Operation No.";
                                                                    RtngPersonnel."Line No." := StdTaskPersonnel."Line No.";
                                                                    RtngPersonnel."No." := StdTaskPersonnel."No.";
                                                                    RtngPersonnel.Description := StdTaskPersonnel.Description;
                                                                    RtngPersonnel.INSERT;
                                                                  UNTIL StdTaskPersonnel.NEXT = 0;

                                                                StdTaskQltyMeasure.SETRANGE("Standard Task Code","Standard Task Code");
                                                                IF StdTaskQltyMeasure.FIND('-') THEN
                                                                  REPEAT
                                                                    RtngQltyMeasure."Routing No." := "Routing No.";
                                                                    RtngQltyMeasure."Version Code" := "Version Code";
                                                                    RtngQltyMeasure."Operation No." := "Operation No.";
                                                                    RtngQltyMeasure."Line No." := StdTaskQltyMeasure."Line No.";
                                                                    RtngQltyMeasure."Qlty Measure Code" := StdTaskQltyMeasure."Qlty Measure Code";
                                                                    RtngQltyMeasure.Description := StdTaskQltyMeasure.Description;
                                                                    RtngQltyMeasure."Min. Value" := StdTaskQltyMeasure."Min. Value";
                                                                    RtngQltyMeasure."Max. Value" := StdTaskQltyMeasure."Max. Value";
                                                                    RtngQltyMeasure."Mean Tolerance" := StdTaskQltyMeasure."Mean Tolerance";
                                                                    RtngQltyMeasure.INSERT;
                                                                  UNTIL StdTaskQltyMeasure.NEXT = 0;

                                                                StdTaskComment.SETRANGE("Standard Task Code","Standard Task Code");
                                                                IF StdTaskComment.FIND('-') THEN
                                                                  REPEAT
                                                                    RtngComment."Routing No." := "Routing No.";
                                                                    RtngComment."Version Code" := "Version Code";
                                                                    RtngComment."Operation No." := "Operation No.";
                                                                    RtngComment."Line No." := StdTaskComment."Line No.";
                                                                    RtngComment.Comment := StdTaskComment.Text;
                                                                    RtngComment.INSERT;
                                                                  UNTIL StdTaskComment.NEXT = 0;
                                                              END;

                                                   CaptionML=[DEU=Standardkatalogcode;
                                                              ENU=Standard Task Code;
                                                              NLD=Std.-taak;
                                                              NOR=Standardoppgavekode;
                                                              SVE=Standarduppgiftskod] }
    { 40  ;   ;Unit Cost per       ;Decimal       ;CaptionML=[DEU=Einstandspreis pro Einheit;
                                                              ENU=Unit Cost per;
                                                              NLD=Kostprijs per;
                                                              NOR=Enhetskost per;
                                                              SVE=Styckkostnad per];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 41  ;   ;Recalculate         ;Boolean       ;CaptionML=[DEU=Neu berechnen;
                                                              ENU=Recalculate;
                                                              NLD=Herberekenen;
                                                              NOR=Beregn pÜ nytt;
                                                              SVE=OmberÑkna];
                                                   Editable=No }
    { 45  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Routing Comment Line" WHERE (Routing No.=FIELD(Routing No.),
                                                                                                   Version Code=FIELD(Version Code),
                                                                                                   Operation No.=FIELD(Operation No.)));
                                                   CaptionML=[DEU=Bemerkung;
                                                              ENU=Comment;
                                                              NLD=Opmerking;
                                                              NOR=Merknad;
                                                              SVE=Kommentar];
                                                   Editable=No }
    { 50  ;   ;Sequence No. (Forward);Integer     ;CaptionML=[DEU=Reihenfolge (VorwÑrts);
                                                              ENU=Sequence No. (Forward);
                                                              NLD=Volgordenr. (Voorwaarts);
                                                              NOR=Rekkefõlgenr. (fremover);
                                                              SVE=Sekvensnr (framÜt)];
                                                   Editable=No }
    { 51  ;   ;Sequence No. (Backward);Integer    ;CaptionML=[DEU=Reihenfolge (RÅckwÑrts);
                                                              ENU=Sequence No. (Backward);
                                                              NLD=Volgordenr. (Achterwaarts);
                                                              NOR=Rekkefõlgenr. (bakover);
                                                              SVE=Sekvensnr (bakÜt)];
                                                   Editable=No }
    { 52  ;   ;Fixed Scrap Qty. (Accum.);Decimal  ;CaptionML=[DEU=Kum. feste Ausschussmenge;
                                                              ENU=Fixed Scrap Qty. (Accum.);
                                                              NLD=Vaste uitvalaantal (Gecum.);
                                                              NOR=Fast vrakantall (akkum.);
                                                              SVE=Fast kassationsantal (ack.)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 53  ;   ;Scrap Factor % (Accumulated);Decimal;
                                                   CaptionML=[DEU=Kum. Ausschussfaktor %;
                                                              ENU=Scrap Factor % (Accumulated);
                                                              NLD=Uitvalfactor % (Gecum.);
                                                              NOR=Vrakfaktor-% (akkumulert);
                                                              SVE=Kassationsfaktor % (ack.)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Routing No.,Version Code,Operation No.  ;Clustered=Yes }
    {    ;Routing No.,Version Code,Sequence No. (Forward) }
    {    ;Routing No.,Version Code,Sequence No. (Backward) }
    {    ;Work Center No.                          }
    {    ;Type,No.                                 }
    {    ;Routing Link Code                        }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      WorkCenter@1000 : Record 99000754;
      MachineCenter@1001 : Record 99000758;
      RtngTool@1002 : Record 99000802;
      RtngPersonnel@1003 : Record 99000803;
      RtngQltyMeasure@1004 : Record 99000805;
      RtngComment@1005 : Record 99000775;
      StdTaskTool@1006 : Record 99000781;
      StdTaskPersonnel@1007 : Record 99000782;
      StdTaskQltyMeasure@1008 : Record 99000784;
      StdTaskComment@1009 : Record 99000783;

    [External]
    PROCEDURE TestStatus@6();
    VAR
      RoutingHeader@1000 : Record 99000763;
      RoutingVersion@1001 : Record 99000786;
      IsHandled@1002 : Boolean;
    BEGIN
      IF ISTEMPORARY THEN
        EXIT;

      IsHandled := FALSE;
      OnBeforeTestStatus(Rec,IsHandled);
      IF IsHandled THEN
        EXIT;

      IF "Version Code" = '' THEN BEGIN
        RoutingHeader.GET("Routing No.");
        IF RoutingHeader.Status = RoutingHeader.Status::Certified THEN
          RoutingHeader.FIELDERROR(Status);
      END ELSE BEGIN
        RoutingVersion.GET("Routing No.","Version Code");
        IF RoutingVersion.Status = RoutingVersion.Status::Certified THEN
          RoutingVersion.FIELDERROR(Status);
      END;
    END;

    LOCAL PROCEDURE DeleteRelations@3();
    BEGIN
      RtngTool.SETRANGE("Routing No.","Routing No.");
      RtngTool.SETRANGE("Version Code","Version Code");
      RtngTool.SETRANGE("Operation No.","Operation No.");
      RtngTool.DELETEALL;

      RtngPersonnel.SETRANGE("Routing No.","Routing No.");
      RtngPersonnel.SETRANGE("Version Code","Version Code");
      RtngPersonnel.SETRANGE("Operation No.","Operation No.");
      RtngPersonnel.DELETEALL;

      RtngQltyMeasure.SETRANGE("Routing No.","Routing No.");
      RtngQltyMeasure.SETRANGE("Version Code","Version Code");
      RtngQltyMeasure.SETRANGE("Operation No.","Operation No.");
      RtngQltyMeasure.DELETEALL;

      RtngComment.SETRANGE("Routing No.","Routing No.");
      RtngComment.SETRANGE("Version Code","Version Code");
      RtngComment.SETRANGE("Operation No.","Operation No.");
      RtngComment.DELETEALL;

      OnAfterDeleteRelations(Rec);
    END;

    LOCAL PROCEDURE WorkCenterTransferFields@2();
    BEGIN
      "Work Center No." := WorkCenter."No.";
      "Work Center Group Code" := WorkCenter."Work Center Group Code";
      IF "Setup Time Unit of Meas. Code" = '' THEN
        "Setup Time Unit of Meas. Code" := WorkCenter."Unit of Measure Code";
      IF "Run Time Unit of Meas. Code" = '' THEN
        "Run Time Unit of Meas. Code" := WorkCenter."Unit of Measure Code";
      IF "Wait Time Unit of Meas. Code" = '' THEN
        "Wait Time Unit of Meas. Code" := WorkCenter."Unit of Measure Code";
      IF "Move Time Unit of Meas. Code" = '' THEN
        "Move Time Unit of Meas. Code" := WorkCenter."Unit of Measure Code";
      Description := WorkCenter.Name;

      OnAfterWorkCenterTransferFields(Rec,WorkCenter);
    END;

    LOCAL PROCEDURE MachineCtrTransferFields@1();
    BEGIN
      WorkCenter.GET(MachineCenter."Work Center No.");
      WorkCenterTransferFields;

      Description := MachineCenter.Name;
      "Setup Time" := MachineCenter."Setup Time";
      "Wait Time" := MachineCenter."Wait Time";
      "Move Time" := MachineCenter."Move Time";
      IF "Setup Time Unit of Meas. Code" = '' THEN
        "Setup Time Unit of Meas. Code" := MachineCenter."Setup Time Unit of Meas. Code";
      IF "Wait Time Unit of Meas. Code" = '' THEN
        "Wait Time Unit of Meas. Code" := MachineCenter."Wait Time Unit of Meas. Code";
      IF "Move Time Unit of Meas. Code" = '' THEN
        "Move Time Unit of Meas. Code" := MachineCenter."Move Time Unit of Meas. Code";
      "Fixed Scrap Quantity" := MachineCenter."Fixed Scrap Quantity";
      "Scrap Factor %" := MachineCenter."Scrap %";
      "Minimum Process Time" := MachineCenter."Minimum Process Time";
      "Maximum Process Time" := MachineCenter."Maximum Process Time";
      "Concurrent Capacities" := MachineCenter."Concurrent Capacities";
      "Send-Ahead Quantity" := MachineCenter."Send-Ahead Quantity";

      OnAfterMachineCtrTransferFields(Rec,WorkCenter,MachineCenter);
    END;

    [External]
    PROCEDURE SetRecalcStatus@5();
    BEGIN
      Recalculate := TRUE;
    END;

    [External]
    PROCEDURE CertifiedRoutingVersionExists@4(RtngHeaderNo@1000 : Code[20];CalculationDate@1003 : Date) : Boolean;
    VAR
      RtngHeader@1004 : Record 99000763;
      VersionMgt@1002 : Codeunit 99000756;
      CheckRoutingLines@1005 : Codeunit 99000752;
      RtngVersionCode@1001 : Code[20];
    BEGIN
      IF RtngHeaderNo = '' THEN
        EXIT(FALSE);

      RtngHeader.GET(RtngHeaderNo);
      RtngVersionCode := VersionMgt.GetRtngVersion(RtngHeaderNo,CalculationDate,TRUE);

      OnCertifiedRoutingVersionExistsOnBeforeCalculate(RtngVersionCode,RtngHeaderNo,CalculationDate);

      IF CheckRoutingLines.NeedsCalculation(RtngHeader,RtngVersionCode) THEN
        CheckRoutingLines.Calculate(RtngHeader,RtngVersionCode);

      SETRANGE("Routing No.",RtngHeaderNo);
      SETRANGE("Version Code",RtngVersionCode);
      EXIT(FINDSET);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterDeleteRelations@8(RoutingLine@1000 : Record 99000764);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterWorkCenterTransferFields@15(VAR RoutingLine@1000 : Record 99000764;WorkCenter@1001 : Record 99000754);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterMachineCtrTransferFields@16(VAR RoutingLine@1000 : Record 99000764;WorkCenter@1001 : Record 99000754;MachineCenter@1002 : Record 99000758);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeTestStatus@7(VAR RoutingLine@1000 : Record 99000764;VAR IsHandled@1001 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnCertifiedRoutingVersionExistsOnBeforeCalculate@9(VAR RtngVersionCode@1000 : Code[20];RtngHeaderNo@1001 : Code[20];CalculationDate@1002 : Date);
    BEGIN
    END;

    BEGIN
    END.
  }
}

