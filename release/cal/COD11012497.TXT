OBJECT Codeunit 11012497 CTRL Subscribers
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CTRLSetup@1100528302 : Record 11125686;
      CTRLProcessManagement@1100528300 : Codeunit 11012495;
      Counter@1100528303 : Integer;

    [EventSubscriber(Table,11071816,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteComplex@1100528454(VAR Rec@1100528300 : Record 11071816;RunTrigger@1100528301 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11071816,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertComplex@1100528437(VAR Rec@1100528300 : Record 11071816;RunTrigger@1100528301 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11071816,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyComplex@1100528435(VAR Rec@1100528300 : Record 11071816;VAR xRec@1100528301 : Record 11071816;RunTrigger@1100528302 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11071816,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameComplex@1100528434(VAR Rec@1100528300 : Record 11071816;VAR xRec@1100528301 : Record 11071816;RunTrigger@1100528302 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      OnAfterDeleteComplex(xRec, RunTrigger);
      OnAfterInsertComplex(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,5050,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteContact@1100528321(VAR Rec@1100528300 : Record 5050;RunTrigger@1100528301 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
      CurrCompany@1100527800 : Text;
    BEGIN
      IF (Rec.ISTEMPORARY) THEN
        EXIT;
      CurrCompany := SetCtrlSetupCompany(Rec);
      IF (NOT CtrlIsActive) THEN
        EXIT;
      GetContact(Rec, Rec);

      CASE TRUE OF
        (Rec.Type = Rec.Type::Company):
          AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, CurrCompany);
        (Rec.Type = Rec.Type::Person) AND (Rec."Company No." <> ''):
          ContactContactPersonEvent(Rec, CTRLProcessManagement.GetDeleteTxt, CurrCompany);
      END;
    END;

    [EventSubscriber(Table,5050,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertContact@1100528322(VAR Rec@1100528300 : Record 5050;RunTrigger@1100528301 : Boolean);
    VAR
      CurrCompany@1100527800 : Text;
    BEGIN
      IF (Rec.ISTEMPORARY) THEN
        EXIT;
      CurrCompany := SetCtrlSetupCompany(Rec);
      IF (NOT CtrlIsActive) THEN
        EXIT;
      GetContact(Rec, Rec);

      CASE TRUE OF
        (Rec.Type = Rec.Type::Company): BEGIN
          IF (Rec."Available for Control") THEN
            ContactCompanyEvent(Rec, CTRLProcessManagement.GetInsertTxt, CurrCompany);
        END;
        (Rec.Type = Rec.Type::Person) AND (Rec."Company No." <> ''):
          ContactContactPersonEvent(Rec, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
      END;
    END;

    [EventSubscriber(Table,5050,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyContact@1100528309(VAR Rec@1100528300 : Record 5050;VAR xRec@1100528301 : Record 5050;RunTrigger@1100528302 : Boolean);
    VAR
      Contact@1100527801 : Record 5050;
      GenericProcesQueue@1100528303 : Record 11229430;
      FieldChecksum@1100528304 : Record 11229419;
      CurrCompany@1100527800 : Text;
    BEGIN
      IF (Rec.ISTEMPORARY) THEN
        EXIT;
      CurrCompany := SetCtrlSetupCompany(Rec);
      IF (NOT CtrlIsActive) THEN
        EXIT;
      GetContact(Rec, xRec);
      IF (NOT Rec."Available for Control" AND NOT xRec."Available for Control") THEN
        EXIT;

      CASE TRUE OF
        (Rec.Type = Rec.Type::Company): BEGIN
          FieldChecksum.UpdateHashValue(Rec.RECORDID, Rec.FIELDNO(Image));
          AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, CurrCompany);
        END;
        (Rec.Type = Rec.Type::Person) AND (Rec."Company No." <> ''):
          ContactContactPersonEvent(Rec, CTRLProcessManagement.GetModifyTxt, CurrCompany);
      END;
    END;

    [EventSubscriber(Table,5050,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameContact@1100528323(VAR Rec@1100528300 : Record 5050;VAR xRec@1100528301 : Record 5050;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteContact(xRec, RunTrigger);
      OnAfterInsertContact(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11071702,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteContractObject@1100528318(VAR Rec@1100528300 : Record 11071702;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ContractObjectEvent(Rec, CTRLProcessManagement.GetDeleteTxt);
    END;

    [EventSubscriber(Table,11071702,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertContractObject@1100528317(VAR Rec@1100528300 : Record 11071702;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ContractObjectEvent(Rec, CTRLProcessManagement.GetInsertTxt);
    END;

    [EventSubscriber(Table,11071702,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyContractObject@1100528316(VAR Rec@1100528300 : Record 11071702;VAR xRec@1100528301 : Record 11071702;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ContractObjectEvent(Rec, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11071702,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameContractObject@1100528313(VAR Rec@1100528300 : Record 11071702;VAR xRec@1100528301 : Record 11071702;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteContractObject(xRec, RunTrigger);
      OnAfterInsertContractObject(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,9,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteCountryRegion@1100528416(VAR Rec@1100528300 : Record 9;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,9,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertCountryRegion@1100528415(VAR Rec@1100528300 : Record 9;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,9,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyCountryRegion@1100528410(VAR Rec@1100528300 : Record 9;VAR xRec@1100528301 : Record 9;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,9,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameCountryRegion@1100528409(VAR Rec@1100528300 : Record 9;VAR xRec@1100528301 : Record 9;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteCountryRegion(xRec, RunTrigger);
      OnAfterInsertCountryRegion(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,18,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteCustomer@1100528341(VAR Rec@1100528300 : Record 18;RunTrigger@1100528301 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      CustomerEvent(Rec, CTRLProcessManagement.GetDeleteTxt);
    END;

    [EventSubscriber(Table,18,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertCustomer@1100528342(VAR Rec@1100528300 : Record 18;RunTrigger@1100528301 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      CustomerEvent(Rec, CTRLProcessManagement.GetInsertTxt);
    END;

    [EventSubscriber(Table,18,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyCustomer@1100528300(VAR Rec@1100528300 : Record 18;VAR xRec@1100528301 : Record 18;RunTrigger@1100528302 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      CustomerEvent(Rec, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,18,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameCustomer@1100528343(VAR Rec@1100528300 : Record 18;VAR xRec@1100528301 : Record 18;RunTrigger@1100528302 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      OnAfterDeleteCustomer(xRec, RunTrigger);
      OnAfterInsertCustomer(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11071728,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteCustomerServiceAnalysis@1100528381(VAR Rec@1100528300 : Record 11071728;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11071728,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertCustomerServiceAnalysis@1100528380(VAR Rec@1100528300 : Record 11071728;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11071728,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyCustomerServiceAnalysis@1100528379(VAR Rec@1100528300 : Record 11071728;VAR xRec@1100528301 : Record 11071728;RunTrigger@1100528302 : Boolean);
    VAR
      Customer@1100528303 : Record 18;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11071728,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameCustomerServiceAnalysis@1100528377(VAR Rec@1100528300 : Record 11071728;VAR xRec@1100528301 : Record 11071728;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteCustomerServiceAnalysis(xRec, RunTrigger);
      OnAfterInsertCustomerServiceAnalysis(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012886,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteDebriefText@1100527809(VAR Rec@1100527800 : Record 11012886;RunTrigger@1100527801 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      DebriefTextEvent(Rec, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11012886,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertDebriefText@1100527810(VAR Rec@1100527800 : Record 11012886;RunTrigger@1100527801 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      DebriefTextEvent(Rec, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11012886,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyDebriefText@1100527813(VAR Rec@1100527800 : Record 11012886;VAR xRec@1100527801 : Record 11012886;RunTrigger@1100527802 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      DebriefTextEvent(Rec, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11012886,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameDebriefText@1100527814(VAR Rec@1100527800 : Record 11012886;VAR xRec@1100527801 : Record 11012886;RunTrigger@1100527802 : Boolean);
    BEGIN
      OnAfterDeleteDebriefText(xRec, RunTrigger);
      OnAfterInsertDebriefText(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012885,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteDebriefTextRubric@1100528496(VAR Rec@1100528300 : Record 11012885;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      DebriefTextRubricEvent(Rec, 0, CTRLProcessManagement.GetDeleteTxt);
    END;

    [EventSubscriber(Table,11012885,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertDebriefTextRubric@1100528499(VAR Rec@1100528300 : Record 11012885;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      DebriefTextRubricEvent(Rec, 0, CTRLProcessManagement.GetInsertTxt);
    END;

    [EventSubscriber(Table,11012885,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyDebriefTextRebric@1100528506(VAR Rec@1100528300 : Record 11012885;VAR xRec@1100528301 : Record 11012885;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      DebriefTextRubricEvent(Rec, xRec, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11012885,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameDebriefTextRebric@1100528508(VAR Rec@1100528300 : Record 11012885;VAR xRec@1100528301 : Record 11012885;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteDebriefTextRubric(xRec,RunTrigger);
      OnAfterInsertDebriefTextRubric(Rec,RunTrigger);
    END;

    [EventSubscriber(Table,11020204,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteDiscipline@1100528364(VAR Rec@1100528300 : Record 11020204;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11020204,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertDiscipline@1100528368(VAR Rec@1100528300 : Record 11020204;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11020204,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyDiscipline@1100528367(VAR Rec@1100528300 : Record 11020204;VAR xRec@1100528301 : Record 11020204;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11020204,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameDiscipline@1100528366(VAR Rec@1100528300 : Record 11020204;VAR xRec@1100528301 : Record 11020204;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteDiscipline(xRec, RunTrigger);
      OnAfterInsertDiscipline(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012147,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteDocumentCategory@1100528465(VAR Rec@1100528300 : Record 11012147;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012147,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertDocumentCategory@1100528464(VAR Rec@1100528300 : Record 11012147;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012147,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyDocumentCategory@1100528463(VAR Rec@1100528300 : Record 11012147;VAR xRec@1100528301 : Record 11012147;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012147,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameDocumentCategory@1100528461(VAR Rec@1100528300 : Record 11012147;VAR xRec@1100528301 : Record 11012147;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteDocumentCategory(xRec, RunTrigger);
      OnAfterInsertDocumentCategory(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012747,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteDocumentLink@1100528340(VAR Rec@1100528300 : Record 11012747;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      DeleteDocumentLinkEvent(Rec);
    END;

    [EventSubscriber(Table,11012747,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertDocumentLink@1100528338(VAR Rec@1100528300 : Record 11012747;RunTrigger@1100528301 : Boolean);
    BEGIN
      OnAfterModifyDocumentLink(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012747,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyDocumentLink@1100528337(VAR Rec@1100528300 : Record 11012747;VAR xRec@1100528301 : Record 11012747;RunTrigger@1100528302 : Boolean);
    VAR
      DocumentProperties@1100528303 : Record 11012746;
      CTRLManagement@1100528304 : Codeunit 11012498;
    BEGIN
      IF (Rec.ISTEMPORARY) OR (NOT RunTrigger) THEN
        EXIT;
      Rec.SetDocumentPropertiesShowInControl;
      IF (NOT DocumentProperties.GET(Rec."Document No.")) THEN
        EXIT;
      IF (DocumentProperties."Show in Control") THEN
        AddThisEvent(DocumentProperties.RECORDID, DocumentProperties.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012747,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameDocumentLink@1100528335(VAR Rec@1100528300 : Record 11012747;VAR xRec@1100528301 : Record 11012747;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterModifyDocumentLink(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012746,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteDocumentProperties@1100528314(VAR Rec@1100528300 : Record 11012746;RunTrigger@1100528301 : Boolean);
    BEGIN
      OnAfterModifyDocumentProperties(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012746,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertDocumentProperties@1100528329(VAR Rec@1100528300 : Record 11012746;RunTrigger@1100528301 : Boolean);
    BEGIN
      OnAfterModifyDocumentProperties(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012746,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyDocumentProperties@1100528328(VAR Rec@1100528300 : Record 11012746;VAR xRec@1100528301 : Record 11012746;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (Rec.ISTEMPORARY) OR (NOT RunTrigger) OR (NOT Rec."Show in Control" AND NOT xRec."Show in Control") THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012746,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameDocumentProperties@1100528305(VAR Rec@1100528300 : Record 11012746;VAR xRec@1100528301 : Record 11012746;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterModifyDocumentProperties(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012405,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteDocumentType@1100528468(VAR Rec@1100528300 : Record 11012405;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012405,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertDocumentType@1100528467(VAR Rec@1100528300 : Record 11012405;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012405,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyDocumentType@1100528466(VAR Rec@1100528300 : Record 11012405;VAR xRec@1100528301 : Record 11012405;RunTrigger@1100528302 : Boolean);
    VAR
      GenericProcesQueue@1100528500 : Record 11229430;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      IF (NOT GenericProcesQueue.CheckQueueExists(COMPANYNAME,Rec.RECORDID,FALSE)) THEN
        AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012405,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameDocumentType@1100528462(VAR Rec@1100528300 : Record 11012405;VAR xRec@1100528301 : Record 11012405;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteDocumentType(xRec, RunTrigger);
      OnAfterInsertDocumentType(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,5200,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteEmployee@1100528421(VAR Rec@1100528300 : Record 5200;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,5200,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertEmployee@1100528420(VAR Rec@1100528300 : Record 5200;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,5200,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyEmployee@1100528419(VAR Rec@1100528300 : Record 5200;VAR xRec@1100528301 : Record 5200;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,5200,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameEmployee@1100528418(VAR Rec@1100528300 : Record 5200;VAR xRec@1100528301 : Record 5200;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteEmployee(xRec, RunTrigger);
      OnAfterInsertEmployee(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11072003,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteJob@1100528347(VAR Rec@1100528300 : Record 11072003;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      JobEvent(Rec,0,CTRLProcessManagement.GetDeleteTxt);
    END;

    [EventSubscriber(Table,11072003,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertJob@1100528346(VAR Rec@1100528300 : Record 11072003;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      JobEvent(Rec, 0, CTRLProcessManagement.GetInsertTxt);
    END;

    [EventSubscriber(Table,11072003,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyJob@1100528345(VAR Rec@1100528300 : Record 11072003;VAR xRec@1100528301 : Record 11072003;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      JobEvent(Rec, xRec, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11072003,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameJob@1100528320(VAR Rec@1100528300 : Record 11072003;VAR xRec@1100528301 : Record 11072003;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteJob(xRec, RunTrigger);
      OnAfterInsertJob(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11071745,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteMaintenanceScheme@1100528388(VAR Rec@1100528300 : Record 11071745;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11071745,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertMaintenanceScheme@1100528387(VAR Rec@1100528300 : Record 11071745;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11071745,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyMaintenanceScheme@1100528386(VAR Rec@1100528300 : Record 11071745;VAR xRec@1100528301 : Record 11071745;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11071745,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameMaintenanceScheme@1100528365(VAR Rec@1100528300 : Record 11071745;VAR xRec@1100528301 : Record 11071745;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteMaintenanceScheme(xRec, RunTrigger);
      OnAfterInsertMaintenanceScheme(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11071781,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteObjectSpecificationLine@1100527801(VAR Rec@1100527800 : Record 11071781;RunTrigger@1100527801 : Boolean);
    VAR
      ServiceObject@1100528303 : Record 11071691;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ObjectSpecificationLineEvent(Rec);
    END;

    [EventSubscriber(Table,11071781,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertObjectSpecificationLine@1100527800(VAR Rec@1100527800 : Record 11071781;RunTrigger@1100527801 : Boolean);
    VAR
      ServiceObject@1100527802 : Record 11071691;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ObjectSpecificationLineEvent(Rec);
    END;

    [EventSubscriber(Table,11071781,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyObjectSpecificationLine@1100527802(VAR Rec@1100527800 : Record 11071781;VAR xRec@1100527801 : Record 11071781;RunTrigger@1100527802 : Boolean);
    VAR
      ServiceObject@1100527803 : Record 11071691;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ObjectSpecificationLineEvent(Rec);
    END;

    [EventSubscriber(Table,11071781,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameObjectSpecificationLine@1100527803(VAR Rec@1100527800 : Record 11071781;VAR xRec@1100527801 : Record 11071781;RunTrigger@1100527802 : Boolean);
    VAR
      ServiceObject@1100527803 : Record 11071691;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ObjectSpecificationLineEvent(Rec);
    END;

    [EventSubscriber(Table,11012026,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteProjectPurchaseAction@1100527822(VAR Rec@1100527800 : Record 11012026;RunTrigger@1100527801 : Boolean);
    VAR
      ServiceContract@1100528303 : Record 11012812;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012026,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertProjectPurchaseAction@1100527821(VAR Rec@1100527800 : Record 11012026;RunTrigger@1100527801 : Boolean);
    VAR
      ServiceContract@1100528303 : Record 11012812;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012026,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyProjectPurchaseAction@1100527820(VAR Rec@1100527800 : Record 11012026;VAR xRec@1100527801 : Record 11012026;RunTrigger@1100527802 : Boolean);
    VAR
      ServiceContract@1100528303 : Record 11012812;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012026,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameProjectPurchaseAction@1100527819(VAR Rec@1100527800 : Record 11012026;VAR xRec@1100527801 : Record 11012026;RunTrigger@1100527802 : Boolean);
    VAR
      ServiceContract@1100528303 : Record 11012812;
    BEGIN
      OnAfterDeleteProjectPurchaseAction(xRec, RunTrigger);
      OnAfterInsertProjectPurchaseAction(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,38,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeletePurchaseHeader@1100528481(VAR Rec@1100528300 : Record 38;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      PurchaseHeaderEvent(Rec, 0, CTRLProcessManagement.GetDeleteTxt);
    END;

    [EventSubscriber(Table,38,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertPurchaseHeader@1100528476(VAR Rec@1100528300 : Record 38;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      PurchaseHeaderEvent(Rec, 0, CTRLProcessManagement.GetInsertTxt);
    END;

    [EventSubscriber(Table,38,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyPurchaseHeader@1100528482(VAR Rec@1100528300 : Record 38;VAR xRec@1100528301 : Record 38;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      PurchaseHeaderEvent(Rec, xRec, CTRLProcessManagement.GetInsertTxt);
    END;

    [EventSubscriber(Table,38,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenamePurchaseHeader@1100528483(VAR Rec@1100528300 : Record 38;VAR xRec@1100528301 : Record 38;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      OnAfterDeletePurchaseHeader(Rec, RunTrigger);
      OnAfterInsertPurchaseHeader(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,39,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeletePurchaseLine@1100528484(VAR Rec@1100528300 : Record 39;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      PurchaseLineEvent(Rec, CTRLProcessManagement.GetDeleteTxt);
    END;

    [EventSubscriber(Table,39,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertPurchaseLine@1100528485(VAR Rec@1100528300 : Record 39;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      PurchaseLineEvent(Rec, CTRLProcessManagement.GetInsertTxt);
    END;

    [EventSubscriber(Table,39,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyPurchaseLine@1100528486(VAR Rec@1100528300 : Record 39;VAR xRec@1100528301 : Record 39;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      PurchaseLineEvent(Rec, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,39,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenamePurchaseLine@1100528488(VAR Rec@1100528300 : Record 39;VAR xRec@1100528301 : Record 39;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeletePurchaseLine(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012009,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteProjectType@1100528433(VAR Rec@1100528300 : Record 11012009;RunTrigger@1100528301 : Boolean);
    VAR
      ServiceContract@1100528303 : Record 11012812;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012009,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertProjectType@1100528432(VAR Rec@1100528300 : Record 11012009;RunTrigger@1100528301 : Boolean);
    VAR
      ServiceContract@1100528303 : Record 11012812;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012009,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyProjectType@1100528431(VAR Rec@1100528300 : Record 11012009;VAR xRec@1100528301 : Record 11012009;RunTrigger@1100528302 : Boolean);
    VAR
      ServiceContract@1100528303 : Record 11012812;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012009,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameProjectType@1100528430(VAR Rec@1100528300 : Record 11012009;VAR xRec@1100528301 : Record 11012009;RunTrigger@1100528302 : Boolean);
    VAR
      ServiceContract@1100528303 : Record 11012812;
    BEGIN
      OnAfterDeleteProjectType(xRec, RunTrigger);
      OnAfterInsertProjectType(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012856,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteReferenceNorm@1100528399(VAR Rec@1100528300 : Record 11012856;RunTrigger@1100528301 : Boolean);
    BEGIN
      OnAfterModifyReferenceNorm(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012856,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertReferenceNorm@1100528398(VAR Rec@1100528300 : Record 11012856;RunTrigger@1100528301 : Boolean);
    BEGIN
      OnAfterModifyReferenceNorm(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012856,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyReferenceNorm@1100528397(VAR Rec@1100528300 : Record 11012856;VAR xRec@1100528301 : Record 11012856;RunTrigger@1100528303 : Boolean);
    VAR
      ServiceContract@1100528302 : Record 11012812;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      IF (NOT ServiceContract.GET(Rec."Service Contract No.")) THEN
        EXIT;
      ServiceContractEvent(ServiceContract, 0, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11012856,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameReferenceNorm@1100528396(VAR Rec@1100528300 : Record 11012856;VAR xRec@1100528301 : Record 11012856;RunTrigger@1100528303 : Boolean);
    BEGIN
      OnAfterModifyReferenceNorm(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11020272,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteReferencePeriod@1100528330(VAR Rec@1100528300 : Record 11020272;RunTrigger@1100528301 : Boolean);
    VAR
      Customer@1100528302 : Record 18;
    BEGIN
      OnAfterModifyReferencePeriod(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11020272,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertReferencePeriod@1100528395(VAR Rec@1100528300 : Record 11020272;RunTrigger@1100528301 : Boolean);
    VAR
      Customer@1100528302 : Record 18;
    BEGIN
      OnAfterModifyReferencePeriod(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11020272,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyReferencePeriod@1100528394(VAR Rec@1100528300 : Record 11020272;VAR xRec@1100528301 : Record 11020272;RunTrigger@1100528303 : Boolean);
    VAR
      ServiceOrder@1100528302 : Record 11012823;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) OR (Rec.Type <> Rec.Type::ServOrder) THEN
        EXIT;
      IF (NOT ServiceOrder.GET(Rec."Document No.")) THEN
        EXIT;
      ServiceOrderEvent(ServiceOrder, 0, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11020272,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameReferencePeriod@1100528389(VAR Rec@1100528300 : Record 11020272;VAR xRec@1100528301 : Record 11020272;RunTrigger@1100528303 : Boolean);
    VAR
      Customer@1100528302 : Record 18;
    BEGIN
      OnAfterModifyReferencePeriod(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11020271,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteReferencePoint@1100528457(VAR Rec@1100528300 : Record 11020271;RunTrigger@1100528301 : Boolean);
    VAR
      Customer@1100528302 : Record 18;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11020271,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertReferencePoint@1100528456(VAR Rec@1100528300 : Record 11020271;RunTrigger@1100528301 : Boolean);
    VAR
      Customer@1100528302 : Record 18;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11020271,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyReferencePoint@1100528455(VAR Rec@1100528300 : Record 11020271;VAR xRec@1100528301 : Record 11020271;RunTrigger@1100528303 : Boolean);
    VAR
      Customer@1100528302 : Record 18;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11020271,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameReferencePoint@1100528306(VAR Rec@1100528300 : Record 11020271;VAR xRec@1100528301 : Record 11020271;RunTrigger@1100528303 : Boolean);
    VAR
      Customer@1100528302 : Record 18;
    BEGIN
      OnAfterDeleteReferencePoint(xRec, RunTrigger);
      OnAfterInsertReferencePoint(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11229278,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteResourceWop@1100528400(VAR Rec@1100528300 : Record 11229278;RunTrigger@1100528301 : Boolean);
    VAR
      Customer@1100528302 : Record 18;
    BEGIN
      ResourceWOPEvent(Rec,CTRLProcessManagement.GetDeleteTxt);
    END;

    [EventSubscriber(Table,11229278,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertResourceWop@1100528383(VAR Rec@1100528300 : Record 11229278;RunTrigger@1100528301 : Boolean);
    VAR
      Customer@1100528302 : Record 18;
    BEGIN
      ResourceWOPEvent(Rec,CTRLProcessManagement.GetInsertTxt);
    END;

    [EventSubscriber(Table,11229278,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyResourceWop@1100528344(VAR Rec@1100528300 : Record 11229278;VAR xRec@1100528301 : Record 11229278;RunTrigger@1100528303 : Boolean);
    BEGIN
      ResourceWOPEvent(Rec,CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11229278,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameResourceWop@1100528336(VAR Rec@1100528300 : Record 11229278;VAR xRec@1100528301 : Record 11229278;RunTrigger@1100528303 : Boolean);
    VAR
      Customer@1100528302 : Record 18;
    BEGIN
      OnAfterDeleteResourceWop(xRec, RunTrigger);
      OnAfterInsertResourceWop(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,13,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteSalespersonPurchaser@1100528408(VAR Rec@1100528300 : Record 13;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,13,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertSalespersonPurchaser@1100528407(VAR Rec@1100528300 : Record 13;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,13,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifySalespersonPurchaser@1100528406(VAR Rec@1100528300 : Record 13;VAR xRec@1100528301 : Record 13;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,13,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameSalespersonPurchaser@1100528405(VAR Rec@1100528300 : Record 13;VAR xRec@1100528301 : Record 13;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteSalespersonPurchaser(xRec, RunTrigger);
      OnAfterInsertSalespersonPurchaser(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11229794,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteSaveFileExtension@1100528429(VAR Rec@1100528300 : Record 11229794;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11229794,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertSaveFileExtension@1100528428(VAR Rec@1100528300 : Record 11229794;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11229794,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifySaveFileExtension@1100528423(VAR Rec@1100528300 : Record 11229794;VAR xRec@1100528301 : Record 11229794;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11229794,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameSaveFileExtension@1100528422(VAR Rec@1100528300 : Record 11229794;VAR xRec@1100528301 : Record 11229794;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteSaveFileExtension(xRec, RunTrigger);
      OnAfterInsertSaveFileExtension(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012842,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServiceAnalysis@1100528376(VAR Rec@1100528300 : Record 11012842;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012842,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServiceAnalysis@1100528375(VAR Rec@1100528300 : Record 11012842;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012842,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyServiceAnalysis@1100528374(VAR Rec@1100528300 : Record 11012842;VAR xRec@1100528301 : Record 11012842;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012842,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameServiceAnalysis@1100528373(VAR Rec@1100528300 : Record 11012842;VAR xRec@1100528301 : Record 11012842;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteServiceAnalysis(xRec, RunTrigger);
      OnAfterInsertServiceAnalysis(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012822,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServiceCall@1100528351(VAR Rec@1100528300 : Record 11012822;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ServiceCallEvent(Rec, 0, CTRLProcessManagement.GetDeleteTxt);
    END;

    [EventSubscriber(Table,11012822,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServiceCall@1100528350(VAR Rec@1100528300 : Record 11012822;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ServiceCallEvent(Rec, 0,CTRLProcessManagement.GetInsertTxt);
      ServiceCallSendEmailEvent(Rec, Rec, CTRLProcessManagement.GetInsertTxt);
    END;

    [EventSubscriber(Table,11012822,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyServiceCall@1100528349(VAR Rec@1100528300 : Record 11012822;VAR xRec@1100528301 : Record 11012822;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ServiceCallEvent(Rec, xRec, CTRLProcessManagement.GetModifyTxt);
      ServiceCallSendEmailEvent(Rec, xRec, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11012822,OnBeforeModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnBeforeModifyServiceCall@1100528493(VAR Rec@1100528300 : Record 11012822;VAR xRec@1100528301 : Record 11012822;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT xRec.GET(Rec."No.")) THEN
        EXIT;
      ServiceCallSendEmailEvent(Rec, xRec, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11012822,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameServiceCall@1100528308(VAR Rec@1100528300 : Record 11012822;VAR xRec@1100528301 : Record 11012822;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteServiceCall(xRec, RunTrigger);
      OnAfterInsertServiceCall(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11020333,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServiceCallIndication@1100528473(VAR Rec@1100528300 : Record 11020333;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11020333,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServiceCallIndication@1100528472(VAR Rec@1100528300 : Record 11020333;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11020333,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyServiceCallIndication@1100528471(VAR Rec@1100528300 : Record 11020333;VAR xRec@1100528301 : Record 11020333;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11020333,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameServiceCallIndication@1100528470(VAR Rec@1100528300 : Record 11020333;VAR xRec@1100528301 : Record 11020333;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteServiceCallIndication(xRec, RunTrigger);
      OnAfterInsertServiceCallIndication(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11071985,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServiceCategory@1100528404(VAR Rec@1100528300 : Record 11071985;RunTrigger@1100528301 : Boolean);
    BEGIN
      OnAfterModifyServiceCategory(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11071985,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServiceCategory@1100528403(VAR Rec@1100528300 : Record 11071985;RunTrigger@1100528301 : Boolean);
    BEGIN
      OnAfterModifyServiceCategory(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11071985,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyServiceCategory@1100528402(VAR Rec@1100528300 : Record 11071985;VAR xRec@1100528301 : Record 11071985;RunTrigger@1100528302 : Boolean);
    VAR
      ServiceContract@1100528303 : Record 11012812;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      IF (NOT ServiceContract.GET(Rec."Service Contract No.")) THEN
        EXIT;
      OnAfterModifyServiceContract(ServiceContract, ServiceContract, TRUE);
    END;

    [EventSubscriber(Table,11071985,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameServiceCategory@1100528401(VAR Rec@1100528300 : Record 11071985;VAR xRec@1100528301 : Record 11071985;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterModifyServiceCategory(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012812,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServiceContract@1100528356(VAR Rec@1100528300 : Record 11012812;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ServiceContractEvent(Rec, 0, CTRLProcessManagement.GetDeleteTxt);
    END;

    [EventSubscriber(Table,11012812,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServiceContract@1100528355(VAR Rec@1100528300 : Record 11012812;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ServiceContractEvent(Rec, 0, CTRLProcessManagement.GetInsertTxt);
    END;

    [EventSubscriber(Table,11012812,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyServiceContract@1100528354(VAR Rec@1100528300 : Record 11012812;VAR xRec@1100528301 : Record 11012812;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ServiceContractEvent(Rec, xRec, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11012812,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameServiceContract@1100528301(VAR Rec@1100528300 : Record 11012812;VAR xRec@1100528301 : Record 11012812;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteServiceContract(xRec, RunTrigger);
      OnAfterInsertServiceContract(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012880,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServiceContractPriority@1100528390(VAR Rec@1100528300 : Record 11012880;RunTrigger@1100528301 : Boolean);
    BEGIN
      OnAfterModifyServiceContractPriority(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012880,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServiceContractPriority@1100528393(VAR Rec@1100528300 : Record 11012880;RunTrigger@1100528301 : Boolean);
    BEGIN
      OnAfterModifyServiceContractPriority(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012880,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyServiceContractPriority@1100528392(VAR Rec@1100528300 : Record 11012880;VAR xRec@1100528301 : Record 11012880;RunTrigger@1100528302 : Boolean);
    VAR
      ServiceContract@1100528303 : Record 11012812;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      IF (NOT ServiceContract.GET(Rec."Service Contract No.")) THEN
        EXIT;
      OnAfterModifyServiceContract(ServiceContract, ServiceContract, RunTrigger);
    END;

    [EventSubscriber(Table,11012880,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameServiceContractPriority@1100528391(VAR Rec@1100528300 : Record 11012880;VAR xRec@1100528301 : Record 11012880;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterModifyServiceContractPriority(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012801,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServiceLocation@1100528359(VAR Rec@1100528300 : Record 11012801;RunTrigger@1100528301 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ServiceLocationEvent(Rec, 0, CTRLProcessManagement.GetDeleteTxt);
    END;

    [EventSubscriber(Table,11012801,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServiceLocation@1100528358(VAR Rec@1100528300 : Record 11012801;RunTrigger@1100528301 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ServiceLocationEvent(Rec, 0, CTRLProcessManagement.GetInsertTxt);
    END;

    [EventSubscriber(Table,11012801,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyServiceLocation@1100528357(VAR Rec@1100528300 : Record 11012801;VAR xRec@1100528301 : Record 11012801;RunTrigger@1100528302 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ServiceLocationEvent(Rec, xRec, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11012801,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameServiceLocation@1100528304(VAR Rec@1100528300 : Record 11012801;VAR xRec@1100528301 : Record 11012801;RunTrigger@1100528302 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      OnAfterDeleteServiceLocation(xRec, RunTrigger);
      OnAfterInsertServiceLocation(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11072280,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServiceLocationType@1100528475(VAR Rec@1100528300 : Record 11072280;RunTrigger@1100528301 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11072280,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServiceLocationType@1100528474(VAR Rec@1100528300 : Record 11072280;RunTrigger@1100528301 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11072280,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyServiceLocationType@1100528469(VAR Rec@1100528300 : Record 11072280;VAR xRec@1100528301 : Record 11072280;RunTrigger@1100528302 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11072280,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameServiceLocationType@1100528459(VAR Rec@1100528300 : Record 11072280;VAR xRec@1100528301 : Record 11072280;RunTrigger@1100528302 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      OnAfterDeleteServiceLocationType(xRec, RunTrigger);
      OnAfterInsertServiceLocationType(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11071691,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServiceObject@1100528362(VAR Rec@1100528300 : Record 11071691;RunTrigger@1100528301 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ServiceObjectEvent(Rec, CTRLProcessManagement.GetDeleteTxt);
    END;

    [EventSubscriber(Table,11071691,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServiceObject@1100528361(VAR Rec@1100528300 : Record 11071691;RunTrigger@1100528301 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ServiceObjectEvent(Rec, CTRLProcessManagement.GetInsertTxt);
    END;

    [EventSubscriber(Table,11071691,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyServiceObject@1100528360(VAR Rec@1100528300 : Record 11071691;VAR xRec@1100528301 : Record 11071691;RunTrigger@1100528302 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ServiceObjectEvent(Rec, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11071691,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameServiceObject@1100528339(VAR Rec@1100528300 : Record 11071691;VAR xRec@1100528301 : Record 11071691;RunTrigger@1100528302 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      OnAfterDeleteServiceObject(xRec, RunTrigger);
      OnAfterInsertServiceObject(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11072195,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServiceObjectBrand@1100528442(VAR Rec@1100528300 : Record 11072195;RunTrigger@1100528301 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11072195,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServiceObjectBrand@1100528441(VAR Rec@1100528300 : Record 11072195;RunTrigger@1100528301 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11072195,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAftermodifyServiceObjectBrand@1100528440(VAR Rec@1100528300 : Record 11072195;VAR xRec@1100528301 : Record 11072195;RunTrigger@1100528302 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11072195,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterrenameServiceObjectBrand@1100528439(VAR Rec@1100528300 : Record 11072195;VAR xRec@1100528301 : Record 11072195;RunTrigger@1100528302 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      OnAfterDeleteServiceObjectBrand(xRec, RunTrigger);
      OnAfterInsertServiceObjectBrand(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11072196,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServiceObjectModel@1100528447(VAR Rec@1100528300 : Record 11072196;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11072196,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServiceObjectModel@1100528446(VAR Rec@1100528300 : Record 11072196;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11072196,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyServiceObjectModel@1100528445(VAR Rec@1100528300 : Record 11072196;VAR xRec@1100528301 : Record 11072196;RunTrigger@1100528303 : Boolean);
    VAR
      ServiceObjectBrand@1100528302 : Record 11072195;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11072196,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameServiceObjectModel@1100528444(VAR Rec@1100528300 : Record 11072196;VAR xRec@1100528301 : Record 11072196;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteServiceObjectModel(xRec, RunTrigger);
      OnAfterInsertServiceObjectModel(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11071980,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServiceObjectStatus@1100528450(VAR Rec@1100528300 : Record 11071980;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11071980,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServiceObjectStatus@1100528449(VAR Rec@1100528300 : Record 11071980;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11071980,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyServiceObjectStatus@1100528448(VAR Rec@1100528300 : Record 11071980;VAR xRec@1100528301 : Record 11071980;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11071980,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameServiceObjectStatus@1100528443(VAR Rec@1100528300 : Record 11071980;VAR xRec@1100528301 : Record 11071980;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteServiceObjectStatus(xRec, RunTrigger);
      OnAfterInsertServiceObjectStatus(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11072197,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServiceObjectType@1100528453(VAR Rec@1100528300 : Record 11072197;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11072197,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServiceObjectType@1100528452(VAR Rec@1100528300 : Record 11072197;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11072197,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAftermodifyServiceObjectType@1100528451(VAR Rec@1100528300 : Record 11072197;VAR xRec@1100528301 : Record 11072197;RunTrigger@1100528302 : Boolean);
    VAR
      ServiceObjectModel@1100528305 : Record 11072196;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11072197,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameServiceObjectType@1100528438(VAR Rec@1100528300 : Record 11072197;VAR xRec@1100528301 : Record 11072197;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteServiceObjectType(xRec, RunTrigger);
      OnAfterInsertServiceObjectType(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012823,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServiceOrder@1100528384(VAR Rec@1100528300 : Record 11012823;RunTrigger@1100528301 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ServiceOrderEvent(Rec, 0, CTRLProcessManagement.GetDeleteTxt);
    END;

    [EventSubscriber(Table,11012823,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServiceOrder@1100528382(VAR Rec@1100528300 : Record 11012823;RunTrigger@1100528301 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ServiceOrderEvent(Rec, 0, CTRLProcessManagement.GetInsertTxt);
    END;

    [EventSubscriber(Table,11012823,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyServiceOrder@1100528378(VAR Rec@1100528300 : Record 11012823;VAR xRec@1100528301 : Record 11012823;RunTrigger@1100528302 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ServiceOrderEvent(Rec, xRec, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11012823,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameServiceOrder@1100528310(VAR Rec@1100528300 : Record 11012823;VAR xRec@1100528301 : Record 11012823;RunTrigger@1100528302 : Boolean);
    VAR
      FieldChecksum@1100528305 : Record 11229419;
    BEGIN
      OnAfterDeleteServiceOrder(xRec, RunTrigger);
      OnAfterInsertServiceOrder(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11071724,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServiceOrderObject@1100528319(VAR Rec@1100528300 : Record 11071724;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ServiceOrderObjectEvent(Rec, CTRLProcessManagement.GetDeleteTxt);
    END;

    [EventSubscriber(Table,11071724,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServiceOrderObject@1100528315(VAR Rec@1100528300 : Record 11071724;RunTrigger@1100528301 : Boolean);
    VAR
      ServiceOrder@1100525000 : Record 11012823;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      IF (NOT ServiceOrder.GET(Rec."Service Order No.")) THEN
        EXIT;
      ServiceOrderEvent(ServiceOrder, 0, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11071724,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyServiceOrderObject@1100528312(VAR Rec@1100528300 : Record 11071724;VAR xRec@1100528301 : Record 11071724;RunTrigger@1100528302 : Boolean);
    VAR
      ServiceOrder@1100525000 : Record 11012823;
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      IF (NOT ServiceOrder.GET(Rec."Service Order No.")) THEN
        EXIT;
      ServiceOrderEvent(ServiceOrder, 0, CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11012837,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServiceOrderIndication@1100528414(VAR Rec@1100528300 : Record 11012837;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012837,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServiceOrderIndication@1100528413(VAR Rec@1100528300 : Record 11012837;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012837,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyServiceOrderIndication@1100528412(VAR Rec@1100528300 : Record 11012837;VAR xRec@1100528301 : Record 11012837;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012837,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameServiceOrderIndication@1100528411(VAR Rec@1100528300 : Record 11012837;VAR xRec@1100528301 : Record 11012837;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteServiceOrderIndication(xRec, RunTrigger);
      OnAfterInsertServiceOrderIndication(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012806,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServicePackage@1100528427(VAR Rec@1100528300 : Record 11012806;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012806,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServicePackage@1100528426(VAR Rec@1100528300 : Record 11012806;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012806,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyServicePackage@1100528425(VAR Rec@1100528300 : Record 11012806;VAR xRec@1100528301 : Record 11012806;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012806,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameServicePackage@1100528424(VAR Rec@1100528300 : Record 11012806;VAR xRec@1100528301 : Record 11012806;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteServicePackage(xRec, RunTrigger);
      OnAfterInsertServicePackage(xRec, RunTrigger);
    END;

    [EventSubscriber(Table,11012829,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServicePriority@1100528372(VAR Rec@1100528300 : Record 11012829;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012829,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServicePriority@1100528371(VAR Rec@1100528300 : Record 11012829;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012829,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyServicePriority@1100528370(VAR Rec@1100528300 : Record 11012829;VAR xRec@1100528301 : Record 11012829;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012829,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameServicePriority@1100528369(VAR Rec@1100528300 : Record 11012829;VAR xRec@1100528301 : Record 11012829;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteServicePriority(xRec, RunTrigger);
      OnAfterInsertServicePriority(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012882,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteServiceText@1100528500(VAR Rec@1100528500 : Record 11012882;RunTrigger@1100528501 : Boolean);
    BEGIN
      OnAfterModifyServiceText(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012882,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertServiceText@1100528503(VAR Rec@1100528500 : Record 11012882;RunTrigger@1100528501 : Boolean);
    BEGIN
      OnAfterModifyServiceText(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012882,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyServiceText@1100528502(VAR Rec@1100528500 : Record 11012882;VAR xRec@1100528501 : Record 11012882;RunTrigger@1100528502 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      ServiceTextEvent(Rec);
    END;

    [EventSubscriber(Table,11012882,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameServiceText@1100528501(VAR Rec@1100528500 : Record 11012882;VAR xRec@1100528501 : Record 11012882;RunTrigger@1100528502 : Boolean);
    BEGIN
      OnAfterModifyServiceText(Rec, Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11020334,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteStandardObject@1100528363(VAR Rec@1100528300 : Record 11020334;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11020334,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertStandardObject@1100528353(VAR Rec@1100528300 : Record 11020334;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11020334,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyStandardObject@1100528352(VAR Rec@1100528300 : Record 11020334;VAR xRec@1100528301 : Record 11020334;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11020334,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameStandardObject@1100528348(VAR Rec@1100528300 : Record 11020334;VAR xRec@1100528301 : Record 11020334;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteStandardObject(xRec, RunTrigger);
      OnAfterInsertStandardObject(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11012006,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteType@1100528480(VAR Rec@1100528300 : Record 11012006;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetDeleteTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012006,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertType@1100528479(VAR Rec@1100528300 : Record 11012006;RunTrigger@1100528301 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetInsertTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012006,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyType@1100528478(VAR Rec@1100528300 : Record 11012006;VAR xRec@1100528301 : Record 11012006;RunTrigger@1100528302 : Boolean);
    BEGIN
      IF (NOT CtrlIsActive) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      AddThisEvent(Rec.RECORDID, Rec.TABLENAME, CTRLProcessManagement.GetModifyTxt, COMPANYNAME);
    END;

    [EventSubscriber(Table,11012006,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameType@1100528477(VAR Rec@1100528300 : Record 11012006;VAR xRec@1100528301 : Record 11012006;RunTrigger@1100528302 : Boolean);
    BEGIN
      OnAfterDeleteType(xRec, RunTrigger);
      OnAfterInsertType(Rec, RunTrigger);
    END;

    [EventSubscriber(Table,11229279,OnAfterDeleteEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterDeleteWorkOrder@1100527808(VAR Rec@1100527800 : Record 11229279;RunTrigger@1100527801 : Boolean);
    BEGIN
      IF (NOT CtrlIsActiveForCompany(Rec."Source Company")) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      WorkOrderEvent(Rec, CTRLProcessManagement.GetDeleteTxt);
    END;

    [EventSubscriber(Table,11229279,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertWorkOrder@1100527807(VAR Rec@1100527800 : Record 11229279;RunTrigger@1100527801 : Boolean);
    BEGIN
      IF (NOT CtrlIsActiveForCompany(Rec."Source Company"))  OR (Rec.ISTEMPORARY) THEN
        EXIT;
      WorkOrderEvent(Rec, CTRLProcessManagement.GetInsertTxt);
    END;

    [EventSubscriber(Table,11229279,OnBeforeModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyWorkOrder@1100527806(VAR Rec@1100527800 : Record 11229279;VAR xRec@1100527801 : Record 11229279;RunTrigger@1100527802 : Boolean);
    BEGIN
      IF (NOT CtrlIsActiveForCompany(Rec."Source Company")) OR (Rec.ISTEMPORARY) THEN
        EXIT;
      WorkOrderEvent(Rec, CTRLProcessManagement.GetModifyTxt);
      WorkOrderEvent(xRec, CTRLProcessManagement.GetModifyTxt);
      WorkOrderSendEmailEvent(Rec, xRec,CTRLProcessManagement.GetModifyTxt);
    END;

    [EventSubscriber(Table,11229279,OnAfterRenameEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterRenameWorkOrder@1100527805(VAR Rec@1100527800 : Record 11229279;VAR xRec@1100527801 : Record 11229279;RunTrigger@1100527802 : Boolean);
    BEGIN
      OnAfterDeleteWorkOrder(xRec, RunTrigger);
      OnAfterInsertWorkOrder(Rec, RunTrigger);
    END;

    LOCAL PROCEDURE "---Globals---"@1100528492();
    BEGIN
    END;

    PROCEDURE GetEntityType@1100528311(TableName@1100528300 : Text) : Text;
    BEGIN
      EXIT(DELCHR(TableName, '<=>', '(). -_&/'));
    END;

    LOCAL PROCEDURE "---Locals---"@1100528302();
    BEGIN
    END;

    LOCAL PROCEDURE AddThisEvent@1100528307(SourceRecId@1100528300 : RecordID;TableName@1100528302 : Text;ChangeType@1100528304 : Text;CompName@1100527800 : Text);
    VAR
      GenericProcessQueue@1100528303 : Record 11229430;
      CTRLManagement@1100527801 : Codeunit 11012498;
    BEGIN
      IF (GenericProcessQueue.CheckQueueExistsInclStepNameAndParameter(CTRLProcessManagement.GetSendTriggerTxt,
        CompName, SourceRecId, 0, 0, ChangeType, FALSE))
      THEN
        EXIT;

      IF (ChangeType = CTRLProcessManagement.GetModifyTxt) THEN BEGIN
        IF (GenericProcessQueue.CheckQueueExistsInclStepNameAndParameter(CTRLProcessManagement.GetSendTriggerTxt,
          CompName, SourceRecId, 0, 0, CTRLProcessManagement.GetInsertTxt, FALSE))
        THEN
          EXIT;
      END;

      GenericProcessQueue.AddProcessQueueEntry(CTRLProcessManagement.GetSendTriggerTxt, CompName, SourceRecId);
      GenericProcessQueue.AddParameter(0, 0, ChangeType);
      GenericProcessQueue.AddParameter(0, 1, GetEntityType(TableName));
      GenericProcessQueue.AddParameter(0, 2, CTRLManagement.GetSyncUrl(GenericProcessQueue));
    END;

    LOCAL PROCEDURE AddSendEmailEvent@1100528458(SourceRecId@1100528300 : RecordID;MailTemplateNo@1100528302 : Integer);
    VAR
      GenericProcessQueue@1100528303 : Record 11229430;
      CTRLProcessManagement@1100528301 : Codeunit 11012495;
    BEGIN
      IF (NOT CtrlIsActive) THEN
        EXIT;
      CTRLProcessManagement.AddMailEvent(SourceRecId,MailTemplateNo);
    END;

    LOCAL PROCEDURE ContactCompanyEvent@1100528324(Contact@1100528300 : Record 5050;EventTxt@1100528302 : Text;CurrComp@1100527800 : Text);
    VAR
      FieldChecksum@1100528301 : Record 11229419;
      CTRLManagement@1100527801 : Codeunit 11012498;
    BEGIN
      IF (CTRLManagement.HasOnlyValidRelationLinks(Contact, Contact.RECORDID)) THEN BEGIN
        FieldChecksum.UpdateHashValue(Contact.RECORDID, Contact.FIELDNO(Image));
        AddThisEvent(Contact.RECORDID, Contact.TABLENAME, EventTxt, CurrComp);
      END;
    END;

    LOCAL PROCEDURE ContactContactPersonEvent@1100528417(Contact@1100528300 : Record 5050;EventTxt@1100528302 : Text;CurrComp@1100527800 : Text);
    VAR
      ContactCompany@1100528303 : Record 5050;
      FieldChecksum@1100528301 : Record 11229419;
      CTRLManagement@1100527801 : Codeunit 11012498;
    BEGIN
      IF (CurrComp <> COMPANYNAME) THEN
        ContactCompany.CHANGECOMPANY(CurrComp);
      IF (NOT ContactCompany.GET(Contact."Company No.")) THEN
        ContactCompany.INIT;
      IF (CTRLManagement.HasOnlyValidRelationLinks(ContactCompany, ContactCompany.RECORDID)) THEN BEGIN
        FieldChecksum.UpdateHashValue(Contact.RECORDID, Contact.FIELDNO(Image));
        AddThisEvent(Contact.RECORDID, STRSUBSTNO('%1_%2', Contact.TABLENAME, 'ContactPerson'), EventTxt, CurrComp);
      END;
    END;

    LOCAL PROCEDURE ContractObjectEvent@1100528325(ContractObject@1100528301 : Record 11071702;EventTxt@1100528300 : Text);
    VAR
      CTRLManagement@1100527800 : Codeunit 11012498;
    BEGIN
      IF (CTRLManagement.HasOnlyValidRelationLinks(ContractObject, ContractObject.RECORDID)) THEN
        AddThisEvent(ContractObject.RECORDID, ContractObject.TABLENAME, EventTxt, COMPANYNAME);
    END;

    LOCAL PROCEDURE CustomerEvent@1100528326(Customer@1100528301 : Record 18;EventTxt@1100528300 : Text);
    VAR
      FieldChecksum@1100528302 : Record 11229419;
      CTRLManagement@1100527800 : Codeunit 11012498;
    BEGIN
      IF (CTRLManagement.HasOnlyValidRelationLinks(Customer, Customer.RECORDID)) THEN BEGIN
        FieldChecksum.UpdateHashValue(Customer.RECORDID, Customer.FIELDNO(Image));
        AddThisEvent(Customer.RECORDID, Customer.TABLENAME, EventTxt, COMPANYNAME);
      END;
    END;

    LOCAL PROCEDURE CtrlIsActive@1100528303() : Boolean;
    BEGIN
      IF (NOT CTRLSetup.GET) THEN
        EXIT(FALSE);
      EXIT(CTRLSetup.Active);
    END;

    LOCAL PROCEDURE CtrlIsActiveForCompany@1100527816(CompName@1100527800 : Text) : Boolean;
    BEGIN
      IF (NOT CTRLSetup.CHANGECOMPANY(CompName)) THEN
        EXIT;
      IF (NOT CTRLSetup.GET) THEN
        EXIT(FALSE);
      EXIT(CTRLSetup.Active);
    END;

    LOCAL PROCEDURE DebriefTextEvent@1100527818(DebriefText@1100527800 : Record 11012886;EventTxt@1100527801 : Text);
    VAR
      ServiceOrder@1100527802 : Record 11012823;
    BEGIN
      IF (DebriefText.Type = DebriefText.Type::ServiceOrder) THEN BEGIN
        IF (ServiceOrder.GET(DebriefText."No.")) THEN
          ServiceOrderEvent(ServiceOrder, 0, EventTxt);
      END;
    END;

    LOCAL PROCEDURE DebriefTextRubricEvent@1100528494(DebriefTextRubric@1100528301 : Record 11012885;xRec@1100527800 : Variant;EventTxt@1100528300 : Text);
    VAR
      CTRLManagement@1100527801 : Codeunit 11012498;
    BEGIN
      IF (CTRLManagement.HasOnlyValidRelationLinks(DebriefTextRubric, DebriefTextRubric.RECORDID)) OR
         (CTRLManagement.HasOnlyValidRelationLinks(xRec, DebriefTextRubric.RECORDID))
         THEN
            AddThisEvent(DebriefTextRubric.RECORDID, DebriefTextRubric.TABLENAME, EventTxt, COMPANYNAME);
    END;

    LOCAL PROCEDURE DeleteDocumentLinkEvent@1100528460(DocumentLink@1100528300 : Record 11012747);
    VAR
      DocumentProperties@1100528301 : Record 11012746;
      DocumentLinksControlContacts@1100528302 : Record 11012747;
      CTRLManagement@1100528303 : Codeunit 11012498;
      Contact@1100528304 : Record 5050;
      ControlContact@1100528305 : Boolean;
    BEGIN
      IF (DocumentLink."Table No." = DATABASE::Contact) THEN BEGIN
        IF (DocumentProperties.GET(DocumentLink."Document No.")) THEN BEGIN
          IF (DocumentProperties."Contact No." = '') THEN BEGIN
            DocumentLinksControlContacts.SETFILTER("Record ID", '<>%1', DocumentLink."Record ID");
            DocumentLinksControlContacts.SETRANGE("Document No.", DocumentLink."Document No.");
            DocumentLinksControlContacts.SETRANGE("Table No.", DATABASE::Contact);

            IF (DocumentLinksControlContacts.FINDSET) THEN BEGIN
              REPEAT
              IF (Contact.GET(DocumentLinksControlContacts."Record ID")) THEN
                ControlContact := CTRLManagement.HasOnlyValidRelationLinks(Contact,Contact.RECORDID);
              UNTIL (DocumentLinksControlContacts.NEXT = 0) OR (ControlContact);
            END;

            IF (NOT ControlContact) THEN BEGIN
              DocumentProperties."Publish on Service Portal" := FALSE;
              DocumentProperties."Show in Control":= FALSE;
              DocumentProperties.MODIFY;
              AddThisEvent(DocumentProperties.RECORDID, DocumentProperties.TABLENAME, CTRLProcessManagement.GetModifyTxt, DocumentProperties."Internal Company");
            END;
          END;
        END;

      END;
    END;

    LOCAL PROCEDURE GetContact@1100527812(VAR Rec@1100527802 : Record 5050;VAR xRec@1100527803 : Record 5050);
    VAR
      Contact@1100527801 : Record 5050;
      CurrCompany@1100527800 : Text;
    BEGIN
      CurrCompany := Rec.CURRENTCOMPANY;
      IF (CurrCompany <> COMPANYNAME) THEN BEGIN
        CTRLSetup.CHANGECOMPANY(CurrCompany);
        Contact.CHANGECOMPANY(CurrCompany);
        Contact.GET(Rec."No.");
        Rec := Contact;
        xRec := Contact;
      END;
    END;

    LOCAL PROCEDURE JobEvent@1100528327(Job@1100528301 : Record 11072003;xRec@1100527800 : Variant;EventTxt@1100528300 : Text);
    VAR
      CTRLManagement@1100527801 : Codeunit 11012498;
    BEGIN
      IF  (CTRLManagement.HasOnlyValidRelationLinks(Job, Job.RECORDID)) OR
          (CTRLManagement.HasOnlyValidRelationLinks(xRec, Job.RECORDID))
          THEN
            AddThisEvent(Job.RECORDID, Job.TABLENAME, EventTxt, COMPANYNAME);
    END;

    LOCAL PROCEDURE ObjectSpecificationLineEvent@1100527804(VAR ObjectSpecificationLine@1100528301 : Record 11071781);
    VAR
      ServiceObject@1100527800 : Record 11071691;
    BEGIN
      IF (ServiceObject.GET(ObjectSpecificationLine.Code)) THEN
        ServiceObjectEvent(ServiceObject,CTRLProcessManagement.GetModifyTxt);
    END;

    LOCAL PROCEDURE PurchaseHeaderEvent@1100528487(VAR PurchaseHeader@1100528301 : Record 38;xRec@1100528302 : Variant;EventTxt@1100528300 : Text);
    VAR
      CTRLManagement@1100528303 : Codeunit 11012498;
    BEGIN
      IF (CTRLManagement.HasOnlyValidRelationLinks(PurchaseHeader, PurchaseHeader.RECORDID) OR
          CTRLManagement.HasOnlyValidRelationLinks(xRec, PurchaseHeader.RECORDID)) THEN
           AddThisEvent(PurchaseHeader.RECORDID, PurchaseHeader.TABLENAME, EventTxt, COMPANYNAME);
    END;

    LOCAL PROCEDURE PurchaseLineEvent@1100528490(VAR PurchaseLine@1100528302 : Record 39;EventTxt@1100528300 : Text);
    VAR
      PurchaseHeader@1100528301 : Record 38;
    BEGIN
      IF (PurchaseHeader.GET(PurchaseLine."Document Type", PurchaseLine."Document No.")) THEN
        PurchaseHeaderEvent(PurchaseHeader, 0, EventTxt);
    END;

    LOCAL PROCEDURE ResourceWOPEvent@1100527817(ResourceWOP@1100527800 : Record 11229278;EventTxt@1100527801 : Text);
    BEGIN
      IF (NOT CtrlIsActiveForCompany(ResourceWOP.Company) OR (ResourceWOP.ISTEMPORARY) OR
         (ResourceWOP.Type = ResourceWOP.Type::Plant))
      THEN
        EXIT;
      AddThisEvent(ResourceWOP.RECORDID, ResourceWOP.TABLENAME, EventTxt, ResourceWOP.Company);
    END;

    LOCAL PROCEDURE ServiceCallEvent@1100528331(ServiceCall@1100528301 : Record 11012822;xRec@1100527800 : Variant;EventTxt@1100528300 : Text);
    VAR
      CTRLManagement@1100527801 : Codeunit 11012498;
    BEGIN
      IF (CTRLManagement.HasOnlyValidRelationLinks(ServiceCall, ServiceCall.RECORDID)) OR
         (CTRLManagement.HasOnlyValidRelationLinks(xRec, ServiceCall.RECORDID))
         THEN
            AddThisEvent(ServiceCall.RECORDID, ServiceCall.TABLENAME, EventTxt, COMPANYNAME);
    END;

    LOCAL PROCEDURE ServiceCallSendEmailEvent@1100528489(ServiceCall@1100528301 : Record 11012822;xRec@1100528304 : Record 11012822;EventTxt@1100528300 : Text);
    VAR
      CTRLManagement@1100528302 : Codeunit 11012498;
      MailTemplateNo@1100528303 : Integer;
    BEGIN
      IF (CTRLManagement.HasOnlyValidRelationLinks(ServiceCall, ServiceCall.RECORDID)) THEN BEGIN
        IF (EventTxt =  CTRLProcessManagement.GetInsertTxt) THEN BEGIN
          MailTemplateNo := 75; //Create Service Call
          AddSendEmailEvent(ServiceCall.RECORDID, MailTemplateNo);
          MailTemplateNo := 204;
          AddSendEmailEvent(ServiceCall.RECORDID, MailTemplateNo);
          MailTemplateNo := 205;
          AddSendEmailEvent(ServiceCall.RECORDID, MailTemplateNo);
        END;

        IF (EventTxt =  CTRLProcessManagement.GetModifyTxt) THEN BEGIN
          IF (ServiceCall.Status <> xRec.Status) THEN BEGIN
            MailTemplateNo := 201;
            AddSendEmailEvent(ServiceCall.RECORDID, MailTemplateNo);
            MailTemplateNo := 206;
            AddSendEmailEvent(ServiceCall.RECORDID, MailTemplateNo);
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE ServiceContractEvent@1100528332(ServiceContract@1100528301 : Record 11012812;xRec@1100527800 : Variant;EventTxt@1100528300 : Text);
    VAR
      CTRLManagement@1100527801 : Codeunit 11012498;
    BEGIN
      IF (CTRLManagement.HasOnlyValidRelationLinks(ServiceContract, ServiceContract.RECORDID)) OR
         (CTRLManagement.HasOnlyValidRelationLinks(xRec, ServiceContract.RECORDID)) THEN
            AddThisEvent(ServiceContract.RECORDID, ServiceContract.TABLENAME, EventTxt, COMPANYNAME);
    END;

    LOCAL PROCEDURE ServiceLocationEvent@1100528333(ServiceLocation@1100528301 : Record 11012801;xRec@1100527800 : Variant;EventTxt@1100528300 : Text);
    VAR
      FieldChecksum@1100528302 : Record 11229419;
      CTRLManagement@1100527801 : Codeunit 11012498;
    BEGIN
      IF (CTRLManagement.HasOnlyValidRelationLinks(ServiceLocation, ServiceLocation.RECORDID)) OR
         (CTRLManagement.HasOnlyValidRelationLinks(xRec, ServiceLocation.RECORDID)) THEN BEGIN
            FieldChecksum.UpdateHashValue(ServiceLocation.RECORDID, ServiceLocation.FIELDNO(Image));
            AddThisEvent(ServiceLocation.RECORDID, ServiceLocation.TABLENAME, EventTxt, COMPANYNAME);
      END;
    END;

    LOCAL PROCEDURE ServiceObjectEvent@1100528334(ServiceObject@1100528301 : Record 11071691;EventTxt@1100528300 : Text);
    VAR
      FieldChecksum@1100528302 : Record 11229419;
      CTRLManagement@1100527800 : Codeunit 11012498;
    BEGIN
      IF (CTRLManagement.HasOnlyValidRelationLinks(ServiceObject, ServiceObject.RECORDID)) THEN BEGIN
        FieldChecksum.UpdateHashValue(ServiceObject.RECORDID, ServiceObject.FIELDNO(Picture));
        AddThisEvent(ServiceObject.RECORDID, ServiceObject.TABLENAME, EventTxt, COMPANYNAME);
      END;
    END;

    LOCAL PROCEDURE ServiceOrderEvent@1100528385(ServiceOrder@1100528301 : Record 11012823;xRec@1100527800 : Variant;EventTxt@1100528300 : Text);
    VAR
      ServiceCall@1100528302 : Record 11012822;
      CTRLManagement@1100527801 : Codeunit 11012498;
    BEGIN
      IF (CTRLManagement.HasOnlyValidRelationLinks(ServiceOrder, ServiceOrder.RECORDID)) OR
         (CTRLManagement.HasOnlyValidRelationLinks(xRec, ServiceOrder.RECORDID))
      THEN BEGIN
        AddThisEvent(ServiceOrder.RECORDID, ServiceOrder.TABLENAME, EventTxt, COMPANYNAME);
        IF (ServiceOrder."Call No." <> '') AND (EventTxt = CTRLProcessManagement.GetModifyTxt) THEN BEGIN
          IF (ServiceCall.GET(ServiceOrder."Call No.")) THEN
            ServiceCallEvent(ServiceCall, ServiceCall, EventTxt);
        END;
      END;
    END;

    LOCAL PROCEDURE ServiceOrderObjectEvent@1100528436(ServiceOrderObject@1100528301 : Record 11071724;EventTxt@1100528300 : Text);
    VAR
      ServiceOrder@1100528302 : Record 11012823;
      CTRLManagement@1100527800 : Codeunit 11012498;
    BEGIN
      IF (NOT ServiceOrder.GET(ServiceOrderObject."Service Order No.")) THEN
        ServiceOrder.INIT;
      IF (CTRLManagement.HasOnlyValidRelationLinks(ServiceOrder, ServiceOrder.RECORDID)) THEN
        AddThisEvent(ServiceOrderObject.RECORDID, ServiceOrderObject.TABLENAME, EventTxt, COMPANYNAME);
    END;

    LOCAL PROCEDURE ServiceTextEvent@1100528504(ServiceText@1100528501 : Record 11012882);
    VAR
      ServiceCall@1100528502 : Record 11012822;
      ServiceOrder@1100528300 : Record 11012823;
    BEGIN
      //Call : ProblemText, SolutionText
      //Order: ProblemText, SolutionText
      CASE TRUE OF
        (ServiceText."Table Name" = ServiceText."Table Name"::"Service Call") AND (ServiceText."Table Field" = 60),
        (ServiceText."Table Name" = ServiceText."Table Name"::"Service Call") AND (ServiceText."Table Field" = 75): BEGIN
          IF (NOT ServiceCall.GET(ServiceText."No.")) THEN ServiceCall.INIT;
          ServiceCallEvent(ServiceCall, 0, CTRLProcessManagement.GetModifyTxt);
        END;
        (ServiceText."Table Name" = ServiceText."Table Name"::"Service Order") AND (ServiceText."Table Field" = 90),
        (ServiceText."Table Name" = ServiceText."Table Name"::"Service Order") AND (ServiceText."Table Field" = 92): BEGIN
          IF (NOT ServiceOrder.GET(ServiceText."No.")) THEN ServiceOrder.INIT;
          ServiceOrderEvent(ServiceOrder, 0, CTRLProcessManagement.GetModifyTxt);
        END;
      END;
    END;

    LOCAL PROCEDURE SetCtrlSetupCompany@1100527811(Rec@1100527801 : Record 5050) : Text;
    VAR
      CurrCompany@1100527800 : Text;
    BEGIN
      CurrCompany := Rec.CURRENTCOMPANY;
      IF (CurrCompany <> COMPANYNAME) THEN BEGIN
        CTRLSetup.CHANGECOMPANY(CurrCompany);
      END;
      EXIT(CurrCompany);
    END;

    LOCAL PROCEDURE WorkOrderEvent@1100527815(WorkOrder@1100527801 : Record 11229279;EventTxt@1100527800 : Text);
    VAR
      CTRLManagement@1100527802 : Codeunit 11012498;
    BEGIN
      IF (CTRLManagement.HasOnlyValidRelationLinks(WorkOrder, WorkOrder.RECORDID)) THEN
         AddThisEvent(WorkOrder.RECORDID, WorkOrder.TABLENAME, EventTxt, WorkOrder."Source Company");
    END;

    LOCAL PROCEDURE WorkOrderSendEmailEvent@1100528491(WorkOrder@1100528300 : Record 11229279;xWorkOrder@1100528301 : Record 11229279;EventTxt@1100528302 : Text);
    VAR
      CTRLManagement@1100528303 : Codeunit 11012498;
      MailTemplateNo@1100528304 : Integer;
    BEGIN
      IF (CTRLProcessManagement.GetModifyTxt <> EventTxt) THEN EXIT;

      IF (WorkOrder."Resource No." <> xWorkOrder."Resource No.") THEN BEGIN
        MailTemplateNo := 203; //CTRL New Work for Subcontractor
        IF (CTRLManagement.IsValidResourceWOP(WorkOrder."Resource No.")) THEN
          AddSendEmailEvent(WorkOrder.RECORDID, MailTemplateNo);
      END;
    END;

    BEGIN
    END.
  }
}

