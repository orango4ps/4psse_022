OBJECT Codeunit 11130003 Purch. Order FactBox Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      SumsContainerPurchOrderLines@1210190002 : Record 39;

    PROCEDURE GetValuePurchOrderLines@1210190002(ValueType@1210190003 : ',QtyToReceive,QtyToInvoice,AmtToReceive,AmtToInvoice,TotalAmount,TotalAmountLCY') : Decimal;
    BEGIN
      CASE ValueType OF
        ValueType::QtyToReceive:
          EXIT(SumsContainerPurchOrderLines."Qty. to Receive");
        ValueType::QtyToInvoice:
          EXIT(SumsContainerPurchOrderLines."Qty. to Invoice");
        ValueType::AmtToReceive:
          EXIT(SumsContainerPurchOrderLines."Amnt. to Receive");
        ValueType::AmtToInvoice:
          EXIT(SumsContainerPurchOrderLines."Amnt. to Invoice");
        ValueType::TotalAmount:
          EXIT(SumsContainerPurchOrderLines.Amount);
        ValueType::TotalAmountLCY:
          EXIT(SumsContainerPurchOrderLines."Amount (LCY)");
      END;
    END;

    PROCEDURE GetJobInfo@1210190005(PurchaseHeader@1210190000 : Record 38;InfoType@1210190003 : ',Status,ProjectStatus') : Text[1024];
    VAR
      Job@1210190001 : Record 11072003;
    BEGIN
      IF Job.GET(PurchaseHeader."Job No.") THEN
        CASE InfoType OF
          InfoType::Status:
            EXIT(FORMAT(Job.Status));
          InfoType::ProjectStatus:
            EXIT(FORMAT(Job."Project Status"));
        END;
    END;

    PROCEDURE CalcSumsPurchOrderLines@1210190001(PurchaseHeader@1210190001 : Record 38;TotalsForProject@1210190000 : Boolean);
    BEGIN
      IF TotalsForProject AND (PurchaseHeader."Job No." = '') THEN BEGIN
        CLEAR(SumsContainerPurchOrderLines);
        EXIT;
      END;

      FilterPurchaseOrderLines(
        PurchaseHeader,
        TotalsForProject,
        SumsContainerPurchOrderLines);

      SumsContainerPurchOrderLines.CALCSUMS(
        "Qty. to Receive",
        "Qty. to Invoice",
        Amount,
        "Amnt. to Receive",
        "Amnt. to Invoice",
        "Amount (LCY)");
    END;

    PROCEDURE ShowPurchOrderLines@1210190004(PurchaseHeader@1210190003 : Record 38;ValueType@1210190001 : ',QtyToReceive,QtyToInvoice,AmtToReceive,AmtToInvoice,TotalAmount,TotalAmountLCY';TotalsForProject@1210190000 : Boolean);
    VAR
      FilteredPurchaseOrderLines@1210190004 : Record 39;
      PurchaseOrderLineList@1210190002 : Page 11012072;
    BEGIN
      IF TotalsForProject AND (PurchaseHeader."Job No." = '') THEN
        EXIT;

      FilterPurchaseOrderLines(
        PurchaseHeader,
        TotalsForProject,
        FilteredPurchaseOrderLines);

      CASE ValueType OF
        ValueType::QtyToReceive:
          FilteredPurchaseOrderLines.SETFILTER("Qty. to Receive", '<>0');
        ValueType::QtyToInvoice:
          FilteredPurchaseOrderLines.SETFILTER("Qty. to Invoice", '<>0');
        ValueType::AmtToReceive:
          FilteredPurchaseOrderLines.SETFILTER("Amnt. to Receive", '<>0');
        ValueType::AmtToInvoice:
          FilteredPurchaseOrderLines.SETFILTER("Amnt. to Invoice", '<>0');
      END;

      PurchaseOrderLineList.SETTABLEVIEW(FilteredPurchaseOrderLines);
      PurchaseOrderLineList.EDITABLE(FALSE);
      PurchaseOrderLineList.LOOKUPMODE(FALSE);
      PurchaseOrderLineList.RUNMODAL;
    END;

    LOCAL PROCEDURE FilterPurchaseOrderLines@121019001(PurchaseHeader@1210190002 : Record 38;TotalsForProject@1210190000 : Boolean;VAR FilteredPurchOrderLines@1210190003 : Record 39);
    BEGIN
      FilteredPurchOrderLines.SETCURRENTKEY("Document Type", "Job No.", "Cost Type", "Order Date", "Purchase Action");

      FilteredPurchOrderLines.SETRANGE("Document Type", PurchaseHeader."Document Type");
      IF PurchaseHeader."Job No." <> '' THEN
        FilteredPurchOrderLines.SETRANGE("Job No.", PurchaseHeader."Job No.");
      IF TotalsForProject THEN
        FilteredPurchOrderLines.SETRANGE("Document No.")
      ELSE
        FilteredPurchOrderLines.SETRANGE("Document No.", PurchaseHeader."No.");
    END;

    PROCEDURE ShowPurchQuoteLines@1100409000(PurchaseHeader@1210190003 : Record 38;TotalsForProject@1210190000 : Boolean);
    VAR
      FilteredPurchaseOrderLines@1210190004 : Record 39;
      PurchaseQuoteLineList@1210190002 : Page 11125039;
    BEGIN
      IF TotalsForProject AND (PurchaseHeader."Job No." = '') THEN
        EXIT;

      FilterPurchaseOrderLines(
        PurchaseHeader,
        TotalsForProject,
        FilteredPurchaseOrderLines);

      PurchaseQuoteLineList.SETTABLEVIEW(FilteredPurchaseOrderLines);
      PurchaseQuoteLineList.EDITABLE(FALSE);
      PurchaseQuoteLineList.LOOKUPMODE(FALSE);
      PurchaseQuoteLineList.RUNMODAL;
    END;

    PROCEDURE CalcSumsPurchQuoteLines@1100409001(PurchaseHeader@1210190001 : Record 38;TotalsForProject@1210190000 : Boolean);
    BEGIN
      IF TotalsForProject AND (PurchaseHeader."Job No." = '') THEN BEGIN
        CLEAR(SumsContainerPurchOrderLines);
        EXIT;
      END;

      FilterPurchaseOrderLines(
        PurchaseHeader,
        TotalsForProject,
        SumsContainerPurchOrderLines);

      SumsContainerPurchOrderLines.CALCSUMS(
        Quantity,
        "Amount (LCY)");
    END;

    PROCEDURE GetValuePurchQuoteLines@1100409003(ValueType@1210190003 : ',Quantity,AmountLCY') : Decimal;
    BEGIN
      CASE ValueType OF
        ValueType::Quantity:
          EXIT(SumsContainerPurchOrderLines.Quantity);
        ValueType::AmountLCY:
          EXIT(SumsContainerPurchOrderLines."Amount (LCY)");
      END;
    END;

    BEGIN
    END.
  }
}

