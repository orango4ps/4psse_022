OBJECT Page 9188 Generic Chart Customization
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Generic Chart Customization;
               NOR=Generisk diagram - tilpasning;
               SVE=Anpassning av allmÑnt diagram];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table2000000078;
    PageType=Card;
    ShowFilter=No;
    OnAfterGetRecord=BEGIN
                       IF NOT XMLRetrieved THEN BEGIN
                         SetFieldValues;
                         EnableControls;
                       END;
                       XMLRetrieved := TRUE;
                     END;

    ActionList=ACTIONS
    {
      { 17      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 37      ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=E&xport Chart;
                                 NOR=&Eksporter diagram;
                                 SVE=E&xportera diagram];
                      ToolTipML=[ENU=Export a generic chart in XML format. You can rename the file, modify the chart definition using an XML editor, and then import the new chart into another client.;
                                 NOR=Eksporter et generisk diagram i XML-format. Du kan gi nytt navn til filen, endre diagramdefinisjonen ved hjelp av et XML-redigeringsprogram, og deretter importere det nye diagrammet til en annen klient.;
                                 SVE=Exportera et allmÑnt diagram i XML-format. Du kan byta namn pÜ filen, Ñndra diagramdefinitionen med hjÑlp av en XML-redigerare och sedan importera det nya diagrammet till en annan klient.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Export;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ExportChartDefinition;
                               END;
                                }
      { 41      ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Chart;
                                 NOR=Kopier diagram;
                                 SVE=Kopiera diagram];
                      ToolTipML=[ENU=Copy an existing chart to create a new generic chart.;
                                 NOR=Kopier et eksisterende diagram for Ü opprette et nytt generisk diagram.;
                                 SVE=Kopiera ett befintligt diagram och skapa ett nytt, allmÑnt diagram.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CopyGenericChart@1034 : Page 9187;
                               BEGIN
                                 CALCFIELDS(BLOB);
                                 CopyGenericChart.SetSourceChart(Rec);
                                 CopyGenericChart.RUNMODAL;
                               END;
                                }
      { 14      ;    ;ActionContainer;
                      Name=Action;
                      CaptionML=[ENU=Actions;
                                 NOR=Handlinger;
                                 SVE=ètgÑrder];
                      ActionContainerType=RelatedInformation }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 18  ;1   ;Group     ;
                Name=Measures (Y-Axis);
                CaptionML=[ENU=Measures (Y-Axis);
                           NOR=MÜl (Y-akse);
                           SVE=MÑtvÑrden (Y-axel)];
                GroupType=Group;
                Layout=Rows }

    { 25  ;2   ;Group     ;
                GroupType=GridLayout;
                Layout=Rows }

    { 19  ;3   ;Group     ;
                Name=Required Measure;
                CaptionML=[ENU=Required Measure;
                           NOR=Obligatorisk mÜl;
                           SVE=MÑtvÑrde (krÑvs)];
                GroupType=Group }

    { 20  ;4   ;Field     ;
                CaptionML=[ENU=Data Column;
                           NOR=Datakolonne;
                           SVE=Datakolumn];
                ToolTipML=[ENU=Specifies the field or query column that the y-axis is based on. The list of values that appears when you choose Data Column field is filtered by the ID of the data source that you select on the Data Source FastTab.;
                           NOR=Angir feltet eller spõrrekolonnen som y-aksen er basert pÜ. Listen over verdier som vises nÜr du velger feltet Datakolonne, filtreres etter ID-en for datakilden du velger i hurtigfanen Datakilde.;
                           SVE=Anger det fÑlt eller den frÜgekolumn som y-axeln bygger pÜ. Listan med vÑrden som visas nÑr du vÑljer fÑltet Datakolumn filtreras efter id-numret fîr datakÑllan som du vÑljer pÜ snabbfliken DatakÑlla.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DataColumn[1];
                Enabled=DataColumn1Enabled;
                Editable=DataColumn1Enabled;
                RowSpan=1;
                ColumnSpan=1;
                OnValidate=BEGIN
                             ValidateDataColumn(1);
                           END;

                OnLookup=BEGIN
                           GenericChartMgt.RetrieveFieldColumn(TempGenericChartSetup,DummyInt,DataColumn[1],DummyCaption,2,FALSE);
                           ValidateDataColumn(1);
                         END;
                          }

    { 21  ;4   ;Field     ;
                CaptionML=[ENU=Aggregation;
                           NOR=Samling;
                           SVE=Aggregering];
                ToolTipML=[ENU=Specifies how data on the y-axis is aggregated, such as by the sum or by the maximum values.;
                           NOR=Angir hvordan data pÜ y-aksen samles, for eksempel etter summen eller maksimumsverdiene.;
                           SVE=Anger hur data pÜ y-axeln aggregeras, t.ex. efter summa eller maximivÑrden.];
                OptionCaptionML=[ENU=None,Count,Sum,Min,Max,Avg;
                                 NOR=Ingen,Antall,Sum,Min.,Maks.,Gj.sn.;
                                 SVE=Inget,Antal,Summa,Min,Max,Genomsnittlig];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Aggregation[1];
                RowSpan=1;
                ColumnSpan=1;
                OnValidate=BEGIN
                             CheckAggregation(1);
                             UpdateChartDefinition;
                           END;
                            }

    { 22  ;4   ;Field     ;
                CaptionML=[ENU=Graph Type;
                           NOR=Graftype;
                           SVE=Diagramtyp];
                ToolTipML=[ENU=Specifies how data is shown graphically in the chart, such as column, line, or pie.;
                           NOR=Angir hvordan data vises grafisk i diagrammet, for eksempel kolonne, linje eller sektor.;
                           SVE=Anger hur data visas grafiskt i diagrammet, till exempel som kolumner, rader eller cirkelsektorer.];
                OptionCaptionML=[ENU=Column,Point,Line,ColumnStacked,ColumnStacked100,Area,AreaStacked,AreaStacked100,StepLine,Pie,Doughnut,Range,Radar,Funnel;
                                 NOR=Kolonne,Punkt,Linje,ColumnStacked,ColumnStacked100,OmrÜde,AreaStacked,AreaStacked100,StepLine,Sektor,Hjul,Rekkevidde,Radar,Trak;
                                 SVE=Kolumn,Punkt,Rad,ColumnStacked,ColumnStacked100,OmrÜde,AreaStacked,AreaStacked100,StepLine,Cirkeldiagram,Cirkel,Intervall,PolÑrdiagram,Tratt];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ChartType;
                OnValidate=BEGIN
                             UpdateChartDefinition;
                             EnableControls;
                           END;
                            }

    { 39  ;4   ;Field     ;
                AssistEdit=No;
                CaptionML=[ENU=Caption;
                           NOR=Overskrift;
                           SVE=Rubrik];
                ToolTipML=[ENU=Specifies the caption that is shown next to the y-axis to describe the selected measure. You can enter captions in different languages by creating several lines with different language codes.;
                           NOR=Angir tittelen som vises ved siden av y-aksen for Ü beskrive det valgte mÜlet. Du kan angi navn pÜ ulike sprÜk ved Ü opprette flere linjer med forskjellige sprÜkkoder.;
                           SVE=Anger den rubrik som visas bredvid y-axeln fîr att beskriva det valda mÜttet. Du kan ange rubriker pÜ olika sprÜk genom att skapa flera rader med olika sprÜkkoder.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MeasureCaption[1];
                Enabled=DataColumn1Enabled;
                Editable=DataColumn1Enabled;
                OnValidate=BEGIN
                             TempGenericChartCaptionsBuf.SetCaption(GenericChartMgt.RequiredMeasureCode,GenericChartMgt.GetUserLanguage,MeasureCaption[1]);
                             UpdateChartDefinition;
                           END;

                OnAssistEdit=BEGIN
                               MeasureCaption[1] := GenericChartMgt.TextMLAssistEdit(TempGenericChartCaptionsBuf,GenericChartMgt.RequiredMeasureCode);
                               UpdateChartDefinition;
                             END;
                              }

    { 23  ;3   ;Group     ;
                Name=Optional Measure 1;
                CaptionML=[ENU=Optional Measure;
                           NOR=Valgfritt mÜl;
                           SVE=Valfritt mÑtvÑrde];
                GroupType=Group }

    { 24  ;4   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DataColumn[2];
                Enabled=OptionalMeasuresEnabled AND DataColumn2Enabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             ValidateDataColumn(2);
                           END;

                OnLookup=BEGIN
                           GenericChartMgt.RetrieveFieldColumn(TempGenericChartSetup,DummyInt,DataColumn[2],DummyCaption,2,FALSE);
                           ValidateDataColumn(2);
                         END;

                ShowCaption=No }

    { 26  ;4   ;Field     ;
                OptionCaptionML=[ENU=None,Count,Sum,Min,Max,Avg;
                                 NOR=Ingen,Antall,Sum,Min.,Maks.,Gj.sn.;
                                 SVE=Inget,Antal,Summa,Min,Max,Genomsnittlig];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Aggregation[2];
                Enabled=OptionalMeasuresEnabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             CheckAggregation(2);
                             UpdateChartDefinition;
                           END;

                ShowCaption=No }

    { 27  ;4   ;Field     ;
                OptionCaptionML=[ENU=Column,Point,Line,ColumnStacked,ColumnStacked100,Area,AreaStacked,AreaStacked100,StepLine,,,Range;
                                 NOR=Kolonne,Punkt,Linje,KolonneStablet,KolonneStablet100,OmrÜde,OmrÜdeStablet,OmrÜdeStablet100,TrinnLinje,,,Intervall;
                                 SVE=Kolumn,Punkt,Linje,ColumnStacked,ColumnStacked100,Yta,AreaStacked,AreaStacked100,StepLine,,,Intervall];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ChartTypeReduced[2];
                Enabled=OptionalMeasuresEnabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             UpdateChartDefinition;
                             EnableControls;
                           END;

                ShowCaption=No }

    { 40  ;4   ;Field     ;
                AssistEdit=No;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MeasureCaption[2];
                Enabled=OptionalMeasuresEnabled AND DataColumn2Enabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             TempGenericChartCaptionsBuf.SetCaption(GenericChartMgt.OptionalMeasure1Code,GenericChartMgt.GetUserLanguage,MeasureCaption[2]);
                             UpdateChartDefinition;
                           END;

                OnAssistEdit=BEGIN
                               MeasureCaption[2] := GenericChartMgt.TextMLAssistEdit(TempGenericChartCaptionsBuf,GenericChartMgt.OptionalMeasure1Code);
                               UpdateChartDefinition;
                             END;

                ShowCaption=No }

    { 28  ;3   ;Group     ;
                Name=Optional Measure 2;
                CaptionML=[ENU=Optional Measure;
                           NOR=Valgfritt mÜl;
                           SVE=Valfritt mÑtvÑrde];
                GroupType=Group }

    { 29  ;4   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DataColumn[3];
                Enabled=OptionalMeasuresEnabled AND DataColumn3Enabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             ValidateDataColumn(3);
                           END;

                OnLookup=BEGIN
                           GenericChartMgt.RetrieveFieldColumn(TempGenericChartSetup,DummyInt,DataColumn[3],DummyCaption,2,FALSE);
                           ValidateDataColumn(3);
                         END;

                ShowCaption=No }

    { 30  ;4   ;Field     ;
                OptionCaptionML=[ENU=None,Count,Sum,Min,Max,Avg;
                                 NOR=Ingen,Antall,Sum,Min.,Maks.,Gj.sn.;
                                 SVE=Inget,Antal,Summa,Min,Max,Genomsnittlig];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Aggregation[3];
                Enabled=OptionalMeasuresEnabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             CheckAggregation(3);
                             UpdateChartDefinition;
                           END;

                ShowCaption=No }

    { 31  ;4   ;Field     ;
                OptionCaptionML=[ENU=Column,Point,Line,ColumnStacked,ColumnStacked100,Area,AreaStacked,AreaStacked100,StepLine,,,Range;
                                 NOR=Kolonne,Punkt,Linje,KolonneStablet,KolonneStablet100,OmrÜde,OmrÜdeStablet,OmrÜdeStablet100,TrinnLinje,,,Intervall;
                                 SVE=Kolumn,Punkt,Linje,ColumnStacked,ColumnStacked100,Yta,AreaStacked,AreaStacked100,StepLine,,,Intervall];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ChartTypeReduced[3];
                Enabled=OptionalMeasuresEnabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             UpdateChartDefinition;
                             EnableControls;
                           END;

                ShowCaption=No }

    { 43  ;4   ;Field     ;
                AssistEdit=No;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MeasureCaption[3];
                Enabled=OptionalMeasuresEnabled AND DataColumn3Enabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             TempGenericChartCaptionsBuf.SetCaption(GenericChartMgt.OptionalMeasure2Code,GenericChartMgt.GetUserLanguage,MeasureCaption[3]);
                             UpdateChartDefinition;
                           END;

                OnAssistEdit=BEGIN
                               MeasureCaption[3] := GenericChartMgt.TextMLAssistEdit(TempGenericChartCaptionsBuf,GenericChartMgt.OptionalMeasure2Code);
                               UpdateChartDefinition;
                             END;

                ShowCaption=No }

    { 32  ;3   ;Group     ;
                Name=Optional Measure 3;
                CaptionML=[ENU=Optional Measure;
                           NOR=Valgfritt mÜl;
                           SVE=Valfritt mÑtvÑrde];
                GroupType=Group }

    { 33  ;4   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DataColumn[4];
                Enabled=OptionalMeasuresEnabled AND DataColumn4Enabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             ValidateDataColumn(4);
                           END;

                OnLookup=BEGIN
                           GenericChartMgt.RetrieveFieldColumn(TempGenericChartSetup,DummyInt,DataColumn[4],DummyCaption,2,FALSE);
                           ValidateDataColumn(4);
                         END;

                ShowCaption=No }

    { 34  ;4   ;Field     ;
                OptionCaptionML=[ENU=None,Count,Sum,Min,Max,Avg;
                                 NOR=Ingen,Antall,Sum,Min.,Maks.,Gj.sn.;
                                 SVE=Inget,Antal,Summa,Min,Max,Genomsnittlig];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Aggregation[4];
                Enabled=OptionalMeasuresEnabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             CheckAggregation(4);
                             UpdateChartDefinition;
                           END;

                ShowCaption=No }

    { 35  ;4   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ChartTypeReduced[4];
                Enabled=OptionalMeasuresEnabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             UpdateChartDefinition;
                             EnableControls;
                           END;

                ShowCaption=No }

    { 45  ;4   ;Field     ;
                AssistEdit=No;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MeasureCaption[4];
                Enabled=OptionalMeasuresEnabled AND DataColumn4Enabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             TempGenericChartCaptionsBuf.SetCaption(GenericChartMgt.OptionalMeasure3Code,GenericChartMgt.GetUserLanguage,MeasureCaption[4]);
                             UpdateChartDefinition;
                           END;

                OnAssistEdit=BEGIN
                               MeasureCaption[4] := GenericChartMgt.TextMLAssistEdit(TempGenericChartCaptionsBuf,GenericChartMgt.OptionalMeasure3Code);
                               UpdateChartDefinition;
                             END;

                ShowCaption=No }

    { 7   ;3   ;Group     ;
                Name=Optional Measure 4;
                CaptionML=[ENU=Optional Measure;
                           NOR=Valgfritt mÜl;
                           SVE=Valfritt mÑtvÑrde];
                GroupType=Group }

    { 6   ;4   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DataColumn[5];
                Enabled=OptionalMeasuresEnabled AND DataColumn5Enabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             ValidateDataColumn(5);
                           END;

                OnLookup=BEGIN
                           GenericChartMgt.RetrieveFieldColumn(TempGenericChartSetup,DummyInt,DataColumn[5],DummyCaption,2,FALSE);
                           ValidateDataColumn(5);
                         END;

                ShowCaption=No }

    { 4   ;4   ;Field     ;
                OptionCaptionML=[ENU=None,Count,Sum,Min,Max,Avg;
                                 NOR=Ingen,Antall,Sum,Min.,Maks.,Gj.sn.;
                                 SVE=Inget,Antal,Summa,Min,Max,Genomsnittlig];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Aggregation[5];
                Enabled=OptionalMeasuresEnabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             CheckAggregation(5);
                             UpdateChartDefinition;
                           END;

                ShowCaption=No }

    { 3   ;4   ;Field     ;
                OptionCaptionML=[ENU=Column,Point,Line,ColumnStacked,ColumnStacked100,Area,AreaStacked,AreaStacked100,StepLine,,,Range;
                                 NOR=Kolonne,Punkt,Linje,KolonneStablet,KolonneStablet100,OmrÜde,OmrÜdeStablet,OmrÜdeStablet100,TrinnLinje,,,Intervall;
                                 SVE=Kolumn,Punkt,Linje,ColumnStacked,ColumnStacked100,Yta,AreaStacked,AreaStacked100,StepLine,,,Intervall];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ChartTypeReduced[5];
                Enabled=OptionalMeasuresEnabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             UpdateChartDefinition;
                             EnableControls;
                           END;

                ShowCaption=No }

    { 46  ;4   ;Field     ;
                AssistEdit=No;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MeasureCaption[5];
                Enabled=OptionalMeasuresEnabled AND DataColumn5Enabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             TempGenericChartCaptionsBuf.SetCaption(GenericChartMgt.OptionalMeasure4Code,GenericChartMgt.GetUserLanguage,MeasureCaption[5]);
                             UpdateChartDefinition;
                           END;

                OnAssistEdit=BEGIN
                               MeasureCaption[5] := GenericChartMgt.TextMLAssistEdit(TempGenericChartCaptionsBuf,GenericChartMgt.OptionalMeasure4Code);
                               UpdateChartDefinition;
                             END;

                ShowCaption=No }

    { 11  ;3   ;Group     ;
                Name=Optional Measure 5;
                CaptionML=[ENU=Optional Measure;
                           NOR=Valgfritt mÜl;
                           SVE=Valfritt mÑtvÑrde];
                GroupType=Group }

    { 10  ;4   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DataColumn[6];
                Enabled=OptionalMeasuresEnabled AND DataColumn6Enabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             ValidateDataColumn(6);
                           END;

                OnLookup=BEGIN
                           GenericChartMgt.RetrieveFieldColumn(TempGenericChartSetup,DummyInt,DataColumn[6],DummyCaption,2,FALSE);
                           ValidateDataColumn(6);
                         END;

                ShowCaption=No }

    { 9   ;4   ;Field     ;
                OptionCaptionML=[ENU=None,Count,Sum,Min,Max,Avg;
                                 NOR=Ingen,Antall,Sum,Min.,Maks.,Gj.sn.;
                                 SVE=Inget,Antal,Summa,Min,Max,Genomsnittlig];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Aggregation[6];
                Enabled=OptionalMeasuresEnabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             CheckAggregation(6);
                             UpdateChartDefinition;
                           END;

                ShowCaption=No }

    { 8   ;4   ;Field     ;
                OptionCaptionML=[ENU=Column,Point,Line,ColumnStacked,ColumnStacked100,Area,AreaStacked,AreaStacked100,StepLine,,,Range;
                                 NOR=Kolonne,Punkt,Linje,KolonneStablet,KolonneStablet100,OmrÜde,OmrÜdeStablet,OmrÜdeStablet100,TrinnLinje,,,Intervall;
                                 SVE=Kolumn,Punkt,Linje,ColumnStacked,ColumnStacked100,Yta,AreaStacked,AreaStacked100,StepLine,,,Intervall];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ChartTypeReduced[6];
                Enabled=OptionalMeasuresEnabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             UpdateChartDefinition;
                             EnableControls;
                           END;

                ShowCaption=No }

    { 47  ;4   ;Field     ;
                AssistEdit=No;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MeasureCaption[6];
                Enabled=OptionalMeasuresEnabled AND DataColumn6Enabled;
                Editable=OptionalMeasuresEnabled;
                OnValidate=BEGIN
                             TempGenericChartCaptionsBuf.SetCaption(GenericChartMgt.OptionalMeasure5Code,GenericChartMgt.GetUserLanguage,MeasureCaption[6]);
                             UpdateChartDefinition;
                           END;

                OnAssistEdit=BEGIN
                               MeasureCaption[6] := GenericChartMgt.TextMLAssistEdit(TempGenericChartCaptionsBuf,GenericChartMgt.OptionalMeasure5Code);
                               UpdateChartDefinition;
                             END;

                ShowCaption=No }

    { 38  ;2   ;Field     ;
                Name=Y-Axis Title;
                AssistEdit=No;
                CaptionML=[ENU=Y-Axis Title;
                           NOR=X-aksetittel;
                           SVE=Rubrik pÜ Y-axel];
                ToolTipML=[ENU=Specifies the text that is shown next to the y-axis on the generic chart. To specify y-axis titles in different languages, choose the AssistEdit button to open the Generic Chart Text Editor window.;
                           NOR=Angir teksten som vises ved siden av y-aksen i det generiske diagrammet. Hvis du vil angi y-aksetitler pÜ ulike sprÜk, klikker du knappen AssistEdit for Ü Üpne vinduet Generisk diagram - tekstredigeringsprogram.;
                           SVE=Anger texten som visas bredvid y-axeln i det allmÑnna diagrammet. Om du vill ange rubriker fîr y-axeln pÜ olika sprÜk vÑljer du knappen AssistEdit, sÜ îppnas fînstret Textredigerare fîr allmÑnt diagram.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TempGenericChartSetup."Y-Axis Title";
                OnValidate=BEGIN
                             TempGenericChartCaptionsBuf.SetCaption(GenericChartMgt.YAxisTitleCode,GenericChartMgt.GetUserLanguage,
                               TempGenericChartSetup."Y-Axis Title");
                             UpdateChartDefinition;
                           END;

                OnAssistEdit=BEGIN
                               TempGenericChartSetup."Y-Axis Title" :=
                                 GenericChartMgt.TextMLAssistEdit(TempGenericChartCaptionsBuf,GenericChartMgt.YAxisTitleCode);
                               UpdateChartDefinition;
                             END;
                              }

    { 15  ;2   ;Field     ;
                Name=Show Y-Axis Title;
                CaptionML=[ENU=Show Y-Axis Title;
                           NOR=Vis Y-aksetittel;
                           SVE=Visa rubrik pÜ Y-axel];
                ToolTipML=[ENU=Specifies if the value in the Y-Axis Title field is shown on the generic chart.;
                           NOR=Angir om verdien i feltet Y-aksetittel vises i det generiske diagrammet.;
                           SVE=Anger om vÑrdet i fÑltet Rubrik pÜ Y-axel ska visas i det allmÑnna diagrammet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TempGenericChartSetup."Y-Axis Show Title";
                OnValidate=VAR
                             GenericChartMgt@1001 : Codeunit 9180;
                           BEGIN
                             GenericChartMgt.CheckSourceTypeID(TempGenericChartSetup,TRUE);
                             UpdateChartDefinition;
                           END;
                            }

    { 12  ;1   ;Group     ;
                Name=<Control35>;
                CaptionML=[ENU=Dimensions (X- and Z-Axes);
                           NOR=Dimensjoner (X- og Z-akser);
                           SVE=Dimensioner (X- och Z-axlar)];
                GroupType=Group }

    { 49  ;2   ;Field     ;
                Name=X-Axis Field;
                CaptionML=[ENU=X-Axis Field;
                           NOR=Feltet X-akse;
                           SVE=X-axelfÑlt];
                ToolTipML=[ENU=Specifies the field in the source object that is shown on the x-axis of the generic chart. The text is shown as a tooltip when you hover over the data element on the chart.;
                           NOR=Angir feltet i kildeobjektet som er vist pÜ x-aksen i det generiske diagrammet. Teksten vises som et verktõytips nÜr du holder pekeren over dataelementet i diagrammet.;
                           SVE=Anger fÑltet i kÑllobjektet som visas pÜ x-axeln i det allmÑnna diagrammet. Texten visas som en knappbeskrivning nÑr du hÜller pekaren îver dataelementet i diagrammet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TempGenericChartSetup."X-Axis Field Name";
                OnValidate=BEGIN
                             ValidateDimension(1);
                           END;

                OnLookup=VAR
                           GenericChartMgt@1000 : Codeunit 9180;
                         BEGIN
                           WITH TempGenericChartSetup DO
                             GenericChartMgt.RetrieveFieldColumn(TempGenericChartSetup,"X-Axis Field ID","X-Axis Field Name","X-Axis Title",0,FALSE);
                           TempGenericChartCaptionsBuf.SetCaption(GenericChartMgt.XAxisTitleCode,GenericChartMgt.GetUserLanguage,
                             TempGenericChartSetup."X-Axis Title");
                           ValidateDimension(1);
                         END;
                          }

    { 42  ;2   ;Field     ;
                Name=X-Axis Title;
                AssistEdit=No;
                CaptionML=[ENU=X-Axis Title;
                           NOR=X-aksetittel;
                           SVE=Rubrik pÜ X-axel];
                ToolTipML=[ENU=Specifies the text that describes the data that is shown on the x-axis. The text is shown as a tooltip when you hover over the data element on the chart. To specify x-axis titles in different languages, choose the AssistEdit button to open the Generic Chart Text Editor window.;
                           NOR=Angir teksten som beskriver dataene som vises pÜ x-aksen. Teksten vises som et verktõytips nÜr du holder pekeren over dataelementet i diagrammet. Hvis du vil angi y-aksetitler pÜ ulike sprÜk, klikker du knappen AssistEdit for Ü Üpne vinduet Generisk diagram - tekstredigeringsprogram.;
                           SVE=Anger texten som beskriver informationen som visas pÜ x-axeln. Texten visas som en knappbeskrivning nÑr du hÜller pekaren îver dataelementet i diagrammet. Om du vill ange rubriker fîr x-axeln pÜ olika sprÜk vÑljer du knappen AssistEdit, sÜ îppnas fînstret Textredigerare fîr allmÑnt diagram.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TempGenericChartSetup."X-Axis Title";
                OnValidate=BEGIN
                             TempGenericChartCaptionsBuf.SetCaption(GenericChartMgt.XAxisTitleCode,GenericChartMgt.GetUserLanguage,
                               TempGenericChartSetup."X-Axis Title");
                             UpdateChartDefinition;
                           END;

                OnAssistEdit=BEGIN
                               TempGenericChartSetup."X-Axis Title" :=
                                 GenericChartMgt.TextMLAssistEdit(TempGenericChartCaptionsBuf,GenericChartMgt.XAxisTitleCode);
                               UpdateChartDefinition;
                             END;
                              }

    { 48  ;2   ;Field     ;
                Name=Show X-Axis Title;
                CaptionML=[ENU=Show X-Axis Title;
                           NOR=Vis X-aksetittel;
                           SVE=Visa rubrik pÜ X-axel];
                ToolTipML=[ENU=Specifies if the value in the X-Axis Title field is shown on the generic chart.;
                           NOR=Angir om verdien i feltet X-aksetittel vises i det generiske diagrammet.;
                           SVE=Anger om vÑrdet i fÑltet Rubrik pÜ X-axel ska visas i det allmÑnna diagrammet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TempGenericChartSetup."X-Axis Show Title";
                OnValidate=VAR
                             GenericChartMgt@1001 : Codeunit 9180;
                           BEGIN
                             GenericChartMgt.CheckSourceTypeID(TempGenericChartSetup,TRUE);
                             UpdateChartDefinition;
                           END;
                            }

    { 13  ;2   ;Field     ;
                Name=Data Point X Label;
                AssistEdit=No;
                CaptionML=[ENU=Data Point X Label;
                           NOR=Datapunkt X-etikett;
                           SVE=Etikett fîr X-datapunkt];
                ToolTipML=[ENU=Specifies the text describes the selected x-axis value in a tooltip when you hover over a data point. The data point label is shown in front of the data value.;
                           NOR=Angir teksten som beskriver den valgte x-akseverdien i et verktõytips nÜr du holder pekeren over et datapunkt. Datapunktetiketten vises foran dataverdien.;
                           SVE=Anger den text som beskriver det markerade vÑrdet pÜ x-axeln i en knappbeskrivning nÑr du hÜller pekaren îver en datapunkt. Datapunktens etikett visas framfîr dess vÑrde.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TempGenericChartSetup."X-Axis Field Caption";
                OnValidate=BEGIN
                             TempGenericChartCaptionsBuf.SetCaption(GenericChartMgt.XAxisCaptionCode,GenericChartMgt.GetUserLanguage,
                               TempGenericChartSetup."X-Axis Field Caption");
                             UpdateChartDefinition;
                           END;

                OnAssistEdit=BEGIN
                               TempGenericChartSetup."X-Axis Field Caption" :=
                                 GenericChartMgt.TextMLAssistEdit(TempGenericChartCaptionsBuf,GenericChartMgt.XAxisCaptionCode);
                               UpdateChartDefinition;
                             END;
                              }

    { 16  ;2   ;Field     ;
                Name=Z-Axis Field;
                CaptionML=[ENU=Z-Axis Field;
                           NOR=Feltet Z-akse;
                           SVE=Z-axelfÑlt];
                ToolTipML=[ENU=Specifies the field in the source object that is shown on the z-axis of the generic chart.;
                           NOR=Angir feltet i kildeobjektet som er vist pÜ z-aksen i det generiske diagrammet.;
                           SVE=Anger fÑltet i kÑllobjektet som visas pÜ z-axeln i det allmÑnna diagrammet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TempGenericChartSetup."Z-Axis Field Name";
                Enabled=ZAxisEnabled;
                Editable=ZAxisEnabled;
                OnValidate=BEGIN
                             ValidateDimension(2);
                           END;

                OnLookup=VAR
                           GenericChartMgt@1000 : Codeunit 9180;
                         BEGIN
                           WITH TempGenericChartSetup DO
                             GenericChartMgt.RetrieveFieldColumn(TempGenericChartSetup,"Z-Axis Field ID","Z-Axis Field Name","Z-Axis Title",0,FALSE);
                           ValidateDimension(2);
                         END;
                          }

    { 5   ;2   ;Field     ;
                Name=Data Point Z Label;
                AssistEdit=No;
                CaptionML=[ENU=Data Point Z Label;
                           NOR=Datapunkt Z-etikett;
                           SVE=Etikett fîr Z-datapunkt];
                ToolTipML=[ENU=Specifies the text that describes the z-axis value in a tooltip when you hover over a data point. The data point label is shown in front of the data value.;
                           NOR=Angir teksten som beskriver z-akseverdien i et verktõytips nÜr du holder pekeren over et datapunkt. Datapunktetiketten vises foran dataverdien.;
                           SVE=Anger den text som beskriver z-axelvÑrdet i en knappbeskrivning nÑr du hÜller pekaren îver en datapunkt. Datapunktens etikett visas framfîr dess vÑrde.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TempGenericChartSetup."Z-Axis Field Caption";
                OnValidate=BEGIN
                             TempGenericChartCaptionsBuf.SetCaption(GenericChartMgt.ZAxisCaptionCode,GenericChartMgt.GetUserLanguage,
                               TempGenericChartSetup."Z-Axis Field Caption");
                             UpdateChartDefinition;
                           END;

                OnAssistEdit=BEGIN
                               TempGenericChartSetup."Z-Axis Field Caption" :=
                                 GenericChartMgt.TextMLAssistEdit(TempGenericChartCaptionsBuf,GenericChartMgt.ZAxisCaptionCode);
                               UpdateChartDefinition;
                             END;
                              }

    { 44  ;1   ;Group     ;
                Name=Chart Description;
                CaptionML=[ENU=Chart Description;
                           NOR=Diagrambeskrivelse;
                           SVE=Diagrambeskrivning];
                GroupType=Group }

    { 36  ;2   ;Field     ;
                Name=Description;
                AssistEdit=No;
                CaptionML=[ENU=Description;
                           NOR=Beskrivelse;
                           SVE=Beskrivning];
                ToolTipML=[ENU=Specifies a description of the generic chart.;
                           NOR=Angir en beskrivelse av det generiske diagrammet.;
                           SVE=Anger en beskrivning av det allmÑnna diagrammet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ChartDescription;
                Editable=TitleEnabled;
                MultiLine=Yes;
                OnValidate=BEGIN
                             TempGenericChartMemoBuf.SetMemo(GenericChartMgt.DescriptionCode,GenericChartMgt.GetUserLanguage,ChartDescription);
                             UpdateChartDefinition;
                           END;

                OnAssistEdit=BEGIN
                               ChartDescription := GenericChartMgt.MemoMLAssistEdit(TempGenericChartMemoBuf,GenericChartMgt.DescriptionCode);
                               UpdateChartDefinition;
                             END;
                              }

    { 2   ;1   ;Part      ;
                Name=PreviewPart;
                CaptionML=[ENU=Preview Part;
                           NOR=ForhÜndsvisningsdel;
                           SVE=Fîrhandsgranska del];
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page9184;
                PartType=Page }

  }
  CODE
  {
    VAR
      TempGenericChartSetup@1004 : TEMPORARY Record 9180;
      TempGenericChartFilter@1020 : TEMPORARY Record 9181;
      TempGenericChartYAxis@1001 : TEMPORARY Record 9182;
      TempGenericChartCaptionsBuf@1029 : TEMPORARY Record 9185;
      TempGenericChartMemoBuf@1028 : TEMPORARY Record 9186;
      GenericChartMgt@1016 : Codeunit 9180;
      DataColumn@1013 : ARRAY [6] OF Text[50];
      MeasureCaption@1024 : ARRAY [6] OF Text[250];
      Aggregation@1014 : ARRAY [6] OF 'None,Count,Sum,Min,Max,Avg';
      ChartType@1015 : 'Column,Point,Line,ColumnStacked,ColumnStacked100,Area,AreaStacked,AreaStacked100,StepLine,Pie,Doughnut,Range,Radar,Funnel';
      ChartTypeReduced@1003 : ARRAY [6] OF 'Column,Point,Line,ColumnStacked,ColumnStacked100,Area,AreaStacked,AreaStacked100,StepLine,,,Range';
      ChartDescription@1011 : Text;
      DummyInt@1017 : Integer;
      DummyCaption@1030 : Text[50];
      OptionalMeasuresEnabled@1005 : Boolean INDATASET;
      Text002@1006 : TextConst 'ENU=Field %1 is already assigned to a measure or dimension. Select a different field.;NOR=Feltet %1 er allerede tilordnet til et mÜl eller en dimensjon. Velg et annet felt.;SVE=FÑltet %1 har redan tilldelats ett mÜtt eller en dimension. VÑlj ett annat fÑlt.';
      ZAxisEnabled@1008 : Boolean INDATASET;
      Text004@1018 : TextConst 'ENU=You can only select one Measure with aggregation type Count.;NOR=Du kan bare velge ett mÜl med samlingstypen Count.;SVE=Du kan bara vÑlja ett mÑtvÑrde med aggregeringstypen Antal.';
      Text005@1019 : TextConst 'ENU=If you select Aggregation Count, the Data Column will be modified for this measure. Do you want to continue?;NOR=Hvis du velger samlingstypen Count, vil datakolonnen bli endret for dette mÜlet. Vil du fortsette?;SVE=Om du vÑljer aggregeringsantal Ñndras datakolumnen fîr mÑtvÑrdet. Vill du fortsÑtta?';
      TitleEnabled@1002 : Boolean;
      XMLRetrieved@1000 : Boolean;
      DataColumn1Enabled@1007 : Boolean INDATASET;
      DataColumn2Enabled@1009 : Boolean INDATASET;
      DataColumn3Enabled@1010 : Boolean INDATASET;
      DataColumn4Enabled@1012 : Boolean INDATASET;
      DataColumn5Enabled@1022 : Boolean INDATASET;
      DataColumn6Enabled@1023 : Boolean INDATASET;

    LOCAL PROCEDURE SetFieldValues@6();
    BEGIN
      ClearAllVariables;
      GenericChartMgt.RetrieveXML(
        Rec,TempGenericChartSetup,TempGenericChartYAxis,TempGenericChartCaptionsBuf,TempGenericChartMemoBuf,TempGenericChartFilter);
      ChartDescription := TempGenericChartMemoBuf.GetMemo(GenericChartMgt.DescriptionCode,GenericChartMgt.GetUserLanguage);
      TempGenericChartSetup."Y-Axis Title" :=
        TempGenericChartCaptionsBuf.GetCaption(GenericChartMgt.YAxisTitleCode,GenericChartMgt.GetUserLanguage);
      TempGenericChartSetup."X-Axis Field Caption" :=
        TempGenericChartCaptionsBuf.GetCaption(GenericChartMgt.XAxisCaptionCode,GenericChartMgt.GetUserLanguage);
      TempGenericChartSetup."X-Axis Title" :=
        TempGenericChartCaptionsBuf.GetCaption(GenericChartMgt.XAxisTitleCode,GenericChartMgt.GetUserLanguage);
      TempGenericChartSetup."Z-Axis Field Caption" :=
        TempGenericChartCaptionsBuf.GetCaption(GenericChartMgt.ZAxisCaptionCode,GenericChartMgt.GetUserLanguage);
      TempGenericChartSetup.INSERT;
      FillMatrixWhenOpenPage;
      UpdateTempGenericChartYAXis;
      RefreshPreview;
    END;

    LOCAL PROCEDURE ValidateDataColumn@13(Index@1000 : Integer);
    VAR
      FieldAlreadyExists@1002 : Boolean;
      i@1001 : Integer;
    BEGIN
      GenericChartMgt.CheckSourceTypeID(TempGenericChartSetup,TRUE);
      FOR i := 1 TO ARRAYLEN(DataColumn) DO BEGIN
        IF (DataColumn[i] <> '') AND (Index <> i) THEN
          FieldAlreadyExists := (DataColumn[Index] = DataColumn[i]) OR FieldAlreadyExists;
      END;

      IF FieldAlreadyExists THEN
        ERROR(Text002,DataColumn[Index]);

      GenericChartMgt.CheckDataTypeAggregationCompliance(TempGenericChartSetup,DataColumn[Index],Aggregation[Index]);
      GenericChartMgt.ValidateFieldColumn(TempGenericChartSetup,DummyInt,DataColumn[1],DummyCaption,2,FALSE,Aggregation[Index]);
      UpdateChartDefinition;
      EnableControls;
    END;

    LOCAL PROCEDURE ValidateDimension@14(Index@1000 : Integer);
    VAR
      DummyAggregation@1001 : 'None,Count,Sum,Min,Max,Avg';
    BEGIN
      GenericChartMgt.CheckSourceTypeID(TempGenericChartSetup,TRUE);
      WITH TempGenericChartSetup DO BEGIN
        IF ("X-Axis Field Name" <> '') AND ("Z-Axis Field Name" <> '') AND ("X-Axis Field Name" = "Z-Axis Field Name") THEN
          ERROR(Text002,DataColumn[Index]);
      END;
      WITH TempGenericChartSetup DO
        CASE Index OF
          1:
            GenericChartMgt.ValidateFieldColumn(
              TempGenericChartSetup,"X-Axis Field ID","X-Axis Field Name","X-Axis Title",0,FALSE,DummyAggregation);
          2:
            GenericChartMgt.ValidateFieldColumn(
              TempGenericChartSetup,"Z-Axis Field ID","Z-Axis Field Name","Z-Axis Title",0,FALSE,DummyAggregation);
        END;
      UpdateChartDefinition;
      EnableControls;
    END;

    LOCAL PROCEDURE UpdateTempGenericChartYAXis@2();
    VAR
      i@1000 : Integer;
      Count@1001 : Integer;
    BEGIN
      TempGenericChartYAxis.DELETEALL;

      IF ChartCapableOfOptionalMeasures THEN
        Count := ARRAYLEN(DataColumn)
      ELSE
        Count := 1;

      FOR i := 1 TO Count DO
        IF AddYAxisMeasure(i) THEN BEGIN
          CLEAR(TempGenericChartYAxis);
          TempGenericChartYAxis.ID := ID;
          TempGenericChartYAxis."Line No." := i * 10000;
          TempGenericChartYAxis."Y-Axis Measure Field Name" := DataColumn[i];
          TempGenericChartYAxis."Y-Axis Measure Field Caption" := MeasureCaption[i];
          GenericChartMgt.RetrieveFieldColumnIDFromName(
            TempGenericChartSetup."Source Type",TempGenericChartSetup."Source ID",TempGenericChartYAxis."Y-Axis Measure Field ID",
            DataColumn[i]);
          TempGenericChartYAxis.Aggregation := Aggregation[i];
          IF i = 1 THEN
            TempGenericChartYAxis."Chart Type" := ChartType
          ELSE
            TempGenericChartYAxis."Chart Type" := ChartTypeReduced[i];
          TempGenericChartYAxis.INSERT;
        END;
    END;

    LOCAL PROCEDURE FillMatrixWhenOpenPage@1();
    VAR
      i@1001 : Integer;
      CurrentCaptionCode@1002 : Code[10];
    BEGIN
      CLEAR(DataColumn);
      CLEAR(MeasureCaption);
      CLEAR(Aggregation);
      CLEAR(ChartType);
      i := 0;
      IF TempGenericChartYAxis.FINDSET THEN BEGIN
        CurrentCaptionCode := GenericChartMgt.RequiredMeasureCode;
        REPEAT
          i += 1;
          DataColumn[i] := TempGenericChartYAxis."Y-Axis Measure Field Name";
          MeasureCaption[i] := TempGenericChartCaptionsBuf.GetCaption(CurrentCaptionCode,GenericChartMgt.GetUserLanguage);
          Aggregation[i] := TempGenericChartYAxis.Aggregation;
          IF i = 1 THEN
            ChartType := TempGenericChartYAxis."Chart Type"
          ELSE
            ChartTypeReduced[i] := TempGenericChartYAxis."Chart Type";

          IF CurrentCaptionCode = GenericChartMgt.RequiredMeasureCode THEN
            CurrentCaptionCode := GenericChartMgt.OptionalMeasure1Code
          ELSE
            CurrentCaptionCode := INCSTR(CurrentCaptionCode)
        UNTIL TempGenericChartYAxis.NEXT = 0;
      END
    END;

    LOCAL PROCEDURE UpdateChartDefinition@5();
    BEGIN
      UpdateTempGenericChartYAXis;
      GenericChartMgt.SaveChanges(Rec,TempGenericChartSetup,TempGenericChartYAxis,TempGenericChartFilter,
        TempGenericChartCaptionsBuf,TempGenericChartMemoBuf);
      EnableControls;
      RefreshPreview;
    END;

    LOCAL PROCEDURE RefreshPreview@8();
    VAR
      chartBuilder@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartBuilder";
    BEGIN
      chartBuilder := chartBuilder.Empty;
      GenericChartMgt.FillChartHelper(chartBuilder,TempGenericChartSetup,TempGenericChartYAxis,TempGenericChartFilter,
        TempGenericChartCaptionsBuf,TempGenericChartMemoBuf);
      CurrPage.PreviewPart.PAGE.SetChartDefinition(chartBuilder);
    END;

    LOCAL PROCEDURE ClearAllVariables@9();
    BEGIN
      TempGenericChartSetup.DELETEALL;
      TempGenericChartFilter.DELETEALL;
      TempGenericChartYAxis.DELETEALL;
      TempGenericChartCaptionsBuf.DELETEALL;
      TempGenericChartMemoBuf.DELETEALL;

      CLEAR(TempGenericChartFilter);
      CLEAR(TempGenericChartYAxis);
      CLEAR(TempGenericChartSetup);
      CLEAR(TempGenericChartCaptionsBuf);
      CLEAR(TempGenericChartMemoBuf);
      CLEAR(GenericChartMgt);
      CLEAR(DataColumn);
      CLEAR(MeasureCaption);
      CLEAR(Aggregation);
      CLEAR(ChartType);
      CLEAR(ChartTypeReduced);
      CLEAR(DummyInt);
      CLEAR(DummyCaption);
    END;

    LOCAL PROCEDURE ChartCapableOfOptionalMeasures@12() : Boolean;
    BEGIN
      EXIT(NOT (ChartType IN [ChartType::Pie,ChartType::Doughnut,ChartType::Funnel,ChartType::Radar]));
    END;

    LOCAL PROCEDURE ExportChartDefinition@10();
    VAR
      TempBlob@1000 : Record 99008535;
      FileMgt@1001 : Codeunit 419;
    BEGIN
      CALCFIELDS(BLOB);
      IF BLOB.HASVALUE THEN BEGIN
        TempBlob.Blob := BLOB;
        FileMgt.BLOBExport(TempBlob,'*.xml',TRUE);
      END;
    END;

    LOCAL PROCEDURE EnableControls@17();
    BEGIN
      OptionalMeasuresEnabled := ChartCapableOfOptionalMeasures AND (TempGenericChartSetup."Z-Axis Field Name" = '');
      ZAxisEnabled :=
        ChartCapableOfOptionalMeasures AND
        (DataColumn[2] = '') AND (DataColumn[3] = '') AND (DataColumn[4] = '') AND (DataColumn[5] = '') AND (DataColumn[6] = '');
      TitleEnabled := TRUE;
      DataColumn1Enabled := Aggregation[1] <> Aggregation[1]::Count;
      DataColumn2Enabled := Aggregation[2] <> Aggregation[2]::Count;
      DataColumn3Enabled := Aggregation[3] <> Aggregation[3]::Count;
      DataColumn4Enabled := Aggregation[4] <> Aggregation[4]::Count;
      DataColumn5Enabled := Aggregation[5] <> Aggregation[5]::Count;
      DataColumn6Enabled := Aggregation[6] <> Aggregation[6]::Count;
    END;

    LOCAL PROCEDURE AddYAxisMeasure@19(index@1000 : Integer) : Boolean;
    BEGIN
      IF Aggregation[index] = Aggregation[index]::Count THEN
        EXIT(TRUE);
      EXIT(DataColumn[index] <> '');
    END;

    LOCAL PROCEDURE CheckAggregation@30(index@1000 : Integer);
    VAR
      i@1001 : Integer;
      FieldOfTypeCountAlreadyExists@1002 : Boolean;
      CountColumnName@1003 : Text[50];
      ReplaceDataColumn@1004 : Boolean;
    BEGIN
      FOR i := 1 TO ARRAYLEN(Aggregation) DO BEGIN
        IF (Aggregation[i] = Aggregation[i]::Count) AND (index <> i) THEN
          FieldOfTypeCountAlreadyExists := (Aggregation[index] = Aggregation[i]) OR FieldOfTypeCountAlreadyExists;
      END;

      IF FieldOfTypeCountAlreadyExists THEN
        ERROR(Text004);

      GenericChartMgt.CheckDataTypeAggregationCompliance(TempGenericChartSetup,DataColumn[index],Aggregation[index]);
      IF Aggregation[index] = Aggregation[index]::Count THEN BEGIN
        CountColumnName := GenericChartMgt.GetQueryCountColumnName(TempGenericChartSetup);
        IF DataColumn[index] <> CountColumnName THEN BEGIN
          ReplaceDataColumn := TRUE;
          IF DataColumn[index] <> '' THEN
            ReplaceDataColumn := CONFIRM(Text005,FALSE);
          IF ReplaceDataColumn THEN
            DataColumn[index] := CountColumnName
          ELSE
            ERROR('');
        END;
      END;
    END;

    BEGIN
    END.
  }
}

