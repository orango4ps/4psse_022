OBJECT Codeunit 11130043 IoT Process Action
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11130020;
    OnRun=VAR
            IoTEventLog@1100528800 : Record 11130017;
            IoTManagement@1100528801 : Codeunit 11130041;
            OEventValueType@1100528802 : ' ,boolean,date,datetime,decimal,integer,text,time';
          BEGIN
            CALCFIELDS("In Progress");
            IoTEventLog.SETRANGE("Hardware ID", "Device ID");
            IoTEventLog.SETRANGE("Event ID", "Event ID");
            IoTEventLog.SETRANGE(Processed, FALSE);
            IF IoTEventLog.FINDSET THEN BEGIN
              IF NOT "In Progress" THEN BEGIN
                FindLastIoTEventLogEntryNotProcessed(IoTEventLog);
                IoTManagement.GetEventValueType("Device ID", "Event ID", OEventValueType);
                IF ActionIsRequired(OEventValueType, IoTEventLog.Value, Rec) THEN
                  RunAction(Rec, IoTEventLog."Entry No.");
              END;
              IF LastIoTServiceObjectThreshold THEN
                  IoTEventLog.MODIFYALL(Processed, TRUE)
            END;
          END;

  }
  CODE
  {
    VAR
      LastIoTServiceObjectThreshold@1100528800 : Boolean;

    LOCAL PROCEDURE ActionIsRequired@1100528800(IEventValueType@1100528800 : ' ,boolean,date,datetime,decimal,integer,text,time';IEventLogValue@1100528801 : Text;IoTServiceObjectThreshold@1100528802 : Record 11130020) : Boolean;
    VAR
      IoTManagement@1100528803 : Codeunit 11130041;
      DummyText@1100528804 : Text;
    BEGIN
      CASE IEventValueType OF
        IEventValueType::boolean:
          BEGIN
            IF IoTManagement.GetEvaluatedBoolean(IEventLogValue, DummyText) = IoTManagement.GetEvaluatedBoolean(IoTServiceObjectThreshold."Lower Threshold Value", DummyText) THEN
              EXIT(TRUE);
          END;
        IEventValueType::decimal:
          BEGIN
            IF (IoTManagement.GetEvaluatedDecimal(IEventLogValue, DummyText) <
                IoTManagement.GetEvaluatedDecimal(IoTServiceObjectThreshold."Lower Threshold Value", DummyText))
              OR
               (IoTManagement.GetEvaluatedDecimal(IEventLogValue, DummyText) >
                IoTManagement.GetEvaluatedDecimal(IoTServiceObjectThreshold."Upper Threshold Value", DummyText))
            THEN
              EXIT(TRUE);
          END;
        IEventValueType::integer:
          BEGIN
            IF (IoTManagement.GetEvaluatedInteger(IEventLogValue, DummyText) <
                IoTManagement.GetEvaluatedInteger(IoTServiceObjectThreshold."Lower Threshold Value", DummyText))
              OR
               (IoTManagement.GetEvaluatedInteger(IEventLogValue, DummyText) >
                IoTManagement.GetEvaluatedInteger(IoTServiceObjectThreshold."Upper Threshold Value", DummyText))
            THEN
              EXIT(TRUE);
          END;
        IEventValueType::date:
          BEGIN
            IF (IoTManagement.GetEvaluatedDate(IEventLogValue, DummyText) <
                IoTManagement.GetEvaluatedDate(IoTServiceObjectThreshold."Lower Threshold Value", DummyText))
              OR
               (IoTManagement.GetEvaluatedDate(IEventLogValue, DummyText) >
                IoTManagement.GetEvaluatedDate(IoTServiceObjectThreshold."Upper Threshold Value", DummyText))
            THEN
              EXIT(TRUE);
          END;
        IEventValueType::time:
          BEGIN
            IF (IoTManagement.GetEvaluatedTime(IEventLogValue, DummyText) <
                IoTManagement.GetEvaluatedTime(IoTServiceObjectThreshold."Lower Threshold Value", DummyText))
              OR
               (IoTManagement.GetEvaluatedTime(IEventLogValue, DummyText) >
                IoTManagement.GetEvaluatedTime(IoTServiceObjectThreshold."Upper Threshold Value", DummyText))
            THEN
              EXIT(TRUE);
          END;
        IEventValueType::datetime:
          BEGIN
            IF (IoTManagement.GetEvaluatedDateTime(IEventLogValue, DummyText) <
                IoTManagement.GetEvaluatedDateTime(IoTServiceObjectThreshold."Lower Threshold Value", DummyText))
              OR
               (IoTManagement.GetEvaluatedDateTime(IEventLogValue, DummyText) >
                IoTManagement.GetEvaluatedDateTime(IoTServiceObjectThreshold."Upper Threshold Value", DummyText))
            THEN
              EXIT(TRUE);
          END;
        ELSE
          IF IEventLogValue = IoTServiceObjectThreshold."Lower Threshold Value" THEN
            EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE RunAction@1100528805(IoTServiceObjectThreshold@1100528800 : Record 11130020;IoTEventLogEntryNo@1100528805 : Integer);
    VAR
      ServiceObject@1100528801 : Record 11071691;
      IoTAction@1100528802 : Record 11130021;
      IoTEventLog@1100528806 : Record 11130017;
      IoTManagement@1100528803 : Codeunit 11130041;
      OServiceCallNo@1100528804 : Code[20];
    BEGIN
      IoTEventLog.GET(IoTEventLogEntryNo);
      IoTServiceObjectThreshold.CALCFIELDS("IoT Action");
      CASE IoTServiceObjectThreshold."IoT Action" OF
        IoTServiceObjectThreshold."IoT Action"::ServiceObjectStatus:
          BEGIN
            ServiceObject.GET(IoTServiceObjectThreshold."Service Object");
            IoTAction.GET(IoTServiceObjectThreshold."Action Code");
            IF ServiceObject.Status <> IoTAction."Service Object Status" THEN
              ServiceObject.VALIDATE(Status, IoTAction."Service Object Status");
              ServiceObject.MODIFY;
              IoTManagement.AddActionLogEntry(IoTServiceObjectThreshold, OServiceCallNo, IoTEventLog."Entry No.");
          END;
        IoTServiceObjectThreshold."IoT Action"::Call:
          BEGIN
            IoTManagement.CreateServiceCall(IoTServiceObjectThreshold, IoTEventLog, OServiceCallNo);
            IoTManagement.AddActionLogEntry(IoTServiceObjectThreshold, OServiceCallNo, IoTEventLogEntryNo);
          END;
      END;
    END;

    LOCAL PROCEDURE FindLastIoTEventLogEntryNotProcessed@1100528801(VAR IoTEventLog@1100528800 : Record 11130017);
    VAR
      Published@1100528801 : DateTime;
      EventLogEntryNo@1100528802 : Integer;
    BEGIN
      IF IoTEventLog.FINDSET THEN BEGIN
        EventLogEntryNo := IoTEventLog."Entry No.";
        Published := IoTEventLog.Published;
        IF IoTEventLog.NEXT <> 0 THEN
          REPEAT
            IF Published < IoTEventLog.Published THEN BEGIN
              EventLogEntryNo := IoTEventLog."Entry No.";
              Published := IoTEventLog.Published;
            END;
          UNTIL IoTEventLog.NEXT = 0;
      END;
      IoTEventLog.GET(EventLogEntryNo);
    END;

    PROCEDURE SetLastIoTServiceObjectThreshold@1100528802(ILastIoTServiceObjectThreshold@1100528800 : Boolean);
    BEGIN
      LastIoTServiceObjectThreshold := ILastIoTServiceObjectThreshold;
    END;

    BEGIN
    END.
  }
}

