OBJECT XMLport 81626 Imp. Gen. Journal Lines IMSE
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS7.00Toolsv9.MC;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Imp. Gen. Journal Lines;
               SVE=Imp. redovisningsjournalrader];
    DefaultFieldsValidation=No;
    OnInitXMLport=BEGIN
                    XMLNo := 81626;
                    MainTableID := 81;
                  END;

    OnPreXMLport=BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   ConversionXMLPort.GET(XMLNo);

                   ConvMgt.CheckTemplateFilled(80,ConversionXMLPort."Journal Template Name");
                   ConvMgt.CheckBatchFilled(232,ConversionXMLPort."Journal Batch Name");

                   ConvMgt.DeleteConComment(XMLNo);
                   ConvMgt.CreateConComment(XMLNo,'Start');
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XMLNo,'Stop');
                    ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{755F5B7F-F062-4834-8364-DC4CD51C5A62}];  ;Root                ;Element ;Text     }

    { [{A7DBD164-8D3E-4F8D-B3A0-89F91BC12205}];1 ;Gen.JournalLine     ;Element ;Table   ;
                                                  SourceTable=Table81;
                                                  SourceTableView=SORTING(Field1,Field51,Field2);
                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 ContactPerson@1100409000 : Record 5050;
                                                                               BEGIN
                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Gen. Journal Line");

                                                                                 WITH "Gen. Journal Line" DO BEGIN

                                                                                   IF PostingDateFromImportFile AND (HDate <> 0D) THEN
                                                                                     "Posting Date" := HDate
                                                                                   ELSE
                                                                                     "Posting Date" := ConversionXMLPort."Posting Date";

                                                                                   ConvMgt.GenerateGenJnlLine(
                                                                                     ConversionXMLPort."Journal Template Name",
                                                                                     ConversionXMLPort."Journal Batch Name",
                                                                                     "Posting Date",
                                                                                     B,
                                                                                     G,
                                                                                     "Gen. Journal Line");

                                                                                   "System-Created Entry":=TRUE;
                                                                                   VALIDATE("Account No.",A);
                                                                                   IF C <> '' THEN
                                                                                     VALIDATE("Shortcut Dimension 1 Code",C);
                                                                                   IF K <> '' THEN
                                                                                     VALIDATE("Shortcut Dimension 2 Code",K);

                                                                                   IF IDate <> 0D THEN
                                                                                     VALIDATE("Document Date",IDate);
                                                                                   IF FDec <> 0 THEN
                                                                                     VALIDATE(Quantity,FDec);
                                                                                   VALIDATE(Amount,EDec);
                                                                                   VALIDATE(Description,D);
                                                                                   EVALUATE(Dim3,J);
                                                                                   IF Dim3 <> '' THEN
                                                                                     ValidateShortcutDimCode(3,Dim3);
                                                                                   //>> 140108 ITERO.SB Added Dimension, L
                                                                                   IF L <> '' THEN BEGIN
                                                                                     OldDimSetID := "Dimension Set ID";
                                                                                     DimMgt.GetDimensionSet(TempDimSetEntry,OldDimSetID);

                                                                                     TempDimSetEntry.RESET;
                                                                                     TempDimSetEntry.SETRANGE("Dimension Code",'™VRIGT');
                                                                                     IF TempDimSetEntry.FINDFIRST THEN BEGIN
                                                                                       TempDimSetEntry.VALIDATE("Dimension Value Code",L);
                                                                                       TempDimSetEntry.MODIFY;
                                                                                     END
                                                                                     ELSE BEGIN
                                                                                       TempDimSetEntry.INIT;
                                                                                       TempDimSetEntry.VALIDATE("Dimension Code",'™VRIGT');
                                                                                       TempDimSetEntry.VALIDATE("Dimension Value Code",L);
                                                                                       TempDimSetEntry.INSERT;
                                                                                     END;

                                                                                     NewDimSetID := DimMgt.GetDimensionSetID(TempDimSetEntry); //get new DimSetID, after existing PO dimensions are modified

                                                                                     IF OldDimSetID <> NewDimSetID THEN BEGIN
                                                                                       "Dimension Set ID" := NewDimSetID; //assign new DimSetID to Purchase Order
                                                                                     END;

                                                                                   END;
                                                                                   //<<
                                                                                   ConvMgt.ClearGJNLPostingFields("Gen. Journal Line");
                                                                                   ImpLineCounter := ImpLineCounter + 1;
                                                                                   MODIFY;

                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{5C900A9C-2240-4551-8D3B-A67A2D629F53}];2 ;A                   ;Element ;Text     }

    { [{5E5EE9AF-296C-4B48-B3A4-71FD1D3BDBB8}];2 ;B                   ;Element ;Text     }

    { [{81EF86E1-A401-49BA-998E-C96326459340}];2 ;C                   ;Element ;Text     }

    { [{A4D141C2-7800-4941-8428-EBDFE695445E}];2 ;D                   ;Element ;Text     }

    { [{A94DDF8B-AF48-4B38-93FE-471C5E7FDE8B}];2 ;E                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF E <> '' THEN
                                                                                    EVALUATE(EDec,E);
                                                                                END;
                                                                                 }

    { [{7009774A-5D5B-4893-B574-E0BA7086A95E}];2 ;F                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF F <> '' THEN
                                                                                    EVALUATE(FDec,F);
                                                                                END;
                                                                                 }

    { [{61A54020-5A22-4777-8499-A876D2E08C7F}];2 ;G                   ;Element ;Text     }

    { [{B967C1D1-EF3A-430C-8F0A-14A06A204F79}];2 ;H                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF H <> '' THEN
                                                                                    EVALUATE(HDate,H);
                                                                                END;
                                                                                 }

    { [{7427C600-0601-45F7-A37A-713E1ABB3539}];2 ;I                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF I <> '' THEN
                                                                                    EVALUATE(IDate,I);
                                                                                END;
                                                                                 }

    { [{3CC4C51E-5ED7-4CD4-9154-B4A8DBD16D6B}];2 ;J                   ;Element ;Text     }

    { [{1EEB8C45-BEA6-46AC-B79E-E48EE3218518}];2 ;K                   ;Element ;Text     }

    { [{857C176D-F15C-4036-95B1-9B7F719FABB3}];2 ;L                   ;Element ;Text     }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=[ENU=Imp. Contract Object;
                 SVE=Imp. kontraktsobjekt];
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100409010;;Container;
                  Name=Imp. Gen. Journal Lines;
                  ContainerType=ContentArea }

      { 1100409009;1;Group  ;
                  CaptionML=[ENU=Options;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  Name=DateFromImport;
                  CaptionML=[ENU=Posting Date from Import File;
                             SVE=Bokf”ringsdatum fr†n importfil];
                  SourceExpr=PostingDateFromImportFile }

    }
  }
  CODE
  {
    VAR
      GenBatchRec@1100525023 : Record 232;
      CommentRec@1100525022 : Record 97;
      ConversionXMLPort@1100525002 : Record 11020640;
      PostingDateFromImportFile@1100525005 : Boolean;
      ConvMgt@1100525020 : Codeunit 11020212;
      DimMgt@1100525019 : Codeunit 408;
      vSource@1100525018 : 'Project,Service';
      XMLNo@1100525015 : Integer;
      MainTableID@1100525014 : Integer;
      ImpLineCounter@1100525013 : Integer;
      ConversionFileFormat@1100525012 : Record 11020691;
      RunIsImportRunBln@1100525011 : Boolean;
      EDec@1100525004 : Decimal;
      FDec@1100525003 : Decimal;
      HDate@1100525001 : Date;
      IDate@1100525000 : Date;
      Dim3@1100285000 : Code[20];
      OldDimSetID@1000000000 : Integer;
      TempDimSetEntry@1000000001 : TEMPORARY Record 480;
      NewDimSetID@1000000002 : Integer;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,"Gen. Journal Line".FIELDNAME("Account No."),'Code20','');
        InsertColumnLine(XMLNo,'B',MainTableID,"Gen. Journal Line".FIELDNAME("Document No."),'Code20','');
        InsertColumnLine(XMLNo,'C',MainTableID,"Gen. Journal Line".FIELDNAME("Shortcut Dimension 1 Code"),'Code20','');
        InsertColumnLine(XMLNo,'D',MainTableID,"Gen. Journal Line".FIELDNAME(Description),'Text50','');
        InsertColumnLine(XMLNo,'E',MainTableID,"Gen. Journal Line".FIELDNAME(Amount),'Decimal','');
        InsertColumnLine(XMLNo,'F',MainTableID,"Gen. Journal Line".FIELDNAME(Quantity),'Decimal','');
        InsertColumnLine(XMLNo,'G',MainTableID,"Gen. Journal Line".FIELDNAME("Bal. Account No."),'Code20','');
        InsertColumnLine(XMLNo,'H',MainTableID,"Gen. Journal Line".FIELDNAME("Posting Date"),'Date','');
        InsertColumnLine(XMLNo,'I',MainTableID,"Gen. Journal Line".FIELDNAME("Document Date"),'Date','');
        InsertColumnLine(XMLNo,'J',MainTableID,'Shortcut Dimension 3 Code','Code20','Function');
        InsertColumnLine(XMLNo,'K',MainTableID,"Gen. Journal Line".FIELDNAME("Shortcut Dimension 2 Code"),'Code20','');
        InsertColumnLine(XMLNo,'L',MainTableID,'Dimension ™vrigt','Code20','™vrigt');


      END;
    END;

    PROCEDURE ClearFields@1100529903();
    BEGIN
      CLEAR("Gen. Journal Line");
      A := '';
      B := '';
      C := '';
      D := '';
      E := '';
      F := '';
      G := '';
      H := '';
      I := '';
      J := '';
      K := '';
      L := '';
      EDec := 0;
      FDec := 0;
      HDate := 0D;
      IDate := 0D;
      CLEAR(TempDimSetEntry);
      OldDimSetID:=0;
      NewDimSetID:=0;
    END;

    PROCEDURE FillConversionXMLPortFields@1100409004();
    VAR
      ConversionXMLPort@1100409000 : Record 11020640;
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      ConversionXMLPort."Post by Journal Template Batch" := TRUE;
      ConversionXMLPort."Journal Template Type" := ConversionXMLPort."Journal Template Type"::General;
      ConversionXMLPort."Main Table ID" := MainTableID;
      ConversionXMLPort."Page ID" := 250;
      ConversionXMLPort.MODIFY;
    END;

    BEGIN
    {
      // Old No.'s are stored in Comment Table (97), marked with [CommentCde].
      // Object No is stored in [XMLNO]. In case of customisation (copy of dataport) change in OnInitDataport;
      //
      // Please use [AddConversionFileFormatLine] in case Import file format is changed.

      140108 ITERO.SB Added Dimension, L
    }
    END.
  }
}

