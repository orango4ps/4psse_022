OBJECT Table 11125663 Web Combined Plant Item Stock
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Web Combined Plant Item Stock;
               NOR=Web, lager for kombinert Maskinartikkel;
               SVE=Lager f”r webbkombinerad Maskinsartikel];
  }
  FIELDS
  {
    { 5   ;   ;Plant Location      ;Code20        ;TableRelation="Plant Location";
                                                   CaptionML=[ENU=Plant Location;
                                                              NOR=Maskinplassering;
                                                              SVE=Maskinutplacering];
                                                   NotBlank=Yes }
    { 10  ;   ;No.                 ;Code20        ;ValidateTableRelation=Yes;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr;
                                                              SVE=Nr] }
    { 15  ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=Item,Plant Type;
                                                                    NOR=Artikkel,Maskintype;
                                                                    SVE=Artikel,Maskinstyp];
                                                   OptionString=Item,Plant Type }
    { 20  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 30  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2] }
    { 60  ;   ;Date Updated        ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              NOR=Endret den;
                                                              SVE=Uppdateringsdatum];
                                                   Editable=No }
    { 130 ;   ;Unit of Measure     ;Code10        ;CaptionML=[ENU=Sales Unit of Measure;
                                                              NOR=Salgsenhet;
                                                              SVE=Enhet i f”rs„ljning] }
    { 150 ;   ;Sales Type          ;Option        ;CaptionML=[ENU=Sales Type;
                                                              NOR=Salgstype;
                                                              SVE=F”rs.typ];
                                                   OptionCaptionML=[ENU=Sales,Rent,Sales/Buy-Back;
                                                                    NOR=Salg,Leie,Salg/Buy-Back;
                                                                    SVE=F”rs„ljning,Hyra,F”rs„ljning/†terk”p];
                                                   OptionString=Sales,Rent,BuyBack }
    { 180 ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal] }
    { 200 ;   ;DateTimeUpdated     ;DateTime      ;CaptionML=[ENU=Date Time Updated;
                                                              NOR=Dato og tid oppdatert;
                                                              SVE=Datum/tid uppdaterat] }
  }
  KEYS
  {
    {    ;Plant Location,No.,Type                 ;Clustered=Yes }
    {    ;Plant Location,Type,No.                  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100525004 : TextConst 'ENU=Synchronize #1#######################\\Status      @2@@@@@@@@@@@@@@@@@@@@@@@;NOR=Synkroniser #1#######################\\Status @2@@@@@@@@@@@@@@@@@@@@@@@;SVE=Synkronisera #1#######################\\Status      @2@@@@@@@@@@@@@@@@@@@@@@@';
      Text001@1100525000 : TextConst 'ENU=Create Stock by Location %1 ready.;NOR=Opprett lager etter Lokasjon %1 er klar;SVE=Lager har skapats efter lagerst„lle %1.';
      WebItemRec@1100525006 : Record 11125662;
      WebItemStockRec@1100525001 : Record 11125663;
      PlantinventoryRec@1100525007 : Record 11012555;
      Window@1100525003 : Dialog;
      Counter@1100525009 : Integer;
      RecordCounter@1100525010 : Integer;
      gvCurrentDatetime@1100525002 : DateTime;

    PROCEDURE UpdateWebItemStock@1100485000(iLocation@1100525000 : Code[20]);
    BEGIN
      IF iLocation = '' THEN
        EXIT;

      gvCurrentDatetime := CURRENTDATETIME;

      IF GUIALLOWED THEN
        Window.OPEN(Text000);

      ProcesWebItems(iLocation);

      WebItemStockRec.RESET;
      WebItemStockRec.SETRANGE("Plant Location", iLocation);
      WebItemStockRec.SETFILTER(DateTimeUpdated, '<%1', gvCurrentDatetime);
      WebItemStockRec.DELETEALL;

      IF GUIALLOWED THEN BEGIN
        MESSAGE(Text001, iLocation);
        Window.CLOSE;
      END;
    END;

    LOCAL PROCEDURE ProcesWebItems@1000000000(iLocation@1100525000 : Code[20]);
    VAR
      WebItemStock2@1100409000 : Record 11125663;
    BEGIN
      WebItemRec.RESET;
      WebItemRec.SETFILTER("Sales Type", '<>%1', WebItemRec."Sales Type"::Sales);
      //Skip 'normal' items (only plant and 'sales-buyback' items). Note: "Sales Type"::Sales only used for 'normal' items
      IF WebItemRec.FINDSET THEN BEGIN
        Counter := 0;
        RecordCounter := WebItemRec.COUNT;

        IF GUIALLOWED THEN
          Window.UPDATE(1,WebItemRec.TABLECAPTION);

        REPEAT
          UpdateWindowStatus;
          //C002421.so
          //WebItemStockRec.RESET;
          //WebItemStockRec.SETRANGE("Plant Location", iLocation);
          //WebItemStockRec.SETRANGE("No.", WebItemRec."No.");
          //WebItemStockRec.SETRANGE(Type, WebItemRec.Type);
          //IF NOT WebItemStockRec.FINDFIRST THEN BEGIN
          //  WebItemStockRec.INIT;
          //  WebItemStockRec."Plant Location" := iLocation;
          //  WebItemStockRec."No." := WebItemRec."No.";
          //  WebItemStockRec.Type := WebItemRec.Type;
          //  WebItemStockRec.DateTimeUpdated := CURRENTDATETIME;
          //  WebItemStockRec.INSERT;
          //END;
          //C002421.eo
          //C002421.sn
          WebItemStockRec.INIT;
          WebItemStockRec."Plant Location" := iLocation;
          WebItemStockRec."No." := WebItemRec."No.";
          WebItemStockRec.Type := WebItemRec.Type;
          //C002421.en

          WebItemStockRec.Description := WebItemRec.Description;
          WebItemStockRec."Description 2" := WebItemRec."Description 2";
          WebItemStockRec."Date Updated" := TODAY;
          WebItemStockRec."Sales Type" := WebItemRec."Sales Type";
          WebItemStockRec."Unit of Measure" := WebItemRec."Unit of Measure";

          IF WebItemStockRec.Type = WebItemStockRec.Type::Item THEN
            GetItemStock
          ELSE BEGIN
            //GetPlantTypeStock;  //C002421.o
            //C002421.sn
            IF (WebItemRec."Sales Type" = WebItemRec."Sales Type"::BuyBack) AND (WebItemRec."Buy Back Price" = 0) THEN  //C002421.n
              WebItemStockRec.Quantity := 0
            ELSE
              GetPlantTypeStock;
            //C002421.en
          END;
          //WebItemStockRec.DateTimeUpdated := CURRENTDATETIME;  //C002421.o
          //IF WebItemStockRec.MODIFY THEN;                      //C002421.o
          //C002421.sn
          IF WebItemStockRec.Quantity > 0 THEN BEGIN
            WebItemStockRec.DateTimeUpdated := CURRENTDATETIME;
            IF NOT WebItemStock2.GET(iLocation, WebItemRec."No.", WebItemRec.Type) THEN
              WebItemStockRec.INSERT
            ELSE BEGIN
              WebItemStock2.TRANSFERFIELDS(WebItemStockRec, FALSE);
              WebItemStock2.MODIFY;
            END;
          END;
          //C002421.en
        UNTIL WebItemRec.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE GetItemStock@1100525000();
    VAR
      PlantOrderLineRec@1100529000 : Record 11012557;
      lvQuantity@1100525000 : Decimal;
    BEGIN
      //**4PS-BNBM 19-04-2011 variable lvQuantity changed from integer to decimal
      PlantOrderLineRec.SETCURRENTKEY("Plant Location (Posted Item)", "Item No.", "Transfer Date");
      PlantOrderLineRec.SETRANGE("Plant Location (Posted Item)", WebItemStockRec."Plant Location");
      PlantOrderLineRec.SETRANGE("Item No.", WebItemStockRec."No.");
      PlantOrderLineRec.SETRANGE(Posted, TRUE);
      PlantOrderLineRec.SETRANGE(Type, PlantOrderLineRec.Type::Item);
      IF PlantOrderLineRec.FINDSET THEN BEGIN
        REPEAT
          PlantOrderLineRec.CALCFIELDS("Plant Order Type");
          IF PlantOrderLineRec."Plant Order Type" = PlantOrderLineRec."Plant Order Type"::Arrival THEN
            lvQuantity := lvQuantity + PlantOrderLineRec.Quantity;
          IF PlantOrderLineRec."Plant Order Type" = PlantOrderLineRec."Plant Order Type"::Removal THEN
            lvQuantity := lvQuantity - PlantOrderLineRec.Quantity;
        UNTIL PlantOrderLineRec.NEXT = 0 ;
      END;

      WebItemStockRec.Quantity := lvQuantity;
    END;

    LOCAL PROCEDURE GetPlantTypeStock@1100525001();
    BEGIN
      PlantinventoryRec.RESET;
      PlantinventoryRec.SETRANGE(Removed, FALSE);
      PlantinventoryRec.SETRANGE(Location, WebItemStockRec."Plant Location");
      PlantinventoryRec.SETRANGE("Plant Type", WebItemStockRec."No.");

      IF PlantinventoryRec.FINDFIRST THEN BEGIN
        PlantinventoryRec.CALCFIELDS("Cum.Quantity Loc.-Plant Type");
        WebItemStockRec.Quantity := PlantinventoryRec."Cum.Quantity Loc.-Plant Type";
      END ELSE BEGIN
        WebItemStockRec.Quantity := 0;
      END;
    END;

    LOCAL PROCEDURE UpdateWindowStatus@87();
    BEGIN
      IF GUIALLOWED THEN BEGIN
        Counter := Counter + 1;
        Window.UPDATE(2,ROUND(Counter / RecordCounter * 10000,1));
      END;
    END;

    BEGIN
    END.
  }
}

