OBJECT Page 51000 UPD tables
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=UPGTK;
  }
  PROPERTIES
  {
    SourceTable=Table2000000001;
    SourceTableView=WHERE(Version List=FILTER(UP*),
                          Type=CONST(Table));
    PageType=List;
    OnOpenPage=BEGIN
                 GLOBALLANGUAGE(1033);
                 byFld := TRUE;
               END;

    OnAfterGetRecord=VAR
                       recref@1000000000 : RecordRef;
                       company@1000000001 : Record 2000000006;
                       fldref@1100285100 : FieldRef;
                       flds@1100285101 : Record 2000000041;
                       empty@1100285102 : Boolean;
                     BEGIN
                       reks := 0;
                       lastFound := '';
                       IF byFld THEN company.SETRANGE(Name,COMPANYNAME);
                       company.FINDSET(FALSE);
                       REPEAT
                         recref.OPEN(ID,FALSE,company.Name);
                         IF (COPYSTR(Name,1,2) = 'UP') OR (NOT byFld) THEN BEGIN
                           reks += recref.COUNT;
                           IF recref.COUNT > 0 THEN lastFound := company.Name;
                         END;

                         recref.CLOSE;
                       UNTIL company.NEXT=0;
                     END;

    ActionList=ACTIONS
    {
      { 1000000007;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000008;1 ;Action    ;
                      Name=clean;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 deleteReks(ID);
                               END;
                                }
      { 1000000010;1 ;Action    ;
                      Name=UpdateVendorInfo;
                      OnAction=BEGIN
                                 // UpgradeMnm.UpdateVendorInfo;
                               END;
                                }
      { 1000000011;1 ;Action    ;
                      Name=UpdateGiroTypes;
                      OnAction=BEGIN
                                 // UpgradeMnm.UpdateGiroTypes;
                               END;
                                }
      { 1000000012;1 ;Action    ;
                      Name=CreatePackEntrys;
                      OnAction=BEGIN
                                 // UpgradeMnm.CreatePackEntrys;
                               END;
                                }
      { 1000000013;1 ;Action    ;
                      Name=UpdateTables;
                      OnAction=BEGIN
                                 // UpgradeMnm.UpdateTables;
                               END;
                                }
      { 1100285100;1 ;Action    ;
                      Name=recalc;
                      OnAction=VAR
                                 recref@1100285104 : RecordRef;
                                 company@1100285103 : Record 2000000006;
                                 fldref@1100285102 : FieldRef;
                                 flds@1100285101 : Record 2000000041;
                                 empty@1100285100 : Boolean;
                               BEGIN
                                 reks := 0;
                                 lastFound := '';
                                 company.FINDSET(FALSE);
                                 REPEAT
                                   recref.OPEN(ID,FALSE,company.Name);
                                   IF COPYSTR(Name,1,2) = 'UP' THEN BEGIN
                                     reks += recref.COUNT;
                                     IF recref.COUNT > 0 THEN lastFound := company.Name;
                                   END
                                   ELSE BEGIN
                                     flds.SETRANGE(TableNo,ID);
                                     flds.SETFILTER(FieldName,'UPG*');
                                     IF recref.FINDSET AND (ID <> 17) THEN REPEAT
                                       empty := TRUE;
                                       IF flds.FINDSET THEN REPEAT
                                         fldref := recref.FIELD(flds."No.");
                                         empty := fldRefIsEmpty(fldref);
                                       UNTIL flds.NEXT=0;
                                       IF NOT empty THEN
                                         reks += 1;
                                     UNTIL recref.NEXT=0;
                                   END;

                                   recref.CLOSE;
                                 UNTIL company.NEXT=0;
                                 byFld := NOT byFld;
                               END;
                                }
      { 1100285101;1 ;Action    ;
                      Name=MoveDataBetweenTables;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 // UPGTK011to022.DoUpgradeOne(0);
                               END;
                                }
      { 1100285102;1 ;Action    ;
                      Name=MoveDataInsideTables;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 // UPGTK011to022.fMoveDataInTables;
                               END;
                                }
      { 1100285103;1 ;Action    ;
                      Name=DeleteReks;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 // UPGTK011to022.fDeleteReks;
                               END;
                                }
      { 1100285104;1 ;Action    ;
                      Name=MoveDataFromOneTable;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 // UPGTK011to022.DoUpgradeOne(ID);
                               END;
                                }
      { 1100285105;1 ;Action    ;
                      Name=UpgradePeriodicTemplate;
                      OnAction=BEGIN
                                 UPGW1.UpgradePeriodicTemplate;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;;Container;
                Name=Tabels;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                GroupType=Repeater }

    { 1000000002;2;Field  ;
                SourceExpr=Type }

    { 1000000003;2;Field  ;
                SourceExpr="Company Name" }

    { 1000000004;2;Field  ;
                SourceExpr=ID }

    { 1000000005;2;Field  ;
                SourceExpr=Name }

    { 1000000006;2;Field  ;
                CaptionML=ENU=Antal;
                SourceExpr=reks;
                Editable=false }

    { 1000000009;2;Field  ;
                SourceExpr=lastFound;
                Editable=false }

  }
  CODE
  {
    VAR
      reks@1000000000 : Integer;
      lastFound@1000000001 : Text;
      UpgradeMnm@1000000002 : Codeunit 11128290;
      byFld@1100285100 : Boolean;
      UPGTK011to022@1100285101 : Codeunit 50000;
      UPGW1@1100285102 : Codeunit 104000;

    LOCAL PROCEDURE deleteReks@1000000001(reksID@1000000000 : Integer);
    VAR
      recRef@1000000001 : RecordRef;
      keyRef@1000000002 : KeyRef;
      fldRef@1000000003 : FieldRef;
      empty@1000000004 : Boolean;
      i@1000000005 : Integer;
      company@1000000006 : Record 2000000006;
      textrad@1100285100 : Text;
      InitRecRef@1100285101 : RecordRef;
      InitFldRef@1100285102 : FieldRef;
    BEGIN
      IF byFld THEN company.SETRANGE(Name,COMPANYNAME);
      company.FINDSET(FALSE);
      REPEAT
        recRef.OPEN(reksID,FALSE,company.Name);
        empty := TRUE;
        InitRecRef.OPEN(reksID);
        InitRecRef.INIT;

        keyRef := recRef.KEYINDEX(1);
        IF recRef.FINDSET THEN
        REPEAT
          empty := TRUE;
          FOR i := 1 TO recRef.FIELDCOUNT DO BEGIN
            fldRef := recRef.FIELDINDEX(i);
            InitFldRef := InitRecRef.FIELDINDEX(i);
            textrad := FORMAT(fldRef.NUMBER) + ' ' + fldRef.NAME + ': "' + FORMAT(fldRef.VALUE) +'"';
            IF NOT inKey(keyRef,fldRef.NAME) THEN
              IF (NOT (FORMAT(fldRef.VALUE) IN [' ','','0','Nej','No'])) THEN
                empty := FALSE;
            IF NOT empty THEN
              empty := (FORMAT(fldRef.VALUE) = FORMAT(InitFldRef.VALUE));
          END;
          IF empty THEN
            recRef.DELETE(FALSE);
        UNTIL (recRef.NEXT=0) OR (NOT empty);
        recRef.CLOSE;
        InitRecRef.CLOSE;
        COMMIT;
      UNTIL (company.NEXT=0) OR (NOT empty);
    END;

    LOCAL PROCEDURE inKey@1000000008(kRef@1000000000 : KeyRef;fRefVar@1000000002 : Variant) : Boolean;
    VAR
      i@1000000001 : Integer;
      kRefVar@1000000003 : Variant;
      fRef@1000000004 : FieldRef;
    BEGIN
      FOR i := 1 TO kRef.FIELDCOUNT DO BEGIN
        fRef := kRef.FIELDINDEX(i);
        kRefVar := fRef.NAME;
        IF FORMAT(kRefVar) = FORMAT(fRefVar)   THEN
          EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE fldRefIsEmpty@1100285100(VAR fldRef@1100285100 : FieldRef) : Boolean;
    VAR
      valText@1100285102 : Text;
      valInt@1100285103 : Integer;
      valBool@1100285104 : Boolean;
      valVar@1100285106 : Variant;
      valDec@1100285107 : Decimal;
    BEGIN

      valVar := fldRef.VALUE;

      CASE TRUE OF
        valVar.ISBOOLEAN:
          EXIT(LOWERCASE(FORMAT(valVar)) = 'no');
        valVar.ISCODE,valVar.ISTEXT:
          IF EVALUATE(valText, valVar) THEN EXIT(valText = '');
        valVar.ISDECIMAL:
          IF EVALUATE(valDec, valVar) THEN EXIT(valDec = 0);
        valVar.ISTIME:
          EXIT(VARIANT2TIME(valVar) = 0T);
        valVar.ISDATE:
          EXIT(VARIANT2DATE(valVar) = 0D);
        valVar.ISOPTION:
          BEGIN
            valText := DELCHR(FORMAT(valVar),'<>');
            EXIT(valText = '');
          END;
        valVar.ISINTEGER:
          BEGIN
            valText := DELCHR(FORMAT(valVar),'<>');
            EXIT(valText = '0');
          END;
      //    IF EVALUATE(valInt, valVar) THEN
      //      EXIT(valInt=0);
      END;
      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

