OBJECT Page 6085612 Continia Config. Subpage
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW16.00.00.5.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Daten;
               ENU=Data;
               NLD=Gegevens;
               SVE=Data];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table6085612;
    PageType=ListPart;
    SourceTableTemporary=Yes;
  }
  CONTROLS
  {
    { 1160040000;;Container;
                Name=ContentArea;
                ContainerType=ContentArea }

    { 1160040001;1;Group  ;
                Name=Group;
                IndentationColumnName=Indentation;
                IndentationControls=Table Name;
                ShowAsTree=Yes;
                GroupType=Repeater }

    { 1160040002;2;Field  ;
                Name=Table Name;
                SourceExpr="Table Name";
                Editable=FALSE }

    { 1160040003;2;Field  ;
                Name=Record Name;
                SourceExpr="Record Name";
                Editable=FALSE }

    { 1160040004;2;Field  ;
                Name=Include;
                SourceExpr=Include;
                OnValidate=BEGIN
                             ModifyTempTable("Entry No.",Include);
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

  }
  CODE
  {
    VAR
      TempConfigLine@1160040002 : TEMPORARY Record 6085612;
      ConfigMgt@1160040000 : Codeunit 6085611;
      ActualExpansionStatus@1160040001 : 'Has Children,Expanded,No Children';

    PROCEDURE CreateTempTable@1160040000();
    BEGIN
      ConfigMgt.ShowTree(TempConfigLine);
      UpdateTables;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE PerformAction@1160040001();
    BEGIN
      ConfigMgt.PerfomAction(TempConfigLine);
      UpdateTables;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetExpansionStatus@16();
    BEGIN
      IF IsExpanded THEN
        ActualExpansionStatus := ActualExpansionStatus::Expanded
      ELSE
        IF HasChildren("Entry No.") THEN
          ActualExpansionStatus := ActualExpansionStatus::"Has Children"
        ELSE
          ActualExpansionStatus := ActualExpansionStatus::"No Children";
    END;

    LOCAL PROCEDURE IsExpanded@20() Found : Boolean;
    VAR
      xConfigLine@1160040000 : TEMPORARY Record 6085612;
    BEGIN
      xConfigLine := Rec;

      SETRANGE("Source Entry No.","Entry No.");
      Found := NOT ISEMPTY;

      RESET;
      Rec := xConfigLine;
      EXIT;
    END;

    LOCAL PROCEDURE ToggleExpandCollapse@4();
    VAR
      xConfigLine@1001 : TEMPORARY Record 6085612;
    BEGIN
      xConfigLine := Rec;

      TempConfigLine.RESET;
      TempConfigLine.SETRANGE("Source Entry No.","Entry No.");
      IF TempConfigLine.FINDSET THEN
        REPEAT
          Rec := TempConfigLine;
          IF ActualExpansionStatus = 0 THEN BEGIN
            IF INSERT THEN;
          END ELSE IF ActualExpansionStatus = 1 THEN
            IF DELETE THEN;
        UNTIL TempConfigLine.NEXT = 0;

      Rec := xConfigLine;
    END;

    PROCEDURE HasChildren@1160040016(EntryNo@1160040001 : Integer) Found : Boolean;
    BEGIN
      TempConfigLine.RESET;
      TempConfigLine.SETRANGE("Source Entry No.",EntryNo);
      Found := NOT TempConfigLine.ISEMPTY;
      EXIT;
    END;

    PROCEDURE UpdateTables@1160040005();
    BEGIN
      RESET;
      DELETEALL;

      TempConfigLine.RESET;
      IF TempConfigLine.FINDSET THEN
        REPEAT
          Rec := TempConfigLine;
          INSERT;
        UNTIL TempConfigLine.NEXT = 0;

      IF FINDSET THEN;
    END;

    PROCEDURE ModifyTempTable@1160040002(EntryNo@1160040002 : Integer;IsInclude@1160040001 : Boolean);
    BEGIN
      TempConfigLine.GET(EntryNo);
      TempConfigLine.Include := IsInclude;
      TempConfigLine.MODIFY;
      TempConfigLine.RESET;

      TempConfigLine.SETRANGE("Source Entry No.",EntryNo);
      IF TempConfigLine.FINDSET THEN
        REPEAT
          TempConfigLine.Include := IsInclude;
          TempConfigLine.MODIFY;

          IF GET(TempConfigLine."Entry No.") THEN BEGIN
            Include := IsInclude;
            MODIFY;
          END;
        UNTIL TempConfigLine.NEXT = 0;

      GET(EntryNo);
      Include := IsInclude;
      MODIFY;
      RESET;
    END;

    PROCEDURE ClearTempTable@1160040003();
    BEGIN
      TempConfigLine.RESET;
      TempConfigLine.DELETEALL;
      RESET;
      DELETEALL;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetParam@1160040004(NewDirection@1160040001 : 'Import,Export';VAR TempFile@1160040000 : TEMPORARY Record 6085608);
    BEGIN
      ConfigMgt.SetParam(NewDirection,TempFile);
    END;

    PROCEDURE GetXmlFile@1(VAR TempXmlFile@1000 : TEMPORARY Record 6085608);
    BEGIN
      ConfigMgt.GetXmlFile(TempXmlFile);
    END;

    BEGIN
    END.
  }
}

