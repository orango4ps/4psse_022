OBJECT Table 11229922 Central Plant Number Series
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    CaptionML=ENU=Central Plant Number Series;
    LookupPageID=Page11229922;
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code20        ;OnValidate=VAR
                                                                PlantSetup@1100529001 : Record 11012550;
                                                                PlantType@1100529000 : Record 11012551;
                                                              BEGIN
                                                                IF (Code <> '') AND (Description = '') THEN BEGIN
                                                                  PlantSetup.GET;
                                                                  IF PlantSetup."Numbering per Plant Type" = PlantSetup."Numbering per Plant Type"::"Central No. Series" THEN BEGIN
                                                                    IF PlantType.GET(Code) THEN
                                                                      Description := PlantType.Description;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 20  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 30  ;   ;Last Used Plant No. ;Code10        ;CaptionML=ENU=Last Used Plant No.;
                                                   SQL Data Type=Integer;
                                                   Numeric=Yes }
    { 40  ;   ;Department Code     ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Avdelingskode;
                                                              SVE=Mottagande avdelningskod];
                                                   CaptionClass='1,1,1' }
    { 50  ;   ;Warning No.         ;Code10        ;CaptionML=[ENU=Warning No.;
                                                              NOR=Advarselnr.;
                                                              SVE=Varningsnr] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DPA_Management@1100525000 : Codeunit 11012783;
      Text001@1100527000 : TextConst 'ENU=You cannot assign numbers greater than %1 from the number series %2.;NOR=Du kan ikke tilordne numre st›rre enn %1, fra nummerserien %2.;SVE=Du kan inte tilldela nummer st”rre „n %1 fr†n nr-serierna %2.';

    PROCEDURE GetNextPlantNo@1100529000(PlantNoSeries@1100529000 : Code[20]) : Code[10];
    VAR
      CentralPlantNumberSeries@1100529001 : Record 11229922;
    BEGIN
      CentralPlantNumberSeries.GET(PlantNoSeries);
      IF CentralPlantNumberSeries."Last Used Plant No." = '' THEN
        CentralPlantNumberSeries."Last Used Plant No." := '1'
      ELSE
        CentralPlantNumberSeries."Last Used Plant No." := INCSTR(CentralPlantNumberSeries."Last Used Plant No.");
      IF (CentralPlantNumberSeries."Warning No." <> '') AND (CentralPlantNumberSeries."Last Used Plant No." > CentralPlantNumberSeries."Warning No.") THEN
        MESSAGE(Text001, CentralPlantNumberSeries."Warning No.", CentralPlantNumberSeries.Code);
      CentralPlantNumberSeries.MODIFY;
      EXIT(CentralPlantNumberSeries."Last Used Plant No.");
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100528500 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11229922) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11229922');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Central Plant Number Series", "Department Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Department Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Department Code");
    END;

    BEGIN
    END.
  }
}

