OBJECT XMLport 5876 Import Phys. Invt. Recording
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import Phys. Invt. Recording;
               NOR=Importer registrering for vareopptelling;
               SVE=Importera inventeringsregistrering];
    Direction=Import;
    Format=Variable Text;
    UseRequestPage=No;
  }
  ELEMENTS
  {
    { [{11D499DA-DE31-42B9-9EE3-EEF88D252ACD}];  ;Root                ;Element ;Text     }

    { [{11F768A0-BB38-443D-AEDA-A557D5DB6070}];1 ;PhysInvtRecordLine  ;Element ;Table   ;
                                                  SourceTable=Table5878;
                                                  SourceTableView=SORTING(Field1,Field2,Field3);
                                                  Temporary=Yes;
                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 "Phys. Invt. Record Line".TESTFIELD("Order No.",PhysInvtRecordHeader."Order No.");
                                                                                 "Phys. Invt. Record Line".TESTFIELD("Recording No.",PhysInvtRecordHeader."Recording No.");

                                                                                 IF PhysInvtRecordLine.GET(
                                                                                      "Phys. Invt. Record Line"."Order No.",
                                                                                      "Phys. Invt. Record Line"."Recording No.",
                                                                                      "Phys. Invt. Record Line"."Line No.")
                                                                                 THEN BEGIN
                                                                                   PhysInvtRecordLine.TESTFIELD("Item No.","Phys. Invt. Record Line"."Item No.");
                                                                                   PhysInvtRecordLine.TESTFIELD("Variant Code","Phys. Invt. Record Line"."Variant Code");
                                                                                   PhysInvtRecordLine.TESTFIELD("Location Code","Phys. Invt. Record Line"."Location Code");
                                                                                   PhysInvtRecordLine.TESTFIELD("Bin Code","Phys. Invt. Record Line"."Bin Code");
                                                                                   PhysInvtRecordLine.TESTFIELD(Recorded,FALSE);
                                                                                   PhysInvtRecordLine.VALIDATE("Unit of Measure Code","Phys. Invt. Record Line"."Unit of Measure Code");
                                                                                   PhysInvtRecordLine.VALIDATE(Quantity,"Phys. Invt. Record Line".Quantity);
                                                                                   PhysInvtRecordLine.VALIDATE("Date Recorded","Phys. Invt. Record Line"."Date Recorded");
                                                                                   PhysInvtRecordLine.VALIDATE("Time Recorded","Phys. Invt. Record Line"."Time Recorded");
                                                                                   PhysInvtRecordLine.VALIDATE("Person Recorded","Phys. Invt. Record Line"."Person Recorded");
                                                                                   PhysInvtRecordLine.MODIFY;
                                                                                 END ELSE BEGIN
                                                                                   PhysInvtRecordLine.INIT;
                                                                                   PhysInvtRecordLine."Order No." := "Phys. Invt. Record Line"."Order No.";
                                                                                   PhysInvtRecordLine."Recording No." := "Phys. Invt. Record Line"."Recording No.";
                                                                                   IF "Phys. Invt. Record Line"."Line No." <> 0 THEN BEGIN
                                                                                     PhysInvtRecordLine."Line No." := "Phys. Invt. Record Line"."Line No.";
                                                                                     NextLineNo := "Phys. Invt. Record Line"."Line No." + 10000;
                                                                                   END ELSE BEGIN
                                                                                     PhysInvtRecordLine."Line No." := NextLineNo;
                                                                                     NextLineNo := NextLineNo + 10000;
                                                                                   END;
                                                                                   PhysInvtRecordLine.VALIDATE("Item No.","Phys. Invt. Record Line"."Item No.");
                                                                                   PhysInvtRecordLine.VALIDATE("Variant Code","Phys. Invt. Record Line"."Variant Code");
                                                                                   PhysInvtRecordLine.VALIDATE("Location Code","Phys. Invt. Record Line"."Location Code");
                                                                                   PhysInvtRecordLine.VALIDATE("Bin Code","Phys. Invt. Record Line"."Bin Code");
                                                                                   PhysInvtRecordLine.VALIDATE("Unit of Measure Code","Phys. Invt. Record Line"."Unit of Measure Code");
                                                                                   PhysInvtRecordLine.VALIDATE(Quantity,"Phys. Invt. Record Line".Quantity);
                                                                                   PhysInvtRecordLine.VALIDATE("Date Recorded","Phys. Invt. Record Line"."Date Recorded");
                                                                                   PhysInvtRecordLine.VALIDATE("Time Recorded","Phys. Invt. Record Line"."Time Recorded");
                                                                                   PhysInvtRecordLine.VALIDATE("Person Recorded","Phys. Invt. Record Line"."Person Recorded");
                                                                                   PhysInvtRecordLine.INSERT;
                                                                                 END;
                                                                               END;

                                                  Export::OnPreXMLItem=BEGIN
                                                                         PhysInvtRecordHeader.TESTFIELD("Order No.");
                                                                         PhysInvtRecordHeader.TESTFIELD("Recording No.");

                                                                         PhysInvtRecordHeader.LOCKTABLE;
                                                                         "Phys. Invt. Record Line".LOCKTABLE;

                                                                         "Phys. Invt. Record Line".RESET;
                                                                         "Phys. Invt. Record Line".SETRANGE("Order No.",PhysInvtRecordHeader."Order No.");
                                                                         "Phys. Invt. Record Line".SETRANGE("Recording No.",PhysInvtRecordHeader."Recording No.");
                                                                         IF "Phys. Invt. Record Line".FIND('+') THEN
                                                                           NextLineNo := "Phys. Invt. Record Line"."Line No." + 10000
                                                                         ELSE
                                                                           NextLineNo := 10000;
                                                                       END;
                                                                        }

    { [{68288E2B-4947-4AB4-9C71-608B8262B83C}];2 ;OrderNo             ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Phys. Invt. Record Line::Order No. }

    { [{CFAA0BC0-2BBA-408C-80C0-BF20B9A8132B}];2 ;RecordingNo         ;Element ;Field   ;
                                                  DataType=Integer;
                                                  SourceField=Phys. Invt. Record Line::Recording No. }

    { [{4C8B93A6-A27E-4055-B10F-63492F552AB8}];2 ;LineNo              ;Element ;Field   ;
                                                  DataType=Integer;
                                                  SourceField=Phys. Invt. Record Line::Line No. }

    { [{D3FB0C7A-C89C-4955-BB22-A8CF63233616}];2 ;ItemNo              ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Phys. Invt. Record Line::Item No. }

    { [{F3FA5D4F-568C-4850-9F2B-F5299B19BDAE}];2 ;VariantCode         ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Phys. Invt. Record Line::Variant Code }

    { [{5F6EA661-25AD-4BE0-B45B-3CB2D0B9D183}];2 ;LocationCode        ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Phys. Invt. Record Line::Location Code }

    { [{60E5F8BC-2175-42AD-B12C-A03214698271}];2 ;BinCode             ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Phys. Invt. Record Line::Bin Code }

    { [{FB3F8215-9EE6-45E3-9B6F-45BC9120B692}];2 ;Description         ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Phys. Invt. Record Line::Description }

    { [{02C4F1DF-2F3E-445C-BCCC-FB11B0F48FC9}];2 ;Description2        ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Phys. Invt. Record Line::Description 2 }

    { [{A2CFDC34-87D8-4792-8CC9-89D4A51009C2}];2 ;UnitOfMeasureCode   ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Phys. Invt. Record Line::Unit of Measure Code }

    { [{A601B57D-04D7-41EE-BDD7-6D3A6035DCB8}];2 ;ShelfNo             ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Phys. Invt. Record Line::Shelf No. }

    { [{09D627AC-5F3F-48A0-8264-38485AB467AC}];2 ;Quantity            ;Element ;Field   ;
                                                  DataType=Decimal;
                                                  SourceField=Phys. Invt. Record Line::Quantity }

    { [{EEE02616-B4B4-408B-A701-F6CDCDDC72C0}];2 ;PersonRecorded      ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Phys. Invt. Record Line::Person Recorded }

    { [{F76D6927-5F65-404B-A4A5-51B647B01130}];2 ;DateRecorded        ;Element ;Field   ;
                                                  DataType=Date;
                                                  SourceField=Phys. Invt. Record Line::Date Recorded }

    { [{5DA08963-ACC6-4EAD-BE5E-22B4AE6CCA8C}];2 ;TimeRecorded        ;Element ;Field   ;
                                                  DataType=Time;
                                                  SourceField=Phys. Invt. Record Line::Time Recorded }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      PhysInvtRecordHeader@1000 : Record 5877;
      PhysInvtRecordLine@1002 : Record 5878;
      NextLineNo@1001 : Integer;

    [External]
    PROCEDURE Set@1(NewPhysInvtRecordHeader@1000 : Record 5877);
    BEGIN
      PhysInvtRecordHeader := NewPhysInvtRecordHeader;
    END;

    BEGIN
    END.
  }
}

