OBJECT Codeunit 1174 User Task Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      UserTaskGroupMember@1001 : Record 1176;
      DueDateFilterOptions@1002 : 'NONE,TODAY,THIS_WEEK';

    [External]
    PROCEDURE GetMyPendingUserTasksCount@1() : Integer;
    BEGIN
      // Gets total count of user tasks assgined to logged in user.
      // This includes tasks assigned to the user and their groups.
      EXIT(CalculateUserTasksCount(DueDateFilterOptions::NONE));
    END;

    [External]
    PROCEDURE GetMyPendingUserTasksCountDueToday@2() : Integer;
    BEGIN
      // Gets total count of user tasks assgined to logged in user.
      // This includes tasks assigned to the user and their groups due today.
      EXIT(CalculateUserTasksCount(DueDateFilterOptions::TODAY));
    END;

    [External]
    PROCEDURE GetMyPendingUserTasksCountDueThisWeek@3() : Integer;
    BEGIN
      // Gets total count of user tasks assgined to logged in user.
      // This includes tasks assigned to the user and their groups due this week.
      EXIT(CalculateUserTasksCount(DueDateFilterOptions::THIS_WEEK));
    END;

    [External]
    PROCEDURE SetFiltersToShowMyUserTasks@4(VAR UserTask@1000 : Record 1170;DueDateFilterOption@1001 : Integer);
    VAR
      MyTasksUserGroups@1002 : Text;
    BEGIN
      MyTasksUserGroups := GetMyTasksUserGroupsAsFilterText;

      IF MyTasksUserGroups <> '' THEN BEGIN
        UserTask.FILTERGROUP(-1);
        UserTask.SETFILTER("User Task Group Assigned To",MyTasksUserGroups);
        UserTask.SETFILTER("Assigned To",USERSECURITYID);
        UserTask.FILTERGROUP(25);
        UserTask.SETFILTER("Percent Complete",'<>100');
      END ELSE BEGIN
        UserTask.SETFILTER("Assigned To",USERSECURITYID);
        UserTask.SETFILTER("Percent Complete",'<>100');
      END;

      CASE DueDateFilterOption OF
        DueDateFilterOptions::NONE:
          UserTask.SETRANGE("Due DateTime");
        DueDateFilterOptions::THIS_WEEK:
          UserTask.SETFILTER("Due DateTime",'<>%1 & <=%2',0DT,CREATEDATETIME(CALCDATE('<CW>'),0T));
        DueDateFilterOptions::TODAY:
          UserTask.SETFILTER("Due DateTime",'<>%1 & <=%2',0DT,CURRENTDATETIME);
      END;
    END;

    [EventSubscriber(Table,1175,OnAfterDeleteEvent)]
    LOCAL PROCEDURE OnAfterDeleteUserTaskGroup@6(VAR Rec@1000 : Record 1175;RunTrigger@1001 : Boolean);
    VAR
      UserTask@1002 : Record 1170;
    BEGIN
      UserTask.SETRANGE("User Task Group Assigned To",Rec.Code);
      // empty out 'user task group assigned to' for the tasks that were assigned to the user task group that is being deleted
      UserTask.MODIFYALL("User Task Group Assigned To",'');
    END;

    LOCAL PROCEDURE CalculateUserTasksCount@5(DueDateFilterOption@1000 : Integer) : Integer;
    VAR
      UserTask@1001 : Record 1170;
    BEGIN
      UserTask.RESET;
      SetFiltersToShowMyUserTasks(UserTask,DueDateFilterOption);
      EXIT(UserTask.COUNT);
    END;

    LOCAL PROCEDURE GetMyTasksUserGroupsAsFilterText@11() : Text;
    VAR
      FilterTxt@1000 : Text;
    BEGIN
      // Returns a text contaning all the groups that logged in user belong to which can be used for setting filter
      // Example - If user belongs to 'A' and 'C' user tasks groups this function will return 'A|C' as filter text.
      UserTaskGroupMember.RESET;
      UserTaskGroupMember.SETRANGE("User Security ID",USERSECURITYID);
      IF UserTaskGroupMember.FINDSET THEN BEGIN
        REPEAT
          FilterTxt := FilterTxt + UserTaskGroupMember."User Task Group Code" + '|';
        UNTIL UserTaskGroupMember.NEXT = 0;
      END;

      // delete last char (|) to create a filter string
      IF STRLEN(FilterTxt) > 1 THEN
        FilterTxt := DELSTR(FilterTxt,STRLEN(FilterTxt),1);
      EXIT(FilterTxt);
    END;

    BEGIN
    {
      // Code unit to manage user tasks / user tasks groups.
      // Due date filter options :-
      // NONE :- All pending tasks assigned to logged in user or their groups.
      // TODAY :- All pending tasks assigned to logged in user or their groups due today.
      // THIS_WEEK :- All pending tasks assigned to logged in user or their groups due this week.
    }
    END.
  }
}

