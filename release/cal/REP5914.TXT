OBJECT Report 5914 Delete Invoiced Service Orders
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04;
  }
  PROPERTIES
  {
    AccessByPermission=TableData 5900=RD;
    CaptionML=[DEU=Fakturierte Serviceauftr„ge l”schen;
               ENU=Delete Invoiced Service Orders;
               NLD=Gefactureerde serviceorders verwijderen;
               NOR=Slett fakturerte serviceordrer;
               SVE=Ta bort fakturerade serviceorder];
    ApplicationArea=#Service;
    ProcessingOnly=Yes;
    UsageCategory=Tasks;
  }
  DATASET
  {
    { 1634;    ;DataItem;                    ;
               DataItemTable=Table5900;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Order));
               ReqFilterHeadingML=[DEU=Serviceauftrag;
                                   ENU=Service Order;
                                   NLD=Serviceorder;
                                   NOR=Serviceordre;
                                   SVE=Serviceorder];
               OnPreDataItem=BEGIN
                               Window.OPEN(Text000);
                             END;

               OnAfterGetRecord=VAR
                                  ApprovalsMgmt@1000 : Codeunit 1535;
                                BEGIN
                                  Window.UPDATE(1,"No.");

                                  ItemChargeAssgntService.RESET;
                                  ItemChargeAssgntService.SETRANGE("Document Type","Document Type");
                                  ItemChargeAssgntService.SETRANGE("Document No.","No.");

                                  ServiceOrderLine.RESET;
                                  ServiceOrderLine.SETRANGE("Document Type","Document Type");
                                  ServiceOrderLine.SETRANGE("Document No.","No.");
                                  ServiceOrderLine.SETFILTER("Quantity Invoiced",'<>0');
                                  IF ServiceOrderLine.FIND('-') THEN BEGIN
                                    ServiceOrderLine.SETRANGE("Quantity Invoiced");
                                    ServiceOrderLine.SETFILTER("Outstanding Quantity",'<>0');
                                    IF NOT ServiceOrderLine.FIND('-') THEN BEGIN
                                      ServiceOrderLine.SETRANGE("Outstanding Quantity");
                                      ServiceOrderLine.SETFILTER("Qty. Shipped Not Invoiced",'<>0');
                                      IF NOT ServiceOrderLine.FIND('-') THEN BEGIN
                                        ServiceOrderLine.LOCKTABLE;
                                        IF NOT ServiceOrderLine.FIND('-') THEN BEGIN
                                          ServiceOrderLine.SETRANGE("Qty. Shipped Not Invoiced");
                                          IF ServiceOrderLine.FIND('-') THEN
                                            REPEAT
                                              OnBeforeDeleteServiceOrderLine(ServiceOrderLine);
                                              ServiceOrderLine.DELETE;
                                            UNTIL ServiceOrderLine.NEXT = 0;

                                          ServiceOrderItemLine.RESET;
                                          ServiceOrderItemLine.SETRANGE("Document Type","Document Type");
                                          ServiceOrderItemLine.SETRANGE("Document No.","No.");
                                          IF ServiceOrderItemLine.FINDSET THEN
                                            REPEAT
                                              OnBeforeDeleteServiceOrderItemLine(ServiceOrderItemLine);
                                              ServiceOrderItemLine.DELETE;
                                            UNTIL ServiceOrderItemLine.NEXT = 0;

                                          ServicePost.DeleteHeader("Service Header",ServiceShptHeader,ServiceInvHeader,ServiceCrMemoHeader);

                                          ReserveServiceLine.DeleteInvoiceSpecFromHeader("Service Header");

                                          ServiceCommentLine.SETRANGE("No.","No.");
                                          ServiceCommentLine.SETRANGE("Table Name",ServiceCommentLine."Table Name"::"Service Header");
                                          ServiceCommentLine.SETRANGE("Table Subtype","Document Type");
                                          ServiceCommentLine.DELETEALL;

                                          WhseRequest.SETRANGE("Source Type",DATABASE::"Service Line");
                                          WhseRequest.SETRANGE("Source Subtype","Document Type");
                                          WhseRequest.SETRANGE("Source No.","No.");
                                          IF NOT WhseRequest.ISEMPTY THEN
                                            WhseRequest.DELETEALL(TRUE);

                                          ServOrderAlloc.RESET;
                                          ServOrderAlloc.SETCURRENTKEY("Document Type");
                                          ServOrderAlloc.SETRANGE("Document Type","Document Type");
                                          ServOrderAlloc.SETRANGE("Document No.","No.");
                                          ServOrderAlloc.SETRANGE(Posted,FALSE);
                                          ServOrderAlloc.DELETEALL;
                                          ServAllocMgt.SetServOrderAllocStatus("Service Header");

                                          ApprovalsMgmt.DeleteApprovalEntries(RECORDID);

                                          OnBeforeDeleteServiceHeader("Service Header");

                                          DELETE;
                                          COMMIT;
                                        END;
                                      END;
                                    END;
                                  END;
                                END;

               ReqFilterFields=No.,Customer No.,Bill-to Customer No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Bearbeite Serviceauftr„ge #1##########;ENU=Processing Service orders #1##########;NLD=Serviceorders verwerken #1##########;NOR=Behandler serviceordrer #1##########';
      ServiceOrderItemLine@1012 : Record 5901;
      ServiceOrderLine@1001 : Record 5902;
      ServiceShptHeader@1009 : Record 5990;
      ServiceInvHeader@1010 : Record 5992;
      ServiceCrMemoHeader@1011 : Record 5994;
      ServiceCommentLine@1002 : Record 5906;
      ItemChargeAssgntService@1007 : Record 5809;
      WhseRequest@1008 : Record 5765;
      ServOrderAlloc@1014 : Record 5950;
      ServicePost@1005 : Codeunit 5980;
      ReserveServiceLine@1006 : Codeunit 99000842;
      ServAllocMgt@1013 : Codeunit 5930;
      Window@1004 : Dialog;

    [Integration]
    LOCAL PROCEDURE OnBeforeDeleteServiceHeader@1(VAR ServiceHeader@1000 : Record 5900);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeDeleteServiceOrderLine@3(ServiceLine@1000 : Record 5902);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeDeleteServiceOrderItemLine@2(ServiceItemLine@1000 : Record 5901);
    BEGIN
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

