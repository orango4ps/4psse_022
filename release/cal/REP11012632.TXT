OBJECT Report 11012632 New Start Value Meter Reading
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Neuer Anfangswert Z„hlerstand;
               ENU=New Start Value Meter Reading;
               NLD=Nieuwe beginwaarde meterstand];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  ProcessNewMeterReading;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   RequestOptionsPage.CAPTION(RequestOptionsPage.CAPTION + '-' + FORMAT(gPlantMeterReading."New Starting Value Type"));
                   StartingValueEditable := (gPlantMeterReading."New Starting Value Type" <> gPlantMeterReading."New Starting Value Type"::MaximumValue);
                 END;

      OnQueryClosePage=BEGIN
                         IF CloseAction  = ACTION::OK THEN
                           CheckFields;
                       END;

    }
    CONTROLS
    {
      { 1100529000;;Container;
                  ContainerType=ContentArea }

      { 1100529010;1;Group  ;
                  CaptionML=[DEU=Allgemein;
                             ENU=General;
                             NLD=Algemeen;
                             NOR=Generell;
                             SVE=Allm„nt];
                  GroupType=Group }

      { 1100529001;2;Field  ;
                  SourceExpr=gPlantMeterReading."Plant Type";
                  CaptionClass=gPlantMeterReading.FIELDCAPTION("Plant Type");
                  Enabled=FALSE }

      { 1100529002;2;Field  ;
                  SourceExpr=gPlantMeterReading."Plant No.";
                  CaptionClass=gPlantMeterReading.FIELDCAPTION("Plant No.");
                  Enabled=FALSE }

      { 1100529003;2;Field  ;
                  SourceExpr=gPlantMeterReading."Plant Description";
                  CaptionClass=gPlantMeterReading.FIELDCAPTION("Plant Description");
                  Enabled=FALSE }

      { 1100529004;2;Field  ;
                  SourceExpr=gPlantMeterReading.Meter;
                  CaptionClass=gPlantMeterReading.FIELDCAPTION(Meter);
                  Enabled=FALSE }

      { 1100529005;2;Field  ;
                  SourceExpr=gPlantMeterReading."Meter Reading Type";
                  CaptionClass=gPlantMeterReading.FIELDCAPTION("Meter Reading Type");
                  Enabled=FALSE }

      { 1100529006;2;Field  ;
                  SourceExpr=gPlantMeterReading.Date;
                  CaptionClass=gPlantMeterReading.FIELDCAPTION(Date);
                  OnValidate=BEGIN
                               CheckDateTime;
                             END;

                  OnControlAddIn=BEGIN
                                   CheckDateTime;
                                 END;
                                  }

      { 1100529007;2;Field  ;
                  SourceExpr=gPlantMeterReading."Meter Time";
                  CaptionClass=gPlantMeterReading.FIELDCAPTION("Meter Time");
                  OnValidate=BEGIN
                               gPlantMeterReading.VALIDATE("Meter Time");  //Round
                             END;
                              }

      { 1100529008;2;Field  ;
                  SourceExpr=gPlantMeterReading."End Meter Reading";
                  CaptionClass=gPlantMeterReading.FIELDCAPTION("End Meter Reading");
                  OnValidate=BEGIN
                               gPlantMeterReading.VALIDATE("End Meter Reading");
                             END;
                              }

      { 1100529009;2;Field  ;
                  CaptionML=[DEU=Neuer Anfangswert;
                             ENU=New Starting Value;
                             NLD=Nieuwe beginwaarde];
                  SourceExpr=gPlantMeterReading."Meter Reading";
                  Editable=StartingValueEditable }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      gPlantMeterReading@1100529005 : Record 11072671;
      LastPlantMeterReading@1100529000 : Record 11072671;
      Text001@1100529001 : TextConst 'DEU=Datum/Zeit (%1) des neuen Anfangswertes muss nach Datum/Zeit (%2) des letzten Z„hlerstandes liegen;ENU=Date/time (%1) of new starting value must be after date/time (%2) of last meter reading;NLD="Datum/tijd (%1) van nieuwe beginwaarde moet na datum/tijd (%2) van laatste meterstand liggen "';
      StartingValueEditable@1100529002 : Boolean INDATASET;

    PROCEDURE SetSelections@1100529000(PlantType@1100529004 : Code[20];PlantNo@1100529003 : Code[10];PlantMeter@1100529002 : Code[10];MeterType@1100529001 : Code[10];NewStartingValueType@1100529000 : Option;OrderType@1100529006 : Option;OrderNo@1100529005 : Code[20]);
    BEGIN
      CLEAR(gPlantMeterReading);
      gPlantMeterReading."Plant Type" := PlantType;
      gPlantMeterReading."Plant No." := PlantNo;
      gPlantMeterReading.Meter := PlantMeter;
      gPlantMeterReading."Meter Reading Type" := MeterType;
      gPlantMeterReading."New Starting Value Type" := NewStartingValueType;
      IF (OrderType <> 0) AND (OrderNo <> '') THEN BEGIN
        gPlantMeterReading."Order Type" := OrderType;
        gPlantMeterReading."Order No." := OrderNo;
      END;
      ReadLastMeterReading;
      IF (gPlantMeterReading."New Starting Value Type" = gPlantMeterReading."New Starting Value Type"::MaximumValue) AND
         (LastPlantMeterReading."Meter Reading" <> 0)
      THEN
        gPlantMeterReading."End Meter Reading" :=
          ROUND(LastPlantMeterReading."Meter Reading", POWER(10, STRLEN(FORMAT(LastPlantMeterReading."Meter Reading"))), '>');
      gPlantMeterReading.CALCFIELDS("Plant Description");
    END;

    LOCAL PROCEDURE ReadLastMeterReading@1100529005();
    BEGIN
      LastPlantMeterReading.SETRANGE("Plant Type", gPlantMeterReading."Plant Type");
      LastPlantMeterReading.SETRANGE("Plant No.", gPlantMeterReading."Plant No.");
      LastPlantMeterReading.SETRANGE(Meter, gPlantMeterReading.Meter);
      LastPlantMeterReading.SETRANGE("Meter Reading Type", gPlantMeterReading."Meter Reading Type");
      LastPlantMeterReading.FINDLAST;  //Must be at least one Meter Reading of plant/meter/metertype
    END;

    LOCAL PROCEDURE CheckFields@1100529002();
    BEGIN
      IF NOT (gPlantMeterReading."New Starting Value Type" IN
        [gPlantMeterReading."New Starting Value Type"::Replacement, gPlantMeterReading."New Starting Value Type"::MaximumValue])
      THEN
        gPlantMeterReading.FIELDERROR("New Starting Value Type");
      CheckDateTime;
      gPlantMeterReading.VALIDATE("End Meter Reading");
    END;

    LOCAL PROCEDURE CheckDateTime@1100529003();
    VAR
      CurrDateTime@1100529000 : DateTime;
      LastDateTime@1100529001 : DateTime;
    BEGIN
      ReadLastMeterReading;
      CurrDateTime := CREATEDATETIME(gPlantMeterReading.Date, gPlantMeterReading."Meter Time");
      LastDateTime := CREATEDATETIME(LastPlantMeterReading.Date, LastPlantMeterReading."Meter Time");
      IF CurrDateTime <= LastDateTime THEN
        ERROR(Text001, CurrDateTime, LastDateTime);
    END;

    LOCAL PROCEDURE ProcessNewMeterReading@1100529001();
    BEGIN
      CheckFields;
      gPlantMeterReading.INSERT(TRUE);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

