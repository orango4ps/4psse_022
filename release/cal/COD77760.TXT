OBJECT Codeunit 77760 Compare Tool Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=VCTool;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      LastLineNo@1210190001 : Integer;
      LastChangeType@1210190005 : Code[20];
      NoOfItem@1210190007 : Integer;
      ProgressDialog@1210190008 : Dialog;
      Text001@1100525000 : TextConst 'ENU=Fill Table, Field #1#####';
      Text002@1100525001 : TextConst 'ENU=Compare, Field #1#####';
      Text003@1002 : TextConst 'ENU=Compare new objects, Field #1#####';
      Text004@1100409000 : TextConst 'ENU=Release %1 has no table fields to compare.';
      Text005@1100409001 : TextConst 'ENU=Release %1 has no objects to compare.';
      Text006@1000 : TextConst 'ENU=For this release table fields are already filled in!';
      Text007@1001 : TextConst 'ENU=For this release objects are already filled in!';
      Text008@1100409002 : TextConst 'ENU=No release available.';
      Text009@1100409003 : TextConst 'ENU=Are you sure you want to delete the %1 %2?';
      Text010@1100409004 : TextConst 'ENU=Compare deleted objects, Field #1#####';
      Text011@1100409005 : TextConst 'ENU=Fill Object,  Field #1#####';

    PROCEDURE FillTableFieldRelease@1100525001(ReleaseNumber@1000 : Code[20];UpdateList@1000000000 : Boolean);
    VAR
      Object@1100525003 : Record 2000000001;
      Field@1100525002 : Record 2000000041;
      RelTableField@1100525001 : Record 77761;
      Release@1001 : Record 77760;
    BEGIN
      IF NOT Release.GET(ReleaseNumber) THEN
        ERROR(Text008);

      IF (NOT UpdateList) AND (Release."Fill Date Table Fields" <> 0D) THEN
        ERROR(Text006);

      RelTableField.SETRANGE("Release Number",ReleaseNumber);
      IF RelTableField.FINDSET THEN
        RelTableField.DELETEALL;

      NoOfItem := 0;
      ProgressDialog.OPEN(Text001);

      WITH RelTableField DO BEGIN
        Field.SETFILTER(Class,'<>%1',Field.Class::FlowField);
        Field.SETFILTER(TableNo,'..49999|60500..60510|81600..81800|82400..82499|83000..83099|86200..86269|87100..87199|83200..83299|89100..89199|99999..2000000053|2000000182');
        IF Field.FINDSET THEN
        REPEAT

      //>>4PSSE
      //    SETRANGE("Release Number", ReleaseNumber);
      //    SETRANGE("Object Type", RelTableField."Object Type"::Table);
      //    SETRANGE("Object ID", Field.TableNo);
      //    SETRANGE("Field ID", Field."No.");
          IF NOT GET(ReleaseNumber,RelTableField."Object Type"::Table,Field.TableNo,Field."No.") THEN BEGIN
      //<<4PSSE
            RESET;
            INIT;
            NoOfItem += 1;
            ProgressDialog.UPDATE(1, NoOfItem);
            "Release Number" := ReleaseNumber;
            "Object Type" := RelTableField."Object Type"::Table;
            "Object ID" := Field.TableNo;
            "Object Name" := Field.TableName;
            Object.SETRANGE(Type, Object.Type::Table);
            Object.SETRANGE(ID, Field.TableNo);
            IF Object.FINDFIRST THEN BEGIN
              Object.CALCFIELDS(Caption);
              "Object Caption" := Object.Caption;
            END;
            "Field ID" := Field."No.";
            "Field Type" := STRSUBSTNO('%1',Field.Type);
            IF Field.Type IN [Field.Type::Code,Field.Type::Text] THEN
              "Field Length" := Field.Len;
            "Field Name" := Field.FieldName;
            "Field Caption" := Field."Field Caption";
            "Field Enabled" := Field.Enabled;
            "Field Class" := FORMAT(Field.Class);
            INSERT;
          END;
        UNTIL Field.NEXT = 0;
      END;

      Release."Fill Date Table Fields" := TODAY;
      Release."Table Field Status" := Release."Table Field Status"::Generated;
      Release.MODIFY;

      ProgressDialog.CLOSE;
    END;

    PROCEDURE FillObjectRelease@1(ReleaseNumber@1000 : Code[20];UpdateList@1000000000 : Boolean);
    VAR
      ReleaseObject@1001 : Record 77763;
      Release@1002 : Record 77760;
      Object@1003 : Record 2000000001;
      AllObjWithCaption@1100583000 : Record 2000000058;
    BEGIN
      IF NOT Release.GET(ReleaseNumber) THEN
        ERROR(Text008);

      IF (NOT UpdateList) AND (Release."Fill Date Objects" <> 0D) THEN
        ERROR(Text007);

      ReleaseObject.SETRANGE("Release Number",ReleaseNumber);
      IF ReleaseObject.FINDSET THEN
        ReleaseObject.DELETEALL;

      NoOfItem := 0;
      ProgressDialog.OPEN(Text011);
      Object.SETFILTER(Type,'<>%1&<>%2',Object.Type::TableData,9);

      WITH ReleaseObject DO BEGIN
        Object.SETFILTER(ID, '..49999|60500..60510|81600..81800|82400..82499|83000..83099|86200..86269|87100..87199|83200..83299|89100..89199|99999..2000000053|2000000182');
        //IF Object.FINDFIRST THEN
        IF Object.FINDSET(FALSE) THEN
          REPEAT
      //>>4PSSE
      //      SETRANGE("Release Number", ReleaseNumber);
      //      SETRANGE(Type, Object.Type);
      //      SETRANGE(ID, Object.ID);
            IF NOT GET(ReleaseNumber, Object.Type, Object.ID) THEN  BEGIN
      //<<4PSSE

      //      IF NOT (Object.Type IN [Object.Type::TableData,Object.Type::Query]) THEN BEGIN
              NoOfItem += 1;
              ProgressDialog.UPDATE(1, NoOfItem);
              "Release Number" := ReleaseNumber;
              Type := Object.Type;
              ID := Object.ID;
              Name := FORMAT(Object.Name);
              Object.CALCFIELDS(Caption);
              Caption := Object.Caption;
              INSERT;
            END;
          UNTIL Object.NEXT = 0;
      END;

      Release."Fill Date Objects" := TODAY;
      Release."Object Status" := Release."Object Status"::Generated;
      Release.MODIFY;

      ProgressDialog.CLOSE;
    END;

    PROCEDURE CompareTableFields@1100525002(PreviousReleaseNumber@1000 : Code[20];CurrentReleaseNumber@1001 : Code[20]);
    VAR
      Object@1100525003 : Record 2000000001;
      PreviousTableFields@1003 : Record 77761;
      CurrentTableFields@1004 : Record 77761;
      TableFieldDiff@1002 : Record 77762;
    BEGIN
      PreviousTableFields.SETRANGE("Release Number",PreviousReleaseNumber);
      IF NOT PreviousTableFields.FINDFIRST THEN
        ERROR(Text004, PreviousReleaseNumber);

      CurrentTableFields.SETRANGE("Release Number",CurrentReleaseNumber);
      IF NOT CurrentTableFields.FINDFIRST THEN
        ERROR(Text004, CurrentReleaseNumber);

      TableFieldDiff.DELETEALL;
      LastLineNo := 0;
      NoOfItem := 0;
      ProgressDialog.OPEN(Text002);

      WITH PreviousTableFields DO BEGIN
      //  IF FINDFIRST THEN BEGIN
        IF FINDSET THEN BEGIN
          CurrentTableFields.RESET;
          CurrentTableFields.SETRANGE("Release Number", CurrentReleaseNumber);
          CurrentTableFields.SETRANGE("Object Type", CurrentTableFields."Object Type"::Table);
          REPEAT
            NoOfItem += 1;
            ProgressDialog.UPDATE(1, NoOfItem);
            CurrentTableFields.SETRANGE("Object ID", "Object ID");
            CurrentTableFields.SETRANGE("Field ID", "Field ID");
      //      IF CurrentTableFields.FINDFIRST THEN BEGIN
            IF CurrentTableFields.GET(CurrentReleaseNumber,CurrentTableFields."Object Type"::Table,"Object ID","Field ID") THEN BEGIN

              IF ("Field Type" <> CurrentTableFields."Field Type") THEN
                AddDifference("Object ID",
                         "Field ID",
                         "Object Caption",
                        "Field Caption",
                         1,
                         FORMAT("Field Type"),
                         FORMAT(CurrentTableFields."Field Type"));

              IF ("Field Type" = CurrentTableFields."Field Type") AND ("Field Length" > CurrentTableFields."Field Length") THEN
                AddDifference("Object ID",
                         "Field ID",
                         "Object Caption",
                         "Field Caption",
                         2,
                         FORMAT("Field Length"),
                         FORMAT(CurrentTableFields."Field Length"));

              IF ("Field Name" <> CurrentTableFields."Field Name") THEN
                AddDifference("Object ID",
                         "Field ID",
                         "Object Caption",
                         "Field Caption",
                         3,
                         FORMAT("Field Name"),
                         FORMAT(CurrentTableFields."Field Name"));

              IF ("Field Caption" <> CurrentTableFields."Field Caption")THEN
                AddDifference("Object ID",
                         "Field ID",
                         "Object Caption",
                         "Field Caption",
                         4,
                         FORMAT("Field Caption"),
                        FORMAT(CurrentTableFields."Field Caption"));
              IF ("Field Enabled" <> CurrentTableFields."Field Enabled") THEN
                AddDifference("Object ID",
                         "Field ID",
                         "Object Caption",
                         "Field Caption",
                         5,
                         FORMAT("Field Enabled"),
                         FORMAT(CurrentTableFields."Field Enabled"));

              IF "Field Class" <> CurrentTableFields."Field Class" THEN
                AddDifference("Object ID",
                         "Field ID",
                         "Object Caption",
                         "Field Caption",
                         6,
                         FORMAT("Field Class"),
                         FORMAT(CurrentTableFields."Field Class"));
            END ELSE
              AddDifference("Object ID",
                        "Field ID",
                        "Object Caption",
                        "Field Caption",
                        8,
                        FORMAT("Field Name"),
                        FORMAT(''));
           UNTIL NEXT = 0;
        END;

            NoOfItem :=0;
        RESET;
        SETRANGE("Release Number", CurrentReleaseNumber);
      //  IF FINDFIRST THEN BEGIN
        IF FINDSET THEN BEGIN
          CurrentTableFields.RESET;
          CurrentTableFields.SETRANGE("Release Number", PreviousReleaseNumber);
          CurrentTableFields.SETRANGE("Object Type",CurrentTableFields."Object Type"::Table);
          REPEAT
            NoOfItem += 1;
            ProgressDialog.UPDATE(1, NoOfItem);
      //      CurrentTableFields.RESET;
            CurrentTableFields."Field Name" := '';
      //      CurrentTableFields.SETRANGE("Release Number", PreviousReleaseNumber);
      //      CurrentTableFields.SETRANGE("Object Type",CurrentTableFields."Object Type"::Table);
      //      CurrentTableFields.SETRANGE("Object ID", "Object ID");
      //      CurrentTableFields.SETRANGE("Field ID", "Field ID");
      //      IF (NOT CurrentTableFields.FINDFIRST) THEN
            IF (NOT CurrentTableFields.GET(PreviousReleaseNumber,CurrentTableFields."Object Type"::Table,"Object ID","Field ID")) THEN
              AddDifference("Object ID",
                       "Field ID",
                       "Object Caption",
                       "Field Caption",
                       7,
                       FORMAT(''),
      //                 FORMAT(CurrentTableFields."Field Name"));
                       FORMAT("Field Name"));
          UNTIL NEXT = 0;
        END;
      END;

      ProgressDialog.CLOSE;
    END;

    PROCEDURE CheckNewObjects@10500000(PreviousReleaseNumber@1001 : Code[20];CurrentReleaseNumber@1000 : Code[20]);
    VAR
      PreviousRelObject@10500002 : Record 77763;
      CurrentRelObject@1003 : Record 77763;
      NewObject@1002 : Record 77764;
    BEGIN
      PreviousRelObject.SETRANGE("Release Number",PreviousReleaseNumber);
      IF NOT PreviousRelObject.FINDFIRST THEN
        ERROR(Text005, PreviousReleaseNumber);

      CurrentRelObject.SETRANGE("Release Number",CurrentReleaseNumber);
      IF NOT CurrentRelObject.FINDFIRST THEN
        ERROR(Text005, CurrentReleaseNumber);

      NewObject.DELETEALL;

      NoOfItem := 0;
      ProgressDialog.OPEN(Text003);

      WITH CurrentRelObject DO BEGIN
         IF FINDFIRST THEN
           REPEAT
             NoOfItem += 1;
             ProgressDialog.UPDATE(1, NoOfItem);
             PreviousRelObject.SETRANGE("Release Number", PreviousReleaseNumber);
             PreviousRelObject.SETRANGE(Type, Type);
             PreviousRelObject.SETRANGE(ID, ID);
      //       IF NOT PreviousRelObject.FINDFIRST THEN BEGIN
             IF NOT PreviousRelObject.GET(PreviousReleaseNumber,Type,ID) THEN BEGIN
               NewObject."Object Type" := Type;
               NewObject."Object ID" := ID;
               NewObject."Object Caption":= Caption;
               NewObject.INSERT;
             END;
           UNTIL NEXT = 0;
      END;

      ProgressDialog.CLOSE;
    END;

    PROCEDURE CheckDeleteObjects@1100409000(PreviousReleaseNumber@1100409001 : Code[20];CurrentReleaseNumber@1100409000 : Code[20]);
    VAR
      PreviousRelObject@1100409004 : Record 77763;
      CurrentRelObject@1100409003 : Record 77763;
      DeleteObject@1100409002 : Record 77765;
    BEGIN
      PreviousRelObject.SETRANGE("Release Number",PreviousReleaseNumber);
      DeleteObject.DELETEALL;

      NoOfItem := 0;
      ProgressDialog.OPEN(Text010);

      WITH PreviousRelObject DO BEGIN
         IF FINDFIRST THEN
           REPEAT
             NoOfItem += 1;
             ProgressDialog.UPDATE(1, NoOfItem);
             CurrentRelObject.SETRANGE("Release Number", CurrentReleaseNumber);
             CurrentRelObject.SETRANGE(Type, Type);
             CurrentRelObject.SETRANGE(ID, ID);
      //       IF NOT CurrentRelObject.FINDFIRST THEN BEGIN
             IF NOT CurrentRelObject.GET(CurrentReleaseNumber,Type,ID) THEN BEGIN
               DeleteObject."Object Type" := Type;
               DeleteObject."Object ID" := ID;
               DeleteObject."Object Caption":= Caption;
               DeleteObject.INSERT;
             END;
           UNTIL NEXT = 0;
      END;

      ProgressDialog.CLOSE;
    END;

    PROCEDURE AddDifference@2(pTableID@1007 : Integer;pFieldID@1006 : Integer;pTableCaption@1005 : Text[250];pFieldCaption@1004 : Text[250];pChangeOpt@1003 : ',Field Type,Field Length,Field Name,Field Caption,Field Enabled,Field Class,Field Added,Field Deleted';pOldValue@1002 : Text[250];pNewValue@1001 : Text[250]);
    VAR
      TableFieldDiff@1008 : Record 77762;
      TableFieldDiff2@1101285000 : Record 77762;
    BEGIN
      WITH TableFieldDiff DO BEGIN
        Change := pChangeOpt;
        "Line No." := LastLineNo + 10000;
        "Table ID" := pTableID;
        "Table Caption" := pTableCaption;
        "Field ID" := pFieldID;
        "Field Caption" := pFieldCaption;
        "Old Value" := pOldValue;
        "New Value" := pNewValue;
        INSERT;
        LastLineNo := "Line No.";
      END;

      // //>>4PSSE
      // IF pChangeOpt IN [pChangeOpt::"Field Added",pChangeOpt::"Field Deleted"] THEN BEGIN
      //  TableFieldDiff2.SETRANGE("Table ID",pTableID);
      //  CASE pChangeOpt OF
      //    pChangeOpt::"Field Added":
      //      BEGIN
      //        TableFieldDiff2.SETRANGE(Change,pChangeOpt::"Field Deleted");
      //        TableFieldDiff2.SETRANGE("Old Value",pNewValue);
      //      END;
      //    pChangeOpt::"Field Deleted":
      //      BEGIN
      //        TableFieldDiff2.SETRANGE(Change,pChangeOpt::"Field Added");
      //        TableFieldDiff2.SETRANGE("New Value",pOldValue);
      //      END;
      //  END;
      //
      //  IF TableFieldDiff2.FINDSET THEN REPEAT
      //    AddDifference(pTableID,pFieldID,pTableCaption,pFieldCaption,9,pOldValue,pNewValue);
      //    TableFieldDiff2.DELETE;
      //    TableFieldDiff.DELETE;
      //  UNTIL TableFieldDiff2.NEXT=0;
      // END;
      // //<<4PSSE
    END;

    PROCEDURE DeleteTableFields@1100409001(ReleaseNumber@1100409000 : Code[20]);
    VAR
      Release@1100409001 : Record 77760;
      RelTableField@1100409002 : Record 77761;
    BEGIN
      IF NOT Release.GET(ReleaseNumber) THEN
        ERROR(Text008);

      IF NOT CONFIRM(Text009, FALSE, RelTableField.TABLECAPTION, ReleaseNumber) THEN
        ERROR('');

      RelTableField.SETRANGE("Release Number", ReleaseNumber);
      RelTableField.DELETEALL;

      Release."Fill Date Table Fields" := 0D;
      Release."Table Field Status" := 0;
      Release.MODIFY(TRUE);
    END;

    PROCEDURE DeleteObjects@1100409002(ReleaseNumber@1100409000 : Code[20]);
    VAR
      Release@1100409002 : Record 77760;
      RelObject@1100409001 : Record 77763;
    BEGIN
      IF NOT Release.GET(ReleaseNumber) THEN
        ERROR(Text008);

      IF NOT CONFIRM(Text009, FALSE, RelObject.TABLECAPTION, ReleaseNumber) THEN
        ERROR('');

      RelObject.SETRANGE("Release Number", ReleaseNumber);
      RelObject.DELETEALL;

      Release."Fill Date Objects" := 0D;
      Release."Object Status" := 0;
      Release.MODIFY(TRUE);
    END;

    PROCEDURE CleanHandledfields@1000000000();
    VAR
      TableFieldDifferenceDelete@1000000000 : Record 77762;
      TableFieldDifferenceCreate@1000000001 : Record 77762;
      Fieldstotransform@1000000002 : Record 77769;
      DeleteObject@1000000003 : Record 77765;
    BEGIN
      TableFieldDifferenceDelete.SETRANGE(Change,TableFieldDifferenceDelete.Change::"Field Deleted");
      IF TableFieldDifferenceDelete.FINDSET THEN
      REPEAT
        IF Fieldstotransform.GET(TableFieldDifferenceDelete."Table ID",TableFieldDifferenceDelete."Field ID") THEN BEGIN
          TableFieldDifferenceCreate.SETRANGE(Change,TableFieldDifferenceCreate.Change::"Field Added");
          TableFieldDifferenceCreate.SETRANGE("Table ID",Fieldstotransform."To Table");
          TableFieldDifferenceCreate.SETRANGE("Field ID",Fieldstotransform."To Field");
          IF TableFieldDifferenceCreate.FINDFIRST THEN BEGIN
            TableFieldDifferenceCreate.DELETE;
            TableFieldDifferenceDelete.DELETE;
          END;
        END;
      UNTIL TableFieldDifferenceDelete.NEXT=0;

      IF TableFieldDifferenceDelete.FINDSET THEN
      REPEAT
        IF DeleteObject.GET(DeleteObject."Object Type"::Table,TableFieldDifferenceDelete."Table ID") THEN
          TableFieldDifferenceDelete.DELETE;
      UNTIL TableFieldDifferenceDelete.NEXT=0;
    END;

    BEGIN
    {
      ======================================
      Change Options
      ======================================
      1 = Field Type
      2 = Field Length
      3 = Field Name
      4 = Field Caption
      5 = Field Enabled
      6 = Field Class
      7 = Field Added
      8 = Field Deleted
    }
    END.
  }
}

