OBJECT Page 11020698 Progn. Add. Hours / Contract
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Prognose zus„tzliche Stunden pro Vertrag;
               ENU=Prognosis Additional Hours per Contract;
               NLD=Prognose meerwerk per contract];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    OnInit=BEGIN
             SetDisciplineFilter;
           END;

    OnOpenPage=BEGIN
                 MATRIX_MaximumSetLength := 12;
                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                 UpdateMatrixSubForm;
               END;

    ActionList=ACTIONS
    {
      { 1100528606;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100528607;1 ;Action    ;
                      Name=Total Prognosis Additional Hours;
                      CaptionML=[DEU=Gesamtprognose zus„tzliche Stunden;
                                 ENU=Total Prognosis Additional Hours;
                                 NLD=Totale prognose meerwerk];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CalculateRemainingUsage;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TotalPrognAdditionalHours@1100529600 : Page 11020684;
                               BEGIN
                                 CLEAR(TotalPrognAdditionalHours);
                                 TotalPrognAdditionalHours.SetFilterOptions(PeriodType, DateFilter);
                                 TotalPrognAdditionalHours.RUN;
                               END;
                                }
      { 1100528608;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100529605;1 ;Action    ;
                      Name=Previous Set;
                      CaptionML=[DEU=Vorheriger Satz;
                                 ENU=Previous Set;
                                 NLD=Vorige Set];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(MATRIX_Step::Previous);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100529602;1 ;Action    ;
                      Name=Previous Column;
                      CaptionML=[DEU=Vorherige Spalte;
                                 ENU=Previous Column;
                                 NLD=Vorige Kolom];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(MATRIX_Step::PreviousColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100529603;1 ;Action    ;
                      Name=Next Column;
                      CaptionML=[DEU=N„chste Spalte;
                                 ENU=Next Column;
                                 NLD=Volgende Kolom];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(MATRIX_Step::NextColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100529600;1 ;Action    ;
                      Name=Next Set;
                      CaptionML=[DEU=N„chster Satz;
                                 ENU=Next Set;
                                 NLD=Volgende Set];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(MATRIX_Step::Next);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528609;1 ;Action    ;
                      CaptionML=[DEU=&Prognose kopieren;
                                 ENU=&Copy Prognosis;
                                 NLD=&Kopieer prognose];
                      Image=Copy;
                      OnAction=VAR
                                 CapacityNeedDetail@1100528600 : Record 11012884;
                                 CopyCapacityNeedDetailREP@1100528601 : Report 11072018;
                               BEGIN
                                 CapacityNeedDetail.SETRANGE(Type, CapacityNeedDetail.Type::Workload);
                                 IF ServiceContract."No." <> '' THEN
                                   CapacityNeedDetail.SETRANGE("Source Code", ServiceContract."No.");
                                 IF ServiceContract."Global Dimension 1 Code" <> '' THEN
                                   CapacityNeedDetail.SETRANGE("Global Dimension 1 Code", CapacityNeedDetail."Global Dimension 1 Code");

                                 CopyCapacityNeedDetailREP.SetToPeriod(PeriodType, MATRIX_MatrixRecords[1]."Period Start");
                                 CopyCapacityNeedDetailREP.SetType(CapacityNeedDetail.Type::Workload);
                                 CopyCapacityNeedDetailREP.SETTABLEVIEW(CapacityNeedDetail);
                                 CopyCapacityNeedDetailREP.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528600;;Container;
                ContainerType=ContentArea }

    { 1100528601;1;Group  ;
                CaptionML=[DEU=Allgemein;
                           ENU=General;
                           NLD=Algemeen;
                           NOR=Generell;
                           SVE=Allm„nt];
                GroupType=Group }

    { 1100528602;2;Field  ;
                CaptionML=[DEU=Servicevertrag;
                           ENU=Service Contract;
                           NLD=Servicecontract;
                           NOR=Servicekontrakt;
                           SVE=Servicekontrakt];
                SourceExpr=ServiceContract."No.";
                TableRelation=Service-Contract;
                OnValidate=BEGIN
                             ServiceContract.GET(ServiceContract."No.");
                             SetDisciplineFilter;
                             UpdateMatrixSubForm;
                           END;
                            }

    { 1100528603;2;Field  ;
                CaptionML=[DEU=Vertragsbeschreibung;
                           ENU=Contract Description;
                           NLD=Contractomschrijving;
                           NOR=Kontraktbeskrivelse;
                           SVE=Kontraktsbeskrivning];
                SourceExpr=ServiceContract.Description;
                Editable=false }

    { 1100529601;2;Field  ;
                CaptionML=[DEU=Anzeigen nach;
                           ENU=View by;
                           NLD=Weergeven per];
                OptionCaptionML=[DEU=Tag,Woche,Monat,Quartal,Jahr,Buchhaltungsperiode;
                                 ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 NLD=Dag,Week,Maand,Kwartaal,Jaar,Boekingsperiode];
                SourceExpr=PeriodType;
                Importance=Promoted;
                OnValidate=BEGIN
                             SetColumns(MATRIX_Step::Initial);
                             UpdateMatrixSubForm;
                           END;
                            }

    { 1100528605;1;Part   ;
                Name=MATRIX;
                CaptionML=[DEU=Prognose zus„tzliche Stunden;
                           ENU=Prognosis Additional Hours;
                           NLD=Prognose meerwerk];
                PagePartID=Page11229228;
                PartType=Page }

  }
  CODE
  {
    VAR
      MATRIX_MatrixRecords@1100528609 : ARRAY [32] OF Record 2000000007;
      MATRIX_MaximumSetLength@1100528608 : Integer;
      MATRIX_PrimKeyRecInCurrSet@1100528607 : Text[1024];
      MATRIX_CaptionSet@1100528606 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1100528605 : Text[250];
      MATRIX_CurrSetLength@1100528604 : Integer;
      MATRIX_Step@1100528603 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec';
      PeriodType@1100528602 : 'Day,Week,Month,Quarter,Year';
      ServiceContract@1100528600 : Record 11012812;
      DateFilter@1100528611 : Text;

    LOCAL PROCEDURE SetPeriodFilter@1100485000();
    VAR
      Calendar@1100529601 : Record 2000000007;
      i@1100529600 : Integer;
    BEGIN
      IF DateFilter <> '' THEN BEGIN
        Calendar.SETRANGE("Period Type", PeriodType);
        Calendar.SETFILTER("Period Start", DateFilter);
        IF Calendar.ISEMPTY THEN
          Calendar.SETFILTER("Period Start", '>=%1', WORKDATE);
        IF Calendar.FINDFIRST THEN BEGIN
          Calendar.SETRANGE("Period Start");
          IF (Calendar."Period Start" > MATRIX_MatrixRecords[1]."Period Start") AND (MATRIX_MatrixRecords[1]."Period Start" <> 0D) THEN
            IF Calendar.NEXT(-1) <> 0 THEN ;
          DateFilter := STRSUBSTNO('%1..', Calendar."Period Start");
          i := 1;
          WHILE (i < MATRIX_MaximumSetLength - 1) AND (Calendar.NEXT <> 0) DO
            i += 1;
          DateFilter := DateFilter + STRSUBSTNO('%1', NORMALDATE(Calendar."Period End"));
        END;
      END;

      IF DateFilter = '' THEN BEGIN
        PeriodType := PeriodType::Month;
        DateFilter := STRSUBSTNO('%1..%2', DMY2DATE(1, 1,DATE2DMY(WORKDATE,3)), DMY2DATE(31, 12, DATE2DMY(WORKDATE,3)));
      END;
    END;

    PROCEDURE SetContractFilter@1100485002(IServiceContract@1100485000 : Record 11012812);
    BEGIN
      ServiceContract.COPY(IServiceContract);
    END;

    LOCAL PROCEDURE SetDisciplineFilter@1100528600();
    VAR
      TradeSpeciality@1100528601 : Record 11020285;
      ServiceContractDiscipline@1100528600 : Record 11012881;
      DataSetMarked@1100528602 : Boolean;
    BEGIN
      ServiceContractDiscipline.SETRANGE("Service Contract No.", ServiceContract."No.");
      IF ServiceContractDiscipline.FINDSET(FALSE, FALSE) THEN BEGIN
        REPEAT
          TradeSpeciality.SETCURRENTKEY(Discipline);
          TradeSpeciality.SETRANGE(Discipline, ServiceContractDiscipline.Discipline);
          IF TradeSpeciality.FINDSET(FALSE, FALSE) THEN BEGIN
            REPEAT
              TradeSpeciality.MARK(TRUE);
              DataSetMarked := TRUE;
            UNTIL TradeSpeciality.NEXT = 0;
          END;
        UNTIL ServiceContractDiscipline.NEXT = 0;
      END;

      //IF DataSetMarked THEN BEGIN
      //  TradeSpeciality.SETRANGE(Discipline);
      //  Rec.COPY(TradeSpeciality);
      //  MARKEDONLY(TRUE);
      //END ELSE BEGIN
      //  CLEARMARKS;
      //  MARKEDONLY(FALSE);
      //END;
    END;

    LOCAL PROCEDURE MATRIX_GenerateColumnCaptions@1152(MATRIX_SetWanted@1000 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec');
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MATRIX_MatrixRecords);
      SetColumns(MATRIX_SetWanted);
    END;

    LOCAL PROCEDURE UpdateMatrixSubForm@7();
    BEGIN
      CurrPage.MATRIX.PAGE.Load(
        MATRIX_CaptionSet,
        MATRIX_MatrixRecords,
        MATRIX_CurrSetLength,
        ServiceContract."No.");
    END;

    LOCAL PROCEDURE SetColumns@1100529600(MATRIX_SetWanted@1100529600 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec');
    VAR
      MatrixManagement@1100529601 : Codeunit 9200;
      DateFilterLoc@1100529602 : Text;
    BEGIN
      SetPeriodFilter;
      IF MATRIX_SetWanted = MATRIX_SetWanted::Initial THEN
        DateFilterLoc := DateFilter;

      MatrixManagement.GeneratePeriodMatrixData(
        MATRIX_SetWanted,
        MATRIX_MaximumSetLength,
        FALSE, // UseNameForCaption
        PeriodType,
        DateFilterLoc,
        MATRIX_PrimKeyRecInCurrSet,
        MATRIX_CaptionSet,
        MATRIX_CaptionRange,
        MATRIX_CurrSetLength,
        MATRIX_MatrixRecords);
    END;

    BEGIN
    END.
  }
}

