OBJECT Report 11020260 Generate Prognosis Elements
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Prognose generieren;
               ENU=Generate Prognosis;
               NLD=Aanmaken prognose;
               NOR=Generer prognose;
               SVE=Generera prognos];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   StartProcess := FALSE;
                 END;

    OnPreReport=BEGIN
                  StartProcess := TRUE;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   PrognosisDate := SetPrognosisDate;
                   IF PrognosisDate = 0D THEN
                     PrognosisDate := WORKDATE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1100528801;1;Field  ;
                  CaptionML=[DEU=Prognosedatum;
                             ENU=Prognosis Date;
                             NLD=Prognosedatum;
                             NOR=Prognosedato;
                             SVE=Prognosdatum];
                  SourceExpr=PrognosisDate }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=NÑchste Schritte nach der Erstellung der Prognose;
                             ENU=Next Steps after create Prognosis;
                             NLD=Vervolgstappen na aanmaken prognose;
                             NOR=Neste steg etter Ü Opprette Prognose;
                             SVE=NÑsta steg efter att skapa prognos] }

      { 1100528800;2;Field  ;
                  Name=CopyPrevCostPrognosis;
                  CaptionML=[DEU=Vorige Prognose Kosten kopieren;
                             ENU=Copy Previous Cost Prognosis;
                             NLD=Vorige prognose kosten kopiâren;
                             NOR=Kopier forrige Kostprognose;
                             SVE=Kopiera fîregÜende kostnadsprognos];
                  SourceExpr=CopyPrevCostPrognosis;
                  OnValidate=BEGIN
                               IF CopyPrevCostPrognosis THEN BEGIN
                                 FillProgWithAvailableCost := FALSE;
                                 CopyPrevPrognosisTotalCost := FALSE;
                               END;
                             END;
                              }

      { 1100528806;2;Field  ;
                  Name=FillProgWithAvailableCost;
                  CaptionML=[DEU=Prognose mit verfÅg&baren Kosten eingeben;
                             ENU=Fill Prognosis with &Available Cost;
                             NLD=Prognose vullen met &beschikbare kosten;
                             NOR=Fyll ut Prognose med &Tilgjengelige Kostnader;
                             SVE=Fyll i prognos med &tillgÑngliga kostnader];
                  SourceExpr=FillProgWithAvailableCost;
                  OnValidate=BEGIN
                               IF FillProgWithAvailableCost THEN BEGIN
                                 CopyPrevCostPrognosis := FALSE;
                                 CopyPrevPrognosisTotalCost := FALSE;
                               END;
                             END;
                              }

      { 1100529600;2;Field  ;
                  Name=CopyPrevPrognosisTotalCost;
                  CaptionML=[DEU=Gesamtkosten vorherige Prognose kopieren;
                             ENU=Copy Previous Prognosis Total Cost;
                             NLD=Vorig totaal geprognosticeerde kosten kopiâren;
                             SVE=Kopiera fîregÜende total kostnadsprognos];
                  SourceExpr=CopyPrevPrognosisTotalCost;
                  OnValidate=BEGIN
                               IF CopyPrevPrognosisTotalCost THEN BEGIN
                                 CopyPrevCostPrognosis := FALSE;
                                 FillProgWithAvailableCost := FALSE;
                               END;
                             END;
                              }

      { 1100527350;2;Field  ;
                  Name=CopyPrevRevenuePrognosis;
                  CaptionML=[DEU=Vorige Prognose ErtrÑge kopieren;
                             ENU=Copy Previous Revenue Prognosis;
                             NLD=Vorige prognose opbrengsten kopiâren;
                             NOR=Kopier forrige Inntektsprognose;
                             SVE=Kopiera fîregÜende intÑktsprognos];
                  SourceExpr=CopyPrevRevenuePrognosis;
                  OnValidate=BEGIN
                               IF CopyPrevRevenuePrognosis THEN BEGIN
                                 FillProgRevenues := FALSE;
                                 CopyPrevPrognosisTotalRev := FALSE;
                               END;
                             END;
                              }

      { 1100527351;2;Field  ;
                  Name=FillProgRevenues;
                  CaptionML=[DEU=Prognose ErtrÑge eingeben;
                             ENU=Fill Prognosis Revenues;
                             NLD=Prognose opbrengsten vullen;
                             NOR=Fyll ut Inntektsprognose;
                             SVE=Fyll i intÑktsprognos];
                  SourceExpr=FillProgRevenues;
                  OnValidate=BEGIN
                               IF FillProgRevenues THEN BEGIN
                                 CopyPrevRevenuePrognosis := FALSE;
                                 CopyPrevPrognosisTotalRev := FALSE;
                               END;
                             END;
                              }

      { 1100527352;2;Field  ;
                  Name=CopyPrevPrognosisTotalRev;
                  CaptionML=[DEU=Voriges Total prognostizierter ErtrÑge kopieren;
                             ENU=Copy Previous Prognosis Total Revenues;
                             NLD=Vorig totaal geprognosticeerde opbrengsten kopiâren;
                             NOR=Kopier forrige Prognose for Totale Inntekter;
                             SVE=Kopiera fîregÜende prognos fîr totala intÑkter];
                  SourceExpr=CopyPrevPrognosisTotalRev;
                  OnValidate=BEGIN
                               IF CopyPrevPrognosisTotalRev THEN BEGIN
                                 CopyPrevRevenuePrognosis := FALSE;
                                 FillProgRevenues := FALSE;
                               END;
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      PrognosisDate@1100528800 : Date;
      SetPrognosisDate@1100528813 : Date;
      CopyPrevCostPrognosis@1100528801 : Boolean;
      FillProgWithAvailableCost@1100528806 : Boolean;
      StartProcess@1100528814 : Boolean;
      CopyPrevPrognosisTotalCost@1100529600 : Boolean;
      CopyPrevRevenuePrognosis@1100527352 : Boolean;
      FillProgRevenues@1100527351 : Boolean;
      CopyPrevPrognosisTotalRev@1100527350 : Boolean;

    PROCEDURE SetSelections@1100528803(VAR iPrognosisDate@1100528805 : Date);
    BEGIN
      SetPrognosisDate := iPrognosisDate;
    END;

    PROCEDURE GetSelections@1100528800(VAR oStartProcess@1100528813 : Boolean;VAR oPrognosisDate@1100528805 : Date;VAR oCopyPrevCostPrognosis@1100528804 : Boolean;VAR oFillProgWithAvailableCost@1100528812 : Boolean;VAR NewCopyPrevPrognosisTotalCost@1100529600 : Boolean;VAR oCopyPrevRevenuePrognosis@1100527353 : Boolean;VAR oCopyPrevPrognosisTotalRev@1100527352 : Boolean;VAR oFillProgRevenues@1100527351 : Boolean);
    BEGIN
      oStartProcess := StartProcess;
      oPrognosisDate := PrognosisDate;
      oCopyPrevCostPrognosis := CopyPrevCostPrognosis;
      //oCopyPrevPrognosisEndResult := CopyPrevPrognosisEndResult;
      oCopyPrevRevenuePrognosis := CopyPrevRevenuePrognosis;
      oCopyPrevPrognosisTotalRev := CopyPrevPrognosisTotalRev;
      //oCopyCommentsPrevPrognosis := CopyCommentsPrevPrognosis;
      oFillProgWithAvailableCost := FillProgWithAvailableCost;
      //oFillProgWithExtrapolatedCosts := FillProgWithExtrapolatedCosts;
      //oFillProgFromProjPlanningAct := FillProgFromProjPlanningAct;
      //oFillProgFromRequestedActCap := FillProgFromRequestedActCap;
      //oFillProgFromAssignedActCap := FillProgFromAssignedActCap;
      oFillProgRevenues := FillProgRevenues;
      //oCalcSurcharges := CalcSurcharges;
      NewCopyPrevPrognosisTotalCost := CopyPrevPrognosisTotalCost;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

