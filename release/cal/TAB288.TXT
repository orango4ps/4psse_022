OBJECT Table 288 Vendor Bank Account
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00,NAVFI.DK,4PSSE,PE6,EXF400000;
  }
  PROPERTIES
  {
    DataCaptionFields=Vendor No.,Code,Name;
    OnInsert=BEGIN
               //**4PS.sn

               CentrProspMngmt.UpdateVendorBank(Rec,1,xRec);
               //**4PS.en
             END;

    OnModify=BEGIN
               // ExFlow->
               IF ExFlowSetup.GET THEN
                 ExfVendIDMgt.UpdateVendorIDFromVendBank(Rec,FALSE);
               // <-ExFlow
               //**4PS.sn
               SwiftCodeWarningCheck;
               CentrProspMngmt.UpdateVendorBank(Rec,2,xRec);
               //**4PS.en
             END;

    OnDelete=VAR
               VendorLedgerEntry@1000 : Record 25;
               Vendor@1001 : Record 23;
               CentralDataManagement@1100528500 : Codeunit 11012010;
             BEGIN
               VendorLedgerEntry.SETRANGE("Vendor No.","Vendor No.");
               VendorLedgerEntry.SETRANGE("Recipient Bank Account",Code);
               VendorLedgerEntry.SETRANGE(Open,TRUE);
               IF NOT VendorLedgerEntry.ISEMPTY THEN
                 ERROR(BankAccDeleteErr);
               //**4PS.sn
               IF NOT CentralDataManagement.CheckBeforeDeleteVendorBank(Rec) THEN
                 ERROR(Text11012001);
               //**4PS.en
               IF Vendor.GET("Vendor No.") AND (Vendor."Preferred Bank Account Code" = Code) THEN BEGIN
                 Vendor."Preferred Bank Account Code" := '';
               //Vendor.MODIFY; //**4PS.o
                 Vendor.MODIFY(TRUE); //**4PS.n
               END;
               CentralDataManagement.UpdateVendorBank(Rec, 4, xRec);//**4PS.n
             END;

    CaptionML=[ENU=Vendor Bank Account;
               NOR=Leverand›rs bankkonto;
               SVE=Leverant”r bankkonto];
    LookupPageID=Page426;
    DrillDownPageID=Page426;
  }
  FIELDS
  {
    { 1   ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Vendor No.;
                                                              NOR=Leverand›rnr.;
                                                              SVE=Leverant”rsnr];
                                                   NotBlank=Yes }
    { 2   ;   ;Code                ;Code20        ;OnValidate=BEGIN
                                                                //**4PS.sn
                                                                IF Code <> xRec.Code THEN BEGIN
                                                                  BankAccRec := xRec;
                                                                  IF BankAccRec.FIND THEN
                                                                    CentrProspMngmt.UpdateVendorBank(Rec,3,xRec);
                                                                END;
                                                                //**4PS.en
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 3   ;   ;Name                ;Text100       ;CaptionML=[ENU=Name;
                                                              NOR=Navn;
                                                              SVE=Namn] }
    { 5   ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              NOR=Navn 2;
                                                              SVE=Namn 2] }
    { 6   ;   ;Address             ;Text100       ;CaptionML=[ENU=Address;
                                                              NOR=Adresse;
                                                              SVE=Adress] }
    { 7   ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              NOR=Adresse 2;
                                                              SVE=Adress 2] }
    { 8   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookupPostCode(City,"Post Code",County,"Country/Region Code");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              NOR=Sted;
                                                              SVE=Ort] }
    { 9   ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookupPostCode(City,"Post Code",County,"Country/Region Code");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              NOR=Postnr.;
                                                              SVE=Postnr] }
    { 10  ;   ;Contact             ;Text100       ;CaptionML=[ENU=Contact;
                                                              NOR=Kontakt;
                                                              SVE=Kontakt] }
    { 11  ;   ;Phone No.           ;Text30        ;OnValidate=BEGIN
                                                                PhoneNumberFormatting.ValidatePhoneNumber("Country/Region Code", "Phone No."); //**4PS.n
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              NOR=Telefonnr.;
                                                              SVE=Telefonnr] }
    { 12  ;   ;Telex No.           ;Text20        ;CaptionML=[ENU=Telex No.;
                                                              NOR=Teleks;
                                                              SVE=Telexnr] }
    { 13  ;   ;Bank Branch No.     ;Text20        ;OnValidate=BEGIN
                                                                //>>NAVDK
                                                                GLSetup.GET;
                                                                IF GLSetup."Danish Localization Active" THEN
                                                                  IF ("Bank Branch No." <> '') AND (STRLEN("Bank Branch No.") < 4) THEN
                                                                    "Bank Branch No." := PADSTR('',4 - STRLEN("Bank Branch No."),'0') + "Bank Branch No.";
                                                                //<<NAVDK
                                                              END;

                                                   CaptionML=[ENU=Bank Branch No.;
                                                              NOR=Bankregistreringsnr.;
                                                              SVE=Bankkontorsnr] }
    { 14  ;   ;Bank Account No.    ;Text30        ;OnValidate=VAR
                                                                lvBankAccountRec@1210190000 : Record 288;
                                                                lvMessage@1210190001 : Boolean;
                                                              BEGIN
                                                                //**4PS.sn
                                                                //**4PS.en
                                                                //**4PS.sn
                                                                IF "Bank Account No." <> '' THEN BEGIN
                                                                  lvBankAccountRec.SETCURRENTKEY("Bank Account No.");
                                                                  lvBankAccountRec.SETRANGE("Bank Account No.","Bank Account No.");
                                                                  IF lvBankAccountRec.FINDSET THEN BEGIN
                                                                    REPEAT
                                                                      IF (lvBankAccountRec."Vendor No." <> "Vendor No.") OR (lvBankAccountRec.Code <> Code) THEN BEGIN
                                                                        MESSAGE(Text11012000, FIELDCAPTION("Bank Account No."), "Bank Account No.",
                                                                                              FIELDCAPTION("Vendor No."), lvBankAccountRec."Vendor No.",
                                                                                              FIELDCAPTION(Code), lvBankAccountRec.Code) ;
                                                                        lvMessage := TRUE;
                                                                      END;
                                                                    UNTIL (lvBankAccountRec.NEXT = 0) OR lvMessage
                                                                  END;
                                                                END;
                                                                //**4PS.en

                                                                //>>NAVDK
                                                                GLSetup.GET;
                                                                IF GLSetup."Danish Localization Active" THEN
                                                                  IF ("Bank Account No." <> '') AND (STRLEN("Bank Account No.") < 10) THEN
                                                                    "Bank Account No." := PADSTR('',10 - STRLEN("Bank Account No."),'0') + "Bank Account No.";
                                                                //<<NAVDK
                                                                //>>NAVFI
                                                                IF GLSetup."Finnish localization active" THEN
                                                                  IF ("Country/Region Code" = '') OR ("Country/Region Code" = 'FI') THEN BEGIN
                                                                    IF STRLEN("Bank Account No.") > 15 THEN
                                                                      ERROR(Text1090000,FIELDCAPTION("Bank Account No."));
                                                                    IF "Bank Account No." <> '' THEN
                                                                      BankNosCheck.CheckBankAccount ("Bank Account No.",Code);
                                                                  END;
                                                                //<<NAVFI
                                                              END;

                                                   CaptionML=[ENU=Bank Account No.;
                                                              NOR=Bankkontonr.;
                                                              SVE=Bankkontonr] }
    { 15  ;   ;Transit No.         ;Text20        ;CaptionML=[ENU=Transit No.;
                                                              NOR=Transittnr.;
                                                              SVE=Transitnr] }
    { 16  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod] }
    { 17  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   OnValidate=BEGIN
                                                                PostCode.CheckClearPostCodeCityCounty(City,"Post Code",County,"Country/Region Code",xRec."Country/Region Code");
                                                                //>>NAVFI
                                                                GLSetup.GET;
                                                                IF GLSetup."Finnish localization active" THEN
                                                                  VALIDATE("Bank Account No.");
                                                                //<<NAVFI
                                                              END;

                                                   CaptionML=[ENU=Country/Region Code;
                                                              NOR=Lands-/omr†dekode;
                                                              SVE=Lands-/regionkod] }
    { 18  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              NOR=Fylke/delstat;
                                                              SVE=Delstat];
                                                   CaptionClass='5,1,' + "Country/Region Code" }
    { 19  ;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              NOR=Faksnr.;
                                                              SVE=Telefaxnr] }
    { 20  ;   ;Telex Answer Back   ;Text20        ;CaptionML=[ENU=Telex Answer Back;
                                                              NOR=Teleks (tilbakesvar);
                                                              SVE=Telexsvarskod] }
    { 21  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              NOR=Spr†kkode;
                                                              SVE=Spr†kkod] }
    { 22  ;   ;E-Mail              ;Text80        ;OnValidate=VAR
                                                                MailManagement@1000 : Codeunit 9520;
                                                              BEGIN
                                                                MailManagement.ValidateEmailAddressField("E-Mail");
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=Email;
                                                              NOR=E-post;
                                                              SVE=E-post] }
    { 23  ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Home Page;
                                                              NOR=Hjemmeside;
                                                              SVE=Hemsida] }
    { 24  ;   ;IBAN                ;Code50        ;OnValidate=VAR
                                                                CompanyInfo@1000 : Record 79;
                                                                lvBankAccountRec@1210190001 : Record 288;
                                                                lvMessage@1210190000 : Boolean;
                                                              BEGIN
                                                                CompanyInfo.CheckIBAN(IBAN);
                                                                //**4PS.sn
                                                                IF IBAN <> '' THEN BEGIN
                                                                  SwiftCodeWarningCheck();  //C016340.n
                                                                  lvBankAccountRec.SETCURRENTKEY(IBAN);
                                                                  lvBankAccountRec.SETRANGE(IBAN,IBAN);
                                                                  IF lvBankAccountRec.FINDSET THEN BEGIN
                                                                    REPEAT
                                                                      IF (lvBankAccountRec."Vendor No." <> "Vendor No.") OR (lvBankAccountRec.Code <> Code) THEN BEGIN
                                                                        MESSAGE(Text11012000, FIELDCAPTION(IBAN), IBAN,
                                                                                              FIELDCAPTION("Vendor No."), lvBankAccountRec."Vendor No.",
                                                                                              FIELDCAPTION(Code), lvBankAccountRec.Code) ;
                                                                        lvMessage := TRUE;
                                                                      END;
                                                                    UNTIL (lvBankAccountRec.NEXT = 0) OR lvMessage
                                                                  END;
                                                                END;
                                                                //**4PS.en
                                                              END;

                                                   CaptionML=[ENU=IBAN;
                                                              NOR=IBAN;
                                                              SVE=IBAN] }
    { 25  ;   ;SWIFT Code          ;Code20        ;TableRelation="SWIFT Code";
                                                   OnValidate=BEGIN
                                                                SwiftCodeWarningCheck();  //C016340.n
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=SWIFT Code;
                                                              NOR=SWIFT-kode;
                                                              SVE=SWIFT kod] }
    { 1211;   ;Bank Clearing Code  ;Text50        ;CaptionML=[ENU=Bank Clearing Code;
                                                              NOR=Bankklareringskode;
                                                              SVE=Bankclearingnummer] }
    { 1212;   ;Bank Clearing Standard;Text50      ;TableRelation="Bank Clearing Standard";
                                                   CaptionML=[ENU=Bank Clearing Standard;
                                                              NOR=Bankklareringsstandard;
                                                              SVE=Bankclearingstandard] }
    { 13400;  ;SEPA Payment        ;Boolean       ;CaptionML=[ENU=SEPA Payment;
                                                              SVE=SEPA betalning];
                                                   Description=NAVFI (13400) }
    { 11012000;;B-Account          ;Boolean       ;CaptionML=[ENU=B-Account;
                                                              NOR=B-konto;
                                                              SVE=B-konto] }
    { 11012001;;Account Holder Search Name;Code100;CaptionML=[ENU=Account Holder Search Name;
                                                              NOR=S›kenavn for kontoinnehaver;
                                                              SVE=S”knamn f”r kontoinnehavare] }
    { 12047958;;Plus Giro No.      ;Text20        ;CaptionML=[ENU=Plus Giro No.;
                                                              SVE=Plusgironr];
                                                   Description=PEB0091 }
    { 12047959;;Payment Charge Paid by;Option     ;CaptionML=ENU=Payment Charge Paid by;
                                                   OptionCaptionML=ENU=Sender - Swedish Cost,Express Fee Receiver,Receiver,Sender - All Cost;
                                                   OptionString=Sender - Swedish Cost,Express Fee Receiver,Receiver,Sender - All Cost;
                                                   Description=PEB0091 }
    { 12047960;;Payment Type       ;Option        ;InitValue=Account;
                                                   CaptionML=[ENU=Payment Type;
                                                              SVE=Betalningsform];
                                                   OptionCaptionML=ENU=Check,Account,Postal Check;
                                                   OptionString=Check,Account,Postal Check;
                                                   Description=PEB0091 }
    { 12047961;;Payment Method     ;Option        ;CaptionML=[ENU=Payment Method;
                                                              SVE=Betalningss„tt];
                                                   OptionCaptionML=ENU=Normal,Express;
                                                   OptionString=Normal,Express;
                                                   Description=PEB0091 }
    { 12047962;;Currency Account   ;Boolean       ;CaptionML=[ENU=Currency Account;
                                                              SVE=Valutakonto];
                                                   Description=PEB0091 }
    { 12047963;;Giro Type Code     ;Code10        ;TableRelation="VP Giro Type";
                                                   CaptionML=[ENU=Giro Type Code;
                                                              SVE=Girotypkod];
                                                   Description=PEB0091 }
    { 12047964;;Bank Giro No.      ;Text30        ;CaptionML=[ENU=Bank Giro No.;
                                                              SVE=Bankgironr];
                                                   Description=PEB0091 }
    { 12047965;;Code for Bank of Sweden;Code3     ;CaptionML=[ENU=Code for Bank of Sweden;
                                                              SVE=Riksbankskod];
                                                   Numeric=Yes;
                                                   Description=PEB0091 }
    { 12047966;;Account Payment with Advising;Boolean;
                                                   CaptionML=ENU=Account Payment with Advising;
                                                   Description=PEB0091 }
    { 12047967;;Country Code ISO + Account No.;Code37;
                                                   CaptionML=[ENU=Country Code ISO + Account No.;
                                                              SVE=Landkod ISO + Kontonr];
                                                   Description=PEB0091 }
    { 12047968;;Payment Relation   ;Option        ;CaptionML=[ENU=Payment Relation;
                                                              SVE=Betalning avser];
                                                   OptionCaptionML=[ENU=" ,Domestic,Foreign";
                                                                    SVE=" ,Inrikes,Utrikes"];
                                                   OptionString=[ ,Domestic,Foreign];
                                                   Description=PEB0091 }
    { 32000001;;Clearing Code      ;Text35        ;CaptionML=ENU=Clearing Code;
                                                   Description=NAVFI (32000001) }
  }
  KEYS
  {
    {    ;Vendor No.,Code                         ;Clustered=Yes }
    {    ;Bank Account No.                         }
    {    ;IBAN                                     }
    {    ;Vendor No.,Giro Type Code,Currency Code  }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Code,Name,Phone No.,Contact              }
  }
  CODE
  {
    VAR
      PostCode@1000 : Record 225;
      BankAccRec@11012002 : Record 288;
      BankAccIdentifierIsEmptyErr@1001 : TextConst 'ENU=You must specify either a Bank Account No. or an IBAN.;NOR=Du m† angi et bankkontonummer eller et IBAN-nummer.;SVE=Du m†ste antingen ange ett bankkontonr eller ett IBAN.';
      BankAccDeleteErr@1002 : TextConst 'ENU=You cannot delete this bank account because it is associated with one or more open ledger entries.;NOR=Du kan ikke slette denne bankkontoen. Den er knyttet til ‚n eller flere †pne poster.;SVE=Du kan inte ta bort det h„r bankkontot eftersom det „r l„nkat till en eller flera ”ppna transaktioner.';
      CentrProspMngmt@11012003 : Codeunit 11012010;
      Text1000001@1100525000 : TextConst 'ENU=%1 %2 may be incorrect.;SVE=%1 %2 kan vara felaktig.';
      Text11012000@1210190000 : TextConst 'ENU=%1 %2 already exists at %3 %4 %5 %6;NOR=%1 %2 finnes allerede p† %3 %4 %5 %6;SVE=%1 %2 finns redan vid %3 %4 %5 %6';
      PhoneNumberFormatting@1100528700 : Codeunit 11012276;
      Text11012001@1100527550 : TextConst 'ENU=Open Ledger Entries Found in Other Company.';
      BankNosCheck@1090000 : Codeunit 11126182;
      Text1090000@1090001 : TextConst 'ENU=Domestic %1 must not exceed 15 characters.';
      GLSetup@1101285000 : Record 98;
      "********ExFlow*********"@12013587 : Integer;
      ExfVendIDMgt@12013588 : Codeunit 12013667;
      ExFlowSetup@12013589 : Record 12013601;
      "*** Base ***"@12047960 : Integer;
      PEB001@12047961 : TextConst 'ENU=%1 is not correct. For Vendor No. %2;SVE=%1 „r felaktigt. F”r leverant”r %2';
      gVPManagement@12047959 : Codeunit 11128061;
      gBaseMgt@12047958 : Codeunit 11128082;

    [External]
    PROCEDURE GetBankAccountNoWithCheck@14() AccountNo : Text;
    BEGIN
      AccountNo := GetBankAccountNo;
      IF AccountNo = '' THEN
        ERROR(BankAccIdentifierIsEmptyErr);
    END;

    [External]
    PROCEDURE GetBankAccountNo@1() : Text;
    BEGIN
      //>>NAVDK
      GLSetup.GET;
      IF GLSetup."Danish Localization Active" THEN BEGIN
        IF ("Bank Branch No." = '') OR ("Bank Account No." = '') THEN
          EXIT(DELCHR(IBAN,'=<>'));

        EXIT("Bank Branch No." + "Bank Account No.");
      END;
      //<<NAVDK
      IF IBAN <> '' THEN
        EXIT(DELCHR(IBAN,'=<>'));

      IF "Bank Account No." <> '' THEN
        EXIT("Bank Account No.");
    END;

    PROCEDURE SwiftCodeWarningCheck@1100409000();
    VAR
      BankAccount@1100525000 : Record 270;
    BEGIN
      //**4PS  (C016340)
      IF (IBAN <> '') AND ("SWIFT Code" <> '') AND NOT BankAccount.CheckSWIFT("SWIFT Code") THEN
        MESSAGE(Text1000001, FIELDCAPTION("SWIFT Code"), "SWIFT Code");
    END;

    BEGIN
    {
      --- ExFlow  --->
      Code           : OnModify
      Globals
      <-- ExFlow ---

        PEB *** Begin ***
        PEB0009 "Search Name" is Bankgiro No. or Postal Giro No.
        PEB0091 Banking
        - New Index
          "Vendor No.","Giro Type Code","Currency Code"
        PEB
        PEB *** End ***
    }
    END.
  }
}

