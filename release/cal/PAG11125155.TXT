OBJECT Page 11125155 Maintenance Proposal Lines SF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Wartungsvorschlagszeilen;
               ENU=Maintenance Proposal Lines;
               NLD=Onderhoudsvoorstelregels;
               SVE=UnderhÜllsfîrslag];
    InsertAllowed=No;
    SourceTable=Table11071696;
    PageType=ListPart;
    OnInit=BEGIN
             NewMaintenanceDateEditable := TRUE;
             EmployeeNoEditable := TRUE;
             EndingTimeMaintenanceEditable := TRUE;
             StartingTimeMaintenanceEditabl := TRUE;
             EndingDateMaintenanceEditable := TRUE;
             StartingDateMaintenanceEditabl := TRUE;
           END;

    OnAfterGetRecord=VAR
                       ServiceObjectInfoMgt@1100528600 : Codeunit 11012840;
                     BEGIN
                       CALCFIELDS("Standard Object No.", Brand, "Standard Object Description", "Object Group", Room);
                       ServiceObjectInfoMgt.GetStdSpecValues("Object No.", SerialNo, YearOfManufacture);
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unctions;
                                 NLD=F&uncties;
                                 NOR=Fu&nksjon;
                                 SVE=F&unktioner] }
      { 1100525009;2 ;Action    ;
                      CaptionML=[DEU=Verschieben auf vorige Periode;
                                 ENU=Shift to Previous Period;
                                 NLD=Verschuif naar vorige periode;
                                 NOR=Skift til forrige periode;
                                 SVE=Skifta till fîregÜende period];
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 ShiftMaintenanceDate(PeriodType, Direction::Down);
                               END;
                                }
      { 1100525010;2 ;Action    ;
                      CaptionML=[DEU=Verschieben auf nÑchste Periode;
                                 ENU=Shift to Next Period;
                                 NLD=Verschuif naar volgende periode;
                                 NOR=Skift til neste periode;
                                 SVE=Skifta till nÑsta period];
                      Image=NextRecord;
                      OnAction=BEGIN
                                 ShiftMaintenanceDate(PeriodType, Direction::Up);
                               END;
                                }
      { 1100525012;2 ;Action    ;
                      CaptionML=[DEU=Neues Wartungsdatum eingeben;
                                 ENU=Enter New Maintenance Date;
                                 NLD=Nieuwe onderhoudsdatum invullen;
                                 NOR=Angi ny vedlikeholdsdato];
                      Image=ChangeDate;
                      OnAction=BEGIN
                                 UpdateMaintenanceDate(NewMaintenanceDate);
                               END;
                                }
      { 1904332504;2 ;Action    ;
                      CaptionML=[DEU=Neues Wartungsdatum Åbernehmen;
                                 ENU=Copy New Maintenance Date;
                                 NLD=Nieuwe onderhoudsdatum overnemen;
                                 NOR=Kopier ny vedlikeholdsdato;
                                 SVE=Kopiera nytt underhÜllsdatum];
                      Image=Copy;
                      OnAction=BEGIN
                                 PageReplaceMaintenanceDate();
                               END;
                                }
      { 1904332604;2 ;Action    ;
                      CaptionML=[DEU=Neues Wartungsdatum lîschen;
                                 ENU=Erase New Maintenance Date;
                                 NLD=Nieuwe onderhoudsdatum wissen;
                                 NOR=Fjern ny vedlikeholdsdato;
                                 SVE=Ta bort nytt underhÜllsdatum];
                      Image=Delete;
                      OnAction=BEGIN
                                 PurgeNewMaintenanceDate();
                               END;
                                }
      { 1902236704;2 ;Action    ;
                      ShortCutKey=F7;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Wartungsvorschlagszeilen planen;
                                 ENU=Plan Maintenance Proposal Lines;
                                 NLD=Onderhoudsregels inplannen;
                                 NOR=Plan for vedlikehold, forslagsrader;
                                 SVE=Fîrslagsrader fîr planerat underhÜll];
                      Image=Planning;
                      OnAction=BEGIN
                                 PlanMaintenanceProposalLines;
                               END;
                                }
      { 1906350204;2 ;Action    ;
                      ShortCutKey=F9;
                      Ellipsis=Yes;
                      CaptionML=[DEU=ServiceauftrÑge erstellen;
                                 ENU=Create Service Orders;
                                 NLD=Serviceorders aanmaken;
                                 NOR=Opprette serviceordre;
                                 SVE=Skapa serviceorder];
                      Image=MakeOrder;
                      OnAction=BEGIN
                                 CreateServiceOrders;
                               END;
                                }
      { 1903343904;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Wartungstermin senden;
                                 ENU=Send Maintenance Appointment;
                                 NLD=Onderhoudsafspraak versturen;
                                 SVE=Skriv ut mîtesbrev];
                      Image=Email;
                      OnAction=VAR
                                 MaintenanceProposalLine@1100525000 : Record 11071696;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(MaintenanceProposalLine);
                                 IF MaintenanceProposalLine.ISEMPTY THEN
                                   ERROR(Text001);
                                 MaintenanceProposalLine.SendAppointment(MaintenanceProposalLine);
                               END;
                                }
      { 1100529601;2 ;Action    ;
                      Name=Expire Maintenance Lines;
                      CaptionML=[DEU=Wartungzeilen verfallen lassen;
                                 ENU=Expire Maintenance Lines;
                                 NLD=Onderhoudsregels laten vervallen];
                      Image=CancelAllLines;
                      OnAction=VAR
                                 LocMaintenanceProposalLine@1100529600 : Record 11071696;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(LocMaintenanceProposalLine);
                                 IF LocMaintenanceProposalLine.ISEMPTY THEN
                                   ERROR(Text001);
                                 SetExpired(LocMaintenanceProposalLine);
                               END;
                                }
      { 1904991004;1 ;ActionGroup;
                      CaptionML=[DEU=Wartung;
                                 ENU="Maintenance ";
                                 NLD=Onderhoud;
                                 NOR=Vedlikehold;
                                 SVE=UnderhÜll] }
      { 1907993304;2 ;Action    ;
                      CaptionML=[DEU=öbersicht TÑtigkeiten;
                                 ENU=Maintenance Activity List;
                                 NLD=Overzicht werkzaamheden;
                                 NOR=Vedlikholdsaktiviteter, liste;
                                 SVE=Lista îver underhÜllsaktiviteter];
                      Image=ListPage;
                      OnAction=BEGIN
                                 ShowMaintWork;
                               END;
                                }
      { 1905778904;2 ;Action    ;
                      CaptionML=[DEU=öberlappungskonflikte;
                                 ENU=Overlap Conflicts;
                                 NLD=Overlapconflicten;
                                 NOR=Overlappende konflikter;
                                 SVE=ôverlappande konflikter];
                      Image=ShowWarning;
                      OnAction=BEGIN
                                 ShowOverlapConflict;
                               END;
                                }
      { 1100528605;1 ;ActionGroup;
                      CaptionML=[DEU=Inspektionen;
                                 ENU=Inspections;
                                 NLD=Inspecties;
                                 NOR=Inspeksjoner;
                                 SVE=Inspektioner] }
      { 1100528613;2 ;Action    ;
                      CaptionML=[DEU=öbersicht Inspektionen;
                                 ENU=Inspection List;
                                 NLD=Overzicht inspecties;
                                 NOR=Inspeksjonsliste;
                                 SVE=Inspektionslista];
                      OnAction=VAR
                                 ServiceInspectionManagement@1100528600 : Codeunit 11012844;
                               BEGIN
                                 ServiceInspectionManagement.ShowInspectionLines("Service Contract No.", "Object No.", "Maintenance Scheme", "Starting Date Maintenance");
                               END;
                                }
      { 1100525004;1 ;ActionGroup;
                      CaptionML=[DEU=Objekt;
                                 ENU=Object;
                                 NLD=Object;
                                 NOR=Objekt;
                                 SVE=Objekt] }
      { 1100525006;2 ;Action    ;
                      CaptionML=[DEU=Alle zugehîrigen Objekte;
                                 ENU=All Related Objects;
                                 NLD=Alle gerelateerde objecten;
                                 NOR=Alle relaterte objekter;
                                 SVE=Alla relaterade objekt];
                      Image=SuggestCapacity;
                      OnAction=VAR
                                 ServiceObjectManagement@1100525000 : Codeunit 11012808;
                               BEGIN
                                 ServiceObjectManagement.ShowRelatedObjects("Object No.");
                               END;
                                }
      { 1100528623;2 ;Action    ;
                      CaptionML=[DEU=Standort Struktur;
                                 ENU=Location Structure;
                                 NLD=Locatiestructuur];
                      Image=ExplodeBOM;
                      OnAction=VAR
                                 ServiceObjectInfoMgt@1100528601 : Codeunit 11012840;
                               BEGIN
                                 ServiceObjectInfoMgt.ShowLocationStructureByObject("Object No.");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100525000;1;Group  ;
                GroupType=Repeater }

    { 1100525001;2;Field  ;
                SourceExpr="Service Contract No." }

    { 1100525005;2;Field  ;
                SourceExpr="Starting Date Maintenance";
                Editable=StartingDateMaintenanceEditabl;
                OnValidate=BEGIN
                             IF "Firm Planned" THEN
                               IF NOT CONFIRM(Text003) THEN
                                 ERROR('');
                           END;
                            }

    { 1100528614;2;Field  ;
                SourceExpr="Starting Time Maintenance";
                Editable=StartingTimeMaintenanceEditabl }

    { 1100528616;2;Field  ;
                SourceExpr="Ending Date Maintenance";
                Editable=EndingDateMaintenanceEditable }

    { 1100528618;2;Field  ;
                SourceExpr="Ending Time Maintenance";
                Editable=EndingTimeMaintenanceEditable }

    { 1100526222;2;Field  ;
                SourceExpr="New Maintenance Date";
                Editable=NewMaintenanceDateEditable;
                OnValidate=BEGIN
                             IF "Firm Planned" THEN
                               IF NOT CONFIRM(Text003) THEN
                                 ERROR('');
                           END;
                            }

    { 1100526224;2;Field  ;
                SourceExpr="Theoretical Maintenance Date" }

    { 1100526226;2;Field  ;
                SourceExpr="New Theoretical Maint. Date" }

    { 1100526228;2;Field  ;
                DrillDown=No;
                SourceExpr="Maintenance Day" }

    { 1100528628;2;Field  ;
                SourceExpr="Last Possible Maint. Date";
                Visible=FALSE }

    { 1100526220;2;Field  ;
                SourceExpr="Firm Planned" }

    { 1100525033;2;Field  ;
                SourceExpr="Service Order No.";
                Editable=FALSE;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100525003;2;Field  ;
                SourceExpr="Object No." }

    { 1100525008;2;Field  ;
                SourceExpr="Object Description" }

    { 1100528629;2;Field  ;
                SourceExpr="Object Description 2" }

    { 1100525007;2;Field  ;
                SourceExpr="Standard Object No." }

    { 1100525013;2;Field  ;
                SourceExpr="Standard Object Description" }

    { 1100528630;2;Field  ;
                SourceExpr="Standard Object Description 2" }

    { 1100525015;2;Field  ;
                SourceExpr="Service Location No.";
                Editable=FALSE }

    { 1100526206;2;Field  ;
                SourceExpr="Service Location Description";
                Visible=FALSE }

    { 1100529600;2;Field  ;
                SourceExpr="Service Location Global Dim. 1" }

    { 1100526208;2;Field  ;
                SourceExpr=Address;
                Visible=FALSE }

    { 1100526210;2;Field  ;
                SourceExpr="Address 2";
                Visible=FALSE }

    { 1100526216;2;Field  ;
                SourceExpr="Post Code";
                Visible=FALSE }

    { 1100525016;2;Field  ;
                SourceExpr="Post Code Type" }

    { 1100528610;2;Field  ;
                SourceExpr="House No.";
                Visible=FALSE }

    { 1100528612;2;Field  ;
                SourceExpr="House No. Ext.";
                Visible=FALSE }

    { 1100526212;2;Field  ;
                SourceExpr=City;
                Visible=FALSE }

    { 1100526214;2;Field  ;
                SourceExpr=County;
                Visible=FALSE }

    { 1100528620;2;Field  ;
                SourceExpr="Resource No.";
                Editable=EmployeeNoEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100528622;2;Field  ;
                SourceExpr="Resource Name" }

    { 1100525029;2;Field  ;
                SourceExpr="Preferred Employee";
                Visible=FALSE;
                Editable=FALSE;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100525031;2;Field  ;
                OptionCaptionML=[DEU=" ,Vertrag,Standort,Objekt,Vertragobjektwartung,Komplex";
                                 ENU=" ,Contract,Location,Object,Contract Object Maintenance,Complex";
                                 NLD=" ,Contract,Locatie,Object,Contractobject onderhoud,Complex"];
                SourceExpr="Preferred Employee Level";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528800;2;Field  ;
                SourceExpr="Employee No.";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100528801;2;Field  ;
                SourceExpr="Employee Name" }

    { 1100525018;2;Field  ;
                SourceExpr=Subcontractor;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100525020;2;Field  ;
                SourceExpr="Subcontractor Name" }

    { 1100528602;2;Field  ;
                SourceExpr=Cluster;
                Visible=FALSE }

    { 1100528607;2;Field  ;
                SourceExpr="Cluster Seqn." }

    { 1100525019;2;Field  ;
                SourceExpr="Maintenance Scheme" }

    { 1100526204;2;Field  ;
                SourceExpr="Maintenance Scheme Description";
                Visible=FALSE }

    { 1100528624;2;Field  ;
                SourceExpr="Budget Working Hours" }

    { 1100525002;2;Field  ;
                SourceExpr="Budget Travel Hours" }

    { 1100525014;2;Field  ;
                SourceExpr="Budget Material Present" }

    { 1100528626;2;Field  ;
                SourceExpr="Calculated Travel Hours" }

    { 1100525023;2;Field  ;
                SourceExpr="Execution Week";
                Visible=FALSE }

    { 1100525025;2;Field  ;
                SourceExpr="Execution Year";
                Visible=FALSE }

    { 1100526200;2;Field  ;
                SourceExpr="Execution Day";
                Visible=FALSE }

    { 1100525011;2;Field  ;
                SourceExpr=Brand;
                Visible=FALSE }

    { 1100525022;2;Field  ;
                SourceExpr=Model;
                Visible=FALSE }

    { 1100525024;2;Field  ;
                SourceExpr=Type;
                Visible=FALSE }

    { 1100525017;2;Field  ;
                SourceExpr="Object Group" }

    { 1100525021;2;Field  ;
                SourceExpr="Service Package" }

    { 1100526202;2;Field  ;
                SourceExpr="Overlap Conflict" }

    { 1100528600;2;Field  ;
                SourceExpr=Expired }

    { 1100528604;2;Field  ;
                DrillDown=No;
                SourceExpr=Discipline;
                Visible=FALSE }

    { 1100528606;2;Field  ;
                DrillDown=No;
                SourceExpr="Trade Speciality";
                Visible=FALSE }

    { 1100528601;2;Field  ;
                SourceExpr="Starting Time Maint. Window";
                Visible=false }

    { 1100528603;2;Field  ;
                SourceExpr="Ending Time Maint. Window";
                Visible=false }

    { 1100528609;2;Field  ;
                SourceExpr="Customer No." }

    { 1100528611;2;Field  ;
                SourceExpr="Customer Name" }

    { 1100528707;2;Field  ;
                SourceExpr="Territory Code" }

    { 1100528615;2;Field  ;
                SourceExpr="Complex Code";
                Visible=FALSE }

    { 1100528713;2;Field  ;
                SourceExpr="Building Code";
                Visible=FALSE }

    { 1100528617;2;Field  ;
                SourceExpr="Service Order Description" }

    { 1100528619;2;Field  ;
                SourceExpr="Order Kind" }

    { 1100528621;2;Field  ;
                SourceExpr="Order Type" }

    { 1100528917;2;Field  ;
                SourceExpr="Service Category" }

    { 1100528608;2;Field  ;
                SourceExpr="Message Text" }

    { 1100528625;2;Field  ;
                SourceExpr=Room }

    { 1100528632;2;Field  ;
                CaptionML=[DEU=Seriennr.;
                           ENU=Serial No.;
                           NLD=Serienr.;
                           NOR=Serienr.;
                           SVE=Serienr];
                SourceExpr=SerialNo;
                Editable=FALSE }

    { 1100528627;2;Field  ;
                CaptionML=[DEU=Baujahr;
                           ENU=Year Of Manufacture;
                           NLD=Bouwjaar;
                           NOR=ProduksjonsÜr;
                           SVE=TillverkningsÜr];
                SourceExpr=YearOfManufacture;
                Editable=FALSE }

    { 1100528631;2;Field  ;
                SourceExpr="Service Contract Group" }

    { 1100527000;2;Field  ;
                SourceExpr="Service Location Phone No." }

    { 1100527450;2;Field  ;
                SourceExpr=Comment }

  }
  CODE
  {
    VAR
      Text001@1100525000 : TextConst 'DEU=Zuerst Zeilen wÑhlen.;ENU=First select lines.;NLD=Selecteer eerst regels.;NOR=Velg rader fõrst.;SVE=VÑlj fîrst rader.';
      Text002@1100526200 : TextConst 'DEU=Es sind fest geplante Zeilen vorhanden. Diese Zeilen auch verschieben?;ENU=There are firm planned lines selected, shift these also?;NLD=Er zijn vast geplande regels aanwezig. Deze regels ook verschuiven?;NOR=Faste planlagte rader er valgt, vil du skifte disse ogsÜ?;SVE=Det finns fasta planerade rader som har markerats, vill du skifta dem ocksÜ?';
      Text003@1100526201 : TextConst 'DEU=Zeile ist fest geplant. Mîchten Sie fortfahren?;ENU=Line is firm planned, continue?;NLD=Regel is vast gepland. Regel verschuiven?;NOR=Raden er fast planlagt, fortsette?;SVE=Raden Ñr fast planerad. FortsÑtta?';
      Text004@1100528600 : TextConst 'DEU=Es sind fest geplante Zeilen vorhanden. Diese Zeilen auch aktualisieren?;ENU=There are firm planned lines selected, update these also?;NLD=Er zijn vast geplande regels aanwezig. Deze regels ook bijwerken?;NOR=Faste planlagte rader er valgt, vil du oppdatere disse ogsÜ?;SVE=Det finns fasta planerade rader som har markerats, vill du uppdatera dessa ocksÜ?';
      StartingDateMaintenanceEditabl@19069908 : Boolean INDATASET;
      EndingDateMaintenanceEditable@19071121 : Boolean INDATASET;
      StartingTimeMaintenanceEditabl@19020442 : Boolean INDATASET;
      EndingTimeMaintenanceEditable@19011189 : Boolean INDATASET;
      EmployeeNoEditable@19049966 : Boolean INDATASET;
      NewMaintenanceDateEditable@19003237 : Boolean INDATASET;
      PeriodType@1100525001 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      Direction@1100525002 : 'Up,Down';
      NewMaintenanceDate@1100525003 : Date;
      PlanforResourceNo@1100528601 : Code[20];
      OverruleResourceNo@1100528602 : Boolean;
      YearOfManufacture@1100528603 : Text;
      SerialNo@1100528604 : Text;

    PROCEDURE CreateServiceOrders@1100525000();
    VAR
      MaintenanceProposalLine@1210190000 : Record 11071696;
      ObjectModificationLine@1100528600 : Record 11071701;
      ReplacementLine@1100528601 : Record 11071710;
      CreateSOfromMaintPropFRM@1100525002 : Page 11125156;
      Type@1100528602 : Option;
    BEGIN
      CurrPage.SETSELECTIONFILTER(MaintenanceProposalLine);
      IF MaintenanceProposalLine.ISEMPTY THEN
        ERROR(Text001);

      IF PlanforResourceNo <> '' THEN BEGIN
        MaintenanceProposalLine.MODIFYALL("Resource No.", PlanforResourceNo, TRUE);
        COMMIT;
      END;

      CreateSOfromMaintPropFRM.SetDefaults(MaintenanceProposalLine, ObjectModificationLine, ReplacementLine, Type);
      CreateSOfromMaintPropFRM.RUNMODAL;
    END;

    PROCEDURE ShowMaintWork@1100526200();
    VAR
      lvMaintManCU@1100526200 : Codeunit 11012829;
    BEGIN
      lvMaintManCU.ShowMaintWorkListProposal(Rec);
    END;

    PROCEDURE ShowOverlapConflict@1100526201();
    VAR
      MaintenanceManagementCU@1100526201 : Codeunit 11012829;
    BEGIN
      IF "Object No." = '' THEN
        EXIT;
      MaintenanceManagementCU.ShowContractObjOverlapConflict("Service Contract No.", "Object No.");
    END;

    PROCEDURE PageReplaceMaintenanceDate@1100526202();
    VAR
      MaintenanceProposalLine@1100525000 : Record 11071696;
    BEGIN
      CurrPage.SETSELECTIONFILTER(MaintenanceProposalLine);
      MaintenanceProposalLine.ReplaceMaintenanceDate(MaintenanceProposalLine);
    END;

    PROCEDURE ShiftMaintenanceDate@1100526203(PeriodType@1100526200 : 'Day,Week,Month,Quarter,Year,Accounting Period';Direction@1100526201 : 'Up,Down');
    VAR
      MaintenanceProposalLine@1100526202 : Record 11071696;
      ContractObjectsMaintenance@1100526208 : Record 11071692;
      DirectionTxt@1100526205 : Text[1];
      PeriodTxt@1100526204 : Text[10];
      ShiftTxt@1100526203 : Text[30];
      ShiftDateFormula@1100526210 : DateFormula;
      ShiftFirmPlannedLines@1100526206 : Boolean;
      AskShiftFirmPlannedLines@1100526207 : Boolean;
      NewMaintenanceDate@1100528600 : Date;
      NewTheoreticalMaintDate@1100528601 : Date;
      DummyDateFormula@1100525000 : DateFormula;
    BEGIN
      CurrPage.SETSELECTIONFILTER(MaintenanceProposalLine);
      MaintenanceProposalLine.SETRANGE("Service Order No.", '');
      IF NOT MaintenanceProposalLine.FINDSET THEN
        EXIT;

      REPEAT
        IF MaintenanceProposalLine."Firm Planned" THEN
          AskShiftFirmPlannedLines := TRUE;
      UNTIL AskShiftFirmPlannedLines OR (MaintenanceProposalLine.NEXT = 0);

      IF AskShiftFirmPlannedLines THEN
        ShiftFirmPlannedLines := CONFIRM(Text002, FALSE);

      IF Direction = Direction::Up THEN
        DirectionTxt := '+'
      ELSE
        DirectionTxt := '-';

      CASE PeriodType OF
        PeriodType::Day:
          PeriodTxt := '1D';
        PeriodType::Week:
          PeriodTxt := '1W';
        PeriodType::Month:
          PeriodTxt := '1M';
        PeriodType::Quarter:
          PeriodTxt := '3M';
      END;
      ShiftTxt := STRSUBSTNO('<%1%2>', DirectionTxt, PeriodTxt);
      EVALUATE(ShiftDateFormula, ShiftTxt);

      IF MaintenanceProposalLine.FINDSET(TRUE) THEN BEGIN
        REPEAT
          IF ShiftFirmPlannedLines OR NOT MaintenanceProposalLine."Firm Planned" THEN BEGIN
            NewMaintenanceDate := MaintenanceProposalLine."New Maintenance Date";
            IF NewMaintenanceDate = 0D THEN
              NewMaintenanceDate := MaintenanceProposalLine."Starting Date Maintenance";
            NewTheoreticalMaintDate := MaintenanceProposalLine."New Theoretical Maint. Date";
            IF NewTheoreticalMaintDate = 0D THEN
              NewTheoreticalMaintDate := MaintenanceProposalLine."Theoretical Maintenance Date";

      //      MaintenanceProposalLine.CALCFIELDS("Maintenance Day");
            ContractObjectsMaintenance.GetNextMaintenanceDate(
              NewMaintenanceDate, ShiftDateFormula, DummyDateFormula, MaintenanceProposalLine."Maintenance Day", 0D, NewTheoreticalMaintDate, FALSE);
            IF (MaintenanceProposalLine."Last Possible Maint. Date" = 0D) OR
               (NewTheoreticalMaintDate <= MaintenanceProposalLine."Last Possible Maint. Date")
            THEN BEGIN
              MaintenanceProposalLine."New Maintenance Date" := NewMaintenanceDate;
              MaintenanceProposalLine."New Theoretical Maint. Date" := NewTheoreticalMaintDate;
              MaintenanceProposalLine.MODIFY;
            END;
          END;
        UNTIL MaintenanceProposalLine.NEXT = 0;
        CurrPage.UPDATE;
      END;
    END;

    PROCEDURE UpdateMaintenanceDate@1100526204(INewMaintenanceDate@1100526200 : Date);
    VAR
      MaintenanceProposalLine@1100526202 : Record 11071696;
      ContractObjectsMaintenance@1100526201 : Record 11071692;
      ShiftDateFormula@1100526203 : DateFormula;
      AskUpdateFirmPlannedLines@1100528600 : Boolean;
      UpdateFirmPlannedLines@1100528601 : Boolean;
      DummyDateFormula@1100525000 : DateFormula;
    BEGIN
      MaintenanceProposalLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(MaintenanceProposalLine);
      MaintenanceProposalLine.SETRANGE("Service Order No.", '');
      IF NOT MaintenanceProposalLine.FINDSET THEN BEGIN
        MaintenanceProposalLine.COPY(Rec);
        IF NOT MaintenanceProposalLine.FINDSET THEN
          EXIT;
      END;

      REPEAT
        IF MaintenanceProposalLine."Firm Planned" THEN
          AskUpdateFirmPlannedLines := TRUE;
      UNTIL AskUpdateFirmPlannedLines OR (MaintenanceProposalLine.NEXT = 0);

      IF AskUpdateFirmPlannedLines THEN
        UpdateFirmPlannedLines := CONFIRM(Text004, FALSE);

      EVALUATE(ShiftDateFormula, '<+0D>');
      IF MaintenanceProposalLine.FINDSET(TRUE) THEN BEGIN
        REPEAT
          IF UpdateFirmPlannedLines OR NOT MaintenanceProposalLine."Firm Planned" THEN BEGIN
            MaintenanceProposalLine."New Theoretical Maint. Date" := INewMaintenanceDate;
      //      MaintenanceProposalLine.CALCFIELDS("Maintenance Day");
            ContractObjectsMaintenance.GetNextMaintenanceDate(MaintenanceProposalLine."New Maintenance Date", ShiftDateFormula, DummyDateFormula,
              MaintenanceProposalLine."Maintenance Day", 0D, MaintenanceProposalLine."New Theoretical Maint. Date", FALSE);
            MaintenanceProposalLine.MODIFY;
          END;
        UNTIL MaintenanceProposalLine.NEXT = 0;
        CurrPage.UPDATE;
      END;
    END;

    PROCEDURE PurgeNewMaintenanceDate@1100526205();
    VAR
      MaintProposalLineConsObj@1100526200 : Record 11071696;
    BEGIN
      MaintProposalLineConsObj.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(MaintProposalLineConsObj);
      MaintProposalLineConsObj.SETRANGE("Service Order No.", '');
      IF NOT MaintProposalLineConsObj.FINDSET THEN BEGIN
        MaintProposalLineConsObj.COPY(Rec);
        IF NOT MaintProposalLineConsObj.FINDSET THEN
          EXIT;
      END;
      REPEAT
        MaintProposalLineConsObj."New Maintenance Date" := 0D;
        MaintProposalLineConsObj."New Theoretical Maint. Date" := 0D;
        MaintProposalLineConsObj.MODIFY;
      UNTIL MaintProposalLineConsObj.NEXT = 0;
    END;

    PROCEDURE UpdateEditable@1100526206();
    BEGIN
      StartingDateMaintenanceEditabl := "Service Order No." = '';
      EndingDateMaintenanceEditable := "Service Order No." = '';
      StartingTimeMaintenanceEditabl := "Service Order No." = '';
      EndingTimeMaintenanceEditable := "Service Order No." = '';
      EmployeeNoEditable := "Service Order No." = '';
      NewMaintenanceDateEditable := "Service Order No." = '';
    END;

    PROCEDURE PlanMaintenanceProposalLines@1100528600();
    VAR
      MaintenanceProposalLine@1100528600 : Record 11071696;
      PlanMaintProposalLines@1100528601 : Page 11126113;
    BEGIN
      CurrPage.SETSELECTIONFILTER(MaintenanceProposalLine);
      IF MaintenanceProposalLine.ISEMPTY THEN
        ERROR(Text001);
      PlanMaintProposalLines.SetSelection(MaintenanceProposalLine);
      IF PlanforResourceNo <> '' THEN
        PlanMaintProposalLines.SetResourceNo(PlanforResourceNo);
      PlanMaintProposalLines.RUNMODAL;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      UpdateEditable();
    END;

    PROCEDURE SetPeriodType@1100525001(IPeriodType@1100525000 : Option);
    BEGIN
      PeriodType := IPeriodType;
    END;

    PROCEDURE SetNewMaintenanceDate@1100525003(INewMaintenanceDate@1100525000 : Date);
    BEGIN
      NewMaintenanceDate := INewMaintenanceDate;
    END;

    PROCEDURE ApplyFilters@1100528601(IResourceNo@1100528600 : Code[20];IDisciplineFilter@1100528601 : Code[100];GlobalDim1Filter@1100529600 : Code[20]);
    BEGIN
      PlanforResourceNo := IResourceNo;
      OverruleResourceNo := TRUE;
      SETCURRENTKEY("Service Order No.");
      SETRANGE("Service Order No.", '');
      SETRANGE(Expired, FALSE);
      IF IDisciplineFilter <> '' THEN
        SETFILTER(Discipline, IDisciplineFilter)
      ELSE
        SETRANGE(Discipline);
      IF GlobalDim1Filter <> '' THEN
        SETRANGE("Service Location Global Dim. 1", GlobalDim1Filter)
      ELSE
        SETRANGE("Service Location Global Dim. 1");
      UpdateEditable;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SetExpired@1100529600(VAR LocMaintenanceProposalLine@1100529600 : Record 11071696);
    VAR
      MaintenanceProposalLine@1100529601 : Record 11071696;
      TmpServContrArrCommentLine@1100529602 : TEMPORARY Record 11072560;
    BEGIN
      MaintenanceProposalLine.COPY(LocMaintenanceProposalLine);
      MaintenanceProposalLine.SETRANGE("Service Order No.", '');
      MaintenanceProposalLine.SETRANGE(Expired, FALSE);
      IF MaintenanceProposalLine.ISEMPTY THEN
        EXIT;

      IF GUIALLOWED THEN
        PAGE.RUNMODAL(0, TmpServContrArrCommentLine);

      MaintenanceProposalLine.FINDSET(TRUE);
      MaintenanceProposalLine.CopyTmpServContrArrCommentLine(TmpServContrArrCommentLine);
      REPEAT
        MaintenanceProposalLine.VALIDATE(Expired, TRUE);
        MaintenanceProposalLine.MODIFY;
      UNTIL MaintenanceProposalLine.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

