OBJECT Page 11126765 All Contract Installments
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Alle Vertragstermine;
               ENU=All Contract Installments;
               NLD=Alle contracttermijnen];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11071707;
    SourceTableView=SORTING(Service Contract No.,Line No.)
                    WHERE(Invoicing via Collective List=CONST(No));
    PageType=List;
    UsageCategory=Tasks;
    OnInit=BEGIN
             InvoiceForewardUntilDate := WORKDATE;
             InvoiceAfterwardsUntilDate := InvoiceForewardUntilDate;
             PostingDate := WORKDATE;
             DocumentDate := WORKDATE;
           END;

    OnOpenPage=BEGIN
                 ApplyFilters;
               END;

    ActionList=ACTIONS
    {
      { 1100528625;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100528626;1 ;Action    ;
                      CaptionML=[DEU=Vertragskarte;
                                 ENU=Contract Card;
                                 NLD=Contractkaart];
                      RunObject=Page 11125146;
                      RunPageLink=No.=FIELD(Service Contract No.);
                      Image=Card }
      { 1100528621;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528636;1 ;Action    ;
                      CaptionML=[DEU=Fakturierbar umschalten;
                                 ENU=Toggle Chargeable;
                                 NLD=Factureerbaar aan/uit;
                                 SVE=V„xla debiterbar];
                      Promoted=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ToggleChargeable;
                               END;
                                }
      { 1100528622;1 ;Action    ;
                      CaptionML=[DEU=Rechnungen erstellen;
                                 ENU=Create Invoices;
                                 NLD=Facturen aanmaken;
                                 NOR=Opprette fakturaer;
                                 SVE=Skapa fakturor];
                      Promoted=Yes;
                      Image=NewInvoice;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CreateInvoices;
                                 ApplyFilters;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528600;0;Container;
                ContainerType=ContentArea }

    { 1100528617;1;Group  ;
                CaptionML=[DEU=Allgemein;
                           ENU=General;
                           NLD=Algemeen;
                           NOR=Generell;
                           SVE=Allm„nt];
                GroupType=Group }

    { 1100528619;2;Field  ;
                CaptionML=[DEU=Im Voraus fakturieren bis einschl.;
                           ENU=Forehand Invoice Until;
                           NLD=Vooruit factureren t/m;
                           NOR=Forh†ndsfakturer frem til;
                           SVE=Fakturera p† f”rhand till];
                SourceExpr=InvoiceForewardUntilDate;
                OnValidate=BEGIN
                             IF (InvoiceForewardUntilDate <> 0D) AND (InvoiceAfterwardsUntilDate = 0D) THEN
                               InvoiceAfterwardsUntilDate := InvoiceForewardUntilDate;
                             ApplyFilters;
                           END;
                            }

    { 1100528620;2;Field  ;
                CaptionML=[DEU=Nachtr„glich fakturieren bis einschl.;
                           ENU=Afterwards Invoice Until;
                           NLD=Achteraf factureren t/m;
                           NOR=Etterh†ndsfakturer frem til;
                           SVE=Fakturera efter†t tills];
                SourceExpr=InvoiceAfterwardsUntilDate;
                OnValidate=BEGIN
                             ApplyFilters;
                           END;
                            }

    { 1100528624;2;Field  ;
                CaptionML=[DEU=Buchungsdatum;
                           ENU=Posting Date;
                           NLD=Boekingsdatum;
                           NOR=Bokf›ringsdato;
                           SVE=Bokf”ringsdatum];
                SourceExpr=PostingDate }

    { 1100528623;2;Field  ;
                CaptionML=[DEU=Belegdatum;
                           ENU=Document Date;
                           NLD=Documentdatum;
                           NOR=Dokumentdato;
                           SVE=Dokumentdatum];
                SourceExpr=DocumentDate }

    { 1100528601;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100528602;2;Field  ;
                SourceExpr="Service Contract No.";
                Editable=FALSE }

    { 1100528627;2;Field  ;
                SourceExpr="Contract Description" }

    { 1100528632;2;Field  ;
                SourceExpr="Contract Description 2" }

    { 1100528628;2;Field  ;
                SourceExpr="Customer No." }

    { 1100528631;2;Field  ;
                CaptionML=[DEU=Debitor Name;
                           ENU=Customer Name;
                           NLD=Klantnaam;
                           NOR=Kundnavn;
                           SVE=Kundens namn];
                SourceExpr=GetCustomerName("Customer No.") }

    { 1100528630;2;Field  ;
                SourceExpr="Bill-to Customer No." }

    { 1100528633;2;Field  ;
                CaptionML=[DEU=Rech. an Name;
                           ENU=Bill-to Customer Name;
                           NLD=Factureren aan naam;
                           NOR="Faktura til-kunde, navn ";
                           SVE=Namn p† faktureringskund];
                SourceExpr=GetCustomerName("Bill-to Customer No.") }

    { 1100528629;2;Field  ;
                SourceExpr="Contract Manager" }

    { 1100528634;2;Field  ;
                CaptionML=[DEU=Verk„ufername;
                           ENU=Contract Manager Name;
                           NLD=Naam contractbeheerder;
                           NOR=Kontraktleders navn;
                           SVE=Kontrakthanterare, namn];
                SourceExpr=GetContractManagerName }

    { 1100528603;2;Field  ;
                SourceExpr="Invoice From";
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             ApplyFilters;
                           END;
                            }

    { 1100528608;2;Field  ;
                SourceExpr="Ending Date";
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             ApplyFilters;
                           END;
                            }

    { 1100528604;2;Field  ;
                SourceExpr="Invoiced Until";
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             ApplyFilters;
                           END;
                            }

    { 1100528605;2;Field  ;
                SourceExpr="Last Invoiced Until" }

    { 1100528606;2;Field  ;
                SourceExpr="Invoice Interval";
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             ApplyFilters;
                           END;
                            }

    { 1100528612;2;Field  ;
                Name=<Invoice Interval>;
                SourceExpr="Invoice Postpone Period";
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             ApplyFilters;
                           END;
                            }

    { 1100528618;2;Field  ;
                CaptionML=[DEU=N„chstes Rechnungstellungsdatum;
                           ENU=Next Invoicing Date;
                           NLD=Volgende factureringsdatum];
                SourceExpr=NextInvoicingDate }

    { 1100528616;2;Field  ;
                CaptionML=[DEU=Currency;
                           ENU=Currency;
                           NLD=Valuta;
                           NOR=Valuta;
                           SVE=Valuta];
                SourceExpr=MaintenanceInvoiceMgt.GetContractCurrency("Service Contract No.") }

    { 1100528614;2;Field  ;
                CaptionML=[DEU=Ratenbetrag;
                           ENU=Installment Amount;
                           NLD=Termijnbedrag;
                           NOR=Betalingsplansbel›p;
                           SVE=Betalplansbelopp];
                SourceExpr=MaintenanceInvoiceMgt.GetInstallmAmntByDate(Rec);
                Editable=FALSE;
                OnLookup=BEGIN
                           IF "Line No." = 0 THEN EXIT;
                           HandleInstallmentAmountLookup();
                         END;
                          }

    { 1100528613;2;Field  ;
                CaptionML=[DEU=Ratenbetrag MW;
                           ENU=Installment Amount (LCY);
                           NLD=Termijnbedrag (LV);
                           NOR=Betalingsplansbel›p (NOK);
                           SVE=Betalplansbelopp (BVA)];
                SourceExpr=MaintenanceInvoiceMgt.GetInstallmAmntLCYByDate(Rec);
                Editable=FALSE;
                OnLookup=BEGIN
                           IF "Line No." = 0 THEN EXIT;
                           HandleInstallmentAmountLookup();
                         END;
                          }

    { 1100528607;2;Field  ;
                SourceExpr=Description }

    { 1100528615;2;Field  ;
                SourceExpr="Invoice Period";
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             ApplyFilters;
                           END;
                            }

    { 1100528635;2;Field  ;
                SourceExpr=Chargeable }

    { 1100528609;2;Field  ;
                SourceExpr="Invoiced Price" }

    { 1100528610;2;Field  ;
                SourceExpr="Invoice in Process" }

    { 1100528611;2;Field  ;
                SourceExpr="Credit Memo in Process" }

    { 1100525000;2;Field  ;
                SourceExpr="Contract Type";
                Visible=False }

    { 1100525001;2;Field  ;
                SourceExpr="Contract Group";
                Visible=False }

    { 1100525002;2;Field  ;
                SourceExpr="Global Dimension 1 Code";
                Visible=false }

  }
  CODE
  {
    VAR
      TmpCustomer@1100528607 : TEMPORARY Record 18;
      MaintenanceInvoiceMgt@1100528600 : Codeunit 11012828;
      InvoiceForewardUntilDate@1100528601 : Date;
      InvoiceAfterwardsUntilDate@1100528602 : Date;
      PostingDate@1100528603 : Date;
      DocumentDate@1100528604 : Date;

    LOCAL PROCEDURE ApplyFilters@1100528605();
    VAR
      ContractInstallment@1100528600 : Record 11071707;
    BEGIN
      MaintenanceInvoiceMgt.GetAllInvoiceableInstallments(InvoiceForewardUntilDate, InvoiceAfterwardsUntilDate, ContractInstallment);
      ContractInstallment.COPYFILTERS(Rec);
      COPY(ContractInstallment);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ToggleChargeable@1100528603();
    VAR
      ContractInstallment@1100528600 : Record 11071707;
    BEGIN
      CurrPage.SETSELECTIONFILTER(ContractInstallment);
      MaintenanceInvoiceMgt.ToggleInstallmentsChargeable(ContractInstallment);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE CreateInvoices@1100528609();
    VAR
      ContractInstallment@1100528600 : Record 11071707;
    BEGIN
      CurrPage.SETSELECTIONFILTER(ContractInstallment);
      MaintenanceInvoiceMgt.CreateInvoicesBySelectedInstallments(
        ContractInstallment, InvoiceForewardUntilDate, InvoiceAfterwardsUntilDate, PostingDate, DocumentDate);
    END;

    LOCAL PROCEDURE GetCustomerName@1100528600(ICustomerNo@1100528601 : Code[20]) : Text;
    VAR
      Customer@1100528600 : Record 18;
    BEGIN
      IF TmpCustomer.GET(ICustomerNo) THEN
        EXIT(TmpCustomer.Name);
      IF Customer.GET(ICustomerNo) THEN BEGIN
        TmpCustomer := Customer;
        TmpCustomer.INSERT;
        EXIT(Customer.Name);
      END;
    END;

    LOCAL PROCEDURE GetContractManagerName@1100528601() : Text;
    VAR
      SalespersonPurchaser@1100528600 : Record 13;
    BEGIN
      CALCFIELDS("Contract Manager");
      IF SalespersonPurchaser.GET("Contract Manager") THEN
        EXIT(SalespersonPurchaser.Name);
    END;

    BEGIN
    END.
  }
}

