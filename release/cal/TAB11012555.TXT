OBJECT Table 11012555 Plant Inventory
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF LocationRec.GET(Location) THEN
                 Depot := LocationRec.Depot;
               FillPlantTransferNo;
             END;

    CaptionML=[ENU=Plant Inventory;
               NOR=Maskinlager;
               SVE=Maskinlager];
    PasteIsValid=No;
    LookupPageID=Page11012559;
    DrillDownPageID=Page11012559;
  }
  FIELDS
  {
    { 10  ;   ;Removed             ;Boolean       ;CaptionML=[ENU=Removed;
                                                              NOR=Fjernet;
                                                              SVE=Borttaget];
                                                   Editable=No }
    { 20  ;   ;Location            ;Code20        ;TableRelation="Plant Location".Code;
                                                   OnLookup=BEGIN
                                                              ShowPlantLocationList;
                                                            END;

                                                   CaptionML=[ENU=Location;
                                                              NOR=Plassering;
                                                              SVE=Lagerst„lle];
                                                   Editable=No }
    { 30  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   OnLookup=BEGIN
                                                              ShowPlantTypeList;
                                                            END;

                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 40  ;   ;Plant No.           ;Code10        ;TableRelation=IF (Bulk=CONST(No)) "Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS(Bulk);
                                                                IF Bulk AND ("Plant No." <> '') THEN BEGIN
                                                                  PlantNoRec.SETRANGE("Plant Type","Plant Type");
                                                                  PlantNoRec.SETRANGE("Stock No.","Plant No.");
                                                                  IF NOT PlantNoRec.FIND('-') THEN
                                                                    FIELDERROR("Plant No.");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              ShowPlantNumberList;
                                                            END;

                                                   CaptionML=[ENU=Plant No.;
                                                              NOR=Maskinnr.;
                                                              SVE=Maskinnr];
                                                   Editable=No }
    { 50  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr];
                                                   Editable=No }
    { 60  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   Editable=Yes }
    { 70  ;   ;Present from        ;Date          ;CaptionML=[ENU=Present from;
                                                              NOR=Finnes fra;
                                                              SVE=Finns fr†n];
                                                   Editable=No }
    { 75  ;   ;Rental Start Date   ;Date          ;CaptionML=[ENU=Rental Start Date;
                                                              NOR=Leie, Startdato;
                                                              SVE=Uthyrning, startdatum];
                                                   Editable=No }
    { 78  ;   ;Expected Return Depot;Code20       ;TableRelation="Plant Location" WHERE (Depot=CONST(Yes));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Expected Return Depot }
    { 79  ;   ;Expected return on  ;Date          ;OnValidate=BEGIN
                                                                IF ("Expected return on" <> 0D) AND ("Expected return on" < "Present from") THEN
                                                                  "Expected return on" := "Present from";
                                                              END;

                                                   CaptionML=[ENU=Expected Return on;
                                                              NOR=Forventet retur den;
                                                              SVE=F”rv„ntad retur den] }
    { 80  ;   ;Removed on          ;Date          ;CaptionML=[ENU=Removed on;
                                                              NOR=Fjernet den;
                                                              SVE=Borttaget den];
                                                   Editable=No }
    { 85  ;   ;Rental End Date     ;Date          ;CaptionML=[ENU=Rental End Date;
                                                              NOR=Leie, Sluttdato;
                                                              SVE=Utyrning, slutdatum];
                                                   Editable=No }
    { 90  ;   ;Depot               ;Boolean       ;FieldClass=Normal;
                                                   OnValidate=BEGIN
                                                                IF LocationRec.GET(Location) THEN
                                                                  Depot := LocationRec.Depot;
                                                              END;

                                                   CaptionML=[ENU=Depot;
                                                              NOR=Depot;
                                                              SVE=Dep†];
                                                   Editable=No }
    { 95  ;   ;Employee Location   ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Plant Location" WHERE (Code=FIELD(Location),
                                                                                             Employee No.=FILTER(<>'')));
                                                   CaptionML=[ENU=Employee Location;
                                                              NOR=Ansatt, lokasjon;
                                                              SVE=Anst„lld, plats];
                                                   Editable=No }
    { 100 ;   ;Bulk                ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type".Bulk WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=[ENU=Bulk;
                                                              NOR=Bulk;
                                                              SVE=Bulk];
                                                   Editable=No }
    { 110 ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              NOR=Dato filter;
                                                              SVE=Datumfilter];
                                                   Description=Present from Filter }
    { 120 ;   ;Sold                ;Boolean       ;CaptionML=[ENU=Sold;
                                                              NOR=Solgt;
                                                              SVE=S†ld];
                                                   Editable=No }
    { 130 ;   ;Sold Filter         ;Boolean       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Sold Filter;
                                                              NOR=Solgt filter;
                                                              SVE=S†lt filter] }
    { 135 ;   ;Quantity Filter     ;Decimal       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Quantity Filter;
                                                              NOR=Antall filter;
                                                              SVE=Antal filter] }
    { 140 ;   ;Arrival Order Type  ;Option        ;CaptionML=[ENU=Arrival Order Type;
                                                              NOR=Ankomstordretype;
                                                              SVE=Ankomstordertyp];
                                                   OptionCaptionML=[ENU=Receipt,Plant Order,Exit Order,Returned Exit;
                                                                    NOR=Kvittering,Maskinordre,Sluttordre,Returnert Avslutning;
                                                                    SVE=Inleverans,Maskinorder,Slutorder,Returnerat avslut];
                                                   OptionString=Receipt,Plant Order,Exit Order,ReturnedExit;
                                                   Editable=No }
    { 150 ;   ;Arrival Order       ;Code20        ;TableRelation=IF (Arrival Order Type=CONST(Plant Order)) "Plant Order"
                                                                 ELSE IF (Arrival Order Type=CONST(Exit Order)) "Exit Order"
                                                                 ELSE IF (Arrival Order Type=CONST(ReturnedExit)) "Returned Loss Order";
                                                   OnLookup=BEGIN
                                                              LookupArrivalOrder();
                                                            END;

                                                   CaptionML=[ENU=Arrival Order;
                                                              NOR=Ankomstordre;
                                                              SVE=Ankomstorder];
                                                   Editable=No }
    { 151 ;   ;Arrival Order Line  ;Integer       ;TableRelation=IF (Arrival Order Type=CONST(Plant Order)) "Plant Order Line"."Line No." WHERE (Plant Order No.=FIELD(Arrival Order))
                                                                 ELSE IF (Arrival Order Type=CONST(Exit Order)) "Exit Order Line"."Line No." WHERE (Exit-order No.=FIELD(Arrival Order))
                                                                 ELSE IF (Arrival Order Type=CONST(ReturnedExit)) "Returned Loss Order Line"."Line No." WHERE (Returned Loss Order No.=FIELD(Arrival Order));
                                                   CaptionML=[ENU=Arrival Order Line;
                                                              NOR=Ankomstordrerad;
                                                              SVE=Ankomstorderrad];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 152 ;   ;Arrival Order Line Descr. 1;Text100;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order Line".Description WHERE (Plant Order No.=FIELD(Arrival Order),
                                                                                                            Line No.=FIELD(Arrival Order Line)));
                                                   CaptionML=ENU=Arrival Order Line Descr. 1;
                                                   Description=(Only Plant Order);
                                                   Editable=No }
    { 153 ;   ;Arrival Order Line Descr. 2;Text50 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order Line"."Description 2" WHERE (Plant Order No.=FIELD(Arrival Order),
                                                                                                                Line No.=FIELD(Arrival Order Line)));
                                                   CaptionML=ENU=Arrival Order Line Descr. 2;
                                                   Description=(Only Plant Order);
                                                   Editable=No }
    { 155 ;   ;Removal Order Type  ;Option        ;CaptionML=[ENU=Removal Order Type;
                                                              NOR=Fjerningsordretype;
                                                              SVE=Borttagning av ordertyp];
                                                   OptionCaptionML=[ENU=,Plant Order,Exit Order;
                                                                    NOR=,Maskinordre,Sluttordre;
                                                                    SVE=,Maskinorder,Slutorder];
                                                   OptionString=,Plant Order,Exit Order;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 160 ;   ;Removal Order       ;Code20        ;TableRelation=IF (Removal Order Type=CONST(Plant Order)) "Plant Order"
                                                                 ELSE IF (Removal Order Type=CONST(Exit Order)) "Exit Order";
                                                   OnLookup=BEGIN
                                                              LookupRemovalOrder();
                                                            END;

                                                   CaptionML=[ENU=Removal Order;
                                                              NOR=Fjerningsordre;
                                                              SVE=Uttagsorder];
                                                   Editable=No }
    { 161 ;   ;Removal Order Line  ;Integer       ;TableRelation=IF (Removal Order Type=CONST(Plant Order)) "Plant Order Line"."Line No." WHERE (Plant Order No.=FIELD(Removal Order))
                                                                 ELSE IF (Removal Order Type=CONST(Exit Order)) "Exit Order Line"."Line No." WHERE (Exit-order No.=FIELD(Removal Order));
                                                   CaptionML=[ENU=Removal Order Line;
                                                              NOR=Fjerningsordrerad;
                                                              SVE=Borttagningsorderrad];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 170 ;   ;Removed to Location ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order"."To Location" WHERE (No.=FIELD(Removal Order),
                                                                                                         Posted=CONST(Yes)));
                                                   TableRelation="Plant Location";
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Removed to Location;
                                                              NOR=Flyttet til lokasjon;
                                                              SVE=Borttaget till lagerst„lle];
                                                   Editable=No }
    { 171 ;   ;Arrived from Location;Code20       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order"."From Location" WHERE (No.=FIELD(Arrival Order),
                                                                                                           Posted=CONST(Yes)));
                                                   TableRelation="Plant Location";
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Arrived from Location;
                                                   Editable=No }
    { 180 ;   ;Original Stock Line No.;Integer    ;CaptionML=[ENU=Original Stock Line No.;
                                                              NOR=Opprinnelig Lager, Radnr.;
                                                              SVE=Ursprungligt lager, radnr];
                                                   Editable=No }
    { 190 ;   ;Location Description;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Location".Description WHERE (Code=FIELD(Location)));
                                                   CaptionML=[ENU=Location Description;
                                                              NOR=Beskrivelse av lokasjon;
                                                              SVE=Beskrivning av lagerst„lle];
                                                   Editable=No }
    { 191 ;   ;Location Status     ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Location".Status WHERE (Code=FIELD(Location)));
                                                   CaptionML=[ENU=Location Status;
                                                              NOR=Plasseringsstatus];
                                                   OptionCaptionML=[ENU=Production,Technical Finished,Administrative Finished,Finished,Archive,Archived;
                                                                    NOR=Produksjon,Tekniskt Ferdig,Administrativt Ferdig,Ferdig,Arkiv,Arkivert;
                                                                    SVE=Produktion,Tekniskt f„rdig,Administrativt f„rdigt,F„rdigt,Arkiv,Arkiverad];
                                                   OptionString=Production,Technical Finished,Administrative Finished,Finished,Archive,Archived;
                                                   Editable=No }
    { 200 ;   ;Plant Type Description;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type".Description WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=[ENU=Plant Type Description;
                                                              NOR=Maskintype Beskrivelse;
                                                              SVE=Maskintyp beskrivning];
                                                   Editable=No }
    { 201 ;   ;Plant Type External ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type".External WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=ENU=Plant Type External;
                                                   Editable=No }
    { 202 ;   ;Weight / Unit       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type".Weight WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=ENU=Weight / Unit;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 203 ;   ;Current Price / Unit;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type"."Current Price" WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=ENU=Current Price / Unit;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 205 ;   ;Plant No. Description;Text50       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".Description WHERE (Plant Type=FIELD(Plant Type),
                                                                                                        No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Plant No. Description;
                                                              NOR=Maskinnr., Beskrivelse;
                                                              SVE=Maskinnr, beskrivning];
                                                   Editable=No }
    { 206 ;   ;Plant No. External  ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".External WHERE (Plant Type=FIELD(Plant Type),
                                                                                                     No.=FIELD(Plant No.)));
                                                   CaptionML=ENU=Plant No. External;
                                                   Editable=No }
    { 210 ;   ;Cum.Quantity Loc.-Plant Type;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Inventory".Quantity WHERE (Removed=CONST(No),
                                                                                                     Location=FIELD(Location),
                                                                                                     Plant Type=FIELD(Plant Type),
                                                                                                     Rate Code=FIELD(Rate Code Filter),
                                                                                                     Sold=FIELD(Sold Filter),
                                                                                                     Present from=FIELD(Date Filter),
                                                                                                     Quantity=FIELD(Quantity Filter),
                                                                                                     Plant Group=FIELD(Plant Group Filter)));
                                                   CaptionML=[ENU=Cum.Quantity Loc.-Plant Type;
                                                              NOR=Akkumulert antall lokasjon, maskintype;
                                                              SVE=Ackum. antal lagerst„llen, Maskinstyp];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 220 ;   ;Cum.Quantity Loc.-Plant No.;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Inventory".Quantity WHERE (Removed=CONST(No),
                                                                                                     Location=FIELD(Location),
                                                                                                     Plant Type=FIELD(Plant Type),
                                                                                                     Plant No.=FIELD(Plant No.),
                                                                                                     Rate Code=FIELD(Rate Code Filter),
                                                                                                     Sold=FIELD(Sold Filter),
                                                                                                     Present from=FIELD(Date Filter),
                                                                                                     Quantity=FIELD(Quantity Filter),
                                                                                                     Plant Group=FIELD(Plant Group Filter)));
                                                   CaptionML=[ENU=Cum.Quantity Loc.-Plant No.;
                                                              NOR=Akkumulert antall lokasjon, maskinnr.;
                                                              SVE=Ackum. antal lagerst„llen, Maskinnr];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 225 ;   ;Cum.Quantity Loc.-Rate Code;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Inventory".Quantity WHERE (Removed=CONST(No),
                                                                                                     Location=FIELD(Location),
                                                                                                     Plant Type=FIELD(Plant Type),
                                                                                                     Plant No.=FIELD(Plant No.),
                                                                                                     Rate Code=FIELD(Rate Code),
                                                                                                     Sold=FIELD(Sold Filter),
                                                                                                     Present from=FIELD(Date Filter),
                                                                                                     Quantity=FIELD(Quantity Filter),
                                                                                                     Plant Group=FIELD(Plant Group Filter)));
                                                   CaptionML=[ENU=Cum.Quantity Loc.-Plant--Rate Code;
                                                              NOR=Akkumulert antall lokasjon, maskinsatskode;
                                                              SVE=Ackum. antal lagerst„llen, Maskinsavgiftskod];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 230 ;   ;Invoiced until      ;Date          ;CaptionML=[ENU=Invoiced until;
                                                              NOR=Fakturert frem til;
                                                              SVE=Fakturerad till];
                                                   Editable=No }
    { 240 ;   ;Completely Invoiced ;Boolean       ;OnValidate=BEGIN
                                                                IF Removed AND
                                                                  ((LastRentalDay = "Invoiced until") OR
                                                                   ((LastRentalDay < "Rental Start Date") AND ("Invoiced until" = 0D)))
                                                                THEN
                                                                  "Completely Invoiced" := TRUE
                                                                ELSE
                                                                  "Completely Invoiced" := FALSE;
                                                              END;

                                                   CaptionML=[ENU=Completely Invoiced;
                                                              NOR="Fullstendig fakturert ";
                                                              SVE=F„rdigt fakturerat];
                                                   Editable=No }
    { 250 ;   ;Last Invoice No.    ;Code20        ;TableRelation=IF (Invoice Status=CONST(Proposal)) "Sales Header".No. WHERE (Document Type=CONST(Invoice Proposal))
                                                                 ELSE IF (Invoice Status=CONST(Temporary)) "Sales Header".No. WHERE (Document Type=CONST(Invoice))
                                                                 ELSE IF (Invoice Status=CONST(Posted)) "Sales Invoice Header".No.;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Last Invoice No.;
                                                              NOR=Siste Fakturanr.;
                                                              SVE=Senaste fakturanr];
                                                   Editable=No }
    { 260 ;   ;Last Invoice Line No.;Integer      ;CaptionML=[ENU=Last Invoice Line No.;
                                                              NOR=Siste Fakturaradnr.;
                                                              SVE=Senaste fakturaradnr];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 270 ;   ;Invoice Status      ;Option        ;CaptionML=[ENU=Invoice Status;
                                                              NOR=Fakturastatus;
                                                              SVE=Fakturastatus];
                                                   OptionCaptionML=[ENU=,Proposal,Temporary,Posted;
                                                                    NOR=,Forslag,Midlertidig,Bokf›rt;
                                                                    SVE=,F”rslag,Tillf„lligt,Bokf”rt];
                                                   OptionString=,Proposal,Temporary,Posted;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 280 ;   ;Previous Invoice No.;Code20        ;TableRelation="Sales Invoice Header".No.;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Previous Invoice No.;
                                                              NOR=Forrige Fakturanr.;
                                                              SVE=F”reg†ende fakturanr];
                                                   Editable=No }
    { 290 ;   ;Previous Invoice Line No.;Integer  ;CaptionML=[ENU=Previous Invoice Line No.;
                                                              NOR=Forrige Fakturaradnr;
                                                              SVE=F”reg†ende fakturaradnr];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 300 ;   ;Previous Invoiced Until;Date       ;CaptionML=[ENU=Previous Invoiced Until;
                                                              NOR=Forrige fakturert Frem til;
                                                              SVE=F”reg†ende fakturerat till];
                                                   Editable=No }
    { 305 ;   ;No. of Invoiced Days;Decimal       ;CaptionML=[ENU=Number of Invoiced Days;
                                                              NOR="Antall fakturerte Dager ";
                                                              SVE=Antal fakturerade dagar];
                                                   DecimalPlaces=0:0;
                                                   Editable=No }
    { 306 ;   ;Previous No. of Invoiced Days;Decimal;
                                                   CaptionML=[ENU=Previous Number of Invoiced Days;
                                                              NOR="Forrige antall fakturerte Dager ";
                                                              SVE=F”reg†ende antal fakturerade dagar];
                                                   DecimalPlaces=0:0;
                                                   Editable=No }
    { 310 ;   ;Manually Changed by ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Manually Changed by;
                                                              NOR=Manuellt Endrad av;
                                                              SVE=Manuellt „ndrad av];
                                                   Editable=No }
    { 320 ;   ;Rate Code           ;Code10        ;OnLookup=VAR
                                                              PlantRateCodeRec@1100525000 : Record 11020502;
                                                            BEGIN
                                                              PlantRateCodeRec.LookupPlantRateCode(Location, "Rate Code", TRUE, '', 0);
                                                            END;

                                                   CaptionML=[ENU=Rate Code;
                                                              NOR=Avgiftskode;
                                                              SVE=Avgiftskod];
                                                   Editable=No }
    { 325 ;   ;Rate Code Filter    ;Code10        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Rate Code Filter;
                                                              NOR=Avgiftskodefilter;
                                                              SVE=Avgiftskodfilter] }
    { 330 ;   ;Vendor No.          ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".Vendor WHERE (Plant Type=FIELD(Plant Type),
                                                                                                   No.=FIELD(Plant No.)));
                                                   TableRelation=Vendor;
                                                   CaptionML=[ENU=Vendor No.;
                                                              NOR=Leverand›rnr.;
                                                              SVE=Lev.nr];
                                                   Editable=No }
    { 332 ;   ;Purchase Order No.  ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number"."Purchase Order No." WHERE (Plant Type=FIELD(Plant Type),
                                                                                                                 No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Purchase Order No.;
                                                              NOR=Innkj›psordrenr.;
                                                              SVE=Ink”psordernr];
                                                   Editable=No }
    { 340 ;   ;Arrival Transport Order;Code20     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Transport Plant Order Line"."Transport Order No." WHERE (Plant Order No.=FIELD(Arrival Order)));
                                                   OnLookup=BEGIN
                                                              LookupTransportOrder(TRUE);
                                                            END;

                                                   CaptionML=[ENU=Arrival Transport Order;
                                                              NOR=Ankomsttransportordre;
                                                              SVE=Ankomsttransportorder];
                                                   Editable=No }
    { 345 ;   ;Removal Transport Order;Code20     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Transport Plant Order Line"."Transport Order No." WHERE (Plant Order No.=FIELD(Removal Order)));
                                                   OnLookup=BEGIN
                                                              LookupTransportOrder(FALSE);
                                                            END;

                                                   CaptionML=[ENU=Removal Transport Order;
                                                              NOR=Fjerning, Transportordre;
                                                              SVE=Borttagning, transportorder];
                                                   Editable=No }
    { 350 ;   ;Exit Order Location ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Exit Order".Location WHERE (No.=FIELD(Removal Order)));
                                                   TableRelation="Plant Location";
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Exit Order Location;
                                                              NOR=Sluttordre, lokasjon;
                                                              SVE=Slutorder, plats];
                                                   Description=Location of the Exit Order Header;
                                                   Editable=No }
    { 360 ;   ;Unit of Measure     ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type"."Unit of Measure" WHERE (Code=FIELD(Plant Type)));
                                                   TableRelation="Unit of Measure";
                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=Enhet;
                                                              SVE=M†ttenhet];
                                                   Editable=No }
    { 370 ;   ;Inspection No.      ;Code30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number"."Inspection No." WHERE (Plant Type=FIELD(Plant Type),
                                                                                                             No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Inspection No.;
                                                              NOR=Inspeksjonnr.;
                                                              SVE=Inspektionsnr];
                                                   Editable=No }
    { 380 ;   ;Employee Company    ;Text30        ;TableRelation=Company;
                                                   OnValidate=VAR
                                                                lvPlantLocRec@1100485000 : Record 11012554;
                                                              BEGIN
                                                                IF lvPlantLocRec.GET(Location) THEN BEGIN
                                                                  IF (lvPlantLocRec."Employee No." <> '') THEN
                                                                    TESTFIELD("Employee Company", lvPlantLocRec."Company Name");
                                                                END;

                                                                VALIDATE("Employee No.");
                                                                IF "Employee Company" = COMPANYNAME THEN
                                                                  "Employee Company" := '';
                                                              END;

                                                   CaptionML=[ENU=Employee Company;
                                                              NOR=Ansattes selskap;
                                                              SVE=Den anst„lldes f”retag] }
    { 381 ;   ;Employee No.        ;Code20        ;TableRelation=IF (Employee Company=FILTER('')) Employee;
                                                   OnValidate=VAR
                                                                lvEmplRec@1100485000 : Record 5200;
                                                                lvPlantLocRec@1100485001 : Record 11012554;
                                                              BEGIN
                                                                IF lvPlantLocRec.GET(Location) THEN BEGIN
                                                                  IF (lvPlantLocRec."Employee No." <> '') THEN
                                                                    TESTFIELD("Employee No.", lvPlantLocRec."Employee No.");
                                                                END;

                                                                IF "Employee No." = '' THEN
                                                                  EXIT;

                                                                IF "Employee Company" <> '' THEN
                                                                  lvEmplRec.CHANGECOMPANY("Employee Company");

                                                                lvEmplRec.GET("Employee No.");
                                                              END;

                                                   CaptionML=[ENU=Employee No.;
                                                              NOR=Ansattnr;
                                                              SVE=Anst„llningsnr] }
    { 390 ;   ;Element             ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order Line".Element WHERE (Plant Order No.=FIELD(Arrival Order),
                                                                                                        Line No.=FIELD(Arrival Order Line)));
                                                   OnLookup=VAR
                                                              PlantElementMgtCU@1100525003 : Codeunit 11012582;
                                                            BEGIN
                                                              IF "Arrival Order Type" <> "Arrival Order Type"::"Plant Order" THEN
                                                                EXIT;
                                                              PlantElementMgtCU.OnLookupElement(Location, Element, '', FALSE);
                                                            END;

                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element];
                                                   Description=PO-Line;
                                                   Editable=No }
    { 400 ;   ;Plant Category      ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type"."Plant Category" WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=[ENU=Plant Category;
                                                              NOR=Maskinkategori;
                                                              SVE=Maskinkategori];
                                                   Description=C031389;
                                                   Editable=No }
    { 410 ;   ;Sales Order Line No.;Integer       ;CaptionML=[ENU=Sales Order Line No.;
                                                              NOR=Ordrelinjenr.;
                                                              SVE=F”rs.orderradnr] }
    { 500 ;   ;CP Plant Number     ;Code30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number"."CP Plant Number" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                              No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=CP Plant No.;
                                                              NOR=CP-Maskinnr.;
                                                              SVE=CP-Maskinnr];
                                                   Description=BNBM (Att.: Flowfield can only be used for plant that exist in inventory with 'Plant No.');
                                                   Editable=No }
    { 510 ;   ;Rental Type         ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type"."Rental Type" WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=[ENU=Rental Type;
                                                              NOR=Leietype;
                                                              SVE=Uthyrningstyp];
                                                   OptionCaptionML=[ENU=Rental,Sales/Buy Back,Both;
                                                                    NOR=Leie,Salg/Tilbakekj›p,Begge;
                                                                    SVE=Uthyrning,F”rs„ljning/†terk”p,B†da];
                                                   OptionString=Rental,Sales/Buy Back,Both;
                                                   Editable=No }
    { 520 ;   ;Order via Plant Request;Boolean    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type"."Order via Plant Request" WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=ENU=Order via Plant Request;
                                                   Editable=No }
    { 530 ;   ;Department Code     ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Location"."Department Code" WHERE (Code=FIELD(Location)));
                                                   CaptionML=ENU=Department Code Location;
                                                   Description=C037722;
                                                   Editable=No }
    { 540 ;   ;Plant Transfer No.  ;Integer       ;CaptionML=ENU=Plant Transfer No.;
                                                   Description=Only for unique plant;
                                                   Editable=No }
    { 800 ;   ;Plant Group         ;Code20        ;TableRelation="Plant Group";
                                                   CaptionML=ENU=Plant Group }
    { 830 ;   ;Plant Group Filter  ;Code20        ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Plant Group Filter }
  }
  KEYS
  {
    {    ;Removed,Location,Plant Type,Plant No.,Rate Code,Line No.,Sales Order Line No.;
                                                   SumIndexFields=Quantity;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Removed,Plant Type,Plant No.,Rate Code,Location }
    {    ;Removed,Plant Type,Depot,Sold           ;SumIndexFields=Quantity }
    {    ;Removed,Location,Plant Type,Plant No.,Rate Code,Sold,Present from,Quantity;
                                                   SumIndexFields=Quantity }
    {    ;Removed,Location,Plant Type,Plant No.,Rate Code,Present from,Sales Order Line No. }
    {    ;Location,Plant Type,Plant No.,Rate Code,Present from,Removed on }
    {    ;Location,Plant Type,Plant No.,Present from }
    {    ;Plant Type,Plant No.,Rate Code,Present from,Removed on,Location }
    {    ;Plant Type,Plant No.,Present from        }
    {    ;Completely Invoiced,Location,Plant Type,Plant No.,Rate Code,Present from }
    {    ;Invoice Status,Last Invoice No.,Last Invoice Line No. }
    {    ;Plant Type,Plant No.,Plant Transfer No.  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      LocationRec@11012000 : Record 11012554;
      PlantNoRec@11012001 : Record 11012552;
      VendRec@1100525000 : Record 23;
      PlantLookupMgt@1100409000 : Codeunit 11012590;

    PROCEDURE PlantDescription@1() : Text[50];
    BEGIN
      IF ("Plant No." <> '') AND ("Plant No." <> '0') THEN BEGIN
        CALCFIELDS("Plant No. Description");
        IF "Plant No. Description" <> '' THEN
          EXIT("Plant No. Description");
      END;
      CALCFIELDS("Plant Type Description");
      EXIT("Plant Type Description");
    END;

    PROCEDURE GetLineNo@13(lInventRec@11012000 : Record 11012555) : Integer;
    VAR
      lLineNo@11012001 : Integer;
    BEGIN
      WITH lInventRec DO BEGIN
        RESET;
        SETRANGE(Removed,Removed);
        SETRANGE(Location,Location);
        SETRANGE("Plant Type","Plant Type");
        SETRANGE("Plant No.","Plant No.");
        SETRANGE("Rate Code","Rate Code");
        SETRANGE("Sales Order Line No.", "Sales Order Line No.");
        IF FINDLAST THEN
          lLineNo := "Line No." + 1
        ELSE
          lLineNo := 1;
      END;
      EXIT(lLineNo);
    END;

    PROCEDURE CompressedQuantity@6(Details@11012000 : 'LedgerEntry,PlantType,PlantNo,RateCode';InclNegInventory@1100409000 : Boolean) : Decimal;
    BEGIN
      IF Details <> Details::LedgerEntry THEN BEGIN
        IF InclNegInventory THEN
          SETRANGE("Quantity Filter")  //Reset
        ELSE
          SETFILTER("Quantity Filter", '>=%1', 0);  // Not applied for LedgerEntry Level
      END;
      CASE Details OF
        Details::PlantType:
          BEGIN
            SETRANGE("Sold Filter",FALSE);
            CALCFIELDS("Cum.Quantity Loc.-Plant Type");
            SETRANGE("Sold Filter");
            SETRANGE("Quantity Filter");
            EXIT("Cum.Quantity Loc.-Plant Type");
          END;
        Details::PlantNo:
          BEGIN
            SETRANGE("Sold Filter",FALSE);
            CALCFIELDS("Cum.Quantity Loc.-Plant No.");
            SETRANGE("Sold Filter");
            SETRANGE("Quantity Filter");
            EXIT("Cum.Quantity Loc.-Plant No.");
          END;
        Details::RateCode:
          BEGIN
            SETRANGE("Sold Filter",FALSE);
            CALCFIELDS("Cum.Quantity Loc.-Rate Code");
            SETRANGE("Sold Filter");
            SETRANGE("Quantity Filter");
            EXIT("Cum.Quantity Loc.-Rate Code");
          END;
        Details::LedgerEntry:
          IF Sold THEN
            EXIT(0)
          ELSE
            EXIT(Quantity);
      END;
    END;

    PROCEDURE SoldQuantity@3(Details@11012000 : 'LedgerEntry,PlantType,PlantNo,RateCode') : Decimal;
    BEGIN
      CASE Details OF
        Details::PlantType:
          BEGIN
            SETRANGE("Sold Filter",TRUE);
            CALCFIELDS("Cum.Quantity Loc.-Plant Type");
            SETRANGE("Sold Filter");
            EXIT("Cum.Quantity Loc.-Plant Type");
          END;
        Details::PlantNo:
          BEGIN
            SETRANGE("Sold Filter",TRUE);
            CALCFIELDS("Cum.Quantity Loc.-Plant No.");
            SETRANGE("Sold Filter");
            EXIT("Cum.Quantity Loc.-Plant No.");
          END;
        Details::RateCode:
          BEGIN
            SETRANGE("Sold Filter",TRUE);
            CALCFIELDS("Cum.Quantity Loc.-Rate Code");
            SETRANGE("Sold Filter");
            EXIT("Cum.Quantity Loc.-Rate Code");
          END;
        Details::LedgerEntry:
          IF Sold THEN
            EXIT(Quantity)
          ELSE
            EXIT(0);
      END;
    END;

    PROCEDURE PlantDescr@2(Details@11012000 : 'LedgerEntry,PlantType,PlantNo,RateCode') : Text[50];
    BEGIN
      IF Details = Details::PlantType THEN BEGIN
        CALCFIELDS("Plant Type Description");
        EXIT("Plant Type Description");
      END;

      EXIT(PlantDescription);
    END;

    PROCEDURE LastRentalDay@17() : Date;
    BEGIN
      IF ("Rental End Date" <> 0D) AND ("Rental End Date" < "Removed on") THEN
        EXIT("Rental End Date")
      ELSE
        EXIT("Removed on");
    END;

    PROCEDURE LookupArrivalOrder@1100525002();
    BEGIN
      PlantLookupMgt.PlantInventoryArrivalOrder(Rec);
    END;

    PROCEDURE LookupRemovalOrder@1100525003();
    BEGIN
      PlantLookupMgt.PlantInventoryRemovalOrder(Rec);
    END;

    PROCEDURE LookupTransportOrder@1100485000(IModeArrival@1100485000 : Boolean);
    BEGIN
      IF IModeArrival THEN
        PlantLookupMgt.PlantInventoryArrivalTransportOrder(Rec)
      ELSE
        PlantLookupMgt.PlantInventoryRemovalTransportOrder(Rec);
    END;

    PROCEDURE LookupEmployee@1100485011(IEditable@1100485001 : Boolean);
    VAR
      lvEmplRec@1100485000 : Record 5200;
    BEGIN
      IF "Employee Company" <> '' THEN
        lvEmplRec.CHANGECOMPANY("Employee Company");
      lvEmplRec.SETRANGE(Status, lvEmplRec.Status::Active);
      lvEmplRec."No." := "Employee No.";
      IF NOT IEditable THEN
        PAGE.RUNMODAL(0,lvEmplRec)
      ELSE BEGIN
        IF PAGE.RUNMODAL(0,lvEmplRec) = ACTION::LookupOK THEN
          VALIDATE("Employee No.",lvEmplRec."No.");
      END;
    END;

    PROCEDURE GetVendorName@1100525000() : Text[100];
    BEGIN
      CALCFIELDS("Vendor No.");
      IF "Vendor No." <> ''THEN BEGIN
        IF VendRec.GET("Vendor No.") THEN
          EXIT(VendRec.Name);
      END;
      EXIT('');
    END;

    PROCEDURE GetElementReturnedExit@1100525001() : Code[20];
    VAR
      ReturnLossOrderLineRec@1100525000 : Record 11012656;
    BEGIN
      IF "Arrival Order Type" = "Arrival Order Type"::ReturnedExit THEN BEGIN
        IF ReturnLossOrderLineRec.GET("Arrival Order", "Arrival Order Line") THEN
          EXIT(ReturnLossOrderLineRec."To Element");
      END;
      EXIT('');
    END;

    PROCEDURE ActualMeterReading@1100529005() : Decimal;
    VAR
      PlantMeterType@1100529001 : Record 11229921;
    BEGIN
      //DP00614
      IF ("Plant Type" = '') OR ("Plant No." = '') OR ("Plant No." = '0') THEN
        EXIT(0);
      EXIT(PlantMeterType.ActualMeterReading("Plant Type", "Plant No.", '', ''));
    END;

    PROCEDURE ActualMeterReadingUnit@1100529009() : Code[10];
    VAR
      PlantMeterType@1100529001 : Record 11229921;
      MeterReadingType@1100529000 : Record 11072670;
      PlantMeter@1100529751 : Code[10];
      MeterType@1100529750 : Code[10];
    BEGIN
      //DP00614
      IF ("Plant Type" = '') OR ("Plant No." = '') OR ("Plant No." = '0') THEN
        EXIT('');
      PlantMeterType.DetermineMeterAndMeterType_PlantNo("Plant Type", "Plant No.", PlantMeter, MeterType);
      IF MeterType <> '' THEN BEGIN
        IF MeterReadingType.GET(MeterType) THEN
          EXIT(MeterReadingType."Unit of Measure");
      END;
      EXIT('');
    END;

    PROCEDURE DrillDownMeterReading@1100529011();
    VAR
      PlantMeterType@1100529002 : Record 11229921;
    BEGIN
      //DP00614
      TESTFIELD("Plant Type");
      TESTFIELD("Plant No.");
      IF "Plant No." = '0' THEN
        FIELDERROR("Plant No.");
      PlantMeterType.ShowMeterReadings_General("Plant Type", "Plant No.", '', '', 0, '');
    END;

    PROCEDURE GetPlantLocationByPlantNumber@1100528800(iPlantType@1100528800 : Code[20];iPlantNumber@1100528801 : Code[10];VAR OPlantLocation@1100528802 : Code[20]) : Boolean;
    BEGIN
      SETRANGE(Removed, FALSE);
      SETRANGE("Plant Type", iPlantType);
      SETRANGE("Plant No.", iPlantNumber);
      IF FINDFIRST THEN BEGIN
        OPlantLocation := Location;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE ShowPlantLocationList@1100525004();
    VAR
      PlantLocation@1100525000 : Record 11012554;
    BEGIN
      IF Rec.CURRENTCOMPANY <> COMPANYNAME THEN
        PlantLocation.CHANGECOMPANY(Rec.CURRENTCOMPANY);
      PlantLocation.Code := Location;
      PAGE.RUNMODAL(0, PlantLocation);
    END;

    PROCEDURE ShowPlantTypeList@1100529001();
    VAR
      PlantType@1100525000 : Record 11012551;
    BEGIN
      IF Rec.CURRENTCOMPANY <> COMPANYNAME THEN
        PlantType.CHANGECOMPANY(Rec.CURRENTCOMPANY);
      PlantType.Code := "Plant Type";
      PAGE.RUNMODAL(0, PlantType);
    END;

    PROCEDURE ShowPlantNumberList@1100529002();
    VAR
      PlantNumber@1100525000 : Record 11012552;
    BEGIN
      IF Rec.CURRENTCOMPANY <> COMPANYNAME THEN
        PlantNumber.CHANGECOMPANY(Rec.CURRENTCOMPANY);
      PlantNumber.SETRANGE("Plant Type", "Plant Type");
      PlantNumber."Plant Type" := "Plant Type";
      PlantNumber."No." := "Plant No.";
      PAGE.RUNMODAL(0, PlantNumber);
    END;

    PROCEDURE FillPlantTransferNo@1100529004();
    VAR
      PlantInventory@1100529000 : Record 11012555;
    BEGIN
      IF ("Plant Transfer No." <> 0) OR ("Plant No." = '') OR ("Plant No." = '0') THEN
        EXIT;
      CALCFIELDS(Bulk);
      IF Bulk THEN
        EXIT;
      PlantInventory.SETCURRENTKEY("Plant Type", "Plant No.", "Plant Transfer No.");
      PlantInventory.SETRANGE("Plant Type", "Plant Type");
      PlantInventory.SETRANGE("Plant No.", "Plant No.");
      IF NOT PlantInventory.FINDLAST THEN
        "Plant Transfer No." := 1
      ELSE
        "Plant Transfer No." := PlantInventory."Plant Transfer No." + 1;
    END;

    PROCEDURE HasCurrentRentalAgreement@1100529003() : Boolean;
    VAR
      PlantRentalAgreement@1100525000 : Record 11229935;
    BEGIN
      IF ("Plant No." = '') OR ("Plant No." = '0') THEN
        EXIT(FALSE);
      IF Rec.CURRENTCOMPANY <> COMPANYNAME THEN
        PlantRentalAgreement.CHANGECOMPANY(Rec.CURRENTCOMPANY);
      PlantRentalAgreement.SETRANGE("Plant Type", "Plant Type");
      PlantRentalAgreement.SETRANGE("Plant No.", "Plant No.");
      PlantRentalAgreement.SETFILTER("Starting Date", '<=%1', WORKDATE);
      PlantRentalAgreement.SETFILTER("Ending Date", '>=%1', WORKDATE);
      EXIT(NOT PlantRentalAgreement.ISEMPTY);
    END;

    PROCEDURE GetLocationCurrentRentalAgreement@1100529006(VAR InvoiceLocAlways@1100529000 : Boolean) : Code[20];
    VAR
      PlantRentalAgreement@1100525000 : Record 11229935;
    BEGIN
      InvoiceLocAlways := FALSE;
      IF ("Plant No." = '') OR ("Plant No." = '0') THEN
        EXIT('');
      IF Rec.CURRENTCOMPANY <> COMPANYNAME THEN
        PlantRentalAgreement.CHANGECOMPANY(Rec.CURRENTCOMPANY);
      PlantRentalAgreement.SETRANGE("Plant Type", "Plant Type");
      PlantRentalAgreement.SETRANGE("Plant No.", "Plant No.");
      PlantRentalAgreement.SETFILTER("Starting Date", '<=%1', WORKDATE);
      PlantRentalAgreement.SETFILTER("Ending Date", '>=%1', WORKDATE);
      IF PlantRentalAgreement.FINDFIRST THEN BEGIN
        InvoiceLocAlways := (PlantRentalAgreement."Invoice Agreement Location" = PlantRentalAgreement."Invoice Agreement Location"::Always);
        EXIT(PlantRentalAgreement."Plant Location");
      END;
      EXIT('');
    END;

    PROCEDURE SetLocationFilterToLocationsOfSameProject@1100528400();
    VAR
      PlantLocation@1100528400 : Record 11012554;
      PlantLocation2@1100528402 : Record 11012554;
      LocationFilter@1100528403 : Text;
      I@1100528404 : Integer;
    BEGIN
      PlantLocation.GET(Location);
      PlantLocation.TESTFIELD("Project No.");
      LocationFilter := PlantLocation.Code;

      PlantLocation2.SETRANGE("Company Name", PlantLocation."Company Name");
      PlantLocation2.SETRANGE("Project No.", PlantLocation."Project No.");
      PlantLocation2.SETFILTER(Code, '<>%1', PlantLocation.Code);
      IF PlantLocation2.FINDSET THEN
        REPEAT
          LocationFilter := LocationFilter + '|' + PlantLocation2.Code;
        UNTIL PlantLocation2.NEXT = 0;

      FOR I := 10 DOWNTO 0 DO BEGIN
        FILTERGROUP(I);
        SETRANGE(Location);
      END;

      SETFILTER(Location, LocationFilter);
    END;

    PROCEDURE RunExpectedReturn@1100527350();
    VAR
      PlantInventory@1100527350 : Record 11012555;
    BEGIN
      IF Rec.CURRENTCOMPANY <> COMPANYNAME THEN
        PlantInventory.CHANGECOMPANY(Rec.CURRENTCOMPANY);

      IF PlantInventory.GET(Removed, Location, "Plant Type", "Plant No.", "Rate Code", "Line No.", "Sales Order Line No.") THEN BEGIN
        PlantInventory.SETRECFILTER;
        PAGE.RUNMODAL(PAGE::"Expected Return", PlantInventory);
      END;
    END;

    BEGIN
    {
      4PS 03-01-17 UKR-C25593 KD: Multiple meter readings (BI049) - changed triggers ActualMeterReading, ActualMeterReadingUnit, NextMeterReadingAt, DrillDownMeterReading
    }
    END.
  }
}

