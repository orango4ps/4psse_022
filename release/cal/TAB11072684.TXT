OBJECT Table 11072684 Plant Inspection Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Index Date");
             END;

    OnDelete=VAR
               CancelledPlantInspLine@1100529000 : Record 11072683;
             BEGIN
               IF Level IN [Level::"Base Inspection List", Level::"Plant Type"] THEN BEGIN
                 IF CancelledPlantInspLine.ISEMPTY THEN BEGIN
                   CancelledPlantInspLine.RESET;
                   CancelledPlantInspLine.SETCURRENTKEY(
                     "Level (Cancelled)","Plant Type (Cancelled)","Maintenance Scheme (Cancelled)","Base Insp. List (Cancelled)","Line No. (Cancelled)");
                   CancelledPlantInspLine.SETRANGE("Level (Cancelled)", Level);
                   CancelledPlantInspLine.SETRANGE("Plant Type (Cancelled)", "Plant Type");
                   CancelledPlantInspLine.SETRANGE("Maintenance Scheme (Cancelled)", "Maintenance Scheme");
                   CancelledPlantInspLine.SETRANGE("Base Insp. List (Cancelled)", "Base Inspection List");
                   CancelledPlantInspLine.SETRANGE("Line No. (Cancelled)", "Line No.");
                   CancelledPlantInspLine.DELETEALL;
                 END;
               END;
             END;

    OnRename=VAR
               CancelledPlantInspLine@1100529000 : Record 11072683;
             BEGIN
               TESTFIELD(Level, xRec.Level);
               TESTFIELD("Plant Type", xRec."Plant Type");
               TESTFIELD("Plant No.", xRec."Plant No.");
               TESTFIELD("Maintenance Scheme", xRec."Maintenance Scheme");
               TESTFIELD("Index Date", xRec."Index Date");
               TESTFIELD("Line No.");
               IF ("Line No." <> 0) AND ("Line No." <> xRec."Line No.") THEN BEGIN
                 IF Level IN [Level::"Base Inspection List", Level::"Plant Type"] THEN BEGIN
                   CancelledPlantInspLine.SETCURRENTKEY(
                     "Level (Cancelled)","Plant Type (Cancelled)","Maintenance Scheme (Cancelled)","Base Insp. List (Cancelled)","Line No. (Cancelled)");
                   CancelledPlantInspLine.SETRANGE("Level (Cancelled)", Level);
                   CancelledPlantInspLine.SETRANGE("Plant Type (Cancelled)", "Plant Type");
                   CancelledPlantInspLine.SETRANGE("Maintenance Scheme (Cancelled)", "Maintenance Scheme");
                   CancelledPlantInspLine.SETRANGE("Base Insp. List (Cancelled)", "Base Inspection List");
                   CancelledPlantInspLine.SETRANGE("Line No. (Cancelled)", xRec."Line No.");
                   IF NOT CancelledPlantInspLine.ISEMPTY THEN
                     TESTFIELD("Line No.", xRec."Line No.");
                 END;
               END;
             END;

    CaptionML=ENU=Plant Inspection Line;
  }
  FIELDS
  {
    { 10  ;   ;Level               ;Option        ;CaptionML=[ENU=Level;
                                                              NOR=Niv†;
                                                              SVE=Niv†];
                                                   OptionCaptionML=ENU=Base Inspection List,Plant Type,Plant Number;
                                                   OptionString=Base Inspection List,Plant Type,Plant Number;
                                                   Editable=No }
    { 15  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type".Code;
                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp];
                                                   Editable=No }
    { 20  ;   ;Plant No.           ;Code20        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   CaptionML=[ENU=Plant No.;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   Editable=No }
    { 25  ;   ;Maintenance Scheme  ;Code20        ;TableRelation="Plant Stnd. Maintenance Scheme".Code;
                                                   CaptionML=[ENU=Maintenance Scheme;
                                                              NOR=Vedlikeholdsskjema;
                                                              SVE=Underh†llsschema];
                                                   Editable=No }
    { 30  ;   ;Index Date          ;Date          ;CaptionML=[ENU=Index Date;
                                                              NOR=Indeksdato;
                                                              SVE=Indexdatum];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 40  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnummer];
                                                   Editable=No }
    { 50  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF (xRec.Type <> Type) AND (Type = Type::Group) THEN BEGIN
                                                                  "Field Type" := "Field Type"::" ";
                                                                  "Unit Of Measure" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=Group,Line;
                                                                    NOR=Gruppe,Rad;
                                                                    SVE=Grupp,Rad];
                                                   OptionString=Group,Line }
    { 60  ;   ;Inspection Code     ;Code20        ;TableRelation=IF (Type=CONST(Group)) "Plant Inspection Group"
                                                                 ELSE IF (Type=CONST(Line)) "Base Plant Inspection Line";
                                                   OnValidate=VAR
                                                                PlantInspectionGroup@1100528601 : Record 11072678;
                                                                BasePlantInspectionLine@1100528600 : Record 11072679;
                                                              BEGIN
                                                                CASE Type OF
                                                                  Type::Group:
                                                                    BEGIN
                                                                      PlantInspectionGroup.GET("Inspection Code");
                                                                      VALIDATE(Description, PlantInspectionGroup.Description);
                                                                      VALIDATE("Description 2", PlantInspectionGroup."Description 2");
                                                                    END;
                                                                  Type::Line:
                                                                    BEGIN
                                                                      BasePlantInspectionLine.GET("Inspection Code");
                                                                      VALIDATE(Description, BasePlantInspectionLine.Description);
                                                                      VALIDATE("Description 2", BasePlantInspectionLine."Description 2");
                                                                      VALIDATE("Field Type", BasePlantInspectionLine."Field Type");
                                                                      VALIDATE("Unit Of Measure", BasePlantInspectionLine."Unit Of Measure");
                                                                      VALIDATE(Mandatory, BasePlantInspectionLine.Mandatory);

                                                                    END;
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              PlantInspectionGroup@1100528601 : Record 11072678;
                                                              BasePlantInspectionLine@1100528600 : Record 11072679;
                                                              PlantInspectionGroupCode@1100528602 : Code[10];
                                                            BEGIN
                                                              CASE Type OF
                                                                Type::Group:
                                                                  BEGIN
                                                                    IF PlantInspectionGroup.GET("Inspection Code") THEN;
                                                                    IF PAGE.RUNMODAL(0, PlantInspectionGroup) = ACTION::LookupOK THEN
                                                                      VALIDATE("Inspection Code", PlantInspectionGroup.Code);
                                                                  END;
                                                                Type::Line:
                                                                  BEGIN
                                                                    PlantInspectionGroupCode := GetPlantInspectionGroupCode;
                                                                    IF PlantInspectionGroupCode <> '' THEN
                                                                      BasePlantInspectionLine.SETFILTER("Inspection Group Code", '%1|%2', '', PlantInspectionGroupCode);
                                                                    IF BasePlantInspectionLine.GET("Inspection Code") THEN;
                                                                    IF PAGE.RUNMODAL(0, BasePlantInspectionLine) = ACTION::LookupOK THEN
                                                                      VALIDATE("Inspection Code", BasePlantInspectionLine.Code);
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Inspection Code;
                                                              NOR=Inspeksjonskode;
                                                              SVE=Inspektionskod] }
    { 70  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 80  ;   ;Field Type          ;Option        ;OnValidate=BEGIN
                                                                IF "Field Type" = "Field Type"::" " THEN
                                                                  TESTFIELD(Type, Type::Group);

                                                                IF (CurrFieldNo = FIELDNO("Field Type")) AND
                                                                   ((("Field Type" IN ["Field Type"::Option, "Field Type"::"Yes/No"]) OR
                                                                     (xRec."Field Type" IN ["Field Type"::Option, "Field Type"::"Yes/No"])) AND
                                                                    ("Field Type" <> xRec."Field Type"))
                                                                THEN
                                                                  ERROR(Text000, FIELDCAPTION("Field Type"));
                                                              END;

                                                   CaptionML=[ENU=Field Type;
                                                              NOR=Field Type;
                                                              SVE=Field Type];
                                                   OptionCaptionML=[ENU="Date,Value,Text,Option,Yes/No,,,,, ";
                                                                    SVE="Datum,V„rde,Text,Alternativ,Ja/Nej,,,,, "];
                                                   OptionString=[Date,Value,Text,Option,Yes/No,,,,, ] }
    { 90  ;   ;Unit Of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=[ENU=Unit Of Measure;
                                                              NOR=Enhet;
                                                              SVE=Enhet] }
    { 100 ;   ;Mandatory           ;Boolean       ;CaptionML=[ENU=Mandatory;
                                                              NOR=Obligatorisk;
                                                              SVE=Obligatoriskt] }
    { 110 ;   ;Base Inspection List;Code20        ;TableRelation="Base Plant Inspection List".Code;
                                                   CaptionML=[ENU=Base Inspection List;
                                                              NOR=Basisinspeksjonsliste;
                                                              SVE=Basinspektionslista] }
    { 120 ;   ;Inspection Group Code;Code10       ;TableRelation="Plant Inspection Group";
                                                   CaptionML=[ENU=Inspection Group Code;
                                                              NOR=Inspeksjonsguppekode;
                                                              SVE=Inspektionsgruppskod];
                                                   Description=Used as buffer;
                                                   Editable=No }
    { 130 ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2] }
  }
  KEYS
  {
    {    ;Level,Plant Type,Plant No.,Maintenance Scheme,Base Inspection List,Index Date,Line No.;
                                                   Clustered=Yes }
    {    ;Inspection Group Code,Line No.           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100525000 : TextConst 'ENU=%1 of type Option or Yes/No can only be modified on base level.';

    PROCEDURE GetPlantInspectionGroupCode@1100528601() : Code[10];
    VAR
      PlantInspectionLine@1100528600 : Record 11072684;
    BEGIN
      PlantInspectionLine := Rec;
      PlantInspectionLine.SETRECFILTER;
      PlantInspectionLine.SETFILTER("Line No.", '<%1', "Line No.");
      PlantInspectionLine.SETRANGE(Type, PlantInspectionLine.Type::Group);
      IF PlantInspectionLine.FINDLAST THEN
        EXIT(PlantInspectionLine."Inspection Code");
    END;

    PROCEDURE SetAsCancelled@1100528606(ICancelled@1100528600 : Boolean;ILevel@1100528602 : 'Base Inspection List,Standard Object,Contract Object,Standard Object (Calls),Object (Calls)';IPlantType@1100528606 : Code[20];IPlantNo@1100528603 : Code[20];IMaintenanceScheme@1100528607 : Code[20];IInspectionList@1100528608 : Code[20];IIndexDate@1100528604 : Date);
    VAR
      CancelledPlantInspectionLine@1100528601 : Record 11072683;
    BEGIN
      IF ICancelled THEN BEGIN
        CancelledPlantInspectionLine.Level := ILevel;
        CancelledPlantInspectionLine."Plant Type" := IPlantType;
        CancelledPlantInspectionLine."Plant No." := IPlantNo;
        CancelledPlantInspectionLine."Maintenance Scheme" := IMaintenanceScheme;
        CancelledPlantInspectionLine."Base Inspection List" := IInspectionList;
        CancelledPlantInspectionLine."Index Date" := IIndexDate;
        CancelledPlantInspectionLine."Level (Cancelled)" := Level;
        CancelledPlantInspectionLine."Plant Type (Cancelled)" := "Plant Type";
        CancelledPlantInspectionLine."Maintenance Scheme (Cancelled)" := "Maintenance Scheme";
        CancelledPlantInspectionLine."Base Insp. List (Cancelled)" := "Base Inspection List";
        CancelledPlantInspectionLine."Line No. (Cancelled)" := "Line No.";
        CancelledPlantInspectionLine.INSERT(TRUE);
      END ELSE BEGIN
        IF CancelledPlantInspectionLine.GET(
          ILevel, IPlantType, IPlantNo, IMaintenanceScheme, IInspectionList, IIndexDate,
          Level, "Plant Type", "Maintenance Scheme", "Base Inspection List", "Line No.")
        THEN
          CancelledPlantInspectionLine.DELETE(TRUE);
      END;
    END;

    PROCEDURE IsCancelled@1100528605(SourceLevel@1100528604 : 'Base Inspection List,Plant Type,Plant Number';SourcePlantType@1100528602 : Code[20];SourcePlantNo@1100528603 : Code[20];SourceMaintenanceScheme@1100528609 : Code[20];SourceInspectionList@1100528610 : Code[20];SourceIndexDate@1100528608 : Date;VAR OCancellationLevel@1100528803 : ' ,Plant Type, Plant Number';PlantCompany@1100529000 : Text) : Boolean;
    VAR
      CancelledPlantInspectionLine@1100528800 : Record 11072683;
      PlantMaintenanceManagement@1100528801 : Codeunit 11012872;
      IndexDate@1100528802 : Date;
    BEGIN
      OCancellationLevel := OCancellationLevel::" ";
      IF PlantCompany <> '' THEN
        CancelledPlantInspectionLine.CHANGECOMPANY(PlantCompany);

      PlantMaintenanceManagement.GetApplicableBaseInspectionListIndexDate(
        SourcePlantType, SourceInspectionList, SourceIndexDate, IndexDate, SourceLevel, SourceMaintenanceScheme, PlantCompany);

      IF CancelledPlantInspectionLine.GET(
        SourceLevel, SourcePlantType, SourcePlantNo, SourceMaintenanceScheme, SourceInspectionList, IndexDate,
        Level, "Plant Type", "Maintenance Scheme", "Base Inspection List", "Line No.")
      THEN BEGIN
          OCancellationLevel := SourceLevel;
          EXIT(TRUE);
      END;
      //Get index date for plant type level
      IndexDate := 0D;
      PlantMaintenanceManagement.GetApplicableBaseInspectionListIndexDate(
        SourcePlantType, SourceInspectionList, SourceIndexDate, IndexDate, SourceLevel-1, SourceMaintenanceScheme, PlantCompany);

      IF SourceLevel = 2 THEN BEGIN
        IF CancelledPlantInspectionLine.GET(
          SourceLevel-1, SourcePlantType, '', SourceMaintenanceScheme, SourceInspectionList, IndexDate,
          Level, "Plant Type", "Maintenance Scheme", "Base Inspection List", "Line No.")
        THEN BEGIN
            OCancellationLevel := SourceLevel-1;
            EXIT(TRUE);
        END;
      END;
    END;

    BEGIN
    END.
  }
}

