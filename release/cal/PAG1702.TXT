OBJECT Page 1702 Deferral Schedule
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Deferral Schedule;
               NOR=Tidsplan for periodisering;
               SVE=Periodiseringsschema];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table1701;
    DataCaptionFields=Start Date;
    PageType=Worksheet;
    ShowFilter=No;
    OnOpenPage=BEGIN
                 InitForm;
               END;

    OnInsertRecord=BEGIN
                     Changed := TRUE;
                   END;

    OnModifyRecord=BEGIN
                     Changed := TRUE;
                   END;

    OnDeleteRecord=BEGIN
                     Changed := TRUE;
                   END;

    OnQueryClosePage=VAR
                       DeferralHeader@1003 : Record 1701;
                       DeferralLine@1001 : Record 1702;
                       DeferralUtilities@1005 : Codeunit 1720;
                       EarliestPostingDate@1002 : Date;
                       RecCount@1004 : Integer;
                       ExpectedCount@1006 : Integer;
                     BEGIN
                       // Prevent closing of the window if the sum of the periods does not equal the Amount to Defer
                       IF DeferralHeader.GET("Deferral Doc. Type",
                            "Gen. Jnl. Template Name",
                            "Gen. Jnl. Batch Name",
                            "Document Type",
                            "Document No.","Line No.")
                       THEN BEGIN
                         CALCFIELDS("Schedule Line Total");
                         IF "Schedule Line Total" <> DeferralHeader."Amount to Defer" THEN
                           ERROR(TotalToDeferErr);
                       END;

                       DeferralLine.SETRANGE("Deferral Doc. Type","Deferral Doc. Type");
                       DeferralLine.SETRANGE("Gen. Jnl. Template Name","Gen. Jnl. Template Name");
                       DeferralLine.SETRANGE("Gen. Jnl. Batch Name","Gen. Jnl. Batch Name");
                       DeferralLine.SETRANGE("Document Type","Document Type");
                       DeferralLine.SETRANGE("Document No.","Document No.");
                       DeferralLine.SETRANGE("Line No.","Line No.");

                       RecCount := DeferralLine.COUNT;
                       ExpectedCount := DeferralUtilities.CalcDeferralNoOfPeriods("Calc. Method","No. of Periods","Start Date");
                       IF ExpectedCount <> RecCount THEN
                         FIELDERROR("No. of Periods");

                       DeferralLine.SETFILTER("Posting Date",'>%1',0D);
                       IF DeferralLine.FINDFIRST THEN BEGIN
                         EarliestPostingDate := DeferralLine."Posting Date";
                         IF EarliestPostingDate <> DeferralHeader."Start Date" THEN
                           ERROR(PostingDateErr);
                       END;
                     END;

    ActionList=ACTIONS
    {
      { 8       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=Actions;
                                 NOR=Handlinger;
                                 SVE=ètgÑrder] }
      { 10      ;2   ;Action    ;
                      Name=CalculateSchedule;
                      CaptionML=[ENU=Calculate Schedule;
                                 NOR=Beregn tidsplan;
                                 SVE=BerÑkna plan];
                      ToolTipML=[ENU=Calculate the deferral schedule by which revenue or expense amounts will be distributed over multiple accounting periods.;
                                 NOR=Beregner periodiseringstidsplanen som inntekts- og utgiftsbelõp skal distribueres etter i lõpet av flere regnskapsperioder.;
                                 SVE=BerÑkna periodiseringsschemat efter vilket intÑkts- eller utgiftsbelopp ska fîrdelas îver flera bokfîringsperioder.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CalculateCalendar;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //Changed := CalculateSchedule; //**4PS.o
                                 Changed := CalculateSchedule(DisplayDocumentLineDescription); //**4PS.n
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 2   ;0   ;Container ;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Group }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount to defer per period.;
                           NOR=Angir periodiseringsbelõpet per periode.;
                           SVE=Anger belopp att periodisera per period.];
                ApplicationArea=#Suite;
                SourceExpr="Amount to Defer" }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how the Amount field for each period is calculated. Straight-Line: Calculated per the number of periods, distributed by period length. Equal Per Period: Calculated per the number of periods, distributed evenly on periods. Days Per Period: Calculated per the number of days in the period. User-Defined: Not calculated. You must manually fill the Amount field for each period.;
                           NOR=Angir hvordan feltet Belõp for hver periode blir beregnet. Lineër: Beregnes per antallet perioder, distribuert etter periodelengde. Lik per periode: Beregnes per antallet perioder, distribuert jevnt i perioder. Dager per periode: Beregnes per antallet dager i perioden. Brukerdefinert: Blir ikke beregnet. Du mÜ fylle ut feltet Belõp manuelt for hver periode.;
                           SVE=Anger hur fÑltet Belopp fîr respektive period berÑknas. Rak: BerÑknas per antal perioder, fîrdelat per periodlÑngd. LinjÑr: BerÑknas per antal perioder, jÑmnt fîrdelat îver perioderna. Dagar per period: BerÑknas per antalet dagar i perioden. AnvÑndardefinierat: BerÑknas inte. Du mÜste manuellt fylla i fÑltet Belopp fîr varje period.];
                ApplicationArea=#Suite;
                SourceExpr="Calc. Method" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many accounting periods the total amounts will be deferred to.;
                           NOR=Angir hvor mange regnskapsperioder de totale belõpene blir periodisert til.;
                           SVE=Anger hur mÜnga bokfîringsperioder som totalsummorna ska periodiseras pÜ.];
                ApplicationArea=#Suite;
                SourceExpr="No. of Periods" }

    { 11  ;2   ;Field     ;
                Name=PostingDate;
                CaptionML=[ENU=Posting Date;
                           NOR=Bokfõringsdato;
                           SVE=Bokfîringsdatum];
                ToolTipML=[ENU=Specifies the posting date of the source document.;
                           NOR=Angir kildedokumentets bokfõringsdato.;
                           SVE=Anger det kÑlldokumentets bokfîringsdatum.];
                ApplicationArea=#Suite;
                SourceExpr=PostingDate;
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                Name=StartDateCalcMethod;
                CaptionML=[ENU=Start Date Calc. Method;
                           NOR=Metode for beregning av startdato;
                           SVE=BerÑkningsmetod fîr startdatum];
                ToolTipML=[ENU=Specifies the method used to calculate the start date that is used for calculating deferral amounts.;
                           NOR=Angir metoden som brukes til Ü beregne startdatoen som brukes for beregning av periodiseringsbelõp.;
                           SVE=Anger vilken metod som anvÑndes fîr att berÑkna startdatumet som anvÑndes fîr att berÑkna periodiserade belopp.];
                ApplicationArea=#Suite;
                SourceExpr=StartDateCalcMethod;
                Editable=FALSE }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when to start calculating deferral amounts.;
                           NOR=Angir nÜr beregning av periodiseringsbelõp skal begynne.;
                           SVE=Anger nÑr periodiserade belopp ska bîrja berÑknas.];
                ApplicationArea=#Suite;
                SourceExpr="Start Date" }

    { 7   ;1   ;Part      ;
                Name=DeferralSheduleSubform;
                ApplicationArea=#Suite;
                SubPageLink=Deferral Doc. Type=FIELD(Deferral Doc. Type),
                            Gen. Jnl. Template Name=FIELD(Gen. Jnl. Template Name),
                            Gen. Jnl. Batch Name=FIELD(Gen. Jnl. Batch Name),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page1703;
                PartType=Page }

  }
  CODE
  {
    VAR
      TotalToDeferErr@1000 : TextConst 'ENU=The sum of the deferred amounts must be equal to the amount in the Amount to Defer field.;NOR=Summen av periodiseringsbelõpene mÜ vëre lik belõpet i feltet Belõp Ü periodisere.;SVE=Summan av periodiseringsbeloppen mÜste vara lika med beloppet i fÑltet Belopp fîr periodisering.';
      Changed@1002 : Boolean;
      DisplayDeferralDocType@1005 : 'Purchase,Sales,G/L';
      DisplayGenJnlTemplateName@1012 : Code[10];
      DisplayGenJnlBatchName@1011 : Code[10];
      DisplayDocumentType@1010 : Integer;
      DisplayDocumentNo@1009 : Code[20];
      DisplayLineNo@1008 : Integer;
      PostingDateErr@1001 : TextConst 'ENU=You cannot specify a posting date that is not equal to the start date.;NOR=Du kan ikke angi en bokfõringsdato som ikke samsvarer med startdatoen.;SVE=Du kan inte ange ett bokfîringsdatum som inte Ñr detsamma som startdatumet.';
      PostingDate@1003 : Date;
      StartDateCalcMethod@1004 : Text;
      DisplayDocumentLineDescription@1100528400 : Text[50];

    [External]
    PROCEDURE SetParameter@1(DeferralDocType@1001 : Integer;GenJnlTemplateName@1006 : Code[10];GenJnlBatchName@1005 : Code[10];DocumentType@1003 : Integer;DocumentNo@1002 : Code[20];LineNo@1004 : Integer;DocumentLineDescription@1100528400 : Text[50]);
    BEGIN
      DisplayDeferralDocType := DeferralDocType;
      DisplayGenJnlTemplateName := GenJnlTemplateName;
      DisplayGenJnlBatchName := GenJnlBatchName;
      DisplayDocumentType := DocumentType;
      DisplayDocumentNo := DocumentNo;
      DisplayLineNo := LineNo;
      DisplayDocumentLineDescription := DocumentLineDescription;
    END;

    PROCEDURE GetParameter@2() : Boolean;
    BEGIN
      EXIT(Changed OR CurrPage.DeferralSheduleSubform.PAGE.GetChanged)
    END;

    [External]
    PROCEDURE InitForm@3();
    VAR
      DeferralTemplate@1000 : Record 1700;
      GenJournalLine@1001 : Record 81;
      PurchaseHeader@1002 : Record 38;
      SalesHeader@1003 : Record 36;
    BEGIN
      GET(DisplayDeferralDocType,DisplayGenJnlTemplateName,DisplayGenJnlBatchName,DisplayDocumentType,DisplayDocumentNo,DisplayLineNo);

      DeferralTemplate.GET("Deferral Code");
      StartDateCalcMethod := FORMAT(DeferralTemplate."Start Date");
      CASE DisplayDeferralDocType OF
        "Deferral Doc. Type"::"G/L":
          BEGIN
            GenJournalLine.GET(DisplayGenJnlTemplateName,DisplayGenJnlBatchName,DisplayLineNo);
            PostingDate := GenJournalLine."Posting Date";
          END;
        "Deferral Doc. Type"::Sales:
          BEGIN
            SalesHeader.GET(DisplayDocumentType,DisplayDocumentNo);
            PostingDate := SalesHeader."Posting Date";
          END;
        "Deferral Doc. Type"::Purchase:
          BEGIN
            PurchaseHeader.GET(DisplayDocumentType,DisplayDocumentNo);
            PostingDate := PurchaseHeader."Posting Date";
          END;
      END;
    END;

    BEGIN
    END.
  }
}

