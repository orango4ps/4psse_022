OBJECT Page 12057133 EX Test Send Ticket
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF500000;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Test Ticket SSO;
               SVE=Testa Ticket-SSO];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table12057118;
    PageType=Card;
    SourceTableTemporary=Yes;
    ShowFilter=No;
    OnInit=BEGIN
             CheckDefaultComp;
           END;

    OnOpenPage=BEGIN
                 TestSetTempRec;
                 OrigExEmailHeader.GET(OrigExEmailHeader.Type::"SSO Login Email");
               END;

    OnClosePage=BEGIN
                  IF NOT CONFIRM(SaveChanges,OrigExEmailHeader."Last Sent" <> "Last Sent") THEN BEGIN
                    IF ExEmailHeader.GET(ExEmailHeader.Type::"SSO Login Email") THEN
                      ExEmailHeader.DELETE;
                    ExEmailHeader.INIT;
                    ExEmailHeader := OrigExEmailHeader;
                    ExEmailHeader.INSERT;
                  END;

                END;

    ActionList=ACTIONS
    {
      { 1100285016;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100285015;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 SVE=Fu&nktion];
                      Image=Action }
      { 1100285010;2 ;Action    ;
                      Name=Test Send;
                      CaptionML=[ENU=Send Mail;
                                 SVE=Skicka E-post];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendMail;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ExEmailMgt@1100285000 : Codeunit 12013627;
                               BEGIN
                                 ExEmailMgt.SendSSOMail("Send To",FakeTicket);
                                 TestSetTempRec;
                                 CurrPage.UPDATE;
                                 MESSAGE(EmailSent);
                               END;
                                }
      { 1100285017;2 ;Action    ;
                      Name=Open SMTP;
                      CaptionML=[ENU=Open SMTP Settings;
                                 SVE=™ppna SMTP-inst„llningar];
                      RunObject=Page 409;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Setup;
                      PromotedCategory=Process }
      { 1100285018;2 ;Action    ;
                      Name=Refresh Settings;
                      CaptionML=[ENU=Reload Settings;
                                 SVE=Ladda om inst„llningar];
                      Image=Refresh;
                      OnAction=BEGIN
                                 TestSetTempRec;
                                 CurrPage.UPDATE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100285000;0;Container;
                ContainerType=ContentArea }

    { 1100285001;1;Group  ;
                Name=General;
                GroupType=Group }

    { 1100285011;2;Field  ;
                SourceExpr="Send To" }

    { 1100285009;2;Field  ;
                SourceExpr="Sender Name" }

    { 1100285008;2;Field  ;
                SourceExpr="Sender Address" }

    { 1100285012;2;Field  ;
                SourceExpr="Email Subject" }

    { 1100285020;2;Field  ;
                SourceExpr="Send Ticket as Text" }

    { 1100285007;2;Field  ;
                SourceExpr="Last Sent" }

    { 1100285013;1;Group  ;
                CaptionML=[ENU=NAV SMTP Setup;
                           SVE=NAV SMTP-inst„llningar];
                GroupType=Group }

    { 1100285006;2;Field  ;
                SourceExpr="SMTP Server" }

    { 1100285005;2;Field  ;
                SourceExpr=Authentication }

    { 1100285004;2;Field  ;
                SourceExpr="User ID" }

    { 1100285003;2;Field  ;
                SourceExpr="SMTP Server Port" }

    { 1100285002;2;Field  ;
                SourceExpr="Secure Connection" }

    { 1100285019;1;Group  ;
                CaptionML=[ENU=Company Information;
                           SVE=F”retagsinformation];
                GroupType=Group }

    { 1100285014;2;Field  ;
                SourceExpr="Current Default Company" }

    { 1100285021;2;Field  ;
                SourceExpr="Company Name" }

  }
  CODE
  {
    VAR
      FakeTicket@1100285000 : TextConst 'ENU=Password;SVE=L”senord';
      WrongDefaultComp@1100285001 : TextConst 'ENU=Warning. Current Company: %1 is not defined as default. Tickets are only required to be setup in the default ExFlow Web Company (%2). Continue anyway?;SVE=Varning. Nuvarande f”retag: %1 „r inte definerat som standardf”retag. Tickets beh”ver bara konfigueras i standard ExFlow-webbolaget  (%2). Forts„tta?';
      ExFlowAssistedSetup@1100285002 : Codeunit 12057128;
      ExEmailHeader@1100285004 : Record 12013619;
      SMTPSetup@1100285003 : Record 409;
      SSODesc@1100285005 : TextConst 'ENU=SSO Login;SVE=SSO Login';
      Canceled@1100285006 : TextConst 'ENU=Cancled;SVE=Avbruten';
      OrigExEmailHeader@1100285007 : Record 12013619;
      SaveChanges@1100285008 : TextConst 'ENU=Save current settings?;SVE=Spara senaste inst„llningar?';
      EmailSent@1100285009 : TextConst 'ENU=E-mail sent;SVE=E-postmeddelandet har skickats';

    LOCAL PROCEDURE TestSetTempRec@1100285000();
    BEGIN
      ExEmailHeader.GET(ExEmailHeader.Type::"SSO Login Email");
      SMTPSetup.GET;

      DELETEALL;
      INIT;
      "SMTP Server" := SMTPSetup."SMTP Server";
      Authentication := SMTPSetup.Authentication;
      "SMTP Server Port" := SMTPSetup."SMTP Server Port";
      "Secure Connection" := SMTPSetup."Secure Connection";
      "User ID" := SMTPSetup."User ID";

      "Sender Name" := ExEmailHeader."Sender Name";
      "Sender Address" := ExEmailHeader."Sender Address";
      "Last Sent" := ExEmailHeader."Last Sent";
      "Email Subject" := ExEmailHeader."Email Subject";
      "Send Ticket as Text" := ExEmailHeader."Send Ticket as Text";

      "Current Default Company" := ExFlowAssistedSetup.GetExFlowDefaultCompanyName;
      "Company Name" := COMPANYNAME;
      INSERT;
      GET;
    END;

    LOCAL PROCEDURE CheckDefaultComp@1100285001();
    BEGIN
      IF ExFlowAssistedSetup.GetExFlowDefaultCompanyName <> COMPANYNAME THEN
        IF NOT CONFIRM(STRSUBSTNO(WrongDefaultComp,COMPANYNAME,ExFlowAssistedSetup.GetExFlowDefaultCompanyName),FALSE) THEN
          ERROR(Canceled);

      IF SMTPSetup.ISEMPTY THEN BEGIN
        SMTPSetup.INIT;
        SMTPSetup.INSERT;
      END;

      ExEmailHeader.SETRANGE(Type,ExEmailHeader.Type::"SSO Login Email");
      IF ExEmailHeader.ISEMPTY THEN BEGIN
        ExEmailHeader.INIT;
        ExEmailHeader.VALIDATE(Type,ExEmailHeader.Type::"SSO Login Email");
        ExEmailHeader.VALIDATE(Description,SSODesc);
        ExEmailHeader.VALIDATE("Process Type",ExEmailHeader."Process Type"::"On Demand");
        ExEmailHeader.INSERT;
      END;
      COMMIT;

    END;

    BEGIN
    END.
  }
}

