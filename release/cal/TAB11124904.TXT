OBJECT Table 11124904 Resource Req. Collective-List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ResourcePlanningSetup@1100528600 : Record 11124900;
               NoSeriesManagement@1100528601 : Codeunit 396;
             BEGIN
               IF "No." = '' THEN BEGIN
                 ResourcePlanningSetup.GET;
                 ResourcePlanningSetup.TESTFIELD("Collective List Nos.");
                 NoSeriesManagement.InitSeries(ResourcePlanningSetup."Collective List Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;
               "Created By" := USERID;
               "Creation On" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               TESTFIELD(Status, Status::Open);
             END;

    OnDelete=VAR
               AdditionalInfoRequestWO@1100529000 : Record 11124915;
               ResourceRequestItemLine@1100528300 : Record 11124908;
               TransportCostRequestWO@1100529003 : Record 11124913;
               ResourceRequest@1100529001 : Record 11124901;
               ResourceReqCollListLine@1100529002 : Record 11124905;
             BEGIN
               AdditionalInfoRequestWO.SETCURRENTKEY("Collective List No.","Request No.");
               AdditionalInfoRequestWO.SETRANGE("Collective List No.", "No.");
               ResourceRequestItemLine.SETCURRENTKEY("Collective List No.","Request No.");
               ResourceRequestItemLine.SETRANGE("Collective List No.", "No.");
               TransportCostRequestWO.SETCURRENTKEY("Collective List No.","Request No.");
               TransportCostRequestWO.SETRANGE("Collective List No.", "No.");
               CASE Status OF
                 Status::Open:
                   BEGIN
                     AdditionalInfoRequestWO.MODIFYALL("Collective List No.", '');
                     ResourceRequestItemLine.MODIFYALL("Collective List No.", '');
                     TransportCostRequestWO.MODIFYALL("Collective List No.", '');
                   END;
                 Status::Released:
                   TESTFIELD(Status, Status::Open);
                 Status::Processed:
                   BEGIN
                     TESTFIELD("Invoice Status", "Invoice Status"::Posted);
                     IF AdditionalInfoRequestWO.FINDSET THEN BEGIN
                       REPEAT
                         IF ResourceRequest.GET(AdditionalInfoRequestWO."Request No.") THEN
                           ERROR(Text002, ResourceRequest.TABLECAPTION, ResourceRequest."No.", TABLECAPTION, "No.");
                         AdditionalInfoRequestWO.SETRANGE("Request No.", AdditionalInfoRequestWO."Request No.");
                         AdditionalInfoRequestWO.FINDLAST;
                         AdditionalInfoRequestWO.SETRANGE("Request No.");
                       UNTIL AdditionalInfoRequestWO.NEXT = 0;
                     END;
                     IF ResourceRequestItemLine.FINDSET THEN BEGIN
                       REPEAT
                         IF ResourceRequest.GET(ResourceRequestItemLine."Request No.") THEN
                           ERROR(Text002, ResourceRequest.TABLECAPTION, ResourceRequest."No.", TABLECAPTION, "No.");
                         ResourceRequestItemLine.SETRANGE("Request No.", ResourceRequestItemLine."Request No.");
                         ResourceRequestItemLine.FINDLAST;
                         ResourceRequestItemLine.SETRANGE("Request No.");
                       UNTIL ResourceRequestItemLine.NEXT = 0;
                     END;
                     IF TransportCostRequestWO.FINDSET THEN BEGIN
                       REPEAT
                         IF ResourceRequest.GET(TransportCostRequestWO."Request No.") THEN
                           ERROR(Text002, ResourceRequest.TABLECAPTION, ResourceRequest."No.", TABLECAPTION, "No.");
                         TransportCostRequestWO.SETRANGE("Request No.", TransportCostRequestWO."Request No.");
                         TransportCostRequestWO.FINDLAST;
                         TransportCostRequestWO.SETRANGE("Request No.");
                       UNTIL TransportCostRequestWO.NEXT = 0;
                     END;
                   END;
               END;

               ResourceReqCollListLine.SETRANGE("Collective List No.", "No.");
               ResourceReqCollListLine.DELETEALL;
             END;

    CaptionML=ENU=Resource Request Collective-List;
    LookupPageID=Page11126896;
    DrillDownPageID=Page11126896;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=VAR
                                                                ResourcePlanningSetup@1100528601 : Record 11124900;
                                                                NoSeriesManagement@1100528600 : Codeunit 396;
                                                              BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  ResourcePlanningSetup.GET;
                                                                  NoSeriesManagement.TestManual(ResourcePlanningSetup."Collective List Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 20  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=[ENU=Open,,,Released,,,Processed;
                                                                    NOR=èpen,,,Frigitt,,,Behandlet;
                                                                    SVE=÷ppen,,,Sl‰ppt,,,Behandlad];
                                                   OptionString=Open,,,Released,,,Processed;
                                                   Editable=No }
    { 30  ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   OnValidate=VAR
                                                                Customer@1100529000 : Record 18;
                                                              BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                                CheckNoCollectListLinesExists;
                                                                IF "Customer No." <> xRec."Customer No." THEN BEGIN
                                                                  Customer.GET("Customer No.");
                                                                  "Collect Invoices by" := Customer."Collect Rsrc. Req. Invoices by";
                                                                  "Request No." := '';
                                                                END;
                                                                CALCFIELDS("Customer Name");
                                                              END;

                                                   CaptionML=[ENU=Customer No.;
                                                              NOR=Kundenr.;
                                                              SVE=Kundnr];
                                                   NotBlank=Yes }
    { 31  ;   ;Customer Name       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=[ENU=Customer Name;
                                                              NOR=Kundnavn;
                                                              SVE=Kundnamn];
                                                   Editable=No }
    { 40  ;   ;Collect Invoices by ;Option        ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                                CheckNoCollectListLinesExists;
                                                                IF "Collect Invoices by" <> "Collect Invoices by"::Request THEN
                                                                  "Request No." := '';
                                                              END;

                                                   CaptionML=[ENU=Collect Invoices by;
                                                              NOR=Samle fakturaer etter;
                                                              SVE=Insamla fakturor efter];
                                                   OptionCaptionML=ENU=Customer,Request;
                                                   OptionString=Customer,Request }
    { 50  ;   ;Request No.         ;Code20        ;TableRelation="Resource Request";
                                                   OnValidate=VAR
                                                                ResourceRequest@1100529000 : Record 11124901;
                                                              BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                                CheckNoCollectListLinesExists;
                                                                IF "Collect Invoices by" <> "Collect Invoices by"::Request THEN
                                                                  TESTFIELD("Request No.", '')
                                                                ELSE BEGIN
                                                                  IF "Request No." <> '' THEN BEGIN
                                                                    ResourceRequest.GET("Request No.");
                                                                    ResourceRequest.TESTFIELD("Source Type", ResourceRequest."Source Type"::Customer);
                                                                    ResourceRequest.TESTFIELD("Source No.");
                                                                    IF "Customer No." <> ResourceRequest."Source No." THEN BEGIN
                                                                      "Customer No." := ResourceRequest."Source No.";  //No validate (Collect level and RequestNo may not be changed here)
                                                                      CALCFIELDS("Customer Name");
                                                                    END;
                                                                  END;
                                                                END;
                                                                CALCFIELDS("Request Description");
                                                              END;

                                                   OnLookup=VAR
                                                              ResourceRequest@1100529000 : Record 11124901;
                                                            BEGIN
                                                              IF "Collect Invoices by" <> "Collect Invoices by"::Request THEN
                                                                EXIT;
                                                              ResourceRequest.SETCURRENTKEY("Source Type","Source No.");
                                                              ResourceRequest.FILTERGROUP(9);
                                                              ResourceRequest.SETRANGE("Source Type", ResourceRequest."Source Type"::Customer);
                                                              ResourceRequest.SETFILTER("Source No.", '<>%1', '');
                                                              ResourceRequest.FILTERGROUP(0);
                                                              IF "Customer No." <> '' THEN
                                                                ResourceRequest.SETRANGE("Source No.", "Customer No.");
                                                              IF "Request No." <> '' THEN
                                                                IF ResourceRequest.GET("Request No.") THEN;
                                                              IF Status <> Status::Open THEN
                                                                PAGE.RUNMODAL(0, ResourceRequest)
                                                              ELSE BEGIN
                                                                IF PAGE.RUNMODAL(0, ResourceRequest) = ACTION::LookupOK THEN BEGIN
                                                                  IF (ResourceRequest."No." <> "Request No.") AND (ResourceRequest."No." <> '') THEN
                                                                    VALIDATE("Request No.", ResourceRequest."No.");
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Request No.;
                                                              NOR=Forespõrselnr.;
                                                              SVE=Nr fîr fîrfrÜgan];
                                                   NotBlank=Yes }
    { 51  ;   ;Request Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Resource Request".Description WHERE (No.=FIELD(Request No.)));
                                                   CaptionML=[ENU=Request Description;
                                                              SVE=FîrfrÜgan beskrivning];
                                                   Editable=No }
    { 100 ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              NOR=Nr.serie;
                                                              SVE=Nr-serie];
                                                   Editable=No }
    { 120 ;   ;Created By          ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Created By;
                                                              NOR=Created By;
                                                              SVE=Skapad av];
                                                   Editable=No }
    { 125 ;   ;Creation On         ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              NOR=Opprettet den;
                                                              SVE=UpplÑggningsdatum];
                                                   Editable=No }
    { 130 ;   ;Total Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Resource Req. Coll.-List Line".Amount);
                                                   CaptionML=[ENU=Total Amount;
                                                              NOR=Totalt belõp;
                                                              SVE=Total Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 140 ;   ;Invoice Type        ;Option        ;CaptionML=[ENU=Invoice Type;
                                                              NOR=Fakturatype;
                                                              SVE=Fakturatyp];
                                                   OptionCaptionML=[ENU=,Invoice,Credit Memo;
                                                                    NOR=,Faktura,Kreditnota;
                                                                    SVE=,Faktura,Kreditnota];
                                                   OptionString=,Invoice,CreditMemo;
                                                   Editable=No }
    { 145 ;   ;Invoice Status      ;Option        ;CaptionML=[ENU=Invoice Status;
                                                              NOR=Fakturastatus;
                                                              SVE=Fakturastatus];
                                                   OptionCaptionML=ENU=" ,Temporary,Posted";
                                                   OptionString=[ ,Temporary,Posted];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 150 ;   ;Invoice No.         ;Code20        ;TableRelation=IF (Invoice Type=CONST(Invoice),
                                                                     Invoice Status=CONST(Temporary)) "Sales Header".No. WHERE (Document Type=CONST(Invoice))
                                                                     ELSE IF (Invoice Type=CONST(CreditMemo),
                                                                              Invoice Status=CONST(Temporary)) "Sales Header".No. WHERE (Document Type=CONST(Credit Memo))
                                                                              ELSE IF (Invoice Type=CONST(Invoice),
                                                                                       Invoice Status=CONST(Posted)) "Sales Invoice Header".No.
                                                                                       ELSE IF (Invoice Type=CONST(CreditMemo),
                                                                                                Invoice Status=CONST(Posted)) "Sales Cr.Memo Header".No.;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Invoice No.;
                                                              NOR=Fakturanr.;
                                                              SVE=Fakturanummer];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Customer No.                             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100528601 : TextConst 'ENU=There are already lines linked to the Collective List, modify not allowed';
      Text002@1100529000 : TextConst 'ENU=%1 ''%2'' is still present, delete %3 ''%4'' not allowed';

    PROCEDURE AssistEdit@2(OldResourceReqCollectiveList@1000 : Record 11124904) : Boolean;
    VAR
      ResourcePlanningSetup@1100528600 : Record 11124900;
      ResourceReqCollectiveList@1100526200 : Record 11124904;
      NoSeriesManagement@1100528601 : Codeunit 396;
    BEGIN
      ResourceReqCollectiveList := Rec;
      ResourcePlanningSetup.GET;
      ResourcePlanningSetup.TESTFIELD("Collective List Nos.");
      IF NoSeriesManagement.SelectSeries(
        ResourcePlanningSetup."Collective List Nos.", OldResourceReqCollectiveList."No. Series","No. Series")
      THEN BEGIN
        NoSeriesManagement.SetSeries("No.");
        Rec := ResourceReqCollectiveList;
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE CheckNoCollectListLinesExists@1100529000();
    VAR
      AdditionalInfoRequestWO@1100528600 : Record 11124915;
    BEGIN
      AdditionalInfoRequestWO.SETCURRENTKEY("Collective List No.","Request No.");
      AdditionalInfoRequestWO.SETRANGE("Collective List No.", "No.");
      IF NOT AdditionalInfoRequestWO.ISEMPTY THEN
        ERROR(Text001);
    END;

    PROCEDURE ShowInvoiceCard@1100529001();
    VAR
      SalesHeader@1100529000 : Record 36;
      SalesInvoiceHeader@1100529001 : Record 112;
      SalesCrMemoHeader@1100529002 : Record 114;
    BEGIN
      IF "Invoice No." = '' THEN
        EXIT;
      SalesHeader.FILTERGROUP(9);
      SalesHeader.SETRANGE("No.", "Invoice No.");
      SalesHeader.FILTERGROUP(0);
      SalesInvoiceHeader.FILTERGROUP(9);
      SalesInvoiceHeader.SETRANGE("No.", "Invoice No.");
      SalesInvoiceHeader.FILTERGROUP(0);
      SalesCrMemoHeader.FILTERGROUP(9);
      SalesCrMemoHeader.SETRANGE("No.", "Invoice No.");
      SalesCrMemoHeader.FILTERGROUP(0);
      IF "Invoice Type" = "Invoice Type"::Invoice THEN BEGIN
        IF "Invoice Status" = "Invoice Status"::"Temporary" THEN
          PAGE.RUNMODAL(PAGE::"Sales Invoice", SalesHeader);
        IF "Invoice Status" = "Invoice Status"::Posted THEN
          PAGE.RUNMODAL(PAGE::"Posted Sales Invoice", SalesInvoiceHeader);
      END ELSE BEGIN
        IF "Invoice Type" = "Invoice Type"::CreditMemo THEN BEGIN
          IF "Invoice Status" = "Invoice Status"::"Temporary" THEN
            PAGE.RUNMODAL(PAGE::"Sales Credit Memo", SalesHeader);
          IF "Invoice Status" = "Invoice Status"::Posted THEN
            PAGE.RUNMODAL(PAGE::"Posted Sales Credit Memo", SalesCrMemoHeader);
        END;
      END;
    END;

    BEGIN
    END.
  }
}

