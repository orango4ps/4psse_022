OBJECT Page 11125683 Estimate Paragraph List RAW
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Estimate Paragraph List;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11125679;
    DataCaptionFields=Estimate No.;
    PageType=List;
    OnOpenPage=BEGIN
                 OnValidateSourceEstimate(FALSE);  //DP01676
               END;

    OnAfterGetRecord=BEGIN
                       IsBold := Type <= Type::"Commitment (Main Line)";  //DP01676
                     END;

    ActionList=ACTIONS
    {
      { 1100528905;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528904;1 ;ActionGroup;
                      CaptionML=ENU=Functions }
      { 1100528903;2 ;Action    ;
                      Name=CopyEstimateLinesToDestinationEstimate;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Estimate Lines to Destination Estimate;
                      Image=Copy;
                      OnAction=VAR
                                 EstimateParagraphRAW@1100528900 : Record 11125679;
                               BEGIN
                                 //DP01676
                                 CurrPage.SETSELECTIONFILTER(EstimateParagraphRAW);
                                 CopyLinesToDestinationEstimate(EstimateParagraphRAW);
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100525000;0;Container;
                ContainerType=ContentArea }

    { 1100528901;1;Group  ;
                GroupType=Group }

    { 1100528900;2;Field  ;
                CaptionML=ENU=Source Estimate;
                SourceExpr=SourceEstimate;
                TableRelation=Estimate;
                LookupPageID=Estimate List RAW;
                OnValidate=BEGIN
                             //DP01676
                             OnValidateSourceEstimate(TRUE);  //DP01676
                           END;
                            }

    { 1100525001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100525002;2;Field  ;
                SourceExpr="Estimate No.";
                Editable=FALSE }

    { 1100528902;2;Field  ;
                SourceExpr="Tender Paragraph No.";
                Style=Strong;
                StyleExpr=isBold }

    { 1100525003;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr=Activity;
                Editable=FALSE }

    { 1100525005;2;Field  ;
                SourceExpr=Text;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=isBold }

    { 1100528906;2;Field  ;
                CaptionML=ENU=Paragraph exist in Destination Estimate;
                SourceExpr=ParagraphExistInDestinationEstimate }

    { 1100525008;0;Container;
                ContainerType=FactBoxArea }

    { 1100525007;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

    { 1100525006;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

  }
  CODE
  {
    VAR
      SourceEstimate@1100528900 : Code[20];
      DestinationEstimate@1100528901 : Code[20];
      IsBold@1100528902 : Boolean INDATASET;
      Text000@1100528903 : TextConst 'ENU=First select Lines';
      Text001@1100528904 : TextConst 'ENU=Tender Paragraph %1 skipped: not present in Destination Estimate';
      Text002@1100528905 : TextConst 'ENU=Tender Paragraph %1 skipped: Lines present in Destination Estimate';

    PROCEDURE SetSelection@1100528900(iEstimateNo@1100528900 : Code[20]);
    VAR
      Estimate@1100528901 : Record 11012151;
    BEGIN
      //DP01676
      Estimate.GET(iEstimateNo);
      SourceEstimate := Estimate."Estimate Source";
      DestinationEstimate := Estimate."No.";
    END;

    LOCAL PROCEDURE OnValidateSourceEstimate@1100528901(RefreshBln@1100528900 : Boolean);
    BEGIN
      //DP01676
      IF SourceEstimate <> '' THEN BEGIN
        SETRANGE("Estimate No.", SourceEstimate);
        SETRANGE("Construction Spec. Line No.", '00');
      END;
      IF RefreshBln THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CopyLinesToDestinationEstimate@1100528902(VAR EstimateParagraphRAW@1100528904 : Record 11125679);
    VAR
      EstimateLineSource@1100528905 : Record 11125698;
      EstimateLineDestination@1100528902 : Record 11125698;
      EstimateParagraphSource@1100528901 : Record 11125679;
      EstimateParagraphDestination@1100528900 : Record 11125679;
    BEGIN
      //DP01676
      EstimateParagraphSource.COPY(EstimateParagraphRAW);
      WITH EstimateParagraphSource DO BEGIN
        MARKEDONLY(TRUE);
        IF NOT FINDFIRST THEN BEGIN
          MARKEDONLY(FALSE);
          IF NOT FINDFIRST THEN BEGIN
            MESSAGE(Text000);
            EXIT;
          END;
        END;
        //
        REPEAT
          EstimateParagraphDestination.SETRANGE("Estimate No.", DestinationEstimate);
          EstimateParagraphDestination.SETRANGE("Tender Paragraph No.", "Tender Paragraph No.");
          IF EstimateParagraphDestination.FINDFIRST THEN BEGIN
            EstimateLineDestination.SETRANGE("Estimate No.", DestinationEstimate);
            EstimateLineDestination.SETRANGE("Tender Paragraph No.", "Tender Paragraph No.");
            IF EstimateLineDestination.ISEMPTY THEN BEGIN
              EstimateLineSource.SETRANGE("Estimate No.", "Estimate No.");
              EstimateLineSource.SETRANGE("Tender Paragraph No.", "Tender Paragraph No.");
              IF EstimateLineSource.FINDSET THEN BEGIN
                REPEAT
                  EstimateLineDestination := EstimateLineSource;
                  EstimateLineDestination."Estimate No." := DestinationEstimate;
                  EstimateLineDestination.UpdateSurchargePct;  //C061480
                  EstimateLineDestination.VALIDATE("Part Quantity", EstimateParagraphDestination.Quantity);  //C052654
                  EstimateLineDestination.INSERT;
                UNTIL EstimateLineSource.NEXT = 0;
              END;
              EstimateParagraphDestination.UpdateResultObligation(FIELDNO("Quantity (Result Obligation)"));  //C052654
            END ELSE BEGIN
              MESSAGE(Text002, "Tender Paragraph No.")
            END;
          END ELSE BEGIN
            MESSAGE(Text001, "Tender Paragraph No.");
          END;
        UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE ParagraphExistInDestinationEstimate@1100528903() : Boolean;
    VAR
      EstimateParagraphDestination@1100528900 : Record 11125679;
    BEGIN
      IF DestinationEstimate <> '' THEN BEGIN
        EstimateParagraphDestination.SETRANGE("Estimate No.", DestinationEstimate);
        EstimateParagraphDestination.SETRANGE("Tender Paragraph No.", "Tender Paragraph No.");
        IF EstimateParagraphDestination.FINDFIRST THEN
          EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

