OBJECT Page 12013654 Document Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF512000,4PS;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Document Lines;
               SVE=Dokumentrader];
    InsertAllowed=No;
    SourceTable=Table12013609;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnOpenPage=BEGIN
                 IF ExFlowSetup.GET THEN
                   ShowLineNo:= ExFlowSetup."Show All Approvers";
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       ShowNonDimCodes;
                     END;

    OnNewRecord=VAR
                  TempNo@1100285001 : Integer;
                BEGIN
                  CLEAR(ShortcutDimCode);

                  FILTERGROUP := 4;
                  CLEAR(TempNo);
                  IF EVALUATE(TempNo, GETFILTER("Document ID")) THEN;
                  FILTERGROUP := 0;
                  "Document ID" := TempNo;
                  InitRecord(xRec,BelowxRec);
                END;

    OnDeleteRecord=BEGIN
                     CheckDeleteLine;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           IF EXApprovalStatus.ApproversView THEN
                             ShowLineNo:=TRUE
                           ELSE
                             ShowLineNo:=FALSE;
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906083504;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 SVE=Ra&d];
                      Image=Line }
      { 1901131704;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimension;
                                 SVE=Dimension];
                      OnAction=BEGIN
                                 ShowLineDimension;
                               END;
                                }
      { 1100285032;2 ;Action    ;
                      Name=Show Available Templates;
                      CaptionML=[ENU=Show Available Templates;
                                 SVE=Visa m”jliga attestregler];
                      OnAction=VAR
                                 TemplateRule@1100285000 : Record 12013645;
                               BEGIN
                                 TemplateRule.ShowPotentialTemplatesWkshFromDocLine(Rec);
                               END;
                                }
      { 1100285043;2 ;Action    ;
                      Name=DeferralSchedule;
                      CaptionML=[ENU=Deferral Schedule;
                                 SVE=Periodiseringsschema];
                      Enabled="Periodic Template Code" <> '';
                      Image=PaymentPeriod;
                      OnAction=VAR
                                 PurchLine@1100285001 : Record 39;
                                 PurchHeader@1100285000 : Record 38;
                               BEGIN
                                 PurchHeader.GET("Document Type", "Document No.");
                                 PurchLine.GET("Document Type", "Document No.", "Line No.");
                                 IF (PurchLine."Deferral Code" <> '') AND (PurchLine."Deferral Code" = "Periodic Template Code") AND (PurchLine."Returns Deferral Start Date" = "Periodic Starting Date")
                                    AND (PurchLine.Amount = Amount) THEN
                                   PurchLine.ShowDeferrals(PurchHeader."Posting Date",PurchHeader."Currency Code")
                                 ELSE
                                   SchemaDeferralMsg(PurchLine."Deferral Code");
                               END;
                                }
      { 1100285002;2 ;Action    ;
                      CaptionML=[ENU=Complete;
                                 SVE=Sl&utattestera];
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ExFlow@1100285000 : Codeunit 12013601;
                               BEGIN
                                 IF ExFlow.IsUserSuperior(USERID) THEN BEGIN
                                   FinishDocLine;

                                   CurrPage.UPDATE;
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100285000;1;Group  ;
                GroupType=Repeater }

    { 1100285007;2;Field  ;
                SourceExpr="Line No.";
                Visible=ShowLineNo;
                Editable=FALSE }

    { 1100285011;2;Field  ;
                SourceExpr="Line Type";
                OnValidate=BEGIN
                             MODIFY;
                             UpdateExtraFromDocLine('LINETYPE',xRec,Rec);
                           END;
                            }

    { 1100285013;2;Field  ;
                SourceExpr="No.";
                OnValidate=BEGIN
                             MODIFY;
                             UpdateExtraFromDocLine('LINETYPE',xRec,Rec);
                           END;
                            }

    { 1100285020;2;Field  ;
                CaptionML=[ENU=Name;
                           SVE=Namn];
                SourceExpr=GetName;
                Editable=false }

    { 1100285015;2;Field  ;
                SourceExpr=Description;
                OnValidate=BEGIN
                             MODIFY;
                             UpdateExtraFromDocLine('DESCRIPTION',xRec,Rec);
                           END;
                            }

    { 1100285017;2;Field  ;
                SourceExpr=Quantity }

    { 1100285019;2;Field  ;
                SourceExpr="Direct Unit Cost" }

    { 1100285021;2;Field  ;
                SourceExpr="Line Discount %" }

    { 1100285005;2;Field  ;
                SourceExpr="New Line";
                Editable=FALSE }

    { 1100285023;2;Field  ;
                SourceExpr="Line Difference";
                Visible=FALSE }

    { 1100285027;2;Field  ;
                SourceExpr=Amount;
                Editable=FALSE }

    { 1100285009;2;Field  ;
                SourceExpr=Flowstatus;
                Editable=FALSE }

    { 1100285041;2;Field  ;
                SourceExpr="Requisition No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100285053;2;Field  ;
                SourceExpr=ID;
                Visible=FALSE;
                Editable=FALSE }

    { 1100285055;2;Field  ;
                SourceExpr="Document ID";
                Visible=FALSE;
                Editable=FALSE }

    { 1100285001;2;Field  ;
                SourceExpr="Order No." }

    { 1100285035;2;Field  ;
                SourceExpr="Order Line No." }

    { 1100285003;2;Field  ;
                SourceExpr="Order Unit Cost";
                Visible=FALSE;
                Editable=FALSE }

    { 1100285022;2;Field  ;
                SourceExpr="Job No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             MODIFY;
                             UpdateExtraFromDocLine('JOB',xRec,Rec);
                           END;
                            }

    { 1101285000;2;Field  ;
                SourceExpr="Service Order No." }

    { 1100285036;2;Field  ;
                SourceExpr="Job Task No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             MODIFY;
                             UpdateExtraFromDocLine('JOBTASK',xRec,Rec);
                           END;
                            }

    { 1100285026;2;Field  ;
                SourceExpr="Periodic Template Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             MODIFY;
                             UpdateExtraFromDocLine('PERCODE',xRec,Rec);
                           END;
                            }

    { 1100285028;2;Field  ;
                SourceExpr="Periodic Starting Date";
                Visible=FALSE;
                OnValidate=BEGIN
                             MODIFY;
                             UpdateExtraFromDocLine('PERDATE',xRec,Rec);
                           END;
                            }

    { 1100285030;2;Field  ;
                CaptionML=[ENU=Bill-to Customer No.;
                           SVE=Faktureringskundnr];
                SourceExpr=GetCustomerValue;
                Visible=FALSE;
                Editable=FALSE }

    { 1100285038;2;Field  ;
                SourceExpr="Invoice to Customer";
                Visible=FALSE;
                OnValidate=BEGIN
                             MODIFY;
                             UpdateExtraFromDocLine('CUSTOMERINV',xRec,Rec);
                           END;
                            }

    { 1100285039;2;Field  ;
                SourceExpr="Invoicing Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             MODIFY;
                             UpdateExtraFromDocLine('AMOUNTINV',xRec,Rec);
                           END;
                            }

    { 1100285040;2;Field  ;
                SourceExpr="Start Date for Invoicing";
                Visible=FALSE;
                OnValidate=BEGIN
                             MODIFY;
                             UpdateExtraFromDocLine('INVDATE',xRec,Rec);
                           END;
                            }

    { 1100285042;2;Field  ;
                SourceExpr="Invoicing Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             MODIFY;
                             UpdateExtraFromDocLine('INV_CODE',xRec,Rec);
                           END;
                            }

    { 1100285018;2;Field  ;
                SourceExpr=ShortcutDimCode[1];
                CaptionClass='1,2,1';
                OnValidate=BEGIN
                             ValidateShortcutDimCode(1,ShortcutDimCode[1]);
                             CurrPage.UPDATE(FALSE);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(1,ShortcutDimCode[1]);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1100285016;2;Field  ;
                SourceExpr=ShortcutDimCode[2];
                CaptionClass='1,2,2';
                OnValidate=BEGIN
                             ValidateShortcutDimCode(2,ShortcutDimCode[2]);
                             CurrPage.UPDATE(FALSE);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(2,ShortcutDimCode[2]);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1100285014;2;Field  ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                             CurrPage.UPDATE(FALSE);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(3,ShortcutDimCode[3]);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1100285012;2;Field  ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                             CurrPage.UPDATE(FALSE);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(4,ShortcutDimCode[4]);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1100285010;2;Field  ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                             CurrPage.UPDATE(FALSE);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(5,ShortcutDimCode[5]);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1100285008;2;Field  ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                             CurrPage.UPDATE(FALSE);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(6,ShortcutDimCode[6]);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1100285006;2;Field  ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                             CurrPage.UPDATE(FALSE);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(7,ShortcutDimCode[7]);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1100285004;2;Field  ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                             CurrPage.UPDATE(FALSE);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(8,ShortcutDimCode[8]);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1100285025;2;Field  ;
                SourceExpr="Changed By";
                Visible=False }

    { 1100285024;2;Field  ;
                SourceExpr="Change Date";
                Visible=False }

    { 1100285034;2;Field  ;
                SourceExpr="Created By" }

    { 1100285037;2;Field  ;
                SourceExpr="Created Date" }

    { 1100285031;2;Field  ;
                SourceExpr="Applied Template Rule" }

  }
  CODE
  {
    VAR
      ShortcutDimCode@1100285006 : ARRAY [8] OF Code[20];
      EXF001@1100285000 : TextConst 'ENU=Deferral Schedule has not been created for %1 %2 with Deferral Code %3 and Deferral Start Date %4. Run change journal to create a Deferral Schedule .;SVE=Periodiseringsschema har inte skapats f”r %1 %2 med periodiseringskod %3 och periodiseringsstartdatum %4. K”r „ndringsjournalen f”r att skapa periodiseringsschemat.';
      EXF002@1100285001 : TextConst 'ENU=Deferral Schedule has been changed for %1 %2 with Deferral Code %3 and Deferral Start Date %4. Run change journal to update Deferral Schedule .;SVE=Periodiseringsschemat har „ndrats f”r %1 %2 med periodiseringskod %3 och periodiseringsstartdatum %4. K”r „ndringsjournalen f”r att uppdatera periodiseringsschemat.';
      EXF003@1100285002 : TextConst;
      EXApprovalStatus@1100285004 : Page 12013608;
      ShowLineNo@1100285003 : Boolean;
      ExFlowSetup@1100285005 : Record 12013601;

    PROCEDURE ShowDim@1100285000();
    BEGIN
      Rec.ShowDim;
    END;

    PROCEDURE FinishDocLine@1100285002();
    BEGIN
      FinishApprover(Rec);

      CurrPage.UPDATE;
    END;

    PROCEDURE ShowLineDimension@1100285004();
    VAR
      cu609@1100285000 : Codeunit 12013609;
      PurchLine@1100285001 : Record 39;
    BEGIN
      PurchLine.GET("Document Type", "Document No.", "Line No.");
      cu609.ShowDocLineDim("Document Type", "Document No.", "Line No.", PurchLine."Dimension Set ID");
    END;

    PROCEDURE ApproverForm@1000000000();
    BEGIN
      PAGE.RUNMODAL(12013609, Rec);
    END;

    PROCEDURE RestartDocLine@1100285003();
    VAR
      DocLine@1100285001 : Record 12013609;
    BEGIN
      DocLine.RestartApprover(Rec,"Line No.");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SchemaDeferralMsg@1100285001(DeferralCode@1100285000 : Code[20]);
    BEGIN
       IF DeferralCode = '' THEN
         MESSAGE(EXF001,"Document Type","Document No.","Periodic Template Code","Periodic Starting Date")
         ELSE
         MESSAGE(EXF002,"Document Type","Document No.","Periodic Template Code","Periodic Starting Date");
    END;

    PROCEDURE ApproversView@1100285011(Show@1100285000 : Boolean);
    BEGIN
      IF Show THEN
        ShowLineNo:=TRUE
      ELSE
        ShowLineNo:=FALSE;
    END;

    BEGIN
    END.
  }
}

