OBJECT Table 6086004 Continia User List Item
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW13.70.00.4.06,4PS10.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=User List Item;
    LookupPageID=Page6086033;
    DrillDownPageID=Page6086033;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;TableRelation="Continia User List".Type;
                                                   CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=ENU=G/L Account,Item,Fixed Asset,Item Charge,Dimension Value,Job;
                                                   OptionString=G/L Account,Item,Fixed Asset,Item Charge,Dimension Value,Job }
    { 2   ;   ;List Code           ;Code10        ;TableRelation="Continia User List".Code WHERE (Type=FIELD(Type));
                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 3   ;   ;Dimension Code      ;Code20        ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Dimension Code;
                                                              NOR=Dimensjonskode;
                                                              SVE=Dimensionskod] }
    { 4   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Type=CONST(Item Charge)) "Item Charge"
                                                                 ELSE IF (Type=CONST(Dimension Value)) "Dimension Value".Code WHERE (Dimension Code=FIELD(Dimension Code))
                                                                 ELSE IF (Type=CONST(Job)) Job;
                                                   OnValidate=VAR
                                                                GLAccount@161024012 : Record 15;
                                                                Item@161024013 : Record 27;
                                                                FA@161024014 : Record 5600;
                                                                ItemCharge@161024015 : Record 5800;
                                                                DimVal@161024017 : Record 349;
                                                                Job@161024016 : Record 11072003;
                                                                DoExists@161024019 : Boolean;
                                                              BEGIN
                                                                DoExists := TRUE;

                                                                CASE Type OF
                                                                  Type::"G/L Account":
                                                                    BEGIN
                                                                      IF GLAccount.GET("No.") THEN BEGIN
                                                                        GLAccount.TESTFIELD(Blocked,FALSE);
                                                                        IF NOT (GLAccount."Account Type" IN
                                                                          [GLAccount."Account Type"::Posting,GLAccount."Account Type"::"Begin-Total",
                                                                            GLAccount."Account Type"::"End-Total"])
                                                                        THEN
                                                                          ERROR(Text001,GLAccount.FIELDCAPTION("Account Type"),
                                                                            FORMAT(GLAccount."Account Type"::Posting),
                                                                              GLAccount."Account Type"::"Begin-Total",GLAccount."Account Type"::"End-Total");
                                                                        Name := GLAccount.Name;

                                                                        CASE GLAccount."Account Type" OF
                                                                          GLAccount."Account Type"::Posting:
                                                                            "Account Type" := "Account Type"::Posting;
                                                                          GLAccount."Account Type"::"Begin-Total":
                                                                            "Account Type" := "Account Type"::"Begin-total";
                                                                          GLAccount."Account Type"::"End-Total":
                                                                            "Account Type" := "Account Type"::"End-total";
                                                                        END;
                                                                      END ELSE
                                                                        DoExists := FALSE;
                                                                    END;

                                                                  Type::Item:
                                                                    BEGIN
                                                                      IF Item.GET("No.") THEN BEGIN
                                                                        Item.TESTFIELD(Blocked,FALSE);
                                                                        Name := Item.Description;
                                                                      END ELSE
                                                                        DoExists := FALSE;
                                                                    END;

                                                                  Type::"Fixed Asset":
                                                                    BEGIN
                                                                      IF FA.GET("No.") THEN BEGIN
                                                                        FA.TESTFIELD(Blocked,FALSE);
                                                                        Name := FA.Description;
                                                                      END ELSE
                                                                        DoExists := FALSE;
                                                                    END;

                                                                  Type::"Item Charge":
                                                                    BEGIN
                                                                      IF ItemCharge.GET("No.") THEN BEGIN
                                                                        Name := ItemCharge.Description;
                                                                      END ELSE
                                                                        DoExists := FALSE;
                                                                    END;

                                                                  Type::"Dimension Value":
                                                                    BEGIN
                                                                      IF DimVal.GET("Dimension Code","No.") THEN BEGIN
                                                                        DimVal.TESTFIELD(Blocked,FALSE);
                                                                        Name := DimVal.Name;

                                                                        CASE DimVal."Dimension Value Type" OF
                                                                          DimVal."Dimension Value Type"::Standard:
                                                                            "Account Type" := "Account Type"::Posting;
                                                                          DimVal."Dimension Value Type"::"Begin-Total":
                                                                            "Account Type" := "Account Type"::"Begin-total";
                                                                          DimVal."Dimension Value Type"::"End-Total":
                                                                            "Account Type" := "Account Type"::"End-total";
                                                                        END;
                                                                      END ELSE
                                                                        DoExists := FALSE;
                                                                    END;

                                                                  Type::Job:
                                                                    BEGIN
                                                                      IF Job.GET("No.") THEN BEGIN
                                                                        Name := Job.Description;
                                                                      END ELSE
                                                                        DoExists := FALSE;
                                                                    END;
                                                                END;

                                                                IF NOT DoExists THEN
                                                                  IF NOT CONFIRM(Text002,FALSE,Type,"No.") THEN
                                                                    ERROR('');
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr;
                                                              SVE=Nr];
                                                   NotBlank=Yes }
    { 5   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              NOR=Navn;
                                                              SVE=Namn] }
    { 6   ;   ;Account Type        ;Option        ;CaptionML=[ENU=Account Type;
                                                              NOR=Kontotype;
                                                              SVE=Kontotyp];
                                                   OptionCaptionML=ENU=Posting,Begin-total,End-total;
                                                   OptionString=Posting,Begin-total,End-total }
    { 7   ;   ;Indentation         ;Integer       ;CaptionML=[ENU=Indentation;
                                                              NOR=Innrykking;
                                                              SVE=Indrag] }
  }
  KEYS
  {
    {    ;Type,List Code,Dimension Code,No.       ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@161024012 : TextConst 'ENU=%1 must be %2, %3 or %4.';
      Text002@161024013 : TextConst 'ENU=%1 %2 does not exists.\\However you can use non-existing numbers to devide the list into sections. Do you wish to use %1 %2 anyway?';

    PROCEDURE LookupNo@1161054000(VAR Text@1161054008 : Text[1024]) : Boolean;
    VAR
      WebUserListItem@1161054003 : Record 6086004;
      GLAccount@1161054000 : Record 15;
      Item@1161054004 : Record 27;
      FixedAsset@1161054006 : Record 5600;
      ItemCharge@1161054007 : Record 5800;
      Job@1161054009 : Record 11072003;
      DimVal@1161054010 : Record 349;
      GLAccountList@1161054001 : Page 18;
      ItemList@1161054005 : Page 31;
      Filter@1161054002 : Code[250];
    BEGIN
      CASE GETRANGEMIN(Type) OF
        Type::"G/L Account":
          BEGIN
            IF GLAccount.GET("No.") THEN;
            GLAccountList.SETRECORD(GLAccount);
            GLAccountList.LOOKUPMODE := TRUE;
            IF GLAccountList.RUNMODAL = ACTION::LookupOK THEN BEGIN
              Filter := GLAccountList.GetSelectionFilter;

              GLAccount.SETFILTER("No.",Filter);
              IF GLAccount.FINDSET THEN BEGIN
                IF GLAccount.COUNT = 1 THEN BEGIN
                  Text := GLAccount."No.";
                  EXIT(TRUE);
                END;

                REPEAT
                  IF (GLAccount."Account Type" <> GLAccount."Account Type"::Posting) OR
                    ((GLAccount."Account Type" = GLAccount."Account Type"::Posting) AND (GLAccount."Direct Posting"))
                  THEN BEGIN
                    WebUserListItem.INIT;
                    WebUserListItem.Type := GETRANGEMIN(Type);
                    WebUserListItem."List Code" := GETRANGEMIN("List Code");
                    WebUserListItem.VALIDATE("No.",GLAccount."No.");
                    IF WebUserListItem.INSERT THEN;
                  END;
                UNTIL GLAccount.NEXT = 0;
              END;
            END;
        END;

        Type::Item:
          BEGIN
            IF Item.GET("No.") THEN;
            ItemList.SETRECORD(Item);
            ItemList.LOOKUPMODE := TRUE;
            IF ItemList.RUNMODAL = ACTION::LookupOK THEN BEGIN
              Filter := ItemList.GetSelectionFilter;

              Item.SETFILTER("No.",Filter);
              Item.SETRANGE(Blocked,FALSE);
              IF Item.FINDSET THEN BEGIN
                IF GLAccount.COUNT = 1 THEN BEGIN
                  Text := Item."No.";
                  EXIT(TRUE);
                END;

                REPEAT
                  WebUserListItem.INIT;
                  WebUserListItem.Type := GETRANGEMIN(Type);
                  WebUserListItem."List Code" := GETRANGEMIN("List Code");
                  WebUserListItem.VALIDATE("No.",Item."No.");
                  IF WebUserListItem.INSERT THEN;
                UNTIL Item.NEXT = 0;
              END;
            END;
        END;


        Type::"Fixed Asset":
          BEGIN
            IF FixedAsset.GET("No.") THEN;
            IF PAGE.RUNMODAL(0,FixedAsset) = ACTION::LookupOK THEN BEGIN
              Text := FixedAsset."No.";
              EXIT(TRUE);
            END;
          END;

        Type::"Item Charge":
          BEGIN
            IF FixedAsset.GET("No.") THEN;
            IF PAGE.RUNMODAL(0,ItemCharge) = ACTION::LookupOK THEN BEGIN
              Text := ItemCharge."No.";
              EXIT(TRUE);
            END;
          END;

        Type::Job:
          BEGIN
            IF Job.GET("No.") THEN;
            IF PAGE.RUNMODAL(0,Job) = ACTION::LookupOK THEN BEGIN
              Text := Job."No.";
              EXIT(TRUE);
            END;
          END;

        Type::"Dimension Value":
          BEGIN
            DimVal.SETRANGE("Dimension Code","Dimension Code");
            IF DimVal.GET("Dimension Code","No.") THEN;
            IF PAGE.RUNMODAL(0,DimVal) = ACTION::LookupOK THEN BEGIN
              Text := DimVal.Code;
              EXIT(TRUE);
            END;
          END;

      END;
    END;

    BEGIN
    {
      //**4PS Tables renumbered
      167 --> 11072003
    }
    END.
  }
}

