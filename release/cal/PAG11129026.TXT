OBJECT Page 11129026 Service Order Spec. FSA WS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=;
    SourceTable=Table11071782;
    SourceTableView=WHERE(Type=CONST(Line));
    PageType=List;
  }
  CONTROLS
  {
    { 1100528000;0;Container;
                ContainerType=ContentArea }

    { 1100528001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100528015;2;Field  ;
                Name=CompanyName;
                SourceExpr=CURRENTCOMPANY }

    { 1100528002;2;Field  ;
                Name=ServiceOrderNo;
                SourceExpr="Service Order No." }

    { 1100528003;2;Field  ;
                Name=ObjectNo;
                SourceExpr="Service Object No." }

    { 1100528006;2;Field  ;
                Name=LineNo;
                SourceExpr="Line No." }

    { 1100528016;2;Field  ;
                Name=SpecificationGroupCode;
                SourceExpr="Specification Group Code" }

    { 1100528017;2;Field  ;
                Name=SpecificationGroupDescription;
                SourceExpr=GetSpecificationGroupDescription }

    { 1100528007;2;Field  ;
                Name=SpecificationCode;
                SourceExpr="Specification Code" }

    { 1100528008;2;Field  ;
                Name=Description;
                SourceExpr=Description }

    { 1100528009;2;Field  ;
                Name=FieldType;
                SourceExpr=FORMAT("Field Type", 0, 9) }

    { 1100528014;2;Field  ;
                Name=DateValue;
                SourceExpr=GetDateValue }

    { 1100528013;2;Field  ;
                Name=NumberValue;
                SourceExpr=GetNumberValue }

    { 1100528005;2;Field  ;
                Name=NumberValueIsNull;
                SourceExpr=GetNumberValueIsNull }

    { 1100528012;2;Field  ;
                Name=TextValue;
                SourceExpr=GetTextValue }

    { 1100528011;2;Field  ;
                Name=OptionValue;
                SourceExpr=GetOptionValue }

    { 1100528010;2;Field  ;
                Name=UnitOfMeasure;
                SourceExpr="Unit Of Measure" }

    { 1100528004;2;Field  ;
                Name=Editable;
                SourceExpr="Editable by Field Service" }

    { 1100528018;2;Field  ;
                Name=Borg;
                SourceExpr=BORG }

  }
  CODE
  {
    VAR
      BORGManagement@1100528000 : Codeunit 11012859;

    LOCAL PROCEDURE GetSpecificationGroupDescription@1100528003() : Text;
    VAR
      ObjectSpecificationGroup@1100528000 : Record 11071778;
    BEGIN
      IF ObjectSpecificationGroup.GET("Specification Group Code") THEN
        EXIT(ObjectSpecificationGroup.Description);
    END;

    LOCAL PROCEDURE GetDateValue@1100528000() : Date;
    VAR
      ObjectSpecificationLine@1100528000 : Record 11071781;
    BEGIN
      IF BORG THEN
        EXIT;
      IF "Field Type" = "Field Type"::Date THEN
        IF NOT BORG THEN BEGIN
          IF (Status = Status::Approved) THEN
            EXIT("New Value (Date)")
          ELSE
            EXIT("Old Value (Date)");
        END ELSE BEGIN
          ObjectSpecificationLine."Field Type" := "Field Type";
          ObjectSpecificationLine.Value := BORGManagement.DecodeValue2(GetActualValue);
          ObjectSpecificationLine.EvaluateValue;
          EXIT(ObjectSpecificationLine."Value (Date)");
        END;
    END;

    LOCAL PROCEDURE GetOptionValue@1100528002() : Text;
    BEGIN
      IF BORG THEN
        EXIT;
      IF "Field Type" = "Field Type"::Option THEN
        EXIT(GetCodeForServiceSpecificationLineValue);
    END;

    LOCAL PROCEDURE GetTextValue@1100528004() : Text;
    BEGIN
      IF BORG THEN
        EXIT;
      IF "Field Type" = "Field Type"::Text THEN
        IF NOT BORG THEN
          EXIT(GetActualValue)
        ELSE
          EXIT(BORGManagement.DecodeValue2(GetActualValue));
    END;

    LOCAL PROCEDURE GetNumberValue@1100528001() : Decimal;
    VAR
      ObjectSpecificationLine@1100528000 : Record 11071781;
    BEGIN
      IF BORG THEN
        EXIT;
      IF "Field Type" = "Field Type"::Value THEN
        IF NOT BORG THEN BEGIN
          IF (Status = Status::Approved) THEN
            EXIT("New Value (Value)")
          ELSE
            EXIT("Old Value (Value)");
        END ELSE BEGIN
          ObjectSpecificationLine."Field Type" := "Field Type";
          ObjectSpecificationLine.Value := BORGManagement.DecodeValue2(GetActualValue);
          ObjectSpecificationLine.EvaluateValue;
          EXIT(ObjectSpecificationLine."Value (Value)");
        END;
    END;

    LOCAL PROCEDURE GetNumberValueIsNull@1100528005() : Boolean;
    BEGIN
      IF BORG THEN
        EXIT(TRUE);
      EXIT(("Field Type" = "Field Type"::Value) AND (GetActualValue = ''));
    END;

    LOCAL PROCEDURE GetCodeForServiceSpecificationLineValue@1100409001() : Text;
    VAR
      BaseObjectSpecificationOpt@1100409001 : Record 11071780;
    BEGIN
      BaseObjectSpecificationOpt.SETRANGE("Base Object Spec. Line Code", "Specification Code");
      IF NOT BORG THEN
        BaseObjectSpecificationOpt.SETRANGE(Description, GetActualValue)
      ELSE
        BaseObjectSpecificationOpt.SETRANGE(Description, BORGManagement.DecodeValue2(GetActualValue));
      IF BaseObjectSpecificationOpt.FINDFIRST THEN
        EXIT(BaseObjectSpecificationOpt.Code);
    END;

    LOCAL PROCEDURE GetActualValue@1100528007() : Text;
    BEGIN
      IF (Status = Status::Approved) THEN
        EXIT("New Value")
      ELSE
        EXIT("Old Value");
    END;

    BEGIN
    END.
  }
}

