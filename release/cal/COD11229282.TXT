OBJECT Codeunit 11229282 Risk Opportunity Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      OriginRiskOpportunitySchedule@1100528816 : Record 11229900;
      TargetRiskOpportunitySchedule@1100528815 : Record 11229900;
      OriginRecRef@1100528818 : RecordRef;
      TargetRecRef@1100528817 : RecordRef;
      OriginSource@1100528814 : 'Project,Try-Out,Service Contract';
      TargetSource@1100528820 : 'Project,Try-Out,Service Contract';
      OriginSourceCode@1100528813 : Code[20];
      TargetSourceCode@1100528821 : Code[20];
      OriginScheduleDate@1100528811 : Date;
      TargetScheduleDate@1100528812 : Date;
      StartProcess@1100528810 : Boolean;
      DoCopyScheduleDescription@1100528809 : Boolean;
      DoCopyScheduleRiskLines@1100528808 : Boolean;
      DoCopyScheduleOpportunityLines@1100528807 : Boolean;
      DoCopyScheduleDocumentLinks@1100528806 : Boolean;
      DoCopyRisklineDocumentLinks@1100528805 : Boolean;
      DoCopyOpportunitylineDocumentLinks@1100528804 : Boolean;
      DoCopyScheduleComments@1100528803 : Boolean;
      DoCopyRisklineComments@1100528802 : Boolean;
      DoCopyOpportunitylineComments@1100528801 : Boolean;
      TableName@1100528819 : 'Budget,Settlement Sheet,Advice Order,,,Project Planning Base Activity,Project Planning Activity,Risk Opportunity Schedule,Risk Line,Opportunity Line';

    PROCEDURE ProcessRiskOpportunitySchedule@1100528800(VAR IRiskOpportunitySchedule@1100528800 : Record 11229900);
    VAR
      GenerateRiskOppSchedule@1100528801 : Report 11020306;
      CommentLineJobText@1100528802 : Record 11020634;
    BEGIN
      GenerateRiskOppSchedule.SetSelections(IRiskOpportunitySchedule.Source,
                                IRiskOpportunitySchedule."Source Code", IRiskOpportunitySchedule.Date);
      GenerateRiskOppSchedule.RUNMODAL;
      GenerateRiskOppSchedule.GetSelections(StartProcess, OriginSource, OriginSourceCode, OriginScheduleDate,
                                TargetSource, TargetSourceCode, TargetScheduleDate,
                                DoCopyScheduleDescription, DoCopyScheduleRiskLines, DoCopyScheduleOpportunityLines,
                                DoCopyScheduleDocumentLinks, DoCopyRisklineDocumentLinks, DoCopyOpportunitylineDocumentLinks,
                                DoCopyScheduleComments, DoCopyRisklineComments, DoCopyOpportunitylineComments);

      IF NOT StartProcess THEN
        EXIT;

      IF DoCopyScheduleDescription THEN
        CopyScheduleDescription(OriginSource, OriginSourceCode, OriginScheduleDate, TargetSource, TargetSourceCode, TargetScheduleDate);

      IF DoCopyScheduleRiskLines THEN
        CopyScheduleRiskLines(OriginSource, OriginSourceCode, OriginScheduleDate, TargetSource, TargetSourceCode, TargetScheduleDate);

      IF DoCopyScheduleOpportunityLines THEN
        CopyScheduleOpportunityLines(OriginSource, OriginSourceCode, OriginScheduleDate, TargetSource, TargetSourceCode, TargetScheduleDate);

      IF DoCopyScheduleDocumentLinks THEN BEGIN
        OriginRiskOpportunitySchedule.GET(OriginSource, OriginSourceCode, OriginScheduleDate);
        TargetRiskOpportunitySchedule.GET(TargetSource, TargetSourceCode, TargetScheduleDate);
        OriginRecRef.GETTABLE(OriginRiskOpportunitySchedule);
        TargetRecRef.GETTABLE(TargetRiskOpportunitySchedule);
        CopyDocumentLinks(OriginRecRef, TargetRecRef);
      END;

      IF DoCopyScheduleComments THEN BEGIN
        OriginRiskOpportunitySchedule.GET(OriginSource, OriginSourceCode, OriginScheduleDate);
        TargetRiskOpportunitySchedule.GET(TargetSource, TargetSourceCode, TargetScheduleDate);
        OriginRecRef.GETTABLE(OriginRiskOpportunitySchedule);
        TargetRecRef.GETTABLE(TargetRiskOpportunitySchedule);
        CommentLineJobText.CopyCommentLines(TableName::"Risk Opportunity Schedule", OriginRecRef, TargetRecRef);
      END;
    END;

    PROCEDURE CopyScheduleBetweenSources@1100528804(IOriginSource@1100528800 : 'Project,Try-Out,Service Contract';IOriginSourceCode@1100528801 : Code[20];IOriginScheduleDate@1100528802 : Date;ITargetSource@1100528803 : 'Project,Try-Out,Service Contract';ITargetSourceCode@1100528804 : Code[20];ITargetScheduleDate@1100528805 : Date);
    VAR
      OriginRiskOpportunitySchedule@1100528806 : Record 11229900;
      TargetRiskOpportunitySchedule@1100528807 : Record 11229900;
      CommentLineJobText@1100528808 : Record 11020634;
    BEGIN
      TargetRiskOpportunitySchedule.INIT;
      TargetRiskOpportunitySchedule.Source := ITargetSource;
      TargetRiskOpportunitySchedule.VALIDATE("Source Code", ITargetSourceCode);
      TargetRiskOpportunitySchedule.Date := ITargetScheduleDate;
      TargetRiskOpportunitySchedule."Original Source" := IOriginSource;
      TargetRiskOpportunitySchedule."Original Source Code" := IOriginSourceCode;
      IF TargetRiskOpportunitySchedule.INSERT THEN BEGIN
        //copy schedule documents and comments
        OriginRiskOpportunitySchedule.GET(IOriginSource, IOriginSourceCode, IOriginScheduleDate);
        TargetRiskOpportunitySchedule.GET(ITargetSource, ITargetSourceCode, ITargetScheduleDate);
        OriginRecRef.GETTABLE(OriginRiskOpportunitySchedule);
        TargetRecRef.GETTABLE(TargetRiskOpportunitySchedule);
        CopyDocumentLinks(OriginRecRef, TargetRecRef);
        CommentLineJobText.CopyCommentLines(TableName::"Risk Opportunity Schedule", OriginRecRef, TargetRecRef);

        //copy schedule description
        CopyScheduleDescription(IOriginSource, IOriginSourceCode, IOriginScheduleDate, ITargetSource, ITargetSourceCode, ITargetScheduleDate);

        //copy risk- and opportunitylines including documents and comments
        DoCopyRisklineDocumentLinks := TRUE;
        DoCopyRisklineComments := TRUE;
        DoCopyOpportunitylineDocumentLinks := TRUE;
        DoCopyOpportunitylineComments := TRUE;

        CopyScheduleRiskLines(IOriginSource, IOriginSourceCode, IOriginScheduleDate, ITargetSource, ITargetSourceCode, ITargetScheduleDate);
        CopyScheduleOpportunityLines(IOriginSource, IOriginSourceCode, IOriginScheduleDate, ITargetSource, ITargetSourceCode, ITargetScheduleDate);

      END;
    END;

    PROCEDURE CopyScheduleDescription@1100528803(IOriginSource@1100528800 : 'Project,Try-Out,Service Contract';IOriginSourceCode@1100528801 : Code[20];IOriginScheduleDate@1100528802 : Date;ITargetSource@1100528803 : 'Project,Try-Out,Service Contract';ITargetSourceCode@1100528806 : Code[20];ITargetScheduleDate@1100528807 : Date);
    VAR
      OriginRiskOpportunitySchedule@1100528804 : Record 11229900;
      TargetRiskOpportunitySchedule@1100528805 : Record 11229900;
    BEGIN
      OriginRiskOpportunitySchedule.GET(IOriginSource, IOriginSourceCode, IOriginScheduleDate);
      TargetRiskOpportunitySchedule.GET(ITargetSource, ITargetSourceCode, ITargetScheduleDate);
      TargetRiskOpportunitySchedule.Description := OriginRiskOpportunitySchedule.Description;
      TargetRiskOpportunitySchedule.MODIFY;
    END;

    PROCEDURE CopyScheduleRiskLines@1100528806(IOriginSource@1100528800 : 'Project,Try-Out,Service Contract';IOriginSourceCode@1100528801 : Code[20];IOriginScheduleDate@1100528802 : Date;ITargetSource@1100528803 : 'Project,Try-Out,Service Contract';ITargetSourceCode@1100528807 : Code[20];ITargetScheduleDate@1100528808 : Date);
    VAR
      OriginRiskLine@1100528804 : Record 11229903;
      TargetRiskLine@1100528805 : Record 11229903;
      CommentLineJobText@1100528806 : Record 11020634;
    BEGIN
      OriginRiskLine.SETRANGE(Source, IOriginSource);
      OriginRiskLine.SETRANGE("Source Code", IOriginSourceCode);
      OriginRiskLine.SETRANGE("Schedule Date", IOriginScheduleDate);
      IF OriginRiskLine.FINDSET THEN
        REPEAT
          IF BaseRiskOpportunityAppliesToTarget(OriginRiskLine."Base Risk Code", ITargetSource) THEN BEGIN
            TargetRiskLine.INIT;
            TargetRiskLine.TRANSFERFIELDS(OriginRiskLine);
            TargetRiskLine."Line No." := 0;
            TargetRiskLine.Source := ITargetSource;
            TargetRiskLine."Source Code" := ITargetSourceCode;
            TargetRiskLine."Schedule Date" := ITargetScheduleDate;
            TargetRiskLine."Original Source" := IOriginSource;
            TargetRiskLine."Original Source Code" := IOriginSourceCode;
            //TargetRiskLine.INSERT(TRUE); //C038257.o
            //C038257.sn
            TargetRiskLine.VALIDATE("Line No.");
            IF TargetRiskLine."Currency Code" <> '' THEN
              TargetRiskLine.VALIDATE("Currency Code");
            TargetRiskLine.INSERT;
            //C038257.en

            OriginRecRef.GETTABLE(OriginRiskLine);
            TargetRecRef.GETTABLE(TargetRiskLine);

            IF DoCopyRisklineDocumentLinks THEN
              CopyDocumentLinks(OriginRecRef, TargetRecRef);
            IF DoCopyRisklineComments THEN
              CommentLineJobText.CopyCommentLines(TableName::"Risk Line", OriginRecRef, TargetRecRef);
          END;
        UNTIL OriginRiskLine.NEXT = 0;
    END;

    PROCEDURE CopyScheduleOpportunityLines@1100528813(IOriginSource@1100528800 : 'Project,Try-Out,Service Contract';IOriginSourceCode@1100528801 : Code[20];IOriginScheduleDate@1100528802 : Date;ITargetSource@1100528803 : 'Project,Try-Out,Service Contract';ITargetSourceCode@1100528807 : Code[20];ITargetScheduleDate@1100528808 : Date);
    VAR
      OriginOpportunityLine@1100528804 : Record 11229904;
      TargetOpportunityLine@1100528805 : Record 11229904;
      CommentLineJobText@1100528806 : Record 11020634;
    BEGIN
      OriginOpportunityLine.SETRANGE(Source, IOriginSource);
      OriginOpportunityLine.SETRANGE("Source Code", IOriginSourceCode);
      OriginOpportunityLine.SETRANGE("Schedule Date", IOriginScheduleDate);
      IF OriginOpportunityLine.FINDSET THEN
        REPEAT
          IF BaseRiskOpportunityAppliesToTarget(OriginOpportunityLine."Base Risk Code", ITargetSource) THEN BEGIN
            TargetOpportunityLine.INIT;
            TargetOpportunityLine.TRANSFERFIELDS(OriginOpportunityLine);
            TargetOpportunityLine."Line No." := 0;
            TargetOpportunityLine.Source := ITargetSource;
            TargetOpportunityLine."Source Code" := ITargetSourceCode;
            TargetOpportunityLine."Schedule Date" := ITargetScheduleDate;
            TargetOpportunityLine."Original Source" := IOriginSource;
            TargetOpportunityLine."Original Source Code" := IOriginSourceCode;
            //TargetOpportunityLine.INSERT(TRUE); //C038257.o
            //C038257.sn
            TargetOpportunityLine.VALIDATE("Line No.");
            IF TargetOpportunityLine."Currency Code" <> '' THEN
              TargetOpportunityLine.VALIDATE("Currency Code");
            TargetOpportunityLine.INSERT;
            //C038257.en

            OriginRecRef.GETTABLE(OriginOpportunityLine);
            TargetRecRef.GETTABLE(TargetOpportunityLine);

            IF DoCopyOpportunitylineDocumentLinks THEN
              CopyDocumentLinks(OriginRecRef, TargetRecRef);
            IF DoCopyOpportunitylineComments THEN
              CommentLineJobText.CopyCommentLines(TableName::"Opportunity Line", OriginRecRef, TargetRecRef);
          END;
        UNTIL OriginOpportunityLine.NEXT = 0;
    END;

    PROCEDURE CopyDocumentLinks@1100528801(SourceRecRef@1100528805 : RecordRef;TargetRecRef@1100528801 : RecordRef);
    VAR
      DocumentLinkManagement@1100528800 : Codeunit 11012401;
    BEGIN
      DocumentLinkManagement.CopyDocLinks(SourceRecRef, TargetRecRef);
    END;

    PROCEDURE CalcTotalsRiskOpportunitySchedule@1100528802(ISource@1100528800 : 'Project,Try-Out,Service Contract';ISourceCode@1100528801 : Code[20];IReferenceDate@1100528802 : Date;VAR OTotalRiskCost@1100528803 : Decimal;VAR OTotalRiskSales@1100528804 : Decimal;VAR OTargetRiskCost@1100528810 : Decimal;VAR OTargetRiskSales@1100528811 : Decimal;VAR OTotalOpportunityCost@1100528805 : Decimal;VAR OTotalOpportunitySales@1100528806 : Decimal;VAR OTargetOpportunityCost@1100528812 : Decimal;VAR OTargetOpportunitySales@1100528813 : Decimal);
    VAR
      oApplicableRiskOppSchedule@1100528807 : Record 11229900;
      RiskLine@1100528808 : Record 11229903;
      OpportunityLine@1100528809 : Record 11229904;
    BEGIN
      DetermineApplicableRiskOppSchedule(ISource, ISourceCode, IReferenceDate, oApplicableRiskOppSchedule);

      RiskLine.SETRANGE(Source, oApplicableRiskOppSchedule.Source);
      RiskLine.SETRANGE("Source Code", oApplicableRiskOppSchedule."Source Code");
      RiskLine.SETRANGE("Schedule Date", oApplicableRiskOppSchedule.Date);
      IF RiskLine.FINDLAST THEN
        RiskLine.CALCFIELDS("Total Risk Cost", "Total Risk Sales", "Target Risk Cost", "Target Risk Sales");

      OpportunityLine.SETRANGE(Source, oApplicableRiskOppSchedule.Source);
      OpportunityLine.SETRANGE("Source Code", oApplicableRiskOppSchedule."Source Code");
      OpportunityLine.SETRANGE("Schedule Date", oApplicableRiskOppSchedule.Date);
      IF OpportunityLine.FINDLAST THEN
        OpportunityLine.CALCFIELDS("Total Opportunity Cost", "Total Opportunity Sales", "Target Opportunity Cost", "Target Opportunity Sales");

      OTotalRiskCost := RiskLine."Total Risk Cost";
      OTotalRiskSales := RiskLine."Total Risk Sales";
      OTargetRiskCost := RiskLine."Target Risk Cost";
      OTargetRiskSales := RiskLine."Target Risk Sales";
      OTotalOpportunityCost := OpportunityLine."Total Opportunity Cost";
      OTotalOpportunitySales := OpportunityLine."Total Opportunity Sales";
      OTargetOpportunityCost := OpportunityLine."Target Opportunity Cost";
      OTargetOpportunitySales := OpportunityLine."Target Opportunity Sales";
    END;

    PROCEDURE DetermineApplicableRiskOppSchedule@1100528807(ISource@1100528800 : 'Project,Try-Out,Service Contract';ISourceCode@1100528801 : Code[20];IReferenceDate@1100528803 : Date;VAR OApplicableRiskOppSchedule@1100528804 : Record 11229900);
    BEGIN
      OApplicableRiskOppSchedule.SETRANGE(Source, ISource);
      OApplicableRiskOppSchedule.SETRANGE("Source Code", ISourceCode);
      OApplicableRiskOppSchedule.SETFILTER(Date, '<=%1', IReferenceDate);
      IF OApplicableRiskOppSchedule.FINDLAST THEN;
    END;

    PROCEDURE BaseRiskOpportunityAppliesToTarget@1100528805(IBaseRiskOpportunityCode@1100528801 : Code[20];ITargetSource@1100528802 : 'Project,Try-Out,Service Contract') : Boolean;
    VAR
      BaseRiskOpportunity@1100528800 : Record 11229899;
    BEGIN
      IF IBaseRiskOpportunityCode = '' THEN
        EXIT(TRUE);

      IF BaseRiskOpportunity.GET(IBaseRiskOpportunityCode) THEN BEGIN
        IF BaseRiskOpportunity."Apply To" = BaseRiskOpportunity."Apply To"::All THEN
          EXIT(TRUE);
        CASE ITargetSource OF
          ITargetSource::Project:
            BEGIN
              IF BaseRiskOpportunity."Apply To" = BaseRiskOpportunity."Apply To"::Project THEN
                EXIT(TRUE);
            END;
          ITargetSource::"Try-Out":
            BEGIN
              IF BaseRiskOpportunity."Apply To" = BaseRiskOpportunity."Apply To"::"Try-Out" THEN
                EXIT(TRUE);
            END;
          ITargetSource::"Service Contract":
            BEGIN
              IF BaseRiskOpportunity."Apply To" = BaseRiskOpportunity."Apply To"::"Service Contract" THEN
                EXIT(TRUE);
            END;
        END;
      END;

      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

