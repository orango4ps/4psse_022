OBJECT Table 11012584 Standard Rate Component
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               lvRateCompPostingRec@1100485001 : Record 11020500;
             BEGIN
               lvRateCompPostingRec.SETRANGE("Rate Component", Code);
               lvRateCompPostingRec.DELETEALL;
             END;

    CaptionML=[ENU=Standard Rate Component;
               NOR=Standard satskomponent;
               SVE=Standardavgiftskomponent];
    LookupPageID=Page11012617;
    DrillDownPageID=Page11012617;
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 20  ;   ;Description         ;Text30        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 30  ;   ;Internal/External   ;Option        ;OnValidate=BEGIN
                                                                {
                                                                //* Is not allowed to modify this in the rate components of existing rental rates, because this has consequences for the rate.
                                                                //* Is also not likely that this field is modified. Note: Update of other fields is also not done, so why this field.
                                                                //* 07-10-2010 (19210) When 'Based on' surcharges this not allowed at all!
                                                                RentalRateCompRec.RESET;
                                                                RentalRateCompRec.SETRANGE("Rental Rate Code", Code);
                                                                RentalRateCompRec.MODIFYALL("Internal/External", "Internal/External");
                                                                }
                                                              END;

                                                   CaptionML=[ENU=Internal/External;
                                                              NOR=Internt/Eksternt;
                                                              SVE=Internt/externt];
                                                   OptionCaptionML=[ENU=Internal,External;
                                                                    NOR=Internt,Eksternt;
                                                                    SVE=Internt,Externt];
                                                   OptionString=Internal,External }
    { 40  ;   ;Based on            ;Option        ;OnValidate=BEGIN
                                                                IF ("Based on" = "Based on"::None) THEN BEGIN
                                                                  Percentage := 0;
                                                                  "Pass on Percentage" := 100;
                                                                END ELSE BEGIN
                                                                  IF ("Based on" <> xRec."Based on") THEN BEGIN
                                                                    IF ("Pass on Percentage" = 0) THEN
                                                                      "Pass on Percentage" := 100;
                                                                  END;
                                                                  IF IsSurcharge() THEN  //*19210
                                                                    "Pass on Percentage" := 100;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Based on;
                                                              NOR=Basert p†;
                                                              SVE=Baserad p†];
                                                   OptionCaptionML=[ENU=" ,Depreciation,New Price,Base Amount,Average Investment Value,,,,,,,,,,,,,,,,,,,,,Surcharge";
                                                                    NOR=" ,Avskrivning,Ny Pris,Grunnbel›p,Gjennomsnittlig investeringsverdi,,,,,,,,,,,,,,,,,,,,,Tilleggsgebyr";
                                                                    SVE=" ,Avskrivning,Nytt pris,Grundbelopp,Genomsnittligt investeringsv„rde,,,,,,,,,,,,,,,,,,,,,Till„ggsavgift"];
                                                   OptionString=None,Depreciation,New Price,Base Amount,AverInvestValue,,,,,,,,,,,,,,,,,,,,,SurchargeL1;
                                                   Description=Option must be the same as in T11012585 }
    { 50  ;   ;Pass on Percentage  ;Decimal       ;InitValue=100;
                                                   OnValidate=BEGIN
                                                                //IF ("Based on" = "Based on"::None) THEN  //*19210.o
                                                                IF ("Based on" = "Based on"::None) OR IsSurcharge() THEN  //*19210
                                                                  "Pass on Percentage" := 100;
                                                              END;

                                                   CaptionML=[ENU=Pass on percentage.;
                                                              NOR=Videresend Prosent.;
                                                              SVE=Vidarebefordra procent.];
                                                   MinValue=0 }
    { 60  ;   ;Percentage          ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Based on" = "Based on"::None) THEN
                                                                  Percentage := 0;
                                                              END;

                                                   CaptionML=[ENU=Percentage;
                                                              NOR=Prosent;
                                                              SVE=Procent];
                                                   MinValue=0 }
    { 70  ;   ;Cost Component      ;Code10        ;TableRelation="Cost Component Plant";
                                                   CaptionML=[ENU=Cost Component;
                                                              NOR=Kostnadskomponent;
                                                              SVE=Kostnadsdel] }
    { 200 ;   ;Gen. Bus. Posting Group Filter;Code20;
                                                   FieldClass=FlowFilter;
                                                   TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group Filter;
                                                              NOR=Generell bevegelse, Bokf›ringsgruppefilter;
                                                              SVE=Allm. r”relse, bokf”ringsmallfilter] }
    { 210 ;   ;Plant Posting Group Filter;Code10  ;FieldClass=FlowFilter;
                                                   TableRelation="Plant Posting Group";
                                                   CaptionML=[ENU=Plant Posting Group Filter;
                                                              NOR=Maskin, Bokf›ringsgruppefilter;
                                                              SVE=Maskin, bokf”ringsmallfilter] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE IsSurcharge@1100525000() : Boolean;
    BEGIN
      //*19210
      CASE "Based on" OF
        "Based on"::SurchargeL1:
          EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

