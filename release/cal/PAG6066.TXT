OBJECT Page 6066 Contract Gain/Loss (Groups)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Contract Gain/Loss (Groups);
               NOR=Kontraktresultat (grupper);
               SVE=Kontrakt vinst/fîrlust (gr.)];
    ApplicationArea=#Service;
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table2000000007;
    DataCaptionExpr='';
    PageType=Card;
    UsageCategory=Tasks;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 IF PeriodStart = 0D THEN
                   PeriodStart := WORKDATE;
                 MATRIX_GenerateColumnCaptions(SetWanted::Initial);
               END;

    OnFindRecord=BEGIN
                   EXIT(TRUE);
                 END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 77      ;1   ;Action    ;
                      Name=ShowMatrix;
                      CaptionML=[ENU=&Show Matrix;
                                 NOR=Vi&s matrise;
                                 SVE=Vi&sa matris];
                      ToolTipML=[ENU=View the data overview according to the selected filters and options.;
                                 NOR=Vis den dataoversikten i henhold til de valgte filtrene og alternativene.;
                                 SVE=Visa dataîversikten med hÑnsyn taget till de valda filtren och alternativen.];
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShowMatrix;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MatrixForm@1098 : Page 9259;
                               BEGIN
                                 IF PeriodStart = 0D THEN
                                   PeriodStart := WORKDATE;
                                 CLEAR(MatrixForm);

                                 MatrixForm.Load(MATRIX_CaptionSet,MatrixRecords,MATRIX_CurrentNoOfColumns,AmountType,PeriodType,
                                   GroupFilter,PeriodStart);
                                 MatrixForm.RUNMODAL;
                               END;
                                }
      { 1110    ;1   ;Action    ;
                      CaptionML=[ENU=Previous Set;
                                 NOR=Forrige sett;
                                 SVE=FîregÜende uppsÑttning];
                      ToolTipML=[ENU=Go to the previous set of data.;
                                 NOR=GÜ til forrige datasett.;
                                 SVE=GÜ till fîregÜende datauppsÑttning.];
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(SetWanted::Previous);
                               END;
                                }
      { 1112    ;1   ;Action    ;
                      CaptionML=[ENU=Next Set;
                                 NOR=Neste sett;
                                 SVE=NÑsta uppsÑttning];
                      ToolTipML=[ENU=Go to the next set of data.;
                                 NOR=GÜ til neste datasett.;
                                 SVE=GÜ till nÑsta datauppsÑttning.];
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(SetWanted::Next);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 22  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=AllmÑnt] }

    { 15  ;2   ;Field     ;
                CaptionML=[ENU=Period Start;
                           NOR=Periodens start;
                           SVE=Periodstart];
                ToolTipML=[ENU=Specifies the starting date of the period that you want to view.;
                           NOR=Angir startdatoen for perioden du vil vise.;
                           SVE=Anger startdatumet fîr tidsperioden som du vill visa.];
                ApplicationArea=#Service;
                SourceExpr=PeriodStart }

    { 1907524401;1;Group  ;
                CaptionML=[ENU=Filters;
                           NOR=Filtre;
                           SVE=Filter] }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Contract Group Filter;
                           NOR=Kontraktgruppefilter;
                           SVE=Kontraktgruppfilter];
                ToolTipML=[ENU=Specifies billable prices for the job task that are related to items, expressed in the local currency.;
                           NOR=Angir fakturerbare priser for prosjektoppgaven som er relatert til varer, uttrykt i den lokale valutaen.;
                           SVE=Anger fakturerbara priser fîr projektaktiviteten som berîr artiklar, i den lokala valutan.];
                ApplicationArea=#Service;
                SourceExpr=GroupFilter;
                OnValidate=BEGIN
                             MATRIX_GenerateColumnCaptions(SetWanted::Initial);
                             GroupFilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           ContractGr.RESET;
                           IF PAGE.RUNMODAL(0,ContractGr) = ACTION::LookupOK THEN BEGIN
                             Text := ContractGr.Code;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 1906098301;1;Group  ;
                CaptionML=[ENU=Matrix Options;
                           NOR=Matrisealternativer;
                           SVE=Matrisalternativ] }

    { 1107;2   ;Field     ;
                CaptionML=[ENU=View by;
                           NOR=Vis etter;
                           SVE=Visa per];
                ToolTipML=[ENU=Specifies by which period amounts are displayed.;
                           NOR=Angir hvilken periode belõp vises basert pÜ.;
                           SVE=Anger efter vilken period belopp visas.];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 NOR=Dag,Uke,MÜned,Kvartal,èr,Regnskapsperiode;
                                 SVE=Dag,Vecka,MÜnad,Kvartal,èr,Bokfîringsperiod];
                ApplicationArea=#Service;
                SourceExpr=PeriodType }

    { 1108;2   ;Field     ;
                CaptionML=[ENU=View as;
                           NOR=Vis som;
                           SVE=Visa som];
                ToolTipML=[ENU=Specifies how amounts are displayed. Net Change: The net change in the balance for the selected period. Balance at Date: The balance as of the last day in the selected period.;
                           NOR=Angir hvordan belõp skal vises. Bevegelse: Bevegelsen i balansen for den valgte perioden. Saldo per dato: Saldoen per siste dag i den valgte perioden.;
                           SVE=Anger hur belopp visas. NettofîrÑndring: NettofîrÑndringen i saldot fîr den valda perioden. Saldo t.o.m. datum: Saldot per den sista dagen i den valda perioden.];
                OptionCaptionML=[ENU=Net Change,Balance at Date;
                                 NOR=Bevegelse,Saldo per dato;
                                 SVE=NettofîrÑndring,Saldo t.o.m. datum];
                ApplicationArea=#Service;
                SourceExpr=AmountType }

    { 1109;2   ;Field     ;
                CaptionML=[ENU=Column Set;
                           NOR=Kolonnesett;
                           SVE=KolumnuppsÑttning];
                ToolTipML=[ENU=Specifies the range of values that are displayed in the matrix window, for example, the total period. To change the contents of the field, choose Next Set or Previous Set.;
                           NOR=Angir verdiomrÜdene som vises i matrisevinduet, for eksempel hele perioden. Hvis du vil endre innholdet i feltet, velger du Neste sett eller Forrige sett.;
                           SVE=Anger vÑrdeintervallen som visas i tabellfînstret, till exempel hela perioden. Om du vill Ñndra innehÜllet i fÑltet vÑljer du NÑsta uppsÑttning eller FîregÜende uppsÑttning.];
                ApplicationArea=#Service;
                SourceExpr=MATRIX_CaptionRange;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      MatrixRecords@1099 : ARRAY [32] OF Record 5966;
      MatrixRecord@1019 : Record 5966;
      ContractGr@1002 : Record 5966;
      MATRIX_CaptionSet@1100 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1101 : Text;
      PKFirstRecInCurrSet@1105 : Text;
      MATRIX_CurrentNoOfColumns@1106 : Integer;
      AmountType@1004 : 'Net Change,Balance at Date';
      PeriodType@1005 : 'Day,Week,Month,Quarter,Year';
      GroupFilter@1006 : Text[250];
      PeriodStart@1008 : Date;
      SetWanted@1021 : 'Initial,Previous,Same,Next';

    LOCAL PROCEDURE MATRIX_GenerateColumnCaptions@1107(SetWanted@1001 : 'First,Previous,Same,Next');
    VAR
      MatrixMgt@1003 : Codeunit 9200;
      RecRef@1002 : RecordRef;
      CurrentMatrixRecordOrdinal@1000 : Integer;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MatrixRecords);
      CurrentMatrixRecordOrdinal := 1;
      IF GroupFilter <> '' THEN
        MatrixRecord.SETFILTER(Code,GroupFilter)
      ELSE
        MatrixRecord.SETRANGE(Code);
      RecRef.GETTABLE(MatrixRecord);
      RecRef.SETTABLE(MatrixRecord);

      MatrixMgt.GenerateMatrixData(RecRef,SetWanted,ARRAYLEN(MatrixRecords),1,PKFirstRecInCurrSet,
        MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
      IF MATRIX_CurrentNoOfColumns > 0 THEN BEGIN
        MatrixRecord.SETPOSITION(PKFirstRecInCurrSet);
        MatrixRecord.FIND;
        REPEAT
          MatrixRecords[CurrentMatrixRecordOrdinal].COPY(MatrixRecord);
          CurrentMatrixRecordOrdinal := CurrentMatrixRecordOrdinal + 1;
        UNTIL (CurrentMatrixRecordOrdinal > MATRIX_CurrentNoOfColumns) OR (MatrixRecord.NEXT <> 1);
      END;
    END;

    LOCAL PROCEDURE GroupFilterOnAfterValidate@19050517();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    BEGIN
    END.
  }
}

