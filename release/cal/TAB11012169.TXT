OBJECT Table 11012169 Estimate Base Part
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               PartLineRec.SETRANGE("Part Group", "Part Group");
               PartLineRec.SETRANGE(Part, Code);
               PartLineRec.DELETEALL(TRUE);

               //db.sn, 28-11-11: M30268
               TextRec.SETRANGE("Table Name", TextRec."Table Name"::Estimate);
               TextRec.SETFILTER(Group, '%1', '');
               TextRec.SETFILTER("No.", '%1', '');
               TextRec.SETFILTER("Estimate No.", '%1', '');
               TextRec.SETFILTER("Sub-Estimate No.", '%1', '');
               TextRec.SETRANGE("Part Group", "Part Group");
               TextRec.SETRANGE(Part, Code);
               TextRec.SETRANGE("Estimate Line No.", 0);
               TextRec.DELETEALL;
               //db.en, 28-11-11: M30268
             END;

    OnRename=BEGIN
               ERROR(Text000);
             END;

    CaptionML=[ENU=Estimate Base Part;
               NOR=Kalkuler Basedel];
    LookupPageID=Page11012181;
  }
  FIELDS
  {
    { 10  ;   ;Part Group          ;Code10        ;TableRelation="Estimate Group".No. WHERE (Type=CONST(Part));
                                                   CaptionML=[ENU=Part Group;
                                                              NOR=Del gruppe;
                                                              SVE=Delgrupp] }
    { 20  ;   ;Code                ;Code20        ;AltSearchField=Search Name;
                                                   OnValidate=BEGIN
                                                                ElementFormat.CreateStandardPartEst("Part Group",Code,Chapter,Paragraph,Level);
                                                                IF CurrFieldNo = FIELDNO(Code) THEN
                                                                  IF (xRec.Code <> '') AND (xRec.Code <> Code) THEN
                                                                    ERROR(Text000);  //db, 28-08-14: C017149
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 30  ;   ;Search Name         ;Code50        ;CaptionML=[ENU=Search Name;
                                                              NOR=S›kenavn;
                                                              SVE=S”knamn] }
    { 40  ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                IF ("Search Name" = UPPERCASE(xRec.Description)) OR ("Search Name" = '') THEN
                                                                  "Search Name" := Description;
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 41  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2];
                                                   Description=DP00686 }
    { 50  ;   ;Level               ;Integer       ;CaptionML=[ENU=Level;
                                                              NOR=Niv†;
                                                              SVE=Niv†] }
    { 60  ;   ;Chapter             ;Code20        ;CaptionML=[ENU=Chapter;
                                                              NOR=Kapittel;
                                                              SVE=Kapitel] }
    { 70  ;   ;Paragraph           ;Code20        ;CaptionML=[ENU=Paragraph;
                                                              NOR=Avsnitt;
                                                              SVE=Stycke] }
    { 80  ;   ;Quantity            ;Decimal       ;InitValue=1;
                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal] }
    { 90  ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=Enhet;
                                                              SVE=M†ttenhet] }
    { 95  ;   ;Feature Group       ;Code10        ;TableRelation="Estimate Group".No.;
                                                   CaptionML=[ENU=Feature Group;
                                                              NOR=Funksjonsgruppe;
                                                              SVE=Funktionsgrupp] }
    { 100 ;   ;Feature Cluster     ;Code10        ;TableRelation="Estimate Feature Cluster"."Feature Cluster";
                                                   CaptionML=[ENU=Feature Cluster;
                                                              NOR=Funksjonsklynge;
                                                              SVE=Funktionskluster] }
    { 110 ;   ;Element             ;Code20        ;TableRelation="Base Element".Code;
                                                   OnValidate=BEGIN
                                                                ElementFormat.FormatElem(Element,2,'');
                                                                IF Element <> '' THEN
                                                                  ElemRec.GET(Element);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 120 ;   ;Excel Estimate Template;Text250    ;OnValidate=BEGIN
                                                                IF CheckValidExcelTemplate(TRUE, FIELDNO("Excel Estimate Template")) THEN;
                                                              END;

                                                   OnLookup=VAR
                                                              EstSetup@1100485002 : Record 11012150;
                                                              FileMgt@1100525000 : Codeunit 419;
                                                              lvExcelTemplate@1100485000 : Text[250];
                                                              DirectoryName@1100525001 : Text;
                                                              FileAbsPathName@1100525002 : Text;
                                                            BEGIN
                                                              EstSetup.GET;
                                                              DirectoryName := EstSetup."Pathname Excel Est. Template";
                                                              IF FileMgt.SelectFile('xlt', DirectoryName, lvExcelTemplate, FileAbsPathName) THEN
                                                                VALIDATE("Excel Estimate Template",lvExcelTemplate);
                                                            END;

                                                   CaptionML=[ENU=Excel Estimate Template;
                                                              NOR=Excel-kalkylemal;
                                                              SVE=Excel-kalkylmall] }
    { 141 ;   ;Part Line Exists    ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Estimate Part Line" WHERE (Part Group=FIELD(Part Group),
                                                                                                 Part=FIELD(Code)));
                                                   CaptionML=[ENU=Part Line Exists;
                                                              NOR=Delraden finnes;
                                                              SVE=Delraden finns];
                                                   Description=DP00381;
                                                   Editable=No }
    { 170 ;   ;Project Plann. Base Act. Code;Code10;
                                                   TableRelation="Project Planning Base Activity";
                                                   OnValidate=VAR
                                                                ProjectPlanningBaseActivity@1100528401 : Record 11012434;
                                                                FormatManagement@1100528400 : Codeunit 11012022;
                                                              BEGIN
                                                                FormatManagement.FormatElem("Project Plann. Base Act. Code", 20, '');
                                                                IF "Project Plann. Base Act. Code" <> '' THEN
                                                                  ProjectPlanningBaseActivity.GET("Project Plann. Base Act. Code");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Project Plann. Base Act. Code;
                                                              NOR=Prosjektplanlegging Kode for Basehandling;
                                                              SVE=Projektplan. Bas†tg. Kod] }
    { 180 ;   ;Unit of Qty per Unit;Code20        ;TableRelation="Unit of Measure".Code;
                                                   CaptionML=[ENU=Unit of Qty per Unit;
                                                              NOR=Antallsenhet per enhet;
                                                              SVE=Antalsenhet per enhet];
                                                   Description=DP00686 }
    { 200 ;   ;Surcharge % Labor   ;Decimal       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Surcharge % Labor;
                                                              SVE=Till„ggsavgiftsprocent, arbetskraft];
                                                   BlankZero=Yes;
                                                   Description=C035157 }
    { 201 ;   ;Surcharge % Material;Decimal       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Surcharge % Material;
                                                              SVE=Till„ggsavgiftsprocent, material];
                                                   BlankZero=Yes;
                                                   Description=C035157 }
    { 202 ;   ;Surcharge % Subcontracting;Decimal ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Surcharge % Subcontracting;
                                                              SVE=Till„ggsavgiftsprocent, underentreprenad];
                                                   BlankZero=Yes;
                                                   Description=C035157 }
    { 203 ;   ;Surcharge % Plant   ;Decimal       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Surcharge % Plant;
                                                              SVE=Till„ggsavgiftsprocent, Maskin];
                                                   BlankZero=Yes;
                                                   Description=C035157 }
    { 204 ;   ;Surcharge % Sundry  ;Decimal       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Surcharge % Sundry;
                                                              SVE=Till„ggsavgiftsprocent, diverse];
                                                   BlankZero=Yes;
                                                   Description=C035157 }
  }
  KEYS
  {
    {    ;Part Group,Code                         ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PartLineRec@1210190002 : Record 11072076;
      TextRec@1210190000 : Record 11020595;
      ElemRec@1100485000 : Record 11012060;
      ElementFormat@1100485001 : Codeunit 11012022;
      Text000@1100409000 : TextConst 'ENU=Rename not allowed.;NOR=Ikke tillatt † bytte navn.;SVE=Det „r inte till†tet att byta namn.';
      Text001@1100485004 : TextConst 'ENU=%1 %2 doesn''t exist.;NOR=%1 %2 finnes ikke.;SVE=%1 %2 finns inte.';
      Text003@1100485007 : TextConst 'ENU="A %1 on a lower %2 is present. ";NOR=En %1 p† en lavere %2 finnes.;SVE="En %1 p† en l„gre %2 finns. "';
      Text004@1100485006 : TextConst 'ENU="A %1 on a higher %2 is present. ";NOR=En %1 p† en h›yere %2 finnes.;SVE="En %1 p† en h”gre %2 finns. "';
      FileMgt@1100525500 : Codeunit 419;

    PROCEDURE CheckValidExcelTemplate@1100485003(iUserInteraction@1100485004 : Boolean;CalledBy@1100525000 : Integer) : Boolean;
    VAR
      lvPartbyPartGroup@1100485001 : Record 11012169;
      EstimateExcelMgt@1100485002 : Codeunit 11012231;
      lvLevel@1100485000 : Integer;
    BEGIN
      IF (CalledBy = FIELDNO("Excel Estimate Template")) AND ("Excel Estimate Template" = '') THEN
        EXIT(TRUE);

      IF NOT FileMgt.ClientFileExists(EstimateExcelMgt.GetTemplPathFileBasePart(Rec)) THEN
        IF iUserInteraction THEN
          ERROR(Text001,FIELDCAPTION("Excel Estimate Template"),EstimateExcelMgt.GetTemplPathFileBasePart(Rec))
        ELSE
          EXIT(FALSE);

      lvPartbyPartGroup.SETRANGE("Part Group","Part Group");

      CASE Level OF
        //0: No Filters
        1: lvPartbyPartGroup.SETRANGE(Chapter,Chapter);
        2: lvPartbyPartGroup.SETRANGE(Paragraph,Paragraph);
        3: lvPartbyPartGroup.SETRANGE(Code,Code);
      END;

      lvPartbyPartGroup.SETFILTER(Level,'>%1',Level);
      IF CalledBy = FIELDNO("Excel Estimate Template") THEN
        lvPartbyPartGroup.SETFILTER("Excel Estimate Template",'<>%1','');
      FILTERGROUP(10);
      lvPartbyPartGroup.SETFILTER(Code,'<>%1',Code);
      FILTERGROUP(0);
      IF lvPartbyPartGroup.FIND('-') THEN BEGIN
        IF iUserInteraction THEN BEGIN
          IF CalledBy = FIELDNO("Excel Estimate Template") THEN
            ERROR(Text003,FIELDCAPTION("Excel Estimate Template"),FIELDCAPTION(Level));
        END ELSE BEGIN
          EXIT(FALSE);
        END;
      END;

      //Check overlying parts.
      lvPartbyPartGroup.SETRANGE(Chapter);
      lvPartbyPartGroup.SETRANGE(Paragraph);
      lvPartbyPartGroup.SETRANGE(Code);
      IF CalledBy = FIELDNO("Excel Estimate Template") THEN
        lvPartbyPartGroup.SETFILTER("Excel Estimate Template",'<>%1','');
      lvLevel := Level;
      WHILE lvLevel > 0 DO
        BEGIN
          lvLevel -= 1;
          lvPartbyPartGroup.SETRANGE(Level,lvLevel);
          CASE lvLevel OF
            0:
              BEGIN
                lvPartbyPartGroup.SETFILTER(Chapter,'%1','');
                lvPartbyPartGroup.SETFILTER(Paragraph,'%1','');
              END;
            1:
              BEGIN
                lvPartbyPartGroup.SETRANGE(Chapter,Chapter);
                lvPartbyPartGroup.SETFILTER(Paragraph,'%1','');
              END;
            2:
              BEGIN
                lvPartbyPartGroup.SETRANGE(Chapter,Chapter);
                lvPartbyPartGroup.SETRANGE(Paragraph,Paragraph);
              END;
          END;
          IF lvPartbyPartGroup.FIND('-') THEN BEGIN
            IF iUserInteraction THEN BEGIN
              IF CalledBy = FIELDNO("Excel Estimate Template") THEN
                ERROR(Text004,FIELDCAPTION("Excel Estimate Template"),FIELDCAPTION(Level));
            END ELSE BEGIN
              EXIT(FALSE);
            END;
          END;
        END;

      EXIT(TRUE);
    END;

    PROCEDURE CheckExcelTemplateFilled@1100485005();
    VAR
      EstSetup@1100485000 : Record 11012150;
    BEGIN
      EstSetup.GET;
      IF "Excel Estimate Template" = '' THEN BEGIN
        "Excel Estimate Template" := EstSetup."Excel Estimate Template";
        IF CheckValidExcelTemplate(FALSE, FIELDNO("Excel Estimate Template")) THEN
          VALIDATE("Excel Estimate Template",EstSetup."Excel Estimate Template")
        ELSE
          "Excel Estimate Template" := '';
      END;
    END;

    PROCEDURE GetDataCaption@1100528000() : Text[250];
    BEGIN
      EXIT(STRSUBSTNO('%1 - %2 - %3', "Part Group", Code, Description));  //db, 16-02-15
    END;

    BEGIN
    END.
  }
}

