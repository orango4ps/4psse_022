OBJECT XMLport 11012406 Imp. Service Contract Installm
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Imp. Service Contract;
               SVE=Imp. servicekontrakt];
    DefaultFieldsValidation=No;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    XmlPortID := 11012406;
                    MainTableID := 11071707;
                    XMLPortRequestPageID := 11230056;
                    UseOldContNoBln := TRUE;
                  END;

    OnPreXMLport=VAR
                   ConversionXMLPort4PS@1100527700 : Record 11020640;
                 BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     ConversionXMLPort4PS.UpdateFromXMLPort(XmlPortID,MainTableID,0,XMLPortRequestPageID,FALSE,0);
                     COMMIT;
                     ERROR('');
                   END;

                   ConvMgt.DeleteConComment(XmlPortID);
                   ConvMgt.CreateConComment(XmlPortID,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XmlPortID,'Start');
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XmlPortID,'Stop');
                    ConvMgt.CreateConComment(XmlPortID,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{755F5B7F-F062-4834-8364-DC4CD51C5A62}];  ;Root                ;Element ;Text     }

    { [{A7DBD164-8D3E-4F8D-B3A0-89F91BC12205}];1 ;ContractInstallment ;Element ;Table   ;
                                                  SourceTable=Table11071707;
                                                  SourceTableView=SORTING(Field10,Field20);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              ClearFields;
                                                                            END;

                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 StripData;
                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Contract Installment");

                                                                                 WITH "Contract Installment" DO BEGIN
                                                                                   ContCde := ConvMgt.DetermineNewCode(UseOldContNoBln,CommentRec."Table Name"::"Service Contract",ContCommentCde,A);
                                                                                   IF ContCde <> '' THEN BEGIN
                                                                                     VALIDATE("Service Contract No.",ContCde);
                                                                                     VALIDATE("Line No.",GetLineNo);
                                                                                     INSERT(TRUE);

                                                                                     VALIDATE("Invoice From",BDate);
                                                                                     VALIDATE("Invoice Interval",CDateF);
                                                                                     VALIDATE(Description,D);

                                                                                     IF EDate <> 0D THEN
                                                                                       VALIDATE("Ending Date",EDate);

                                                                                     IF FDec <> 0 THEN
                                                                                       AddContractAmount;

                                                                                     "Invoiced Until" := HDate;
                                                                                     MODIFY(TRUE);
                                                                                   END ELSE
                                                                                     ConvMgt.CreateConComment(XmlPortID,
                                                                                     ConvMgt.CreateNoRecAddedCommentTxt(
                                                                                     11012812,
                                                                                     A,
                                                                                     MainTableID,
                                                                                     A));

                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{5C900A9C-2240-4551-8D3B-A67A2D629F53}];2 ;A                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{5E5EE9AF-296C-4B48-B3A4-71FD1D3BDBB8}];2 ;B                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF B <> '' THEN
                                                                                    EVALUATE(BDate,B);
                                                                                END;
                                                                                 }

    { [{81EF86E1-A401-49BA-998E-C96326459340}];2 ;C                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF C <> '' THEN
                                                                                    EVALUATE(CDateF,C);
                                                                                END;
                                                                                 }

    { [{A4D141C2-7800-4941-8428-EBDFE695445E}];2 ;D                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{A94DDF8B-AF48-4B38-93FE-471C5E7FDE8B}];2 ;E                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF E <> '' THEN
                                                                                    EVALUATE(EDate,E);
                                                                                END;
                                                                                 }

    { [{7009774A-5D5B-4893-B574-E0BA7086A95E}];2 ;F                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF F <> '' THEN
                                                                                    EVALUATE(FDec,F);
                                                                                END;
                                                                                 }

    { [{61A54020-5A22-4777-8499-A876D2E08C7F}];2 ;G                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF G <> '' THEN
                                                                                    EVALUATE(GDate,G);
                                                                                END;
                                                                                 }

    { [{C3892DEF-6174-4845-A9BD-FA81350F4D61}];2 ;H                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF H <> '' THEN
                                                                                    EVALUATE(HDate,H);
                                                                                END;
                                                                                 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=ENU=Imp. Service Location OBJ;
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                   UseOldContNoBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100409010;;Container;
                  Name=Imp. Service Contract Installm;
                  CaptionML=[ENU=Imp. Service Contract;
                             SVE=Imp. servicekontrakt];
                  ContainerType=ContentArea }

      { 1100409009;1;Group  ;
                  CaptionML=[ENU=Options;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525000;2;Field  ;
                  CaptionML=ENU=Lookup new Contract No. based on old Customer No.;
                  SourceExpr=UseOldContNoBln;
                  OnValidate=BEGIN
                               IF NOT UseOldContNoBln THEN
                                 ContCommentCde := '';
                             END;
                              }

      { 1100525001;2;Field  ;
                  Name=CustComCde;
                  CaptionML=ENU=Comment Code for searching Contract No.;
                  SourceExpr=ContCommentCde;
                  TableRelation="Comment Code" }

    }
  }
  CODE
  {
    VAR
      CommentRec@1100525024 : Record 97;
      ConvMgt@1100525023 : Codeunit 11020212;
      XmlPortID@1100525020 : Integer;
      MainTableID@1100525019 : Integer;
      XMLPortRequestPageID@1100527700 : Integer;
      ImpLineCounter@1100525018 : Integer;
      ConversionFileFormat@1100525017 : Record 11020691;
      RunIsImportRunBln@1100525016 : Boolean;
      ContCde@1100525011 : Code[20];
      UseOldContNoBln@1100525010 : Boolean;
      ContCommentCde@1100525009 : Code[10];
      BDate@1100525007 : Date;
      CDateF@1100525006 : DateFormula;
      EDate@1100525004 : Date;
      FDec@1100525003 : Decimal;
      GDate@1100525002 : Date;
      HDate@1100525001 : Date;

    PROCEDURE StripData@1100485001();
    BEGIN
      A := DELCHR(A,'<>',' ');
    END;

    PROCEDURE AddContractAmount@1210190202();
    VAR
      ContrInstallmAmntsbyDate@1210190000 : Record 11071708;
    BEGIN
      ContrInstallmAmntsbyDate.VALIDATE(Type,ContrInstallmAmntsbyDate.Type::Installment);
      ContrInstallmAmntsbyDate.VALIDATE("Service Contract No.","Contract Installment"."Service Contract No.");
      ContrInstallmAmntsbyDate.VALIDATE("Installment Line No.","Contract Installment"."Line No.");
      ContrInstallmAmntsbyDate.VALIDATE("Index Date",GDate);
      ContrInstallmAmntsbyDate.VALIDATE("Amount (LCY)",FDec);
      ContrInstallmAmntsbyDate.INSERT(FALSE);
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    VAR
      ContrInstallmAmntsbyDate@1100529902 : Record 11071708;
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XmlPortID);
        InsertColumnLine(XmlPortID,'A',MainTableID,"Contract Installment".FIELDNAME("Service Contract No."),'Code20','OldOrNewTxt');
        InsertColumnLine(XmlPortID,'B',MainTableID,"Contract Installment".FIELDNAME("Invoice From"),'Date','');
        InsertColumnLine(XmlPortID,'C',MainTableID,"Contract Installment".FIELDNAME("Invoice Interval"),'DateFormula','');
        InsertColumnLine(XmlPortID,'D',MainTableID,"Contract Installment".FIELDNAME(Description),'Text50','');
        InsertColumnLine(XmlPortID,'E',MainTableID,"Contract Installment".FIELDNAME("Ending Date"),'Date','');
        InsertColumnLine(XmlPortID,'F',11071708,ContrInstallmAmntsbyDate.FIELDNAME("Amount (LCY)"),'Decimal','');
        InsertColumnLine(XmlPortID,'G',11071708,ContrInstallmAmntsbyDate.FIELDNAME("Index Date"),'Date','');
        InsertColumnLine(XmlPortID,'H',MainTableID,"Contract Installment".FIELDNAME("Invoiced Until"),'Date','');
      END;
    END;

    PROCEDURE ClearFields@1100529900();
    BEGIN
      CLEAR("Contract Installment");
      CLEAR(ContCde);
      A := '';
      B := '';
      C := '';
      D := '';
      E := '';
      F := '';
      G := '';
      BDate := 0D;
      CLEAR(CDateF);
      EDate := 0D;
      FDec := 0;
      GDate := 0D;
      HDate := 0D;
    END;

    PROCEDURE GetLineNo@1100529001() : Integer;
    VAR
      ContractInstallment@1100529000 : Record 11071707;
    BEGIN
      ContractInstallment.SETRANGE("Service Contract No.",ContCde);
      IF ContractInstallment.FINDLAST THEN
        EXIT(ContractInstallment."Line No." + 10000)
      ELSE
        EXIT(10000);
    END;

    PROCEDURE InitXMLport@1100529500(iUseOldContNoBln@1100529501 : Boolean;iContCommentCde@1100529500 : Code[10]);
    BEGIN
      UseOldContNoBln := iUseOldContNoBln;
      ContCommentCde := iContCommentCde;
    END;

    BEGIN
    {
      // Old No.'s are stored in Comment Table (97), marked with [CommentCde].
      // Object No is stored in [XmlPortID]. In case of customisation (copy of dataport) change in OnInitDataport;
      //
      // Please use [AddConversionFileFormatLine] in case Import file format is changed.
    }
    END.
  }
}

