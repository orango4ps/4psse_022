OBJECT Page 11125560 Project Installments SMF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Projektraten;
               ENU=Project Installments;
               NLD=Projecttermijnen];
    SaveValues=Yes;
    MultipleNewLines=No;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11012018;
    DelayedInsert=Yes;
    DataCaptionFields=Project No.;
    PageType=List;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[DEU=Neu, Verarbeiten, Bericht, Summen kalk.;
                                ENU=New,Process,Report,Calc Totals;
                                NLD=Nieuw,Verwerken,Rapport,Totalen berekenen];
    OnOpenPage=VAR
                 JobsSetup@1100525000 : Record 315;
               BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 Currency.InitRoundingPrecision;
                 JobsSetup.GET();
               END;

    OnAfterGetRecord=VAR
                       RecRef@1100529700 : RecordRef;
                     BEGIN
                       RefreshAmounts;
                       RegisterExtDocFBEnabled := TRUE;
                       RecRef.GETTABLE(Rec);
                       CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
                       CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
                       CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode('');
                     END;

    OnNewRecord=VAR
                  lvExtensionContractRec@1100485001 : Record 11012004;
                BEGIN
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100529702;1 ;Action    ;
                      CaptionML=[DEU=&Belege;
                                 ENU=&Documents;
                                 NLD=&Documenten];
                      Image=Documents;
                      OnAction=VAR
                                 DocumentFilters@1100525001 : Codeunit 11012432;
                                 RecRef@1100525002 : RecordRef;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, TRUE);
                               END;
                                }
      { 1210190004;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1210190002;1 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=D&rucken;
                                 ENU=&Print;
                                 NLD=Af&drukken];
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 PrintDocument@1100485001 : Codeunit 229;
                                 ProjInstall@1210190001 : Record 11012018;
                               BEGIN
                                 //PrintDocument.PrintProjectInstallments(Rec);  //*32118.o

                                 //*32118.sn
                                 ProjInstall.COPY(Rec);
                                 IF ProjectFilterGroup > 0 THEN BEGIN
                                   ProjInstall.FILTERGROUP(ProjectFilterGroup);
                                   ProjInstall.SETRANGE("Project No.");  //* Reset
                                   ProjInstall.FILTERGROUP(0);
                                   //
                                   FILTERGROUP(ProjectFilterGroup);
                                   COPYFILTER("Project No.", ProjInstall."Project No.");
                                   FILTERGROUP(0);
                                 END;
                                 PrintDocument.PrintProjectInstallments(ProjInstall);
                                 //*32118.en
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Project No.";
                Visible=FALSE;
                Editable=False }

    { 18  ;2   ;Field     ;
                SourceExpr="Cost Object";
                Visible=FALSE;
                Editable=FALSE;
                LookupPageID=Cost Object List }

    { 1210190000;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE;
                Editable=FALSE }

    { 1210190048;2;Field  ;
                DrillDown=No;
                SourceExpr="Element Description";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="Installment No.";
                Editable=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr=Description;
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr=Principal;
                Visible=FALSE;
                Editable=FALSE }

    { 1100525012;2;Field  ;
                CaptionML=[DEU=Name Auftraggeber;
                           ENU=Principal Name;
                           NLD=Naam opdrachtgever];
                SourceExpr=GetPrincipalName;
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="Extension Contract";
                Visible=FALSE;
                Editable=FALSE;
                OnValidate=BEGIN
                             CurrPage.UPDATE;  // 26494.n
                           END;
                            }

    { 1210190037;2;Field  ;
                SourceExpr="Description Extension Contract";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Plot No.";
                Visible=FALSE;
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr=Option;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528402;2;Field  ;
                SourceExpr="Option Description";
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Installment Amount";
                Editable=FALSE }

    { 30  ;2   ;Field     ;
                SourceExpr=Chargeable;
                OnValidate=BEGIN
                             IF Chargeable AND ("Installment Amount (LCY)" <> 0) AND ("Invoice Price (LCY)" = 0) THEN
                              MESSAGE(Text003)
                           END;
                            }

    { 1100525004;2;Field  ;
                SourceExpr="Invoice Price";
                Editable=FALSE }

    { 1100525008;2;Field  ;
                AssistEdit=Yes;
                SourceExpr="Invoiced Price";
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               ShowPostedInvoices; //C018872
                             END;
                              }

    { 44  ;2   ;Field     ;
                CaptionML=[DEU=Bezahlt;
                           ENU=Paid;
                           NLD=Reeds betaald];
                BlankZero=Yes;
                SourceExpr=InvoicePayment;
                Editable=FALSE }

    { 1100529701;0;Container;
                ContainerType=FactBoxArea }

    { 1100529700;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                Enabled=RegisterExtDocFBEnabled;
                PartType=Page }

    { 1100527400;1;Part   ;
                Name=ProjectInstallTotalsSMFFB;
                SubPageLink=Project No.=FIELD(Project No.);
                PagePartID=Page11125561;
                PartType=Page }

  }
  CODE
  {
    VAR
      ProjRec@11012001 : Record 11072003;
      ProjPrincipalRec@11012002 : Record 11012005;
      ExtensionRec@1210190002 : Record 11012004;
      PlotRec@1210190003 : Record 11012500;
      VatPostingSetup@1100485005 : Record 325;
      Currency@1100485006 : Record 4;
      ProjectFilterGroup@1210190008 : Integer;
      AmountsInclCumulative@1100485002 : Boolean INDATASET;
      AmountsInclVAT@1100485004 : Boolean INDATASET;
      PrincipalReference@1210190007 : Text[50];
      "VAT Amount Long LeaseEditable"@1100409003 : Boolean INDATASET;
      ProjectNo@1100528701 : Code[20];
      ProjectNoEditable@1100528700 : Boolean INDATASET;
      RegisterExtDocFBEnabled@1100529700 : Boolean INDATASET;
      Text003@1100525002 : TextConst 'DEU="Sie erstellen eine Rechnung mit Betrag = 0";ENU="You are going to create an invoice with Amount = 0";NLD="Gaat u een factuur maken met Bedrag = 0."';
      DPA_IsHardFilter@1100528500 : Boolean;

    PROCEDURE InvoicePayment@2() : Decimal;
    VAR
      CustEntryRec@11012000 : Record 21;
      ProjLedgEntryRec@11012001 : Record 11072005;
      PercDec@11012002 : Decimal;
      Fbet@11012003 : Decimal;
    BEGIN
      Fbet := 0;
      ProjLedgEntryRec.SETCURRENTKEY("Project Invoice", "Installment Invoice", "Job No.", Principal, "Installment No.");
      ProjLedgEntryRec.SETRANGE("Project Invoice", TRUE);
      ProjLedgEntryRec.SETRANGE("Installment Invoice", TRUE);
      ProjLedgEntryRec.SETRANGE("Job No.", "Project No.");
      ProjLedgEntryRec.SETRANGE(Principal, Principal);
      ProjLedgEntryRec.SETRANGE("Plot No.","Plot No.");
      ProjLedgEntryRec.SETRANGE("Installment No.", "Installment No.");
      ProjLedgEntryRec.SETRANGE("Entry Type",ProjLedgEntryRec."Entry Type"::Sale);
      IF ProjLedgEntryRec.FINDSET THEN
        REPEAT
          CustEntryRec.SETCURRENTKEY("Document No.");
          CustEntryRec.SETFILTER(
            "Document Type",'%1|%2',CustEntryRec."Document Type"::Invoice,CustEntryRec."Document Type"::"Credit Memo");
          CustEntryRec.SETRANGE("Document No.", ProjLedgEntryRec."Document No.");
          //Invoicing to other customer then principal possible, depending on customerdata. Document No. is sufficient.
          IF CustEntryRec.FINDFIRST THEN BEGIN
            CustEntryRec.CALCFIELDS("Amount (LCY)","Remaining Amt. (LCY)");
            IF CustEntryRec."Amount (LCY)" <> 0 THEN BEGIN
              PercDec := (-1 * ProjLedgEntryRec."Total Price (LCY)") / CustEntryRec."Amount (LCY)";
              Fbet := Fbet + ROUND((PercDec * (CustEntryRec."Amount (LCY)" - CustEntryRec."Remaining Amt. (LCY)")),0.01);
            END;
          END;
        UNTIL ProjLedgEntryRec.NEXT = 0;
      EXIT(Fbet);
    END;

    PROCEDURE InvoicePaymentInclVAT@1210190005() : Decimal;
    VAR
      CustEntryRec@11012000 : Record 21;
      ProjLedgEntryRec@11012001 : Record 11072005;
      PercDec@11012002 : Decimal;
      Fbet@11012003 : Decimal;
    BEGIN
      // C-027114.n
      Fbet := 0;
      ProjLedgEntryRec.SETCURRENTKEY("Project Invoice", "Installment Invoice", "Job No.", Principal, "Installment No.");
      ProjLedgEntryRec.SETRANGE("Project Invoice", TRUE);
      ProjLedgEntryRec.SETRANGE("Installment Invoice", TRUE);
      ProjLedgEntryRec.SETRANGE("Job No.", "Project No.");
      ProjLedgEntryRec.SETRANGE(Principal, Principal);
      ProjLedgEntryRec.SETRANGE("Plot No.","Plot No.");
      ProjLedgEntryRec.SETRANGE("Installment No.", "Installment No.");
      ProjLedgEntryRec.SETRANGE("Entry Type",ProjLedgEntryRec."Entry Type"::Sale);
      IF ProjLedgEntryRec.FINDSET THEN
        REPEAT
          CustEntryRec.SETCURRENTKEY("Document No.");
          CustEntryRec.SETFILTER(
            "Document Type",'%1|%2',CustEntryRec."Document Type"::Invoice,CustEntryRec."Document Type"::"Credit Memo");
          CustEntryRec.SETRANGE("Document No.", ProjLedgEntryRec."Document No.");
          //Invoicing to other customer then principal possible, depending on customerdata. Document No. is sufficient.
          IF CustEntryRec.FINDFIRST THEN BEGIN
            CustEntryRec.CALCFIELDS("Amount (LCY)","Remaining Amt. (LCY)");
            IF CustEntryRec."Sales (LCY)" <> 0 THEN BEGIN
              PercDec := (-1 * ProjLedgEntryRec."Total Price (LCY)") / CustEntryRec."Sales (LCY)";
              Fbet := Fbet + ROUND((PercDec * (CustEntryRec."Amount (LCY)" - CustEntryRec."Remaining Amt. (LCY)")),0.01);
            END;
          END;
        UNTIL ProjLedgEntryRec.NEXT = 0;
      EXIT(Fbet);
    END;

    PROCEDURE InvoicedPriceInclVAT@1210190001() : Decimal;
    VAR
      InvPriceInclVAT@11012003 : Decimal;
    BEGIN
      // C-027114.n
      InvPriceInclVAT := 0;
      IF "Installment Amount" <> 0 THEN
        InvPriceInclVAT := ROUND("Invoiced Price" * "Installment Amount Incl. VAT"/"Installment Amount",0.01);
      EXIT(InvPriceInclVAT);
    END;

    PROCEDURE RefreshAmounts@1100530000();
    BEGIN
      //Call 23226
      CALCFIELDS("Invoiced Price","Invoice in Process", "Credit Memo in Process");
      CALCFIELDS("Invoiced Price (LCY)","Invoice in Process (LCY)", "Credit Memo in Process (LCY)");
      CALCFIELDS("Document (in Process)","Document (Invoiced)");  //db, 08-10-13
    END;

    PROCEDURE SetProjectFilterGroup@1210190002(FilterGroup@1210190000 : Integer);
    BEGIN
      //*32118
      ProjectFilterGroup := FilterGroup;
    END;

    PROCEDURE GetContractAmount@1210190000() : Decimal;
    BEGIN
      IF "Plot No." <> '' THEN BEGIN
        PlotRec.GET("Project No.", "Plot No.");
        EXIT(PlotRec."Building Price" + PlotRec."Additional Costs");
      END;

      IF "Extension Contract" <> '' THEN BEGIN
        ExtensionRec.GET("Project No.", "Extension Contract");
        EXIT(ExtensionRec."Contract Amount");
      END;

      IF ProjPrincipalRec.GET("Project No.", Principal) THEN
        EXIT(ProjPrincipalRec."Contract Amount")
      ELSE
        EXIT(0);
    END;

    LOCAL PROCEDURE InstallmentAmountOnAfterValida@19078325();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ProjPrincipalRecWKAPeriodOnAft@19045242();
    BEGIN
      ProjPrincipalRec.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE InvoiceinProcessOnDeactivate@19030728();
    BEGIN
      //Call 23226
      CALCFIELDS("Invoiced Price","Invoice in Process");
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE CreditMemoinProcessOnDeactivat@19056442();
    BEGIN
      //Call 23226
      CALCFIELDS("Invoiced Price","Credit Memo in Process");
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE VATAmountLongLeaseOnBeforeInpu@19055514();
    BEGIN
      //**4PS.n
      "VAT Amount Long LeaseEditable" := (ProjRec."Long Lease" AND VatPostingSetup.Manually AND ("Installment No." = '0'));
    END;

    LOCAL PROCEDURE InvoiceVATAmountLongLeaseOnBef@19022695();
    BEGIN
      //**4PS.n
      "VAT Amount Long LeaseEditable" := (ProjRec."Long Lease" AND VatPostingSetup.Manually AND ("Installment No." = '0'));
    END;

    PROCEDURE SetProject@1100528700(NewProjectNo@1100528700 : Code[20]);
    BEGIN
      ProjectNo := NewProjectNo;
      FILTERGROUP(2);
      SETRANGE("Project No.", ProjectNo);
      FILTERGROUP(0);
    END;

    BEGIN
    END.
  }
}

