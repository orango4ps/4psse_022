OBJECT Report 8616 Get Package Tables
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Pakettabellen abrufen;
               ENU=Get Package Tables;
               NLD=Pakkettabellen ophalen;
               NOR=Hent pakketabeller];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  ConfigLine@1000 : Record 8622;
                BEGIN
                  IF PackageCode = '' THEN
                    ERROR(Text001);

                  TempConfigSelection.RESET;
                  TempConfigSelection.SETRANGE("Line Type",TempConfigSelection."Line Type"::Table);
                  TempConfigSelection.SETRANGE(Selected,TRUE);
                  IF TempConfigSelection.FINDSET THEN
                    REPEAT
                      IF DataExists(TempConfigSelection."Table ID") AND NOT ConfigPackageTable.GET(PackageCode,TempConfigSelection."Table ID") THEN BEGIN
                        ConfigPackageTable.INIT;
                        ConfigPackageTable.VALIDATE("Package Code",PackageCode);
                        ConfigPackageTable.VALIDATE("Table ID",TempConfigSelection."Table ID");
                        ConfigPackageTable.INSERT(TRUE);
                        ConfigLine.GET(TempConfigSelection."Line No.");
                        IF ConfigLine."Package Code" = '' THEN BEGIN
                          ConfigLine."Package Code" := PackageCode;
                          ConfigLine.MODIFY;
                        END;
                      END;
                    UNTIL TempConfigSelection.NEXT = 0;

                  CurrReport.BREAK;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnInit=BEGIN
               InitSelection;
             END;

    }
    CONTROLS
    {
      { 8   ;0   ;Container ;
                  ContainerType=ContentArea }

      { 7   ;1   ;Group     ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 2   ;2   ;Field     ;
                  Name=SelectTables;
                  CaptionML=[DEU=Tabellen ausw„hlen;
                             ENU=Select Tables;
                             NLD=Tabellen selecteren;
                             NOR=Velg tabeller];
                  ToolTipML=[DEU=Legt fest, welche Tabellen einbezogen werden sollen. Wenn Sie das Feld w„hlen, ”ffnen sich die Fenster "Auswahl konfigurieren", in denen Sie Tabellen ausw„hlen k”nnen.;
                             ENU=Specifies which tables to include. When you choose the field, the Config. Selection windows opens in which you can select tables.;
                             NLD=Hiermee wordt opgegeven welke tabellen worden opgenomen. Als u het veld kiest, wordt het venster Config. Selectie geopend waarin u tabellen kunt selecteren.;
                             NOR=Angir hvilke tabeller som skal inkluderes. N†r du velger feltet, †pnes vinduet Konfig.utvalg der du kan velge tabeller.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=SelectedTables;
                  Editable=FALSE;
                  OnAssistEdit=VAR
                                 ConfigSelection@1000 : Page 8628;
                               BEGIN
                                 ConfigSelection.Set(TempConfigSelection);
                                 COMMIT;
                                 IF ConfigSelection.RUNMODAL = ACTION::OK THEN
                                   SelectedTables := ConfigSelection.Get(TempConfigSelection);
                               END;
                                }

      { 6   ;2   ;Field     ;
                  Name=WithDataOnly;
                  CaptionML=[DEU=Nur mit Daten;
                             ENU=With Data Only;
                             NLD=Alleen met gegevens;
                             NOR=Bare med data];
                  ToolTipML=[DEU=Legt fest, ob nur Daten aus den Tabellen einbezogen werden sollen.;
                             ENU=Specifies if only data from the tables is included.;
                             NLD=Hiermee wordt opgegeven of alleen gegevens uit de tabellen worden opgenomen.;
                             NOR=Angir om bare data fra tabellene blir inkludert.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=WithDataOnly }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ConfigPackageTable@1007 : Record 8613;
      TempConfigSelection@1003 : TEMPORARY Record 8621;
      TableInfo@1006 : Record 2000000028;
      SelectedTables@1008 : Integer;
      PackageCode@1001 : Code[20];
      WithDataOnly@1005 : Boolean;
      Text001@1009 : TextConst 'DEU=Paket ist nicht festgelegt.;ENU=Package is not set.;NLD=Pakket is niet ingesteld.;NOR=Pakke er ikke angitt.';

    [External]
    PROCEDURE Set@2(NewPackageCode@1001 : Code[20]);
    BEGIN
      PackageCode := NewPackageCode;
    END;

    LOCAL PROCEDURE DataExists@4(TableID@1000 : Integer) : Boolean;
    BEGIN
      IF NOT WithDataOnly THEN
        EXIT(TRUE);

      TableInfo.SETRANGE("Company Name",COMPANYNAME);
      TableInfo.SETRANGE("Table No.",TableID);
      IF TableInfo.FINDFIRST THEN
        IF TableInfo."No. of Records" > 0 THEN
          EXIT(TRUE);

      EXIT(FALSE);
    END;

    LOCAL PROCEDURE InitSelection@1();
    VAR
      ConfigLine@1000 : Record 8622;
    BEGIN
      WITH TempConfigSelection DO BEGIN
        RESET;
        ConfigLine.SETFILTER("Table ID",'<>0');
        IF ConfigLine.FINDSET THEN
          REPEAT
            IF (ConfigLine."Line Type" <> ConfigLine."Line Type"::Table) OR
               ((ConfigLine."Line Type" = ConfigLine."Line Type"::Table) AND (ConfigLine."Package Code" = ''))
            THEN
              IF NOT GET(ConfigLine."Line No.") THEN BEGIN
                INIT;
                "Line No." := ConfigLine."Line No.";
                "Table ID" := ConfigLine."Table ID";
                Name := ConfigLine.Name;
                "Line Type" := ConfigLine."Line Type";
                INSERT;
              END;
          UNTIL ConfigLine.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

