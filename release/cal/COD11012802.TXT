OBJECT Codeunit 11012802 Service Jnl. Post Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11012820;
    Permissions=TableData 11072005=imd,
                TableData 11072012=imd;
    OnRun=BEGIN
            GLSetup.GET;
            RunWithCheck(Rec);
          END;

  }
  CODE
  {
    VAR
      SMLedgEntry@1003 : Record 11012819;
      SMJnlLine@1005 : Record 11012820;
      SMJnlLine2@1006 : Record 11012820;
      SMReg@1009 : Record 11012821;
      GLSetup@1011 : Record 98;
      DimValRec@1210190000 : Record 349;
      ServOrderRec@1210190001 : Record 11012823;
      SMJnlCheckLine@1016 : Codeunit 11012801;
      DimMgt@1019 : Codeunit 408;
      NextEntryNo@1020 : Integer;
      ServLedgEntryNo@1100528500 : Integer;

    PROCEDURE RunWithCheck@4(VAR SMJnlLine2@1000 : Record 11012820);
    BEGIN
      SMJnlLine.COPY(SMJnlLine2);
      Code;
      SMJnlLine2 := SMJnlLine;
    END;

    LOCAL PROCEDURE Code@1();
    BEGIN
      WITH SMJnlLine DO BEGIN
        IF EmptyLine THEN
          EXIT;

        SMJnlCheckLine.RunCheck(SMJnlLine);

        IF SMLedgEntry."Entry No." = 0 THEN BEGIN
          SMLedgEntry.LOCKTABLE;
          IF SMLedgEntry.FIND('+') THEN
            NextEntryNo := SMLedgEntry."Entry No.";
          NextEntryNo := NextEntryNo + 1;
        END;

        IF SMReg."No." = 0 THEN BEGIN
          SMReg.LOCKTABLE;
          IF (NOT SMReg.FIND('+')) OR (SMReg."To Entry No." <> 0) THEN BEGIN
            SMReg.INIT;
            SMReg."No." := SMReg."No." + 1;
            SMReg."From Entry No." := NextEntryNo;
            SMReg."To Entry No." := NextEntryNo;
            SMReg."Creation Date" := TODAY;
            SMReg."Source Code" := "Source Code";
            //SMReg."Journal Batch Name" := "Journal Batch Name";
            SMReg."User ID" := USERID;
            SMReg.INSERT;
          END;
        END;
        SMReg."To Entry No." := NextEntryNo;
        SMReg.MODIFY;

        IF "Service Order No." <> '' THEN BEGIN
          ServOrderRec.GET("Service Order No.");
          IF SMJnlLine."Closing Procedure" = FALSE THEN  //db, 31-03-10: T4677
            ServOrderRec.CheckStatus(0);
        END;

        SMJnlLine2 := SMJnlLine;

        SMLedgEntry.INIT;
        SMLedgEntry."Entry No." := NextEntryNo;
        SMLedgEntry."Document Type" := SMJnlLine2."Document Type";
        SMLedgEntry."Document No." := SMJnlLine2."Document No.";
        SMLedgEntry."Document Line No." := SMJnlLine2."Document Line No.";
        SMLedgEntry."G/L Account" := SMJnlLine2."G/L Account";
        SMLedgEntry."WIP Account Costs" := SMJnlLine2."WIP Account Costs";
        SMLedgEntry."WIP Balance Account" := SMJnlLine2."WIP Balance Account";
        SMLedgEntry."Posting Date" := SMJnlLine2."Posting Date";
        SMLedgEntry."User ID" := USERID;
        SMLedgEntry."Global Dimension 1 Code"  := SMJnlLine2."Shortcut Dimension 1 Code";
        SMLedgEntry."Global Dimension 2 Code" := SMJnlLine2."Shortcut Dimension 2 Code";
        SMLedgEntry."Unit Cost (LCY)" := SMJnlLine2."Unit Cost (LCY)";
        SMLedgEntry.Quantity := SMJnlLine2.Quantity;
        SMLedgEntry.Description := SMJnlLine2.Description;
        SMLedgEntry."Description 2" := SMJnlLine2."Description 2";
        SMLedgEntry."Unit of Measure Code" := SMJnlLine2."Unit of Measure Code";
        SMLedgEntry."Qty. per Unit of Measure" := SMJnlLine2."Qty. per Unit of Measure";  //db, 14-03-13: C006483
        SMLedgEntry."Sales Price (LCY)" := SMJnlLine2."Sales Price (LCY)";
        SMLedgEntry."Total Cost (LCY)" := SMJnlLine2."Total Cost (LCY)";
        SMLedgEntry."Total Revenue (LCY)" := SMJnlLine2."Total Revenue (LCY)";
        // dp00116.sn
        SMLedgEntry."Currency Code" := SMJnlLine2."Currency Code";
        SMLedgEntry."Unit Cost" := SMJnlLine2."Unit Cost";
        SMLedgEntry."Sales Price" := SMJnlLine2."Sales Price";
        SMLedgEntry."Total Cost" := SMJnlLine2."Total Cost";
        SMLedgEntry."Total Revenue" := SMJnlLine2."Total Revenue";
        // dp00116.en
        SMLedgEntry."Service Contract No." := SMJnlLine2."Service Contract No.";
        SMLedgEntry."Installment No." := SMJnlLine2."Installment No.";
        SMLedgEntry."Installment Line No." := SMJnlLine2."Installment Line No.";
        SMLedgEntry."Customer No." := SMJnlLine2."Customer No.";
        SMLedgEntry."Vendor No." := SMJnlLine2."Vendor No.";
        SMLedgEntry."Customer Posting Group" := SMJnlLine2."Customer Posting Group";
        SMLedgEntry."Vendor Posting Group" := SMJnlLine2."Vendor Posting Group";
        SMLedgEntry.VALIDATE("Service Order No.", SMJnlLine2."Service Order No.");  //db, 07-01-09
        SMLedgEntry."Service Location No." := SMJnlLine2."Service Location No.";
        IF SMLedgEntry."Global Dimension 2 Code" <> '' THEN BEGIN
          DimMgt.GetDimValueRec(2, SMLedgEntry."Global Dimension 2 Code", DimValRec, TRUE,'');
          SMLedgEntry."Cost Type" := DimValRec."Cost Type";
        END ELSE BEGIN
          SMLedgEntry."Cost Type" := SMJnlLine2."Cost Type Closing Procedure";
        END;
        SMLedgEntry."Item No." := SMJnlLine2."Item No.";
        SMLedgEntry."Basic Item" := SMJnlLine2."Basic Item";
        SMLedgEntry."Trade Item" := SMJnlLine2."Trade Item";
        SMLedgEntry.Manufacturer := SMJnlLine2.Manufacturer;
        SMLedgEntry."Vendor (Trade Item)" := SMJnlLine2."Vendor (Trade Item)";
        SMLedgEntry."Supplying Company" := SMJnlLine2."Supplying Company";
        SMLedgEntry."Employee No." := SMJnlLine2."Employee No.";
        SMLedgEntry."Wage Component" := SMJnlLine2."Wage Component";
        SMLedgEntry."Project No." := SMJnlLine2."Project No.";
        SMLedgEntry."Cost Plus Line No." := SMJnlLine2."Cost Plus Line No.";
        SMLedgEntry."Cost Plus Entry Created" := (SMJnlLine2."Service Invoice" OR SMJnlLine2."Cost Plus Entry Created");
        SMLedgEntry.Surcharge := SMJnlLine2.Surcharge;
        SMLedgEntry.VALIDATE("Source Type");
        IF SMJnlLine2."Source Type" <> SMJnlLine2."Source Type"::" " THEN
          SMLedgEntry."Source Type" := SMJnlLine2."Source Type" -1;
        IF ("Service Order No." = '') AND
           ("Closing Procedure") AND
           ("Source Type Closing Procedure" <> "Source Type Closing Procedure"::"Not Used") THEN
          SMLedgEntry."Source Type" := "Source Type Closing Procedure" - 1;

        SMLedgEntry."Source Code" := SMJnlLine2."Source Code";
        SMLedgEntry."Reason Code" := SMJnlLine2."Reason Code";
        SMLedgEntry."Closed Costs" := SMJnlLine2."Closed Costs";
        SMLedgEntry."Closed Revenues" := SMJnlLine2."Closed Revenues";
        IF (SMJnlLine2.Surcharge = TRUE) OR
           (SMJnlLine2."Closing Procedure" = TRUE) THEN
          SMLedgEntry.Chargeable := FALSE;
        SMLedgEntry."Additional Cost" := SMJnlLine2."Additional Cost";
        SMLedgEntry."Cost Component" := SMJnlLine2."Cost Component";
        SMLedgEntry."Removal Contribution" := SMJnlLine2."Removal Contribution";
        SMLedgEntry."Location Code" := SMJnlLine2."Location Code";
        SMLedgEntry."Actual Preclosure Result" := SMJnlLine2."Actual Preclosure Result";
        SMLedgEntry."Actual Preclosure Cost" := SMJnlLine2."Actual Preclosure Cost";  //db, 01-05-08
        SMLedgEntry."Actual Preclosure Revenue" := SMJnlLine2."Actual Preclosure Revenue";  //db, 01-05-08
        IF SMJnlLine2."Original Cost Type" <> SMJnlLine2."Original Cost Type"::" " THEN BEGIN
          SMLedgEntry."Original Cost Type" := SMJnlLine2."Original Cost Type";
        END ELSE BEGIN
          SMLedgEntry."Original Cost Type" := SMLedgEntry."Cost Type" + 1;
        END;
        SMLedgEntry."Cost Entry No. Service Ledger" := SMJnlLine2."Cost Entry No. Service Ledger";
        SMLedgEntry."Sales Price Purch. Order" := SMJnlLine2."Sales Price Purch. Order";

        SMLedgEntry.VALIDATE("Cost Present");     //db, 03-10-08: M12864
        SMLedgEntry.VALIDATE("Revenue Present");  //db, 03-10-08: M12864

        SMLedgEntry."Country/Region Code" := SMJnlLine2."Country/Region Code";                                   //**4PS01.sn
        SMLedgEntry."Country/Region of Origin/Dest." := SMJnlLine2."Country/Region of Origin/Dest.";
        SMLedgEntry."Net Weight" := SMJnlLine2."Net Weight";
        SMLedgEntry."Tariff No." := SMJnlLine2."Tariff No.";
        SMLedgEntry."Transaction Type" := SMJnlLine2."Transaction Type";
        SMLedgEntry."Transport Method" := SMJnlLine2."Transport Method";
        SMLedgEntry."Entry/Exit Point" := SMJnlLine2."Entry/Exit Point";
        SMLedgEntry.Area := SMJnlLine2.Area;                                                       //**4PS01.en
        SMLedgEntry."Execution Date" := SMJnlLine2."Execution Date";
        SMLedgEntry."Rental Period" := SMJnlLine2."Rental Period";

        IF ("Closing Procedure") THEN BEGIN  //db, 26-02-10: M18149
          IF "Service Order No." <> '' THEN
            SMLedgEntry."Service Order WIP processed" := TRUE
          ELSE
            SMLedgEntry."Service Contract WIP processed" := TRUE;
        END;

        SMLedgEntry."Collective List No." := SMJnlLine2."Collective List No.";
        SMLedgEntry."Coll.-List SC Inv. Line No." := SMJnlLine2."Coll.-List SC Inv. Line No.";
        IF (SMJnlLine2."Service Control Period Date" <> SMLedgEntry."Service Control Period Date") AND (SMJnlLine2."Service Control Period Date" <> 0D) THEN
          SMLedgEntry.VALIDATE("Service Control Period Date", SMJnlLine2."Service Control Period Date");
        SMLedgEntry.Text := SMJnlLine2.Text;
        SMLedgEntry."Intercompany Ledger Entry No." := SMJnlLine2."Intercompany Ledger Entry No.";

        SMLedgEntry."Dimension Set ID" := SMJnlLine2."Dimension Set ID";  //**DP00387 new
        IF SMLedgEntry."Service Order No." <> '' THEN
          SMLedgEntry."Service Category" := SMJnlLine2."Service Category"
        ELSE
          IF (SMLedgEntry."Service Contract No." <> '') AND (SMLedgEntry."Service Category" = '') THEN
            SMLedgEntry."Service Category" := SMJnlLine2."Service Category";
        SMLedgEntry."PB Install. Collect. Over. No." := SMJnlLine2."PB Install. Collect. Over. No.";

        SMLedgEntry.INSERT(TRUE);

        //db.sn, 20-04-10
        IF NextEntryNo <> SMReg."To Entry No." THEN BEGIN
          SMReg."To Entry No." := NextEntryNo;
          SMReg.MODIFY;
        END;
        //db.en, 20-04-10

        ServLedgEntryNo := SMLedgEntry."Entry No."; //DP00121
        NextEntryNo := NextEntryNo + 1;
      END;
    END;

    PROCEDURE GetServLedgEntryNo@1100525000() : Integer;
    BEGIN
      //mg, 23-08-10: M22258 Kan alleen aangeroepen worden na function Code()
      EXIT(ServLedgEntryNo);
    END;

    BEGIN
    {
      4PS01 JD 29-10-2008, Improvements for intrastat
    }
    END.
  }
}

