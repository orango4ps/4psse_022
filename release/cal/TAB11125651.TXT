OBJECT Table 11125651 Mandatory Fld. Exp. WO (FSA)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Mandatory Field Export Work Order to FSA;
  }
  FIELDS
  {
    { 10  ;   ;Discipline          ;Code10        ;TableRelation=Discipline;
                                                   CaptionML=[ENU=Discipline;
                                                              NOR=Disiplin;
                                                              SVE=Disciplin] }
    { 20  ;   ;Trade Speciality    ;Code10        ;TableRelation="Trade Speciality".Code WHERE (Discipline=FIELD(Discipline));
                                                   CaptionML=[ENU=Trade Speciality;
                                                              NOR=SNI-nummer;
                                                              SVE=SNI-nummer] }
    { 30  ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract.No.;
                                                   CaptionML=[ENU=Service Contract No.;
                                                              NOR=Servicekontraktnr;
                                                              SVE=Servicekontraktnr] }
    { 35  ;   ;Service Contract Description;Text50;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Service-Contract.Description WHERE (No.=FIELD(Service Contract No.)));
                                                   CaptionML=[ENU=Service Contract Description;
                                                              NOR=Servicekontraktsbeskrivelse;
                                                              SVE=Servicekontraktsbeskrivning];
                                                   Editable=No }
    { 40  ;   ;Customer No.        ;Code20        ;TableRelation=Customer.No.;
                                                   CaptionML=[ENU=Customer No.;
                                                              NOR=Kundenr;
                                                              SVE=Kundnr] }
    { 45  ;   ;Customer Name       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=[ENU=Customer Name;
                                                              NOR=Kundnavn;
                                                              SVE=Betalarens namn];
                                                   Editable=No }
    { 50  ;   ;Source Type         ;Option        ;CaptionML=[ENU=Source Type;
                                                              NOR=Kildetype;
                                                              SVE=Ursprungstyp];
                                                   OptionCaptionML=ENU=" ,Call,Contract,Direct,Estimate,,,Modification,Replacement,,,,Field Service";
                                                   OptionString=[ ,Call,Contract,Direct,Estimate,,,Modification,Replacement,,,,Field Service] }
    { 60  ;   ;Table No.           ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Table),
                                                                                  ID=FILTER(5200|11012823|11012875|11012055|11229278|11229279));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Table Name");
                                                              END;

                                                   CaptionML=[ENU=Table No.;
                                                              NOR=Tabellnr.;
                                                              SVE=Tabellnr];
                                                   NotBlank=Yes }
    { 70  ;   ;Table Name          ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Table),
                                                                                         ID=FIELD(Table No.)));
                                                   CaptionML=[ENU=Table Name;
                                                              NOR=Tabellnavn;
                                                              SVE=Tabellnamn];
                                                   Editable=No }
    { 90  ;   ;Field No.           ;Integer       ;TableRelation=Field.No. WHERE (TableNo=FIELD(Table No.),
                                                                                  Class=FILTER(<>FlowFilter),
                                                                                  Enabled=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Field Name", "Field Caption");
                                                              END;

                                                   OnLookup=VAR
                                                              FieldTableManagement@1100525000 : Codeunit 11012372;
                                                            BEGIN
                                                              VALIDATE("Field No.", FieldTableManagement.LookupFieldNo("Table No.", "Field No."));
                                                            END;

                                                   CaptionML=[ENU=Field No.;
                                                              NOR=Feltnr.;
                                                              SVE=F„ltnr];
                                                   NotBlank=Yes }
    { 100 ;   ;Field Name          ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field.FieldName WHERE (TableNo=FIELD(Table No.),
                                                                                             No.=FIELD(Field No.)));
                                                   CaptionML=[ENU=Field Name;
                                                              NOR=Feltnavn;
                                                              SVE=F„ltnamn];
                                                   Editable=No }
    { 110 ;   ;Field Caption       ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=FIELD(Table No.),
                                                                                                   No.=FIELD(Field No.)));
                                                   CaptionML=[ENU=Field Caption;
                                                              NOR=Felttekst;
                                                              SVE=F„ltrubrik];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Discipline,Trade Speciality,Service Contract No.,Customer No.,Source Type,Table No.,Field No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE GetTableCaption@1100485005(TableNo@1100485001 : Integer) : Text[100];
    VAR
      Object@1100485000 : Record 2000000001;
    BEGIN
      IF NOT Object.GET(Object.Type::Table, '', TableNo) THEN
        EXIT('');

      Object.CALCFIELDS(Caption);
      EXIT(Object.Caption);
    END;

    PROCEDURE CheckMandatoryFieldsServiceOrder@1100525000(ServiceOrder@1100485000 : Record 11012823;WorkOrder@1100528700 : Record 11229279;SourceCompanySO@1100525001 : Text[30]);
    VAR
      MandatoryFields@1100485002 : Record 11125651;
    BEGIN
      MandatoryFields.CHANGECOMPANY(SourceCompanySO);
      MandatoryFields.SETFILTER(Discipline, '%1|%2', ServiceOrder.Discipline, '');
      MandatoryFields.SETFILTER("Trade Speciality", '%1|%2', ServiceOrder."Trade Speciality", '');
      MandatoryFields.SETFILTER("Service Contract No.", '%1|%2', ServiceOrder."Service Contract No.", '');
      MandatoryFields.SETFILTER("Customer No.", '%1|%2', ServiceOrder."Customer No.", '');
      MandatoryFields.SETFILTER("Source Type", '%1|%2', ServiceOrder."Source Type" + 1, MandatoryFields."Source Type"::" ");
      IF MandatoryFields.FINDSET THEN BEGIN
        REPEAT
          CASE MandatoryFields."Table No." OF
            DATABASE::"Service Order":
              CheckServiceOrder(ServiceOrder, WorkOrder, MandatoryFields);
            DATABASE::"Work Order":
              CheckWorkOrder(WorkOrder, MandatoryFields);
            DATABASE::Employee:
              CheckEmployee(ServiceOrder, WorkOrder, MandatoryFields);
            DATABASE::"Service Order Budget Line":
              CheckServiceOrderBudgetLine(ServiceOrder, WorkOrder, SourceCompanySO, MandatoryFields);
            DATABASE::"Advice Order Line":
              CheckAdviceOrderLine(ServiceOrder, WorkOrder, SourceCompanySO, MandatoryFields);
            DATABASE::"Resource (WOP)":
              CheckResourceWOP(ServiceOrder, WorkOrder, MandatoryFields);
          END;
        UNTIL MandatoryFields.NEXT = 0;
      END;
    END;

    PROCEDURE CheckMandatoryFieldsProject@1100529400(Job@1100485000 : Record 11072003;WorkOrder@1100528700 : Record 11229279;SourceCompanySO@1100525001 : Text[30]);
    VAR
      ServiceOrder@1100529400 : Record 11012823;
      MandatoryFields@1100485002 : Record 11125651;
    BEGIN
      ServiceOrder.INIT;
      MandatoryFields.CHANGECOMPANY(SourceCompanySO);
      MandatoryFields.SETFILTER(Discipline, '%1|%2', Job.Discipline, '');
      MandatoryFields.SETFILTER("Customer No.", '%1|%2', Job."Bill-to Customer No.", '');
      IF MandatoryFields.FINDSET THEN BEGIN
        REPEAT
          CASE MandatoryFields."Table No." OF
            DATABASE::"Work Order":
              CheckWorkOrder(WorkOrder, MandatoryFields);
            DATABASE::Employee:
              CheckEmployee(ServiceOrder, WorkOrder, MandatoryFields);
            DATABASE::"Resource (WOP)":
              CheckResourceWOP(ServiceOrder, WorkOrder, MandatoryFields);
          END;
        UNTIL MandatoryFields.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CheckServiceOrder@1100528708(ServiceOrder@1100528703 : Record 11012823;WorkOrder@1100528702 : Record 11229279;MandatoryFields@1100528700 : Record 11125651);
    VAR
      RecRef@1100528705 : RecordRef;
      FldRef@1100528704 : FieldRef;
    BEGIN
      IF ServiceOrder."No." = '' THEN
        IF NOT GetServiceOrderByWorkOrder(WorkOrder, ServiceOrder) THEN
          EXIT;

      RecRef.GETTABLE(ServiceOrder);
      FldRef := RecRef.FIELD(MandatoryFields."Field No.");

      IF IsFlowField(FldRef) THEN
        FldRef.CALCFIELD;

      FldRef.TESTFIELD;
    END;

    LOCAL PROCEDURE CheckWorkOrder@1100528709(WorkOrder@1100528703 : Record 11229279;MandatoryFields@1100528702 : Record 11125651);
    VAR
      RecRef@1100528701 : RecordRef;
      FldRef@1100528700 : FieldRef;
    BEGIN
      IF WorkOrder."No." = '' THEN
        EXIT;

      RecRef.GETTABLE(WorkOrder);
      FldRef := RecRef.FIELD(MandatoryFields."Field No.");

      IF IsFlowField(FldRef) THEN
        FldRef.CALCFIELD;

      FldRef.TESTFIELD;
    END;

    LOCAL PROCEDURE CheckEmployee@1100528710(ServiceOrder@1100528702 : Record 11012823;WorkOrder@1100528701 : Record 11229279;MandatoryFields@1100528700 : Record 11125651);
    VAR
      Employee@1100528706 : Record 5200;
      ResourceWOP@1100528705 : Record 11229278;
      RecRef@1100528704 : RecordRef;
      FldRef@1100528703 : FieldRef;
    BEGIN
      IF ServiceOrder."No." = '' THEN
        IF NOT GetServiceOrderByWorkOrder(WorkOrder, ServiceOrder) THEN
          CLEAR(ServiceOrder);

      IF (ServiceOrder."No." <> '') AND (ServiceOrder."Employee No." <> '') THEN BEGIN
        IF NOT ResourceWOP.GET(ServiceOrder."Employee No.") THEN
          CLEAR(Employee)
        ELSE BEGIN
          Employee.CHANGECOMPANY(ResourceWOP.Company);
          IF (ResourceWOP."Source No." = '') OR (NOT Employee.GET(ResourceWOP."Source No.")) THEN
            CLEAR(Employee);
        END;

        RecRef.GETTABLE(Employee);
        FldRef := RecRef.FIELD(MandatoryFields."Field No.");

        IF IsFlowField(FldRef) THEN
          FldRef.CALCFIELD;

        FldRef.TESTFIELD;
      END;

      IF (WorkOrder."No." <> '') AND (WorkOrder."Resource Type" = WorkOrder."Resource Type"::Employee) AND (WorkOrder."Resource No." <> '') THEN BEGIN
        IF NOT ResourceWOP.GET(WorkOrder."Resource No.") THEN
          CLEAR(Employee)
        ELSE BEGIN
          Employee.CHANGECOMPANY(ResourceWOP.Company);
          IF (ResourceWOP."Source No." = '') OR (NOT Employee.GET(ResourceWOP."Source No.")) THEN
            CLEAR(Employee);
        END;

        RecRef.GETTABLE(Employee);
        FldRef := RecRef.FIELD(MandatoryFields."Field No.");

        IF IsFlowField(FldRef) THEN
          FldRef.CALCFIELD;

        FldRef.TESTFIELD;
      END;
    END;

    LOCAL PROCEDURE CheckResourceWOP@1100528711(ServiceOrder@1100528705 : Record 11012823;WorkOrder@1100528701 : Record 11229279;MandatoryFields@1100528700 : Record 11125651);
    VAR
      ResourceWOP@1100528704 : Record 11229278;
      RecRef@1100528703 : RecordRef;
      FldRef@1100528702 : FieldRef;
    BEGIN
      IF ServiceOrder."No." = '' THEN
        IF NOT GetServiceOrderByWorkOrder(WorkOrder, ServiceOrder) THEN
          CLEAR(ServiceOrder);

      IF (ServiceOrder."No." <> '') AND (ServiceOrder."Employee No." <> '') THEN BEGIN
        IF NOT ResourceWOP.GET(ServiceOrder."Employee No.") THEN
          CLEAR(ResourceWOP);

        RecRef.GETTABLE(ResourceWOP);
        FldRef := RecRef.FIELD(MandatoryFields."Field No.");

        IF IsFlowField(FldRef) THEN
          FldRef.CALCFIELD;

        FldRef.TESTFIELD;
      END;

      IF (WorkOrder."No." <> '') AND (WorkOrder."Resource No." <> '') THEN BEGIN
        IF NOT ResourceWOP.GET(WorkOrder."Resource No.") THEN
          CLEAR(ResourceWOP);

        RecRef.GETTABLE(ResourceWOP);
        FldRef := RecRef.FIELD(MandatoryFields."Field No.");

        IF IsFlowField(FldRef) THEN
          FldRef.CALCFIELD;

        FldRef.TESTFIELD;
      END;
    END;

    LOCAL PROCEDURE CheckServiceOrderBudgetLine@1100528713(ServiceOrder@1100528702 : Record 11012823;WorkOrder@1100528701 : Record 11229279;SourceCompanySO@1100528706 : Text[30];MandatoryFields@1100528700 : Record 11125651);
    VAR
      ServiceOrderBudgetLine@1100528707 : Record 11012875;
      RecRef@1100528704 : RecordRef;
      FldRef@1100528703 : FieldRef;
    BEGIN
      IF ServiceOrder."No." = '' THEN
        IF NOT GetServiceOrderByWorkOrder(WorkOrder, ServiceOrder) THEN
          EXIT
        ELSE
          SourceCompanySO := WorkOrder."Source Company";

      ServiceOrderBudgetLine.RESET;
      ServiceOrderBudgetLine.CHANGECOMPANY(SourceCompanySO);
      ServiceOrderBudgetLine.SETRANGE("Budget Type", ServiceOrderBudgetLine."Budget Type"::Order);
      ServiceOrderBudgetLine.SETRANGE("Service Order No.", ServiceOrder."No.");

      RecRef.GETTABLE(ServiceOrderBudgetLine);
      FldRef := RecRef.FIELD(MandatoryFields."Field No.");

      SetFilterOnFieldBlank(FldRef);

      ServiceOrderBudgetLine.SETVIEW(RecRef.GETVIEW);
      IF ServiceOrderBudgetLine.FINDFIRST THEN
        FldRef.TESTFIELD;
    END;

    LOCAL PROCEDURE CheckAdviceOrderLine@1100528712(ServiceOrder@1100528702 : Record 11012823;WorkOrder@1100528701 : Record 11229279;SourceCompanySO@1100528707 : Text[30];MandatoryFields@1100528700 : Record 11125651);
    VAR
      AdviceOrderLine@1100528706 : Record 11012055;
      RecRef@1100528704 : RecordRef;
      FldRef@1100528703 : FieldRef;
    BEGIN
      IF ServiceOrder."No." = '' THEN
        IF NOT GetServiceOrderByWorkOrder(WorkOrder, ServiceOrder) THEN
          EXIT
        ELSE
          SourceCompanySO := WorkOrder."Source Company";

      AdviceOrderLine.RESET;
      AdviceOrderLine.CHANGECOMPANY(SourceCompanySO);
      AdviceOrderLine.SETRANGE("Record Type", AdviceOrderLine."Record Type"::ServOrder);
      AdviceOrderLine.SETRANGE("Project No.", '');
      AdviceOrderLine.SETRANGE("Service Order No.", ServiceOrder."No.");

      IF MandatoryFields."Field No." = AdviceOrderLine.FIELDNO("Quantity (Advice)") THEN
        AdviceOrderLine.SETRANGE("Quantity (Processed)", 0);

      RecRef.GETTABLE(AdviceOrderLine);
      FldRef := RecRef.FIELD(MandatoryFields."Field No.");

      SetFilterOnFieldBlank(FldRef);

      AdviceOrderLine.SETVIEW(RecRef.GETVIEW);
      IF AdviceOrderLine.FINDFIRST THEN
        FldRef.TESTFIELD;
    END;

    PROCEDURE CheckMandatoryFieldsEmployee@1100525002(Employee@1100525000 : Record 5200;FieldNo@1100525001 : Integer);
    VAR
      MandatoryFields@1100525002 : Record 11125651;
      RecRef@1100525004 : RecordRef;
      FldRef@1100525003 : FieldRef;
    BEGIN
      MandatoryFields.SETFILTER(Discipline, '%1|%2', Employee.Discipline, '');
      MandatoryFields.SETFILTER("Trade Speciality", '%1', '');
      MandatoryFields.SETFILTER("Service Contract No.", '%1', '');
      MandatoryFields.SETFILTER("Customer No.", '%1', '');
      MandatoryFields.SETFILTER("Source Type", '%1', MandatoryFields."Source Type"::" ");
      MandatoryFields.SETRANGE("Table No.",  DATABASE::Employee);
      IF FieldNo <> 0 THEN
        MandatoryFields.SETRANGE("Field No.", FieldNo);
      IF MandatoryFields.FINDSET THEN BEGIN
        REPEAT
          RecRef.GETTABLE(Employee);
          FldRef := RecRef.FIELD(MandatoryFields."Field No.");

          IF IsFlowField(FldRef) THEN
            FldRef.CALCFIELD;

          FldRef.TESTFIELD;
        UNTIL MandatoryFields.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE IsFlowField@1100525001(FldRef@1100525002 : FieldRef) : Boolean;
    VAR
      FieldTable@1100525001 : Record 2000000041;
      RecRef@1100525000 : RecordRef;
    BEGIN
      RecRef := FldRef.RECORD;
      FieldTable.SETRANGE(TableNo, RecRef.NUMBER);
      FieldTable.SETRANGE("No.", FldRef.NUMBER);
      IF FieldTable.FINDFIRST THEN
        IF FieldTable.Class = FieldTable.Class::FlowField THEN
          EXIT(TRUE);
    END;

    LOCAL PROCEDURE SetFilterOnFieldBlank@1100525003(FldRef@1100525003 : FieldRef);
    VAR
      FieldTable@1100525002 : Record 2000000041;
      RecRef@1100525001 : RecordRef;
    BEGIN
      RecRef := FldRef.RECORD;
      FieldTable.SETRANGE(TableNo, RecRef.NUMBER);
      FieldTable.SETRANGE("No.", FldRef.NUMBER);
      IF FieldTable.FINDFIRST THEN BEGIN
        CASE FieldTable.Type OF
          FieldTable.Type::Decimal, FieldTable.Type::Integer :
            FldRef.SETRANGE(0);
          FieldTable.Type::Text, FieldTable.Type::Code :
            FldRef.SETRANGE('');
          FieldTable.Type::Date :
            FldRef.SETRANGE(0D);
          FieldTable.Type::Time :
            FldRef.SETRANGE(0T);
        END;
      END;
    END;

    LOCAL PROCEDURE GetServiceOrderByWorkOrder@1100528717(WorkOrder@1100528700 : Record 11229279;VAR ServiceOrder@1100528701 : Record 11012823) : Boolean;
    BEGIN
      IF (WorkOrder."No." = '') OR (WorkOrder."Source Type" <> WorkOrder."Source Type"::ServiceOrder) THEN
        EXIT(FALSE);

      ServiceOrder.CHANGECOMPANY(WorkOrder."Source Company");
      IF ServiceOrder.GET(WorkOrder."Source No.") THEN
        EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

