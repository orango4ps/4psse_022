OBJECT Page 11129705 Consolidated Statistics
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Konsolidierte Statistiken;
               ENU=Consolidated Statistics;
               NLD=Geconsolideerde Statistieken];
    SourceTable=Table5050;
    OnAfterGetRecord=BEGIN
                       GetVendorInfo;
                       GetCustomerInfo;
                     END;

  }
  CONTROLS
  {
    { 1100528500;;Container;
                CaptionML=[DEU=Allgemein;
                           ENU=General;
                           NLD=Algemeen];
                ContainerType=ContentArea }

    { 1100529501;1;Group  ;
                CaptionML=[DEU=Kontaktdaten;
                           ENU=Contact Data;
                           NLD=Relatiegegevens];
                GroupType=Group }

    { 1100528503;2;Field  ;
                SourceExpr="No." }

    { 1100528504;2;Field  ;
                SourceExpr=Name }

    { 1100528501;1;Group  ;
                CaptionML=[DEU=Konsolidierte Statistiken Kreditor;
                           ENU=Consolidated Vendor Statistics;
                           NLD=Geconsolideerde statistieken leverancier];
                GroupType=Group }

    { 1100528502;2;Field  ;
                CaptionML=[DEU=Kreditorennr.;
                           ENU=Vendor No.;
                           NLD=Leverancierscode];
                SourceExpr=VendorCode;
                Editable=FALSE }

    { 1100528505;2;Field  ;
                CaptionML=[DEU=Kreditorenname;
                           ENU=Vendor Name;
                           NLD=Leveranciersnaam];
                SourceExpr=VendorName;
                Editable=FALSE }

    { 1100528506;2;Field  ;
                CaptionML=[DEU=Bilanz Einkaufsrechnungen (LCY);
                           ENU=Balance Purchase Invoices (LCY);
                           NLD=Balans inkoopfacturen (LV)];
                SourceExpr=ConsBalOutstandingPurchInv }

    { 1100528507;2;Field  ;
                CaptionML=[DEU=Bilanz Gutschriften (LCY);
                           ENU=Balance Credit Memos (LCY);
                           NLD=Balans Creditnota's (LV)];
                SourceExpr=ConsBalOutstandingCredMemos }

    { 1100528519;2;Field  ;
                CaptionML=[DEU=Totalbilanz (LCY);
                           ENU=Total Balance (LCY);
                           NLD=Totaalbalans (LV)];
                SourceExpr=VendorOutstandingTotalBalance;
                OnLookup=VAR
                           ConsContactData@1100528500 : Record 11020290;
                           ConsolidatedStatisticsTemp@1100528502 : TEMPORARY Record 11229449;
                           VendorLedgerEntry@1100528507 : Record 25;
                           i@1100528508 : Integer;
                         BEGIN
                           ConsContactData.SETRANGE(Table, ConsContactData.Table::"Contact Relations");

                           VendorLedgerEntry.SETRANGE("Vendor No.", VendorCode);
                           VendorLedgerEntry.SETFILTER("Document Type", '%1|%2', VendorLedgerEntry."Document Type"::Invoice, VendorLedgerEntry."Document Type"::"Credit Memo");
                           VendorLedgerEntry.SETFILTER("Remaining Amt. (LCY)", '<>%1', 0);
                           i := 1;

                           IF ConsContactData.FINDSET THEN
                             REPEAT
                               VendorLedgerEntry.CHANGECOMPANY(ConsContactData.Company);
                               IF VendorLedgerEntry.FINDSET THEN REPEAT
                                 ConsolidatedStatisticsTemp.INIT;
                                 ConsolidatedStatisticsTemp."Entry No." := i;
                                 ConsolidatedStatisticsTemp.Company := ConsContactData.Company;
                                 ConsolidatedStatisticsTemp."Document No." := VendorLedgerEntry."Document No.";
                                 ConsolidatedStatisticsTemp."Document Type" := VendorLedgerEntry."Document Type";
                                 ConsolidatedStatisticsTemp."Vendor/Cust. No." := VendorLedgerEntry."Vendor No.";
                                 ConsolidatedStatisticsTemp."Vendor / Cust. Name" := VendorName;
                                 ConsolidatedStatisticsTemp."External Document No." := VendorLedgerEntry."External Document No.";
                                 ConsolidatedStatisticsTemp."Document Date" := VendorLedgerEntry."Document Date";
                                 ConsolidatedStatisticsTemp."Due Date" := VendorLedgerEntry."Due Date";
                                 ConsolidatedStatisticsTemp.Description := VendorLedgerEntry.Description;
                                 VendorLedgerEntry.CALCFIELDS("Amount (LCY)", "Remaining Amt. (LCY)");
                                 ConsolidatedStatisticsTemp."Amount (LCY)" := VendorLedgerEntry."Amount (LCY)";
                                 ConsolidatedStatisticsTemp."Remaining Amount (LCY)" := VendorLedgerEntry."Remaining Amt. (LCY)";
                                 ConsolidatedStatisticsTemp.Approved := VendorLedgerEntry.Approved;
                                 ConsolidatedStatisticsTemp.Open := VendorLedgerEntry.Open;
                                 ConsolidatedStatisticsTemp."WKA Approval" := VendorLedgerEntry."WKA approval";
                                 ConsolidatedStatisticsTemp."Booking Date" := VendorLedgerEntry."Posting Date";
                                 ConsolidatedStatisticsTemp.INSERT;
                                 i += 1;
                               UNTIL VendorLedgerEntry.NEXT = 0;
                             UNTIL ConsContactData.NEXT = 0;

                           PAGE.RUNMODAL(11129713, ConsolidatedStatisticsTemp);
                         END;
                          }

    { 1100528508;2;Field  ;
                CaptionML=[DEU=Bilanz f„llige Einkaufsrechnungen (LCY);
                           ENU=Balance Overdue Purchase Invoices (LCY);
                           NLD=Balans vervallen inkoopfacturen (LV)];
                SourceExpr=ConsBalOverduePurchInv }

    { 1100528509;2;Field  ;
                CaptionML=[DEU=Bilanz f„llige Gutschriften (LCY);
                           ENU=Balance Overdue Credit Memos (LCY);
                           NLD=Balans vervallen creditnota's (LV)];
                SourceExpr=ConsBalOverdueCredMemos }

    { 1100528518;2;Field  ;
                CaptionML=[DEU=Totalbilanz f„llig (LCY);
                           ENU=Total Balance Overdue (LCY);
                           NLD=Totaalbalans vervallen (LV)];
                SourceExpr=VendorOverdueTotalBalance;
                OnLookup=VAR
                           ConsContactData@1100529500 : Record 11020290;
                           VendorLedgerEntry@1100529501 : Record 25;
                           i@1100529502 : Integer;
                           ConsolidatedStatisticsTemp@1100529503 : TEMPORARY Record 11229449;
                         BEGIN
                           ConsContactData.SETRANGE(Table, ConsContactData.Table::"Contact Relations");

                           VendorLedgerEntry.SETRANGE("Vendor No.", VendorCode);
                           VendorLedgerEntry.SETFILTER("Document Type", '%1|%2', VendorLedgerEntry."Document Type"::Invoice, VendorLedgerEntry."Document Type"::"Credit Memo");
                           VendorLedgerEntry.SETFILTER("Remaining Amt. (LCY)", '<>%1', 0);
                           VendorLedgerEntry.SETFILTER("Due Date", '<%1', TODAY);
                           i := 1;

                           IF ConsContactData.FINDSET THEN
                             REPEAT
                               VendorLedgerEntry.CHANGECOMPANY(ConsContactData.Company);
                               IF VendorLedgerEntry.FINDSET THEN REPEAT
                                 ConsolidatedStatisticsTemp.INIT;
                                 ConsolidatedStatisticsTemp."Entry No." := i;
                                 ConsolidatedStatisticsTemp.Company := ConsContactData.Company;
                                 ConsolidatedStatisticsTemp."Document No." := VendorLedgerEntry."Document No.";
                                 ConsolidatedStatisticsTemp."Document Type" := VendorLedgerEntry."Document Type";
                                 ConsolidatedStatisticsTemp."Vendor/Cust. No." := VendorLedgerEntry."Vendor No.";
                                 ConsolidatedStatisticsTemp."Vendor / Cust. Name" := VendorName;
                                 ConsolidatedStatisticsTemp."External Document No." := VendorLedgerEntry."External Document No.";
                                 ConsolidatedStatisticsTemp."Document Date" := VendorLedgerEntry."Document Date";
                                 ConsolidatedStatisticsTemp."Due Date" := VendorLedgerEntry."Due Date";
                                 ConsolidatedStatisticsTemp.Description := VendorLedgerEntry.Description;
                                 VendorLedgerEntry.CALCFIELDS("Amount (LCY)", "Remaining Amt. (LCY)");
                                 ConsolidatedStatisticsTemp."Amount (LCY)" := VendorLedgerEntry."Amount (LCY)";
                                 ConsolidatedStatisticsTemp."Remaining Amount (LCY)" := VendorLedgerEntry."Remaining Amt. (LCY)";
                                 ConsolidatedStatisticsTemp.Approved := VendorLedgerEntry.Approved;
                                 ConsolidatedStatisticsTemp.Open := VendorLedgerEntry.Open;
                                 ConsolidatedStatisticsTemp."WKA Approval" := VendorLedgerEntry."WKA approval";
                                 ConsolidatedStatisticsTemp."Booking Date" := VendorLedgerEntry."Posting Date";
                                 ConsolidatedStatisticsTemp.INSERT;
                                 i += 1;
                               UNTIL VendorLedgerEntry.NEXT = 0;
                             UNTIL ConsContactData.NEXT = 0;

                           PAGE.RUNMODAL(11129713, ConsolidatedStatisticsTemp);
                         END;
                          }

    { 1100528510;1;Group  ;
                CaptionML=[DEU=Konsolidierte Statistiken Debitor;
                           ENU=Consolidated Customer Statistics;
                           NLD=Geconsolideerde statistieken klant];
                GroupType=Group }

    { 1100528511;2;Field  ;
                Name=Customer No.;
                CaptionML=[DEU=Debitorennr.;
                           ENU=Customer No.;
                           NLD=Klantcode];
                SourceExpr=CustCode;
                Editable=FALSE }

    { 1100528512;2;Field  ;
                Name=Customer Name;
                CaptionML=[DEU=Debitor Name;
                           ENU=Customer Name;
                           NLD=Klantnaam];
                SourceExpr=CustName;
                Editable=FALSE }

    { 1100528513;2;Field  ;
                CaptionML=[DEU=Bilanz Verkaufsrechnungen (LCY);
                           ENU=Balance Sales Invoices (LCY);
                           NLD=Balans verkoopfacturen (LV)];
                SourceExpr=ConsBalOutstandingSalesInv }

    { 1100528514;2;Field  ;
                CaptionML=[DEU=Bilanz Verkaufsgutschriften (LCY);
                           ENU=Balance Sales Credit Memos (LCY);
                           NLD=Balans verkoopcreditnota's (LV)];
                SourceExpr=ConsBalOutstandingSalesCredMemos }

    { 1100528517;2;Field  ;
                CaptionML=[DEU=Totalbilanz (LCY);
                           ENU=Total Balance (LCY);
                           NLD=Totaalbalans (LV)];
                SourceExpr=CustomerOutstandingTotalBalance;
                OnLookup=VAR
                           ConsContactData@1100528500 : Record 11020290;
                           ConsolidatedStatisticsTemp@1100528502 : TEMPORARY Record 11229449;
                           CustLedgerEntry@1100529501 : Record 21;
                           i@1100529502 : Integer;
                         BEGIN
                           ConsContactData.SETRANGE(Table, ConsContactData.Table::"Contact Relations");

                           CustLedgerEntry.SETRANGE("Customer No.", CustCode);
                           CustLedgerEntry.SETFILTER("Document Type", '%1|%2', CustLedgerEntry."Document Type"::Invoice, CustLedgerEntry."Document Type"::"Credit Memo");
                           CustLedgerEntry.SETFILTER("Remaining Amt. (LCY)", '<>%1', 0);
                           i := 1;

                           IF ConsContactData.FINDSET THEN
                             REPEAT
                               CustLedgerEntry.CHANGECOMPANY(ConsContactData.Company);
                               IF CustLedgerEntry.FINDSET THEN REPEAT
                                 ConsolidatedStatisticsTemp.INIT;
                                 ConsolidatedStatisticsTemp.Company := ConsContactData.Company;
                                 ConsolidatedStatisticsTemp."Document No." := CustLedgerEntry."Document No.";
                                 ConsolidatedStatisticsTemp."Document Type" := CustLedgerEntry."Document Type";
                                 ConsolidatedStatisticsTemp."Vendor/Cust. No." := CustCode;
                                 ConsolidatedStatisticsTemp."Vendor / Cust. Name" := CustName;
                                 CustLedgerEntry.CALCFIELDS("Amount (LCY)", "Remaining Amt. (LCY)");
                                 ConsolidatedStatisticsTemp."Amount (LCY)" := CustLedgerEntry."Amount (LCY)";
                                 ConsolidatedStatisticsTemp."Remaining Amount (LCY)" := CustLedgerEntry."Remaining Amt. (LCY)";
                                 ConsolidatedStatisticsTemp."Document Date" := CustLedgerEntry."Document Date";
                                 ConsolidatedStatisticsTemp."Due Date" := CustLedgerEntry."Due Date";
                                 ConsolidatedStatisticsTemp.Description := CustLedgerEntry.Description;
                                 ConsolidatedStatisticsTemp.Open := CustLedgerEntry.Open;
                                 ConsolidatedStatisticsTemp."Booking Date" := CustLedgerEntry."Posting Date";
                                 ConsolidatedStatisticsTemp."Entry No." := i;
                                 ConsolidatedStatisticsTemp.INSERT;
                                 i += 1;
                               UNTIL CustLedgerEntry.NEXT = 0;
                             UNTIL ConsContactData.NEXT = 0;

                           PAGE.RUNMODAL(11129713, ConsolidatedStatisticsTemp);
                         END;
                          }

    { 1100528515;2;Field  ;
                CaptionML=[DEU=Bilanz f„llige Verkaufsrechnungen (LCY);
                           ENU=Balance Overdue Sales Invoices (LCY);
                           NLD=Balans vervallen verkoopfacturen (LV)];
                SourceExpr=ConsBalOverdueSalesInv }

    { 1100528516;2;Field  ;
                CaptionML=[DEU=Bilanz f„llige Verkaufsgutschriften (LCY);
                           ENU=Balance Overdue Sales Credit Memos (LCY);
                           NLD=Balans vervallen verkoopcreditnota's (LV)];
                SourceExpr=ConsBalOverdueSalesCredMemos }

    { 1100529500;2;Field  ;
                CaptionML=[DEU=Totalbilanz f„llig (LCY);
                           ENU=Total Balance Overdue (LCY);
                           NLD=Totaalbalans vervallen (LV)];
                SourceExpr=CustomerOverdueTotalBalance;
                OnLookup=VAR
                           ConsContactData@1100529500 : Record 11020290;
                           CustLedgerEntry@1100529501 : Record 21;
                           ConsolidatedStatisticsTemp@1100529502 : TEMPORARY Record 11229449;
                           i@1100529503 : Integer;
                         BEGIN
                           ConsContactData.SETRANGE(Table, ConsContactData.Table::"Contact Relations");

                           CustLedgerEntry.SETRANGE("Customer No.", CustCode);
                           CustLedgerEntry.SETFILTER("Document Type", '%1|%2', CustLedgerEntry."Document Type"::Invoice, CustLedgerEntry."Document Type"::"Credit Memo");
                           CustLedgerEntry.SETFILTER("Remaining Amt. (LCY)", '<>%1', 0);
                           CustLedgerEntry.SETFILTER("Due Date", '<%1', TODAY);
                           i := 1;

                           IF ConsContactData.FINDSET THEN
                             REPEAT
                               CustLedgerEntry.CHANGECOMPANY(ConsContactData.Company);
                               IF CustLedgerEntry.FINDSET THEN REPEAT
                                 ConsolidatedStatisticsTemp.INIT;
                                 ConsolidatedStatisticsTemp.Company := ConsContactData.Company;
                                 ConsolidatedStatisticsTemp."Document No." := CustLedgerEntry."Document No.";
                                 ConsolidatedStatisticsTemp."Document Type" := CustLedgerEntry."Document Type";
                                 ConsolidatedStatisticsTemp."Vendor/Cust. No." := CustCode;
                                 ConsolidatedStatisticsTemp."Vendor / Cust. Name" := CustName;
                                 CustLedgerEntry.CALCFIELDS("Amount (LCY)", "Remaining Amt. (LCY)");
                                 ConsolidatedStatisticsTemp."Amount (LCY)" := CustLedgerEntry."Amount (LCY)";
                                 ConsolidatedStatisticsTemp."Remaining Amount (LCY)" := CustLedgerEntry."Remaining Amt. (LCY)";
                                 ConsolidatedStatisticsTemp."Document Date" := CustLedgerEntry."Document Date";
                                 ConsolidatedStatisticsTemp."Due Date" := CustLedgerEntry."Due Date";
                                 ConsolidatedStatisticsTemp.Description := CustLedgerEntry.Description;
                                 ConsolidatedStatisticsTemp.Open := CustLedgerEntry.Open;
                                 ConsolidatedStatisticsTemp."Booking Date" := CustLedgerEntry."Posting Date";
                                 ConsolidatedStatisticsTemp."Entry No." := i;
                                 ConsolidatedStatisticsTemp.INSERT;
                                 i += 1;
                               UNTIL CustLedgerEntry.NEXT = 0;
                             UNTIL ConsContactData.NEXT = 0;

                           PAGE.RUNMODAL(11129713, ConsolidatedStatisticsTemp);
                         END;
                          }

  }
  CODE
  {
    VAR
      VendorName@1100528500 : Text;
      VendorCode@1100528501 : Code[20];
      CustCode@1100528502 : Code[20];
      CustName@1100528503 : Text;

    LOCAL PROCEDURE ConsBalOutstandingPurchInv@1100528507() ConsOutstPI : Decimal;
    VAR
      ConsContactData@1100528500 : Record 11020290;
      VendorLedgerEntry@1100528501 : Record 25;
    BEGIN
      ConsContactData.SETRANGE(Table, ConsContactData.Table::"Contact Relations");

      VendorLedgerEntry.SETRANGE("Document Type", VendorLedgerEntry."Document Type"::Invoice);
      VendorLedgerEntry.SETRANGE("Vendor No.", VendorCode);
      VendorLedgerEntry.SETFILTER("Remaining Amt. (LCY)", '<>%1', 0);

      IF ConsContactData.FINDSET THEN
        REPEAT
          VendorLedgerEntry.CHANGECOMPANY(ConsContactData.Company);
          IF VendorLedgerEntry.FINDSET THEN REPEAT
            VendorLedgerEntry.CALCFIELDS("Remaining Amt. (LCY)");
            ConsOutstPI += VendorLedgerEntry."Remaining Amt. (LCY)";
          UNTIL VendorLedgerEntry.NEXT = 0;
        UNTIL ConsContactData.NEXT = 0;
    END;

    LOCAL PROCEDURE ConsBalOutstandingCredMemos@1100528521() ConsOutstCredMem : Decimal;
    VAR
      ConsContactData@1100528500 : Record 11020290;
      VendorLedgerEntry@1100528501 : Record 25;
    BEGIN
      ConsContactData.SETRANGE(Table, ConsContactData.Table::"Contact Relations");

      VendorLedgerEntry.SETRANGE("Document Type", VendorLedgerEntry."Document Type"::"Credit Memo");
      VendorLedgerEntry.SETRANGE("Vendor No.", VendorCode);
      VendorLedgerEntry.SETFILTER("Remaining Amt. (LCY)", '<>%1', 0);

      IF ConsContactData.FINDSET THEN
        REPEAT
          VendorLedgerEntry.CHANGECOMPANY(ConsContactData.Company);
          IF VendorLedgerEntry.FINDSET THEN REPEAT
            VendorLedgerEntry.CALCFIELDS("Remaining Amt. (LCY)");
            ConsOutstCredMem += VendorLedgerEntry."Remaining Amt. (LCY)";
          UNTIL VendorLedgerEntry.NEXT = 0;
        UNTIL ConsContactData.NEXT = 0;
    END;

    LOCAL PROCEDURE ConsBalOverduePurchInv@1100528534() ConsBalOverduePI : Decimal;
    VAR
      ConsContactData@1100528500 : Record 11020290;
      VendorLedgerEntry@1100528503 : Record 25;
    BEGIN
      ConsContactData.SETRANGE(Table, ConsContactData.Table::"Contact Relations");

      VendorLedgerEntry.SETRANGE("Document Type", VendorLedgerEntry."Document Type"::Invoice);
      VendorLedgerEntry.SETRANGE("Vendor No.", VendorCode);
      VendorLedgerEntry.SETFILTER("Remaining Amt. (LCY)", '<>%1', 0);
      VendorLedgerEntry.SETFILTER("Due Date", '<%1', TODAY);

      IF ConsContactData.FINDSET THEN
        REPEAT
          VendorLedgerEntry.CHANGECOMPANY(ConsContactData.Company);
          IF VendorLedgerEntry.FINDSET THEN REPEAT
            VendorLedgerEntry.CALCFIELDS("Remaining Amt. (LCY)");
            ConsBalOverduePI += VendorLedgerEntry."Remaining Amt. (LCY)";
          UNTIL VendorLedgerEntry.NEXT = 0;
        UNTIL ConsContactData.NEXT = 0;
    END;

    LOCAL PROCEDURE ConsBalOverdueCredMemos@1100528505() ConsBalOverdueCM : Decimal;
    VAR
      ConsContactData@1100528500 : Record 11020290;
      VendorLedgerEntry@1100528503 : Record 25;
    BEGIN
      ConsContactData.SETRANGE(Table, ConsContactData.Table::"Contact Relations");

      VendorLedgerEntry.SETRANGE("Document Type", VendorLedgerEntry."Document Type"::"Credit Memo");
      VendorLedgerEntry.SETRANGE("Vendor No.", VendorCode);
      VendorLedgerEntry.SETFILTER("Remaining Amt. (LCY)", '<>%1', 0);
      VendorLedgerEntry.SETFILTER("Due Date", '<%1', TODAY);

      IF ConsContactData.FINDSET THEN
        REPEAT
          VendorLedgerEntry.CHANGECOMPANY(ConsContactData.Company);
          IF VendorLedgerEntry.FINDSET THEN REPEAT
            VendorLedgerEntry.CALCFIELDS("Remaining Amt. (LCY)");
            ConsBalOverdueCM += VendorLedgerEntry."Remaining Amt. (LCY)";
          UNTIL VendorLedgerEntry.NEXT = 0;
        UNTIL ConsContactData.NEXT = 0;
    END;

    LOCAL PROCEDURE GetVendorInfo@1100528501();
    VAR
      ContactBusinessRelation@1100528500 : Record 5054;
    BEGIN
      IF ContactBusinessRelation.GET("No.", 'VE') THEN BEGIN
        ContactBusinessRelation.CALCFIELDS("Contact Name");
        VendorName := ContactBusinessRelation."Contact Name";
        VendorCode := ContactBusinessRelation."No.";
      END ELSE BEGIN
        VendorCode := '';
        VendorName := '';
      END;
    END;

    LOCAL PROCEDURE GetCustomerInfo@1100528552();
    VAR
      ContactBusinessRelation@1100528500 : Record 5054;
    BEGIN
      IF ContactBusinessRelation.GET("No.", 'CU') THEN BEGIN
        ContactBusinessRelation.CALCFIELDS("Contact Name");
        CustCode := ContactBusinessRelation."No.";
        CustName := ContactBusinessRelation."Contact Name";
      END ELSE BEGIN
        CustCode := '';
        CustName := '';
      END;
    END;

    LOCAL PROCEDURE ConsBalOutstandingSalesInv@1100528560() ConsBalOutSalesInv : Decimal;
    VAR
      ConsContactData@1100528501 : Record 11020290;
      CustLedgerEntry@1100529500 : Record 21;
    BEGIN
      ConsContactData.SETRANGE(Table, ConsContactData.Table::"Contact Relations");

      CustLedgerEntry.SETRANGE("Customer No.", CustCode);
      CustLedgerEntry.SETRANGE("Document Type", CustLedgerEntry."Document Type"::Invoice);
      CustLedgerEntry.SETFILTER("Remaining Amt. (LCY)", '<>%1', 0);

      IF ConsContactData.FINDSET THEN
        REPEAT
          CustLedgerEntry.CHANGECOMPANY(ConsContactData.Company);
          IF CustLedgerEntry.FINDSET THEN REPEAT
            CustLedgerEntry.CALCFIELDS("Remaining Amt. (LCY)");
            ConsBalOutSalesInv += CustLedgerEntry."Remaining Amt. (LCY)";
          UNTIL CustLedgerEntry.NEXT = 0;
        UNTIL ConsContactData.NEXT = 0;
    END;

    LOCAL PROCEDURE ConsBalOutstandingSalesCredMemos@1100528565() ConsBalOutSalCredMemo : Decimal;
    VAR
      ConsContactData@1100528501 : Record 11020290;
      CustLedgerEntry@1100529500 : Record 21;
    BEGIN
      ConsContactData.SETRANGE(Table, ConsContactData.Table::"Contact Relations");

      CustLedgerEntry.SETRANGE("Customer No.", CustCode);
      CustLedgerEntry.SETRANGE("Document Type", CustLedgerEntry."Document Type"::"Credit Memo");
      CustLedgerEntry.SETFILTER("Remaining Amt. (LCY)", '<>%1', 0);

      IF ConsContactData.FINDSET THEN
        REPEAT
          CustLedgerEntry.CHANGECOMPANY(ConsContactData.Company);
          IF CustLedgerEntry.FINDSET THEN REPEAT
            CustLedgerEntry.CALCFIELDS("Remaining Amt. (LCY)");
            ConsBalOutSalCredMemo += CustLedgerEntry."Remaining Amt. (LCY)";
          UNTIL CustLedgerEntry.NEXT = 0;
        UNTIL ConsContactData.NEXT = 0;
    END;

    LOCAL PROCEDURE ConsBalOverdueSalesInv@1100528580() ConsBalOverdueSalInv : Decimal;
    VAR
      CustLedgerEntry@1100528500 : Record 21;
      ConsContactData@1100528501 : Record 11020290;
    BEGIN
      ConsContactData.SETRANGE(Table, ConsContactData.Table::"Contact Relations");

      CustLedgerEntry.SETRANGE("Customer No.", CustCode);
      CustLedgerEntry.SETRANGE("Document Type", CustLedgerEntry."Document Type"::Invoice);
      CustLedgerEntry.SETFILTER("Remaining Amt. (LCY)", '<>%1', 0);
      CustLedgerEntry.SETFILTER("Due Date", '<%1', TODAY);

      IF ConsContactData.FINDSET THEN
        REPEAT
          CustLedgerEntry.CHANGECOMPANY(ConsContactData.Company);
          IF CustLedgerEntry.FINDSET THEN REPEAT
            CustLedgerEntry.CALCFIELDS("Remaining Amt. (LCY)");
            ConsBalOverdueSalInv += CustLedgerEntry."Remaining Amt. (LCY)";
          UNTIL CustLedgerEntry.NEXT = 0;
        UNTIL ConsContactData.NEXT = 0;
    END;

    LOCAL PROCEDURE ConsBalOverdueSalesCredMemos@1100528591() ConsBalOverdueSalCredMem : Decimal;
    VAR
      CustLedgerEntry@1100528500 : Record 21;
      ConsContactData@1100528501 : Record 11020290;
    BEGIN
      ConsContactData.SETRANGE(Table, ConsContactData.Table::"Contact Relations");

      CustLedgerEntry.SETRANGE("Customer No.", CustCode);
      CustLedgerEntry.SETRANGE("Document Type", CustLedgerEntry."Document Type"::"Credit Memo");
      CustLedgerEntry.SETFILTER("Remaining Amt. (LCY)", '<>%1', 0);
      CustLedgerEntry.SETFILTER("Due Date", '<%1', TODAY);

      IF ConsContactData.FINDSET THEN
        REPEAT
          CustLedgerEntry.CHANGECOMPANY(ConsContactData.Company);
          IF CustLedgerEntry.FINDSET THEN REPEAT
            CustLedgerEntry.CALCFIELDS("Remaining Amt. (LCY)");
            ConsBalOverdueSalCredMem += CustLedgerEntry."Remaining Amt. (LCY)";
          UNTIL CustLedgerEntry.NEXT = 0;
        UNTIL ConsContactData.NEXT = 0;
    END;

    LOCAL PROCEDURE VendorOutstandingTotalBalance@1100528508() Total : Decimal;
    BEGIN
      Total := ConsBalOutstandingPurchInv + ConsBalOutstandingCredMemos;
    END;

    LOCAL PROCEDURE VendorOverdueTotalBalance@1100528509() Total : Decimal;
    BEGIN
      Total := ConsBalOverduePurchInv + ConsBalOverdueCredMemos;
    END;

    LOCAL PROCEDURE CustomerOverdueTotalBalance@1100528511() Total : Decimal;
    BEGIN
      Total := ConsBalOverdueSalesInv + ConsBalOverdueSalesCredMemos;
    END;

    LOCAL PROCEDURE CustomerOutstandingTotalBalance@1100528519() Total : Decimal;
    BEGIN
      Total := ConsBalOutstandingSalesInv + ConsBalOutstandingSalesCredMemos;
    END;

    BEGIN
    END.
  }
}

