OBJECT Table 11012471 Installment Motivation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               FillInstallmentPeriod;  //DP01485
               IF ProjRec.GET("Project No.") THEN
                 IF ProjRec.RAW THEN BEGIN
                   IF "Installment Overview Period" <> '' THEN BEGIN
                     //DP01491a.sn
                     Comment := STRSUBSTNO(Text003, "Installment Overview Period", "Installment Motivation Period");
                     //DP01491a.en
                   END ELSE BEGIN
                     InstallmMotRec.SETRANGE("Project No.","Project No.");
                     InstallmMotRec.SETRANGE(Principal,Principal);
                     IF InstallmMotRec.FINDLAST THEN BEGIN
                       Comment := INCSTR(InstallmMotRec.Comment);
                     END ELSE BEGIN
                       Comment := Text002;
                     END;
                   END;
                 END;
             END;

    OnModify=BEGIN
               FillInstallmentPeriod;  //DP01485
             END;

    OnDelete=VAR
               InstallmentOverview@1100409000 : Record 11012265;
             BEGIN
               IF NOT gDeleteCompleteProject THEN BEGIN   //db, 14-08-15: C021865
                 TESTFIELD("Installments Created", FALSE);
                 IF InInstallmentOverview THEN
                   ERROR(Text007, InstallmentOverview.TABLECAPTION, TABLECAPTION);
               END;

               InstallmMotLinesRec.SETRANGE("Project No.","Project No.");
               InstallmMotLinesRec.SETRANGE(Principal,Principal);
               InstallmMotLinesRec.SETRANGE("Production Date","Production Date");
               //InstallmMotLinesRec.SETRANGE("Extension Contract","Extension Contract OLD");  //DP01491a
               InstallmMotLinesRec.DELETEALL;
             END;

    OnRename=BEGIN
               TESTFIELD("Installments Created", FALSE);

               UpdatePrevProductionDateFilterLines;
             END;

    CaptionML=[ENU=Installment Motivation;
               NOR=Avdragsmotivasjon;
               SVE=Upparbetade m„ngder];
    LookupPageID=Page11012474;
    DrillDownPageID=Page11012474;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr];
                                                   NotBlank=Yes }
    { 20  ;   ;Principal           ;Code20        ;TableRelation="Project Principal".Principal WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=Principal;
                                                              NOR=Oppdragsgiver;
                                                              SVE=Uppdragsgivare];
                                                   NotBlank=Yes }
    { 30  ;   ;Production Date     ;Date          ;OnValidate=BEGIN
                                                                CheckNextInstMotivApproved;

                                                                InstallCreatedAfterProdDate("Production Date", 1);  //* 1=ErrorMode::Error
                                                                "End Date Revision" := "Production Date";
                                                              END;

                                                   CaptionML=[ENU=Production Date;
                                                              NOR=Produksjonsdato;
                                                              SVE=Produktionsdatum];
                                                   NotBlank=Yes }
    { 40  ;   ;Comment             ;Text30        ;CaptionML=[ENU=Comment;
                                                              NOR=Kommentar;
                                                              SVE=Kommentar] }
    { 50  ;   ;Project Description ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Project Description;
                                                              NOR=Prosjektbeskrivelse;
                                                              SVE=Projektbeskrivning];
                                                   Editable=No }
    { 60  ;   ;Principal Name      ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Principal)));
                                                   CaptionML=[ENU=Principal Name;
                                                              NOR=Oppdragsgivers navn;
                                                              SVE=Uppdragsgivarens namn];
                                                   Editable=No }
    { 70  ;   ;Installments Created;Boolean       ;CaptionML=[ENU=Create Installments run;
                                                              NOR=Opprett Avdragsl›p;
                                                              SVE=Avbetalningar skapade] }
    { 80  ;   ;Installments Created on;Date       ;CaptionML=[ENU=Create Installments run on;
                                                              NOR=Opprett Avdragsl›p p†;
                                                              SVE=Avbetalningar skapade den];
                                                   Editable=No }
    { 85  ;   ;Installment Description;Text50     ;CaptionML=[ENU=Installment Description;
                                                              NOR=Betalingsplan, Beskrivelse;
                                                              SVE=Betalplan, beskrivning] }
    { 90  ;   ;Contract Amount (LCY);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Principal"."Contract Amount (LCY)" WHERE (Project No.=FIELD(Project No.),
                                                                                                                         Principal=FIELD(Principal)));
                                                   CaptionML=[ENU=Contract Amount (LCY);
                                                              NOR=Kontraktsbel›p (NOK);
                                                              SVE=Kontraktsbelopp (BVA) inkl. ŽTA];
                                                   Editable=No }
    { 91  ;   ;Contract Amount (FCY);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Principal"."Contract Amount" WHERE (Project No.=FIELD(Project No.),
                                                                                                                   Principal=FIELD(Principal)));
                                                   CaptionML=[ENU=Contract Amount;
                                                              NOR=Kontraktsbel›p;
                                                              SVE=Kontraktsbelopp];
                                                   Editable=No }
    { 100 ;   ;Points/Percentages  ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Principal"."Installm.Motivation Method" WHERE (Project No.=FIELD(Project No.),
                                                                                                                              Principal=FIELD(Principal)));
                                                   CaptionML=[ENU=Points/Percentages;
                                                              NOR=Poeng/Prosent;
                                                              SVE=Po„ng/procent];
                                                   OptionCaptionML=[ENU=" ,Points,Percentages";
                                                                    NOR=" ,Poeng,Prosent";
                                                                    SVE=" ,Po„ng,Procent"];
                                                   OptionString=[ ,Punten,Procenten];
                                                   Editable=No }
    { 110 ;   ;Number of Points    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Principal"."Number of Points" WHERE (Project No.=FIELD(Project No.),
                                                                                                                    Principal=FIELD(Principal)));
                                                   CaptionML=[ENU=Number of Points;
                                                              NOR=Antall poeng;
                                                              SVE=Antal po„ng];
                                                   Editable=No }
    { 120 ;   ;Invoice Installm.Motivation as;Option;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Principal"."Invoice Installm.Motivation as" WHERE (Project No.=FIELD(Project No.),
                                                                                                                                  Principal=FIELD(Principal)));
                                                   CaptionML=[ENU=Invoice Installment Motivation as;
                                                              NOR=Fakturere Avdragsmotivasjon som;
                                                              SVE=Fakturera avbetalningsmotivation som];
                                                   OptionCaptionML=[ENU=Installment per Motivation,Fixed Installment Amounts;
                                                                    SVE=Betalplan per motivation,fasta avbetalningsbelopp];
                                                   OptionString=Installment per Motivation,Fixed Installment Amounts;
                                                   Editable=No }
    { 130 ;   ;Fixed Installment Amount (LCY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Principal"."Fixed Installment Amount (LCY)" WHERE (Project No.=FIELD(Project No.),
                                                                                                                                  Principal=FIELD(Principal)));
                                                   CaptionML=[ENU=Fixed Installment Amount (LCY);
                                                              SVE=Fast avbetalningsbelopp (BVA)];
                                                   Editable=No }
    { 131 ;   ;Fixed Installment Amount (FCY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Principal"."Fixed Installment Amount (FCY)" WHERE (Project No.=FIELD(Project No.),
                                                                                                                                  Principal=FIELD(Principal)));
                                                   CaptionML=[ENU=Fixed Installment Amount;
                                                              NOR=Fast avdragsbel›p;
                                                              SVE=Fast avbetalningsbelopp];
                                                   Editable=No }
    { 140 ;   ;Status              ;Option        ;OnValidate=VAR
                                                                InstallMotLine@1100525000 : Record 11012472;
                                                                InstallmentOverview@1100409000 : Record 11012265;
                                                              BEGIN
                                                                IF (Status <> xRec.Status) THEN
                                                                  IF InInstallmentOverview THEN
                                                                    ERROR(Text007, InstallmentOverview.TABLECAPTION, TABLECAPTION);

                                                                IF (Status <> xRec.Status) AND
                                                                   (Status = Status::Approved)
                                                                THEN
                                                                  CheckPrevInstMotivApproved;

                                                                IF (Status < xRec.Status) AND
                                                                   (xRec.Status = xRec.Status::Approved)
                                                                THEN
                                                                  CheckNextInstMotivApproved;

                                                                IF Status = Status::Expired THEN BEGIN
                                                                  TESTFIELD("Installments Created", FALSE);
                                                                  TESTFIELD("Revision Computed", FALSE);
                                                                  IF NOT CONFIRM(Text004, FALSE, TABLECAPTION, InstallMotLine.FIELDCAPTION(Production),
                                                                        InstallMotLine.FIELDCAPTION("Production Cumulative")) THEN
                                                                    ERROR('');
                                                                  //put all production on 0
                                                                  InstallMotLine.SETRANGE("Project No.","Project No.");
                                                                  InstallMotLine.SETRANGE(Principal,Principal);
                                                                  //InstallMotLine.SETRANGE("Extension Contract","Extension Contract OLD");  //DP01491a
                                                                  InstallMotLine.SETRANGE("Production Date", "Production Date");
                                                                  IF InstallMotLine.FINDSET(TRUE, FALSE) THEN BEGIN
                                                                    REPEAT
                                                                      InstallMotLine.VALIDATE(Production, 0);
                                                                      //run trigger to ensure that the production value cumulative of following installment motivations doesn't change
                                                                      InstallMotLine.MODIFY(TRUE);
                                                                    UNTIL InstallMotLine.NEXT = 0;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=[ENU=Proposal,Submitted,Approved,Expired;
                                                                    NOR=Forslag,Sendt,Godkjent,Utg†tt;
                                                                    SVE=F”rslag,Skickat,Godk„nt,F”rfallit];
                                                   OptionString=Proposal,Submitted,Approved,Expired }
    { 160 ;   ;End Date Revision   ;Date          ;CaptionML=[ENU=End Date Revision;
                                                              NOR=Revisjon av sluttdato;
                                                              SVE=Revidering av slutdatum] }
    { 170 ;   ;Revision Amount (LCY);Decimal      ;OnValidate=BEGIN
                                                                //DP00886
                                                                CALCFIELDS("Currency Code");
                                                                IF NOT SkipValidateFCY THEN
                                                                  "Revision Amount (FCY)" := ProjectCurrencyExchangeRate.ExchangeAmtLCYToFCY("Revision Amount (LCY)", FALSE, FALSE, "Currency Code", "Project No.", Principal, "Production Date");
                                                              END;

                                                   CaptionML=ENU=Revision Amount (LCY);
                                                   Editable=No }
    { 171 ;   ;Revision Amount (FCY);Decimal      ;OnValidate=BEGIN
                                                                //DP00886
                                                                CALCFIELDS("Currency Code");
                                                                SetSkipValidateFCY(TRUE);
                                                                VALIDATE("Revision Amount (LCY)", ProjectCurrencyExchangeRate.ExchangeAmtFCYToLCY("Revision Amount (FCY)", FALSE, FALSE, "Currency Code", "Project No.", Principal, "Production Date"));
                                                              END;

                                                   CaptionML=[ENU=Revision Amount;
                                                              NOR=Revisjonsbel›p;
                                                              SVE=Revideringsbelopp];
                                                   Editable=No }
    { 180 ;   ;Revision Computed   ;Boolean       ;CaptionML=[ENU=Revision Computed;
                                                              NOR=Beregnet Revisjon;
                                                              SVE=Ber„knad revidering] }
    { 190 ;   ;Approved By         ;Code20        ;TableRelation=IF (Contact No.=FILTER(<>'')) Contact.No. WHERE (Type=CONST(Person),
                                                                                                                  Company No.=FIELD(Contact No.))
                                                                                                                  ELSE IF (Contact No.=FILTER('')) Contact.No. WHERE (Company No.=CONST(),
                                                                                                                                                                      Type=CONST(Person));
                                                   OnValidate=VAR
                                                                ContactRec@1100485000 : Record 5050;
                                                              BEGIN
                                                                IF "Approved By" <> '' THEN BEGIN
                                                                  IF ContactRec.GET("Approved By") THEN BEGIN
                                                                    //Get name for contact, this is not a flowfield, it may need modification
                                                                    "Approved By Name" := ContactRec.Name;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Approved By;
                                                              NOR=Godkjent av;
                                                              SVE=Godk„nd av] }
    { 200 ;   ;Approved By Name    ;Text100       ;CaptionML=[ENU=Name Approved By;
                                                              NOR=Navn Godkjent av;
                                                              SVE=Namn godk„nt av];
                                                   Editable=Yes }
    { 210 ;   ;Approved Date       ;Date          ;CaptionML=[ENU=Approve date;
                                                              NOR=Dato for Godkjenning;
                                                              SVE=Datum f”r godk„nnande] }
    { 220 ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Fiter }
    { 230 ;   ;Proposal Date       ;Date          ;CaptionML=ENU=Proposal Date }
    { 240 ;   ;Submittal Date      ;Date          ;OnValidate=BEGIN
                                                                "Due Date" := CALCDATE("Certification Days", "Submittal Date");
                                                              END;

                                                   CaptionML=ENU=Submittal Date }
    { 250 ;   ;Certification Days  ;DateFormula   ;OnValidate=BEGIN
                                                                "Due Date" := CALCDATE("Certification Days", "Submittal Date");
                                                              END;

                                                   CaptionML=ENU=Certification Days }
    { 260 ;   ;Due Date            ;Date          ;CaptionML=[ENU=Due Date;
                                                              NOR=Forfallsdato;
                                                              SVE=FÂ”rfallodatum];
                                                   Editable=No }
    { 270 ;   ;Installment Motivation Period;Code10;
                                                   CaptionML=ENU=Installment Motivation Period;
                                                   Editable=No }
    { 280 ;   ;Installment Overview Period;Code10 ;CaptionML=ENU=Installment Overview Period;
                                                   Editable=No }
    { 300 ;   ;Currency Code       ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Principal"."Currency Code" WHERE (Project No.=FIELD(Project No.),
                                                                                                                 Principal=FIELD(Principal)));
                                                   TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Currency Code;
                                                              SVE=Valutakod];
                                                   Editable=No }
    { 310 ;   ;Expected Certified Amount;Decimal  ;CaptionML=ENU=Expected Certified Amount }
    { 320 ;   ;Contact No.         ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Contact Business Relation"."Contact No." WHERE (Link to Table=CONST(Customer),
                                                                                                                       No.=FIELD(Principal)));
                                                   CaptionML=[ENU=Contact;
                                                              SVE=Kontaktperson];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Project No.,Principal,Production Date   ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      InstallmMotLinesRec@1210190000 : Record 11012472;
      Text001@1100485000 : TextConst 'ENU=''%1'' not allowed, after this date (%2) invoiced Installment Motivation(s) present;NOR=%1'' er ikke tillatt, etter denne datoen finnes (%2) fakturert(e) Avdragsmotivasjon(er);SVE=''%1'' „r inte till†tet, efter detta datum finns (%2) fakturerad(e) avbetalningsmotivation(er)';
      ProjRec@1100485001 : Record 11072003;
      InstallmMotRec@1100485002 : Record 11012471;
      Text002@1100485003 : TextConst 'ENU=Week 1;NOR=Uke 1;SVE=Vecka 1';
      Text003@1100525004 : TextConst 'ENU=Invoice Period: %1 (%2)';
      Text004@1100525000 : TextConst 'ENU=Are you sure? The %2 of all lines of this %1 will be set to zero. The %2 of the next %1 will be modified to ensure that the %3 stays the same.;NOR=Er du sikker? %2 av alle rader for denne %1 vil stilles inn p† null. %2 av de kommende %1 vil endres for † sikre at %3 forblir den samme.;SVE=Žr du s„ker? %2 av alla rader f”r detta %1 kommer att st„llas in p† noll. %2 av kommande %1 kommer att „ndras f”r att s„kerst„lla att %3 f”rblir detsamma.';
      Text005@1100409000 : TextConst 'ENU=%1 of %2 has %3 %4.;NOR=%1 i %2 har %3 %4.;SVE=%1 i %2 har %3 %4.';
      Text007@1100409002 : TextConst 'ENU=%1 is already created for %2.;NOR=%! er allerede opprettet for %2.';
      gDeleteCompleteProject@1100525001 : Boolean;
      SkipValidateFCY@1100525002 : Boolean;
      ProjectCurrencyExchangeRate@1100525003 : Record 11020628;
      Text008@1100527350 : TextConst 'ENU=No Installment Motivation Lines present.';
      Text009@1100527351 : TextConst 'ENU=No Last Installment Motivation Lines present.';

    PROCEDURE InstallCreatedAfterProdDate@1210190000(ProdDate@1210190002 : Date;ErrorMode@1210190001 : ',Error,Message') : Boolean;
    VAR
      lvInstalmMotRec@1210190000 : Record 11012471;
    BEGIN
      lvInstalmMotRec.SETRANGE("Project No.","Project No.");
      lvInstalmMotRec.SETRANGE(Principal,Principal);
      //lvInstalmMotRec.SETRANGE("Extension Contract OLD","Extension Contract OLD");  //DP01491a
      lvInstalmMotRec.SETFILTER("Production Date",'>%1',ProdDate);
      lvInstalmMotRec.SETRANGE("Installments Created",TRUE);
      IF lvInstalmMotRec.FINDFIRST THEN BEGIN
        CASE ErrorMode OF
          ErrorMode::Error:
            FIELDERROR("Production Date",STRSUBSTNO(Text001,ProdDate,lvInstalmMotRec."Production Date"));
          ErrorMode::Message:
            MESSAGE(FIELDCAPTION("Production Date") + ' ' + STRSUBSTNO(Text001,ProdDate,lvInstalmMotRec."Production Date"));
        END;
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE GetPrevInstMotivation@1100528701(VAR InstallmentMotivation@1100528700 : Record 11012471) : Boolean;
    BEGIN
      InstallmentMotivation.SETRANGE("Project No.", "Project No.");
      InstallmentMotivation.SETRANGE(Principal, Principal);
      //InstallmentMotivation.SETRANGE("Extension Contract OLD","Extension Contract OLD");  //DP01491a
      InstallmentMotivation.SETFILTER("Production Date", '<%1', "Production Date");
      EXIT(InstallmentMotivation.FINDLAST);
    END;

    PROCEDURE GetNextInstMotivation@1100528702(VAR InstallmentMotivation@1100528700 : Record 11012471) : Boolean;
    BEGIN
      InstallmentMotivation.SETRANGE("Project No.", "Project No.");
      InstallmentMotivation.SETRANGE(Principal, Principal);
      //InstallmentMotivation.SETRANGE("Extension Contract OLD","Extension Contract OLD");  //DP01491a
      InstallmentMotivation.SETFILTER("Production Date", '>%1', "Production Date");
      EXIT(InstallmentMotivation.FINDFIRST);
    END;

    PROCEDURE CheckPrevInstMotivApproved@1100528700();
    VAR
      InstallmentMotivation@1100528700 : Record 11012471;
    BEGIN
      InstallmentMotivation := Rec;
      WHILE InstallmentMotivation.GetPrevInstMotivation(InstallmentMotivation) DO BEGIN
        IF InstallmentMotivation.Status < InstallmentMotivation.Status::Approved THEN
          ERROR(Text005,
            TABLECAPTION,
            InstallmentMotivation."Production Date",
            FIELDCAPTION(Status),
            InstallmentMotivation.Status);
      END;
    END;

    PROCEDURE CheckNextInstMotivApproved@1100528703();
    VAR
      InstallmentMotivation@1100528700 : Record 11012471;
    BEGIN
      InstallmentMotivation := Rec;
      WHILE InstallmentMotivation.GetNextInstMotivation(InstallmentMotivation) DO BEGIN
        IF InstallmentMotivation.Status = InstallmentMotivation.Status::Approved THEN
          ERROR(Text005,
            TABLECAPTION,
            InstallmentMotivation."Production Date",
            FIELDCAPTION(Status),
            InstallmentMotivation.Status);
      END;
    END;

    PROCEDURE InInstallmentOverview@1100409000() : Boolean;
    VAR
      InstallmentOverview@1100409000 : Record 11012265;
    BEGIN
      InstallmentOverview.SETRANGE("Project No.", "Project No.");
      InstallmentOverview.SETRANGE(Principal, Principal);
      //InstallmentOverview.SETRANGE("Extension Contract OLD","Extension Contract OLD");  //DP01485a
      InstallmentOverview.SETFILTER("First Motivation Date", '..%1', "Production Date");
      InstallmentOverview.SETFILTER("Last Motivation Date", '%1..', "Production Date");
      EXIT(InstallmentOverview.FINDFIRST);
    END;

    PROCEDURE SetGlobalDeleteCompleteProject@1100528901(DeleteCompleteProject@1100528900 : Boolean);
    BEGIN
      //DP01485a
      gDeleteCompleteProject := DeleteCompleteProject;
    END;

    PROCEDURE SetSkipValidateFCY@1100528603(ISkipValidateFCY@1100528600 : Boolean);
    BEGIN
      //DP00886
      SkipValidateFCY := ISkipValidateFCY;
    END;

    LOCAL PROCEDURE UpdatePrevProductionDateFilterLines@1100528704();
    VAR
      InstallmentMotivationLine@1100528700 : Record 11012472;
    BEGIN
      IF "Production Date" <> xRec."Production Date" THEN BEGIN
        InstallmentMotivationLine.SETRANGE("Project No.", "Project No.");
        InstallmentMotivationLine.SETRANGE(Principal, Principal);
        //InstallmentMotivationLine.SETRANGE("Extension Contract","Extension Contract OLD");  //DP01491a
        InstallmentMotivationLine.SETRANGE("Production Date", xRec."Production Date");
        IF InstallmentMotivationLine.FINDSET(TRUE) THEN
          REPEAT
            InstallmentMotivationLine.UpdatePrevProductionDateFilter("Production Date");
            InstallmentMotivationLine.MODIFY;
          UNTIL InstallmentMotivationLine.NEXT = 0;
      END;
    END;

    PROCEDURE UpdatePrevProductionDateFilterFormat@1100529600();
    VAR
      InstallmentMotivationLine@1100528700 : Record 11012472;
      DateLoc@1100529600 : Date;
    BEGIN
      //DP01439
      InstallmentMotivationLine.SETRANGE("Project No.", "Project No.");
      InstallmentMotivationLine.SETRANGE(Principal, Principal);
      //InstallmentMotivationLine.SETRANGE("Extension Contract","Extension Contract OLD");  //DP01491a
      InstallmentMotivationLine.SETRANGE("Production Date", "Production Date");

      IF InstallmentMotivationLine.ISEMPTY THEN BEGIN
        InstallmentMotivationLine.RESET;
        IF NOT InstallmentMotivationLine.FINDLAST THEN
          EXIT;
        IF InstallmentMotivationLine."Prev. Production Date Filter" = '' THEN
          EXIT;
        IF EVALUATE(DateLoc, COPYSTR(InstallmentMotivationLine."Prev. Production Date Filter", 2)) THEN
          EXIT;
        InstallmentMotivationLine.UpdatePrevProductionDateFilter(InstallmentMotivationLine."Production Date");
        InstallmentMotivationLine.MODIFY;
        EXIT;
      END;

      InstallmentMotivationLine.FINDSET(TRUE);
      REPEAT
        IF InstallmentMotivationLine."Prev. Production Date Filter" <> '' THEN
          IF NOT EVALUATE(DateLoc, COPYSTR(InstallmentMotivationLine."Prev. Production Date Filter", 2)) THEN BEGIN
            InstallmentMotivationLine.UpdatePrevProductionDateFilter("Production Date");
            InstallmentMotivationLine.MODIFY;
          END;
      UNTIL InstallmentMotivationLine.NEXT = 0;
    END;

    LOCAL PROCEDURE FillInstallmentPeriod@1100528902();
    VAR
      ProductionWeek@1100528902 : Integer;
      ProductionYear@1100528901 : Integer;
      ProductionPeriod@1100528900 : Integer;
      InvoicePeriodRAWProject@1100528903 : Record 11012237;
    BEGIN
      //DP01485
      ProductionWeek := DATE2DWY("Production Date",2);
      ProductionYear := DATE2DWY("Production Date",3);
      ProductionPeriod := ((ProductionWeek-1) DIV 4) + 1;
      IF "Installment Motivation Period" = '' THEN
        "Installment Motivation Period" := STRSUBSTNO('%1-%2', ProductionYear, FORMAT(ProductionWeek,2));
      //
      //DP01490.sn
      ProjRec.GET("Project No.");
      IF ProjRec.RAW THEN BEGIN
        IF "Installment Overview Period" = '' THEN BEGIN
          InvoicePeriodRAWProject.SETRANGE("Project No.", "Project No.");
          InvoicePeriodRAWProject.SETFILTER("Starting Date", '..%1', "Production Date");
          IF InvoicePeriodRAWProject.FINDLAST THEN
            "Installment Overview Period" := STRSUBSTNO('%1', InvoicePeriodRAWProject."Period No.");
        END;
      END;
      //DP01490.en
    END;

    PROCEDURE CopyCommentFromLastInstallmentMotivation@1100527350(VAR InstallmentMotivation@1100527350 : Record 11012471);
    VAR
      PrevInstallmentMotivation@1100527351 : Record 11012471;
      PrevInstallmentMotivationLine@1100527352 : Record 11012472;
      InstallmentMotivationLine@1100527353 : Record 11012472;
    BEGIN
      PrevInstallmentMotivation.SETRANGE("Project No.", InstallmentMotivation."Project No.");
      PrevInstallmentMotivation.SETRANGE(Principal, InstallmentMotivation.Principal);
      PrevInstallmentMotivation.SETFILTER("Production Date", '<%1', InstallmentMotivation."Production Date");
      IF NOT PrevInstallmentMotivation.FINDLAST THEN
        ERROR(Text009);

      InstallmentMotivationLine.SETRANGE("Project No.", InstallmentMotivation."Project No.");
      InstallmentMotivationLine.SETRANGE(Principal, InstallmentMotivation.Principal);
      InstallmentMotivationLine.SETRANGE("Production Date", InstallmentMotivation."Production Date");
      IF InstallmentMotivationLine.FINDSET THEN BEGIN
        REPEAT
          PrevInstallmentMotivationLine.SETRANGE("Project No.", PrevInstallmentMotivation."Project No.");
          PrevInstallmentMotivationLine.SETRANGE(Principal, PrevInstallmentMotivation.Principal);
          PrevInstallmentMotivationLine.SETRANGE("Production Date", PrevInstallmentMotivation."Production Date");
          PrevInstallmentMotivationLine.SETRANGE("Extension Contract", InstallmentMotivationLine."Extension Contract");
          PrevInstallmentMotivationLine.SETRANGE("Tender Paragraph No.", InstallmentMotivationLine."Tender Paragraph No.");
          IF PrevInstallmentMotivationLine.FINDFIRST THEN BEGIN
            InstallmentMotivationLine.Comment := PrevInstallmentMotivationLine.Comment;
            InstallmentMotivationLine.MODIFY;
          END;
        UNTIL InstallmentMotivationLine.NEXT = 0;
      END ELSE
        ERROR(Text008);
    END;

    BEGIN
    {
      4PS 22-11-16 UKR-C29930 KD: Added field "Expected Certified Amount"
    }
    END.
  }
}

