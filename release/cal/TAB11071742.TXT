OBJECT Table 11071742 Service Cluster
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ServiceContract@1100525000 : Record 11012812;
             BEGIN
               IF (Type = Type::Contract) AND ("Type Code" <> '') THEN
                 IF ServiceContract.GET("Type Code") THEN
                   ServiceContract.TESTFIELD("Use Contract Clusters", TRUE);

               IF Type IN [Type::" ", Type::Contract] THEN
                 IF "Source Type" <> "Source Type"::" " THEN
                   "Source Type" := "Source Type"::" ";
               IF Type = Type::"Source Type" THEN
                 IF "Source Type" IN ["Source Type"::Contract, "Source Type"::Modification, "Source Type"::Replacement] THEN
                   FIELDERROR("Source Type");
             END;

    OnDelete=VAR
               ServiceContractClusterSeq@1100528600 : Record 11071966;
             BEGIN
               ServiceContractClusterSeq.SETRANGE(Type, Type);
               ServiceContractClusterSeq.SETRANGE("Type Code", "Type Code");
               ServiceContractClusterSeq.SETRANGE("Source Type", "Source Type");
               ServiceContractClusterSeq.SETRANGE("Cluster Code", Code);
               ServiceContractClusterSeq.DELETEALL(TRUE);
             END;

    OnRename=BEGIN
               IF NOT RenameAllowed THEN
                 ERROR(Text000, TABLECAPTION);
             END;

    CaptionML=[ENU=Service Cluster;
               SVE=Servicekontraktskluster];
    LookupPageID=Page11125246;
    DrillDownPageID=Page11125246;
  }
  FIELDS
  {
    { 2   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=ENU=" ,Contract,Template,Source Type,Modification";
                                                   OptionString=[ ,Contract,Template,Source Type,Modification] }
    { 5   ;   ;Type Code           ;Code20        ;TableRelation=IF (Type=CONST(Contract)) Service-Contract
                                                                 ELSE IF (Type=CONST(Template)) "Service-Contract Template"
                                                                 ELSE IF (Type=CONST(Modification)) "Object Modification";
                                                   CaptionML=[ENU=Type Code;
                                                              NOR=Typekode;
                                                              SVE=Typkod] }
    { 7   ;   ;Source Type         ;Option        ;OnValidate=BEGIN
                                                                IF "Source Type" <> "Source Type"::" " THEN BEGIN
                                                                  TESTFIELD(Type, Type::"Source Type");
                                                                  TESTFIELD("Type Code", '');
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Source Type;
                                                              NOR=Kildetype;
                                                              SVE=Ursprungstyp];
                                                   OptionCaptionML=ENU="Call,Contract,Direct,,,,Modification,Replacement,,,,,,, ";
                                                   OptionString=[Call,Contract,Direct,,,,Modification,Replacement,,,,,,, ] }
    { 10  ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 20  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 30  ;   ;Service Order Description;Text50   ;CaptionML=[ENU=Service Order Description;
                                                              NOR=Serviceordre Beskrivelse;
                                                              SVE=Serviceorder beskrivning] }
    { 40  ;   ;Order Kind          ;Code10        ;TableRelation="Service Order Indication".Code WHERE (Indication=CONST(Kind));
                                                   CaptionML=[ENU=Order Kind;
                                                              NOR=Type ordre;
                                                              SVE=Ordertyp] }
    { 50  ;   ;Order Type          ;Code10        ;TableRelation="Service Order Indication".Code WHERE (Indication=CONST(Type));
                                                   CaptionML=[ENU=Order Type;
                                                              NOR=Ordretype;
                                                              SVE=Ordertyp] }
    { 60  ;   ;Territory Code      ;Code10        ;TableRelation=Territory;
                                                   OnValidate=BEGIN
                                                                IF "Territory Code" <> '' THEN
                                                                  TESTFIELD(Type, Type::"Source Type");
                                                              END;

                                                   CaptionML=[ENU=Territory Code;
                                                              NOR=Distriktskode;
                                                              SVE=Distriktskod] }
    { 70  ;   ;Discipline          ;Code10        ;TableRelation=Discipline;
                                                   OnValidate=BEGIN
                                                                IF Discipline <> '' THEN
                                                                  TESTFIELD(Type, Type::"Source Type");
                                                              END;

                                                   CaptionML=[ENU=Discipline;
                                                              NOR=Disiplin;
                                                              SVE=Disciplin] }
  }
  KEYS
  {
    {    ;Type,Type Code,Source Type,Code         ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100525000 : TextConst 'ENU=You cannot rename a %1.;NOR=Du kan ikke gi nytt navn til en %1.;SVE=Du kan inte byta namn p† %1.';
      RenameAllowed@1100528600 : Boolean;

    PROCEDURE GetWorkTravelHours@1100528607(IIndexDate@1100528605 : Date;VAR OWorkingHours@1100528601 : Decimal;VAR OTravelHours@1100528602 : Decimal;VAR OMaterialPresent@1100528603 : Boolean);
    VAR
      ContractObjectMaintenance@1100528604 : Record 11071692;
      MaintenanceManagement@1100528600 : Codeunit 11012829;
    BEGIN
      OWorkingHours := 0;
      OTravelHours := 0;
      OMaterialPresent := FALSE;

      IF "Type Code" = '' THEN
        EXIT;

      ContractObjectMaintenance.SETRANGE("Service Contract No.", "Type Code");
      ContractObjectMaintenance.SETRANGE(Cluster, Code);
      ContractObjectMaintenance.SETFILTER("Object Ending Date", '%1|>=%2', 0D, IIndexDate);
      IF ContractObjectMaintenance.FINDSET THEN
        REPEAT
          MaintenanceManagement.GetMaintLinesWorkTravelHours(
            ContractObjectMaintenance."Object No.", ContractObjectMaintenance."Maintenance Scheme", IIndexDate,
            "Type Code", OWorkingHours, OTravelHours, OMaterialPresent);
        UNTIL ContractObjectMaintenance.NEXT = 0;
    END;

    PROCEDURE SetRenameAllowed@1100528600(IRenameAllowed@1100528600 : Boolean);
    BEGIN
      RenameAllowed := IRenameAllowed;
    END;

    BEGIN
    END.
  }
}

