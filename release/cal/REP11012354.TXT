OBJECT Report 11012354 Calc. Item Price by Kilo Price
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Berechnen Artikelpreis Åber Kilogrammpreis;
               ENU=Calculate Item Price Based on Price per Kilogram;
               NLD=Bereken artikelprijs via kilogramprijs];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  DiscountTermGroup@1100529600 : Record 11012338;
                BEGIN
                  IF KilogramPrice = 0 THEN
                    ERROR(Text002, Text003);
                  IF KilogramPrice < 0 THEN
                    ERROR(Text001, Text003);
                  IF PriceDate = 0D THEN
                    ERROR(Text002, Text004);

                  DiscountLevel := 0;
                  DiscountReference := '';

                  IF ProjectNo <> '' THEN BEGIN
                    Project.GET(ProjectNo);
                    IF Project."Project Status" > Project."Project Status"::"Technical Finished" THEN
                      Project.FIELDERROR("Project Status");

                    DiscountLevel := DiscountLevel::Job;
                    DiscountReference := ProjectNo;
                    IF NOT DiscountTermGroup.GET(DiscountTermGroup.Level::Job, ProjectNo) THEN BEGIN
                      DiscountTermGroup.INIT;
                      DiscountTermGroup.Level := DiscountTermGroup.Level::Job;
                      DiscountTermGroup.Code := ProjectNo;
                      DiscountTermGroup.INSERT;
                    END;
                  END;

                  CheckDiscountTermHistory;
                END;

    UsageCategory=Tasks;
  }
  DATASET
  {
    { 1100529600;;DataItem;                  ;
               DataItemTable=Table11012317;
               DataItemTableView=SORTING(Vendor,Item Code);
               OnPreDataItem=BEGIN
                               IF SkipRecalculation THEN
                                 SetGeneralCheckFilters;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF SkipRecalculation THEN BEGIN
                                    SetTradeItemCheckFilters("Trade Item");
                                    IF NOT DiscountTermHistoryCheck.ISEMPTY THEN
                                      CurrReport.SKIP;
                                  END;

                                  IF "Gross Weight" <> 0 THEN BEGIN
                                    "Net Price" := "Gross Weight" * KilogramPrice;
                                    MODIFY;
                                  END;

                                  IF DiscountTermHistory.GET(Vendor, '', "Item Code", DiscountLevel, DiscountReference, PriceDate) THEN BEGIN
                                    DiscountTermHistory."Purchase Price" := "Net Price";
                                    DiscountTermHistory."Kilogram Price" := KilogramPrice;
                                    DiscountTermHistory.MODIFY(TRUE);
                                  END ELSE BEGIN
                                    DiscountTermHistory.INIT;
                                    DiscountTermHistory.Vendor := Vendor;
                                    DiscountTermHistory."Discount Group" := '';
                                    DiscountTermHistory."Item Code" := "Item Code";
                                    DiscountTermHistory."Discount Level" := DiscountLevel;
                                    DiscountTermHistory."Discount Reference" := DiscountReference;
                                    DiscountTermHistory."Starting Date" := PriceDate;
                                    DiscountTermHistory."Purchase Price" := "Net Price";
                                    DiscountTermHistory."Kilogram Price" := KilogramPrice;
                                    DiscountTermHistory.INSERT(TRUE);
                                  END;
                                END;

               ReqFilterFields=Vendor,Discount Group Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   IF PriceDate = 0D THEN
                     PriceDate := TODAY;

                   Project.SETFILTER("Project Status", '<=%1', Project."Project Status"::"Technical Finished");
                 END;

    }
    CONTROLS
    {
      { 1100529600;;Container;
                  ContainerType=ContentArea }

      { 1100529601;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100529602;2;Field  ;
                  Name=KilogramPrice;
                  CaptionML=[DEU=Kilogrammpreis;
                             ENU=Kilogram Price;
                             NLD=Kilogramprijs];
                  SourceExpr=KilogramPrice;
                  OnValidate=BEGIN
                               IF KilogramPrice < 0 THEN
                                 ERROR(Text001, Text003);
                             END;
                              }

      { 1100529603;2;Field  ;
                  Name=PriceDate;
                  CaptionML=[DEU=Preisdatum;
                             ENU=Price Date;
                             NLD=Prijsdatum];
                  SourceExpr=PriceDate }

      { 1100529604;2;Field  ;
                  Name=ProjectNo;
                  CaptionML=[DEU=Projektnr.;
                             ENU=Project No.;
                             NLD=Projectnr.;
                             SVE=Nr];
                  SourceExpr=ProjectNo;
                  TableRelation=Job;
                  OnValidate=BEGIN
                               IF ProjectNo <> '' THEN BEGIN
                                 Project.GET(ProjectNo);
                                 IF Project."Project Status" > Project."Project Status"::"Technical Finished" THEN
                                   Project.FIELDERROR("Project Status");
                               END;
                             END;

                  OnLookup=BEGIN
                             IF ProjectNo <> '' THEN
                               IF Project.GET(ProjectNo) THEN;
                             IF PAGE.RUNMODAL(0, Project) = ACTION::LookupOK THEN BEGIN
                               IF Project."Project Status" > Project."Project Status"::"Technical Finished" THEN
                                 Project.FIELDERROR("Project Status");
                               ProjectNo := Project."No.";
                             END;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      DiscountTermHistory@1100529603 : Record 11012312;
      DiscountTermHistoryCheck@1100529613 : Record 11012312;
      Project@1100529610 : Record 11072003;
      KilogramPrice@1100529600 : Decimal;
      PriceDate@1100529601 : Date;
      ProjectNo@1100529602 : Code[20];
      DiscountLevel@1100529604 : 'Company,Customer,Job';
      DiscountReference@1100529605 : Code[20];
      Text001@1100529606 : TextConst 'DEU=%1 muss positiv sein.;ENU=%1 must be positive.;NLD=%1 moet positief zijn.;SVE=%1 mÜste vara positivt.';
      Text002@1100529607 : TextConst 'DEU=%1 muss einen Wert haben.;ENU=%1 must have a value.;NLD=%1 moet een waarde bevatten.';
      Text003@1100529608 : TextConst 'DEU=Kilogrammpreis;ENU=Kilogram Price;NLD=Kilogramprijs';
      Text004@1100529609 : TextConst 'DEU=Preisdatum;ENU=Price Date;NLD=Prijsdatum';
      Text005@1100529611 : TextConst 'DEU=%1 ist bereits auf %2 oder spÑter berechnet worden:;ENU=%1 has already been calculated on %2 or later:;NLD=%1 is al berekend op %2 of later zijn:';
      SkipRecalculation@1100529612 : Boolean;
      Text006@1100529614 : TextConst 'DEU=Vorhandenen Preis ersetzen,Neu berechnen Åberschlagen;ENU=Replace existing price,Skip recalculation;NLD=Bestaande prijs vervangen,Herberekening overslaan';

    LOCAL PROCEDURE CheckDiscountTermHistory@1100529600();
    VAR
      LocTradeItem@1100529600 : Record 11012317;
    BEGIN
      SkipRecalculation := TRUE;

      SetGeneralCheckFilters;
      IF DiscountTermHistory.ISEMPTY THEN
        EXIT;

      LocTradeItem.COPYFILTERS("Trade Item");
      IF LocTradeItem.ISEMPTY THEN
        EXIT;

      LocTradeItem.FINDSET;
      REPEAT
        SetTradeItemCheckFilters(LocTradeItem);
        IF NOT DiscountTermHistoryCheck.ISEMPTY THEN BEGIN
          CASE STRMENU(Text006, 1, STRSUBSTNO(Text005, Text003, PriceDate)) OF
            0: ERROR('test');
            1: SkipRecalculation := FALSE;
            2: SkipRecalculation := TRUE;
          END;
          EXIT;
        END;
      UNTIL LocTradeItem.NEXT = 0;
    END;

    LOCAL PROCEDURE SetGeneralCheckFilters@1100529602();
    BEGIN
      DiscountTermHistoryCheck.RESET;
      DiscountTermHistoryCheck.SETRANGE("Discount Group", '');
      DiscountTermHistoryCheck.SETRANGE("Discount Level", DiscountLevel);
      DiscountTermHistoryCheck.SETRANGE("Discount Reference", DiscountReference);
      DiscountTermHistoryCheck.SETFILTER("Starting Date", '>=%1', PriceDate);
      DiscountTermHistoryCheck.SETFILTER("Kilogram Price", '>0');
    END;

    LOCAL PROCEDURE SetTradeItemCheckFilters@1100529601(LocTradeItem@1100529600 : Record 11012317);
    BEGIN
      DiscountTermHistoryCheck.SETRANGE(Vendor, LocTradeItem.Vendor);
      DiscountTermHistoryCheck.SETRANGE("Item Code", LocTradeItem."Item Code");
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

