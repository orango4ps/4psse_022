OBJECT Table 11128102 Extended ROT/RUT Information
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    OnInsert=VAR
               SalesSetup@1100285100 : Record 311;
             BEGIN
               SalesSetup.GET;
               //>>IME1157
               // IF "ROT/RUT Type" = 0 THEN  //IME521
               //  CASE "Application Type" OF
               //    "Application Type"::ROT: "ROT/RUT Type" := SalesSetup."ROT default worktype" - 1;
               //    "Application Type"::RUT: "ROT/RUT Type" := SalesSetup."RUT default worktype" + 19;
               //  END;
               IF "ROT/RUT Type" = 18 THEN  //IME521
                 CASE "Application Type" OF
                   "Application Type"::ROT: IF SalesSetup."ROT default worktype" <> 0 THEN "ROT/RUT Type" := SalesSetup."ROT default worktype" - 1;
                   "Application Type"::RUT: IF SalesSetup."RUT default worktype" <> 0 THEN "ROT/RUT Type" := SalesSetup."RUT default worktype" + 19;
                 END;
               IF "ROT/RUT Type" = 18 THEN
                 ERROR(STRSUBSTNO(errNotEmpty,FIELDCAPTION("ROT/RUT Type")));
               //<<IME1157
             END;

    OnModify=VAR
               ExtendedROTInformation@1100285100 : Record 11128102;
               ROTInformation@1100285101 : Record 11128101;
               ROTInformation2@1100285102 : Record 11128101;
             BEGIN
               //>>RFC188
               VALIDATE("ROT/RUT Type");
               ROTInformation.GET(Type,"Document No.","Invoice No.","Personal No.","Application Type");
               ROTInformation2.SETRANGE(Type,ROTInformation.Type);
               ROTInformation2.SETRANGE("Document No.",ROTInformation."Document No.");
               ROTInformation2.SETRANGE("Invoice No.",ROTInformation."Invoice No.");
               ROTInformation2.SETFILTER("Personal No.",'<>%1',ROTInformation."Personal No.");
               ROTInformation2.SETRANGE("Application Type",ROTInformation."Application Type");
               IF ROTInformation2.FINDSET(FALSE) THEN
               REPEAT
                 IF NOT ExtendedROTInformation.GET(Type,"Document No.","Invoice No.",ROTInformation2."Personal No.","Application Type","ROT/RUT Type") THEN BEGIN
                   ExtendedROTInformation.Type := Type;
                   ExtendedROTInformation."Document No." := "Document No.";
                   ExtendedROTInformation."Invoice No." := "Invoice No.";
                   ExtendedROTInformation."Personal No." := ROTInformation2."Personal No.";
                   ExtendedROTInformation."Application Type" := "Application Type";
                   ExtendedROTInformation."ROT/RUT Type" := "ROT/RUT Type";
                   ExtendedROTInformation.VALIDATE("Quantity Hours", "Quantity Hours");
                   ExtendedROTInformation.VALIDATE("Material Cost", "Material Cost");
                   ExtendedROTInformation.INSERT(FALSE);
                 END;
               UNTIL ROTInformation2.NEXT=0;

               ExtendedROTInformation.SETRANGE(Type,Type);
               ExtendedROTInformation.SETRANGE("Document No.","Document No.");
               ExtendedROTInformation.SETRANGE("Invoice No.","Invoice No.");
               ExtendedROTInformation.SETFILTER("Personal No.",'<>%1',"Personal No.");
               ExtendedROTInformation.SETRANGE("Application Type","Application Type");
               ExtendedROTInformation.SETRANGE("ROT/RUT Type", "ROT/RUT Type");
               IF ExtendedROTInformation.FINDSET(TRUE) THEN BEGIN
                 REPEAT
                   ExtendedROTInformation.VALIDATE("Quantity Hours", "Quantity Hours");

                   ExtendedROTInformation.VALIDATE("Material Cost", "Material Cost");

                   ExtendedROTInformation.MODIFY(FALSE);
                 UNTIL ExtendedROTInformation.NEXT=0;

               END;
               //<<RFC188
             END;

    CaptionML=[ENU=Extended ROT/RUT Information;
               SVE=Ut”kad ROT/RUT information];
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[ENU=Try-Out Quote,Quick Estimate,Project,Invoice,Posted Invoice,Service Order;
                                                                    NOR=Tilbudsforesp›rsel,Hurtigkalkyle,Prosjekt,Faktura,Bokf›rt faktura,Serviceordre;
                                                                    SVE=Anbudsf”rfr†gan,Snabbkalkyl,Projekt,Faktura,Bokf”rd faktura,Serviceorder];
                                                   OptionString=Try-Out Quote,Quick Estimate,Project,Invoice,Posted Invoice,Service Order }
    { 2   ;   ;Document No.        ;Code30        ;TableRelation=IF (Type=FILTER(Project)) Job.No.
                                                                 ELSE IF (Type=FILTER(Service Order)) "Service Order".No.
                                                                 ELSE IF (Type=CONST(Quick Estimate)) Estimate.No.
                                                                 ELSE IF (Type=CONST(Try-Out Quote)) "Try-out Quote".Code;
                                                   OnValidate=VAR
                                                                lvJob@1100285500 : Record 11072003;
                                                                lvServiceOrder@1100285501 : Record 11012823;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr;
                                                              SVE=Nr] }
    { 3   ;   ;Invoice No.         ;Code30        ;TableRelation=IF (Type=CONST(Invoice)) "Sales Header".No. WHERE (Document Type=CONST(Invoice))
                                                                 ELSE IF (Type=CONST(Posted Invoice)) "Sales Invoice Header".No.;
                                                   CaptionML=[ENU=Invoice No.;
                                                              NOR=Fakturanr.;
                                                              SVE=Fakturanr] }
    { 4   ;   ;Personal No.        ;Code12        ;CaptionML=[ENU=Social Security No.;
                                                              NOR=Personnr;
                                                              SVE=Personnr] }
    { 5   ;   ;ROT/RUT Type        ;Option        ;InitValue=[ ];
                                                   OnValidate=BEGIN
                                                                //>>RFC188
                                                                IF "ROT/RUT Type" = "ROT/RUT Type"::RUT THEN
                                                                  TESTFIELD("Application Type");

                                                                IF "ROT/RUT Type" > "ROT/RUT Type"::RUT THEN
                                                                  TESTFIELD("Application Type","Application Type"::RUT)
                                                                ELSE
                                                                  TESTFIELD("Application Type","Application Type"::ROT);
                                                                //<<RFC188
                                                              END;

                                                   CaptionML=[ENU=Work type;
                                                              SVE=Arbetstyp];
                                                   OptionCaptionML=[ENU=Construction,Electricity,Glass/Steel,Land Drain,Brick Laying,Painting/Wall Covering,Water System,,,,,,,,,,,, ,RUT:,Child,Removal services,IT services,Clothing and textile care,Personal assistance and care,Cleaning and cleaning work,Snow clearance,Gardening,Appliances;
                                                                    SVE=Bygg,El,Glas-/Pl†tarbete,Markdr„neringsarbete,Murning,M†lning/Tapetsering,VVS,,,,,,,,,,,, ,RUT:,Barnpassning,Flyttj„nster,IT-tj„nster,Kl„d-och textilv†rd,Personlig hj„lp och omsorg,St„d-och reng”ringsarbeten,Sn”skottning,Tr„dg†rdsarbete,Vitvaror];
                                                   OptionString=Construction,Electricity,Glass/Steel,Land Drain,Brick Laying,Painting/Wall Covering,Water System,,,,,,,,,,,, ,RUT,Child,Removal services,IT services,Clothing and textile care,Personal assistance and care,Cleaning and cleaning work,Snow clearance,Gardening,Appliances }
    { 6   ;   ;Application Type    ;Option        ;CaptionML=[ENU=Application Type;
                                                              SVE=Avdragstyp];
                                                   OptionString=ROT,RUT;
                                                   Description=RFC188 }
    { 10  ;   ;Quantity Hours      ;Integer       ;OnValidate=VAR
                                                                ROTInformation@1100285100 : Record 11128101;
                                                              BEGIN
                                                                IF ROTInformation.GET(Type,"Document No.","Invoice No.","Personal No.","Application Type") THEN BEGIN
                                                                  IF ROTInformation."Quote of ROT Amount" = 0 THEN ROTInformation."Quote of ROT Amount" := 100;
                                                                  "Quantity Hours to TaxAuth" := ROUND(("Quantity Hours" * ROTInformation."Quote of ROT Amount" / 100),1,'=');
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Quantity Hours;
                                                              SVE=Antal timmar] }
    { 11  ;   ;Material Cost       ;Integer       ;OnValidate=VAR
                                                                ROTInformation@1100285100 : Record 11128101;
                                                              BEGIN
                                                                IF ROTInformation.GET(Type,"Document No.","Invoice No.","Personal No.","Application Type") THEN BEGIN
                                                                  IF ROTInformation."Quote of ROT Amount" = 0 THEN ROTInformation."Quote of ROT Amount" := 100;
                                                                  "Material Cost to TaxAuth" := ROUND(("Material Cost" * ROTInformation."Quote of ROT Amount" / 100),1,'=');
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Material Cost;
                                                              NOR=Materialekost;
                                                              SVE=Materialkostnad] }
    { 20  ;   ;Quantity Hours to TaxAuth;Integer  ;CaptionML=[ENU=Quantity Hours to TaxAuth;
                                                              SVE=Antal timmar till SKV];
                                                   Description=RFC188;
                                                   Editable=No }
    { 21  ;   ;Material Cost to TaxAuth;Integer   ;CaptionML=[ENU=Material Cost to TaxAuth;
                                                              SVE=Materialkostnad till SKV];
                                                   Description=RFC188;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Type,Document No.,Invoice No.,Personal No.,Application Type,ROT/RUT Type;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      errNotEmpty@1100285100 : TextConst 'ENU=%1 must have a value;SVE=%1 m†ste ha ett v„rde';

    BEGIN
    {
      170405 ITERO.DL RFC188 enhance ROT-handling and extend with RUT
      170512 ITERO.DL RFC188 corrections after test
      180130 ITERO.DL IME521 problems with adding second line of same application type
      190118 ORANGO.DL IME1157 unable to assign "ROT/RUT Type"::Construction
                               new init-value for "ROT/RUT Type" 0->18 (Construction->'')
    }
    END.
  }
}

