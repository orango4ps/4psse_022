OBJECT Table 11012003 Budget Adjustment
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Project No.,No.;
    OnInsert=BEGIN
               "Version Date" := WORKDATE;
               "Input by" := USERID;
               "Input Date" := TODAY;

               IF "No." = '' THEN
                 GetDefaultAdjustmentNo;
             END;

    OnModify=BEGIN
               FillFocussedFields();

               BudgetRec.RESET;
               BudgetRec.SETRANGE("Project No.","Project No.");
               BudgetRec.SETRANGE(Adjustment,"No.");
               BudgetRec.SETFILTER("Version Date",'<>%1',"Version Date");
               IF BudgetRec.FINDSET(TRUE,FALSE) THEN
                 REPEAT
                   BudgetRec."Version Date" := "Version Date";
                   BudgetRec.MODIFY;
                 UNTIL BudgetRec.NEXT = 0;
             END;

    OnDelete=BEGIN
               IF NOT DeleteCompleteProject THEN
                 TESTFIELD("Budget Correction Fixed", FALSE);
               DELETE;
               BudgetRec.RESET;
               BudgetRec.SETRANGE("Project No.","Project No.");
               BudgetRec.SETRANGE(Adjustment,"No.");
               IF BudgetRec.FINDSET THEN
                 REPEAT
                   FillChangedSummarySheet(BudgetRec);
                 UNTIL BudgetRec.NEXT = 0;
               BudgetRec.DELETEALL(TRUE);
               INSERT;

               RecalcSummarySheet(TRUE);
             END;

    OnRename=BEGIN
               FillFocussedFields();
               IF "Project No." <> xRec."Project No." THEN
                 ERROR(Text000);
             END;

    CaptionML=[ENU=Budget Adjustment;
               NOR=Budsjettjustering;
               SVE=Budgetjustering];
    LookupPageID=Page11012012;
    DrillDownPageID=Page11012012;
  }
  FIELDS
  {
    { 1   ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   OnValidate=BEGIN
                                                                GetProject();
                                                                IF NOT ProjRec."Budget Fixed" THEN
                                                                  ERROR(Text001,"Project No.");
                                                              END;

                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr.;
                                                              SVE=Projektnr];
                                                   NotBlank=Yes;
                                                   Numeric=No }
    { 2   ;   ;No.                 ;Code10        ;CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr];
                                                   SQL Data Type=Integer;
                                                   NotBlank=Yes;
                                                   Numeric=Yes }
    { 3   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 4   ;   ;Modified by         ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Modified by;
                                                              NOR=Endret av;
                                                              SVE=Žndrad av];
                                                   Editable=No }
    { 5   ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              NOR=Oppdateringsdato;
                                                              SVE=Uppdateringsdatum];
                                                   Editable=No }
    { 6   ;   ;Project Description ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Project Description;
                                                              NOR=Prosjektbeskrivelse;
                                                              SVE=Projektbeskrivning];
                                                   Editable=No }
    { 7   ;   ;Hours               ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Hours WHERE (Project No.=FIELD(Project No.),
                                                                                              Adjustment=FIELD(No.)));
                                                   CaptionML=[ENU=Hours;
                                                              NOR="Timer ";
                                                              SVE=Timmar];
                                                   Editable=No }
    { 8   ;   ;Labor               ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line"."Amount (LCY)" WHERE (Project No.=FIELD(Project No.),
                                                                                                       Adjustment=FIELD(No.),
                                                                                                       Cost Type=CONST(Labor)));
                                                   CaptionML=[ENU=Labor;
                                                              NOR=Arbeidskraft;
                                                              SVE=Arbetskraft];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 9   ;   ;Material            ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line"."Amount (LCY)" WHERE (Project No.=FIELD(Project No.),
                                                                                                       Adjustment=FIELD(No.),
                                                                                                       Cost Type=CONST(Material)));
                                                   CaptionML=[ENU=Material;
                                                              NOR=Materialee;
                                                              SVE=Material];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 10  ;   ;Subcontracting      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line"."Amount (LCY)" WHERE (Project No.=FIELD(Project No.),
                                                                                                       Adjustment=FIELD(No.),
                                                                                                       Cost Type=CONST(Subcontracting)));
                                                   CaptionML=[ENU=Subcontracting;
                                                              NOR=Underentrepen›r;
                                                              SVE=Underentreprenad];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 11  ;   ;Plant               ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line"."Amount (LCY)" WHERE (Project No.=FIELD(Project No.),
                                                                                                       Adjustment=FIELD(No.),
                                                                                                       Cost Type=CONST(Plant)));
                                                   CaptionML=[ENU=Plant;
                                                              NOR=Maskin;
                                                              SVE=Maskin];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 12  ;   ;Sundry              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line"."Amount (LCY)" WHERE (Project No.=FIELD(Project No.),
                                                                                                       Adjustment=FIELD(No.),
                                                                                                       Cost Type=CONST(Sundry)));
                                                   CaptionML=[ENU=Sundry;
                                                              NOR=Diverse;
                                                              SVE=Diverse];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 13  ;   ;Total               ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line"."Amount (LCY)" WHERE (Project No.=FIELD(Project No.),
                                                                                                       Adjustment=FIELD(No.)));
                                                   CaptionML=[ENU=Total;
                                                              NOR=Totalt;
                                                              SVE=Totalt];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 14  ;   ;Version Date        ;Date          ;CaptionML=[ENU=Version Date;
                                                              NOR=Versjonsdato;
                                                              SVE=Versionsdatum] }
    { 20  ;   ;Input by            ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Input by;
                                                              NOR=Input av;
                                                              SVE=Inmatat av];
                                                   Editable=No }
    { 21  ;   ;Input Date          ;Date          ;CaptionML=[ENU=Input Date;
                                                              NOR=Input Dato;
                                                              SVE=Inmatat den];
                                                   Editable=No }
    { 30  ;   ;Text                ;Text250       ;CaptionML=[ENU=Text;
                                                              NOR=Text;
                                                              SVE=Ben„mning] }
    { 40  ;   ;Budget Correction Fixed;Boolean    ;OnValidate=VAR
                                                                lUserSetup@1100485000 : Record 91;
                                                              BEGIN
                                                                IF "Budget Correction Fixed" <> xRec."Budget Correction Fixed" THEN
                                                                  IF lUserSetup.GET(USERID) THEN
                                                                    IF lUserSetup."No Access Budget Adjustm Fixed" THEN
                                                                      ERROR(Text002,FIELDCAPTION("Budget Correction Fixed"));
                                                                IF (NOT "Budget Correction Fixed") AND "Correction Fixed" THEN
                                                                  TESTFIELD("Correction Fixed", FALSE);
                                                              END;

                                                   CaptionML=[ENU=Budget Correction Fixed;
                                                              NOR=Budsjettkorrigering fast;
                                                              SVE=Budgetkorrigering fast] }
    { 45  ;   ;Correction Fixed    ;Boolean       ;OnValidate=BEGIN
                                                                IF "Correction Fixed" THEN BEGIN
                                                                  IF NOT "Budget Correction Fixed" THEN
                                                                    VALIDATE("Budget Correction Fixed", TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Correction Fixed;
                                                              NOR=Korreksjon fast;
                                                              SVE=R„ttning klar] }
    { 50  ;   ;Created from Purchase Action;Code20;TableRelation="Project Purchase Action".Code WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=Created from Purchase Action;
                                                              NOR=Opprettet fra Innkj›pshandling;
                                                              SVE=Skapat fr†n ink”ps†tg„rd] }
    { 60  ;   ;Budget Adjustment Type;Code10      ;TableRelation="Budget Adjustment Type".Code;
                                                   CaptionML=[ENU=Adjustment Type;
                                                              NOR=Justeringstype;
                                                              SVE=Justeringstyp] }
    { 70  ;   ;Budget Neutral      ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Budget Adjustment Type"."Budget Neutral" WHERE (Code=FIELD(Budget Adjustment Type)));
                                                   CaptionML=[ENU=Budget Neutral;
                                                              NOR=Budsjett, N›ytral;
                                                              SVE=Budget, neutral];
                                                   Editable=No }
    { 80  ;   ;Created from Source Type;Option    ;CaptionML=ENU=Created from Source Type;
                                                   OptionCaptionML=ENU=Risk Line,Opportunity Line;
                                                   OptionString=Risk Line,Opportunity Line;
                                                   Editable=No }
    { 90  ;   ;Created from Schedule Date;Date    ;TableRelation="Risk Opportunity Schedule".Date WHERE (Source=CONST(Project),
                                                                                                         Source Code=FIELD(Project No.));
                                                   CaptionML=ENU=Created from Schedule Date;
                                                   Editable=No }
    { 100 ;   ;Created from Line No.;Integer      ;TableRelation=IF (Created from Source Type=CONST(Risk Line)) "Risk Line"."Line No." WHERE (Source=CONST(Project),
                                                                                                                                              Source Code=FIELD(Project No.),
                                                                                                                                              Schedule Date=FIELD(Created from Schedule Date))
                                                                                                                                              ELSE IF (Created from Source Type=CONST(Opportunity Line)) "Opportunity Line"."Line No." WHERE (Source=CONST(Project),
                                                                                                                                                                                                                                              Source Code=FIELD(Project No.),
                                                                                                                                                                                                                                              Schedule Date=FIELD(Created from Schedule Date));
                                                   CaptionML=ENU=Created from Line No.;
                                                   Editable=No }
    { 110 ;   ;Phase Change Element;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=Phase Change Element;
                                                   Editable=No }
    { 120 ;   ;Original Element Phase Code;Code10 ;TableRelation="Project Element Phase".Code WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=Original Element Phase Code;
                                                   Editable=No }
    { 130 ;   ;New Element Phase Code;Code10      ;TableRelation="Project Element Phase".Code WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=New Element Phase Code;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Project No.,No.                         ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@11012004 : TextConst 'ENU=Modify Project not Allowed;NOR=Det er ikke tillatt † endre prosjektet;SVE=Det inte till†tet att „ndra projektet';
      Text001@11012005 : TextConst 'ENU=Project %1 not fixed, update the original budget.;NOR=Prosjektet %1 ikke fast. Oppdater det originalet budsjettet.;SVE=Projektet %1 har inte †tg„rdats. Uppdatera den ursprungliga budgeten.';
      ProjectSetup@1100525001 : Record 315;
      ProjRec@11012000 : Record 11072003;
      BudgetRec@11012002 : Record 11012001;
      Text002@1100485000 : TextConst 'ENU=You have no permission to change %1;NOR=Du mangler tillatelse til † endre %1;SVE=Du saknar beh”righet att „ndra %1';
      Text003@1100525000 : TextConst 'ENU=Warning !  The %1 of %2 %3 of %4 %5 unequals zero.;NOR=Advarsel!  %1 av %2 %3 av %4 %5 er ikke like null.;SVE=Varning!  %1 av %2 %3 av %4 %5 „r inte lika med noll.';
      Text004@1210190000 : TextConst 'ENU=Update Summary #1###############;NOR=Oppdater sammendrag #1###############;SVE=Uppdatera sammandrag #1###############';
      TmpBudgetSummarySheet@1210190001 : TEMPORARY Record 11012064;
      DeleteCompleteProject@1210190002 : Boolean;
      Text005@1100528400 : TextConst 'ENU=Element Phase Change';
      Text006@1100528401 : TextConst 'ENU=%1 %2s have been deleted.';

    PROCEDURE FillFocussedFields@3();
    BEGIN
      "Modified by" := USERID;
      "Last Date Modified" := TODAY;
    END;

    PROCEDURE GetProject@1();
    BEGIN
      ProjRec.SETRANGE("No.","Project No.");
      IF ProjRec.FINDFIRST THEN;
    END;

    PROCEDURE CheckAdjustmentBalance@1100525000(lAdjRec@11012000 : Record 11012003);
    BEGIN
      IF lAdjRec."Project No." = '' THEN
        EXIT;

      ProjectSetup.GET;
      IF NOT ProjectSetup."Adjustment Balance Warning" THEN
        EXIT;

      IF lAdjRec."No." <> '' THEN BEGIN
        BudgetRec.RESET;
        BudgetRec.SETRANGE("Project No.",lAdjRec."Project No.");
        BudgetRec.SETRANGE(Adjustment,lAdjRec."No.");
        BudgetRec.SETRANGE("Adjustment Filter",lAdjRec."No.");
        BudgetRec.CALCSUMS("Amount (LCY)");
        IF BudgetRec."Amount (LCY)" <> 0 THEN
          MESSAGE(
            Text003,
            BudgetRec.FIELDCAPTION("Total Amount"),
            lAdjRec.TABLECAPTION,
            lAdjRec."No.",
            FIELDCAPTION("Project No."),
            lAdjRec."Project No.");
      END;
    END;

    PROCEDURE FillChangedSummarySheet@1100485002(IBudgetLineRec@1100485001 : Record 11012001);
    VAR
      BudgetSummarySheet@1100485000 : Record 11012064;
      lBudgetAdjustment@1210190000 : Record 11012003;
    BEGIN
      WITH IBudgetLineRec DO BEGIN

        BudgetSummarySheet.SETRANGE("Project No.", "Project No.");
        BudgetSummarySheet.SETRANGE("Contract No.", "Extension Contract");
        BudgetSummarySheet.SETRANGE("House Model", '');
        BudgetSummarySheet.SETRANGE("Main Group", '');
        BudgetSummarySheet.SETRANGE(Group, '');
        BudgetSummarySheet.SETRANGE("Sub Group", '');
        BudgetSummarySheet.SETRANGE(Option, '');
        IF NOT BudgetSummarySheet.FIND('-') THEN
        //No summary sheet present.
          EXIT;

        TmpBudgetSummarySheet.RESET;
        TmpBudgetSummarySheet.SETRANGE("Project No.", "Project No.");
        TmpBudgetSummarySheet.SETRANGE("Contract No.", "Extension Contract");
        TmpBudgetSummarySheet.SETRANGE("Row No.", "No." ); //Summary Adjustment
        IF NOT TmpBudgetSummarySheet.FIND('-') THEN BEGIN
          TmpBudgetSummarySheet.INIT;
          TmpBudgetSummarySheet."Project No." := "Project No.";
          TmpBudgetSummarySheet."Contract No." := "Extension Contract";
          TmpBudgetSummarySheet."Row No." := "No.";    //Summary Adjustment
          TmpBudgetSummarySheet.INSERT;
        END;

        //Summary Adjustment
        lBudgetAdjustment.RESET;
        lBudgetAdjustment.SETRANGE("Project No.", "Project No.");
        lBudgetAdjustment.SETFILTER("No.", '%1..', "No.");
        IF lBudgetAdjustment.FINDSET THEN BEGIN
          IF lBudgetAdjustment."No."  <> "No." THEN BEGIN
            TmpBudgetSummarySheet.RESET;
            TmpBudgetSummarySheet.SETRANGE("Project No.", "Project No.");
            TmpBudgetSummarySheet.SETRANGE("Contract No.", "Extension Contract");
            TmpBudgetSummarySheet.SETRANGE("Row No.", lBudgetAdjustment."No." );
            IF NOT TmpBudgetSummarySheet.FIND('-') THEN BEGIN
              TmpBudgetSummarySheet.INIT;
              TmpBudgetSummarySheet."Project No." := "Project No.";
              TmpBudgetSummarySheet."Contract No." := "Extension Contract";
              TmpBudgetSummarySheet."Row No." := lBudgetAdjustment."No.";
              TmpBudgetSummarySheet.INSERT;
            END;
           END;
        END;

        TmpBudgetSummarySheet.RESET;
      END;
    END;

    PROCEDURE RecalcSummarySheet@1100485006(lvToDelete@1210190002 : Boolean) : Boolean;
    VAR
      BudgetSummarySheet@1210190001 : Record 11012064;
      CalcSummaryWindow@1210190000 : Dialog;
    BEGIN
      IF NOT TmpBudgetSummarySheet.FIND('-') THEN
        EXIT(FALSE);

      CalcSummaryWindow.OPEN(Text004);

      REPEAT
        CalcSummaryWindow.UPDATE(1, "Project No.");

        BudgetSummarySheet.SETRANGE("Project No.", TmpBudgetSummarySheet."Project No.");
        BudgetSummarySheet.SETRANGE("Contract No.", TmpBudgetSummarySheet."Contract No.");
        BudgetSummarySheet.SETRANGE("House Model", '');
        BudgetSummarySheet.SETRANGE("Main Group", '');
        BudgetSummarySheet.SETRANGE(Group, '');
        BudgetSummarySheet.SETRANGE("Sub Group", '');
        BudgetSummarySheet.SETRANGE(Option, '');
        IF BudgetSummarySheet.FIND('-') THEN BEGIN
          BudgetSummarySheet.ReCalcSummaryLines(TmpBudgetSummarySheet."Row No.");
          IF NOT lvToDelete THEN
            BudgetSummarySheet.UpdateBudgetLines(FALSE, TmpBudgetSummarySheet."Row No.");
        END;
        TmpBudgetSummarySheet.DELETE;
      UNTIL TmpBudgetSummarySheet.NEXT = 0;

      CalcSummaryWindow.CLOSE;

      EXIT(TRUE);
    END;

    PROCEDURE SetDeleteCompleteProject@1210190000();
    BEGIN
      DeleteCompleteProject := TRUE;
    END;

    PROCEDURE GetDefaultAdjustmentNo@1100525001();
    VAR
      BudgetAdjustment@1100525000 : Record 11012003;
    BEGIN
      BudgetAdjustment.SETRANGE("Project No.", "Project No.");
      IF BudgetAdjustment.FINDLAST THEN
        "No." := INCSTR(BudgetAdjustment."No.")
      ELSE
        "No." := '1';
    END;

    PROCEDURE CreateBudgetAdjustment@1100529700(ProjectNo@1100529700 : Code[20];CreatedFrom@1100529701 : Option;ScheduleDate@1100529702 : Date;LineNo@1100529703 : Integer;Descr@1100529705 : Text);
    VAR
      BudgetAdjustment@1100529704 : Record 11012003;
    BEGIN
      BudgetAdjustment.VALIDATE("Project No.", ProjectNo); //Validation needed to check budget is fixed
      BudgetAdjustment."Created from Source Type" := CreatedFrom;
      BudgetAdjustment."Created from Schedule Date" := ScheduleDate;
      BudgetAdjustment."Created from Line No." := LineNo;
      BudgetAdjustment.Description := COPYSTR(Descr, 1, MAXSTRLEN(BudgetAdjustment.Description));
      BudgetAdjustment.INSERT(TRUE);
      COMMIT;

      IF PAGE.RUNMODAL(11012011, BudgetAdjustment) = ACTION::LookupOK THEN;
    END;

    PROCEDURE CreateBudgetAdjustmentForChangeOfElementPhase@1100528400(ProjectElement@1100528402 : Record 11012010;NewProjectElementPhaseCode@1100528400 : Code[10];VAR BudgetLine@1100528401 : Record 11012001) : Code[10];
    VAR
      JobsSetup@1100528407 : Record 315;
      BudgetLine2@1100528404 : Record 11012001;
      ProjectElementPhase@1100528403 : Record 11229446;
      NoOfLines@1100528405 : Integer;
      Counter@1100528406 : Integer;
    BEGIN
      VALIDATE("Project No.", ProjectElement."Project No.");
      VALIDATE("Phase Change Element", ProjectElement.Element);
      VALIDATE("Original Element Phase Code", ProjectElement."Phase Code");
      VALIDATE("New Element Phase Code", NewProjectElementPhaseCode);
      Description := COPYSTR(Text005, 1, MAXSTRLEN(Description));
      INSERT(TRUE);

      NoOfLines := BudgetLine.COUNT;
      ProjectElementPhase.GET(ProjectElement."Project No.", NewProjectElementPhaseCode);

      IF BudgetLine.FINDSET(TRUE) THEN
        REPEAT
          Counter += 1;
          BudgetLine2 := BudgetLine;
          BudgetLine2."Line No." := Counter * 10000;
          IF (BudgetLine2.Adjustment = '') OR BudgetLine2."Adjustment by Phase Change" THEN
            BudgetLine2."Adjustment by Phase Change" := TRUE;
          BudgetLine2.Adjustment := "No.";
          BudgetLine2.VALIDATE(Quantity, -1 * BudgetLine2.Quantity);
          BudgetLine2."Generated by Phase Change" := BudgetLine2."Generated by Phase Change"::Negative;
          BudgetLine2.INSERT(TRUE);

          BudgetLine2."Line No." += NoOfLines * 10000;
          BudgetLine2."Element Phase Code" := NewProjectElementPhaseCode;
          BudgetLine2.VALIDATE(Quantity, -1 * BudgetLine2.Quantity);
          BudgetLine2."Generated by Phase Change" := BudgetLine2."Generated by Phase Change"::Positive;
          BudgetLine2.INSERT(TRUE);

          BudgetLine."Copied to Adjustment" := TRUE;
          BudgetLine.MODIFY;
        UNTIL BudgetLine.NEXT = 0;

      JobsSetup.GET;
      JobsSetup.TESTFIELD("El. Phase Adjustment Type Code");
      "Budget Adjustment Type" := JobsSetup."El. Phase Adjustment Type Code";
      MODIFY;

      EXIT("No.");
    END;

    PROCEDURE DeleteLinesOfSameElementsAndPhasesOutsideThisAdjustment@1100528401();
    VAR
      TempProjectElement@1100528401 : TEMPORARY Record 11012010;
      MarkedBudgetLine@1100528400 : Record 11012001;
      Job@1100528402 : Record 11072003;
      NoOfDeletedBudgetLines@1100528404 : Integer;
    BEGIN
      GetTempProjectElements(TempProjectElement);
      IF TempProjectElement.FINDSET THEN
        REPEAT
          MarkedBudgetLine.SETFILTER(Adjustment, '<>%1', "No.");
          TempProjectElement.MarkBudgetLinesOfElementAndPhase(
            TempProjectElement."Phase Code", MarkedBudgetLine);
        UNTIL TempProjectElement.NEXT = 0;

      MarkedBudgetLine.MARKEDONLY(TRUE);
      IF MarkedBudgetLine.FINDSET THEN
        REPEAT
          IF (MarkedBudgetLine.Adjustment = '') AND
             (MarkedBudgetLine."Extension Contract" = '') AND
             (MarkedBudgetLine.Option = '')
          THEN BEGIN
            IF Job."No." = '' THEN
              Job.GET(MarkedBudgetLine."Project No.");
            Job.TESTFIELD("Budget Fixed", FALSE);
          END;
          MarkedBudgetLine.DELETE(TRUE);
          NoOfDeletedBudgetLines += 1;
        UNTIL MarkedBudgetLine.NEXT = 0;
      MESSAGE(Text006, NoOfDeletedBudgetLines, MarkedBudgetLine.TABLECAPTION);
    END;

    LOCAL PROCEDURE GetTempProjectElements@1100528404(VAR TempProjectElement@1100528400 : TEMPORARY Record 11012010);
    VAR
      BudgetLine@1100528401 : Record 11012001;
      ProjectElement@1100528402 : Record 11012010;
    BEGIN
      BudgetLine.SETRANGE("Project No.", "Project No.");
      BudgetLine.SETRANGE(Adjustment, "No.");
      IF BudgetLine.FINDSET THEN
        REPEAT
          IF NOT TempProjectElement.GET(
            BudgetLine."Project No.", BudgetLine.Element)
          THEN BEGIN
            ProjectElement.GET(BudgetLine."Project No.", BudgetLine.Element);
            TempProjectElement := ProjectElement;
            TempProjectElement.INSERT;
          END;
          BudgetLine.TESTFIELD("Element Phase Code", TempProjectElement."Phase Code");
        UNTIL BudgetLine.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

