OBJECT XMLport 11012014 Import Measurement List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import Measurement List;
               SVE=Importera m„tningslista];
    Direction=Import;
    DefaultFieldsValidation=No;
    PreserveWhiteSpace=Yes;
    TextEncoding=WINDOWS;
    OnPreXMLport=BEGIN
                   CASE gListType OF
                     gListType::ProjectPrincipal:
                       BEGIN
                         ProjPrincipalRec.GET(gProjectNo, gPrincipal);  //* Project Principal must be known
                         ProjPrincipalRec.TESTFIELD("Installm.Motivation Method");
                         ProjPrincipalRec.TESTFIELD("Contract Amount");
                       END;
                     gListType::ExtContract:
                       BEGIN
                         ExtContractRec.GET(gProjectNo, gContractNo);  //* Project-contract must be known
                         ExtContractRec.TESTFIELD("Installm.Motivation Method");
                         ExtContractRec.TESTFIELD("Contract Amount");
                       END;
                     gListType::ProvWork:
                       BEGIN
                         ProvisionalWork.GET(gProvWorkNo); ;  //* Provisional Work must be known
                       END;
                   END;
                 END;

    Format=Variable Text;
    FieldDelimiter=<None>;
    FieldSeparator=[;];
    UseRequestPage=No;
  }
  ELEMENTS
  {
    { [{E7C5C287-2659-46A9-AE2D-8AAC1BCFD957}];  ;Root                ;Element ;Text     }

    { [{E73529D6-AD9D-4F64-967C-B79390F7C149}];1 ;Integer             ;Element ;Table   ;
                                                  SourceTable=Table2000000026;
                                                  SourceTableView=SORTING(Field1)
                                                                  WHERE(Field1=FILTER(1..));
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              Counter += 1;

                                                                              //T003505.sn
                                                                              CLEAR(gfTenderElem);
                                                                              CLEAR(gfDescription);
                                                                              CLEAR(gfQuantity);
                                                                              CLEAR(gfUnit);;
                                                                              CLEAR(gfUnitPrice);
                                                                              CLEAR(gfElement);
                                                                              CLEAR(gfSettlement);
                                                                              CLEAR(gfText);
                                                                              CLEAR(gfDate);
                                                                              //T003505.en
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 RecRef@1100525502 : RecordRef;
                                                                                 NextLineNo@1100525501 : Integer;
                                                                                 TempDecimal@1100525500 : Decimal;
                                                                                 Text2@1210190003 : Text[500];
                                                                                 Pos@1210190002 : Integer;
                                                                                 LineNo@1210190001 : Integer;
                                                                                 ProvisionalWorkCommentLine@1210190000 : Record 11071940;
                                                                               BEGIN
                                                                                 IF (Counter = 1) AND
                                                                                    (NOT EVALUATE(TempDecimal, gfQuantity) OR
                                                                                    NOT EVALUATE(TempDecimal, gfUnitPrice)) THEN
                                                                                    //this seems to be a row with column headers, skip it
                                                                                    currXMLport.SKIP;

                                                                                 //T003505.sn skip empty last line
                                                                                 IF (gfTenderElem = '') AND (gfQuantity = '') THEN
                                                                                    currXMLport.SKIP;
                                                                                 //T003505.en

                                                                                 CASE gListType OF
                                                                                   gListType::ProjectPrincipal,
                                                                                   gListType::ExtContract:
                                                                                     BEGIN
                                                                                       TenderElemRec.INIT;
                                                                                       TenderElemRec.Principal := gPrincipal;
                                                                                       TenderElemRec."Project No." := gProjectNo;
                                                                                       TenderElemRec."Contract No." := gContractNo;
                                                                                       TenderElemRec."No." := gfTenderElem;
                                                                                       TenderElemRec.Description := gfDescription;
                                                                                       EVALUATE(TenderElemRec.Quantity, gfQuantity);
                                                                                       EVALUATE(TenderElemRec."Settlement Type", gfSettlement);
                                                                                       TenderElemRec.VALIDATE("Unit of Measure", gfUnit);
                                                                                       EVALUATE(TenderElemRec."Unit Price (LCY)", gfUnitPrice);
                                                                                       TenderElemRec.VALIDATE("Unit Price (LCY)");
                                                                                       TenderElemRec.VALIDATE(Element, gfElement);
                                                                                       RecRef.GETTABLE(TenderElemRec);
                                                                                       XMLportStatusDialogMgt.ShowImportStatus(RecRef);
                                                                                       IF NOT TenderElemRec.FIND THEN BEGIN //if already exists, don't insert
                                                                                         TenderElemRec.INSERT(TRUE);
                                                                                       END;
                                                                                     END;
                                                                                   gListType::ProvWork:
                                                                                     BEGIN
                                                                                       //Determine the next line number
                                                                                       ProvWorkSpecRec.SETCURRENTKEY("Provisional Work No.","Specification Type");
                                                                                       ProvWorkSpecRec.SETRANGE("Provisional Work No.", gProvWorkNo);
                                                                                       ProvWorkSpecRec.SETRANGE("Specification Type", ProvWorkSpecRec."Specification Type"::Plan);
                                                                                       IF NOT ProvWorkSpecRec.FINDLAST THEN
                                                                                         NextLineNo := 10000
                                                                                       ELSE
                                                                                         NextLineNo := ProvWorkSpecRec."Line No." + 10000;

                                                                                       ProvWorkSpecRec.INIT;
                                                                                       ProvWorkSpecRec."Specification Type" := ProvWorkSpecRec."Specification Type"::Plan;
                                                                                       ProvWorkSpecRec."Provisional Work No." := gProvWorkNo;
                                                                                       ProvWorkSpecRec.Level := 1;
                                                                                       ProvWorkSpecRec."Line No." := NextLineNo;
                                                                                       ProvWorkSpecRec.VALIDATE("Unit of Measure Code", gfUnit);
                                                                                       EVALUATE(ProvWorkSpecRec.Quantity, gfQuantity);
                                                                                       ProvWorkSpecRec.Description := gfDescription;
                                                                                       ProvWorkSpecRec."No." := gfTenderElem;
                                                                                       ProvWorkSpecRec.VALIDATE(Text, COPYSTR(gfText, 1,250)); //truncate a 250; validate to fill field "Text Block"
                                                                                       EVALUATE(ProvWorkSpecRec.Date, gfDate);

                                                                                       ProvWorkSpecRec2.INIT;
                                                                                       ProvWorkSpecRec2.SETRANGE("Provisional Work No.", gProvWorkNo);
                                                                                       ProvWorkSpecRec2.SETRANGE("Specification Type", ProvWorkSpecRec."Specification Type"::Plan);
                                                                                       ProvWorkSpecRec2.SETRANGE("No.", gfTenderElem);
                                                                                       RecRef.GETTABLE(ProvWorkSpecRec2);
                                                                                       XMLportStatusDialogMgt.ShowImportStatus(RecRef);
                                                                                       IF NOT ProvWorkSpecRec2.FINDFIRST THEN BEGIN //if already exists, don't insert
                                                                                         ProvWorkSpecRec.INSERT(TRUE);

                                                                                         Text2 := gfText;
                                                                                         Pos := 1;
                                                                                         LineNo := 0;
                                                                                         WHILE COPYSTR(Text2, Pos, 100) <> '' DO BEGIN
                                                                                           LineNo := LineNo + 10000;
                                                                                           ProvisionalWorkCommentLine.INIT;
                                                                                           ProvisionalWorkCommentLine."Table Name" := ProvisionalWorkCommentLine."Table Name"::"Provisional Work Spec";
                                                                                           ProvisionalWorkCommentLine."Provisional Work No." := ProvWorkSpecRec."Provisional Work No.";
                                                                                           ProvisionalWorkCommentLine."Specification Type" := ProvWorkSpecRec."Specification Type";
                                                                                           ProvisionalWorkCommentLine."Specification Line No." := ProvWorkSpecRec."Line No.";
                                                                                           ProvisionalWorkCommentLine."Line No." := LineNo;
                                                                                           ProvisionalWorkCommentLine.Comment := COPYSTR(Text2, Pos, 100);
                                                                                           ProvisionalWorkCommentLine.INSERT(TRUE);
                                                                                           Pos := Pos + 10;
                                                                                         END;
                                                                                       END;

                                                                                     END;
                                                                                 END;

                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{CA9086B4-CBB0-4E6A-BE76-F3363410F290}];2 ;gfTenderElem        ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{E8977F8D-DC01-43C6-B521-B207ED0242C7}];2 ;gfDescription       ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{FF53EA42-A00D-4F17-B07C-72F730758C67}];2 ;gfQuantity          ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{B5B6E835-FA4D-433D-886D-6FC729AF4B76}];2 ;gfUnit              ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{30FD7F49-93EE-43F4-8799-D5829711A3EE}];2 ;gfUnitPrice         ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{811856D7-7400-4357-A0D3-04DBE619DF51}];2 ;gfElement           ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{4A9D4886-9334-4447-8BF2-404CC44F6D47}];2 ;gfSettlement        ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{2B43ECB1-0F94-4DB5-84E9-2845190A2A1A}];2 ;gfText              ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{41AF1FB7-6280-4A05-832C-1E01C9F5F8CE}];2 ;gfDate              ;Element ;Text    ;
                                                  MinOccurs=Zero }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      ProjPrincipalRec@1100525518 : Record 11012005;
      TenderElemRec@1100525517 : Record 11012470;
      ProvisionalWork@1100525000 : Record 11012774;
      ProvWorkSpecRec@1100525516 : Record 11012775;
      ProvWorkSpecRec2@1100525515 : Record 11012775;
      ExtContractRec@1100525514 : Record 11012004;
      XMLportStatusDialogMgt@1210190000 : Codeunit 11130006;
      gListType@1100525513 : 'ProjectPrincipal,ExtContract,ProvWork';
      gProjectNo@1100525512 : Text[50];
      gPrincipal@1100525511 : Text[50];
      gContractNo@1100525510 : Text[50];
      gProvWorkNo@1100525509 : Text[50];
      Counter@1100525500 : Integer;

    PROCEDURE InitXMLport@1100485000(IListType@1100485002 : Option;IProjProvWorkNo@1100485000 : Code[20];IPrincipal@1100485001 : Code[20];IContract@1100485003 : Code[10]);
    BEGIN
      gListType := IListType;
      CASE gListType OF
        gListType::ProjectPrincipal,gListType::ExtContract:
          BEGIN
            gProjectNo := IProjProvWorkNo;
            gPrincipal := IPrincipal;
            gContractNo := IContract;
          END;
        gListType::ProvWork:
          BEGIN
            gProvWorkNo := IProjProvWorkNo;
          END;
      END;
    END;

    BEGIN
    {
      CC: Dataport 11012014

      This XMLport is called from three different locations:
      - Tender Elements by Project Principal (data must be imported in Tender Elem.by Project.Principal)
      - Tender Elements by Extension Contract (data must be imported in same table as above)
      - Provisional Work Specifications (data must be imported in Provisional Work Spec.)
    }
    END.
  }
}

