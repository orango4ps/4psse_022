OBJECT Codeunit 8619 Config. Pckg. Compression Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      FileNotExistErr@1002 : TextConst 'ENU=The file %1 does not exist.;NOR=Filen %1 eksisterer ikke.;SVE=Filen %1 finns inte.';
      FileAlreadyExistErr@1001 : TextConst 'ENU=The file name %1 already exists.;NOR=Filnavnet %1 finnes allerede.;SVE=Filnamnet %1 finns redan.';
      NotValidFileNameErr@1000 : TextConst 'ENU=%1 is not a valid file name.;NOR=%1 er ikke et gyldig filnavn.;SVE=%1 „r inte ett giltigt filnamn.';

    [Internal]
    PROCEDURE ServersideCompress@25(SourceFilePath@1002 : Text;DestinationFilePath@1003 : Text);
    BEGIN
      ProcessGZip(SourceFilePath,DestinationFilePath,TRUE);
    END;

    [Internal]
    PROCEDURE ServersideDecompress@45(SourceFilePath@1001 : Text;DestinationFilePath@1000 : Text) : Boolean;
    VAR
      FileMgt@1002 : Codeunit 419;
    BEGIN
      IF NOT FileMgt.IsGZip(SourceFilePath) THEN
        EXIT(FALSE);
      ProcessGZip(SourceFilePath,DestinationFilePath,FALSE);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE ProcessGZip@6(SourceFilePath@1007 : Text;DestinationFilePath@1006 : Text;ToCompress@1008 : Boolean);
    VAR
      FileMgt@1009 : Codeunit 419;
      CompressionMode@1000 : DotNet "'System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Compression.CompressionMode";
      CompressedStream@1005 : DotNet "'System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Compression.GZipStream";
      SourceFile@1003 : File;
      DestinationFile@1004 : File;
      OutStream@1002 : OutStream;
      InStream@1001 : InStream;
    BEGIN
      IF NOT FILE.EXISTS(SourceFilePath) THEN
        ERROR(FileNotExistErr,SourceFilePath);

      IF NOT FileMgt.IsValidFileName(FileMgt.GetFileName(DestinationFilePath)) THEN
        ERROR(NotValidFileNameErr,DestinationFilePath);

      IF FILE.EXISTS(DestinationFilePath) THEN
        ERROR(FileAlreadyExistErr,DestinationFilePath);

      OpenFileAndInStream(InStream,SourceFile,SourceFilePath);
      CreateFileAndOutStream(OutStream,DestinationFile,DestinationFilePath);

      IF ToCompress THEN BEGIN
        CompressedStream := CompressedStream.GZipStream(OutStream,CompressionMode.Compress);
        COPYSTREAM(CompressedStream,InStream);
      END ELSE BEGIN
        CompressedStream := CompressedStream.GZipStream(InStream,CompressionMode.Decompress);
        COPYSTREAM(OutStream,CompressedStream);
      END;

      CompressedStream.Close;
    END;

    LOCAL PROCEDURE OpenFileAndInStream@29(VAR InStream@1000 : InStream;VAR File@1002 : File;FilePath@1001 : Text);
    BEGIN
      File.WRITEMODE(FALSE);
      File.TEXTMODE(FALSE);
      File.OPEN(FilePath);
      File.CREATEINSTREAM(InStream);
    END;

    LOCAL PROCEDURE CreateFileAndOutStream@30(VAR OutStream@1001 : OutStream;VAR File@1003 : File;FilePath@1000 : Text);
    BEGIN
      File.WRITEMODE(FALSE);
      File.TEXTMODE(FALSE);
      File.CREATE(FilePath);
      File.CREATEOUTSTREAM(OutStream);
    END;

    BEGIN
    END.
  }
}

