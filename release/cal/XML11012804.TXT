OBJECT XMLport 11012804 Import Object Meter Reading
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Import Object Meter Reading;
    Direction=Import;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    ImportDateTime := ROUNDDATETIME(CURRENTDATETIME , 1000, '=');
                  END;

    OnPostXMLport=BEGIN
                    MESSAGE(Txt001, SubmittedCount, SkipCount, FORMAT(ImportDateTime));

                    SkipCount := 0;
                    SubmittedCount := 0;
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{D2EA5AA9-F6D7-49FB-B11E-0AF45803AB3D}];  ;ObjectMeterReading  ;Element ;Text     }

    { [{4CC2775A-2682-4877-9CD7-B1AF081A7602}];1 ;ItemRecord          ;Element ;Table   ;
                                                  SourceTable=Table11071971;
                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 ServiceObject@1100528501 : Record 11071691;
                                                                               BEGIN
                                                                                 IF ServiceObject.GET("Meter Reading"."Object No.") THEN
                                                                                   "Meter Reading".VALIDATE("Consumption Component Code")
                                                                                 ELSE BEGIN
                                                                                   SkipCount := SkipCount + 1;
                                                                                   currXMLport.SKIP;
                                                                                 END;

                                                                                 IF "Meter Reading"."Meter Reading" = 0 THEN BEGIN
                                                                                   SkipCount := SkipCount + 1;
                                                                                   currXMLport.SKIP;
                                                                                 END;

                                                                                 "Meter Reading".Imported := TRUE;
                                                                                 "Meter Reading"."Import Date and Time" := ImportDateTime;
                                                                                 "Meter Reading"."Imported By" := USERID;

                                                                                 SubmittedCount := SubmittedCount + 1;
                                                                               END;
                                                                                }

    { [{D39325A1-8310-4E01-B2C1-5D47A442C5D3}];2 ;ServiceObjectNo     ;Element ;Field   ;
                                                  DataType=Code;
                                                  FieldValidate=No;
                                                  SourceField=Meter Reading::Object No.;
                                                  MinOccurs=Zero }

    { [{291DA718-0AF6-45E3-AA42-F5C7BB067E62}];2 ;ConsumptionComponent;Element ;Field   ;
                                                  DataType=Code;
                                                  FieldValidate=No;
                                                  SourceField=Meter Reading::Consumption Component Code;
                                                  MinOccurs=Zero }

    { [{E9047094-D471-45CB-91A7-506F10FD605A}];2 ;ReadingDate         ;Element ;Field   ;
                                                  DataType=Date;
                                                  SourceField=Meter Reading::Reading Date;
                                                  MinOccurs=Zero }

    { [{5660CBE9-D329-40A7-9915-6BD186DB8D60}];2 ;MeterReading        ;Element ;Field   ;
                                                  DataType=Decimal;
                                                  SourceField=Meter Reading::Meter Reading;
                                                  MinOccurs=Zero }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      ImportDateTime@1100528800 : DateTime;
      Txt001@1100528801 : TextConst 'ENU=Imported Meter Readings: %1. Non-imported Meter Readings: %2. Imported on %3.';
      SkipCount@1100529500 : Integer;
      SubmittedCount@1100529503 : Integer;

    BEGIN
    END.
  }
}

