OBJECT Page 2821 Native - PDFs
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[@@@={Locked};
               ENU=nativeInvoicingPDFs;
               NOR=nativeInvoicingPDFs;
               SVE=nativeInvoicingPDFs];
    SourceTable=Table5509;
    PageType=List;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 BINDSUBSCRIPTION(NativeAPILanguageHandler);
               END;

    OnFindRecord=VAR
                   PDFDocumentManagement@1003 : Codeunit 5467;
                   DocumentId@1005 : GUID;
                   DocumentIdFilter@1001 : Text;
                   FilterView@1000 : Text;
                 BEGIN
                   IF NOT PdfGenerated THEN BEGIN
                     FilterView := GETVIEW;
                     DocumentIdFilter := GETFILTER("Document Id");
                     IF DocumentIdFilter = '' THEN
                       DocumentIdFilter := GETFILTER(Id);
                     SETVIEW(FilterView);
                     DocumentId := GetDocumentId(DocumentIdFilter);
                     IF ISNULLGUID(DocumentId) THEN
                       EXIT(FALSE);
                     PdfGenerated := PDFDocumentManagement.GeneratePdf(DocumentId,Rec);
                   END;
                   EXIT(TRUE);
                 END;

    ODataKeyFields=Document Id;
  }
  CONTROLS
  {
    { 18  ;0   ;Container ;
                ContainerType=ContentArea }

    { 17  ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 1   ;2   ;Field     ;
                Name=documentId;
                CaptionML=[@@@={Locked};
                           ENU=documentId;
                           NOR=documentId;
                           SVE=documentId];
                ApplicationArea=#All;
                SourceExpr="Document Id" }

    { 7   ;2   ;Field     ;
                Name=fileName;
                CaptionML=[@@@={Locked};
                           ENU=fileName;
                           NOR=fileName;
                           SVE=fileName];
                ApplicationArea=#All;
                SourceExpr="File Name" }

    { 4   ;2   ;Field     ;
                Name=content;
                CaptionML=[@@@={Locked};
                           ENU=content;
                           NOR=content;
                           SVE=content];
                ApplicationArea=#All;
                SourceExpr=Content }

  }
  CODE
  {
    VAR
      DocumentIDNotSpecifiedForAttachmentsErr@1010 : TextConst 'ENU=You must specify a document ID to get the PDF.;NOR=Du m† angi en dokument-ID for † hente PDF-filen.;SVE=Du m†ste ange ett dokument-ID f”r att kunna h„mta PDF-filen.';
      DocumentDoesNotExistErr@1009 : TextConst 'ENU=No document with the specified ID exists.;NOR=Ingen dokumenter med angitt ID finnes.;SVE=Det finns inget dokument med angivet ID.';
      NativeAPILanguageHandler@1000 : Codeunit 2850;
      PdfGenerated@1002 : Boolean;

    LOCAL PROCEDURE GetDocumentId@5(DocumentIdFilter@1001 : Text) : GUID;
    VAR
      SalesHeader@1003 : Record 36;
      SalesInvoiceHeader@1004 : Record 112;
      DataTypeManagement@1006 : Codeunit 701;
      DocumentRecordRef@1000 : RecordRef;
      DocumentIdFieldRef@1005 : FieldRef;
      DocumentId@1002 : GUID;
    BEGIN
      IF DocumentIdFilter = '' THEN
        ERROR(DocumentIDNotSpecifiedForAttachmentsErr);

      SalesHeader.SETFILTER(Id,DocumentIdFilter);
      IF SalesHeader.FINDFIRST THEN
        DocumentRecordRef.GETTABLE(SalesHeader)
      ELSE BEGIN
        SalesInvoiceHeader.SETFILTER(Id,DocumentIdFilter);
        IF SalesInvoiceHeader.FINDFIRST THEN
          DocumentRecordRef.GETTABLE(SalesInvoiceHeader)
        ELSE
          ERROR(DocumentDoesNotExistErr);
      END;

      DataTypeManagement.FindFieldByName(DocumentRecordRef,DocumentIdFieldRef,SalesHeader.FIELDNAME(Id));
      EVALUATE(DocumentId,FORMAT(DocumentIdFieldRef.VALUE));

      EXIT(DocumentId);
    END;

    BEGIN
    END.
  }
}

