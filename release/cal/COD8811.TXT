OBJECT Codeunit 8811 Customer Statement via Queue
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04;
  }
  PROPERTIES
  {
    TableNo=472;
    OnRun=VAR
            TempErrorMessage@1004 : TEMPORARY Record 700;
            ErrorMessageManagement@1003 : Codeunit 28;
            ErrorMessageHandler@1001 : Codeunit 29;
            CustomerLayoutStatement@1000 : Codeunit 8810;
            XmlContent@1002 : Text;
          BEGIN
            ErrorMessageManagement.Activate(ErrorMessageHandler);
            ErrorMessageManagement.PushContext(RECORDID,0,'');

            XmlContent := GetXmlContent;
            IF XmlContent = '' THEN
              ErrorMessageManagement.LogErrorMessage(0,RequestParametersHasNotBeenSetErr,Rec,FIELDNO(XML),'')
            ELSE
              CustomerLayoutStatement.RunReportWithParameters(XmlContent);

            ErrorMessageHandler.AppendTo(TempErrorMessage);
            LogErrors(TempErrorMessage,Rec);
          END;

  }
  CODE
  {
    VAR
      RequestParametersHasNotBeenSetErr@1000 : TextConst 'ENU=Request parameters for the Standard Statement report have not been set up.;NOR=Foresp›rselsparametre for standard kontoutdragsrapport er ikke konfigurert.';

    LOCAL PROCEDURE LogErrors@2(VAR TempErrorMessage@1000 : TEMPORARY Record 700;JobQueueEntry@1001 : Record 472);
    VAR
      JobQueueLogEntry@1002 : Record 474;
    BEGIN
      IF  TempErrorMessage.FINDSET THEN
        REPEAT
          JobQueueLogEntry."Entry No." := 0;
          JobQueueLogEntry.ID := JobQueueEntry.ID;
          JobQueueLogEntry."User ID" := USERID;
          JobQueueLogEntry."Start Date/Time" := CURRENTDATETIME;
          JobQueueLogEntry."End Date/Time" := CURRENTDATETIME;
          JobQueueLogEntry."Object Type to Run" := JobQueueEntry."Object Type to Run";
          JobQueueLogEntry."Object ID to Run" := JobQueueEntry."Object ID to Run";
          JobQueueLogEntry.Status := JobQueueLogEntry.Status::Error;
          JobQueueLogEntry."Error Message" := TempErrorMessage.Description;
          JobQueueLogEntry.INSERT(TRUE);
        UNTIL TempErrorMessage.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

