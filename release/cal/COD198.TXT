OBJECT Codeunit 198 Acc. Sched. KPI Event Handler
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      TempAccSchedKPIWebSrvLine@1001 : TEMPORARY Record 136;
      AccSchedKPIWebSrvSetup@1014 : Record 135;
      PrevAccSchedName@1002 : Code[10];
      PrevGlBudgetName@1003 : Code[10];

    [EventSubscriber(Table,135,OnAfterModifyEvent)]
    LOCAL PROCEDURE OnModifyAccSchedKpiSetup@1(VAR Rec@1000 : Record 135;VAR xRec@1001 : Record 135;RunTrigger@1002 : Boolean);
    BEGIN
      IF Rec.ISTEMPORARY THEN
        EXIT;
      PrevAccSchedName := '';
      PrevGlBudgetName := '';
    END;

    [EventSubscriber(Table,136,OnAfterInsertEvent)]
    LOCAL PROCEDURE OnInsertAccSchedKpiLine@4(VAR Rec@1000 : Record 136;RunTrigger@1001 : Boolean);
    BEGIN
      IF Rec.ISTEMPORARY THEN
        EXIT;
      ResetAccSchedKPIWevSrvSetup;
    END;

    [EventSubscriber(Table,136,OnAfterModifyEvent)]
    LOCAL PROCEDURE OnModifyAccSchedKpiLine@3(VAR Rec@1000 : Record 136;VAR xRec@1001 : Record 136;RunTrigger@1002 : Boolean);
    BEGIN
      IF Rec.ISTEMPORARY THEN
        EXIT;
      ResetAccSchedKPIWevSrvSetup;
    END;

    [EventSubscriber(Table,136,OnAfterDeleteEvent)]
    LOCAL PROCEDURE OnDeleteAccSchedKpiLine@5(VAR Rec@1000 : Record 136;RunTrigger@1001 : Boolean);
    BEGIN
      IF Rec.ISTEMPORARY THEN
        EXIT;
      ResetAccSchedKPIWevSrvSetup;
      IF TempAccSchedKPIWebSrvLine.GET(Rec."Acc. Schedule Name") THEN
        TempAccSchedKPIWebSrvLine.DELETE;
    END;

    [EventSubscriber(Table,85,OnAfterInsertEvent,"",Skip,Skip)]
    LOCAL PROCEDURE OnInsertAccSchedLine@7(VAR Rec@1000 : Record 85;RunTrigger@1001 : Boolean);
    BEGIN
      IF Rec.ISTEMPORARY THEN
        EXIT;
      ResetIfAccSchedChanged(Rec."Schedule Name");
    END;

    [EventSubscriber(Table,85,OnAfterModifyEvent,"",Skip,Skip)]
    LOCAL PROCEDURE OnModifyAccSchedLine@8(VAR Rec@1000 : Record 85;VAR xRec@1001 : Record 85;RunTrigger@1002 : Boolean);
    BEGIN
      IF Rec.ISTEMPORARY THEN
        EXIT;
      ResetIfAccSchedChanged(Rec."Schedule Name");
    END;

    [EventSubscriber(Table,85,OnAfterDeleteEvent,"",Skip,Skip)]
    LOCAL PROCEDURE OnDeleteAccSchedLine@10(VAR Rec@1000 : Record 85;RunTrigger@1001 : Boolean);
    BEGIN
      IF Rec.ISTEMPORARY THEN
        EXIT;
      ResetIfAccSchedChanged(Rec."Schedule Name");
    END;

    [EventSubscriber(Table,96,OnAfterInsertEvent,"",Skip,Skip)]
    LOCAL PROCEDURE OnInsertGlBudgetEntry@2(VAR Rec@1000 : Record 96;RunTrigger@1001 : Boolean);
    BEGIN
      IF Rec.ISTEMPORARY THEN
        EXIT;
      ResetIfGlBudgetChanged(Rec."Budget Name");
    END;

    [EventSubscriber(Table,96,OnAfterModifyEvent,"",Skip,Skip)]
    LOCAL PROCEDURE OnModifyGlBudgetEntry@6(VAR Rec@1000 : Record 96;VAR xRec@1001 : Record 96;RunTrigger@1002 : Boolean);
    BEGIN
      IF Rec.ISTEMPORARY THEN
        EXIT;
      ResetIfGlBudgetChanged(Rec."Budget Name");
    END;

    [EventSubscriber(Table,96,OnAfterDeleteEvent,"",Skip,Skip)]
    LOCAL PROCEDURE OnDeleteGlBudgetEntry@9(VAR Rec@1000 : Record 96;RunTrigger@1001 : Boolean);
    BEGIN
      IF Rec.ISTEMPORARY THEN
        EXIT;
      ResetIfGlBudgetChanged(Rec."Budget Name");
    END;

    LOCAL PROCEDURE ResetAccSchedKPIWevSrvSetup@12();
    BEGIN
      IF NOT AccSchedKPIWebSrvSetup.GET THEN
        EXIT;
      IF AccSchedKPIWebSrvSetup."Last G/L Entry Included" = 0 THEN
        EXIT;
      AccSchedKPIWebSrvSetup.LOCKTABLE;
      AccSchedKPIWebSrvSetup.GET;
      AccSchedKPIWebSrvSetup."Last G/L Entry Included" := 0;
      AccSchedKPIWebSrvSetup."Data Last Updated" := 0DT;
      AccSchedKPIWebSrvSetup.MODIFY;
    END;

    LOCAL PROCEDURE ResetIfAccSchedChanged@16(AccSchedName@1000 : Code[10]);
    VAR
      AccSchedKPIWebSrvLine@1001 : Record 136;
    BEGIN
      IF AccSchedName = PrevAccSchedName THEN
        EXIT;
      PrevAccSchedName := AccSchedName;
      IF NOT AccSchedKPIWebSrvSetup.WRITEPERMISSION THEN
        EXIT;
      IF TempAccSchedKPIWebSrvLine.GET(AccSchedName) THEN BEGIN
        ResetAccSchedKPIWevSrvSetup;
        EXIT;
      END;

      IF AccSchedKPIWebSrvLine.GET(AccSchedName) THEN BEGIN
        TempAccSchedKPIWebSrvLine := AccSchedKPIWebSrvLine;
        TempAccSchedKPIWebSrvLine.INSERT;
        ResetAccSchedKPIWevSrvSetup;
      END;
    END;

    LOCAL PROCEDURE ResetIfGlBudgetChanged@13(GlBudgetName@1000 : Code[10]);
    BEGIN
      IF GlBudgetName = PrevGlBudgetName THEN
        EXIT;
      PrevGlBudgetName := GlBudgetName;
      IF NOT AccSchedKPIWebSrvSetup.WRITEPERMISSION THEN
        EXIT;
      IF NOT AccSchedKPIWebSrvSetup.GET THEN
        EXIT;
      IF AccSchedKPIWebSrvSetup."G/L Budget Name" = '' THEN
        EXIT;
      IF AccSchedKPIWebSrvSetup."G/L Budget Name" = GlBudgetName THEN
        ResetAccSchedKPIWevSrvSetup;
    END;

    BEGIN
    END.
  }
}

