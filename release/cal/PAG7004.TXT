OBJECT Page 7004 Sales Line Discounts
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Line Discounts;
               NOR=Salgslinjerabatter;
               SVE=F”rs.radrabatter];
    SaveValues=Yes;
    SourceTable=Table7004;
    DataCaptionExpr=GetCaption;
    DelayedInsert=Yes;
    SourceTableView=SORTING(Type,Code,Sales Type,Sales Code,Reverse Starting Date,Currency Code,Variant Code,Unit of Measure Code,Minimum Quantity);
    PageType=List;
    ShowFilter=No;
    OnInit=BEGIN
             CodeFilterCtrlEnable := TRUE;
             SalesCodeFilterCtrlEnable := TRUE;
             SalesCodeEditable := TRUE;
           END;

    OnOpenPage=BEGIN
                 IsOnMobile := ClientTypeManagement.GetCurrentClientType = CLIENTTYPE::Phone;
                 GetRecFilters;
                 SetRecFilters;
               END;

    OnInsertRecord=VAR
                     CentralDataMgt@1100528400 : Codeunit 11012010;
                   BEGIN
                     //**4PS.sn
                     IF NOT CentralDataMgt.InsertingSalesLineDiscountIsAllowed THEN
                       ERROR(Text11012000);
                     //**4PS.en
                   END;

    OnDeleteRecord=VAR
                     CentralDataMgt@1100528400 : Codeunit 11012010;
                   BEGIN
                     //**4PS.sn
                     IF NOT CentralDataMgt.ChangingSalesLineDiscountIsAllowed(Rec) THEN
                       ERROR(Text11012000);
                     //**4PS.en
                   END;

    OnAfterGetCurrRecord=BEGIN
                           //SetEditableFields; //**4PS.o
                           ActivateFieldsForCentralManagement; //**4PS.n
                         END;

    ActionList=ACTIONS
    {
      { 11      ;    ;ActionContainer;
                      Name=Filtering;
                      CaptionML=SVE=Filtrering;
                      ActionContainerType=ActionItems }
      { 7       ;1   ;Action    ;
                      Name=SalesLineDiscountsFilter;
                      CaptionML=[ENU=Filter;
                                 NOR=Filtrer;
                                 SVE=Filter];
                      ToolTipML=[ENU=Apply the filter.;
                                 NOR=Bruk filteret.;
                                 SVE=Anv„nd filtret.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsOnMobile;
                      Image=Filter;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FilterLines;
                               END;
                                }
      { 9       ;1   ;Action    ;
                      Name=ClearFilter;
                      CaptionML=[ENU=Clear Filter;
                                 NOR=Fjern filter;
                                 SVE=Rensa filter];
                      ToolTipML=[ENU=Clear filter.;
                                 NOR=Fjern filter.;
                                 SVE=Rensa filter.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsOnMobile;
                      Image=ClearFilter;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 RESET;
                                 UpdateBasicRecFilters;
                                 SetEditableFields;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 20  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=Allm„nt];
                Visible=NOT IsOnMobile }

    { 28  ;2   ;Field     ;
                CaptionML=[ENU=Sales Type Filter;
                           NOR=Salgstypefilter;
                           SVE=F”rs.typfilter];
                ToolTipML=[ENU=Specifies a filter for which sales line discounts to display.;
                           NOR=Angir et filter som salgslinjerabatter skal vises for.;
                           SVE=Anger ett filter som anv„nds f”r att visa f”rs„ljningsradrabatter.];
                OptionCaptionML=[ENU=Customer,Customer Discount Group,All Customers,Campaign,None;
                                 NOR=Kunde,Kunderabattgruppe,Alle kunder,Kampanje,Ingen;
                                 SVE=Kund,Kundrabattgrupp,Alla kunder,Kampanj,Ingen];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesTypeFilter;
                OnValidate=BEGIN
                             SalesTypeFilterOnAfterValidate;
                           END;
                            }

    { 26  ;2   ;Field     ;
                Name=SalesCodeFilterCtrl;
                CaptionML=[ENU=Sales Code Filter;
                           NOR=Salgskodefilter;
                           SVE=F”rs.kodfilter];
                ToolTipML=[ENU=Specifies a filter for which sales line discounts to display.;
                           NOR=Angir et filter som salgslinjerabatter skal vises for.;
                           SVE=Anger ett filter som anv„nds f”r att visa f”rs„ljningsradrabatter.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesCodeFilter;
                Enabled=SalesCodeFilterCtrlEnable;
                OnValidate=BEGIN
                             SalesCodeFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           CustList@1005 : Page 22;
                           CustDiscGrList@1004 : Page 512;
                           CampaignList@1003 : Page 11072059;
                         BEGIN
                           IF SalesTypeFilter = SalesTypeFilter::"All Customers" THEN
                             EXIT;

                           CASE SalesTypeFilter OF
                             SalesTypeFilter::Customer:
                               BEGIN
                                 CustList.LOOKUPMODE := TRUE;
                                 IF CustList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := CustList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                             SalesTypeFilter::"Customer Discount Group":
                               BEGIN
                                 CustDiscGrList.LOOKUPMODE := TRUE;
                                 IF CustDiscGrList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := CustDiscGrList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                             SalesTypeFilter::Campaign:
                               BEGIN
                                 CampaignList.LOOKUPMODE := TRUE;
                                 IF CampaignList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := CampaignList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                           END;

                           EXIT(TRUE);
                         END;
                          }

    { 34  ;2   ;Field     ;
                CaptionML=[ENU=Starting Date Filter;
                           NOR=Startdatofilter;
                           SVE=Startdatumfilter];
                ToolTipML=[ENU=Specifies a filter for which sales line discounts to display.;
                           NOR=Angir et filter som salgslinjerabatter skal vises for.;
                           SVE=Anger ett filter som anv„nds f”r att visa f”rs„ljningsradrabatter.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=StartingDateFilter;
                OnValidate=VAR
                             TextManagement@1000 : Codeunit 41;
                           BEGIN
                             TextManagement.MakeDateFilter(StartingDateFilter);
                             StartingDateFilterOnAfterValid;
                           END;
                            }

    { 10  ;2   ;Field     ;
                CaptionML=[ENU=Type Filter;
                           NOR=Typefilter;
                           SVE=Filtertyp];
                ToolTipML=[ENU=Specifies a filter for which sales line discounts to display.;
                           NOR=Angir et filter som salgslinjerabatter skal vises for.;
                           SVE=Anger ett filter som anv„nds f”r att visa f”rs„ljningsradrabatter.];
                OptionCaptionML=[ENU=Item,Item Discount Group,None;
                                 NOR=Vare,Varerabattgruppe,Ingen;
                                 SVE=Artikel,Artikelrabattgrupp,Ingen];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ItemTypeFilter;
                OnValidate=BEGIN
                             ItemTypeFilterOnAfterValidate;
                           END;
                            }

    { 40  ;2   ;Field     ;
                Name=CodeFilterCtrl;
                CaptionML=[ENU=Code Filter;
                           NOR=Kodefilter;
                           SVE=Kodfilter];
                ToolTipML=[ENU=Specifies a filter for which sales line discounts to display.;
                           NOR=Angir et filter som salgslinjerabatter skal vises for.;
                           SVE=Anger ett filter som anv„nds f”r att visa f”rs„ljningsradrabatter.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CodeFilter;
                Enabled=CodeFilterCtrlEnable;
                OnValidate=BEGIN
                             CodeFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           ItemList@1002 : Page 31;
                           ItemDiscGrList@1003 : Page 513;
                         BEGIN
                           CASE Type OF
                             Type::Item:
                               BEGIN
                                 ItemList.LOOKUPMODE := TRUE;
                                 IF ItemList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := ItemList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                             Type::"Item Disc. Group":
                               BEGIN
                                 ItemDiscGrList.LOOKUPMODE := TRUE;
                                 IF ItemDiscGrList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := ItemDiscGrList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                           END;

                           EXIT(TRUE);
                         END;
                          }

    { 16  ;2   ;Field     ;
                Name=SalesCodeFilterCtrl2;
                CaptionML=[ENU=Currency Code Filter;
                           NOR=Valutakodefilter;
                           SVE=Valutakodfilter];
                ToolTipML=[ENU=Specifies a filter for which sales line discounts to display.;
                           NOR=Angir et filter som salgslinjerabatter skal vises for.;
                           SVE=Anger ett filter som anv„nds f”r att visa f”rs„ljningsradrabatter.];
                ApplicationArea=#Suite;
                SourceExpr=CurrencyCodeFilter;
                OnValidate=BEGIN
                             CurrencyCodeFilterOnAfterValid;
                           END;

                OnLookup=VAR
                           CurrencyList@1000 : Page 5;
                         BEGIN
                           CurrencyList.LOOKUPMODE := TRUE;
                           IF CurrencyList.RUNMODAL = ACTION::LookupOK THEN
                             Text := CurrencyList.GetSelectionFilter
                           ELSE
                             EXIT(FALSE);

                           EXIT(TRUE);
                         END;
                          }

    { 3   ;1   ;Group     ;
                CaptionML=[ENU=Filters;
                           NOR=Filtre;
                           SVE=Filter];
                Visible=IsOnMobile;
                GroupType=Group }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a filter for which sales line discounts to display.;
                           NOR=Angir et filter som salgslinjerabatter skal vises for.;
                           SVE=Anger ett filter som anv„nds f”r att visa f”rs„ljningsradrabatter.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetFilterDescription;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               FilterLines;
                               CurrPage.UPDATE(FALSE);
                             END;
                              }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 32  ;2   ;Field     ;
                Name=SalesType;
                ToolTipML=[ENU=Specifies the sales type of the sales line discount. The sales type defines whether the sales price is for an individual customer, customer discount group, all customers, or for a campaign.;
                           NOR=Angir salgstypen for salgslinjerabatten. Salgstypen definerer om salgsprisen gjelder for en individuell kunde, for en kunderabattgruppe, for alle kunder eller for en kampanje.;
                           SVE=Anger f”rs„ljningstypen f”r f”rs„ljningsradrabatten. F”rs„ljningstypen avg”r om f”rs„ljningspriset avser en enskild kund, en kundrabattgrupp, alla kunder eller en kampanj.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sales Type";
                Editable=SalesTypeEditable;
                OnValidate=BEGIN
                             SetEditableFields;
                           END;
                            }

    { 18  ;2   ;Field     ;
                Name=SalesCode;
                ToolTipML=[ENU=Specifies one of the following values, depending on the value in the Sales Type field.;
                           NOR=Angir ‚n av de f›lgene verdiene, avhengig av verdien i feltet Salgstype:;
                           SVE=Anger n†got av f”ljande v„rden beroende p† v„rdet i f„ltet F”rs.typ.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sales Code";
                Editable=SalesCodeEditable }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of item that the sales discount line is valid for. That is, either an item or an item discount group.;
                           NOR=Angir typen vare som salgsrabattlinjen gjelder for. Det vil si enten en vare eller en varerabattgruppe.;
                           SVE=Anger den typ av artikel som f”rs„ljningsrabattraden g„ller f”r. Det vill s„ga antingen en artikel eller en artikelrabattgrupp.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Type;
                Editable=TypeEditable }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies one of two values, depending on the value in the Type field.;
                           NOR=Angir ‚n av to verdier, avhengig av verdien i feltet Salgstype.;
                           SVE=Anger ett av tv† v„rden beroende p† v„rdet i f„ltet Typ.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Code;
                Editable=CodeEditable }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the variant of the item on the line.;
                           NOR=Angir varianten for varen p† linjen.;
                           SVE=Anger varianten av artikeln p† raden.];
                ApplicationArea=#Planning;
                SourceExpr="Variant Code";
                Visible=FALSE;
                Editable=VariantCodeEditable }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency code of the sales line discount price.;
                           NOR=Angir valutakoden for salgslinjerabattprisen.;
                           SVE=Anger valutakoden f”r f”rs„ljningsradrabatten.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Visible=FALSE;
                Editable=CurrencyCodeEditable }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                           NOR=Angir hvordan hver enhet av varen eller ressursen m†les, for eksempel i stykker eller timer. Verdien i feltet Lagerenhet p† vare- eller ressurskortet settes inn som standard.;
                           SVE=Anger hur varje enhet av artikeln eller resursen m„ts, till exempel i stycken eller timmar. Som standard infogas v„rdet i f„ltet Basenhet p† artikel- eller resurskortet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure Code";
                Editable=UnitOfMeasureCodeEditable }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the minimum quantity that the customer must purchase in order to gain the agreed discount.;
                           NOR=Angir det minste antallet som kunden m† kj›pe for † f† den avtalte rabatten.;
                           SVE=Anger det l„gsta antal som kunden m†ste k”pa f”r att erh†lla den ”verenskomna rabatten.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Minimum Quantity";
                Editable=MinimumQuantityEditable }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the discount percentage that is granted for the item on the line.;
                           NOR=Angir rabattprosenten som blir gitt for varen p† linjen.;
                           SVE=Anger rabattprocentsatsen som beviljas f”r artikeln p† raden.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Line Discount %";
                Editable=LineDiscountEditable }

    { 1100285100;2;Field  ;
                SourceExpr="Surcharge %" }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date from which the sales line discount is valid.;
                           NOR=Angir datoen som salgslinjerabatten er gyldig fra.;
                           SVE=Anger datumet fr†n vilket f”rs„ljningsradrabatten g„ller.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Starting Date";
                Editable=StartingDateEditable }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date to which the sales line discount is valid.;
                           NOR=Angir datoen som salgslinjerabatten er gyldig til.;
                           SVE=Anger datumet till vilket f”rs„ljningsradrabatten g„ller.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ending Date";
                Editable=EndingDateEditable }

    { 1100527450;2;Field  ;
                SourceExpr="Item Description";
                Visible=FALSE }

    { 1100527451;2;Field  ;
                SourceExpr="Sales Code Description";
                Visible=FALSE }

    { 1100527452;2;Field  ;
                SourceExpr="Variant Code Description";
                Visible=FALSE }

    { 1100527453;2;Field  ;
                SourceExpr="Currency Code Description";
                Visible=FALSE }

    { 1100527454;2;Field  ;
                SourceExpr="Unit of Measure Description";
                Visible=FALSE }

    { 1100527455;2;Field  ;
                SourceExpr="Reverse Starting Date";
                Visible=FALSE }

    { 1100527456;2;Field  ;
                SourceExpr="Reverse Ending Date";
                Visible=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                ApplicationArea=#RecordLinks;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                ApplicationArea=#Notes;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Cust@1001 : Record 18;
      CustDiscGr@1005 : Record 340;
      Campaign@1008 : Record 11072034;
      Item@1004 : Record 27;
      ItemDiscGr@1013 : Record 341;
      ClientTypeManagement@1077 : Codeunit 4030;
      SalesTypeFilter@1000 : 'Customer,Customer Discount Group,All Customers,Campaign,None';
      SalesCodeFilter@1003 : Text;
      ItemTypeFilter@1012 : 'Item,Item Discount Group,None';
      CodeFilter@1011 : Text;
      StartingDateFilter@1006 : Text[30];
      Text000@1007 : TextConst 'ENU=All Customers;NOR=Alle kunder;SVE=Alla kunder';
      CurrencyCodeFilter@1002 : Text;
      SalesCodeEditable@19031640 : Boolean INDATASET;
      SalesCodeFilterCtrlEnable@19013164 : Boolean INDATASET;
      CodeFilterCtrlEnable@19026169 : Boolean INDATASET;
      IsOnMobile@1009 : Boolean;
      SalesTypeEditable@1100528400 : Boolean INDATASET;
      TypeEditable@1100528401 : Boolean INDATASET;
      CodeEditable@1100528402 : Boolean INDATASET;
      VariantCodeEditable@1100528403 : Boolean INDATASET;
      CurrencyCodeEditable@1100528404 : Boolean INDATASET;
      UnitOfMeasureCodeEditable@1100528405 : Boolean INDATASET;
      MinimumQuantityEditable@1100528406 : Boolean INDATASET;
      LineDiscountEditable@1100528407 : Boolean INDATASET;
      StartingDateEditable@1100528408 : Boolean INDATASET;
      EndingDateEditable@1100528409 : Boolean INDATASET;
      Text11012000@1100528410 : TextConst 'ENU=Sales Line Discounts are managed centrally.';

    LOCAL PROCEDURE GetRecFilters@2();
    BEGIN
      IF GETFILTERS <> '' THEN
        UpdateBasicRecFilters;
    END;

    [External]
    PROCEDURE SetRecFilters@1();
    BEGIN
      SalesCodeFilterCtrlEnable := TRUE;
      CodeFilterCtrlEnable := TRUE;

      IF SalesTypeFilter <> SalesTypeFilter::None THEN
        SETRANGE("Sales Type",SalesTypeFilter)
      ELSE
        SETRANGE("Sales Type");

      IF SalesTypeFilter IN [SalesTypeFilter::"All Customers",SalesTypeFilter::None] THEN BEGIN
        SalesCodeFilterCtrlEnable := FALSE;
        SalesCodeFilter := '';
      END;

      IF SalesCodeFilter <> '' THEN
        SETFILTER("Sales Code",SalesCodeFilter)
      ELSE
        SETRANGE("Sales Code");

      IF ItemTypeFilter <> ItemTypeFilter::None THEN
        SETRANGE(Type,ItemTypeFilter)
      ELSE
        SETRANGE(Type);

      IF ItemTypeFilter = ItemTypeFilter::None THEN BEGIN
        CodeFilterCtrlEnable := FALSE;
        CodeFilter := '';
      END;

      IF CodeFilter <> '' THEN BEGIN
        SETFILTER(Code,CodeFilter);
      END ELSE
        SETRANGE(Code);

      IF CurrencyCodeFilter <> '' THEN BEGIN
        SETFILTER("Currency Code",CurrencyCodeFilter);
      END ELSE
        SETRANGE("Currency Code");

      IF StartingDateFilter <> '' THEN
        SETFILTER("Starting Date",StartingDateFilter)
      ELSE
        SETRANGE("Starting Date");

      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetSelection@1100485000(VAR SalesDiscRec@1100485000 : Record 7004);
    BEGIN
      //**4PS
      IF SalesDiscRec.GETFILTER("Sales Type") <> '' THEN
        "Sales Type" := SalesDiscRec.GETRANGEMAX("Sales Type");

      IF SalesDiscRec.GETFILTER(Type) <> '' THEN
        Type := SalesDiscRec.GETRANGEMAX(Type);
    END;

    LOCAL PROCEDURE GetCaption@3() : Text[250];
    BEGIN
      IF IsOnMobile THEN
        EXIT('');

      EXIT(GetFilterDescription);
    END;

    LOCAL PROCEDURE GetFilterDescription@4() : Text;
    VAR
      ObjTranslation@1000 : Record 377;
      SourceTableName@1002 : Text;
      SalesSrcTableName@1003 : Text;
      Description@1001 : Text;
    BEGIN
      GetRecFilters;

      SourceTableName := '';
      CASE ItemTypeFilter OF
        ItemTypeFilter::Item:
          BEGIN
            SourceTableName := ObjTranslation.TranslateObject(ObjTranslation."Object Type"::Table,27);
            Item.SETFILTER("No.",CodeFilter);
            IF NOT Item.FINDFIRST THEN
              CLEAR(Item);
          END;
        ItemTypeFilter::"Item Discount Group":
          BEGIN
            SourceTableName := ObjTranslation.TranslateObject(ObjTranslation."Object Type"::Table,341);
            ItemDiscGr.SETFILTER(Code,CodeFilter);
            IF NOT ItemDiscGr.FINDFIRST THEN
              CLEAR(ItemDiscGr);
          END;
      END;

      SalesSrcTableName := '';
      CASE SalesTypeFilter OF
        SalesTypeFilter::Customer:
          BEGIN
            SalesSrcTableName := ObjTranslation.TranslateObject(ObjTranslation."Object Type"::Table,18);
            Cust.SETFILTER("No.",SalesCodeFilter);
            IF Cust.FINDFIRST THEN
              Description := Cust.Name;
          END;
        SalesTypeFilter::"Customer Discount Group":
          BEGIN
            SalesSrcTableName := ObjTranslation.TranslateObject(ObjTranslation."Object Type"::Table,340);
            CustDiscGr.SETFILTER(Code,SalesCodeFilter);
            IF CustDiscGr.FINDFIRST THEN
              Description := CustDiscGr.Description;
          END;
        SalesTypeFilter::Campaign:
          BEGIN
            SalesSrcTableName := ObjTranslation.TranslateObject(ObjTranslation."Object Type"::Table,11072034);
            Campaign.SETFILTER("No.",SalesCodeFilter);
            IF Campaign.FINDFIRST THEN
              Description := Campaign.Description;
          END;
        SalesTypeFilter::"All Customers":
          BEGIN
            SalesSrcTableName := Text000;
            Description := '';
          END;
      END;

      IF SalesSrcTableName = Text000 THEN
        EXIT(STRSUBSTNO('%1 %2 %3 %4 %5',SalesSrcTableName,SalesCodeFilter,Description,SourceTableName,CodeFilter));
      EXIT(STRSUBSTNO('%1 %2 %3 %4 %5',SalesSrcTableName,SalesCodeFilter,Description,SourceTableName,CodeFilter));
    END;

    LOCAL PROCEDURE SalesCodeFilterOnAfterValidate@19067727();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE SalesTypeFilterOnAfterValidate@19024044();
    BEGIN
      CurrPage.SAVERECORD;
      SalesCodeFilter := '';
      SetRecFilters;
    END;

    LOCAL PROCEDURE StartingDateFilterOnAfterValid@19055286();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE ItemTypeFilterOnAfterValidate@19002579();
    BEGIN
      CurrPage.SAVERECORD;
      CodeFilter := '';
      SetRecFilters;
    END;

    LOCAL PROCEDURE CodeFilterOnAfterValidate@19025728();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE CurrencyCodeFilterOnAfterValid@19015290();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE GetSalesTypeFilter@1000() : Integer;
    BEGIN
      CASE GETFILTER("Sales Type") OF
        FORMAT("Sales Type"::Customer):
          EXIT(0);
        FORMAT("Sales Type"::"Customer Disc. Group"):
          EXIT(1);
        FORMAT("Sales Type"::"All Customers"):
          EXIT(2);
        FORMAT("Sales Type"::Campaign):
          EXIT(3);
      END;
    END;

    LOCAL PROCEDURE GetTypeFilter@1001() : Integer;
    BEGIN
      CASE GETFILTER(Type) OF
        FORMAT(Type::Item):
          EXIT(0);
        FORMAT(Type::"Item Disc. Group"):
          EXIT(1);
      END;
    END;

    LOCAL PROCEDURE FilterLines@8();
    VAR
      FilterPageBuilder@1000 : FilterPageBuilder;
    BEGIN
      FilterPageBuilder.ADDTABLE(TABLECAPTION,DATABASE::"Sales Line Discount");
      FilterPageBuilder.SETVIEW(TABLECAPTION,GETVIEW);

      IF GETFILTER("Sales Type") = '' THEN
        FilterPageBuilder.ADDFIELDNO(TABLECAPTION,FIELDNO("Sales Type"));
      IF GETFILTER("Sales Code") = '' THEN
        FilterPageBuilder.ADDFIELDNO(TABLECAPTION,FIELDNO("Sales Code"));
      IF GETFILTER(Type) = '' THEN
        FilterPageBuilder.ADDFIELDNO(TABLECAPTION,FIELDNO(Type));
      IF GETFILTER(Code) = '' THEN
        FilterPageBuilder.ADDFIELDNO(TABLECAPTION,FIELDNO(Code));
      IF GETFILTER("Starting Date") = '' THEN
        FilterPageBuilder.ADDFIELDNO(TABLECAPTION,FIELDNO("Starting Date"));
      IF GETFILTER("Currency Code") = '' THEN
        FilterPageBuilder.ADDFIELDNO(TABLECAPTION,FIELDNO("Currency Code"));

      IF FilterPageBuilder.RUNMODAL THEN
        SETVIEW(FilterPageBuilder.GETVIEW(TABLECAPTION));

      UpdateBasicRecFilters;
      SetEditableFields;
    END;

    LOCAL PROCEDURE UpdateBasicRecFilters@14();
    BEGIN
      IF GETFILTER("Sales Type") <> '' THEN
        SalesTypeFilter := GetSalesTypeFilter
      ELSE
        SalesTypeFilter := SalesTypeFilter::None;

      IF GETFILTER(Type) <> '' THEN
        ItemTypeFilter := GetTypeFilter
      ELSE
        ItemTypeFilter := ItemTypeFilter::None;

      SalesCodeFilter := GETFILTER("Sales Code");
      CodeFilter := GETFILTER(Code);
      CurrencyCodeFilter := GETFILTER("Currency Code");
      EVALUATE(StartingDateFilter,GETFILTER("Starting Date"));
    END;

    LOCAL PROCEDURE SetEditableFields@18();
    BEGIN
      SalesCodeEditable := "Sales Type" <> "Sales Type"::"All Customers";
    END;

    LOCAL PROCEDURE ActivateFieldsForCentralManagement@1100528405();
    VAR
      CentralDataMgt@1100528400 : Codeunit 11012010;
    BEGIN
      //**4PS
      SetEditableFields;
      SalesTypeEditable := TRUE;
      TypeEditable := TRUE;
      CodeEditable := TRUE;
      VariantCodeEditable := TRUE;
      CurrencyCodeEditable := TRUE;
      UnitOfMeasureCodeEditable := TRUE;
      MinimumQuantityEditable := TRUE;
      LineDiscountEditable := TRUE;
      StartingDateEditable := TRUE;
      EndingDateEditable := TRUE;

      IF NOT CentralDataMgt.ChangingSalesLineDiscountIsAllowed(Rec) THEN BEGIN
        TypeEditable := FALSE;
        CodeEditable := FALSE;
        SalesTypeEditable := FALSE;
        SalesCodeEditable := FALSE;
        StartingDateEditable := FALSE;
        CurrencyCodeEditable := FALSE;
        VariantCodeEditable := FALSE;
        UnitOfMeasureCodeEditable := FALSE;
        MinimumQuantityEditable := FALSE;

        LineDiscountEditable := CentralDataMgt.FieldInputAllowed(DATABASE::"Sales Line Discount", FIELDNO("Line Discount %"));
        EndingDateEditable := CentralDataMgt.FieldInputAllowed(DATABASE::"Sales Line Discount", FIELDNO("Ending Date"));
      END;
    END;

    BEGIN
    {
      200426 ORANGO.PR Added field: "Surcharge %"
    }
    END.
  }
}

