OBJECT Table 6085608 DC File
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW16.00.10.5.00.03;
  }
  PROPERTIES
  {
    OnInsert=VAR
               CryptoMgt@6085573 : Codeunit 6085599;
             BEGIN
               Date := TODAY;
               "File Time" := TIME;
               "Is A File" := Name <> '..';
               "Path Hash" := FileInfo.GetFilePathHash(GetFullFileName);
             END;

    OnModify=BEGIN
               Date := TODAY;
               "File Time" := TIME;
             END;

    OnDelete=BEGIN
               DeleteFile;
             END;

    CaptionML=;
  }
  FIELDS
  {
    { 1   ;   ;Path                ;Text250       ;CaptionML=SVE=S”kv„g }
    { 2   ;   ;Is A File           ;Boolean       ;CaptionML=SVE=Žr en fil }
    { 3   ;   ;Name                ;Text199       ;CaptionML=SVE=Namn }
    { 4   ;   ;Size                ;Integer       ;CaptionML=SVE=Storlek }
    { 5   ;   ;Date                ;Date          ;CaptionML=SVE=Datum }
    { 6   ;   ;File Time           ;Time          ;CaptionML= }
    { 7   ;   ;Data                ;BLOB          ;CaptionML=SVE=Data }
    { 10  ;   ;File Location       ;Option        ;CaptionML=SVE=Filplats;
                                                   OptionCaptionML=;
                                                   OptionString=Memory,Client File System,Server File System }
    { 11  ;   ;Path Hash           ;Text50        ;CaptionML= }
  }
  KEYS
  {
    {    ;Path Hash,Name                          ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TempFileStorage@1003 : Codeunit 6085665;
      WebClientMgt@1002 : Codeunit 6085662;
      FileSysMgt@1000 : Codeunit 6085584;
      FileInfo@1001 : Codeunit 6085666;
      SkipAddToTemp@1004 : Boolean;

    PROCEDURE CreateFromFileIfExist@1160040001(FilePath@1160040000 : Text;InMemoryCopy@1000 : Boolean);
    BEGIN
      IF FileSysMgt.FileExists(FilePath) THEN
        FileSysMgt.GetFile(FilePath,Rec)
      ELSE
        CreateEmpty(FilePath);

      IF NOT InMemoryCopy THEN BEGIN
        IF ISSERVICETIER THEN
          "File Location" := "File Location"::"Server File System"
        ELSE
          "File Location" := "File Location"::"Client File System";
      END ELSE
        "File Location" := "File Location"::Memory;
    END;

    PROCEDURE CreateEmpty@11(FilePath@1000 : Text);
    BEGIN
      INIT;
      SetFullFileName(FilePath);
    END;

    PROCEDURE CreateTemp@3(Extension@1000 : Text);
    VAR
      FilePath@1001 : Text;
    BEGIN
      INIT;
      FilePath := STRSUBSTNO('%1.%2',CREATEGUID,Extension);
      SetFullFileName(FilePath);
    END;

    PROCEDURE CreateFromStream@2(FilePath@1000 : Text;ReadStream@1001 : InStream);
    VAR
      WriteStream@1003 : OutStream;
    BEGIN
      INIT;
      IF FilePath <> '' THEN
        SetFullFileName(FilePath);

      IF NOT ReadStream.EOS THEN BEGIN
        Data.CREATEOUTSTREAM(WriteStream);
        COPYSTREAM(WriteStream,ReadStream);
      END;

      "File Location" := "File Location"::Memory;
    END;

    PROCEDURE CreateFromClientFilePath@6(ClientFilePath@1000 : Text);
    VAR
      ClientFile@1160040000 : File;
      ReadStream@1001 : InStream;
      WriteStream@1003 : OutStream;
    BEGIN
      INIT;
      IF ISSERVICETIER THEN BEGIN
        IF NOT FileSysMgt.UploadFileToStreamSilent(ClientFilePath,ReadStream) THEN
          EXIT;

        Data.CREATEOUTSTREAM(WriteStream);
        COPYSTREAM(WriteStream,ReadStream);
      END ELSE BEGIN
        ClientFile.OPEN(ClientFilePath);
        ClientFile.CREATEINSTREAM(ReadStream);
        Data.CREATEOUTSTREAM(WriteStream);
        COPYSTREAM(WriteStream,ReadStream);
        ClientFile.CLOSE;
      END;

      SetFullFileName(ClientFilePath);
      "File Location" := "File Location"::"Client File System";
    END;

    PROCEDURE CreateFromDataUrl@15(VAR DataUrl@1000 : Text) : Boolean;
    BEGIN
      EXIT(FileSysMgt.SaveDataUrlToFile(Rec,DataUrl));
    END;

    PROCEDURE CreateWithSaveDialog@100(WindowTitle@1001 : Text[50];FilterString@1000 : Text) ClientFilePath : Text;
    BEGIN
      ClientFilePath := FileSysMgt.SaveFileDialog(WindowTitle,'',FilterString);
      IF ClientFilePath = '' THEN
        EXIT;

      CreateEmpty(ClientFilePath);
      "File Location" := "File Location"::"Client File System";
    END;

    PROCEDURE BrowseFile@10(WindowTitle@1002 : Text[50];DefaultFileName@1001 : Text;FilterString@1000 : Text) ClientFilePath : Text;
    VAR
      TempBlob@1160040000 : Record 99008535;
      WriteStream@1003 : OutStream;
      ReadStream@1004 : InStream;
    BEGIN
      ClientFilePath := DefaultFileName;
      IF ISSERVICETIER THEN BEGIN
        IF NOT UPLOADINTOSTREAM(WindowTitle,'',FilterString,ClientFilePath,ReadStream) THEN
          EXIT('');
        CreateFromStream(ClientFilePath,ReadStream);
      END ELSE BEGIN
        ClientFilePath := FileSysMgt.BlobImport(TempBlob,DefaultFileName);
        CreateEmpty(ClientFilePath);
        Data := TempBlob.Blob;
        "File Location" := "File Location"::Memory;
      END;
    END;

    PROCEDURE SaveFileWithDialog@17(WindowTitle@1001 : Text[50];FilterString@1002 : Text) Ok : Boolean;
    VAR
      TempBlob@6085573 : TEMPORARY Record 99008535;
      ClientFullFileName@1003 : Text;
      ReadStream@1000 : InStream;
      ClientFilePath@6085574 : Text;
    BEGIN
      LoadData;
      IF WebClientMgt.IsWebClient THEN BEGIN
        Data.CREATEINSTREAM(ReadStream);
        EXIT(DOWNLOADFROMSTREAM(ReadStream,WindowTitle,'',FilterString,Name));
      END ELSE BEGIN
        TempBlob.Blob := Data;
        ClientFilePath := FileSysMgt.SaveFileDialog(WindowTitle,Name,GetExtensionFilter);
        IF ClientFilePath = '' THEN
          EXIT;
        FileSysMgt.BlobDownload(TempBlob,ClientFilePath);
      END;
    END;

    PROCEDURE SetFullFileName@1160040002(FilePath@1160040000 : Text);
    BEGIN
      Path := FileInfo.GetFilePath(FilePath);
      Name := FileInfo.GetFilename(FilePath);
    END;

    PROCEDURE GetDataStream@8(VAR ReadStream@1000 : InStream);
    BEGIN
      LoadData;
      Data.CREATEINSTREAM(ReadStream);
    END;

    PROCEDURE GetFullFileName@1() FullFileName : Text;
    BEGIN
      IF Path <> '' THEN
        EXIT(STRSUBSTNO('%1\%2',Path,Name))
      ELSE
        EXIT(Name);
    END;

    PROCEDURE GetFilePath@1160040000() FilePath : Text;
    BEGIN
      // Stores the file for processing for RTC this will always be serverside.
      // For Classic always clientside
      IF "File Location" IN ["File Location"::"Client File System","File Location"::"Server File System"] THEN
        EXIT(GetFullFileName);

      IF "File Location" = "File Location"::Memory THEN BEGIN
        FilePath := FileSysMgt.GetTempFilename(FileInfo.GetFilenameWithoutExt(GetFullFileName),Extension);
        IF Data.HASVALUE THEN
          Data.EXPORT(FilePath);
        "File Location" := "File Location"::"Server File System";
        SetFullFileName(FilePath);
        TempFileStorage.AddFile(Rec);
      END;
    END;

    PROCEDURE GetClientFilePath@4() ClientFilePath : Text;
    BEGIN
      IF "File Location" = "File Location"::"Client File System" THEN
        EXIT(GetFullFileName);

      IF "File Location" IN ["File Location"::"Server File System","File Location"::Memory] THEN BEGIN
        ClientFilePath := FileSysMgt.GetClientTempFilename(FileInfo.GetFilenameWithoutExt(GetFullFileName),Extension);
        ClientFilePath := SaveToClient(ClientFilePath);
      END;

      "File Location" := "File Location"::"Client File System";
      SetFullFileName(ClientFilePath);
      IF NOT SkipAddToTemp THEN
        TempFileStorage.AddFile(Rec);
    END;

    PROCEDURE Extension@9() : Text;
    BEGIN
      EXIT(FileInfo.GetFileExtension(GetFullFileName));
    END;

    PROCEDURE SaveToServer@7(FolderPath@1000 : Text) : Boolean;
    BEGIN
      EXIT(Data.EXPORT(STRSUBSTNO('%1\%2',FolderPath,Name)) <> '');
    END;

    PROCEDURE SaveToClient@12(ClientFilePathNew@1000 : Text) ClientFilePath : Text;
    VAR
      TempBlob@1001 : TEMPORARY Record 99008535;
      WriteStream@1002 : OutStream;
      ReadStream@1003 : InStream;
    BEGIN
      LoadData;
      IF ISSERVICETIER THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(WriteStream);
        GetDataStream(ReadStream);
        IF NOT ReadStream.EOS THEN BEGIN
          COPYSTREAM(WriteStream,ReadStream);
          FileSysMgt.BlobDownload(TempBlob,ClientFilePathNew);
        END;
      END ELSE BEGIN
        FileSysMgt.DeleteFile(ClientFilePathNew,TRUE);
        Data.EXPORT(ClientFilePathNew);
      END;

      EXIT(ClientFilePathNew);
    END;

    PROCEDURE Open@16();
    BEGIN
      IF WebClientMgt.IsWebClient THEN
        SaveFileWithDialog('Download',GetExtensionFilter)
      ELSE BEGIN
        SkipAddToTemp := TRUE;
        FileSysMgt.LocalShell(GetClientFilePath);
      END;
    END;

    PROCEDURE LoadData@5();
    BEGIN
      CASE "File Location" OF
        "File Location"::"Server File System" :
          IF FileSysMgt.FileExists(GetFullFileName) THEN
            Data.IMPORT(GetFullFileName);
        "File Location"::"Client File System" :
          CreateFromClientFilePath(GetFullFileName);
        "File Location"::Memory : ; // Allready loaded
      END;
    END;

    PROCEDURE DeleteFile@14();
    BEGIN
      CASE "File Location" OF
        "File Location"::Memory : ;
        "File Location"::"Client File System" :
          FileSysMgt.DeleteClientFile(GetFullFileName);
        "File Location"::"Server File System" :
          FileSysMgt.DeleteFile(GetFullFileName,TRUE);
      END;
    END;

    LOCAL PROCEDURE GetExtensionFilter@18() : Text;
    BEGIN
      EXIT(STRSUBSTNO('File (*.%1)|*.%1',FileInfo.GetFileExtension(GetFullFileName)));
    END;

    PROCEDURE GetFromFullFileName@6085573(FilePath@6085573 : Text) : Boolean;
    VAR
      FileName@6085574 : Text;
      PathHash@6085575 : Text;
    BEGIN
      PathHash := FileInfo.GetFilePathHash(FilePath);
      FileName := FileInfo.GetFilename(FilePath);
      EXIT(GET(PathHash,FileName));
    END;

    BEGIN
    END.
  }
}

