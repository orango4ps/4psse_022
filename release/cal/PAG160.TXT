OBJECT Page 160 Sales Statistics
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Statistics;
               NOR=Salgsstatistikk;
               SVE=F”rs„ljningsstatistik];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table36;
    PageType=ListPlus;
    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 SalesSetup.GET;
                 AllowInvDisc :=
                   NOT (SalesSetup."Calc. Inv. Discount" AND CustInvDiscRecExists("Invoice Disc. Code"));
                 AllowVATDifference :=
                   SalesSetup."Allow VAT Difference" AND
                   NOT ("Document Type" IN ["Document Type"::Quote,"Document Type"::"Blanket Order"]);
                 OnOpenPageOnBeforeSetEditable(AllowInvDisc,AllowVATDifference);
                 CurrPage.EDITABLE := AllowVATDifference OR AllowInvDisc;
                 SetVATSpecification;
               END;

    OnAfterGetRecord=BEGIN
                       CurrPage.CAPTION(STRSUBSTNO(Text000,"Document Type"));
                       IF PrevNo = "No." THEN BEGIN
                         GetVATSpecification;
                         EXIT;
                       END;

                       PrevNo := "No.";
                       FILTERGROUP(2);
                       SETRANGE("No.",PrevNo);
                       FILTERGROUP(0);

                       CalculateTotals;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    OnQueryClosePage=BEGIN
                       GetVATSpecification;
                       IF TempVATAmountLine.GetAnyLineModified THEN
                         UpdateVATOnSalesLines;
                       EXIT(TRUE);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=Allm„nt] }

    { 129 ;2   ;Field     ;
                Name=Amount;
                CaptionML=[ENU=Amount;
                           NOR=Bel›p;
                           SVE=Belopp];
                ToolTipML=[ENU=Specifies the net amount of all the lines in the sales document.;
                           NOR=Angir nettobel›pet til alle linjene i salgsdokumentet.;
                           SVE=Anger nettobeloppet f”r alla rader p† f”rs„ljningsdokumentet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalSalesLine."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text002,FALSE);
                Editable=FALSE }

    { 93  ;2   ;Field     ;
                Name=InvDiscountAmount;
                CaptionML=[ENU=Inv. Discount Amount;
                           NOR=Fakturarabattbel›p;
                           SVE=Fakturarabatt];
                ToolTipML=[ENU=Specifies the invoice discount amount for the sales document.;
                           NOR=Angir salgsdokumentets fakturarabattbel›p.;
                           SVE=Anger fakturarabatten f”r f”rs„ljningsdokumentet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalSalesLine."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                OnValidate=BEGIN
                             UpdateInvDiscAmount;
                           END;
                            }

    { 80  ;2   ;Field     ;
                CaptionML=[ENU=Total;
                           NOR=I alt;
                           SVE=Totalt];
                ToolTipML=[ENU=Specifies the total amount less any invoice discount amount and excluding VAT for the sales document.;
                           NOR=Angir det totale bel›pet for ordren, minus fakturarabattbel›p og uten mva for salgsdokumentet.;
                           SVE=Anger det totala beloppet (exklusive moms) f”r f”rs„ljningsdokumentet, minus fakturarabatt.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalAmount1;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,FALSE);
                OnValidate=BEGIN
                             UpdateTotalAmount;
                           END;
                            }

    { 75  ;2   ;Field     ;
                CaptionML=[ENU=VAT Amount;
                           NOR=Mva-bel›p;
                           SVE=Momsbelopp];
                ToolTipML=[ENU=Specifies the total VAT amount that has been calculated for all the lines in the sales document.;
                           NOR=Angir det totale mva.-bel›pet som er beregnet for alle linjene i salgsdokumentet.;
                           SVE=Anger det totala momsbeloppet ber„knat p† alla f”rs„ljningsdokumentets rader.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT(VATAmountText);
                Editable=FALSE }

    { 76  ;2   ;Field     ;
                CaptionML=[ENU=Total Incl. VAT;
                           NOR=Totalt inkl. mva.;
                           SVE=Totalt inkl. moms];
                ToolTipML=[ENU=Specifies the total amount including VAT that will be posted to the customer's account for all the lines in the sales document. This is the amount that the customer owes based on this sales document. If the document is a credit memo, it is the amount that you owe to the customer.;
                           NOR=Angir det totale bel›pet, inklusiv mva. som vil bli bokf›rt til kundens konto for alle linjene i salgsdokumentet. Dette er bel›pet som kunder skylder i henhold til salgsdokumentet. Hvis dokumentet er en kreditnota, er dette bel›pet som du skylder kunden.);
                           SVE=Anger totalbeloppet, inklusive moms, f”r alla rader p† f”rs„ljningsdokumentet som bokf”rs p† kundens konto. Det h„r „r beloppet som kunden „r skyldig enligt f”rs„ljningsdokumentet. Om dokumentet „r en kreditnota „r det h„r beloppet som du „r skyldig kunden.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalAmount2;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,TRUE);
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Sales (LCY);
                           NOR=Salg (NOK);
                           SVE=F”rs„ljning (BVA)];
                ToolTipML=[ENU=Specifies your total sales turnover in the fiscal year. It is calculated from amounts excluding VAT on all completed and open sales invoices and credit memos.;
                           NOR=Angir den totale salgsomsetningen i regnskaps†ret. Verdien beregnes fra bel›p uten mva for alle fullf›rte og †pne salgsfakturaer og kreditnotaer.;
                           SVE=Anger total f”rs„ljningsoms„ttning under r„kenskaps†ret. Den ber„knas fr†n belopp exklusive moms p† alla avslutade och ”ppna f”rs„ljningsfakturor och kreditnotor.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalSalesLineLCY.Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 79  ;2   ;Field     ;
                CaptionML=[ENU=Original Profit (LCY);
                           NOR=Bruttofortjeneste (NOK);
                           SVE=Ursprunglig vinst (BVA)];
                ToolTipML=[ENU=Specifies the original profit that was associated with the sales when they were originally posted.;
                           NOR=Angir den opprinnelige bruttofortjenesten som ble knyttet til salgene da de opprinnelig ble bokf›rt.;
                           SVE=Anger den ursprungliga vinsten som kopplades till f”rs„ljningen n„r den ursprungligen bokf”rdes.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ProfitLCY;
                AutoFormatType=1;
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                CaptionML=[ENU=Adjusted Profit (LCY);
                           NOR=Justert bruttofortjeneste (NOK);
                           SVE=Justerad vinst (BVA)];
                ToolTipML=[ENU=Specifies the profit, taking into consideration changes in the purchase prices of the goods.;
                           NOR=Angir bruttofortjenesten etter at det er tatt h›yde for endringer i kj›psprisen for varene.;
                           SVE=Anger vinsten med h„nsyn till „ndringar i varornas ink”pspriser.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AdjProfitLCY;
                AutoFormatType=1;
                Editable=FALSE }

    { 81  ;2   ;Field     ;
                CaptionML=[ENU=Original Profit %;
                           NOR=Bruttofortjeneste-%;
                           SVE=Ursprunglig vinst %];
                ToolTipML=[ENU=Specifies the original percentage of profit that was associated with the sales when they were originally posted.;
                           NOR=Angir den opprinnelige prosentdelen av fortjenesten som ble knyttet til salgene da de opprinnelig ble bokf›rt.;
                           SVE=Anger den ursprungliga vinstprocentandelen som kopplades till f”rs„ljningen n„r den ursprungligen bokf”rdes.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct;
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                CaptionML=[ENU=Adjusted Profit %;
                           NOR=Justert bruttofortjeneste-%;
                           SVE=Justerad vinst %];
                ToolTipML=[ENU=Specifies the percentage of profit for all sales, taking into account changes that occurred in the purchase prices of the goods.;
                           NOR=Angir prosenten av fortjeneste for alle salg, etter at det er tatt h›yde for endringer som oppstod i kj›psprisen for varene.;
                           SVE=Anger vinstprocentandelen f”r all f”rs„ljning, med h„nsyn till konto„ndringar som har „gt rum i varornas ink”pspriser.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=1:1;
                SourceExpr=AdjProfitPct;
                Editable=FALSE }

    { 95  ;2   ;Field     ;
                CaptionML=[ENU=Quantity;
                           NOR=Antall;
                           SVE=Antal];
                ToolTipML=[ENU=Specifies the total quantity of G/L account entries, items, and/or resources in the sales document. If the amount is rounded, because the Invoice Rounding check box is selected in the Sales & Receivables Setup window, this field will contain the quantity of items in the sales document plus one.;
                           NOR=Angir det totale antall finansposter, varer og/eller ressurser i salgsdokumentet. Hvis bel›pet avrundes fordi det er merket av for Fakturaavrunding i vinduet Salgsoppsett, inneholder feltet antall varer i salgsdokumentet pluss ‚n.;
                           SVE=Anger det totala antalet redovisningstransaktioner, artiklar och/eller resurser p† f”rs„ljningsordern. Om beloppet avrundas d„rf”r att kryssrutan Fakturaavrundning i f”nstret Konfiguration av f”rs„ljning och fordringar „r markerad, inneh†ller det h„r f„ltet antalet artiklar i f”rs„ljningsdokumentet plus ett.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalSalesLine.Quantity;
                Editable=FALSE }

    { 73  ;2   ;Field     ;
                CaptionML=[ENU=Parcels;
                           NOR=Kolli;
                           SVE=F”rpackningar];
                ToolTipML=[ENU=Specifies the total number of parcels in the sales document.;
                           NOR=Angir antall kolli i salgsdokumentet.;
                           SVE=Anger totalt antal f”rpackningar i f”rs„ljningsdokumentet.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalSalesLine."Units per Parcel";
                Editable=FALSE }

    { 91  ;2   ;Field     ;
                CaptionML=[ENU=Net Weight;
                           NOR=Nettovekt;
                           SVE=Nettovikt];
                ToolTipML=[ENU=Specifies the total net weight of the items in the sales document.;
                           NOR=Angir den totale nettovekten av varene i salgsdokumentet.;
                           SVE=Anger total nettovikt f”r artiklarna i f”rs„ljningsdokumentet.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalSalesLine."Net Weight";
                Editable=FALSE }

    { 82  ;2   ;Field     ;
                CaptionML=[ENU=Gross Weight;
                           NOR=Bruttovekt;
                           SVE=Bruttovikt];
                ToolTipML=[ENU=Specifies the total gross weight of the items in the sales document.;
                           NOR=Angir den totale bruttovekten av varene i salgsdokumentet.;
                           SVE=Anger total bruttovikt f”r artiklarna i f”rs„ljningsdokumentet.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalSalesLine."Gross Weight";
                Editable=FALSE }

    { 71  ;2   ;Field     ;
                CaptionML=[ENU=Volume;
                           NOR=Volum;
                           SVE=Volym];
                ToolTipML=[ENU=Specifies the total volume of the items in the sales document.;
                           NOR=Angir det totale volumet av varene i salgsdokumentet.;
                           SVE=Anger total volym f”r artiklarna i f”rs„ljningsdokumentet.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalSalesLine."Unit Volume";
                Editable=FALSE }

    { 78  ;2   ;Field     ;
                CaptionML=[ENU=Original Cost (LCY);
                           NOR=Opprinnelig kost (NOK);
                           SVE=Ursprunglig kostnad (BVA)];
                ToolTipML=[ENU=Specifies the total cost, in LCY, of the G/L account entries, items, and/or resources in the sales document. The cost is calculated as unit cost x quantity of the items or resources.;
                           NOR=Angir det totale kostbel›p, i NOK, til finans, varene og/eller ressurser i salgsdokumentet. Kostbel›pet er beregnet som enhetskost x mengde av varene eller ressursene.;
                           SVE=Anger den totala kostnaden i BVA f”r redovisningskontotransaktioner, artiklar och/eller resurser i f”rs„ljningsdokumentet. Kostnaden ber„knas som styckkostnad ž antal artiklar eller resurser.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalSalesLineLCY."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Adjusted Cost (LCY);
                           NOR=Justert kost (NOK);
                           SVE=Justerad kostnad (BVA)];
                ToolTipML=[ENU=Specifies the total cost, in LCY, of the items in the sales document, adjusted for any changes in the original costs of these items. If this field contains zero, it means that there were no entries to calculate, possibly because of date compression or because the adjustment batch job has not yet been run.;
                           NOR=Angir total kost, i NOK, for varene i salgsdokumentet, justert for eventuelle endringer i opprinnelig kost for varene. Hvis feltet inneholder null, betyr det at det ikke var noen poster † beregne. Dette kan skyldes datokomprimering eller at justeringskj›rselen ikke er kj›rt enn†.;
                           SVE=Anger total kostnad i BVA f”r artiklarna i f”rs„ljningsdokumentet, justerat med eventuella „ndringar i den ursprungliga kostnaden f”r dessa artiklar. Om det h„r f„ltet inneh†ller v„rdet noll, inneb„r det att det inte fanns n†gra transaktioner att ber„kna, m”jligen p† grund av datakomprimering eller s† har buntjobbet Justering „nnu inte har k”rts.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalAdjCostLCY;
                AutoFormatType=1;
                Editable=FALSE }

    { 7   ;2   ;Field     ;
                CaptionML=[ENU=Cost Adjmt. Amount (LCY);
                           NOR=Kostjusteringsbel›p (NOK);
                           SVE=Kostnadsjusteringsbelopp (BVA)];
                ToolTipML=[ENU=Specifies the difference between the original cost and the total adjusted cost of the items in the sales document.;
                           NOR=Angir differansen mellom opprinnelig kost og total justert kost for varene i salgsdokumentet.;
                           SVE=Anger skillnaden mellan den ursprungliga kostnaden och den totala justerade kostnaden f”r artiklar i f”rs„ljningsdokumentet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalAdjCostLCY - TotalSalesLineLCY."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE;
                OnLookup=BEGIN
                           LookupAdjmtValueEntries(0);
                         END;
                          }

    { 5   ;1   ;Part      ;
                Name=SubForm;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page576 }

    { 1903289601;1;Group  ;
                CaptionML=[ENU=Customer;
                           NOR=Kunde;
                           SVE=Kund] }

    { 67  ;2   ;Field     ;
                CaptionML=[ENU=Balance (LCY);
                           NOR=Saldo (NOK);
                           SVE=Saldo (BVA)];
                ToolTipML=[ENU=Specifies the balance on the customer's account.;
                           NOR=Angir saldoen p† kundens konto.;
                           SVE=Anger saldot p† kundens konto.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Cust."Balance (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 68  ;2   ;Field     ;
                CaptionML=[ENU=Credit Limit (LCY);
                           NOR=Kredittgrense (NOK);
                           SVE=Kreditlimit (BVA)];
                ToolTipML=[ENU=Specifies the credit limit of the customer that you created the sales document for.;
                           NOR=Angir kredittgrensen for kunden som du opprettet salgsdokumentet for.;
                           SVE=Anger kreditlimiten i BVA f”r kunden du skapade f”rs„ljningsdokumentet f”r.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Cust.GetActualCreditLimit(TODAY);
                AutoFormatType=1;
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                ExtendedDatatype=Ratio;
                CaptionML=[ENU=Expended % of Credit Limit (LCY);
                           NOR=Benyttet % av kredittgrense (NOK);
                           SVE=Kreditlimit utnyttjad % (BVA)];
                ToolTipML=[ENU=Specifies the expended percentage of the credit limit in (LCY).;
                           NOR=Angir den forventede prosenten for kredittgrensen i (NOK).;
                           SVE=Anger kreditlimitens utnyttjade procentandel (BVA).];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CreditLimitLCYExpendedPct }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Sales %1 Statistics;NOR=Salgsstatistikk - %1;SVE=F”rs. %1 statistik';
      Text001@1001 : TextConst 'ENU=Total;NOR=I alt;SVE=Totalt';
      Text002@1002 : TextConst 'ENU=Amount;NOR=Bel›p;SVE=Belopp';
      Text003@1003 : TextConst 'ENU=%1 must not be 0.;NOR=%1 skal ikke v‘re 0.;SVE=%1 f†r inte vara 0.';
      Text004@1004 : TextConst 'ENU=%1 must not be greater than %2.;NOR=%1 skal ikke v‘re st›rre enn %2.;SVE=%1 f†r inte vara st”rre „n %2.';
      Text005@1005 : TextConst '@@@=You cannot change the invoice discount because there is a Cust. Invoice Disc. record for Invoice Disc. Code 30000.;ENU=You cannot change the invoice discount because there is a %1 record for %2 %3.;NOR=Du kan ikke endre fakturarabatten fordi det finnes en %1-post for %2 %3.;SVE=Du kan inte „ndra fakturarabatten d„rf”r att det finns en %1 post f”r %2 %3.';
      TotalSalesLine@1006 : Record 37;
      TotalSalesLineLCY@1007 : Record 37;
      Cust@1008 : Record 18;
      TempVATAmountLine@1009 : TEMPORARY Record 290;
      SalesSetup@1010 : Record 311;
      SalesPost@1011 : Codeunit 80;
      TotalAmount1@1012 : Decimal;
      TotalAmount2@1013 : Decimal;
      VATAmount@1014 : Decimal;
      VATAmountText@1015 : Text[30];
      ProfitLCY@1016 : Decimal;
      ProfitPct@1017 : Decimal;
      AdjProfitLCY@1024 : Decimal;
      AdjProfitPct@1023 : Decimal;
      TotalAdjCostLCY@1022 : Decimal;
      CreditLimitLCYExpendedPct@1018 : Decimal;
      PrevNo@1019 : Code[20];
      AllowInvDisc@1020 : Boolean;
      AllowVATDifference@1021 : Boolean;
      DPA_IsHardFilter@1100000999 : Boolean;

    LOCAL PROCEDURE UpdateHeaderInfo@5();
    VAR
      CurrExchRate@1000 : Record 330;
      UseDate@1001 : Date;
    BEGIN
      TotalSalesLine."Inv. Discount Amount" := TempVATAmountLine.GetTotalInvDiscAmount;
      TotalAmount1 :=
        TotalSalesLine."Line Amount" - TotalSalesLine."Inv. Discount Amount";
      VATAmount := TempVATAmountLine.GetTotalVATAmount;
      IF "Prices Including VAT" THEN BEGIN
        TotalAmount1 := TempVATAmountLine.GetTotalAmountInclVAT;
        TotalAmount2 := TotalAmount1 - VATAmount;
        TotalSalesLine."Line Amount" := TotalAmount1 + TotalSalesLine."Inv. Discount Amount";
      END ELSE
        TotalAmount2 := TotalAmount1 + VATAmount;

      IF "Prices Including VAT" THEN
        TotalSalesLineLCY.Amount := TotalAmount2
      ELSE
        TotalSalesLineLCY.Amount := TotalAmount1;
      IF "Currency Code" <> '' THEN BEGIN
        IF ("Document Type" IN ["Document Type"::"Blanket Order","Document Type"::Quote]) AND
           ("Posting Date" = 0D)
        THEN
          UseDate := WORKDATE
        ELSE
          UseDate := "Posting Date";

        TotalSalesLineLCY.Amount :=
          CurrExchRate.ExchangeAmtFCYToLCY(
            0, '', //**4PS.n
      //    UseDate,"Currency Code",TotalSalesLineLCY.Amount,"Currency Factor"); //**4PS.o
            UseDate,"Currency Code",TotalSalesLineLCY.Amount,"Currency Factor",TRUE); //**4PS.n

      END;
      ProfitLCY := TotalSalesLineLCY.Amount - TotalSalesLineLCY."Unit Cost (LCY)";
      IF TotalSalesLineLCY.Amount = 0 THEN
        ProfitPct := 0
      ELSE
        ProfitPct := ROUND(100 * ProfitLCY / TotalSalesLineLCY.Amount,0.01);

      AdjProfitLCY := TotalSalesLineLCY.Amount - TotalAdjCostLCY;
      IF TotalSalesLineLCY.Amount = 0 THEN
        AdjProfitPct := 0
      ELSE
        AdjProfitPct := ROUND(100 * AdjProfitLCY / TotalSalesLineLCY.Amount,0.01);
    END;

    LOCAL PROCEDURE GetVATSpecification@21();
    BEGIN
      CurrPage.SubForm.PAGE.GetTempVATAmountLine(TempVATAmountLine);
      IF TempVATAmountLine.GetAnyLineModified THEN
        UpdateHeaderInfo;
    END;

    LOCAL PROCEDURE SetVATSpecification@11();
    BEGIN
      CurrPage.SubForm.PAGE.SetTempVATAmountLine(TempVATAmountLine);
      CurrPage.SubForm.PAGE.InitGlobals(
        "Currency Code",AllowVATDifference,AllowVATDifference,
        "Prices Including VAT",AllowInvDisc,"VAT Base Discount %");
    END;

    LOCAL PROCEDURE UpdateTotalAmount@16();
    VAR
      SaveTotalAmount@1000 : Decimal;
    BEGIN
      CheckAllowInvDisc;
      IF "Prices Including VAT" THEN BEGIN
        SaveTotalAmount := TotalAmount1;
        UpdateInvDiscAmount;
        TotalAmount1 := SaveTotalAmount;
      END;
      WITH TotalSalesLine DO
        "Inv. Discount Amount" := "Line Amount" - TotalAmount1;
      UpdateInvDiscAmount;
    END;

    LOCAL PROCEDURE UpdateInvDiscAmount@3();
    VAR
      InvDiscBaseAmount@1000 : Decimal;
    BEGIN
      CheckAllowInvDisc;
      InvDiscBaseAmount := TempVATAmountLine.GetTotalInvDiscBaseAmount(FALSE,"Currency Code");
      IF InvDiscBaseAmount = 0 THEN
        ERROR(Text003,TempVATAmountLine.FIELDCAPTION("Inv. Disc. Base Amount"));

      IF TotalSalesLine."Inv. Discount Amount" / InvDiscBaseAmount > 1 THEN
        ERROR(
          Text004,
          TotalSalesLine.FIELDCAPTION("Inv. Discount Amount"),
          TempVATAmountLine.FIELDCAPTION("Inv. Disc. Base Amount"));

      TempVATAmountLine.SetInvoiceDiscountAmount(
        TotalSalesLine."Inv. Discount Amount","Currency Code","Prices Including VAT","VAT Base Discount %");
      CurrPage.SubForm.PAGE.SetTempVATAmountLine(TempVATAmountLine);
      UpdateHeaderInfo;

      "Invoice Discount Calculation" := "Invoice Discount Calculation"::Amount;
      "Invoice Discount Value" := TotalSalesLine."Inv. Discount Amount";
      MODIFY;
      UpdateVATOnSalesLines;
    END;

    LOCAL PROCEDURE GetCaptionClass@2(FieldCaption@1000 : Text[100];ReverseCaption@1001 : Boolean) : Text[80];
    BEGIN
      IF "Prices Including VAT" XOR ReverseCaption THEN
        EXIT('2,1,' + FieldCaption);

      EXIT('2,0,' + FieldCaption);
    END;

    LOCAL PROCEDURE UpdateVATOnSalesLines@1();
    VAR
      SalesLine@1000 : Record 37;
    BEGIN
      GetVATSpecification;
      IF TempVATAmountLine.GetAnyLineModified THEN BEGIN
        SalesLine.UpdateVATOnLines(0,Rec,SalesLine,TempVATAmountLine);
        SalesLine.UpdateVATOnLines(1,Rec,SalesLine,TempVATAmountLine);
      END;
      PrevNo := '';
    END;

    LOCAL PROCEDURE CustInvDiscRecExists@4(InvDiscCode@1000 : Code[20]) : Boolean;
    VAR
      CustInvDisc@1001 : Record 19;
    BEGIN
      CustInvDisc.SETRANGE(Code,InvDiscCode);
      EXIT(CustInvDisc.FINDFIRST);
    END;

    LOCAL PROCEDURE CheckAllowInvDisc@8();
    VAR
      CustInvDisc@1000 : Record 19;
    BEGIN
      IF NOT AllowInvDisc THEN
        ERROR(
          Text005,
          CustInvDisc.TABLECAPTION,FIELDCAPTION("Invoice Disc. Code"),"Invoice Disc. Code");
    END;

    LOCAL PROCEDURE CalculateTotals@6();
    VAR
      SalesLine@1001 : Record 37;
      TempSalesLine@1000 : TEMPORARY Record 37;
    BEGIN
      CLEAR(SalesLine);
      CLEAR(TotalSalesLine);
      CLEAR(TotalSalesLineLCY);
      CLEAR(SalesPost);

      SalesPost.GetSalesLines(Rec,TempSalesLine,0);
      CLEAR(SalesPost);
      SalesPost.SumSalesLinesTemp(
        Rec,TempSalesLine,0,TotalSalesLine,TotalSalesLineLCY,
        VATAmount,VATAmountText,ProfitLCY,ProfitPct,TotalAdjCostLCY);

      AdjProfitLCY := TotalSalesLineLCY.Amount - TotalAdjCostLCY;
      IF TotalSalesLineLCY.Amount <> 0 THEN
        AdjProfitPct := ROUND(AdjProfitLCY / TotalSalesLineLCY.Amount * 100,0.1);

      IF "Prices Including VAT" THEN BEGIN
        TotalAmount2 := TotalSalesLine.Amount;
        TotalAmount1 := TotalAmount2 + VATAmount;
        TotalSalesLine."Line Amount" := TotalAmount1 + TotalSalesLine."Inv. Discount Amount";
      END ELSE BEGIN
        TotalAmount1 := TotalSalesLine.Amount;
        TotalAmount2 := TotalSalesLine."Amount Including VAT";
      END;

      IF Cust.GET("Bill-to Customer No.") THEN
      BEGIN //**4PS.n
        Cust.CALCFIELDS("Balance (LCY)");
      //**4PS.sn
        Cust."Credit Limit (LCY)" := Cust.GetActualCreditLimit(TODAY);
      END
      //**4PS.en
      ELSE
        CLEAR(Cust);
      IF Cust."Credit Limit (LCY)" = 0 THEN
        CreditLimitLCYExpendedPct := 0
      ELSE
        IF Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" < 0 THEN
          CreditLimitLCYExpendedPct := 0
        ELSE
          IF Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" > 1 THEN
            CreditLimitLCYExpendedPct := 10000
          ELSE
            CreditLimitLCYExpendedPct := ROUND(Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" * 10000,1);

      SalesLine.CalcVATAmountLines(0,Rec,TempSalesLine,TempVATAmountLine);
      TempVATAmountLine.MODIFYALL(Modified,FALSE);
      SetVATSpecification;

      OnAfterCalculateTotals(Rec,TotalSalesLine,TotalSalesLineLCY,TempVATAmountLine);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCalculateTotals@13(VAR SalesHeader@1000 : Record 36;VAR TotalSalesLine@1002 : Record 37;VAR TotalSalesLineLCY@1001 : Record 37;VAR TempVATAmountLine@1003 : TEMPORARY Record 290);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnOpenPageOnBeforeSetEditable@7(VAR AllowInvDisc@1000 : Boolean;VAR AllowVATDifference@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

