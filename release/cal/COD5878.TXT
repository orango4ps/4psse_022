OBJECT Codeunit 5878 Phys. Invt. Rec.-Reopen
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04;
  }
  PROPERTIES
  {
    TableNo=5877;
    OnRun=BEGIN
            PhysInvtRecordHeader.COPY(Rec);
            Code;
            Rec := PhysInvtRecordHeader;

            OnAfterOnRun(Rec);
          END;

  }
  CODE
  {
    VAR
      ReopeningLinesMsg@1000 : TextConst '@@@="%2 = counter";ENU=Reopening lines              #2######;NOR=èpner linjer pÜ nytt              #2######';
      PhysInvtRecordHeader@1001 : Record 5877;
      Window@1005 : Dialog;
      LineCount@1006 : Integer;

    [External]
    PROCEDURE Code@1();
    VAR
      PhysInvtRecordLine@1002 : Record 5878;
      PhysInvtOrderHeader@1001 : Record 5875;
      PhysInvtOrderLine@1000 : Record 5876;
    BEGIN
      WITH PhysInvtRecordHeader DO BEGIN
        TESTFIELD("Order No.");
        TESTFIELD("Recording No.");
        TESTFIELD(Status,Status::Finished);

        Window.OPEN(
          '#1#################################\\' + ReopeningLinesMsg);
        Window.UPDATE(1,STRSUBSTNO('%1 %2',TABLECAPTION,"Order No."));

        PhysInvtOrderHeader.GET("Order No.");
        PhysInvtOrderHeader.TESTFIELD(Status,PhysInvtOrderHeader.Status::Open);

        LineCount := 0;
        PhysInvtRecordLine.RESET;
        PhysInvtRecordLine.SETRANGE("Order No.","Order No.");
        PhysInvtRecordLine.SETRANGE("Recording No.","Recording No.");
        IF PhysInvtRecordLine.FIND('-') THEN
          REPEAT
            LineCount := LineCount + 1;
            Window.UPDATE(2,LineCount);
            IF PhysInvtRecordLine."Item No." <> '' THEN BEGIN
              PhysInvtOrderLine.GET(PhysInvtRecordLine."Order No.",PhysInvtRecordLine."Order Line No.");
              PhysInvtOrderLine."Qty. Recorded (Base)" -= PhysInvtRecordLine."Quantity (Base)";
              PhysInvtOrderLine."No. Finished Rec.-Lines" -= 1;
              PhysInvtOrderLine."On Recording Lines" := PhysInvtOrderLine."No. Finished Rec.-Lines" <> 0;
              OnBeforePhysInvtOrderLineModify(PhysInvtOrderLine);
              PhysInvtOrderLine.MODIFY;

              PhysInvtRecordLine."Order Line No." := 0;
              PhysInvtRecordLine."Recorded Without Order" := FALSE;
              PhysInvtRecordLine.MODIFY;
            END;
          UNTIL PhysInvtRecordLine.NEXT = 0;

        Status := Status::Open;
        MODIFY;
      END;
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterOnRun@3(VAR PhysInvtRecordHeader@1000 : Record 5877);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforePhysInvtOrderLineModify@2(VAR PhysInvtOrderLine@1000 : Record 5876);
    BEGIN
    END;

    BEGIN
    END.
  }
}

