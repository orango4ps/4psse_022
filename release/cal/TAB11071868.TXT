OBJECT Table 11071868 Sales Header Extension
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Header Extension;
               NOR="Forlengelse av salgshode "];
  }
  FIELDS
  {
    { 10  ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              NOR=Dokumenttype;
                                                              SVE=Dokumenttyp];
                                                   OptionCaptionML=[ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Invoice Proposal;
                                                                    NOR=Tilbud,Ordre,Faktura,Kreditnota,Rammeordre ,Returordre,Fakturaforslag;
                                                                    SVE=Offert,Order,Faktura,Kreditnota,Avropsorder,Returorder,Fakturaf”rslag];
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Invoice Proposal }
    { 20  ;   ;Document No.        ;Code20        ;TableRelation="Sales Header".No. WHERE (Document Type=FIELD(Document Type));
                                                   CaptionML=[ENU=Document No.;
                                                              NOR=Dokumentnr.;
                                                              SVE=Dokumentnr] }
    { 30  ;   ;E-Mail (Invoices)   ;Text80        ;OnValidate=VAR
                                                                RecRef@1100528701 : RecordRef;
                                                                FldRef@1100528700 : FieldRef;
                                                              BEGIN
                                                                RecRef.GETTABLE(Rec);
                                                                FldRef := RecRef.FIELD(FIELDNO("E-Mail (Invoices)"));
                                                                ContactDataValidation.ValidateEmail(FldRef, "E-Mail (Invoices)");

                                                                IF "E-Mail (Invoices)" = '' THEN BEGIN
                                                                  "Invoice per E-Mail" := FALSE;
                                                                  IF "Electronic Invoicing" = "Electronic Invoicing"::"E-Mail" THEN
                                                                    "Electronic Invoicing" := "Electronic Invoicing"::Print;
                                                                END;
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=Email (Invoices);
                                                              SVE=E-post (Fakturor)] }
    { 40  ;   ;Invoice per E-Mail  ;Boolean       ;OnValidate=BEGIN
                                                                IF "Invoice per E-Mail" THEN
                                                                  TESTFIELD("E-Mail (Invoices)");
                                                              END;

                                                   CaptionML=ENU=Invoice per Email;
                                                   Description=Obsolete }
    { 44  ;   ;Order No.           ;Code20        ;TableRelation="Sales Header".No. WHERE (Document Type=CONST(Order));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Order No.;
                                                              NOR=Ordrenr.;
                                                              SVE=Ordernr];
                                                   Description=4PSSE, Svefaktura3 }
    { 50  ;   ;E-Mail (Shipments)  ;Text80        ;OnValidate=VAR
                                                                RecRef@1100528701 : RecordRef;
                                                                FldRef@1100528700 : FieldRef;
                                                              BEGIN
                                                                RecRef.GETTABLE(Rec);
                                                                FldRef := RecRef.FIELD(FIELDNO("E-Mail (Shipments)"));
                                                                ContactDataValidation.ValidateEmail(FldRef, "E-Mail (Shipments)");

                                                                IF "E-Mail (Shipments)" = '' THEN
                                                                  "Shipment per E-Mail" := FALSE;
                                                              END;

                                                   CaptionML=[ENU=Email (Shipments);
                                                              SVE=E-post (Leveranser)] }
    { 60  ;   ;Shipment per E-Mail ;Boolean       ;OnValidate=BEGIN
                                                                IF "Shipment per E-Mail" THEN
                                                                  TESTFIELD("E-Mail (Shipments)");
                                                              END;

                                                   CaptionML=ENU=Shipment per Email }
    { 70  ;   ;Electronic Invoicing;Option        ;OnValidate=VAR
                                                                ServiceSetup@1100528600 : Record 11012800;
                                                                DispatchInterface@1100528601 : Codeunit 11071685;
                                                              BEGIN
                                                                IF "Electronic Invoicing" = "Electronic Invoicing"::"E-Mail" THEN
                                                                  TESTFIELD("E-Mail (Invoices)");
                                                                IF "Electronic Invoicing" = "Electronic Invoicing"::"Dispatch Woon" THEN BEGIN
                                                                  ServiceSetup.GET;
                                                                  ServiceSetup.TESTFIELD("Dispatch Woon Active", TRUE);
                                                                  DispatchInterface.TestPreliminariesSalesHeader("Document Type", "Document No.");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Electronic Invoicing;
                                                              NOR=Elektronisk fakturering;
                                                              SVE=Elektronisk fakturering];
                                                   OptionCaptionML=[ENU=Print,,E-Mail,,GLN (XML),eVerbinding,Svefaktura (XML),OIOUBL (DK),UBL (NO),INSBOU (Web Service),,,,Dispatch Woon;
                                                                    SVE=Skriv ut,,E-post,,GLN (XML),eVerbinding,Svefaktura (XML),OIOUBL (DK),UBL (NO),INSBOU (Web Service),,,,Dispatch Woon];
                                                   OptionString=Print,,E-Mail,,GLN (XML),eVerbinding,Svefaktura (XML),OIOUBL (DK),UBL (NO),INSBOU (Web Service),,,,Dispatch Woon }
    { 80  ;   ;E-Mail (Order Confirmations);Text80;OnValidate=VAR
                                                                RecRef@1100528701 : RecordRef;
                                                                FldRef@1100528700 : FieldRef;
                                                              BEGIN
                                                                RecRef.GETTABLE(Rec);
                                                                FldRef := RecRef.FIELD(FIELDNO("E-Mail (Order Confirmations)"));
                                                                ContactDataValidation.ValidateEmail(FldRef, "E-Mail (Order Confirmations)");

                                                                IF "E-Mail (Order Confirmations)" = '' THEN
                                                                  "Order Confirmation per E-Mail" := FALSE;
                                                              END;

                                                   CaptionML=[ENU=Email (Order Confirmations);
                                                              SVE=E-post (Orderbekr.)] }
    { 90  ;   ;Order Confirmation per E-Mail;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Order Confirmation per E-Mail" THEN
                                                                  TESTFIELD("E-Mail (Order Confirmations)");
                                                              END;

                                                   CaptionML=ENU=Order Confirmation per Email }
    { 100 ;   ;E-Mail Order Confirm. Sent by;Code50;
                                                   TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              LoginManagement@1100528700 : Codeunit 418;
                                                            BEGIN
                                                              LoginManagement.LookupUserID("E-Mail Order Confirm. Sent by");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Email Order Confirm. Sent by;
                                                   Editable=No }
    { 110 ;   ;E-Mail Order Confirm. Sent on;Date ;CaptionML=ENU=Email Order Confirm. Sent on;
                                                   Editable=No }
    { 111 ;   ;Pre-Assigned No.    ;Code20        ;CaptionML=[ENU=Pre-Assigned No.;
                                                              NOR=Forh†ndstilordnet nr.;
                                                              SVE=F”rhandstilldelat nr] }
    { 120 ;   ;Combine E-Mail Attachments;Boolean ;CaptionML=[ENU=Combine Email Attachments;
                                                              SVE=Kombinera E-post bilagor] }
    { 130 ;   ;Compress Dyn. Inv. Prop. Lines;Boolean;
                                                   CaptionML=ENU=Compress Dyn. Inv. Prop. Lines }
    { 140 ;   ;Service Location No.;Code20        ;TableRelation="Service Location";
                                                   OnValidate=BEGIN
                                                                ValidateServiceLocationNo(CustomerNo);
                                                              END;

                                                   CaptionML=[ENU=Service Location No.;
                                                              NOR=Servicelokasjon Nr.;
                                                              SVE=Serviceplatsnr] }
    { 150 ;   ;Delivery Period     ;DateFormula   ;CaptionML=[ENU=Delivery Period;
                                                              NOR=Leveranseperiode;
                                                              SVE=Leveransperiod] }
  }
  KEYS
  {
    {    ;Document Type,Document No.              ;Clustered=Yes }
    {    ;Document Type,Service Location No.       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ContactDataValidation@1100528700 : Codeunit 11012275;
      CustomerNo@1100528400 : Code[20];

    PROCEDURE GetSalesHeadExtension@1100525001(DocumentType@1100528701 : Option;DocumentNo@1100528700 : Code[20]);
    BEGIN
      IF NOT GET(DocumentType, DocumentNo) THEN BEGIN
        INIT;
        "Document Type" := DocumentType;
        "Document No."  := DocumentNo;
      END;
    END;

    PROCEDURE UpdateSalesHeadExtension@1100525000(DocumentType@1100525002 : Option;DocumentNo@1100525000 : Code[20]);
    VAR
      SalesHeaderExtension@1100525001 : Record 11071868;
      SalesHeaderExtensionInit@1100525003 : Record 11071868;
      DeleteExt@1100525004 : Boolean;
    BEGIN
      SalesHeaderExtensionInit.INIT;
      SalesHeaderExtensionInit."Document Type" := DocumentType;
      SalesHeaderExtensionInit."Document No."  := DocumentNo;
      IF FORMAT(Rec) = FORMAT(SalesHeaderExtensionInit) THEN
        DeleteExt := TRUE
      ELSE
        DeleteExt := FALSE;

      IF NOT SalesHeaderExtension.GET(DocumentType, DocumentNo) THEN BEGIN
        IF DeleteExt THEN
          EXIT;
        SalesHeaderExtension.INIT;
        SalesHeaderExtension."Document Type" := DocumentType;
        SalesHeaderExtension."Document No."  := DocumentNo;
        SalesHeaderExtension.INSERT;
      END ELSE BEGIN
        IF DeleteExt THEN BEGIN
          SalesHeaderExtension.DELETE;
          EXIT;
        END;
      END;
      SalesHeaderExtension.TRANSFERFIELDS(Rec, FALSE);
      SalesHeaderExtension.MODIFY;
    END;

    PROCEDURE CopySalesHeadExtension@1100525002(FromDocumentType@1100525001 : Option;FromDocumentNo@1100525000 : Code[20];ToDocumentType@1100525003 : Option;ToDocumentNo@1100525002 : Code[20]);
    VAR
      FromSalesHeaderExtension@1100525004 : Record 11071868;
      ToSalesHeaderExtension@1100525005 : Record 11071868;
    BEGIN
      IF ToSalesHeaderExtension.GET(ToDocumentType, ToDocumentNo) THEN
        ToSalesHeaderExtension.DELETE;
      IF FromSalesHeaderExtension.GET(FromDocumentType, FromDocumentNo) THEN BEGIN
        ToSalesHeaderExtension."Document Type" := ToDocumentType;
        ToSalesHeaderExtension."Document No."  := ToDocumentNo;
        ToSalesHeaderExtension.TRANSFERFIELDS(FromSalesHeaderExtension, FALSE);
        ToSalesHeaderExtension.INSERT;
      END;
    END;

    PROCEDURE CopySalesInvHeaderToSalesHeadExtension@1100528404(FromDocumentNo@1100525000 : Code[20];ToDocumentType@1100525003 : Option;ToDocumentNo@1100525002 : Code[20]);
    VAR
      FromSalesInvoiceHeader@1100525004 : Record 112;
      ToSalesHeaderExtension@1100525005 : Record 11071868;
    BEGIN
      IF ToDocumentNo = '' THEN
        EXIT; //It is assumed that the To Sales Header already exists.
      IF ToSalesHeaderExtension.GET(ToDocumentType, ToDocumentNo) THEN
        ToSalesHeaderExtension.DELETE;
      IF FromSalesInvoiceHeader.GET(FromDocumentNo) THEN BEGIN
        ToSalesHeaderExtension."Document Type" := ToDocumentType;
        ToSalesHeaderExtension."Document No."  := ToDocumentNo;
        ToSalesHeaderExtension."E-Mail (Invoices)" := FromSalesInvoiceHeader."E-Mail (Invoices)";
        ToSalesHeaderExtension."Electronic Invoicing" := FromSalesInvoiceHeader."Electronic Invoicing";
        ToSalesHeaderExtension."Combine E-Mail Attachments" := FromSalesInvoiceHeader."Combine E-Mail Attachments";

        ToSalesHeaderExtension."Pre-Assigned No." := FromSalesInvoiceHeader."Pre-Assigned No.";

        ToSalesHeaderExtension.INSERT;
      END;
    END;

    PROCEDURE CopySalesCreditMemoToSalesHeadExtension@1100528500(FromDocumentNo@1100525000 : Code[20];ToDocumentType@1100525003 : Option;ToDocumentNo@1100525002 : Code[20]);
    VAR
      FromSalesCrMemoHeader@1100525004 : Record 114;
      ToSalesHeaderExtension@1100525005 : Record 11071868;
    BEGIN
      IF ToDocumentNo = '' THEN
        EXIT; //It is assumed that the To Sales Header already exists.
      IF ToSalesHeaderExtension.GET(ToDocumentType, ToDocumentNo) THEN
        ToSalesHeaderExtension.DELETE;
      IF FromSalesCrMemoHeader.GET(FromDocumentNo) THEN BEGIN
        ToSalesHeaderExtension."Document Type" := ToDocumentType;
        ToSalesHeaderExtension."Document No."  := ToDocumentNo;
        ToSalesHeaderExtension."E-Mail (Invoices)" := FromSalesCrMemoHeader."E-Mail (Invoices)";
        ToSalesHeaderExtension."Electronic Invoicing" := FromSalesCrMemoHeader."Electronic Invoicing";
        ToSalesHeaderExtension."Combine E-Mail Attachments" := FromSalesCrMemoHeader."Combine E-Mail Attachments";
        ToSalesHeaderExtension.INSERT;
      END;
    END;

    PROCEDURE SetCustomerNo@1100528401(CustomerNo2@1100528400 : Code[20]);
    BEGIN
      CustomerNo := CustomerNo2;
    END;

    PROCEDURE ValidateServiceLocationNo@1100528400(CustomerNo@1100528400 : Code[20]);
    VAR
      Customer@1100528401 : Record 18;
      ServiceLocation@1100528402 : Record 11012801;
      SalesHeader@1100528403 : Record 36;
    BEGIN
      IF "Service Location No." <> '' THEN BEGIN
        ServiceLocation.GET("Service Location No.");
        Customer.GET(CustomerNo);
        ServiceLocation.TESTFIELD("Customer No.", CustomerNo);
      END;
      IF SalesHeader.GET("Document Type", "Document No.") THEN
        SalesHeader.MessageIfSalesHeaderExtensionIsChangedAndSalesLinesExist(
          FIELDCAPTION("Service Location No."));
    END;

    PROCEDURE LookupServiceLocationNo@1100528403(CustomerNo@1100528400 : Code[20]);
    VAR
      ServiceLocation@1100528401 : Record 11012801;
    BEGIN
      SetCustomerNo(CustomerNo);
      ServiceLocation.SETCURRENTKEY("Customer No.");
      ServiceLocation.SETRANGE("Customer No.", CustomerNo);
      ServiceLocation."No." := "Service Location No.";
      IF PAGE.RUNMODAL(PAGE::"Service Location List", ServiceLocation) = ACTION::LookupOK THEN
        VALIDATE("Service Location No.", ServiceLocation."No.");
    END;

    PROCEDURE GetServiceLocationDescription@1100528402() : Text[50];
    VAR
      ServiceLocation@1100528400 : Record 11012801;
    BEGIN
      IF "Service Location No." <> '' THEN
        IF ServiceLocation.GET("Service Location No.") THEN
          EXIT(ServiceLocation.Description);
    END;

    BEGIN
    {
      190904 ORANGO.DL support for Svefatura 3 (PEPPOL Biz 3.0) with code from NAV2018
    }
    END.
  }
}

