OBJECT Codeunit 1242 Set Up Curr Exch Rate Service
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnRun=VAR
            Currency@1003 : Record 4;
            CurrExchRateUpdateSetup@1001 : Record 1650;
            GLSetup@1002 : Record 98;
          BEGIN
            IF Currency.ISEMPTY THEN
              EXIT;
            IF NOT CurrExchRateUpdateSetup.ISEMPTY THEN
              EXIT;
            IF NOT CurrExchRateUpdateSetup.WRITEPERMISSION THEN
              EXIT;
            GLSetup.GET;
            IF GLSetup."LCY Code" = 'EUR' THEN
              SetupECBDataExchange(CurrExchRateUpdateSetup,GetECB_URI);
            COMMIT;
          END;

  }
  CODE
  {
    VAR
      DummyDataExchColumnDef@1000 : Record 1223;
      DummyCurrExchRate@1001 : Record 330;
      ECB_EXCH_RATESTxt@1004 : TextConst '@@@={Locked};ENU=ECB-EXCHANGE-RATES;NOR=ECB-EXCHANGE-RATES;SVE=ECB-VALUTAKURSER';
      ECB_EXCH_RATESDescTxt@1005 : TextConst 'ENU=European Central Bank Currency Exchange Rates Setup;NOR=Oppsett av valutakurser fra Den europeiske sentralbank;SVE=Konfiguration av valutakurser fr†n Europeiska centralbanken';
      ECB_URLTxt@1008 : TextConst '@@@={Locked};ENU=http://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml;NOR=http://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml;SVE=http://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml';
      ECBServiceProviderTxt@1011 : TextConst 'ENU=European Central Bank;NOR=Den europeiske sentralbank;SVE=Europeiska centralbanken';

    [Internal]
    PROCEDURE SetupECBDataExchange@5(VAR CurrExchRateUpdateSetup@1001 : Record 1650;PathToECBService@1002 : Text);
    VAR
      DataExchLineDef@1003 : Record 1227;
      SuggestColDefinitionXML@1000 : Codeunit 1236;
    BEGIN
      DataExchLineDef.SETRANGE("Data Exch. Def Code",ECB_EXCH_RATESTxt);
      IF DataExchLineDef.FINDFIRST THEN;

      CreateCurrencyExchangeSetup(
        CurrExchRateUpdateSetup,ECB_EXCH_RATESTxt,ECB_EXCH_RATESDescTxt,
        DataExchLineDef."Data Exch. Def Code",ECBServiceProviderTxt,'');

      IF STRPOS(PathToECBService,'http') = 1 THEN
        CurrExchRateUpdateSetup.SetWebServiceURL(PathToECBService);

      IF DataExchLineDef."Data Exch. Def Code" = '' THEN BEGIN
        CreateExchLineDef(DataExchLineDef,CurrExchRateUpdateSetup."Data Exch. Def Code",GetECBRepeaterPath);
        SuggestColDefinitionXML.GenerateDataExchColDef(PathToECBService,DataExchLineDef);

        MapECBDataExch(DataExchLineDef);
      END;
      COMMIT;
    END;

    LOCAL PROCEDURE CreateCurrencyExchangeSetup@29(VAR CurrExchRateUpdateSetup@1002 : Record 1650;NewCode@1000 : Code[20];NewDesc@1001 : Text[250];NewDataExchCode@1005 : Code[20];NewServiceProvider@1004 : Text[30];NewTermOfUse@1003 : Text[250]);
    BEGIN
      CurrExchRateUpdateSetup.INIT;
      CurrExchRateUpdateSetup.VALIDATE("Data Exch. Def Code",NewDataExchCode);
      CurrExchRateUpdateSetup.VALIDATE(Code,NewCode);
      CurrExchRateUpdateSetup.VALIDATE(Description,NewDesc);
      CurrExchRateUpdateSetup.VALIDATE("Service Provider",NewServiceProvider);
      CurrExchRateUpdateSetup.VALIDATE("Terms of Service",NewTermOfUse);
      CurrExchRateUpdateSetup.INSERT(TRUE);
    END;

    [External]
    PROCEDURE GetECB_URI@9() : Text;
    VAR
      GLSetup@1000 : Record 98;
    BEGIN
      GLSetup.GET;
      GLSetup.TESTFIELD("LCY Code",'EUR');
      EXIT(ECB_URLTxt);
    END;

    LOCAL PROCEDURE CreateExchLineDef@14(VAR DataExchLineDef@1000 : Record 1227;DataExchDefCode@1003 : Code[20];RepeaterPath@1005 : Text[250]);
    BEGIN
      DataExchLineDef.SETRANGE("Data Exch. Def Code",DataExchDefCode);
      DataExchLineDef.FINDFIRST;
      DataExchLineDef.VALIDATE("Data Line Tag",RepeaterPath);
      DataExchLineDef.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE CreateExchMappingLine@8(DataExchMapping@1000 : Record 1224;FromColumnName@1001 : Text[250];ToFieldNo@1003 : Integer;DataType@1005 : Option;NewMultiplier@1006 : Decimal;NewDataFormat@1007 : Text[10];NewTransformationRule@1008 : Code[20];NewDefaultValue@1009 : Text[250]);
    VAR
      DataExchFieldMapping@1002 : Record 1225;
      DataExchColumnDef@1004 : Record 1223;
    BEGIN
      WITH DataExchColumnDef DO BEGIN
        SETRANGE("Data Exch. Def Code",DataExchMapping."Data Exch. Def Code");
        SETRANGE("Data Exch. Line Def Code",DataExchMapping."Data Exch. Line Def Code");
        IF NewDefaultValue <> '' THEN BEGIN
          IF FINDLAST THEN BEGIN
            INIT;
            "Column No." += 10000;
            INSERT;
          END
        END ELSE BEGIN
          SETRANGE(Name,FromColumnName);
          FINDFIRST;
        END;
        VALIDATE("Data Type",DataType);
        VALIDATE("Data Format",NewDataFormat);
        MODIFY(TRUE);
      END;

      WITH DataExchFieldMapping DO BEGIN
        INIT;
        VALIDATE("Data Exch. Def Code",DataExchMapping."Data Exch. Def Code");
        VALIDATE("Data Exch. Line Def Code",DataExchMapping."Data Exch. Line Def Code");
        VALIDATE("Table ID",DataExchMapping."Table ID");
        VALIDATE("Column No.",DataExchColumnDef."Column No.");
        VALIDATE("Field ID",ToFieldNo);
        VALIDATE(Multiplier,NewMultiplier);
        VALIDATE("Transformation Rule",NewTransformationRule);
        VALIDATE("Default Value",NewDefaultValue);
        INSERT(TRUE);
      END;
    END;

    LOCAL PROCEDURE MapECBDataExch@52(VAR DataExchLineDef@1001 : Record 1227);
    VAR
      DataExchMapping@1000 : Record 1224;
    BEGIN
      DataExchMapping.GET(DataExchLineDef."Data Exch. Def Code",DataExchLineDef.Code,GetMappingTable);

      CreateExchMappingLine(
        DataExchMapping,GetECBCurrencyCodeXMLElement,GetCurrencyCodeFieldNo,
        DummyDataExchColumnDef."Data Type"::Text,1,'','','');
      CreateExchMappingLine(
        DataExchMapping,GetECBStartingDateXMLElement,GetStartingDateFieldNo,
        DummyDataExchColumnDef."Data Type"::Date,1,'','','');

      CreateExchMappingLine(
        DataExchMapping,GetECBExchRateXMLElement,GetExchRateAmtFieldNo,
        DummyDataExchColumnDef."Data Type"::Decimal,1,'','','');
      CreateExchMappingLine(
        DataExchMapping,'',GetRelationalExchRateFieldNo,
        DummyDataExchColumnDef."Data Type"::Decimal,1,'','','1');
    END;

    LOCAL PROCEDURE GetECBRepeaterPath@44() : Text[250];
    BEGIN
      EXIT('/gesmes:Envelope/Cube/Cube/Cube');
    END;

    LOCAL PROCEDURE GetMappingTable@16() : Integer;
    BEGIN
      EXIT(DATABASE::"Currency Exchange Rate")
    END;

    LOCAL PROCEDURE GetECBCurrencyCodeXMLElement@69() : Text[250];
    BEGIN
      EXIT('currency');
    END;

    LOCAL PROCEDURE GetECBExchRateXMLElement@68() : Text[250];
    BEGIN
      EXIT('rate');
    END;

    LOCAL PROCEDURE GetECBStartingDateXMLElement@1() : Text[250];
    BEGIN
      EXIT('time');
    END;

    LOCAL PROCEDURE GetCurrencyCodeFieldNo@20() : Integer;
    BEGIN
      EXIT(DummyCurrExchRate.FIELDNO("Currency Code"));
    END;

    LOCAL PROCEDURE GetRelationalExchRateFieldNo@21() : Integer;
    BEGIN
      EXIT(DummyCurrExchRate.FIELDNO("Relational Exch. Rate Amount"));
    END;

    LOCAL PROCEDURE GetExchRateAmtFieldNo@24() : Integer;
    BEGIN
      EXIT(DummyCurrExchRate.FIELDNO("Exchange Rate Amount"));
    END;

    LOCAL PROCEDURE GetStartingDateFieldNo@22() : Integer;
    BEGIN
      EXIT(DummyCurrExchRate.FIELDNO("Starting Date"));
    END;

    BEGIN
    END.
  }
}

