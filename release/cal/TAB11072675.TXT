OBJECT Table 11072675 Plant Maint. Scheme Ver. Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Index Date");
               TESTFIELD("Line No.");
             END;

    OnDelete=VAR
               CancelledPlantMaintSchemeLine@1100528800 : Record 11072676;
             BEGIN
               IF Level IN [Level::"Maintenance Scheme", Level::"Plant Type"] THEN BEGIN
                 CancelledPlantMaintSchemeLine.SETCURRENTKEY(
                   "Level (Cancelled)","Plant Type (Cancelled)","Maintenance Scheme (Cancelled)","Index Date (Cancelled)","Line No. (Cancelled)");
                 CancelledPlantMaintSchemeLine.SETRANGE("Level (Cancelled)", Level);
                 CancelledPlantMaintSchemeLine.SETRANGE("Plant Type (Cancelled)", "Plant Type");
                 CancelledPlantMaintSchemeLine.SETRANGE("Maintenance Scheme (Cancelled)", "Maintenance Scheme");
                 CancelledPlantMaintSchemeLine.SETRANGE("Index Date (Cancelled)", "Index Date");
                 CancelledPlantMaintSchemeLine.SETRANGE("Line No. (Cancelled)", "Line No.");
                 CancelledPlantMaintSchemeLine.DELETEALL;
               END;
             END;

    OnRename=VAR
               CancelledPlantMaintSchemeLine@1100529000 : Record 11072676;
               CancelledPlantMaintSchemeLine2@1100529001 : Record 11072676;
             BEGIN
               TESTFIELD(Level, xRec.Level);
               TESTFIELD("Plant Type", xRec."Plant Type");
               TESTFIELD("Plant No.", xRec."Plant No.");
               TESTFIELD("Maintenance Scheme", xRec."Maintenance Scheme");
               TESTFIELD("Index Date", xRec."Index Date");
               TESTFIELD("Line No.");
               IF ("Line No." <> 0) AND ("Line No." <> xRec."Line No.") THEN BEGIN
                 IF Level IN [Level::"Maintenance Scheme", Level::"Plant Type"] THEN BEGIN
                   CancelledPlantMaintSchemeLine.SETCURRENTKEY(
                     "Level (Cancelled)","Plant Type (Cancelled)","Maintenance Scheme (Cancelled)","Index Date (Cancelled)","Line No. (Cancelled)");
                   CancelledPlantMaintSchemeLine.SETRANGE("Level (Cancelled)", Level);
                   CancelledPlantMaintSchemeLine.SETRANGE("Plant Type (Cancelled)", "Plant Type");
                   CancelledPlantMaintSchemeLine.SETRANGE("Maintenance Scheme (Cancelled)", "Maintenance Scheme");
                   CancelledPlantMaintSchemeLine.SETRANGE("Index Date (Cancelled)", "Index Date");
                   CancelledPlantMaintSchemeLine.SETRANGE("Line No. (Cancelled)", xRec."Line No.");
                   IF CancelledPlantMaintSchemeLine.FINDSET THEN BEGIN
                     REPEAT
                       CancelledPlantMaintSchemeLine2 := CancelledPlantMaintSchemeLine;
                       CancelledPlantMaintSchemeLine2."Line No. (Cancelled)" := "Line No.";
                       CancelledPlantMaintSchemeLine.INSERT;
                       CancelledPlantMaintSchemeLine.DELETE;
                     UNTIL CancelledPlantMaintSchemeLine.NEXT = 0;
                   END;
                 END;
               END;
             END;

    CaptionML=[ENU=Plant Maintenance Scheme Version Line;
               SVE=Maskinunderh†ll schemaversion rad];
  }
  FIELDS
  {
    { 5   ;   ;Level               ;Option        ;CaptionML=[ENU=Level;
                                                              NOR=Niv†;
                                                              SVE=Niv†];
                                                   OptionCaptionML=ENU=Maintenance Scheme,Plant Type,Plant Number;
                                                   OptionString=Maintenance Scheme,Plant Type,Plant Number }
    { 10  ;   ;Plant No.           ;Code20        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   CaptionML=[ENU=Plant No.;
                                                              NOR=Niv†kode;
                                                              SVE=Niv†kod] }
    { 15  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type".Code;
                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp] }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 30  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 35  ;   ;Description 2       ;Text50        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Description 2;
                                                              SVE=Beskrivning 2] }
    { 40  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 45  ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Unit of Measure") THEN BEGIN
                                                                  IF ("Cost Type" = "Cost Type"::Material) THEN
                                                                    IF "Unit of Measure" <>  xRec."Unit of Measure" THEN
                                                                      CheckItemUnitConversion(Rec, xRec);
                                                                  CalcTotals;
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              HandleLookupUnit;
                                                            END;

                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=M†leenhet;
                                                              SVE=M†ttenhet] }
    { 60  ;   ;Norm                ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Cost Type" = "Cost Type"::Labor) OR ("Cost Type" = "Cost Type"::Subcontracting) THEN
                                                                  CalcTotals
                                                                ELSE BEGIN
                                                                  MESSAGE(Text002, "Cost Type");
                                                                  Norm := 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Norm;
                                                              NOR=Norm;
                                                              SVE=Norm];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 70  ;   ;Rate Code           ;Code10        ;TableRelation="Budget Rate".Code;
                                                   OnValidate=BEGIN
                                                                IF "Rate Code" <> '' THEN
                                                                  ValidateRateCodeByCompany(COMPANYNAME);
                                                              END;

                                                   OnLookup=VAR
                                                              BudgetRate@1100528600 : Record 11012000;
                                                              IndexDate@1100528601 : Date;
                                                            BEGIN
                                                              IF "Index Date" = 0D THEN
                                                                IndexDate := TODAY
                                                              ELSE
                                                                IndexDate := "Index Date";

                                                              BudgetRate.SETRANGE("Starting Date", 0D, IndexDate);
                                                              BudgetRate.SETFILTER("Ending Date", '%1|>=%2', 0D, IndexDate);
                                                              IF PAGE.RUNMODAL(0, BudgetRate) = ACTION::LookupOK THEN
                                                                VALIDATE("Rate Code", BudgetRate.Code);
                                                            END;

                                                   CaptionML=[ENU=Rate Code;
                                                              NOR=Avgiftskode;
                                                              SVE=Avgiftskod] }
    { 75  ;   ;Rate                ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Cost Type" = "Cost Type"::Labor) THEN
                                                                  CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Rate;
                                                              NOR=Avgift;
                                                              SVE=Avgift];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 80  ;   ;Cost Price          ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Cost Type" = "Cost Type"::Labor) THEN BEGIN
                                                                  IF "Cost Price" <> 0 THEN BEGIN
                                                                    MESSAGE(Text005);
                                                                    "Cost Price" := 0;
                                                                  END;
                                                                END ELSE BEGIN
                                                                  CalcDiscount;
                                                                  CalcTotals;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Cost Price;
                                                              NOR=Selvkost;
                                                              SVE=Sj„lvkostnadspris];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 85  ;   ;Gross Price         ;Decimal       ;OnValidate=BEGIN
                                                                CalculateNetPrice;
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Gross Price;
                                                              NOR=Bruttopris;
                                                              SVE=Bruttopris];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 90  ;   ;Purchase Discount % ;Decimal       ;OnValidate=BEGIN
                                                                CalculateNetPrice;
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Purchase Discount %;
                                                              NOR=Innkj›psrabattprosent;
                                                              SVE=Ink”psrabattprocent];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 100 ;   ;Cost Amount         ;Decimal       ;CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 105 ;   ;Hours               ;Decimal       ;CaptionML=[ENU=Hours;
                                                              NOR="Timer ";
                                                              SVE=Timmar];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 110 ;   ;Cost Type           ;Option        ;OnValidate=BEGIN
                                                                IF "Cost Object" <> '' THEN BEGIN
                                                                  IF "Cost Type" <> xRec."Cost Type" THEN
                                                                    IF CONFIRM(Text004,TRUE) THEN BEGIN
                                                                      "Cost Object" := '';
                                                                      //Fill fields below only for cost type material
                                                                      "Item No." := '';
                                                                      "Basic Item" := '';
                                                                      "Trade Item" := '';
                                                                      Manufacturer := '';
                                                                      "Vendor (Trade Item)" := '';
                                                                    END ELSE BEGIN
                                                                      "Cost Type" := xRec."Cost Type";
                                                                      EXIT;
                                                                    END;
                                                                END;
                                                                IF ("Cost Type" = "Cost Type"::Labor) THEN BEGIN
                                                                  "Cost Price" := 0;
                                                                END ELSE BEGIN
                                                                  "Rate Code" := '';
                                                                  Rate := 0;
                                                                  Norm := 0;
                                                                END;
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Cost Type;
                                                              NOR=Kosttype;
                                                              SVE=Kostnadstyp];
                                                   OptionCaptionML=[ENU=Labor,Material,Subcontracting,Plant,Sundry;
                                                                    NOR=Arbeidskraft,Materiale,Underentrepen›r,Maskin,Diverse;
                                                                    SVE=Arbetskraft,Material,Underentreprenad,Maskin,Diverse];
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry }
    { 120 ;   ;Cost Object         ;Code20        ;TableRelation=IF (Cost Type=CONST(Labor)) "Dimension Value".Code WHERE (Cost Type=FILTER(Labor),
                                                                                                                           Global Dimension No.=CONST(2))
                                                                                                                           ELSE IF (Cost Type=CONST(Material)) "Dimension Value".Code WHERE (Cost Type=FILTER(Material),
                                                                                                                                                                                             Global Dimension No.=CONST(2))
                                                                                                                                                                                             ELSE IF (Cost Type=CONST(Plant)) "Dimension Value".Code WHERE (Cost Type=FILTER(Plant),
                                                                                                                                                                                                                                                            Global Dimension No.=CONST(2))
                                                                                                                                                                                                                                                            ELSE IF (Cost Type=CONST(Subcontracting)) "Dimension Value".Code WHERE (Cost Type=FILTER(Subcontracting),
                                                                                                                                                                                                                                                                                                                                    Global Dimension No.=CONST(2))
                                                                                                                                                                                                                                                                                                                                    ELSE IF (Cost Type=CONST(Sundry)) "Dimension Value".Code WHERE (Cost Type=FILTER(Sundry),
                                                                                                                                                                                                                                                                                                                                                                                                    Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                IF ("Cost Object" <> '') AND ("Item No." + "Trade Item" + "Basic Item" = '') THEN  //db, 17-04-08
                                                                  IF xRec."Cost Object" = '' THEN
                                                                    GetDefaultsCostObject()
                                                                  ELSE
                                                                    IF "Cost Object" <> xRec."Cost Object" THEN
                                                                      IF CONFIRM(
                                                                        Text000 +
                                                                        Text001)
                                                                      THEN
                                                                        GetDefaultsCostObject();
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostnadsobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 125 ;   ;Cost Component      ;Code20        ;TableRelation="Cost Component".Code;
                                                   CaptionML=[ENU=Cost Component;
                                                              NOR=Kostnadskomponent;
                                                              SVE=Kostnadsdel] }
    { 130 ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                IF ("Item No." <> xRec."Item No.") AND ("Item No." <> '') THEN
                                                                  ValidateItem(ItemTypeOpt::Item);
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              NOR=Artikkelnr;
                                                              SVE=Artikelnr] }
    { 140 ;   ;Basic Item          ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   OnValidate=BEGIN
                                                                IF ("Basic Item" <> xRec."Basic Item") AND ("Basic Item" <> '') THEN
                                                                  ValidateItem(ItemTypeOpt::"Basic Item");
                                                              END;

                                                   CaptionML=[ENU=Basic Item;
                                                              NOR=Fabrikantartikkel;
                                                              SVE=Basartikel] }
    { 141 ;   ;Manufacturer        ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   CaptionML=[ENU=Manufacturer;
                                                              NOR=Produsent;
                                                              SVE=Tillverkare] }
    { 150 ;   ;Trade Item          ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   OnValidate=BEGIN
                                                                IF ("Trade Item" <> xRec."Trade Item") AND ("Trade Item" <> '') THEN
                                                                  ValidateItem(ItemTypeOpt::"Trade Item");
                                                              END;

                                                   CaptionML=[ENU=Trade Item;
                                                              NOR=Katalogartikkel;
                                                              SVE=Anskaffningsartikel] }
    { 151 ;   ;Vendor (Trade Item) ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   OnValidate=VAR
                                                                TradeItemRec@1100525000 : Record 11012317;
                                                                lvExecValidate@1100485000 : Boolean;
                                                              BEGIN
                                                                IF ("Vendor (Trade Item)" <> xRec."Vendor (Trade Item)") AND ("Vendor (Trade Item)" <> '') THEN BEGIN
                                                                  IF "Basic Item" <> '' THEN BEGIN
                                                                    "Trade Item" := '';
                                                                    lvExecValidate := TRUE;
                                                                  END;
                                                                  IF "Trade Item" <> '' THEN BEGIN
                                                                    VALIDATE("Trade Item");
                                                                    lvExecValidate := TRUE;
                                                                  END;
                                                                  //db.sn, 17-12-10: M18021
                                                                  IF lvExecValidate THEN BEGIN
                                                                    IF TradeItemRec.CheckReplaceVendor(
                                                                      xRec."Vendor (Trade Item)", xRec."Trade Item",
                                                                      "Vendor (Trade Item)", "Trade Item") THEN
                                                                      ValidateItem(ItemTypeOpt::"Trade Item")
                                                                    ELSE
                                                                      ValidateItem(ItemTypeOpt::"Trade Vendor");
                                                                  END;
                                                                  //db.en, 17-12-10: M18021
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Vendor (Trade Item);
                                                              NOR=Leverand›r (katalogartikkel);
                                                              SVE=Leverant”r (skaffningsartikel)] }
    { 165 ;   ;Maintenance Relation;Code20        ;CaptionML=[ENU=Maintenance Relation;
                                                              NOR=Vedlikeholdsrelasjon;
                                                              SVE=Underh†llsrelation] }
    { 170 ;   ;Discipline          ;Code10        ;TableRelation=Discipline;
                                                   CaptionML=[ENU=Discipline;
                                                              NOR=Disiplin;
                                                              SVE=Disciplin] }
    { 171 ;   ;Trade Speciality    ;Code10        ;TableRelation="Trade Speciality".Code WHERE (Discipline=FIELD(Discipline));
                                                   CaptionML=[ENU=Trade Speciality;
                                                              NOR=SNI-nummer;
                                                              SVE=SNI-nummer] }
    { 172 ;   ;Trade Expertise     ;Code10        ;TableRelation="Trade Expertise";
                                                   OnValidate=VAR
                                                                TradeExpRec@1100525000 : Record 11020286;
                                                              BEGIN
                                                                TradeExpRec.GetRelatedValue(Discipline, "Trade Speciality", "Trade Expertise");
                                                              END;

                                                   CaptionML=[ENU=Trade Expertise;
                                                              NOR=Bransjeekspertise;
                                                              SVE=Branschexpertis] }
    { 180 ;   ;Preferred Employee  ;Code20        ;TableRelation="Resource (WOP)" WHERE (Type=CONST(Employee));
                                                   OnValidate=VAR
                                                                ResourceMgtWorkOrderPlan@1100528600 : Codeunit 11229277;
                                                              BEGIN
                                                                ResourceMgtWorkOrderPlan.TestResourceWithinCompanyPlanGroup("Preferred Employee");
                                                                CALCFIELDS("Employee Name");
                                                              END;

                                                   CaptionML=[ENU=Preferred Employee;
                                                              NOR=Foretrukket Ansatt;
                                                              SVE=F”rvald &anst„lld];
                                                   Description=DP00465, based on Resource }
    { 181 ;   ;Employee Name       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Resource (WOP)".Name WHERE (No.=FIELD(Preferred Employee)));
                                                   CaptionML=[ENU=Employee Name;
                                                              NOR=Navn p† ansatt;
                                                              SVE=Namn p† anst„lld];
                                                   Editable=No }
    { 190 ;   ;Subcontractor       ;Code20        ;TableRelation=Vendor.No. WHERE (Subcontractor Type=FILTER(Subcontractor|Self Employed|Employment Agency));
                                                   CaptionML=[ENU=Subcontractor;
                                                              NOR=Underentrepren›r;
                                                              SVE=Underentrepren”r] }
    { 191 ;   ;Subcontractor Name  ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Subcontractor)));
                                                   CaptionML=[ENU=Subcontractor Name;
                                                              NOR=Underentrepren›rens navn;
                                                              SVE=Underentrepren”rens namn];
                                                   Editable=No }
    { 200 ;   ;Vendor              ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Vendor;
                                                              NOR=Leverand›r;
                                                              SVE=Leverant”r] }
    { 201 ;   ;Vendor Name         ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor)));
                                                   CaptionML=[ENU=Vendor Name;
                                                              NOR=Leverand›rsnavn;
                                                              SVE=Leverant”rsnamn];
                                                   Editable=No }
    { 210 ;   ;Index Date          ;Date          ;OnValidate=BEGIN
                                                                //db, 12-10-10
                                                                //IF "Index Date" <> xRec."Index Date" THEN BEGIN
                                                                  CASE "Cost Type" OF
                                                                    "Cost Type"::Labor:
                                                                      VALIDATE("Rate Code");
                                                                    "Cost Type"::Material:
                                                                      BEGIN
                                                                        IF "Trade Item" <> '' THEN
                                                                          UpdateItemPrice(ItemTypeOpt::"Trade Item")
                                                                        ELSE
                                                                          IF "Basic Item" <> '' THEN
                                                                            UpdateItemPrice(ItemTypeOpt::"Basic Item")
                                                                          ELSE
                                                                            IF "Item No." <> '' THEN
                                                                              UpdateItemPrice(ItemTypeOpt::Item);
                                                                      END;
                                                                  END;
                                                                //END;

                                                                CalcTotals; //mg, 15-12-10: M24117
                                                              END;

                                                   CaptionML=[ENU=Index Date;
                                                              NOR=Indeksdato;
                                                              SVE=Indexdatum];
                                                   Description=Field of Key1 }
    { 220 ;   ;Total Hours         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Maint. Scheme Ver. Line".Hours WHERE (Level=FIELD(Level),
                                                                                                                Plant Type=FIELD(Plant Type),
                                                                                                                Plant No.=FIELD(Plant No.),
                                                                                                                Maintenance Scheme=FIELD(Maintenance Scheme),
                                                                                                                Index Date=FIELD(Index Date)));
                                                   CaptionML=[ENU=Total Hours;
                                                              NOR=Timer totalt;
                                                              SVE=Totalt timmar];
                                                   Editable=No }
    { 230 ;   ;Total Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Maint. Scheme Ver. Line"."Cost Amount" WHERE (Level=FIELD(Level),
                                                                                                                        Plant Type=FIELD(Plant Type),
                                                                                                                        Plant No.=FIELD(Plant No.),
                                                                                                                        Maintenance Scheme=FIELD(Maintenance Scheme),
                                                                                                                        Index Date=FIELD(Index Date)));
                                                   CaptionML=[ENU=Total Amount;
                                                              NOR=Totalt bel›p;
                                                              SVE=Totalt belopp];
                                                   Editable=No }
    { 240 ;   ;Additional Cost     ;Boolean       ;CaptionML=[ENU=Additional Cost;
                                                              NOR=Tilleggskoster;
                                                              SVE=Till„ggskostnader] }
    { 250 ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod] }
    { 270 ;   ;Item Type           ;Text40        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Basic Item"."Item Type" WHERE (Product Code=FIELD(Basic Item),
                                                                                                      Manufacturer=FIELD(Manufacturer)));
                                                   CaptionML=[ENU=Item Type;
                                                              NOR=Artikkeltype;
                                                              SVE=Artikeltyp];
                                                   Editable=No }
    { 271 ;   ;Item Brand          ;Text40        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Basic Item"."Item Brand" WHERE (Product Code=FIELD(Basic Item),
                                                                                                       Manufacturer=FIELD(Manufacturer)));
                                                   CaptionML=[ENU=Item Brand;
                                                              NOR=Artikkelens Varemerke;
                                                              SVE=Artikelns varum„rke];
                                                   Editable=No }
    { 272 ;   ;Item Series         ;Text40        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Basic Item"."Item Series" WHERE (Product Code=FIELD(Basic Item),
                                                                                                        Manufacturer=FIELD(Manufacturer)));
                                                   CaptionML=[ENU=Item Series;
                                                              NOR=Artikkelserier;
                                                              SVE=Artikelserier];
                                                   Editable=No }
    { 280 ;   ;Line Status         ;Code10        ;TableRelation="Line Status".Status;
                                                   CaptionML=[ENU=Line Status;
                                                              NOR=Radstatus;
                                                              SVE=Radstatus] }
    { 290 ;   ;Text Block          ;Boolean       ;CaptionML=[ENU=Text Block;
                                                              NOR=Tekstblokk;
                                                              SVE=Textblock];
                                                   Editable=No }
    { 291 ;   ;Text                ;Text250       ;OnValidate=BEGIN
                                                                "Text Block" := Text <> '';
                                                              END;

                                                   CaptionML=[ENU=Text;
                                                              NOR=Tekst;
                                                              SVE=Ben„mning] }
    { 300 ;   ;Maintenance Scheme  ;Code20        ;TableRelation="Plant Stnd. Maintenance Scheme";
                                                   CaptionML=[ENU=Maintenance Scheme;
                                                              NOR=Vedlikeholdsskjema;
                                                              SVE=Underh†llsschema];
                                                   Description=Field of Key1 }
    { 320 ;   ;Total Labor         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Maint. Scheme Ver. Line"."Cost Amount" WHERE (Level=FIELD(Level),
                                                                                                                        Plant Type=FIELD(Plant Type),
                                                                                                                        Plant No.=FIELD(Plant No.),
                                                                                                                        Maintenance Scheme=FIELD(Maintenance Scheme),
                                                                                                                        Cost Type=CONST(Labor),
                                                                                                                        Index Date=FIELD(Index Date)));
                                                   CaptionML=[ENU=Labor;
                                                              NOR=Arbeidskraft;
                                                              SVE=Arbete];
                                                   Editable=No }
    { 330 ;   ;Total Material      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Maint. Scheme Ver. Line"."Cost Amount" WHERE (Level=FIELD(Level),
                                                                                                                        Plant Type=FIELD(Plant Type),
                                                                                                                        Plant No.=FIELD(Plant No.),
                                                                                                                        Maintenance Scheme=FIELD(Maintenance Scheme),
                                                                                                                        Cost Type=CONST(Material),
                                                                                                                        Index Date=FIELD(Index Date)));
                                                   CaptionML=[ENU=Material;
                                                              NOR=Materialee;
                                                              SVE=Material];
                                                   Editable=No }
    { 340 ;   ;Total Subcontracting;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Maint. Scheme Ver. Line"."Cost Amount" WHERE (Level=FIELD(Level),
                                                                                                                        Plant Type=FIELD(Plant Type),
                                                                                                                        Plant No.=FIELD(Plant No.),
                                                                                                                        Maintenance Scheme=FIELD(Maintenance Scheme),
                                                                                                                        Cost Type=CONST(Subcontracting),
                                                                                                                        Index Date=FIELD(Index Date)));
                                                   CaptionML=[ENU=Subcontracting;
                                                              NOR=Underentrepen›r;
                                                              SVE=Underentreprenad];
                                                   Editable=No }
    { 350 ;   ;Total Plant         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Maint. Scheme Ver. Line"."Cost Amount" WHERE (Level=FIELD(Level),
                                                                                                                        Plant Type=FIELD(Plant Type),
                                                                                                                        Plant No.=FIELD(Plant No.),
                                                                                                                        Maintenance Scheme=FIELD(Maintenance Scheme),
                                                                                                                        Cost Type=CONST(Plant),
                                                                                                                        Index Date=FIELD(Index Date)));
                                                   CaptionML=[ENU=Plant;
                                                              NOR=Maskin;
                                                              SVE=Maskin];
                                                   Editable=No }
    { 360 ;   ;Total Sundry        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Maint. Scheme Ver. Line"."Cost Amount" WHERE (Level=FIELD(Level),
                                                                                                                        Plant Type=FIELD(Plant Type),
                                                                                                                        Plant No.=FIELD(Plant No.),
                                                                                                                        Maintenance Scheme=FIELD(Maintenance Scheme),
                                                                                                                        Cost Type=CONST(Sundry),
                                                                                                                        Index Date=FIELD(Index Date)));
                                                   CaptionML=[ENU=Sundry;
                                                              NOR=Diverse;
                                                              SVE=Diverse];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Level,Plant Type,Plant No.,Maintenance Scheme,Index Date,Line No.;
                                                   Clustered=Yes }
    {    ;Level,Plant Type,Plant No.,Cost Type,Maintenance Scheme;
                                                   SumIndexFields=Hours,Cost Amount }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ValidateCu@1100525001 : Codeunit 11012033;
      ItemTypeOpt@1100525000 : 'Item,Basic Item,Trade Item,Trade Vendor';
      Text000@1100525009 : TextConst 'ENU=Copy Data from new Cost Object?\\;NOR=Kopier data fra nytt Kostnadsobjekt?\\;SVE=Kopiera data fr†n nytt kostnadsobjekt?\\';
      Text001@1100525008 : TextConst 'ENU=Empty fields only will be updated. Existing data will not be overruled.;NOR=Kun tomme felt vil oppdateres. Eksisterende data vil ikke bli overstyrt.;SVE=Endast tomma f„lt kommer att uppdateras. Befintliga data kommer inte att †sidos„ttas.';
      Text002@1100525007 : TextConst 'ENU=Cost Type of Line is %1, input of norm not allowed;NOR=Kostnadstypen for raden er %1, Norm kan ikke angis;SVE=Kostnadstypen f”r raden „r %1, norm kan inte anges';
      Text003@1100525006 : TextConst 'ENU=Cost Type of line is %1, input of rate code not allowed.;NOR=Kostnadstypen for raden er %1, satskode kan ikke angis.;SVE=Kostnadstypen f”r raden „r %1, avgiftskod kan inte anges';
      Text004@1100525005 : TextConst 'ENU=Change Cost Type ?;NOR=Endre kostnadstype?;SVE=Žndra kostnadstyp?';
      Text005@1100525004 : TextConst 'ENU=Unit Price not allowed because Cost Type of this record is Labor !;NOR=Enhetsprisen er ikke tillatt siden Kostnadstypen for denne posten er arbeidskraft!;SVE=Enhetspriset „r inte till†tet eftersom kostnadstypen f”r denna post „r arbetskraft!';
      ItemRec@1100525002 : Record 27;

    PROCEDURE CalcTotals@1();
    BEGIN
      Hours := Quantity * Norm;
      IF "Cost Type" = "Cost Type"::Labor THEN BEGIN
        IF Rate = 0 THEN BEGIN
          "Cost Amount" := Quantity * "Cost Price";
        END ELSE BEGIN
          "Cost Amount" := Quantity * Norm * Rate;
        END;
      END ELSE BEGIN
        "Cost Amount" := ROUND(Quantity * "Cost Price");
      END;
    END;

    PROCEDURE CalcDiscount@1100485004();
    BEGIN
      IF "Gross Price" <> 0 THEN BEGIN
        "Purchase Discount %" := (("Gross Price" - "Cost Price") / "Gross Price") * 100;
      END;
    END;

    PROCEDURE GetDefaultsCostObject@3();
    VAR
      DimValRec@1100525000 : Record 349;
      DimMgt@1100525001 : Codeunit 408;
    BEGIN
      DimMgt.GetDimValueRec(2, "Cost Object", DimValRec, TRUE,'');

      IF Description = '' THEN
        Description := DimValRec.Name;
      IF "Unit of Measure" = '' THEN
        "Unit of Measure" := DimValRec."Unit of Measure";
      IF "Cost Component" = '' THEN
        "Cost Component" := DimValRec."Cost Component";

      "Cost Type" := DimValRec."Cost Type";
      CASE "Cost Type" OF
        "Cost Type"::Labor:
          BEGIN
            IF Norm = 0 THEN
              Norm := DimValRec.Norm;
            IF ("Rate Code" = '') AND (Rate = 0) THEN
              VALIDATE("Rate Code", DimValRec."Rate Code");
          END;
        ELSE
          IF "Cost Price" = 0 THEN
            "Cost Price" := DimValRec.Price;
      END;
      CalcTotals;
    END;

    PROCEDURE ValidateItem@31(LTypeArtOpt@11012000 : 'Item,Basic Item,Trade Item');
    VAR
      DummyDat@11012001 : Date;
      lvRefDate@1100485003 : Date;
      lvDiscRef1@1100485002 : Code[20];
      lvDiscRef2@1100485001 : Code[20];
    BEGIN
      //GetReferenceData(lvRefDate, lvDiscRef1, lvDiscRef2);
      IF "Index Date" = 0D THEN
        lvRefDate := TODAY
      ELSE
        lvRefDate := "Index Date";

      ValidateCu.ValidateItem(
        LTypeArtOpt,"Trade Item","Item No.",Manufacturer,"Vendor (Trade Item)",
        "Basic Item","Cost Object",Description,"Unit of Measure","Cost Price",
        "Purchase Discount %",DummyDat,"Gross Price","Description 2","Cost Component",
        lvDiscRef1,lvDiscRef2,lvRefDate,'');

      IF ItemRec.GET("Item No.") THEN BEGIN
        IF ItemRec.Text <> '' THEN
          VALIDATE(Text, ItemRec.Text);
      END;

      //ValidateCu.DetermineSalesDiscount(
      //  "Customer No.", "Item No.", "Basic Item", "Trade Item", Manufacturer, "Vendor (Trade Item)",
      //  "Sales Price", "Sales Discount %", "Gross Price", lvRefDate, '');

      CalcTotals;
    END;

    PROCEDURE HandleLookupUnit@1210190008();
    VAR
      ItemUnitRec@1210190000 : Record 5404;
      lvUnit@1210190001 : Code[10];
    BEGIN
      lvUnit := ItemUnitRec.HandleLookupUnit("Item No.", "Basic Item", "Trade Item", Manufacturer, "Vendor (Trade Item)");
      IF (lvUnit <> '') AND (lvUnit <> "Unit of Measure") THEN BEGIN
        xRec."Unit of Measure" := "Unit of Measure";  //db, 01-07-04: standard bug
        VALIDATE("Unit of Measure", lvUnit);
      END;
    END;

    PROCEDURE CheckItemUnitConversion@1210190010(VAR MainNewRec@1210190006 : Record 11072675;MainOldRec@1210190007 : Record 11072675);
    VAR
      ItemRec@1210190004 : Record 27;
      UnitFactor@1210190005 : Decimal;
      UnitFactorOld@1210190003 : Decimal;
      UnitFactorNew@1210190002 : Decimal;
      UnitControl@1210190001 : Codeunit 5402;
    BEGIN
      WITH MainNewRec DO BEGIN
        UnitFactorOld := 1;
        UnitFactorNew := 1;
        IF "Trade Item" <> '' THEN BEGIN
          ValidateCu.ValidateUnit(ItemTypeOpt::"Trade Item",
            "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
            Quantity,"Unit of Measure",UnitFactorNew);
        END ELSE BEGIN
          IF "Basic Item" <> '' THEN BEGIN
            ValidateCu.ValidateUnit(ItemTypeOpt::"Basic Item",
              "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
              Quantity,"Unit of Measure",UnitFactorNew);
          END ELSE BEGIN  //db, 07-04-08: M10070
            IF "Item No." <> '' THEN BEGIN
              ItemRec.GET("Item No.");
              UnitFactorOld := UnitControl.GetQtyPerUnitOfMeasure(ItemRec, MainOldRec."Unit of Measure");
              UnitFactorNew := UnitControl.GetQtyPerUnitOfMeasure(ItemRec, "Unit of Measure");
              UnitFactor := UnitFactorOld;
              ValidateCu.ValidateUnit(ItemTypeOpt::Item,
                "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
                Quantity,"Unit of Measure",UnitFactor);
            END;
          END;
        END;
        IF (UnitFactorNew * UnitFactorOld) <> 0 THEN BEGIN
          IF "Gross Price" <> 0 THEN
            VALIDATE("Gross Price", ("Gross Price" * UnitFactorNew / UnitFactorOld))
          ELSE
            VALIDATE("Cost Price", ("Cost Price" * UnitFactorNew / UnitFactorOld));
        END;
      END;
    END;

    PROCEDURE CalculateNetPrice@1210190005();
    BEGIN
      IF "Gross Price" <> 0 THEN BEGIN
        "Cost Price" := "Gross Price" - (("Gross Price"/100) * "Purchase Discount %");
      END;
    END;

    PROCEDURE CalculateGrossPrice@1100485007();
    BEGIN
      IF "Purchase Discount %" <> 100 THEN
        "Gross Price" := "Cost Price" * 100 / (100 - "Purchase Discount %");
    END;

    PROCEDURE UpdateItemPrice@1100525006(LTypeArtOpt@1100525000 : 'Item,Basic Item,Trade Item');
    VAR
      DummyDat@1100525003 : Date;
      Desc1Txt@1100525002 : Text[50];
      Desc2Txt@1100525001 : Text[50];
      lvDiscRef1@1100525005 : Code[20];
      lvDiscRef2@1100525004 : Code[20];
    BEGIN
      //db, 12-10-10
      ValidateCu.ValidateItem(
        LTypeArtOpt,"Trade Item","Item No.",Manufacturer,"Vendor (Trade Item)",
        "Basic Item","Cost Object",Desc1Txt,"Unit of Measure","Cost Price",
        "Purchase Discount %",DummyDat,"Gross Price",Desc2Txt,"Cost Component",
        lvDiscRef1,lvDiscRef2,"Index Date",'');
    END;

    PROCEDURE ValidateRateCodeByCompany@1100409000(ICompanyName@1100409000 : Text[1024]);
    VAR
      BudgetRateManagement@1100525000 : Codeunit 11012358;
      IndexDate@1100409001 : Date;
      DepartmentCode@1100525002 : Code[20];
      BudgetRateFoundAt@1100525003 : Text[250];
    BEGIN
      IF ("Cost Type" = "Cost Type"::Labor) OR ("Cost Type" = "Cost Type"::Subcontracting) THEN BEGIN
        IF "Index Date" = 0D THEN
          IndexDate := TODAY
        ELSE
          IndexDate := "Index Date";

        Rate :=
          BudgetRateManagement.GetBudgetRateByCompany(
            1, '', '', '', DepartmentCode, "Rate Code", IndexDate, ICompanyName, BudgetRateFoundAt);
        IF ("Cost Type" = "Cost Type"::Subcontracting) THEN BEGIN
          "Cost Price" := Norm * Rate;
          Rate := 0;
        END;
        CalcTotals;
      END ELSE BEGIN
        MESSAGE(Text003, "Cost Type");
        "Rate Code" := '';
      END;
    END;

    PROCEDURE SetAsCancelled@1100528600(Cancelled@1100528805 : Boolean;SourceLevel@1100528800 : 'Maintenance Scheme,Plant Type,Plant Number';SourcePlantType@1100528807 : Code[20];SourcePlantNo@1100528801 : Code[20];SourceMaintenanceScheme@1100528802 : Code[20];SourceIndexDate@1100528803 : Date);
    VAR
      CancelledPlantMaintenanceSchemeLine@1100528806 : Record 11072676;
    BEGIN
      IF Cancelled THEN BEGIN
        CancelledPlantMaintenanceSchemeLine.INIT;
        CancelledPlantMaintenanceSchemeLine.Level := SourceLevel;
        CancelledPlantMaintenanceSchemeLine."Plant Type" := SourcePlantType;
        CancelledPlantMaintenanceSchemeLine."Plant No." := SourcePlantNo;
        CancelledPlantMaintenanceSchemeLine."Maintenance Scheme" := SourceMaintenanceScheme;
        CancelledPlantMaintenanceSchemeLine."Index Date" := SourceIndexDate;

        CancelledPlantMaintenanceSchemeLine."Level (Cancelled)" := Level;
        CancelledPlantMaintenanceSchemeLine."Plant Type (Cancelled)" := "Plant Type";
        CancelledPlantMaintenanceSchemeLine."Maintenance Scheme (Cancelled)" := "Maintenance Scheme";
        CancelledPlantMaintenanceSchemeLine."Index Date (Cancelled)" := "Index Date";
        CancelledPlantMaintenanceSchemeLine."Line No. (Cancelled)" := "Line No.";
        CancelledPlantMaintenanceSchemeLine.INSERT(TRUE);
      END ELSE BEGIN
        IF CancelledPlantMaintenanceSchemeLine.GET(
          SourceLevel, SourcePlantType, SourcePlantNo, SourceMaintenanceScheme, SourceIndexDate,
          Level, "Plant Type", "Maintenance Scheme", "Index Date", "Line No.")
        THEN
          CancelledPlantMaintenanceSchemeLine.DELETE(TRUE);
      END;
    END;

    PROCEDURE IsCancelled@1100528601(SourceLevel@1100528800 : 'Maintenance Scheme,Plant Type,Plant Number';SourcePlantType@1100528806 : Code[20];SourcePlantNo@1100528801 : Code[20];SourceMaintenanceScheme@1100528802 : Code[20];SourceIndexDate@1100528803 : Date;VAR OCancellationLevel@1100528804 : ' ,Plant Type, Plant Number';PlantCompany@1100529000 : Text) : Boolean;
    VAR
      CancelledPlantMaintenanceSchemeLine@1100528805 : Record 11072676;
      PlantMaintenanceManagement@1100528807 : Codeunit 11012872;
      IndexDate@1100528808 : Date;
    BEGIN
      OCancellationLevel := OCancellationLevel::" ";
      IF PlantCompany <> '' THEN
        CancelledPlantMaintenanceSchemeLine.CHANGECOMPANY(PlantCompany);

      PlantMaintenanceManagement.GetApplicableMaintenanceSchemeIndexDate(
        SourcePlantType, SourceMaintenanceScheme, SourceIndexDate, IndexDate, SourceLevel, PlantCompany);

      IF CancelledPlantMaintenanceSchemeLine.GET(
        SourceLevel, SourcePlantType, SourcePlantNo, SourceMaintenanceScheme, IndexDate,
        Level, "Plant Type", "Maintenance Scheme", "Index Date", "Line No.")
      THEN BEGIN
        OCancellationLevel := SourceLevel;
        EXIT(TRUE);
      END;
      //Get index date for plant type level
      IndexDate := 0D;
      PlantMaintenanceManagement.GetApplicableMaintenanceSchemeIndexDate(
        SourcePlantType, SourceMaintenanceScheme, SourceIndexDate, IndexDate, SourceLevel-1, PlantCompany);

      IF SourceLevel = 2 THEN BEGIN
        IF CancelledPlantMaintenanceSchemeLine.GET(
          SourceLevel-1, SourcePlantType, '', SourceMaintenanceScheme, IndexDate,
          Level, "Plant Type", "Maintenance Scheme", "Index Date", "Line No.")
        THEN BEGIN
            OCancellationLevel := SourceLevel-1;
            EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE ShowText@8(EditableMode@1100529001 : Boolean);
    VAR
      EditTextField@1100529000 : Page 11012120;
    BEGIN
      EditTextField.SetSelection6(DATABASE::"Plant Maint. Scheme Ver. Line", Text);
      IF NOT EditableMode THEN BEGIN
        EditTextField.EDITABLE(FALSE);
        EditTextField.RUNMODAL;
      END ELSE BEGIN
        EditTextField.LOOKUPMODE(TRUE);
        IF EditTextField.RUNMODAL = ACTION::LookupOK THEN BEGIN
          IF EditTextField.GetTextField <> Text THEN
            VALIDATE(Text, EditTextField.GetTextField);
        END;
      END;
    END;

    BEGIN
    END.
  }
}

