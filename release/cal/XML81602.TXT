OBJECT XMLport 81602 Imp. Discount Letters
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Imp. Discount Term History;
               SVE=Imp. Rabattvillkorshistorik];
    DefaultFieldsValidation=No;
    OnInitXMLport=BEGIN
                    XMLNo := 81602;
                    MainTableID := 11012312;
                    GenSetupRec.GET();
                  END;

    OnPreXMLport=BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   ContactSetupRec.GET();

                   ConvMgt.DeleteConComment(XMLNo);
                   ConvMgt.CreateConComment(XMLNo,'Start');
                 END;

    OnPostXMLport=BEGIN
                    IF NOT RunIsImportRunBln THEN
                      currXMLport.BREAK;

                    ConvMgt.CreateConComment(XMLNo,'Stop');
                    ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{755F5B7F-F062-4834-8364-DC4CD51C5A62}];  ;Root                ;Element ;Text     }

    { [{A7DBD164-8D3E-4F8D-B3A0-89F91BC12205}];1 ;DiscountTermHistory ;Element ;Table   ;
                                                  SourceTable=Table11012312;
                                                  SourceTableView=SORTING(Field1,Field2,Field7,Field100,Field110,Field12);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              ClearFields;
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 ContactPerson@1100409000 : Record 5050;
                                                                               BEGIN

                                                                                 StripData;
                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Discount Term History");

                                                                                 IF NOT DiscountTermGroup.GET(DiscountTermGroup.Level::Customer,B) THEN BEGIN
                                                                                   DiscountTermGroup.VALIDATE(Level,DiscountTermGroup.Level::Customer);
                                                                                   DiscountTermGroup.VALIDATE(Code,B);
                                                                                   DiscountTermGroup.VALIDATE(Description, 'Rabattbrev '+B);
                                                                                   DiscountTermGroup.VALIDATE(Type,DiscountTermGroup.Type::Sales);
                                                                                   DiscountTermGroup.INSERT(TRUE);
                                                                                 END;

                                                                                 WITH "Discount Term History" DO BEGIN
                                                                                   IF "Discount Term History".GET(A,C,D,"Discount Level"::Customer,B,FDate) THEN BEGIN
                                                                                     VALIDATE(Description,E);
                                                                                     VALIDATE("Sales Discount Percentage",GDec);
                                                                                     VALIDATE("Sales Price",HDec);
                                                                                     MODIFY(TRUE);
                                                                                   END ELSE BEGIN
                                                                                     VALIDATE(Vendor,A);
                                                                                     VALIDATE("Discount Level","Discount Level"::Customer);
                                                                                     VALIDATE("Discount Reference",B);
                                                                                     VALIDATE("Discount Group",C);
                                                                                     VALIDATE("Item Code",D);
                                                                                     VALIDATE("Starting Date",FDate);
                                                                                     INSERT(TRUE);

                                                                                     VALIDATE(Description,E);
                                                                                     VALIDATE("Sales Discount Percentage",GDec);
                                                                                     VALIDATE("Sales Price",HDec);
                                                                                     MODIFY(TRUE);
                                                                                   END;
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{5C900A9C-2240-4551-8D3B-A67A2D629F53}];2 ;A                   ;Element ;Text     }

    { [{5E5EE9AF-296C-4B48-B3A4-71FD1D3BDBB8}];2 ;B                   ;Element ;Text     }

    { [{81EF86E1-A401-49BA-998E-C96326459340}];2 ;C                   ;Element ;Text     }

    { [{A4D141C2-7800-4941-8428-EBDFE695445E}];2 ;D                   ;Element ;Text     }

    { [{7009774A-5D5B-4893-B574-E0BA7086A95E}];2 ;E                   ;Element ;Text     }

    { [{6D383B73-6074-4E47-A9AD-E6C0CD0EBC19}];2 ;F                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF F <> '' THEN
                                                                                    EVALUATE(FDate,F);
                                                                                END;
                                                                                 }

    { [{9B36BE48-9C27-4C96-9195-FF632945DC92}];2 ;G                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF G <> '' THEN
                                                                                    EVALUATE(GDec,G);
                                                                                END;
                                                                                 }

    { [{7412CA22-6892-46CD-AD71-6DEE056E5378}];2 ;H                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF H <> '' THEN
                                                                                    EVALUATE(HDec,H);
                                                                                END;
                                                                                 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=[ENU=Lookup Main Project No. based on old Main Project No.;
                 SVE=Val av huvudprojekt baserat p† gammalt huvudprojektnr];
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                 END;

    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      "// GENERAL"@1100525045 : Integer;
      CommentRec@1100525044 : Record 97;
      ConvMgt@1100525043 : Codeunit 11020212;
      NoSerieMgt@1100525042 : Codeunit 396;
      XMLNo@1100525040 : Integer;
      MainTableID@1100525039 : Integer;
      CreateNewNosBln@1100525038 : Boolean;
      ImpLineCounter@1100525037 : Integer;
      CommentCde@1100525036 : Code[10];
      UserSetup@1100285000 : Record 91;
      ContactSetupRec@1100525035 : Record 5079;
      ConversionFileFormat@1100525033 : Record 11020691;
      RunIsImportRunBln@1100525032 : Boolean;
      xRec@1100525031 : Record 11012312;
      GenSetupRec@1100525030 : Record 98;
      FDate@1100525014 : Date;
      GDec@1100525012 : Decimal;
      HDec@1100525011 : Decimal;
      Text001@1100525016 : TextConst 'ENU=Third Dimension must be filled;SVE=Tredje dimensionen m†ste fyllas i';
      Text002@1100525015 : TextConst 'ENU=Fourth Dimension must be filled;SVE=Fj„rde dimensionen m†ste fyllas i';
      Text003@1100525010 : TextConst 'ENU="<empty>=Male, [1]=Female";SVE="<tom>=Man, [1]=Kvinna"';
      Text004@1100525009 : TextConst 'ENU=Third Dimension;SVE=Tredje dimensionen';
      Text005@1100525008 : TextConst 'ENU=Fourth Dimension;SVE=Fj„rde dimensionen';
      DiscountTermGroup@1100285001 : Record 11012338;

    PROCEDURE StripData@1100485001();
    BEGIN
      A := DELCHR(A,'<>',' ');
      B := DELCHR(B,'<>',' ');
      C := DELCHR(C,'<>',' ');
      D := DELCHR(D,'<>',' ');
      E := DELCHR(E,'<>',' ');
      F := DELCHR(F,'<>',' ');
      G := DELCHR(G,'<>',' ');
      H := DELCHR(H,'<>',' ');
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    VAR
      DefaultDimension@1100529900 : Record 352;
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //

      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,"Discount Term History".FIELDNAME(Vendor),'Code15','');
        InsertColumnLine(XMLNo,'B',MainTableID,"Discount Term History".FIELDNAME("Discount Reference"),'Code20','');
        InsertColumnLine(XMLNo,'C',MainTableID,"Discount Term History".FIELDNAME("Discount Group"),'Code35','');
        InsertColumnLine(XMLNo,'D',MainTableID,"Discount Term History".FIELDNAME("Item Code"),'Code20','');
        InsertColumnLine(XMLNo,'E',MainTableID,"Discount Term History".FIELDNAME(Description),'Text100','');
        InsertColumnLine(XMLNo,'F',MainTableID,"Discount Term History".FIELDNAME("Starting Date"),'Date','');
        InsertColumnLine(XMLNo,'G',MainTableID,"Discount Term History".FIELDNAME("Sales Discount Percentage"),'Decimal','');
        InsertColumnLine(XMLNo,'H',MainTableID,"Discount Term History".FIELDNAME("Sales Price"),'Decimal','');

      END;
    END;

    PROCEDURE ClearFields@1100529903();
    BEGIN
      CLEAR("Discount Term History");
      A := '';
      B := '';
      C := '';
      D := '';
      E := '';
      F := '';
      G := '';
      H := '';
      GDec := 0;
      HDec := 0;
      FDate := 0D;
    END;

    PROCEDURE FillConversionXMLPortFields@1100409004();
    VAR
      ConversionXMLPort@1100409000 : Record 11020640;
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      ConversionXMLPort."Main Table ID" := MainTableID;
      ConversionXMLPort."Page ID" := 11012312;
      ConversionXMLPort.MODIFY;
    END;

    BEGIN
    END.
  }
}

