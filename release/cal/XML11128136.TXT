OBJECT XMLport 11128136 Imp. Overhead Surcharges SE
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    DefaultFieldsValidation=No;
    OnInitXMLport=BEGIN
                    XMLNo := 11128136;
                    MainTableID := 11020208;
                    GenSetupRec.GET();
                  END;

    OnPreXMLport=BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   ContactSetupRec.GET();

                   ConvMgt.DeleteConComment(XMLNo);
                   ConvMgt.CreateConComment(XMLNo,'Start');
                 END;

    OnPostXMLport=BEGIN
                    IF NOT RunIsImportRunBln THEN
                      currXMLport.BREAK;

                    ConvMgt.CreateConComment(XMLNo,'Stop');
                    ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{755F5B7F-F062-4834-8364-DC4CD51C5A62}];  ;Root                ;Element ;Text     }

    { [{A7DBD164-8D3E-4F8D-B3A0-89F91BC12205}];1 ;OverheadSurcharge   ;Element ;Table   ;
                                                  SourceTable=Table11020208;
                                                  SourceTableView=SORTING(Field5,Field10);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              ClearFields;
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 ContactPerson@1100409000 : Record 5050;
                                                                               BEGIN

                                                                                 StripData;
                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Overhead Surcharge");

                                                                                 IF A <> '' THEN
                                                                                   LevelInt:=360
                                                                                 ELSE
                                                                                   LevelInt:=320;

                                                                                 CASE A OF
                                                                                   'Cost': AInt:=1;
                                                                                   'Revenue': AInt:=2;
                                                                                   'Both': AInt:=3;
                                                                                 END;

                                                                                 WITH "Overhead Surcharge" DO BEGIN

                                                                                     OverheadSurchargeCheckLine.SETRANGE(Level,LevelInt);
                                                                                     IF OverheadSurchargeCheckLine.FINDLAST THEN
                                                                                       LineNo:= OverheadSurchargeCheckLine."Line No."+10000
                                                                                     ELSE
                                                                                       LineNo:=10000;

                                                                                     VALIDATE(Level,LevelInt);
                                                                                     VALIDATE("Line No.",LineNo);

                                                                                     VALIDATE("Apply for",AInt);   //Option
                                                                                     VALIDATE(Department,D);
                                                                                     VALIDATE("Cost Type",BInt);   //Option
                                                                                     VALIDATE("Cost Component",C);
                                                                                     INSERT(TRUE);
                                                                                     VALIDATE("Starting Date",EDate);
                                                                                     VALIDATE("Ending Date",FDate);
                                                                                     VALIDATE(Description,G);
                                                                                     VALIDATE(Percentage,HDec);
                                                                                     VALIDATE(Amount,IDec);
                                                                                     VALIDATE("Surcharge over Surcharge",JBol);   //Boolean
                                                                                     VALIDATE("Source Type Cost Object",KInt);    //Option
                                                                                     VALIDATE("Cost Object Surcharge",L);
                                                                                     VALIDATE("Coverage Account",M);
                                                                                     VALIDATE("Source Type Department",NInt);     //Option
                                                                                     VALIDATE("Coverage Department",O);
                                                                                     VALIDATE("Element Surcharge",P);
                                                                                     VALIDATE("Source Type Source Code",QInt);   //Option
                                                                                     VALIDATE("Source Code Surcharge",R);
                                                                                     VALIDATE("No Surcharge over InterCompany",SBol);    //Boolean
                                                                                     VALIDATE("Only Returns",TBol);                     //Boolean
                                                                                     MODIFY(TRUE);


                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{5C900A9C-2240-4551-8D3B-A67A2D629F53}];2 ;A                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  //IF A<>'' THEN
                                                                                    //currXMLport.SKIP;
                                                                                END;
                                                                                 }

    { [{5E5EE9AF-296C-4B48-B3A4-71FD1D3BDBB8}];2 ;B                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  //IF B='Kostnadstyp' THEN
                                                                                    //currXMLport.SKIP;

                                                                                  CASE B OF
                                                                                    'Labor': BInt:=0;
                                                                                    'Material': BInt:=1;
                                                                                    'Subcontracting': BInt:=2;
                                                                                    'Plant': BInt:=3;
                                                                                    'Sundry': BInt:=4;
                                                                                    'Revenues': BInt:=5;
                                                                                    'Arbetskraft': BInt:=0;
                                                                                    'Material':BInt:=1;
                                                                                    'Underentreprenad':BInt:=2;
                                                                                    'Maskin':BInt:=3;
                                                                                    'Diverse':BInt:=4;
                                                                                    'Int„kter':BInt:=5;
                                                                                  END;
                                                                                END;
                                                                                 }

    { [{81EF86E1-A401-49BA-998E-C96326459340}];2 ;C                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF C <> '' THEN
                                                                                    A:='Cost';
                                                                                END;
                                                                                 }

    { [{A4D141C2-7800-4941-8428-EBDFE695445E}];2 ;D                   ;Element ;Text     }

    { [{7009774A-5D5B-4893-B574-E0BA7086A95E}];2 ;E                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF E <> '' THEN
                                                                                    EVALUATE(EDate,E);
                                                                                END;
                                                                                 }

    { [{6D383B73-6074-4E47-A9AD-E6C0CD0EBC19}];2 ;F                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF F <> '' THEN
                                                                                    EVALUATE(FDate,F);
                                                                                END;
                                                                                 }

    { [{9B36BE48-9C27-4C96-9195-FF632945DC92}];2 ;G                   ;Element ;Text     }

    { [{5E6C82BE-3B23-4498-A0D3-23F6627AF726}];2 ;H                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF H <> '' THEN
                                                                                    EVALUATE(HDec,H);
                                                                                END;
                                                                                 }

    { [{B7FB4965-AE3D-47C6-912B-AF9E42DA83C5}];2 ;I                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF I <> '' THEN
                                                                                    EVALUATE(IDec,I);
                                                                                END;
                                                                                 }

    { [{D1957C4D-6633-4F03-B834-7A57BE222D76}];2 ;J                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF J = 'Nej' THEN
                                                                                    JBol:=FALSE
                                                                                  ELSE
                                                                                    JBol:=TRUE;
                                                                                END;
                                                                                 }

    { [{344C4D81-2247-4F89-A437-05D0077EC9F4}];2 ;K                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN

                                                                                  CASE K OF
                                                                                    'Fixed': KInt:=0;
                                                                                    'Original Posting': KInt:=1;
                                                                                    'Fast': KInt:=0;
                                                                                    'Ursprunglig bokf”ring': KInt:=1;

                                                                                  END;
                                                                                END;
                                                                                 }

    { [{D66984A4-74CE-4876-AE64-0B0C3A9153B5}];2 ;L                   ;Element ;Text     }

    { [{323F4E1B-EBC2-486A-9644-78A476F41394}];2 ;M                   ;Element ;Text     }

    { [{065183AA-2325-4AEC-889A-A55879E6B232}];2 ;N                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN

                                                                                  CASE N OF
                                                                                    'Employee': NInt:=0;
                                                                                    'Job': NInt:=1;
                                                                                    'Fixed': NInt:= 2;
                                                                                    'Anst„lld':NInt:=0;
                                                                                    'Jobb':NInt:=1;
                                                                                    'Fast': NInt:=2;
                                                                                  END;
                                                                                END;
                                                                                 }

    { [{9037EE38-7A60-4292-9869-E82030D07F9B}];2 ;O                   ;Element ;Text     }

    { [{8CA86319-A176-4B2A-94DB-F1FCD7F62469}];2 ;P                   ;Element ;Text     }

    { [{FF588C2C-0872-40B8-9703-23C570A1CF23}];2 ;Q                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CASE Q OF
                                                                                    'Fixed': QInt:=0;
                                                                                    'Original Posting': QInt:=1;
                                                                                    'Fast': QInt:=0;
                                                                                    'Ursprunglig bokf”ring': QInt:=1;
                                                                                  END;
                                                                                END;
                                                                                 }

    { [{4FC1B167-544A-461E-8B81-4D09DDCDCC4D}];2 ;R                   ;Element ;Text     }

    { [{191AE74C-5446-4749-8A77-6ACACAE00266}];2 ;S                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF S = 'Nej' THEN
                                                                                    SBol:=FALSE
                                                                                  ELSE
                                                                                    SBol:=TRUE;
                                                                                END;
                                                                                 }

    { [{5C355A30-958B-43AD-853F-9432307E9EAF}];2 ;T                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF T = 'Nej' THEN
                                                                                    TBol:=FALSE
                                                                                  ELSE
                                                                                    TBol:=TRUE;
                                                                                END;
                                                                                 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=[ENU=Lookup Main Project No. based on old Main Project No.;
                 SVE=Val av huvudprojekt baserat p† gammalt huvudprojektnr];
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                 END;

    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      "// GENERAL"@1100525045 : Integer;
      CommentRec@1100525044 : Record 97;
      ConvMgt@1100525043 : Codeunit 11020212;
      NoSerieMgt@1100525042 : Codeunit 396;
      XMLNo@1100525040 : Integer;
      MainTableID@1100525039 : Integer;
      CreateNewNosBln@1100525038 : Boolean;
      ImpLineCounter@1100525037 : Integer;
      CommentCde@1100525036 : Code[10];
      UserSetup@1100285000 : Record 91;
      ContactSetupRec@1100525035 : Record 5079;
      ConversionFileFormat@1100525033 : Record 11020691;
      RunIsImportRunBln@1100525032 : Boolean;
      xRec@1100525031 : Record 11012312;
      GenSetupRec@1100525030 : Record 98;
      Text001@1100525016 : TextConst 'ENU=Third Dimension must be filled;SVE=Tredje dimensionen m†ste fyllas i';
      Text002@1100525015 : TextConst 'ENU=Fourth Dimension must be filled;SVE=Fj„rde dimensionen m†ste fyllas i';
      Text003@1100525010 : TextConst 'ENU="<empty>=Male, [1]=Female";SVE="<tom>=Man, [1]=Kvinna"';
      Text004@1100525009 : TextConst 'ENU=Third Dimension;SVE=Tredje dimensionen';
      Text005@1100525008 : TextConst 'ENU=Fourth Dimension;SVE=Fj„rde dimensionen';
      ExceptionalSalesPriceDate@1100285501 : Record 11020389;
      TableID2@1100285502 : Integer;
      ProjCommentCde@1100285505 : Code[20];
      UseOldProjNoBln@1100285503 : Boolean;
      ProjCde@1100285504 : Code[20];
      EDate@1100285506 : Date;
      FDate@1100285507 : Date;
      HDec@1100285508 : Decimal;
      IDec@1100285509 : Decimal;
      LevelInt@1100285510 : Integer;
      LineNo@1100285511 : Integer;
      OverheadSurchargeCheckLine@1100285512 : Record 11020208;
      AInt@1100285513 : Integer;
      BInt@1100285500 : Integer;
      JBol@1100285514 : Boolean;
      TBol@1100285515 : Boolean;
      SBol@1100285516 : Boolean;
      KInt@1100285517 : Integer;
      NInt@1100285518 : Integer;
      QInt@1100285519 : Integer;

    PROCEDURE StripData@1100485001();
    BEGIN
      A := DELCHR(A,'<>',' ');
      B := DELCHR(B,'<>',' ');
      C := DELCHR(C,'<>',' ');
      D := DELCHR(D,'<>',' ');
      E := DELCHR(E,'<>',' ');
      F := DELCHR(F,'<>',' ');
      G := DELCHR(G,'<>',' ');
      H := DELCHR(H,'<>',' ');
      I := DELCHR(I,'<>',' ');
      J := DELCHR(J,'<>',' ');
      K := DELCHR(K,'<>',' ');
      L := DELCHR(L,'<>',' ');
      M := DELCHR(M,'<>',' ');
      N := DELCHR(N,'<>',' ');
      O := DELCHR(O,'<>',' ');
      P := DELCHR(P,'<>',' ');
      Q := DELCHR(Q,'<>',' ');
      R := DELCHR(R,'<>',' ');
      S := DELCHR(S,'<>',' ');
      T := DELCHR(T,'<>',' ');
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    VAR
      DefaultDimension@1100529900 : Record 352;
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //

      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,"Overhead Surcharge".FIELDNAME("Apply for"),'Option','');
        InsertColumnLine(XMLNo,'B',MainTableID,"Overhead Surcharge".FIELDNAME("Cost Type"),'Option','');
        InsertColumnLine(XMLNo,'C',MainTableID,"Overhead Surcharge".FIELDNAME("Cost Component"),'Code10','');
        InsertColumnLine(XMLNo,'D',MainTableID,"Overhead Surcharge".FIELDNAME(Department),'Code20','');
        InsertColumnLine(XMLNo,'E',MainTableID,"Overhead Surcharge".FIELDNAME("Starting Date"),'Date','');
        InsertColumnLine(XMLNo,'F',MainTableID,"Overhead Surcharge".FIELDNAME("Ending Date"),'Date','');
        InsertColumnLine(XMLNo,'G',MainTableID,"Overhead Surcharge".FIELDNAME(Description),'Text30','');
        InsertColumnLine(XMLNo,'H',MainTableID,"Overhead Surcharge".FIELDNAME(Percentage),'Decimal','');
        InsertColumnLine(XMLNo,'I',MainTableID,"Overhead Surcharge".FIELDNAME(Amount),'Decimal','');
        InsertColumnLine(XMLNo,'J',MainTableID,"Overhead Surcharge".FIELDNAME("Surcharge over Surcharge"),'Boolean','');
        InsertColumnLine(XMLNo,'K',MainTableID,"Overhead Surcharge".FIELDNAME("Source Type Cost Object"),'Option','');
        InsertColumnLine(XMLNo,'L',MainTableID,"Overhead Surcharge".FIELDNAME("Cost Object Surcharge"),'Code20','');
        InsertColumnLine(XMLNo,'M',MainTableID,"Overhead Surcharge".FIELDNAME("Coverage Account"),'Code20','');
        InsertColumnLine(XMLNo,'N',MainTableID,"Overhead Surcharge".FIELDNAME("Source Type Department"),'Option','');
        InsertColumnLine(XMLNo,'O',MainTableID,"Overhead Surcharge".FIELDNAME("Coverage Department"),'Code20','');
        InsertColumnLine(XMLNo,'P',MainTableID,"Overhead Surcharge".FIELDNAME("Element Surcharge"),'Code20','');
        InsertColumnLine(XMLNo,'Q',MainTableID,"Overhead Surcharge".FIELDNAME("Source Type Source Code"),'Option','');
        InsertColumnLine(XMLNo,'R',MainTableID,"Overhead Surcharge".FIELDNAME("Source Code Surcharge"),'Code20','');
        InsertColumnLine(XMLNo,'S',MainTableID,"Overhead Surcharge".FIELDNAME("No Surcharge over InterCompany"),'Boolean','');
        InsertColumnLine(XMLNo,'T',MainTableID,"Overhead Surcharge".FIELDNAME("Only Returns"),'Boolean','');

      END;
    END;

    PROCEDURE ClearFields@1100529903();
    BEGIN

      CLEAR("Overhead Surcharge");
      A := '';
      B := '';
      C := '';
      D := '';
      E := '';
      F := '';
      G := '';
      H := '';
      I := '';
      J := '';
      K := '';
      L := '';
      M := '';
      N := '';
      O := '';
      P := '';
      Q := '';
      R := '';
      S := '';
      T := '';


      FDate := 0D;
      EDate := 0D;
      HDec := 0;
      IDec := 0;
      AInt:=0;
      BInt:=0;
      JBol:=FALSE;
      TBol:=FALSE;
      SBol:=FALSE;
      KInt:=0;
      NInt:=0;
      QInt:=0;
    END;

    PROCEDURE FillConversionXMLPortFields@1100409004();
    VAR
      ConversionXMLPort@1100409000 : Record 11020640;
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      ConversionXMLPort."Main Table ID" := MainTableID;
      ConversionXMLPort."Page ID" := 11072455;
      ConversionXMLPort.MODIFY;
    END;

    BEGIN
    END.
  }
}

