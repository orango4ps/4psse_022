OBJECT Page 802 Online Map Address Selector
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.01,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Online Map Address Selector;
               NOR=Adressevelger for Online Map;
               SVE=Online Map - adressv„ljare];
    PageType=StandardDialog;
    OnOpenPage=BEGIN
                 OnlineMapSetup.GET;
                 Distance := OnlineMapSetup."Distance In";
                 Route := OnlineMapSetup.Route;
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1020000;1;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=Allm„nt] }

    { 1020006;2;Field     ;
                Name=LookupSelection;
                CaptionML=[ENU=Table Selection;
                           NOR=Tabellvalg;
                           SVE=Tabellval];
                OptionCaptionML=[ENU=" ,Bank,Contact,Customer,Employee,Job,Location,Resource,Vendor,Ship-to Address,Order Address,,,,,,,,,Service Location,Service Contract,Service Call,Service Order";
                                 NOR=" ,Bank,Kontakt,Kunde,Ansatt,Prosjekt,Lokasjon,Ressurs,Leverand›r,Lever til-adresse,Bestillingsadresse";
                                 SVE=" ,Bank,Kontakt,Kund,Anst„lld,Projekt,Lagerst„lle,Resurs,Leverant”r,Leveransadress,Ink”psadress,,,,,,,,,Serviceplats,Servicekontrakt,Servicesamtal,Serviceorder"];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=LookupSelection;
                OnValidate=BEGIN
                             LookupSelectionOnAfterValidate;
                           END;
                            }

    { 1020001;2;Field     ;
                Name=LookupCode;
                CaptionML=[ENU=Lookup Code;
                           NOR=Oppslagskode;
                           SVE=S”kkod];
                ToolTipML=[ENU=Specifies a list of contact, customer, or location codes to choose from.;
                           NOR=Angir en liste over kontakt-, kunde- eller lokasjonskoder du kan velge blant.;
                           SVE=Anger en lista med kontakt-, kund- eller lagerst„llekoder att v„lja mellan.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=LookupCode;
                OnValidate=BEGIN
                             SelectedRecPosition := LoadLocationLookup(SelectedTableNo,LookupCode,FALSE);
                           END;

                OnLookup=BEGIN
                           SelectedRecPosition := LoadLocationLookup(SelectedTableNo,LookupCode,TRUE);
                         END;
                          }

    { 1   ;2   ;Field     ;
                CaptionML=[ENU=Distance In;
                           NOR=Avstand i;
                           SVE=Avst†nd i];
                ToolTipML=[ENU=Specifies if distances on the online map are shown in miles or kilometers.;
                           NOR=Angir om avstander p† det elektroniske kartet vises i miles eller kilometer.;
                           SVE=Anger om avst†nden i Online Map ska visas i miles eller kilometer.];
                OptionCaptionML=[ENU=Miles,Kilometers;
                                 NOR=Miles,Kilometer;
                                 SVE=Miles,Kilometer];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Distance }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=Route;
                           NOR=Rute;
                           SVE=V„g];
                OptionCaptionML=[ENU=Quickest,Shortest;
                                 NOR=Raskest,Kortest;
                                 SVE=Snabbaste,Kortaste];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Route }

  }
  CODE
  {
    VAR
      OnlineMapSetup@1002 : Record 800;
      SelectedRecPosition@1004 : Text[1000];
      LookupCode@1020001 : Code[20];
      LookupSelection@1020003 : ' ,Bank,Contact,Customer,Employee,Job,Location,Resource,Vendor,Ship-to Address,Order Address,,,,,,,,,ServLocation,ServContract,ServCall,ServOrder';
      Text001@1020007 : TextConst 'ENU=The selection that was chosen is not valid.;NOR=Det angitte valget er ikke gyldig.;SVE=Urvalet „r inte giltigt.';
      Text003@1020004 : TextConst 'ENU=The value %1 from Table ID %2 could not be found.;NOR=Fant ikke verdien %1 fra tabell-IDen %2.;SVE=Det gick inte att hitta v„rdet %1 fr†n tabellen med ID:t %2.';
      Distance@1000 : 'Miles,Kilometers';
      Route@1001 : 'Quickest,Shortest';
      SelectedTableNo@1007 : Integer;
      Text004@1009 : TextConst 'ENU=Table No. %1 is not set up.;NOR=Tabell nr. %1 er ikke konfigurert.;SVE=Tabellen med nr %1 har inte konfigurerats.';

    [External]
    PROCEDURE GetTableNo@1020001() : Integer;
    BEGIN
      EXIT(SelectedTableNo);
    END;

    [External]
    PROCEDURE GetRecPosition@1020002() : Text[1000];
    BEGIN
      EXIT(SelectedRecPosition);
    END;

    [External]
    PROCEDURE SetTableNo@1020000();
    VAR
      IsHandled@1000 : Boolean;
    BEGIN
      CASE LookupSelection OF
        LookupSelection::" ":
          SelectedTableNo := 0;
        LookupSelection::Bank:
          SelectedTableNo := DATABASE::"Bank Account";
        LookupSelection::Contact:
          SelectedTableNo := DATABASE::Contact;
        LookupSelection::Customer:
          SelectedTableNo := DATABASE::Customer;
        LookupSelection::Employee:
          SelectedTableNo := DATABASE::Employee;
        LookupSelection::Job:
          SelectedTableNo := DATABASE::Job;
        LookupSelection::Location:
          SelectedTableNo := DATABASE::Location;
        LookupSelection::Resource:
          SelectedTableNo := DATABASE::Resource;
        LookupSelection::Vendor:
          SelectedTableNo := DATABASE::Vendor;
        LookupSelection::"Ship-to Address":
          SelectedTableNo := DATABASE::"Ship-to Address";
        LookupSelection::"Order Address":
          SelectedTableNo := DATABASE::"Order Address";
        //**4PS.sn
        LookupSelection::ServLocation:
          SelectedTableNo := DATABASE::"Service Location";
        LookupSelection::ServContract:
          SelectedTableNo := DATABASE::"Service-Contract";
        LookupSelection::ServCall:
          SelectedTableNo := DATABASE::"Service Call";
        LookupSelection::ServOrder:
          SelectedTableNo := DATABASE::"Service Order";
        //**4PS.en
        ELSE BEGIN
          IsHandled := FALSE;
          OnSetTableNoElseCase(LookupSelection,SelectedTableNo,IsHandled);
          IF NOT IsHandled THEN
            ERROR(Text001);
        END;
      END;
    END;

    LOCAL PROCEDURE LoadLocationLookup@1020012(LoadTableNo@1020011 : Integer;VAR LookupCode@1020013 : Code[20];Lookup@1020014 : Boolean) : Text[1000];
    VAR
      SelectedRecPosition@1001 : Text;
      IsHandled@1000 : Boolean;
    BEGIN
      CASE LoadTableNo OF
        DATABASE::"Bank Account":
          EXIT(LoadBankAccount(LookupCode,Lookup));
        DATABASE::Contact:
          EXIT(LoadContact(LookupCode,Lookup));
        DATABASE::Customer:
          EXIT(LoadCustomer(LookupCode,Lookup));
        DATABASE::Employee:
          EXIT(LoadEmployee(LookupCode,Lookup));
        DATABASE::Job:
          EXIT(LoadJob(LookupCode,Lookup));
        DATABASE::Location:
          EXIT(LoadLocation(LookupCode,Lookup));
        DATABASE::Resource:
          EXIT(LoadResource(LookupCode,Lookup));
        DATABASE::Vendor:
          EXIT(LoadVendor(LookupCode,Lookup));
        DATABASE::"Ship-to Address":
          EXIT(LoadShipTo(LookupCode,Lookup));
        DATABASE::"Order Address":
          EXIT(LoadOrderAddress(LookupCode,Lookup));
        //**4PS.sn
        DATABASE::"Service Location":
          EXIT(LoadServLocation(LookupCode,Lookup));
        DATABASE::"Service-Contract":
          EXIT(LoadServContract(LookupCode,Lookup));
        DATABASE::"Service Call":
          EXIT(LoadServCall(LookupCode,Lookup));
        DATABASE::"Service Order":
          EXIT(LoadServOrder(LookupCode,Lookup));
        //**4PS.en
        ELSE BEGIN
          OnLoadLocationLookupElseCase(LoadTableNo,LookupCode,Lookup,SelectedRecPosition,IsHandled);
          IF IsHandled THEN
            EXIT(SelectedRecPosition);

          ERROR(Text004,FORMAT(LoadTableNo));
        END;
      END;
    END;

    LOCAL PROCEDURE LoadBankAccount@1020011(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      BankAccount@1020002 : Record 270;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Bank Account List",BankAccount) = ACTION::LookupOK
      ELSE
        Response := BankAccount.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := BankAccount."No.";
        EXIT(BankAccount.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::"Bank Account");
    END;

    LOCAL PROCEDURE LoadContact@1020010(VAR LookUpCode@1020000 : Code[20];LookUp@1020001 : Boolean) : Text[1000];
    VAR
      Contact@1020002 : Record 5050;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Contact List",Contact) = ACTION::LookupOK
      ELSE
        Response := Contact.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Contact."No.";
        EXIT(Contact.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::Contact);
    END;

    LOCAL PROCEDURE LoadCustomer@1020009(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Customer@1020002 : Record 18;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Customer List",Customer) = ACTION::LookupOK
      ELSE
        Response := Customer.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Customer."No.";
        EXIT(Customer.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::Customer);
    END;

    LOCAL PROCEDURE LoadEmployee@1020004(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Employee@1020002 : Record 5200;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Employee List",Employee) = ACTION::LookupOK
      ELSE
        Response := Employee.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Employee."No.";
        EXIT(Employee.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::Employee);
    END;

    LOCAL PROCEDURE LoadJob@1020006(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Job@1020002 : Record 11072003;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Job List",Job) = ACTION::LookupOK
      ELSE
        Response := Job.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Job."No.";
        EXIT(Job.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::Job);
    END;

    LOCAL PROCEDURE LoadLocation@1020007(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Location@1020002 : Record 14;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Location List",Location) = ACTION::LookupOK
      ELSE
        Response := Location.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Location.Code;
        EXIT(Location.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::Location);
    END;

    LOCAL PROCEDURE LoadResource@1020008(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Resource@1020002 : Record 156;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Resource List",Resource) = ACTION::LookupOK
      ELSE
        Response := Resource.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Resource."No.";
        EXIT(Resource.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::Resource);
    END;

    LOCAL PROCEDURE LoadVendor@1020015(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Vendor@1020002 : Record 23;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Vendor List",Vendor) = ACTION::LookupOK
      ELSE
        Response := Vendor.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Vendor."No.";
        EXIT(Vendor.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::Vendor);
    END;

    LOCAL PROCEDURE LoadShipTo@2(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      ShipToAddress@1020002 : Record 222;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        //Response := PAGE.RUNMODAL(PAGE::"Ship-to Address List",ShipToAddress) = ACTION::LookupOK //**4PS.o
        Response := PAGE.RUNMODAL(PAGE::"Address List",ShipToAddress) = ACTION::LookupOK //**4PS.n
      ELSE
        Response := ShipToAddress.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := ShipToAddress.Code;
        EXIT(ShipToAddress.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::"Ship-to Address");
    END;

    LOCAL PROCEDURE LoadOrderAddress@4(VAR LookupCode@1000 : Code[20];LookUp@1001 : Boolean) : Text[1000];
    VAR
      OrderAddress@1003 : Record 224;
      Response@1002 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Order Address List",OrderAddress) = ACTION::LookupOK
      ELSE
        Response := OrderAddress.GET(LookupCode);

      IF Response THEN BEGIN
        LookupCode := OrderAddress.Code;
        EXIT(OrderAddress.GETPOSITION);
      END;
      ERROR(Text003,LookupCode,DATABASE::"Order Address");
    END;

    [External]
    PROCEDURE Getdefaults@1(VAR ActualDistance@1001 : 'Miles,Kilometers';VAR ActualRoute@1000 : 'Quickest,Shortest');
    BEGIN
      ActualDistance := Distance;
      ActualRoute := Route;
    END;

    LOCAL PROCEDURE LookupSelectionOnAfterValidate@19004184();
    BEGIN
      SetTableNo;
    END;

    [Integration]
    LOCAL PROCEDURE OnLoadLocationLookupElseCase@3(LoadTableNo@1002 : Integer;VAR LookupCode@1001 : Code[20];Lookup@1000 : Boolean;VAR SelectedRecPosition@1003 : Text;VAR IsHandled@1004 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnSetTableNoElseCase@8(LookupSelection@1000 : Option;VAR SelectedTableNo@1001 : Integer;VAR IsHandled@1002 : Boolean);
    BEGIN
    END;

    PROCEDURE LoadServLocation@1100409000(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      ServLocation@1020002 : Record 11012801;
      Response@1020003 : Boolean;
    BEGIN
      //**4PS
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Service Location List",ServLocation) = ACTION::LookupOK
      ELSE
        Response := ServLocation.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := ServLocation."No.";
        EXIT(ServLocation.GETPOSITION)
      END ELSE
        ERROR(Text003,LookUpCode,DATABASE::"Service Location");
    END;

    PROCEDURE LoadServContract@1100409001(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      ServContract@1020002 : Record 11012812;
      Response@1020003 : Boolean;
    BEGIN
      //**4PS
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Service Contracts List",ServContract) = ACTION::LookupOK
      ELSE
        Response := ServContract.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := ServContract."No.";
        EXIT(ServContract.GETPOSITION)
      END ELSE
        ERROR(Text003,LookUpCode,DATABASE::"Service-Contract");
    END;

    PROCEDURE LoadServCall@1100409002(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      ServCall@1020002 : Record 11012822;
      Response@1020003 : Boolean;
    BEGIN
      //**4PS
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Service Call List",ServCall) = ACTION::LookupOK
      ELSE
        Response := ServCall.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := ServCall."No.";
        EXIT(ServCall.GETPOSITION)
      END ELSE
        ERROR(Text003,LookUpCode,DATABASE::"Service Call");
    END;

    PROCEDURE LoadServOrder@1100409003(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      ServOrder@1020002 : Record 11012823;
      Response@1020003 : Boolean;
    BEGIN
      //**4PS
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Service-Order List",ServOrder) = ACTION::LookupOK
      ELSE
        Response := ServOrder.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := ServOrder."No.";
        EXIT(ServOrder.GETPOSITION)
      END ELSE
        ERROR(Text003,LookUpCode,DATABASE::"Service Order");
    END;

    BEGIN
    END.
  }
}

