OBJECT Table 11012761 Try-out Successor
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Try-out Successor;
               NOR=Etterf›lger (prospekt);
               SVE=Efterf”ljare, anbud];
    LookupPageID=Page11012770;
  }
  FIELDS
  {
    { 10  ;   ;Try-out No.         ;Code20        ;TableRelation=Try-out;
                                                   CaptionML=[ENU=Try-out No.;
                                                              NOR=Prospektnr.;
                                                              SVE=Anbudsnr] }
    { 15  ;   ;Try-out Quote       ;Code20        ;TableRelation="Try-out Quote";
                                                   CaptionML=[ENU=Try-out Quote;
                                                              NOR=Tilbudsforesp›rsel;
                                                              SVE=Anbudsf”rfr†gan] }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 30  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   OnValidate=BEGIN
                                                                CRMSetup.GET;
                                                                IF NOT CRMSetup."Generate Project allowed" THEN
                                                                  IF TryoutRec.GET("Try-out No.") THEN
                                                                    TryoutRec.TESTFIELD(Order,TRUE);

                                                                IF "Extension Contract" <> '' THEN
                                                                  IF NOT ExtContractRec.GET("Project No.", ExtContractRec."Contract No.") THEN
                                                                    "Extension Contract" := '';
                                                              END;

                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr] }
    { 40  ;   ;Project Description ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Project Description;
                                                              NOR=Prosjektbeskrivelse;
                                                              SVE=Projektbeskrivning];
                                                   Editable=No }
    { 50  ;   ;Estimate No.        ;Code20        ;TableRelation=Estimate.No.;
                                                   CaptionML=[ENU=Estimate No.;
                                                              NOR=Kalkylenr;
                                                              SVE=Kalkylnr] }
    { 60  ;   ;Estimate Description;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Estimate.Description WHERE (No.=FIELD(Estimate No.)));
                                                   CaptionML=[ENU=Estimate Description;
                                                              NOR=Kalkylebeskrivelse;
                                                              SVE=Kalkylbeskrivning];
                                                   Editable=No }
    { 61  ;   ;Estimate Description 2;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Estimate."Description 2" WHERE (No.=FIELD(Estimate No.)));
                                                   CaptionML=ENU=Estimate Description 2;
                                                   Editable=No }
    { 70  ;   ;Estimate Finished   ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Estimate.Finished WHERE (No.=FIELD(Estimate No.)));
                                                   CaptionML=[ENU=Estimate Finished;
                                                              NOR=Kalkyle ferdig;
                                                              SVE=Kalkyl f„rdig];
                                                   Editable=No }
    { 80  ;   ;Service Location No.;Code20        ;TableRelation="Service Location".No.;
                                                   OnValidate=VAR
                                                                ServiceObject@1100525000 : Record 11071691;
                                                              BEGIN
                                                                IF ServiceObject.GET("Service Object No.") THEN
                                                                  IF ServiceObject."Service Location No." <> "Service Location No." THEN
                                                                    VALIDATE("Service Object No.", '');

                                                                UpdateBuildingCode;
                                                              END;

                                                   OnLookup=VAR
                                                              ServiceObject@1100525000 : Record 11071691;
                                                              ServiceLocation@1100525001 : Record 11012801;
                                                            BEGIN
                                                              IF ServiceObject.GET("Service Object No.") THEN
                                                                IF ServiceLocation.GET(ServiceObject."Service Location No.") THEN
                                                                  ServiceLocation.SETRANGE("No.", ServiceLocation."No.");
                                                              IF PAGE.RUNMODAL(0, ServiceLocation) = ACTION::LookupOK THEN
                                                                VALIDATE("Service Location No.", ServiceLocation."No.");
                                                            END;

                                                   CaptionML=[ENU=Service Location No.;
                                                              NOR=Servicelokasjon Nr.;
                                                              SVE=Serviceplatsnr] }
    { 90  ;   ;Service Location Description;Text50;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Location".Description WHERE (No.=FIELD(Service Location No.)));
                                                   CaptionML=[ENU=Service Location Description;
                                                              NOR=Servicelokasjonbeskrivelse;
                                                              SVE=Serviceplatsbeskrivning];
                                                   Editable=No }
    { 100 ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract.No.;
                                                   CaptionML=[ENU=Service Contract No.;
                                                              NOR=Servicekontraktnr;
                                                              SVE=Servicekontraktnr] }
    { 110 ;   ;Service Contract Description;Text50;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Service-Contract.Description WHERE (No.=FIELD(Service Contract No.)));
                                                   CaptionML=[ENU=Service Contract Description;
                                                              NOR=Servicekontraktsbeskrivelse;
                                                              SVE=Servicekontraktsbeskrivning];
                                                   Editable=No }
    { 120 ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order".No.;
                                                   CaptionML=[ENU=Service Order No.;
                                                              NOR=Serviceordrenr.;
                                                              SVE=Serviceordernr] }
    { 130 ;   ;Service Order Description;Text50   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Order".Description WHERE (No.=FIELD(Service Order No.)));
                                                   CaptionML=[ENU=Service Order Description;
                                                              NOR=Serviceordre Beskrivelse;
                                                              SVE=Serviceorder beskrivning];
                                                   Editable=No }
    { 140 ;   ;Extension Contract  ;Code10        ;TableRelation="Extension Contract"."Contract No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=Extension Contract;
                                                              NOR=ETA;
                                                              SVE=ŽTA] }
    { 150 ;   ;Leading Estimate    ;Boolean       ;OnValidate=BEGIN
                                                                IF "Leading Estimate" THEN
                                                                  TESTFIELD("Estimate No.");
                                                              END;

                                                   CaptionML=[ENU=Leading Estimate;
                                                              NOR=Innledende kalkyle;
                                                              SVE=Inledande kalkyl] }
    { 160 ;   ;Service Survey No.  ;Code20        ;TableRelation="Service Survey";
                                                   CaptionML=[ENU=Service Survey No.;
                                                              NOR=Servicekartleggingsnr.;
                                                              SVE=Servicekartl„ggningsnr] }
    { 170 ;   ;Service Survey Description;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Survey".Description WHERE (No.=FIELD(Service Survey No.)));
                                                   CaptionML=[ENU=Service Survey Description;
                                                              NOR=Servicekartlegging, Beskrivelse;
                                                              SVE=Srv.kartl, beskrivning];
                                                   Editable=No }
    { 180 ;   ;Building Code       ;Code20        ;TableRelation=Building;
                                                   CaptionML=[ENU=Building;
                                                              NOR=Byggning;
                                                              SVE=Byggnad] }
    { 190 ;   ;Building Description;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Building.Description WHERE (Code=FIELD(Building Code)));
                                                   CaptionML=[ENU=Building Description;
                                                              NOR=Beskrivelse Bygning;
                                                              SVE=Beskrivning Byggnad];
                                                   Editable=No }
    { 200 ;   ;Service Object No.  ;Code20        ;TableRelation=Service-Object.No.;
                                                   OnValidate=VAR
                                                                ServiceObject@1100525001 : Record 11071691;
                                                                ServiceLocation@1100525000 : Record 11012801;
                                                              BEGIN
                                                                IF ServiceObject.GET("Service Object No.") THEN
                                                                  IF ServiceLocation.GET(ServiceObject."Service Location No.") THEN
                                                                    VALIDATE("Service Location No.",ServiceObject."Service Location No.")
                                                                  ELSE
                                                                    VALIDATE("Service Location No.", '')
                                                              END;

                                                   OnLookup=VAR
                                                              ServiceObject@1100525000 : Record 11071691;
                                                            BEGIN
                                                              IF "Service Location No." <> '' THEN
                                                                ServiceObject.SETRANGE("Service Location No.","Service Location No.");
                                                              IF PAGE.RUNMODAL(0,ServiceObject) = ACTION::LookupOK THEN
                                                                VALIDATE("Service Object No.", ServiceObject."No.")
                                                            END;

                                                   CaptionML=[ENU=Object No.;
                                                              NOR=Objektnr.;
                                                              SVE=Objektnr] }
    { 201 ;   ;Service Object Description;Text100 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Service-Object.Description WHERE (No.=FIELD(Service Object No.)));
                                                   CaptionML=[ENU=Object Description;
                                                              NOR=Objektbeskrivelse;
                                                              SVE=Objektbeskrivning] }
    { 210 ;   ;Service Call No.    ;Code20        ;TableRelation="Service Call".No.;
                                                   CaptionML=[ENU=Service Call No.;
                                                              NOR=Servicesamtalenr.;
                                                              SVE=Servicesamtalsnr] }
    { 220 ;   ;Service Call Description;Text50    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Call".Description WHERE (No.=FIELD(Service Call No.)));
                                                   CaptionML=ENU=Service Call Description;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Try-out No.,Try-out Quote,Line No.      ;Clustered=Yes }
    {    ;Project No.                              }
    {    ;Estimate No.                             }
    {    ;Service Location No.                     }
    {    ;Service Contract No.                     }
    {    ;Service Order No.                        }
    {    ;Try-out Quote                            }
    {    ;Service Survey No.                       }
    {    ;Building Code                            }
    {    ;Service Call No.                         }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CRMSetup@1100485001 : Record 5079;
      TryoutRec@1210190000 : Record 11012750;
      TryoutQuoteRec@1210190004 : Record 11012758;
      ExtContractRec@1100485000 : Record 11012004;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;

    PROCEDURE GetTryOut@1210190000(lvProj@1210190000 : Code[20];lvEst@1210190001 : Code[20];lvLoc@1210190004 : Code[20];lvContr@1210190005 : Code[20];lvOrder@1210190009 : Code[20];lvServiceSurvey@1100528601 : Code[20];lvBuilding@1100528602 : Code[20];lvServiceCallNo@1100528603 : Code[20];lvSourceType@1100528604 : Integer) lvResult : Code[20];
    VAR
      lvNumRec@1210190006 : Integer;
      TryOutCode@1100528600 : Code[20];
    BEGIN
      lvNumRec := GetNoOfTryOuts(lvProj, lvEst, lvLoc, lvContr, lvOrder, lvServiceSurvey, lvBuilding, lvServiceCallNo, lvSourceType, TryOutCode);

      IF lvNumRec > 0 THEN
        IF lvNumRec = 1 THEN BEGIN
          lvResult := TryOutCode;
        END ELSE
          lvResult := STRSUBSTNO('[%1]', lvNumRec);

      EXIT(lvResult);
    END;

    PROCEDURE GetNoOfTryOuts@1100528600(lvProj@1100528605 : Code[20];lvEst@1100528604 : Code[20];lvLoc@1100528603 : Code[20];lvContr@1100528602 : Code[20];lvOrder@1100528601 : Code[20];lvServiceSurvey@1100528611 : Code[20];lvBuilding@1100528612 : Code[20];lvServiceCallNo@1100528613 : Code[20];lvSourceType@1100528600 : Integer;VAR TryOutCode@1100528610 : Code[20]) lvResult : Integer;
    VAR
      MainRec@1100528609 : Record 11012761;
      TempTryoutRec@1100528608 : TEMPORARY Record 11012750;
      TempTryoutQuoteRec@1100528607 : TEMPORARY Record 11012758;
      lvNumRec@1100528606 : Integer;
    BEGIN
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(MainRec) THEN
        EXIT(0);

      IF lvProj <> '' THEN BEGIN
        MainRec.SETCURRENTKEY("Project No.");
        MainRec.SETRANGE("Project No.", lvProj);
      END;
      IF lvEst <> '' THEN BEGIN
        MainRec.SETCURRENTKEY("Estimate No.");
        MainRec.SETRANGE("Estimate No.", lvEst);
      END;
      IF lvLoc <> '' THEN BEGIN
        MainRec.SETCURRENTKEY("Service Location No.");
        MainRec.SETRANGE("Service Location No.", lvLoc);
      END;
      IF lvContr <> '' THEN BEGIN
        MainRec.SETCURRENTKEY("Service Contract No.");
        MainRec.SETRANGE("Service Contract No.", lvContr);
      END;
      IF lvOrder <> '' THEN BEGIN
        MainRec.SETCURRENTKEY("Service Order No.");
        MainRec.SETRANGE("Service Order No.", lvOrder);
      END;
      IF lvServiceCallNo <> '' THEN BEGIN
        MainRec.SETCURRENTKEY("Service Call No.");
        MainRec.SETRANGE("Service Call No.", lvServiceCallNo);
      END;
      IF lvServiceSurvey <> '' THEN BEGIN
        MainRec.SETCURRENTKEY("Service Survey No.");
        MainRec.SETRANGE("Service Survey No.", lvServiceSurvey);
      END;
      IF lvBuilding <> '' THEN BEGIN
        MainRec.SETCURRENTKEY("Building Code");
        MainRec.SETRANGE("Building Code", lvBuilding);
      END;

      IF lvSourceType = 1 THEN
        MainRec.SETFILTER("Try-out No.", '<>%1', '');
      IF lvSourceType = 2 THEN
        MainRec.SETFILTER("Try-out Quote", '<>%1', '');

      IF MainRec.FIND('-') THEN
        REPEAT
          IF lvSourceType = 1 THEN BEGIN
            TempTryoutRec.Code := MainRec."Try-out No.";
            IF TempTryoutRec.INSERT THEN;
          END;
          IF lvSourceType = 2 THEN BEGIN
            TempTryoutQuoteRec.Code := MainRec."Try-out Quote";
            IF TempTryoutQuoteRec.INSERT THEN;
          END;
        UNTIL MainRec.NEXT = 0;

      IF lvSourceType = 1 THEN BEGIN
        lvNumRec := TempTryoutRec.COUNT;
        IF lvNumRec > 0 THEN
          IF lvNumRec = 1 THEN BEGIN
            TempTryoutRec.FIND('-');
            TryOutCode := TempTryoutRec.Code;
          END;
        TempTryoutRec.DELETEALL;
      END;
      IF lvSourceType = 2 THEN BEGIN
        lvNumRec := TempTryoutQuoteRec.COUNT;
        IF lvNumRec > 0 THEN
          IF lvNumRec = 1 THEN BEGIN
            TempTryoutQuoteRec.FIND('-');
            TryOutCode := TempTryoutQuoteRec.Code;
          END;
        TempTryoutQuoteRec.DELETEALL;
      END;

      lvResult := lvNumRec;
    END;

    PROCEDURE ShowTryOut@1210190001(lvProj@1210190000 : Code[20];lvEst@1210190001 : Code[20];lvLoc@1210190004 : Code[20];lvContr@1210190005 : Code[20];lvOrder@1210190006 : Code[20];lvServiceSurvey@1100528600 : Code[20];lvBuilding@1100528601 : Code[20];lvServiceCallNo@1100528602 : Code[20];lvSourceType@1210190003 : Integer) : Code[20];
    VAR
      MainRec@1210190002 : Record 11012761;
    BEGIN
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(MainRec) THEN EXIT;

      TryoutRec.RESET;
      TryoutQuoteRec.RESET;

      IF lvProj <> '' THEN BEGIN
        MainRec.SETCURRENTKEY("Project No.");
        MainRec.SETRANGE("Project No.", lvProj);
      END;
      IF lvEst <> '' THEN BEGIN
        MainRec.SETCURRENTKEY("Estimate No.");
        MainRec.SETRANGE("Estimate No.", lvEst);
      END;
      IF lvLoc <> '' THEN BEGIN
        MainRec.SETCURRENTKEY("Service Location No.");
        MainRec.SETRANGE("Service Location No.", lvLoc);
      END;
      IF lvContr <> '' THEN BEGIN
        MainRec.SETCURRENTKEY("Service Contract No.");
        MainRec.SETRANGE("Service Contract No.", lvContr);
      END;
      IF lvOrder <> '' THEN BEGIN
        MainRec.SETCURRENTKEY("Service Order No.");
        MainRec.SETRANGE("Service Order No.", lvOrder);
      END;
      IF lvServiceCallNo <> '' THEN BEGIN
        MainRec.SETCURRENTKEY("Service Call No.");
        MainRec.SETRANGE("Service Call No.", lvServiceCallNo);
      END;
      IF lvServiceSurvey <> '' THEN BEGIN
        MainRec.SETCURRENTKEY("Service Survey No.");
        MainRec.SETRANGE("Service Survey No.", lvServiceSurvey);
      END;
      IF lvBuilding <> '' THEN BEGIN
        MainRec.SETCURRENTKEY("Building Code");
        MainRec.SETRANGE("Building Code", lvBuilding);
      END;

      IF lvSourceType = 1 THEN
        MainRec.SETFILTER("Try-out No.", '<>%1', '');
      IF lvSourceType = 2 THEN
        MainRec.SETFILTER("Try-out Quote", '<>%1', '');

      IF MainRec.FIND('-') THEN BEGIN
        REPEAT
          IF lvSourceType = 1 THEN BEGIN
            TryoutRec.MARKEDONLY := TRUE;
            TryoutRec.GET(MainRec."Try-out No.");
            TryoutRec.MARK := TRUE;
          END;
          IF lvSourceType = 2 THEN BEGIN
            TryoutQuoteRec.MARKEDONLY := TRUE;
            TryoutQuoteRec.GET(MainRec."Try-out Quote");
            TryoutQuoteRec.MARK := TRUE;
          END;
        UNTIL MainRec.NEXT = 0;
      END ELSE BEGIN
        IF lvSourceType = 1 THEN
          TryoutRec.SETRANGE(Code, '');
        IF lvSourceType = 2 THEN
          TryoutQuoteRec.SETRANGE(Code, '');
      END;

      IF lvSourceType = 1 THEN
        IF PAGE.RUNMODAL(PAGE::"Try-out List", TryoutRec)  = ACTION::LookupOK THEN
          EXIT(TryoutRec.Code);  //db, 22-01-15: C020309
      IF lvSourceType = 2 THEN
        IF PAGE.RUNMODAL(PAGE::"Try-out Quote List", TryoutQuoteRec) = ACTION::LookupOK THEN
          EXIT(TryoutQuoteRec.Code);  //db, 22-01-15: C020309
    END;

    PROCEDURE CopyRelation@1100485000(lvTypeOld@1100485001 : Integer;lvTypeNew@1100485006 : Integer;lvCodeOld@1100485002 : Code[20];lvCodeNew@1100485005 : Code[20]);
    VAR
      MainRec@1100485000 : Record 11012761;
      MainRec2@1100485003 : Record 11012761;
      MainRec3@1100525002 : Record 11012761;
      LastLino@1100485004 : Integer;
      CreateNewLine@1100525000 : Boolean;
      TmpMainRec@1100525001 : TEMPORARY Record 11012761;
    BEGIN
      IF lvTypeOld = 0 THEN BEGIN
        MainRec.SETCURRENTKEY("Project No.");
        MainRec.SETRANGE("Project No.", lvCodeOld);
      END;
      IF lvTypeOld = 1 THEN BEGIN
        MainRec.SETCURRENTKEY("Estimate No.");
        MainRec.SETRANGE("Estimate No.", lvCodeOld);
      END;
      IF lvTypeOld = 2 THEN BEGIN
        MainRec.SETCURRENTKEY("Service Location No.");
        MainRec.SETRANGE("Service Location No.", lvCodeOld);
      END;
      IF lvTypeOld = 3 THEN BEGIN
        MainRec.SETCURRENTKEY("Service Contract No.");
        MainRec.SETRANGE("Service Contract No.", lvCodeOld);
      END;
      IF lvTypeOld = 4 THEN BEGIN
        MainRec.SETCURRENTKEY("Service Order No.");
        MainRec.SETRANGE("Service Order No.", lvCodeOld);
      END;
      IF lvTypeOld = 5 THEN BEGIN
        MainRec.SETCURRENTKEY("Service Survey No.");
        MainRec.SETRANGE("Service Survey No.", lvCodeOld);
      END;
      IF lvTypeOld = 6 THEN BEGIN
        MainRec.SETCURRENTKEY("Building Code");
        MainRec.SETRANGE("Building Code", lvCodeOld);
      END;

      IF MainRec.FINDSET THEN BEGIN
        REPEAT
          //db.sn, 16-05-13: C003041+C003165
          CreateNewLine := TRUE;
          IF lvTypeNew = 0 THEN BEGIN
            IF MainRec."Project No." = '' THEN BEGIN
              MainRec."Project No." := lvCodeNew;
              MainRec.MODIFY;
              CreateNewLine := FALSE;
            END;
            //db.sn, 10-03-14: C010450
            IF CreateNewLine AND (lvTypeOld = 1) THEN BEGIN
              //estimate can be copied more then once to project (for example to extension contract)
              //check if combination of estimate and project already exist as relation
              MainRec3.RESET;
              MainRec3.SETCURRENTKEY("Try-out No.", "Try-out Quote", "Line No.");
              MainRec3.SETFILTER("Try-out No.", MainRec."Try-out No.");
              MainRec3.SETFILTER("Try-out Quote", MainRec."Try-out Quote");
              MainRec3.SETRANGE("Estimate No.", lvCodeOld);
              MainRec3.SETRANGE("Project No.", lvCodeNew);
              IF MainRec3.FINDFIRST THEN
                CreateNewLine := FALSE;
            END;
            //db.en, 10-03-14: C010450
          END;
          IF lvTypeNew = 4 THEN BEGIN
            IF MainRec."Service Order No." = '' THEN BEGIN
              MainRec."Service Order No." := lvCodeNew;
              MainRec.MODIFY;
              CreateNewLine := FALSE;
            END;
          END;
          //db.en, 16-05-13: C003041+C003165

          IF lvTypeNew = 2 THEN BEGIN
            IF MainRec."Service Location No." = '' THEN BEGIN
              MainRec."Service Location No." := lvCodeNew;
              MainRec.MODIFY;
            END;
            CreateNewLine := FALSE;
          END;

          IF lvTypeNew = 3 THEN BEGIN
            IF MainRec."Service Contract No." = '' THEN BEGIN
              MainRec."Service Contract No." := lvCodeNew;
              MainRec.MODIFY;
              CreateNewLine := FALSE;
            END;
          END;

          IF CreateNewLine THEN BEGIN  //db, 16-05-13: C003041+C003165
            MainRec2.RESET;
            MainRec2.SETCURRENTKEY("Try-out No.", "Try-out Quote", "Line No.");
            IF MainRec."Try-out No." <> '' THEN
              MainRec2.SETRANGE("Try-out No.", MainRec."Try-out No.");
            IF MainRec."Try-out Quote" <> '' THEN
              MainRec2.SETRANGE("Try-out Quote", MainRec."Try-out Quote")
            ELSE
              MainRec2.SETFILTER("Try-out Quote", '%1', '');
            IF MainRec2.FINDLAST THEN
              LastLino := MainRec2."Line No."
            ELSE
              LastLino := 0;

            MainRec2.RESET;
            MainRec2.COPY(MainRec);
            IF lvTypeNew <> lvTypeOld THEN
              MainRec2.INIT;
            MainRec2."Line No." := LastLino + 10000;
            IF lvTypeNew = 0 THEN
              MainRec2."Project No." := lvCodeNew;
            IF lvTypeNew = 1 THEN
              MainRec2."Estimate No." := lvCodeNew;
            IF lvTypeNew = 2 THEN
              MainRec2."Service Location No." := lvCodeNew;
            IF lvTypeNew = 3 THEN
              MainRec2."Service Contract No." := lvCodeNew;
            IF lvTypeNew = 4 THEN
              MainRec2."Service Order No." := lvCodeNew;
            IF lvTypeNew = 5 THEN
              MainRec2."Service Survey No." := lvCodeNew;
            IF lvTypeNew = 6 THEN
              MainRec2."Building Code" := lvCodeNew;
            IF MainRec2.INSERT THEN;
            //db.sn, 16-05-13: C003041+C003165
            IF (lvTypeOld = 1) AND (lvTypeNew <> 1) THEN BEGIN  //db, 02-08-13: C008854
              TmpMainRec := MainRec2;
              TmpMainRec."Estimate No." := MainRec."Estimate No.";
              TmpMainRec.INSERT;
            END;
            //db.en, 16-05-13: C003041+C003165
          END;
        UNTIL MainRec.NEXT = 0;

        //db.sn, 16-05-13: C003041+C003165
        IF TmpMainRec.FINDSET THEN BEGIN
          REPEAT
            IF MainRec2.GET(TmpMainRec."Try-out No.", TmpMainRec."Try-out Quote", TmpMainRec."Line No.") THEN BEGIN
              MainRec2 := TmpMainRec;
              MainRec2.MODIFY;
            END;
          UNTIL TmpMainRec.NEXT = 0;
          TmpMainRec.DELETEALL;
        END;
        //db.en, 16-05-13: C003041+C003165
      END;
    END;

    PROCEDURE UpdateBuildingCode@1100528601();
    VAR
      ServiceLocation@1100528600 : Record 11012801;
    BEGIN
      "Building Code" := '';
      IF "Service Location No." = '' THEN
        EXIT;
      IF ServiceLocation.GET("Service Location No.") THEN
        IF ServiceLocation."Building Code" <> '' THEN
          "Building Code" := ServiceLocation."Building Code";
    END;

    BEGIN
    END.
  }
}

