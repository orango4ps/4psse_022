OBJECT Page 11126530 Plan Project Elements
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Planprojektelemente;
               ENU=Plan Project Elements;
               NLD=Projectelementen plannen;
               SVE=Planera projektelement];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11012010;
    PageType=List;
    UsageCategory=Tasks;
    PromotedActionCategoriesML=[DEU=Neu, Prozess, Bericht, Datumsfilter;
                                ENU=New,Process,Report,Date Filter;
                                NLD=Nieuw,Proces,Lijsten,Datumfilter;
                                SVE=Ny,Behandla,Rapport,Datumfilter];
    OnInit=BEGIN
             SETRANGE("Company Filter", COMPANYNAME);
           END;

    OnOpenPage=VAR
                 Project@1100525000 : Record 11072003;
               BEGIN
                 ProjectElementManagement.TestProjectElementPlanFunctionality;
                 IF CalledFromProjectNo <> '' THEN BEGIN
                   Project.GET(CalledFromProjectNo);
                   IF (Project."Starting Date" = 0D) AND (Project."Ending Date" = 0D) THEN
                     PeriodFilter := ''
                   ELSE
                     PeriodFilter := STRSUBSTNO('%1..%2',Project."Starting Date",Project."Ending Date");
                   ApplyFilters;
                 END ELSE
                   FindPeriod('=');
               END;

    OnAfterGetRecord=BEGIN
                       DetermineChapterParagraphInfo;
                       ReadAdditionalData;
                     END;

    ActionList=ACTIONS
    {
      { 1100528617;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100528606;1 ;Action    ;
                      ShortCutKey=Ctrl+R;
                      CaptionML=[DEU=Ressourcen;
                                 ENU=Resources;
                                 NLD=Resources;
                                 NOR=RESSURS;
                                 SVE=Resurser];
                      Promoted=Yes;
                      Image=Resource;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ProjectElementManagement@1100528600 : Codeunit 11012285;
                               BEGIN
                                 IF ProjectElementManagement.ShowResources(Rec) THEN
                                   CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100528630;1 ;Action    ;
                      CaptionML=[DEU=ArbeitsauftrÑge;
                                 ENU=Work Orders;
                                 NLD=Werkorders;
                                 SVE=Arbetsordrar];
                      Promoted=Yes;
                      Image=HRSetup;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ProjectElementManagement@1100528602 : Codeunit 11012285;
                               BEGIN
                                 ProjectElementManagement.ShowWorkOrders(Rec);
                               END;
                                }
      { 1100528300;1 ;Action    ;
                      CaptionML=[DEU=Elemente;
                                 ENU=Elements;
                                 NLD=Elementen;
                                 NOR=Elementer;
                                 SVE=Element];
                      RunObject=Page 11012028;
                      RunPageLink=Project No.=FIELD(Project No.);
                      Promoted=Yes;
                      Image=BOMVersions;
                      PromotedCategory=Process }
      { 1100528700;1 ;Action    ;
                      CaptionML=[DEU=Elementtexte;
                                 ENU=Element Texts;
                                 NLD=Elementteksten;
                                 SVE=Elementtext];
                      RunObject=Page 11126534;
                      RunPageLink=Project No.=FIELD(Project No.),
                                  Element=FIELD(Element);
                      Image=Text }
      { 1100528500;1 ;Action    ;
                      Name=ProjectCapacityNeed;
                      CaptionML=[DEU=Projekt-KapazitÑtsbedarf;
                                 ENU=Project Capacity Need;
                                 NLD=Projectcapaciteitsbehoefte;
                                 NOR=Prosjektkapasitetsbehov;
                                 SVE=Projektkapacitetbehov];
                      Promoted=Yes;
                      Image=Capacity;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 StartPageProjectCapacityNeed;
                               END;
                                }
      { 1100528604;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528608;1 ;Action    ;
                      CaptionML=[DEU=Vorperiode;
                                 ENU=Previous Period;
                                 NLD=Vorige periode;
                                 NOR=Forrige periode;
                                 SVE=FîregÜende period];
                      ToolTipML=[DEU=Vorperiode;
                                 ENU=Previous Period;
                                 NLD=Vorige periode;
                                 NOR=Forrige periode;
                                 SVE=FîregÜende period];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                               END;
                                }
      { 1100528616;1 ;Action    ;
                      CaptionML=[DEU=Heute;
                                 ENU=Today;
                                 NLD=Vandaag;
                                 NOR=I DAG;
                                 SVE=Dagens datum];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Calendar;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 PeriodType := PeriodType::Day;
                                 PeriodFilter := STRSUBSTNO('%1', TODAY);
                                 FindPeriod('');
                               END;
                                }
      { 1100528607;1 ;Action    ;
                      CaptionML=[DEU=Folgeperiode;
                                 ENU=Next Period;
                                 NLD=Volgende periode;
                                 NOR=Neste periode;
                                 SVE=NÑsta period];
                      ToolTipML=[DEU=Folgeperiode;
                                 ENU=Next Period;
                                 NLD=Volgende periode;
                                 NOR=Neste periode;
                                 SVE=NÑsta period];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                               END;
                                }
      { 1100528601;1 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Drucken;
                                 ENU=Print;
                                 NLD=Afdrukken;
                                 NOR=Skriv ut;
                                 SVE=Skriv ut];
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 DocPrint@1100528800 : Codeunit 229;
                               BEGIN
                                 DocPrint.PrintProjectElement(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100528605;1;Group  ;
                CaptionML=[DEU=Filter;
                           ENU=Filter;
                           NLD=Filter;
                           NOR=Filter;
                           SVE=Filter];
                GroupType=Group }

    { 1100528615;2;Field  ;
                CaptionML=[DEU=Anzeigen nach;
                           ENU=View by;
                           NLD=Weergeven per;
                           NOR=Vis per;
                           SVE=Visa per];
                OptionCaptionML=[DEU=Tag,Woche,Monat,Quartal,Jahr,Buchhaltungsperiode;
                                 ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 NLD=Dag,Week,Maand,Kwartaal,Jaar,Boekingsperiode;
                                 NOR=Dag,Uke,MÜned,Kvartal,èr,bokfõringsperiode;
                                 SVE=Dag,Vecka,MÜnad,Kvartal,èr,Bokfîringsperiod];
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             FindPeriod('');
                           END;
                            }

    { 1100528609;2;Field  ;
                CaptionML=[DEU=Datumsfilter;
                           ENU=Date Filter;
                           NLD=Datumfilter;
                           NOR=Datofilter;
                           SVE=Datumfilter];
                SourceExpr=PeriodFilter;
                OnValidate=VAR
                             Date@1100528600 : Record 2000000007;
                             TextManagement@1001 : Codeunit 41;
                           BEGIN
                             TextManagement.MakeDateFilter(PeriodFilter);
                             Date.SETFILTER("Period Start", PeriodFilter);
                             PeriodFilter := Date.GETFILTER("Period Start");
                             ApplyFilters;
                           END;
                            }

    { 1100528600;2;Field  ;
                CaptionML=[DEU=Nur offene Elemente;
                           ENU=Only Open Elements;
                           NLD=Alleen open elementen;
                           SVE=Endast îppna elemet];
                SourceExpr=OpenElements;
                OnValidate=BEGIN
                             ApplyFilters;
                           END;
                            }

    { 1100528614;2;Field  ;
                CaptionML=[DEU=Elementtyp;
                           ENU=Element Type;
                           NLD=Elementtype;
                           NOR=Elementtype;
                           SVE=Elementtyp];
                OptionCaptionML=[DEU=" ,Allgemein,Produktion,Installation";
                                 ENU=" ,General,Production,Installation";
                                 NLD=" ,Algemeen,Productie,Montage";
                                 SVE=" ,AllmÑnt,Produktion,Installation"];
                SourceExpr=ElementType;
                OnValidate=BEGIN
                             ApplyFilters;
                           END;
                            }

    { 1   ;1   ;Group     ;
                CaptionML=[DEU=Zeilen;
                           ENU=Lines;
                           NLD=Regels;
                           NOR=Rader;
                           SVE=Rader];
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Project No.";
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="Project Description";
                Visible=FALSE;
                Editable=FALSE }

    { 1100485001;2;Field  ;
                SourceExpr=Level;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528624;2;Field  ;
                SourceExpr=Chapter;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528625;2;Field  ;
                CaptionML=[DEU=Kapitelbeschreibung;
                           ENU=Chapter Description;
                           NLD=Hoofdstukomschrijving;
                           NOR=Kapittelbeskrivelse;
                           SVE=Kapitelbeskrivning];
                SourceExpr=ChapterDescription;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528628;2;Field  ;
                CaptionML=[DEU=Kapitelbeschreibung 2;
                           ENU=Chapter Description 2;
                           NLD=Hoofdstukomschrijving 2;
                           SVE=Kapitelbeskrivning 2];
                SourceExpr=ChapterDescription2;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528626;2;Field  ;
                SourceExpr=Paragraph;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528627;2;Field  ;
                CaptionML=[DEU=Abschnittbeschreibung;
                           ENU=Paragraph Description;
                           NLD=Paragraafomschrijving;
                           NOR=Avsnitt, Beskrivelse;
                           SVE=Stycke, beskrivning];
                SourceExpr=ParagraphDescription;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528629;2;Field  ;
                CaptionML=[DEU=Abschnittbeschreibung 2;
                           ENU=Paragraph Description 2;
                           NLD=Paragraafomschrijving 2;
                           SVE=Stycke, beskrivning 2];
                SourceExpr=ParagraphDescription2;
                Visible=FALSE;
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr=Element }

    { 8   ;2   ;Field     ;
                SourceExpr=Description }

    { 1100528621;2;Field  ;
                SourceExpr="Description 2" }

    { 1100528501;2;Field  ;
                SourceExpr=Discipline }

    { 1100528619;2;Field  ;
                CaptionML=[DEU=Text;
                           ENU=Text;
                           NLD=Tekst;
                           NOR=Tekst;
                           SVE=BenÑmning];
                SourceExpr=ProjectElementManagement.GetProjectElementTextSummary(Rec);
                OnDrillDown=VAR
                              ProjectElementText@1100528600 : Record 11229796;
                            BEGIN
                              ProjectElementText.SETRANGE("Project No.", "Project No.");
                              ProjectElementText.SETRANGE(Element, Element);
                              PAGE.RUNMODAL(0, ProjectElementText);
                            END;
                             }

    { 14  ;2   ;Field     ;
                SourceExpr="Starting Date" }

    { 1100528611;2;Field  ;
                SourceExpr="Starting Time" }

    { 16  ;2   ;Field     ;
                SourceExpr="Ending Date" }

    { 1100528612;2;Field  ;
                SourceExpr="Ending Time" }

    { 1210190002;2;Field  ;
                SourceExpr="Budget Hours" }

    { 1100528502;2;Field  ;
                SourceExpr="Actual Hours" }

    { 1100528610;2;Field  ;
                SourceExpr="Estimated Hours" }

    { 1100528506;2;Field  ;
                CaptionML=[DEU=Angefragte Stunden;
                           ENU=Requested Hours;
                           NLD=Gevraagde uren;
                           NOR=ùnskede timer;
                           SVE=BegÑrda timmar];
                SourceExpr=RequestedHours;
                Editable=FALSE }

    { 1100528504;2;Field  ;
                CaptionML=[DEU=VerfÅgbare Stunden;
                           ENU=Available Hours;
                           NLD=Beschikbare uren;
                           NOR=Tilgjengelige timer;
                           SVE=TillgÑngliga timmar];
                SourceExpr=AvailableHours;
                Editable=FALSE;
                StyleExpr=StyleTextAvailableHours }

    { 1100528302;2;Field  ;
                SourceExpr="Planned Hours Work Order";
                OnDrillDown=BEGIN
                              DrillDownWorkOrders;
                            END;
                             }

    { 1100528303;2;Field  ;
                CaptionML=[DEU=Stunden im Plan Arbeitsauftrag;
                           ENU=Hours to plan Work Order;
                           NLD=Nog te plannen uren werkorder;
                           SVE=Timmar att planera, arbetsorder];
                SourceExpr="Estimated Hours"-"Planned Hours Work Order";
                Editable=FALSE;
                StyleExpr=StyleTextHoursToPlan }

    { 1100528620;2;Field  ;
                SourceExpr=Quantity }

    { 12  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Editable=FALSE }

    { 1100528613;2;Field  ;
                DrillDown=No;
                SourceExpr="No. of Resources" }

    { 1100528301;2;Field  ;
                SourceExpr="No. of Work Orders";
                OnDrillDown=BEGIN
                              DrillDownWorkOrders;
                            END;
                             }

    { 1100528800;2;Field  ;
                SourceExpr="Lead Time (Days)" }

    { 1100528803;2;Field  ;
                SourceExpr="Previous Element" }

    { 1100528801;2;Field  ;
                SourceExpr="Responsible Employee" }

    { 1100528802;2;Field  ;
                SourceExpr="Responsible Employee Name" }

    { 1100525000;2;Field  ;
                SourceExpr="Search Code";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525001;2;Field  ;
                SourceExpr=Blocked;
                Visible=FALSE;
                Editable=FALSE }

    { 1100525002;2;Field  ;
                SourceExpr="Project City";
                Visible=FALSE }

    { 1100528304;2;Field  ;
                SourceExpr="Outstanding Qty Purch Order" }

    { 1100528305;2;Field  ;
                SourceExpr="Outstanding Qty Item Journal" }

    { 1100528503;2;Field  ;
                SourceExpr="Open (Purchase)";
                Visible=FALSE }

    { 1100528602;;Container;
                ContainerType=FactBoxArea }

    { 1100528623;1;Part   ;
                CaptionML=[DEU=Allgemein;
                           ENU=General;
                           NLD=Algemeen;
                           NOR=Generell;
                           SVE=AllmÑnt];
                SubPageLink=Project No.=FIELD(Project No.),
                            Element=FIELD(Element);
                PagePartID=Page11130238;
                PartType=Page }

    { 1100528603;1;Part   ;
                CaptionML=[DEU=Summen;
                           ENU=Totals;
                           NLD=Totalen;
                           NOR=Totaler;
                           SVE=Totaler];
                SubPageLink=Project No.=FIELD(Project No.),
                            Element=FIELD(Element);
                PagePartID=Page11126540;
                Visible=FALSE;
                PartType=Page }

    { 1100528618;1;Part   ;
                CaptionML=[DEU=Merkmale;
                           ENU=Features;
                           NLD=Kenmerken;
                           NOR=Funksjoner;
                           SVE=Funktioner];
                SubPageLink=Project No.=FIELD(Project No.),
                            Project Element=FIELD(Element);
                PagePartID=Page11126541;
                PartType=Page }

    { 1100528622;1;Part   ;
                CaptionML=[DEU=Ressourcen;
                           ENU=Resources;
                           NLD=Resources;
                           NOR=RESSURS;
                           SVE=Resurser];
                SubPageView=SORTING(Project No.,Element,Sequence No.);
                SubPageLink=Project No.=FIELD(Project No.),
                            Element=FIELD(Element);
                PagePartID=Page11130237;
                PartType=Page }

  }
  CODE
  {
    VAR
      ProjectElementManagement@1100528604 : Codeunit 11012285;
      OpenElements@1100528605 : Boolean;
      StartingDate@1100528606 : Date;
      EndingDate@1100528607 : Date;
      Text000@1100528600 : TextConst 'DEU=Anfangsdatum kann nicht nach dem Enddatum liegen;ENU=Starting Date cannot exceed Ending Date;NLD=Startdatum mag niet voorbij de einddatum liggen;SVE=Startdatum kan inte vara efter slutdatum';
      ElementType@1100528610 : ' ,General,Production,Installation';
      PeriodFilter@1100528611 : Text;
      PeriodType@1100528612 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      ChapterDescription@1100528616 : Text[50];
      ChapterDescription2@1100528614 : Text[50];
      ParagraphDescription@1100528617 : Text[50];
      ParagraphDescription2@1100528615 : Text[50];
      RequestedHours@1100528501 : Decimal;
      AvailableHours@1100528500 : Decimal;
      CalledFromProjectNo@1100525000 : Code[20];
      StyleTextAvailableHours@1100528502 : Text;
      StyleTextHoursToPlan@1100528503 : Text;

    PROCEDURE ApplyFilters@1100528600();
    VAR
      Date@1100528600 : Record 2000000007;
    BEGIN
      SETRANGE("No. of Work Orders");

      IF PeriodFilter <> '' THEN BEGIN
        Date.SETFILTER("Period Start", PeriodFilter);
        StartingDate := Date.GETRANGEMIN("Period Start");
        EndingDate := Date.GETRANGEMAX("Period Start");
      END;

      IF StartingDate <> 0D THEN
        SETFILTER("Ending Date",'%1|%2..',0D,StartingDate)
      ELSE
        SETRANGE("Ending Date");

      IF EndingDate <> 0D THEN
        SETFILTER("Starting Date",'..%1',EndingDate)
      ELSE
        SETRANGE("Starting Date");


      IF OpenElements THEN
        SETRANGE("No. of Work Orders", 0)
      ELSE
        SETRANGE("No. of Work Orders");

      IF ElementType = ElementType::" " THEN
        SETRANGE("Element Type")
      ELSE
        SETRANGE("Element Type", ElementType -1);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE TestDates@1100528601();
    BEGIN
      IF (EndingDate <> 0D) AND (StartingDate <> 0D) AND (EndingDate < StartingDate) THEN
        ERROR(Text000);
    END;

    PROCEDURE FindPeriod@1210190001(SearchString@1210190000 : Text[3]);
    VAR
      Calendar@1100528600 : Record 2000000007;
      PeriodFormManagement@1100528601 : Codeunit 359;
    BEGIN
      IF PeriodFilter <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start", PeriodFilter);
        PeriodFormManagement.FindDate('+', Calendar, PeriodType);
        Calendar.SETRANGE("Period Start");
      END;

      PeriodFormManagement.FindDate(SearchString, Calendar, PeriodType);
      IF (Calendar."Period Start" = Calendar."Period End") OR (Calendar."Period End" = 0D) THEN
        PeriodFilter := STRSUBSTNO('%1', Calendar."Period Start")
      ELSE
        PeriodFilter := STRSUBSTNO('%1..%2', Calendar."Period Start",Calendar."Period End");
      ApplyFilters;
    END;

    PROCEDURE DetermineChapterParagraphInfo@1100528602();
    VAR
      ProjectElement@1100528600 : Record 11012010;
    BEGIN
      IF NOT ProjectElement.GET("Project No.", Chapter) THEN
        ProjectElement.INIT;
      ChapterDescription := ProjectElement.Description;
      ChapterDescription2 := ProjectElement."Description 2";
      IF NOT ProjectElement.GET("Project No.", Paragraph) THEN
        ProjectElement.INIT;
      ParagraphDescription := ProjectElement.Description;
      ParagraphDescription2 := ProjectElement."Description 2";
    END;

    LOCAL PROCEDURE DrillDownWorkOrders@1100528300();
    VAR
      WorkOrder@1100528301 : Record 11229279;
      WorkOrders@1100528300 : Page 11229284;
    BEGIN
      "Company Filter" := COMPANYNAME;
      WorkOrder.FILTERGROUP(2);
      WorkOrder.SETFILTER("Source Company", "Company Filter");
      WorkOrders.SetSelections(WorkOrder."Source Type"::Project, "Project No.", '');
      WorkOrder.SETRANGE("Project Element", Element);
      WorkOrder.FILTERGROUP(0);
      WorkOrders.SETTABLEVIEW(WorkOrder);
      WorkOrders.RUNMODAL;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE StartPageProjectCapacityNeed@1100528500();
    VAR
      ProjectCapacityNeedPage@1100528500 : Page 11132127;
    BEGIN
      ProjectCapacityNeedPage.SetProjectNo("Project No.");
      ProjectCapacityNeedPage.RUN;
    END;

    PROCEDURE SetProjectFilter@1100528501(ProjectNo@1100528500 : Code[20]);
    BEGIN
      SETRANGE("Project No.",ProjectNo);
      CalledFromProjectNo := ProjectNo;
    END;

    LOCAL PROCEDURE ReadAdditionalData@1100528502();
    VAR
      ProjectCapacityNeedDetail@1100525000 : Record 11229349;
      ProjectCapacityNeed@1100528500 : Record 11229348;
    BEGIN
      ProjectCapacityNeedDetail.SETRANGE("Project No.","Project No.");
      ProjectCapacityNeedDetail.SETRANGE(Element,Element);
      ProjectCapacityNeedDetail.SETRANGE("Line Type",ProjectCapacityNeedDetail."Line Type"::Main);

      ProjectCapacityNeedDetail.CALCSUMS("Requested Hours");

      RequestedHours := ProjectCapacityNeedDetail."Requested Hours";
      AvailableHours := "Estimated Hours" - ProjectCapacityNeedDetail."Requested Hours";

      StyleTextAvailableHours := ProjectCapacityNeed.GetStyle(AvailableHours);
      StyleTextHoursToPlan := ProjectCapacityNeed.GetStyle("Estimated Hours"-"Planned Hours Work Order");
    END;

    BEGIN
    END.
  }
}

