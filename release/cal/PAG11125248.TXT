OBJECT Page 11125248 Maint. Scheme Version Lines SF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Aktivit„ten;
               ENU=Activities;
               NLD=Werkzaamheden;
               NOR=Aktiviteter;
               SVE=Aktiviteter];
    SourceTable=Table11071744;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             RateCodeEditable := TRUE;
             NormEditable := TRUE;
             TradeItemEditable := TRUE;
             VendorTradeItemEditable := TRUE;
             BasicItemEditable := TRUE;
             ManufacturerEditable := TRUE;
             ItemNoEditable := TRUE;
             CostPriceEditable := TRUE;
             PurchaseDiscountEditable := TRUE;
             GrossPriceEditable := TRUE;
           END;

    OnAfterGetRecord=BEGIN
                       AdjustmentFactorNorm :=
                         GetAdjustmentFactorNorm("Line Type", "Type Code","Belongs to Scheme", "Index Date", WORKDATE, AdjustmentFactorNormLevel);
                       UpdateEditable;
                     END;

    OnNewRecord=BEGIN
                  UpdateEditable;
                  AdjustmentFactorNorm := 1;
                END;

    OnInsertRecord=VAR
                     MaintenanceHeader@1100526200 : Record 11071743;
                   BEGIN
                     CASE "Line Type" OF
                       "Line Type"::"Maintenance Scheme":
                         IF MaintenanceHeader.GET("Line Type","Type Code",'',"Index Date") THEN BEGIN
                           MaintenanceHeader.CALCFIELDS("Frequency per Year");
                           VALIDATE("Frequency per Year",MaintenanceHeader."Frequency per Year");
                         END;
                       "Line Type"::"Standard Object","Line Type"::Object:
                         BEGIN
                           MaintenanceHeader.SETRANGE("Line Type",MaintenanceHeader."Line Type"::"Maintenance Scheme");
                           MaintenanceHeader.SETRANGE(Code,"Belongs to Scheme");
                           MaintenanceHeader.SETFILTER("Index Date",'..%1',"Index Date");
                           IF MaintenanceHeader.FINDLAST THEN BEGIN
                             MaintenanceHeader.CALCFIELDS("Frequency per Year");
                             VALIDATE("Frequency per Year",MaintenanceHeader."Frequency per Year")
                           END;
                         END;
                     END;
                   END;

    OnDeleteRecord=VAR
                     CentralDataManagement@1100525000 : Codeunit 11012010;
                   BEGIN
                     CASE "Line Type" OF
                       "Line Type"::"Maintenance Scheme",
                       "Line Type"::"Standard Object":
                         IF NOT CentralDataManagement.MaintenanceSchemeFormEditable THEN
                           ERROR('');
                       "Line Type"::"Standard Object Installation",
                       "Line Type"::"Standard Object Deinstallation":
                         IF NOT CentralDataManagement.StandardObjectFormEditable THEN
                           ERROR('');
                     END;
                   END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190000;1;Group  ;
                Name=ListCtrl;
                GroupType=Repeater }

    { 1210190001;2;Field  ;
                SourceExpr="Cost Type";
                OnValidate=BEGIN
                             CostTypeOnAfterValidate;
                           END;
                            }

    { 1210190003;2;Field  ;
                SourceExpr="Item No.";
                Editable=ItemNoEditable }

    { 1100525000;2;Field  ;
                SourceExpr=Manufacturer;
                Visible=FALSE;
                Editable=ManufacturerEditable }

    { 1100525002;2;Field  ;
                SourceExpr="Basic Item";
                Visible=FALSE;
                Editable=BasicItemEditable }

    { 1100525004;2;Field  ;
                SourceExpr="Vendor (Trade Item)";
                Editable=VendorTradeItemEditable }

    { 1100525006;2;Field  ;
                SourceExpr="Trade Item";
                Editable=TradeItemEditable;
                OnLookup=VAR
                           TradeItemRec@1100525004 : Record 11012317;
                           TradeItemFrm@1100525003 : Page 11012334;
                           lvRefDate@1100525002 : Date;
                           lvDiscRef1@1100525001 : Code[20];
                           lvDiscRef2@1100525000 : Code[20];
                           lvTempMaintSchemeLine@1100525007 : TEMPORARY Record 11071744;
                         BEGIN
                           IF "Cost Type" <> "Cost Type"::Material THEN
                             EXIT;

                           IF "Item No." <> '' THEN BEGIN
                             lvTempMaintSchemeLine.INIT;
                             lvTempMaintSchemeLine."Type Code" := "Type Code";
                             lvTempMaintSchemeLine.VALIDATE("Item No.","Item No.");
                             g_ItemCode := lvTempMaintSchemeLine."Trade Item";
                             g_Vendor := lvTempMaintSchemeLine."Vendor (Trade Item)";
                           END ELSE BEGIN
                             g_ItemCode := '';
                             g_Vendor := '';
                           END;

                           CLEAR(TradeItemFrm);
                           TradeItemFrm.LOOKUPMODE(TRUE);
                           TradeItemFrm.SetSelection(DATABASE::"Maint. Scheme Version Line",
                             '', '', '', '', 0, '', '', "Line No.", '', '',
                             "Vendor (Trade Item)", "Trade Item", Manufacturer, "Basic Item", g_ItemCode, g_Vendor);

                           //GetReferenceData(lvRefDate, lvDiscRef1, lvDiscRef2);
                           TradeItemFrm.SetReference(lvRefDate, lvDiscRef1, lvDiscRef2);

                           TradeItemRec.InitLookup(TradeItemRec, "Basic Item", Manufacturer, "Trade Item", "Vendor (Trade Item)");
                           TradeItemFrm.SETRECORD(TradeItemRec);

                           IF TradeItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             VALIDATE("Cost Type", "Cost Type"::Material);
                             TradeItemFrm.GETRECORD(TradeItemRec);
                             Manufacturer := TradeItemRec.Manufacturer;
                             "Basic Item" := TradeItemRec."Product Code";
                             "Vendor (Trade Item)" := TradeItemRec.Vendor;
                             VALIDATE("Trade Item", TradeItemRec."Item Code");
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;

                OnAssistEdit=BEGIN
                               IF HandleAssistEditTradeItem THEN
                                 CurrPage.UPDATE(TRUE);
                             END;
                              }

    { 1100525050;2;Field  ;
                SourceExpr="Item Brand";
                Visible=FALSE }

    { 1100525052;2;Field  ;
                SourceExpr="Item Type";
                Visible=FALSE }

    { 1100525054;2;Field  ;
                SourceExpr="Item Series";
                Visible=FALSE }

    { 1210190018;2;Field  ;
                SourceExpr="Cost Object";
                LookupPageID=Cost Object List }

    { 1100525018;2;Field  ;
                SourceExpr="Cost Component" }

    { 1210190005;2;Field  ;
                SourceExpr=Description }

    { 1100525056;2;Field  ;
                SourceExpr="Text Block";
                OnDrillDown=BEGIN
                              EditText;
                            END;
                             }

    { 1210190007;2;Field  ;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 1210190009;2;Field  ;
                SourceExpr="Unit of Measure" }

    { 1100525048;2;Field  ;
                SourceExpr="Line Status";
                Visible=FALSE }

    { 1210190011;2;Field  ;
                SourceExpr=Norm;
                Editable=NormEditable;
                OnValidate=BEGIN
                             NormOnAfterValidate;
                           END;
                            }

    { 1210190013;2;Field  ;
                SourceExpr="Rate Code";
                Editable=RateCodeEditable;
                OnValidate=BEGIN
                             RateCodeOnAfterValidate;
                           END;
                            }

    { 1210190022;2;Field  ;
                SourceExpr=Rate;
                Editable=RateEditable;
                OnValidate=BEGIN
                             RateOnAfterValidate;
                           END;
                            }

    { 1100525010;2;Field  ;
                SourceExpr="Gross Price";
                Editable=GrossPriceEditable }

    { 1100525012;2;Field  ;
                SourceExpr="Purchase Discount %";
                Editable=PurchaseDiscountEditable }

    { 1100525020;2;Field  ;
                SourceExpr="Cost Price";
                Editable=CostPriceEditable }

    { 1100528600;2;Field  ;
                SourceExpr="Price Agreement" }

    { 1100525008;2;Field  ;
                CaptionML=[DEU=Betrag pro Service;
                           ENU=Amount per Service;
                           NLD=Bedrag per service];
                SourceExpr=GetCostPerService("Line Type", "Type Code", "Belongs to Scheme", "Index Date") }

    { 1210190020;2;Field  ;
                CaptionML=[DEU=Stunden pro Service;
                           ENU=Hours per Service;
                           NLD=Uren per service;
                           NOR=Timer per service;
                           SVE=Timmar per service];
                SourceExpr=GetHoursPerService("Line Type", "Type Code", "Belongs to Scheme", "Index Date") }

    { 1100525044;2;Field  ;
                SourceExpr=Vendor }

    { 1100525046;2;Field  ;
                SourceExpr="Vendor Name";
                Visible=FALSE }

    { 1100528601;2;Field  ;
                CaptionML=[DEU=Norm Korrekturfaktor;
                           ENU=Adjustment Factor Norm;
                           NLD=Norm correctiefactor];
                SourceExpr=AdjustmentFactorNorm;
                OnValidate=BEGIN
                             SetAdjustmentFactorNorm(AdjustmentFactorNorm, "Line Type", "Type Code", "Belongs to Scheme", "Index Date");
                             AdjustmentFactorNorm :=
                               GetAdjustmentFactorNorm("Line Type", "Type Code", "Belongs to Scheme", "Index Date", WORKDATE, AdjustmentFactorNormLevel);
                           END;
                            }

    { 1100528602;2;Field  ;
                SourceExpr="Quantity (Survey)" }

  }
  CODE
  {
    VAR
      g_ItemCode@1100525001 : Code[20];
      g_Vendor@1100525000 : Code[20];
      GrossPriceEditable@19075252 : Boolean INDATASET;
      PurchaseDiscountEditable@19020410 : Boolean INDATASET;
      CostPriceEditable@19074279 : Boolean INDATASET;
      ItemNoEditable@19055681 : Boolean INDATASET;
      ManufacturerEditable@19042322 : Boolean INDATASET;
      BasicItemEditable@19063333 : Boolean INDATASET;
      VendorTradeItemEditable@19034316 : Boolean INDATASET;
      TradeItemEditable@19000132 : Boolean INDATASET;
      NormEditable@19001717 : Boolean INDATASET;
      RateCodeEditable@19068793 : Boolean INDATASET;
      RateEditable@1100525002 : Boolean INDATASET;
      AdjustmentFactorNorm@1100528601 : Decimal;
      AdjustmentFactorNormLevel@1100528600 : ' ,Maintenance Scheme,Modification,Standard Object,Standard Object Deinstallation,Standard Object Installation,Object Installation,Object';

    PROCEDURE StartCheckList@1100525000();
    BEGIN
      StartCheckList;
    END;

    PROCEDURE EditText@8();
    VAR
      TextFrm@11012001 : Page 11012120;
      lvText000@1100525000 : TextConst 'DEU=Geben Sie zuerst die Zeile und danach den Textblock ein.;ENU=Before editing text enter the line first;NLD=Voer eerst de regel in en daarna het tekstblok.;NOR=Velg rad f›r du redigerer tekst.;SVE=V„lj rad innan du redigerar text.';
    BEGIN
      IF "Line No." = 0 THEN
        ERROR(lvText000);

      //Line Type,Type Code,Belongs to Scheme,Index Date,Line No.
      TextFrm.SetSelection4(DATABASE::"Maint. Scheme Version Line","Type Code","Belongs to Scheme",'','','','',
        "Line Type","Line No.","Index Date");
      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE StartSpecifications@1100525001();
    BEGIN
      StartSpecifications;
    END;

    PROCEDURE UpdateForm@1100526200();
    BEGIN
      CurrPage.UPDATE;
    END;

    PROCEDURE UpdateEditable@1100528601();
    BEGIN
      ItemNoEditable := ("Cost Type" = "Cost Type"::Material);
      ManufacturerEditable := ItemNoEditable;
      BasicItemEditable := ItemNoEditable;
      VendorTradeItemEditable := ItemNoEditable;
      TradeItemEditable := ItemNoEditable;

      NormEditable := ("Cost Type" = "Cost Type"::Labor);
      RateCodeEditable := ("Cost Type" = "Cost Type"::Labor);
      RateEditable :=
        (("Cost Type" = "Cost Type"::Labor) OR ("Cost Type" = "Cost Type"::Subcontracting)) AND
         ("Rate Code" = '');

      GrossPriceEditable := (Rate = 0);
      PurchaseDiscountEditable := (Rate = 0);
      CostPriceEditable := (Rate = 0);
    END;

    LOCAL PROCEDURE CostTypeOnAfterValidate@19000073();
    BEGIN
      UpdateEditable;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE NormOnAfterValidate@19051466();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE RateCodeOnAfterValidate@19043554();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE RateOnAfterValidate@19022967();
    BEGIN
      UpdateEditable;
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

