OBJECT Codeunit 6085575 Capture Engine
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW13.70.00.5.00,4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GlobalWords@1000000001 : TEMPORARY Record 6085592;
      CaptureMgt@1000000000 : Codeunit 6085576;
      Window@1000000004 : Dialog;
      BuffWordDocNo@1000000002 : Code[20];
      BuffWordPageNo@1000000003 : Integer;
      Text001@1000000005 : TextConst 'DEU=Beleg wird verarbeitet\#1######################;ENU=Processing Document\#1######################;NLD=Document verwerken\#1######################';
      Text002@1000000006 : TextConst 'DEU=Identifizierung wird durchgefÅhrt;ENU=Performing Identfication;NLD=Indentificatie uitvoeren';
      Text003@1000000007 : TextConst 'DEU=Kopfzeile wird verarbeitet;ENU=Processing Header;NLD=Header uitvoeren';
      Text004@1000000008 : TextConst 'DEU=Zeilen werden verarbeitet;ENU=Processing Lines;NLD=Regels uitvoeren';
      HideWindow@161024012 : Boolean;

    PROCEDURE CaptureDocument@1000000001(VAR Document@1000000000 : Record 6085590);
    VAR
      Template@1000000005 : Record 6085579;
      Field@1000000001 : Record 6085580;
      Value@1000000002 : Record 6085593;
      TemplateGroup@1000000004 : Record 6085575;
      Comment@1000000007 : Record 6085594;
    BEGIN
      Document.TESTFIELD(Status,Document.Status::Open);

      IF GUIALLOWED AND (NOT HideWindow) THEN BEGIN
        Window.OPEN(Text001);
        Window.UPDATE(1,Text002);
      END;

      IF (Document."Source Record ID Tree ID" = 0) OR (Document."Template No." = '') THEN BEGIN
        FindDocumentSource(Document);

        IF Document."Template No." = '' THEN BEGIN
          IF Document."Source Record ID Tree ID" <> 0 THEN
            Document.ValidateDocument;

          IF GUIALLOWED AND (NOT HideWindow) THEN
            Window.CLOSE;

          EXIT;
        END;
      END;
      Template.GET(Document."Template No.");

      //**4PS.sn
      IF Document."Document Category Code" <> '' THEN BEGIN
        Document.Company := CheckCompany(Document);
      END;
      //**4PS.en

      Value.SETRANGE("Document No.",Document."No.");
      Value.SETRANGE("Is Value",TRUE);
      Value.DELETEALL(TRUE);

      IF GUIALLOWED AND (NOT HideWindow) THEN
        Window.UPDATE(1,Text003);
      //**4PS.sn
      Document."Amounts Only" := Template."Amounts Only";
      Document."Invoice Lines Input":= Template."Invoice Lines Input";
      //**4PS.en
      Document."Match Status" := Document."Match Status"::Unmatched;
      Document.MODIFY;
      Document.DeleteComments(Comment.Area::Match);

      Field.SETCURRENTKEY("Template No.",Type,"Sort Order");
      Field.SETRANGE("Template No.",Document."Template No.");
      Field.SETRANGE(Type,Field.Type::Header);
      IF Field.FINDSET(FALSE,FALSE) THEN
        REPEAT
          IF (NOT UseFixedValue(Document,Field,0)) THEN
            IF Field."Search for Value" THEN
              IF CaptureField(Document,0,Field,TRUE) = '' THEN
                CaptureMgt.UpdateFieldValue(Document."No.",0,0,Field,'',TRUE,FALSE);
        UNTIL Field.NEXT = 0;

      IF (Template."Recognize Lines" = Template."Recognize Lines"::Yes) AND (Template."Codeunit ID: Line Capture" <> 0) THEN BEGIN
        IF GUIALLOWED AND (NOT HideWindow) THEN
          Window.UPDATE(1,Text004);
        CODEUNIT.RUN(Template."Codeunit ID: Line Capture",Document);
      END;

      Document.AfterCapture;
      Document.ValidateDocument;

      IF GUIALLOWED AND (NOT HideWindow) THEN
        Window.CLOSE;
    END;

    PROCEDURE CaptureField@1000000006(VAR Document@1000000001 : Record 6085590;PageNo@1160040001 : Integer;VAR Field@1000000000 : Record 6085580;UpdateFieldCaption@1160040000 : Boolean) Word : Text[1024];
    VAR
      FieldCaption@1000000002 : Record 6085581;
      Page@1000000006 : Record 6085591;
      MasterTemplate@1000000009 : Record 6085579;
      MasterField@1000000007 : Record 6085580;
      Value@1000000003 : Record 6085593;
      PrevPage@1160040002 : Record 6085591;
      PrevValue@1000000004 : Record 6085593;
      Top@1160040003 : Integer;
      Left@1160040004 : Integer;
      Bottom@1160040005 : Integer;
      Right@1160040006 : Integer;
    BEGIN
      FieldCaption.SETRANGE("Template No.",Field."Template No.");
      FieldCaption.SETRANGE(Type,Field.Type);
      FieldCaption.SETRANGE(Code,Field.Code);
      FieldCaption.SETFILTER(Caption,'<>%1','');

      // *********************************************************************************************************************************
      // FIND THE VALUE BY OFFSETTING CAPTION
      // *********************************************************************************************************************************
      IF (Field."Caption Offset X" <> 0) OR (Field."Caption Offset Y" <> 0) OR (Field."Caption Is Part Of Value") THEN BEGIN
        IF FieldCaption.FINDSET(TRUE,FALSE) THEN
          REPEAT
            Word := FindWordFromCaption(Document."No.",PageNo,Field,FieldCaption,FALSE);
            IF Word <> '' THEN BEGIN
              IF UpdateFieldCaption THEN
                CaptureMgt.UpdateFieldCaption(Field,FieldCaption."Page No.",FieldCaption.Top,FieldCaption.Left,FieldCaption.DPI,
                  FieldCaption.Caption);
              EXIT(Word);
            END;
          UNTIL FieldCaption.NEXT = 0;
      END;

      // *********************************************************************************************************************************
      // FIND THE VALUE BY SEARCHING FROM THE CAPTION LIST
      // *********************************************************************************************************************************
      IF (Field."Caption Offset X" = 0) OR (Field."Caption Offset Y" = 0) THEN BEGIN
        IF FieldCaption.FINDSET(TRUE,FALSE) THEN
          REPEAT
            Word := FindWordFromCaption(Document."No.",PageNo,Field,FieldCaption,TRUE);
            IF Word <> '' THEN BEGIN
              IF UpdateFieldCaption THEN
                CaptureMgt.UpdateFieldCaption(Field,FieldCaption."Page No.",FieldCaption.Top,FieldCaption.Left,FieldCaption.DPI,
                  FieldCaption.Caption);
              EXIT(Word);
            END;
          UNTIL FieldCaption.NEXT = 0;
      END;

      // *********************************************************************************************************************************
      // FIND THE VALUE FROM THE REGION ALONE
      // *********************************************************************************************************************************
      IF NOT Field."Caption Mandatory" THEN BEGIN
        PrevValue.SETCURRENTKEY("Template No.","Is Value",Type,Code);
        PrevValue.SETRANGE("Template No.",Field."Template No.");
        PrevValue.SETRANGE("Is Value",TRUE);
        PrevValue.SETRANGE(Type,Field.Type);
        PrevValue.SETRANGE(Code,Field.Code);
        PrevValue.SETFILTER("Document No.",'<>%1',Document."No.");
        PrevValue.SETFILTER(Top,'>%1',0);
        PrevValue.SETFILTER(Left,'>%1',0);
        IF PrevValue.FINDLAST THEN BEGIN
          Page.SETRANGE("Document No.",Document."No.");
          IF PageNo > 0 THEN
            Page.SETRANGE("Page No.",PageNo);
          IF Field."Default Page Source" = Field."Default Page Source"::"First Page" THEN
            Page.FINDFIRST
          ELSE
            Page.FINDLAST;

          PrevPage.GET(PrevValue."Document No.",PrevValue."Page No.");

          Top := ROUND(PrevValue.Top * GetDPIFactor(PrevPage."TIFF Image Resolution",Page."TIFF Image Resolution"),1);
          Left := ROUND(PrevValue.Left * GetDPIFactor(PrevPage."TIFF Image Resolution",Page."TIFF Image Resolution"),1);
          Bottom := ROUND(PrevValue.Bottom * GetDPIFactor(PrevPage."TIFF Image Resolution",Page."TIFF Image Resolution"),1);

          IF Field."Typical Field Width" <> 0 THEN
            Right := Left + ROUND(Field."Typical Field Width" * GetDPIFactor(150,Page."TIFF Image Resolution"),1)
          ELSE
            Right := ROUND(PrevValue.Right * GetDPIFactor(PrevPage."TIFF Image Resolution",Page."TIFF Image Resolution"),1);

          Word := CaptureMgt.CaptureFromPos(Page,Field,0,TRUE,Top,Left,Bottom,Right,Value);

          IF CaptureMgt.ParseField(Field,Word,TRUE,Document."No.") THEN
            EXIT(Word);
        END;
      END;

      // *********************************************************************************************************************************
      // FIND THE VALUE BY SEARCHING FROM THE GLOBAL CAPTION LIST
      // *********************************************************************************************************************************
      IF (NOT Field."Never use Global Captions") THEN BEGIN
        MasterTemplate.SETCURRENTKEY("Category Code",Type);
        MasterTemplate.SETRANGE("Category Code",Document."Document Category Code");
        MasterTemplate.SETRANGE(Type,MasterTemplate.Type::Master);
        IF MasterTemplate.FINDSET(FALSE,FALSE) THEN
          REPEAT
            FieldCaption.SETRANGE("Template No.",MasterTemplate."No.");
            FieldCaption.SETRANGE(Type,Field.Type);
            FieldCaption.SETRANGE(Code,Field.Code);
            IF FieldCaption.FINDSET(TRUE,FALSE) THEN
              REPEAT
                Word := FindWordFromCaption(Document."No.",PageNo,Field,FieldCaption,TRUE); // PERFORM DYNAMIC SEARCH
                IF Word <> '' THEN
                  EXIT(Word);
              UNTIL FieldCaption.NEXT = 0;
          UNTIL MasterTemplate.NEXT = 0;
      END;
    END;

    PROCEDURE FindDocumentSource@1160040002(VAR Document@1160040000 : Record 6085590);
    BEGIN
      // *********************************************************************************************************************************
      // FIND THE SOURCE ID OF A DOCUMENT
      // *********************************************************************************************************************************

      // STEP 1: FIND SOURCE WITH SEARCH TEXTS
      IF FindSourceWithSearchTexts(Document) THEN
        EXIT;

      // STEP 2: FIND SOURCE WITH IDENTIFICATION TEMPLATE
      IF FindSourceWithIdentTemplate(Document) THEN
        EXIT;

      // STEP 3: FIND SOURCE WITH IDENTIFICATION FIELDS
      FindSourceWithIdentFields(Document);
    END;

    PROCEDURE FindSourceWithSearchTexts@1160040001(VAR Document@1160040000 : Record 6085590) : Boolean;
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Doc. - Search Word Identifier",Document);
      IF Document."Template No." <> '' THEN
        EXIT(TRUE);
    END;

    PROCEDURE FindSourceWithIdentTemplate@1160040000(VAR Document@1160040000 : Record 6085590) : Boolean;
    VAR
      DocCat@1160040006 : Record 6085575;
      Template@1160040005 : Record 6085579;
    BEGIN
      Template.SETCURRENTKEY("Category Code",Type);
      Template.SETRANGE("Category Code",Document."Document Category Code");
      Template.SETRANGE(Type,Template.Type::Identification);
      IF Template.FINDSET(FALSE,FALSE) THEN
        REPEAT
          IF Template."Codeunit ID: After Capture" > 0 THEN
            CODEUNIT.RUN(Template."Codeunit ID: After Capture",Document);
        UNTIL (Document."Source Record ID Tree ID" <> 0) OR (Template.NEXT = 0);

      EXIT(Document."Source Record ID Tree ID" <> 0);
    END;

    PROCEDURE FindSourceWithIdentFields@1160040007(VAR Document@1160040000 : Record 6085590) : Boolean;
    VAR
      DocCat@1160040005 : Record 6085575;
      RecIDMgt@1160040004 : Codeunit 6085604;
      RecRef@1160040003 : RecordRef;
      RecID@1160040002 : RecordID;
      MatchPoints@1160040001 : Integer;
      SourceID@6085573 : Integer;
    BEGIN
      GetRecFromIdentField(Document,1,RecID,MatchPoints);
      IF MatchPoints >= 15 THEN BEGIN
        DocCat.GET(Document."Document Category Code");
        IF DocCat."Source Table No." <> 0 THEN BEGIN
          RecRef.GET(RecID);
          SourceID := RecIDMgt.GetRecIDTreeID(RecRef,TRUE);
          COMMIT;

          Document.VALIDATE("Source Record ID Tree ID",SourceID);
          Document.MODIFY(TRUE);
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE FindWordFromCaption@1000000013(DocumentNo@1000000003 : Code[20];PageNo@1160040000 : Integer;VAR Field@1000000001 : Record 6085580;VAR FieldCaption@1000000000 : Record 6085581;DynamicsSearch@1000000018 : Boolean) Word : Text[1024];
    VAR
      CaptionStartWord@1000000005 : ARRAY [100] OF Record 6085592;
      CaptionEndWord@1000000004 : ARRAY [100] OF Record 6085592;
      Page@1000000009 : Record 6085591;
      LeftWord@1000000019 : TEMPORARY Record 6085592;
      TopWord@1000000020 : TEMPORARY Record 6085592;
      Value@1000000012 : Record 6085593;
      WordFunc@1000000011 : Codeunit 6085574;
      Length@1000000002 : Integer;
      Height@1000000006 : Integer;
      OffsetX@1000000007 : Integer;
      OffsetY@1000000008 : Integer;
      Top@1000000014 : Integer;
      Left@1000000015 : Integer;
      Bottom@1000000016 : Integer;
      Right@1000000017 : Integer;
      i@1000000010 : Integer;
      Stop@1000000013 : Boolean;
    BEGIN
      IF NOT FindCaption(DocumentNo,PageNo,Field,FieldCaption,CaptionStartWord,CaptionEndWord) THEN
        EXIT;

      i := 1;
      REPEAT
        Page.GET(DocumentNo,CaptionStartWord[i]."Page No.");

        Length := ROUND(IIFInt(Field."Typical Field Width" <> 0,Field."Typical Field Width",40) *
          GetDPIFactor(150,Page."TIFF Image Resolution"),1);
        Height := ROUND(IIFInt(Field."Typical Field Height" <> 0,Field."Typical Field Height",20) *
          GetDPIFactor(150,Page."TIFF Image Resolution"),1);

        // STORE THE CAPTION
        CaptureMgt.CaptureFromPos(Page,Field,0,FALSE,
          CaptionStartWord[i].Top,CaptionStartWord[i].Left,CaptionEndWord[i].Bottom,CaptionEndWord[i].Right,Value);

        IF NOT DynamicsSearch THEN BEGIN
          Top := IIFInt(Field."Caption Is Part Of Value",CaptionStartWord[i].Top,CaptionStartWord[i].Top +
            ROUND(Field."Caption Offset Y" * GetDPIFactor(Field."Offset DPI",Page."TIFF Image Resolution"),1));
          Left := IIFInt(Field."Caption Is Part Of Value",CaptionStartWord[i].Left,CaptionStartWord[i].Left +
            ROUND(Field."Caption Offset X" * GetDPIFactor(Field."Offset DPI",Page."TIFF Image Resolution"),1));
          Bottom := Top + Height;
          Right := Left + Length;

          Word := CaptureMgt.CaptureFromPos(Page,Field,0,TRUE,Top,Left,Bottom,Right,Value);
          CaptureMgt.ParseField(Field,Word,TRUE,DocumentNo);
          EXIT(Word);
        END;

      // *******************************************************************************************************************************
      // IF DATATYPE IS NUMBER THEN TRY TO FIND THE VALUE BELOW CAPTION
      // *******************************************************************************************************************************
        IF Field."Data Type" = Field."Data Type"::Number THEN BEGIN
          Top := CaptionStartWord[i].Bottom + ROUND(((CaptionStartWord[i].Bottom - CaptionStartWord[i].Top) / 2),1);
          Left := CaptionStartWord[i].Left;
          Bottom := Top + ((CaptionStartWord[i].Bottom - CaptionStartWord[i].Top));
          Right := CaptionEndWord[i].Right;

          Word := CaptureMgt.CaptureFromPos(Page,Field,0,TRUE,Top,Left,Bottom,Right,Value);

          IF CaptureMgt.ParseField(Field,Word,TRUE,DocumentNo) THEN
            EXIT(Word);
        END;

      // *******************************************************************************************************************************
      // SEARCH TO THE RIGHT OF CAPTION
      // *******************************************************************************************************************************
        Top := CaptionStartWord[i].Top + ROUND(((CaptionStartWord[i].Bottom - CaptionStartWord[i].Top) / 2),1);

        Bottom := Top + 1;
        Left := IIFInt(Field."Caption Is Part Of Value",CaptionStartWord[i].Left,
          CaptionEndWord[i].Right + ROUND(10 * GetDPIFactor(0,Page."TIFF Image Resolution"),1));
        Right := Left + ROUND(4000 * GetDPIFactor(0,Page."TIFF Image Resolution"),1);

        IF WordFunc.GetFirstWordFromLeft(Page,Top,Left,Bottom,Right,LeftWord) THEN BEGIN
          Left := LeftWord.Left;
          Right := Left + Length;

          Word := CaptureMgt.CaptureFromPos(Page,Field,0,TRUE,Top,Left,Bottom,Right,Value);
          IF CaptureMgt.ParseField(Field,Word,TRUE,DocumentNo) THEN
            EXIT(Word);
        END;

      // *******************************************************************************************************************************
      // SEARCH BELOW CAPTION
      // *******************************************************************************************************************************
        Top := IIFInt(Field."Caption Is Part Of Value",CaptionStartWord[i].Top +
          ROUND(((CaptionStartWord[i].Bottom - CaptionStartWord[i].Top) / 2),1),
          ROUND(CaptionStartWord[i].Bottom + ((CaptionStartWord[i].Bottom - CaptionStartWord[i].Top) / 2),1));
        Left := CaptionStartWord[i].Left;
        Bottom := Top + ROUND(80 * GetDPIFactor(0,Page."TIFF Image Resolution"),1);
        Right := CaptionEndWord[i].Right;

        IF WordFunc.GetFirstWordFromTop(Page,Top,Left,Bottom,Right,TopWord) THEN BEGIN
          Top := TopWord.Top;
          Bottom := TopWord.Bottom;

          Word := CaptureMgt.CaptureFromPos(Page,Field,0,TRUE,Top,Left,Bottom,Right,Value);

          IF CaptureMgt.ParseField(Field,Word,TRUE,DocumentNo) THEN
            EXIT(Word);
        END;

        IF i = 10 THEN
          Stop := TRUE
        ELSE BEGIN
          i := i + 1;
          Stop := CaptionStartWord[i].Word = '';
        END;

      UNTIL Stop;

      Word := '';
    END;

    PROCEDURE FindCaption@1000000016(DocumentNo@1000000006 : Code[20];PageNo@1000000004 : Integer;VAR Field@1000000001 : Record 6085580;FieldCaption@1000000000 : Record 6085581;VAR CaptionStartWord@1000000002 : ARRAY [100] OF Record 6085592;VAR CaptionEndWord@1000000016 : ARRAY [100] OF Record 6085592) : Boolean;
    VAR
      Doc@1160040000 : Record 6085590;
      Page@1160040004 : Record 6085591;
      PrevPage@1160040005 : Record 6085591;
      PrevCaption@1000000003 : Record 6085593;
      StartWord@1000000009 : Record 6085592;
      EndWord@1000000008 : Record 6085592;
      TempResultWord@1000000014 : ARRAY [100,2] OF Record 6085592;
      Sorter@1000000005 : TEMPORARY Record 283;
      WordFunc@1000000017 : Codeunit 6085574;
      CurrWord@1000000007 : Text[1024];
      WordFound@1000000011 : Text[1024];
      TempStr@1000000012 : Text[1024];
      I@1000000013 : Integer;
      NoOfCaptions@1000000015 : Integer;
      Found@1000000010 : Boolean;
      Stop@1000000018 : Boolean;
      PriorityTop@1160040001 : Integer;
      PriorityLeft@1160040002 : Integer;
      PagePriorityTop@1160040009 : Integer;
      PagePriorityLeft@1160040008 : Integer;
      PriorityPageNo@1160040003 : Integer;
      PrevDPIFactor@1160040006 : Integer;
      DPIFactor@1160040007 : Decimal;
    BEGIN
      BufferWords(DocumentNo,PageNo);
      CLEAR(CaptionStartWord);
      CLEAR(CaptionEndWord);

      FieldCaption.Caption := UPPERCASE(DELCHR(FieldCaption.Caption,'=',' '));
      GlobalWords.RESET;
      IF PageNo <> 0 THEN
        GlobalWords.SETRANGE("Page No.",PageNo);
      IF GlobalWords.FINDSET(FALSE,FALSE) THEN
        REPEAT
          CurrWord := UPPERCASE(DELCHR(GlobalWords.Word,'=',' '));

          IF (StartWord.Word <> '') THEN BEGIN
            IF NOT WordFunc.IsWordsOnSameLine(GlobalWords,StartWord) THEN BEGIN
              CLEAR(StartWord);
              WordFound := '';
            END;
          END;

          IF STRPOS(CurrWord,FieldCaption.Caption) > 0 THEN BEGIN
            StartWord := GlobalWords;
            EndWord := GlobalWords;
            WordFound := FieldCaption.Caption;
          END ELSE
            IF ((StartWord.Word <> '') AND (EndWord.Word = '')) THEN BEGIN
              IF (STRLEN(WordFound) + STRLEN(CurrWord) < STRLEN(FieldCaption.Caption)) THEN BEGIN
                IF (CurrWord = COPYSTR(FieldCaption.Caption,STRLEN(WordFound)+1,STRLEN(CurrWord))) THEN
                  WordFound := WordFound + CurrWord
                ELSE BEGIN
                  CLEAR(StartWord);
                  WordFound := '';
                END;
              END ELSE
                IF (COPYSTR(CurrWord,1,STRLEN(FieldCaption.Caption) - STRLEN(WordFound)) =
                  COPYSTR(FieldCaption.Caption,STRLEN(WordFound)+1))
                THEN BEGIN
                  EndWord := GlobalWords;
                  WordFound := FieldCaption.Caption;
                END ELSE BEGIN
                  CLEAR(StartWord);
                  WordFound := '';
                END;
            END ELSE BEGIN
              CLEAR(StartWord);
              WordFound := '';
            END;

          // This will search the current word, and see if it ends with part of the string to search for
          IF WordFound = '' THEN BEGIN
            TempStr := FieldCaption.Caption;
            I := 0;
            Stop := FALSE;
            WHILE (I < STRLEN(FieldCaption.Caption)) AND NOT Stop DO BEGIN
              I := I + 1;
              TempStr := COPYSTR(FieldCaption.Caption,I,1);
              IF (STRPOS(CurrWord,WordFound + TempStr) > 0) THEN BEGIN
                WordFound := WordFound + TempStr;
                StartWord := GlobalWords;
              END ELSE BEGIN
                IF STRLEN(CurrWord) > I THEN BEGIN
                  WordFound := '';
                  CLEAR(StartWord);
                END;
                Stop := TRUE;
              END;
            END;
          END;

          IF (StartWord.Word <> '') AND (EndWord.Word <> '') THEN BEGIN
            // Save the result for later comparision to other potential hits.
            NoOfCaptions := NoOfCaptions + 1;
            TempResultWord[NoOfCaptions,1] := StartWord;
            TempResultWord[NoOfCaptions,2] := EndWord;

            CLEAR(StartWord);
            CLEAR(EndWord);
            WordFound := '';
          END;
        UNTIL (GlobalWords.NEXT = 0) OR (NoOfCaptions = 100);

      // *******************************************************************************************************************
      // SELECT THE CAPTION THAT IS CLOSEST TO THE CAPTION THAT WAS ORIGINALLY SELECTED BY THE USER MANUALLY.
      // IF THE USER NEVER SELECTED THE CAPTION MANUALLY, THEN FIND THE LAST CAPTION AND PRIORITISE THE POSITION OF THAT.
      // *******************************************************************************************************************
      IF (FieldCaption.Top <> 0) OR (FieldCaption.Left <> 0) THEN BEGIN
        PrevDPIFactor := Field."Offset DPI";

        PriorityTop := FieldCaption.Top;
        PriorityLeft := FieldCaption.Left;
        PriorityPageNo := FieldCaption."Page No.";
      END ELSE BEGIN
        PrevCaption.SETCURRENTKEY("Template No.","Is Value",Type,Code);
        PrevCaption.SETRANGE("Template No.",Field."Template No.");
        PrevCaption.SETRANGE("Is Value",FALSE);
        PrevCaption.SETRANGE(Type,Field.Type);
        PrevCaption.SETRANGE(Code,Field.Code);
        PrevCaption.SETFILTER(Top,'>%1',0);
        PrevCaption.SETFILTER(Left,'>%1',0);
        IF NOT PrevCaption.FINDLAST THEN
          CLEAR(PrevCaption);

        IF PrevPage.GET(PrevCaption."Document No.",PrevCaption."Page No.") THEN
          PrevDPIFactor := PrevPage."TIFF Image Resolution"
        ELSE
          PrevDPIFactor := 0;

        PriorityTop := PrevCaption.Top;
        PriorityLeft := PrevCaption.Left;
        PriorityPageNo := PrevCaption."Page No.";
      END;

      FOR I := 1 TO NoOfCaptions DO BEGIN
        Doc.GET(DocumentNo);
        Doc.CALCFIELDS("No. of Pages");

        Page.GET(DocumentNo,TempResultWord[I,1]."Page No.");
        IF PrevDPIFactor <> 0 THEN
          DPIFactor := GetDPIFactor(PrevDPIFactor,Page."TIFF Image Resolution")
        ELSE
          DPIFactor := 1;
        PagePriorityTop := ROUND(PriorityTop * DPIFactor,1);
        PagePriorityLeft := ROUND(PriorityLeft * DPIFactor,1);

        Sorter."New Line Number" := I;
        Sorter."Old Line Number" := ABS((TempResultWord[I,1].Top - PagePriorityTop) + (TempResultWord[I,1].Left - PagePriorityLeft));
        IF (TempResultWord[I,1]."Page No." = Doc."No. of Pages") AND
          (Field."Default Page Source" = Field."Default Page Source"::"Last Page")
        THEN
          Sorter."Old Line Number" := Sorter."Old Line Number" - 15000
        ELSE
          IF TempResultWord[I,1]."Page No." = PriorityPageNo THEN
            Sorter."Old Line Number" := Sorter."Old Line Number" - 10000 // Give words on same page as previous the higher priority
          ELSE
            IF (TempResultWord[I,1]."Page No." = 1) AND (Field."Default Page Source" = Field."Default Page Source"::"First Page") THEN
              Sorter."Old Line Number" := Sorter."Old Line Number" - 5000;
        IF Sorter.INSERT THEN;
      END;

      I := 0;
      IF Sorter.FINDSET(FALSE,FALSE) THEN
        REPEAT
          I := I + 1;
          CaptionStartWord[I]:= TempResultWord[Sorter."New Line Number",1];
          CaptionEndWord[I]:= TempResultWord[Sorter."New Line Number",2];
        UNTIL (Sorter.NEXT = 0) OR (I = 10);

      EXIT(CaptionStartWord[1].Word <> '');
    END;

    PROCEDURE UseFixedValue@1000000002(VAR Document@1000000002 : Record 6085590;VAR Field@1000000000 : Record 6085580;LineNo@1000000003 : Integer) : Boolean;
    VAR
      RecIDMgt@161024012 : Codeunit 6085604;
    BEGIN
      CASE Field."Data Type" OF
        Field."Data Type"::Text:
          BEGIN
            IF Field."Fixed Value (Text)" <> '' THEN BEGIN
              CaptureMgt.UpdateFieldValue(Document."No.",0,LineNo,Field,Field."Fixed Value (Text)",TRUE,FALSE);
              EXIT(TRUE);
            END
          END;

        Field."Data Type"::Number:
          BEGIN
            IF Field."Fixed Value (Decimal)" <> 0 THEN BEGIN
              IF Field."Decimal Places" = '' THEN
                CaptureMgt.UpdateFieldValue(Document."No.",0,LineNo,Field,FORMAT(Field."Fixed Value (Decimal)"),TRUE,FALSE)
              ELSE
                CaptureMgt.UpdateFieldValue(Document."No.",0,LineNo,Field,
                  FORMAT(Field."Fixed Value (Decimal)",0,STRSUBSTNO('<Precision,%1><Standard Format,0>',Field."Decimal Places")),TRUE,
                    FALSE);

              EXIT(TRUE);
            END;
          END;

        Field."Data Type"::Date:
          BEGIN
            IF Field."Fixed Value (Date)" <> 0D THEN BEGIN
              CaptureMgt.UpdateFieldValue(Document."No.",0,LineNo,Field,FORMAT(Field."Fixed Value (Date)"),TRUE,FALSE);
              EXIT(TRUE);
            END ELSE
              IF Field."Fixed Value (Text)" = 'TODAY' THEN BEGIN
                CaptureMgt.UpdateFieldValue(Document."No.",0,LineNo,Field,FORMAT(TODAY),TRUE,FALSE);
                EXIT(TRUE);
              END;
          END;

        Field."Data Type"::Lookup:
          BEGIN
            IF Field."Fixed Value (Rec. ID Tree ID)" <> 0 THEN BEGIN
              CaptureMgt.UpdateFieldValue(Document."No.",0,LineNo,Field,
                RecIDMgt.GetKeyValue(Field."Fixed Value (Rec. ID Tree ID)",Field."Source Field No."),TRUE,FALSE);
              EXIT(TRUE);
            END;
          END;

        Field."Data Type"::Boolean:
          BEGIN
            IF Field."Fixed Value (Boolean)" THEN BEGIN
              CaptureMgt.UpdateFieldValue(Document."No.",0,LineNo,Field,FORMAT(Field."Fixed Value (Boolean)"),TRUE,FALSE);
              EXIT(TRUE);
            END;
          END;
      END;
    END;

    PROCEDURE IIFInt@1000000000(TestValue@1000000000 : Boolean;ValueIfTrue@1000000001 : Integer;ValueIfFalse@1000000002 : Integer) : Decimal;
    BEGIN
      IF TestValue THEN
        EXIT(ValueIfTrue)
      ELSE
        EXIT(ValueIfFalse);
    END;

    PROCEDURE IntersectsWith@1000000008(VAR Value@1000000008 : Record 6085593;VAR Value2@1000000009 : Record 6085593) : Boolean;
    BEGIN
      IF (Value.Left = Value2.Left) AND (Value.Right = Value2.Right) AND
        (Value.Top = Value2.Top) AND (Value.Bottom = Value2.Bottom)
      THEN
        EXIT(TRUE);

      EXIT(
        (Value.Left <= Value2.Right) AND (Value2.Left <= Value.Right) AND
        (Value.Top <= Value2.Bottom) AND (Value2.Top <= Value.Bottom));
    END;

    PROCEDURE BufferWords@1000000014(DocumentNo@1000000000 : Code[20];PageNo@1000000001 : Integer);
    VAR
      Words@1000000002 : Record 6085592;
    BEGIN
      IF (BuffWordDocNo = DocumentNo) AND ((BuffWordPageNo = PageNo) OR (BuffWordPageNo = 0)) THEN
        EXIT;

      GlobalWords.RESET;
      GlobalWords.DELETEALL;

      Words.SETRANGE("Document No.",DocumentNo);
      IF PageNo <> 0 THEN
        Words.SETRANGE("Page No.",PageNo);
      IF Words.FINDSET(FALSE,FALSE) THEN
        REPEAT
          GlobalWords := Words;
          GlobalWords.INSERT;
        UNTIL Words.NEXT = 0;

      BuffWordDocNo := DocumentNo;
      BuffWordPageNo := PageNo;
    END;

    PROCEDURE GetNextBottom@1000000004(VAR Page@1000000000 : Record 6085591;VAR Bottom@1000000001 : Integer;VAR Height@161024012 : Integer;VAR MinLeft@6085573 : Integer;VAR MaxRight@6085574 : Integer) : Boolean;
    BEGIN
      GlobalWords.SETCURRENTKEY("Document No.","Page No.",Bottom);
      GlobalWords.SETRANGE("Document No.",Page."Document No.");
      GlobalWords.SETRANGE("Page No.",Page."Page No.");
      GlobalWords.SETFILTER(Bottom,'>%1',Bottom);
      GlobalWords.SETFILTER(Left,'>=%1',MinLeft);
      GlobalWords.SETFILTER(Right,'<=%1',MaxRight);
      IF GlobalWords.FINDSET(FALSE,FALSE) THEN BEGIN
        Bottom := GlobalWords.Bottom;
        Height := ROUND(GlobalWords.Bottom - GlobalWords.Top,1);
        EXIT(TRUE);
      END ELSE BEGIN
        Bottom := 99999;
        EXIT(FALSE);
      END;
    END;

    PROCEDURE SetHideWindow@161024012(NewHideWindow@161024012 : Boolean);
    BEGIN
      HideWindow := NewHideWindow
    END;

    PROCEDURE GetRecFromIdentField@1160040006(VAR Document@1160040000 : Record 6085590;PageNo@1160040011 : Integer;VAR RecID@1160040012 : RecordID;VAR Points@1160040014 : Integer);
    VAR
      DocCat@1160040009 : Record 6085575;
      IdentifierField@1160040006 : Record 6085759;
      DocWord@1160040005 : Record 6085592;
      SourceExcl@1160040002 : Record 6085598;
      TempLookupRecID@161024013 : Record 6085760;
      BigString@1160040010 : Codeunit 6085587;
      RecIDMgt@1160040013 : Codeunit 6085604;
      RecRef@1160040007 : RecordRef;
      BestRecRef@1160040003 : RecordRef;
      FieldRef@1160040001 : FieldRef;
      BestRecMatchPoint@1160040008 : Integer;
      RecMatchPoint@1160040004 : Integer;
      RecIDTreeID@161024014 : Integer;
    BEGIN
      IdentifierField.SETRANGE("Document Category Code",Document."Document Category Code");
      IF NOT IdentifierField.FINDFIRST THEN
        EXIT;

      DocCat.GET(Document."Document Category Code");
      TempLookupRecID."Table No." := IdentifierField."Table No.";
      TempLookupRecID."Table Filter GUID" := DocCat."Document Category GUID";
      RecRef.OPEN(IdentifierField."Table No.");
      RecIDMgt.GetView(RecRef,TempLookupRecID);

      DocWord.SETRANGE("Document No.",Document."No.");
      DocWord.SETRANGE("Page No.",PageNo);
      IF NOT DocWord.FINDSET(FALSE,FALSE) THEN
        EXIT;

      REPEAT
        BigString.Append(UPPERCASE(DELCHR(DocWord.Word,'=',' ,.-;:/\*+-')));
      UNTIL DocWord.NEXT = 0;

      REPEAT
        RecIDTreeID := RecIDMgt.GetRecIDTreeID(RecRef,FALSE);
        IF NOT SourceExcl.GET(Document."Document Category Code",RecIDTreeID) THEN BEGIN
          RecMatchPoint := 0;
          IF IdentifierField.FINDSET THEN
            REPEAT
              FieldRef := RecRef.FIELD(IdentifierField."Field No.");
              RecMatchPoint += GetPoints(FORMAT(FieldRef.VALUE),BigString,STRLEN(FORMAT(FieldRef.VALUE))) * IdentifierField.Rating;
            UNTIL IdentifierField.NEXT = 0;

            IF BestRecMatchPoint < RecMatchPoint THEN BEGIN
              BestRecMatchPoint := RecMatchPoint;
              BestRecRef := RecRef.DUPLICATE;
            END;
        END;
      UNTIL RecRef.NEXT = 0;

      CLEAR(RecRef);

      IF FORMAT(BestRecRef) = '' THEN
        EXIT;

      RecID := BestRecRef.RECORDID;
      Points := BestRecMatchPoint;
      CLEAR(BestRecRef);
    END;

    PROCEDURE GetPoints@161024013(Text@161024013 : Text[250];VAR BigString@161024012 : Codeunit 6085587;Points@161024015 : Integer) : Integer;
    BEGIN
      Text := UPPERCASE(DELCHR(Text,'=',' ,.-;:/\*+-'));
      IF (Text <> '') AND (BigString.IndexOf(Text) <> -1) THEN
        EXIT(Points);
    END;

    PROCEDURE GetDPIFactor@1160040003(OldDPI@1160040000 : Integer;NewDPI@1160040001 : Integer) : Decimal;
    BEGIN
      IF OldDPI = NewDPI THEN
        EXIT(1);

      IF OldDPI = 0 THEN
        OldDPI := 150;

      IF NewDPI = 0 THEN
        NewDPI := 150;

      EXIT(NewDPI / OldDPI);
    END;

    PROCEDURE CheckCompany@1100528201(Document@1000000000 : Record 6085590) NewCompany : Text[250];
    VAR
      DocumentWord@1000000001 : Record 6085592;
      Template@1000000004 : Record 6085579;
      CategoryCompanyCaption@1000000003 : Record 11020675;
    BEGIN
      //**4PS
      Template.GET(Document."Template No.");
      NewCompany := ''; //** exit value

      CategoryCompanyCaption.SETRANGE("Document Category", Document."Document Category Code");
      IF CategoryCompanyCaption.FINDSET THEN
        REPEAT
          DocumentWord.RESET;
          DocumentWord.SETRANGE("Document No.", Document."No.");
          DocumentWord.SETRANGE("Page No.", 1);

          DocumentWord.SETFILTER(Top, '>=%1', Template."Company Name Top");
          IF Template."Company Name Bottom" <> 0 THEN
            DocumentWord.SETFILTER(Bottom, '<=%1', Template."Company Name Bottom");
          DocumentWord.SETFILTER(Left, '>=%1', Template."Company Name Left");
          IF Template."Company Name Right" <> 0 THEN
            DocumentWord.SETFILTER(Right, '<=%1', Template."Company Name Right");

          DocumentWord.SETRANGE(Type, DocumentWord.Type::Text);
          DocumentWord.SETRANGE(Word, CategoryCompanyCaption.Caption);
          IF DocumentWord.FINDFIRST THEN
            NewCompany := CategoryCompanyCaption."Translate To Company";
        UNTIL (NewCompany <> '') OR (CategoryCompanyCaption.NEXT = 0);

      IF NewCompany = '' THEN
        NewCompany := CheckMultipleWords(COMPANYNAME, Document);

      // If not found, then use input value
      IF NewCompany = '' THEN
        NewCompany := Document.Company;

      IF CategoryCompanyCaption.ISEMPTY AND (NewCompany = '') THEN
        NewCompany := COMPANYNAME;
    END;

    LOCAL PROCEDURE CheckMultipleWords@1100528200(Company@1000000000 : Text[100];Document@1000000002 : Record 6085590) : Text[250];
    VAR
      CategoryCompanyCaption@1000000003 : Record 11020675;
      TempGenericTable@1000000007 : TEMPORARY Record 11020579;
      DocumentWord@1000000008 : Record 6085592;
      Template@1100528200 : Record 6085579;
      TempText@1000000006 : Text[250];
      i@1000000005 : Integer;
      WordsFound@1000000004 : Integer;
    BEGIN
      //**4PS
      //**Split the searchargument in multiple words
      Template.GET(Document."Template No.");

      CategoryCompanyCaption.SETRANGE("Document Category", Document."Document Category Code");
      IF CategoryCompanyCaption.FINDSET THEN REPEAT
        TempGenericTable.RESET;
        TempGenericTable.DELETEALL;
        TempText := CategoryCompanyCaption.Caption;
        WHILE STRPOS(TempText, ' ') <> 0 DO BEGIN
          i += 1;
          TempGenericTable."Key Code1" := FORMAT(i);
          TempGenericTable.Text1 := COPYSTR(TempText, 1, STRPOS(TempText, ' ') - 1);
          TempGenericTable.INSERT;
          TempText := COPYSTR(TempText, STRPOS(TempText, ' ') + 1);
        END;
        IF TempText <> '' THEN BEGIN
          i += 1;
          TempGenericTable."Key Code1" := FORMAT(i);
          TempGenericTable.Text1 := TempText;
          TempGenericTable.INSERT;
        END;

        TempGenericTable.RESET;
        WordsFound := 0;
        IF TempGenericTable.FINDSET THEN REPEAT
          DocumentWord.RESET;
          DocumentWord.SETRANGE("Document No.", Document."No.");
          DocumentWord.SETRANGE("Page No.", 1);

          //DocumentWord.SETFILTER(Top, '>=%1', Template."Company Name in Parts Top");
          //IF Template."Company Name in Parts Bottom" <> 0 THEN
          //  DocumentWord.SETFILTER(Bottom, '<=%1', Template."Company Name in Parts Bottom");
          //DocumentWord.SETFILTER(Left, '>=%1', Template."Company Name in Parts Left");
          //IF Template."Company Name in Parts Right" <> 0 THEN
          //  DocumentWord.SETFILTER(Right, '<=%1', Template."Company Name in Parts Right");

          DocumentWord.SETRANGE(Type, DocumentWord.Type::Text);
          DocumentWord.SETRANGE(Word, TempGenericTable.Text1);
            IF DocumentWord.FINDFIRST THEN
              WordsFound += 1;
          UNTIL TempGenericTable.NEXT = 0;

          IF WordsFound = TempGenericTable.COUNT THEN
            EXIT(CategoryCompanyCaption."Translate To Company")

        UNTIL CategoryCompanyCaption.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

