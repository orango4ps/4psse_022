OBJECT Table 11012656 Returned Loss Order Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Returned Loss Order No.");
               GetOrderHeader();
               ReturnOrderRec.TESTFIELD(Posted,FALSE);
             END;

    OnModify=BEGIN
               GetOrderHeader();
               ReturnOrderRec.TESTFIELD(Posted,FALSE);
             END;

    OnDelete=BEGIN
               GetOrderHeader();
               ReturnOrderRec.TESTFIELD(Posted,FALSE);
             END;

    OnRename=BEGIN
               TESTFIELD("Returned Loss Order No.");
               GetOrderHeader();
               ReturnOrderRec.TESTFIELD(Posted,FALSE);
             END;

    CaptionML=[ENU=Returned Loss Order Line;
               NOR=Returnert Tap, Ordrerad;
               SVE=Returnerad f”rlust, orderrad];
  }
  FIELDS
  {
    { 10  ;   ;Returned Loss Order No.;Code20     ;TableRelation="Returned Loss Order";
                                                   OnValidate=BEGIN
                                                                IF ("Returned Loss Order No." <> '') THEN BEGIN
                                                                  ReturnOrderRec.GET("Returned Loss Order No.");
                                                                  "Exit Order No." := ReturnOrderRec."Exit Order No.";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Returned Loss Order No.;
                                                              NOR=Returnert Tap, ordrenr.;
                                                              SVE=Returnerad f”rlust, ordernr] }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 30  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF (Type <> xRec.Type) THEN BEGIN
                                                                  TempOrderLine := Rec;
                                                                  INIT;
                                                                  Type := TempOrderLine.Type;
                                                                  "Exit Order No." := TempOrderLine."Exit Order No.";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=Plant,Text;
                                                                    NOR=Maskin,Tekst;
                                                                    SVE=Maskin,Text];
                                                   OptionString=Plant,Text }
    { 40  ;   ;Exit Order No.      ;Code20        ;TableRelation="Exit Order" WHERE (Posted=CONST(Yes),
                                                                                     Type=CONST(Missing));
                                                   CaptionML=[ENU=Exit Order No.;
                                                              NOR=Sluttordrenr;
                                                              SVE=Slutordernr];
                                                   Editable=No }
    { 50  ;   ;Exit Order Line No. ;Integer       ;TableRelation="Exit Order Line"."Line No." WHERE (Exit-order No.=FIELD(Exit Order No.),
                                                                                                     Line No.=FIELD(Exit Order Line No.));
                                                   OnValidate=BEGIN
                                                                GetOrderHeader();
                                                                IF "Exit Order No." <> ReturnOrderRec."Exit Order No." THEN
                                                                  "Exit Order No." := ReturnOrderRec."Exit Order No.";

                                                                IF Type = Type::Plant THEN
                                                                  TESTFIELD("Exit Order Line No.");

                                                                IF "Exit Order Line No." <> 0 THEN BEGIN
                                                                  TESTFIELD(Type,Type::Plant);
                                                                  CheckExitOrderLine();

                                                                  ReturnOrderLineRec.RESET;
                                                                  ReturnOrderLineRec.SETCURRENTKEY("Plant Type", "No.");
                                                                  ReturnOrderLineRec.SETRANGE("Plant Type", ExitOrderLineRec."Plant Type");
                                                                  ReturnOrderLineRec.SETRANGE("No.", ExitOrderLineRec."No.");
                                                                  ReturnOrderLineRec.SETFILTER("Returned Loss Order No.", '<>%1', "Returned Loss Order No.");
                                                                  ReturnOrderLineRec.SETRANGE(Posted, FALSE);
                                                                  IF ReturnOrderLineRec.FINDFIRST THEN  //* On other not posted orders
                                                                    MESSAGE(Text002, ExitOrderLineRec."Plant Type", ExitOrderLineRec."No.",
                                                                      TABLECAPTION, ReturnOrderLineRec."Returned Loss Order No.", ReturnOrderLineRec."Line No.");

                                                                  IF "Exit Order Line No." <> xRec."Exit Order Line No." THEN BEGIN
                                                                    VALIDATE("Plant Type", ExitOrderLineRec."Plant Type");
                                                                    VALIDATE("No.", ExitOrderLineRec."No.");
                                                                    Quantity := 1;  //* Only unique plant
                                                                    Price := ExitOrderLineRec.Price;
                                                                    "Credit Amount" := ExitOrderLineRec.Amount;
                                                                    FillDefaultToLocation();
                                                                    "To Plant Group" := ExitOrderLineRec."Plant Group";
                                                                  END;
                                                                END;

                                                                CALCFIELDS("Exit Date", "Exit From Location", "Exit Amount", "Unit of Measure", "Order Amount");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF Type <> Type::Plant THEN
                                                                EXIT;
                                                              CALCFIELDS(Posted);

                                                              ExitOrderLineRec.RESET;
                                                              ExitOrderLineRec.SETRANGE("Exit-order No.", "Exit Order No.");
                                                              ExitOrderLineRec.SETRANGE(Type, ExitOrderLineRec.Type::Plant);
                                                              ExitOrderLineRec.SETRANGE(Bulk, FALSE);
                                                              ExitOrderLineRec."Exit-order No." := "Exit Order No.";
                                                              ExitOrderLineRec."Line No." := "Exit Order Line No.";
                                                              IF Posted THEN
                                                                PAGE.RUNMODAL(PAGE::"Exit Order Line List", ExitOrderLineRec)
                                                              ELSE BEGIN
                                                                ExitOrderLineRec.SETRANGE(Returned, ExitOrderLineRec.Returned::No);
                                                                IF PAGE.RUNMODAL(PAGE::"Exit Order Line List", ExitOrderLineRec) = ACTION::LookupOK THEN BEGIN
                                                                  IF (ExitOrderLineRec."Line No." <> "Exit Order Line No.") AND (ExitOrderLineRec."Line No." <> 0) THEN
                                                                    VALIDATE("Exit Order Line No.", ExitOrderLineRec."Line No.");
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Exit Order Line No.;
                                                              NOR=Sluttordre, Radnr.;
                                                              SVE=Slutorder, radnr];
                                                   BlankZero=Yes }
    { 60  ;   ;Exit Date           ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Exit Order Line".Exit-date WHERE (Exit-order No.=FIELD(Exit Order No.),
                                                                                                         Line No.=FIELD(Exit Order Line No.)));
                                                   CaptionML=[ENU=Exit Date;
                                                              NOR=Avslutte Dato;
                                                              SVE=Avsluta datum];
                                                   Editable=No }
    { 61  ;   ;Exit From Location  ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Exit Order Line"."From Location" WHERE (Exit-order No.=FIELD(Exit Order No.),
                                                                                                               Line No.=FIELD(Exit Order Line No.)));
                                                   CaptionML=[ENU=Exit From Location;
                                                              NOR=Avslute fra lokasjon;
                                                              SVE=Avsluta fr†n lagerst„lle];
                                                   Editable=No }
    { 62  ;   ;Exit Amount         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Exit Order Line".Amount WHERE (Exit-order No.=FIELD(Exit Order No.),
                                                                                                      Line No.=FIELD(Exit Order Line No.)));
                                                   CaptionML=[ENU=Exit Amount;
                                                              NOR=Avslutte bel›p;
                                                              SVE=Avsluta belopp];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 70  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   OnValidate=BEGIN
                                                                IF "Plant Type" <> '' THEN
                                                                  TESTFIELD(Type,Type::Plant);
                                                              END;

                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp];
                                                   Editable=No }
    { 75  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Text)) "Standard Text"
                                                                 ELSE IF (Type=CONST(Plant)) "Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   OnValidate=BEGIN
                                                                CASE Type OF
                                                                  Type::Text:
                                                                    BEGIN
                                                                      IF "No." <> '' THEN BEGIN
                                                                        StandardText.GET("No.");
                                                                        Description := StandardText.Description;
                                                                      END;
                                                                    END;
                                                                  Type::Plant:
                                                                    BEGIN
                                                                      ExitOrderLineRec.GET("Exit Order No.", "Exit Order Line No.");
                                                                      TESTFIELD("No.", ExitOrderLineRec."No.");  //* Not editable, must be PlantNo of the exit-orderline
                                                                      GetPlantDescription;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr;
                                                              SVE=Nr] }
    { 80  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 90  ;   ;Unit of Measure     ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type"."Unit of Measure" WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=Enhet;
                                                              SVE=M†ttenhet];
                                                   Editable=No }
    { 100 ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                CASE Type OF
                                                                  Type::Text:
                                                                    TESTFIELD(Quantity,0);
                                                                  Type::Plant:
                                                                    BEGIN
                                                                      TESTFIELD(Quantity,1);  //* Only unique plant, so only '1' allowed
                                                                      VALIDATE(Price);
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 110 ;   ;Price               ;Decimal       ;OnValidate=BEGIN
                                                                IF Price <> 0 THEN
                                                                  TESTFIELD(Type,Type::Plant);

                                                                GLSetup.GET;
                                                                "Credit Amount" := ROUND(Quantity * Price,GLSetup."Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Price;
                                                              NOR=Pris;
                                                              SVE=Pris];
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 120 ;   ;Credit Amount       ;Decimal       ;OnValidate=BEGIN
                                                                IF "Credit Amount" <> 0 THEN
                                                                  TESTFIELD(Type,Type::Plant);

                                                                IF Quantity <> 0 THEN
                                                                  Price := "Credit Amount" / Quantity
                                                                ELSE
                                                                  Price := "Credit Amount";

                                                                GLSetup.GET;
                                                                Price := ROUND(Price,GLSetup."Unit-Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Credit Amount;
                                                              NOR=Kreditbel›p;
                                                              SVE=Kreditbelopp];
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 130 ;   ;To Location         ;Code20        ;TableRelation="Plant Location";
                                                   OnValidate=BEGIN
                                                                IF "To Location" <> '' THEN BEGIN
                                                                  TESTFIELD(Type,Type::Plant);
                                                                  CheckLocationBlock(FALSE);
                                                                  IF "To Location" <> xRec."To Location" THEN
                                                                    FillDefaultOtherToFields();
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=To Location;
                                                              NOR=Til lokasjon;
                                                              SVE=Till lagerst„lle] }
    { 140 ;   ;On Location from    ;Date          ;OnValidate=BEGIN
                                                                IF "On Location from" <> 0D THEN BEGIN
                                                                  TESTFIELD(Type,Type::Plant);
                                                                  CheckOnLocationFrom();
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=On Location from;
                                                              NOR=P† lokasjon fra;
                                                              SVE=P† lagerst„lle fr†n] }
    { 150 ;   ;To Rate Code        ;Code10        ;OnValidate=BEGIN
                                                                IF "To Rate Code" <> '' THEN BEGIN
                                                                  TESTFIELD(Type,Type::Plant);
                                                                  PlantSetup.GET;
                                                                  IF NOT PlantSetup."Rate Codes" THEN
                                                                    TESTFIELD("To Rate Code", '');
                                                                  PlantRateCodeRec.CheckPlantRateCode("To Location", "To Rate Code", TRUE, '', 0);
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              GetOrderHeader();
                                                              PlantRateCodeRec.Code := PlantRateCodeRec.LookupPlantRateCode("To Location", "To Rate Code", TRUE, '', 0);
                                                              IF (NOT ReturnOrderRec.Posted) AND (Type <> Type::Text) AND (PlantRateCodeRec.Code <> "To Rate Code") THEN
                                                                VALIDATE("To Rate Code", PlantRateCodeRec.Code);
                                                            END;

                                                   CaptionML=[ENU=To Rate Code;
                                                              NOR=Til-satskode;
                                                              SVE=Till-avgiftskod] }
    { 160 ;   ;To Element          ;Code20        ;OnValidate=BEGIN
                                                                IF "To Element" <> '' THEN BEGIN
                                                                  TESTFIELD(Type,Type::Plant);
                                                                  TESTFIELD("To Location");
                                                                  PlantElementMgt.OnValidateElement("To Location", "To Element", '', FALSE);
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              lvEditable@1100525001 : Boolean;
                                                              lvNewElement@1100525000 : Code[20];
                                                            BEGIN
                                                              GetOrderHeader();
                                                              IF (NOT ReturnOrderRec.Posted) AND (Type <> Type::Text) THEN
                                                                lvEditable := TRUE;
                                                              lvNewElement := PlantElementMgt.OnLookupElement("To Location", "To Element", '', lvEditable);
                                                              IF (lvNewElement <> '') AND (lvNewElement <> "To Element") THEN
                                                                VALIDATE("To Element", lvNewElement);
                                                            END;

                                                   CaptionML=[ENU=To Element;
                                                              NOR=Til Element;
                                                              SVE=Till element] }
    { 200 ;   ;Posted              ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Returned Loss Order".Posted WHERE (No.=FIELD(Returned Loss Order No.)));
                                                   CaptionML=[ENU=Posted;
                                                              NOR=Bokf›rt;
                                                              SVE=Bokf”rd];
                                                   Editable=No }
    { 210 ;   ;Order Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Returned Loss Order Line"."Credit Amount" WHERE (Returned Loss Order No.=FIELD(Returned Loss Order No.)));
                                                   CaptionML=[ENU=Order Amount;
                                                              NOR=Ordrebel›p;
                                                              SVE=Orderbelopp];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 820 ;   ;To Plant Group      ;Code20        ;TableRelation="Plant Group";
                                                   CaptionML=ENU=To Plant Group }
  }
  KEYS
  {
    {    ;Returned Loss Order No.,Line No.        ;SumIndexFields=Credit Amount;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Plant Type,No.                           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@11012009 : TextConst 'ENU=Plant No. ''%1-%2'' is still present on location ''%3''.;NOR=Maskinnr. ''%1-%2'' finnes fortsatt p† lokasjon ''%3''.;SVE=Maskinnr ''%1-%2'' finns fortfarande p† lagerst„lle ''%3''.';
      Text002@11012010 : TextConst 'ENU=Plant No. ''%1-%2'' is already present on %3 ''%4-%5''.;NOR=Maskinnr. %1-%2 finnes allerede p† %3 ''%4-%5''.;SVE=Maskinnr %1-%2 finns fortfarande p† %3 ''%4-%5''.';
      Text003@1100485000 : TextConst 'ENU=must be greater than %1 ''%2'';NOR=m† v‘re st›rre enn %1 ''%2'';SVE=m†ste vara st”rre „n %1 ''%2''';
      GLSetup@11012000 : Record 98;
      PlantSetup@11012001 : Record 11012550;
      ReturnOrderRec@11012002 : Record 11012655;
      ReturnOrderLineRec@11012003 : Record 11012656;
      ExitOrderLineRec@1100525001 : Record 11012560;
      PlantNoRec@11012005 : Record 11012552;
      PlantLocRec@1100525006 : Record 11012554;
      PlantInventRec@1100525002 : Record 11012555;
      PlantRateCodeRec@1100525000 : Record 11020502;
      StandardText@11012006 : Record 7;
      TempOrderLine@11012007 : TEMPORARY Record 11012656;
      PlantElementMgt@1100525005 : Codeunit 11012582;

    PROCEDURE InitRecord@2();
    BEGIN
      IF ("Returned Loss Order No." <> '') THEN BEGIN
        GetOrderHeader();
        "Exit Order No." := ReturnOrderRec."Exit Order No.";
      END;
    END;

    PROCEDURE GetOrderHeader@5();
    BEGIN
      IF ("Returned Loss Order No." <> '') THEN
        ReturnOrderRec.GET("Returned Loss Order No.");
    END;

    PROCEDURE GetPlantDescription@4();
    BEGIN
      IF Type <> Type::Plant THEN
        EXIT;

      PlantNoRec.GetPlantDescription("Plant Type","No.",Description);
    END;

    PROCEDURE CheckExitOrderLine@1100525002();
    BEGIN
      ExitOrderLineRec.GET("Exit Order No.", "Exit Order Line No.");
      ExitOrderLineRec.TESTFIELD(Type, ExitOrderLineRec.Type::Plant);
      ExitOrderLineRec.CALCFIELDS(Bulk);
      ExitOrderLineRec.TESTFIELD(Bulk, FALSE);
      IF ExitOrderLineRec.Returned = ExitOrderLineRec.Returned::Yes THEN
        ExitOrderLineRec.FIELDERROR(Returned);

      ReturnOrderLineRec.RESET;
      ReturnOrderLineRec.SETRANGE("Returned Loss Order No.", "Returned Loss Order No.");
      ReturnOrderLineRec.SETFILTER("Line No.", '<>%1', "Line No.");
      ReturnOrderLineRec.SETRANGE("Plant Type", ExitOrderLineRec."Plant Type");
      ReturnOrderLineRec.SETRANGE("No.", ExitOrderLineRec."No.");
      IF ReturnOrderLineRec.FINDFIRST THEN  //* On another line of this order
        ERROR(Text002, ExitOrderLineRec."Plant Type", ExitOrderLineRec."No.",
          TABLECAPTION, ReturnOrderLineRec."Returned Loss Order No.", ReturnOrderLineRec."Line No.");

      PlantInventRec.RESET;
      PlantInventRec.SETCURRENTKEY(Removed, "Plant Type", "Plant No.");
      PlantInventRec.SETRANGE(Removed, FALSE);
      PlantInventRec.SETRANGE("Plant Type", ExitOrderLineRec."Plant Type");
      PlantInventRec.SETRANGE("Plant No.", ExitOrderLineRec."No.");
      IF PlantInventRec.FINDFIRST THEN
        ERROR(Text001, ExitOrderLineRec."Plant Type", ExitOrderLineRec."No.", PlantInventRec.Location);
    END;

    PROCEDURE CheckLocationBlock@1(Transaction@1210190000 : Boolean);
    BEGIN
      IF "To Location" <> '' THEN BEGIN
        PlantLocRec.GET("To Location");
        PlantLocRec.CheckBlock(1,FALSE,Transaction)
      END;
    END;

    PROCEDURE CheckOnLocationFrom@1100525003();
    BEGIN
      //* Removed on exit date, so in plant inventory the EndDate is the exit date. Rent should not invoiced twice on this day
      CALCFIELDS("Exit Date");
      IF "On Location from" <= "Exit Date" THEN
        FIELDERROR("On Location from", STRSUBSTNO(Text003, FIELDCAPTION("Exit Date"), "Exit Date"));
    END;

    PROCEDURE FillDefaultToLocation@1100525000();
    BEGIN
      GetOrderHeader();
      CALCFIELDS("Exit From Location");
      IF ("Exit From Location" = ReturnOrderRec.Location) AND (ReturnOrderRec.Location <> '') THEN
        "To Location" := ReturnOrderRec.Location
      ELSE BEGIN
        PlantSetup.GET;
        //DPA.so
        IF PlantSetup."Ship To Location" <> '' THEN
          "To Location" := PlantSetup."Ship To Location"
        ELSE
          "To Location" := PlantSetup."Rental Depot";
        //DPA.eo
        //DPA.sn
        "To Location" := PlantSetup.GetShipToLocation();
        IF "To Location" = '' THEN
          "To Location" := PlantSetup.GetRentalDepot();
        //DPA.en
      END;
      FillDefaultOtherToFields();
    END;

    PROCEDURE FillDefaultOtherToFields@1100525001();
    BEGIN
      IF "To Location" = '' THEN
        EXIT;
      IF NOT PlantLocRec.GET("To Location") THEN
        EXIT;

      PlantSetup.GET;
      GetOrderHeader();
      CALCFIELDS("Exit Date", "Exit From Location");

      "On Location from" := 0D;
      IF TODAY > "Exit Date" THEN
        "On Location from" := TODAY;
      "To Rate Code" := '';
      "To Element" := '';

      IF ("To Location" = "Exit From Location") THEN BEGIN
        IF (NOT PlantLocRec.Depot) THEN
          "On Location from" := "Exit Date" + 1;  //* '+1' Rental on exit date is invoiced
        PlantInventRec.RESET;
        PlantInventRec.SETCURRENTKEY(Removed, "Plant Type", "Plant No.");
        PlantInventRec.SETRANGE(Removed, TRUE);
        PlantInventRec.SETRANGE("Plant Type", "Plant Type");
        PlantInventRec.SETRANGE("Plant No.", "No.");
        PlantInventRec.SETRANGE(Location, "To Location");
        PlantInventRec.SETRANGE("Removal Order Type", PlantInventRec."Removal Order Type"::"Exit Order");
        PlantInventRec.SETRANGE("Removal Order", "Exit Order No.");
        PlantInventRec.SETRANGE("Removal Order Line", "Exit Order Line No.");
        IF PlantInventRec.FINDFIRST THEN BEGIN
          IF PlantSetup."Rate Codes" AND PlantRateCodeRec.CheckPlantRateCode("To Location", PlantInventRec."Rate Code", FALSE, '', 0) THEN
            "To Rate Code" := PlantInventRec."Rate Code";
          IF (NOT PlantLocRec.Depot) AND (PlantLocRec."Project No." <> '') THEN BEGIN
            PlantInventRec.CALCFIELDS(Element);
            "To Element" := PlantInventRec.Element;
          END;
        END;
      END;
      IF ("To Rate Code" = '') AND PlantSetup."Rate Codes" THEN BEGIN
        IF PlantLocRec.Depot THEN BEGIN
          IF PlantRateCodeRec.CheckPlantRateCode("To Location", PlantSetup."Default Rate Code", FALSE, '', 0) THEN
            "To Rate Code" := PlantSetup."Default Rate Code";
        END ELSE BEGIN
          //DP0485.so
          //IF PlantRateCodeRec.CheckPlantRateCode("To Location", PlantSetup."Default Rate Code Rental", FALSE, '') THEN
          //  "To Rate Code" := PlantSetup."Default Rate Code Rental";
          //DP0485.eo
          //DP0485.sn C009408
          "To Rate Code" := PlantRateCodeRec.GetDefaultRateCodeRental("To Location", FALSE, '');
          IF NOT PlantRateCodeRec.CheckPlantRateCode("To Location", "To Rate Code", FALSE, '', 0) THEN
            "To Rate Code" := '';
          //DP0485.en
        END;
      END;
    END;

    BEGIN
    END.
  }
}

