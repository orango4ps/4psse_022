OBJECT Report 11128017 SIE Export
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVSE11.00.00.19846,PE6.03 (11207);
  }
  PROPERTIES
  {
    CaptionML=[ENU=SIE Export;
               NOR=SIE-eksport;
               SVE=SIE-export];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  AccountingPeriod@1070001 : Record 50;
                  StartDate@1070000 : Date;
                BEGIN
                  ExportFile.TEXTMODE(TRUE);
                  ExportFile.WRITEMODE(TRUE);
                  ServerTempFilename := FileMgt.ServerTempFileName('');
                  ExportFile.CREATE(ServerTempFilename);

                  AccountFilter := "G/L Account".GETFILTERS;
                  AccountDateFilter := "G/L Account".GETFILTER("Date Filter");
                  AccountBudgetFilter := "G/L Account".GETFILTER("Budget Filter");

                  StartDate := "G/L Account".GETRANGEMIN("Date Filter");
                  AccPeriodStart := AccountingPeriod.GetFiscalYearStartDate(StartDate);
                  AccPeriodEnd := AccountingPeriod.GetFiscalYearEndDate(StartDate);

                  PrevAccPeriodStart := AccountingPeriod.GetFiscalYearStartDate(AccPeriodStart - 1);
                  PrevAccPeriodEnd := AccountingPeriod.GetFiscalYearEndDate(AccPeriodStart - 1);

                  GLSetup.GET;
                  CASE ExportType OF
                    ExportType::"1. Year - End Balances":
                      SIEType1;
                    ExportType::"2. Periodic Balances":
                      SIEType2;
                    ExportType::"3. Object Balances":
                      SIEType3;
                    ExportType::"4. Transactions":
                      SIEType4;
                  END;
                END;

    OnPostReport=BEGIN
                   ExportFile.CLOSE;
                   IF ServerFileName = '' THEN
                     FileMgt.DownloadHandler(ServerTempFilename,'','',Text001,SIEFileTxt)
                   ELSE
                     FileMgt.CopyServerFile(ServerTempFilename,ServerFileName,TRUE);
                   FileMgt.DeleteServerFile(ServerTempFilename);
                 END;

    UsageCategory=ReportsAndAnalysis;
  }
  DATASET
  {
    { 6710;    ;DataItem;                    ;
               DataItemTable=Table15;
               DataItemTableView=WHERE(Account Type=CONST(Posting));
               ReqFilterFields=No.,Income/Balance,Date Filter }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   ColumnDim := SieDimension.GetDimSelectionText;
                   OnActivateForm;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1070000;2;Field     ;
                  CaptionML=[ENU=File Type;
                             NOR=Filtype;
                             SVE=Filtyp];
                  ToolTipML=[ENU=Specifies the type of SIE file to create.;
                             SVE=Anger vilken typ av SIE-fil som ska skapas.];
                  OptionCaptionML=[ENU=1. Year - End Balances,2. Periodic Balances,3. Object Balances,4. Transactions;
                                   NOR=1. èr Õ Sluttbalanse,2. Periodiske Balanser,3. Objektbalanser,4. Transaksjoner;
                                   SVE=1. èr - Slutsaldon,2. Periodiska saldon,3. Objektsaldon,4. Transaktioner];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=ExportType }

      { 1070004;2;Field     ;
                  CaptionML=[ENU=Contact;
                             NOR=Kontaktperson;
                             SVE=Kontaktperson];
                  ToolTipML=[ENU=Specifies the name of the contact.;
                             SVE=Anger kontaktens namn.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=Contact }

      { 1070006;2;Field     ;
                  CaptionML=[ENU=Comments;
                             NOR=Kommentarer;
                             SVE=Kommentarer];
                  ToolTipML=[ENU=Specifies comments about the content of the file.;
                             SVE=Anger kommentarer om innehÜllet i filen.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=Comment }

      { 1070008;2;Field     ;
                  CaptionML=[ENU=Dimensions;
                             NOR=Dimensjoner;
                             SVE=Dimensioner];
                  ToolTipML=[ENU=Specifies the dimensions covered by the export process.;
                             SVE=Anger de dimensioner som omfattas av exporten.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=ColumnDim;
                  Editable=FALSE;
                  OnAssistEdit=BEGIN
                                 CLEAR(SieDimensionPage);
                                 SieDimensionPage.LOOKUPMODE(TRUE);
                                 SieDimensionPage.RUN;
                                 ColumnDim := SieDimension.GetDimSelectionText;
                               END;
                                }

      { 1070010;2;Field     ;
                  CaptionML=[ENU=Fiscal Year;
                             NOR=RegnskapsÜr;
                             SVE=RÑkenskapsÜr];
                  ToolTipML=[ENU=Specifies the tax year that the export process refers to;
                             SVE=Anger skatteÜret som exporten avser];
                  ApplicationArea=#Basic,#Suite;
                  Numeric=Yes;
                  SourceExpr=FiscalYear }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      SieDimension@1002 : Record 11128017;
      DimensionValue@1001 : Record 349;
      GLSetup@1000 : Record 98;
      CompanyInfo@1004 : Record 79;
      GLEntry@1008 : Record 17;
      GLAccount@1007 : Record 15;
      GLAccountRec@1006 : Record 15;
      GLAccount2@1005 : Record 15;
      FileMgt@1010 : Codeunit 419;
      SieDimensionPage@1012 : Page 11128022;
      DialogWindow@1070001 : Dialog;
      ExportFile@1070002 : File;
      ExportType@1070003 : '1. Year - End Balances,2. Periodic Balances,3. Object Balances,4. Transactions';
      Contact@1070004 : Text[30];
      AccPeriodStart@1070006 : Date;
      AccPeriodEnd@1000000024 : Date;
      PrevAccPeriodStart@1000000020 : Date;
      PrevAccPeriodEnd@1000000022 : Date;
      Counter@1000000031 : Integer;
      CounterTotal@1000000032 : Integer;
      ObjectExport@1070017 : Boolean;
      PeriodExport@1070018 : Boolean;
      Comment@1070020 : Text[100];
      FiscalYear@1070022 : Text[4];
      AccountFilter@1070023 : Text[250];
      AccountDateFilter@1070024 : Text[30];
      AccountBudgetFilter@1070025 : Text[30];
      ColumnDim@1070026 : Text;
      Header@1070031 : Boolean;
      Text001@1070032 : TextConst 'ENU=SIE files(*.se)|*.se|All files|*.*;NOR=SIE-filer (*.se)|*.se|Alle filer|*.*;SVE=SIE-filer (*.se)|*.se|Alla filer|*.*';
      Text003@1070034 : TextConst 'ENU=Creates SIE file                   #1##################\;NOR=Oppretter SIE-fil                     #1##################\;SVE=Skapar SIE-fil                     #1##################\';
      Text004@1070035 : TextConst 'ENU=SIE type                           #2##################\;NOR=SIE-type                            #2##################\;SVE=SIE-typ                            #2##################\';
      Text005@1070036 : TextConst 'ENU=Processing G/L Account             #3#### @4@@@@@@@@@@@\;NOR=Behandler hovedbokskonto        #3#### @4@@@@@@@@@@@\;SVE=Behandlar redovisningskonto        #3#### @4@@@@@@@@@@@\';
      Text006@1070037 : TextConst 'ENU=Processing periodic balance amount #5#### @6@@@@@@@@@@@\;NOR=Behandler periodisk balansebelõp   #5#### @6@@@@@@@@@@@\;SVE=Behandlar periodiskt saldobelopp   #5#### @6@@@@@@@@@@@\';
      Text007@1070038 : TextConst 'ENU=Processing object balance amount   #7#### @8@@@@@@@@@@@\;NOR=Behandler objektbalansebelõp        #7#### @8@@@@@@@@@@@\;SVE=Behandlar objektsaldobelopp        #7#### @8@@@@@@@@@@@\';
      Text008@1070039 : TextConst 'ENU=Processing transactions            #5#### @6@@@@@@@@@@@\;NOR=Behandler transaksjoner            #5#### @6@@@@@@@@@@@\;SVE=Behandlar transaktioner            #5#### @6@@@@@@@@@@@\';
      ServerTempFilename@1070100 : Text;
      SIEFileTxt@1070000 : TextConst '@@@={Locked};ENU=SIE.se;SVE=SIE.se';
      ServerFileName@1070005 : Text;

    PROCEDURE WriteFileheader@1070000();
    VAR
      ApplicationSystemConstants@1100583000 : Codeunit 9015;
    BEGIN
      DialogWindow.UPDATE(1,'');
      DialogWindow.UPDATE(2,ExportType);

      CompanyInfo.GET;
      ExportFile.WRITE(STRSUBSTNO('#FLAGGA  %1',0));
      ExportFile.WRITE(STRSUBSTNO('#PROGRAM  "%1"  "%2"','Microsoft Dynamics NAV',ApplicationSystemConstants.ApplicationVersion));
      ExportFile.WRITE(STRSUBSTNO('#FORMAT  %1','PC8'));
      ExportFile.WRITE(STRSUBSTNO('#GEN  %1  %2',FormatDate(TODAY),USERID));
      ExportFile.WRITE(STRSUBSTNO('#SIETYP  %1',FORMAT(COPYSTR(FORMAT(ExportType),1,1))));
      IF Comment <> '' THEN
        ExportFile.WRITE(STRSUBSTNO('#PROSA  "%1"',Ascii2Ansi(Comment)));
      ExportFile.WRITE(STRSUBSTNO('#ORGNR  "%1"',CompanyInfo."Registration No."));
      ExportFile.WRITE(
        STRSUBSTNO(
          '#ADRESS  "%1"  "%2"  "%3 %4"  "%5"',Ascii2Ansi(Contact),Ascii2Ansi(CompanyInfo.Address),
          Ascii2Ansi(CompanyInfo."Post Code"),Ascii2Ansi(CompanyInfo.City),CompanyInfo."Phone No."));

      ExportFile.WRITE(STRSUBSTNO('#FNAMN  "%1"',Ascii2Ansi(CompanyInfo.Name)));
      ExportFile.WRITE(STRSUBSTNO('#RAR  %1  %2  %3',0,FORMAT(FormatDate(AccPeriodStart),10),FORMAT(FormatDate(AccPeriodEnd),10)));
      ExportFile.WRITE(
        STRSUBSTNO('#RAR  %1  %2  %3',-1,FORMAT(FormatDate(PrevAccPeriodStart),10),FORMAT(FormatDate(PrevAccPeriodEnd),10)));
      IF FiscalYear <> '' THEN
        ExportFile.WRITE(STRSUBSTNO('#TAXAR  %1',FiscalYear));

      IF PeriodExport OR ObjectExport THEN
        ExportFile.WRITE(STRSUBSTNO('#OMFATTN  %1',FORMAT(FormatDate("G/L Account".GETRANGEMAX("Date Filter")),10)));
    END;

    PROCEDURE WriteTransaction@1070001();
    VAR
      DimensionSetEntry@1000 : Record 480;
      DocNo@1070001 : Code[20];
      DimensionString@1070002 : Text[250];
      PostingDate@1070003 : Date;
    BEGIN
      DocNo := '';
      GLEntry.SETCURRENTKEY("Document No.","Posting Date");
      GLEntry.SETFILTER("Posting Date",AccountDateFilter);
      CounterTotal := GLEntry.COUNT;
      IF GLEntry.FIND('-') THEN
        REPEAT
          DimensionString := '';
          Counter := Counter + 1;
          IF (GLEntry."Document No." <> DocNo) OR
             (GLEntry."Posting Date" <> PostingDate)
          THEN
            WriteTransactionHeader(GLEntry);

          DimensionSetEntry.SETRANGE("Dimension Set ID",GLEntry."Dimension Set ID");
          IF DimensionSetEntry.FINDSET THEN BEGIN
            REPEAT
              SieDimension.SETRANGE(Selected,TRUE);
              SieDimension.SETRANGE("Dimension Code",DimensionSetEntry."Dimension Code");
              IF SieDimension.FINDFIRST THEN
                DimensionString :=
                  DimensionString +
                  ' "' + FORMAT(SieDimension."SIE Dimension") + '" "' + DimensionSetEntry."Dimension Value Code" + '"';
            UNTIL DimensionSetEntry.NEXT = 0;
            ExportFile.WRITE(
              STRSUBSTNO('  #TRANS  %1  {%2}  %3  %4',
                GLEntry."G/L Account No.",Ascii2Ansi(DimensionString),
                FormatAmount(GLEntry.Amount),FormatDate(GLEntry."Posting Date")));
          END ELSE
            ExportFile.WRITE(
              STRSUBSTNO('  #TRANS  %1  {}  %2  %3',
                GLEntry."G/L Account No.",FormatAmount(GLEntry.Amount),FormatDate(GLEntry."Posting Date")));

          DocNo := GLEntry."Document No.";
          PostingDate := GLEntry."Posting Date";
          DialogWindow.UPDATE(5,Counter);
          DialogWindow.UPDATE(6,ROUND(Counter / CounterTotal * 10000,1));
        UNTIL GLEntry.NEXT = 0;
      IF DocNo <> '' THEN
        ExportFile.WRITE('}');
    END;

    PROCEDURE WriteTransactionHeader@1070002(GLEntry@1070001 : Record 17);
    BEGIN
      DialogWindow.UPDATE(5,GLEntry."Document No.");
      IF Header THEN
        ExportFile.WRITE('}');
      ExportFile.WRITE(
        STRSUBSTNO(
          // PEB0079
          //'#VER  %1  %2   %3  "%4"','A',GLEntry."Document No.",FormatDate(GLEntry."Posting Date"),Ascii2Ansi(GLEntry.Description)));
          '#VER  %1  "%2"   %3  "%4"','A',GLEntry."Document No.",FormatDate(GLEntry."Posting Date"),Ascii2Ansi(AdjustText(GLEntry.Description))));
          // 0079
      ExportFile.WRITE('{');
      Header := TRUE;
    END;

    PROCEDURE WriteDimension@1070003();
    BEGIN
      SieDimension.SETCURRENTKEY("SIE Dimension");
      SieDimension.SETRANGE(Selected,TRUE);
      IF SieDimension.FIND('-') THEN
        REPEAT
          ExportFile.WRITE(STRSUBSTNO('#DIM  %1  "%2"',SieDimension."SIE Dimension",Ascii2Ansi(SieDimension."Dimension Code")));
        UNTIL SieDimension.NEXT = 0;
      IF SieDimension.FIND('-') THEN
        REPEAT
          DimensionValue.SETRANGE("Dimension Code",SieDimension."Dimension Code");
          IF DimensionValue.FIND('-') THEN
            REPEAT
              ExportFile.WRITE(
                STRSUBSTNO(
                  '#OBJEKT  %1  "%2"  "%3"',SieDimension."SIE Dimension",Ascii2Ansi(DimensionValue.Code),
                  Ascii2Ansi(DimensionValue.Name)));
            UNTIL DimensionValue.NEXT = 0;
        UNTIL SieDimension.NEXT = 0;
    END;

    PROCEDURE GLPost@1070004();
    BEGIN
      GLAccount.COPYFILTERS("G/L Account");
      IF GLAccount.FIND('-') THEN
        REPEAT
          ExportFile.WRITE(STRSUBSTNO('#KONTO  %1  "%2"',GLAccount."No.",Ascii2Ansi(GLAccount.Name)));
          IF FiscalYear <> '' THEN
            ExportFile.WRITE(STRSUBSTNO('#SRU  %1  %2',GLAccount."No.",GLAccount."SRU-code"));
        UNTIL GLAccount.NEXT = 0;
    END;

    PROCEDURE GLAccountPost@1070005();
    BEGIN
      GLAccount := "G/L Account";
      CounterTotal := GLAccount.COUNT;
      Counter := 0;
      GLAccount.COPYFILTERS("G/L Account");
      IF GLAccount.FIND('-') THEN
        REPEAT
          Counter := Counter + 1;
          SetGLFilterPrev(GLAccount2);
          GLAccount2.CALCFIELDS("Balance at Date");

          GLAccount.SETFILTER("Date Filter",AccountDateFilter);
          GLAccount.CALCFIELDS("Balance at Date","Net Change");

          IF GLAccount."Income/Balance" = GLAccount."Income/Balance"::"Balance Sheet" THEN
            YearBalance
          ELSE
            ResultBalance;
          DialogWindow.UPDATE(3,GLAccount."No.");
          DialogWindow.UPDATE(4,ROUND(Counter / CounterTotal * 10000,1));
        UNTIL GLAccount.NEXT = 0;
    END;

    PROCEDURE YearBalance@1070006();
    BEGIN
      IF (GLAccount."Balance at Date" - GLAccount."Net Change") <> 0 THEN
        ExportFile.WRITE(STRSUBSTNO('#IB  %1  %2  %3',0,GLAccount."No.",FormatAmount(
              GLAccount."Balance at Date" - GLAccount."Net Change")));
      IF GLAccount."Balance at Date" <> 0 THEN
        ExportFile.WRITE(STRSUBSTNO('#UB  %1  %2  %3',0,GLAccount."No.",FormatAmount(GLAccount."Balance at Date")));
      IF GLAccount2."Balance at Date" <> 0 THEN
        ExportFile.WRITE(STRSUBSTNO('#UB  %1  %2  %3',-1,GLAccount."No.",FormatAmount(GLAccount2."Balance at Date")));
    END;

    PROCEDURE ResultBalance@1070007();
    BEGIN
      IF GLAccount."Balance at Date" <> 0 THEN
        ExportFile.WRITE(STRSUBSTNO('#RES  %1  %2  %3',0,GLAccount."No.",FormatAmount(GLAccount."Balance at Date")));
      IF GLAccount2."Balance at Date" <> 0 THEN
        ExportFile.WRITE(STRSUBSTNO('#RES  %1  %2  %3',-1,GLAccount."No.",FormatAmount(GLAccount2."Balance at Date")));
    END;

    PROCEDURE PeriodicPost@1070008();
    BEGIN
      Counter := 0;
      GLAccountRec.RESET;
      GLAccountRec.COPYFILTERS("G/L Account");
      GLAccountRec.SETRANGE("Account Type",GLAccountRec."Account Type"::Posting);
      CounterTotal := GLAccountRec.COUNT;
      IF GLAccountRec.FIND('-') THEN
        REPEAT
          Counter := Counter + 1;
          IF NOT PeriodExport THEN BEGIN
            SieDimension.SETCURRENTKEY("SIE Dimension");
            SieDimension.SETRANGE(Selected,TRUE);
            IF SieDimension.FIND('-') THEN
              REPEAT
                DimensionValue.SETRANGE("Dimension Code",SieDimension."Dimension Code");
                IF DimensionValue.FIND('-') THEN
                  REPEAT
                    GLAccount.RESET;
                    IF DimensionValue."Dimension Code" = GLSetup."Global Dimension 1 Code" THEN BEGIN
                      GLAccount.SETFILTER("Global Dimension 1 Filter",DimensionValue.Code);
                      GLAccount.SETFILTER("Global Dimension 2 Filter",'');
                    END;
                    IF DimensionValue."Dimension Code" = GLSetup."Global Dimension 2 Code" THEN BEGIN
                      GLAccount.SETFILTER("Global Dimension 2 Filter",DimensionValue.Code);
                      GLAccount.SETFILTER("Global Dimension 1 Filter",'');
                    END;
                    SetGLFilterPrev(GLAccount2);
                    GLAccount2.CALCFIELDS("Net Change");
                    GLAccount.SETFILTER("Date Filter",AccountDateFilter);
                    GLAccount.CALCFIELDS("Net Change");
                    IF GLAccount."Net Change" <> 0 THEN
                      ExportFile.WRITE(STRSUBSTNO('#PSALDO   %1  %2  %3  {%4 "%5"} %6',0,FORMAT(FormatDate(GLAccount.GETRANGEMAX
                              ("Date Filter")),6),GLAccount."No.",SieDimension."SIE Dimension",
                          Ascii2Ansi(DimensionValue.Code),FormatAmount(GLAccount."Net Change")));
                    IF GLAccount2."Net Change" <> 0 THEN
                      ExportFile.WRITE(STRSUBSTNO('#PSALDO  %1  %2  %3  {%4 "%5"} %6',-1,FORMAT(FormatDate(GLAccount2.GETRANGEMAX
                              ("Date Filter")),6),GLAccount2."No.",SieDimension."SIE Dimension",
                          Ascii2Ansi(DimensionValue.Code),FormatAmount(GLAccount2."Net Change")));
                    IF AccountBudgetFilter <> '' THEN BEGIN
                      GLAccount.SETFILTER("Date Filter",AccountDateFilter);
                      GLAccount.SETFILTER("Budget Filter",AccountBudgetFilter);
                      GLAccount.CALCFIELDS("Budget at Date");
                      IF GLAccount."Budgeted Amount" <> 0 THEN
                        ExportFile.WRITE(STRSUBSTNO('#PBUDGET   %1  %2  %3  {%4 "%5"} %6',0,FORMAT(FormatDate(GLAccount.GETRANGEMAX
                                ("Date Filter")),6),GLAccount."No.",SieDimension."SIE Dimension",Ascii2Ansi(DimensionValue.Code),
                            FormatAmount(GLAccount."Budget at Date")));
                      GLAccount2.SETRANGE("Date Filter",PrevAccPeriodStart,PrevAccPeriodEnd);
                      GLAccount2.SETFILTER("Budget Filter",AccountBudgetFilter);
                      GLAccount2.CALCFIELDS("Budget at Date");
                      IF GLAccount2."Budgeted Amount" <> 0 THEN
                        ExportFile.WRITE(STRSUBSTNO('#PBUDGET  %1  %2  %3  {%4 "%5"} %6',-1,FORMAT(FormatDate(GLAccount2.GETRANGEMAX
                                ("Date Filter")),6),GLAccount2."No.",SieDimension."SIE Dimension",Ascii2Ansi(DimensionValue.Code),
                            FormatAmount(GLAccount2."Budget at Date")));
                    END;
                  UNTIL DimensionValue.NEXT = 0;
              UNTIL SieDimension.NEXT = 0;
          END;
          GLAccount.RESET;
          GLAccount := GLAccountRec;
          GLAccount.SETFILTER("Global Dimension 1 Filter",'');
          GLAccount.SETFILTER("Global Dimension 2 Filter",'');
          GLAccount.SETFILTER("Date Filter",AccountDateFilter);
          GLAccount.CALCFIELDS("Net Change");
          IF GLAccount."Net Change" <> 0 THEN
            ExportFile.WRITE(STRSUBSTNO('#PSALDO   %1  %2  %3  {} %4',0,FORMAT(FormatDate(GLAccount.GETRANGEMAX
                    ("Date Filter")),6),GLAccount."No.",FormatAmount(GLAccount."Net Change")));

          SetGLFilterPrev(GLAccount2);
          GLAccount2.CALCFIELDS("Net Change");
          IF GLAccount2."Net Change" <> 0 THEN
            ExportFile.WRITE(STRSUBSTNO('#PSALDO  %1  %2  %3  {} %4',-1,FORMAT(FormatDate(GLAccount2.GETRANGEMAX
                    ("Date Filter")),6),GLAccount2."No.",FormatAmount(GLAccount2."Net Change")));
          IF AccountBudgetFilter <> '' THEN BEGIN
            GLAccount.RESET;
            GLAccount.SETFILTER("Global Dimension 1 Filter",'');
            GLAccount.SETFILTER("Global Dimension 2 Filter",'');
            GLAccount.SETFILTER("Date Filter",AccountDateFilter);
            GLAccount.SETFILTER("Budget Filter",AccountBudgetFilter);
            GLAccount.CALCFIELDS("Budgeted Amount");
            IF GLAccount."Budgeted Amount" <> 0 THEN
              ExportFile.WRITE(STRSUBSTNO('#PBUDGET   %1  %2  %3  {} %4',0,FORMAT(FormatDate(GLAccount.GETRANGEMAX
                      ("Date Filter")),6),GLAccount."No.",FormatAmount(GLAccount."Budgeted Amount")));
            SetGLFilterPrev(GLAccount2);
            GLAccount2.CALCFIELDS("Budgeted Amount");
            IF GLAccount2."Budgeted Amount" <> 0 THEN
              ExportFile.WRITE(STRSUBSTNO('#PBUDGET  %1  %2  %3  {} %4',-1,FORMAT(FormatDate(GLAccount2.GETRANGEMAX
                      ("Date Filter")),6),GLAccount2."No.",FormatAmount(GLAccount2."Budgeted Amount")));
          END;
          DialogWindow.UPDATE(7,GLAccount."No.");
          DialogWindow.UPDATE(8,ROUND(Counter / CounterTotal * 10000,1));
        UNTIL GLAccountRec.NEXT = 0;
    END;

    PROCEDURE ObjectBalance@1070009();
    BEGIN
      CounterTotal := GLAccount.COUNT;
      GLAccount.COPYFILTERS("G/L Account");
      IF GLAccount.FIND('-') THEN
        REPEAT
          Counter := Counter + 1;
          SieDimension.SETCURRENTKEY("SIE Dimension");
          SieDimension.SETRANGE(Selected,TRUE);
          IF SieDimension.FIND('-') THEN
            REPEAT
              DimensionValue.SETRANGE("Dimension Code",SieDimension."Dimension Code");
              IF DimensionValue.FIND('-') THEN
                REPEAT
                  GLAccount.RESET;
                  IF DimensionValue."Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                    GLAccount.SETFILTER("Global Dimension 1 Filter",DimensionValue.Code);
                  IF DimensionValue."Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                    GLAccount.SETFILTER("Global Dimension 2 Filter",DimensionValue.Code);
                  GLAccount.SETFILTER("Date Filter",AccountDateFilter);
                  GLAccount.SETRANGE("Date Filter",0D,CLOSINGDATE(GLAccount.GETRANGEMIN("Date Filter") - 1));
                  GLAccount.SETRANGE("Account Type",GLAccount."Account Type"::Posting);
                  GLAccount.CALCFIELDS("Balance at Date");

                  SetGLFilterPrev(GLAccount2);
                  GLAccount2.SETRANGE("Date Filter",0D,CLOSINGDATE(GLAccount2.GETRANGEMAX("Date Filter")));
                  GLAccount2.CALCFIELDS("Balance at Date");
                  IF GLAccount."Balance at Date" <> 0 THEN
                    ExportFile.WRITE(STRSUBSTNO('#OIB  %1  %2  {%3 "%4"}  %5',0,GLAccount."No.",SieDimension."SIE Dimension",
                        Ascii2Ansi(DimensionValue.Code),FormatAmount(GLAccount."Balance at Date")));
                  IF GLAccount2."Balance at Date" <> 0 THEN
                    ExportFile.WRITE(STRSUBSTNO('#OUB  %1  %2  {%3 "%4"}  %5',0,GLAccount."No.",SieDimension."SIE Dimension",
                        Ascii2Ansi(DimensionValue.Code),FormatAmount(GLAccount2."Balance at Date")));

                  GLAccount.SETRANGE("Date Filter",PrevAccPeriodStart,PrevAccPeriodEnd);
                  GLAccount.SETRANGE("Date Filter",0D,CLOSINGDATE(GLAccount.GETRANGEMIN("Date Filter") - 1));
                  GLAccount.SETFILTER("Global Dimension 1 Filter",DimensionValue.Code);
                  GLAccount.CALCFIELDS("Balance at Date");
                  SetGLFilterPrev(GLAccount2);
                  GLAccount2.SETRANGE("Date Filter",0D,CLOSINGDATE(GLAccount2.GETRANGEMAX("Date Filter")));
                  GLAccount2.SETFILTER("Global Dimension 1 Filter",DimensionValue.Code);
                  GLAccount2.CALCFIELDS("Balance at Date");
                  IF GLAccount."Balance at Date" <> 0 THEN
                    ExportFile.WRITE(STRSUBSTNO('#OIB  %1  %2  {%3 "%4"}  %5',-1,GLAccount."No.",SieDimension."SIE Dimension",
                        Ascii2Ansi(DimensionValue.Code),FormatAmount(GLAccount."Balance at Date")));
                  IF GLAccount2."Balance at Date" <> 0 THEN
                    ExportFile.WRITE(STRSUBSTNO('#OUB  %1  %2  {%3 "%4"}  %5',-1,GLAccount."No.",SieDimension."SIE Dimension",
                        Ascii2Ansi(DimensionValue.Code),FormatAmount(GLAccount2."Balance at Date")));
                UNTIL DimensionValue.NEXT = 0;
            UNTIL SieDimension.NEXT = 0;

          DialogWindow.UPDATE(5,GLAccount."No.");
          DialogWindow.UPDATE(6,ROUND(Counter / CounterTotal * 10000,1));
        UNTIL GLAccount.NEXT = 0;
    END;

    PROCEDURE Ascii2Ansi@1070010(AsciText@1070000 : Text[250]) : Text[250];
    VAR
      AsciiStr@1070006 : Text[30];
      AnsiStr@11070005 : Text[30];
      AE@1070004 : Char;
      UE@1070003 : Char;
      Lilla@1070002 : Char;
      Stora@1070001 : Char;
    BEGIN
      // PEB0079
      EXIT(AsciText);
      // 0079
      AsciiStr := 'ÜÑîÅèéôöÇàäÉÖá';
      AE := 196;
      UE := 220;
      Lilla := 229;
      Stora := 197;
      AnsiStr := FORMAT(Lilla) + '‰ˆ¸' + FORMAT(Stora) + FORMAT(AE) + '÷' + FORMAT(UE) + 'ÈÍË‚‡Á';

      EXIT(CONVERTSTR(AsciText,AsciiStr,AnsiStr));
    END;

    PROCEDURE FormatAmount@1070011(Amount@1070000 : Decimal) : Text[30];
    BEGIN
      EXIT(CONVERTSTR(FORMAT(Amount,0,'<Sign><Integer><decimal>'),',','.'));
    END;

    PROCEDURE FormatDate@1070012(Date@1070000 : Date) : Text[30];
    BEGIN
      EXIT(FORMAT(Date,8,'<Year4><month,2><day,2>'));
    END;

    PROCEDURE SetGLFilterPrev@1070013(VAR GLAccountFiltered@1070000 : Record 15);
    BEGIN
      GLAccountFiltered.RESET;
      GLAccountFiltered := GLAccount;
      GLAccountFiltered.COPYFILTERS(GLAccount);
      GLAccountFiltered.SETRANGE("Date Filter",PrevAccPeriodStart,PrevAccPeriodEnd);
    END;

    PROCEDURE SIEType1@1070014();
    BEGIN
      DialogWindow.OPEN(Text003 +
        Text004 +
        Text005);
      WriteFileheader;
      GLPost;
      GLAccountPost;
    END;

    PROCEDURE SIEType2@1070015();
    BEGIN
      DialogWindow.OPEN(Text003 +
        Text004 +
        Text005 +
        Text007);
      PeriodExport := TRUE;
      WriteFileheader;
      GLPost;
      WriteDimension;
      GLAccountPost;
      PeriodicPost;
    END;

    PROCEDURE SIEType3@1070016();
    BEGIN
      DialogWindow.OPEN(Text003 +
        Text004 +
        Text005 +
        Text006 +
        Text007);
      ObjectExport := TRUE;
      WriteFileheader;
      GLPost;
      WriteDimension;
      GLAccountPost;
      ObjectBalance;
      PeriodicPost;
    END;

    PROCEDURE SIEType4@1070017();
    BEGIN
      DialogWindow.OPEN(Text003 +
        Text004 +
        Text005 +
        Text008);
      WriteFileheader;
      WriteDimension;
      GLPost;
      GLAccountPost;
      WriteTransaction;
    END;

    LOCAL PROCEDURE OnActivateForm@19002417();
    BEGIN
      ColumnDim := SieDimension.GetDimSelectionText;
    END;

    PROCEDURE InitializeRequest@1070018(NewServerFileName@1070000 : Text);
    BEGIN
      ServerFileName := NewServerFileName;
    END;

    PROCEDURE "*** PEB ***"@12047961();
    BEGIN
    END;

    PROCEDURE AdjustText@12047960(pText@12047958 : Text) rText : Text;
    VAR
      i@12047959 : Integer;
    BEGIN
      FOR i := 1 TO STRLEN(pText) DO BEGIN
        IF pText[i] = '"' THEN
          rText += '\' + FORMAT(pText[i])
        ELSE
          rText += FORMAT(pText[i])
      END;
    END;

    BEGIN
    {
      PEB *** Begin ***
      PEB0079 Diverse justerigar i SIE (Buggar)
        - Klarar inte tecknet " i beskrivingen.
        - Klarar inte mellanslag i Verifikationsnr.
        - Ascii 2 Ansi Ñr borttagen. filen skall vara Ascii
      PEB
      PEB *** End ***
      190212 ORANGO.DL upgrade to PE8.08
    }
    END.
  }
  RDLDATA
  {
  }
}

