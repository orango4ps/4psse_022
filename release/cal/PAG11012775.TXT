OBJECT Page 11012775 Contact Feature Type List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Kontaktmerkmal Bericht;
               ENU=Contact Feature Type List;
               NLD=Relatiekenmerk lijst;
               NOR=Liste over kontaktfunksjonstyper;
               SVE=Lista ”ver kontaktfunktionstyper];
    SourceTable=Table11012753;
    DataCaptionExpr=DataCaptionTxt;
    DelayedInsert=Yes;
    PageType=List;
    OnOpenPage=BEGIN
                 CurrPage.CAPTION('');
                 CASE RelationTypeFilter OF
                   RelationTypeFilter::Company: DataCaptionTxt := FIELDCAPTION(Feature) + ' - ' + Text001;
                   RelationTypeFilter::Contact: DataCaptionTxt := FIELDCAPTION(Feature) + ' - ' + Text002;
                   RelationTypeFilter::Person: DataCaptionTxt := FIELDCAPTION(Feature) + ' - ' + Text003;
                   RelationTypeFilter::"Try-out": DataCaptionTxt := FIELDCAPTION(Feature) + ' - ' + Text004;
                   RelationTypeFilter::"Try-out Quote": DataCaptionTxt := FIELDCAPTION(Feature) + ' - ' + Text005;
                 END;
               END;

    OnNewRecord=BEGIN
                  InitRecord();
                END;

    OnInsertRecord=BEGIN
                     "Line No." := GetNextNo();
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485011;1 ;Action    ;
                      CaptionML=[DEU=A&brufen;
                                 ENU=&Get;
                                 NLD=O&phalen;
                                 NOR=&Hent;
                                 SVE=&H„mta];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ImportExport;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 FormContactList@1100485000 : Page 5052;
                                 ContactRec@1100485003 : Record 5050;
                                 FormTryOutList@1100485001 : Page 11012751;
                                 TryOutRec@1100485004 : Record 11012750;
                                 FormTryOutQuoteList@1100485002 : Page 11012765;
                                 TryOutQuoteRec@1100485005 : Record 11012758;
                               BEGIN
                                 CASE RelationTypeFilter OF
                                   RelationTypeFilter::Company:
                                     BEGIN
                                       ContactRec.FILTERGROUP(10);
                                       ContactRec.SETRANGE(Type, ContactRec.Type::Company);
                                       ContactRec.FILTERGROUP(0);
                                       FormContactList.SETTABLEVIEW(ContactRec);
                                       FormContactList.LOOKUPMODE(TRUE);
                                       IF FormContactList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                         FormContactList.GetSelectionFilter4PS(ContactRec);
                                         IF ContactRec.FIND('-') THEN
                                           REPEAT
                                             InitRecord();
                                             Code := ContactRec."No.";
                                             IF NOT RecordExists THEN BEGIN
                                               "Line No." := GetNextNo;
                                               INSERT(TRUE);
                                             END;
                                           UNTIL ContactRec.NEXT = 0;
                                       END;
                                     END;
                                   RelationTypeFilter::Contact:
                                     BEGIN
                                       ContactRec.FILTERGROUP(10);
                                       ContactRec.SETRANGE(Type, ContactRec.Type::Person);
                                       ContactRec.SETFILTER("Company No.", '<>%1', '');
                                       ContactRec.FILTERGROUP(0);
                                       FormContactList.SETTABLEVIEW(ContactRec);
                                       FormContactList.LOOKUPMODE(TRUE);
                                       IF FormContactList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                         FormContactList.GetSelectionFilter4PS(ContactRec);
                                         IF ContactRec.FIND('-') THEN
                                           REPEAT
                                             InitRecord();
                                             Code := ContactRec."No.";
                                             IF NOT RecordExists THEN BEGIN
                                               "Line No." := GetNextNo;
                                               INSERT(TRUE);
                                             END;
                                           UNTIL ContactRec.NEXT = 0;
                                       END;
                                     END;
                                   RelationTypeFilter::Person:
                                     BEGIN
                                       ContactRec.FILTERGROUP(10);
                                       ContactRec.SETRANGE(Type, ContactRec.Type::Person);
                                       ContactRec.SETFILTER("Company No.", '%1', '');
                                       ContactRec.FILTERGROUP(0);
                                       FormContactList.SETTABLEVIEW(ContactRec);
                                       FormContactList.LOOKUPMODE(TRUE);
                                       IF FormContactList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                         FormContactList.GetSelectionFilter4PS(ContactRec);
                                         IF ContactRec.FIND('-') THEN
                                           REPEAT
                                             InitRecord();
                                             Code := ContactRec."No.";
                                             IF NOT RecordExists THEN BEGIN
                                               "Line No." := GetNextNo;
                                               INSERT(TRUE);
                                             END;
                                           UNTIL ContactRec.NEXT = 0;
                                       END;
                                     END;
                                   RelationTypeFilter::"Try-out":
                                     BEGIN
                                       FormTryOutList.LOOKUPMODE(TRUE);
                                       IF FormTryOutList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                         FormTryOutList.GetSelectionFilter(TryOutRec);
                                         IF TryOutRec.FIND('-') THEN
                                           REPEAT
                                             InitRecord();
                                             Code := TryOutRec.Code;
                                             IF NOT RecordExists THEN BEGIN
                                               "Line No." := GetNextNo;
                                               INSERT(TRUE);
                                             END;
                                           UNTIL TryOutRec.NEXT = 0;
                                       END;
                                     END;
                                   RelationTypeFilter::"Try-out Quote":
                                     BEGIN
                                       FormTryOutQuoteList.LOOKUPMODE(TRUE);
                                       IF FormTryOutQuoteList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                         FormTryOutQuoteList.GetSelectionFilter(TryOutQuoteRec);
                                         IF TryOutQuoteRec.FIND('-') THEN
                                           REPEAT
                                             InitRecord();
                                             Code := TryOutQuoteRec.Code;
                                             IF NOT RecordExists THEN BEGIN
                                               "Line No." := GetNextNo;
                                               INSERT(TRUE);
                                             END;
                                           UNTIL TryOutQuoteRec.NEXT = 0;
                                       END;
                                     END;
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                GroupType=Repeater }

    { 1100485001;2;Field  ;
                SourceExpr=Code }

    { 1100485003;2;Field  ;
                CaptionML=[DEU=Name;
                           ENU=Name;
                           NLD=Naam;
                           NOR=Navn;
                           SVE=Namn];
                SourceExpr=RelationName }

    { 1100485012;2;Field  ;
                SourceExpr=Comments }

  }
  CODE
  {
    VAR
      RelationTypeFilter@1100485000 : 'Company,Contact,Person,Try-out,Try-out Quote';
      FeatureGroupFilter@1100485001 : Text[50];
      FeatureFilter@1100485004 : Code[20];
      DataCaptionTxt@1100485009 : Text[80];
      Text001@1100528704 : TextConst 'DEU=Mandanten;ENU=Companies;NLD=Bedrijven;NOR=Selskaper;SVE=F”retag';
      Text002@1100528703 : TextConst 'DEU=Ansprechpartner;ENU=Contactpersons;NLD=Contactpersonen;NOR=Kontaktpersoner;SVE=Kontaktpersoner';
      Text003@1100528702 : TextConst 'DEU=Personen;ENU=Persons;NLD=Personen;NOR=Personer;SVE=Personer';
      Text004@1100528701 : TextConst 'DEU=Lead-Generierungen;ENU=Try-outs;NLD=Trajecten;NOR=Prospekter;SVE=Anbud';
      Text005@1100528700 : TextConst 'DEU=Angebotsgenerierungen;ENU=Try-out Quotes;NLD=Trajectoffertes;NOR=Tilbudsforesp›rsler;SVE=Anbudsf”rfr†gningar';

    PROCEDURE SetKeyFields@1100485001(lRelationTypeFilter@1100485002 : Option;lFeatureGroupFilter@1100485001 : Text[50];lFeatureFilter@1100485000 : Code[20]);
    BEGIN
      RelationTypeFilter := lRelationTypeFilter;
      FeatureGroupFilter := lFeatureGroupFilter;
      FeatureFilter := lFeatureFilter;
    END;

    PROCEDURE GetNextNo@1100485000() : Integer;
    VAR
      lContactFeatureType@1100485000 : Record 11012753;
    BEGIN
      lContactFeatureType.SETRANGE("Relation Type", "Relation Type");
      lContactFeatureType.SETRANGE(Code, Code);
      IF lContactFeatureType.FINDLAST THEN
        EXIT(lContactFeatureType."Line No." + 10000)
      ELSE
        EXIT(10000);
    END;

    PROCEDURE RecordExists@1100485002() : Boolean;
    VAR
      lContactFeatureType@1100485000 : Record 11012753;
    BEGIN
      lContactFeatureType.SETCURRENTKEY("Relation Type",Code,"Feature Group",Feature);
      lContactFeatureType.SETRANGE("Relation Type", "Relation Type");
      lContactFeatureType.SETRANGE(Code, Code);
      lContactFeatureType.SETRANGE("Feature Group", "Feature Group");
      lContactFeatureType.SETRANGE(Feature, Feature);
      EXIT(lContactFeatureType.FINDFIRST);
    END;

    PROCEDURE InitRecord@1100485003();
    BEGIN
      CASE RelationTypeFilter OF
        RelationTypeFilter::Company: "Relation Type" := "Relation Type"::Company;
        RelationTypeFilter::Contact: "Relation Type" := "Relation Type"::Contact;
        RelationTypeFilter::Person: "Relation Type" := "Relation Type"::Person;
        RelationTypeFilter::"Try-out": "Relation Type" := "Relation Type"::"Try-out";
        RelationTypeFilter::"Try-out Quote": "Relation Type" := "Relation Type"::"Try-out Quote";
      END;
      "Feature Group" := FeatureGroupFilter;
      Feature := FeatureFilter;
    END;

    BEGIN
    END.
  }
}

