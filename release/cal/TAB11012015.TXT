OBJECT Table 11012015 Trade Association
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ExchangeFSA('I');
             END;

    OnModify=BEGIN
               ExchangeFSA('M');
             END;

    OnDelete=VAR
               lTradeAssCostPriceRec@1100485001 : Record 11020269;
               lTradeAssWageCCostPriceRec@1100485000 : Record 11020295;
             BEGIN
               ExchangeFSA('D');

               lTradeAssCostPriceRec.SETRANGE("Trade Association", Code);
               lTradeAssCostPriceRec.DELETEALL;

               lTradeAssWageCCostPriceRec.SETRANGE("Trade Association", Code);
               lTradeAssWageCCostPriceRec.DELETEALL;
             END;

    OnRename=BEGIN
               ExchangeFSA('R');
             END;

    CaptionML=[ENU=Trade Association;
               NOR=Bransjeorganisasjon;
               SVE=Branschorganisation];
    LookupPageID=Page11012040;
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 20  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 30  ;   ;Wage Coverage Account;Code20       ;TableRelation="G/L Account".No.;
                                                   OnValidate=BEGIN
                                                                IF "Wage Coverage Account" <> '' THEN BEGIN
                                                                  GLAcc.GET("Wage Coverage Account");
                                                                  IF GLAcc."Income/Balance" = GLAcc."Income/Balance"::"Balance Sheet" THEN
                                                                    MESSAGE(Text000,GLAcc.TABLECAPTION,GLAcc."Income/Balance");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Wage Coverage Account;
                                                              NOR=Konto for L›nnsdekning;
                                                              SVE=Konto f”r l”net„ckning] }
    { 40  ;   ;Fixed Rate          ;Decimal       ;CaptionML=[ENU=Fixed Rate OLD;
                                                              NOR=Fast gebyr GAMMEL;
                                                              SVE=Fast avgift GAMMAL];
                                                   AutoFormatType=2 }
    { 45  ;   ;Source Department Code;Option      ;OnValidate=BEGIN
                                                                IF "Source Department Code" = "Source Department Code"::Employee THEN
                                                                  "Department Code" := '';
                                                              END;

                                                   CaptionML=[ENU=Source Department Code;
                                                              NOR=Kildeavdelingskode;
                                                              SVE=Ursprungsavdelningskod];
                                                   OptionCaptionML=[ENU=Trade Association,Employee;
                                                                    NOR=Handelsorganisasjon,Ansatt;
                                                                    SVE=Branschorganisation,Anst„lld];
                                                   OptionString=Trade Association,Employee }
    { 50  ;   ;Department Code     ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                IF ("Department Code" <> '') THEN
                                                                  TESTFIELD("Source Department Code","Source Department Code"::"Trade Association");

                                                                DimMgt.ValidateDimValueCode(1,"Department Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Avdelingskode;
                                                              SVE=Mottagande avdelningskod];
                                                   CaptionClass='1,1,1' }
    { 60  ;   ;Export to Site Management;Boolean  ;CaptionML=[ENU=Export to Site Management;
                                                              NOR=Eksporter til prosjektledelse;
                                                              SVE=Exportera till byggledning] }
    { 70  ;   ;Actual Rate         ;Decimal       ;CaptionML=[ENU=Actual Rate;
                                                              NOR=Faktisk sats;
                                                              SVE=Verklig avgift];
                                                   AutoFormatType=2 }
    { 80  ;   ;External Cost Account;Code20       ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=External Cost Account;
                                                              NOR=Ekstern kostkonto;
                                                              SVE=Externt kostnadskonto] }
    { 11012000;;Hour Rate Code (Cost Plus);Code10 ;TableRelation="Hour Rate".Code;
                                                   CaptionML=[ENU=Hour Rate Code (Cost Plus);
                                                              NOR=Timesatskode (Selvkost);
                                                              SVE=Timtaxakod (sj„lvkostnad)] }
    { 11012990;;Export to FSA      ;Boolean       ;CaptionML=[ENU=Export to Field Service;
                                                              NOR=Eksporter til Feltservice;
                                                              SVE=Exportera till f„ltservice];
                                                   Description=Indication new/changed. BDA= Buitendienstadmin. (Field Service Admin.), provisional this is only field Vision. }
    { 11012991;;Date/Time Export to FSA;DateTime  ;CaptionML=[ENU=Date/Time Export to Field Service;
                                                              NOR=Dato/tid, Eksporter til Feltservice;
                                                              SVE=Datum/tid, export till f„ltservice] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@11012001 : TextConst 'ENU=Warning: %1 is a %2 Account.;NOR=Advarsel: %1 er en %2-konto.;SVE=Varning: %1 „r ett %2-konto.';
      GLAcc@11012000 : Record 15;
      DimMgt@11012002 : Codeunit 408;
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE ExchangeFSA@1100485000(IMode@1100485003 : Code[1]);
    VAR
      lvProjSetupRec@1100485001 : Record 315;
      lvFieldVisionExchangeMgtCU@1100485000 : Codeunit 11012091;
    BEGIN
      IF IMode = 'I' THEN BEGIN
        "Export to FSA" := FALSE;
        "Date/Time Export to FSA" := 0DT;
      END;
      lvProjSetupRec.GET;
      IF lvProjSetupRec."Field Service Active" THEN BEGIN
        IF IMode <> 'D' THEN BEGIN
          "Export to FSA" := TRUE;
          IF IMode = 'R' THEN
            lvFieldVisionExchangeMgtCU.StoreDeletedTradeAssociation(xRec);
        END ELSE BEGIN
          lvFieldVisionExchangeMgtCU.StoreDeletedTradeAssociation(Rec);
        END;
      END;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11012015) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11012015');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Trade Association", "Department Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Department Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Department Code");
    END;

    BEGIN
    END.
  }
}

