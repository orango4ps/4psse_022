OBJECT Table 11020464 Estimate Quantity Sheet Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF Feature <> '' THEN
                 TESTFIELD("Related to Column");
             END;

    OnModify=BEGIN
               IF Feature <> '' THEN
                 TESTFIELD("Related to Column");

               CheckRelatedToPartQuantity;  //db, 06-02-15
             END;

    OnDelete=BEGIN
               DeleteLineRelation();
             END;

    CaptionML=[ENU=Estimate Quantity Sheet Line;
               NOR=Kalkyle Í Rad for antallsspesifikasjon;
               SVE=Kalkyl Í antalsspecifikationsrad];
  }
  FIELDS
  {
    { 10  ;   ;Estimate No.        ;Code20        ;TableRelation=Estimate;
                                                   CaptionML=[ENU=Estimate No.;
                                                              NOR=Kalkylenr;
                                                              SVE=Kalkylnr] }
    { 20  ;   ;Quantity Sheet      ;Code10        ;TableRelation="Estimate Quantity Sheet Header".Code WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                              Code=FIELD(Quantity Sheet));
                                                   CaptionML=[ENU=Estimate Quantity Sheet;
                                                              NOR=Kalkyle Í antallsspesifikasjon;
                                                              SVE=Kalkyl Í antalsspecifikation] }
    { 60  ;   ;Row No.             ;Integer       ;CaptionML=[ENU=Row No.;
                                                              NOR=Rad-nr;
                                                              SVE=Rad-nr] }
    { 65  ;   ;Total               ;Option        ;OnValidate=BEGIN
                                                                Quantity := 0;
                                                                Length := 0;
                                                                Width := 0;
                                                                Height := 0;
                                                                Result := 0;
                                                                "Total Length" := 0;
                                                                "Total Width" := 0;
                                                                "Total Height" := 0;
                                                              END;

                                                   CaptionML=[ENU=Total;
                                                              NOR=Totalt;
                                                              SVE=Totalt];
                                                   OptionCaptionML=[ENU=" ,Subtotal";
                                                                    NOR=" ,Subtotal";
                                                                    SVE=" ,Subtotal"];
                                                   OptionString=[ ,Subtotal] }
    { 70  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                CalculateResultLine;
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 80  ;   ;Length              ;Decimal       ;OnValidate=BEGIN
                                                                CalculateResultLine;
                                                              END;

                                                   CaptionML=[ENU=Length;
                                                              NOR=Lengde;
                                                              SVE=L„ngd];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 90  ;   ;Width               ;Decimal       ;OnValidate=BEGIN
                                                                CalculateResultLine;
                                                              END;

                                                   CaptionML=[ENU=Width;
                                                              NOR=Bredde;
                                                              SVE=Bredd];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 100 ;   ;Height              ;Decimal       ;OnValidate=BEGIN
                                                                CalculateResultLine;
                                                              END;

                                                   CaptionML=[ENU=Height;
                                                              NOR=H›yde;
                                                              SVE=H”jd];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 110 ;   ;Result              ;Decimal       ;CaptionML=[ENU=Result;
                                                              NOR=Resultat;
                                                              SVE=Resultat];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 120 ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 130 ;   ;Feature             ;Code10        ;TableRelation="Est. Quantity Sheet Feature";
                                                   OnValidate=BEGIN
                                                                IF Feature = '' THEN
                                                                  "Related to Column" := "Related to Column"::" ";
                                                              END;

                                                   CaptionML=[ENU=Feature;
                                                              NOR=Funksjon;
                                                              SVE=Funktion] }
    { 135 ;   ;Feature Description ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Est. Quantity Sheet Feature".Description WHERE (Code=FIELD(Feature)));
                                                   CaptionML=[ENU=Feature Description;
                                                              NOR=Funksjonsbeskrivelse;
                                                              SVE=Funktionsbeskrivning];
                                                   Editable=No }
    { 140 ;   ;Related to Column   ;Option        ;CaptionML=ENU=Related to Column;
                                                   OptionCaptionML=ENU=" ,Quantity,,,Length,,,Total Length,,,Width,,,Total Width,,,Height,,,TotalHeight,,,Result";
                                                   OptionString=[ ,Quantity,,,Length,,,TotalLength,,,Width,,,TotalWidth,,,Height,,,TotalHeight,,,Result] }
    { 145 ;   ;Related to Part Quantity;Boolean   ;OnValidate=BEGIN
                                                                IF "Related to Part Quantity" THEN
                                                                  TESTFIELD("Related to Column", "Related to Column"::Quantity);
                                                              END;

                                                   CaptionML=ENU=Related to Part Quantity }
    { 320 ;   ;Formula             ;Code250       ;OnValidate=BEGIN
                                                                CalculateResultLine;
                                                              END;

                                                   CaptionML=[ENU=Formula;
                                                              NOR=Formel;
                                                              SVE=Formel] }
    { 330 ;   ;Totaling            ;Text250       ;CaptionML=[ENU=Totaling;
                                                              NOR=Summering;
                                                              SVE=Summeringsintervall] }
    { 340 ;   ;Sum Quantity        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Estimate Quantity Sheet Line".Quantity WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                                  Quantity Sheet=FIELD(Quantity Sheet),
                                                                                                                  Row No.=FIELD(FILTER(Totaling))));
                                                   CaptionML=[ENU=Sum Quantity;
                                                              NOR=Sum antall;
                                                              SVE=Summera antal];
                                                   Editable=No }
    { 350 ;   ;Sum Length          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Estimate Quantity Sheet Line".Length WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                                Quantity Sheet=FIELD(Quantity Sheet),
                                                                                                                Row No.=FIELD(FILTER(Totaling))));
                                                   CaptionML=[ENU=Sum Length;
                                                              NOR=Sum Lengde;
                                                              SVE=Summa l„ngd];
                                                   Editable=No }
    { 360 ;   ;Sum Width           ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Estimate Quantity Sheet Line".Width WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                               Quantity Sheet=FIELD(Quantity Sheet),
                                                                                                               Row No.=FIELD(FILTER(Totaling))));
                                                   CaptionML=[ENU=Sum Width;
                                                              NOR=Sum Bredde;
                                                              SVE=Summa bredd];
                                                   Editable=No }
    { 370 ;   ;Sum Height          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Estimate Quantity Sheet Line".Height WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                                Quantity Sheet=FIELD(Quantity Sheet),
                                                                                                                Row No.=FIELD(FILTER(Totaling))));
                                                   CaptionML=[ENU=Sum Height;
                                                              NOR=Sum H›yde;
                                                              SVE=Summa h”jd];
                                                   Editable=No }
    { 380 ;   ;Sum Result          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Estimate Quantity Sheet Line".Result WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                                Quantity Sheet=FIELD(Quantity Sheet),
                                                                                                                Row No.=FIELD(FILTER(Totaling))));
                                                   CaptionML=[ENU=Sum Result;
                                                              NOR=Sum Resultat;
                                                              SVE=Summa resultat];
                                                   Editable=No }
    { 390 ;   ;Sum Total Length    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Estimate Quantity Sheet Line"."Total Length" WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                                        Quantity Sheet=FIELD(Quantity Sheet),
                                                                                                                        Row No.=FIELD(FILTER(Totaling))));
                                                   CaptionML=[ENU=Sum Total Length;
                                                              NOR=Totalsum Lengde;
                                                              SVE=Totalsumma l„ngd];
                                                   Editable=No }
    { 400 ;   ;Sum Total Width     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Estimate Quantity Sheet Line"."Total Width" WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                                       Quantity Sheet=FIELD(Quantity Sheet),
                                                                                                                       Row No.=FIELD(FILTER(Totaling))));
                                                   CaptionML=[ENU=Sum Total Width;
                                                              NOR=Totalsum Bredde;
                                                              SVE=Totalsumma bredd];
                                                   Editable=No }
    { 410 ;   ;Sum Total Height    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Estimate Quantity Sheet Line"."Total Height" WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                                        Quantity Sheet=FIELD(Quantity Sheet),
                                                                                                                        Row No.=FIELD(FILTER(Totaling))));
                                                   CaptionML=[ENU=Sum Total Height;
                                                              NOR=Totalsum H›yde;
                                                              SVE=Totalsumma h”jd];
                                                   Editable=No }
    { 600 ;   ;Total Length        ;Decimal       ;CaptionML=[ENU=Total Length;
                                                              NOR=Total Lengde;
                                                              SVE=Total l„ngd];
                                                   Editable=No }
    { 610 ;   ;Total Width         ;Decimal       ;CaptionML=[ENU=Total Width;
                                                              NOR=Total Bredde;
                                                              SVE=Total bredd];
                                                   Editable=No }
    { 620 ;   ;Total Height        ;Decimal       ;CaptionML=[ENU=Total Height;
                                                              NOR=Total H›yde;
                                                              SVE=Total h”jd];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Estimate No.,Quantity Sheet,Row No.     ;SumIndexFields=Quantity,Length,Width,Height,Result,Total Length,Total Width,Total Height;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      FormulaLevel@1100485000 : Integer;
      Text001@1100485001 : TextConst 'ENU=Not allowed to calculate with results from lower rows;NOR=Det er ikke tillatt † beregne med resultat fra lavere rader;SVE=Det „r inte till†tet att ber„kna med resultat fr†n l„gre rader';
      Text002@1100528900 : TextConst 'ENU=Simplify the formula.';

    PROCEDURE CalculateResultLine@1100485000();
    BEGIN
      IF Formula <> '' THEN BEGIN
        Result := EvaluateExpression(Formula);
        "Total Length" := 0;
        "Total Width" := 0;
        "Total Height" := 0;
      END ELSE
        IF Total <> Total::" " THEN BEGIN
          Result := 0;
          "Total Length" := 0;
          "Total Width" := 0;
          "Total Height" := 0;
        END ELSE
          CalculateResult;
    END;

    PROCEDURE CalculateResult@11012000();
    VAR
      lv1@1210190000 : Decimal;
      lv2@1210190001 : Decimal;
      lv3@1210190002 : Decimal;
      lv4@1210190003 : Decimal;
    BEGIN
      lv1 := Length;
      lv2 := Width;
      lv3 := Height;
      lv4 := Quantity;

      IF Length = 0 THEN lv1 := 1;
      IF Width = 0 THEN lv2 := 1;
      IF Height = 0 THEN lv3 := 1;
      //IF Quantity = 0 THEN lv4 := 1;  //other fields are optional for result

      VALIDATE(Result, lv1 * lv2 * lv3 * lv4);
      VALIDATE("Total Length", lv4 * lv1);
      VALIDATE("Total Width" , lv4 * lv2);
      VALIDATE("Total Height" , lv4 * lv3);
    END;

    LOCAL PROCEDURE EvaluateExpression@9(Expression@1001 : Code[250]) : Decimal;
    VAR
      lvRow@1100485000 : Record 11020464;
      ExprResult@1005 : Decimal;
      Parantheses@1006 : Integer;
      Operator@1007 : Char;
      LeftOperand@1008 : Code[250];
      RightOperand@1009 : Code[250];
      LeftResult@1010 : Decimal;
      RightResult@1011 : Decimal;
      i@1012 : Integer;
      IsExpression@1013 : Boolean;
      Operators@1015 : Text[8];
      OperatorNo@1016 : Integer;
      ExpressionInt@1100485001 : Integer;
      FieldCde@1100525000 : Code[1];
    BEGIN
      //updated copy of table 11012171 summary sheet line
      ExprResult := 0;

      FormulaLevel := FormulaLevel + 1;
      IF FormulaLevel > 25 THEN
        ERROR(Text002);

      Expression := DELCHR(Expression,'<>',' ');
      IF STRLEN(Expression) > 0 THEN BEGIN
        Parantheses := 0;
        IsExpression := FALSE;
        Operators := '+-*/^VM';  // Change D into V because D used for column D.
        OperatorNo := 1;
        REPEAT
          i := STRLEN(Expression);
          REPEAT
            IF Expression[i] = '(' THEN
              Parantheses := Parantheses + 1
            ELSE
              IF Expression[i] = ')' THEN
                Parantheses := Parantheses - 1;
            IF (Parantheses = 0) AND (Expression[i] = Operators[OperatorNo]) THEN
              IsExpression := TRUE
            ELSE
              i := i - 1;
          UNTIL IsExpression OR (i <= 0);
          IF NOT IsExpression THEN
            OperatorNo := OperatorNo + 1;
        UNTIL (OperatorNo > STRLEN(Operators)) OR IsExpression;
        IF IsExpression THEN BEGIN
          IF i > 1 THEN
            LeftOperand := COPYSTR(Expression,1,i - 1)
          ELSE
            LeftOperand := '';
          IF i < STRLEN(Expression) THEN
            RightOperand := COPYSTR(Expression,i + 1)
          ELSE
            RightOperand := '';
          Operator := Expression[i];
          LeftResult :=
            EvaluateExpression(LeftOperand);
          RightResult :=
            EvaluateExpression(RightOperand);
          CASE Operator OF
            '^':
              ExprResult := POWER(LeftResult,RightResult);
            '*':
              ExprResult := LeftResult * RightResult;
            '/':
              IF RightResult = 0 THEN
                ExprResult := 0
              ELSE
                ExprResult := LeftResult / RightResult;
            'V':
              IF RightResult = 0 THEN
                ExprResult := 0
              ELSE
                ExprResult := LeftResult DIV RightResult;
            'M':
              IF RightResult = 0 THEN
                ExprResult := 0
              ELSE
                ExprResult := LeftResult MOD RightResult;
            '+':
              ExprResult := LeftResult + RightResult;
            '-':
              ExprResult := LeftResult - RightResult;
          END;
        END ELSE BEGIN
          IF (Expression[1] = '(') AND (Expression[STRLEN(Expression)] = ')') THEN
            ExprResult := EvaluateExpression(COPYSTR(Expression,2,STRLEN(Expression) - 2))
          ELSE BEGIN
            ExprResult := 0;
            CASE Expression[1] OF
            'R':
              BEGIN
                FieldCde := COPYSTR(Expression, STRLEN(Expression),1);

                IF NOT TestFieldCode(FieldCde) THEN
                  Expression := COPYSTR(Expression, 2, STRLEN(Expression) - 1)
                ELSE
                  Expression := COPYSTR(Expression, 2, STRLEN(Expression) - 2);

                EVALUATE(ExpressionInt, Expression);

                IF "Row No." <= ExpressionInt THEN
                  ERROR(Text001);

                IF lvRow.GET("Estimate No.","Quantity Sheet",ExpressionInt) THEN BEGIN
                  IF lvRow.Total <> lvRow.Total::Subtotal THEN BEGIN
                    CASE FieldCde OF
                      'A':ExprResult := lvRow.Quantity;
                      'B':ExprResult := lvRow.Length;
                      'C':ExprResult := lvRow."Total Length";
                      'D':ExprResult := lvRow.Width;
                      'E':ExprResult := lvRow."Total Width";
                      'F':ExprResult := lvRow.Height;
                      'G':ExprResult := lvRow."Total Height";
                    ELSE
                      ExprResult := lvRow.Result;
                    END;
                  END ELSE BEGIN
                    lvRow.CALCFIELDS("Sum Quantity","Sum Length","Sum Width","Sum Height","Sum Result","Sum Total Length",
                                     "Sum Total Width","Sum Total Height");
                    CASE FieldCde OF
                      'A':ExprResult := lvRow."Sum Quantity";
                      'B':ExprResult := lvRow."Sum Length";
                      'C':ExprResult := lvRow."Sum Total Length";
                      'D':ExprResult := lvRow."Sum Width";
                      'E':ExprResult := lvRow."Sum Total Width";
                      'F':ExprResult := lvRow."Sum Height";
                      'G':ExprResult := lvRow."Sum Total Height";
                    ELSE
                      ExprResult := lvRow."Sum Result";
                    END;
                  END;
                END;
              END;
            'A':
              ExprResult := Quantity;
            'B':
              ExprResult := Length;
            'C':
              ExprResult := "Total Length";
            'D':
              ExprResult := Width;
            'E':
              ExprResult := "Total Width";
            'F':
              ExprResult := Height;
            'G':
              ExprResult := "Total Height";
            'W':
              BEGIN
                Expression := COPYSTR(Expression, 2, STRLEN(Expression) - 1);
                EVALUATE(ExprResult, Expression);
              END;
            END;
          END;
        END;
      END;
      FormulaLevel := FormulaLevel - 1;
      EXIT(ExprResult);
    END;

    PROCEDURE TestFieldCode@1100525002(VAR lvFieldCde@1100525000 : Code[1]) : Boolean;
    BEGIN
      CASE lvFieldCde OF
        'A','B','C','D','E','F','G':
          EXIT(TRUE);
        ELSE BEGIN
          lvFieldCde := '';
          EXIT(FALSE);
        END;
      END;
    END;

    PROCEDURE DeleteLineRelation@1100525004();
    VAR
      QuantitySheetRelation@1100525000 : Record 11020463;
    BEGIN
      QuantitySheetRelation.SETRANGE("Estimate No.","Estimate No.");
      QuantitySheetRelation.SETRANGE("Quantity Sheet","Quantity Sheet");
      QuantitySheetRelation.SETRANGE("Quantity Sheet Line","Row No.");
      QuantitySheetRelation.DELETEALL;
    END;

    PROCEDURE CheckRelatedToPartQuantity@1100409000();
    VAR
      EstRec@1100409002 : Record 11012151;
      EstPartRec@1100409000 : Record 11072073;
      SheetHeader@1100409001 : Record 11020462;
    BEGIN
      //db, 06-02-15
      IF "Related to Part Quantity" = FALSE THEN EXIT;

      EstRec.GET("Estimate No.");

      SheetHeader.GET("Estimate No.", "Quantity Sheet");
      IF NOT EstPartRec.GET(SheetHeader."Estimate No.", SheetHeader."Sub-Estimate No.", SheetHeader."Part Group", SheetHeader.Part) THEN EXIT;

      IF "Related to Column" = "Related to Column"::Quantity THEN BEGIN
        IF Quantity <> xRec.Quantity THEN BEGIN
          //TESTFIELD(Quantity, EstPartRec."Quantity per Unit");
          EstPartRec."Quantity per Unit" := Quantity;  //db, 25-02-15: skip validate, avoid recursion
          EstPartRec.MODIFY;
        END;
      END;
    END;

    BEGIN
    END.
  }
}

