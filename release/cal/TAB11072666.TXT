OBJECT Table 11072666 Plant Comment Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckTableNo();
               CheckNo();
               CheckNo2();
               CheckEntryNo();
             END;

    OnRename=BEGIN
               CheckTableNo();
               CheckNo();
               CheckNo2();
               CheckEntryNo();
             END;

    CaptionML=[ENU=Plant Comment Line;
               NOR=Maskinkommentarrad;
               SVE=Maskin, kommentarsrad];
    LookupPageID=Page11125926;
  }
  FIELDS
  {
    { 5   ;   ;Table No.           ;Integer       ;OnValidate=BEGIN
                                                                CheckTableNo();
                                                              END;

                                                   CaptionML=[ENU=Table No.;
                                                              NOR=Tabellnr.;
                                                              SVE=Tabellnr] }
    { 10  ;   ;No.                 ;Code20        ;TableRelation=IF (Table No.=FILTER(11012551|11012552)) "Plant Type"
                                                                 ELSE IF (Table No.=CONST(11012554)) "Plant Location"
                                                                 ELSE IF (Table No.=FILTER(11012556|11012557)) "Plant Order"
                                                                 ELSE IF (Table No.=FILTER(11012559|11012560)) "Exit Order"
                                                                 ELSE IF (Table No.=CONST(11012565)) "Rental Correction"
                                                                 ELSE IF (Table No.=CONST(11020505)) "Plant Transport Order"
                                                                 ELSE IF (Table No.=CONST(11020507)) "Posted Plant Transport Order"
                                                                 ELSE IF (Table No.=CONST(11020520)) "Plant Request"
                                                                 ELSE IF (Table No.=CONST(11020517)) "Plant Transport Ride";
                                                   OnValidate=BEGIN
                                                                CheckNo();
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr;
                                                              SVE=Nr] }
    { 15  ;   ;No. 2               ;Code20        ;TableRelation=IF (Table No.=CONST(11012552)) "Plant Number".No. WHERE (Plant Type=FIELD(No.));
                                                   OnValidate=BEGIN
                                                                CheckNo2();
                                                              END;

                                                   CaptionML=[ENU=No. 2;
                                                              NOR=Nr. 2;
                                                              SVE=Nr 2] }
    { 20  ;   ;Entry No.           ;Integer       ;TableRelation=IF (Table No.=CONST(11012557)) "Plant Order Line"."Line No." WHERE (Plant Order No.=FIELD(No.))
                                                                 ELSE IF (Table No.=CONST(11012560)) "Exit Order Line"."Line No." WHERE (Exit-order No.=FIELD(No.));
                                                   OnValidate=BEGIN
                                                                CheckEntryNo();
                                                              END;

                                                   CaptionML=[ENU=Entry No.;
                                                              NOR=L›penr.;
                                                              SVE=L”pnr] }
    { 30  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 40  ;   ;Date                ;Date          ;CaptionML=[ENU=Date;
                                                              NOR=Dato;
                                                              SVE=Datum] }
    { 50  ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod] }
    { 60  ;   ;Comment             ;Text80        ;CaptionML=[ENU=Comment;
                                                              NOR=Kommentar;
                                                              SVE=Kommentar] }
    { 70  ;   ;Comment Code        ;Code20        ;TableRelation="Comment Code";
                                                   CaptionML=[ENU=Comment Code;
                                                              NOR=Kommentarkode;
                                                              SVE=Kommentarskod] }
    { 80  ;   ;Created by          ;Code50        ;TableRelation=IF (Created by App User=CONST(No)) User."User Name"
                                                                 ELSE IF (Created by App User=CONST(Yes)) "App User".Username;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Created by;
                                                              NOR=Opprettet av;
                                                              SVE=Skapades av];
                                                   Editable=Yes }
    { 85  ;   ;Created by App User ;Boolean       ;CaptionML= }
    { 90  ;   ;Time Created        ;Time          ;CaptionML=[ENU=Time;
                                                              NOR=Tid;
                                                              SVE=Tid] }
    { 100 ;   ;Line Break          ;Boolean       ;CaptionML=[ENU=Line Break;
                                                              NOR=Radbrytning;
                                                              SVE=Radbrytning] }
  }
  KEYS
  {
    {    ;Table No.,No.,No. 2,Entry No.,Line No.  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE CheckTableNo@1100529000();
    BEGIN
      CASE "Table No." OF
        DATABASE::"Plant Type",
        DATABASE::"Plant Number",
        DATABASE::"Plant Location",
        DATABASE::"Plant Order",
        DATABASE::"Plant Order Line",
        DATABASE::"Exit Order",
        DATABASE::"Exit Order Line",
        DATABASE::"Rental Correction",
        DATABASE::"Plant Transport Order",
        DATABASE::"Posted Plant Transport Order",
        DATABASE::"Plant Request",
        DATABASE::"Plant Transport Ride": //C034604.n
          EXIT;  //OK
        ELSE
          FIELDERROR("Table No.");
      END;
    END;

    PROCEDURE CheckNo@1100529006();
    BEGIN
      CASE "Table No." OF
        DATABASE::"Plant Type",
        DATABASE::"Plant Number",
        DATABASE::"Plant Location",
        DATABASE::"Plant Order",
        DATABASE::"Plant Order Line",
        DATABASE::"Exit Order",
        DATABASE::"Exit Order Line",
        DATABASE::"Rental Correction",
        DATABASE::"Plant Transport Order",
        DATABASE::"Posted Plant Transport Order",
        DATABASE::"Plant Request",
        DATABASE::"Plant Transport Ride": //C034604.n
          TESTFIELD("No.");
        ELSE
          TESTFIELD("No.", '');

      END;
    END;

    PROCEDURE CheckNo2@1100529007();
    BEGIN
      CASE "Table No." OF
        DATABASE::"Plant Number":
          TESTFIELD("No. 2");
        ELSE
          TESTFIELD("No. 2", '');
      END;
    END;

    PROCEDURE CheckEntryNo@1100529008();
    BEGIN
      CASE "Table No." OF
        DATABASE::"Plant Order Line",
        DATABASE::"Exit Order Line":
          TESTFIELD("Entry No.");
        ELSE
          TESTFIELD("Entry No.", 0);
      END;
    END;

    PROCEDURE SetUpNewLine@1();
    BEGIN
      //**4PS.so C021826
      //PlantCommentLine.SETRANGE("Table No.", "Table No.");
      //PlantCommentLine.SETRANGE("No.", "No.");
      //PlantCommentLine.SETRANGE("No. 2", "No. 2");
      //PlantCommentLine.SETRANGE("Entry No.", "Entry No.");
      //PlantCommentLine.SETRANGE(Date, WORKDATE);
      //IF NOT PlantCommentLine.FINDFIRST THEN
      //**4PS.eo
        Date := WORKDATE;

      "Time Created" := TIME;
      "Created by" := USERID;
    END;

    PROCEDURE EditCommentLines@1210190000(TableNo@1100529800 : Integer;No1@1100529002 : Code[20];No2@1100529003 : Code[20];EntryNo@1100529004 : Integer;EditableMode@1100529000 : Boolean);
    VAR
      PlantCommentLine@1100485000 : Record 11072666;
      PlantCommentSheet@1100529001 : Page 11125926;
    BEGIN
      PlantCommentLine.FILTERGROUP(2);
      PlantCommentLine.SETRANGE("Table No.", TableNo);
      PlantCommentLine.SETRANGE("No.", No1);
      CASE TableNo OF
        DATABASE::"Plant Number":
          PlantCommentLine.SETRANGE("No. 2", No2);
      END;
      CASE TableNo OF
        DATABASE::"Plant Order Line",
        DATABASE::"Exit Order Line":
          PlantCommentLine.SETRANGE("Entry No.", EntryNo);
      END;
      PlantCommentLine.FILTERGROUP(0);
      PlantCommentSheet.EDITABLE(EditableMode);
      PlantCommentSheet.SETTABLEVIEW(PlantCommentLine);
      PlantCommentSheet.RUNMODAL;
    END;

    PROCEDURE HasCommentLines@1100529003(TableNo@1100529003 : Integer;No1@1100529002 : Code[20];No2@1100529001 : Code[20];EntryNo@1100529000 : Integer) : Boolean;
    VAR
      PlantCommentLine@1100485000 : Record 11072666;
    BEGIN
      PlantCommentLine.SETRANGE("Table No.", TableNo);
      PlantCommentLine.SETRANGE("No.", No1);
      CASE TableNo OF
        DATABASE::"Plant Number":
          PlantCommentLine.SETRANGE("No. 2", No2);
      END;
      CASE TableNo OF
        DATABASE::"Plant Order Line",
        DATABASE::"Exit Order Line":
          PlantCommentLine.SETRANGE("Entry No.", EntryNo);
      END;
      EXIT(NOT PlantCommentLine.ISEMPTY);
    END;

    PROCEDURE DeleteComments@1100529001(TableNo@1100529003 : Integer;No1@1100529002 : Code[20];No2@1100529001 : Code[20];EntryNo@1100529000 : Integer);
    VAR
      PlantCommentLine@1100485000 : Record 11072666;
    BEGIN
      PlantCommentLine.SETRANGE("Table No.", TableNo);
      PlantCommentLine.SETRANGE("No.", No1);
      CASE TableNo OF
        DATABASE::"Plant Number":
          PlantCommentLine.SETRANGE("No. 2", No2);
      END;
      CASE TableNo OF
        DATABASE::"Plant Order Line",
        DATABASE::"Exit Order Line":
          PlantCommentLine.SETRANGE("Entry No.", EntryNo);
      END;
      PlantCommentLine.DELETEALL;
    END;

    PROCEDURE MoveComments@1100525175(SourceTableNo@1100529007 : Integer;SourceNo1@1100529006 : Code[20];SourceNo2@1100529005 : Code[20];SourceEntryNo@1100529004 : Integer;TargetTableNo@1100529003 : Integer;TargetNo1@1100529002 : Code[20];TargetNo2@1100529001 : Code[20];TargetEntryNo@1100529000 : Integer);
    BEGIN
      TransferCommentLines(SourceTableNo,SourceNo1,SourceNo2,SourceEntryNo,TargetTableNo,TargetNo1,TargetNo2,TargetEntryNo,FALSE);
    END;

    PROCEDURE CopyComments@1100528402(SourceTableNo@1100529007 : Integer;SourceNo1@1100529006 : Code[20];SourceNo2@1100529005 : Code[20];SourceEntryNo@1100529004 : Integer;TargetTableNo@1100529003 : Integer;TargetNo1@1100529002 : Code[20];TargetNo2@1100529001 : Code[20];TargetEntryNo@1100529000 : Integer);
    BEGIN
      TransferCommentLines(SourceTableNo,SourceNo1,SourceNo2,SourceEntryNo,TargetTableNo,TargetNo1,TargetNo2,TargetEntryNo,TRUE);
    END;

    LOCAL PROCEDURE TransferCommentLines@1100528403(SourceTableNo@1100529004 : Integer;SourceNo1@1100529003 : Code[20];SourceNo2@1100529001 : Code[20];SourceEntryNo@1100529000 : Integer;TargetTableNo@1100529008 : Integer;TargetNo1@1100529007 : Code[20];TargetNo2@1100529006 : Code[20];TargetEntryNo@1100529005 : Integer;CopySource@1100528400 : Boolean);
    VAR
      SourceCommentLine@1100525002 : Record 11072666;
      TargetCommentLine@1100525003 : Record 11072666;
      NextLineNo@1100529002 : Integer;
    BEGIN
      SourceCommentLine.SETRANGE("Table No.", SourceTableNo);
      SourceCommentLine.SETRANGE("No.", SourceNo1);
      SourceCommentLine.SETRANGE("No. 2", SourceNo2);
      SourceCommentLine.SETRANGE("Entry No.", SourceEntryNo);
      IF SourceCommentLine.FINDSET(TRUE, FALSE) THEN BEGIN
        TargetCommentLine.SETRANGE("Table No.", TargetTableNo);
        TargetCommentLine.SETRANGE("No.", TargetNo1);
        TargetCommentLine.SETRANGE("No. 2", TargetNo2);
        TargetCommentLine.SETRANGE("Entry No.", TargetEntryNo);
        IF NOT TargetCommentLine.FINDLAST THEN
          NextLineNo := 10000
        ELSE
          NextLineNo := TargetCommentLine."Line No." + 10000;
        TargetCommentLine.RESET;
        REPEAT
          TargetCommentLine.INIT;
          TargetCommentLine."Table No." := TargetTableNo;
          TargetCommentLine."No." := TargetNo1;
          TargetCommentLine."No. 2" := TargetNo2;
          TargetCommentLine."Entry No." := TargetEntryNo;
          TargetCommentLine."Line No." := NextLineNo;
          TargetCommentLine.TRANSFERFIELDS(SourceCommentLine, FALSE);
          IF NOT CopySource THEN
            SourceCommentLine.DELETE
          ELSE BEGIN
            IF SourceCommentLine.Date <> 0D THEN  //Fill target date only for lines were source date is filled
              TargetCommentLine.Date := TODAY;
            TargetCommentLine."Created by" := USERID;
            TargetCommentLine."Time Created" := TIME;
          END;
          TargetCommentLine.INSERT(TRUE);
          NextLineNo := NextLineNo + 1;
        UNTIL SourceCommentLine.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE WriteBufferToCommentLines@1100528000(VAR TempCommentLineBuffer@1100528000 : TEMPORARY Record 11072666;TargetTableNo@1100529008 : Integer;TargetNo1@1100529007 : Code[20];TargetNo2@1100529006 : Code[20];TargetEntryNo@1100529005 : Integer);
    VAR
      TargetCommentLine@1100525003 : Record 11072666;
      NextLineNo@1100529002 : Integer;
    BEGIN
      IF NOT TempCommentLineBuffer.FINDSET THEN
        EXIT;

      TargetCommentLine.SETRANGE("Table No.", TargetTableNo);
      TargetCommentLine.SETRANGE("No.", TargetNo1);
      TargetCommentLine.SETRANGE("No. 2", TargetNo2);
      TargetCommentLine.SETRANGE("Entry No.", TargetEntryNo);
      IF NOT TargetCommentLine.FINDLAST THEN
        NextLineNo := 10000
      ELSE
        NextLineNo := TargetCommentLine."Line No." + 10000;
      TargetCommentLine.RESET;

      REPEAT
        TargetCommentLine.INIT;
        TargetCommentLine."Table No." := TargetTableNo;
        TargetCommentLine."No." := TargetNo1;
        TargetCommentLine."No. 2" := TargetNo2;
        TargetCommentLine."Entry No." := TargetEntryNo;
        TargetCommentLine."Line No." := NextLineNo;
        TargetCommentLine.TRANSFERFIELDS(TempCommentLineBuffer, FALSE);
        TargetCommentLine.INSERT(TRUE);
        NextLineNo := NextLineNo + 100;
      UNTIL TempCommentLineBuffer.NEXT = 0;
    END;

    PROCEDURE InsertPltOrdCommentLns@1100528010(CommentBuffer@1100528000 : Text;CommentsFromAppUser@1100528005 : Boolean;CommentedBy@1100528003 : Code[20];CommentedAt@1100528004 : DateTime;PlantOrder@1100528002 : Record 11012556);
    VAR
      TempCommentLineBuffer@1100528001 : TEMPORARY Record 11072666;
    BEGIN
      IF IsStringEmpty(CommentBuffer) THEN
        EXIT;

      SplitCommentText(CommentBuffer, CommentsFromAppUser, CommentedBy, CommentedAt, TempCommentLineBuffer);
      WriteBufferToCommentLines(TempCommentLineBuffer, DATABASE::"Plant Order", PlantOrder."No.", '', 0);
    END;

    PROCEDURE InsertPltOrdLineCommentLns@1100528011(CommentBuffer@1100528000 : Text;CommentsFromAppUser@1100528005 : Boolean;CommentedBy@1100528004 : Code[20];CommentedAt@1100528003 : DateTime;PlantOrderLine@1100528002 : Record 11012557);
    VAR
      TempCommentLineBuffer@1100528001 : TEMPORARY Record 11072666;
    BEGIN
      IF IsStringEmpty(CommentBuffer) THEN
        EXIT;

      SplitCommentText(CommentBuffer, CommentsFromAppUser, CommentedBy, CommentedAt, TempCommentLineBuffer);
      WriteBufferToCommentLines(TempCommentLineBuffer, DATABASE::"Plant Order Line", PlantOrderLine."Plant Order No.", '', PlantOrderLine."Line No.");
    END;

    LOCAL PROCEDURE SplitCommentText@1100528009(CommentBuffer@1100528000 : Text;CommentsFromAppUser@1100528009 : Boolean;CommentedBy@1100528008 : Code[20];CommentedAt@1100528007 : DateTime;VAR TempCommentLineBuffer@1100528002 : TEMPORARY Record 11072666);
    VAR
      Pos@1100528003 : Integer;
      MaxLen@1100528004 : Integer;
      Len@1100528006 : Integer;
      FoundCRLF@1100528005 : Boolean;
      FoundLF@1100528001 : Boolean;
    BEGIN
      MaxLen := MAXSTRLEN(TempCommentLineBuffer.Comment);

      WHILE (STRLEN(CommentBuffer) > 0) DO BEGIN
        FoundLF := FALSE;
        FoundCRLF := FALSE;

        Pos := STRPOS(CommentBuffer, CRLF);
        FoundCRLF := Pos > 0;
        IF NOT FoundCRLF THEN BEGIN
          Pos := STRPOS(CommentBuffer, LF);
          FoundLF := Pos > 0;
        END;

        IF FoundCRLF OR FoundLF THEN
          Len := Pos - 1
        ELSE
          Len := STRLEN(CommentBuffer);

        IF Len > MaxLen THEN
          Len := MaxLen;

        AddToBuffer(COPYSTR(CommentBuffer, 1, Len), (FoundCRLF OR FoundLF), CommentsFromAppUser, CommentedBy, CommentedAt, TempCommentLineBuffer);

        IF FoundCRLF THEN
          Len := Len + 2
        ELSE
          IF FoundLF THEN
            Len := Len + 1;

        IF (STRLEN(CommentBuffer) > Len) THEN
          CommentBuffer := COPYSTR(CommentBuffer, Len + 1)
        ELSE
          CommentBuffer := '';
      END;
    END;

    LOCAL PROCEDURE AddToBuffer@1100528006(LineToAdd@1100528001 : Text;EndWithLineBreak@1100528005 : Boolean;CommentsFromAppUser@1100528004 : Boolean;CommentedBy@1100528003 : Code[20];CommentedAt@1100528002 : DateTime;VAR TempCommentLineBuffer@1100528000 : TEMPORARY Record 11072666);
    BEGIN
       IF NOT TempCommentLineBuffer.FINDLAST THEN
        TempCommentLineBuffer."Line No."  := 0;

      TempCommentLineBuffer."Line No." := TempCommentLineBuffer."Line No." + 1;
      TempCommentLineBuffer.Comment := LineToAdd;
      TempCommentLineBuffer."Line Break" := EndWithLineBreak;
      TempCommentLineBuffer."Created by App User" := CommentsFromAppUser;
      TempCommentLineBuffer."Created by" := CommentedBy;
      TempCommentLineBuffer.Date := DT2DATE(CommentedAt);
      TempCommentLineBuffer."Time Created" := DT2TIME(CommentedAt);
      TempCommentLineBuffer.INSERT;
    END;

    LOCAL PROCEDURE IsStringEmpty@1100528001(InputString@1100528000 : Text) : Boolean;
    BEGIN
      EXIT(DELCHR(InputString, '<>', ' ') = '');
    END;

    LOCAL PROCEDURE CRLF@1100528004() ReturnValue : Text[2];
    BEGIN
      ReturnValue[1] := 13;
      ReturnValue[2] := 10;
    END;

    LOCAL PROCEDURE LF@1100528007() ReturnValue : Text[1];
    BEGIN
      ReturnValue[1] := 10;
    END;

    BEGIN
    END.
  }
}

