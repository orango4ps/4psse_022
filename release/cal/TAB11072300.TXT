OBJECT Table 11072300 Service Process Structure
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               CALCFIELDS("No. of Process Steps", "No. of Field Assignments");
               TESTFIELD("No. of Process Steps", 0);
               TESTFIELD("No. of Field Assignments", 0);
             END;

    CaptionML=ENU=Service Process Structure;
    LookupPageID=Page11126785;
    DrillDownPageID=Page11126785;
  }
  FIELDS
  {
    { 5   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF Type = Type::"Service Call" THEN
                                                                  "Field Assignm. at Ref. Point" := '';
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Type;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=ENU=Service Order,Service Call;
                                                   OptionString=Service Order,Service Call }
    { 10  ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 20  ;   ;Description         ;Text30        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 30  ;   ;No. of Process Steps;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Service Process Struct. Step" WHERE (Type=FIELD(Type),
                                                                                                           Process Structure Code=FIELD(Code)));
                                                   CaptionML=ENU=No. of Process Steps;
                                                   Editable=No }
    { 40  ;   ;No. of Field Assignments;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Count("Service Process Field Assignm." WHERE (Type=FIELD(Type),
                                                                                                             Process Structure Code=FIELD(Code)));
                                                   CaptionML=ENU=No. of Field Assignments;
                                                   Editable=No }
    { 50  ;   ;Field Assignm. at Ref. Point;Text100;
                                                   TableRelation=IF (Type=CONST(Service Order)) "Reference Point" WHERE (Apply=CONST(ServOrder));
                                                   OnValidate=BEGIN
                                                                IF "Field Assignm. at Ref. Point" <> '' THEN
                                                                  TESTFIELD(Type, Type::"Service Order");
                                                                // Not implemented for service call, to prevent that is modified when doc. ref. point is inserted.
                                                                // When this would be implemented, it would be necessary to write code like Rec.FIND('='); in table
                                                                // 11012822. (See function CheckUpdateDocRefPoint in table 11012823.)
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Field Assignm. at Ref. Point }
  }
  KEYS
  {
    {    ;Type,Code                               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

