OBJECT Codeunit 11012956 DPT Interface Project
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      DPTSetup@1100528303 : Record 11229823;
      ErrorMessage@1100528304 : TEMPORARY Record 700;
      DPTInterface@1100528302 : Codeunit 11012451;
      GlobalVarsSet@1100528301 : Boolean;
      DPTType@1100528300 : Integer;
      StartedFrom@1100528311 : 'UI,EventLog,NAS,JobQueue';
      ImpersonationUserSID@1100528310 : Text;
      Text000@1100529400 : TextConst 'DEU=Konfiguration erstellt.;ENU=Setup created.;NLD=Configuratie aangemaakt.';
      Text001@1100529401 : TextConst 'DEU=%1 ist kein %2 dieses Projekts.;ENU=%1 is no %2 of this Project.;NLD=%1 is geen %2 van dit project.';
      EventLogSeqNo@1100525000 : Integer;
      Text002@1100525001 : TextConst 'DEU=%1 %2 hat mehr als 1 %3.;ENU=%1 %2 has more than 1 %3.;NLD=%1 %2 heeft meer dan 1 %3.';

    PROCEDURE CreateSubsiteAndPermissionSetup@1100528312(Job@1100528300 : Record 11072003);
    VAR
      DocumentSetupPeripheralApp@1100528305 : Record 11072451;
      DPTHeaderText@1100529400 : Record 11229943;
      DPTSubsiteProject@1100528304 : Record 11072330;
      DPTSubsiteDocTypeProject@1100528301 : Record 11072331;
      DPTRespPersPermProject@1100528302 : Record 11072332;
      DPTAuthorityPermProject@1100528303 : Record 11072334;
    BEGIN
      DPTHeaderText.CopySourceText(DATABASE::Job, Job.FIELDNO("Document Portal Site Generated"), Job."No.");
      DPTSubsiteProject.CreateAllSubsites(Job."No.");
      DPTSubsiteDocTypeProject.CreateAllDocumentTypeLinks(Job."No.");
      DPTRespPersPermProject.AddPortalPermissions(Job."No.", 0, '', FALSE);
      DPTAuthorityPermProject.AddPortalPermissions(Job."No.", '', '', '', '', FALSE);
      DocumentSetupPeripheralApp.AddDocumentSetupToProject(Job."No.");
      MESSAGE(Text000);
    END;

    PROCEDURE DeleteDocument@1100528310(Job@1100528301 : Record 11072003;DocumentProperties@1100528302 : Record 11012746);
    BEGIN
      SetGlobalVars;
      SetInterfaceVars;
      //No checks done, record is already deleted

      IF (NOT DPTInterface.DeleteDocument(Job, DocumentProperties)) THEN
        ShowDPTError;
    END;

    PROCEDURE GetWordDocumentFromPortal@1100528339(ProjectNo@1100528309 : Code[20];VAR DocumentProperties@1100528307 : Record 11012746;StorageDir@1100525000 : Text) : Text;
    VAR
      Job@1100528301 : Record 11072003;
      WebLink@1100529400 : Text;
    BEGIN
      Job.GET(ProjectNo);
      IF (NOT Job.IsDocumentPortalDualProject) THEN
        EXIT('');
      IF (DocumentProperties."External Document") THEN
        EXIT('');

      SetGlobalVars;
      SetInterfaceVars;
      WebLink := DocumentProperties.GetStorageURI;
      IF (NOT DPTInterface.GetDocumentFromPortal(Job, DocumentProperties, StorageDir, WebLink, FALSE)) THEN
        WebLink := '';

      EXIT(WebLink);
    END;

    PROCEDURE SetEventLogSeqNo@1100525003(EventLogSeqNoIn@1100528300 : Integer);
    BEGIN
      EventLogSeqNo := EventLogSeqNoIn;
    END;

    PROCEDURE SetImpersonationUser@1100528332(ImpersonationUserSIDIn@1100528300 : Text);
    BEGIN
      ImpersonationUserSID := ImpersonationUserSIDIn;
    END;

    PROCEDURE SetStartedFrom@1100528323(StartedFromIn@1100528300 : Option);
    BEGIN
      StartedFrom := StartedFromIn;
    END;

    PROCEDURE SyncAuthorities@1100528324(Job@1100528301 : Record 11072003);
    BEGIN
      SetGlobalVars;
      SetInterfaceVars;
      CheckAuthorities(Job);
      ShowCheckErrors;
      IF (ErrorMessage.COUNT > 0) AND (StartedFrom  IN [StartedFrom::JobQueue, StartedFrom::NAS]) THEN
        EXIT;

      IF (NOT DPTInterface.SyncProjectAuthorirties(Job)) THEN
        ShowDPTError;
    END;

    PROCEDURE SyncAuthority@1100528336(Job@1100528301 : Record 11072003;ContactNo@1100528300 : Code[20];ContactPersonNo@1100528302 : Code[20]);
    BEGIN
      SetGlobalVars;
      SetInterfaceVars;
      CheckAuthorities(Job);
      ShowCheckErrors;
      IF (ErrorMessage.COUNT > 0) AND (StartedFrom  IN [StartedFrom::JobQueue, StartedFrom::NAS]) THEN
        EXIT;

      IF (NOT DPTInterface.SyncProjectAuthorirty(Job, ContactNo, ContactPersonNo)) THEN
        ShowDPTError;
    END;

    PROCEDURE SyncDocument@1100528311(Job@1100528301 : Record 11072003;DocumentProperties@1100528302 : Record 11012746);
    VAR
      WebLink@1100527800 : Text;
    BEGIN
      SetGlobalVars;
      SetInterfaceVars;
      CheckDocumentProperties(Job, DocumentProperties);
      ShowCheckErrors;
      IF (ErrorMessage.COUNT > 0) AND (StartedFrom  IN [StartedFrom::JobQueue, StartedFrom::NAS]) THEN
        EXIT;

      WebLink := '';
      IF (DPTInterface.SyncDocument(Job, DocumentProperties, WebLink)) THEN BEGIN
        IF (WebLink <> '') THEN BEGIN
          DocumentProperties.GET(DocumentProperties."No.");
          DocumentProperties.ValidateStorageURI(DocumentProperties."Storage Type"::DPTDUAL, WebLink);
          DocumentProperties.MODIFY;
        END;
      END ELSE
        ShowDPTError;
    END;

    PROCEDURE SyncPortalData@1100528322(Job@1100528301 : Record 11072003);
    BEGIN
      SetGlobalVars;
      SetInterfaceVars;
      CheckPortalData(Job);
      ShowCheckErrors;
      IF (ErrorMessage.COUNT > 0) AND (StartedFrom  IN [StartedFrom::JobQueue, StartedFrom::NAS]) THEN
        EXIT;

      IF (NOT DPTInterface.SyncPortalData(Job)) THEN
        ShowDPTError;
      SetSyncProjectSiteSynchronizedOn(Job);
    END;

    PROCEDURE SyncPortalMetaData@1100528313(Job@1100528300 : Record 11072003);
    VAR
      DPTEventLog@1100528301 : Record 11229822;
    BEGIN
      SetGlobalVars;
      SetInterfaceVars;
      CheckPortalMetaData(Job);
      ShowCheckErrors;
      IF (ErrorMessage.COUNT > 0) AND (StartedFrom  IN [StartedFrom::JobQueue, StartedFrom::NAS]) THEN
        EXIT;

      AddDPTChangeLogEntry(Job.RECORDID, DPTEventLog.GetSyncPortalMetaDataText, TRUE);
      IF (NOT DPTInterface.SyncPortalMetaData(Job)) THEN
        ShowDPTError;
      AddDPTChangeLogEntry(Job.RECORDID, DPTEventLog.GetSyncPortalMetaDataText, FALSE);
    END;

    PROCEDURE SyncPortalSearchData@1100528318(Job@1100528301 : Record 11072003);
    VAR
      DPTEventLog@1100528300 : Record 11229822;
    BEGIN
      SetGlobalVars;
      SetInterfaceVars;
      CheckPortalSearchData(Job);
      ShowCheckErrors;
      IF (ErrorMessage.COUNT > 0) AND (StartedFrom  IN [StartedFrom::JobQueue, StartedFrom::NAS]) THEN
        EXIT;

      AddDPTChangeLogEntry(Job.RECORDID, DPTEventLog.GetSyncPortalSearchDataText, TRUE);
      IF (NOT DPTInterface.SyncPortalSearchData(Job)) THEN
        ShowDPTError;
      AddDPTChangeLogEntry(Job.RECORDID, DPTEventLog.GetSyncPortalSearchDataText, FALSE);
    END;

    PROCEDURE SyncPortalSite@1100528303(Job@1100528300 : Record 11072003);
    VAR
      DPTEventLog@1100528304 : Record 11229822;
      DPTSubsiteProject@1100529400 : Record 11072330;
      DPTSubsiteDocTypeProject@1100529401 : Record 11072331;
      DocumentPortalURL@1100528301 : Text;
      CreateEvents@1100529402 : Boolean;
    BEGIN
      SetGlobalVars;
      SetInterfaceVars;
      CheckProjectNoDPTCreated(Job);
      ShowCheckErrors;
      IF (ErrorMessage.COUNT > 0) AND (StartedFrom  IN [StartedFrom::JobQueue, StartedFrom::NAS]) THEN
        EXIT;

      IF (Job."Document Portal URL" = '') THEN BEGIN
        AddDPTChangeLogEntry(Job.RECORDID, DPTEventLog.GetEnsurePortalSiteCollectionText, TRUE);
        DPTSubsiteProject.SETRANGE("Project No.", Job."No.");
        IF (NOT DPTSubsiteProject.FINDFIRST) THEN
          DPTSubsiteProject.CreateAllSubsites(Job."No.");
        COMMIT;
        IF (NOT DPTInterface.EnsurePortalSiteCollection(Job, DocumentPortalURL)) THEN
          ShowDPTError
        ELSE BEGIN
          Job."Document Portal Site Generated" := TRUE;
          Job."Document Portal URL" := DocumentPortalURL;
          IF (Job."Document Portal Language" = '') THEN
            Job."Document Portal Language" := DPTSetup."Language Code";
          Job.MODIFY(TRUE);
        END;
        AddDPTChangeLogEntry(Job.RECORDID, DPTEventLog.GetEnsurePortalSiteCollectionText, FALSE);
        COMMIT;
        DPTSubsiteProject.RESET;
      END;

      AddDPTChangeLogEntry(Job.RECORDID, DPTEventLog.GetSyncPortalSiteText, TRUE);
      IF (NOT DPTInterface.SyncPortalSite(Job)) THEN
        ShowDPTError;

      CreateEvents := FALSE;
      DPTSubsiteProject.SETRANGE("Project No.", Job."No.");
      DPTSubsiteProject.SETRANGE("Synchronized On", 0DT);
      IF (DPTSubsiteProject.FINDFIRST) THEN
        CreateEvents := TRUE;
      DPTSubsiteDocTypeProject.SETRANGE("Project No.", Job."No.");
      DPTSubsiteDocTypeProject.SETRANGE("Synchronized On", 0DT);
      IF (DPTSubsiteDocTypeProject.FINDFIRST) THEN
        CreateEvents := TRUE;

      IF (CreateEvents) THEN
        InsertEventLogProjectSite(Job);

      DPTInterface.UpdateExistingDocumentProperties(Job);
      SetSyncProjectSiteSynchronizedOn(Job);
      AddDPTChangeLogEntry(Job.RECORDID, DPTEventLog.GetSyncPortalSiteText, FALSE);
    END;

    PROCEDURE SyncResponsiblePersons@1100528325(Job@1100528301 : Record 11072003);
    VAR
      DPTEventLog@1100529400 : Record 11229822;
    BEGIN
      SetGlobalVars;
      SetInterfaceVars;
      CheckResponsiblePersons(Job);
      ShowCheckErrors;
      IF (ErrorMessage.COUNT > 0) AND (StartedFrom  IN [StartedFrom::JobQueue, StartedFrom::NAS]) THEN
        EXIT;

      AddDPTChangeLogEntry(Job.RECORDID, DPTEventLog.GetSyncResponsiblePersonText , TRUE);
      IF (NOT DPTInterface.SyncProjectResponsiblePersons(Job)) THEN
        ShowDPTError;
      AddDPTChangeLogEntry(Job.RECORDID, DPTEventLog.GetSyncResponsiblePersonText , FALSE);
    END;

    PROCEDURE SyncPlots@1100527800(Job@1100527800 : Record 11072003);
    BEGIN
      SetGlobalVars;
      SetInterfaceVars;
      CheckProject(Job);
      ShowCheckErrors;
      IF (ErrorMessage.COUNT > 0) AND (StartedFrom  IN [StartedFrom::JobQueue, StartedFrom::NAS]) THEN
        EXIT;
    END;

    LOCAL PROCEDURE "---Locals---"@1100528307();
    BEGIN
    END;

    LOCAL PROCEDURE AddDPTChangeLogEntry@1100525000(RecordIdIn@1100528300 : RecordID;ActionTxt@1100528302 : Text;ActionStart@1100528303 : Boolean);
    VAR
      DPTChangeLogEntry@1100528301 : Record 11012207;
    BEGIN
      DPTChangeLogEntry.AddLogEntry(RecordIdIn, ActionTxt, ActionStart);
    END;

    LOCAL PROCEDURE CheckAuthorities@1100528326(Job@1100528300 : Record 11072003);
    VAR
      ProjectAuthority@1100528301 : Record 11020216;
      Contact@1100528303 : Record 5050;
    BEGIN
      IF (NOT CheckOwnerPermissionCurrentUser(Job)) THEN
        LogErrorMessage(Job, 0);
      ProjectAuthority.SETRANGE("Project No.", Job."No.");
      IF (NOT ProjectAuthority.FINDSET) THEN
        EXIT;

      CheckProject(Job);
      CheckForSameProjectAuthorities(Job);
      DPTInterface.SetErrorMessage(ErrorMessage);
      DPTInterface.CheckEmailBodyText(Job);
      REPEAT
        IF (ProjectAuthority."Contact No." <> '') OR (ProjectAuthority."Contact Person No." <> '') THEN BEGIN
          DPTInterface.CheckProjectAuthority(ProjectAuthority);
        END;
      UNTIL (ProjectAuthority.NEXT = 0);
      DPTInterface.GetErrorMessage(ErrorMessage);
    END;

    LOCAL PROCEDURE CheckDocumentProperties@1100528316(Job@1100528300 : Record 11072003;DocumentProperties@1100528301 : Record 11012746);
    VAR
      DocumentLink@1100528304 : Record 11012747;
      ProjectPurchaseAction@1100528303 : Record 11012026;
      RecRef@1100528305 : RecordRef;
    BEGIN
      CheckProject(Job);
      ShowProgress(DPTInterface.GetCheckText, DocumentProperties.RECORDID, '');
      DPTInterface.SetErrorMessage(ErrorMessage);
      DPTInterface.CheckDocumentProperties(DocumentProperties);
      DPTInterface.GetErrorMessage(ErrorMessage);

      IF (IsPurchaseActionDocument(DocumentProperties."No.")) THEN BEGIN
        DocumentLink.SETRANGE("Document No.", DocumentProperties."No.");
        DocumentLink.SETRANGE("Table No.", DATABASE::"Project Purchase Action");
        DocumentLink.SETRANGE("Internal Company", COMPANYNAME);
        IF (DocumentLink.FINDSET) THEN BEGIN
          RecRef.GET(DocumentLink."Record ID");
          RecRef.SETTABLE(ProjectPurchaseAction);
          CheckProjectPurchaseActions(ProjectPurchaseAction);
        END;
      END;
    END;

    LOCAL PROCEDURE CheckDocumentPropertiesForDelete@1100528317(Job@1100528300 : Record 11072003;DocumentProperties@1100528301 : Record 11012746);
    BEGIN
      CheckProject(Job);
      ShowProgress(DPTInterface.GetCheckText, DocumentProperties.RECORDID, '');
      DPTInterface.SetErrorMessage(ErrorMessage);
      DPTInterface.CheckDocumentPropertiesForDelete(DocumentProperties);
      DPTInterface.GetErrorMessage(ErrorMessage);
    END;

    LOCAL PROCEDURE CheckForSameProjectAuthorities@1100525006(Job@1100525001 : Record 11072003);
    VAR
      ProjectAuthority@1100525000 : Record 11020216;
    BEGIN
      ProjectAuthority.SETRANGE("Project No.", Job."No.");
      IF (NOT ProjectAuthority.FINDSET) THEN
        EXIT;

      REPEAT
        IF (NOT TestForSameProjectAuthority(ProjectAuthority)) THEN
          LogErrorMessage(ProjectAuthority, ProjectAuthority.FIELDNO("Authority Type"));
      UNTIL (ProjectAuthority.NEXT = 0);
    END;

    LOCAL PROCEDURE CheckForSameProjectResponsiblePersons@1100525002(Job@1100525000 : Record 11072003);
    VAR
      ProjectResponsiblePerson@1100525001 : Record 11012040;
    BEGIN
      ProjectResponsiblePerson.SETRANGE("Project No.", Job."No.");
      IF (NOT ProjectResponsiblePerson.FINDSET) THEN
        EXIT;

      REPEAT
        IF (NOT TestForSameProjectResponsiblePerson(ProjectResponsiblePerson)) THEN
          LogErrorMessage(ProjectResponsiblePerson, ProjectResponsiblePerson.FIELDNO(Responsibility));
      UNTIL (ProjectResponsiblePerson.NEXT = 0);
    END;

    [TryFunction]
    LOCAL PROCEDURE CheckOwnerPermissionCurrentUser@1100529400(Job@1100529400 : Record 11072003);
    VAR
      User@1100529404 : Record 2000000120;
      UserSetup@1100529401 : Record 91;
      ProjectResponsiblePerson@1100529402 : Record 11012040;
      DPTRespPersPermProject@1100529403 : Record 11072332;
    BEGIN
      IF (ImpersonationUserSID <> '') THEN BEGIN
        User.GET(ImpersonationUserSID);
        UserSetup.GET(User."User Name");
      END ELSE BEGIN
        User.GET(USERSECURITYID);
        UserSetup.GET(USERID);
      END;
      IF (DPTInterface.IsNSTUserID(User)) THEN
        EXIT;
      UserSetup.TESTFIELD("Employee No.");

      ProjectResponsiblePerson.SETRANGE("Project No.", Job."No.");
      ProjectResponsiblePerson.SETRANGE("Employee No.", UserSetup."Employee No.");
      IF (NOT ProjectResponsiblePerson.FINDFIRST) THEN
          ERROR(Text001, UserSetup."User ID", DPTRespPersPermProject."Permission Level"::Owner);

      DPTRespPersPermProject.SETRANGE(Type, DPTRespPersPermProject.Type::Access);
      DPTRespPersPermProject.SETRANGE("Project No.", Job."No.");
      DPTRespPersPermProject.SETRANGE("Line No.", ProjectResponsiblePerson."Line No.");
      DPTRespPersPermProject.SETFILTER("Permission Level", '<>%1', DPTRespPersPermProject."Permission Level"::Owner);
      IF (DPTRespPersPermProject.FINDFIRST) THEN
        ERROR(Text001, UserSetup."User ID", DPTRespPersPermProject."Permission Level"::Owner);
    END;

    LOCAL PROCEDURE CheckPortalData@1100528335(Job@1100528300 : Record 11072003);
    BEGIN
      IF (NOT CheckOwnerPermissionCurrentUser(Job)) THEN
        LogErrorMessage(Job, 0);
      CheckProject(Job);
    END;

    LOCAL PROCEDURE CheckPortalMetaData@1100528319(Job@1100528300 : Record 11072003);
    BEGIN
      IF (NOT CheckOwnerPermissionCurrentUser(Job)) THEN
        LogErrorMessage(Job, 0);
      CheckProject(Job);
      DPTInterface.SetErrorMessage(ErrorMessage);
      DPTInterface.CheckPortalMetaData(Job);
      DPTInterface.GetErrorMessage(ErrorMessage);
    END;

    LOCAL PROCEDURE CheckPortalSearchData@1100528321(Job@1100528300 : Record 11072003);
    BEGIN
      IF (NOT CheckOwnerPermissionCurrentUser(Job)) THEN
        LogErrorMessage(Job, 0);
      CheckProject(Job);
      DPTInterface.SetErrorMessage(ErrorMessage);
      DPTInterface.CheckPortalSearchData(Job);
      DPTInterface.GetErrorMessage(ErrorMessage);
    END;

    LOCAL PROCEDURE CheckProject@1100528300(Job@1100528300 : Record 11072003);
    BEGIN
      DPTInterface.CheckDPTSetup;

      ShowProgress(DPTInterface.GetCheckText, Job.RECORDID, '');
      IF (NOT TestDPTSetupUseProjectPortal) THEN
        LogErrorMessage(DPTSetup.RECORDID, DPTSetup.FIELDNO("Use Project Portal"));
      IF (NOT TestJobDescription(Job)) THEN
        LogErrorMessage(Job.RECORDID, Job.FIELDNO("Generate Document Portal Site"));
      IF (NOT TestJobGenerateDocumentPortalSite(Job, TRUE)) THEN
        LogErrorMessage(Job.RECORDID, Job.FIELDNO("Generate Document Portal Site"));
      IF (NOT TestJobDocumentPortalSiteGenerated(Job, TRUE)) THEN
        LogErrorMessage(Job.RECORDID, Job.FIELDNO("Document Portal Site Generated"));
      IF (NOT TestJobDocumentPortalURL(Job, TRUE)) THEN
        LogErrorMessage(Job.RECORDID, Job.FIELDNO("Document Portal URL"));
      IF (NOT TestJobSharePointSiteGenerated(Job)) THEN
        LogErrorMessage(Job.RECORDID, Job.FIELDNO("SharePoint Site Generated"));
      IF (NOT TestJobSharePointSiteUrl(Job, FALSE)) THEN
        LogErrorMessage(Job.RECORDID, Job.FIELDNO("SharePoint Site URL"));

      DPTInterface.SetErrorMessage(ErrorMessage);
      DPTInterface.CheckDPTSetup;
      DPTInterface.CheckUser;
      DPTInterface.CheckLanguage(Job);
      DPTInterface.GetErrorMessage(ErrorMessage);
      CheckSubsiteCodes(Job);
    END;

    LOCAL PROCEDURE CheckProjectNoDPTCreated@1100528315(Job@1100528300 : Record 11072003);
    BEGIN
      IF (NOT CheckOwnerPermissionCurrentUser(Job)) THEN
        LogErrorMessage(Job, 0);
      ShowProgress(DPTInterface.GetCheckText, Job.RECORDID, '');
      IF (NOT TestDPTSetupUseProjectPortal) THEN
        LogErrorMessage(DPTSetup.RECORDID, DPTSetup.FIELDNO("Use Project Portal"));
      IF (NOT TestJobGenerateDocumentPortalSite(Job, TRUE)) THEN
        LogErrorMessage(Job.RECORDID, Job.FIELDNO("Generate Document Portal Site"));

      DPTInterface.SetErrorMessage(ErrorMessage);
      DPTInterface.CheckDPTSetup;
      DPTInterface.CheckUser;
      DPTInterface.CheckLanguage(Job);
      DPTInterface.GetErrorMessage(ErrorMessage);
      CheckSubsiteCodes(Job);
    END;

    LOCAL PROCEDURE CheckProjectPurchaseActions@1100528328(ProjectPurchaseAction@1100528300 : Record 11012026);
    VAR
      VendorsByPurchaseAction@1100528301 : Record 11012068;
    BEGIN
      VendorsByPurchaseAction.SETRANGE(Source, VendorsByPurchaseAction.Source::Project);
      VendorsByPurchaseAction.SETRANGE("Project No.", ProjectPurchaseAction."Project No.");
      VendorsByPurchaseAction.SETRANGE("Purchase Action", ProjectPurchaseAction.Code);
      IF (NOT VendorsByPurchaseAction.FINDSET) THEN
        EXIT;

      REPEAT
        CheckVendorsByPurchaseAction(VendorsByPurchaseAction);
      UNTIL (VendorsByPurchaseAction.NEXT = 0);
    END;

    LOCAL PROCEDURE CheckResponsiblePersons@1100528327(Job@1100528300 : Record 11072003);
    VAR
      ProjectResponsiblePerson@1100528301 : Record 11012040;
    BEGIN
      IF (NOT CheckOwnerPermissionCurrentUser(Job)) THEN
        LogErrorMessage(Job, 0);
      CheckProject(Job);
      ProjectResponsiblePerson.SETRANGE("Project No.", Job."No.");
      IF (NOT ProjectResponsiblePerson.FINDSET) THEN
        EXIT;

      CheckProject(Job);
      CheckForSameProjectResponsiblePersons(Job);
      DPTInterface.SetErrorMessage(ErrorMessage);
      DPTInterface.CheckEmailBodyText(Job);
      REPEAT
        DPTInterface.CheckProjectResponsiblePerson(ProjectResponsiblePerson);
      UNTIL (ProjectResponsiblePerson.NEXT = 0);
      DPTInterface.GetErrorMessage(ErrorMessage);
    END;

    LOCAL PROCEDURE CheckSubsiteCodes@1100525005(Job@1100525000 : Record 11072003);
    VAR
      DPTSubsiteProject@1100525001 : Record 11072330;
      DPTSubsiteDocTypeProject@1100525003 : Record 11072331;
    BEGIN
      DPTSubsiteProject.SETRANGE("Project No.", Job."No.");
      IF (NOT DPTSubsiteProject.FINDSET) THEN
        EXIT;

      REPEAT
        IF (NOT DPTInterface.TestSubsiteCode(DPTSubsiteProject.Code)) THEN
          LogErrorMessage(DPTSubsiteProject, DPTSubsiteProject.FIELDNO(Code));
        //#DPT-552
        DPTSubsiteDocTypeProject.SETRANGE("Project No.", Job."No.");
        DPTSubsiteDocTypeProject.SETRANGE("Subsite Code", DPTSubsiteProject.Code);
        IF (DPTSubsiteDocTypeProject.FINDSET) THEN BEGIN
          REPEAT
            IF (NOT DPTInterface.TestDocumentTypeDescription(DPTSubsiteDocTypeProject."Document Type")) THEN
              LogErrorMessage(DPTSubsiteDocTypeProject, DPTSubsiteDocTypeProject.FIELDNO("Document Type Description"));
          UNTIL (DPTSubsiteDocTypeProject.NEXT = 0);
        END;
      UNTIL (DPTSubsiteProject.NEXT = 0);
    END;

    LOCAL PROCEDURE CheckVendorsByPurchaseAction@1100528330(VendorsByPurchaseAction@1100528302 : Record 11012068);
    VAR
      Contact@1100528301 : Record 5050;
    BEGIN
      GetContactFromVendorsByPurchaseAction(VendorsByPurchaseAction, Contact);
      DPTInterface.SetErrorMessage(ErrorMessage);
      DPTInterface.TestContactEmail2(Contact, TRUE);
      DPTInterface.GetErrorMessage(ErrorMessage);
    END;

    LOCAL PROCEDURE GetContactFromVendorsByPurchaseAction@1100528331(VendorsByPurchaseAction@1100528300 : Record 11012068;VAR Contact@1100528301 : Record 5050);
    VAR
      ContactBusinessRelation@1100528303 : Record 5054;
    BEGIN
      DPTInterface.SetErrorMessage(ErrorMessage);
      CASE VendorsByPurchaseAction.Type OF
        VendorsByPurchaseAction.Type::Vendor: BEGIN
          DPTInterface.TestContactBusinessRelationFindFirst(ContactBusinessRelation, VendorsByPurchaseAction."Vendor No.", 2);
          DPTInterface.TestContactGet(Contact, ContactBusinessRelation."Contact No.", '');
        END;
        VendorsByPurchaseAction.Type::Contact:
          DPTInterface.TestContactGet(Contact, VendorsByPurchaseAction."Vendor No.", '');
      END;
      DPTInterface.GetErrorMessage(ErrorMessage);
    END;

    LOCAL PROCEDURE InsertEventLogProjectSite@1100528320(Job@1100528300 : Record 11072003);
    VAR
      DPTEventLog@1100528304 : Record 11229822;
      ProjectResponsiblePerson@1100528301 : Record 11012040;
      ProjectAuthority@1100528302 : Record 11020216;
      DPTMetadata@1100528303 : Record 11229825;
      xRecID@1100528305 : RecordID;
      UserSID@1100529900 : GUID;
    BEGIN
      IF (ImpersonationUserSID <> '') THEN
        UserSID := ImpersonationUserSID
      ELSE
        UserSID := USERSECURITYID;

      DPTEventLog.AddEventLog2(DPTEventLog.GetSyncPortalMetaDataText, 1, Job."No.", Job.RECORDID, xRecID, UserSID);

      DPTMetadata.SETRANGE("Source Type", DPTMetadata."Source Type"::Project);
      DPTMetadata.SETRANGE("Show in Search", TRUE);
      IF (DPTMetadata.FINDFIRST) THEN
        DPTEventLog.AddEventLog2(DPTEventLog.GetSyncPortalSearchDataText, 1, Job."No.", Job.RECORDID, xRecID, UserSID);

      ProjectResponsiblePerson.SETRANGE("Project No.", Job."No.");
      IF (ProjectResponsiblePerson.FINDFIRST) THEN
        DPTEventLog.AddEventLog2(DPTEventLog.GetSyncResponsiblePersonText, 1, Job."No.", Job.RECORDID, xRecID, UserSID);

      ProjectAuthority.SETRANGE("Project No.", Job."No.");
      IF (ProjectAuthority.FINDFIRST) THEN
        DPTEventLog.AddEventLog2(DPTEventLog.GetSyncAuthorityText, 1, Job."No.", Job.RECORDID, xRecID, UserSID);
    END;

    LOCAL PROCEDURE IsPurchaseActionDocument@1100528333(DocumentNo@1100528300 : Code[20]) : Boolean;
    VAR
      DocumentLink@1100528301 : Record 11012747;
    BEGIN
      DocumentLink.SETRANGE("Document No.", DocumentNo);
      DocumentLink.SETRANGE("Table No.", DATABASE::"Project Purchase Action");
      DocumentLink.SETRANGE("Internal Company", COMPANYNAME);
      EXIT(DocumentLink.FINDFIRST);
    END;

    LOCAL PROCEDURE LogErrorMessage@1100528302(RecVariant@1100528300 : Variant;FieldNo@1100528301 : Integer);
    BEGIN
      ErrorMessage.LogMessage(RecVariant, FieldNo, ErrorMessage."Message Type"::Error, GETLASTERRORTEXT);
    END;

    LOCAL PROCEDURE SetGlobalVars@1100528306();
    BEGIN
      IF (GlobalVarsSet) THEN
        EXIT;
      DPTSetup.GET;
      DPTType := 1; //DPT Project
      GlobalVarsSet := TRUE;
      ErrorMessage.DELETEALL;
    END;

    LOCAL PROCEDURE SetInterfaceVars@1100528334();
    BEGIN
      DPTInterface.SetDPTType(DPTType);
      DPTInterface.SetImpersonationUser(ImpersonationUserSID);
      DPTInterface.SetStartedFrom(StartedFrom);
      DPTInterface.SetEventLogSeqNo(EventLogSeqNo);
    END;

    LOCAL PROCEDURE SetSyncProjectSiteSynchronizedOn@1100528337(Job@1100528300 : Record 11072003);
    VAR
      DPTSubsiteProject@1100528301 : Record 11072330;
      DPTSubsiteDocTypeProject@1100528302 : Record 11072331;
    BEGIN
      DPTSubsiteProject.SETRANGE("Project No.", Job."No.");
      DPTSubsiteProject.SETRANGE("Synchronized On", 0DT);
      DPTSubsiteProject.MODIFYALL("Synchronized On", CURRENTDATETIME);

      DPTSubsiteDocTypeProject.SETRANGE("Project No.", Job."No.");
      DPTSubsiteDocTypeProject.SETRANGE("Synchronized On", 0DT);
      DPTSubsiteDocTypeProject.MODIFYALL("Synchronized On", CURRENTDATETIME);
    END;

    LOCAL PROCEDURE ShowCheckErrors@1100528301();
    BEGIN
      DPTInterface.SetErrorMessage(ErrorMessage);
      DPTInterface.ShowCheckErrors;
    END;

    LOCAL PROCEDURE ShowDPTError@1100528304();
    BEGIN
      DPTInterface.ShowDPTError;
    END;

    LOCAL PROCEDURE ShowProgress@1100528314(Action@1100528301 : Text;Message@1100528300 : Variant;Message2@1100529400 : Variant);
    BEGIN
      DPTInterface.ShowProgress(Action, Message, Message2);
    END;

    [TryFunction]
    LOCAL PROCEDURE TestDPTSetupUseProjectPortal@1100528329();
    BEGIN
      DPTSetup.TESTFIELD("Use Project Portal", TRUE);
    END;

    [TryFunction]
    LOCAL PROCEDURE TestForSameProjectAuthority@1100525007(ProjectAuthorityIn@1100525000 : Record 11020216);
    VAR
      ProjectAuthority@1100525001 : Record 11020216;
      Contact@1100525004 : Record 5050;
      ContactFrom@1100525002 : Record 5050;
      DPTInterface@1100525003 : Codeunit 11012451;
    BEGIN
      ProjectAuthority.SETRANGE("Project No.", ProjectAuthorityIn."Project No.");
      IF (NOT ProjectAuthority.FINDSET) THEN
        EXIT;
      DPTInterface.GetContact(ContactFrom, ProjectAuthorityIn."Contact No.", ProjectAuthorityIn."Contact Person No.");

      REPEAT
        DPTInterface.GetContact(Contact, ProjectAuthority."Contact No.", ProjectAuthority."Contact Person No.");
        IF (ContactFrom."E-Mail 2" = Contact."E-Mail 2") AND
           ((ContactFrom."No." <> Contact."No.") OR
            (ProjectAuthorityIn."Authority Type" <> ProjectAuthority."Authority Type") OR
            (ProjectAuthorityIn."Contact No." <> ProjectAuthority."Contact No.") OR
            (ProjectAuthorityIn."Contact Person No." <> ProjectAuthority."Contact Person No."))
        THEN
          ERROR(Text002, ProjectAuthorityIn.TABLECAPTION, Contact."E-Mail 2", ProjectAuthorityIn.FIELDCAPTION("Authority Type"));
      UNTIL (ProjectAuthority.NEXT = 0);
    END;

    [TryFunction]
    LOCAL PROCEDURE TestForSameProjectResponsiblePerson@1100525004(ProjectResponsiblePersonIn@1100525000 : Record 11012040);
    VAR
      ProjectResponsiblePerson@1100525001 : Record 11012040;
    BEGIN
      ProjectResponsiblePerson.SETRANGE("Project No.", ProjectResponsiblePersonIn."Project No.");
      ProjectResponsiblePerson.SETRANGE("Employee No.", ProjectResponsiblePersonIn."Employee No.");
      IF (ProjectResponsiblePerson.COUNT > 1) THEN
        ERROR(Text002, ProjectResponsiblePersonIn.TABLECAPTION, ProjectResponsiblePersonIn."Employee No.",
          ProjectResponsiblePersonIn.FIELDCAPTION(Responsibility));
    END;

    [TryFunction]
    LOCAL PROCEDURE TestJobDescription@1100525001(Job@1100525000 : Record 11072003);
    BEGIN
      Job.TESTFIELD(Description);
    END;

    [TryFunction]
    LOCAL PROCEDURE TestJobGenerateDocumentPortalSite@1100528305(Job@1100528300 : Record 11072003;TestValue@1100528301 : Boolean);
    BEGIN
      Job.TESTFIELD("Generate Document Portal Site", TestValue);
    END;

    [TryFunction]
    LOCAL PROCEDURE TestJobDocumentPortalSiteGenerated@1100528308(Job@1100528300 : Record 11072003;TestValue@1100528301 : Boolean);
    BEGIN
      Job.TESTFIELD("Document Portal Site Generated", TestValue);
    END;

    [TryFunction]
    LOCAL PROCEDURE TestJobDocumentPortalURL@1100528309(Job@1100528300 : Record 11072003;MustHaveValue@1100528301 : Boolean);
    BEGIN
      IF (MustHaveValue) THEN
        Job.TESTFIELD("Document Portal URL")
      ELSE
        Job.TESTFIELD("Document Portal URL", '');
    END;

    [TryFunction]
    LOCAL PROCEDURE TestJobSharePointSiteGenerated@1100528338(Job@1100528300 : Record 11072003);
    BEGIN
      Job.TESTFIELD("SharePoint Site Generated", FALSE);
    END;

    [TryFunction]
    LOCAL PROCEDURE TestJobSharePointSiteUrl@1100528342(Job@1100528300 : Record 11072003;MustHaveValue@1100528301 : Boolean);
    BEGIN
      IF (MustHaveValue) THEN
        Job.TESTFIELD("SharePoint Site URL")
      ELSE
        Job.TESTFIELD("SharePoint Site URL", '');
    END;

    BEGIN
    END.
  }
}

