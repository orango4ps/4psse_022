OBJECT Table 11071737 Vessel
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnInsert=BEGIN
               ServSetup.GET;
               IF "No." = '' THEN BEGIN
                 ServSetup.TESTFIELD("Vessel Nos.");
                 NoSeriesMgt.InitSeries(ServSetup."Vessel Nos.", xRec."No. Series", 0D, "No.", "No. Series");
               END;
               TESTFIELD("No.");

               CreateFeatures();
             END;

    OnDelete=VAR
               NameHistoryVessel@1100529800 : Record 11071732;
               ContactFeatureType@1100529801 : Record 11012753;
             BEGIN
               // Delete Name History Vessel
               NameHistoryVessel.RESET;
               NameHistoryVessel.SETRANGE("Vessel No.", "No.");
               NameHistoryVessel.DELETEALL();

               // Delete Contact Feature Type
               ContactFeatureType.SETRANGE("Relation Type", ContactFeatureType."Relation Type"::Vessel);
               ContactFeatureType.SETRANGE(Code , "No.");
               ContactFeatureType.DELETEALL();
             END;

    CaptionML=[ENU=Vessel;
               NOR=Fartõy;
               SVE=Fartyg];
    LookupPageID=Page11125239;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  ServSetup.GET;
                                                                  NoSeriesMgt.TestManual(ServSetup."Vessel Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr;
                                                              SVE=Nr] }
    { 20  ;   ;Name                ;Text30        ;OnValidate=BEGIN
                                                                IF Name <> xRec.Name THEN BEGIN
                                                                  AddNameHistory();
                                                                  ConfirmUpdateServLocationName; //kkleermaker.n, 110816, M28696
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Name;
                                                              NOR=Navn;
                                                              SVE=Name] }
    { 30  ;   ;Start Date          ;Date          ;CaptionML=[ENU=Start Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum] }
    { 40  ;   ;Main Category       ;Code10        ;TableRelation="Vessel Main Category".Code;
                                                   CaptionML=[ENU=Main Category;
                                                              NOR=Hovedkategori;
                                                              SVE=Huvudkategori] }
    { 50  ;   ;Category            ;Code10        ;TableRelation="Vessel Category".Code;
                                                   CaptionML=[ENU=Category;
                                                              NOR=Kategori;
                                                              SVE=Kategori] }
    { 60  ;   ;Flag                ;Code10        ;TableRelation=Country/Region.Code;
                                                   CaptionML=[ENU=Flag;
                                                              NOR=Flagg;
                                                              SVE=Flag] }
    { 70  ;   ;MMSI                ;Text10        ;CaptionML=[ENU=MMSI;
                                                              NOR=MMSI;
                                                              SVE=MMSI] }
    { 80  ;   ;GRT                 ;Decimal       ;CaptionML=[ENU=GRT;
                                                              NOR=GRT;
                                                              SVE=GRT] }
    { 90  ;   ;Call Sign           ;Code10        ;CaptionML=[ENU=Call Sign;
                                                              NOR=Samtalesignatur;
                                                              SVE=Samtalssignatur] }
    { 100 ;   ;Classification      ;Code10        ;TableRelation="Vessel Classification".Code;
                                                   CaptionML=[ENU=Classification;
                                                              NOR=Klassifisering;
                                                              SVE=Klassificering] }
    { 110 ;   ;Reason Out of use   ;Code10        ;TableRelation="Reason Out of Use";
                                                   CaptionML=[ENU=Reason Out of Use;
                                                              NOR=èrsak til Ikke ikke i bruk;
                                                              SVE=Orsak till icke-bruk] }
    { 120 ;   ;Date Out of Use     ;Date          ;CaptionML=[ENU=Date Out of Use;
                                                              NOR=Datoen kan ikke brukes;
                                                              SVE=Datumet kan inte anv‰ndas] }
    { 130 ;   ;Yard                ;Text30        ;CaptionML=[ENU=Yard;
                                                              NOR=Verksted;
                                                              SVE=Varv] }
    { 140 ;   ;Build in            ;Code10        ;TableRelation=Country/Region.Code;
                                                   CaptionML=[ENU=Build in;
                                                              NOR=Bygget i;
                                                              SVE=Byggt i] }
    { 150 ;   ;Construction Date   ;Date          ;CaptionML=[ENU=Construction Date;
                                                              NOR=Byggedato;
                                                              SVE=Konstruktionsdatum] }
    { 160 ;   ;Plot No.            ;Code10        ;CaptionML=[ENU=Plot No.;
                                                              NOR=Tegningnr;
                                                              SVE=Ritningnr] }
    { 170 ;   ;Owner Name          ;Text100       ;CaptionML=[ENU=Owner Name;
                                                              NOR=Eiers navn;
                                                              SVE=égarnamn] }
    { 180 ;   ;Owner               ;Code20        ;TableRelation=Contact.No. WHERE (Blocked=CONST(No));
                                                   OnValidate=VAR
                                                                Contact@1100529800 : Record 5050;
                                                              BEGIN
                                                                IF Contact.GET(Owner) THEN
                                                                  "Owner Name" := Contact.Name;
                                                              END;

                                                   CaptionML=[ENU=Owner;
                                                              NOR=Eier;
                                                              SVE=Owner] }
    { 190 ;   ;Contract Owner      ;Code20        ;TableRelation="Contract Owner".Code;
                                                   CaptionML=[ENU=Contract Owner;
                                                              NOR=Kontraktseier;
                                                              SVE=KontraktsÑgare] }
    { 200 ;   ;Manager             ;Text30        ;CaptionML=[ENU=Manager;
                                                              NOR=Manager;
                                                              SVE=Manager] }
    { 230 ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              NOR=Nr-serie;
                                                              SVE=Nr-serie];
                                                   Editable=No }
    { 240 ;   ;Image               ;Media         ;CaptionML=[ENU=Image;
                                                              NOR=Image;
                                                              SVE=Bild] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;No.,Name,Category,Image                  }
  }
  CODE
  {
    VAR
      Text000@1210190000 : TextConst 'ENU=A %1 is linked to %2 %3. Would you like to change the %4 of %1 %3?;NOR=En %1 er linket til %2 %3. Vil du endre %4 av %1 %3?;SVE=A %1 Ñr lÑnkat till %2 %3. Vill du Ñndra %4 av %1 %3?';
      Text11071700@1100529800 : TextConst 'ENU=%1 %2 already exist! Woult you open %1 %2?;NOR=%1 %2 finnes allerede! Vil du Üpne %1 %2?;SVE=%1 %2 finns redan! Vill du îppna %1 %2?';
      Text11071701@1100529801 : TextConst 'ENU=%1 %2 created. Woult you open %1 %2?;NOR=%1 %2 opprettet. Vil du Üpne %1 %2?;SVE=%1 %2 har skapats. Vill du îppna %1 %2?';
      ServSetup@1100529804 : Record 11012800;
      NoSeriesMgt@1100529805 : Codeunit 396;
      FromFeatureRelationType@1100529803 : Integer;
      FromFeatureCode@1100529802 : Code[20];
      CalledFromImport@1210190001 : Boolean;

    PROCEDURE AssistEdit@2(OldVessel@11012000 : Record 11071737) : Boolean;
    VAR
      Vessel@1100525000 : Record 11071737;
    BEGIN
      WITH Vessel DO BEGIN
        Vessel := Rec;
        ServSetup.GET;
        ServSetup.TESTFIELD("Vessel Nos.");
        IF NoSeriesMgt.SelectSeries(ServSetup."Vessel Nos.", OldVessel."No. Series", "No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := Vessel;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE AddNameHistory@1100529800();
    VAR
      NameHistoryVessel@1100529800 : Record 11071732;
      LineNo@1100529801 : Integer;
    BEGIN
      IF xRec.Name = '' THEN
        EXIT;

      NameHistoryVessel.RESET;
      NameHistoryVessel.SETRANGE("Vessel No.", xRec."No.");
      IF NameHistoryVessel.FINDLAST THEN
        LineNo := NameHistoryVessel."Line No." + 10000
      ELSE
        LineNo := 10000;

      NameHistoryVessel.INIT;
      NameHistoryVessel."Vessel No." := xRec."No.";
      NameHistoryVessel."Line No." := LineNo;
      NameHistoryVessel."Vessel Name" := xRec.Name;
      NameHistoryVessel."Last Date Modified" := TODAY;
      NameHistoryVessel.INSERT(FALSE);
    END;

    PROCEDURE CreateServiceLocation@1100529801(CreateFromVessel@1100529801 : Boolean);
    VAR
      ServiceSetup@1100409000 : Record 11012800;
      ServiceLocation@1100529800 : Record 11012801;
    BEGIN
      ServiceSetup.GET;
      IF ServiceLocation.GET("No.") THEN BEGIN
        IF CreateFromVessel THEN
          IF CONFIRM(STRSUBSTNO(Text11071700, ServiceLocation.TABLECAPTION, ServiceLocation."No."), TRUE) THEN
            ServiceLocation.ShowCard;
      END ELSE BEGIN
        ServiceLocation.INIT;
        ServiceLocation."No." := "No.";
        ServiceLocation."No. Series" := '';
        ServiceLocation.INSERT(TRUE);

        ServiceLocation.VALIDATE(Description, Name);
        //ServiceLocation.VALIDATE("Contact Person", Owner);
        ServiceLocation.MODIFY(TRUE);

        IF CreateFromVessel THEN
          IF CONFIRM(STRSUBSTNO(Text11071701, ServiceLocation.TABLECAPTION, ServiceLocation."No."), TRUE) THEN
            ServiceLocation.ShowCard;
      END;
    END;

    PROCEDURE ShowFeatures@1100525002();
    VAR
      ContactFeatureType@1100485000 : Record 11012753;
    BEGIN
      TESTFIELD("No.");
      ContactFeatureType."Relation Type" := ContactFeatureType."Relation Type"::Vessel;
      ContactFeatureType.Code := "No.";
      ContactFeatureType.SETRANGE("Relation Type", ContactFeatureType."Relation Type");
      ContactFeatureType.SETRANGE(Code, ContactFeatureType.Code);
      PAGE.RUNMODAL(PAGE::"Contact Feature Type", ContactFeatureType);
    END;

    PROCEDURE CreateFeatures@1100525005();
    VAR
      ContactFeatureType@1100525002 : Record 11012753;
      ContactFeatureGroup@1100530000 : Record 11012751;
    BEGIN
      //**4PS
      IF ContactFeatureGroup.ISEMPTY THEN
        EXIT; //This is done for customers without Sales & Marketing granule

      ContactFeatureType.SETRANGE("Relation Type", ContactFeatureType."Relation Type"::Vessel);
      ContactFeatureType.SETRANGE(Code, "No.");
      ContactFeatureType."Relation Type" := ContactFeatureType."Relation Type"::Vessel;
      ContactFeatureType.Code := "No.";
      IF ContactFeatureType.ISEMPTY THEN
        ContactFeatureType.CreateFeatureTypes;

      IF FromFeatureCode <> '' THEN
        ContactFeatureType.CopyFeaturesFromOtherType(
          FromFeatureRelationType, FromFeatureCode, ContactFeatureType."Relation Type"::Job, "No.");
    END;

    LOCAL PROCEDURE ConfirmUpdateServLocationName@1210190002();
    VAR
      ServiceLocation@1210190000 : Record 11012801;
    BEGIN
      //kkleermaker, 110816, M28696
      IF (NOT CalledFromImport) THEN BEGIN
        IF ServiceLocation.GET("No.") THEN BEGIN
          IF DIALOG.CONFIRM(
            Text000,
            TRUE,
            ServiceLocation.TABLECAPTION,
            TABLECAPTION,
            "No.",
            ServiceLocation.FIELDCAPTION(Description))
          THEN BEGIN
            ServiceLocation.VALIDATE(Description, Name);
            ServiceLocation.MODIFY;
          END;
        END;
      END ELSE BEGIN
        IF ServiceLocation.GET("No.") THEN BEGIN
          ServiceLocation.VALIDATE(Description, Name);
          ServiceLocation.MODIFY;
        END;
      END;
    END;

    PROCEDURE SetCalledFromImport@1210190000(YesNo@1210190000 : Boolean);
    BEGIN
      CalledFromImport := YesNo;
    END;

    BEGIN
    END.
  }
}

