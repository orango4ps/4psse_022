OBJECT Table 5477 Purch. Inv. Entity Aggregate
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
               UpdateReferencedRecordIds;
             END;

    OnModify=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
               UpdateReferencedRecordIds;
             END;

    OnRename=BEGIN
               IF NOT Posted THEN
                 ERROR(CannotChangeNumberOnNonPostedErr);

               IF Posted AND (NOT IsRenameAllowed) THEN
                 ERROR(CannotModifyPostedInvioceErr);

               "Last Modified Date Time" := CURRENTDATETIME;
               UpdateReferencedRecordIds;
             END;

    CaptionML=[ENU=Purch. Inv. Entity Aggregate;
               NOR=Enhet for kj›psfaktura - aggregering];
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Document Type;
                                                              NOR=Dokumenttype;
                                                              SVE=Dokumenttyp];
                                                   OptionCaptionML=[ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                                    NOR=Tilbud,Ordre,Faktura,Kreditnota,Rammebestilling,Ordreretur;
                                                                    SVE=Offert,Order,Faktura,Kreditnota,Avropsorder,Returorder];
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order }
    { 2   ;   ;Buy-from Vendor No. ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                UpdateBuyFromVendorId;
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Buy-from Vendor No.;
                                                              NOR=Kj›p fra-leverand›rnr.;
                                                              SVE=Ink”psleverant”rsnr];
                                                   NotBlank=Yes }
    { 3   ;   ;No.                 ;Code20        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 4   ;   ;Pay-to Vendor No.   ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                UpdatePayToVendorId;
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Pay-to Vendor No.;
                                                              NOR=Betal-til leverand›rnummer;
                                                              SVE=Betalningsleverant”rsnr];
                                                   NotBlank=Yes }
    { 5   ;   ;Pay-to Name         ;Text100       ;TableRelation=Vendor;
                                                   ValidateTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Pay-to Name;
                                                              NOR=Betal-til navn;
                                                              SVE=Betalningsnamn] }
    { 7   ;   ;Pay-to Address      ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Pay-to Address;
                                                              NOR=Betal-til adresse;
                                                              SVE=Betalningsadress] }
    { 8   ;   ;Pay-to Address 2    ;Text50        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Pay-to Address 2;
                                                              NOR=Betal-til adresse 2;
                                                              SVE=Betalningsadress 2] }
    { 9   ;   ;Pay-to City         ;Text30        ;TableRelation=IF (Pay-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Pay-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Pay-to Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Pay-to City;
                                                              NOR=Betal-til sted;
                                                              SVE=Betalningsort] }
    { 10  ;   ;Pay-to Contact      ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Pay-to Contact;
                                                              NOR=Betal-til kontakt;
                                                              SVE=Betalningskontaktperson] }
    { 11  ;   ;Your Reference      ;Text35        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Your Reference;
                                                              NOR=Deres referanse;
                                                              SVE=Er referens] }
    { 12  ;   ;Ship-to Code        ;Code10        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to Code;
                                                              NOR=Lever-til kode;
                                                              SVE=Leveransadresskod] }
    { 13  ;   ;Ship-to Name        ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to Name;
                                                              NOR=Lever-til navn;
                                                              SVE=Leveransnamn] }
    { 15  ;   ;Ship-to Address     ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to Address;
                                                              NOR=Lever-til adresse;
                                                              SVE=Leveransadress] }
    { 16  ;   ;Ship-to Address 2   ;Text50        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to Address 2;
                                                              NOR=Lever-til adresse 2;
                                                              SVE=Leveransadress 2] }
    { 17  ;   ;Ship-to City        ;Text30        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to City;
                                                              NOR=Lever-til by/sted;
                                                              SVE=Leveransort] }
    { 18  ;   ;Ship-to Contact     ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to Contact;
                                                              NOR=Lever-til kontakt;
                                                              SVE=Leveranskontakt] }
    { 23  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Payment Terms Code;
                                                              NOR=Kode for betalingsbetingelser;
                                                              SVE=Betalningsvillkorskod] }
    { 24  ;   ;Due Date            ;Date          ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Due Date;
                                                              NOR=Forfallsdato;
                                                              SVE=F”rfallodatum] }
    { 27  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              NOR=Leveringsm†tekode;
                                                              SVE=Leveransvillkorskod] }
    { 31  ;   ;Vendor Posting Group;Code20        ;TableRelation="Vendor Posting Group";
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Vendor Posting Group;
                                                              NOR=Bokf›ringsgruppe - leverand›r;
                                                              SVE=Leverant”rsbokf”ringsmall] }
    { 32  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                UpdateCurrencyId;
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod] }
    { 35  ;   ;Prices Including VAT;Boolean       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Prices Including VAT;
                                                              NOR=Priser inkl. mva.;
                                                              SVE=Priser inkl. moms] }
    { 43  ;   ;Purchaser Code      ;Code20        ;TableRelation=Salesperson/Purchaser;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Purchaser Code;
                                                              NOR=Innkj›perkode;
                                                              SVE=Ink”parkod] }
    { 44  ;   ;Order No.           ;Code20        ;OnValidate=BEGIN
                                                                UpdateOrderId;
                                                              END;

                                                   AccessByPermission=TableData 120=R;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Order No.;
                                                              NOR=Ordrenr.;
                                                              SVE=Ordernr] }
    { 56  ;   ;Recalculate Invoice Disc.;Boolean  ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Purchase Line" WHERE (Document Type=FIELD(Document Type),
                                                                                            Document No.=FIELD(No.),
                                                                                            Recalculate Invoice Disc.=CONST(Yes)));
                                                   CaptionML=[ENU=Recalculate Invoice Disc.;
                                                              NOR=Beregn fakturarabatt p† nytt;
                                                              SVE=Ber„kna om fakturarabatt];
                                                   Editable=No }
    { 60  ;   ;Amount              ;Decimal       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 61  ;   ;Amount Including VAT;Decimal       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Amount Including VAT;
                                                              NOR=Bel›p inkl. mva.;
                                                              SVE=Belopp inkl. moms];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 68  ;   ;Vendor Invoice No.  ;Code35        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Vendor Invoice No.;
                                                              NOR=Leverand›rs fakturanr.;
                                                              SVE=Leverant”rens fakturanr] }
    { 79  ;   ;Buy-from Vendor Name;Text100       ;TableRelation=Vendor.Name;
                                                   ValidateTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Buy-from Vendor Name;
                                                              NOR=Kj›p fra-leverand›rnavn;
                                                              SVE=Ink”psnamn] }
    { 81  ;   ;Buy-from Address    ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Buy-from Address;
                                                              NOR=Kj›p fra-adresse;
                                                              SVE=Ink”psadress] }
    { 82  ;   ;Buy-from Address 2  ;Text50        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Buy-from Address 2;
                                                              NOR=Kj›p fra-adresse 2;
                                                              SVE=Ink”psadress 2] }
    { 83  ;   ;Buy-from City       ;Text30        ;TableRelation=IF (Buy-from Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Buy-from Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Buy-from Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Buy-from City;
                                                              NOR=Kj›p fra-sted;
                                                              SVE=Ink”psort] }
    { 84  ;   ;Buy-from Contact    ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Buy-from Contact;
                                                              NOR=Kj›p fra-kontakt;
                                                              SVE=Ink”pskontaktperson] }
    { 85  ;   ;Pay-to Post Code    ;Code20        ;TableRelation=IF (Pay-to Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Pay-to Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Pay-to Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Pay-to Post Code;
                                                              NOR=Betal-til postnummer;
                                                              SVE=Betalas postnr] }
    { 86  ;   ;Pay-to County       ;Text30        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Pay-to County;
                                                              NOR=Betal-til fylke/delstat;
                                                              SVE=Betalas delstat];
                                                   CaptionClass='5,1,' + "Pay-to Country/Region Code" }
    { 87  ;   ;Pay-to Country/Region Code;Code10  ;TableRelation=Country/Region;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Pay-to Country/Region Code;
                                                              NOR=Betal-til lands-/omr†dekode;
                                                              SVE=Lands-/regionkod f”r betalning] }
    { 88  ;   ;Buy-from Post Code  ;Code20        ;TableRelation=IF (Buy-from Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Buy-from Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Buy-from Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Buy-from Post Code;
                                                              NOR=Kj›p fra-postnr.;
                                                              SVE=Leverant”rspostnr] }
    { 89  ;   ;Buy-from County     ;Text30        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Buy-from County;
                                                              NOR=Kj›p fra-fylke/delstat;
                                                              SVE=Leverant”rsdelstat];
                                                   CaptionClass='5,1,' + "Buy-from Country/Region Code" }
    { 90  ;   ;Buy-from Country/Region Code;Code10;TableRelation=Country/Region;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Buy-from Country/Region Code;
                                                              NOR=Lands-/omr†dekode for Kj›p fra;
                                                              SVE=Lands-/regionkod f”r leverant”r] }
    { 91  ;   ;Ship-to Post Code   ;Code20        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to Post Code;
                                                              NOR=Lever-til postnummer;
                                                              SVE=Leveranspostnrkod] }
    { 92  ;   ;Ship-to County      ;Text30        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to County;
                                                              NOR=Lever-til fylke/delstat;
                                                              SVE=Leveransl„n];
                                                   CaptionClass='5,1,' + "Ship-to Country/Region Code" }
    { 93  ;   ;Ship-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to Country/Region Code;
                                                              NOR=Lever-til lands-/omr†dekode;
                                                              SVE=Kod f”r leveransland/-region] }
    { 99  ;   ;Document Date       ;Date          ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Document Date;
                                                              NOR=Dokumentdato;
                                                              SVE=Dokumentdatum] }
    { 1304;   ;Vendor Ledger Entry No.;Integer    ;TableRelation="Vendor Ledger Entry"."Entry No.";
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Vendor Ledger Entry No.;
                                                              NOR=Leverand›rpostnr.;
                                                              SVE=Lev.reskontra l”pnr] }
    { 1305;   ;Invoice Discount Amount;Decimal    ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Invoice Discount Amount;
                                                              NOR=Fakturarabattbel›p;
                                                              SVE=Fakturarabatt];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 5052;   ;Buy-from Contact No.;Code20        ;TableRelation=Contact;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Buy-from Contact No.;
                                                              NOR=Kj›p fra-kontaktnr.;
                                                              SVE=Ink”pskontaktnr.] }
    { 8000;   ;Id                  ;GUID          ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Id;
                                                              NOR=ID;
                                                              SVE=ID] }
    { 9600;   ;Total Tax Amount    ;Decimal       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Total Tax Amount;
                                                              NOR=Totalt mva-bel›p];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 9601;   ;Status              ;Option        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=[@@@={Locked};
                                                                    ENU=" ,Draft,In Review,Open,Paid,Canceled,Corrective";
                                                                    NOR=" ,Draft,In Review,Open,Paid,Canceled,Corrective"];
                                                   OptionString=[ ,Draft,In Review,Open,Paid,Canceled,Corrective] }
    { 9602;   ;Posted              ;Boolean       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Posted;
                                                              NOR=Bokf›rt;
                                                              SVE=Bokf”rd] }
    { 9624;   ;Discount Applied Before Tax;Boolean;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Discount Applied Before Tax;
                                                              NOR=Rabatt utlignet f›r skatt] }
    { 9630;   ;Last Modified Date Time;DateTime   ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Last Modified Date Time;
                                                              NOR=Dato/klokkeslett for siste endring;
                                                              SVE=Senast „ndrad, datum och tid];
                                                   Editable=No }
    { 9631;   ;Vendor Id           ;GUID          ;TableRelation=Vendor.Id;
                                                   OnValidate=BEGIN
                                                                UpdateBuyFromVendorNo;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Vendor Id;
                                                              NOR=Leverand›r-ID;
                                                              SVE=Leverant”rs ID] }
    { 9632;   ;Order Id            ;GUID          ;OnValidate=BEGIN
                                                                UpdateOrderNo;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Order Id;
                                                              NOR=Ordre-ID;
                                                              SVE=Order-ID] }
    { 9634;   ;Currency Id         ;GUID          ;TableRelation=Currency.Id;
                                                   OnValidate=BEGIN
                                                                UpdateCurrencyCode;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Currency Id;
                                                              NOR=Valuta-ID] }
    { 9638;   ;Pay-to Vendor Id    ;GUID          ;TableRelation=Vendor.Id;
                                                   OnValidate=BEGIN
                                                                UpdatePayToVendorNo;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Pay-to Vendor Id;
                                                              NOR=Betal-til leverand›r-ID] }
  }
  KEYS
  {
    {    ;No.,Posted                              ;Clustered=Yes }
    {    ;Id                                       }
    {    ;Vendor Ledger Entry No.                  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CannotChangeNumberOnNonPostedErr@1002 : TextConst 'ENU=The number of the invoice can not be changed.;NOR=Fakturanummeret kan ikke endres.';
      CannotModifyPostedInvioceErr@1000 : TextConst '@@@={Locked};ENU=The invoice has been posted and can no longer be modified.;NOR=The invoice has been posted and can no longer be modified.';
      IsRenameAllowed@1001 : Boolean;

    LOCAL PROCEDURE UpdateBuyFromVendorNo@1();
    VAR
      Vendor@1000 : Record 23;
    BEGIN
      IF ISNULLGUID("Vendor Id") THEN
        EXIT;

      Vendor.SETRANGE(Id,"Vendor Id");
      IF NOT Vendor.FINDFIRST THEN
        EXIT;

      "Buy-from Vendor No." := Vendor."No.";
    END;

    LOCAL PROCEDURE UpdatePayToVendorNo@16();
    VAR
      Vendor@1000 : Record 23;
    BEGIN
      IF ISNULLGUID("Pay-to Vendor Id") THEN
        EXIT;

      Vendor.SETRANGE(Id,"Pay-to Vendor Id");
      IF NOT Vendor.FINDFIRST THEN
        EXIT;

      "Pay-to Vendor No." := Vendor."No.";
    END;

    LOCAL PROCEDURE UpdateBuyFromVendorId@2();
    VAR
      Vendor@1000 : Record 23;
    BEGIN
      IF "Buy-from Vendor No." = '' THEN BEGIN
        CLEAR("Vendor Id");
        EXIT;
      END;

      IF NOT Vendor.GET("Buy-from Vendor No.") THEN
        EXIT;

      "Vendor Id" := Vendor.Id;
    END;

    LOCAL PROCEDURE UpdatePayToVendorId@18();
    VAR
      Vendor@1000 : Record 23;
    BEGIN
      IF "Pay-to Vendor No." = '' THEN BEGIN
        CLEAR("Pay-to Vendor Id");
        EXIT;
      END;

      IF NOT Vendor.GET("Pay-to Vendor No.") THEN
        EXIT;

      "Pay-to Vendor Id" := Vendor.Id;
    END;

    LOCAL PROCEDURE UpdateOrderNo@4();
    VAR
      PurchaseHeader@1000 : Record 38;
    BEGIN
      IF ISNULLGUID("Order Id") THEN
        EXIT;

      PurchaseHeader.SETRANGE(Id,"Order Id");
      PurchaseHeader.SETRANGE("Document Type",PurchaseHeader."Document Type"::Order);
      IF NOT PurchaseHeader.FINDFIRST THEN
        EXIT;

      "Order No." := PurchaseHeader."No.";
    END;

    LOCAL PROCEDURE UpdateOrderId@3();
    VAR
      PurchaseHeader@1000 : Record 38;
    BEGIN
      IF NOT PurchaseHeader.GET(PurchaseHeader."Document Type"::Order,"Order No.") THEN
        EXIT;

      "Order Id" := PurchaseHeader.Id;
    END;

    LOCAL PROCEDURE UpdateCurrencyCode@10();
    VAR
      Currency@1000 : Record 4;
    BEGIN
      IF NOT ISNULLGUID("Currency Id") THEN BEGIN
        Currency.SETRANGE(Id,"Currency Id");
        Currency.FINDFIRST;
      END;

      VALIDATE("Currency Code",Currency.Code);
    END;

    [External]
    PROCEDURE UpdateCurrencyId@9();
    VAR
      Currency@1000 : Record 4;
    BEGIN
      IF "Currency Code" = '' THEN BEGIN
        CLEAR("Currency Id");
        EXIT;
      END;

      IF NOT Currency.GET("Currency Code") THEN
        EXIT;

      "Currency Id" := Currency.Id;
    END;

    [External]
    PROCEDURE UpdateReferencedRecordIds@5();
    BEGIN
      UpdateBuyFromVendorId;
      UpdatePayToVendorId;
      UpdateCurrencyId;

      IF ("Order No." <> '') AND ISNULLGUID("Order Id") THEN
        UpdateOrderId;
    END;

    [External]
    PROCEDURE GetIsRenameAllowed@7() : Boolean;
    BEGIN
      EXIT(IsRenameAllowed);
    END;

    [External]
    PROCEDURE SetIsRenameAllowed@6(RenameAllowed@1000 : Boolean);
    BEGIN
      IsRenameAllowed := RenameAllowed;
    END;

    BEGIN
    END.
  }
}

