OBJECT Page 11130302 _Option Cross List MB 2
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Tarifkomponente Ert„ge;
               ENU=Matrix;
               NLD=Matrix;
               NOR=Maskinordre, kostrad;
               SVE=Maskinorder, kostnadsrad];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table11012502;
    PageType=ListPart;
    SourceTableTemporary=Yes;
    OnAfterGetRecord=VAR
                       MATRIX_CurrentColumnOrdinal@1044 : Integer;
                     BEGIN
                       MATRIX_CurrentColumnOrdinal := 0;
                       WHILE MATRIX_CurrentColumnOrdinal < MATRIX_CurrNoOfMatrixColumns DO BEGIN
                         MATRIX_CurrentColumnOrdinal := MATRIX_CurrentColumnOrdinal + 1;
                         MATRIX_OnAfterGetRecord(MATRIX_CurrentColumnOrdinal);
                       END;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater;
                FreezeColumnID=Description }

    { 22  ;2   ;Field     ;
                SourceExpr="Main Group";
                Editable=FALSE }

    { 1100409001;2;Field  ;
                SourceExpr="Main Group Description";
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr=Group;
                Editable=FALSE }

    { 1100409002;2;Field  ;
                SourceExpr="Group Description";
                Visible=FALSE }

    { 1100525001;2;Field  ;
                SourceExpr="Sub Group";
                Editable=FALSE }

    { 1100409003;2;Field  ;
                SourceExpr="Sub Group Description";
                Visible=FALSE }

    { 1100409012;2;Field  ;
                SourceExpr=Option;
                Editable=FALSE }

    { 1100409011;2;Field  ;
                SourceExpr=Description;
                Editable=FALSE }

    { 1100409010;2;Field  ;
                SourceExpr=Quantities;
                Visible=FALSE;
                Editable=FALSE }

    { 1100409008;2;Field  ;
                SourceExpr=Quantity;
                Visible=FALSE;
                Editable=FALSE }

    { 1012;2   ;Field     ;
                Name=Field1;
                DrillDown=Yes;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[1];
                CaptionClass='3,' + MATRIX_CaptionSet[1];
                Editable=CellEditable1;
                OnValidate=BEGIN
                             MATRIX_OnValidate(1);
                           END;

                OnDrillDown=BEGIN
                              DrillDownCell(1)
                            END;
                             }

    { 1013;2   ;Field     ;
                Name=Field2;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[2];
                CaptionClass='3,' + MATRIX_CaptionSet[2];
                Editable=CellEditable2;
                OnValidate=BEGIN
                             MATRIX_OnValidate(2);
                           END;

                OnDrillDown=BEGIN
                              DrillDownCell(2)
                            END;
                             }

    { 1014;2   ;Field     ;
                Name=Field3;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[3];
                CaptionClass='3,' + MATRIX_CaptionSet[3];
                Editable=CellEditable3;
                OnValidate=BEGIN
                             MATRIX_OnValidate(3);
                           END;

                OnDrillDown=BEGIN
                              DrillDownCell(3)
                            END;
                             }

    { 1015;2   ;Field     ;
                Name=Field4;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[4];
                CaptionClass='3,' + MATRIX_CaptionSet[4];
                Editable=CellEditable4;
                OnValidate=BEGIN
                             MATRIX_OnValidate(4);
                           END;

                OnDrillDown=BEGIN
                              DrillDownCell(4)
                            END;
                             }

    { 1016;2   ;Field     ;
                Name=Field5;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[5];
                CaptionClass='3,' + MATRIX_CaptionSet[5];
                Editable=CellEditable5;
                OnValidate=BEGIN
                             MATRIX_OnValidate(5);
                           END;

                OnDrillDown=BEGIN
                              DrillDownCell(5)
                            END;
                             }

    { 1017;2   ;Field     ;
                Name=Field6;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[6];
                CaptionClass='3,' + MATRIX_CaptionSet[6];
                Editable=CellEditable6;
                OnValidate=BEGIN
                             MATRIX_OnValidate(6);
                           END;

                OnDrillDown=BEGIN
                              DrillDownCell(6)
                            END;
                             }

    { 1018;2   ;Field     ;
                Name=Field7;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[7];
                CaptionClass='3,' + MATRIX_CaptionSet[7];
                Editable=CellEditable7;
                OnValidate=BEGIN
                             MATRIX_OnValidate(7);
                           END;

                OnDrillDown=BEGIN
                              DrillDownCell(7)
                            END;
                             }

    { 1019;2   ;Field     ;
                Name=Field8;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[8];
                CaptionClass='3,' + MATRIX_CaptionSet[8];
                Editable=CellEditable8;
                OnValidate=BEGIN
                             MATRIX_OnValidate(8);
                           END;

                OnDrillDown=BEGIN
                              DrillDownCell(8)
                            END;
                             }

    { 1020;2   ;Field     ;
                Name=Field9;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[9];
                CaptionClass='3,' + MATRIX_CaptionSet[9];
                Editable=CellEditable9;
                OnValidate=BEGIN
                             MATRIX_OnValidate(9);
                           END;

                OnDrillDown=BEGIN
                              DrillDownCell(9)
                            END;
                             }

    { 1021;2   ;Field     ;
                Name=Field10;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[10];
                CaptionClass='3,' + MATRIX_CaptionSet[10];
                Editable=CellEditable10;
                OnValidate=BEGIN
                             MATRIX_OnValidate(10);
                           END;

                OnDrillDown=BEGIN
                              DrillDownCell(10)
                            END;
                             }

    { 1022;2   ;Field     ;
                Name=Field11;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[11];
                CaptionClass='3,' + MATRIX_CaptionSet[11];
                Editable=CellEditable11;
                OnValidate=BEGIN
                             MATRIX_OnValidate(11);
                           END;

                OnDrillDown=BEGIN
                              DrillDownCell(11)
                            END;
                             }

    { 1023;2   ;Field     ;
                Name=Field12;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[12];
                CaptionClass='3,' + MATRIX_CaptionSet[12];
                Editable=CellEditable12;
                OnValidate=BEGIN
                             MATRIX_OnValidate(12);
                           END;

                OnDrillDown=BEGIN
                              DrillDownCell(12)
                            END;
                             }

  }
  CODE
  {
    VAR
      MatrixRecords@1117 : ARRAY [12] OF Record 11012500;
      MATRIX_CurrNoOfMatrixColumns@1118 : Integer;
      MATRIX_CellData@1119 : ARRAY [12] OF Decimal;
      MATRIX_CaptionSet@1120 : ARRAY [32] OF Text[80];
      CellEditable1@1100525005 : Boolean INDATASET;
      CellEditable2@1100525007 : Boolean INDATASET;
      CellEditable3@1100525008 : Boolean INDATASET;
      CellEditable4@1100525009 : Boolean INDATASET;
      CellEditable5@1100525010 : Boolean INDATASET;
      CellEditable6@1100525011 : Boolean INDATASET;
      CellEditable7@1100525012 : Boolean INDATASET;
      CellEditable8@1100525013 : Boolean INDATASET;
      CellEditable9@1100525014 : Boolean INDATASET;
      CellEditable10@1100525015 : Boolean INDATASET;
      CellEditable11@1100525016 : Boolean INDATASET;
      CellEditable12@1100525017 : Boolean INDATASET;
      Text001@1100525018 : TextConst 'DEU=Die zul„ssigen Werte sind 0 oder 1.;ENU=The allowed values are 0 or 1.;NLD=Alleen aantal 0 of 1 toegestaan.;NOR=Tillatte verdier er 0 eller 1.;SVE=Till†tna v„rden „r 0 eller 1.';
      CrossListLine@1100525002 : Record 11012516;
      ProjHouseModelOption@1100525000 : Record 11012502;
      ProjNo@1100525001 : Code[20];

    PROCEDURE Load@1132(ProjectNo@1100525000 : Code[20];VAR MatrixColumns1@1005 : ARRAY [32] OF Text[80];VAR MatrixRecords1@1006 : ARRAY [12] OF Record 11012500;CurrentNoOfMatrixColumns@1007 : Integer);
    VAR
      i@1008 : Integer;
    BEGIN
      ProjNo := ProjectNo;

      FOR i := 1 TO 12 DO BEGIN
        MATRIX_CaptionSet[i] := MatrixColumns1[i];
        IF MatrixRecords[i].GET(ProjNo, MatrixRecords1[i]."Plot No.") THEN;
      END;

      MATRIX_CurrNoOfMatrixColumns := CurrentNoOfMatrixColumns;

      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE MATRIX_OnValidate@1100525001(ColumnNo@1008 : Integer);
    BEGIN
      CheckProjHouseModelOptionExist(ColumnNo);
      IF (MATRIX_CellData[ColumnNo] <> 0) AND (MATRIX_CellData[ColumnNo] <> 1) THEN BEGIN
        IF NOT ProjHouseModelOption.Quantities THEN
          ERROR(Text001);
      END;
      UpdateCrossListLine(ColumnNo);
    END;

    LOCAL PROCEDURE MATRIX_OnAfterGetRecord@1135(ColumnNo@1010 : Integer);
    BEGIN
      MATRIX_CellData[ColumnNo] := FillSelectOptionForPlot(ColumnNo);

      SetCellEditable(ColumnNo);
    END;

    LOCAL PROCEDURE FillSelectOptionForPlot@1210190003(ColumnNo@1100525000 : Integer) : Decimal;
    BEGIN
      IF CheckPlotOnCrossList(ColumnNo) THEN
        EXIT(CrossListLine.Quantity);
    END;

    LOCAL PROCEDURE CheckPlotOnCrossList@1210190000(ColumnNo@1100525000 : Integer) : Boolean;
    BEGIN
      EXIT(CrossListLine.GET(
        "Project No.", MatrixRecords[ColumnNo]."House Model", "Main Group", Group, "Sub Group", Option,
        MatrixRecords[ColumnNo]."Plot No."));
    END;

    LOCAL PROCEDURE UpdateCrossListLine@1100485000(ColumnNo@1100525000 : Integer);
    VAR
      CrossList@1100525001 : Record 11012515;
    BEGIN
      IF CheckPlotOnCrossList(ColumnNo) THEN BEGIN
        IF (NOT IsCellEditable(ColumnNo)) OR (MATRIX_CellData[ColumnNo] = 0) THEN
          CrossListLine.DELETE(TRUE)
        ELSE BEGIN
          CrossListLine.Quantity := MATRIX_CellData[ColumnNo];
          CrossListLine.MODIFY(TRUE);
        END;
        COMMIT;
      END ELSE BEGIN
        IF IsCellEditable(ColumnNo) AND ((MATRIX_CellData[ColumnNo] <> 0)) THEN BEGIN
          IF NOT CrossList.GET("Project No.", MatrixRecords[ColumnNo]."House Model", "Main Group", Group, "Sub Group", Option) THEN BEGIN
            CrossList.INIT;
            CrossList."Project No." := "Project No.";
            CrossList."House Model" := MatrixRecords[ColumnNo]."House Model";
            CrossList."Main Group" := "Main Group";
            CrossList.Group := Group;
            CrossList."Sub Group" := "Sub Group";
            CrossList.Option := Option;
            CrossList."Option No. External" := ProjHouseModelOption."Option No. External";
            CrossList.SetModified();
            CrossList.INSERT(FALSE);  //* Trigger 'FALSE' ! (Should not insert cross list lines if alreary plot options present).
          END;
          CrossListLine.INIT;
          CrossListLine."Project No." := "Project No.";
          CrossListLine."House Model" := MatrixRecords[ColumnNo]."House Model";
          CrossListLine."Main Group" := "Main Group";
          CrossListLine.Group := Group;
          CrossListLine."Sub Group" := "Sub Group";
          CrossListLine.Option := Option;
          CrossListLine.VALIDATE("Plot No.", MatrixRecords[ColumnNo]."Plot No.");
          CrossListLine.Quantity := MATRIX_CellData[ColumnNo];
          CrossListLine.INSERT(TRUE);
          COMMIT;
        END;
      END;
    END;

    LOCAL PROCEDURE SetCellEditable@1100525004(i@1100525000 : Integer);
    BEGIN
      CASE i OF
        1: CellEditable1 := CheckProjHouseModelOptionExist(i);
        2: CellEditable2 := CheckProjHouseModelOptionExist(i);
        3: CellEditable3 := CheckProjHouseModelOptionExist(i);
        4: CellEditable4 := CheckProjHouseModelOptionExist(i);
        5: CellEditable5 := CheckProjHouseModelOptionExist(i);
        6: CellEditable6 := CheckProjHouseModelOptionExist(i);
        7: CellEditable7 := CheckProjHouseModelOptionExist(i);
        8: CellEditable8 := CheckProjHouseModelOptionExist(i);
        9: CellEditable9 := CheckProjHouseModelOptionExist(i);
        10: CellEditable10 := CheckProjHouseModelOptionExist(i);
        11: CellEditable11 := CheckProjHouseModelOptionExist(i);
        12: CellEditable12 := CheckProjHouseModelOptionExist(i);
      END;
    END;

    LOCAL PROCEDURE IsCellEditable@1100525003(i@1100525000 : Integer) : Boolean;
    BEGIN
      CASE i OF
        1: EXIT(CellEditable1);
        2: EXIT(CellEditable2);
        3: EXIT(CellEditable3);
        4: EXIT(CellEditable4);
        5: EXIT(CellEditable5);
        6: EXIT(CellEditable6);
        7: EXIT(CellEditable7);
        8: EXIT(CellEditable8);
        9: EXIT(CellEditable9);
        10: EXIT(CellEditable10);
        11: EXIT(CellEditable11);
        12: EXIT(CellEditable12);
      END;
    END;

    PROCEDURE DrillDownCell@1100409000(CellNo@1100409000 : Integer);
    VAR
      lvPlotRec@1100409002 : Record 11012500;
      lvPlotFrm@1100409001 : Page 11012505;
    BEGIN
      lvPlotRec.FILTERGROUP(9);
      lvPlotRec.SETRANGE("Project No.", "Project No.");
      lvPlotRec.FILTERGROUP(0);
      lvPlotRec.SETRANGE("Plot No.", MatrixRecords[CellNo]."Plot No.");
      lvPlotFrm.SETTABLEVIEW(lvPlotRec);
      //* Not editable because when options are modified (quantity) or deleted then this will result in changes in the cross list.
      lvPlotFrm.EDITABLE(FALSE);
      lvPlotFrm.RUNMODAL
    END;

    PROCEDURE BuildTmpTable@1100525000(ProjNo@1100525001 : Code[20]);
    VAR
      ProjOption@1100525000 : Record 11012502;
      PlotOption@1100525002 : Record 11012502;
      OptionCrossList@1100525003 : Record 11012515;
    BEGIN
      //Fill Rec table, SourceTableTemporary is (must be!) Yes
      RESET;
      DELETEALL;
      IF ProjNo = '' THEN
        EXIT;

      ProjOption.SETRANGE("Project No.", ProjNo);
      ProjOption.SETRANGE("Plot No.", '');
      ProjOption.SETFILTER("House Model", '<>%1', '');
      PlotOption.SETCURRENTKEY("Project No.", "House Model", "Main Group", Group, "Sub Group", Option, "Plot No.");
      PlotOption.SETRANGE("Project No.", ProjNo);
      PlotOption.SETFILTER("Plot No.", '<>%1', '');
      ProjOption.SETFILTER(Quantity, '<>%1', 0);

      IF ProjOption.FINDSET(FALSE,FALSE) THEN BEGIN
        REPEAT
          IF NOT GET(ProjOption."Project No.", '', '', ProjOption."Main Group", ProjOption.Group, ProjOption."Sub Group", ProjOption.Option) THEN BEGIN
            "Project No." := ProjOption."Project No.";
            "Main Group" := ProjOption."Main Group";
            Group := ProjOption.Group;
            "Sub Group" := ProjOption."Sub Group";
            Option := ProjOption.Option;
            Description := ProjOption.Description;
            Quantities := ProjOption.Quantities;
            Quantity := ProjOption.Quantity;
            INSERT;
          END ELSE BEGIN
            IF ProjOption.Description <> Description THEN
              Description := '';
            IF (ProjOption.Quantities <> Quantities) THEN
              Quantities := FALSE;
            IF (ProjOption.Quantity <> Quantity) THEN
              Quantity := 0;
            MODIFY;
          END;
          IF NOT OptionCrossList.GET(
            ProjOption."Project No.", ProjOption."House Model", ProjOption."Main Group", ProjOption.Group, ProjOption."Sub Group", ProjOption.Option)
          THEN BEGIN
            PlotOption.SETRANGE("House Model", ProjOption."House Model");
            PlotOption.SETRANGE("Main Group", ProjOption."Main Group");
            PlotOption.SETRANGE(Group, ProjOption.Group);
            PlotOption.SETRANGE("Sub Group", ProjOption."Sub Group");
            PlotOption.SETRANGE(Option, ProjOption.Option);
            IF PlotOption.FINDFIRST THEN BEGIN
              OptionCrossList.INIT;
              OptionCrossList."Project No." := ProjOption."Project No.";
              OptionCrossList."House Model" := ProjOption."House Model";
              OptionCrossList."Main Group" := ProjOption."Main Group";
              OptionCrossList.Group := ProjOption.Group;
              OptionCrossList."Sub Group" := ProjOption."Sub Group";
              OptionCrossList.Option := ProjOption.Option;
              OptionCrossList."Option No. External" := "Option No. External";
              OptionCrossList.INSERT(TRUE);  //* Trigger 'TRUE' ! (insert cross list lines if already plot options present).
            END;
          END;
        UNTIL ProjOption.NEXT = 0;
      END;
      COMMIT;
    END;

    LOCAL PROCEDURE CheckProjHouseModelOptionExist@1100525005(ColumnNo@1100525000 : Integer) : Boolean;
    BEGIN
      IF ProjHouseModelOption.GET(
        "Project No.", '', MatrixRecords[ColumnNo]."House Model",
        "Main Group", Group, "Sub Group", Option)
      THEN
        EXIT(TRUE);

      ProjHouseModelOption.INIT;
      ProjHouseModelOption.Quantity := 0;  //* Because init value is '1'
      EXIT(FALSE);
    END;

    BEGIN
    {
      SourceTableTemporary is Yes!

      Call: 12713    Left part of the matrix housmodel independent.
      Remark: This matrix is only suitable if all options (groups/option) are the same for all house models.
    }
    END.
  }
}

