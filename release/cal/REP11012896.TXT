OBJECT Report 11012896 Copy Service Surcharges
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Servicezuschl„ge kopieren;
               ENU=Copy Service Surcharges;
               NLD=Servicetoeslagen kopi‰ren;
               NOR=Kopier servicetilleggsavgift;
               SVE=Kopiera servicetill„ggsavgifter];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF (FromType <> FromType::Company) AND (FromCode = '') THEN
                    ERROR(Text000);
                  IF (ToType <> ToType::Company) AND (ToCode = '') THEN
                    ERROR(Text001);
                END;

  }
  DATASET
  {
    { 9051;    ;DataItem;SourceTypeLoop      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=VAR
                               SourceTypeFilter@1100528600 : Text[250];
                             BEGIN
                               IF FromSTCall THEN
                                 SourceTypeFilter := FORMAT(0); //FromSourceType::Call
                               IF FromSTContract THEN BEGIN
                                 IF SourceTypeFilter <> '' THEN
                                   SourceTypeFilter += '|';
                                 SourceTypeFilter += FORMAT(1); //FromSourceType::Contract
                               END;
                               IF FromSTDirect THEN BEGIN
                                 IF SourceTypeFilter <> '' THEN
                                   SourceTypeFilter += '|';
                                 SourceTypeFilter += FORMAT(2); //FromSourceType::Direct
                               END;
                               IF FromSTModification THEN BEGIN
                                 IF SourceTypeFilter <> '' THEN
                                   SourceTypeFilter += '|';
                                 SourceTypeFilter += FORMAT(6); //FromSourceType::Modification
                               END;
                               IF FromSTReplacement THEN BEGIN
                                 IF SourceTypeFilter <> '' THEN
                                   SourceTypeFilter += '|';
                                 SourceTypeFilter += FORMAT(7); //FromSourceType::Replacement
                               END;

                               IF SourceTypeFilter = '' THEN
                                 CurrReport.BREAK
                               ELSE
                                 SETFILTER(Number, SourceTypeFilter);
                             END;
                              }

    { 9433;1   ;DataItem;                    ;
               DataItemTable=Table11071783;
               DataItemTableView=SORTING(Type,Code,Source Type,Service Type,Department Code,Index Date);
               OnPreDataItem=VAR
                               IndexDate@1100528600 : Date;
                             BEGIN
                               SETRANGE(Type, FromType);
                               IF (FromCode <> '') OR (FromType = FromType::Company) THEN
                                 SETRANGE(Code, FromCode);
                               SETRANGE("Source Type", SourceTypeLoop.Number);
                               SETRANGE("Service Type", FromServiceType);
                               SETRANGE("Department Code", FromDepartmentCode);
                               IF FromIndexDate = 0D THEN
                                 FromIndexDate := TODAY;
                               IndexDate := DetermineLastIndexDate(FromType,FromCode,SourceTypeLoop.Number,FromServiceType,FromDepartmentCode,FromIndexDate);
                               SETRANGE("Index Date", IndexDate);
                             END;

               OnAfterGetRecord=VAR
                                  ServiceSurchargeManagement@1100528603 : Codeunit 11012834;
                                  IndexDate@1100528600 : Date;
                                  SourceType@1100528601 : Option;
                                  ServiceType@1210190000 : Code[20];
                                  DepartmentCode@1100528602 : Code[20];
                                BEGIN
                                  IF ToIndexDate <> 0D THEN
                                    IndexDate := ToIndexDate
                                  ELSE
                                    IndexDate := "Index Date";

                                  IF ToSourceType <> ToSourceType::" " THEN
                                    SourceType := ToSourceType
                                  ELSE
                                    SourceType := "Source Type";

                                  ServiceType := ToServiceType;
                                  DepartmentCode := ToDepartmentCode;

                                  IF (Type = ToType) AND (Code = ToCode) AND ("Source Type" = ToSourceType) AND ("Service Type" = ToServiceType) AND
                                    ("Department Code" = ToDepartmentCode) AND ("Index Date" = ToIndexDate) THEN
                                    ERROR(Text000);

                                  ServiceSurchargeManagement.CopySurchargeLines(
                                    Type, Code, "Source Type", "Service Type", "Department Code", "Index Date",
                                    ToType, ToCode, ToSourceType, ToServiceType, ToServiceType = '', ToDepartmentCode,
                                    ToServiceType = '', ToIndexDate);
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   UpdateEditable;
                 END;

    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525002;2;Group  ;
                  CaptionML=[DEU=Von;
                             ENU=From;
                             NLD=Van;
                             NOR=Fra;
                             SVE=Fr†n];
                  GroupType=Group }

      { 1100525003;3;Field  ;
                  CaptionML=[DEU=Art;
                             ENU=Type;
                             NLD=Type;
                             NOR=Radtype;
                             SVE=Typ];
                  OptionCaptionML=[DEU=Betrieb,Vertrag,Serviceauftrag,,,,,,Vertragsvorlage;
                                   ENU=Company,Contract,Service Order,,,,,,Contract Template;
                                   NLD=Bedrijf,Contract,Serviceorder,,,,,,Contractsjabloon;
                                   NOR=Selskap,Kontrakt,Serviceordre,,,,,,Kontraktmal;
                                   SVE=F”retag,Kontakt,Serviceorder,,,,,,Kontraktmall];
                  SourceExpr=FromType;
                  OnValidate=BEGIN
                               ClearFromParams;
                             END;
                              }

      { 1100525004;3;Field  ;
                  CaptionML=[DEU=Code;
                             ENU=Code;
                             NLD=Code;
                             NOR=Kode;
                             SVE=Kod];
                  SourceExpr=FromCode;
                  Editable=FromCodeEditable;
                  OnValidate=BEGIN
                               FromCodeValidate;
                             END;

                  OnLookup=BEGIN
                             FromCodeLookup;
                           END;
                            }

      { 1100525005;3;Field  ;
                  CaptionML=[DEU=Indexierungsdatum;
                             ENU=Index Date;
                             NLD=Indexeringsdatum;
                             NOR=Indeksdato;
                             SVE=Indexdatum];
                  SourceExpr=FromIndexDate;
                  Editable=FromIndexDateEditable }

      { 1100525006;3;Field  ;
                  CaptionML=[DEU=Herkunft: Vertrag;
                             ENU=Source Type: Contract;
                             NLD=Bron: Contract;
                             NOR=Kildetype: Kontrakt;
                             SVE=Ursprungstyp: Kontrakt];
                  SourceExpr=FromSTContract;
                  Editable=FromSTContractEditable;
                  OnValidate=BEGIN
                               UpdateEditable;
                             END;
                              }

      { 1100525007;3;Field  ;
                  CaptionML=[DEU=Herkunft: Meldung;
                             ENU=Source Type: Call;
                             NLD=Bron: Melding;
                             NOR=Kildetype: Samtale;
                             SVE=Ursprungstyp: Samtal];
                  SourceExpr=FromSTCall;
                  Editable=FromSTCallEditable;
                  OnValidate=BEGIN
                               UpdateEditable;
                             END;
                              }

      { 1100525008;3;Field  ;
                  CaptionML=[DEU=Herkunft: Direkt;
                             ENU=Source Type: Direct;
                             NLD=Bron: Direct;
                             NOR=Kildetype: Direkte;
                             SVE=Ursprungstyp: Direkt];
                  SourceExpr=FromSTDirect;
                  Editable=FromSTDirectEditable;
                  OnValidate=BEGIN
                               UpdateEditable;
                             END;
                              }

      { 1100525009;3;Field  ;
                  CaptionML=[DEU=Herkunft: Modifikation;
                             ENU=Source Type: Modification;
                             NLD=Bron: Modificatie;
                             NOR=Kildetype: Modifisering;
                             SVE=Ursprungstyp: Žndring];
                  SourceExpr=FromSTModification;
                  Editable=FromSTModificationEditable;
                  OnValidate=BEGIN
                               UpdateEditable;
                             END;
                              }

      { 1100525010;3;Field  ;
                  CaptionML=[DEU=Herkunft: Ersatz;
                             ENU=Source Type: Replacement;
                             NLD=Bron: Vervanging;
                             NOR=Kildetype: Erstatning;
                             SVE=Ursprungstyp: Ers„ttning];
                  SourceExpr=FromSTReplacement;
                  Editable=FromSTReplacementEditable;
                  OnValidate=BEGIN
                               UpdateEditable;
                             END;
                              }

      { 1100525011;3;Field  ;
                  CaptionML=[DEU=Serviceart;
                             ENU=Service Type;
                             NLD=Servicetype;
                             NOR=Servicetype;
                             SVE=Servicetyp];
                  SourceExpr=FromServiceType;
                  TableRelation="Service Type";
                  Editable=FromServiceTypeEditable;
                  OnValidate=BEGIN
                               IF FromServiceType = '' THEN
                                 FromDepartmentCode := '';
                             END;
                              }

      { 1100528600;3;Field  ;
                  SourceExpr=FromDepartmentCode;
                  CaptionClass='1,2,1';
                  TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                  OnValidate=BEGIN
                               IF (FromServiceType = '') AND (FromDepartmentCode <> '') THEN
                                 ERROR(Text002);
                             END;
                              }

      { 1100525012;2;Group  ;
                  CaptionML=[DEU=Bis;
                             ENU=To;
                             NLD=Naar;
                             NOR=Til;
                             SVE=Till];
                  GroupType=Group }

      { 1100525013;3;Field  ;
                  CaptionML=[DEU=Art;
                             ENU=Type;
                             NLD=Type;
                             NOR=Radtype;
                             SVE=Radtyp];
                  SourceExpr=ToType;
                  OnValidate=BEGIN
                               ToTypeValidate;
                             END;
                              }

      { 1100525014;3;Field  ;
                  CaptionML=[DEU=Code;
                             ENU=Code;
                             NLD=Code;
                             NOR=Kode;
                             SVE=Kod];
                  SourceExpr=ToCode;
                  Editable=ToCodeEditable;
                  OnValidate=BEGIN
                               ToCodeValidate;
                             END;
                              }

      { 1100525015;3;Field  ;
                  CaptionML=[DEU=Indexierungsdatum;
                             ENU=Index Date;
                             NLD=Indexeringsdatum;
                             NOR=Indeksdato;
                             SVE=Indexdatum];
                  SourceExpr=ToIndexDate;
                  Editable=ToIndexDateEditable }

      { 1100525016;3;Field  ;
                  CaptionML=[DEU=Herkunftsart;
                             ENU=Source Type;
                             NLD=Bron;
                             NOR=Kildetype;
                             SVE=Ursprungstyp];
                  OptionCaptionML=[DEU=Meldung,Vertrag,Direkt,,,,Modifikation,Ersatz;
                                   ENU="Call,Contract,Direct,,,,Modification,Replacement, ";
                                   NLD="Melding,Contract,Direct,,,,Modificatie,Vervanging, ";
                                   NOR="Samtale,Kontrakt,Direkte,,,,Modifisering,Erstatning, ";
                                   SVE="Samtal,Kontrakt,Direkt,,,,Žndring,Ers„ttning, "];
                  SourceExpr=ToSourceType;
                  Editable=ToSourceTypeEditable;
                  OnValidate=BEGIN
                               ToSourceTypeValidate;
                             END;
                              }

      { 1100525017;3;Field  ;
                  CaptionML=[DEU=Serviceart;
                             ENU=Service Type;
                             NLD=Servicetype;
                             NOR=Servicetype;
                             SVE=Servicetyp];
                  SourceExpr=ToServiceType;
                  TableRelation="Service Type";
                  Editable=ToServiceTypeEditable;
                  OnValidate=BEGIN
                               IF ToServiceType = '' THEN
                                 ToDepartmentCode := '';
                             END;
                              }

      { 1100528601;3;Field  ;
                  SourceExpr=ToDepartmentCode;
                  CaptionClass='1,2,1';
                  TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                  OnValidate=BEGIN
                               IF (ToServiceType = '') AND (ToDepartmentCode <> '') THEN
                                 ERROR(Text002);
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FromType@1100528600 : 'Company,Contract,Service Order,,,,,,Contract Template';
      FromCode@1100528601 : Code[20];
      FromSourceType@1100528605 : 'Call,Contract,Direct,,,,Modification,Replacement';
      FromServiceType@1210190000 : Code[20];
      FromDepartmentCode@1100528615 : Code[20];
      FromSTCall@1100528602 : Boolean;
      FromSTContract@1100528608 : Boolean;
      FromSTDirect@1100528609 : Boolean;
      FromSTModification@1100528614 : Boolean;
      FromSTReplacement@1100528613 : Boolean;
      FromIndexDate@1100528603 : Date;
      ToType@1100528607 : 'Company,Contract,Service Order,,,,,,Contract Template';
      ToCode@1100528606 : Code[20];
      ToSourceType@1100528612 : 'Call,Contract,Direct,,,,Modification,Replacement, ';
      ToServiceType@1210190001 : Code[20];
      ToDepartmentCode@1100528616 : Code[20];
      ToIndexDate@1100528604 : Date;
      Text000@1100528610 : TextConst 'DEU=Von Code nicht eingegeben;ENU=From Code not given;NLD=Van Code niet opgegeven;NOR=Fra kode ikke angitt;SVE=Fr†n-kod ej angiven';
      Text001@1100528611 : TextConst 'DEU=Zu Code nicht eingegeben;ENU=To Code not given;NLD=Naar Code niet opgegeven;NOR=Til kode ikke angitt;SVE=Till-kod ej angiven';
      FromCodeEditable@1100525000 : Boolean INDATASET;
      FromSTContractEditable@1100525001 : Boolean INDATASET;
      FromSTCallEditable@1100525002 : Boolean INDATASET;
      FromSTDirectEditable@1100525003 : Boolean INDATASET;
      FromSTModificationEditable@1100525004 : Boolean INDATASET;
      FromSTReplacementEditable@1100525005 : Boolean INDATASET;
      FromIndexDateEditable@1100525006 : Boolean INDATASET;
      FromServiceTypeEditable@1100525007 : Boolean INDATASET;
      FromDepartmentCodeEditable@1100528617 : Boolean INDATASET;
      ToCodeEditable@1100525008 : Boolean INDATASET;
      ToSourceTypeEditable@1100525009 : Boolean INDATASET;
      ToServiceTypeEditable@1100525010 : Boolean INDATASET;
      ToDepartmentCodeEditable@1100528618 : Boolean INDATASET;
      ToIndexDateEditable@1100525011 : Boolean INDATASET;
      Text002@1100528619 : TextConst 'DEU=Serviceart muss angegeben werden;ENU=Service Type must be filled;NLD=Servicetype dient opgegeven te worden;NOR=Servicetype m† v‘re utfylt';

    PROCEDURE UpdateEditable@1100528605();
    VAR
      NoOfSourceTypes@1100528600 : Integer;
    BEGIN
      IF FromSTContract THEN
        NoOfSourceTypes += 1;
      IF FromSTCall THEN
        NoOfSourceTypes += 1;
      IF FromSTDirect THEN
        NoOfSourceTypes += 1;
      IF FromSTModification THEN
        NoOfSourceTypes += 1;
      IF FromSTReplacement THEN
        NoOfSourceTypes += 1;

      IF NoOfSourceTypes > 1 THEN
        ToSourceType := ToSourceType::" ";

      FromCodeEditable := FromType <> FromType::Company;
      FromSTContractEditable := (FromType <> FromType::"Service Order") AND (ToType <> ToType::"Service Order");
      FromSTCallEditable := (FromType <> FromType::"Service Order") AND (ToType <> ToType::"Service Order");
      FromSTDirectEditable := (FromType <> FromType::"Service Order") AND (ToType <> ToType::"Service Order");
      FromSTModificationEditable := (FromType = FromType::Company) AND (ToType = ToType::Company);
      FromSTReplacementEditable := (FromType = FromType::Company) AND (ToType = ToType::Company);
      FromIndexDateEditable := FromType <> FromType::"Service Order";
      FromServiceTypeEditable := FromType <> FromType::"Service Order";
      FromDepartmentCodeEditable := FromType <> FromType::"Service Order";
      ToCodeEditable := ToType <> ToType::Company;
      ToSourceTypeEditable := (NoOfSourceTypes < 2) AND (ToType <> ToType::"Service Order");
      ToServiceTypeEditable := ToType <> ToType::"Service Order";
      ToDepartmentCodeEditable := ToType <> ToType::"Service Order";
      ToIndexDateEditable := ToType <> ToType::"Service Order";
    END;

    PROCEDURE UpdateSourceTypes@1100528600();
    BEGIN
      FromSTContract := FALSE;
      FromSTCall := FALSE;
      FromSTDirect := FALSE;

      CASE FromSourceType OF
        FromSourceType::Call:
          FromSTCall := TRUE;
        FromSourceType::Contract:
          FromSTContract := TRUE;
        FromSourceType::Direct:
          FromSTDirect := TRUE;
        FromSourceType::Modification:
          FromSTModification := TRUE;
        FromSourceType::Replacement:
          FromSTReplacement := TRUE;
      END;
    END;

    PROCEDURE UpdateFields@1100528601(IToFields@1100528603 : Boolean;ICode@1100528600 : Code[20];IIndexDate@1100528601 : Date;ISourceType@1100528602 : Option);
    BEGIN
      IF NOT IToFields THEN BEGIN
        FromCode := ICode;
        FromIndexDate := IIndexDate;
        FromSourceType := ISourceType;
        UpdateSourceTypes;
      END ELSE BEGIN
        ToCode := ICode;
        ToIndexDate := IIndexDate;
        ToSourceType := ISourceType;

        IF ToType = ToType::"Service Order" THEN BEGIN
          FromSourceType := ISourceType;
          UpdateSourceTypes;
        END;
      END;
    END;

    PROCEDURE SetSelection@1100528610(IType@1100528600 : Option;ICode@1100528601 : Code[20];ISourceType@1100528602 : Option;IServiceType@1210190000 : Code[20];IDepartmentCode@1100528604 : Code[20];IIndexDate@1100528603 : Date);
    BEGIN
      FromType := IType;
      FromCode := ICode;
      FromSourceType := ISourceType;
      FromServiceType := IServiceType;
      FromDepartmentCode := IDepartmentCode;
      FromIndexDate := IIndexDate;

      ToType := IType;
      ToCode := ICode;
      ToSourceType := ISourceType;
      ToServiceType := IServiceType;
      ToDepartmentCode := IDepartmentCode;
      ToIndexDate := IIndexDate;

      UpdateSourceTypes;
    END;

    PROCEDURE DetermineLastIndexDate@1100528602(IType@1100528601 : Option;ICode@1100528600 : Code[20];ISourceType@1100528602 : Option;IServiceType@1210190000 : Code[20];IDepartmentCode@1100528605 : Code[20];IIndexDate@1100528603 : Date) : Date;
    VAR
      ServiceSurchargeVersion@1100528604 : Record 11071783;
    BEGIN
      ServiceSurchargeVersion.SETRANGE(Type, IType);
      ServiceSurchargeVersion.SETRANGE(Code, ICode);
      ServiceSurchargeVersion.SETRANGE("Source Type", ISourceType);
      ServiceSurchargeVersion.SETRANGE("Service Type", IServiceType);
      ServiceSurchargeVersion.SETRANGE("Department Code", IDepartmentCode);
      ServiceSurchargeVersion.SETRANGE("Index Date", 0D, IIndexDate);
      IF ServiceSurchargeVersion.FINDLAST THEN
        EXIT(ServiceSurchargeVersion."Index Date");
    END;

    PROCEDURE ClearFromParams@1100525000();
    BEGIN
      FromCode := '';
      FromSTModification := FALSE;
      FromSTReplacement := FALSE;
      UpdateEditable;
    END;

    PROCEDURE FromCodeValidate@1100525002();
    VAR
      ServiceOrder@1100525000 : Record 11012823;
    BEGIN
      IF FromType = FromType::"Service Order" THEN BEGIN
        ServiceOrder.GET(FromCode);
        UpdateFields(FALSE, ServiceOrder."No.", ServiceOrder."Order Date", ServiceOrder."Source Type");
      END;
    END;

    PROCEDURE FromCodeLookup@1100525004();
    VAR
      ServiceContract@1100525002 : Record 11012812;
      ServiceOrder@1100525001 : Record 11012823;
      ServiceContractTemplate@1100525000 : Record 11071754;
    BEGIN
      CASE FromType OF
        FromType::Contract:
          BEGIN
            IF PAGE.RUNMODAL(0, ServiceContract) = ACTION::LookupOK THEN
              FromCode := ServiceContract."No.";
          END;
        FromType::"Service Order":
          BEGIN
            IF PAGE.RUNMODAL(0, ServiceOrder) = ACTION::LookupOK THEN BEGIN
              FromCode := ServiceOrder."No.";
              FromSourceType := ServiceOrder."Source Type";
              FromIndexDate := ServiceOrder."Order Date";
              UpdateSourceTypes;
            END;
          END;
        FromType::"Contract Template":
          BEGIN
            IF PAGE.RUNMODAL(0, ServiceContractTemplate) = ACTION::LookupOK THEN
              FromCode := ServiceContractTemplate.Code;
          END;
      END;
    END;

    PROCEDURE ToTypeValidate@1100525007();
    BEGIN
      ToCode := '';
      IF ToType <> ToType::Company THEN BEGIN
        FromSTModification := FALSE;
        FromSTReplacement := FALSE;
      END;
      UpdateEditable;
    END;

    PROCEDURE ToCodeValidate@1100525009();
    VAR
      ServiceOrder@1100525000 : Record 11012823;
    BEGIN
      IF ToType = ToType::"Service Order" THEN BEGIN
        ServiceOrder.GET(ToCode);
        UpdateFields(TRUE, ServiceOrder."No.", ServiceOrder."Order Date", ServiceOrder."Source Type");
      END;
    END;

    PROCEDURE ToSourceTypeValidate@1100525011();
    BEGIN
      ToServiceType := '';
      ToDepartmentCode := '';
      UpdateEditable;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

