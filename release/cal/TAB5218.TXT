OBJECT Table 5218 Human Resources Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03,4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Human Resources Setup;
               NOR=Personaloppsett;
               SVE=Personalinst„llning];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              NOR=Prim‘rn›kkel;
                                                              SVE=Prim„rnyckel] }
    { 2   ;   ;Employee Nos.       ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Employee Nos.;
                                                              NOR=Ansattenr.;
                                                              SVE=Personal nr-serie] }
    { 3   ;   ;Base Unit of Measure;Code10        ;TableRelation="Human Resource Unit of Measure";
                                                   OnValidate=VAR
                                                                EmployeeAbsence@1001 : Record 5207;
                                                                HumanResUnitOfMeasure@1000 : Record 5220;
                                                              BEGIN
                                                                IF "Base Unit of Measure" <> xRec."Base Unit of Measure" THEN BEGIN
                                                                  IF NOT EmployeeAbsence.ISEMPTY THEN
                                                                    ERROR(Text001,FIELDCAPTION("Base Unit of Measure"),EmployeeAbsence.TABLECAPTION);
                                                                END;

                                                                HumanResUnitOfMeasure.GET("Base Unit of Measure");
                                                                HumanResUnitOfMeasure.TESTFIELD("Qty. per Unit of Measure",1);
                                                              END;

                                                   CaptionML=[ENU=Base Unit of Measure;
                                                              NOR=Lagerenhet;
                                                              SVE=Basenhet] }
    { 4   ;   ;Automatically Create Resource;Boolean;
                                                   CaptionML=[ENU=Automatically Create Resource;
                                                              NOR=Opprett ressurs automatisk] }
    { 11012000;;Hours Journal Template;Code10     ;TableRelation="Gen. Journal Template".Name;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Hours Journal Template;
                                                   Description=H }
    { 11012001;;Leave Hours Account;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Leave Hours Account;
                                                              NOR=Konto for frav‘rstimer;
                                                              SVE=Konto f”r fr†nvarotimmar] }
    { 11012002;;Bal. Account Leave Hours;Code20   ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Bal. Account Leave Hours;
                                                              NOR=Motkonto for frav‘rstimer;
                                                              SVE=Bal. Kontots fr†nvarotimmar] }
    { 11012010;;Hours Journal Batch;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Hours Journal Template));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Hours Journal Batch;
                                                   Description=H }
    { 11012023;;Show in Hours Portal;Boolean      ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Show in Hours Portal (Employee default) }
    { 11012040;;Exchange Salary Application;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Exchange with Salary Application }
    { 11012050;;Pathname Files to Salary;Text100  ;OnValidate=BEGIN
                                                                FileMgt.AddBackSlashToDirectoryName("Pathname Files to Salary");  //**4PS.n
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Pathname Files to Salary }
    { 11012060;;Posting Days Mandatory;Boolean    ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Posting Days Mandatory }
    { 11012065;;Day Parts allowed (ADP);Boolean   ;OnValidate=BEGIN
                                                                TESTFIELD("Salary Application",  "Salary Application"::Multipay);
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Day Parts allowed (ADP) }
    { 11012080;;Salary Application ;Option        ;OnValidate=BEGIN
                                                                IF ("Salary Application" = "Salary Application"::"LOSA-CTB") AND
                                                                   (xRec."Salary Application" <> "Salary Application"::"LOSA-CTB") THEN BEGIN
                                                                  "Salary Application Version" := 'OFFICE'
                                                                END;

                                                                IF "Salary Application" <> "Salary Application"::Multipay THEN
                                                                  "Day Parts allowed (ADP)" := FALSE;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Salary Application;
                                                   OptionCaptionML=[ENU=Other,Paymaster,Payroll (BAAN),Multipay (ADP),LOSA (CTB),Mercash,Microloon,LOSA (KRAAN),Raet,LOSA (COBRA),SCAB,Perman (ADP),UNIT4,AFAS,DBS,SAP,AGDA/Hogia,Hogia (NO);
                                                                    NOR=Andre,,,,,,,,,,,,,,,,AGDA,Hogia;
                                                                    SVE=Annat,,,,,,,,,,,,,,,,AGDA/Hogia,Hogia (NO)];
                                                   OptionString=Other,Paymaster,Payroll,Multipay,LOSA-CTB,Mercash,Microloon,LOSA-Kraan,Raet,LOSA-Cobra,SCAB,Perman,UNIT4,AFAS,DBS,SAP,AGDA/Hogia,Hogia (NO) }
    { 11012081;;Salary Application Version;Code20 ;OnValidate=BEGIN
                                                                IF "Salary Application" = "Salary Application"::"LOSA-CTB" THEN BEGIN
                                                                  IF ("Salary Application Version" <> 'OFFICE') AND
                                                                     ("Salary Application Version" <> 'INTERACTIEF') THEN
                                                                    ERROR(Text11012006);
                                                                END;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Salary Application Version }
    { 11012090;;Calculate Wage Costs;Option       ;OnValidate=VAR
                                                                EmplRec@11012000 : Record 5200;
                                                                HourLineRec@11012001 : Record 11012039;
                                                              BEGIN
                                                                //**4PS
                                                                IF CONFIRM(Text11012000, FALSE) THEN BEGIN
                                                                  EmplRec.SETRANGE(External, FALSE);
                                                                  EmplRec.MODIFYALL("Calculate Wage Costs", "Calculate Wage Costs");

                                                                  HourLineRec.SETRANGE(External, FALSE);
                                                                  HourLineRec.MODIFYALL("Calculate Wage Costs", "Calculate Wage Costs");
                                                                END;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Calculate Wage Costs;
                                                              SVE=Ber„kna l”nekostnader];
                                                   OptionCaptionML=[ENU=Fixed Rate,Actual Rate;
                                                                    SVE=Fast avgift,Verklig avgift];
                                                   OptionString=Fixed Rate,Actual Rate }
    { 11012093;;Accept Plant Costs Hours;Boolean  ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Accept Plant Costs Hours;
                                                              SVE=Godk„nn timmar f”r Maskinkostnader] }
    { 11012094;;Determine Plant Costs Hours;Option;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Determine Plant Costs Hours;
                                                   OptionCaptionML=ENU=By Cost Object,By Cost Price Read Order;
                                                   OptionString=By Cost Object,By Cost Price Read Order }
    { 11012095;;Accept Sundry Costs Hours;Boolean ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Accept Sundry Costs Hours }
    { 11012100;;Compress Journal Entries;Boolean  ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Compress Journal Entries }
    { 11012105;;Compress Hours Paymaster;Boolean  ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Compress Hours Paymaster }
    { 11012110;;Length Project (Extern);Integer   ;OnValidate=BEGIN
                                                                //**4PS.sn JTH Call 2846
                                                                IF "Length Project (Extern)" + "Length Element (Extern)" > 18 THEN
                                                                  ERROR(Text11012002);
                                                                //**4PS.en
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Length Project (Paymaster/Losa/SCAB);
                                                   MinValue=0;
                                                   MaxValue=18 }
    { 11012115;;Length Element (Extern);Integer   ;OnValidate=BEGIN
                                                                //**4PS.sn JTH Call 2846
                                                                IF "Length Project (Extern)" + "Length Element (Extern)" > 18 THEN
                                                                  ERROR(Text11012002);
                                                                //**4PS.en
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Length Element (Paymaster/SCAB);
                                                   MinValue=0;
                                                   MaxValue=18 }
    { 11012118;;Length Company Paymaster;Integer  ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Length Company Paymaster }
    { 11012119;;Export KM (Paymaster);Boolean     ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Export KM Site Mngmnt(Paymaster) }
    { 11012130;;Lend-In-Orders by Department;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Lend-In-Orders by Department }
    { 11012170;;Receiving Company (Payroll);Code3 ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Receiving Company (Payroll);
                                                   Numeric=Yes }
    { 11012171;;Delivering Company (Navision);Code3;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Delivering Company (Navision);
                                                   Numeric=Yes }
    { 11012172;;Receiving Company (SCAB);Code5    ;TableRelation="SCAB Company";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Receiving Company (SCAB);
                                                   Numeric=Yes }
    { 11012173;;Delivering Company (SCAB);Code5   ;TableRelation="SCAB Company";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Delivering Company (SCAB);
                                                   Numeric=Yes }
    { 11012180;;Structure Part (Payroll);Code8    ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Structure Part (Payroll) }
    { 11012181;;Export Hours per Day (Payroll);Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Export Hours per Day (Payroll) }
    { 11012182;;Compress By Wage Component;Boolean;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Compress By Wage Component (Multipay) }
    { 11012185;;Export Cost Code as Department;Boolean;
                                                   OnValidate=VAR
                                                                CostCodeRec@1100485000 : Record 11012083;
                                                              BEGIN
                                                                //**4PS
                                                                CostCodeRec.SETFILTER("Use Cost Code as Department", '<%1', CostCodeRec."Use Cost Code as Department"::Optional);
                                                                IF "Export Cost Code as Department" THEN
                                                                  CostCodeRec.MODIFYALL("Use Cost Code as Department", CostCodeRec."Use Cost Code as Department"::Yes)
                                                                ELSE
                                                                  CostCodeRec.MODIFYALL("Use Cost Code as Department", CostCodeRec."Use Cost Code as Department"::No);
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Export Cost Code as Department }
    { 11012190;;Customer No. (ADP/Raet);Code10    ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Customer No. (ADP/Raet) }
    { 11012192;;Empty Cost Object (Mercash);Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Empty Cost Object (Mercash) }
    { 11012195;;Skip W.Comp. with empty Cat.;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Skip Wage Component with Empty Category (ADP) }
    { 11012196;;Selection Posting Date;Boolean    ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Selection Posting Date (ADP/Raet Beaufort/DBS) }
    { 11012300;;Hour Document No.  ;Option        ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Hour Document No.;
                                                   OptionCaptionML=ENU=Week,4-Weeks,Month;
                                                   OptionString=Week,4-Weeks,Month }
    { 11012301;;Hours Document Nos.;Code10        ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Hours Document Nos. }
    { 11012370;;Actual Wage Journal Template;Code10;
                                                   TableRelation="Gen. Journal Template".Name;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Actual Wage Journal Template }
    { 11012375;;Actual Wage Journal Batch;Code10  ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Actual Wage Journal Template));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Actuel Wage Journal Batch }
    { 11012380;;GL Entry Journal Template;Code10  ;TableRelation="Gen. Journal Template".Name;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=GL Entry Journal Template }
    { 11012385;;GL Entry Journal Batch;Code10     ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(GL Entry Journal Template));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=GL Entry Journal Batch }
    { 11012540;;Default Account Hours;Option      ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Default Account Hours;
                                                   OptionCaptionML=[ENU=Required according to Norm,Optional,Not allowed;
                                                                    SVE=Kr„vs enligt Norm,Valfri,Inte till†ten];
                                                   OptionString=Required according to Norm,Optional,Not allowed }
    { 11012550;;Build Plant Location Code from;Option;
                                                   CaptionML=[ENU=Build Plant Location Code from;
                                                              NOR=Plasseringkode for Bygningsmaskin fra;
                                                              SVE=Lagerst„llekod f”r byggnadsMaskin fr†n];
                                                   OptionCaptionML=ENU=" ,Employee No.,Company No.+Emplyee No.,No. Series";
                                                   OptionString=[ ,EmplNo,CompNoEmplNo,NoSeries];
                                                   Description=At generating plant location from an employee }
    { 11012660;;Pathname Files from Salary;Text100;OnValidate=BEGIN
                                                                FileMgt.AddBackSlashToDirectoryName("Pathname Files from Salary");  //**4PS.n
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Pathname Files from Salary }
    { 11012670;;Filename Employees (Alwi);Text100 ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Filename Employees (Alwi) }
    { 11012680;;Pathname Salary Backup Files;Text100;
                                                   OnValidate=BEGIN
                                                                FileMgt.AddBackSlashToDirectoryName("Pathname Salary Backup Files");  //**4PS.n
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Pathname Salary Backup Files }
    { 11012681;;Length Department (Losa);Integer  ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Length Department (Losa);
                                                   MinValue=0 }
    { 11012685;;Participant No. (Losa);Text10     ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Participant No. (Losa);
                                                              SVE=Deltagarens nr (Losa)] }
    { 11012710;;Length G/L Account (Losa);Integer ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Length G/L Account (Losa);
                                                   MinValue=0;
                                                   MaxValue=18 }
    { 11012741;;Norm Check All Companies;Boolean  ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Norm Check All Companies }
    { 11012742;;Soft Norm Check    ;Boolean       ;InitValue=Yes;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Soft Norm Check }
    { 11012743;;Norm Check Posting Hours;Option   ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Norm Check Posting Hours;
                                                              SVE=Normkontroll av bokf”ringstimmar];
                                                   OptionCaptionML=[ENU=Not,Per week,Per day,All days per Week;
                                                                    SVE=Nej,Per vecka,Per dag,Alla dagar per vecka];
                                                   OptionString=Not,Per week,Per day,All days per Week }
    { 11012745;;Check Hours on Release;Boolean    ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Check Hours on Release;
                                                              SVE=Kontrollera timmar vid Sl„pp] }
    { 11012770;;Post Hours Per Day ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Post Hours Per Day }
    { 11012775;;Sales Price Check  ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Sales Price Check Posting Hours Cost Plus Projects }
    { 11012776;;Cost Price Check   ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Cost Price Check Posting Hours }
    { 11012785;;Wage Comp. Travel Hours Work;Code10;
                                                   TableRelation="Wage Component".Code WHERE (Component Type=CONST(Hours));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Wage Component Travel Hours During Work Time }
    { 11012790;;Maximum Priority Hours per Day;Decimal;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Maximum Priority Hours per Day }
    { 11012800;;Travel Rate from Supplying Cy.;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Travel Cost Rate from Supplying Company }
    { 11012810;;Sup. Approver Den. Hour Lines;Code50;
                                                   TableRelation=Approver;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Super Approver Denied Hour Lines }
    { 11012830;;Charge Costs Extern. Employees;Option;
                                                   OnValidate=BEGIN
                                                                IF "Charge Costs Extern. Employees" = "Charge Costs Extern. Employees"::"Posting Invoices" THEN
                                                                  TESTFIELD("Internal Charge Rate Ext Hours", "Internal Charge Rate Ext Hours"::"External Rental Hour Rate");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Charge Costs External Employees while;
                                                   OptionCaptionML=ENU=Posting Invoices,Posting Hours;
                                                   OptionString=Posting Invoices,Posting Hours }
    { 11012840;;Internal Charge Rate Ext Hours;Option;
                                                   OnValidate=BEGIN
                                                                IF "Internal Charge Rate Ext Hours" = "Internal Charge Rate Ext Hours"::"Internal Rate" THEN
                                                                  TESTFIELD("Charge Costs Extern. Employees", "Charge Costs Extern. Employees"::"Posting Hours");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Internal Charge Rate External Hours;
                                                   OptionCaptionML=ENU=External Rental Hour Rate,Internal Rate;
                                                   OptionString=External Rental Hour Rate,Internal Rate }
    { 11012850;;Change Project Hours Allowed;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Change Project Hours Allowed }
    { 11012880;;Release Hours Mandatory;Boolean   ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Release Hours Mandatory }
    { 11012896;;Company active in Timesh.Port.;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Company Active in Timesheet Portal }
    { 11012910;;Starting Time      ;Time          ;CaptionML=[ENU=Starting Time;
                                                              NOR=Starttidspunkt;
                                                              SVE=Starttid] }
    { 11012911;;VAT for Hours IC Entry;Boolean    ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=VAT for Hours IC Entry }
    { 11012912;;Gen. Bus. Posting Group;Code20    ;TableRelation="Gen. Business Posting Group";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              SVE=Gen. r”relsebokf”ringsmall] }
    { 11012913;;Gen. Prod. Posting Group;Code20   ;TableRelation="Gen. Product Posting Group";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              SVE=Produktbokf”ringsmall] }
    { 11012914;;VAT Bus. Posting Group;Code20     ;TableRelation="VAT Business Posting Group";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              SVE=Moms r”relsebokf”ringsmall] }
    { 11012915;;VAT Prod. Posting Group;Code20    ;TableRelation="VAT Product Posting Group";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              SVE=Moms produktbokf”ringsmall] }
    { 11012920;;Finishing Time     ;Time          ;CaptionML=[ENU=Finishing Time;
                                                              NOR=Ferdig klokken;
                                                              SVE=F„rdigtid] }
    { 11012927;;Split Department (Paymaster);Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Split Department (Paymaster) }
    { 11012928;;Split Department from Position;Integer;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Split Department from Position }
    { 11012930;;Norm Hours         ;Decimal       ;CaptionML=[ENU=Norm (Hours/Day);
                                                              NOR=Norm (timer/dag);
                                                              SVE=Norm (timmar/dag)] }
    { 11012940;;Format Full Name   ;Option        ;OnValidate=BEGIN
                                                                EmployeeRec.RESET;
                                                                IF EmployeeRec.FINDSET(TRUE, FALSE) THEN BEGIN
                                                                  MODIFY; //Setup is read in Employee table
                                                                  REPEAT
                                                                    EmployeeRec.FillFullName;
                                                                    EmployeeRec.MODIFY;
                                                                  UNTIL EmployeeRec.NEXT = 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Format Full Name;
                                                              NOR=Format for fullt navn;
                                                              SVE=Format f”r fullst„ndigt namn];
                                                   OptionCaptionML=[ENU=First Name-Middle Name-Last Name,Initials-Middle Name-Last Name,Title-Initials-Middle Name-Last Name-Title,Initials-(First Name)-Middle Name-Last Name;
                                                                    NOR=Fornavn-mellomnavn-etternavn,Initialer-mellomnavn-etternavn,Tittel-initialer-mellomnavn-etternavn-tittel,Initialer-(fornavn)-mellomnavn-etternavn;
                                                                    SVE=F”rnamn-mellannamn-efternamn,Initialer-mellannamn-efternamn,Titel-initialer-mellannamn-efternamn-titel,Initialer-(f”rnamn)-mellannamn-efternamn];
                                                   OptionString=First,Initials,Title,InitialsFirst }
    { 11012950;;Consent Hours      ;Boolean       ;CaptionML=[ENU=Consent Hours;
                                                              NOR=Godkjente timer;
                                                              SVE=Godk„nda timmar] }
    { 11012960;;Pre Registration Hours;Boolean    ;CaptionML=[ENU=Pre Registration Hours;
                                                              NOR=Forh†ndsregistrerte timer;
                                                              SVE=F”rregistreringstimmar] }
    { 11012970;;Norm Check         ;Boolean       ;CaptionML=[ENU=Norm Check;
                                                              NOR=Normkontroll;
                                                              SVE=Normkontroll] }
    { 11012971;;Surcharge Overtime excl.;Boolean  ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Surcharge Overtime exclusive }
    { 11012980;;Frost Out Contact  ;Text50        ;CaptionML=[ENU=Frost Out Contact;
                                                              NOR=Frost Out-kontakt;
                                                              SVE=Frost Out-kontakt] }
    { 11012982;;Frost Out File Storage;Option     ;OnValidate=BEGIN
                                                                "Doc. Service Template Subdir." := '';
                                                                "Frost Out Output Directory" := '';
                                                                "Registration Template" := '';
                                                                "Request Template" := '';
                                                              END;

                                                   CaptionML=ENU=Frost Out File Storage;
                                                   OptionCaptionML=ENU=File System on Premise,,,,,SharePoint Online,,,,,Azure File Storage;
                                                   OptionString=File System on Premise,,,,,SharePoint Online,,,,,Azure File Storage }
    { 11012983;;Doc. Service Template Subdir.;Text250;
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                IF "Doc. Service Template Subdir." <> '' THEN
                                                                  IF NOT ("Frost Out File Storage" IN ["Frost Out File Storage"::"SharePoint Online", "Frost Out File Storage"::"Azure File Storage"]) THEN
                                                                    FIELDERROR("Frost Out File Storage");
                                                              END;

                                                   CaptionML=ENU=Doc. Service Template Subdir. }
    { 11012984;;Registration Template;Text250     ;CaptionML=[ENU=Registration Template;
                                                              NOR=Registreringsmal;
                                                              SVE=Registreringsmall] }
    { 11012985;;Request Template   ;Text250       ;CaptionML=[ENU=Request Template;
                                                              NOR=Foresp›rselmal;
                                                              SVE=Mall f”r f”rfr†gan] }
    { 11012988;;Frost Out Output Directory;Text200;OnValidate=VAR
                                                                FileStartPos@1210190000 : Integer;
                                                              BEGIN
                                                                //**4PS.n
                                                                FileStartPos := STRPOS("Frost Out Output Directory", Text11012000);
                                                                IF (FileStartPos > 0) THEN
                                                                  "Frost Out Output Directory" := COPYSTR("Frost Out Output Directory", 1, FileStartPos-1);
                                                                IF "Frost Out File Storage" = "Frost Out File Storage"::"File System on Premise" THEN
                                                                  IF (COPYSTR("Frost Out Output Directory", STRLEN("Frost Out Output Directory")) <> '\') THEN
                                                                    "Frost Out Output Directory" := STRSUBSTNO('%1\', "Frost Out Output Directory");
                                                              END;

                                                   CaptionML=[ENU=Frost Out Output Directory;
                                                              NOR=Frost Out-avgangskatalog;
                                                              SVE=Frost Out-utmatningskatalog] }
    { 11012990;;Contact Phone No.  ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Contact Phone No.;
                                                              NOR=Kontaktpersonens telefonnummer;
                                                              SVE=Kontaktens telefonnr] }
    { 11012991;;Maximum Balance Priority Hours;Decimal;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Maximum Balance Priority Hours }
    { 11012992;;Wage Comp. Paym. Travel Hours;Code10;
                                                   TableRelation="Wage Component".Code WHERE (Component Type=CONST(Hours));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Wage Component Payment Travel Hours }
    { 11012993;;Wage Comp. Travel Hours;Code10    ;TableRelation="Wage Component".Code WHERE (Component Type=CONST(Hours));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Wage Component Travel Hours }
    { 11012994;;Wage Comp. Pr.Hours Plus;Code10   ;TableRelation="Wage Component".Code WHERE (Component Type=CONST(Hours),
                                                                                              Leave Type=FILTER(<>''));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Wage Component Priority Hours Plus }
    { 11012995;;Cost Code Piority Hours Post;Code10;
                                                   TableRelation="Cost Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Cost Post Code Piority Hours }
    { 11012996;;Wage Comp. Pr.Hours Min;Code10    ;TableRelation="Wage Component".Code WHERE (Component Type=CONST(Hours),
                                                                                              Leave Type=FILTER(<>''));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Wage Component Priority Hours Min }
    { 11012997;;Hour Accounting EP Nos.;Code20    ;TableRelation="No. Series";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Hour Accounting EP Nos.;
                                                   Description=4PS-EP }
    { 11012999;;Activation Hour Log Entries;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Activation Hour Log Entries }
    { 11126070;;Check Hours        ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Check Hours;
                                                              SVE=Kontrollera timmar] }
    { 11126160;;Wage Comp. Mandatory for Plant;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Wage Comp. Mandatory for Plant }
    { 11126340;;Book days by day   ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Post Days per Day }
    { 11126350;;Absence Hours Ignore Work Day;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Ignore workingdays when importing absence hours in hour accounting }
    { 11126430;;IC Global Dim 1 Codes Equal;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=IC Global Dimension 1 Codes Equal }
    { 11128001;;Team Code mandatory for Hours;Boolean;
                                                   CaptionML=[ENU=Team Code mandatory for Hours;
                                                              NOR=Obligatorisk teamkode for timer;
                                                              SVE=Arbetslag kod obligatorisk f”r timmar];
                                                   Description=IME082 }
    { 11128002;;Pathname Dimfiles (AGDA);Text250  ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Pathname Dimension files (AGDA);
                                                              NOR=Banenavn Dimensjonsfiler (AGDA)];
                                                   Description=ENH032 }
    { 11128230;;Startup Consent Level;Option      ;CaptionML=[ENU=Startup Consent Level;
                                                              NOR=Startniv† for attestering;
                                                              SVE=Startniv† godk„nnande];
                                                   OptionCaptionML=[ENU=" ,Compact,Half-compact,Normal";
                                                                    NOR=" ,Kompakt,Del-kompakt,Normal";
                                                                    SVE=" ,Kompakt,Del-kompakt,Normal"];
                                                   OptionString=[ ,Compact,Half-compact,Normal];
                                                   Description=SESB.I027 }
    { 11128232;;E-Mail Employees   ;Option        ;CaptionML=[ENU=E-Mail Employees;
                                                              NOR=E-post ansatte;
                                                              SVE=E-posta anst„llda];
                                                   OptionCaptionML=[ENU=E-Mail,Company E-Mail;
                                                                    NOR=E-post,E-post for selskap;
                                                                    SVE=E-post,E-post f”retag];
                                                   OptionString=E-Mail,Company E-Mail;
                                                   Description=SESB.I035.I036 }
    { 11128233;;Path WorkSchedule Files;Text250   ;CaptionML=[ENU=Path WorkSchedule Files;
                                                              NOR=Bane arbeidsskjema, filer;
                                                              SVE=S”kv„g Arbetsschema] }
    { 11128234;;Path WorkSchedule Files Archiv;Text250;
                                                   CaptionML=[ENU=Path WorkSchedule Files Archive;
                                                              NOR=Bane arbeidsskjema, filarkiv;
                                                              SVE=S”kv„g Arbetsschema arkiv] }
    { 11128290;;Cost rate in timesheet Act.Rat;Option;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Cost rate in timesheet for Actual Wage;
                                                              NOR=Kostnad i timerapport for Actual L›nns;
                                                              SVE=Kostnad i tidrapport f”r faktiska l”ner];
                                                   OptionCaptionML=[ENU=Active,Inactive;
                                                                    NOR=Aktiv,Inaktiv;
                                                                    SVE=Active,Inactive];
                                                   OptionString=Active,Inactive;
                                                   Description=AssNo001 }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EmployeeRec@1210190000 : Record 5200;
      Text001@1002 : TextConst 'ENU=You cannot change %1 because there are %2.;NOR=Du kan ikke endre %1 fordi det er %2.;SVE=Du kan inte „ndra %1 eftersom det finns %2.';
      Text11012000@1210190002 : TextConst 'ENU=Select Folder;NOR=Velg mappe;SVE=V„lj mapp';
      FileMgt@1100525000 : Codeunit 419;
      Text11012002@1100525002 : TextConst 'ENU="Sum of Length Project and Element is maximized to 18 positions "';
      Text11012006@1100525001 : TextConst 'ENU=Enter LOSA Version: ALWI or INTERACTIEF';

    PROCEDURE UploadRegistrationTemplate@1100528700();
    BEGIN
      //**4PS
      "Registration Template" := UploadTemplate;
    END;

    PROCEDURE UploadRequestTemplate@1100528704();
    BEGIN
      //**4PS
      "Request Template" := UploadTemplate;
    END;

    LOCAL PROCEDURE UploadTemplate@1100528402() TargetStorageURI : Text;
    VAR
      DocumentProperties@1100528403 : Record 11012746;
      FileManagement@1100528407 : Codeunit 419;
      AzureFileStorageManagement@1100528404 : Codeunit 11012350;
      DocumentManagement@1100528401 : Codeunit 11012406;
      MemoryStream@1100528411 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.MemoryStream";
      MainStorageType@1100528400 : Option;
      ServerFileName@1100528406 : Text;
      ShortFileName@1100528408 : Text;
      StorageFolderURI@1100528412 : Text;
    BEGIN
      //**4PS
      TESTFIELD("Doc. Service Template Subdir.");
      MainStorageType := DocumentManagement.GetMainStorageType;
      CASE MainStorageType OF
        DocumentProperties."Storage Type"::"SharePoint Online":
          BEGIN
            TESTFIELD("Frost Out File Storage", "Frost Out File Storage"::"SharePoint Online");
            StorageFolderURI := "Doc. Service Template Subdir.";
          END;
        DocumentProperties."Storage Type"::"Azure File Storage":
          BEGIN
            TESTFIELD("Frost Out File Storage", "Frost Out File Storage"::"Azure File Storage");
            AzureFileStorageManagement.GetTemplateLocation("Doc. Service Template Subdir.", StorageFolderURI);
          END;
        ELSE
          FIELDERROR("Frost Out File Storage");
      END;
      StorageFolderURI := DocumentManagement.RemoveEndSlashOrBackSlash(StorageFolderURI) + '/';
      DocumentManagement.CreateStorageLocationIfNotExists(MainStorageType, StorageFolderURI);

      ServerFileName := FileManagement.UploadFile('', '');
      IF ServerFileName = '' THEN
        EXIT;

      ShortFileName := FileManagement.GetFileName(ServerFileName);
      MemoryStream:= MemoryStream.MemoryStream;
      FileManagement.ReadFileContentToMemoryStream(ServerFileName, MemoryStream);
      TargetStorageURI := StorageFolderURI + ShortFileName;
      DocumentManagement.PutContentToStorageByStream(MemoryStream, MainStorageType, TargetStorageURI);
      ERASE(ServerFileName);
    END;

    PROCEDURE GetFrostOutOutputDirectory@1100528403() FrostOutOutputDirectory : Text;
    VAR
      StringFunctions@1100528400 : Codeunit 11012273;
      DocumentManagement@1100528403 : Codeunit 11012406;
      AzureFileStorageManagement@1100528401 : Codeunit 11012350;
      AzureMainStorageLocation@1100528402 : Text;
    BEGIN
      //**4PS
      FrostOutOutputDirectory := "Frost Out Output Directory";
      FrostOutOutputDirectory := DocumentManagement.RemoveEndSlashOrBackSlash(FrostOutOutputDirectory);
      CASE "Frost Out File Storage" OF
        "Frost Out File Storage"::"File System on Premise":
          StringFunctions.CheckEndingBackSlash(FrostOutOutputDirectory);
        "Frost Out File Storage"::"SharePoint Online":
          StringFunctions.CheckEndingSlash(FrostOutOutputDirectory);
        "Frost Out File Storage"::"Azure File Storage":
          BEGIN
            AzureFileStorageManagement.GetMainStorageLocation(AzureMainStorageLocation);
            FrostOutOutputDirectory := AzureMainStorageLocation + FrostOutOutputDirectory;
            StringFunctions.CheckEndingSlash(FrostOutOutputDirectory);
          END;
      END;
    END;

    PROCEDURE GetFrostOutDocumentStorageType@1100528401() StorageType : Integer;
    VAR
      DocumentProperties@1100528400 : Record 11012746;
      DocumentManagement@1100528401 : Codeunit 11012406;
    BEGIN
      //**4PS
      StorageType := DocumentManagement.GetMainStorageType;
      CASE StorageType OF
        DocumentProperties."Storage Type"::"File System on Premise":
          TESTFIELD("Frost Out File Storage", "Frost Out File Storage"::"File System on Premise");
        DocumentProperties."Storage Type"::"SharePoint Online":
          TESTFIELD("Frost Out File Storage", "Frost Out File Storage"::"SharePoint Online");
        DocumentProperties."Storage Type"::"Azure File Storage":
          TESTFIELD("Frost Out File Storage", "Frost Out File Storage"::"Azure File Storage");
      END;
    END;

    PROCEDURE DetermineBackupFile@1210190002(OldFile@1210190011 : Text[250]) NewFile : Text[250];
    VAR
      HumanResourcesSetup@1210190005 : Record 5218;
      lvPos@1210190002 : Integer;
      lvPosDot@1210190001 : Integer;
      lvPosSlash@1210190012 : Integer;
    BEGIN
      //**4PS
      NewFile := OldFile;

      lvPos := STRLEN(OldFile);
      REPEAT
        IF lvPosDot = 0 THEN
          IF STRPOS(COPYSTR(OldFile,lvPos,1), '.') <> 0 THEN
            lvPosDot := lvPos;
        IF lvPosSlash = 0 THEN
          IF STRPOS(COPYSTR(OldFile,lvPos,1), '\') <> 0 THEN
            lvPosSlash := lvPos;
        lvPos := lvPos - 1;
      UNTIL (lvPos = 0) OR ((lvPosDot <> 0) AND (lvPosSlash <> 0));

      IF (lvPosDot <> 0) AND (lvPosSlash <> 0) THEN BEGIN
        HumanResourcesSetup.GET;
        HumanResourcesSetup.TESTFIELD("Pathname Salary Backup Files");
        NewFile := HumanResourcesSetup."Pathname Salary Backup Files" +
                   COPYSTR(OldFile, lvPosSlash+1, lvPosDot-lvPosSlash-1) + ' ' +
                   FORMAT(TODAY,0,'<Year4><Month,2><Day,2>') + '(' +
                   FORMAT(TIME,0,'<Hours24,2><Minutes,2>') + ')' +
                   COPYSTR(OldFile, lvPosDot, STRLEN(OldFile)-lvPosDot+1);
      END;

      EXIT(NewFile);
    END;

    PROCEDURE SalaryApplicationIsMercash@1210190010() : Boolean;
    VAR
      HumanResourcesSetup@1100525000 : Record 5218;
    BEGIN
      //**4PS
      HumanResourcesSetup.GET;
      EXIT(HumanResourcesSetup."Salary Application" = HumanResourcesSetup."Salary Application"::Mercash);
    END;

    PROCEDURE SalaryApplicationIsPaymaster@1100525006() : Boolean;
    VAR
      HumanResourcesSetup@1100525000 : Record 5218;
    BEGIN
      //**4PS
      HumanResourcesSetup.GET;
      EXIT(HumanResourcesSetup."Salary Application" = HumanResourcesSetup."Salary Application"::Paymaster);
    END;

    PROCEDURE SalaryApplicationIsLosaCTB@1100525000() : Boolean;
    VAR
      HumanResourcesSetup@1100525000 : Record 5218;
    BEGIN
      //**4PS
      HumanResourcesSetup.GET;
      EXIT(HumanResourcesSetup."Salary Application" = HumanResourcesSetup."Salary Application"::"LOSA-CTB");
    END;

    PROCEDURE SalaryApplicationIsLosaCobra@1100525010() : Boolean;
    VAR
      HumanResourcesSetup@1100525000 : Record 5218;
    BEGIN
      //**4PS
      HumanResourcesSetup.GET;
      EXIT(HumanResourcesSetup."Salary Application" = HumanResourcesSetup."Salary Application"::"LOSA-Cobra");
    END;

    PROCEDURE SalaryApplicationIsLosaKraan@1100525008() : Boolean;
    VAR
      HumanResourcesSetup@1100525000 : Record 5218;
    BEGIN
      //**4PS
      HumanResourcesSetup.GET;
      EXIT(HumanResourcesSetup."Salary Application" = HumanResourcesSetup."Salary Application"::"LOSA-Kraan");
    END;

    PROCEDURE SalaryApplicationIsDBS@1100525009() : Boolean;
    VAR
      HumanResourcesSetup@1100525000 : Record 5218;
    BEGIN
      //**4PS
      HumanResourcesSetup.GET;
      EXIT(HumanResourcesSetup."Salary Application" = HumanResourcesSetup."Salary Application"::DBS);
    END;

    PROCEDURE SalaryApplicationIsSCAB@1100525007() : Boolean;
    VAR
      HumanResourcesSetup@1100525000 : Record 5218;
    BEGIN
      //**4PS
      HumanResourcesSetup.GET;
      EXIT(HumanResourcesSetup."Salary Application" = HumanResourcesSetup."Salary Application"::SCAB);
    END;

    PROCEDURE SalaryApplicationIsPayroll@1100525001() : Boolean;
    VAR
      HumanResourcesSetup@1100525000 : Record 5218;
    BEGIN
      //**4PS
      HumanResourcesSetup.GET;
      EXIT(HumanResourcesSetup."Salary Application" = HumanResourcesSetup."Salary Application"::Payroll);
    END;

    PROCEDURE SalaryApplicationIsMultipay@1100525002() : Boolean;
    VAR
      HumanResourcesSetup@1100525000 : Record 5218;
    BEGIN
      //**4PS
      HumanResourcesSetup.GET;
      EXIT(HumanResourcesSetup."Salary Application" = HumanResourcesSetup."Salary Application"::Multipay);
    END;

    PROCEDURE SalaryApplicationIsAFAS@1100525003() : Boolean;
    VAR
      HumanResourcesSetup@1100525000 : Record 5218;
    BEGIN
      //**4PS
      HumanResourcesSetup.GET;
      EXIT(HumanResourcesSetup."Salary Application" = HumanResourcesSetup."Salary Application"::AFAS);
    END;

    PROCEDURE SalaryApplicationIsRaet@1100525004() : Boolean;
    VAR
      HumanResourcesSetup@1100525000 : Record 5218;
    BEGIN
      //**4PS
      HumanResourcesSetup.GET;
      EXIT(HumanResourcesSetup."Salary Application" = HumanResourcesSetup."Salary Application"::Raet);
    END;

    PROCEDURE SalaryApplicationIsUNIT4@1100525005() : Boolean;
    VAR
      HumanResourcesSetup@1100525000 : Record 5218;
    BEGIN
      //**4PS
      HumanResourcesSetup.GET;
      EXIT(HumanResourcesSetup."Salary Application" = HumanResourcesSetup."Salary Application"::UNIT4);
    END;

    PROCEDURE SalaryApplicationIsPerman@1100525011() : Boolean;
    VAR
      HumanResourcesSetup@1100525000 : Record 5218;
    BEGIN
      //**4PS
      HumanResourcesSetup.GET;
      EXIT((HumanResourcesSetup."Salary Application" = HumanResourcesSetup."Salary Application"::Perman)
        OR (HumanResourcesSetup."Salary Application" = HumanResourcesSetup."Salary Application"::Other)); //4PSSE 170105
    END;

    BEGIN
    {
      SESB.I027 FD Level of detail accounting
         ASH 09.07.2013 Field 11128230 "Startup consent level" added

      SESB.I035.I036 FD Message when dissaproving-correcting hours
         VKO 16.07.2013 Field 11128232 "E-Mail Employees" added

      4PS038  ITERO.GH 140708 New fields : 11128233 & 11128234
      170105 ITERO.WG Added Other to Raet/Perman CodeEDITABLE for Finland
    }
    END.
  }
}

