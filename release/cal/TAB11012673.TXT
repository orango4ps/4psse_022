OBJECT Table 11012673 Project Delivery Note Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TestStatusOpen; //DP00653
               VALIDATE("Item Composition");
               CheckEntityNo;
               CheckToEntityNo;
             END;

    OnModify=BEGIN
               IF CurrFieldNo <> 0 THEN  //DP00653
                 TestStatusOpen;         //DP00653
               VALIDATE("Item Composition");
               ProjectDeliveryNoteReserve.VerifyChange(Rec,xRec); //DP00121
               CheckEntityNo;
               CheckToEntityNo;
             END;

    OnDelete=BEGIN
               TestStatusOpen; //DP00653
               //DP00121
               ProjectDeliveryNoteReserve.DeleteLine(Rec);

               CALCFIELDS("Reserved Qty. (Base)");
               TESTFIELD("Reserved Qty. (Base)",0);
             END;

    CaptionML=[ENU=Project Delivery Note Line;
               NOR=Prosjektleveransebeskjed, Rad;
               SVE=Projektleveransbesked, rad];
  }
  FIELDS
  {
    { 1   ;   ;Project Delivery Note No.;Code20   ;TableRelation="Project Delivery Note Header";
                                                   CaptionML=[ENU=Project Delivery Note No.;
                                                              NOR=Prosjekt, Leveransebeskjednr.;
                                                              SVE=Projekt, leveransbeskednr] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 10  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=VAR
                                                                Item@1100525000 : Record 27;
                                                              BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                IF "Item No." <> '' THEN BEGIN
                                                                  Manufacturer := '';
                                                                  "Basic Item" := '';
                                                                  "Vendor (Trade Item)" := '';
                                                                  "Trade Item" := '';

                                                                  GetItem;
                                                                  Description := ItemRec.Description;
                                                                  "Description 2" := Item."Description 2";
                                                                  VALIDATE("Unit of Measure Code", ItemRec."Base Unit of Measure");
                                                                END;
                                                                VALIDATE("Item Composition");

                                                                ProjectDeliveryNoteReserve.VerifyChange(Rec,xRec); //DP00121
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              NOR=Artikkelnr;
                                                              SVE=Artikelnr] }
    { 11  ;   ;Description         ;Text100       ;OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 12  ;   ;Description 2       ;Text50        ;OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;
                                                              END;

                                                   CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2] }
    { 13  ;   ;Unit of Measure Code;Code10        ;TableRelation="Unit of Measure";
                                                   OnValidate=VAR
                                                                ItemUnitRec@1100525000 : Record 5404;
                                                              BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                //db, 28-02-13: C005312 (changed table relation; due to problem with rename base-unit)
                                                                IF "Item No." <> '' THEN
                                                                  ItemUnitRec.GET("Item No.", "Unit of Measure Code");
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              NOR=M†leenhetskode;
                                                              SVE=Enhetskod] }
    { 14  ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                VALIDATE("Item Composition");

                                                                ProjectDeliveryNoteReserve.VerifyChange(Rec,xRec); //DP00121
                                                              END;

                                                   CaptionML=[ENU=Variant Code;
                                                              NOR=Variantkode;
                                                              SVE=Variantkod] }
    { 15  ;   ;Quantity            ;Decimal       ;OnValidate=VAR
                                                                Item@1100528600 : Record 27;
                                                              BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                CheckProjectInventory;

                                                                //DP00121.sn
                                                                IF "Item No." <> '' THEN BEGIN  //C004606.n
                                                                  Item.GET("Item No.");
                                                                  IF Item."Item Tracking Code" <> '' THEN
                                                                    ProjectDeliveryNoteReserve.VerifyQuantity(Rec,xRec);
                                                                END;  //C004606.n
                                                                //DP00121.en
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 20  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                CheckProjectInventory;

                                                                ProjectDeliveryNoteReserve.VerifyChange(Rec,xRec); //DP00121
                                                              END;

                                                   CaptionML=[ENU=Location Code;
                                                              NOR=Lokasjonskode;
                                                              SVE=Lagerst„llekod] }
    { 21  ;   ;To Location Code    ;Code10        ;TableRelation=Location;
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                //db, 10-05-11
                                                                IF "To Location Code" = '' THEN
                                                                  "To Bin Code" := '';

                                                                ProjectDeliveryNoteReserve.VerifyChange(Rec,xRec); //DP00121
                                                              END;

                                                   CaptionML=[ENU=To Location Code;
                                                              NOR=Til lokasjonskode;
                                                              SVE=Till lagerst„lleskod] }
    { 25  ;   ;Bin Code            ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Location Code));
                                                   OnValidate=VAR
                                                                WMSManagement@1100525001 : Codeunit 7302;
                                                                Location@1100525000 : Record 14;
                                                                PrefBin@1100525002 : Record 11020629;
                                                              BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                //db, 02-11-10
                                                                WMSManagement.FindBin("Location Code","Bin Code",'');
                                                                TESTFIELD("Location Code");
                                                                IF "Bin Code" <> '' THEN BEGIN
                                                                  Location.GET("Location Code");
                                                                  Location.TESTFIELD("Bin Mandatory");
                                                                END;

                                                                CALCFIELDS("Project No.");  //db, 24-02-11
                                                                PrefBin.CheckBinLocationBinding("Project No.",'',"Location Code","Bin Code");

                                                                ProjectDeliveryNoteReserve.VerifyChange(Rec,xRec); //DP00121
                                                              END;

                                                   OnLookup=VAR
                                                              WMSManagement@1100525001 : Codeunit 7302;
                                                              BinCode@1100525000 : Code[20];
                                                            BEGIN
                                                              //db, 02-11-10
                                                              CALCFIELDS("Project No.");  //db, 18-04-11
                                                              BinCode := WMSManagement.BinLookUpSpecific("Location Code","Item No.",'','',"Project No.",'',"Bin Code");
                                                              IF BinCode <> '' THEN
                                                                VALIDATE("Bin Code",BinCode);
                                                            END;

                                                   CaptionML=[ENU=Bin Code;
                                                              NOR=Hyllekode;
                                                              SVE=Lagerplatskod] }
    { 26  ;   ;To Bin Code         ;Code20        ;OnValidate=VAR
                                                                WMSManagement@1001 : Codeunit 7302;
                                                                Location@1100526200 : Record 14;
                                                              BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                //db, 10-05-11
                                                                IF "To Bin Code" <> '' THEN BEGIN
                                                                  WMSManagement.FindBin("To Location Code","To Bin Code",'');
                                                                  TESTFIELD("To Location Code");
                                                                  IF "To Bin Code" <> '' THEN BEGIN
                                                                    Location.GET("To Location Code");
                                                                    Location.TESTFIELD("Bin Mandatory");
                                                                  END;
                                                                END;

                                                                ProjectDeliveryNoteReserve.VerifyChange(Rec,xRec); //DP00121
                                                              END;

                                                   OnLookup=VAR
                                                              WMSManagement@1002 : Codeunit 7302;
                                                              BinCode@1000 : Code[20];
                                                              lvProject@1210190000 : Code[20];
                                                            BEGIN
                                                              //db, 10-05-11
                                                              //db.sn, 01-09-11: M26935
                                                              GetProjectDelNoteHdr;
                                                              IF ProjectDeliveryNoteHdr."Transaction Type" = ProjectDeliveryNoteHdr."Transaction Type"::Transfer THEN
                                                                lvProject := ProjectDeliveryNoteHdr."Receiving Project No."
                                                              ELSE
                                                                lvProject := ProjectDeliveryNoteHdr."Project No.";
                                                              BinCode := WMSManagement.BinLookUpSpecific("To Location Code","Item No.",'','',lvProject,'',"To Bin Code");
                                                              //db.en, 01-09-11: M26935
                                                              IF BinCode <> '' THEN
                                                                VALIDATE("To Bin Code",BinCode);
                                                            END;

                                                   CaptionML=[ENU=To Bin Code;
                                                              NOR=Til Lagerplasskode;
                                                              SVE=Till lagerplatskod] }
    { 30  ;   ;Entity Type         ;Option        ;OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Entity Type;
                                                              NOR=Enhetstype;
                                                              SVE=Enhetstyp];
                                                   OptionCaptionML=[ENU=None,Cable,Device,Extra Need,Cable Transit,,,,,Position;
                                                                    NOR=Ingen,Kabel,Enhet,Ekstra behov,Kabeloverf›ring,,,,,Posisjon;
                                                                    SVE=Ingen,Kabel,Anordning,Extra behov,Kabel”verf”ring,,,,,Position];
                                                   OptionString=None,Cable,Device,ExtraNeed,CableTransit,,,,,Position;
                                                   Editable=No }
    { 31  ;   ;System No.          ;Code20        ;OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=System No.;
                                                              NOR=Systemnr;
                                                              SVE=Systemnr];
                                                   Editable=No }
    { 32  ;   ;Entity No.          ;Code20        ;OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Entity No.;
                                                              NOR=Enhetsnr;
                                                              SVE=Enhetsnr];
                                                   Editable=No }
    { 33  ;   ;Gland Position      ;Option        ;OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;
                                                              END;

                                                   CaptionML=[ENU=Cable Gland Postion;
                                                              NOR=Pakkboksens posisjon;
                                                              SVE=Packboxens position];
                                                   OptionCaptionML=[ENU=" ,From Side,To Side";
                                                                    NOR=" ,Fra side,Til side";
                                                                    SVE=" ,Fr†n sida,Till sida"];
                                                   OptionString=[ ,From,To];
                                                   Editable=No }
    { 34  ;   ;Yard No.            ;Code20        ;OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Yard No.;
                                                              NOR=Plassnr;
                                                              SVE=Platsnr] }
    { 35  ;   ;Assembly Yard Number Object;Boolean;OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;
                                                              END;

                                                   CaptionML=[ENU=Assembly Yard Number Object;
                                                              NOR=Monteringsverksted Nummerobjekt;
                                                              SVE=Montering av varvnummerobjekt];
                                                   Editable=No }
    { 40  ;   ;Item Composition    ;Code120       ;OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                FillItemComposition();
                                                              END;

                                                   CaptionML=[ENU=Item Composition;
                                                              NOR=Artikkelsammensetning;
                                                              SVE=Artikel f”r offentligt ackord];
                                                   Editable=No }
    { 50  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Global dimensjon 1 kode;
                                                              SVE=Global dimension 1 kod];
                                                   CaptionClass='1,1,1' }
    { 51  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Cost Type=CONST(Material));
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Global dimensjon 2 - kode;
                                                              SVE=Global dimension 2 kod];
                                                   CaptionClass='1,1,2' }
    { 60  ;   ;To Entity Type      ;Option        ;OnValidate=VAR
                                                                Job@1100409000 : Record 11072003;
                                                              BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                IF "To Entity Type" <> "To Entity Type"::None THEN BEGIN
                                                                  GetProjectDelNoteHdr;
                                                                  ProjectDeliveryNoteHdr.TESTFIELD("Transaction Type",ProjectDeliveryNoteHdr."Transaction Type"::"Internal Transfer");
                                                                //DP00653 sn
                                                                  Job.GET(ProjectDeliveryNoteHdr."Project No.");
                                                                  Job.TESTFIELD("Assembly Project", TRUE);
                                                                //DP00653 en
                                                                END;

                                                                //DP00653 sn
                                                                IF "To Entity Type" <> xRec."To Entity Type" THEN
                                                                  "To Entity No." := '';
                                                                //DP00653 en

                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=To Entity Type;
                                                              NOR=Til Foretakstype;
                                                              SVE=Till enhetstyp];
                                                   OptionCaptionML=[ENU=None,Cable,Device,Extra Need,Cable Transit,,,,,Position;
                                                                    NOR=Ingen,Kabel,Enhet,Ekstra behov,Kabeloverf›ring,,,,,Posisjon;
                                                                    SVE=Ingen,Kabel,Anordning,Extra behov,Kabel”verf”ring,,,,,Position];
                                                   OptionString=None,Cable,Device,ExtraNeed,CableTransit,,,,,Position }
    { 61  ;   ;To System No.       ;Code20        ;OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                IF "To System No." <> '' THEN BEGIN
                                                                  GetProjectDelNoteHdr;
                                                                  IF ProjectDeliveryNoteHdr."Transaction Type" <> ProjectDeliveryNoteHdr."Transaction Type"::"Internal Transfer" THEN
                                                                    ProjectDeliveryNoteHdr.TESTFIELD("Transaction Type",ProjectDeliveryNoteHdr."Transaction Type"::Transfer);
                                                                END;

                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=To System No.;
                                                              NOR=Til Systemnr.;
                                                              SVE=Till systemnr];
                                                   Editable=No }
    { 62  ;   ;To Entity No.       ;Code20        ;OnValidate=VAR
                                                                AssemblyYardNumberObject@1100409000 : Record 11020596;
                                                                Job@1100409001 : Record 11072003;
                                                              BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                //DP00653
                                                                IF "To Entity No." <> '' THEN BEGIN
                                                                  GetProjectDelNoteHdr;
                                                                  ProjectDeliveryNoteHdr.TESTFIELD("Transaction Type",ProjectDeliveryNoteHdr."Transaction Type"::"Internal Transfer");
                                                                  Job.GET(ProjectDeliveryNoteHdr."Project No.");
                                                                  Job.TESTFIELD("Assembly Project", TRUE);
                                                                END;

                                                                AssemblyYardNumberObject.GET(ProjectDeliveryNoteHdr."Project No.", "To Yard No.","To Entity Type","To System No.", "To Entity No.");

                                                                VALIDATE("Item Composition");
                                                              END;

                                                   OnLookup=VAR
                                                              AssemblyYardNumberObject@1100409000 : Record 11020596;
                                                              Job@1100409001 : Record 11072003;
                                                            BEGIN
                                                              //DP00653
                                                              GetProjectDelNoteHdr;
                                                              IF ProjectDeliveryNoteHdr."Transaction Type" = ProjectDeliveryNoteHdr."Transaction Type"::"Internal Transfer" THEN BEGIN

                                                                Job.GET(ProjectDeliveryNoteHdr."Project No.");
                                                                IF NOT Job."Assembly Project" THEN
                                                                  EXIT;

                                                                AssemblyYardNumberObject.RESET;
                                                                AssemblyYardNumberObject.SETRANGE("Project No.", ProjectDeliveryNoteHdr."Project No.");
                                                                AssemblyYardNumberObject.SETRANGE("Yard No.", "To Yard No.");
                                                                AssemblyYardNumberObject.SETRANGE("Entity Type", "To Entity Type");
                                                                AssemblyYardNumberObject.SETRANGE("System No.", "To System No.") ;

                                                                AssemblyYardNumberObject."Project No." := ProjectDeliveryNoteHdr."Project No.";
                                                                AssemblyYardNumberObject."Yard No." := "To Yard No.";
                                                                AssemblyYardNumberObject."System No." := "To System No.";
                                                                AssemblyYardNumberObject."Entity Type" := "To Entity Type";

                                                                IF PAGE.RUNMODAL(0, AssemblyYardNumberObject) = ACTION::LookupOK THEN
                                                                  VALIDATE("To Entity No.", AssemblyYardNumberObject."Entity No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=To Entity No.;
                                                              NOR=Til Foretaksnr.;
                                                              SVE=Till enhetsnr] }
    { 63  ;   ;To Gland Position   ;Option        ;OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                IF "To Gland Position" <> "To Gland Position"::" " THEN BEGIN
                                                                  GetProjectDelNoteHdr;
                                                                  IF ProjectDeliveryNoteHdr."Transaction Type" <> ProjectDeliveryNoteHdr."Transaction Type"::"Internal Transfer" THEN
                                                                    ProjectDeliveryNoteHdr.TESTFIELD("Transaction Type",ProjectDeliveryNoteHdr."Transaction Type"::Transfer);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=To Gland Position;
                                                              NOR=Til Pakkeboksplassering;
                                                              SVE=Till packboxplacering];
                                                   OptionCaptionML=[ENU=" ,From Side,To Side";
                                                                    NOR=" ,Fra side,Til side";
                                                                    SVE=" ,Fr†n sida,Till sida"];
                                                   OptionString=[ ,From,To];
                                                   Editable=No }
    { 64  ;   ;To Yard No.         ;Code20        ;OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;
                                                              END;

                                                   CaptionML=[ENU=To Yard No.;
                                                              NOR=Til Verkstednr.;
                                                              SVE=Till platsnr] }
    { 70  ;   ;Create Advice Order ;Boolean       ;OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                IF "Create Advice Order" THEN BEGIN
                                                                  GetProjectDelNoteHdr;
                                                                  ProjectDeliveryNoteHdr.TESTFIELD("Transaction Type",ProjectDeliveryNoteHdr."Transaction Type"::Transfer);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Create Advice Order (From Project);
                                                              NOR=Opprette bestillingsunderlag (fra prosjekt);
                                                              SVE=Skapa best„llningsunderlag (fr†n projekt)] }
    { 80  ;   ;Manufacturer        ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                IF Manufacturer <> '' THEN
                                                                  TESTFIELD("Item No.", '');

                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Manufacturer;
                                                              NOR=Produsent;
                                                              SVE=Tillverkare] }
    { 90  ;   ;Basic Item          ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                IF ("Basic Item" = '') THEN BEGIN
                                                                  VALIDATE("Item Composition");
                                                                  EXIT;
                                                                END;

                                                                TESTFIELD("Item No.", '');

                                                                IF ("Basic Item" <> xRec."Basic Item") THEN
                                                                  ValidateItem((ItemTypeOpt::"Basic Item"));
                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Basic Item;
                                                              NOR=Fabrikantartikkel;
                                                              SVE=Basartikel] }
    { 100 ;   ;Vendor (Trade Item) ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   OnValidate=VAR
                                                                TradeItemRec@1100525000 : Record 11012317;
                                                                lvExecValidate@1100485000 : Boolean;
                                                              BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                IF ("Vendor (Trade Item)" = '') THEN BEGIN
                                                                  VALIDATE("Item Composition");
                                                                  EXIT;
                                                                END;

                                                                TESTFIELD("Item No.", '');

                                                                IF ("Vendor (Trade Item)" <> xRec."Vendor (Trade Item)") THEN BEGIN
                                                                  IF "Basic Item" <> '' THEN BEGIN
                                                                    "Trade Item" := '';
                                                                    lvExecValidate := TRUE;
                                                                  END;
                                                                  IF "Trade Item" <> '' THEN BEGIN
                                                                    VALIDATE("Trade Item");
                                                                    lvExecValidate := TRUE;
                                                                  END;
                                                                  //db.sn, 17-12-10: M18021
                                                                  IF lvExecValidate THEN BEGIN
                                                                    IF TradeItemRec.CheckReplaceVendor(
                                                                      xRec."Vendor (Trade Item)", xRec."Trade Item",
                                                                      "Vendor (Trade Item)", "Trade Item") THEN
                                                                      ValidateItem(ItemTypeOpt::"Trade Item")
                                                                    ELSE
                                                                      ValidateItem(ItemTypeOpt::"Trade Vendor");
                                                                  END;
                                                                  //db.en, 17-12-10: M18021
                                                                END;
                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Vendor (Trade Item);
                                                              NOR=Leverand›r (katalogartikkel);
                                                              SVE=Leverant”r (skaffningsartikel)] }
    { 110 ;   ;Trade Item          ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                IF ("Trade Item" = '') THEN BEGIN
                                                                  VALIDATE("Item Composition");
                                                                  EXIT;
                                                                END;

                                                                TESTFIELD("Item No.", '');

                                                                IF ("Trade Item" <> xRec."Trade Item") THEN
                                                                  ValidateItem((ItemTypeOpt::"Trade Item"));
                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Trade Item;
                                                              NOR=Katalogartikkel;
                                                              SVE=Anskaffningsartikel] }
    { 120 ;   ;Shelf No.           ;Code20        ;TableRelation="Shelf per Location".Code WHERE (Location Code=FIELD(Location Code));
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;
                                                              END;

                                                   CaptionML=[ENU=Shelf No.;
                                                              NOR=Hyllenr.;
                                                              SVE=Hyllnr] }
    { 125 ;   ;Element             ;Code20        ;OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                //hbk,06-05-2010
                                                                IF Element = '' THEN
                                                                  EXIT;

                                                                GetProjectDelNoteHdr;
                                                                ProjectDeliveryNoteHdr.TESTFIELD("Project No.");
                                                                FormatMgt.FormatElem(Element,2,'');
                                                                ProjElemRec.GET(ProjectDeliveryNoteHdr."Project No.", Element);
                                                              END;

                                                   OnLookup=BEGIN
                                                              GetProjectDelNoteHdr;
                                                              ProjElemRec.RESET;
                                                              ProjElemRec.SETRANGE("Project No.", ProjectDeliveryNoteHdr."Project No.");
                                                              ProjElemRec."Project No." := ProjectDeliveryNoteHdr."Project No.";
                                                              ProjElemRec.Element := Element; //C015258
                                                              IF PAGE.RUNMODAL(0, ProjElemRec) = ACTION::LookupOK THEN
                                                                VALIDATE(Element, ProjElemRec.Element);
                                                            END;

                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 127 ;   ;To Element          ;Code20        ;OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                //hbk,06-05-2010
                                                                IF "To Element" = '' THEN
                                                                  EXIT;

                                                                GetProjectDelNoteHdr;
                                                                IF ProjectDeliveryNoteHdr."Transaction Type" = ProjectDeliveryNoteHdr."Transaction Type"::"Internal Transfer" THEN BEGIN
                                                                  ProjectDeliveryNoteHdr.TESTFIELD("Project No.");
                                                                  FormatMgt.FormatElem("To Element",2,'');
                                                                  ProjElemRec.GET(ProjectDeliveryNoteHdr."Project No.", "To Element");
                                                                END ELSE BEGIN
                                                                  ProjectDeliveryNoteHdr.TESTFIELD("Transaction Type",ProjectDeliveryNoteHdr."Transaction Type"::Transfer);
                                                                  ProjectDeliveryNoteHdr.TESTFIELD("Receiving Project No.");
                                                                  FormatMgt.FormatElem("To Element",2,'');
                                                                  ProjElemRec.GET(ProjectDeliveryNoteHdr."Receiving Project No.", "To Element");
                                                                END;

                                                                ProjElemRec.TESTFIELD(Blocked, FALSE);
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF CurrFieldNo <> 0 THEN
                                                                TestStatusOpen;

                                                              GetProjectDelNoteHdr;

                                                              IF ProjectDeliveryNoteHdr."Transaction Type" = ProjectDeliveryNoteHdr."Transaction Type"::"Internal Transfer" THEN BEGIN
                                                                ProjElemRec.RESET;
                                                                ProjElemRec.SETRANGE("Project No.", ProjectDeliveryNoteHdr."Project No.");
                                                                ProjElemRec."Project No." := ProjectDeliveryNoteHdr."Project No.";
                                                                ProjElemRec.Element := "To Element";
                                                                IF PAGE.RUNMODAL(0, ProjElemRec) = ACTION::LookupOK THEN
                                                                  VALIDATE("To Element", ProjElemRec.Element);
                                                              END;

                                                              IF ProjectDeliveryNoteHdr."Transaction Type" = ProjectDeliveryNoteHdr."Transaction Type"::Transfer THEN BEGIN
                                                                ProjElemRec.RESET;
                                                                ProjElemRec.SETRANGE("Project No.", ProjectDeliveryNoteHdr."Receiving Project No.");
                                                                ProjElemRec."Project No." := ProjectDeliveryNoteHdr."Receiving Project No.";
                                                                ProjElemRec.Element := "To Element";
                                                                IF PAGE.RUNMODAL(0, ProjElemRec) = ACTION::LookupOK THEN
                                                                  VALIDATE("To Element", ProjElemRec.Element);
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=To Element;
                                                              NOR=Til Element;
                                                              SVE=Till element] }
    { 140 ;   ;Project No.         ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Delivery Note Header"."Project No." WHERE (No.=FIELD(Project Delivery Note No.)));
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr.;
                                                              SVE=Projektnr];
                                                   Editable=No }
    { 160 ;   ;Purch. Detail No.   ;Code10        ;OnValidate=VAR
                                                                ProjectInventoryEntry@1100529000 : Record 11012670;
                                                              BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TestStatusOpen;

                                                                GetProjectDelNoteHdr;
                                                                ProjectInventoryEntry.CheckDetailNoProjDeliveryNote(ProjectDeliveryNoteHdr, Rec);
                                                                VALIDATE("Item Composition");
                                                              END;

                                                   OnLookup=VAR
                                                              Text@1100529000 : Text;
                                                            BEGIN
                                                              Text := "Purch. Detail No.";
                                                              IF LookupDetailNo(Text) THEN BEGIN
                                                                IF Text <> "Purch. Detail No." THEN
                                                                  VALIDATE("Purch. Detail No.", Text);
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Purch. Detail No. }
    { 200 ;   ;Reserved Qty. (Base);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("NS Reservation Entry"."Quantity (Base)" WHERE (Source ID=FIELD(Project Delivery Note No.),
                                                                                                                   Source Ref. No.=FIELD(Line No.),
                                                                                                                   Source Type=CONST(11012673),
                                                                                                                   Reservation Status=CONST(Reservation)));
                                                   CaptionML=[ENU=Reserved Qty. (Base);
                                                              NOR=Reservert antall (lagerenhet);
                                                              SVE=Reserverat antal (bas)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 300 ;   ;Purchase Route Reference;Code20    ;CaptionML=[ENU=Purchase Route Reference;
                                                              NOR=Referanse for Innkj›psrute;
                                                              SVE=Referens f”r ink”psf”ljd];
                                                   Description=DP01137;
                                                   Editable=No }
    { 305 ;   ;Purchase Requisition No.;Code20    ;TableRelation="Purchase Requisition";
                                                   CaptionML=[ENU=Purchase Requisition No.;
                                                              SVE=Ink”psrekvisition nr];
                                                   Description=DP01137;
                                                   Editable=No }
    { 310 ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp];
                                                   Description=DP01137 }
    { 320 ;   ;Plant No.           ;Code10        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   CaptionML=[ENU=Plant No.;
                                                              NOR=Maskinnr.;
                                                              SVE=Maskinnr];
                                                   Description=DP01137 }
    { 325 ;   ;Comment             ;Text50        ;CaptionML=[ENU=Comment;
                                                              NOR=Kommentar;
                                                              SVE=Kommentar];
                                                   Description=DP01137 }
    { 330 ;   ;Extension Contract  ;Code10        ;TableRelation="Extension Contract"."Contract No." WHERE (Project No.=FIELD(Project No.));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Extension Contract;
                                                              SVE=ŽTA] }
    { 340 ;   ;Plot No.            ;Code10        ;TableRelation=Plot."Plot No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=Plot No.;
                                                              SVE=Ritningnr] }
    { 350 ;   ;To Extension Contract;Code10       ;TableRelation="Extension Contract"."Contract No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=To Extension Contract }
    { 360 ;   ;To Plot No.         ;Code10        ;TableRelation=Plot."Plot No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=To Plot No. }
  }
  KEYS
  {
    {    ;Project Delivery Note No.,Line No.      ;Clustered=Yes }
    {    ;Item Composition,Unit of Measure Code,Location Code;
                                                   SumIndexFields=Quantity }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProjInventEntryRec@1100525002 : Record 11012670;
      ProjectDeliveryNoteHdr@1100525003 : Record 11012672;
      ItemRec@1100525004 : Record 27;
      ProjRec@1100525005 : Record 11072003;
      ProjElemRec@1100525012 : Record 11012010;
      ValidateCu@1100525006 : Codeunit 11012033;
      FormatMgt@1100525011 : Codeunit 11012022;
      ProjectDeliveryNoteReserve@1100528600 : Codeunit 11012354;
      ItemTypeOpt@1100525007 : 'Item,Basic Item,Trade Item,Trade Vendor';
      Text000@1100525008 : TextConst 'ENU=Quantity (%1) is greater than the project inventory (%2) of Project ''%3'', Item ''%4'', Manufacturer ''%5'', Basic Item ''%6'', Vendor ''%7'', Trade Item ''%8'', Element ''%9'', %10';
      Text001@1100526203 : TextConst 'ENU=Location ''%1'', Bin ''%2'', Shelf ''%3'', Unit ''%4'' on the Date %5.;NOR=Plassering ''%1'', Lagerplass ''%2'', Hylle ''%3'', Enhet ''%4'' p† Datoen %5.;SVE=Lagerst„lle ''%1'', lagerplats ''%2'', hylla ''%3'', enhet ''%4'' p† datumet %5.';
      Text002@1100526202 : TextConst 'ENU=Location ''%1'',  Bin ''%2, Shelf ''%3'', Unit ''%4''.;NOR=Plassering ''%1'', Lagerplass ''%2'', Hylle ''%3'', Enhet ''%4''.;SVE=Lagerst„lle ''%1'', lagerplats ''%2'', hylla ''%3'', enhet ''%4''.';
      Text003@1100525000 : TextConst 'ENU=Item is not available in the project inventory of Project ''%1'', Item ''%2'', Manufacturer ''%3'', Basic Item ''%4'', Vendor ''%5'', Trade Item ''%6'', Element ''%7'', %8';
      DPA_Management@1100000999 : Codeunit 11012783;

    LOCAL PROCEDURE GetItem@2();
    BEGIN
      IF ItemRec."No." <> "Item No." THEN
        ItemRec.GET("Item No.");
    END;

    PROCEDURE ValidateItem@6509(LTypeArtOpt@11012000 : 'Item,Basic Item,Trade Item,Trade Vendor');
    VAR
      lvDummyDat@11012001 : Date;
      lvDummyDec@1210190001 : Decimal;
      lvDummyCode@11012003 : Code[30];
      lvDummyItem@1210190000 : Code[20];
      lvRefDate@1100485002 : Date;
      lvDiscRef1@1100485001 : Code[20];
      lvDiscRef2@1100485000 : Code[20];
    BEGIN
      IF "Item No." <> '' THEN
        EXIT;

      lvDummyItem := '';

      ProjectDeliveryNoteHdr.GET("Project Delivery Note No.");
      ProjRec.GET(ProjectDeliveryNoteHdr."Project No.");
      lvRefDate := ValidateCu.GetRefDateProject(ProjRec);
      lvDiscRef1 := ProjRec."Purch Discount Term Group 1";
      lvDiscRef2 := ProjRec."Purch Discount Term Group 2";

      ValidateCu.ValidateItem(LTypeArtOpt, "Trade Item", lvDummyItem, Manufacturer, "Vendor (Trade Item)",
                                   "Basic Item", lvDummyCode, Description, "Unit of Measure Code", lvDummyDec,
                                   lvDummyDec, lvDummyDat, lvDummyDec, "Description 2", lvDummyCode,
                                   lvDiscRef1,lvDiscRef2,lvRefDate,'');

      VALIDATE("Item Composition");
    END;

    PROCEDURE CheckProjectInventory@1210190000();
    VAR
      lvQuantity@1210190000 : Decimal;
      lvQuantityOnDate@1210190003 : Decimal;
      lvTextStr@1210190002 : Text[250];
    BEGIN
      GetProjectDelNoteHdr;
      IF ProjectDeliveryNoteHdr."Transaction Type" = ProjectDeliveryNoteHdr."Transaction Type"::Return THEN
        EXIT; //it is possible to return any item, even an item that was not in the inventory before

      lvQuantity := 0;
      lvQuantityOnDate := 0;
      IF "Purch. Detail No." <> '' THEN
        lvTextStr := STRSUBSTNO('%1 %2, ', FIELDCAPTION("Purch. Detail No."), "Purch. Detail No.");

      ProjInventEntryRec.RESET;
      ProjInventEntryRec.SETCURRENTKEY("Project No.", "Item Composition", "Extension Contract", "Plot No.");  //db, 02-11-10
      ProjInventEntryRec.SETRANGE("Project No.", ProjectDeliveryNoteHdr."Project No.");
      ProjInventEntryRec.SETRANGE("Item Composition", "Item Composition");
      ProjInventEntryRec.SETRANGE("Extension Contract", "Extension Contract");
      ProjInventEntryRec.SETRANGE("Plot No.", "Plot No.");
      //ProjInventEntryRec.SETRANGE(Manufacturer, Manufacturer);
      //ProjInventEntryRec.SETRANGE("Vendor (Trade Item)", "Vendor (Trade Item)");
      ProjInventEntryRec.SETRANGE("Location Code", "Location Code");
      IF "Bin Code" <> ''THEN  //db, 19-01-11: M25080
        ProjInventEntryRec.SETRANGE("Bin Code", "Bin Code");  //db, 02-11-10
      IF "Shelf No." <> ''THEN  //db, 19-01-11: M25080
        ProjInventEntryRec.SETRANGE("Shelf No.", "Shelf No.");
      ProjInventEntryRec.SETRANGE("Unit of Measure Code", "Unit of Measure Code");
      ProjInventEntryRec.SETRANGE(Element,Element);
      ProjInventEntryRec.SETRANGE("Assembly Yard Number Object", "Assembly Yard Number Object");

      IF ProjInventEntryRec.FIND('-') THEN BEGIN
        IF ProjectDeliveryNoteHdr."Transaction Type" =
          ProjectDeliveryNoteHdr."Transaction Type"::"Return Temporary Shipment Third Party" THEN
          EXIT; //don't check quantity for returns
        REPEAT
          lvQuantity := lvQuantity + ProjInventEntryRec.Quantity;
          IF ProjInventEntryRec."Posting Date" <= ProjectDeliveryNoteHdr."Posting Date" THEN
            lvQuantityOnDate  := lvQuantityOnDate + ProjInventEntryRec.Quantity;
        UNTIL ProjInventEntryRec.NEXT = 0;
      END ELSE BEGIN
        lvTextStr := lvTextStr + STRSUBSTNO(Text002, "Location Code", "Bin Code", "Shelf No.", "Unit of Measure Code");
        ERROR(Text003, ProjectDeliveryNoteHdr."Project No.", "Item No.", Manufacturer, "Basic Item", "Vendor (Trade Item)",
          "Trade Item", Element, lvTextStr);
      END;

      IF (Quantity > lvQuantityOnDate) THEN BEGIN
        lvTextStr := lvTextStr + STRSUBSTNO(Text001, "Location Code", "Bin Code", "Shelf No.", "Unit of Measure Code",
          ProjectDeliveryNoteHdr."Posting Date");
        ERROR(Text000, Quantity, lvQuantityOnDate, ProjectDeliveryNoteHdr."Project No.", "Item No.", Manufacturer, "Basic Item", "Vendor (Trade Item)",
          "Trade Item", Element, lvTextStr);
      END;
      IF (Quantity > lvQuantity) THEN BEGIN
        lvTextStr := lvTextStr + STRSUBSTNO(Text002, "Location Code", "Bin Code", "Shelf No.", "Unit of Measure Code");
        ERROR(Text000, Quantity, lvQuantity, ProjectDeliveryNoteHdr."Project No.", "Item No.", Manufacturer, "Basic Item", "Vendor (Trade Item)",
          "Trade Item", Element, lvTextStr);
      END;
    END;

    PROCEDURE GetProjectDelNoteHdr@1100525000();
    BEGIN
      //IF "Project Delivery Note No." <> '' THEN     //Can be modified
        ProjectDeliveryNoteHdr.GET("Project Delivery Note No.");
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11012673) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11012673');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Project Delivery Note Line", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    PROCEDURE OpenItemTrackingLines@1100528600();
    VAR
      ProjectDeliveryNoteReserve@1100528600 : Codeunit 11012354;
    BEGIN
      //DP00121
      TESTFIELD("Item No.");
      TESTFIELD(Quantity);
      ProjectDeliveryNoteReserve.CallItemTracking(Rec);
    END;

    PROCEDURE TestStatusOpen@1100409000();
    BEGIN
      GetProjectDelNoteHdr;
      ProjectDeliveryNoteHdr.TESTFIELD(Status,ProjectDeliveryNoteHdr.Status::Open);
    END;

    LOCAL PROCEDURE CheckEntityNo@1100528401();
    VAR
      JobsSetup@1100528400 : Record 315;
    BEGIN
      IF "Entity Type" = "Entity Type"::None THEN
        EXIT;

      IF JobsSetup.GET AND
         JobsSetup."Entity No. Mandatory"
      THEN
        TESTFIELD("Entity No.");
    END;

    LOCAL PROCEDURE CheckToEntityNo@1100528404();
    VAR
      JobsSetup@1100528400 : Record 315;
    BEGIN
      IF "To Entity Type" = "To Entity Type"::None THEN
        EXIT;

      IF JobsSetup.GET AND
         JobsSetup."Entity No. Mandatory"
      THEN
        TESTFIELD("To Entity No.");
    END;

    PROCEDURE FillItemComposition@1100529003();
    BEGIN
      "Item Composition" := ProjInventEntryRec.ProjInvItemComposition(
        "Item No.","Trade Item","Basic Item",Description,"Description 2","Yard No.",
        "Entity Type","System No.","Entity No.",Manufacturer,"Vendor (Trade Item)","Variant Code","Purch. Detail No.");
    END;

    PROCEDURE PurchaseDetailDescription@1100529000() : Text;
    VAR
      PurchaseLineDetail@1100529000 : Record 11020660;
    BEGIN
      EXIT(PurchaseLineDetail.PurchaseDetailDescription("Purch. Detail No."));
    END;

    PROCEDURE ShowDetailCard@1100529001();
    VAR
      PurchaseLineDetail@1100529000 : Record 11020660;
    BEGIN
      TESTFIELD("Purch. Detail No.");
      PurchaseLineDetail.ShowDetailCardOfDetailNo("Purch. Detail No.");
    END;

    PROCEDURE LookupDetailNo@1100529002(VAR Text@1100529002 : Text) : Boolean;
    VAR
      ProjectDeliveryNoteLine@1100529000 : Record 11012673;
      ProjectInventoryEntry@1100529001 : Record 11012670;
    BEGIN
      CALCFIELDS("Project No.");
      ProjectDeliveryNoteLine := Rec;
      ProjectDeliveryNoteLine."Purch. Detail No." := '*';
      ProjectDeliveryNoteLine.FillItemComposition();

      ProjectInventoryEntry.FILTERGROUP(9);
      ProjectInventoryEntry.SETRANGE("Project No.", "Project No.");
      ProjectInventoryEntry.SETRANGE("Extension Contract", "Extension Contract");
      ProjectInventoryEntry.SETRANGE("Plot No.", "Plot No.");
      ProjectInventoryEntry.SETFILTER("Purch. Detail No.", '<>%1', '');
      ProjectInventoryEntry.FILTERGROUP(0);
      ProjectInventoryEntry.SETFILTER("Item Composition", ProjectDeliveryNoteLine."Item Composition");
      ProjectInventoryEntry."Item Composition" := "Item Composition";
      ProjectInventoryEntry."Extension Contract" := "Extension Contract";
      ProjectInventoryEntry."Plot No." := "Plot No.";
      IF PAGE.RUNMODAL(PAGE::"Project Inventory List", ProjectInventoryEntry) = ACTION::LookupOK THEN BEGIN
        Text := ProjectInventoryEntry."Purch. Detail No.";
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    BEGIN
    {
      4PS01 HBK 06-05-2010 Added field Element
    }
    END.
  }
}

