OBJECT Report 11012359 Process BOM Amount
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=StÅcklistenbetrag Ñndern;
               ENU=Process BOM Amount;
               NLD=Stuklijstbedrag wijzigen;
               NOR=Behandle stykklistebelõp;
               SVE=Behandla strukturbelopp];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  OriginalAmountBOM := 0;
                  PrintAmountBOM := 0;
                  NewDiscountPerc := 0;
                END;

  }
  DATASET
  {
    { 2844;    ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnPreDataItem=BEGIN
                               IF TableNo <> DATABASE::"Sales Line" THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  CalculateOriginalAmountSales("Sales Line");
                                  NewAmountBOMReal := 0;
                                  ChangeDiscountSales("Sales Line");
                                  IF NewAmountBOM <> NewAmountBOMReal THEN BEGIN
                                    IF SalesLine3.FIND THEN BEGIN
                                       SalesLine3.VALIDATE("Line Amount", SalesLine3."Line Amount" - NewAmountBOMReal + NewAmountBOM);
                                       SalesLine3.MODIFY;
                                    END;
                                  END;
                                END;
                                 }

    { 5115;    ;DataItem;                    ;
               DataItemTable=Table11012001;
               DataItemTableView=SORTING(Project No.);
               OnPreDataItem=BEGIN
                               IF TableNo <> DATABASE::"Budget Line" THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  CalculateOriginalAmountBudget("Budget Line");
                                  NewAmountBOMReal := 0;
                                  ChangeDiscountBudget("Budget Line");
                                  IF NewAmountBOM <> NewAmountBOMReal THEN BEGIN
                                    IF BudgetLine3.FIND THEN BEGIN
                                       BudgetLine3.VALIDATE("Amount (LCY)", BudgetLine3."Amount (LCY)" - NewAmountBOMReal + NewAmountBOM);
                                       BudgetLine3.MODIFY;
                                    END;
                                  END;
                                END;
                                 }

    { 3574;    ;DataItem;                    ;
               DataItemTable=Table11012875;
               DataItemTableView=SORTING(Service Order No.);
               OnPreDataItem=BEGIN
                               IF TableNo <> DATABASE::"Service Order Budget Line" THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  CalculateOriginalAmountSOBudgt("Service Order Budget Line");
                                  NewAmountBOMReal := 0;
                                  ChangeDiscountSOBudget("Service Order Budget Line");
                                  IF NewAmountBOM <> NewAmountBOMReal THEN BEGIN
                                    IF SOBudgetLine3.FIND THEN BEGIN
                                       SOBudgetLine3.VALIDATE(Amount, SOBudgetLine3.Amount - NewAmountBOMReal + NewAmountBOM);
                                       SOBudgetLine3.MODIFY;
                                    END;
                                  END;
                                END;
                                 }

    { 1100528900;;DataItem;                  ;
               DataItemTable=Table11072072;
               DataItemTableView=SORTING(Estimate No.);
               OnPreDataItem=BEGIN
                               IF TableNo <> DATABASE::"Estimate Line" THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  CalculateOriginalAmountEstimate("Estimate Line");
                                  NewAmountBOMReal := 0;
                                  ChangeDiscountEstimate("Estimate Line");
                                  IF NewAmountBOM <> NewAmountBOMReal THEN BEGIN
                                    IF EstimateLine3.FIND THEN BEGIN
                                       EstimateLine3.VALIDATE("Cost Amount", EstimateLine3."Cost Amount" - NewAmountBOMReal + NewAmountBOM);
                                       EstimateLine3.MODIFY;
                                    END;
                                  END;
                                  CalculateTotals; //db, 11-05-15: C016966 (disable cum.totals original line)
                                END;
                                 }

    { 1100528500;;DataItem;                  ;
               DataItemTable=Table11020582;
               DataItemTableView=SORTING(Recipe Group,Recipe,Line No.);
               OnPreDataItem=BEGIN
                               IF TableNo <> DATABASE::"Base Recipe Line" THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  CalculateOriginalAmountBaseRecipe("Base Recipe Line");
                                  NewAmountBOMReal := 0;
                                  ChangeDiscountBaseRecipe("Base Recipe Line");
                                  IF NewAmountBOM <> NewAmountBOMReal THEN BEGIN
                                    IF BaseRecipeLine3.FIND THEN BEGIN
                                       BaseRecipeLine3.VALIDATE("Cost Amount", BaseRecipeLine3."Cost Amount" - NewAmountBOMReal + NewAmountBOM);
                                       BaseRecipeLine3.MODIFY;
                                    END;
                                  END;
                                  CalculateTotals;
                                END;
                                 }

    { 1100528501;;DataItem;                  ;
               DataItemTable=Table11072075;
               DataItemTableView=SORTING(Estimate No.);
               OnPreDataItem=BEGIN
                               IF TableNo <> DATABASE::"Estimate Recipe Line" THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  CalculateOriginalAmountEstimateRecipe("Estimate Recipe Line");
                                  NewAmountBOMReal := 0;
                                  ChangeDiscountEstimateRecipe("Estimate Recipe Line");
                                  IF NewAmountBOM <> NewAmountBOMReal THEN BEGIN
                                    IF EstimateRecipeLine3.FIND THEN BEGIN
                                       EstimateRecipeLine3.VALIDATE("Cost Amount", EstimateLine3."Cost Amount" - NewAmountBOMReal + NewAmountBOM);
                                       EstimateRecipeLine3.MODIFY;
                                    END;
                                  END;
                                  CalculateTotals;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   OriginalAmountBOM := 0;
                   PrintAmountBOM := 0;
                   NewDiscountPerc := 0;

                   CASE TableNo OF
                     DATABASE::"Sales Line":
                       BEGIN
                         IF (SalesLine.Type = SalesLine.Type::" ") AND (SalesLine."BOM Item No." <> '') THEN
                           CalculateOriginalAmountSales(SalesLine)
                         ELSE
                           ERROR(Text001);
                       END;
                     DATABASE::"Budget Line":
                       BEGIN
                         IF BudgetLine."Item No." = ''THEN
                           CalculateOriginalAmountBudget(BudgetLine)
                         ELSE
                           ERROR(Text001);
                       END;
                     DATABASE::"Service Order Budget Line":
                       BEGIN
                         IF BudgetLine."Item No." = ''THEN
                           CalculateOriginalAmountSOBudgt(SOBudgetLine)
                         ELSE
                           ERROR(Text001);
                       END;
                     DATABASE::"Estimate Line":
                       BEGIN
                         IF EstimateLine."Item No." = ''THEN
                           CalculateOriginalAmountEstimate(EstimateLine)
                         ELSE
                           ERROR(Text001);
                       END;
                     DATABASE::"Base Recipe Line":
                       BEGIN
                         IF BaseRecipeLine."Item No." = ''THEN
                           CalculateOriginalAmountBaseRecipe(BaseRecipeLine)
                         ELSE
                           ERROR(Text001);
                       END;
                     DATABASE::"Estimate Recipe Line":
                       BEGIN
                         IF EstimateRecipeLine."Item No." = ''THEN
                           CalculateOriginalAmountEstimateRecipe(EstimateRecipeLine)
                         ELSE
                           ERROR(Text001);
                       END;
                   END;

                   IF EstimateType = 2 THEN  //C028603
                     PrintAmountBOM := PrintAmountBOM2;

                   NewAmountBOM := PrintAmountBOM;
                 END;

    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=[DEU=Totalbetrag StÅckliste;
                             ENU=Total Amount BOM;
                             NLD=Totaal bedrag stuklijst;
                             NOR=Totalbelõp Õ stykkliste;
                             SVE=Totalbelopp struktur];
                  SourceExpr=PrintAmountBOM;
                  Editable=FALSE }

      { 1100525003;2;Field  ;
                  CaptionML=[DEU=Neuer Betrag StÅckliste;
                             ENU=New Amount BOM;
                             NLD=Nieuw bedrag stuklijst;
                             NOR=Nytt belõp Õ stykkliste;
                             SVE=Ny beloppsstruktur];
                  SourceExpr=NewAmountBOM;
                  OnValidate=BEGIN
                               IF EstimateType = 2 THEN  //C028603
                                 NewAmountBOM2 := NewAmountBOM;
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      SalesLine@1100525009 : Record 37;
      SalesLine3@1100525004 : Record 37;
      BudgetLine@1100525010 : Record 11012001;
      BudgetLine3@1100525002 : Record 11012001;
      SOBudgetLine@1100525011 : Record 11012875;
      SOBudgetLine3@1100525005 : Record 11012875;
      EstimateLine@1100528901 : Record 11072072;
      EstimateLine3@1100528900 : Record 11072072;
      BaseRecipeLine@1100528500 : Record 11020582;
      BaseRecipeLine3@1100528501 : Record 11020582;
      EstimateRecipeLine@1100528503 : Record 11072075;
      EstimateRecipeLine3@1100528502 : Record 11072075;
      TableNo@1100525003 : Integer;
      NewAmountBOM@1100525000 : Decimal;
      NewAmountBOMReal@1100525001 : Decimal;
      OriginalAmountBOM@1100525006 : Decimal;
      PrintAmountBOM@1100525008 : Decimal;
      NewDiscountPerc@1100525007 : Decimal;
      Text001@1100525013 : TextConst 'DEU=Kein StÅcklistenartikel auf dieser Zeile vorhanden;ENU=Not a BOM-Item on this Line;NLD=Geen stuklijstartikel aanwezig op deze regel;NOR=Ingen stykklisteartikkel pÜ denne raden;SVE=Inte en strukturartikel pÜ den hÑr raden';
      EstimateType@1100525018 : Integer;
      NewDiscountPerc2@1100525017 : Decimal;
      NewAmountBOM2@1100525016 : Decimal;
      NewAmountBOMReal2@1100525019 : Decimal;
      PrintAmountBOM2@1100525015 : Decimal;

    PROCEDURE SetSelection@1100525001(TableNumber@1100525000 : Integer);
    BEGIN
      TableNo := TableNumber;
    END;

    PROCEDURE SetSelectionSales@1100525000(SalesLineGet@1100525000 : Record 37);
    BEGIN
      SalesLine := SalesLineGet;
    END;

    PROCEDURE SetSelectionBudget@1100525002(BudgetLineGet@1100525000 : Record 11012001);
    BEGIN
      BudgetLine := BudgetLineGet;
    END;

    PROCEDURE SetSelectionSOBudget@1100525004(SOBudgetLineGet@1100525000 : Record 11012875);
    BEGIN
      SOBudgetLine := SOBudgetLineGet;
    END;

    PROCEDURE SetSelectionEstimate@1100528900(EstimateLineGet@1100525000 : Record 11072072;iType@1100525001 : Integer);
    BEGIN
      EstimateLine := EstimateLineGet;
      EstimateType := iType;  //C028603: 1=cost, 2=sales
    END;

    PROCEDURE SetSelectionBaseRecipe@1100528502(BaseRecipeLineGet@1100525000 : Record 11020582;iType@1100525001 : Integer);
    BEGIN
      BaseRecipeLine := BaseRecipeLineGet;
      EstimateType := iType;  //C028603: 1=cost, 2=sales
    END;

    PROCEDURE SetSelectionEstimateRecipe@1100528504(EstimateRecipeLineGet@1100525000 : Record 11072075;iType@1100525001 : Integer);
    BEGIN
      EstimateRecipeLine := EstimateRecipeLineGet;
      EstimateType := iType;  //C028603: 1=cost, 2=sales
    END;

    PROCEDURE SetSelectionSalesAmount@1100525017(SalesLineGet@1100525000 : Record 37;ChangedAmount@1100525001 : Decimal);
    BEGIN
      SalesLine := SalesLineGet;
      NewAmountBOM := ChangedAmount;
    END;

    PROCEDURE SetSelectionBudgetAmount@1100525013(BudgetLineGet@1100525000 : Record 11012001;ChangedAmount@1100525001 : Decimal);
    BEGIN
      BudgetLine := BudgetLineGet;
      NewAmountBOM := ChangedAmount;
    END;

    PROCEDURE SetSelectionSOBudgetAmount@1100525014(SOBudgetLineGet@1100525000 : Record 11012875;ChangedAmount@1100525001 : Decimal);
    BEGIN
      SOBudgetLine := SOBudgetLineGet;
      NewAmountBOM := ChangedAmount;
    END;

    PROCEDURE SetSelectionEstimateAmount@1100528901(EstimateLineGet@1100525000 : Record 11072072;ChangedCostAmount@1100525001 : Decimal;ChangedSalesAmount@1100525002 : Decimal);
    BEGIN
      EstimateLine := EstimateLineGet;
      NewAmountBOM := ChangedCostAmount;
      NewAmountBOM2 := ChangedSalesAmount;  //C028603
    END;

    PROCEDURE SetSelectionBaseRecipeAmount@1100528503(BaseRecipeLineGet@1100525000 : Record 11020582;ChangedCostAmount@1100525001 : Decimal;ChangedSalesAmount@1100525002 : Decimal);
    BEGIN
      BaseRecipeLine := BaseRecipeLineGet;
      NewAmountBOM := ChangedCostAmount;
      NewAmountBOM2 := ChangedSalesAmount;  //C028603
    END;

    PROCEDURE SetSelectionEstimateRecipeAmount@1100528505(EstimateRecipeLineGet@1100525000 : Record 11072075;ChangedCostAmount@1100525001 : Decimal;ChangedSalesAmount@1100525002 : Decimal);
    BEGIN
      EstimateRecipeLine := EstimateRecipeLineGet;
      NewAmountBOM := ChangedCostAmount;
      NewAmountBOM2 := ChangedSalesAmount;  //C028603
    END;

    PROCEDURE CalculateOriginalAmountSales@1100525007(SalesLine@1100525000 : Record 37);
    VAR
      SalesLine2@1100525001 : Record 37;
    BEGIN
      SalesLine2.RESET;
      SalesLine2.SETRANGE("Document Type", SalesLine."Document Type");
      SalesLine2.SETRANGE("Document No.", SalesLine."Document No.");
      SalesLine2.SETRANGE("Part of Line", SalesLine."Line No.");
      SalesLine2.SETFILTER("Line No.", '<>%1', SalesLine."Line No.");
      IF SalesLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((SalesLine2.Type = SalesLine2.Type::" ") AND (SalesLine2."Original Quantity" = 0)) THEN BEGIN
            IF SalesLine2.Type = SalesLine2.Type::" " THEN
              CalculateOriginalAmountSales(SalesLine2)
            ELSE BEGIN
              PrintAmountBOM := PrintAmountBOM + SalesLine2."Line Amount";
              OriginalAmountBOM := OriginalAmountBOM + SalesLine2."Line Amount" + SalesLine2."Line Discount Amount";
            END;
          END;
        UNTIL SalesLine2.NEXT = 0;

      IF OriginalAmountBOM <> 0  THEN
        NewDiscountPerc := 100 * (OriginalAmountBOM - NewAmountBOM) / OriginalAmountBOM;
    END;

    PROCEDURE CalculateOriginalAmountBudget@1100525003(BudgetLine@1100525000 : Record 11012001);
    VAR
      BudgetLine2@1100525001 : Record 11012001;
    BEGIN
      BudgetLine2.RESET;
      BudgetLine2.SETRANGE("Project No.", BudgetLine."Project No.");
      BudgetLine2.SETRANGE("Part of Line", BudgetLine."Line No.");
      BudgetLine2.SETFILTER("Line No.", '<>%1', BudgetLine."Line No.");
      IF BudgetLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((BudgetLine2."Item No." = '') AND (BudgetLine2."Original Quantity" = 0)) THEN BEGIN
            IF BudgetLine2."Item No." = '' THEN
              CalculateOriginalAmountBudget(BudgetLine2)
            ELSE BEGIN
              PrintAmountBOM := PrintAmountBOM + BudgetLine2."Amount (LCY)";
              OriginalAmountBOM := OriginalAmountBOM + BudgetLine2."Time Quantity" * BudgetLine2.Quantity * BudgetLine2."Gross Price (LCY)";
            END;
          END;
        UNTIL BudgetLine2.NEXT = 0;

      IF OriginalAmountBOM <> 0  THEN
        NewDiscountPerc := 100 * (OriginalAmountBOM - NewAmountBOM) / OriginalAmountBOM;
    END;

    PROCEDURE CalculateOriginalAmountSOBudgt@1100525011(SOBudgetLine@1100525000 : Record 11012875);
    VAR
      SOBudgetLine2@1100525001 : Record 11012875;
    BEGIN
      SOBudgetLine2.RESET;
      SOBudgetLine2.SETRANGE("Service Order No.", SOBudgetLine."Service Order No.");
      SOBudgetLine2.SETRANGE("Object No.", SOBudgetLine."Object No.");
      SOBudgetLine2.SETRANGE("Maintenance Scheme", SOBudgetLine."Maintenance Scheme");
      SOBudgetLine2.SETRANGE("Part of Line", SOBudgetLine."Line No.");
      SOBudgetLine2.SETFILTER("Line No.", '<>%1', SOBudgetLine."Line No.");
      IF SOBudgetLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((SOBudgetLine2."Item No." = '') AND (SOBudgetLine2."Original Quantity" = 0)) THEN BEGIN
            IF SOBudgetLine2."Item No." = '' THEN
              CalculateOriginalAmountSOBudgt(SOBudgetLine2)
            ELSE BEGIN
              PrintAmountBOM := PrintAmountBOM + SOBudgetLine2.Amount;
              OriginalAmountBOM := OriginalAmountBOM + SOBudgetLine2."Time Quantity" * SOBudgetLine2.Quantity * SOBudgetLine2."Gross Price";
            END;
          END;
        UNTIL SOBudgetLine2.NEXT = 0;

      IF OriginalAmountBOM <> 0  THEN
        NewDiscountPerc := 100 * (OriginalAmountBOM - NewAmountBOM) / OriginalAmountBOM;
    END;

    PROCEDURE CalculateOriginalAmountEstimate@1100528902(EstimateLine@1100525000 : Record 11072072);
    VAR
      EstimateLine2@1100525001 : Record 11072072;
    BEGIN
      EstimateLine2.RESET;
      EstimateLine2.SETRANGE("Estimate No.", EstimateLine."Estimate No.");
      EstimateLine2.SETRANGE("Sub-Estimate No.", EstimateLine."Sub-Estimate No.");
      EstimateLine2.SETRANGE("Part Group", EstimateLine."Part Group");
      EstimateLine2.SETRANGE(Part, EstimateLine.Part);
      EstimateLine2.SETRANGE("Part of Line", EstimateLine."Line No.");
      EstimateLine2.SETFILTER("Line No.", '<>%1', EstimateLine."Line No.");
      IF EstimateLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((EstimateLine2."Item No." = '') AND (EstimateLine2."Original Quantity" = 0)) THEN BEGIN
            IF EstimateLine2."Item No." = '' THEN
              CalculateOriginalAmountEstimate(EstimateLine2)
            ELSE BEGIN
              PrintAmountBOM := PrintAmountBOM + EstimateLine2."Cost Amount";
              PrintAmountBOM2 := PrintAmountBOM2 + EstimateLine2."Sales Amount";  //C028603
              OriginalAmountBOM := OriginalAmountBOM + EstimateLine2."Time Quantity" * EstimateLine2.Quantity * EstimateLine2."Gross Price";
            END;
          END;
        UNTIL EstimateLine2.NEXT = 0;

      IF OriginalAmountBOM <> 0  THEN BEGIN
        NewDiscountPerc := 100 * (OriginalAmountBOM - NewAmountBOM) / OriginalAmountBOM;
        NewDiscountPerc2 := 100 * (OriginalAmountBOM - NewAmountBOM2) / OriginalAmountBOM;  //C028603
      END;
    END;

    PROCEDURE CalculateOriginalAmountBaseRecipe@1100528500(BaseRecipeLine@1100525000 : Record 11020582);
    VAR
      BaseRecipeLine2@1100525001 : Record 11020582;
    BEGIN
      BaseRecipeLine2.RESET;
      BaseRecipeLine2.SETRANGE("Recipe Group", BaseRecipeLine."Recipe Group");
      BaseRecipeLine2.SETRANGE(Recipe, BaseRecipeLine.Recipe);
      BaseRecipeLine2.SETRANGE("Part of Line", BaseRecipeLine."Line No.");
      BaseRecipeLine2.SETFILTER("Line No.", '<>%1', BaseRecipeLine."Line No.");
      IF BaseRecipeLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((BaseRecipeLine2."Item No." = '') AND (BaseRecipeLine2."Original Quantity" = 0)) THEN BEGIN
            IF BaseRecipeLine2."Item No." = '' THEN
              CalculateOriginalAmountBaseRecipe(BaseRecipeLine2)
            ELSE BEGIN
              PrintAmountBOM := PrintAmountBOM + BaseRecipeLine2."Cost Amount";
              PrintAmountBOM2 := PrintAmountBOM2 + BaseRecipeLine2."Sales Amount";
              OriginalAmountBOM := OriginalAmountBOM + BaseRecipeLine2."Time Quantity" * BaseRecipeLine2.Quantity * BaseRecipeLine2."Gross Price";
            END;
          END;
        UNTIL BaseRecipeLine2.NEXT = 0;

      IF OriginalAmountBOM <> 0  THEN BEGIN
        NewDiscountPerc := 100 * (OriginalAmountBOM - NewAmountBOM) / OriginalAmountBOM;
        NewDiscountPerc2 := 100 * (OriginalAmountBOM - NewAmountBOM2) / OriginalAmountBOM;
      END;
    END;

    PROCEDURE CalculateOriginalAmountEstimateRecipe@1100528506(EstimateRecipeLine@1100525000 : Record 11072075);
    VAR
      EstimateRecipeLine2@1100525001 : Record 11072075;
    BEGIN
      EstimateRecipeLine2.RESET;
      EstimateRecipeLine2.SETRANGE("Estimate No.", EstimateRecipeLine."Estimate No.");
      EstimateRecipeLine2.SETRANGE("Sub-Estimate No.", EstimateRecipeLine."Sub-Estimate No.");
      EstimateRecipeLine2.SETRANGE("Part Group", EstimateRecipeLine."Part Group");
      EstimateRecipeLine2.SETRANGE(Part, EstimateRecipeLine.Part);
      EstimateRecipeLine2.SETRANGE("Estimate Line", EstimateRecipeLine."Estimate Line");
      EstimateRecipeLine2.SETRANGE("Part of Line", EstimateRecipeLine."Line No.");
      EstimateRecipeLine2.SETFILTER("Line No.", '<>%1', EstimateRecipeLine."Line No.");
      IF EstimateRecipeLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((EstimateRecipeLine2."Item No." = '') AND (EstimateRecipeLine2."Original Quantity" = 0)) THEN BEGIN
            IF EstimateRecipeLine2."Item No." = '' THEN
              CalculateOriginalAmountEstimateRecipe(EstimateRecipeLine2)
            ELSE BEGIN
              PrintAmountBOM := PrintAmountBOM + EstimateRecipeLine2."Cost Amount";
              PrintAmountBOM2 := PrintAmountBOM2 + EstimateRecipeLine2."Sales Amount";
              OriginalAmountBOM := OriginalAmountBOM + EstimateRecipeLine2."Time Quantity" * EstimateRecipeLine2.Quantity * EstimateRecipeLine2."Gross Price";
            END;
          END;
        UNTIL EstimateRecipeLine2.NEXT = 0;

      IF OriginalAmountBOM <> 0  THEN BEGIN
        NewDiscountPerc := 100 * (OriginalAmountBOM - NewAmountBOM) / OriginalAmountBOM;
        NewDiscountPerc2 := 100 * (OriginalAmountBOM - NewAmountBOM2) / OriginalAmountBOM;
      END;
    END;

    PROCEDURE ChangeDiscountSales@1100525006(SalesLine@1100525000 : Record 37);
    VAR
      SalesLine2@1100525001 : Record 37;
    BEGIN
      SalesLine2.RESET;
      SalesLine2.SETRANGE("Document Type", SalesLine."Document Type");
      SalesLine2.SETRANGE("Document No.", SalesLine."Document No.");
      SalesLine2.SETRANGE("Part of Line", SalesLine."Line No.");
      SalesLine2.SETFILTER("Line No.", '<>%1', SalesLine."Line No.");
      IF SalesLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((SalesLine2.Type = SalesLine2.Type::" ") AND (SalesLine2."Original Quantity" = 0)) THEN BEGIN
            IF SalesLine2.Type = SalesLine2.Type::" " THEN
              ChangeDiscountSales(SalesLine2)
            ELSE BEGIN
              IF SalesLine2.Quantity <> 0 THEN
                SalesLine2.VALIDATE("Line Discount %", NewDiscountPerc)
              ELSE
                SalesLine2.VALIDATE("Line Discount %", 0);
              SalesLine2.MODIFY;
              IF SalesLine2.Quantity <> 0 THEN
                SalesLine3 := SalesLine2;
              NewAmountBOMReal := NewAmountBOMReal + SalesLine2."Line Amount";
            END;
          END;
        UNTIL SalesLine2.NEXT = 0;
    END;

    PROCEDURE ChangeDiscountBudget@1100525008(BudgetLine@1100525000 : Record 11012001);
    VAR
      BudgetLine2@1100525001 : Record 11012001;
    BEGIN
      BudgetLine2.RESET;
      BudgetLine2.SETRANGE("Project No.", BudgetLine."Project No.");
      BudgetLine2.SETRANGE("Part of Line", BudgetLine."Line No.");
      BudgetLine2.SETFILTER("Line No.", '<>%1', BudgetLine."Line No.");
      IF BudgetLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((BudgetLine2."Item No." = '') AND (BudgetLine2."Original Quantity" = 0)) THEN BEGIN
            IF BudgetLine2."Item No." = '' THEN
              ChangeDiscountBudget(BudgetLine2)
            ELSE BEGIN
              IF BudgetLine2.Quantity <> 0 THEN
                BudgetLine2.VALIDATE("Discount %", NewDiscountPerc)
              ELSE
                BudgetLine2.VALIDATE("Discount %", 0);
              BudgetLine2.MODIFY;
              IF BudgetLine2.Quantity <> 0 THEN
                BudgetLine3 := BudgetLine2;
              NewAmountBOMReal := NewAmountBOMReal + BudgetLine2."Amount (LCY)";
            END;
          END;
        UNTIL BudgetLine2.NEXT = 0;
    END;

    PROCEDURE ChangeDiscountSOBudget@1100525009(SOBudgetLine@1100525000 : Record 11012875);
    VAR
      SOBudgetLine2@1100525001 : Record 11012875;
    BEGIN
      SOBudgetLine2.RESET;
      SOBudgetLine2.SETRANGE("Service Order No.", SOBudgetLine."Service Order No.");
      SOBudgetLine2.SETRANGE("Object No.", SOBudgetLine."Object No.");
      SOBudgetLine2.SETRANGE("Maintenance Scheme", SOBudgetLine."Maintenance Scheme");
      SOBudgetLine2.SETRANGE("Part of Line", SOBudgetLine."Line No.");
      SOBudgetLine2.SETFILTER("Line No.", '<>%1', SOBudgetLine."Line No.");
      IF SOBudgetLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((SOBudgetLine2."Item No." = '') AND (SOBudgetLine2."Original Quantity" = 0)) THEN BEGIN
            IF SOBudgetLine2."Item No." = '' THEN
              ChangeDiscountSOBudget(SOBudgetLine2)
            ELSE BEGIN
              IF SOBudgetLine2.Quantity <> 0 THEN
                SOBudgetLine2.VALIDATE("Discount %", NewDiscountPerc)
              ELSE
                SOBudgetLine2.VALIDATE("Discount %", 0);
              SOBudgetLine2.MODIFY;
              IF SOBudgetLine2.Quantity <> 0 THEN
                SOBudgetLine3 := SOBudgetLine2;
              NewAmountBOMReal := NewAmountBOMReal + SOBudgetLine2.Amount;
            END;
          END;
        UNTIL SOBudgetLine2.NEXT = 0;
    END;

    PROCEDURE ChangeDiscountEstimate@1100528903(EstimateLine@1100525000 : Record 11072072);
    VAR
      EstimateLine2@1100525001 : Record 11072072;
    BEGIN
      EstimateLine2.RESET;
      EstimateLine2.SETRANGE("Estimate No.", EstimateLine."Estimate No.");
      EstimateLine2.SETRANGE("Sub-Estimate No.", EstimateLine."Sub-Estimate No.");
      EstimateLine2.SETRANGE("Part Group", EstimateLine."Part Group");
      EstimateLine2.SETRANGE(Part, EstimateLine.Part);
      EstimateLine2.SETRANGE("Part of Line", EstimateLine."Line No.");
      EstimateLine2.SETFILTER("Line No.", '<>%1', EstimateLine."Line No.");
      IF EstimateLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((EstimateLine2."Item No." = '') AND (EstimateLine2."Original Quantity" = 0)) THEN BEGIN
            IF EstimateLine2."Item No." = '' THEN
              ChangeDiscountEstimate(EstimateLine2)
            ELSE BEGIN
              //C028603.sn
              IF (EstimateType = 0) OR (EstimateType = 1) THEN
                IF EstimateLine2."Purchase Discount %" <> NewDiscountPerc THEN
                  EstimateLine2.VALIDATE("Purchase Discount %", NewDiscountPerc);
              IF (EstimateType = 0) OR (EstimateType = 2) THEN
                IF EstimateLine2."Sales Discount %" <> NewDiscountPerc2 THEN
                  EstimateLine2.VALIDATE("Sales Discount %", NewDiscountPerc2);
              //C028603.en
              EstimateLine2.MODIFY;
              IF EstimateLine2.Quantity <> 0 THEN
                EstimateLine3 := EstimateLine2;
              NewAmountBOMReal := NewAmountBOMReal + EstimateLine2."Cost Amount";
              NewAmountBOMReal2 := NewAmountBOMReal2 + EstimateLine2."Sales Amount";  //C028603
            END;
          END;
        UNTIL EstimateLine2.NEXT = 0;
    END;

    PROCEDURE ChangeDiscountBaseRecipe@1100528501(BaseRecipeLine@1100525000 : Record 11020582);
    VAR
      BaseRecipeLine2@1100525001 : Record 11020582;
    BEGIN
      BaseRecipeLine2.RESET;
      BaseRecipeLine2.SETRANGE("Recipe Group", BaseRecipeLine."Recipe Group");
      BaseRecipeLine2.SETRANGE(Recipe, BaseRecipeLine.Recipe);
      BaseRecipeLine2.SETRANGE("Part of Line", BaseRecipeLine."Line No.");
      BaseRecipeLine2.SETFILTER("Line No.", '<>%1', BaseRecipeLine."Line No.");
      IF BaseRecipeLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((BaseRecipeLine2."Item No." = '') AND (BaseRecipeLine2."Original Quantity" = 0)) THEN BEGIN
            IF BaseRecipeLine2."Item No." = '' THEN
              ChangeDiscountBaseRecipe(BaseRecipeLine2)
            ELSE BEGIN
              IF (EstimateType = 0) OR (EstimateType = 1) THEN
                IF BaseRecipeLine2."Purchase Discount %" <> NewDiscountPerc THEN
                  BaseRecipeLine2.VALIDATE("Purchase Discount %", NewDiscountPerc);
              IF (EstimateType = 0) OR (EstimateType = 2) THEN
                IF BaseRecipeLine2."Sales Discount %" <> NewDiscountPerc2 THEN
                  BaseRecipeLine2.VALIDATE("Sales Discount %", NewDiscountPerc2);
              BaseRecipeLine2.MODIFY;
              IF BaseRecipeLine2.Quantity <> 0 THEN
                BaseRecipeLine3 := BaseRecipeLine2;
              NewAmountBOMReal := NewAmountBOMReal + BaseRecipeLine2."Cost Amount";
              NewAmountBOMReal2 := NewAmountBOMReal2 + BaseRecipeLine2."Sales Amount";
            END;
          END;
        UNTIL BaseRecipeLine2.NEXT = 0;
    END;

    PROCEDURE ChangeDiscountEstimateRecipe@1100528507(EstimateRecipeLine@1100525000 : Record 11072075);
    VAR
      EstimateRecipeLine2@1100525001 : Record 11072075;
    BEGIN
      EstimateRecipeLine2.RESET;
      EstimateRecipeLine2.SETRANGE("Estimate No.", EstimateRecipeLine."Estimate No.");
      EstimateRecipeLine2.SETRANGE("Sub-Estimate No.", EstimateRecipeLine."Sub-Estimate No.");
      EstimateRecipeLine2.SETRANGE("Part Group", EstimateRecipeLine."Part Group");
      EstimateRecipeLine2.SETRANGE(Part, EstimateRecipeLine.Part);
      EstimateRecipeLine2.SETRANGE("Estimate Line", EstimateRecipeLine."Estimate Line");
      EstimateRecipeLine2.SETRANGE("Part of Line", EstimateRecipeLine."Line No.");
      EstimateRecipeLine2.SETFILTER("Line No.", '<>%1', EstimateRecipeLine."Line No.");
      IF EstimateRecipeLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((EstimateRecipeLine2."Item No." = '') AND (EstimateRecipeLine2."Original Quantity" = 0)) THEN BEGIN
            IF EstimateRecipeLine2."Item No." = '' THEN
              ChangeDiscountEstimateRecipe(EstimateRecipeLine2)
            ELSE BEGIN
              IF (EstimateType = 0) OR (EstimateType = 1) THEN
                IF EstimateRecipeLine2."Purchase Discount %" <> NewDiscountPerc THEN
                  EstimateRecipeLine2.VALIDATE("Purchase Discount %", NewDiscountPerc);
              IF (EstimateType = 0) OR (EstimateType = 2) THEN
                IF EstimateRecipeLine2."Sales Discount %" <> NewDiscountPerc2 THEN
                  EstimateRecipeLine2.VALIDATE("Sales Discount %", NewDiscountPerc2);
              EstimateRecipeLine2.MODIFY;
              IF EstimateRecipeLine2.Quantity <> 0 THEN
                EstimateRecipeLine3 := EstimateRecipeLine2;
              NewAmountBOMReal := NewAmountBOMReal + EstimateRecipeLine2."Cost Amount";
              NewAmountBOMReal2 := NewAmountBOMReal2 + EstimateRecipeLine2."Sales Amount";
            END;
          END;
        UNTIL EstimateRecipeLine2.NEXT = 0;
    END;

    BEGIN
    {
      OriginalAmountBOM : Amount exclusive discount to determine right discount %
      PrintAmountBOM    : Amount including discount
    }
    END.
  }
  RDLDATA
  {
  }
}

