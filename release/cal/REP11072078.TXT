OBJECT Report 11072078 Date Compress Maint. Ledger
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00 (5698);
  }
  PROPERTIES
  {
    Permissions=TableData 87=rimd,
                TableData 355=imd,
                TableData 5617=rimd,
                TableData 11072085=rimd;
    CaptionML=[DEU=Datumskompr. Wartungsposten;
               ENU=Date Compress Maint. Ledger;
               NLD=Onderhoudsposten comprimeren;
               NOR=Datokomprimer Vedlikeholdsreskontro;
               SVE=Datumkompr. underhÜllstrans.];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  DimSelectionBuf.CompareDimText(
                    3,REPORT::"Date Compress Maint. Ledger",'',RetainDimText,Text010);

                  MaintenanceLedgEntryFilter := COPYSTR("Maintenance Ledger Entry".GETFILTERS,1,MAXSTRLEN(DateComprReg.Filter));
                END;

    UsageCategory=Tasks;
  }
  DATASET
  {
    { 9437;    ;DataItem;                    ;
               DataItemTable=Table11072085;
               DataItemTableView=SORTING(FA No.,Depreciation Book Code,FA Posting Date);
               OnPreDataItem=VAR
                               GLSetup@1000 : Record 98;
                             BEGIN
                               IF NOT CONFIRM(Text000,FALSE) THEN
                                 CurrReport.BREAK;

                               IF EntrdDateComprReg."Ending Date" = 0D THEN
                                 ERROR(Text003,EntrdDateComprReg.FIELDCAPTION("Ending Date"));

                               Window.OPEN(
                                 Text004 +
                                 Text005 +
                                 Text006 +
                                 Text007 +
                                 Text008);

                               SourceCodeSetup.GET;
                               SourceCodeSetup.TESTFIELD("Compress Maintenance Ledger");

                               SelectedDim.GetSelectedDim(
                                 USERID,3,REPORT::"Date Compress Maint. Ledger",'',TempSelectedDim);
                               GLSetup.GET;
                               Retain[4] :=
                                 TempSelectedDim.GET(
                                   USERID,3,REPORT::"Date Compress Maint. Ledger",'',GLSetup."Global Dimension 1 Code");
                               Retain[5] :=
                                 TempSelectedDim.GET(
                                   USERID,3,REPORT::"Date Compress Maint. Ledger",'',GLSetup."Global Dimension 2 Code");

                               NewMaintenanceLedgEntry.LOCKTABLE;
                               FAReg.LOCKTABLE;
                               DateComprReg.LOCKTABLE;

                               IF MaintenanceLedgEntry2.FIND('+') THEN;
                               LastEntryNo := MaintenanceLedgEntry2."Entry No.";
                               SETRANGE("Entry No.",0,LastEntryNo);
                               SETRANGE("FA Posting Date",EntrdDateComprReg."Starting Date",EntrdDateComprReg."Ending Date");

                               InitRegisters;
                             END;

               OnAfterGetRecord=BEGIN
                                  MaintenanceLedgEntry2 := "Maintenance Ledger Entry";
                                  WITH MaintenanceLedgEntry2 DO BEGIN
                                    SETCURRENTKEY("FA No.","Depreciation Book Code","FA Posting Date");
                                    COPYFILTERS("Maintenance Ledger Entry");

                                    SETRANGE("FA No.","FA No.");
                                    SETRANGE("Depreciation Book Code","Depreciation Book Code");
                                    SETRANGE("FA Posting Group","FA Posting Group");
                                    SETRANGE("Document Type","Document Type");

                                    SETFILTER("FA Posting Date",DateComprMgt.GetDateFilter("FA Posting Date",EntrdDateComprReg,TRUE));

                                    IF RetainNo(FIELDNO("Document No.")) THEN
                                      SETRANGE("Document No.","Document No.");
                                    IF RetainNo(FIELDNO("Maintenance Code")) THEN
                                      SETRANGE("Maintenance Code","Maintenance Code");
                                    IF RetainNo(FIELDNO("Index Entry")) THEN
                                      SETRANGE("Index Entry","Index Entry");
                                    IF RetainNo(FIELDNO("Global Dimension 1 Code")) THEN
                                      SETRANGE("Global Dimension 1 Code","Global Dimension 1 Code");
                                    IF RetainNo(FIELDNO("Global Dimension 2 Code")) THEN
                                      SETRANGE("Global Dimension 2 Code","Global Dimension 2 Code");
                                    IF Quantity >= 0 THEN
                                      SETFILTER(Quantity,'>=0')
                                    ELSE
                                      SETFILTER(Quantity,'<0');

                                    InitNewEntry(NewMaintenanceLedgEntry);

                                    DimBufMgt.CollectDimEntryNo(
                                      TempSelectedDim,"Dimension Set ID","Entry No.",
                                      0,FALSE,DimEntryNo);
                                    ComprDimEntryNo := DimEntryNo;
                                    SummarizeEntry(NewMaintenanceLedgEntry,MaintenanceLedgEntry2);
                                    WHILE NEXT <> 0 DO BEGIN
                                      DimBufMgt.CollectDimEntryNo(
                                        TempSelectedDim,"Dimension Set ID","Entry No.",
                                        ComprDimEntryNo,TRUE,DimEntryNo);
                                      IF DimEntryNo = ComprDimEntryNo THEN
                                        SummarizeEntry(NewMaintenanceLedgEntry,MaintenanceLedgEntry2);
                                    END;

                                    InsertNewEntry(NewMaintenanceLedgEntry,ComprDimEntryNo);

                                    ComprCollectedEntries;
                                  END;

                                  IF DateComprReg."No. Records Deleted" >= NoOfDeleted + 10 THEN BEGIN
                                    NoOfDeleted := DateComprReg."No. Records Deleted";
                                    InsertRegisters(FAReg,DateComprReg);
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                IF DateComprReg."No. Records Deleted" > NoOfDeleted THEN
                                  InsertRegisters(FAReg,DateComprReg);
                              END;

               ReqFilterFields=FA No.,Depreciation Book Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF EntrdDateComprReg."Ending Date" = 0D THEN
                     EntrdDateComprReg."Ending Date" := TODAY;
                   IF EntrdMaintenanceLedgEntry.Description = '' THEN
                     EntrdMaintenanceLedgEntry.Description := Text009;

                   WITH "Maintenance Ledger Entry" DO BEGIN
                     InsertField(FIELDNO("Document No."),FIELDCAPTION("Document No."));
                     InsertField(FIELDNO("Maintenance Code"),FIELDCAPTION("Maintenance Code"));
                     InsertField(FIELDNO("Index Entry"),FIELDCAPTION("Index Entry"));
                     InsertField(FIELDNO("Global Dimension 1 Code"),FIELDCAPTION("Global Dimension 1 Code"));
                     InsertField(FIELDNO("Global Dimension 2 Code"),FIELDCAPTION("Global Dimension 2 Code"));
                   END;

                   RetainDimText := DimSelectionBuf.GetDimSelectionText(3,REPORT::"Date Compress Maint. Ledger",'');
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1   ;2   ;Field     ;
                  CaptionML=[DEU=Startdatum;
                             ENU=Starting Date;
                             NLD=Begindatum;
                             NOR=Startdato;
                             SVE=Startdatum];
                  ToolTipML=[DEU=Gibt das Datum an, ab dem fÅr den Bericht oder die Stapelverarbeitung Informationen verarbeitet werden.;
                             ENU=Specifies the date from which the report or batch job processes information.;
                             NLD=Hiermee wordt de datum opgegeven vanaf wanneer het rapport of de batchverwerking informatie verwerkt.;
                             SVE=Anger datumet frÜn vilket rapporten eller buntjobbet bearbetar information.];
                  ApplicationArea=#Suite;
                  SourceExpr=EntrdDateComprReg."Starting Date" }

      { 2   ;2   ;Field     ;
                  CaptionML=[DEU=Enddatum;
                             ENU=Ending Date;
                             NLD=Einddatum;
                             NOR=Sluttdato;
                             SVE=Slutdatum];
                  ToolTipML=[DEU=Gibt das Datum an, bis zu dem fÅr den Bericht oder die Stapelverarbeitung Informationen verarbeitet werden.;
                             ENU=Specifies the date to which the report or batch job processes information.;
                             NLD=Hiermee wordt de datum opgegeven tot wanneer het rapport of de batchverwerking informatie verwerkt.;
                             NOR=Angir datoen som rapporten eller kjõrselen behandler informasjon til.;
                             SVE=Anger datumet till vilket rapporten eller batch-jobbet bearbetar information.];
                  ApplicationArea=#Suite;
                  SourceExpr=EntrdDateComprReg."Ending Date" }

      { 3   ;2   ;Field     ;
                  CaptionML=[DEU=PeriodenlÑnge;
                             ENU=Period Length;
                             NLD=Periodelengte;
                             NOR=Periodelengde;
                             SVE=Period];
                  ToolTipML=[DEU=Gibt die Periode an, fÅr die Daten im Bericht angezeigt werden. Geben Sie z. B. "1M" fÅr einen Monat, "30D" fÅr 30 Tage, "3Q" fÅr drei Quartale oder "5Y" fÅr fÅnf Jahre ein.;
                             ENU=Specifies the period for which data is shown in the report. For example, enter "1M" for one month, "30D" for thirty days, "3Q" for three quarters, or "5Y" for five years.;
                             NLD=Hiermee wordt de periode opgegeven waarvoor gegevens worden weergegeven in het rapport, bijvoorbeeld '1M' voor ≤≤n maand, '30D' voor dertig dagen '3Q' voor drie kwartaal of '5Y' voor vijf jaar.;
                             SVE=Anger perioden som data visas fîr i rapporten. Ange till exempel "1M" fîr en mÜnad, "30D" fîr 30ˇdagar, "3K" fîr tre kvartal eller "5è" fîr fem Ür.];
                  OptionCaptionML=[DEU=Tag,Woche,Monat,Quartal,Jahr,Periode;
                                   ENU=Day,Week,Month,Quarter,Year,Period;
                                   NLD=Dag,Week,Maand,Kwartaal,Jaar,Periode;
                                   NOR=Dag,Uke,MÜned,Kvartal,èr,Periode;
                                   SVE=Dag,Vecka,MÜnad,Kvartal,èr,Period];
                  ApplicationArea=#Suite;
                  SourceExpr=EntrdDateComprReg."Period Length" }

      { 4   ;2   ;Field     ;
                  CaptionML=[DEU=Buchungsbeschreibung;
                             ENU=Posting Description;
                             NLD=Boekingsomschrijving;
                             NOR=Bokfõringsbeskrivelse;
                             SVE=Bokfîringsbeskrivning];
                  ToolTipML=[DEU=Gibt das Buchungsdatum an, das von der Stapelverarbeitung als Filter verwendet werden soll.;
                             ENU=Specifies the posting date to be used by the batch job as a filter.;
                             NLD=Hiermee wordt de boekingsdatum opgegeven die door de batchverwerking als filter moet worden gebruikt.;
                             NOR=Angir bokfõringsdatoen som skal brukes av kjõrselen som et filter.;
                             SVE=Anger bokfîringsdatumet som ska anvÑndas i batch-jobbet som ett filter.];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=EntrdMaintenanceLedgEntry.Description }

      { 1907651001;2;Group  ;
                  CaptionML=[DEU=Feldinhalt behalten;
                             ENU=Retain Field Contents;
                             NLD=Te bewaren velden;
                             NOR=Behold felt;
                             SVE=BibehÜll fÑlt] }

      { 5   ;3   ;Field     ;
                  CaptionML=[DEU=Belegnr.;
                             ENU=Document No.;
                             NLD=Documentnr.;
                             NOR=Dokumentnr.;
                             SVE=Dokumentnr];
                  ToolTipML=[DEU=Gibt, wenn das Feld leer ist, die nÑchste verfÅgbare Nummer in der resultierenden Buch.-Blattzeile an. Wenn keine Nummernserie eingerichtet wurde, geben Sie die Belegnummer ein, die der resultierenden Buch.-Blattzeile zugewiesen werden soll.;
                             ENU=Specifies, if you leave the field empty, the next available number on the resulting journal line. If a number series is not set up, enter the document number that you want assigned to the resulting journal line.;
                             NLD=Hiermee wordt, als u het veld leeg laat, het volgende beschikbare nummer op de resulterende dagboekregel opgegeven. Als geen nummerreeks is ingesteld, voert u het documentnummer in dat u wilt toewijzen aan de resulterende dagboekregel.;
                             NOR=Angir, hvis du lar feltet vëre tomt, det neste tilgjengelige nummeret for den resulterende kladdelinjen. Hvis en nummer serie ikke er definert, angir du bilagsnummeret som du vil tilordne til den resulterende kladdelinjen.;
                             SVE=Om du inte anger nÜgot i fÑltet anges nÑsta lediga nummer pÜ journalraden. Om ingen nummerserie har konfigurerats anger du det dokumentnummer som du vill tilldela journalraden.];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=Retain[1] }

      { 6   ;3   ;Field     ;
                  CaptionML=[DEU=Wartungscode;
                             ENU=Maintenance Code;
                             NLD=Onderhoudscode;
                             NOR=Vedlikeholdskode;
                             SVE=UnderhÜllskod];
                  ToolTipML=[DEU=Gibt die Anlage an.;
                             ENU=Specifies the fixed asset.;
                             NLD=Hiermee wordt het vaste activum opgegeven.;
                             NOR=Angir aktivaet.;
                             SVE=Anger anlÑggningstillgÜngen.];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=Retain[2] }

      { 7   ;3   ;Field     ;
                  CaptionML=[DEU=Indexierungsbuchung;
                             ENU=Index Entry;
                             NLD=Indexpost;
                             NOR=Indekspost;
                             SVE=Indextrans.];
                  ToolTipML=[DEU=Gibt den Indexposten an, der datumskomprimiert werden soll. Mit der Stapelverarbeitung "Anlagen indexieren" kînnen Sie Anlagen indexieren, die mit einem bestimmten AfA-Buch verbunden sind. Die Stapelverarbeitung erstellt Posten in einem Buch.-Blatt, basierend auf den von Ihnen angegebenen Optionen. Sie kînnen das Buch.-Blatt dann buchen oder die Posten, wenn nîtig, vor dem Buchen korrigieren.;
                             ENU=Specifies the index entry to be data compressed. With the Index Fixed Assets batch job, you can index fixed assets that are linked to a specific depreciation book. The batch job creates entries in a journal based on the conditions that you specify. You can then post the journal or adjust the entries before posting, if necessary.;
                             NLD=Hiermee wordt de indexpost opgegeven die moet worden gecomprimeerd. Met de batchverwerking Index vast activum comprimeren kunt u vaste activa indexeren die zijn gekoppeld aan een specifiek afschrijvingsboek. De batchverwerking maakt posten in een dagboek op basis van de door u opgegeven voorwaarden. U kunt het dagboek vervolgens boeken of de posten eventueel voor het boeken aanpassen.;
                             NOR=Angir indeksposten som skal datokomprimeres. Ved hjelp av kjõrselen Indeksreg. aktiva kan du indeksregulere aktiva som er knyttet til et spesielt avskrivningstablÜ. Kjõrselen oppretter poster i en kladd pÜ bakgrunn av betingelsene du angir. Du kan deretter bokfõre kladden eller justere postene fõr bokfõring, om nõdvendig.;
                             SVE=Anger indextransaktionen som ska datumkomprimeras. Med batch-jobbet Indexera anlÑggningstillgÜngar kan du indexera anlÑggningstillgÜngar som Ñr lÑnkade till en viss avskrivningsregel. Batch-jobbet skapar transaktioner i en journal baserat pÜ de villkor du anger. Sedan kan du bokfîra journalen eller justera transaktionerna fîre bokfîring om sÜ behîvs.];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=Retain[3] }

      { 9   ;2   ;Field     ;
                  CaptionML=[DEU=Dimensionen behalten;
                             ENU=Retain Dimensions;
                             NLD=Te bewaren dimensies;
                             NOR=Behold dimensjoner;
                             SVE=BibehÜll dimensioner];
                  ToolTipML=[DEU=Legt fest, welche Dimensionsdaten bei der Komprimierung der Posten erhalten bleiben sollen. Je mehr Dimensionsinformationen Sie beibehalten, desto detaillierter werden die komprimierten Posten sein.;
                             ENU=Specifies which dimension information you want to retain when the entries are compressed. The more dimension information that you choose to retain, the more detailed the compressed entries are.;
                             NLD=Hiermee wordt opgegeven welke dimensiegegevens u bij de compressie van de posten wilt bewaren. Hoe meer dimensiegegevens u bewaart, hoe gedetailleerder het resultaat van de compressie is.;
                             NOR=Angir hvilken dimensjonsinformasjon du vil beholde nÜr postene komprimeres. Jo mer dimensjonsinformasjon du velger Ü beholde, jo mer detaljerte er de komprimerte postene.;
                             SVE=Anger den dimensionsinformation som du vill behÜlla nÑr transaktionerna komprimeras. Ju mer dimensionsinformation du vÑljer att behÜlla, desto mer detaljerade blir de komprimerade transaktionerna.];
                  ApplicationArea=#Dimensions;
                  SourceExpr=RetainDimText;
                  Editable=FALSE;
                  OnAssistEdit=BEGIN
                                 DimSelectionBuf.SetDimSelectionMultiple(3,REPORT::"Date Compress Maint. Ledger",RetainDimText);
                               END;
                                }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Durch diesen Batchauftrag werden Posten gelîscht. Daher muss vor dem AusfÅhren des Batchauftrags eine Datenbanksicherung erstellt werden.\\Mîchten Sie die Posten datumskomprimieren?;ENU=This batch job deletes entries. Therefore, it is important that you make a backup of the database before you run the batch job.\\Do you want to date compress the entries?;NLD=Met deze batchverwerking worden posten verwijderd. Maak daarom eerst een reservekopie van de database voor u de batchverwerking uitvoert.\\Wilt u de posten comprimeren?;NOR=Denne Batchjobben fjerner transaksjoner. Det er derfor viktig at du tar en sikkerhetskopi pÜ databasen fõr du kjõrer Batchjobbent.\\Vil du datokomprimere transaksjonene?;SVE=Detta batchjobb tar bort transaktioner. Det Ñr dÑrfîr viktigt att du tar en sÑkerhetskopia pÜ databasen innan du kîr batchjobbet.\\Vill du datumkomprimera transaktionerna?';
      Text003@1003 : TextConst 'DEU=%1 muss angegeben werden.;ENU=%1 must be specified.;NLD=%1 moet opgegeven worden.;NOR=%1 mÜ spesifiseres.;SVE=%1 mÜste specificeras.';
      Text004@1004 : TextConst 'DEU=Datumskomprimierung Wartungsposten...\\;ENU=Date compressing maintenance ledger entries...\\;NLD=Comprimeren onderhoudsposten...\\;NOR=Datokomprimerer reskontrotransaksjoner for vedlikehold...\\;SVE=Datumkomprimerar underhÜllstransaktioner...\\';
      Text005@1005 : TextConst 'DEU=Anlagennr.           #1##########\;ENU=FA No.               #1##########\;NLD=VA-nr.               #1##########\;NOR=Anleggsmiddelnummer #1##########\;SVE=Anl.nr               #1##########\';
      Text006@1006 : TextConst 'DEU=Datum                #2######\\;ENU=Date                 #2######\\;NLD=Datum                #2######\\;NOR=Dato               #2######\\;SVE=Datum                #2######\\';
      Text007@1007 : TextConst 'DEU=Anzahl neue Posten   #3######\;ENU=No. of new entries   #3######\;NLD=Nieuwe posten        #3######\;NOR=Antall nye transaksjoner     #3######\;SVE=Antal nya trans.     #3######\';
      Text008@1008 : TextConst 'DEU=Anz. gelîsch. Posten #4######;ENU=No. of entries del.  #4######;NLD=Verwijderde posten   #4######;NOR=Antall fjernede transaksjoner  #4######;SVE=Antal bortt. trans.  #4######';
      Text009@1009 : TextConst 'DEU=Datumskomprimiert;ENU=Date Compressed;NLD=Gecomprimeerde post;NOR=Dato komprimert;SVE=Datumkomprimerad';
      Text010@1010 : TextConst 'DEU=Dimensionen behalten;ENU=Retain Dimensions;NLD=Te bewaren dimensies;NOR=Behold dimensjoner;SVE=BibehÜll dimensioner';
      SourceCodeSetup@1011 : Record 242;
      DateComprReg@1012 : Record 87;
      EntrdDateComprReg@1013 : Record 87;
      FAReg@1014 : Record 5617;
      EntrdMaintenanceLedgEntry@1015 : Record 11072085;
      NewMaintenanceLedgEntry@1016 : Record 11072085;
      MaintenanceLedgEntry2@1017 : Record 11072085;
      SelectedDim@1018 : Record 369;
      TempSelectedDim@1019 : TEMPORARY Record 369;
      DimSelectionBuf@1020 : Record 368;
      DateComprMgt@1021 : Codeunit 356;
      DimBufMgt@1022 : Codeunit 411;
      DimMgt@1023 : Codeunit 408;
      FAInsertLedgEntry@1024 : Codeunit 5600;
      Window@1025 : Dialog;
      MaintenanceLedgEntryFilter@1026 : Text[250];
      NoOfFields@1027 : Integer;
      Retain@1028 : ARRAY [10] OF Boolean;
      FieldNumber@1029 : ARRAY [10] OF Integer;
      FieldNameArray@1030 : ARRAY [10] OF Text[100];
      LastEntryNo@1031 : Integer;
      NoOfDeleted@1032 : Integer;
      FARegExists@1033 : Boolean;
      i@1034 : Integer;
      ComprDimEntryNo@1035 : Integer;
      DimEntryNo@1036 : Integer;
      RetainDimText@1037 : Text[250];

    LOCAL PROCEDURE InitRegisters@4();
    BEGIN
      IF FAReg.FIND('+') THEN;
      FAReg.INIT;
      FAReg."No." := FAReg."No." + 1;
      FAReg."Creation Date" := TODAY;
      FAReg."Creation Time" := TIME;
      FAReg."Journal Type" := FAReg."Journal Type"::"Fixed Asset";
      FAReg."Source Code" := SourceCodeSetup."Compress Maintenance Ledger";
      FAReg."User ID" := USERID;
      FAReg."From Maintenance Entry No." := LastEntryNo + 1;

      IF DateComprReg.FINDLAST THEN;
      DateComprReg.INIT;
      DateComprReg."No." := DateComprReg."No." + 1;
      DateComprReg."Table ID" := DATABASE::"Maintenance Ledger Entry";
      DateComprReg."Creation Date" := TODAY;
      DateComprReg."Starting Date" := EntrdDateComprReg."Starting Date";
      DateComprReg."Ending Date" := EntrdDateComprReg."Ending Date";
      DateComprReg."Period Length" := EntrdDateComprReg."Period Length";
      FOR i := 1 TO NoOfFields DO
        IF Retain[i] THEN
          DateComprReg."Retain Field Contents" :=
            COPYSTR(
              DateComprReg."Retain Field Contents" + ',' + FieldNameArray[i],1,
              MAXSTRLEN(DateComprReg."Retain Field Contents"));
      DateComprReg."Retain Field Contents" := COPYSTR(DateComprReg."Retain Field Contents",2);
      DateComprReg.Filter := MaintenanceLedgEntryFilter;
      DateComprReg."Register No." := FAReg."No.";
      DateComprReg."Source Code" := SourceCodeSetup."Compress Maintenance Ledger";
      DateComprReg."User ID" := USERID;

      FARegExists := FALSE;
      NoOfDeleted := 0;
    END;

    LOCAL PROCEDURE InsertRegisters@1(VAR FAReg@1000 : Record 5617;VAR DateComprReg@1001 : Record 87);
    VAR
      FAReg2@1002 : Record 5617;
    BEGIN
      FAReg."To Maintenance Entry No." := NewMaintenanceLedgEntry."Entry No.";

      IF FARegExists THEN BEGIN
        FAReg.MODIFY;
        DateComprReg.MODIFY;
      END ELSE BEGIN
        FAReg.INSERT;
        DateComprReg.INSERT;
        FARegExists := TRUE;
      END;

      COMMIT;

      NewMaintenanceLedgEntry.LOCKTABLE;
      FAReg.LOCKTABLE;
      DateComprReg.LOCKTABLE;

      MaintenanceLedgEntry2.RESET;
      IF MaintenanceLedgEntry2.FIND('+') THEN;
      IF FAReg2.FINDLAST THEN;
      IF (LastEntryNo <> MaintenanceLedgEntry2."Entry No.") OR (FAReg."No." <> FAReg2."No.") THEN BEGIN
        LastEntryNo := MaintenanceLedgEntry2."Entry No.";
        InitRegisters;
      END;
    END;

    LOCAL PROCEDURE InsertField@2(Number@1000 : Integer;Name@1001 : Text[100]);
    BEGIN
      NoOfFields := NoOfFields + 1;
      FieldNumber[NoOfFields] := Number;
      FieldNameArray[NoOfFields] := Name;
    END;

    LOCAL PROCEDURE RetainNo@3(Number@1000 : Integer) : Boolean;
    BEGIN
      EXIT(Retain[Index(Number)]);
    END;

    LOCAL PROCEDURE Index@6(Number@1000 : Integer) : Integer;
    BEGIN
      FOR i := 1 TO NoOfFields DO
        IF Number = FieldNumber[i] THEN
          EXIT(i);
    END;

    LOCAL PROCEDURE SummarizeEntry@5(VAR NewMaintenanceLedgEntry@1000 : Record 11072085;MaintenanceLedgEntry@1001 : Record 11072085);
    BEGIN
      WITH MaintenanceLedgEntry DO BEGIN
        NewMaintenanceLedgEntry.Quantity := NewMaintenanceLedgEntry.Quantity + Quantity;
        NewMaintenanceLedgEntry.Amount := NewMaintenanceLedgEntry.Amount + Amount;
        DELETE;
        DateComprReg."No. Records Deleted" := DateComprReg."No. Records Deleted" + 1;
        Window.UPDATE(4,DateComprReg."No. Records Deleted");
      END;
    END;

    LOCAL PROCEDURE ComprCollectedEntries@12();
    VAR
      MaintenanceLedgEntry@1000 : Record 11072085;
      OldDimEntryNo@1001 : Integer;
      Found@1002 : Boolean;
      MaintenanceLedgEntryNo@1003 : Integer;
    BEGIN
      OldDimEntryNo := 0;
      IF DimBufMgt.FindFirstDimEntryNo(DimEntryNo,MaintenanceLedgEntryNo) THEN BEGIN
        InitNewEntry(NewMaintenanceLedgEntry);
        REPEAT
          MaintenanceLedgEntry.GET(MaintenanceLedgEntryNo);
          SummarizeEntry(NewMaintenanceLedgEntry,MaintenanceLedgEntry);
          OldDimEntryNo := DimEntryNo;
          Found := DimBufMgt.NextDimEntryNo(DimEntryNo,MaintenanceLedgEntryNo);
          IF (OldDimEntryNo <> DimEntryNo) OR NOT Found THEN BEGIN
            InsertNewEntry(NewMaintenanceLedgEntry,OldDimEntryNo);
            IF Found THEN
              InitNewEntry(NewMaintenanceLedgEntry);
          END;
          OldDimEntryNo := DimEntryNo;
        UNTIL NOT Found;
      END;
      DimBufMgt.DeleteAllDimEntryNo;
    END;

    [External]
    PROCEDURE InitNewEntry@7(VAR NewMaintenanceLedgEntry@1000 : Record 11072085);
    BEGIN
      LastEntryNo := LastEntryNo + 1;

      WITH MaintenanceLedgEntry2 DO BEGIN
        NewMaintenanceLedgEntry.INIT;
        NewMaintenanceLedgEntry."Entry No." := LastEntryNo;

        NewMaintenanceLedgEntry."FA No." := "FA No.";
        NewMaintenanceLedgEntry."Depreciation Book Code" := "Depreciation Book Code";
        NewMaintenanceLedgEntry."FA Posting Group" := "FA Posting Group";
        NewMaintenanceLedgEntry."Document Type" := "Document Type";

        NewMaintenanceLedgEntry."FA Posting Date" := GETRANGEMIN("FA Posting Date");
        NewMaintenanceLedgEntry."Posting Date" := GETRANGEMIN("FA Posting Date");
        NewMaintenanceLedgEntry.Description := EntrdMaintenanceLedgEntry.Description;
        NewMaintenanceLedgEntry."Source Code" := SourceCodeSetup."Compress Maintenance Ledger";
        NewMaintenanceLedgEntry."User ID" := USERID;

        IF RetainNo(FIELDNO("Document No.")) THEN
          NewMaintenanceLedgEntry."Document No." := "Document No.";
        IF RetainNo(FIELDNO("Maintenance Code")) THEN
          NewMaintenanceLedgEntry."Maintenance Code" := "Maintenance Code";
        IF RetainNo(FIELDNO("Index Entry")) THEN
          NewMaintenanceLedgEntry."Index Entry" := "Index Entry";
        IF RetainNo(FIELDNO("Global Dimension 1 Code")) THEN
          NewMaintenanceLedgEntry."Global Dimension 1 Code" := "Global Dimension 1 Code";
        IF RetainNo(FIELDNO("Global Dimension 2 Code")) THEN
          NewMaintenanceLedgEntry."Global Dimension 2 Code" := "Global Dimension 2 Code";

        Window.UPDATE(1,NewMaintenanceLedgEntry."FA No.");
        Window.UPDATE(2,NewMaintenanceLedgEntry."FA Posting Date");
        DateComprReg."No. of New Records" := DateComprReg."No. of New Records" + 1;
        Window.UPDATE(3,DateComprReg."No. of New Records");
      END;
    END;

    LOCAL PROCEDURE InsertNewEntry@23(VAR NewMaintenanceLedgEntry@1000 : Record 11072085;DimEntryNo@1001 : Integer);
    VAR
      TempDimBuf@1002 : TEMPORARY Record 360;
      TempDimSetEntry@1005 : TEMPORARY Record 480;
    BEGIN
      TempDimBuf.DELETEALL;
      DimBufMgt.GetDimensions(DimEntryNo,TempDimBuf);
      DimMgt.CopyDimBufToDimSetEntry(TempDimBuf,TempDimSetEntry);
      NewMaintenanceLedgEntry."Dimension Set ID" := DimMgt.GetDimensionSetID(TempDimSetEntry);
      NewMaintenanceLedgEntry.INSERT;
      IF NewMaintenanceLedgEntry."FA No." <> '' THEN
        FAInsertLedgEntry.SetMaintenanceLastDate(NewMaintenanceLedgEntry);
    END;

    [External]
    PROCEDURE InitializeRequest@8(StartingDateFrom@1000 : Date;EndingDateFrom@1001 : Date;PeriodLengthFrom@1002 : Option;DescriptionFrom@1003 : Text[50];RetainDimTextFrom@1004 : Text[250]);
    BEGIN
      EntrdDateComprReg."Starting Date" := StartingDateFrom;
      EntrdDateComprReg."Ending Date" := EndingDateFrom;
      EntrdDateComprReg."Period Length" := PeriodLengthFrom;
      EntrdMaintenanceLedgEntry.Description := DescriptionFrom;
      RetainDimText := RetainDimTextFrom;

      InsertField("Maintenance Ledger Entry".FIELDNO("Maintenance Code"),"Maintenance Ledger Entry".FIELDCAPTION("Maintenance Code"));
      InsertField(
        "Maintenance Ledger Entry".FIELDNO("Global Dimension 1 Code"),
        "Maintenance Ledger Entry".FIELDCAPTION("Global Dimension 1 Code"));
      InsertField(
        "Maintenance Ledger Entry".FIELDNO("Global Dimension 2 Code"),
        "Maintenance Ledger Entry".FIELDCAPTION("Global Dimension 2 Code"));
    END;

    [External]
    PROCEDURE SetRetainDocumentNo@9(RetainValue@1000 : Boolean);
    BEGIN
      Retain[1] := RetainValue;
      InsertField("Maintenance Ledger Entry".FIELDNO("Document No."),"Maintenance Ledger Entry".FIELDCAPTION("Document No."));
    END;

    [External]
    PROCEDURE SetRetainIndexEntry@10(RetainValue@1000 : Boolean);
    BEGIN
      Retain[3] := RetainValue;
      InsertField("Maintenance Ledger Entry".FIELDNO("Index Entry"),"Maintenance Ledger Entry".FIELDCAPTION("Index Entry"));
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

