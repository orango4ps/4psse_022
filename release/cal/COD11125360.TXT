OBJECT Codeunit 11125360 Workflow Setup 4PS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 454=rimd;
    OnRun=BEGIN
            DeleteExistingTemplates;
            InitWorkflow;
          END;

  }
  CODE
  {
    VAR
      PurchCategory4PSCde@1100529201 : TextConst '@@@={Locked};DEU=PINV4PS;ENU=PINV4PS;NLD=PINV4PS';
      PurchCategory4PSTxt@1100529200 : TextConst 'DEU=4 PS Einkauf und Verbindlichkeiten;ENU=4PS Purchase and payables;NLD=Inkopen en schulden';
      WorkflowSetup@1100529202 : Codeunit 1502;
      HourAccountingCategory4PSCde@1100528215 : TextConst '@@@={Locked};DEU=HOAC4PS;ENU=HOAC4PS;NLD=HOAC4PS';
      HourAccountingCategory4PSTxt@1100528214 : TextConst 'DEU=Stundenerfassung;ENU=Hour Accounting;NLD=Urenverantwoording;NOR=Timerapportering;SVE=Tidrapportering';
      PurchInvHeaderAApprWorkflowCode4PSTxt@1100529210 : TextConst '@@@={Locked};DEU=PIHAAPW;ENU=PIHAAPW;NLD=PIHAAPW';
      PurchInvHeaderAApprWorkflowDesc4PSTxt@1100529209 : TextConst 'DEU=Genehmigung gebuchter Einkaufsrechnungstitel;ENU=Posted Purchase Invoice Header Approval;NLD=Geboekte inkoopfactuur goedkeuren';
      PurchInvHeaderNApprWorkflowCode4PSTxt@1100529208 : TextConst '@@@={Locked};DEU=PIHNAPW;ENU=PIHNAPW;NLD=PIHNAPW';
      PurchInvHeaderNApprWorkflowDesc4PSTxt@1100529207 : TextConst 'DEU=Genehmigung gebuchter Einkaufsrechnungstitel Nicht genehmigt;ENU=Posted Purchase Invoice Header Not Approved Approval;NLD=Geregistreerde inkoopfactuur goedkeuren';
      PurchCrMemoAApprWorkflowCode4PSTxt@1100529206 : TextConst '@@@={Locked};DEU=PCMAAPW;ENU=PCMAAPW;NLD=PCMAAPW';
      PurchCrMemoAApprWorkflowDesc4PSTxt@1100529205 : TextConst 'DEU=Gebuchte Einkaufsgutschriftgenehmigung;ENU=Posted Purchase Credit Memo Approval;NLD=Geboekte inkoopcreditnota goedkeuren';
      PurchCrMemoNApprWorkflowCode4PSTxt@1100529204 : TextConst '@@@={Locked};DEU=PCMNAPW;ENU=PCMNAPW;NLD=PCMNAPW';
      PurchCRMemoNApprWorkflowDesc4PSTxt@1100529203 : TextConst 'DEU=Gebuchte Einkaufsgutschrift Nicht genehmigt Genehmigungsverfahren;ENU=Posted Purchase Credit Memo Not Approved Approval Workflow;NLD=Geregistreerde inkoopcreditnota goedkeuren';
      WorkflowResponseHandling@1100529215 : Codeunit 1521;
      WorkflowEventHandling@1100529216 : Codeunit 1520;
      WorkflowEventHandling4PS@1100529211 : Codeunit 11125350;
      WorkflowResponseHandling4PS@1100529214 : Codeunit 11125351;
      BlankDateFormula@1100529217 : DateFormula;
      PurchInvHeaderConditionTxt@1100529219 : TextConst '@@@={Locked};DEU="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Purch. Inv. Header"">%1</DataItem><DataItem name=""Purch. Inv. Line"">%2</DataItem></DataItems></ReportParameters>";ENU="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Purch. Inv. Header"">%1</DataItem><DataItem name=""Purch. Inv. Line"">%2</DataItem></DataItems></ReportParameters>";NLD="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Purch. Inv. Header"">%1</DataItem><DataItem name=""Purch. Inv. Line"">%2</DataItem></DataItems></ReportParameters>"';
      PurchCrMemoHeaderConditionTxt@1100529218 : TextConst '@@@={Locked};DEU="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Purch. Cr. Memo Hdr."">%1</DataItem><DataItem name=""Purch. Cr. Memo Line"">%2</DataItem></DataItems></ReportParameters>";ENU="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Purch. Cr. Memo Hdr."">%1</DataItem><DataItem name=""Purch. Cr. Memo Line"">%2</DataItem></DataItems></ReportParameters>";NLD="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Purch. Cr. Memo Hdr."">%1</DataItem><DataItem name=""Purch. Cr. Memo Line"">%2</DataItem></DataItems></ReportParameters>"';
      AdviceOrderLineApprWorkflowCode4PSTxt@1100528201 : TextConst '@@@={Locked};DEU=AOLAPW;ENU=AOLAPW;NLD=AOLAPW';
      AdviceOrderLineApprWorkflowDesc4PSTxt@1100528200 : TextConst 'DEU=Vorschlagsauftragszeile Genehmigungsverfahren;ENU=Advice Order Line Approval Workflow;NLD=Adviesorderregel goedkeuren';
      PurchaseOrderApprWorkflowCode4PSTxt@1100528205 : TextConst '@@@={Locked};DEU=PORAPW;ENU=PORAPW;NLD=PORAPW';
      PurchaseOrderApprWorkflowDesc4PSTxt@1100528204 : TextConst 'DEU=Workflow Bestellungsgenehmigung;ENU=Purchase Order Approval Workflow;NLD=Inkooporder goedkeuren;NOR=Arbeidsflyt for bestillingsgodkjenning;SVE=Arbetsflîde fîr godkÑnnande av inkîpsorder';
      PurchaseQuoteApprWorkflowCode4PSTxt@1100528207 : TextConst '@@@={Locked};DEU=PQUAPW;ENU=PQUAPW;NLD=PQUAPW';
      PurchaseQuoteApprWorkflowDesc4PSTxt@1100528206 : TextConst 'DEU=Workflow Anfragegenehmigung;ENU=Purchase Quote Approval Workflow;NLD=Inkoopofferte goedkeuren;NOR=Arbeidsflyt for forespõrselsgodkjenning;SVE=Arbetsflîde fîr godkÑnnande av inkîpsoffert';
      PurchaseInvoiceApprWorkflowCode4PSTxt@1100525003 : TextConst '@@@={Locked};DEU=PINAPW;ENU=PINAPW;NLD=PINAPW';
      PurchaseInvoiceApprWorkflowDesc4PSTxt@1100525002 : TextConst 'DEU=Workflow Einkaufsrechnungsgenehmigung;ENU=Purchase Invoice Approval Workflow;NLD=Inkoopfactuur goedkeuren;NOR=Arbeidsflyt for kjõpsfakturagodkjenning;SVE=Arbetsflîde fîr godkÑnnande av inkîpsfaktura';
      PurchaseCreditMemoApprWorkflowCode4PSTxt@1100525001 : TextConst '@@@={Locked};DEU=PCRAPW;ENU=PCRAPW;NLD=PCRAPW';
      PurchaseCreditMemoApprWorkflowDesc4PSTxt@1100525000 : TextConst 'DEU=Einkaufsgutschrift-Workflow;ENU=Purchase Credit Memo Workflow;NLD=Inkoopcreditnota goedkeuren';
      ProjectPurchaseActionApprWorkflowCode4PSTxt@1100528209 : TextConst '@@@={Locked};DEU=PPAAPW;ENU=PPAAPW;NLD=PPAAPW';
      ProjectPurchaseActionApprWorkflowDesc4PSTxt@1100528208 : TextConst 'DEU=Einkaufsmarkierung Genehmigungsverfahren;ENU=Purchase Action Approval Workflow;NLD=Projectinkoopactie goedkeuren';
      PurchaseRequisitesApprWorkflowCode4PSTxt@1100528213 : TextConst '@@@={Locked};DEU=PREAPW;ENU=PREAPW;NLD=PREAPW';
      PurchaseRequisitesApprWorkflowDesc4PSTxt@1100528212 : TextConst 'DEU=Einkaufsanforderung Genehmigungsverfahren;ENU=Purchase Requisition Approval Workflow;NLD=Inkooprequisitie goedkeuren';
      HourAccountingLineApprWorkflowCode4PSTxt@1100528216 : TextConst '@@@={Locked};DEU=HALAPW;ENU=HALAPW;NLD=HALAPW';
      HourAccountingLineApprWorkflowDesc4PSTxt@1100528210 : TextConst 'DEU=Stundenabrechnungszeile Genehmigungsverfahren;ENU=Hour Accounting Line Approval Workflow;NLD=Urenverantwoordingregel goedkeuren';
      SiteMngmntHoursLineApprWorkflowCode4PSTxt@1100528217 : TextConst '@@@={Locked};DEU=SMHAPW;ENU=SMHAPW;NLD=SMHAPW';
      SiteMngmntHoursLineApprWorkflowDesc4PSTxt@1100528203 : TextConst 'DEU=Stundenerfassung BaufÅhrer Zeile Genehmigungsverfahren;ENU=Site Mngmnt Hour Line Approval Workflow;NLD=Urenverantwoording uitvoerder regel goedkeuren';
      PurchaseHeaderConditionTxt@1100528211 : TextConst
        '@@@={Locked}',
        'DEU="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Purchase Header"">%1</DataItem><DataItem name=""Purchase Line"">%2</DataItem></DataItems></ReportParameters>"',
        'ENU="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Purchase Header"">%1</DataItem><DataItem name=""Purchase Line"">%2</DataItem></DataItems></ReportParameters>"',
        'NLD="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Purchase Header"">%1</DataItem><DataItem name=""Purchase Line"">%2</DataItem></DataItems></ReportParameters>"',
        'NOR="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Purchase Header"">%1</DataItem><DataItem name=""Purchase Line"">%2</DataItem></DataItems></ReportParameters>"',
        'SVE="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Purchase Header"">%1</DataItem><DataItem name=""Purchase Line"">%2</DataItem></DataItems></ReportParameters>"';
      SendApprovalRequestResponseID@1100528218 : Integer;
      PurchaseRequisitionConditionTxt@1100529212 : TextConst '@@@={Locked};DEU="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Purchase Requisition"">%1</DataItem><DataItem name=""Purchase Requisition Line"">%2</DataItem></DataItems></ReportParameters>";ENU="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Purchase Requisition"">%1</DataItem><DataItem name=""Purchase Requisition Line"">%2</DataItem></DataItems></ReportParameters>";NLD="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Purchase Requisition"">%1</DataItem><DataItem name=""Purchase Requisition Line"">%2</DataItem></DataItems></ReportParameters>"';
      ProjectPurchaseActionConditionTxt@1100529213 : TextConst '@@@={Locked};DEU="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Project Purchase Action"">%1</DataItem></DataItems></ReportParameters>";ENU="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Project Purchase Action"">%1</DataItem></DataItems></ReportParameters>";NLD="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Project Purchase Action"">%1</DataItem></DataItems></ReportParameters>"';
      AdviceOrderLineConditionTxt@1100529220 : TextConst '@@@={Locked};DEU="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Advice Order Line"">%1</DataItem></DataItems></ReportParameters>";ENU="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Advice Order Line"">%1</DataItem></DataItems></ReportParameters>";NLD="<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?><ReportParameters><DataItems><DataItem name=""Advice Order Line"">%1</DataItem></DataItems></ReportParameters>"';
      VendorBankAccIBANCnangeApprWorkflowCodeTxt@1100529601 : TextConst '@@@={Locked};DEU=VBAIBANAPW;ENU=VBAIBANAPW;NLD=VBAIBANAPW';
      VendorBankAccIBANChangeApprWorkflowDescTxt@1100529600 : TextConst 'DEU=Genehmigungs-Workflow Bankkonto Kreditor IBAN Ñndern;ENU=Vendor Bank Account IBAN Change Approval Workflow;NLD=Goedkeuringswerkstroom van bankrekening leverancier IBAN wijzigen';

    PROCEDURE InitWorkflow@23();
    BEGIN
      WorkflowEventHandling4PS.CreateEventsLibrary;
      WorkflowResponseHandling4PS.CreateResponsesLibrary;
      InsertApprovalsTableRelations;

      InsertWorkflowCategories;
      InsertAllWorkflows(TRUE);
    END;

    PROCEDURE InitWorkflowNotMigrationProcess@1100529207();
    VAR
      WorkflowSetup4PS@1100529200 : Codeunit 11125360;
    BEGIN
      SetWorkFlowSetup4PSConstruct;
      WorkflowSetup4PS.RUN;
    END;

    LOCAL PROCEDURE DeleteExistingTemplates@4();
    VAR
      Workflow@1002 : Record 1501;
      WorkflowStep@1001 : Record 1502;
      WorkflowStepArgument@1000 : Record 1523;
    BEGIN
      Workflow.SETRANGE(Template,TRUE);
      Workflow.SETFILTER(Category,'%1|%2',PurchCategory4PSCde,HourAccountingCategory4PSCde);
      IF Workflow.FINDSET THEN REPEAT
        WorkflowStep.SETRANGE("Workflow Code",Workflow.Code);
        IF WorkflowStep.FINDSET THEN REPEAT
          WorkflowStepArgument.SETRANGE(ID,WorkflowStep.Argument);
          WorkflowStepArgument.DELETEALL;
        UNTIL WorkflowStep.NEXT = 0;
        WorkflowStep.DELETEALL;
      UNTIL Workflow.NEXT = 0;
      Workflow.DELETEALL;
    END;

    PROCEDURE InsertAllWorkflows@24(WorkFlowIsTemplate@1100529200 : Boolean);
    BEGIN
      InsertPurchInvHeaderApprovedApprovalWorkflow(WorkFlowIsTemplate);
      InsertPurchInvHeaderNotApprovedApprovalWorkflow(WorkFlowIsTemplate);
      InsertPurchCrMemoHeaderApprovedApprovalWorkflow(WorkFlowIsTemplate);
      InsertPurchCrMemoHeaderNotApprovedApprovalWorkflow(WorkFlowIsTemplate);

      InsertPurchaseOrderApprovalWorkflow(WorkFlowIsTemplate);
      InsertPurchaseQuoteApprovalWorkflow(WorkFlowIsTemplate);
      InsertPurchaseInvoiceApprovalWorkflow(WorkFlowIsTemplate);
      InsertPurchaseCreditMemoApprovalWorkflow(WorkFlowIsTemplate);
      InsertAdviceOrderLineApprovalWorkflow(WorkFlowIsTemplate);
      InsertProjectPurchaseActionApprovalWorkflow(WorkFlowIsTemplate);
      InsertPurchaseRequisitionApprovalWorkflow(WorkFlowIsTemplate);
      InsertHourAccountingLineApprovalWorkflow(WorkFlowIsTemplate);
      InsertSiteMngmntHoursLineApprovalWorkflow(WorkFlowIsTemplate);

      InsertVendorBankAccountIBANChangeApprovalWorkflow(WorkFlowIsTemplate);
    END;

    PROCEDURE InsertWorkflowCategories@126();
    BEGIN
      WorkflowSetup.InsertWorkflowCategory(PurchCategory4PSCde,PurchCategory4PSTxt);
      WorkflowSetup.InsertWorkflowCategory(HourAccountingCategory4PSCde,HourAccountingCategory4PSTxt);
    END;

    PROCEDURE InsertApprovalsTableRelations@1100529509();
    VAR
      ApprovalEntry@1000 : Record 454;
    BEGIN
      WorkflowSetup.InsertTableRelation(DATABASE::"Purch. Inv. Header",0,DATABASE::"Approval Entry",ApprovalEntry.FIELDNO("Record ID to Approve"));
      WorkflowSetup.InsertTableRelation(DATABASE::"Purch. Cr. Memo Hdr.",0,DATABASE::"Approval Entry",ApprovalEntry.FIELDNO("Record ID to Approve"));
      WorkflowSetup.InsertTableRelation(DATABASE::"Purchase Header",0,DATABASE::"Approval Entry",ApprovalEntry.FIELDNO("Record ID to Approve"));
      WorkflowSetup.InsertTableRelation(DATABASE::"Advice Order Line",0,DATABASE::"Approval Entry",ApprovalEntry.FIELDNO("Record ID to Approve"));
      WorkflowSetup.InsertTableRelation(DATABASE::"Project Purchase Action",0,DATABASE::"Approval Entry",ApprovalEntry.FIELDNO("Record ID to Approve"));
      WorkflowSetup.InsertTableRelation(DATABASE::"Purchase Requisition",0,DATABASE::"Approval Entry",ApprovalEntry.FIELDNO("Record ID to Approve"));
      WorkflowSetup.InsertTableRelation(DATABASE::"Hour Accounting",0,DATABASE::"Approval Entry",ApprovalEntry.FIELDNO("Record ID to Approve"));
      WorkflowSetup.InsertTableRelation(DATABASE::"Site Mngmnt. Hours Header",0,DATABASE::"Approval Entry",ApprovalEntry.FIELDNO("Record ID to Approve"));
      WorkflowSetup.InsertTableRelation(DATABASE::"Vendor Bank Account",0,DATABASE::"Approval Entry",ApprovalEntry.FIELDNO("Record ID to Approve"));
    END;

    PROCEDURE InsertPurchInvHeaderApprovedApprovalWorkflow@81(WorkflowIsTemplate@1100525000 : Boolean);
    VAR
      Workflow@1000 : Record 1501;
    BEGIN
      InsertWorkflow(Workflow,WorkflowIsTemplate,PurchInvHeaderAApprWorkflowCode4PSTxt,PurchInvHeaderAApprWorkflowDesc4PSTxt,PurchCategory4PSCde);
      InsertPurchInvHeaderApprovalWorkflowDetails4PS(Workflow,BuildPurchInvHeaderConditions(TRUE));
      UpdateWorkflow(Workflow,WorkflowIsTemplate);
    END;

    PROCEDURE InsertPurchInvHeaderNotApprovedApprovalWorkflow@1100529517(WorkflowIsTemplate@1100525000 : Boolean);
    VAR
      Workflow@1000 : Record 1501;
    BEGIN
      InsertWorkflow(Workflow,WorkflowIsTemplate,PurchInvHeaderNApprWorkflowCode4PSTxt,PurchInvHeaderNApprWorkflowDesc4PSTxt,PurchCategory4PSCde);
      InsertPurchInvHeaderApprovalWorkflowDetails4PS(Workflow,BuildPurchInvHeaderConditions(FALSE));
      UpdateWorkflow(Workflow,WorkflowIsTemplate);
    END;

    PROCEDURE InsertPurchCrMemoHeaderApprovedApprovalWorkflow@1100529519(WorkflowIsTemplate@1100525000 : Boolean);
    VAR
      Workflow@1000 : Record 1501;
    BEGIN
      InsertWorkflow(Workflow,WorkflowIsTemplate,PurchCrMemoAApprWorkflowCode4PSTxt,PurchCrMemoAApprWorkflowDesc4PSTxt,PurchCategory4PSCde);
      InsertPurchCrMemoHeaderApprovalWorkflowDetails4PS(Workflow,BuildPurchCrMemoHeaderConditions(TRUE));
      UpdateWorkflow(Workflow,WorkflowIsTemplate);
    END;

    PROCEDURE InsertPurchCrMemoHeaderNotApprovedApprovalWorkflow@1100529518(WorkflowIsTemplate@1100525000 : Boolean);
    VAR
      Workflow@1000 : Record 1501;
    BEGIN
      InsertWorkflow(Workflow,WorkflowIsTemplate,PurchCrMemoNApprWorkflowCode4PSTxt,PurchCRMemoNApprWorkflowDesc4PSTxt,PurchCategory4PSCde);
      InsertPurchCrMemoHeaderApprovalWorkflowDetails4PS(Workflow,BuildPurchCrMemoHeaderConditions(FALSE));
      UpdateWorkflow(Workflow,WorkflowIsTemplate);
    END;

    PROCEDURE InsertPurchaseOrderApprovalWorkflow@1100528208(WorkflowIsTemplate@1100525000 : Boolean);
    VAR
      Workflow@1000 : Record 1501;
      PurchaseHeader@1100528200 : Record 38;
    BEGIN
      InsertWorkflow(Workflow,WorkflowIsTemplate,PurchaseOrderApprWorkflowCode4PSTxt,PurchaseOrderApprWorkflowDesc4PSTxt,PurchCategory4PSCde);
      InsertPurchaseHeaderApprovalWorkflowDetails4PS(Workflow,BuildPurchaseHeaderConditions(PurchaseHeader."Document Type"::Order));
      UpdateWorkflow(Workflow,WorkflowIsTemplate);
    END;

    PROCEDURE InsertPurchaseQuoteApprovalWorkflow@1100528207(WorkflowIsTemplate@1100525000 : Boolean);
    VAR
      Workflow@1000 : Record 1501;
      PurchaseHeader@1100528200 : Record 38;
    BEGIN
      InsertWorkflow(Workflow,WorkflowIsTemplate,PurchaseQuoteApprWorkflowCode4PSTxt,PurchaseQuoteApprWorkflowDesc4PSTxt,PurchCategory4PSCde);
      InsertPurchaseHeaderApprovalWorkflowDetails4PS(Workflow,BuildPurchaseHeaderConditions(PurchaseHeader."Document Type"::Quote));
      UpdateWorkflow(Workflow,WorkflowIsTemplate);
    END;

    PROCEDURE InsertPurchaseInvoiceApprovalWorkflow@1100525002(WorkflowIsTemplate@1100525000 : Boolean);
    VAR
      Workflow@1000 : Record 1501;
      PurchaseHeader@1100528200 : Record 38;
    BEGIN
      InsertWorkflow(Workflow,WorkflowIsTemplate,PurchaseInvoiceApprWorkflowCode4PSTxt,PurchaseInvoiceApprWorkflowDesc4PSTxt,PurchCategory4PSCde);
      InsertPurchaseHeaderApprovalWorkflowDetails4PS(Workflow,BuildPurchaseHeaderConditions(PurchaseHeader."Document Type"::Invoice));
      UpdateWorkflow(Workflow,WorkflowIsTemplate);
    END;

    PROCEDURE InsertPurchaseCreditMemoApprovalWorkflow@1100525001(WorkflowIsTemplate@1100525000 : Boolean);
    VAR
      Workflow@1000 : Record 1501;
      PurchaseHeader@1100528200 : Record 38;
    BEGIN
      InsertWorkflow(Workflow,WorkflowIsTemplate,PurchaseCreditMemoApprWorkflowCode4PSTxt,PurchaseCreditMemoApprWorkflowDesc4PSTxt,PurchCategory4PSCde);
      InsertPurchaseHeaderApprovalWorkflowDetails4PS(Workflow,BuildPurchaseHeaderConditions(PurchaseHeader."Document Type"::"Credit Memo"));
      UpdateWorkflow(Workflow,WorkflowIsTemplate);
    END;

    PROCEDURE InsertAdviceOrderLineApprovalWorkflow@1100528223(WorkflowIsTemplate@1100525000 : Boolean);
    VAR
      Workflow@1000 : Record 1501;
    BEGIN
      InsertWorkflow(Workflow,WorkflowIsTemplate,AdviceOrderLineApprWorkflowCode4PSTxt,AdviceOrderLineApprWorkflowDesc4PSTxt,PurchCategory4PSCde);
      InsertAdviceOrderLineApprovalWorkflowDetails4PS(Workflow,BuildAdviceOrderLineConditions);
      UpdateWorkflow(Workflow,WorkflowIsTemplate);
    END;

    PROCEDURE InsertProjectPurchaseActionApprovalWorkflow@1100528222(WorkflowIsTemplate@1100525000 : Boolean);
    VAR
      Workflow@1000 : Record 1501;
    BEGIN
      InsertWorkflow(Workflow,WorkflowIsTemplate,ProjectPurchaseActionApprWorkflowCode4PSTxt,ProjectPurchaseActionApprWorkflowDesc4PSTxt,PurchCategory4PSCde);
      InsertProjectPurchaseActionApprovalWorkflowDetails4PS(Workflow,BuildProjectPurchaseActionConditions);
      UpdateWorkflow(Workflow,WorkflowIsTemplate);
    END;

    PROCEDURE InsertPurchaseRequisitionApprovalWorkflow@1100528203(WorkflowIsTemplate@1100525000 : Boolean);
    VAR
      Workflow@1000 : Record 1501;
    BEGIN
      InsertWorkflow(Workflow,WorkflowIsTemplate,PurchaseRequisitesApprWorkflowCode4PSTxt,PurchaseRequisitesApprWorkflowDesc4PSTxt,PurchCategory4PSCde);
      InsertPurchaseRequisitionApprovalWorkflowDetails4PS(Workflow,BuildPurchaseRequisitionConditions);
      UpdateWorkflow(Workflow,WorkflowIsTemplate);
    END;

    PROCEDURE InsertHourAccountingLineApprovalWorkflow@1100528200(WorkflowIsTemplate@1100525000 : Boolean);
    VAR
      Workflow@1000 : Record 1501;
    BEGIN
      InsertWorkflow(Workflow,WorkflowIsTemplate,HourAccountingLineApprWorkflowCode4PSTxt,HourAccountingLineApprWorkflowDesc4PSTxt,HourAccountingCategory4PSCde);
      InsertHourAccountingLineApprovalWorkflowDetails4PS(Workflow);
      UpdateWorkflow(Workflow,WorkflowIsTemplate);
    END;

    PROCEDURE InsertSiteMngmntHoursLineApprovalWorkflow@1100528226(WorkflowIsTemplate@1100525000 : Boolean);
    VAR
      Workflow@1000 : Record 1501;
    BEGIN
      InsertWorkflow(Workflow,WorkflowIsTemplate,SiteMngmntHoursLineApprWorkflowCode4PSTxt,SiteMngmntHoursLineApprWorkflowDesc4PSTxt,HourAccountingCategory4PSCde);
      InsertSiteMngmntHoursLineApprovalWorkflowDetails4PS(Workflow);
      UpdateWorkflow(Workflow,WorkflowIsTemplate);
    END;

    LOCAL PROCEDURE InsertWorkflowTemplate4PS@52(VAR Workflow@1003 : Record 1501;WorkflowCode@1001 : Code[20];WorkflowDescription@1002 : Text[100];CategoryCode@1000 : Code[20]) : Boolean;
    BEGIN
      Workflow.INIT;
      Workflow.Code := GetWorkflowTemplateCode4PS(WorkflowCode);
      Workflow.Description := WorkflowDescription;
      Workflow.Category := CategoryCode;
      Workflow.Enabled := FALSE;
      EXIT(Workflow.INSERT);
    END;

    LOCAL PROCEDURE InsertPurchInvHeaderApprovalWorkflowDetails4PS@1100528201(VAR Workflow@1001 : Record 1501;ConditionText@1100528200 : Text);
    VAR
      WorkflowStepArgument@1003 : Record 1523;
    BEGIN
      SetWorkflowStepArgument(WorkflowStepArgument);
      Insert4PSApprovalWorkflowSteps(Workflow,
        ConditionText,
        WorkflowEventHandling4PS.RunWorkflowOnSendPostedPurchaseInvoiceForApprovalCode,
        WorkflowEventHandling4PS.RunWorkflowOnCancelPostedPurchaseInvoiceRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSApproveAndDelegateRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateAndSendBackRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateWithoutApprovalRequestCode,
        WorkflowStepArgument,TRUE);
    END;

    LOCAL PROCEDURE InsertPurchCrMemoHeaderApprovalWorkflowDetails4PS@1100529511(VAR Workflow@1001 : Record 1501;ConditionText@1100528200 : Text);
    VAR
      WorkflowStepArgument@1003 : Record 1523;
    BEGIN
      SetWorkflowStepArgument(WorkflowStepArgument);
      Insert4PSApprovalWorkflowSteps(Workflow,
        ConditionText,
        WorkflowEventHandling4PS.RunWorkflowOnSendPostedPurchaseCreditMemoForApprovalCode,
        WorkflowEventHandling4PS.RunWorkflowOnCancelPostedPurchaseCreditMemoRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSApproveAndDelegateRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateAndSendBackRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateWithoutApprovalRequestCode,
        WorkflowStepArgument,TRUE);
    END;

    LOCAL PROCEDURE InsertPurchaseHeaderApprovalWorkflowDetails4PS@1100528206(VAR Workflow@1001 : Record 1501;ConditionText@1100528200 : Text);
    VAR
      WorkflowStepArgument@1003 : Record 1523;
    BEGIN
      SetWorkflowStepArgument(WorkflowStepArgument);
      Insert4PSApprovalWorkflowSteps(Workflow,
        ConditionText,
        WorkflowEventHandling.RunWorkflowOnSendPurchaseDocForApprovalCode,
        WorkflowEventHandling.RunWorkflowOnCancelPurchaseApprovalRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSApproveAndDelegateRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateAndSendBackRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateWithoutApprovalRequestCode,
        WorkflowStepArgument,TRUE);
    END;

    LOCAL PROCEDURE InsertAdviceOrderLineApprovalWorkflowDetails4PS@1100528202(VAR Workflow@1001 : Record 1501;ConditionText@1100529200 : Text);
    VAR
      WorkflowStepArgument@1003 : Record 1523;
    BEGIN
      SetWorkflowStepArgument(WorkflowStepArgument);
      Insert4PSApprovalWorkflowSteps(Workflow,
        ConditionText,
        WorkflowEventHandling4PS.RunWorkflowOnSendAdviceOrderLineForApprovalCode,
        WorkflowEventHandling4PS.RunWorkflowOnCancelAdviceOrderLineRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSApproveAndDelegateRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateAndSendBackRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateWithoutApprovalRequestCode,
        WorkflowStepArgument,TRUE);
    END;

    LOCAL PROCEDURE InsertProjectPurchaseActionApprovalWorkflowDetails4PS@1100528228(VAR Workflow@1001 : Record 1501;ConditionText@1100529200 : Text);
    VAR
      WorkflowStepArgument@1003 : Record 1523;
    BEGIN
      SetWorkflowStepArgument(WorkflowStepArgument);
      Insert4PSApprovalWorkflowSteps(Workflow,
        ConditionText,
        WorkflowEventHandling4PS.RunWorkflowOnSendProjectPurchaseActionForApprovalCode,
        WorkflowEventHandling4PS.RunWorkflowOnCancelProjectPurchaseActionRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSApproveAndDelegateRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateAndSendBackRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateWithoutApprovalRequestCode,
        WorkflowStepArgument,TRUE);
    END;

    LOCAL PROCEDURE InsertPurchaseRequisitionApprovalWorkflowDetails4PS@1100528209(VAR Workflow@1001 : Record 1501;ConditionText@1100529200 : Text);
    VAR
      WorkflowStepArgument@1003 : Record 1523;
    BEGIN
      SetWorkflowStepArgument(WorkflowStepArgument);
      Insert4PSApprovalWorkflowSteps(Workflow,
        ConditionText,
        WorkflowEventHandling4PS.RunWorkflowOnSendPurchaseRequisitionForApprovalCode,
        WorkflowEventHandling4PS.RunWorkflowOnCancelPurchaseRequisitionRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSApproveAndDelegateRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateAndSendBackRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateWithoutApprovalRequestCode,
        WorkflowStepArgument,TRUE);
    END;

    LOCAL PROCEDURE InsertHourAccountingLineApprovalWorkflowDetails4PS@1100528210(VAR Workflow@1001 : Record 1501);
    VAR
      WorkflowStepArgument@1003 : Record 1523;
    BEGIN
      SetWorkflowStepArgument(WorkflowStepArgument);
      Insert4PSApprovalWorkflowSteps(Workflow,
        '',
        WorkflowEventHandling4PS.RunWorkflowOnSendHourAccountingForApprovalCode,
        WorkflowEventHandling4PS.RunWorkflowOnCancelHourAccountingRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSApproveAndDelegateRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateAndSendBackRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateWithoutApprovalRequestCode,
        WorkflowStepArgument,TRUE);
    END;

    LOCAL PROCEDURE InsertSiteMngmntHoursLineApprovalWorkflowDetails4PS@1100528227(VAR Workflow@1001 : Record 1501);
    VAR
      WorkflowStepArgument@1003 : Record 1523;
    BEGIN
      SetWorkflowStepArgument(WorkflowStepArgument);
      Insert4PSApprovalWorkflowSteps(Workflow,
        '',
        WorkflowEventHandling4PS.RunWorkflowOnSendSiteMngmntHoursHeaderForApprovalCode,
        WorkflowEventHandling4PS.RunWorkflowOnCancelSiteMngmntHoursHeaderRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSApproveAndDelegateRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateAndSendBackRequestCode,
        WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateWithoutApprovalRequestCode,
        WorkflowStepArgument,TRUE);
    END;

    PROCEDURE Insert4PSApprovalWorkflowSteps@1100529505(Workflow@1100529525 : Record 1501;ConditionString@1100529523 : Text;DocSendForApprovalEventCode@1100529504 : Code[128];DocCanceledEventCode@1100529501 : Code[128];DocDelegatedWithApprovalEventCode@1100528200 : Code[128];DocDelegatedAndSendBackEventCode@1100528201 : Code[128];DocDelegatedWithoutApprovalEventCode@1100528202 : Code[128];WorkflowStepArgument@1100529522 : Record 1523;ShowConfirmationMessage@1100529517 : Boolean);
    VAR
      EventID@1100528204 : Integer;
      PreviousResponseID@1100528203 : Integer;
    BEGIN
      SendApprovalRequestResponseID := 0;
      EventID := WorkflowSetup.InsertEntryPointEventStep(Workflow,DocSendForApprovalEventCode);
      IF ConditionString <> '' THEN
        WorkflowSetup.InsertEventArgument(EventID,ConditionString);

      Insert4PSResponseForCreateApprovalEvent(Workflow,EventID,PreviousResponseID);

      EventID := WorkflowSetup.InsertEventStep(Workflow,WorkflowEventHandling.RunWorkflowOnApproveApprovalRequestCode,SendApprovalRequestResponseID);
        WorkflowSetup.InsertEventArgument(EventID,WorkflowSetup.BuildNoPendingApprovalsConditions);
        Insert4PSResponseForApproveApprovalEvent(Workflow,EventID,PreviousResponseID);

      EventID := WorkflowSetup.InsertEventStep(Workflow,WorkflowEventHandling.RunWorkflowOnApproveApprovalRequestCode,SendApprovalRequestResponseID);
        WorkflowSetup.InsertEventArgument(EventID,WorkflowSetup.BuildPendingApprovalsConditions);
        Insert4PSResponseForApproveApprovalEvent2(Workflow,EventID,PreviousResponseID);

      EventID := WorkflowSetup.InsertEventStep(Workflow,WorkflowEventHandling.RunWorkflowOnRejectApprovalRequestCode,SendApprovalRequestResponseID);
        Insert4PSResponseForRejectApprovalEvent(Workflow,EventID,PreviousResponseID);

      IF WorkflowIsHourAccountingWorkflow(Workflow.Code) THEN
        Insert4PSHourAccountingApprovalWorkflowSteps(Workflow,EventID,PreviousResponseID);

      EventID := WorkflowSetup.InsertEventStep(Workflow,DocCanceledEventCode,SendApprovalRequestResponseID);
      Insert4PSResponseForRequestCanceledEvent(Workflow,EventID,PreviousResponseID);

      EventID := WorkflowSetup.InsertEventStep(Workflow,DocDelegatedWithApprovalEventCode,SendApprovalRequestResponseID);
      Insert4PSResponseForApproveAndDelegateEvent(Workflow,EventID,PreviousResponseID);

      EventID := WorkflowSetup.InsertEventStep(Workflow,DocDelegatedAndSendBackEventCode,SendApprovalRequestResponseID);
      Insert4PSResponseForDelegateAndSendBackEvent(Workflow,EventID,PreviousResponseID);

      EventID := WorkflowSetup.InsertEventStep(Workflow,WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateWithoutApprovalRequestCode,SendApprovalRequestResponseID);
      Insert4PSResponseForDelegateWithoutApprovalEvent(Workflow,EventID,PreviousResponseID);
    END;

    PROCEDURE Insert4PSHourAccountingApprovalWorkflowSteps@1100528213(Workflow@1100529525 : Record 1501;VAR EventID@1100528201 : Integer;VAR PreviousResponseID@1100528200 : Integer);
    BEGIN
      WorkflowSetup.InsertEventArgument(EventID,WorkflowSetup.BuildPendingApprovalsConditions);
      EventID := WorkflowSetup.InsertEventStep(Workflow,WorkflowEventHandling.RunWorkflowOnRejectApprovalRequestCode,SendApprovalRequestResponseID);
      WorkflowSetup.InsertEventArgument(EventID,WorkflowSetup.BuildNoPendingApprovalsConditions);
      Insert4PSResponseForRejectHourApprovalEvent(Workflow,EventID,PreviousResponseID);

      IF Workflow.Code = GetWorkflowTemplateCode4PS(HourAccountingLineApprWorkflowCode4PSTxt) THEN
        EventID := WorkflowSetup.InsertEventStep(Workflow,WorkflowEventHandling4PS.RunWorkflowOnSendHourAccountingForApprovalAgainCode,SendApprovalRequestResponseID)
      ELSE
        EventID := WorkflowSetup.InsertEventStep(Workflow,WorkflowEventHandling4PS.RunWorkflowOnSendSiteMngmntHoursHeaderForApprovalAgainCode,SendApprovalRequestResponseID);
      Insert4PSResponseForCreateApprovalEvent(Workflow,EventID,PreviousResponseID);
    END;

    LOCAL PROCEDURE Insert4PSResponseForCreateApprovalEvent@1100528204(Workflow@1100528200 : Record 1501;PreviousResponseID@1100528202 : Integer;VAR HoldLastResonseID@1100528201 : Integer);
    BEGIN
      HoldLastResonseID := PreviousResponseID;
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling4PS.CreateApprovalRequest4PSCode,HoldLastResonseID);
      IF WorkflowIsPostedPurchaseDocumentWorkflow(Workflow.Code) THEN
        HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling4PS.SetDocumentOnHoldCode,HoldLastResonseID)
      ELSE
        HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.SetStatusToPendingApprovalCode,HoldLastResonseID);
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.RestrictRecordUsageCode,HoldLastResonseID);
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.SendApprovalRequestForApprovalCode,HoldLastResonseID);

      IF SendApprovalRequestResponseID = 0 THEN
        SendApprovalRequestResponseID := HoldLastResonseID
      ELSE
        WorkflowSetup.SetNextStep(Workflow,HoldLastResonseID,SendApprovalRequestResponseID);
    END;

    LOCAL PROCEDURE Insert4PSResponseForApproveApprovalEvent@1100528212(Workflow@1100528200 : Record 1501;PreviousResponseID@1100528202 : Integer;VAR HoldLastResonseID@1100528201 : Integer);
    BEGIN
      HoldLastResonseID := PreviousResponseID;
      IF WorkflowIsHourAccountingWorkflow(Workflow.Code) THEN
        HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling4PS.UpdateStatusAfterApproveHourLine4PSCode,HoldLastResonseID);
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.AllowRecordUsageCode,HoldLastResonseID);
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.ReleaseDocumentCode,HoldLastResonseID);
    END;

    LOCAL PROCEDURE Insert4PSResponseForApproveApprovalEvent2@1100528221(Workflow@1100528200 : Record 1501;PreviousResponseID@1100528202 : Integer;VAR HoldLastResonseID@1100528201 : Integer);
    BEGIN
      HoldLastResonseID := PreviousResponseID;
      IF WorkflowIsHourAccountingWorkflow(Workflow.Code) THEN
        HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling4PS.UpdateStatusAfterApproveHourLine4PSCode,HoldLastResonseID);
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.SendApprovalRequestForApprovalCode,HoldLastResonseID);
      WorkflowSetup.SetNextStep(Workflow,HoldLastResonseID,SendApprovalRequestResponseID);
    END;

    LOCAL PROCEDURE Insert4PSResponseForRejectApprovalEvent@1100528235(Workflow@1100528200 : Record 1501;PreviousResponseID@1100528202 : Integer;VAR HoldLastResonseID@1100528201 : Integer);
    BEGIN
      HoldLastResonseID := PreviousResponseID;
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.GetApprovalCommentCode,HoldLastResonseID);
      IF WorkflowIsHourAccountingWorkflow(Workflow.Code) THEN
        HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling4PS.UpdateStatusAfterRejectHourLine4PSCode,HoldLastResonseID)
      ELSE
        HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling4PS.PostponeApprovalRequestCode,HoldLastResonseID);
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.SendApprovalRequestForApprovalCode,HoldLastResonseID);
      WorkflowSetup.SetNextStep(Workflow,HoldLastResonseID,SendApprovalRequestResponseID);
    END;

    LOCAL PROCEDURE Insert4PSResponseForRejectHourApprovalEvent@1100528205(Workflow@1100528200 : Record 1501;PreviousResponseID@1100528202 : Integer;VAR HoldLastResonseID@1100528201 : Integer);
    BEGIN
      HoldLastResonseID := PreviousResponseID;
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.GetApprovalCommentCode,HoldLastResonseID);
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling4PS.UpdateStatusAfterRejectHourLine4PSCode,HoldLastResonseID);
    END;

    LOCAL PROCEDURE Insert4PSResponseForRequestCanceledEvent@1100528251(Workflow@1100528200 : Record 1501;PreviousResponseID@1100528202 : Integer;VAR HoldLastResonseID@1100528201 : Integer);
    BEGIN
      HoldLastResonseID := PreviousResponseID;
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.GetApprovalCommentCode,HoldLastResonseID);
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.CancelAllApprovalRequestsCode,HoldLastResonseID);
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.AllowRecordUsageCode,HoldLastResonseID);
      IF WorkflowIsPostedPurchaseDocumentWorkflow(Workflow.Code) THEN
        HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling4PS.RemoveDocumentOnHoldCode,HoldLastResonseID)
      ELSE
        HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.OpenDocumentCode,HoldLastResonseID)
    END;

    LOCAL PROCEDURE Insert4PSResponseForApproveAndDelegateEvent@1100528252(Workflow@1100528200 : Record 1501;PreviousResponseID@1100528202 : Integer;VAR HoldLastResonseID@1100528201 : Integer);
    BEGIN
      HoldLastResonseID := PreviousResponseID;
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.GetApprovalCommentCode,HoldLastResonseID);
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling4PS.ApproveAndDelegateRequest4PSCode,HoldLastResonseID);
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.SendApprovalRequestForApprovalCode,HoldLastResonseID);
      WorkflowSetup.SetNextStep(Workflow,HoldLastResonseID,SendApprovalRequestResponseID);
    END;

    LOCAL PROCEDURE Insert4PSResponseForDelegateAndSendBackEvent@1100528253(Workflow@1100528200 : Record 1501;PreviousResponseID@1100528202 : Integer;VAR HoldLastResonseID@1100528201 : Integer);
    BEGIN
      HoldLastResonseID := PreviousResponseID;
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.GetApprovalCommentCode,HoldLastResonseID);
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling4PS.DelegateAndSendBackRequest4PSCode,HoldLastResonseID);
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.SendApprovalRequestForApprovalCode,HoldLastResonseID);
      WorkflowSetup.SetNextStep(Workflow,HoldLastResonseID,SendApprovalRequestResponseID);
    END;

    LOCAL PROCEDURE Insert4PSResponseForDelegateWithoutApprovalEvent@1100528263(Workflow@1100528200 : Record 1501;PreviousResponseID@1100528202 : Integer;VAR HoldLastResonseID@1100528201 : Integer);
    BEGIN
      HoldLastResonseID := PreviousResponseID;
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.GetApprovalCommentCode,HoldLastResonseID);
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling4PS.DelegateWithoutApprovalRequest4PSCode,HoldLastResonseID);
      HoldLastResonseID := WorkflowSetup.InsertResponseStep(Workflow,WorkflowResponseHandling.SendApprovalRequestForApprovalCode,HoldLastResonseID);
      WorkflowSetup.SetNextStep(Workflow,HoldLastResonseID,SendApprovalRequestResponseID);
    END;

    PROCEDURE GetWorkflowTemplateCode4PS@1100529500(WorkflowCode@1000 : Code[17]) : Code[20];
    BEGIN
      EXIT('4PS-' + WorkflowCode);
    END;

    LOCAL PROCEDURE SetWorkflowStepArgument@1100529508(VAR WorkflowStepArgument@1100529500 : Record 1523);
    BEGIN
      WorkflowSetup.PopulateWorkflowStepArgument(WorkflowStepArgument,
        WorkflowStepArgument."Approver Type"::"Consent Rules",WorkflowStepArgument."Approver Limit Type"::"Approver Chain",
        0,'',BlankDateFormula,FALSE);
    END;

    PROCEDURE BuildPurchInvHeaderConditions@64(InvoiceApproved@1100529500 : Boolean) : Text;
    VAR
      PurchInvHeader@1000 : Record 122;
      PurchInvLine@1001 : Record 123;
    BEGIN
      PurchInvHeader.SETRANGE("Invoice Approved",InvoiceApproved);
      EXIT(STRSUBSTNO(PurchInvHeaderConditionTxt,WorkflowSetup.Encode(PurchInvHeader.GETVIEW(FALSE)),WorkflowSetup.Encode(PurchInvLine.GETVIEW(FALSE))));
    END;

    PROCEDURE BuildPurchCrMemoHeaderConditions@1100529501(CrMemoApproved@1100529500 : Boolean) : Text;
    VAR
      PurchCrMemoHdr@1000 : Record 124;
      PurchCrMemoLine@1001 : Record 125;
    BEGIN
      PurchCrMemoHdr.SETRANGE("Credit Memo Approved",CrMemoApproved);
      EXIT(STRSUBSTNO(PurchCrMemoHeaderConditionTxt,WorkflowSetup.Encode(PurchCrMemoHdr.GETVIEW(FALSE)),WorkflowSetup.Encode(PurchCrMemoLine.GETVIEW(FALSE))));
    END;

    PROCEDURE BuildPurchaseHeaderConditions@1100528211(DocumentType@1100529500 : Option) : Text;
    VAR
      PurchaseHeader@1000 : Record 38;
      PurchaseLine@1001 : Record 39;
      WorkFlowSetup4PSConstruct@1100525000 : Record 11229316;
    BEGIN
      IF NOT WorkFlowSetup4PSConstruct.GET THEN
        WorkFlowSetup4PSConstruct.INIT;

      PurchaseHeader.SETRANGE("Document Type",DocumentType);
      IF NOT WorkFlowSetup4PSConstruct."Migration Process" THEN
        PurchaseHeader.SETRANGE(Status,PurchaseHeader.Status::Open);

      EXIT(STRSUBSTNO(PurchaseHeaderConditionTxt,WorkflowSetup.Encode(PurchaseHeader.GETVIEW(FALSE)),WorkflowSetup.Encode(PurchaseLine.GETVIEW(FALSE))));
    END;

    PROCEDURE BuildPurchaseRequisitionConditions@1100529203() : Text;
    VAR
      PurchaseRequisition@1000 : Record 11229330;
      PurchaseRequisitionLine@1001 : Record 11229331;
      WorkFlowSetup4PSConstruct@1100525000 : Record 11229316;
    BEGIN
      IF NOT WorkFlowSetup4PSConstruct.GET THEN
        WorkFlowSetup4PSConstruct.INIT;

      IF NOT WorkFlowSetup4PSConstruct."Migration Process" THEN
        PurchaseRequisition.SETRANGE(Status,PurchaseRequisition.Status::Open);
      EXIT(STRSUBSTNO(PurchaseRequisitionConditionTxt,WorkflowSetup.Encode(PurchaseRequisition.GETVIEW(FALSE)),WorkflowSetup.Encode(PurchaseRequisitionLine.GETVIEW(FALSE))));
    END;

    PROCEDURE BuildProjectPurchaseActionConditions@1100529205() : Text;
    VAR
      ProjectPurchaseAction@1000 : Record 11012026;
      WorkFlowSetup4PSConstruct@1100525000 : Record 11229316;
    BEGIN
      IF NOT WorkFlowSetup4PSConstruct.GET THEN
        WorkFlowSetup4PSConstruct.INIT;

      IF NOT WorkFlowSetup4PSConstruct."Migration Process" THEN
        ProjectPurchaseAction.SETRANGE(Status,ProjectPurchaseAction.Status::Concept);
      EXIT(STRSUBSTNO(ProjectPurchaseActionConditionTxt,WorkflowSetup.Encode(ProjectPurchaseAction.GETVIEW(FALSE))));
    END;

    PROCEDURE BuildAdviceOrderLineConditions@1100529210() : Text;
    VAR
      AdviceOrderLine@1000 : Record 11012055;
      WorkFlowSetup4PSConstruct@1100525000 : Record 11229316;
    BEGIN
      IF NOT WorkFlowSetup4PSConstruct.GET THEN
        WorkFlowSetup4PSConstruct.INIT;

      IF NOT WorkFlowSetup4PSConstruct."Migration Process" THEN
        AdviceOrderLine.SETRANGE("Open Approval Entry",FALSE);
      EXIT(STRSUBSTNO(AdviceOrderLineConditionTxt,WorkflowSetup.Encode(AdviceOrderLine.GETVIEW(FALSE))));
    END;

    LOCAL PROCEDURE WorkflowIsPostedPurchaseDocumentWorkflow@1100528214(WorkflowCode@1100528200 : Code[20]) : Boolean;
    VAR
      StrippedCode@1100525000 : Code[20];
    BEGIN
      StrippedCode := COPYSTR(WorkflowCode,(STRLEN(WorkflowCode) - STRLEN(PurchInvHeaderAApprWorkflowCode4PSTxt)+1));

      EXIT((StrippedCode = PurchInvHeaderAApprWorkflowCode4PSTxt) OR
           (StrippedCode = PurchInvHeaderNApprWorkflowCode4PSTxt) OR
           (StrippedCode = PurchCrMemoAApprWorkflowCode4PSTxt) OR
           (StrippedCode = PurchCrMemoNApprWorkflowCode4PSTxt));
    END;

    LOCAL PROCEDURE WorkflowIsHourAccountingWorkflow@1100528217(WorkflowCode@1100528200 : Code[20]) : Boolean;
    BEGIN
      EXIT((WorkflowCode = GetWorkflowTemplateCode4PS(HourAccountingLineApprWorkflowCode4PSTxt)) OR
           (WorkflowCode = GetWorkflowTemplateCode4PS(SiteMngmntHoursLineApprWorkflowCode4PSTxt)));
    END;

    PROCEDURE GetPurchInvHeaderWorkFlowCode@1100525034(Approved@1100525002 : Boolean;OldApprovalCode@1100525001 : Code[20]) : Code[20];
    BEGIN
      IF OldApprovalCode <> '' THEN
        EXIT(OldApprovalCode)
      ELSE
        IF Approved THEN
          EXIT(WorkflowSetup.GetWorkflowCode(PurchInvHeaderAApprWorkflowCode4PSTxt))
        ELSE
          EXIT(WorkflowSetup.GetWorkflowCode(PurchInvHeaderNApprWorkflowCode4PSTxt));
    END;

    PROCEDURE GetPurchCrMemoHeaderWorkFlowCode@1100525120(Approved@1100525002 : Boolean;OldApprovalCode@1100525001 : Code[20]) : Code[20];
    BEGIN
      IF OldApprovalCode <> '' THEN
        EXIT(OldApprovalCode)
      ELSE
        IF Approved THEN
          EXIT(WorkflowSetup.GetWorkflowCode(PurchCrMemoAApprWorkflowCode4PSTxt))
        ELSE
          EXIT(WorkflowSetup.GetWorkflowCode(PurchCrMemoNApprWorkflowCode4PSTxt));
    END;

    PROCEDURE GetPurchInvHeaderWorkFlowDescription@1100525083(Approved@1100525002 : Boolean) : Text[100];
    BEGIN
      IF Approved THEN
        EXIT(PurchInvHeaderAApprWorkflowDesc4PSTxt)
      ELSE
        EXIT(PurchInvHeaderNApprWorkflowDesc4PSTxt);
    END;

    PROCEDURE GetPurchCrMemoHeaderWorkFlowDescription@1100525118(Approved@1100525002 : Boolean) : Text[100];
    BEGIN
      IF Approved THEN
        EXIT(PurchCrMemoAApprWorkflowDesc4PSTxt)
      ELSE
        EXIT(PurchCRMemoNApprWorkflowDesc4PSTxt);
    END;

    PROCEDURE GetRecID@1100525071(variant@1100525000 : Variant;VAR ApprovalEntry@1100525001 : Record 454);
    VAR
      RecRef@1100525002 : RecordRef;
    BEGIN
      RecRef.GETTABLE(variant);
      ApprovalEntry."Table ID" := RecRef.NUMBER;
      ApprovalEntry."Record ID to Approve" := RecRef.RECORDID;
    END;

    PROCEDURE InsertWorkflow@1100525013(VAR Workflow@1100525000 : Record 1501;WorkflowIsTemplate@1100525001 : Boolean;WorkflowCode@1100525002 : Code[20];WorkflowDescription@1100525003 : Text;CategoryTxt@1100525004 : Text);
    BEGIN
      IF WorkflowIsTemplate THEN
        InsertWorkflowTemplate4PS(Workflow,WorkflowCode,WorkflowDescription,CategoryTxt)
      ELSE
        WorkflowSetup.InsertWorkflow(Workflow,WorkflowSetup.GetWorkflowCode(WorkflowCode),WorkflowDescription,CategoryTxt);
    END;

    LOCAL PROCEDURE UpdateWorkflow@1100525004(Workflow@1100525000 : Record 1501;WorkflowIsTemplate@1100525001 : Boolean);
    BEGIN
      IF WorkflowIsTemplate THEN
        WorkflowSetup.MarkWorkflowAsTemplate(Workflow)
      ELSE
        SetWorkflowEnabled(Workflow.Code,TRUE);
    END;

    PROCEDURE DeleteNewApprovalEntries@1100525014(FromEntryNo@1100525003 : Integer) : Boolean;
    VAR
      ApprovalEntry@1100525002 : Record 454;
    BEGIN
      ApprovalEntry.SETFILTER("Entry No.",'%1..',FromEntryNo);
      ApprovalEntry.DELETEALL(TRUE);
    END;

    PROCEDURE AddErrorMessage@1100525070(DocumentTypeDesc@1100525001 : Text;DocumentNo@1100525002 : Code[20];TypeDesc@1100525000 : Text;TypeNoDesc@1100525003 : Text);
    VAR
      WorkflowInitErrorMessage@1100525004 : Record 11229366;
    BEGIN
      WorkflowInitErrorMessage.INIT;
      WorkflowInitErrorMessage."Entry No." := 0;
      WorkflowInitErrorMessage.Text := COPYSTR(GETLASTERRORTEXT,1,250);
      WorkflowInitErrorMessage."Document Type Description" := DocumentTypeDesc;
      WorkflowInitErrorMessage."Document No." := DocumentNo;
      WorkflowInitErrorMessage."Type Description" := TypeNoDesc;
      WorkflowInitErrorMessage."Type No Description" := TypeDesc;
      WorkflowInitErrorMessage.INSERT(TRUE);
    END;

    PROCEDURE SetWorkflowEnabled@1100529200(Code@1100525001 : Code[20];EnabledBln@1100529200 : Boolean);
    VAR
      Workflow@1100525000 : Record 1501;
    BEGIN
      IF Workflow.GET(Code) THEN BEGIN
        Workflow.Enabled := EnabledBln;
        Workflow.MODIFY;
      END;
    END;

    LOCAL PROCEDURE "//Release MIGRATE: TO REL012"@1100525009();
    BEGIN
    END;

    PROCEDURE GetCategoryFromWorkflowCode@1100525029(WorkflowCode@1100525000 : Code[20];VAR CategoryCde@1100525001 : Code[20]);
    BEGIN
      CategoryCde := DELCHR(WorkflowCode,'=','01234567890-');
    END;

    LOCAL PROCEDURE SetWorkFlowSetup4PSConstruct@1100529204();
    VAR
      WorkFlowSetup4PSConstruct@1100529200 : Record 11229316;
    BEGIN
      IF NOT WorkFlowSetup4PSConstruct.GET THEN BEGIN
        WorkFlowSetup4PSConstruct.INIT;
        WorkFlowSetup4PSConstruct.INSERT;
      END;
      WorkFlowSetup4PSConstruct."Migration Process" := FALSE;  //Could be yes after migration
      WorkFlowSetup4PSConstruct.MODIFY;
    END;

    PROCEDURE InsertVendorBankAccountIBANChangeApprovalWorkflow@143(WorkflowIsTemplate@1100529600 : Boolean);
    VAR
      Workflow@1000 : Record 1501;
    BEGIN
      InsertWorkflow(Workflow,WorkflowIsTemplate, VendorBankAccIBANCnangeApprWorkflowCodeTxt, VendorBankAccIBANChangeApprWorkflowDescTxt, PurchCategory4PSCde);
      InsertVendorBankAccountIBANChangeApprovalWorkflowDetails(Workflow);
      UpdateWorkflow(Workflow, WorkflowIsTemplate);
    END;

    LOCAL PROCEDURE InsertVendorBankAccountIBANChangeApprovalWorkflowDetails@141(VAR Workflow@1000 : Record 1501);
    VAR
      WorkflowStepArgument@1004 : Record 1523;
      VendorBankAccount@1100529605 : Record 288;
      EventID@1100529604 : Integer;
      PreviousResponseID@1100529603 : Integer;
    BEGIN
      WorkflowSetup.PopulateWorkflowStepArgument(WorkflowStepArgument,
        WorkflowStepArgument."Approver Type"::Approver, WorkflowStepArgument."Approver Limit Type"::"Direct Approver",
        0, '', BlankDateFormula, TRUE);

      SendApprovalRequestResponseID := 0;
      EventID := WorkflowSetup.InsertEntryPointEventStep(Workflow, WorkflowEventHandling4PS.RunWorkflowOnVendorBankAccountChangedCode);
      WorkflowSetup.InsertEventRule(EventID, VendorBankAccount.FIELDNO(IBAN), 2);

      EventID := WorkflowSetup.InsertResponseStep(Workflow, WorkflowResponseHandling.RevertValueForFieldCode, EventID);
      WorkflowSetup.InsertChangeRecValueArgument(EventID, DATABASE::"Vendor Bank Account", VendorBankAccount.FIELDNO(IBAN));

      EventID := WorkflowSetup.InsertResponseStep(Workflow, WorkflowResponseHandling.CreateApprovalRequestsCode, EventID);
      WorkflowSetup.InsertApprovalArgument(EventID,
        WorkflowStepArgument."Approver Type", WorkflowStepArgument."Approver Limit Type",
        WorkflowStepArgument."Workflow User Group Code", WorkflowStepArgument."Approver User ID",
        WorkflowStepArgument."Due Date Formula", TRUE);
      SendApprovalRequestResponseID := WorkflowSetup.InsertResponseStep(Workflow, WorkflowResponseHandling.SendApprovalRequestForApprovalCode, EventID);
      WorkflowSetup.InsertNotificationArgument(SendApprovalRequestResponseID, '', 0, '');

      EventID := WorkflowSetup.InsertEventStep(Workflow, WorkflowEventHandling.RunWorkflowOnApproveApprovalRequestCode, SendApprovalRequestResponseID);
      WorkflowSetup.InsertEventArgument(EventID, WorkflowSetup.BuildNoPendingApprovalsConditions);
      EventID := WorkflowSetup.InsertResponseStep(Workflow, WorkflowResponseHandling.ApplyNewValuesCode, EventID);

      EventID := WorkflowSetup.InsertEventStep(Workflow, WorkflowEventHandling.RunWorkflowOnApproveApprovalRequestCode, SendApprovalRequestResponseID);
      WorkflowSetup.InsertEventArgument(EventID, WorkflowSetup.BuildPendingApprovalsConditions);
      EventID := WorkflowSetup.InsertResponseStep(Workflow, WorkflowResponseHandling.SendApprovalRequestForApprovalCode, EventID);
      WorkflowSetup.SetNextStep(Workflow, EventID, SendApprovalRequestResponseID);

      EventID := WorkflowSetup.InsertEventStep(Workflow, WorkflowEventHandling.RunWorkflowOnRejectApprovalRequestCode, SendApprovalRequestResponseID);
      EventID := WorkflowSetup.InsertResponseStep(Workflow, WorkflowResponseHandling.RejectAllApprovalRequestsCode, EventID);
      WorkflowSetup.InsertNotificationArgument(EventID, '', WorkflowStepArgument."Link Target Page", '');

      EventID := WorkflowSetup.InsertEventStep(Workflow, WorkflowEventHandling4PS.RunWorkflowOn4PSApproveAndDelegateRequestCode, SendApprovalRequestResponseID);
      Insert4PSResponseForApproveAndDelegateEvent(Workflow, EventID, PreviousResponseID);

      EventID := WorkflowSetup.InsertEventStep(Workflow, WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateAndSendBackRequestCode, SendApprovalRequestResponseID);
      Insert4PSResponseForDelegateAndSendBackEvent(Workflow, EventID, PreviousResponseID);

      EventID := WorkflowSetup.InsertEventStep(Workflow, WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateWithoutApprovalRequestCode, SendApprovalRequestResponseID);
      Insert4PSResponseForDelegateWithoutApprovalEvent(Workflow, EventID, PreviousResponseID);
    END;

    BEGIN
    END.
  }
}

