OBJECT Codeunit 11012877 Maintenance Plan Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE FillMaintenancePlanBuffer@1100528800(ICompressionLevel@1100528800 : 'Service Contract,Service Location,Service Cluster,Service Object,Maintenance Scheme';ICustomerFilter@1100528801 : Text[1024];IContractFilter@1100528802 : Text[1024];IContractGroupFilter@1100528803 : Text[1024];IContractStatusFilter@1100525000 : Text[1024];IManagerFilter@1100528804 : Text[1024];IDim1CodeFilter@1100528805 : Text[1024];VAR OTmpMaintenancePlanBuffer@1100528807 : TEMPORARY Record 11072235);
    VAR
      ServiceContract@1100528810 : Record 11012812;
    BEGIN
      OTmpMaintenancePlanBuffer.DELETEALL;

      ServiceContract.SETFILTER("Customer No.", ICustomerFilter);
      ServiceContract.SETFILTER("No.", IContractFilter);
      ServiceContract.SETFILTER("Contract Manager", IManagerFilter);
      ServiceContract.SETFILTER("Contract Group", IContractGroupFilter);
      ServiceContract.SETFILTER(Status, IContractStatusFilter);
      ServiceContract.SETFILTER("Global Dimension 1 Code", IDim1CodeFilter);
      IF ICompressionLevel = ICompressionLevel::"Service Contract" THEN
        ServiceContract.SETFILTER("Ending Date", '%1|>%2', 0D, TODAY);

      IF ServiceContract.FINDSET THEN
        REPEAT
          CASE ICompressionLevel OF
            ICompressionLevel::"Service Contract":
              AddMaintPlanBufferLinesBySCont(ServiceContract."No.", OTmpMaintenancePlanBuffer);
            ICompressionLevel::"Service Location":
              AddMaintPlanBufferLinesBySLoc(ServiceContract."No.", OTmpMaintenancePlanBuffer);
            ICompressionLevel::"Service Cluster":
              AddMaintPlanBufferLinesBySCluster(ServiceContract."No.", OTmpMaintenancePlanBuffer);
            ICompressionLevel::"Service Object":
              AddMaintPlanBufferLinesBySObj(ServiceContract."No.", OTmpMaintenancePlanBuffer);
            ICompressionLevel::"Maintenance Scheme":
              AddMaintPlanBufferLinesByMS(ServiceContract."No.", OTmpMaintenancePlanBuffer);
          END;
        UNTIL ServiceContract.NEXT = 0;
    END;

    PROCEDURE AddMaintPlanBufferLinesBySCont@1100528802(IServiceContract@1100528801 : Code[20];VAR OTmpMaintenancePlanBuffer@1100528800 : TEMPORARY Record 11072235);
    VAR
      ContractObject@1100527550 : Record 11071702;
    BEGIN
      ContractObject.SETRANGE("Service Contract No.", IServiceContract);
      ContractObject.SETFILTER("Ending Date", '%1|>%2', 0D, TODAY);
      IF NOT ContractObject.ISEMPTY THEN
        AddMaintPlanBufferLine(IServiceContract, '', '', '', '', OTmpMaintenancePlanBuffer);
    END;

    PROCEDURE AddMaintPlanBufferLinesBySLoc@1100528803(IServiceContract@1100528801 : Code[20];VAR OTmpMaintenancePlanBuffer@1100528800 : TEMPORARY Record 11072235);
    VAR
      ContractObject@1100528802 : Record 11071702;
    BEGIN
      ContractObject.SETRANGE("Service Contract No.", IServiceContract);
      ContractObject.SETFILTER("Service Location No.", '<>%1', '');
      ContractObject.SETFILTER("Ending Date", '%1|>%2', 0D, TODAY);
      IF ContractObject.FINDSET THEN
        REPEAT
          AddMaintPlanBufferLine(IServiceContract, ContractObject."Service Location No.", '', '', '', OTmpMaintenancePlanBuffer);
        UNTIL ContractObject.NEXT = 0;
    END;

    PROCEDURE AddMaintPlanBufferLinesBySCluster@1100528600(IServiceContract@1100528801 : Code[20];VAR OTmpMaintenancePlanBuffer@1100528800 : TEMPORARY Record 11072235);
    VAR
      ServiceContract@1100528600 : Record 11012812;
      ServiceCluster@1100528802 : Record 11071742;
      ContractObjectMaintenance@1100527300 : Record 11071692;
    BEGIN
      IF NOT ServiceContract.GET(IServiceContract) THEN
        ServiceContract.INIT;
      IF ServiceContract."Use Contract Clusters" THEN BEGIN
        ServiceCluster.SETRANGE(Type, ServiceCluster.Type::Contract);
        ServiceCluster.SETRANGE("Type Code", IServiceContract)
      END ELSE BEGIN
        ServiceCluster.SETRANGE(Type, ServiceCluster.Type::" ");
        ServiceCluster.SETRANGE("Type Code", '');
      END;
      ServiceCluster.SETRANGE("Source Type", ServiceCluster."Source Type"::" ");
      IF ServiceCluster.FINDSET THEN
        REPEAT
          ContractObjectMaintenance.RESET;
          ContractObjectMaintenance.SETRANGE("Service Contract No.", IServiceContract);
          ContractObjectMaintenance.SETRANGE(Cluster, ServiceCluster.Code);
          ContractObjectMaintenance.SETFILTER("Object Ending Date", '%1|>%2', 0D, TODAY);
          IF NOT ContractObjectMaintenance.ISEMPTY THEN BEGIN
            AddMaintPlanBufferLine(IServiceContract, '', ServiceCluster.Code, '', '', OTmpMaintenancePlanBuffer);
            OTmpMaintenancePlanBuffer."Service Cluster Description" := ServiceCluster.Description;
            OTmpMaintenancePlanBuffer.MODIFY;
          END;
        UNTIL ServiceCluster.NEXT = 0;
    END;

    PROCEDURE AddMaintPlanBufferLinesBySObj@1100528804(IServiceContract@1100528801 : Code[20];VAR OTmpMaintenancePlanBuffer@1100528800 : TEMPORARY Record 11072235);
    VAR
      ContractObject@1100528802 : Record 11071702;
    BEGIN
      ContractObject.SETRANGE("Service Contract No.", IServiceContract);
      ContractObject.SETFILTER("Service Object No.", '<>%1', '');
      ContractObject.SETFILTER("Ending Date", '%1|>%2', 0D, TODAY);
      IF ContractObject.FINDSET THEN
        REPEAT
          AddMaintPlanBufferLine(
            IServiceContract,
            ContractObject."Service Location No.",
            '',
            ContractObject."Service Object No.",
            '',
            OTmpMaintenancePlanBuffer);
        UNTIL ContractObject.NEXT = 0;
    END;

    PROCEDURE AddMaintPlanBufferLinesByMS@1100528805(IServiceContract@1100528801 : Code[20];VAR OTmpMaintenancePlanBuffer@1100528800 : TEMPORARY Record 11072235);
    VAR
      ContractObjectMaintenance@1100528802 : Record 11071692;
    BEGIN
      ContractObjectMaintenance.SETRANGE("Service Contract No.", IServiceContract);
      ContractObjectMaintenance.SETFILTER("Maintenance Scheme", '<>%1', '');
      ContractObjectMaintenance.SETFILTER("Object Ending Date", '%1|>%2', 0D, TODAY);
      IF ContractObjectMaintenance.FINDSET THEN
        REPEAT
          AddMaintPlanBufferLine(
            IServiceContract,
            ContractObjectMaintenance."Service Location No.",
            '',
            ContractObjectMaintenance."Object No.",
            ContractObjectMaintenance."Maintenance Scheme",
            OTmpMaintenancePlanBuffer);
        UNTIL ContractObjectMaintenance.NEXT = 0;
    END;

    PROCEDURE AddMaintPlanBufferLine@1100528806(IServiceContract@1100528800 : Code[20];IServiceLocation@1100528801 : Code[20];IServiceCluster@1100528600 : Code[20];IServiceObject@1100528802 : Code[20];IMaintenanceScheme@1100528803 : Code[20];VAR OTmpMaintenancePlanBuffer@1100528804 : TEMPORARY Record 11072235);
    BEGIN
      IF NOT OTmpMaintenancePlanBuffer.GET(IServiceContract, IServiceLocation, IServiceCluster, IServiceObject, IMaintenanceScheme) THEN BEGIN
        OTmpMaintenancePlanBuffer.INIT;
        OTmpMaintenancePlanBuffer."Service Contract No." := IServiceContract;
        OTmpMaintenancePlanBuffer."Service Location No." := IServiceLocation;
        OTmpMaintenancePlanBuffer."Service Cluster" := IServiceCluster;
        OTmpMaintenancePlanBuffer."Object No." := IServiceObject;
        OTmpMaintenancePlanBuffer."Maintenance Scheme Code" := IMaintenanceScheme;
        OTmpMaintenancePlanBuffer.INSERT;
      END;
    END;

    PROCEDURE UpdateContractArrangements@1100528801(VAR IMaintenancePlanBuffer@1100528800 : Record 11072235;IUntilDate@1100528801 : Date);
    VAR
      TmpServiceContract@1100528802 : TEMPORARY Record 11012812;
      ContractObject@1100528803 : Record 11071702;
      ContractObjectMaintenance@1100528804 : Record 11071692;
    BEGIN
      IF NOT IMaintenancePlanBuffer.FINDSET THEN
        EXIT;
      REPEAT
        IF NOT TmpServiceContract.GET(IMaintenancePlanBuffer."Service Contract No.") THEN BEGIN
          TmpServiceContract."No." := IMaintenancePlanBuffer."Service Contract No.";
          TmpServiceContract.INSERT;
        END;
      UNTIL IMaintenancePlanBuffer.NEXT = 0;

      IF TmpServiceContract.FINDSET THEN
        REPEAT
          ContractObject.SETRANGE("Service Contract No.", TmpServiceContract."No.");
          ContractObject.SETFILTER("Ending Date", '%1|>%2', 0D, TODAY);
          IF ContractObject.FINDSET THEN
            REPEAT
              ContractObjectMaintenance.SETRANGE("Service Contract No.", ContractObject."Service Contract No.");
             ContractObjectMaintenance.SETRANGE("Object No.", ContractObject."Service Object No.");
              IF ContractObjectMaintenance.FINDSET THEN
                REPEAT
                  ContractObjectMaintenance.UpdateServiceContractArr(IUntilDate, FALSE, FALSE, FALSE);
                UNTIL ContractObjectMaintenance.NEXT = 0;
            UNTIL ContractObject.NEXT = 0;
        UNTIL TmpServiceContract.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

