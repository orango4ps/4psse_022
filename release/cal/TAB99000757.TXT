OBJECT Table 99000757 Calendar Entry
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.05;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Kalenderposten;
               ENU=Calendar Entry;
               NLD=Agendapost;
               NOR=Kalenderpost;
               SVE=Kalendertransaktion];
    LookupPageID=Page99000759;
    DrillDownPageID=Page99000759;
  }
  FIELDS
  {
    { 1   ;   ;Capacity Type       ;Option        ;OnValidate=BEGIN
                                                                "No." := '';
                                                                "Work Center No." := '';
                                                                "Work Center Group Code" := '';
                                                              END;

                                                   CaptionML=[DEU=Kapazit„tsart;
                                                              ENU=Capacity Type;
                                                              NLD=Capaciteitssoort;
                                                              NOR=Kapasitetstype;
                                                              SVE=Kapacitetstyp];
                                                   OptionCaptionML=[DEU=Arbeitsplatzgruppe,Arbeitsplatz;
                                                                    ENU=Work Center,Machine Center;
                                                                    NLD=Afdeling,Bewerkingsplaats;
                                                                    NOR=Arbeidssenter,Maskinsenter;
                                                                    SVE=Produktionsgrupp,Maskingrupp];
                                                   OptionString=Work Center,Machine Center }
    { 2   ;   ;No.                 ;Code20        ;TableRelation=IF (Capacity Type=CONST(Work Center)) "Work Center"
                                                                 ELSE IF (Capacity Type=CONST(Machine Center)) "Machine Center";
                                                   OnValidate=BEGIN
                                                                IF "No." = '' THEN
                                                                  EXIT;

                                                                CASE "Capacity Type" OF
                                                                  "Capacity Type"::"Work Center":
                                                                    BEGIN
                                                                      WorkCenter.GET("No.");
                                                                      WorkCenter.TESTFIELD("Work Center Group Code");
                                                                      "Work Center No." := WorkCenter."No.";
                                                                      "Work Center Group Code" := WorkCenter."Work Center Group Code";
                                                                      Efficiency := WorkCenter.Efficiency;
                                                                      IF NOT WorkCenter."Consolidated Calendar" THEN
                                                                        Capacity := WorkCenter.Capacity;
                                                                    END;
                                                                  "Capacity Type"::"Machine Center":
                                                                    BEGIN
                                                                      MachineCenter.GET("No.");
                                                                      MachineCenter.TESTFIELD("Work Center No.");
                                                                      WorkCenter.GET(MachineCenter."Work Center No.");
                                                                      WorkCenter.TESTFIELD("Work Center Group Code");
                                                                      "Work Center No." := WorkCenter."No.";
                                                                      "Work Center Group Code" := WorkCenter."Work Center Group Code";
                                                                      Efficiency := MachineCenter.Efficiency;
                                                                      Capacity := MachineCenter.Capacity;
                                                                    END;
                                                                END;
                                                                IF "Ending Time" <> 0T THEN
                                                                  VALIDATE("Ending Time");
                                                              END;

                                                   CaptionML=[DEU=Nr.;
                                                              ENU=No.;
                                                              NLD=Nr.;
                                                              NOR=Nr.;
                                                              SVE=Nr];
                                                   NotBlank=Yes }
    { 4   ;   ;Date                ;Date          ;OnValidate=BEGIN
                                                                CheckRedundancy;
                                                              END;

                                                   CaptionML=[DEU=Datum;
                                                              ENU=Date;
                                                              NLD=Datum;
                                                              NOR=Dato;
                                                              SVE=Datum];
                                                   NotBlank=Yes }
    { 5   ;   ;Work Shift Code     ;Code10        ;TableRelation="Work Shift";
                                                   OnValidate=BEGIN
                                                                CheckRedundancy;
                                                              END;

                                                   CaptionML=[DEU=Schichtcode;
                                                              ENU=Work Shift Code;
                                                              NLD=Ploeg;
                                                              NOR=Arbeidsskiftkode;
                                                              SVE=Arbetsskiftskod];
                                                   NotBlank=Yes }
    { 6   ;   ;Starting Time       ;Time          ;OnValidate=BEGIN
                                                                IF ("Ending Time" = 0T) OR
                                                                   ("Ending Time" < "Starting Time")
                                                                THEN BEGIN
                                                                  CalendarEntry.RESET;
                                                                  CalendarEntry.SETRANGE("Capacity Type","Capacity Type");
                                                                  CalendarEntry.SETRANGE("No.","No.");
                                                                  CalendarEntry.SETRANGE(Date,Date);
                                                                  CalendarEntry.SETRANGE("Starting Time","Starting Time",235959T);
                                                                  IF CalendarEntry.FIND('-') THEN
                                                                    "Ending Time" := CalendarEntry."Starting Time"
                                                                  ELSE
                                                                    "Ending Time" := 235959T;
                                                                END;
                                                                VALIDATE("Ending Time");
                                                              END;

                                                   CaptionML=[DEU=Startzeit;
                                                              ENU=Starting Time;
                                                              NLD=Begintijd;
                                                              NOR=Starttidspunkt;
                                                              SVE=Starttid];
                                                   NotBlank=Yes }
    { 7   ;   ;Ending Time         ;Time          ;OnValidate=BEGIN
                                                                IF ("Ending Time" < "Starting Time") AND
                                                                   ("Ending Time" <> 000000T)
                                                                THEN
                                                                  ERROR(Text000,FIELDCAPTION("Ending Time"),FIELDCAPTION("Starting Time"));

                                                                CalculateCapacity;

                                                                CheckRedundancy;

                                                                UpdateDatetime;
                                                              END;

                                                   CaptionML=[DEU=Endzeit;
                                                              ENU=Ending Time;
                                                              NLD=Eindtijd;
                                                              NOR=Sluttidspunkt;
                                                              SVE=Sluttid];
                                                   NotBlank=Yes }
    { 8   ;   ;Work Center No.     ;Code20        ;TableRelation="Work Center";
                                                   CaptionML=[DEU=Arbeitsplatzgruppennr.;
                                                              ENU=Work Center No.;
                                                              NLD=Afdelingsnr.;
                                                              NOR=Arbeidssenternr.;
                                                              SVE=Produktionsgruppsnr];
                                                   Editable=No }
    { 9   ;   ;Work Center Group Code;Code10      ;TableRelation="Work Center Group";
                                                   CaptionML=[DEU=Abteilungscode;
                                                              ENU=Work Center Group Code;
                                                              NLD=Afdelingsgroepcode;
                                                              NOR=Arbeidssentergruppekode;
                                                              SVE=Produktionsavd.kod];
                                                   Editable=No }
    { 10  ;   ;Capacity (Total)    ;Decimal       ;CaptionML=[DEU=Kapazit„t (Total);
                                                              ENU=Capacity (Total);
                                                              NLD=Capaciteit (Totaal);
                                                              NOR=Kapasitet (total);
                                                              SVE=Kapacitet (total)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 11  ;   ;Capacity (Effective);Decimal       ;CaptionML=[DEU=Kapazit„t (effektiv);
                                                              ENU=Capacity (Effective);
                                                              NLD=Capaciteit (Effectief);
                                                              NOR=Kapasitet (effektiv);
                                                              SVE=Kapacitet (effektiv)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 20  ;   ;Efficiency          ;Decimal       ;OnValidate=BEGIN
                                                                "Capacity (Effective)" := ROUND("Capacity (Total)" * Efficiency / 100,0.001);
                                                              END;

                                                   CaptionML=[DEU=Effektivit„t;
                                                              ENU=Efficiency;
                                                              NLD=Effici‰ntie %;
                                                              NOR=Effektivitet;
                                                              SVE=Effektivitet];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 21  ;   ;Capacity            ;Decimal       ;OnValidate=BEGIN
                                                                CalculateCapacity;
                                                              END;

                                                   CaptionML=[DEU=Kapazit„t;
                                                              ENU=Capacity;
                                                              NLD=Capaciteit;
                                                              NOR=Kapasitet;
                                                              SVE=Kapacitet];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 22  ;   ;Absence Efficiency  ;Decimal       ;OnValidate=BEGIN
                                                                "Capacity (Effective)" := ROUND("Capacity (Total)" * Efficiency / 100,0.001);
                                                              END;

                                                   CaptionML=[DEU=Fehlzeit Effektivit„t;
                                                              ENU=Absence Efficiency;
                                                              NLD=Afwezigheidseffici‰ntie;
                                                              NOR=Frav‘rseffektivitet;
                                                              SVE=Fr†nvaro effektivitet];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   Editable=No }
    { 23  ;   ;Absence Capacity    ;Decimal       ;OnValidate=BEGIN
                                                                CalculateCapacity;
                                                              END;

                                                   CaptionML=[DEU=Fehlzeit Kapazit„t;
                                                              ENU=Absence Capacity;
                                                              NLD=Afwezigheidscapaciteit;
                                                              NOR=Frav‘rskapasitet;
                                                              SVE=Fr†nvarokapacitet];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   Editable=No }
    { 24  ;   ;Starting Date-Time  ;DateTime      ;OnValidate=BEGIN
                                                                Date := DT2DATE("Starting Date-Time");
                                                                VALIDATE("Starting Time",DT2TIME("Starting Date-Time"));
                                                              END;

                                                   CaptionML=[DEU=Startdatum/-zeit;
                                                              ENU=Starting Date-Time;
                                                              NLD=Begindatum/-tijd;
                                                              NOR=Startdato-tidsp.;
                                                              SVE=Startdatum tid] }
    { 25  ;   ;Ending Date-Time    ;DateTime      ;OnValidate=BEGIN
                                                                Date := DT2DATE("Ending Date-Time");
                                                                VALIDATE("Ending Time",DT2TIME("Ending Date-Time"));
                                                              END;

                                                   CaptionML=[DEU=Enddatum/-zeit;
                                                              ENU=Ending Date-Time;
                                                              NLD=Einddatum/-tijd;
                                                              NOR=Sluttdato-tidsp.;
                                                              SVE=Slutdatum tid] }
  }
  KEYS
  {
    {    ;Capacity Type,No.,Date,Starting Time,Ending Time,Work Shift Code;
                                                   Clustered=Yes }
    {    ;Work Center No.,Date,Work Shift Code    ;SumIndexFields=Capacity (Total),Capacity (Effective) }
    {    ;Work Center Group Code,Date,Work Shift Code;
                                                   SumIndexFields=Capacity (Total),Capacity (Effective) }
    {    ;Capacity Type,No.,Starting Date-Time,Ending Date-Time,Absence Capacity }
    {    ;Capacity Type,No.,Ending Date-Time,Starting Date-Time }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=%1 muss gr”áer als %2 sein.;ENU=%1 must be higher than %2.;NLD=%1 moet groter dan %2 zijn.;NOR=%1 m† v‘re st›rre enn %2.;SVE=%1 m†ste vara h”gre „n %2.';
      Text001@1001 : TextConst 'DEU=Es gibt Redundanzen in %1 im Kalender von %2 von %3 bis %4 Uhr. šberschneidung von %5 bis %6 Uhr.;ENU=There is redundancy in %1 within the calendar of %2. From %3 to %4. Conflicting time from %5 to %6.;NLD=Redundantie in %1 in de agenda van %2. Van %3 tot %4. Tijdsconflict van %5 tot %6.;NOR=Det finnes en feil i %1 i kalenderen til %2. Fra %3 to %4. Motstridende tid fra %5 til %6.;SVE=Det finns redundans i %1 inom kalendern f”r %2. Fr†n %3 till %4. Tidskonflikt fr†n %5 till %6.';
      WorkCenter@1002 : Record 99000754;
      MachineCenter@1003 : Record 99000758;
      CalendarEntry@1004 : Record 99000757;
      CalendarMgt@1005 : Codeunit 99000755;

    LOCAL PROCEDURE CheckRedundancy@1();
    BEGIN
      IF ("Starting Time" = 0T) AND ("Ending Time" = 0T) THEN
        EXIT;

      CalendarEntry.SETRANGE("Capacity Type","Capacity Type");
      CalendarEntry.SETRANGE("No.","No.");
      CalendarEntry.SETRANGE(Date,Date);
      CalendarEntry.SETFILTER("Starting Time",'<%1',"Ending Time");
      CalendarEntry.SETFILTER("Ending Time",'>%1|%2',"Starting Time",000000T);

      IF CalendarEntry.FIND('-') THEN
        REPEAT
          IF (CalendarEntry."Starting Time" <> xRec."Starting Time") OR
             (CalendarEntry."Ending Time" <> xRec."Ending Time") OR
             (CalendarEntry."Work Shift Code" <> xRec."Work Shift Code")
          THEN
            ERROR(
              Text001,
              "Capacity Type",
              "No.",
              "Starting Time",
              "Ending Time",
              CalendarEntry."Starting Time",
              CalendarEntry."Ending Time");
        UNTIL CalendarEntry.NEXT = 0;
    END;

    LOCAL PROCEDURE CalculateCapacity@2();
    BEGIN
      WorkCenter.GET("Work Center No.");

      IF ("Starting Time" = 0T) AND
         ("Ending Time" = 0T)
      THEN BEGIN
        VALIDATE("Capacity (Total)",0);
        EXIT;
      END;

      "Capacity (Total)" :=
        ROUND(
          CalendarMgt.CalcTimeDelta("Ending Time","Starting Time") /
          CalendarMgt.TimeFactor(WorkCenter."Unit of Measure Code") *
          (Capacity - "Absence Capacity"),WorkCenter."Calendar Rounding Precision");

      "Capacity (Effective)" := ROUND("Capacity (Total)" * Efficiency / 100,WorkCenter."Calendar Rounding Precision");
    END;

    [External]
    PROCEDURE Caption@3() : Text[100];
    VAR
      FilterText@1000 : Text;
    BEGIN
      FilterText := GETFILTER("No.");
      IF FilterText = '' THEN
        EXIT('');

      IF "Capacity Type" = "Capacity Type"::"Machine Center" THEN BEGIN
        MachineCenter.SETFILTER("No.",FilterText);
        IF NOT MachineCenter.FINDFIRST THEN
          EXIT('');
        EXIT(COPYSTR(STRSUBSTNO('%1 %2',MachineCenter."No.",MachineCenter.Name),1,100));
      END;
      WorkCenter.SETFILTER("No.",FilterText);
      IF NOT WorkCenter.FINDFIRST THEN
        EXIT('');
      EXIT(COPYSTR(STRSUBSTNO('%1 %2',WorkCenter."No.",WorkCenter.Name),1,100));
    END;

    LOCAL PROCEDURE UpdateDatetime@11();
    BEGIN
      "Starting Date-Time" := CREATEDATETIME(Date,"Starting Time");
      "Ending Date-Time" := CREATEDATETIME(Date,"Ending Time");
    END;

    [External]
    PROCEDURE SetCapacityFilters@4(CapType@1000 : Option;CapNo@1001 : Code[20]);
    BEGIN
      RESET;
      SETCURRENTKEY("Capacity Type","No.","Starting Date-Time","Ending Date-Time");
      SETRANGE("Capacity Type",CapType);
      SETRANGE("No.",CapNo);
    END;

    BEGIN
    END.
  }
}

