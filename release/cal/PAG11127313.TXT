OBJECT Page 11127313 Import Investment Proposal STI
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Investitionsvorschlag STIKO importieren;
               ENU=Import Investment Proposal STIKO;
               NLD=Investeringsvoorstel STIKO importeren];
    PageType=NavigatePage;
    UsageCategory=Tasks;
    ActionList=ACTIONS
    {
      { 1100529502;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100529504;1 ;Action    ;
                      Name=Import;
                      CaptionML=[DEU=Importieren;
                                 ENU=Import;
                                 NLD=Importeren];
                      InFooterBar=Yes;
                      Image=Import;
                      OnAction=VAR
                                 FromFile@1100529500 : Text;
                                 InStream@1100529501 : InStream;
                               BEGIN
                                 UPLOADINTOSTREAM(Text000, '', '', FromFile, InStream);

                                 ImportInvestmProposalSTIKO.SETSOURCE(InStream);
                                 ImportInvestmProposalSTIKO.InitXMLport(
                                   PhaseCode,
                                   ReferenceDate);
                                 ImportInvestmProposalSTIKO.IMPORT;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100529503;;Container;
                ContainerType=ContentArea }

    { 1100529501;1;Field  ;
                CaptionML=[DEU=Stufe;
                           ENU=Phase;
                           NLD=Fase];
                SourceExpr=PhaseCode;
                OnValidate=BEGIN
                             ValidatePhaseCode;
                           END;

                OnLookup=BEGIN
                           LookupPhaseCode;
                         END;
                          }

    { 1100529500;1;Field  ;
                CaptionML=[DEU=Stichtag;
                           ENU=Reference Date;
                           NLD=Referentiedatum];
                SourceExpr=ReferenceDate }

  }
  CODE
  {
    VAR
      ProjectNo@1100529504 : Code[20];
      PhaseCode@1100529503 : Code[10];
      ReferenceDate@1100529502 : Date;
      VersionCode@1100529500 : Code[10];
      ImportInvestmProposalSTIKO@1100529505 : XMLport 11012901;
      Text000@1100529501 : TextConst 'DEU=Ausw„hlen Datei...;ENU=Select File..;NLD=Selecteer bestand..';
      Text001@1100529506 : TextConst 'DEU=Aktuelle Phase ist %1. Fortfahren?;ENU=Actual phase is %1. Continue?;NLD=Actuele fase is %1. Doorgaan?';

    PROCEDURE SetProjectNo@1100529500(iProjectNo@1100529500 : Code[20]);
    BEGIN
      ProjectNo := iProjectNo;
    END;

    PROCEDURE SetPhaseCode@1100529501(iPhaseCode@1100529500 : Code[10]);
    BEGIN
      PhaseCode := iPhaseCode;
    END;

    LOCAL PROCEDURE ValidatePhaseCode@1100525008();
    VAR
      ProjectDevelopmentPhase@1100525000 : Record 11012911;
      ActualPhase@1100525001 : Code[10];
    BEGIN
      IF PhaseCode = '' THEN
        EXIT;
      IF ProjectDevelopmentPhase.GET(ProjectNo, PhaseCode) THEN BEGIN
        ActualPhase := ProjectDevelopmentPhase.GetActualPhase(ProjectNo);
        IF NOT ProjectDevelopmentPhase."Actual Phase" THEN
          IF ActualPhase <> '' THEN
            IF NOT CONFIRM(STRSUBSTNO(Text001, ActualPhase)) THEN
              ERROR('');
      END;
    END;

    LOCAL PROCEDURE LookupPhaseCode@1100525009();
    VAR
      ProjectDevelopmentPhase@1100525000 : Record 11012911;
    BEGIN
      ProjectDevelopmentPhase.SETRANGE("Project No.",ProjectNo);
      IF PAGE.RUNMODAL(0,ProjectDevelopmentPhase) = ACTION::LookupOK THEN BEGIN
        PhaseCode := ProjectDevelopmentPhase.Phase;
        ValidatePhaseCode;
      END;
    END;

    BEGIN
    END.
  }
}

