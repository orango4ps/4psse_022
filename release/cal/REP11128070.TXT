OBJECT Report 11128070 Cust. Payment Suggestion
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=PE4.06 (12047965);
  }
  PROPERTIES
  {
    CaptionML=[ENU=Cust. Payment Suggestion;
               SVE=Inbetalningsf”rslag];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 6836;    ;DataItem;                    ;
               DataItemTable=Table18;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=BEGIN
                               IF gLastDueDate = 0D THEN
                                 gLastDueDate := 99991231D;

                               gCust2.COPYFILTERS(Customer);
                               gGenJnlLine.LOCKTABLE;
                               gGenJnlTemplate.GET(gGenJnlLine."Journal Template Name");
                               gGenJnlBatch.GET(gGenJnlLine."Journal Template Name",gGenJnlLine."Journal Batch Name");
                               gGenJnlLine.SETRANGE("Journal Template Name",gGenJnlLine."Journal Template Name");
                               gGenJnlLine.SETRANGE("Journal Batch Name",gGenJnlLine."Journal Batch Name");
                               IF gGenJnlLine.FIND('+') THEN BEGIN
                                 gLastLineNo := gGenJnlLine."Line No.";
                                 gGenJnlLine.INIT;
                               END;

                               gWindow.OPEN(PEB004);
                               SETRANGE("Approval Status",Customer."Approval Status"::Accepted);
                             END;

               OnAfterGetRecord=BEGIN
                                  gWindow.UPDATE(1,"No.");
                                  gCustLedgerEntry.RESET;
                                  gCustLedgerEntry.SETCURRENTKEY("Customer No.",Open,Positive,"Due Date");
                                  gCustLedgerEntry.SETRANGE("Customer No.","No.");
                                  gCustLedgerEntry.SETRANGE(Open,TRUE);
                                  gCustLedgerEntry.SETRANGE("Due Date",0D,gLastDueDate);
                                  gCustLedgerEntry.SETRANGE("Auto Giro Journal No.", 0);
                                  IF gCustLedgerEntry.FIND('-') THEN
                                    REPEAT
                                      CreateGenJnlLine;
                                    UNTIL gCustLedgerEntry.NEXT = 0;
                                END;

               ReqFilterFields=No.,Auto Giro Type }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1000000000;;Container;
                  Name=Cont;
                  ContainerType=ContentArea }

      { 1100570000;1;Group  ;
                  CaptionML=[ENU=Options;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1000000001;2;Field  ;
                  CaptionML=[ENU=Last Due Date;
                             SVE=Senaste f”rfallodatum];
                  SourceExpr=gLastDueDate }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      gCust2@1000 : Record 18;
      gGenJnlTemplate@1001 : Record 80;
      gGenJnlBatch@1002 : Record 232;
      gGenJnlLine@1003 : Record 81;
      gCustLedgerEntry@1004 : Record 21;
      gGLAccount@1005 : Record 15;
      gWindow@1006 : Dialog;
      gPostingDate@1007 : Date;
      gLastDueDate@1008 : Date;
      gDocNo@1009 : Code[20];
      gLastLineNo@1010 : Integer;
      gCustEntryEdit@1011 : Codeunit 103;
      gBalAccType@1012 : 'G/L Account,Customer,Vendor,Bank Account';
      gBalAccNo@1013 : Code[20];
      PEB001@1014 : TextConst 'ENU=%1 %2, customer %3 already exist in Journal of Incoming Payment %4;SVE=%1 %2, kund %3 finns redan i inbetalningsjournal %4.';
      PEB002@1015 : TextConst 'ENU=%1 %2 incoming payment customer;SVE=%1 %2 inbet. kund';
      PEB003@1016 : TextConst 'ENU=%1 %2 allowance customer;NOR=%1 %2 avdrag kunde;SVE=%1 %2 avdrag kund';
      PEB004@1017 : TextConst 'ENU=Processing Customer #1##########;SVE=Behandlar kund #1##########';

    PROCEDURE SetGenJnlLine@1(NewGLJnlLine@1000 : Record 81);
    BEGIN
      gGenJnlLine := NewGLJnlLine;
      gDocNo := NewGLJnlLine."Document No.";
      gPostingDate := NewGLJnlLine."Posting Date";
      gBalAccType := NewGLJnlLine."Bal. Account Type";
      gBalAccNo := NewGLJnlLine."Bal. Account No.";
    END;

    LOCAL PROCEDURE CreateGenJnlLine@2();
    VAR
      GenJnlLine3@1000 : Record 81;
    BEGIN
      gCustLedgerEntry.CALCFIELDS("Remaining Amount");
      WITH gGenJnlLine DO BEGIN
        gGenJnlLine.INIT;
        gLastLineNo := gLastLineNo + 10000;
        "Line No." := gLastLineNo;
        VALIDATE("Document No.",gDocNo);
        VALIDATE("Posting Date",gPostingDate);
        VALIDATE("Document Type","Document Type"::Payment);
        VALIDATE("Account Type","Account Type"::Customer);
        VALIDATE("Account No.",gCustLedgerEntry."Customer No.");
        VALIDATE("Due Date",gCustLedgerEntry."Due Date");
        IF "Due Date" < TODAY THEN
          "Due Date" := TODAY;
        "External Document No." := gCustLedgerEntry."External Document No.";
        VALIDATE("Currency Code",Customer."Currency Code");
        IF gCustLedgerEntry.FIELDACTIVE("Global Dimension 1 Code") THEN
          "Shortcut Dimension 1 Code" := gCustLedgerEntry."Global Dimension 1 Code";
        IF gCustLedgerEntry.FIELDACTIVE("Global Dimension 2 Code") THEN
          "Shortcut Dimension 2 Code" := gCustLedgerEntry."Global Dimension 2 Code";
        "Source Code" := gGenJnlTemplate."Source Code";
        "Reason Code" := gGenJnlBatch."Reason Code";
        Amount := 0;
        IF ("Document Type" = "Document Type"::Payment) AND
           (gCustLedgerEntry."Document Type" = gCustLedgerEntry."Document Type"::Invoice) AND
           ("Due Date" <= gCustLedgerEntry."Pmt. Discount Date")
        THEN
          Amount := Amount - gCustLedgerEntry."Remaining Amount" + gCustLedgerEntry."Original Pmt. Disc. Possible"
        ELSE
          Amount := Amount - gCustLedgerEntry."Remaining Amount";
        VALIDATE(Amount);
        GenJnlLine3.RESET;
        GenJnlLine3.SETCURRENTKEY("Account Type","Account No.","Applies-to Doc. Type","Applies-to Doc. No.");
        GenJnlLine3.SETRANGE("Account Type",GenJnlLine3."Account Type"::Customer);
        GenJnlLine3.SETRANGE("Account No.",gCustLedgerEntry."Customer No.");
        GenJnlLine3.SETRANGE("Applies-to Doc. Type",gCustLedgerEntry."Document Type");
        GenJnlLine3.SETRANGE("Applies-to Doc. No.",gCustLedgerEntry."Document No.");
        IF GenJnlLine3.FIND('-') THEN
          ERROR(PEB001,
                gCustLedgerEntry."Document Type",gCustLedgerEntry."Document No.",gCustLedgerEntry."Customer No.",
                GenJnlLine3."Journal Batch Name");
        "Applies-to Doc. Type" := gCustLedgerEntry."Document Type";
        "Applies-to Doc. No." := gCustLedgerEntry."Document No.";
        VALIDATE("Currency Code",gCustLedgerEntry."Currency Code");
        VALIDATE("Bal. Account Type",gBalAccType);
        VALIDATE("Bal. Account No.",gBalAccNo);
        IF gCustLedgerEntry.Positive THEN
          Description := STRSUBSTNO(PEB002,gCustLedgerEntry."Document No.",gCustLedgerEntry."Document Type")
        ELSE
          Description := STRSUBSTNO(PEB003,gCustLedgerEntry."Document No.",gCustLedgerEntry."Document Type");
        IF Amount <> 0 THEN
          INSERT;
      END;
    END;

    BEGIN
    {
      PEB *** Begin ***
      PEB0006 Autogiro
      PEB
      PEB *** End ***
    }
    END.
  }
  RDLDATA
  {
  }
}

