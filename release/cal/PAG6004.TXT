OBJECT Page 6004 Res. Availability (Service)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Res. Availability (Service);
               NOR=Disponible ress. (service);
               SVE=Res.disposition (service)];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table156;
    DataCaptionExpr='';
    PageType=Card;
    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 ServMgtSetup.GET;
                 ServHeader.GET(CurrentDocumentType,CurrentDocumentNo);
                 SetColumns(SetWanted::Initial);
                 UpdateFields;
               END;

    OnAfterGetRecord=BEGIN
                       IF ServHeader.GET(CurrentDocumentType,CurrentDocumentNo) THEN
                         "Service Zone Filter" := ServHeader."Service Zone Code"
                       ELSE
                         "Service Zone Filter" := '';

                       CALCFIELDS("In Customer Zone");
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 77      ;1   ;Action    ;
                      Name=ShowMatrix;
                      CaptionML=[ENU=&Show Matrix;
                                 NOR=Vi&s matrise;
                                 SVE=Vi&sa matris];
                      ToolTipML=[ENU=View the data overview according to the selected filters and options.;
                                 NOR=Vis den dataoversikten i henhold til de valgte filtrene og alternativene.;
                                 SVE=Visa dataîversikten med hÑnsyn taget till de valda filtren och alternativen.];
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      Image=ShowMatrix;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 MatrixForm@1117 : Page 9229;
                               BEGIN
                                 MatrixForm.SetData(CurrentDocumentType,CurrentDocumentNo,CurrentServItemLineNo,CurrentEntryNo,
                                   MatrixColumnCaptions,MatrixRecords,PeriodType);
                                 MatrixForm.SETTABLEVIEW(Rec);
                                 MatrixForm.RUNMODAL;
                               END;
                                }
      { 3       ;1   ;Action    ;
                      CaptionML=[ENU=Previous Set;
                                 NOR=Forrige sett;
                                 SVE=FîregÜende uppsÑttning];
                      ToolTipML=[ENU=Go to the previous set of data.;
                                 NOR=GÜ til forrige datasett.;
                                 SVE=GÜ till fîregÜende datauppsÑttning.];
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::Previous);
                               END;
                                }
      { 6       ;1   ;Action    ;
                      CaptionML=[ENU=Next Set;
                                 NOR=Neste sett;
                                 SVE=NÑsta uppsÑttning];
                      ToolTipML=[ENU=Go to the next set of data.;
                                 NOR=GÜ til neste datasett.;
                                 SVE=GÜ till nÑsta datauppsÑttning.];
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::Next);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 22  ;1   ;Group     ;
                CaptionML=[ENU=Matrix Options;
                           NOR=Matrisealternativer;
                           SVE=Matrisalternativ] }

    { 4   ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           NOR=Vis etter;
                           SVE=Visa per];
                ToolTipML=[ENU=Specifies by which period amounts are displayed.;
                           NOR=Angir hvilken periode belõp vises basert pÜ.;
                           SVE=Anger efter vilken period belopp visas.];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 NOR=Dag,Uke,MÜned,Kvartal,èr,Regnskapsperiode;
                                 SVE=Dag,Vecka,MÜnad,Kvartal,èr,Bokfîringsperiod];
                ApplicationArea=#Service;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             DateControl;
                             SetColumns(SetWanted::Initial);
                           END;
                            }

    { 5   ;2   ;Field     ;
                CaptionML=[ENU=Date Filter;
                           NOR=Datofilter;
                           SVE=Datumfilter];
                ToolTipML=[ENU=Specifies the dates that will be used to filter the amounts in the window.;
                           NOR=Angir datoene som skal brukes til Ü filtrere belõpene i vinduet.;
                           SVE=Anger datumen som filtrerar beloppen i fînstret.];
                ApplicationArea=#Service;
                SourceExpr=DateFilter;
                OnValidate=BEGIN
                             DateControl;
                             SetColumns(SetWanted::Initial);
                           END;
                            }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Column set;
                           NOR=Kolonnesett;
                           SVE=KolumnuppsÑttning];
                ToolTipML=[ENU=Specifies the range of values that are displayed in the matrix window, for example, the total period. To change the contents of the field, choose Next Set or Previous Set.;
                           NOR=Angir verdiomrÜdene som vises i matrisevinduet, for eksempel hele perioden. Hvis du vil endre innholdet i feltet, velger du Neste sett eller Forrige sett.;
                           SVE=Anger vÑrdeintervallen som visas i tabellfînstret, till exempel hela perioden. Om du vill Ñndra innehÜllet i fÑltet vÑljer du NÑsta uppsÑttning eller FîregÜende uppsÑttning.];
                ApplicationArea=#Service;
                SourceExpr=ColumnsSet;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      MatrixRecords@1021 : ARRAY [32] OF Record 2000000007;
      ResRec2@1041 : Record 156;
      ServMgtSetup@1001 : Record 5911;
      ServHeader@1002 : Record 5900;
      TextManagement@1039 : Codeunit 41;
      CurrentDocumentType@1019 : Integer;
      CurrentDocumentNo@1007 : Code[20];
      CurrentServItemLineNo@1008 : Integer;
      CurrentEntryNo@1009 : Integer;
      PeriodType@1012 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      DateFilter@1035 : Text;
      SetWanted@1048 : 'Initial,Previous,Same,Next';
      PKFirstRecInCurrSet@1047 : Text[1024];
      MatrixColumnCaptions@1046 : ARRAY [32] OF Text[100];
      ColumnsSet@1045 : Text[1024];
      CurrSetLength@1044 : Integer;
      DPA_IsHardFilter@1100000999 : Boolean;

    [External]
    PROCEDURE SetData@2(DocumentType@1003 : Integer;DocumentNo@1000 : Code[20];ServItemLineNo@1001 : Integer;EntryNo@1002 : Integer);
    BEGIN
      CurrentDocumentType := DocumentType;
      CurrentDocumentNo := DocumentNo;
      CurrentServItemLineNo := ServItemLineNo;
      CurrentEntryNo := EntryNo;
    END;

    LOCAL PROCEDURE UpdateFields@3();
    BEGIN
    END;

    LOCAL PROCEDURE DateControl@6();
    BEGIN
      TextManagement.MakeDateFilter(DateFilter);
      ResRec2.SETFILTER("Date Filter",DateFilter);
      DateFilter := ResRec2.GETFILTER("Date Filter");
    END;

    [External]
    PROCEDURE SetColumns@11(SetWanted@1001 : 'Initial,Previous,Same,Next');
    VAR
      MatrixMgt@1000 : Codeunit 9200;
    BEGIN
      MatrixMgt.GeneratePeriodMatrixData(SetWanted,32,FALSE,PeriodType,DateFilter,
        PKFirstRecInCurrSet,MatrixColumnCaptions,ColumnsSet,CurrSetLength,MatrixRecords);
    END;

    BEGIN
    END.
  }
}

