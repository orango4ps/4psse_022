OBJECT Report 6037 Change Customer in Contract
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Debitor in Vertrag Ñndern;
               ENU=Change Customer in Contract;
               NLD=Klant in contract wijzigen;
               NOR=Skift kunde i kontrakt];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  ConfirmManagement@1000 : Codeunit 27;
                BEGIN
                  IF NewCustomerNo = '' THEN
                    ERROR(Text000);
                  Cust.GET(NewCustomerNo);
                  IF NewShiptoCode <> '' THEN
                    ShipToAddr.GET(NewCustomerNo,NewShiptoCode);
                  IF (NewShiptoCode = ServContract."Ship-to Code") AND
                     (NewCustomerNo = ServContract."Customer No.")
                  THEN
                    ERROR(Text011);

                  IF NOT ConfirmManagement.ConfirmProcess(Text002,TRUE) THEN
                    CurrReport.QUIT;

                  IF TempServContract.COUNT > 1 THEN
                    IF NOT ConfirmManagement.ConfirmProcess(
                         STRSUBSTNO(Text009,TempServContract.COUNT,TempServItem.COUNT),TRUE)
                    THEN
                      CurrReport.QUIT;
                END;

    OnPostReport=VAR
                   ServItem@1006 : Record 5940;
                   Window@1005 : Dialog;
                   CounterTotal@1003 : Integer;
                   Counter@1002 : Integer;
                   CounterBreak@1000 : Integer;
                   ItemCounter@1004 : Integer;
                 BEGIN
                   ServItem.LOCKTABLE;
                   ServContractLine.LOCKTABLE;
                   ServContract.LOCKTABLE;
                   CLEAR(TempServContract);
                   CLEAR(TempServItem);
                   ServContractMgt.GetAffectedItemsOnCustChange(
                     ContractNo,
                     TempServContract,
                     TempServItem,
                     FALSE,
                     ServContractLine."Contract Type"::Contract);

                   Window.OPEN(
                     Text005 +
                     Text006 +
                     '#1###' +
                     Text007 +
                     '#2###  @3@@@@@@@@@\\' +
                     Text008 +
                     '#4###' +
                     Text007 +
                     '#5###  @6@@@@@@@@@\\');
                   Window.UPDATE(2,TempServContract.COUNT);
                   Window.UPDATE(5,TempServItem.COUNT);

                   CounterTotal := TempServContract.COUNT;
                   Counter := 0;
                   ItemCounter := 0;
                   CounterBreak := ROUND(CounterTotal / 100,1,'>');
                   IF TempServContract.FIND('-') THEN
                     REPEAT
                       Counter := Counter + 1;
                       ItemCounter := ItemCounter + 1;
                       IF Counter >= CounterBreak THEN BEGIN
                         Counter := 0;
                         Window.UPDATE(3,ROUND(ItemCounter / CounterTotal * 10000,1));
                       END;
                       Window.UPDATE(1,ItemCounter);
                       ServContract.GET(TempServContract."Contract Type",TempServContract."Contract No.");
                       ServContractMgt.ChangeCustNoOnServContract(NewCustomerNo,NewShiptoCode,ServContract)
                     UNTIL TempServContract.NEXT = 0
                   ELSE
                     Window.UPDATE(3,10000);

                   CounterTotal := TempServItem.COUNT;
                   Counter := 0;
                   ItemCounter := 0;
                   CounterBreak := ROUND(CounterTotal / 100,1,'>');
                   IF TempServItem.FIND('-') THEN
                     REPEAT
                       Counter := Counter + 1;
                       ItemCounter := ItemCounter + 1;
                       IF Counter >= CounterBreak THEN BEGIN
                         Counter := 0;
                         Window.UPDATE(6,ROUND(ItemCounter / CounterTotal * 10000,1));
                       END;
                       Window.UPDATE(4,ItemCounter);
                       ServItem.GET(TempServItem."No.");
                       ServContractMgt.ChangeCustNoOnServItem(NewCustomerNo,NewShiptoCode,ServItem)
                     UNTIL TempServItem.NEXT = 0
                   ELSE
                     Window.UPDATE(6,10000);
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   ServContractMgt.GetAffectedItemsOnCustChange(
                     ContractNo,
                     TempServContract,
                     TempServItem,
                     FALSE,
                     ServContractLine."Contract Type"::Contract);

                   IF TempServContract.COUNT > 1 THEN
                     ContractNoText := Text004
                   ELSE
                     ContractNoText := TempServContract."Contract No.";

                   IF TempServItem.COUNT > 1 THEN
                     ServiceItemNoText := Text004
                   ELSE
                     ServiceItemNoText := TempServItem."No.";
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1   ;2   ;Field     ;
                  DrillDown=Yes;
                  CaptionML=[DEU=Vertragsnr.;
                             ENU=Contract No.;
                             NLD=Contractnr.;
                             NOR=Kontraktnr.;
                             SVE=Kontraktsnr];
                  ToolTipML=[DEU=Legt alle fakturierbaren Gewinne fÅr die Projektaufgabe in der MandantenwÑhrung fest.;
                             ENU=Specifies all billable profits for the job task, expressed in the local currency.;
                             NLD=Hiermee wordt in de lokale valuta alle factureerbare winst voor de projecttaak opgegeven.;
                             NOR=Angir alle fakturerbare fortjenester for prosjektoppgaven, uttrykt i den lokale valutaen.;
                             SVE=Anger alla fakturerbara vinster fîr projektaktiviteten, i den lokala valutan.];
                  ApplicationArea=#Service;
                  SourceExpr=ContractNoText;
                  Editable=FALSE;
                  OnDrillDown=BEGIN
                                PAGE.RUNMODAL(PAGE::"Service Contract List",TempServContract);
                              END;
                               }

      { 11  ;2   ;Field     ;
                  DrillDown=Yes;
                  CaptionML=[DEU=Serviceartikelnr.;
                             ENU=Service Item No.;
                             NLD=Serviceartikelnr.;
                             NOR=Servicevarenr.;
                             SVE=Serviceartikelnr];
                  ToolTipML=[DEU=Gibt das Feld an, um die Liste zugehîriger Serviceartikel anzuzeigen, wenn es eine Anzahl von Serviceartikeln gibt.;
                             ENU=Specifies the field to see the list of related service items, if there are a number of service items.;
                             NLD=Hiermee wordt het veld opgegeven om de lijst met gerelateerde serviceartikelen te bekijken, als er een aantal serviceartikelen zijn.;
                             NOR=Angir feltet for Ü vise listen over relaterte servicevarer hvis det finnes flere servicevarer.];
                  ApplicationArea=#Service;
                  SourceExpr=ServiceItemNoText;
                  Editable=FALSE;
                  OnDrillDown=BEGIN
                                PAGE.RUNMODAL(PAGE::"Service Item List",TempServItem);
                              END;
                               }

      { 3   ;2   ;Field     ;
                  CaptionML=[DEU=Vorhandene Debitorennr.;
                             ENU=Existing Customer No.;
                             NLD=Bestaand klantnr.;
                             NOR=Gjeldende kundenr.];
                  ToolTipML=[DEU=Gibt das Feld an, das die bestehende Debitorennummer im Vertrag anzeigt.;
                             ENU=Specifies the field to see the existing customer number in the contract.;
                             NLD=Hiermee wordt het veld opgegeven om het bestaande klantnummer in het contract te zien.;
                             NOR=Angir feltet der det eksisterende kundenummeret i kontrakten skal vises.];
                  ApplicationArea=#Service;
                  SourceExpr=ServContract."Customer No.";
                  Editable=FALSE }

      { 5   ;2   ;Field     ;
                  CaptionML=[DEU=Vorhandener Lief. an Code;
                             ENU=Existing Ship-to Code;
                             NLD=Bestaande verzendcode;
                             NOR=Gjeldende lever til-kode];
                  ToolTipML=[DEU=Gibt das Feld an, das den bestehenden Lief.-an-Code im Vertrag anzeigt.;
                             ENU=Specifies the field to see the existing ship-to code in the contract.;
                             NLD=Hiermee wordt het veld opgegeven om de bestaande verzendcode in het contract te zien.;
                             NOR=Angir feltet for Ü vise den eksisterende lever-til-koden i kontrakten.];
                  ApplicationArea=#Service;
                  SourceExpr=ServContract."Ship-to Code";
                  Editable=FALSE }

      { 7   ;2   ;Field     ;
                  CaptionML=[DEU=Neue Debitorennr.;
                             ENU=New Customer No.;
                             NLD=Nieuw klantnr.;
                             NOR=Nytt kundenr.;
                             SVE=Nytt kundnr];
                  ToolTipML=[DEU=Gibt die Anzahl neuer Debitoren an, die in die Stapelverarbeitung einbezogen werden sollen. WÑhlen Sie das Feld, um die vorhandenen Debitorenzahlen anzuzeigen.;
                             ENU=Specifies the number of the new customer that you want to include in the batch job. Choose the field to see the existing customer numbers.;
                             NLD=Hiermee wordt het nummer van de nieuwe klant opgegeven die in de batchverwerking moet worden opgenomen. Kies het veld om de bestaande klantnummers te bekijken.;
                             NOR=Angir nummeret for den nye kunden som du vil inkludere i kjõrselen. Velg feltet for Ü vise de eksisterende kundenumrene.];
                  ApplicationArea=#Service;
                  SourceExpr=NewCustomerNo;
                  OnValidate=BEGIN
                               IF NewCustomerNo <> '' THEN
                                 VerifyCustNo(NewCustomerNo,NewShiptoCode);
                             END;

                  OnLookup=BEGIN
                             CLEAR(Cust);
                             Cust."No." := NewCustomerNo;
                             Cust.SETFILTER(Blocked,'<>%1',Cust.Blocked::All);
                             IF PAGE.RUNMODAL(0,Cust) = ACTION::LookupOK THEN
                               IF Cust."No." <> '' THEN BEGIN
                                 VerifyCustNo(Cust."No.",NewShiptoCode);
                                 NewCustomerNo := Cust."No.";
                               END;
                           END;
                            }

      { 9   ;2   ;Field     ;
                  CaptionML=[DEU=Neuer Lief. an Code;
                             ENU=New Ship-to Code;
                             NLD=Nieuwe verzendcode;
                             NOR=Ny lever til-kode];
                  ToolTipML=[DEU=Gibt den neuen Lief. an Code an, der in die Stapelverarbeitung einbezogen werden soll. WÑhlen Sie das Feld, um die vorhandenen Lief. an Codes anzuzeigen.;
                             ENU=Specifies the new ship-to code that you want to include in the batch job. Choose the field to see the existing ship-to codes.;
                             NLD=Hiermee wordt de nieuwe verzendcode opgegeven die moet worden opgenomen in de batchtaak. Kies het veld om de bestaande verzendcodes te bekijken.;
                             NOR=Angir den nye lever til-koden du vil inkludere i kjõrselen. Velg feltet for Ü vise de eksisterende lever til-kodene.];
                  ApplicationArea=#Service;
                  SourceExpr=NewShiptoCode;
                  OnValidate=BEGIN
                               IF NewShiptoCode <> '' THEN
                                 ShipToAddr.GET(NewCustomerNo,NewShiptoCode);
                             END;

                  OnLookup=BEGIN
                             CLEAR(ShipToAddr);
                             ShipToAddr.SETRANGE("Customer No.",NewCustomerNo);
                             ShipToAddr.Code := NewShiptoCode;
                             IF PAGE.RUNMODAL(0,ShipToAddr) = ACTION::LookupOK THEN BEGIN
                               ShipToAddr.GET(ShipToAddr."Customer No.",ShipToAddr.Code);
                               NewShiptoCode := ShipToAddr.Code;
                             END;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Sie mÅssen das Feld Neue Debitorennr. ausfÅllen.;ENU=You must fill in the New Customer No. field.;NLD=U moet het veld Nieuw klantnr. invullen.;NOR=Du mÜ fylle ut feltet Nytt kundenr.;SVE=Du mÜste ange Nytt kundnr.';
      ServContract@1002 : Record 5965;
      Cust@1005 : Record 18;
      ShipToAddr@1006 : Record 222;
      ServContractLine@1027 : Record 5964;
      TempServContract@1019 : TEMPORARY Record 5965;
      TempServItem@1018 : TEMPORARY Record 5940;
      ServContractMgt@1017 : Codeunit 5940;
      ContractNo@1009 : Code[20];
      NewCustomerNo@1011 : Code[20];
      NewShiptoCode@1012 : Code[10];
      Text002@1013 : TextConst 'DEU=Wenn Sie die Debitorennr. oder den Lief. an Code Ñndern, werden die verknÅpften ServicevertrÑge und Verkaufsrechnungen nicht aktualisiert.\\Mîchten Sie fortfahren?;ENU=If you change the customer number or the ship-to code, the related service orders and sales invoices will not be updated.\\Do you want to continue?;NLD=Als u het klantnummer of de verzendcode wijzigt, worden de gekoppelde serviceorders en verkoopfacturen niet bijgewerkt.\\Wilt u doorgaan?;NOR=Hvis du endrer kundenummeret eller lever til-koden, blir ikke de tilhõrende serviceordrene og salgsfakturaene oppdatert.\\Vil du fortsette?';
      Text004@1020 : TextConst 'DEU=(Mehrere);ENU=(Multiple);NLD=(Meerdere);NOR=(Flere);SVE=(Flera)';
      ContractNoText@1021 : Text[20];
      ServiceItemNoText@1022 : Text[20];
      Text005@1023 : TextConst 'DEU=VerknÅpfte Objekte werden aktualisiert ...\\;ENU=Updating related objects...\\;NLD=Bijwerken gekoppelde objecten...\\;NOR=Oppdaterer tilhõrende objekter...\\';
      Text006@1024 : TextConst 'DEU=Vertrag;ENU="Contract     ";NLD="Contract     ";NOR="Kontrakt     ";SVE=Kontrakt (EBITA %)';
      Text007@1025 : TextConst 'DEU=" von ";ENU=" from ";NLD=" van ";NOR=" fra "';
      Text008@1026 : TextConst 'DEU="Serviceartikel ";ENU="Service item ";NLD="Serviceartikel ";NOR="Servicevare ";SVE=Serviceartikel';
      Text009@1015 : TextConst 'DEU=Sind Sie sicher, dass Sie die Debitorennr. in %1 verknÅpften VertrÑgen/Angeboten und %2 verknÅpften Serviceartikeln Ñndern mîchten?;ENU=Are you sure that you want to change the customer number in %1 related contracts/quotes and %2 related service items?;NLD=Weet u zeker dat u het klantnummer wilt wijzigen in %1 gekoppelde contracten/offertes en %2 gekoppelde serviceartikelen?;NOR=Er du sikker pÜ at du vil endre kundenummer i kontrakter/tilbud som er relatert til %1 og i servicevarer som er relatert til %2?';
      Text010@1016 : TextConst 'DEU=Sie kînnen keinen gesperrten Debitor auswÑhlen.;ENU=You cannot select a customer with the status Blocked.;NLD=U kunt geen klant met status Geblokkeerd selecteren.;NOR=Du kan ikke velge en kunde som har statusen Sperret.';
      Text011@1003 : TextConst 'DEU=Die Debitorennr. und der Lief. an Code, die Sie ausgewÑhlt haben, sind mit den Daten dieses Belegs identisch.;ENU=The customer number and the ship-to code that you have selected are the same as the ones on this document.;NLD=Het klantnummer en de verzendcode die u hebt geselecteerd, zijn dezelfde als die op dit document.;NOR=Kundenummeret og lever til-koden du har valgt er de samme som i dette dokumentet.';

    [External]
    PROCEDURE SetRecord@1(ContrNo@1000 : Code[20]);
    BEGIN
      ContractNo := ContrNo;
      ServContract.GET(ServContract."Contract Type"::Contract,ContractNo);
      ServContract.TESTFIELD("Change Status",ServContract."Change Status"::Open);
    END;

    LOCAL PROCEDURE VerifyCustNo@3(CustNo@1000 : Code[20];ShiptoCode@1001 : Code[20]);
    BEGIN
      IF CustNo <> '' THEN BEGIN
        Cust.GET(CustNo);
        IF Cust."Privacy Blocked" THEN
          ERROR(Cust.GetPrivacyBlockedGenericErrorText(Cust));
        IF Cust.Blocked = Cust.Blocked::All THEN
          ERROR(Text010);
        IF NOT ShipToAddr.GET(CustNo,ShiptoCode) THEN
          NewShiptoCode := '';
      END;
    END;

    [External]
    PROCEDURE InitializeRequest@2(NewCustomerNoFrom@1000 : Code[20];NewShipToCodeFrom@1001 : Code[10]);
    BEGIN
      NewCustomerNo := NewCustomerNoFrom;
      NewShiptoCode := NewShipToCodeFrom;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

