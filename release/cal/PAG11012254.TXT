OBJECT Page 11012254 Copy Base Part
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Kopiern Kalkulationsgruppe;
               ENU=Copy Base Part;
               NLD=Kopieer standaard onderdeel];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table11012169;
    PageType=StandardDialog;
    OnOpenPage=BEGIN
                 PartToSetEditable;
               END;

    OnQueryClosePage=BEGIN
                       CloseActionOK := CloseAction IN [ACTION::OK,ACTION::LookupOK];
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190000;1;Group  ;
                CaptionML=[DEU=Kopieren von;
                           ENU=Copy from;
                           NLD=Kopi‰ren van;
                           NOR=Kopier fra;
                           SVE=Kopiera fr†n];
                GroupType=Group }

    { 22  ;2   ;Field     ;
                CaptionML=[DEU=Teilgruppe;
                           ENU=Part Group;
                           NLD=Onderdeelgroep;
                           NOR=Del gruppe;
                           SVE=Delgrupp];
                SourceExpr=PartGrpFrom;
                OnValidate=BEGIN
                             IF NOT GrpRec.GET(PartGrpFrom, GrpRec.Type::Part) THEN
                               ERROR(Text003)
                             ELSE
                               PartGrpFromTxt := GrpRec.Description;
                           END;

                OnLookup=BEGIN
                           GrpRec.SETRANGE(Type, GrpRec.Type::Part);
                           IF PAGE.RUNMODAL(PAGE::"Estimate Groups", GrpRec) = ACTION::LookupOK THEN BEGIN
                             PartGrpFrom := GrpRec."No.";
                             PartGrpFromTxt := GrpRec.Description;
                           END;
                         END;
                          }

    { 23  ;2   ;Field     ;
                CaptionML=[DEU=Beschreibung Teilgruppe;
                           ENU=Part Group Description;
                           NLD=Onderdeelgroepomschrijving;
                           NOR=Delgruppe, Beskrivelse;
                           SVE=Delgrupp, beskrivning];
                SourceExpr=PartGrpFromTxt;
                Editable=FALSE }

    { 1210190001;2;Field  ;
                Name=PartFrom;
                CaptionML=[DEU=Teil;
                           ENU=Part;
                           NLD=Onderdeel;
                           NOR=Del;
                           SVE=Del];
                SourceExpr=PartFrom;
                OnValidate=BEGIN
                             PartFromOnAfterValidate;
                             PartToSetEditable;
                           END;

                OnLookup=BEGIN
                           PartRec.RESET;
                           PartRec.SETRANGE("Part Group", PartGrpFrom);
                           IF PAGE.RUNMODAL(PAGE::"Base Part List", PartRec) = ACTION::LookupOK THEN BEGIN
                             PartFrom := PartRec.Code;
                             PartFromTxt := PartRec.Description;
                             PartTo := PartFrom;
                             PartToTxt := PartFromTxt;
                           END;
                           PartToSetEditable;
                         END;
                          }

    { 30  ;2   ;Field     ;
                CaptionML=[DEU=Teilbeschreibung;
                           ENU=Part Description;
                           NLD=Onderdeelomschrijving;
                           NOR=Delbeskrivelse;
                           SVE=Delbeskrivning];
                SourceExpr=PartFromTxt;
                Editable=FALSE }

    { 1210190002;1;Group  ;
                CaptionML=[DEU=Kopieren in;
                           ENU=Copy to;
                           NLD=Kopi‰ren naar;
                           NOR=Kopier til;
                           SVE=Kopiera till];
                GroupType=Group }

    { 26  ;2   ;Field     ;
                CaptionML=[DEU=Teilgruppe;
                           ENU=Part Group;
                           NLD=Onderdeelgroep;
                           NOR=Del gruppe;
                           SVE=Delgrupp];
                SourceExpr=PartGrpTo;
                OnValidate=BEGIN
                             IF NOT GrpRec.GET(PartGrpTo, GrpRec.Type::Part) THEN
                               ERROR(Text003)
                             ELSE
                               PartGrpToTxt := GrpRec.Description;
                           END;

                OnLookup=BEGIN
                           GrpRec.SETRANGE(Type, GrpRec.Type::Part);
                           IF PAGE.RUNMODAL(PAGE::"Estimate Groups", GrpRec) = ACTION::LookupOK THEN BEGIN
                              PartGrpTo := GrpRec."No.";
                              PartGrpToTxt := GrpRec.Description;
                           END;
                         END;
                          }

    { 27  ;2   ;Field     ;
                CaptionML=[DEU=Beschreibung Teilgruppe;
                           ENU=Part Group Description;
                           NLD=Onderdeelgroepomschrijving;
                           NOR=Delgruppe, Beskrivelse;
                           SVE=Delgrupp, beskrivning];
                SourceExpr=PartGrpToTxt;
                Editable=FALSE }

    { 1210190003;2;Field  ;
                Name=PartTo;
                CaptionML=[DEU=Teil;
                           ENU=Part;
                           NLD=Onderdeel;
                           NOR=Del;
                           SVE=Del];
                SourceExpr=PartTo;
                Editable=PartToEditable;
                OnLookup=BEGIN
                           PartRec.RESET;
                           PartRec.SETRANGE("Part Group", PartGrpTo);
                           PAGE.RUNMODAL(PAGE::"Base Part List", PartRec);
                         END;
                          }

    { 33  ;2   ;Field     ;
                Name=PartToTxt;
                CaptionML=[DEU=Teilbeschreibung;
                           ENU=Part Description;
                           NLD=Onderdeelomschrijving;
                           NOR=Delbeskrivelse;
                           SVE=Delbeskrivning];
                SourceExpr=PartToTxt;
                Editable=PartToTxtEditable }

  }
  CODE
  {
    VAR
      Text000@1100485011 : TextConst 'DEU=Besch„ftigt mit #1################# @2@@@@@@@@@@@@@;ENU=Busy with            #1################# @2@@@@@@@@@@@@@;NLD=Bezig met           #1################# @2@@@@@@@@@@@@@;NOR=Opptatt med            #1################# @2@@@@@@@@@@@@@;SVE=Upptagen med         #1################# @2@@@@@@@@@@@@@';
      Text003@11012044 : TextConst 'DEU=Teilgruppe nicht vorhanden;ENU=Part Group not present;NLD=Onderdeelgroep niet aanwezig;NOR=Delgruppen finnes ikke;SVE=Delgruppen finns inte';
      Text005@11012046 : TextConst 'DEU=Teil nicht vorhanden;ENU=Part does not exist;NLD=Onderdeel niet aanwezig;NOR=Delen finnes ikke;SVE=Delen finns inte';
      PartGrpFrom@11012009 : Code[20];
      PartGrpTo@11012010 : Code[20];
      PartFrom@11012011 : Code[20];
      PartTo@11012012 : Code[20];
      PartGrpFromTxt@11012023 : Text[50];
      PartGrpToTxt@11012024 : Text[50];
      PartFromTxt@11012025 : Text[100];
      PartToTxt@11012026 : Text[100];
      GrpRec@11012032 : Record 11012157;
      PartRec@1100485000 : Record 11012169;
      PartRec2@1100485001 : Record 11012169;
      Status@1100485010 : Dialog;
      NoOfRecords@1100485009 : Integer;
      LineCount@1100485008 : Integer;
      PartToTxtEditable@1100525000 : Boolean INDATASET;
      PartToEditable@1100525001 : Boolean INDATASET;
      ElementFormat@1100409000 : Codeunit 11012022;
      CloseActionOK@1100528400 : Boolean;
      TextRec@1100525002 : Record 11020595;
      TextRec2@1100525003 : Record 11020595;

    PROCEDURE FillDefaults@1(lPartGrpFrom@11012002 : Code[20];lPartFrom@11012003 : Code[20]);
    BEGIN
      PartGrpFrom := lPartGrpFrom;
      PartFrom  := lPartFrom;

      PartGrpTo := PartGrpFrom;
      PartTo := PartFrom;

      IF GrpRec.GET(PartGrpFrom, GrpRec.Type::Part) THEN BEGIN
        PartGrpFromTxt := GrpRec.Description;
        PartGrpToTxt := GrpRec.Description;
      END;

      IF PartRec.GET(PartGrpFrom, PartFrom) THEN BEGIN
        PartFromTxt := PartRec.Description;
        PartToTxt := PartRec.Description;
      END;

      PartToSetEditable;
    END;

    PROCEDURE StartUpdate@2();
    BEGIN
      Status.OPEN(Text000);

      PartRec.SETRANGE("Part Group", PartGrpFrom);
      IF PartFrom <> '' THEN
        PartRec.SETRANGE(Code, PartFrom);
      IF PartRec.FIND('-') THEN BEGIN
        LineCount := 0;
        NoOfRecords := PartRec.COUNT;
        REPEAT
          PartRec2.COPY(PartRec);
          PartRec2."Part Group" := PartGrpTo;
          IF PartFrom <> '' THEN BEGIN
            PartRec2.Code := PartTo;
            PartRec2.Description := PartToTxt;
            IF PartFromTxt <> PartToTxt THEN
              PartRec2."Search Name" := PartToTxt;  //db, 11-11-09: M16962
          END;
          // C003048.sn
          ElementFormat.CreateStandardPartEst(PartRec2."Part Group", PartRec2.Code,
            PartRec2.Chapter, PartRec2.Paragraph, PartRec2.Level);
          // C003048.en
          PartRec2.INSERT(TRUE);
          //db.sn, 10-06-15
          TextRec.SETRANGE("Table Name", TextRec."Table Name"::Estimate);
          TextRec.SETFILTER(Group, '%1', '');
          TextRec.SETFILTER("No.", '%1', '');
          TextRec.SETFILTER("Estimate No.", '%1', '');
          TextRec.SETFILTER("Sub-Estimate No.", '%1', '');
          TextRec.SETRANGE("Part Group", PartRec."Part Group");
          TextRec.SETRANGE(Part, PartRec.Code);
          TextRec.SETRANGE("Estimate Line No.", 0);
          IF TextRec.FINDSET THEN BEGIN
            REPEAT
              TextRec2.COPY(TextRec);
              TextRec2."Part Group" := PartRec2."Part Group";
              TextRec2.Part := PartRec2.Code;
              TextRec2.INSERT;
            UNTIL TextRec.NEXT = 0;
          END;
          //db.en, 10-06-15
          IF PartFrom <> '' THEN
            CopyParents(PartRec2."Part Group");
          //db.sn, 16-04-15: C014713
          CopyDetailsNEW(PartRec."Part Group", PartRec.Code, PartRec2."Part Group", PartRec2.Code);
          //db.en, 16-04-15: C014713
          LineCount := LineCount + 1;
          Status.UPDATE(1, PartRec2."Part Group" + ' - ' + PartRec2.Code);
          Status.UPDATE(2,ROUND(LineCount / NoOfRecords * 10000,1));
        UNTIL PartRec.NEXT = 0;
      END;

      Status.CLOSE;
    END;

    PROCEDURE CopyDetailsNEW@1100528000(OldPartGrp@1100485000 : Code[20];OldPart@1100485001 : Code[20];NewPartGrp@1100485002 : Code[20];NewPart@1100485003 : Code[20]);
    VAR
      PartLineRec@1100528005 : Record 11072076;
      PartLineRec2@1100528004 : Record 11072076;
      ChrgRec@1100528003 : Record 11229771;
      ChrgRec2@1100528002 : Record 11229771;
      CodeRec@1100528001 : Record 11229772;
      CodeRec2@1100528000 : Record 11229772;
    BEGIN
      //db, 16-04-15: C014713
      PartLineRec.SETRANGE("Part Group", OldPartGrp);
      PartLineRec.SETRANGE(Part, OldPart);
      IF PartLineRec.FIND('-') THEN BEGIN
        REPEAT
          PartLineRec2.COPY(PartLineRec);
          PartLineRec2."Part Group" := NewPartGrp;
          PartLineRec2.Part := NewPart;
          PartLineRec2.INSERT(TRUE);
        UNTIL PartLineRec.NEXT = 0;
      END;

      ChrgRec.SETRANGE("Estimate No.", '');
      ChrgRec.SETRANGE("Sub-Estimate No.", '');
      ChrgRec.SETRANGE("Part Group", OldPartGrp);
      ChrgRec.SETRANGE(Part, OldPart);
      IF ChrgRec.FIND('-') THEN BEGIN
        REPEAT
          ChrgRec2.COPY(ChrgRec);
          ChrgRec2."Part Group" := NewPartGrp;
          ChrgRec2.Part := NewPart;
          ChrgRec2.INSERT;
        UNTIL ChrgRec.NEXT = 0;
      END;

      CodeRec.SETRANGE("Estimate No.", '');
      CodeRec.SETRANGE("Sub-Estimate No.", '');
      CodeRec.SETRANGE("Part Group", OldPartGrp);
      CodeRec.SETRANGE(Part, OldPart);
      IF CodeRec.FIND('-') THEN BEGIN
        REPEAT
          CodeRec2.COPY(CodeRec);
          CodeRec2."Part Group" := NewPartGrp;
          CodeRec2.Part := NewPart;
          CodeRec2.INSERT;
        UNTIL CodeRec.NEXT = 0;
      END;

      //db.sn, 10-06-15
      TextRec.SETRANGE("Table Name", TextRec."Table Name"::Estimate);
      TextRec.SETFILTER(Group, '%1', '');
      TextRec.SETFILTER("No.", '%1', '');
      TextRec.SETFILTER("Estimate No.", '%1', '');
      TextRec.SETFILTER("Sub-Estimate No.", '%1', '');
      TextRec.SETRANGE("Part Group", OldPartGrp);
      TextRec.SETRANGE(Part, OldPart);
      TextRec.SETFILTER("Estimate Line No.", '<>%1', 0);
      IF TextRec.FINDSET THEN BEGIN
        REPEAT
          TextRec2.COPY(TextRec);
          TextRec2."Part Group" := NewPartGrp;
          TextRec2.Part := NewPart;
          TextRec2.INSERT;
        UNTIL TextRec.NEXT = 0;
      END;
      //db.en, 10-06-15
    END;

    PROCEDURE CopyParents@1100485001(NewPartGrp@1100485004 : Code[20]);
    VAR
      OrigPartRec@1100485000 : Record 11012169;
      lvPartRec1@1100485002 : Record 11012169;
      lvPartRec2@1100485001 : Record 11012169;
      MarkedLevel@1100485003 : Integer;
    BEGIN
      //copy underlying structure
      OrigPartRec.COPY(PartRec);
      IF (OrigPartRec.Level = 1) OR (OrigPartRec.Level = 2) THEN BEGIN
        lvPartRec1.RESET;
        lvPartRec1.SETRANGE("Part Group", OrigPartRec."Part Group");
        IF OrigPartRec.Level = 1 THEN lvPartRec1.SETRANGE(Chapter, OrigPartRec.Code);
        IF OrigPartRec.Level = 2 THEN lvPartRec1.SETRANGE(Paragraph, OrigPartRec.Code);
        IF lvPartRec1.FIND('-') THEN BEGIN
          REPEAT
            IF NOT lvPartRec2.GET(NewPartGrp, lvPartRec1.Code) THEN BEGIN
              lvPartRec2.COPY(lvPartRec1);
              lvPartRec2."Part Group" := NewPartGrp;
              // C003048.sn
              ElementFormat.CreateStandardPartEst(lvPartRec2."Part Group", lvPartRec2.Code,
                lvPartRec2.Chapter, lvPartRec2.Paragraph, lvPartRec2.Level);
              // C003048.en
              lvPartRec2.INSERT(TRUE);
              CopyDetailsNEW(lvPartRec1."Part Group", lvPartRec1.Code, lvPartRec2."Part Group", lvPartRec2.Code);  //db, 09-04-15
            END;
          UNTIL lvPartRec1.NEXT = 0;
        END;
      END;

      //copy parent structure
      MarkedLevel := OrigPartRec.Level;
      REPEAT
        lvPartRec1.RESET;
        lvPartRec1.SETRANGE("Part Group", OrigPartRec."Part Group");
        IF MarkedLevel = 1 THEN lvPartRec1.SETRANGE(Level, 0);
        IF MarkedLevel = 2 THEN lvPartRec1.SETRANGE(Code, OrigPartRec.Chapter);
        IF MarkedLevel = 3 THEN lvPartRec1.SETRANGE(Code, OrigPartRec.Paragraph);
        IF lvPartRec1.FIND('-') THEN BEGIN
          REPEAT
            IF NOT lvPartRec2.GET(NewPartGrp, lvPartRec1.Code) THEN BEGIN
              lvPartRec2.COPY(lvPartRec1);
              lvPartRec2."Part Group" := NewPartGrp;
              // C003048.sn
              ElementFormat.CreateStandardPartEst(lvPartRec2."Part Group", lvPartRec2.Code,
                lvPartRec2.Chapter, lvPartRec2.Paragraph, lvPartRec2.Level);
              // C003048.en
              lvPartRec2.INSERT(TRUE);
              CopyDetailsNEW(lvPartRec1."Part Group", lvPartRec1.Code, lvPartRec2."Part Group", lvPartRec2.Code);  //db, 09-04-15
            END;
          UNTIL lvPartRec1.NEXT = 0;
        END;
        IF MarkedLevel > 0 THEN
          MarkedLevel := MarkedLevel - 1;
      UNTIL MarkedLevel = 0;
    END;

    LOCAL PROCEDURE PartFromOnAfterValidate@19035741();
    BEGIN
      IF NOT PartRec.GET(PartGrpFrom, PartFrom) THEN
        IF PartFrom = '' THEN
          PartRec.INIT
        ELSE
          ERROR(Text005);

      PartFromTxt := PartRec.Description;
      PartTo := PartFrom;
      PartToTxt := PartFromTxt;
    END;

    LOCAL PROCEDURE PartToSetEditable@19044010();
    BEGIN
      PartToEditable := (PartFrom <> '');
      PartToTxtEditable := (PartFrom <> '');
    END;

    LOCAL PROCEDURE StdDialogConfirm@1100528400() : Boolean;
    BEGIN
      CurrPage.RUNMODAL;
      EXIT(CloseActionOK);
    END;

    LOCAL PROCEDURE StdDialogDoAction@1100528401();
    BEGIN
      StartUpdate;
    END;

    PROCEDURE StdDialogRunModal@1100528404();
    BEGIN
      IF StdDialogConfirm THEN
        StdDialogDoAction;
    END;

    BEGIN
    END.
  }
}

