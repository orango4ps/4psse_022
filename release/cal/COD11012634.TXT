OBJECT Codeunit 11012634 Pass Data between Pages
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      TmpUserPeriodType@1100529600 : TEMPORARY Record 11072218;
      TmpServiceContractCtrlBudget@1100529602 : TEMPORARY Record 11071759;
      DefaultPaymentAgreementCode@1100528400 : Code[20];
      SettlementSheetProjectNo@1100527650 : Code[20];
      SettlementSheetPrincipal@1100527651 : Code[20];
      SettlementSheetCommissionNo@1100527652 : Code[20];
      ServiceContractCtrlBudgetWasUpdated@1100529601 : Boolean;

    PROCEDURE SetDefaultPaymentAgreementCode@1100528400(DefaultPaymentAgreementCode2@1100528400 : Code[20]);
    BEGIN
      DefaultPaymentAgreementCode := DefaultPaymentAgreementCode2;
    END;

    PROCEDURE GetDefaultPaymentAgreementCode@1100528401() : Code[20];
    BEGIN
      EXIT(DefaultPaymentAgreementCode);
    END;

    PROCEDURE SetSettlementSheet@1100527651(SettlementSheetProjectNo2@1100528400 : Code[20];SettlementSheetPrincipal2@1100527650 : Code[20];SettlementSheetCommissionNo2@1100527651 : Code[20]);
    BEGIN
      SettlementSheetProjectNo := SettlementSheetProjectNo2;
      SettlementSheetPrincipal := SettlementSheetPrincipal2;
      SettlementSheetCommissionNo := SettlementSheetCommissionNo2;
    END;

    PROCEDURE GetSettlementSheet@1100527650(VAR SettlementSheetProjectNo2@1100527652 : Code[20];VAR SettlementSheetPrincipal2@1100527651 : Code[20];VAR SettlementSheetCommissionNo2@1100527650 : Code[20]);
    BEGIN
      SettlementSheetProjectNo2 := SettlementSheetProjectNo;
      SettlementSheetPrincipal2 := SettlementSheetPrincipal;
      SettlementSheetCommissionNo2 := SettlementSheetCommissionNo;
      SettlementSheetProjectNo := '';
      SettlementSheetPrincipal := '';
      SettlementSheetCommissionNo := '';
    END;

    PROCEDURE SetUserPeriodType@1100529600(NewPeriodType@1100529600 : 'Day,Week,Month,Quarter,Year';NewPageNo@1100529601 : Integer);
    BEGIN
      IF NOT TmpUserPeriodType.ISTEMPORARY THEN
        EXIT;
      IF TmpUserPeriodType.GET(USERID) THEN BEGIN
        TmpUserPeriodType."Period Type" := NewPeriodType;
        TmpUserPeriodType."Period Filter" := FORMAT(NewPageNo);
        TmpUserPeriodType.MODIFY;
      END ELSE BEGIN
        TmpUserPeriodType."User ID" := USERID;
        TmpUserPeriodType."Period Type" := NewPeriodType;
        TmpUserPeriodType."Period Filter" := FORMAT(NewPageNo);
        TmpUserPeriodType.INSERT;
      END;
    END;

    PROCEDURE GetUserPeriodType@1100529602() : Integer;
    BEGIN
      IF TmpUserPeriodType.ISTEMPORARY THEN
        IF TmpUserPeriodType.GET(USERID) THEN
          EXIT(TmpUserPeriodType."Period Type");
      EXIT(0);
    END;

    PROCEDURE GetUserPageNo@1100529606() PageNo : Integer;
    BEGIN
      IF TmpUserPeriodType.ISTEMPORARY THEN
        IF TmpUserPeriodType.GET(USERID) THEN BEGIN
          IF NOT EVALUATE(PageNo, TmpUserPeriodType."Period Filter") THEN
            PageNo := 0;
          TmpUserPeriodType."Period Filter" := '';
          TmpUserPeriodType.MODIFY;
        END;
    END;

    PROCEDURE SetServiceContractCtrlBudget@1100529601(VAR NewTmpServiceContractCtrlBudget@1100529601 : TEMPORARY Record 11071759);
    BEGIN
      IF NOT TmpServiceContractCtrlBudget.ISTEMPORARY THEN
        EXIT;
      IF NOT NewTmpServiceContractCtrlBudget.ISTEMPORARY THEN
        EXIT;
      RemoveTmpServiceContractCtrlBudget;
      TmpServiceContractCtrlBudget.COPY(NewTmpServiceContractCtrlBudget, TRUE);
      ServiceContractCtrlBudgetWasUpdated := TRUE;
    END;

    PROCEDURE GetServiceContractCtrlBudgetWasUpdated@1100529607() : Boolean;
    BEGIN
      EXIT(ServiceContractCtrlBudgetWasUpdated);
    END;

    PROCEDURE UpdateServiceContractCtrlBudget@1100529605(VAR NewTmpServiceContractCtrlBudget@1100529601 : TEMPORARY Record 11071759);
    BEGIN
      IF NOT ServiceContractCtrlBudgetWasUpdated THEN
        EXIT;
      IF NOT TmpServiceContractCtrlBudget.ISTEMPORARY THEN
        EXIT;
      IF NOT NewTmpServiceContractCtrlBudget.ISTEMPORARY THEN
        EXIT;

      TmpServiceContractCtrlBudget.RESET;
      IF NOT TmpServiceContractCtrlBudget.ISEMPTY THEN BEGIN
        TmpServiceContractCtrlBudget.FINDSET;
        REPEAT
          IF NewTmpServiceContractCtrlBudget.GET(TmpServiceContractCtrlBudget."Reporting Date", TmpServiceContractCtrlBudget."Service Contract No.", TmpServiceContractCtrlBudget."Line No.") THEN BEGIN
            NewTmpServiceContractCtrlBudget."Reference Date" := TmpServiceContractCtrlBudget."Reference Date";
            NewTmpServiceContractCtrlBudget.MODIFY;
          END;
        UNTIL TmpServiceContractCtrlBudget.NEXT = 0;
        RemoveTmpServiceContractCtrlBudget;
      END;
      ServiceContractCtrlBudgetWasUpdated := FALSE;
    END;

    LOCAL PROCEDURE RemoveTmpServiceContractCtrlBudget@1100529603();
    BEGIN
      IF NOT TmpServiceContractCtrlBudget.ISTEMPORARY THEN
        EXIT;
      TmpServiceContractCtrlBudget.RESET;
      TmpServiceContractCtrlBudget.DELETEALL;
    END;

    BEGIN
    END.
  }
}

