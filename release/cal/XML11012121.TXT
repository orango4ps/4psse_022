OBJECT XMLport 11012121 Imp. Plant Comp Rate
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Imp. Plant Rate Component;
               SVE=Imp. avgiftskomponent f”r Maskin];
    DefaultFieldsValidation=No;
    PreserveWhiteSpace=Yes;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    XmlPortID := 11012121;
                    MainTableID := 11012585;
                    MainTableLookupPageID := 11020501;
                  END;

    OnPreXMLport=VAR
                   ConversionXMLPort4PS@1100527700 : Record 11020640;
                 BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     ConversionXMLPort4PS.UpdateFromXMLPort(XmlPortID,MainTableID,MainTableLookupPageID,0,FALSE,0);
                     COMMIT;
                     ERROR('');
                   END;

                   ConvMgt.DeleteConComment(XmlPortID);
                   ConvMgt.CreateConComment(XmlPortID,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XmlPortID,'Start');
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XmlPortID,'Stop');
                    ConvMgt.CreateConComment(XmlPortID,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{7B539476-C20A-46BC-A552-62FED55766AD}];  ;Root                ;Element ;Text     }

    { [{A667E51D-CE85-4A0D-946E-DE2CCC52ED51}];1 ;RateComponent       ;Element ;Table   ;
                                                  SourceTable=Table11012585;
                                                  SourceTableView=SORTING(Field5,Field10,Field15,Field20,Field30);
                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 StripData;
                                                                                 IF A = '' THEN
                                                                                   currXMLport.SKIP;

                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Rate Component");

                                                                                 PlantTypeRec.GET(A);
                                                                                 StandardRateCompRec.GET(C);

                                                                                 WITH "Rate Component" DO BEGIN
                                                                                   VALIDATE("Rental Type",PlantTypeRec."Rental Type");
                                                                                   VALIDATE("Plant Type",A);
                                                                                   IF B <> '' THEN
                                                                                     VALIDATE("Plant No.",B);
                                                                                   VALIDATE("Rental Rate Code",C);
                                                                                   INSERT(TRUE);
                                                                                   ImpLineCounter := ImpLineCounter + 1;

                                                                                   VALIDATE("Based on","Based on"::None);
                                                                                   CASE DInt OF
                                                                                     1: VALIDATE("Based on","Based on"::Depreciation);
                                                                                     2: VALIDATE("Based on","Based on"::"New Price");
                                                                                     3: VALIDATE("Based on","Based on"::"Base Amount");
                                                                                   END;
                                                                                   IF "Based on" <> "Based on"::None  THEN BEGIN
                                                                                     IF EDec <> 0 THEN
                                                                                       VALIDATE("Base Amount",EDec);
                                                                                     IF "Base Amount" <> 0 THEN BEGIN
                                                                                       VALIDATE(Percentage,FDec);
                                                                                       VALIDATE("Pass on Percentage",GDec);
                                                                                     END;
                                                                                   END;
                                                                                   IF HDec <> 0 THEN
                                                                                     VALIDATE(Amount,HDec);
                                                                                   MODIFY(TRUE);
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{3AC77EC7-9326-4B76-BA5F-EA1F70D4DA67}];2 ;A                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=20 }

    { [{1B889F9B-B9E2-4749-96B0-D22BA1117049}];2 ;B                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{D76B46B3-243B-4FF7-8D1D-C7B64CCFA492}];2 ;C                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{11AAC24C-6612-4FE6-9973-FE5EF2EF2C43}];2 ;D                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF D <> '' THEN
                                                                                    EVALUATE(DInt,D);
                                                                                END;

                                                  Width=50 }

    { [{F0633544-507F-4C5E-A35B-A0DD95F11E63}];2 ;E                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF E <> '' THEN
                                                                                    EVALUATE(EDec,E);
                                                                                END;

                                                  Width=50 }

    { [{98E7308F-19D5-4AF6-89FB-48DB78E52124}];2 ;F                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF F <> '' THEN
                                                                                    EVALUATE(FDec,F);
                                                                                END;

                                                  Width=50 }

    { [{23B2F6EB-78F9-48FB-BC70-858F6A53A74C}];2 ;G                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF G <> '' THEN
                                                                                    EVALUATE(GDec,G);
                                                                                END;

                                                  Width=50 }

    { [{007CC416-7129-43EA-90B0-193FFE5FCA68}];2 ;H                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF H <> '' THEN
                                                                                    EVALUATE(HDec,H);
                                                                                END;

                                                  Width=50 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100409000;;Container;
                  Name=Imp. Plant Comp Rate;
                  ContainerType=ContentArea }

    }
  }
  CODE
  {
    VAR
      StandardRateCompRec@1100525020 : Record 11012584;
      PlantTypeRec@1100525019 : Record 11012551;
      ConvMgt@1100525017 : Codeunit 11020212;
      XmlPortID@1100525015 : Integer;
      MainTableID@1100525014 : Integer;
      MainTableLookupPageID@1100527701 : Integer;
      ImpLineCounter@1100525013 : Integer;
      ConversionFileFormat@1100525012 : Record 11020691;
      RunIsImportRunBln@1100525011 : Boolean;
      DInt@1100525007 : Integer;
      EDec@1100525006 : Decimal;
      FDec@1100525005 : Decimal;
      GDec@1100525004 : Decimal;
      HDec@1100525003 : Decimal;
      Text001@1100525000 : TextConst 'ENU="[1]=Depriciation, [2]=New Price, [3]=Base Amount.";SVE="[1]=Avskrivning, [2]=Nytt pris, [3]=Basbelopp."';

    PROCEDURE StripData@1100485000();
    BEGIN
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XmlPortID);
        InsertColumnLine(XmlPortID,'A',MainTableID,"Rate Component".FIELDNAME("Plant Type"),'Code20','');
        InsertColumnLine(XmlPortID,'B',MainTableID,"Rate Component".FIELDNAME("Plant No."),'Code10','');
        InsertColumnLine(XmlPortID,'C',MainTableID,"Rate Component".FIELDNAME("Rental Rate Code"),'Code10','');
        InsertColumnLine(XmlPortID,'D',MainTableID,"Rate Component".FIELDNAME("Based on"),'Integer',Text001);
        InsertColumnLine(XmlPortID,'E',MainTableID,"Rate Component".FIELDNAME("Base Amount"),'Decimal','');
        InsertColumnLine(XmlPortID,'F',MainTableID,"Rate Component".FIELDNAME(Percentage),'Decimal','');
        InsertColumnLine(XmlPortID,'G',MainTableID,"Rate Component".FIELDNAME("Pass on Percentage"),'Decimal','');
        InsertColumnLine(XmlPortID,'H',MainTableID,"Rate Component".FIELDNAME(Amount),'Decimal','');
      END;
    END;

    PROCEDURE ClearFields@1100529900();
    BEGIN
      CLEAR(PlantTypeRec);
      CLEAR(StandardRateCompRec);
      CLEAR("Rate Component");
      B := '';
      C := '';
      D := '';
      E := '';
      F := '';
      G := '';
      H := '';
      DInt := 0;
      EDec := 0;
      FDec := 0;
      GDec := 0;
      HDec := 0;
    END;

    BEGIN
    END.
  }
}

