OBJECT Page 11012174 Norm Group Matrix
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Normens„tze;
               ENU=Norm Groups;
               NLD=Normensets;
               NOR=Normgrupper;
               SVE=Normgrupper];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11012165;
    PageType=ListPlus;
    PromotedActionCategoriesML=[DEU=Neu, Verarbeiten, Bericht, Zeilen;
                                ENU=New,Process,Report,Lines;
                                NLD=Nieuw,Proces,Lijst,Regels;
                                NOR=Ny,Prosesser,Rapporter,Rader;
                                SVE=Ny,Process,Rapport,Rader];
    OnOpenPage=BEGIN
                 IF gOperation <> '' THEN
                   Code := gOperation;

                 MATRIX_MaximumSetLength := 12;
                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                 UpdateMatrixSubForm;
               END;

    OnClosePage=BEGIN
                  CurrPage.MATRIX.PAGE.GetSelectionBuffer(SubOperationBuffer);
                END;

    ActionList=ACTIONS
    {
      { 1100525000;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525001;1 ;Action    ;
                      CaptionML=[DEU=Ausgew„hlte Zeilen anzeigen;
                                 ENU=Show Selected Lines;
                                 NLD=Toon geselecteerde regels;
                                 NOR=Vis markerte rader;
                                 SVE=Visa markerade rader];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CalculateLines;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CurrPage.MATRIX.PAGE.GetSelectionBuffer(SubOperationBuffer);

                                 //SubOperationList.SetSelectionBuffer(SubOperationBuffer);
                                 //SubOperationList.RUNMODAL;
                                 //SubOperationList.GetSelectionBuffer(SubOperationBuffer);

                                 PAGE.RUNMODAL(PAGE::"Selected Sub Operations", SubOperationBuffer);
                               END;
                                }
      { 1210190008;1 ;Action    ;
                      CaptionML=[DEU=Vorheriger Satz;
                                 ENU=Previous Set;
                                 NLD=Vorige set;
                                 NOR=Forrige sett;
                                 SVE=F”reg†ende upps„ttning];
                      ToolTipML=[DEU=Vorheriger Satz;
                                 ENU=Previous Set;
                                 NLD=Vorige set;
                                 NOR=Forrige sett;
                                 SVE=F”reg†ende upps„ttning];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Previous);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1210190007;1 ;Action    ;
                      CaptionML=[DEU=Vorherige Spalte;
                                 ENU=Previous Column;
                                 NLD=Vorige kolom;
                                 NOR=Forrige kolonne;
                                 SVE=F”reg†ende kolumn];
                      ToolTipML=[DEU=Vorherige Spalte;
                                 ENU=Previous Column;
                                 NLD=Vorige kolom;
                                 NOR=Forrige kolonne;
                                 SVE=F”reg†ende kolumn];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::PreviousColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1210190006;1 ;Action    ;
                      CaptionML=[DEU=N„chste Spalte;
                                 ENU=Next Column;
                                 NLD=Volgende kolom;
                                 NOR=Neste kolonne;
                                 SVE=N„sta kolumn];
                      ToolTipML=[DEU=N„chste Spalte;
                                 ENU=Next Column;
                                 NLD=Volgende kolom;
                                 NOR=Neste kolonne;
                                 SVE=N„sta kolumn];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::NextColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1210190005;1 ;Action    ;
                      CaptionML=[DEU=N„chster Satz;
                                 ENU=Next Set;
                                 NLD=Volgende set;
                                 NOR=Neste Sett;
                                 SVE=N„sta upps„ttning];
                      ToolTipML=[DEU=N„chster Satz;
                                 ENU=Next Set;
                                 NLD=Volgende set;
                                 NOR=Neste Sett;
                                 SVE=N„sta upps„ttning];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Next);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1210190012;1 ;Action    ;
                      CaptionML=[DEU=Erster Satz;
                                 ENU=First Set;
                                 NLD=Eerste set;
                                 NOR=F›rsta sett;
                                 SVE=F”rsta upps„ttning];
                      ToolTipML=[DEU=Erster Satz;
                                 ENU=First Set;
                                 NLD=Eerste set;
                                 NOR=F›rsta sett;
                                 SVE=F”rsta upps„ttning];
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::FirstRec);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1210190013;1 ;Action    ;
                      CaptionML=[DEU=Letzter Satz;
                                 ENU=Last Set;
                                 NLD=Laatste set;
                                 NOR=Siste sett;
                                 SVE=Senaste upps„ttning];
                      ToolTipML=[DEU=Letzter Satz;
                                 ENU=Last Set;
                                 NLD=Laatste set;
                                 NOR=Siste sett;
                                 SVE=Senaste upps„ttning];
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::LastRec);
                                 UpdateMatrixSubForm;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1210190000;;Container;
                ContainerType=ContentArea }

    { 1100525002;1;Group  ;
                CaptionML=[DEU=Allgemein;
                           ENU=General;
                           NLD=Algemeen;
                           NOR=Generell;
                           SVE=Allm„nt];
                GroupType=Group }

    { 1100525003;2;Group  ;
                GroupType=Repeater }

    { 1100525005;3;Field  ;
                SourceExpr=Code;
                Editable=false }

    { 1100525007;3;Field  ;
                SourceExpr="Cost Object" }

    { 1100525006;3;Field  ;
                SourceExpr=Description;
                Editable=false }

    { 1210190003;1;Part   ;
                Name=MATRIX;
                SubPageLink=Operation=FIELD(Code);
                PagePartID=Page11012175;
                PartType=Page }

  }
  CODE
  {
    VAR
      MATRIX_MatrixRecord@1100525011 : Record 11012164;
      MATRIX_MatrixRecords@1210190010 : ARRAY [32] OF Record 11012164;
      MATRIX_MaximumSetLength@1100525018 : Integer;
      MATRIX_PrimKeyRecInCurrSet@1100525017 : Text[1024];
      MATRIX_CaptionSet@1210190009 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1210190008 : Text[250];
      MATRIX_CurrSetLength@1100525019 : Integer;
      MATRIX_Step@1210190012 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec';
      SubOperationBuffer@1100525000 : TEMPORARY Record 11012166;
      gOperation@1100525012 : Code[20];
      g_code1@1100525008 : Code[20];
      g_code2@1100525007 : Code[20];
      g_code3@1100525006 : Code[20];
      g_code4@1100525005 : Code[20];
      g_code5@1100525004 : Code[20];
      g_code6@1100525003 : Code[20];
      g_table@1100525002 : Integer;
      g_int1@1100525001 : Integer;
      g_SubOperation@1100525009 : Code[20];

    PROCEDURE MATRIX_GenerateColumnCaptions@1152(MATRIX_SetWanted@1000 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec');
    VAR
      MatrixManagement@1002 : Codeunit 9200;
      I@1004 : Integer;
      RecRef@1006 : RecordRef;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MATRIX_MatrixRecords);

      RecRef.GETTABLE(MATRIX_MatrixRecord);
      RecRef.SETTABLE(MATRIX_MatrixRecord);
      MatrixManagement.GenerateMatrixData(
        RecRef,
        MATRIX_SetWanted,
        MATRIX_MaximumSetLength,
        MATRIX_MatrixRecord.FIELDNO(Code),
        MATRIX_PrimKeyRecInCurrSet,
        MATRIX_CaptionSet,
        MATRIX_CaptionRange,
        MATRIX_CurrSetLength);

      I := 1;
      IF MATRIX_PrimKeyRecInCurrSet <> '' THEN
        MATRIX_MatrixRecord.SETPOSITION(MATRIX_PrimKeyRecInCurrSet);
      IF MATRIX_MatrixRecord.FIND('=') THEN
        REPEAT
          MATRIX_MatrixRecords[I].COPY(MATRIX_MatrixRecord);
          I := I + 1;
        UNTIL (I > MATRIX_CurrSetLength) OR (MATRIX_MatrixRecord.NEXT <> 1);

      FOR I := I TO MATRIX_MaximumSetLength DO
        MATRIX_CaptionSet[I] := ' '; // Fill unused captions with space char, otherwise rubbish is showed in the matrix
    END;

    LOCAL PROCEDURE UpdateMatrixSubForm@7();
    BEGIN
      CurrPage.MATRIX.PAGE.Load(
        MATRIX_CaptionSet,
        MATRIX_MatrixRecords,
        MATRIX_CurrSetLength);
    END;

    PROCEDURE GetSelectedOperations@1100525000(VAR SubOperationBuffer2@1100525000 : Record 11012166);
    VAR
      SubOperationBuffer@1100525001 : TEMPORARY Record 11012166;
    BEGIN
      CurrPage.MATRIX.PAGE.GetSelectionBuffer(SubOperationBuffer);
      SubOperationBuffer2.COPY(SubOperationBuffer, TRUE);
    END;

    PROCEDURE GetOperation@1100485000(lvOper@1100485000 : Code[20]);
    VAR
      SubOperRec@1100485001 : Record 11012166;
    BEGIN
      IF NOT SubOperRec.GET(lvOper) THEN
        gOperation := ''
      ELSE
        gOperation := SubOperRec.Operation;
    END;

    PROCEDURE SetSelection@1100485003(l_table@11012000 : Integer;l_code1@11012001 : Code[20];l_code2@11012002 : Code[20];l_code3@11012003 : Code[20];l_code4@11012004 : Code[20];l_int1@1100485001 : Integer;l_code5@1210190000 : Code[20];l_code6@1100485000 : Code[20]);
    BEGIN
      g_table := l_table;
      g_code1 := l_code1;
      g_code2 := l_code2;
      g_code3 := l_code3;
      g_code4 := l_code4;
      g_int1 := l_int1;
      g_code5 := l_code5;
      g_code6 := l_code6;
    END;

    PROCEDURE SF_CopyOperation@1210190000();
    VAR
      CopyMgt@1100485000 : Codeunit 11012068;
    BEGIN
      CopyMgt.SetSelectionOperation(g_table, g_code1, g_code2, g_code3, g_code4, g_int1, g_code5, g_code6);
      CopyMgt.CopyOperationsFromBuffer(SubOperationBuffer);
    END;

    PROCEDURE ApplySelection@1100525001() : Boolean;
    VAR
      NumMark@1100528900 : Integer;
      RefreshMainProcess@1100528901 : Boolean;
    BEGIN
      //DP00381
      NumMark := SubOperationBuffer.COUNT;
      IF NumMark = 0 THEN EXIT(FALSE);
      IF NumMark = 1 THEN BEGIN
        //SF_MakeUpdate; //update current line->normal lookup
        SubOperationBuffer.FIND('=');
        g_SubOperation := SubOperationBuffer.Code;
      END ELSE BEGIN
        SF_CopyOperation; //add selection as new lines
        RefreshMainProcess := TRUE;
      END;
      EXIT(RefreshMainProcess);
    END;

    PROCEDURE SetSubOperation@1100528902(VAR iSubOperation@1100528900 : Code[20]);
    BEGIN
      //DP00381
      GetOperation(iSubOperation);
    END;

    PROCEDURE GetSubOperation@1100528900(VAR varSubOperation@1100528900 : Code[20]);
    BEGIN
      //DP00381
      varSubOperation := g_SubOperation;
    END;

    BEGIN
    {
      rtc.dbeekman:
        Kept the code as much as possible identical to Classic Client code, but it needs redesign.
        See Forms 11012174 and 11012175.

      mboers 25-11-2013
        code changed according 4PS standard for matrix pages.
    }
    END.
  }
}

