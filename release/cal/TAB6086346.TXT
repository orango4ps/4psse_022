OBJECT Table 6086346 Configured Field
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.3.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Field Code,Field Description;
    OnInsert=BEGIN
               CheckConfFieldExists;
               ForceFieldUpdateInCO;
             END;

    OnModify=BEGIN
               CheckConfFieldExists;
               ForceFieldUpdateInCO;
             END;

    OnDelete=VAR
               EMSetup@1160040002 : Record 6086300;
               FieldType@1160040001 : Record 6086345;
               ConfigField@1160040000 : Record 6086346;
             BEGIN
               ForceFieldUpdateInCO;

               IF NOT FieldType.GET("Field Code") THEN
                 EXIT;

               EMSetup.GET;
               IF FieldType.IsRequiredSystemField(Type) THEN
                 IF (EMSetup."Enable Mileage" AND (Type = Type::Mileage)) OR
                    (Type = Type::Expense) OR
                    (EMSetup."Enable Settlement") AND (Type = Type::Settlement)
                 THEN
                   ERROR(NotAllowedToDeleteSysFieldErr);

               ConfigField.SETRANGE(Type,Type);
               ConfigField.SETFILTER("Field Code",'<>%1',"Field Code");
               IF ConfigField.FINDSET THEN
                 REPEAT
                   FieldType.GET(ConfigField."Field Code");
                   IF FieldType.GetParentFieldTypeCode = "Field Code" THEN
                     ERROR(UnableToDeleteErr,FieldType.TABLECAPTION,FIELDCAPTION("Field Code"),FieldType.Code);
                 UNTIL ConfigField.NEXT = 0;
             END;

    OnRename=BEGIN
               IF Type <> xRec.Type THEN
                 ERROR(UnableToRenameErr,TABLECAPTION);
             END;

    CaptionML=[DEU=Konfiguriertes Feld;
               ENU=Configured Field;
               NLD=Geconfigureerd veld];
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                CheckVehicleRegNo;
                                                              END;

                                                   CaptionML=[DEU=Art;
                                                              ENU=Type;
                                                              NLD=Type;
                                                              NOR=Radtype;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[DEU=Ausgabe, Kilometerleistung,Ausgleich;
                                                                    ENU=Expense,Mileage,Settlement;
                                                                    NLD=Uitgave,Kilometrage,Afrekening];
                                                   OptionString=Expense,Mileage,Settlement }
    { 2   ;   ;Field Order         ;Integer       ;CaptionML=[DEU=Feldreihenfolge;
                                                              ENU=Field Order;
                                                              NLD=Veldvolgorde] }
    { 10  ;   ;Field Code          ;Code20        ;TableRelation="Field Type";
                                                   OnValidate=VAR
                                                                FieldType@1160040001 : Record 6086345;
                                                                ConfigField@1160040000 : Record 6086346;
                                                              BEGIN
                                                                IF NOT FieldType.GET("Field Code") THEN
                                                                  EXIT;

                                                                IF FieldType.GetParentFieldTypeCode <> '' THEN BEGIN
                                                                  ConfigField.SETRANGE(Type,Type);
                                                                  ConfigField.SETRANGE("Field Code",FieldType.GetParentFieldTypeCode);
                                                                  IF ConfigField.ISEMPTY THEN
                                                                    ERROR(RelatedFieldMissingErr,"Field Code",FieldType.TABLECAPTION,FieldType.GetParentFieldTypeCode,"Field Code");
                                                                END;

                                                                CheckVehicleRegNo;
                                                              END;

                                                   CaptionML=[DEU=Feldcode;
                                                              ENU=Field Code;
                                                              NLD=Veldcode];
                                                   NotBlank=Yes }
    { 11  ;   ;Field Description   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Field Type".Description WHERE (Code=FIELD(Field Code)));
                                                   CaptionML=[DEU=Feldbeschreibung;
                                                              ENU=Field Description;
                                                              NLD=Veldomschrijving;
                                                              NOR=Feltbeskrivelse;
                                                              SVE=FÑltbeskrivning];
                                                   Editable=No }
    { 20  ;   ;Sent to Continia Online;Boolean    ;CaptionML=[DEU=Gesendet an Continia Online;
                                                              ENU=Sent to Continia Online;
                                                              NLD=Verzonden naar Continia Online];
                                                   Editable=No }
    { 23  ;   ;Hide visibility by default;Boolean ;CaptionML=[DEU=Verbirg Sichtbarkeit;
                                                              ENU=Hide visibility by default;
                                                              NLD=Verberg zichtbaarheid] }
  }
  KEYS
  {
    {    ;Type,Field Order                        ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      FieldAlreadyExists@1160040004 : TextConst 'DEU=%1 - %2 bereits vorhanden.;ENU=%1 - %2 already exists.;NLD=%1 - %2 bestaat reeds.';
      NotAllowedToDeleteSysFieldErr@1160040003 : TextConst 'DEU=Sie dÅrfen ein Systemfeld nicht lîschen.;ENU=You are not allowed to delete a system field.;NLD=U mag een systeemveld niet verwijderen.';
      RelatedFieldMissingErr@1160040000 : TextConst 'DEU=%1 hat eine Beziehung zu %2 %3, das auch hinzugefÅgt werden muss, bevor Sie %4 hinzufÅgen kînnen.;ENU=%1 has a relationship to %2 %3 which must also be added before you can add %4.;NLD=%1 heeft een relatie met %2 %3 welke ook moet worden toegevoegd voordat u %4 kunt toevoegen.';
      UnableToDeleteErr@1160040001 : TextConst 'DEU=%1 kann nicht gelîscht werden, da eine Beziehung zu %2 %3 besteht.;ENU=%1 cannot be deleted as there is a relationship to %2 %3.;NLD=%1 kan niet verwijderd worden omdat er een relatie is met %2 %3.';
      UnableToRenameErr@1160040002 : TextConst 'DEU=Sie kînnen eine %1 nicht umbenennen.;ENU=You cannot rename a %1.;NLD=U kunt een %1 niet hernoemen.;NOR=Du kan ikke gi nytt navn til en %1.;SVE=Du kan inte byta namn pÜ %1.';
      VehTypeMustBeDiffTxt@1160040005 : TextConst 'DEU=%1 muss %2 fÅr %3 sein.;ENU=%1 must be %2 for %3.;NLD=%1 moet %2 voor %3 zijn.;SVE=%1 mÜste vara %2 fîr %3.';

    LOCAL PROCEDURE ForceFieldUpdateInCO@1160040000();
    VAR
      EMSetup@1160040000 : Record 6086300;
    BEGIN
      EMSetup.GET;
      EMSetup."Force Field Update in CO" := TRUE;
      EMSetup.MODIFY;
    END;

    PROCEDURE AttendeesEnabledFor@1160040001(TableID@1160040003 : Integer) : Boolean;
    VAR
      FieldType@1160040000 : Record 6086345;
      ConfiguredField@1160040002 : Record 6086346;
    BEGIN
      CASE TableID OF
        DATABASE::Expense:
          Type := Type::Expense;
        DATABASE::Mileage:
          Type := Type::Mileage;
        DATABASE::"Expense Header":
          Type := Type::Settlement;
      END;

      FieldType.SETRANGE(Type,FieldType.Type::Attendees);
      IF FieldType.FINDFIRST THEN BEGIN
        ConfiguredField.SETRANGE(Type,Type);
        ConfiguredField.SETRANGE("Field Code",FieldType.Code);
        IF ConfiguredField.FINDFIRST THEN
          EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE CheckConfFieldExists@1160040002();
    VAR
      ConfiguredField@1160040000 : Record 6086346;
    BEGIN
      ConfiguredField.SETRANGE(Type,Type);
      ConfiguredField.SETRANGE("Field Code","Field Code");
      ConfiguredField.SETFILTER("Field Order",'<>%1',"Field Order");
      IF NOT ConfiguredField.ISEMPTY THEN
        ERROR(FieldAlreadyExists,TABLECAPTION,"Field Code");
    END;

    PROCEDURE IsConfiguredFieldForTable@1160040003(TableID@1160040000 : Integer;FieldCode@1160040001 : Code[20]) : Boolean;
    VAR
      ConfiguredField@1160040002 : Record 6086346;
    BEGIN
      CASE TableID OF
        DATABASE::Expense:
          ConfiguredField.Type := ConfiguredField.Type::Expense;
        DATABASE::Mileage:
          ConfiguredField.Type := ConfiguredField.Type::Mileage;
        DATABASE::"Expense Header":
          ConfiguredField.Type := ConfiguredField.Type::Settlement;
      END;

      ConfiguredField.SETRANGE(Type,ConfiguredField.Type);
      ConfiguredField.SETRANGE("Field Code",FieldCode);
      EXIT(NOT ConfiguredField.ISEMPTY);
    END;

    PROCEDURE MoveUp@1160040009();
    VAR
      ConfField@1160040000 : Record 6086346;
      ConfFieldCrt@1160040005 : Record 6086346;
      ConfFieldPred@1160040004 : Record 6086346;
      Current@1160040003 : Integer;
      Previous@1160040001 : Integer;
    BEGIN
      Current := "Field Order";
      ConfField.GET(Type,"Field Order");
      ConfField.SETRANGE(Type,Type);
      IF ConfField.NEXT(-1) = -1 THEN
        Previous := ConfField."Field Order"
      ELSE
        EXIT;

      ConfFieldCrt.TRANSFERFIELDS(Rec);
      Rec.DELETE;
      ConfFieldCrt."Field Order" := Previous;
      ConfFieldCrt.Type := Type;

      ConfFieldPred.TRANSFERFIELDS(ConfField);
      ConfField.DELETE;
      ConfFieldPred."Field Order" := Current;
      ConfFieldPred.Type := Type;
      ConfFieldPred.INSERT;

      ConfFieldCrt.INSERT;

      Rec.GET(ConfFieldCrt.Type,ConfFieldCrt."Field Order");
    END;

    PROCEDURE MoveDown@1160040008();
    VAR
      ConfField@1160040000 : Record 6086346;
      ConfFieldCrt@1160040002 : Record 6086346;
      ConfFieldPred@1160040004 : Record 6086346;
      Current@1160040003 : Integer;
      NextOrder@1160040001 : Integer;
    BEGIN
      Current := "Field Order";
      ConfField.GET(Type,"Field Order");
      ConfField.SETRANGE(Type,Type);
      IF ConfField.NEXT(1) = 1 THEN
        NextOrder := ConfField."Field Order"
      ELSE
        EXIT;

      ConfFieldCrt.TRANSFERFIELDS(Rec);
      Rec.DELETE;
      ConfFieldCrt."Field Order" := NextOrder;
      ConfFieldCrt.Type := Type;

      ConfFieldPred.TRANSFERFIELDS(ConfField);
      ConfField.DELETE;
      ConfFieldPred."Field Order" := Current;
      ConfFieldPred.Type := Type;
      ConfFieldPred.INSERT;

      ConfFieldCrt.INSERT;

      Rec.GET(ConfFieldCrt.Type,ConfFieldCrt."Field Order");
    END;

    LOCAL PROCEDURE CheckVehicleRegNo@1160040010();
    VAR
      FieldType@1160040000 : Record 6086345;
    BEGIN
      IF NOT FieldType.GET("Field Code") THEN
        EXIT;

      IF "Field Code" = 'VEHICLE REG. NO.' THEN
        IF Type <> Type::Mileage THEN BEGIN
          Type := Type::Mileage;
          ERROR(VehTypeMustBeDiffTxt,FIELDCAPTION(Type),FORMAT(Type),FieldType.Description);
        END;
    END;

    BEGIN
    END.
  }
}

