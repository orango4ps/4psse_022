OBJECT Codeunit 6086331 Expense-Post (Yes/No)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW110.00.00.3.00;
  }
  PROPERTIES
  {
    TableNo=6086320;
    EventSubscriberInstance=Manual;
    OnRun=BEGIN
            Expense.COPY(Rec);
            Code;
            Rec := Expense;
          END;

  }
  CODE
  {
    VAR
      Expense@1003 : Record 6086320;
      ExpensePost@1004 : Codeunit 6086330;
      AccountMissmatch@1160040001 : TextConst 'DEU=Die Buchungskonfiguration wurde geÑndert und %1 in dieser Kostenposition sollte%1 sein.\\Mîchten Sie diese Kostenposition in %1aktualisieren?;ENU=The posting setup has changed and the %1 on this expense should be %1.\\Do you want to update this expense to this %1?;NLD=De %1 %2 is afwijkend van de huidige ingestelde output %3.\\Wilt u bijwerken?';
      HasWarningCommentQuestion@1160040004 : TextConst 'DEU=Diese Kostenposition beinhaltet eine oder mehrere Warnungen.\\Mîchten Sie fortfahren?;ENU=There are one or more warnings on this expense.\\Do you want to continue?;NLD=Er zijn ÇÇn of meer waarschuwingen op deze uitgave.\\Wilt u doorgaan?';
      Text001@1001 : TextConst 'DEU=Mîchten Sie einen Buchungsvorschlag fÅr diese Kostenposition erstellen?;ENU=Do you want to post this expense?;NLD=Wilt u de uitgave boeken?';

    LOCAL PROCEDURE Code@1();
    VAR
      Expense2@1160040001 : Record 6086320;
      CalculatedAccount@1160040000 : Code[20];
    BEGIN
      IF NOT CONFIRM(Text001,FALSE) THEN
        EXIT;

      CODEUNIT.RUN(CODEUNIT::"Expense-Validate",Expense);
      IF Expense.HasWarningComment(FALSE) THEN
        IF Expense.PostingSetupChanged(CalculatedAccount) THEN
          IF CONFIRM(AccountMissmatch,TRUE,Expense.FIELDCAPTION("Expense Account"),CalculatedAccount) THEN BEGIN
            Expense2.GET(Expense."Entry No.");
            Expense2.VALIDATE("Expense Account",CalculatedAccount);
            Expense2."Exp. Account Manually Changed" := FALSE;
            Expense2.MODIFY;
            Expense := Expense2;
          END;

      //RE-VALIDATE
      CODEUNIT.RUN(CODEUNIT::"Expense-Validate",Expense);

      IF Expense.HasWarningComment(FALSE) THEN
        IF NOT CONFIRM(HasWarningCommentQuestion,FALSE) THEN
          EXIT;

      Expense.HasErrorComment(TRUE,TRUE);
      ExpensePost.RUN(Expense);
    END;

    PROCEDURE Preview@6086300(VAR Rec@6086300 : Record 6086320);
    VAR
      ExpensePostYesNo@6086301 : Codeunit 6086331;
      GenJnlPostPreview@6086303 : Codeunit 19;
    BEGIN
      BINDSUBSCRIPTION(ExpensePostYesNo);
      GenJnlPostPreview.Preview(ExpensePostYesNo,Rec);
    END;

    [EventSubscriber(Codeunit,19,OnRunPreview)]
    LOCAL PROCEDURE OnRunPreview@3(VAR Result@1000 : Boolean;Subscriber@1001 : Variant;RecVar@1002 : Variant);
    VAR
      RecRef@6086300 : RecordRef;
    BEGIN
      IF NOT RecVar.ISRECORD THEN
        EXIT;

      RecRef.GETTABLE(RecVar);
      IF RecRef.NUMBER = DATABASE::Expense THEN BEGIN
        Expense.COPY(RecVar);
        ExpensePost.SetPreviewMode(TRUE);
        Result := ExpensePost.RUN(Expense);
      END;
    END;

    BEGIN
    END.
  }
}

