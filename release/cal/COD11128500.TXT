OBJECT Codeunit 11128500 Norwegian VAT Tools
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVNO7.00 (10600);
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text003@1080002 : TextConst 'ENU=This will delete the current VAT Periods and create new.\Create the six standard Norwegian VAT Periods?;NOR=Dette sletter gjeldende mva-perioder og oppretter nye.\Vil du opprette de seks norske mva-periodene som er standard?';
      Text004@1080003 : TextConst 'ENU=%1 to %2;NOR=%1 til %2;SVE=%1 till %2';
      Text005@1080004 : TextConst 'ENU=is in a settled and closed VAT period (%1 period %2);NOR=er i en oppgjort og lukket mva-periode (%1 periode %2)';
      Text006@1080006 : TextConst 'ENU="=%1 can only be used with Sale";NOR="=%1 kan bare brukes med Salg"';
      Text007@1080005 : TextConst 'ENU="=%1 can only be used when posting without Tax";NOR="=%1 kan bare brukes i forbindelse med bokf›ring uten mva."';
      Text008@1080007 : TextConst 'ENU=must be zero when posting outside tax area;NOR=m† v‘re null n†r du bokf›rer utenfor et mva-omr†de';
      Text009@1080008 : TextConst 'ENU=must be zero when %1 in %2 is True;NOR=m† v‘re null n†r %1 i %2 er Sant';
      GenJnlLineExt@111280000 : Record 11128091;

    PROCEDURE GLEntryCalcPropDeduction@1080048(VAR PropDeductionVAT@1080000 : Decimal;VAR PropDeductionVATACY@1080001 : Decimal;GLEntry@1080002 : Record 17;GenJnlLine@1080003 : Record 81;VATPostingSetup@1080004 : Record 325;AddCurrGLEntryVATAmt@1080006 : Decimal) : Boolean;
    VAR
      GLSetup@1080005 : Record 98;
    BEGIN
      IF (GenJnlLine."Gen. Posting Type" = GenJnlLine."Gen. Posting Type"::Purchase) AND
         VATPostingSetup."Calc. Prop. Deduction VAT" AND
         (GLEntry.Amount <> 0)
      THEN BEGIN
        // Calculate Amount adjustments
        PropDeductionVAT :=
          GLEntry."VAT Amount" - AdjustForPropDeduction(GLEntry."VAT Amount",GenJnlLine,VATPostingSetup);
        GLSetup.GET;
        IF GenJnlLine."Source Currency Code" = GLSetup."Additional Reporting Currency" THEN
          PropDeductionVATACY :=
            AddCurrGLEntryVATAmt - AdjustForPropDeduction(AddCurrGLEntryVATAmt,GenJnlLine,VATPostingSetup)
        ELSE
          EXIT(FALSE);
      END ELSE BEGIN
        PropDeductionVAT := 0;
        PropDeductionVATACY := 0;
      END;
      EXIT(TRUE);
    END;

    PROCEDURE AdjustForPropDeduction@1080050(Amount@1080000 : Decimal;GenJnlLine@1080001 : Record 81;VATPostingSetup@1080002 : Record 325) : Decimal;
    BEGIN
      IF (GenJnlLine."Gen. Posting Type" = GenJnlLine."Gen. Posting Type"::Purchase) AND
         VATPostingSetup."Calc. Prop. Deduction VAT" AND
         (Amount <> 0)
      THEN
        EXIT(ROUND(Amount * VATPostingSetup."Proportional Deduction VAT %" / 100));
      EXIT(Amount);
    END;

    PROCEDURE VATEntrySetVATInfo@1080052(VAR VATEntry@1080000 : Record 254;GenJnlLine@1080001 : Record 81;GenJnlLineExt@100000000 : Record 11128091);
    VAR
      VATProdPostGrp@1080002 : Record 324;
      VATCode@1080003 : Record 11128501;
    BEGIN
      CASE GenJnlLineExt."VAT Base Amount Type" OF
        GenJnlLineExt."VAT Base Amount Type"::Automatic:
          IF VATEntry.Amount = 0 THEN BEGIN
            VATProdPostGrp.GET(GenJnlLine."VAT Prod. Posting Group");
            IF VATProdPostGrp."Outside Tax Area" THEN
              VATEntry."Base Amount Type" := VATEntry."Base Amount Type"::"Outside Tax Area"
            ELSE
              VATEntry."Base Amount Type" := VATEntry."Base Amount Type"::"Without VAT";
          END ELSE
            VATEntry."Base Amount Type" := VATEntry."Base Amount Type"::"With VAT";
        GenJnlLineExt."VAT Base Amount Type"::"With VAT":
          VATEntry."Base Amount Type" := VATEntry."Base Amount Type"::"With VAT";
        GenJnlLineExt."VAT Base Amount Type"::"Without VAT":
          VATEntry."Base Amount Type" := VATEntry."Base Amount Type"::"Without VAT";
      END;
      VATEntry."VAT Code" := GenJnlLineExt."VAT Code";

      // Test the Gen. Posting Type against the setup
      IF VATEntry."VAT Code" <> '' THEN BEGIN
        VATCode.GET(VATEntry."VAT Code");
        CASE VATCode."Test Gen. Posting Type" OF
          VATCode."Test Gen. Posting Type"::Mandatory:
            GenJnlLine.TESTFIELD("Gen. Posting Type");
          VATCode."Test Gen. Posting Type"::Same:
            GenJnlLine.TESTFIELD("Gen. Posting Type",VATCode."Gen. Posting Type");
        END;
      END;
    END;

    PROCEDURE InitVATCode_GenJnlLine@1080000(VAR GenJnlLine@1080000 : Record 81;UseBalanceFields@1080003 : Boolean);
    VAR
      VATPostingSetup@1080001 : Record 325;
      VATCode@1080002 : Record 11128501;
    BEGIN
      GenJnlLineExt.InitGetLine(GenJnlLine);
      WITH GenJnlLine DO
        IF UseBalanceFields THEN BEGIN
          IF VATPostingSetup.GET("Bal. VAT Bus. Posting Group","Bal. VAT Prod. Posting Group") THEN BEGIN
            GenJnlLineExt."Bal. VAT Code" := VATPostingSetup."VAT Code";
            IF VATPostingSetup."VAT Code" <> '' THEN BEGIN
              VATCode.GET(VATPostingSetup."VAT Code");
              "Bal. Gen. Posting Type" := VATCode."Gen. Posting Type";
            END;
          END ELSE
            GenJnlLineExt."Bal. VAT Code" := '';
        END ELSE BEGIN
          IF VATPostingSetup.GET("VAT Bus. Posting Group","VAT Prod. Posting Group") THEN BEGIN
            GenJnlLineExt."VAT Code" := VATPostingSetup."VAT Code";
            IF VATPostingSetup."VAT Code" <> '' THEN BEGIN
              VATCode.GET(VATPostingSetup."VAT Code");
              "Gen. Posting Type" := VATCode."Gen. Posting Type";
            END;
          END ELSE
            GenJnlLineExt."VAT Code" := '';
        END;
      GenJnlLineExt.SaveUpdateLine(GenJnlLine);//4PSSE
    END;

    PROCEDURE InitVATCode_SalesLine@1080002(VAR SalesLine@1080000 : Record 37);
    VAR
      VATPostingSetup@1080001 : Record 325;
      VATCode@1080002 : Record 11128501;
    BEGIN
      IF VATPostingSetup.GET(SalesLine."VAT Bus. Posting Group",SalesLine."VAT Prod. Posting Group") THEN BEGIN
        SalesLine."VAT Code" := VATPostingSetup."VAT Code";
        IF VATPostingSetup."VAT Code" <> '' THEN
          VATCode.GET(VATPostingSetup."VAT Code");
      END ELSE
        SalesLine."VAT Code" := '';
    END;

    PROCEDURE InitVATCode_PurchaseLine@1080003(VAR PurchaseLine@1080000 : Record 39);
    VAR
      VATPostingSetup@1080001 : Record 325;
      VATCode@1080002 : Record 11128501;
    BEGIN
      IF VATPostingSetup.GET(PurchaseLine."VAT Bus. Posting Group",PurchaseLine."VAT Prod. Posting Group") THEN BEGIN
        PurchaseLine."VAT Code" := VATPostingSetup."VAT Code";
        IF VATPostingSetup."VAT Code" <> '' THEN
          VATCode.GET(VATPostingSetup."VAT Code");
      END ELSE
        PurchaseLine."VAT Code" := '';
    END;

    PROCEDURE InitPostingGrps_GenJnlLine@1080004(VAR GenJnlLine@1080001 : Record 81;VAR GenJnlLineExt@100000000 : Record 11128091;UseBalanceFields@1080000 : Boolean);
    VAR
      VATCode@1080002 : Record 11128501;
      VATPostingSetup@1080003 : Record 325;
    BEGIN
      WITH GenJnlLine DO
        IF UseBalanceFields THEN
          IF GenJnlLineExt."Bal. VAT Code" = '' THEN BEGIN
            VALIDATE("Bal. Gen. Posting Type","Bal. Gen. Posting Type"::" ");
            VALIDATE("Bal. VAT Bus. Posting Group",'');
            VALIDATE("Bal. VAT Prod. Posting Group",'');
          END ELSE BEGIN
            VATCode.GET(GenJnlLineExt."Bal. VAT Code");
            VATPostingSetup.SETCURRENTKEY("VAT Code");
            VATPostingSetup.SETRANGE("VAT Code",GenJnlLineExt."Bal. VAT Code");
            VATPostingSetup.FINDFIRST;
            VALIDATE("Bal. Gen. Posting Type",VATCode."Gen. Posting Type");
            VALIDATE("Bal. VAT Bus. Posting Group",VATPostingSetup."VAT Bus. Posting Group");
            VALIDATE("Bal. VAT Prod. Posting Group",VATPostingSetup."VAT Prod. Posting Group");
          END
        ELSE
          IF GenJnlLineExt."VAT Code" = '' THEN BEGIN
            VALIDATE("Gen. Posting Type","Gen. Posting Type"::" ");
            VALIDATE("VAT Bus. Posting Group",'');
            VALIDATE("VAT Prod. Posting Group",'');
          END ELSE BEGIN
            VATCode.GET(GenJnlLineExt."VAT Code");
            VATPostingSetup.SETCURRENTKEY("VAT Code");
            VATPostingSetup.SETRANGE("VAT Code",GenJnlLineExt."VAT Code");
            VATPostingSetup.FINDFIRST;
            VALIDATE("Gen. Posting Type",VATCode."Gen. Posting Type");
            VALIDATE("VAT Bus. Posting Group",VATPostingSetup."VAT Bus. Posting Group");
            VALIDATE("VAT Prod. Posting Group",VATPostingSetup."VAT Prod. Posting Group");
          END;
    END;

    PROCEDURE InitPostingGrps_SalesLine@1080005(VAR SalesLine@1080000 : Record 37);
    VAR
      VATPostingSetup@1080001 : Record 325;
    BEGIN
      IF SalesLine."VAT Code" = '' THEN BEGIN
        SalesLine.VALIDATE("VAT Bus. Posting Group",'');
        SalesLine.VALIDATE("VAT Prod. Posting Group",'');
      END ELSE BEGIN
        VATPostingSetup.SETCURRENTKEY("VAT Code");
        VATPostingSetup.SETRANGE("VAT Code",SalesLine."VAT Code");
        VATPostingSetup.FINDFIRST;
        SalesLine."VAT Bus. Posting Group" := VATPostingSetup."VAT Bus. Posting Group";
        SalesLine."VAT Prod. Posting Group" := VATPostingSetup."VAT Prod. Posting Group";
        SalesLine.VALIDATE("VAT Bus. Posting Group");
        SalesLine.VALIDATE("VAT Prod. Posting Group");
      END;
    END;

    PROCEDURE InitPostingGrps_PurchaseLine@1080006(VAR PurchaseLine@1080000 : Record 39);
    VAR
      VATPostingSetup@1080001 : Record 325;
    BEGIN
      IF PurchaseLine."VAT Code" = '' THEN BEGIN
        PurchaseLine.VALIDATE("VAT Bus. Posting Group",'');
        PurchaseLine.VALIDATE("VAT Prod. Posting Group",'');
      END ELSE BEGIN
        VATPostingSetup.SETCURRENTKEY("VAT Code");
        VATPostingSetup.SETRANGE("VAT Code",PurchaseLine."VAT Code");
        VATPostingSetup.FINDFIRST;
        PurchaseLine."VAT Bus. Posting Group" := VATPostingSetup."VAT Bus. Posting Group";
        PurchaseLine."VAT Prod. Posting Group" := VATPostingSetup."VAT Prod. Posting Group";
        PurchaseLine.VALIDATE("VAT Bus. Posting Group");
        PurchaseLine.VALIDATE("VAT Prod. Posting Group");
      END;
    END;

    PROCEDURE CreateStdVATPeriods@1080001(AskUser@1080005 : Boolean);
    VAR
      VATPeriod@1080001 : Record 11128502;
      Date@1080002 : Record 2000000007;
      PeriodNo@1080000 : Integer;
      MonthName1@1080003 : Text[30];
      MonthName2@1080004 : Text[30];
    BEGIN
      // Create Norwegian std. six VAT Periods
      IF AskUser THEN
        IF NOT CONFIRM(Text003) THEN
          EXIT;
      VATPeriod.DELETEALL;
      FOR PeriodNo := 1 TO 6 DO BEGIN
        VATPeriod.VALIDATE("Period No.",PeriodNo);
        VATPeriod.VALIDATE("Start Day",1);
        VATPeriod.VALIDATE("Start Month",2 * PeriodNo - 1);

        // Find month names
        Date.SETRANGE("Period Type",Date."Period Type"::Month);
        Date.SETRANGE("Period Start",DMY2DATE(1,PeriodNo * 2 - 1,2000),010101D);
        Date.FINDSET;
        MonthName1 := Date."Period Name";
        Date.NEXT;
        MonthName2 := Date."Period Name";

        VATPeriod.VALIDATE(Description,STRSUBSTNO(Text004,MonthName1,MonthName2));
        VATPeriod.INSERT(TRUE);
      END;
    END;

    PROCEDURE FirstDateInVATPeriod@1080008(DateInPeriod@1080000 : Date) : Date;
    VAR
      VATPeriod@1080004 : Record 11128502;
      Day@1080003 : Integer;
      Month@1080002 : Integer;
    BEGIN
      IF FORMAT(DateInPeriod) = '' THEN
        EXIT(000101D);
      Day := DATE2DMY(DateInPeriod,1);
      Month := DATE2DMY(DateInPeriod,2);
      VATPeriod.CheckPeriods;
      VATPeriod.SETCURRENTKEY("Start Month","Start Day");
      VATPeriod.SETRANGE("Start Month",0,Month);
      VATPeriod.SETRANGE("Start Day",0,Day);
      VATPeriod.FINDLAST;
      EXIT(DMY2DATE(VATPeriod."Start Day",VATPeriod."Start Month",DATE2DMY(DateInPeriod,3)));
    END;

    PROCEDURE VATPeriodNo@1080007(DateInPeriod@1080000 : Date) : Integer;
    VAR
      VATPeriod@1080001 : Record 11128502;
      Day@1080002 : Integer;
      Month@1080003 : Integer;
    BEGIN
      Day := DATE2DMY(DateInPeriod,1);
      Month := DATE2DMY(DateInPeriod,2);
      VATPeriod.CheckPeriods;
      VATPeriod.SETCURRENTKEY("Start Month","Start Day");
      VATPeriod.SETRANGE("Start Month",0,Month);
      VATPeriod.SETRANGE("Start Day",0,Day);
      VATPeriod.FINDLAST;
      EXIT(VATPeriod."Period No.");
    END;

    PROCEDURE RunCheckNorwegianVAT@1080009(GenJnlLine@1080000 : Record 81;GenJnlLineExt@100000000 : Record 11128091;VAR AllowPostingInClosedVATPeriod@1080001 : Boolean);
    VAR
      SettledVATPeriod@1080003 : Record 11128500;
      VATProdPostGrp@1080002 : Record 324;
      GLSetup@1080004 : Record 98;
    BEGIN
      WITH GenJnlLine DO BEGIN
        IF AllowPostingInClosedVATPeriod THEN
          AllowPostingInClosedVATPeriod := FALSE
        ELSE
          IF SettledVATPeriod.GET(DATE2DMY("Posting Date",3),VATPeriodNo("Posting Date")) THEN
            IF SettledVATPeriod.Closed THEN
              FIELDERROR("Posting Date",STRSUBSTNO(Text005,SettledVATPeriod.Year,SettledVATPeriod."Period No."));

        IF GenJnlLineExt."VAT Base Amount Type" <> GenJnlLineExt."VAT Base Amount Type"::Automatic THEN BEGIN
          IF ("Gen. Posting Type" = "Gen. Posting Type"::Purchase) OR
             ("Bal. Gen. Posting Type" = "Bal. Gen. Posting Type"::Purchase)
          THEN
            GenJnlLineExt.FIELDERROR("VAT Base Amount Type",STRSUBSTNO(Text006,GenJnlLineExt."VAT Base Amount Type"));
          IF ("VAT Amount" <> 0) OR ("Bal. VAT Amount" <> 0) THEN
            GenJnlLineExt.FIELDERROR("VAT Base Amount Type",STRSUBSTNO(Text007,GenJnlLineExt."VAT Base Amount Type"));
        END;

        // VAT not possible Outside Tax Area
        IF "VAT Prod. Posting Group" <> '' THEN BEGIN
          VATProdPostGrp.GET("VAT Prod. Posting Group");
          IF VATProdPostGrp."Outside Tax Area" AND ("VAT Amount" <> 0) THEN
            FIELDERROR("VAT Amount",Text008);
        END;
        IF "Bal. VAT Prod. Posting Group" <> '' THEN BEGIN
          VATProdPostGrp.GET("Bal. VAT Prod. Posting Group");
          IF VATProdPostGrp."Outside Tax Area" AND ("Bal. VAT Amount" <> 0) THEN
            FIELDERROR("Bal. VAT Amount",Text008);
        END;

        // VAT other than Reverse Charge is not possible if the company is Not VAT xxx
        GLSetup.GET;
        IF GLSetup."Non-Taxable" THEN BEGIN
          IF ("VAT Amount" <> 0) AND ("VAT Calculation Type" <> "VAT Calculation Type"::"Reverse Charge VAT") THEN
            FIELDERROR("VAT Amount",STRSUBSTNO(Text009,GLSetup.FIELDCAPTION("Non-Taxable"),GLSetup.TABLECAPTION));
          IF ("Bal. VAT Amount" <> 0) AND ("Bal. VAT Calculation Type" <> "Bal. VAT Calculation Type"::"Reverse Charge VAT") THEN
            FIELDERROR("Bal. VAT Amount",STRSUBSTNO(Text009,GLSetup.FIELDCAPTION("Non-Taxable"),GLSetup.TABLECAPTION));
        END;
      END;
    END;

    BEGIN
    END.
  }
}

