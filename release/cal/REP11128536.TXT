OBJECT Report 11128536 OCR Payment - Data Dialog
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVNO10.00 (15000065),4PSSE.NO;
  }
  PROPERTIES
  {
    CaptionML=[ENU=OCR Payment - Data Dialog;
               NOR=OCR-betaling - datadialog];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   OCRSetup.GET;
                   SalesSetup.GET;
                   FileName := OCRSetup.FileName;
                   BalAccType := OCRSetup."Bal. Account Type";
                   BalAccNo := OCRSetup."Bal. Account No.";
                 END;

    OnPreReport=BEGIN
                  IF FileName = '' THEN
                    ERROR(Text160815);

                  ServerTempFile := FileMgt.UploadFileSilent(FileName);

                  IF ((OCRSetup."Journal Template Name" <> '') OR (OCRSetup."Journal Name" <> '')) AND
                     ((OCRSetup."Journal Template Name" <> JournalSelection."Journal Template Name") OR
                      (OCRSetup."Journal Name" <> JournalSelection."Journal Batch Name"))
                  THEN
                    ERROR(
                      text160802,
                      OCRSetup."Journal Template Name",
                      OCRSetup."Journal Name");

                  GenJnlLine.SETRANGE("Journal Template Name",JournalSelection."Journal Template Name");
                  GenJnlLine.SETRANGE("Journal Batch Name",JournalSelection."Journal Batch Name");
                  IF GenJnlLine.FINDLAST THEN BEGIN
                    IF NOT CONFIRM(text160803,FALSE) THEN
                      ERROR('');
                    NextLineNo := GenJnlLine."Line No." + 10000;
                  END ELSE
                    NextLineNo := 10000;

                  RegisterJournal.GET(JournalSelection."Journal Template Name",JournalSelection."Journal Batch Name");
                  RegisterJournal.TESTFIELD("Bal. Account No.",'');
                  RegisterJournal.TESTFIELD("No. Series");

                  TxtFile.TEXTMODE := TRUE;
                  TxtFile.OPEN(ServerTempFile);

                  BalEntrySum := 0;
                  NumberOfWarnings := 0;
                  NumberOfEntries := 0;
                  NewDocumentNo := FALSE;
                  COMMIT;
                  LatestOCRDate := 0D;

                  WHILE TxtFile.LEN <> TxtFile.POS DO BEGIN
                    TxtFile.READ(RecordContent);
                    RecordType := COPYSTR(RecordContent,7,2);
                    CASE RecordType OF
                      '10':
                        RecordType10;
                      '20':
                        RecordType20;
                      '21':
                        BEGIN
                          RecordType21;
                          CreatePayment;
                        END;
                      '22':
                        RecordType22;
                      '40':
                        RecordType40;
                      '41':
                        RecordType41;
                    END;
                  END;
                END;

    OnPostReport=BEGIN
                   IF BalEntrySum <> 0 THEN
                     CreateBalEntry;

                   TxtFile.CLOSE;
                   MessageText := STRSUBSTNO(text160806,NumberOfEntries);
                   IF NumberOfWarnings > 0 THEN
                     MESSAGE(text160807,MessageText,NumberOfWarnings)
                   ELSE
                     MESSAGE(MessageText);

                   IF OCRSetup."Delete Return File" THEN
                     CreateFilename;
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1080000;2;Field     ;
                  Name=FileNameTextBox;
                  CaptionML=[ENU=File Name;
                             NOR=Filnavn;
                             SVE=Filnamn];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=FileName;
                  OnAssistEdit=BEGIN
                                 FileName := FileMgt.OpenFileDialog(Text10623,FileName,Text10624);
                               END;
                                }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CustEntry@1080002 : Record 21;
      JournalSelection@1080003 : Record 81;
      PrevGenJnlLine@1080004 : Record 81;
      RegisterJournal@1080005 : Record 232;
      OCRSetup@1080006 : Record 11128512;
      SalesSetup@1080007 : Record 311;
      Reminder@1080008 : Record 297;
      GenJnlLine@1080001 : Record 81;
      FileMgt@1080030 : Codeunit 419;
      TxtFile@1080032 : File;
      OCRDate@1080018 : Date;
      LatestOCRDate@1080015 : Date;
      BalAccType@1080037 : 'Gen. Ledg. Account,,,Bank account';
      BalAccNo@1080024 : Code[20];
      ApplyToDocumentNo@1080023 : Code[20];
      ApplyToDocumentType@1080012 : Code[1];
      FileName@1080009 : Text[250];
      RecordContent@1080036 : Text[250];
      RecordType@1080035 : Text[2];
      KID@1080034 : Text[25];
      ServerTempFile@1080017 : Text[1024];
      file1@1080014 : Text[250];
      file2@1080013 : Text[250];
      MessageText@1080027 : Text[250];
      OCRAmount@1080028 : Decimal;
      BalEntrySum@1080025 : Decimal;
      DivergenceAmount@1080019 : Decimal;
      RemainingAmount@1080016 : Decimal;
      NumberOfEntries@1080020 : Integer;
      NumberOfWarnings@1080021 : Integer;
      NextLineNo@1080010 : Integer;
      text160801@1080029 : TextConst 'ENU=OCR-Payment;NOR=OCR-betaling';
      text160813@1080011 : TextConst 'ENU=OCR-Payment, %1;NOR=OCR-betaling, %1';
      text160804@1080051 : TextConst '@@@=Parameter 1 - document type, 2 - document number.;ENU=Divergence, OCR-Payment (%1 %2);NOR=Divergens, OCR-betaling (%1 %2)';
      text160802@1080049 : TextConst 'ENU=OCR payments can only be imported into journal Journal Template Name %1, Journal Name %2.;NOR=OCR-betalinger kan bare importeres til journalmalnavnet %1, journalnavn %2.';
      text160803@1080048 : TextConst 'ENU=The journal already contains lines.\Import?;NOR=Kladden inneholder allerede linjer.\Vil du importere?';
      text160806@1080047 : TextConst 'ENU=%1 payments are imported.;NOR=%1 betalinger er importert.';
      text160807@1080041 : TextConst 'ENU=%1\Number of warnings for import: %2.;NOR=%1\Antall advarsler for import: %2.';
      text160808@1080040 : TextConst 'ENU=%1\Following warning nos.: %2;NOR=%1\F›lgende advarselsnumre: %2';
      text160809@1080039 : TextConst 'ENU=Amount paid in does not correspond to the remaining amount %1.;NOR=Innbetalt bel›p tilsvarer ikke det gjenst†ende bel›pet %1.';
      text160810@1080038 : TextConst 'ENU=Error in KID "%1".;NOR=Feil i KID %1.';
      text160811@1080058 : TextConst 'ENU=Customer entry is closed (entry serial no. %1).;NOR=Kundepost er lukket (postserienr. %1).';
      text160812@1080059 : TextConst 'ENU=Payment, reminder no. %1.\Apply-to must be specified manually.;NOR=Betaling, p†minnelsesnr. %1.\Utligning m† angis manuelt.';
      Text160815@1080033 : TextConst 'ENU=Specify file name.;NOR=Angi filnavn.';
      text160816@1080043 : TextConst 'ENU=Error unknown;NOR=Ukjent feil';
      text160817@1080042 : TextConst '@@@=Parameter 1 - integer, 2 - text.;ENU=Warning no. %1: %2;NOR=Advarselsnr. %1: %2';
      text160818@1080046 : TextConst 'ENU=Divergence created.\Amount paid in does not correspond with the remaining amount %1.;NOR=Divergens opprettet.\Innbetalt bel›p tilsvarer ikke det gjenst†ende bel›pet %1.';
      text160819@1080045 : TextConst 'ENU="Document no. ""%1"" does not exist.\KID=""%2"".";NOR="Bilagsnr. %1 finnes ikke.\KID=%2."';
      text160820@1080044 : TextConst 'ENU="Reminder no. ""%1"" does not exist.\KID=""%2"".";NOR="P†minnelsesnr. %1 finnes ikke.\KID=%2."';
      Text10623@1080056 : TextConst 'ENU=Import from OCR Payment File.;NOR=Innlesing fra OCR-betalingsfil.';
      Text10624@1080055 : TextConst 'ENU=Text Files (*.txt)|*.txt|All Files (*.*)|*.*;NOR=Tekstfiler (*.txt)|*.txt|Alle filer (*.*)|*.*';
      NewDocumentNo@1080022 : Boolean;
      GenJnlLineExt@111280000 : Record 11128091;

    LOCAL PROCEDURE CreatePayment@1080006();
    BEGIN
      IF LatestOCRDate <> OCRDate THEN BEGIN
        IF BalEntrySum <> 0 THEN
          CreateBalEntry;
        LatestOCRDate := OCRDate;
      END;

      BalEntrySum := BalEntrySum + OCRAmount;
      CLEAR(GenJnlLine);
      GenJnlLine.VALIDATE("Journal Template Name",JournalSelection."Journal Template Name");
      GenJnlLine.VALIDATE("Journal Batch Name",JournalSelection."Journal Batch Name");
      IF NewDocumentNo THEN
        GenJnlLine.SetUpNewLine(PrevGenJnlLine,PrevGenJnlLine."Balance (LCY)",TRUE)
      ELSE
        GenJnlLine.SetUpNewLine(PrevGenJnlLine,1,TRUE);
      GenJnlLine.VALIDATE("Line No.",NextLineNo);
      NextLineNo := NextLineNo + 10000;
      GenJnlLine.VALIDATE("Posting Date",OCRDate);
      GenJnlLine.VALIDATE("Document Type",GenJnlLine."Document Type"::Payment);
      GenJnlLine.VALIDATE("Account Type",GenJnlLine."Account Type"::Customer);
      GenJnlLine.VALIDATE("Applies-to Doc. Type",GenJnlLine."Applies-to Doc. Type"::Invoice);
      GenJnlLineExt.InitGetLine(GenJnlLine);//4PSSE

      IF KID[25] = '''' THEN BEGIN    // Wrong KID
        KID := COPYSTR(KID,1,24);  // Delete error markings ''''.
        GenJnlLine.VALIDATE(Amount,OCRAmount);
        SetWarning(2); // Wrong KID
      END ELSE BEGIN
        ApplyToDocumentNo := FindApplyToDocumentNo(ApplyToDocumentNo); //4PSSE
        ApplyToDocumentNo := DeleteZeros(ApplyToDocumentNo);
        IF ApplyToDocumentType = '3' THEN BEGIN
          // Find the reminder. Then, the customer no is known:
          IF Reminder.GET(ApplyToDocumentNo) THEN BEGIN
            GenJnlLine.VALIDATE("Account No.",Reminder."Customer No.");
            SetWarning(4);
          END ELSE
            SetWarning(7); // Reminder does not exist
          GenJnlLine.VALIDATE(Amount,OCRAmount);
          SetWarning(4);
        END ELSE BEGIN
          // Find invoice/credit memo. Then, the customer no. is known:
          CustEntry.SETCURRENTKEY("Document No.","Document Type");
          CASE ApplyToDocumentType OF
            '0','1':
              CustEntry.SETRANGE("Document Type",CustEntry."Document Type"::Invoice);
            '2':
              CustEntry.SETRANGE("Document Type",CustEntry."Document Type"::"Finance Charge Memo");
          END;
          CustEntry.SETRANGE("Document No.",ApplyToDocumentNo);

          IF NOT CustEntry.FINDFIRST THEN BEGIN
            SetWarning(6); // Document no. does not exist
            // Create temporary customer entry and info used in following:
            CustEntry."Customer No." := '';
            CustEntry.Open := TRUE;
            RemainingAmount := -OCRAmount;
            ApplyToDocumentNo := '';
          END ELSE BEGIN
            CustEntry.CALCFIELDS("Remaining Amount");
            RemainingAmount := CustEntry."Remaining Amount";
          END;
          GenJnlLine.VALIDATE("Account No.",CustEntry."Customer No.");
          GenJnlLine.VALIDATE(Amount,OCRAmount);
          CASE TRUE OF
            NOT CustEntry.Open:
              SetWarning(3); // Customer entry is closed
            (GenJnlLine.Amount <> -RemainingAmount) AND
            (ABS(GenJnlLine.Amount + RemainingAmount) <= OCRSetup."Max. Divergence"):
              BEGIN
                SetWarning(5); // Wrong amount - automatic divergence entry
                DivergenceAmount := GenJnlLine.Amount + RemainingAmount;
                // Apply to ledger
                GenJnlLine.VALIDATE(Amount,-RemainingAmount);
              END;
            GenJnlLine.Amount <> -RemainingAmount:
              SetWarning(1); // Wrong amount
          END;

          GenJnlLine.VALIDATE("Applies-to Doc. No.",ApplyToDocumentNo);
        END;
      END;
      GenJnlLine.VALIDATE(Description,text160801);
      GenJnlLine."Received amount" := OCRAmount; //4PSSE
      GenJnlLine.INSERT(TRUE);
      GenJnlLineExt.SaveUpdateLine(GenJnlLine);//4PSSE
      PrevGenJnlLine := GenJnlLine;

      IF DivergenceAmount <> 0 THEN
        CreateDivergence(DivergenceAmount);

      NumberOfEntries := NumberOfEntries + 1;
      NewDocumentNo := FALSE;
    END;

    LOCAL PROCEDURE CreateBalEntry@1080012();
    BEGIN
      CLEAR(GenJnlLine);
      GenJnlLine.VALIDATE("Journal Template Name",JournalSelection."Journal Template Name");
      GenJnlLine.VALIDATE("Journal Batch Name",JournalSelection."Journal Batch Name");
      GenJnlLine.SetUpNewLine(PrevGenJnlLine,1,TRUE);
      GenJnlLine.VALIDATE("Line No.",NextLineNo);
      NextLineNo := NextLineNo + 10000;
      GenJnlLine.VALIDATE("Posting Date",LatestOCRDate);
      GenJnlLine.VALIDATE("Document Type",GenJnlLine."Document Type"::Payment);
      GenJnlLine.VALIDATE("Account Type",BalAccType);
      GenJnlLine.VALIDATE("Account No.",BalAccNo);
      GenJnlLine.VALIDATE(Description,
        COPYSTR(STRSUBSTNO(text160813,LatestOCRDate),1,MAXSTRLEN(GenJnlLine.Description)));
      GenJnlLine.VALIDATE(Amount,-BalEntrySum);
      GenJnlLine.INSERT(TRUE);
      PrevGenJnlLine := GenJnlLine;

      BalEntrySum := 0;
      NewDocumentNo := TRUE;
    END;

    PROCEDURE CreateDivergence@1080011(DivergenceAmount@1080000 : Decimal);
    BEGIN
      IF OCRSetup."Max. Divergence" = 0 THEN
        EXIT;
      OCRSetup.TESTFIELD("Divergence Account No.");

      CLEAR(GenJnlLine);
      GenJnlLine.VALIDATE("Journal Template Name",JournalSelection."Journal Template Name");
      GenJnlLine.VALIDATE("Journal Batch Name",JournalSelection."Journal Batch Name");
      GenJnlLine.SetUpNewLine(GenJnlLine,0,FALSE);
      GenJnlLine.VALIDATE("Line No.",NextLineNo);
      NextLineNo := NextLineNo + 10000;
      GenJnlLine.VALIDATE("Posting Date",LatestOCRDate);
      GenJnlLine.VALIDATE("Document Type",GenJnlLine."Document Type"::" ");
      GenJnlLine.VALIDATE("Account Type",GenJnlLine."Account Type"::"G/L Account");
      GenJnlLine.VALIDATE("Account No.",OCRSetup."Divergence Account No.");
      GenJnlLine.VALIDATE(
        Description,STRSUBSTNO(text160804,CustEntry."Document Type",CustEntry."Document No."));
      GenJnlLine.VALIDATE(Amount,DivergenceAmount);
      GenJnlLine.INSERT;
      PrevGenJnlLine := GenJnlLine;
    END;

    PROCEDURE RecordType10@1080008();
    BEGIN
      // No data is used
    END;

    LOCAL PROCEDURE RecordType20@1080001();
    BEGIN
      EVALUATE(OCRDate,COPYSTR(RecordContent,59,8));
      EVALUATE(OCRAmount,COPYSTR(RecordContent,75,14));
      OCRAmount := -OCRAmount / 100;
    END;

    LOCAL PROCEDURE RecordType21@1080002();
    BEGIN
      KID := COPYSTR(RecordContent,5,25);

      // Read info on KID:
      ApplyToDocumentType := '';
      CASE SalesSetup."KID Setup" OF
        SalesSetup."KID Setup"::"Document No.":
          ApplyToDocumentNo := COPYSTR(KID,25 - SalesSetup."Document No. length",SalesSetup."Document No. length");
        SalesSetup."KID Setup"::"Document No.+Customer No.":
          ApplyToDocumentNo :=
            COPYSTR(KID,25 - SalesSetup."Document No. length" - SalesSetup."Customer No. length",
              SalesSetup."Document No. length");
        SalesSetup."KID Setup"::"Customer No.+Document No.":
          ApplyToDocumentNo := COPYSTR(KID,25 - SalesSetup."Document No. length",SalesSetup."Document No. length");
        SalesSetup."KID Setup"::"Document Type+Document No.":
          BEGIN
            ApplyToDocumentNo := COPYSTR(KID,25 - SalesSetup."Document No. length",SalesSetup."Document No. length");
            ApplyToDocumentType := FORMAT(KID[24 - SalesSetup."Document No. length"]);
          END;
        ELSE
          SalesSetup.FIELDERROR("KID Setup");
      END;
    END;

    LOCAL PROCEDURE RecordType22@1080003();
    BEGIN
    END;

    LOCAL PROCEDURE RecordType40@1080004();
    BEGIN
    END;

    LOCAL PROCEDURE RecordType41@1080005();
    BEGIN
    END;

    LOCAL PROCEDURE DeleteZeros@1080009(No@1080000 : Code[20]) : Code[20];
    VAR
      continue@1080001 : Boolean;
    BEGIN
      continue := TRUE;
      WHILE continue AND (No <> '') DO BEGIN
        continue := (No[1] = '0');
        IF continue THEN
          No := COPYSTR(No,2);
      END;
      EXIT(No);
    END;

    PROCEDURE SetJournal@1080007(JournalLine@1080000 : Record 81);
    BEGIN
      JournalSelection."Journal Template Name" := JournalLine."Journal Template Name";
      JournalSelection."Journal Batch Name" := JournalLine."Journal Batch Name";
    END;

    LOCAL PROCEDURE SetWarning@1080014(WarningNo@1080000 : Integer);
    VAR
      Text@1080001 : Text[250];
    BEGIN
      NumberOfWarnings := NumberOfWarnings + 1;
      IF GenJnlLineExt.Warning THEN
        // An error is already registered. Specify error no. for following errors only
        IF STRPOS(GenJnlLineExt."Warning text",text160810) = 0 THEN
          Text := STRSUBSTNO(text160808,GenJnlLineExt."Warning text",WarningNo)
        ELSE
          Text := STRSUBSTNO('%1, %2',GenJnlLineExt."Warning text",WarningNo)
      ELSE BEGIN
        GenJnlLineExt.VALIDATE(Warning,TRUE);
        CASE WarningNo OF
          1:
            Text := STRSUBSTNO(text160809,RemainingAmount);
          2:
            Text := STRSUBSTNO(text160811,KID);
          3:
            Text := STRSUBSTNO(text160812,CustEntry."Entry No.");
          4:
            Text := STRSUBSTNO(text160818,ApplyToDocumentNo);
          5:
            Text := STRSUBSTNO(text160819,RemainingAmount);
          6:
            Text := STRSUBSTNO(text160820,ApplyToDocumentNo,KID);
          ELSE
            Text := text160816;
        END;
        Text := STRSUBSTNO(text160817,WarningNo,Text);
      END;
      IF STRLEN(Text) > MAXSTRLEN(GenJnlLineExt."Warning text") THEN
        Text := COPYSTR(Text,1,MAXSTRLEN(GenJnlLineExt."Warning text") - 3) + '...';
      GenJnlLineExt.VALIDATE("Warning text",Text);
    END;

    PROCEDURE CreateFilename@1080021();
    BEGIN
      IF FileMgt.ClientFileExists(FileName) THEN BEGIN
        IF (COPYSTR(FileName,STRLEN(FileName) - 1,1) = '~') OR
           (COPYSTR(FileName,STRLEN(FileName) - 2,1) = '~')
        THEN
          EXIT;

        file1 := COPYSTR(FileName,1,STRLEN(FileName) - 1) + '~';
        file2 := COPYSTR(FileName,1,STRLEN(FileName) - 2) + '~~';
        IF FileMgt.ClientFileExists(file2) THEN
          FileMgt.DeleteClientFile(file2);
        IF FileMgt.ClientFileExists(file1) THEN
          FileMgt.MoveFile(file1,file2);
        FileMgt.MoveFile(FileName,file1);
      END;
    END;

    PROCEDURE FindApplyToDocumentNo@1100285500(lApplyToDocumentNo@1100285500 : Code[20]) : Code[20];
    VAR
      l_CustLedgerEntry@1100285501 : Record 21;
      CustRef2@1100285503 : Text[35];
      GenericSalesHeader@1100285502 : Record 11071888;
    BEGIN
      IF l_CustLedgerEntry.SETCURRENTKEY("External Document No.") THEN;
      l_CustLedgerEntry.SETRANGE(Open,TRUE);
      l_CustLedgerEntry.SETRANGE("External Document No.",
        COPYSTR(lApplyToDocumentNo,1,MAXSTRLEN(l_CustLedgerEntry."External Document No.")));
      IF NOT l_CustLedgerEntry.FINDFIRST THEN
        l_CustLedgerEntry.SETRANGE(Open,FALSE);

      IF l_CustLedgerEntry.FINDFIRST THEN
        EXIT(l_CustLedgerEntry."Document No.");


      IF l_CustLedgerEntry.SETCURRENTKEY("Document No.") THEN;
      l_CustLedgerEntry.SETRANGE(Open,TRUE);
      l_CustLedgerEntry.SETRANGE("Document No.", COPYSTR(lApplyToDocumentNo,1,MAXSTRLEN(l_CustLedgerEntry."Document No.")));
      IF NOT l_CustLedgerEntry.FINDFIRST THEN
        l_CustLedgerEntry.SETRANGE(Open,FALSE);

      IF l_CustLedgerEntry.FINDFIRST THEN
        EXIT(l_CustLedgerEntry."Document No.");


      CustRef2 := lApplyToDocumentNo;
      IF STRLEN(lApplyToDocumentNo) > 2 THEN
        CustRef2 := COPYSTR(lApplyToDocumentNo,1,STRLEN(lApplyToDocumentNo)-2);
      IF l_CustLedgerEntry.SETCURRENTKEY("Document No.") THEN;
      l_CustLedgerEntry.SETRANGE(Open,TRUE);
      l_CustLedgerEntry.SETRANGE("Document No.",CustRef2);

      IF NOT l_CustLedgerEntry.FINDFIRST THEN
        l_CustLedgerEntry.SETRANGE(Open,FALSE);

      IF l_CustLedgerEntry.FINDFIRST THEN BEGIN
        GenericSalesHeader."Document Type" := l_CustLedgerEntry."Document Type";
        GenericSalesHeader."No." := l_CustLedgerEntry."Document No.";
        IF GenericSalesHeader.GetOCR = lApplyToDocumentNo THEN
          EXIT(l_CustLedgerEntry."Document No.");
      END;


      EXIT(lApplyToDocumentNo);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

