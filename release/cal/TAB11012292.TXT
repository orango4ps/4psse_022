OBJECT Table 11012292 Vendor Assessment
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               VendAssLineRec.RESET;
               VendAssLineRec.SETRANGE("Project No.", "Project No.");
               VendAssLineRec.SETRANGE(Date, Date);
               VendAssLineRec.SETRANGE("Vendor No.", "Vendor No.");
               VendAssLineRec.DELETEALL;
             END;

    OnRename=BEGIN
               VendAssLineRec.RESET;
               VendAssLineRec.SETRANGE("Project No.", xRec."Project No.");
               VendAssLineRec.SETRANGE(Date, xRec.Date);
               VendAssLineRec.SETRANGE("Vendor No.", xRec."Vendor No.");
               IF VendAssLineRec.FIND('-') THEN
                 ERROR(Text000);
             END;

    CaptionML=[ENU=Vendor Assessment;
               NOR=Leverand›rvurdering;
               SVE=Leverant”rsbed”mning];
    LookupPageID=Page11012294;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Project Description");
                                                              END;

                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr] }
    { 11  ;   ;Project Description ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Project Description;
                                                              NOR=Prosjektbeskrivelse;
                                                              SVE=Projektbeskrivning];
                                                   Editable=No }
    { 20  ;   ;Date                ;Date          ;CaptionML=[ENU=Date;
                                                              NOR=Dato;
                                                              SVE=Per datum];
                                                   NotBlank=Yes }
    { 30  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Vendor Name", "Vendor Qualification");
                                                              END;

                                                   CaptionML=[ENU=Vendor No.;
                                                              NOR=Leverand›rnr.;
                                                              SVE=Lev.nr];
                                                   NotBlank=Yes }
    { 31  ;   ;Vendor Name         ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=[ENU=Vendor Name;
                                                              NOR=Leverand›rsnavn;
                                                              SVE=Leverant”rsnamn];
                                                   Editable=No }
    { 32  ;   ;Vendor Qualification;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor."Vendor Qualification" WHERE (No.=FIELD(Vendor No.)));
                                                   TableRelation="Vendor Qualification";
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Vendor Qualification;
                                                              NOR=Leverand›rkompetanse;
                                                              SVE=Leverant”rskompetens];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Project No.,Date,Vendor No.             ;Clustered=Yes }
    {    ;Vendor No.,Date,Project No.              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PurSetupRec@1100485000 : Record 312;
      VendAssLineRec@1210190000 : Record 11012293;
      Text000@1210190001 : TextConst 'ENU=Not allowed because there are lines present.;NOR=Ikke tillatt fordi det er rader tilstede;SVE=Inte till†tet eftersom det finns rader.';
      ActiveCompany@1100528800 : Text[30];

    PROCEDURE GetAssScore@1100485000(VAR OScoreDescription@1100485003 : Text[30]) RetResultScore : Decimal;
    VAR
      lvTotalScore@1100485000 : Decimal;
      lvMaxScore@1100485001 : Decimal;
    BEGIN
      VendAssLineRec.CHANGECOMPANY(ActiveCompany);
      RetResultScore := 0;
      OScoreDescription := '';

      VendAssLineRec.RESET;
      VendAssLineRec.SETRANGE("Project No.", "Project No.");
      VendAssLineRec.SETRANGE(Date, Date);
      VendAssLineRec.SETRANGE("Vendor No.", "Vendor No.");
      VendAssLineRec.SETFILTER(Score, '<>%1', 0);
      VendAssLineRec.SETFILTER("Weight Factor", '<>%1', 0);
      IF VendAssLineRec.FIND('-') THEN BEGIN
        REPEAT
          lvTotalScore := lvTotalScore + (VendAssLineRec."Weight Factor" * VendAssLineRec.Score);
          lvMaxScore := lvMaxScore + (VendAssLineRec."Weight Factor" * PurSetupRec."Max. Score Assessment");
        UNTIL VendAssLineRec.NEXT = 0;
      END;

      IF lvMaxScore <> 0 THEN
        RetResultScore := lvTotalScore / lvMaxScore * PurSetupRec."Max. Score Assessment";

      OScoreDescription := GetAssessmentDescription(RetResultScore);
    END;

    PROCEDURE GetAverageAssessmentScore@1100528600(IVendorNo@1100528600 : Code[20];VAR OScoreDescription@1100528603 : Text[30]) AverageScore : Decimal;
    VAR
      Assessment@1100528604 : Record 11012294;
      VendorAssessment@1100528601 : Record 11012292;
      PurchasesPayablesSetup@1100528602 : Record 312;
      MathematicalFunctions@1100528607 : Codeunit 11020204;
      ScoreDescription@1100528605 : Text[30];
      TotalScore@1100528606 : Decimal;
      ScoreCalculationPeriod@1100528608 : DateFormula;
    BEGIN
      PurchasesPayablesSetup.CHANGECOMPANY(ActiveCompany);
      VendorAssessment.CHANGECOMPANY(ActiveCompany);
      Assessment.CHANGECOMPANY(ActiveCompany);

      OScoreDescription := '';
      PurchasesPayablesSetup.GET;
      IF FORMAT(PurchasesPayablesSetup."Vendor Assessment Period") = '' THEN
        EXIT;
      VendorAssessment.SETCURRENTKEY("Vendor No.");
      VendorAssessment.SETRANGE("Vendor No.", IVendorNo);
      ScoreCalculationPeriod := PurchasesPayablesSetup."Vendor Assessment Period";
      IF CALCDATE(ScoreCalculationPeriod, WORKDATE) > WORKDATE THEN
        MathematicalFunctions.ReverseDateFormula(ScoreCalculationPeriod, ScoreCalculationPeriod);
      VendorAssessment.SETRANGE(Date, CALCDATE(ScoreCalculationPeriod, WORKDATE), WORKDATE);
      IF VendorAssessment.FINDSET THEN BEGIN
        REPEAT
          TotalScore += VendorAssessment.GetAssScore(ScoreDescription);
        UNTIL VendorAssessment.NEXT = 0;
        AverageScore := TotalScore / VendorAssessment.COUNT;
      END;
      OScoreDescription := GetAssessmentDescription(AverageScore);
    END;

    PROCEDURE GetAssessmentDescription@1100528601(IScore@1100528601 : Decimal) : Text[30];
    VAR
      Assessment@1100528600 : Record 11012294;
    BEGIN
      Assessment.CHANGECOMPANY(ActiveCompany);
      IF NOT Assessment.GET(ROUND(IScore, 1)) THEN
        Assessment.INIT;
      EXIT(Assessment.Assessment);
    END;

    PROCEDURE SetCompany@1100528800(ICompany@1100528800 : Text[30]);
    BEGIN
      IF (ICompany = '') OR (ICompany = COMPANYNAME) THEN
        ActiveCompany := ''
      ELSE
        ActiveCompany := ICompany;
    END;

    BEGIN
    END.
  }
}

