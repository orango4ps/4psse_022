OBJECT Codeunit 100 Calc. G/L Acc. Where-Used
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GLAccWhereUsed@1000 : TEMPORARY Record 180;
      NextEntryNo@1001 : Integer;
      Text000@1002 : TextConst 'ENU=The update has been interrupted to respect the warning.;NOR=Oppdateringen er avbrutt som en reaksjon p† advarselen.;SVE=Avbryten uppdatering p† grund av varning.';
      ShowWhereUsedQst@1003 : TextConst '@@@=%1 -  Table Caption;ENU=You cannot delete a %1 that is used in one or more setup windows.\Do you want to open the G/L Account No. Where-Used List Window?;NOR=Du kan ikke slette en/et %1 som brukes i ett eller flere oppsettsvinduer.\Vil du †pne vinduet Finanskonto - hvor-brukt-liste?';

    [External]
    PROCEDURE ShowSetupForm@8(GLAccWhereUsed@1000 : Record 180);
    VAR
      Currency@1002 : Record 4;
      GenJnlTemplate@1013 : Record 80;
      GenJnlBatch@1014 : Record 232;
      CustPostingGr@1004 : Record 92;
      VendPostingGr@1005 : Record 93;
      JobPostingGr@1006 : Record 11072006;
      GenJnlAlloc@1007 : Record 221;
      GenPostingSetup@1001 : Record 252;
      BankAccPostingGr@1008 : Record 277;
      VATPostingSetup@1009 : Record 325;
      FAPostingGr@1010 : Record 5606;
      FAAlloc@1003 : Record 11072080;
      InventoryPostingSetup@1011 : Record 5813;
      ServiceContractAccGr@1012 : Record 5973;
      ICPartner@1015 : Record 413;
      PaymentMethod@1016 : Record 289;
    BEGIN
      WITH GLAccWhereUsed DO
        CASE "Table ID" OF
          DATABASE::Currency:
            BEGIN
              Currency.Code := COPYSTR("Key 1",1,MAXSTRLEN(Currency.Code));
              PAGE.RUN(0,Currency);
            END;
          DATABASE::"Gen. Journal Template":
            BEGIN
              GenJnlTemplate.Name := COPYSTR("Key 1",1,MAXSTRLEN(GenJnlTemplate.Name));
              PAGE.RUN(PAGE::"General Journal Templates",GenJnlTemplate);
            END;
          DATABASE::"Gen. Journal Batch":
            BEGIN
              GenJnlBatch."Journal Template Name" := COPYSTR("Key 1",1,MAXSTRLEN(GenJnlBatch."Journal Template Name"));
              GenJnlBatch.Name := COPYSTR("Key 2",1,MAXSTRLEN(GenJnlBatch.Name));
              GenJnlBatch.SETRANGE("Journal Template Name",GenJnlBatch."Journal Template Name");
              PAGE.RUN(0,GenJnlBatch);
            END;
          DATABASE::"Customer Posting Group":
            BEGIN
              CustPostingGr.Code := COPYSTR("Key 1",1,MAXSTRLEN(CustPostingGr.Code));
              PAGE.RUN(0,CustPostingGr);
            END;
          DATABASE::"Vendor Posting Group":
            BEGIN
              VendPostingGr.Code := COPYSTR("Key 1",1,MAXSTRLEN(VendPostingGr.Code));
              PAGE.RUN(0,VendPostingGr);
            END;
          DATABASE::"Job Posting Group":
            BEGIN
              JobPostingGr.Code := COPYSTR("Key 1",1,MAXSTRLEN(JobPostingGr.Code));
              PAGE.RUN(0,JobPostingGr);
            END;
          DATABASE::"Gen. Jnl. Allocation":
            BEGIN
              GenJnlAlloc."Journal Template Name" := COPYSTR("Key 1",1,MAXSTRLEN(GenJnlAlloc."Journal Template Name"));
              GenJnlAlloc."Journal Batch Name" := COPYSTR("Key 2",1,MAXSTRLEN(GenJnlAlloc."Journal Batch Name"));
              EVALUATE(GenJnlAlloc."Journal Line No.","Key 3");
              EVALUATE(GenJnlAlloc."Line No.","Key 4");
              GenJnlAlloc.SETRANGE("Journal Template Name",GenJnlAlloc."Journal Template Name");
              GenJnlAlloc.SETRANGE("Journal Batch Name",GenJnlAlloc."Journal Batch Name");
              GenJnlAlloc.SETRANGE("Journal Line No.",GenJnlAlloc."Journal Line No.");
              PAGE.RUN(PAGE::Allocations,GenJnlAlloc);
            END;
          DATABASE::"General Posting Setup":
            BEGIN
              GenPostingSetup."Gen. Bus. Posting Group" :=
                COPYSTR("Key 1",1,MAXSTRLEN(GenPostingSetup."Gen. Bus. Posting Group"));
              GenPostingSetup."Gen. Prod. Posting Group" :=
                COPYSTR("Key 2",1,MAXSTRLEN(GenPostingSetup."Gen. Prod. Posting Group"));
              PAGE.RUN(0,GenPostingSetup);
            END;
          DATABASE::"Bank Account Posting Group":
            BEGIN
              BankAccPostingGr.Code := COPYSTR("Key 1",1,MAXSTRLEN(BankAccPostingGr.Code));
              PAGE.RUN(0,BankAccPostingGr);
            END;
          DATABASE::"VAT Posting Setup":
            BEGIN
              VATPostingSetup."VAT Bus. Posting Group" :=
                COPYSTR("Key 1",1,MAXSTRLEN(VATPostingSetup."VAT Bus. Posting Group"));
              VATPostingSetup."VAT Prod. Posting Group" :=
                COPYSTR("Key 2",1,MAXSTRLEN(VATPostingSetup."VAT Prod. Posting Group"));
              PAGE.RUN(0,VATPostingSetup);
            END;
          DATABASE::"FA Posting Group":
            BEGIN
              FAPostingGr.Code := COPYSTR("Key 1",1,MAXSTRLEN(FAPostingGr.Code));
              PAGE.RUN(PAGE::"FA Posting Group Card",FAPostingGr);
            END;
          DATABASE::"FA Allocation":
            BEGIN
              FAAlloc.Code := COPYSTR("Key 1",1,MAXSTRLEN(FAAlloc.Code));
              EVALUATE(FAAlloc."Allocation Type","Key 2");
              EVALUATE(FAAlloc."Line No.","Key 3");
              FAAlloc.SETRANGE(Code,FAAlloc.Code);
              FAAlloc.SETRANGE("Allocation Type",FAAlloc."Allocation Type");
              PAGE.RUN(0,FAAlloc);
            END;
          DATABASE::"Inventory Posting Setup":
            BEGIN
              InventoryPostingSetup."Location Code" := COPYSTR("Key 1",1,MAXSTRLEN(InventoryPostingSetup."Location Code"));
              InventoryPostingSetup."Invt. Posting Group Code" :=
                COPYSTR("Key 2",1,MAXSTRLEN(InventoryPostingSetup."Invt. Posting Group Code"));
              PAGE.RUN(PAGE::"Inventory Posting Setup",InventoryPostingSetup);
            END;
          DATABASE::"Service Contract Account Group":
            BEGIN
              ServiceContractAccGr.Code := COPYSTR("Key 1",1,MAXSTRLEN(ServiceContractAccGr.Code));
              PAGE.RUN(0,ServiceContractAccGr);
            END;
          DATABASE::"IC Partner":
            BEGIN
              ICPartner.Code := COPYSTR("Key 1",1,MAXSTRLEN(ICPartner.Code));
              PAGE.RUN(0,ICPartner);
            END;
          DATABASE::"Payment Method":
            BEGIN
              PaymentMethod.Code := COPYSTR("Key 1",1,MAXSTRLEN(PaymentMethod.Code));
              PAGE.RUN(0,PaymentMethod);
            END;
          DATABASE::"Sales & Receivables Setup":
            PAGE.RUN(PAGE::"Sales & Receivables Setup");
          DATABASE::"Purchases & Payables Setup":
            PAGE.RUN(PAGE::"Purchases & Payables Setup");
          ELSE
            IF NOT ShowSetupPage4PS(GLAccWhereUsed) THEN //**4PS.n
              OnShowExtensionPage(GLAccWhereUsed);
        END;
    END;

    [External]
    PROCEDURE DeleteGLNo@14(GLAccNo@1000 : Code[20]) : Boolean;
    VAR
      GLSetup@1001 : Record 98;
      GLAcc@1002 : Record 15;
      ConfirmManagement@1003 : Codeunit 27;
    BEGIN
      GLSetup.GET;
      IF GLSetup."Check G/L Account Usage" THEN BEGIN
        CheckPostingGroups(GLAccNo);
        IF GLAccWhereUsed.FINDFIRST THEN BEGIN
          COMMIT;
          IF ConfirmManagement.ConfirmProcessUI(STRSUBSTNO(ShowWhereUsedQst,GLAcc.TABLECAPTION),TRUE) THEN
            ShowGLAccWhereUsed;
          ERROR(Text000);
        END;
      END;
      EXIT(TRUE);
    END;

    [External]
    PROCEDURE CheckGLAcc@5(GLAccNo@1000 : Code[20]);
    BEGIN
      CheckPostingGroups(GLAccNo);
      ShowGLAccWhereUsed;
    END;

    LOCAL PROCEDURE ShowGLAccWhereUsed@3();
    BEGIN
      OnBeforeShowGLAccWhereUsed(GLAccWhereUsed);

      GLAccWhereUsed.SETCURRENTKEY("Table Name");
      PAGE.RUNMODAL(0,GLAccWhereUsed);
    END;

    [External]
    PROCEDURE InsertGroupForRecord@28(VAR TempGLAccountWhereUsed@1006 : TEMPORARY Record 180;TableID@1005 : Integer;TableCaption@1004 : Text[80];GLAccNo@1003 : Code[20];GLAccNo2@1002 : Code[20];FieldCaption@1001 : Text[80];Key@1000 : ARRAY [8] OF Text[80]);
    BEGIN
      TempGLAccountWhereUsed."Table ID" := TableID;
      TempGLAccountWhereUsed."Table Name" := TableCaption;
      GLAccWhereUsed.COPY(TempGLAccountWhereUsed,TRUE);
      InsertGroup(GLAccNo,GLAccNo2,FieldCaption,Key);
    END;

    LOCAL PROCEDURE InsertGroup@10(GLAccNo@1000 : Code[20];GLAccNo2@1001 : Code[20];FieldCaption@1003 : Text[80];Key@1002 : ARRAY [8] OF Text[80]);
    BEGIN
      IF GLAccNo = GLAccNo2 THEN BEGIN
        IF NextEntryNo = 0 THEN
          NextEntryNo := GetWhereUsedNextEntryNo;

        GLAccWhereUsed."Field Name" := FieldCaption;
        IF Key[1] <> '' THEN
          GLAccWhereUsed.Line := Key[1] + '=' + Key[4]
        ELSE
          GLAccWhereUsed.Line := '';
        IF Key[2] <> '' THEN
          GLAccWhereUsed.Line := GLAccWhereUsed.Line + ', ' + Key[2] + '=' + Key[5];
        IF Key[3] <> '' THEN
          GLAccWhereUsed.Line := GLAccWhereUsed.Line + ', ' + Key[3] + '=' + Key[6];
        IF Key[7] <> '' THEN
          GLAccWhereUsed.Line := GLAccWhereUsed.Line + ', ' + Key[7] + '=' + Key[8];
        GLAccWhereUsed."Entry No." := NextEntryNo;
        GLAccWhereUsed."Key 1" := COPYSTR(Key[4],1,MAXSTRLEN(GLAccWhereUsed."Key 1"));
        GLAccWhereUsed."Key 2" := COPYSTR(Key[5],1,MAXSTRLEN(GLAccWhereUsed."Key 2"));
        GLAccWhereUsed."Key 3" := COPYSTR(Key[6],1,MAXSTRLEN(GLAccWhereUsed."Key 3"));
        GLAccWhereUsed."Key 4" := COPYSTR(Key[8],1,MAXSTRLEN(GLAccWhereUsed."Key 4"));
        NextEntryNo := NextEntryNo + 1;
        GLAccWhereUsed.INSERT;
      END;
    END;

    LOCAL PROCEDURE InsertGroupFromRecRef@43(VAR RecRef@1008 : RecordRef;FieldCaption@1002 : Text[80]);
    VAR
      KeyRef@1007 : KeyRef;
      FieldRef@1006 : FieldRef;
      KeyFieldCount@1005 : Integer;
      FieldCaptionAndValue@1004 : Text;
    BEGIN
      IF NextEntryNo = 0 THEN
        NextEntryNo := GetWhereUsedNextEntryNo;

      GLAccWhereUsed."Entry No." := NextEntryNo;
      GLAccWhereUsed."Field Name" := FieldCaption;
      GLAccWhereUsed.Line := '';
      KeyRef := RecRef.KEYINDEX(1);
      FOR KeyFieldCount := 1 TO KeyRef.FIELDCOUNT DO BEGIN
        FieldRef := KeyRef.FIELDINDEX(KeyFieldCount);
        FieldCaptionAndValue := STRSUBSTNO('%1=%2',FieldRef.CAPTION,FieldRef.VALUE);
        IF GLAccWhereUsed.Line = '' THEN
          GLAccWhereUsed.Line := COPYSTR(FieldCaptionAndValue,1,MAXSTRLEN(GLAccWhereUsed.Line))
        ELSE
          GLAccWhereUsed.Line :=
            COPYSTR(GLAccWhereUsed.Line + ', ' + FieldCaptionAndValue,1,MAXSTRLEN(GLAccWhereUsed.Line));

        CASE KeyFieldCount OF
          1:
            GLAccWhereUsed."Key 1" := COPYSTR(FORMAT(FieldRef.VALUE),1,MAXSTRLEN(GLAccWhereUsed."Key 1"));
          2:
            GLAccWhereUsed."Key 2" := COPYSTR(FORMAT(FieldRef.VALUE),1,MAXSTRLEN(GLAccWhereUsed."Key 2"));
          3:
            GLAccWhereUsed."Key 3" := COPYSTR(FORMAT(FieldRef.VALUE),1,MAXSTRLEN(GLAccWhereUsed."Key 3"));
          4:
            GLAccWhereUsed."Key 4" := COPYSTR(FORMAT(FieldRef.VALUE),1,MAXSTRLEN(GLAccWhereUsed."Key 4"));
        END;
      END;
      NextEntryNo := NextEntryNo + 1;
      GLAccWhereUsed.INSERT;
    END;

    LOCAL PROCEDURE CheckPostingGroups@18(GLAccNo@1000 : Code[20]);
    VAR
      GLAcc@1001 : Record 15;
      TableBuffer@1002 : TEMPORARY Record 2000000026;
    BEGIN
      NextEntryNo := 0;
      CLEAR(GLAccWhereUsed);
      GLAccWhereUsed.DELETEALL;
      GLAcc.GET(GLAccNo);
      GLAccWhereUsed."G/L Account No." := GLAccNo;
      GLAccWhereUsed."G/L Account Name" := GLAcc.Name;

      IF FillTableBuffer(TableBuffer) THEN
        REPEAT
          CheckTable(GLAccNo,TableBuffer.Number);
        UNTIL TableBuffer.NEXT = 0;

      OnAfterCheckPostingGroups(GLAccWhereUsed,GLAccNo);
    END;

    LOCAL PROCEDURE FillTableBuffer@1(VAR TableBuffer@1000 : Record 2000000026) : Boolean;
    BEGIN
      AddTable(TableBuffer,DATABASE::Currency);
      AddTable(TableBuffer,DATABASE::"Gen. Journal Template");
      AddTable(TableBuffer,DATABASE::"Gen. Journal Batch");
      AddTable(TableBuffer,DATABASE::"Customer Posting Group");
      AddTable(TableBuffer,DATABASE::"Vendor Posting Group");
      AddTable(TableBuffer,DATABASE::"Job Posting Group");
      AddTable(TableBuffer,DATABASE::"Gen. Jnl. Allocation");
      AddTable(TableBuffer,DATABASE::"General Posting Setup");
      AddTable(TableBuffer,DATABASE::"Bank Account Posting Group");
      AddTable(TableBuffer,DATABASE::"VAT Posting Setup");
      AddTable(TableBuffer,DATABASE::"FA Posting Group");
      AddTable(TableBuffer,DATABASE::"FA Allocation");
      AddTable(TableBuffer,DATABASE::"Inventory Posting Setup");
      AddTable(TableBuffer,DATABASE::"Service Contract Account Group");
      AddTable(TableBuffer,DATABASE::"IC Partner");
      AddTable(TableBuffer,DATABASE::"Payment Method");
      AddTable(TableBuffer,DATABASE::"Sales & Receivables Setup");
      AddTable(TableBuffer,DATABASE::"Purchases & Payables Setup");
      AddTable(TableBuffer,DATABASE::"Employee Posting Group");
      AddTable(TableBuffer,DATABASE::"Business Unit");
      AddTable(TableBuffer,DATABASE::"Cash Flow Setup");

      Add4PSTables(TableBuffer); //**4PS.n

      OnAfterFillTableBuffer(TableBuffer);

      EXIT(TableBuffer.FINDSET);
    END;

    LOCAL PROCEDURE AddTable@6(VAR TableBuffer@1000 : Record 2000000026;TableID@1001 : Integer);
    BEGIN
      IF NOT TableBuffer.GET(TableID) THEN BEGIN
        TableBuffer.Number := TableID;
        TableBuffer.INSERT;
      END;
    END;

    LOCAL PROCEDURE CheckTable@46(GLAccNo@1000 : Code[20];TableID@1005 : Integer);
    VAR
      TableRelationsMetadata@1006 : Record 2000000141;
      Field@1001 : Record 2000000041;
      RecRef@1004 : RecordRef;
    BEGIN
      RecRef.OPEN(TableID);
      GLAccWhereUsed.INIT;
      GLAccWhereUsed."Table ID" := TableID;
      GLAccWhereUsed."Table Name" := RecRef.CAPTION;

      TableRelationsMetadata.SETRANGE("Table ID",TableID);
      TableRelationsMetadata.SETRANGE("Related Table ID",DATABASE::"G/L Account");
      IF TableRelationsMetadata.FINDSET THEN
        REPEAT
          Field.GET(TableRelationsMetadata."Table ID",TableRelationsMetadata."Field No.");
          IF (Field.Class = Field.Class::Normal) AND (Field.ObsoleteState <> Field.ObsoleteState::Removed) THEN
            CheckField(RecRef,TableRelationsMetadata,GLAccNo);
        UNTIL TableRelationsMetadata.NEXT = 0;
    END;

    LOCAL PROCEDURE CheckField@11(VAR RecRef@1000 : RecordRef;TableRelationsMetadata@1005 : Record 2000000141;GLAccNo@1007 : Code[20]);
    VAR
      FieldRef@1002 : FieldRef;
    BEGIN
      RecRef.RESET;
      FieldRef := RecRef.FIELD(TableRelationsMetadata."Field No.");
      FieldRef.SETRANGE(GLAccNo);
      SetConditionFilter(RecRef,TableRelationsMetadata);
      IF RecRef.FINDSET THEN
        REPEAT
          InsertGroupFromRecRef(RecRef,FieldRef.CAPTION);
        UNTIL RecRef.NEXT = 0;
    END;

    LOCAL PROCEDURE SetConditionFilter@25(VAR RecRef@1001 : RecordRef;TableRelationsMetadata@1000 : Record 2000000141);
    VAR
      FieldRef@1002 : FieldRef;
    BEGIN
      IF TableRelationsMetadata."Condition Field No." <> 0 THEN BEGIN
        FieldRef := RecRef.FIELD(TableRelationsMetadata."Condition Field No.");
        FieldRef.SETFILTER(TableRelationsMetadata."Condition Value");
      END;
    END;

    LOCAL PROCEDURE GetWhereUsedNextEntryNo@24() : Integer;
    VAR
      TempGLAccountWhereUsed@1000 : TEMPORARY Record 180;
    BEGIN
      TempGLAccountWhereUsed.COPY(GLAccWhereUsed,TRUE);
      IF TempGLAccountWhereUsed.FINDLAST THEN
        EXIT(TempGLAccountWhereUsed."Entry No." + 1);
      EXIT(1);
    END;

    [Integration]
    LOCAL PROCEDURE OnShowExtensionPage@19(GLAccountWhereUsed@1000 : Record 180);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCheckPostingGroups@20(VAR TempGLAccountWhereUsed@1001 : TEMPORARY Record 180;GLAccNo@1000 : Code[20]);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterFillTableBuffer@4(VAR TableBuffer@1000 : Record 2000000026);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeShowGLAccWhereUsed@22(VAR GLAccountWhereUsed@1000 : Record 180);
    BEGIN
    END;

    LOCAL PROCEDURE Add4PSTables@1100525000(VAR TableBuffer@1000 : Record 2000000026);
    BEGIN
      //**4PS
      AddTable(TableBuffer,DATABASE::"Plant Posting Group");
      AddTable(TableBuffer,DATABASE::"Plant Posting Setup");
      AddTable(TableBuffer,DATABASE::"Plant Cost Comp. Posting Setup");
      AddTable(TableBuffer,DATABASE::Vendor);
      AddTable(TableBuffer,DATABASE::"Business Unit");
      AddTable(TableBuffer,DATABASE::"Purchases & Payables Setup");
      AddTable(TableBuffer,DATABASE::"Tax Jurisdiction");
      AddTable(TableBuffer,DATABASE::"Dimension Value");
      AddTable(TableBuffer,DATABASE::"Payment Registration Setup");
      AddTable(TableBuffer,DATABASE::"Deferral Template");
      AddTable(TableBuffer,DATABASE::"Human Resources Setup");
      AddTable(TableBuffer,DATABASE::"Document Capture Setup");
      AddTable(TableBuffer,DATABASE::Template);
      AddTable(TableBuffer,DATABASE::"Template Field");
      AddTable(TableBuffer,DATABASE::"Vendor Posting Group DC Info.");
      AddTable(TableBuffer,DATABASE::"General Posting Setup DC Info.");
      AddTable(TableBuffer,DATABASE::"Expense Management Setup");
      AddTable(TableBuffer,DATABASE::"Expense Posting Setup");
      AddTable(TableBuffer,DATABASE::"Project Type");
      AddTable(TableBuffer,DATABASE::"Wage Component");
      AddTable(TableBuffer,DATABASE::"Trade Association");
      AddTable(TableBuffer,DATABASE::"Expense Balance Account");
      AddTable(TableBuffer,DATABASE::"Cost Code");
      AddTable(TableBuffer,DATABASE::"Complaints Setup");
      AddTable(TableBuffer,DATABASE::"Interest Calc. IC-Acc. Setup");
      AddTable(TableBuffer,DATABASE::"Plant Setup");
      AddTable(TableBuffer,DATABASE::"Hour Rate by Vendor/CostObject");
      AddTable(TableBuffer,DATABASE::"Service Type");
      AddTable(TableBuffer,DATABASE::"Ledger by Serv.Type Vendor Gr.");
      AddTable(TableBuffer,DATABASE::"Ledger by Proj.Type Vendor Gr.");
      AddTable(TableBuffer,DATABASE::"Credit Restriction");
      AddTable(TableBuffer,DATABASE::"Plant Rate Comp. Posting Setup");
      AddTable(TableBuffer,DATABASE::"Plant Scanner Setup");
      AddTable(TableBuffer,DATABASE::"Mapping XML Invoices");
      AddTable(TableBuffer,DATABASE::"IC Posting Setup by Source");
      AddTable(TableBuffer,DATABASE::"Conversion XMLPort 4PS");
      AddTable(TableBuffer,DATABASE::"Intercompany Relation");
      AddTable(TableBuffer,DATABASE::"Ledger by Serv.Type Cust. Gr.");
      AddTable(TableBuffer,DATABASE::"Ledger by Proj.Type Cust. Gr.");

      //added in bc14
      AddTable(TableBuffer,DATABASE::"Expense Balance Account");
      AddTable(TableBuffer,DATABASE::"IC-Account Interest Calc.");
      AddTable(TableBuffer,DATABASE::"Wage Code Paymaster");
      AddTable(TableBuffer,DATABASE::"Cost Component Plant");
      AddTable(TableBuffer,DATABASE::"Year Budget Account No.");
      AddTable(TableBuffer,DATABASE::"Year Budget Department");
      AddTable(TableBuffer,DATABASE::"Purchase Allocation Line");
      AddTable(TableBuffer,DATABASE::"Overhead Surcharge");
      AddTable(TableBuffer,DATABASE::"Stock Surcharge");
      AddTable(TableBuffer,DATABASE::"General Ledger Liquidity");
      AddTable(TableBuffer,DATABASE::"Plant Invoice Surcharge Code");
      AddTable(TableBuffer,DATABASE::"Financial Ratio Setup");
      AddTable(TableBuffer,DATABASE::"CBG Statement Mapping");
      AddTable(TableBuffer,DATABASE::"Loan Posting Group");
      AddTable(TableBuffer,DATABASE::"Project Type Extension");
    END;

    LOCAL PROCEDURE ShowSetupPage4PS@1100525002(GLAccWhereUsed@1000 : Record 180) : Boolean;
    VAR
      PlantPostingGroup@1100525000 : Record 11012553;
      PlantPostingSetup@1100525001 : Record 11012586;
      Vendor@1100529400 : Record 23;
      BusinessUnit@1100529401 : Record 220;
      PurchasesPayablesSetup@1100529402 : Record 312;
      TaxJurisdiction@1100529403 : Record 320;
      DimensionValue@1100529404 : Record 349;
      PaymentRegistrationSetup@1100529405 : Record 980;
      DeferralTemplate@1100529406 : Record 1700;
      HumanResourcesSetup@1100529407 : Record 5218;
      DocumentCaptureSetup@1100529408 : Record 6085573;
      Template@1100529409 : Record 6085579;
      TemplateField@1100529410 : Record 6085580;
      VendorPostingGroupDCInfo@1100529411 : Record 6085768;
      GeneralPostingSetupDCInfo@1100529412 : Record 6085771;
      ExpenseManagementSetup@1100529413 : Record 6086300;
      ExpensePostingSetup@1100529414 : Record 6086309;
      ProjectType@1100529416 : Record 11012009;
      WageComponent@1100529417 : Record 11012014;
      TradeAssociation@1100529418 : Record 11012015;
      ExpenseBalanceAccount@1100529419 : Record 11012053;
      CostCode@1100529420 : Record 11012083;
      ComplaintsSetup@1100529421 : Record 11012108;
      InterestCalcICAccSetup@1100529422 : Record 11012117;
      PlantSetup@1100529423 : Record 11012550;
      HourRatebyVendorCostObject@1100529424 : Record 11012608;
      ServiceType@1100529425 : Record 11012814;
      LedgerbyServTypeVendorGr@1100529426 : Record 11012889;
      LedgerbyProjTypeVendorGr@1100529427 : Record 11020252;
      CreditRestriction@1100529428 : Record 11020254;
      PlantRateCompPostingSetup@1100529429 : Record 11020500;
      PlantScannerSetup@1100529430 : Record 11020527;
      MappingXMLInvoices@1100529431 : Record 11020563;
      ICPostingSetupbySource@1100529432 : Record 11020565;
      ConversionXMLPort4PS@1100529433 : Record 11020640;
      IntercompanyRelation@1100529435 : Record 11012057;
      OverheadSurcharge@1100525002 : Record 11020208;
      ICAccountInterestCalc@1100525003 : Record 11012118;
      WageCodePaymaster@1100525004 : Record 11012377;
      CostComponentPlant@1100525005 : Record 11012575;
      YearBudget@1100525006 : Record 11012690;
      YearBudgetDepartment@1100525007 : Record 11012692;
      PurchaseAllocation@1100525008 : Record 11020200;
      StockSurcharge@1100525009 : Record 11020316;
      GeneralLedgerLiquidity@1100525010 : Record 11020602;
      PlantInvoiceSurchargeCode@1100525012 : Record 11126142;
      FinancialRatioSetup@1100525013 : Record 11229308;
      CBGStatementMapping@1100525014 : Record 11229432;
      LoanPostingGroup@1100525015 : Record 11229443;
    BEGIN
      //**4PS
      WITH GLAccWhereUsed DO
        CASE "Table ID" OF
          DATABASE::"Plant Posting Group":
            BEGIN
              PlantPostingGroup.Code := "Key 1";
              PlantPostingGroup."Vendor Posting Group No." := "Key 2";
              PAGE.RUN(0,PlantPostingGroup);
            END;
          DATABASE::"Plant Posting Setup":
            BEGIN
             PlantPostingSetup."Gen. Business Posting Group" := "Key 1";
             PlantPostingSetup."Plant Posting Group" := "Key 2";
             PAGE.RUN(0,PlantPostingSetup);
            END;
          DATABASE::"Plant Cost Comp. Posting Setup":
            BEGIN
              //Plant Cost Comp only through matrix attainable
              PlantPostingGroup.Code := "Key 1";
              PlantPostingGroup."Vendor Posting Group No." := "Key 2";
              PAGE.RUN(PAGE::"Plant Post.Gr. Setup CostComp.",PlantPostingGroup);
            END;
          DATABASE::Vendor:
            BEGIN
              Vendor."No." := "Key 1";
              PAGE.RUN(0, Vendor);
            END;
          DATABASE::"Business Unit":
            BEGIN
              BusinessUnit.Code := "Key 1";
              PAGE.RUN(0, BusinessUnit);
            END;
          DATABASE::"Purchases & Payables Setup":
            BEGIN
              PurchasesPayablesSetup."Primary Key" := "Key 1";
              PAGE.RUN(0, PurchasesPayablesSetup);
            END;
          DATABASE::"Tax Jurisdiction":
            BEGIN
              TaxJurisdiction.Code := "Key 1";
              PAGE.RUN(0, TaxJurisdiction);
            END;
          DATABASE::"Dimension Value":
            BEGIN
              DimensionValue."Dimension Code":= "Key 1";
              DimensionValue.Code := "Key 2";
              PAGE.RUN(0, DimensionValue);
            END;
          DATABASE::"Payment Registration Setup":
            BEGIN
              PaymentRegistrationSetup."User ID":= "Key 1";
              PAGE.RUN(PAGE::"Payment Registration Setup", PaymentRegistrationSetup);
            END;
          DATABASE::"Deferral Template":
            BEGIN
              DeferralTemplate."Deferral Code":= "Key 1";
              PAGE.RUN(0, DeferralTemplate);
            END;
          DATABASE::"Human Resources Setup":
            BEGIN
              HumanResourcesSetup."Primary Key":= "Key 1";
              PAGE.RUN(PAGE::"Human Resources Setup", HumanResourcesSetup);
            END;
          DATABASE::"Document Capture Setup":
            BEGIN
              DocumentCaptureSetup."Primary Key" := "Key 1";
              PAGE.RUN(PAGE::"Document Capture Setup", DocumentCaptureSetup);
            END;
          DATABASE::Template:
            BEGIN
              Template."No." := "Key 1";
              PAGE.RUN(0, Template);
            END;
          DATABASE::"Template Field":
            BEGIN
              TemplateField."Template No." := "Key 1";
              EVALUATE(TemplateField.Type,"Key 2");
              TemplateField.Code := "Key 3";
              TemplateField.SETRANGE("Template No.",TemplateField."Template No.");
              PAGE.RUN(0,TemplateField);
            END;
          DATABASE::"Vendor Posting Group DC Info.":
            BEGIN
              VendorPostingGroupDCInfo.Code:= "Key 1";
              PAGE.RUN(PAGE::"Vendor Posting Groups (DC)",VendorPostingGroupDCInfo);
            END;
          DATABASE::"General Posting Setup DC Info.":
            BEGIN
              GeneralPostingSetupDCInfo."Gen. Bus. Posting Group" := "Key 1";
              GeneralPostingSetupDCInfo."Gen. Prod. Posting Group" := "Key 2";
              PAGE.RUN(PAGE::"General Posting Setup (DC)",GeneralPostingSetupDCInfo);
            END;
          DATABASE::"Expense Management Setup":
            BEGIN
              ExpenseManagementSetup."Primary Key":= "Key 1";
              PAGE.RUN(PAGE::"Expense Management Setup", ExpenseManagementSetup);
            END;
          DATABASE::"Expense Posting Setup":
            BEGIN
              EVALUATE(ExpensePostingSetup.Type,"Key 1");
              ExpensePostingSetup."No." := "Key 2";
              EVALUATE(ExpensePostingSetup."Country/Region Type","Key 3");
              ExpensePostingSetup."Country/Region Code" := "Key 4";
              PAGE.RUN(PAGE::"Expense Posting Setup", ExpensePostingSetup);
            END;
          DATABASE::"Project Type",
          DATABASE::"Project Type Extension":
            BEGIN
              ProjectType.Code := "Key 1";
              PAGE.RUN(0, ProjectType);
            END;
          DATABASE::"Wage Component":
            BEGIN
              WageComponent.Code := "Key 1";
              PAGE.RUN(0, WageComponent);
            END;
          DATABASE::"Trade Association":
            BEGIN
              TradeAssociation.Code := "Key 1";
              PAGE.RUN(0, TradeAssociation);
            END;
          DATABASE::"Expense Balance Account":
            BEGIN
              ExpenseBalanceAccount."Project Type" := "Key 1";
              ExpenseBalanceAccount.Component := "Key 2";
              PAGE.RUN(0, ExpenseBalanceAccount);
            END;
          DATABASE::"Cost Code":
            BEGIN
              CostCode.Code := "Key 1";
              PAGE.RUN(0, CostCode);
            END;
          DATABASE::"Complaints Setup":
            BEGIN
              ComplaintsSetup."Primary Key":= "Key 1";
              PAGE.RUN(PAGE::"Complaints Setup", ComplaintsSetup);
            END;
          DATABASE::"Interest Calc. IC-Acc. Setup":
            BEGIN
              InterestCalcICAccSetup."Primary Key":= "Key 1";
              PAGE.RUN(PAGE::"Interest Calc. IC-Acc. Setup", InterestCalcICAccSetup);
            END;
         DATABASE::"Plant Setup":
            BEGIN
              PlantSetup."Primary Key":= "Key 1";
              PAGE.RUN(PAGE::"Plant Setup", PlantSetup);
            END;
         DATABASE::"Hour Rate by Vendor/CostObject":
            BEGIN
              HourRatebyVendorCostObject."Vendor No." := "Key 1";
              HourRatebyVendorCostObject."Cost Object" := "Key 2";
              PAGE.RUN(PAGE::"Hour Rate by Vendor/CostObject", HourRatebyVendorCostObject);
            END;
          DATABASE::"Service Type":
            BEGIN
              ServiceType.Code := "Key 1";
              PAGE.RUN(0, ServiceType);
            END;
          DATABASE::"Ledger by Serv.Type Vendor Gr.":
            BEGIN
              LedgerbyServTypeVendorGr."Service Type No."  := "Key 1";
              LedgerbyServTypeVendorGr."Vendor Posting Group No." := "Key 2";
              PAGE.RUN(0, LedgerbyServTypeVendorGr);
            END;
          DATABASE::"Ledger by Proj.Type Vendor Gr.":
            BEGIN
              LedgerbyProjTypeVendorGr."Project Type No."  := "Key 1";
              LedgerbyProjTypeVendorGr."Vendor Posting Group No." := "Key 2";
              PAGE.RUN(0, LedgerbyProjTypeVendorGr);
            END;
          DATABASE::"Credit Restriction":
            BEGIN
              CreditRestriction.Code:= "Key 1";
              PAGE.RUN(0,CreditRestriction);
            END;
          DATABASE::"Plant Rate Comp. Posting Setup":
            BEGIN
              PlantRateCompPostingSetup."Rate Component" := "Key 1";
              PlantRateCompPostingSetup."Plant Posting Group Code" := "Key 2";
              PlantRateCompPostingSetup."Gen. Bus. Posting Group" := "Key 3";
              PAGE.RUN(PAGE::"Plant Rate Comp. Posting Setup",PlantRateCompPostingSetup);
            END;
          DATABASE::"Plant Scanner Setup":
            BEGIN
              EVALUATE(PlantScannerSetup."Primary Key","Key 1");
              PAGE.RUN(0,PlantScannerSetup);
            END;
          DATABASE::"Mapping XML Invoices":
            BEGIN
              MappingXMLInvoices."Supplying GLN" := "Key 1";
              EVALUATE(MappingXMLInvoices."Data Type","Key 2");
              MappingXMLInvoices."Supplying No." := "Key 3";
              EVALUATE(MappingXMLInvoices."Sequence No.","Key 4");
              PAGE.RUN(PAGE::"Mapping XML Invoices",MappingXMLInvoices);
            END;
          DATABASE::"IC Posting Setup by Source":
            BEGIN
              ICPostingSetupbySource."Source Code" := "Key 1";
              ICPostingSetupbySource."Supplying Company" := "Key 2";
              ICPostingSetupbySource."Receiving Company":= "Key 3";
              PAGE.RUN(PAGE::"IC Posting Setup by Source",ICPostingSetupbySource);
            END;
          DATABASE::"Conversion XMLPort 4PS":
            BEGIN
              EVALUATE(ConversionXMLPort4PS."XMLPort No.","Key 1");
              PAGE.RUN(PAGE::"Conversion XMLports",ConversionXMLPort4PS);
            END;
          DATABASE::"Intercompany Relation":
            BEGIN
              IntercompanyRelation."Supplying Company" := "Key 1";
              IntercompanyRelation."Receiving Company" := "Key 2";
              PAGE.RUN(0,IntercompanyRelation);
            END;
          DATABASE::"IC-Account Interest Calc.":
            BEGIN
              ICAccountInterestCalc."Account No." := "Key 1";
              PAGE.RUN(0,ICAccountInterestCalc);
            END;
          DATABASE::"Wage Code Paymaster":
            BEGIN
              WageCodePaymaster."Wage Code Paymaster" := "Key 1";
              PAGE.RUN(0,WageCodePaymaster);
            END;
          DATABASE::"Cost Component Plant":
            BEGIN
              CostComponentPlant.Code := "Key 1";
              PAGE.RUN(0,CostComponentPlant);
            END;
          DATABASE::"Year Budget Account No.":
            BEGIN
              EVALUATE(YearBudget.Year,"Key 1");
              YearBudget."Budget Name" := "Key 2";
              PAGE.RUN(PAGE::"Year Budget",YearBudget);
            END;
          DATABASE::"Year Budget Department":
            BEGIN
              EVALUATE(YearBudgetDepartment."Line No.","Key 1");
              PAGE.RUN(0,YearBudgetDepartment);
            END;
          DATABASE::"Overhead Surcharge":
            BEGIN
              EVALUATE(OverheadSurcharge.Level,"Key 1");
              EVALUATE(OverheadSurcharge."Line No.","Key 2");
              PAGE.RUN(0,OverheadSurcharge);
            END;
          DATABASE::"Purchase Allocation Line":
            BEGIN
              PurchaseAllocation.Code := "Key 1";
              PAGE.RUN(PAGE::"Purchase Allocation",PurchaseAllocation);
            END;
          DATABASE::"Stock Surcharge":
            BEGIN
              StockSurcharge.Code := "Key 1";
              PAGE.RUN(0,StockSurcharge);
            END;
          DATABASE::"General Ledger Liquidity":
            BEGIN
              GeneralLedgerLiquidity."G/L Account No." := "Key 1";
              PAGE.RUN(0,GeneralLedgerLiquidity);
            END;
          DATABASE::"Plant Invoice Surcharge Code":
            BEGIN
              PlantInvoiceSurchargeCode.Code := "Key 1";
              PAGE.RUN(0,PlantInvoiceSurchargeCode);
            END;
          DATABASE::"Financial Ratio Setup":
            BEGIN
              FinancialRatioSetup."G/L Account No." := "Key 1";
              EVALUATE(FinancialRatioSetup.Type,"Key 2");
              PAGE.RUN(0,FinancialRatioSetup);
            END;
          DATABASE::"CBG Statement Mapping":
            BEGIN
              EVALUATE(CBGStatementMapping.ID,"Key 1");
              PAGE.RUN(0,CBGStatementMapping);
            END;
          DATABASE::"Loan Posting Group":
            BEGIN
              LoanPostingGroup.Code := "Key 1";
              PAGE.RUN(0,LoanPostingGroup);
            END;
          ELSE
            EXIT(FALSE);
        END;

      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

