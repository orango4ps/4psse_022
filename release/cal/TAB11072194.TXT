OBJECT Table 11072194 Purchase Line - Service Object
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               VALIDATE("Line No.");
               CALCFIELDS(Element);
               "Standard Object No." := FindStandardObjectByElement("Project No.", Element, TRUE);
               //"Service Object No." := GetServiceObjectNoForStandardObject("Standard Object No.", NoOfServiceObjects);
               CheckLine;
             END;

    OnModify=BEGIN
               CheckLine;
               IF Status <> 0 THEN //0 = Emtpy
                 Status := 0;
             END;

    CaptionML=ENU=Purchase Line - Service Object;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr];
                                                   Editable=No }
    { 20  ;   ;Rental Unit No.     ;Code20        ;OnValidate=VAR
                                                                RentalUnit@1100528800 : Record 11012940;
                                                              BEGIN
                                                                IF RentalUnit.GET("Project No.", "Rental Unit No.") THEN
                                                                  "Service Location No." := RentalUnit."Service Location No.";
                                                              END;

                                                   CaptionML=[ENU=Rental Unit No.;
                                                              SVE=Nr];
                                                   Editable=No }
    { 30  ;   ;Line No.            ;Integer       ;OnValidate=BEGIN
                                                                IF "Line No." = 0 THEN
                                                                  "Line No." := GetNewLineNo;
                                                              END;

                                                   CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr];
                                                   Editable=No }
    { 40  ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              NOR=Dokumenttype;
                                                              SVE=Dokumenttyp];
                                                   OptionCaptionML=[ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                                    NOR=Tilbud,Ordre,Faktura,Kreditnota,Rammeordre,Returordre;
                                                                    SVE=Offert,Order,Faktura,Kreditnota,Avropsorder,Returorder];
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                   Editable=No }
    { 50  ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              NOR=Dokumentnr.;
                                                              SVE=Dokumentnr];
                                                   Editable=No }
    { 55  ;   ;Cost Type           ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Line"."Cost Type" WHERE (Document Type=FIELD(Document Type),
                                                                                                         Document No.=FIELD(Document No.),
                                                                                                         Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Cost Type;
                                                              NOR=Kostnadstype;
                                                              SVE=Kostnadstyp];
                                                   OptionCaptionML=[ENU=" ,Labor,Material,Subcontracting,Plant,Sundry";
                                                                    NOR=" ,Arbeidskraft,Materiale,Underentrepen›r,Maskin,Diverse";
                                                                    SVE=" ,Arbetskraft,Material,Underentreprenad,Maskin,Diverse"];
                                                   OptionString=[ ,Labor,Material,Subcontracting,Plant,Sundry] }
    { 60  ;   ;Purchase Line No.   ;Integer       ;TableRelation="Purchase Line"."Line No." WHERE (Document Type=FIELD(Document Type),
                                                                                                   Document No.=FIELD(Document No.));
                                                   CaptionML=ENU=Purchase Line No.;
                                                   Editable=No }
    { 70  ;   ;Service Location No.;Code20        ;CaptionML=[ENU=Service Location No.;
                                                              NOR=Servicelokasjon Nr.;
                                                              SVE=Serviceplatsnr];
                                                   Editable=No }
    { 80  ;   ;Element             ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Line".Element WHERE (Document Type=FIELD(Document Type),
                                                                                                     Document No.=FIELD(Document No.),
                                                                                                     Line No.=FIELD(Purchase Line No.)));
                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element];
                                                   Editable=No }
    { 90  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 100 ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2] }
    { 110 ;   ;Unit of Measure     ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Line"."Unit of Measure" WHERE (Document Type=FIELD(Document Type),
                                                                                                               Document No.=FIELD(Document No.),
                                                                                                               Line No.=FIELD(Purchase Line No.)));
                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=M†leenhet;
                                                              SVE=M†ttenhet];
                                                   Editable=No }
    { 120 ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   Editable=Yes }
    { 130 ;   ;Quantity Used       ;Decimal       ;CaptionML=[ENU=Quantity Used;
                                                              NOR=Brukt mengde;
                                                              SVE=Antal som anv„nts];
                                                   Editable=No }
    { 140 ;   ;Quantity Received   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Line"."Quantity Received" WHERE (Document Type=FIELD(Document Type),
                                                                                                                 Document No.=FIELD(Document No.),
                                                                                                                 Line No.=FIELD(Purchase Line No.)));
                                                   CaptionML=[ENU=Quantity Received;
                                                              NOR=Mottatt (antall);
                                                              SVE=Inlevererat antal];
                                                   Editable=No }
    { 150 ;   ;Buy-from Vendor No. ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Line"."Buy-from Vendor No." WHERE (Document Type=FIELD(Document Type),
                                                                                                                   Document No.=FIELD(Document No.),
                                                                                                                   Line No.=FIELD(Purchase Line No.)));
                                                   CaptionML=[ENU=Buy-from Vendor No.;
                                                              NOR=Kj›p fra-leverand›rnr.;
                                                              SVE=Ink”psleverant”rsnr];
                                                   Editable=No }
    { 160 ;   ;Vendor Name         ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Buy-from Vendor No.)));
                                                   CaptionML=[ENU=Vendor Name;
                                                              NOR=Leverand›rsnavn;
                                                              SVE=Leverant”rsnamn];
                                                   Editable=No }
    { 165 ;   ;Order Date          ;Date          ;CaptionML=[ENU=Order Date;
                                                              NOR=Ordredato;
                                                              SVE=Orderdatum] }
    { 170 ;   ;Service Warranty Code;Code10       ;CaptionML=[ENU=Service Warranty Code;
                                                              NOR=Servicegarantikode;
                                                              SVE=Servicegarantikod];
                                                   Editable=No }
    { 171 ;   ;Service Warranty Period;DateFormula;CaptionML=ENU=Service Warranty Period }
    { 172 ;   ;End Of Warranty     ;Date          ;CaptionML=ENU=End Of Warranty }
    { 173 ;   ;Warranty Discount Percentage;Decimal;
                                                   CaptionML=ENU=Warranty Discount Percentage }
    { 180 ;   ;Service Object No.  ;Code20        ;TableRelation=Service-Object.No. WHERE (Standard Object No.=FIELD(Standard Object No.),
                                                                                           Service Location No.=FIELD(Service Location No.));
                                                   CaptionML=[ENU=Service Object No.;
                                                              NOR=Serviceobjektnr;
                                                              SVE=Serviceobjektnr] }
    { 190 ;   ;Standard Object No. ;Code20        ;TableRelation="Standard Object".No.;
                                                   OnValidate=VAR
                                                                NoOfServiceObjects@1100528800 : Integer;
                                                              BEGIN
                                                                "Service Object No." := GetServiceObjectNoForStandardObject("Standard Object No.", NoOfServiceObjects);
                                                              END;

                                                   CaptionML=[ENU=Standard Object No.;
                                                              NOR=Standardobjektnr;
                                                              SVE=Standardobjektsnr] }
    { 200 ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=ENU=" ,New";
                                                   OptionString=[ ,New] }
    { 210 ;   ;Ready for Processing;Boolean       ;CaptionML=[ENU=Ready for Processing;
                                                              NOR=Klar til prosessering;
                                                              SVE=Klart f”r behandling];
                                                   Editable=No }
    { 220 ;   ;Messagebox          ;Text250       ;CaptionML=ENU=Messagebox;
                                                   Editable=No }
    { 230 ;   ;Create New Service Object;Boolean  ;OnValidate=VAR
                                                                NoOfServiceObjects@1100528800 : Integer;
                                                              BEGIN
                                                                "Service Object No." := GetServiceObjectNoForStandardObject("Standard Object No.", NoOfServiceObjects);
                                                              END;

                                                   CaptionML=ENU=Create New Service Object }
  }
  KEYS
  {
    {    ;Project No.,Rental Unit No.,Document Type,Document No.,Purchase Line No.,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528800 : TextConst 'ENU=No Standard Object';
      Text001@1100528801 : TextConst 'ENU=No Service Object';
      Text002@1100528802 : TextConst 'ENU="More than One Service Object for Standard Object %1. "';
      Text004@1100528804 : TextConst 'ENU=Service Object %1 is deleted.';
      Text005@1100528805 : TextConst 'ENU=No Standard Object Found for Element %1';

    PROCEDURE CopyPurchaseOrderLine@1100528800(PurchaseLine@1100528800 : Record 39;IServiceLocationNo@1100528802 : Code[20];IProjectNo@1100528803 : Code[20];IRentalUnitNo@1100528804 : Code[20]);
    VAR
      PurchaseLineExtension@1100528805 : Record 11020644;
      PurchaseLineServiceObject@1100528801 : Record 11072194;
    BEGIN
      IF NOT PurchaseLineServiceObjectExists(PurchaseLine, IRentalUnitNo) THEN BEGIN
        PurchaseLineExtension.GetPurchLineExtension(PurchaseLine."Document Type", PurchaseLine."Document No.", PurchaseLine."Line No.");
        PurchaseLineServiceObject.INIT;
        PurchaseLineServiceObject.VALIDATE("Project No.", IProjectNo);
        PurchaseLineServiceObject.VALIDATE("Rental Unit No.", IRentalUnitNo);
        PurchaseLineServiceObject."Document Type" := PurchaseLine."Document Type";
        PurchaseLineServiceObject."Document No." := PurchaseLine."Document No.";
        PurchaseLineServiceObject."Purchase Line No." := PurchaseLine."Line No.";
        PurchaseLineServiceObject.Status := Status::New;
        PurchaseLineServiceObject.INSERT(TRUE);
        PurchaseLineServiceObject."Order Date" := PurchaseLine."Order Date";
        PurchaseLineServiceObject.Quantity := PurchaseLine.Quantity;
        PurchaseLineServiceObject.Description := PurchaseLine.Description;
        PurchaseLineServiceObject."Description 2" := PurchaseLine."Description 2";
        PurchaseLineServiceObject."Service Warranty Code" := PurchaseLineExtension."Service Warranty Code";
        PurchaseLineServiceObject.MODIFY(FALSE);
        PurchaseLineServiceObject.CALCFIELDS("Cost Type");
        GetServiceWarrantyPeriodAndPercentage(PurchaseLineServiceObject."Service Warranty Code",PurchaseLineServiceObject."Cost Type",PurchaseLineServiceObject."Service Warranty Period", PurchaseLineServiceObject."Warranty Discount Percentage");
        PurchaseLineServiceObject."End Of Warranty" := CalcWarrantyEndDate(PurchaseLineServiceObject."Order Date", PurchaseLineServiceObject."Service Warranty Period");
        PurchaseLineServiceObject.MODIFY(FALSE);
      END;
    END;

    PROCEDURE PurchaseLineServiceObjectExists@1100528801(PurchaseLine@1100528800 : Record 39;IRentalUnitNo@1100529400 : Code[20]) : Boolean;
    VAR
      PurchaseLineServiceObject@1100528801 : Record 11072194;
    BEGIN
      PurchaseLineServiceObject.RESET;
      PurchaseLineServiceObject.SETRANGE("Project No.", PurchaseLine."Job No.");
      PurchaseLineServiceObject.SETRANGE("Rental Unit No.", IRentalUnitNo);
      PurchaseLineServiceObject.SETRANGE("Document Type", PurchaseLine."Document Type");
      PurchaseLineServiceObject.SETRANGE("Document No.", PurchaseLine."Document No.");
      PurchaseLineServiceObject.SETRANGE("Purchase Line No.", PurchaseLine."Line No.");

      IF PurchaseLineServiceObject.FINDFIRST THEN
        EXIT(TRUE);
    END;

    PROCEDURE CreateServiceObjectsBasedOnPurchaseLine@1100528806(StandardObjectNo@1100528803 : Code[20];VAR NewServiceObjectNo@1100528800 : Code[20]);
    VAR
      ServiceObject@1100528806 : Record 11071691;
    BEGIN
      IF (StandardObjectNo <> '') THEN BEGIN
        ServiceObject.INIT;
        ServiceObject."No." := '';
        ServiceObject.INSERT(TRUE);
        ServiceObject.VALIDATE("Standard Object No.", StandardObjectNo);
        ServiceObject.VALIDATE("Service Location No.", "Service Location No.");
        ServiceObject.VALIDATE("Warranty Code Vendor", "Service Warranty Code");
        ServiceObject.VALIDATE(Quantity, "Quantity Received");
        ServiceObject.MODIFY(TRUE);
        NewServiceObjectNo := ServiceObject."No.";
      END;
    END;

    PROCEDURE GetServiceObjectNoForStandardObject@1100528805(IStandardObjectNo@1100528800 : Code[20];VAR NoOfServiceObjects@1100528801 : Integer) : Code[20];
    VAR
      ServiceObject@1100528802 : Record 11071691;
    BEGIN
      ServiceObject.RESET;
      ServiceObject.SETRANGE("Standard Object No.", IStandardObjectNo);
      ServiceObject.SETRANGE("Service Location No.", "Service Location No.");
      NoOfServiceObjects := ServiceObject.COUNT;
      IF NoOfServiceObjects = 1 THEN
        IF ServiceObject.FINDFIRST THEN
          EXIT(ServiceObject."No.");
    END;

    PROCEDURE GetNewLineNo@1100528807() : Integer;
    VAR
      PurchaseLineServiceObject@1100528800 : Record 11072194;
      NewLineNo@1100528801 : Integer;
    BEGIN
      PurchaseLineServiceObject.SETRANGE("Project No.", "Project No.");
      PurchaseLineServiceObject.SETRANGE("Rental Unit No.", "Rental Unit No.");
      PurchaseLineServiceObject.SETRANGE("Document Type", "Document Type");
      PurchaseLineServiceObject.SETRANGE("Document No.", "Document No.");
      PurchaseLineServiceObject.SETRANGE("Purchase Line No.", "Purchase Line No.");

      IF PurchaseLineServiceObject.FINDLAST THEN
        NewLineNo := PurchaseLineServiceObject."Line No.";
      NewLineNo += 10000;

      EXIT(NewLineNo);
    END;

    PROCEDURE CheckLine@1100528808() : Boolean;
    VAR
      NoOfServiceObjects@1100528800 : Integer;
    BEGIN
      Messagebox := '';
      "Ready for Processing" := FALSE;

      IF ("Standard Object No." <> '') AND ("Create New Service Object" = TRUE) THEN BEGIN
        "Service Object No." := '';
        "Ready for Processing" := TRUE
      END ELSE
        "Ready for Processing" := FALSE;

      IF "Standard Object No." = '' THEN BEGIN
        Messagebox := Text000;
      END;

      IF ("Standard Object No." <> '') AND ("Service Object No." = '') AND ("Create New Service Object" = FALSE) THEN BEGIN
        GetServiceObjectNoForStandardObject("Standard Object No.", NoOfServiceObjects);
        IF NoOfServiceObjects > 1 THEN BEGIN
          Messagebox := STRSUBSTNO(Text002, "Standard Object No.");
        END ELSE BEGIN
          Messagebox := Text001;
        END;
      END;
    END;

    PROCEDURE GetServiceWarrantyPeriodAndPercentage@1100528809(ServiceWarrantyCode@1100528803 : Code[10];CostType@1100528804 : ' ,Labor,Material,Subcontracting,Plant,Sundry';VAR Period@1100528802 : DateFormula;VAR DiscountPercentage@1100528801 : Decimal);
    VAR
      ServiceWarrantyDiscountTerm@1100528800 : Record 11071811;
    BEGIN
      ServiceWarrantyDiscountTerm.RESET;
      ServiceWarrantyDiscountTerm.SETRANGE("Warranty Code", ServiceWarrantyCode);
      ServiceWarrantyDiscountTerm.SETRANGE("Cost Type", CostType);
      IF ServiceWarrantyDiscountTerm.FINDFIRST THEN BEGIN
        Period := ServiceWarrantyDiscountTerm.Period;
        DiscountPercentage := ServiceWarrantyDiscountTerm.Percentage;
      END;
    END;

    PROCEDURE CalcWarrantyEndDate@1100528803(OrderDate@1100528800 : Date;WarrantyPeriod@1100528801 : DateFormula) : Date;
    BEGIN
      IF (OrderDate = 0D) OR (FORMAT(WarrantyPeriod) = '') THEN
        EXIT;

      EXIT(CALCDATE(WarrantyPeriod, OrderDate));
    END;

    PROCEDURE NextServiceWarrantyDiscountTermPeriodIsBigger@1100528813(OrderDate@1100528802 : Date;Period@1100528800 : DateFormula;NewPeriod@1100528801 : DateFormula) : Boolean;
    VAR
      Date@1100528803 : Date;
      NewDate@1100528804 : Date;
    BEGIN
      Date := CALCDATE(Period, OrderDate);
      NewDate := CALCDATE(NewPeriod, OrderDate);

      IF NewDate > Date THEN
        EXIT(TRUE);
    END;

    PROCEDURE IsCurrentRecord@1100528818(iPurchaseLineServiceObject@1100528800 : Record 11072194) : Boolean;
    BEGIN
      IF iPurchaseLineServiceObject."Project No." <> "Project No." THEN
        EXIT;

      IF iPurchaseLineServiceObject."Rental Unit No." <> "Rental Unit No." THEN
        EXIT;

      IF iPurchaseLineServiceObject."Document Type" <> "Document Type" THEN
        EXIT;

      IF iPurchaseLineServiceObject."Document No." <> "Document No." THEN
        EXIT;

      IF iPurchaseLineServiceObject."Purchase Line No." <> "Purchase Line No." THEN
        EXIT;

      IF iPurchaseLineServiceObject."Line No." <> "Line No." THEN
        EXIT;

      EXIT(TRUE);
    END;

    PROCEDURE GetNoOfPurchaseLines@1100528810(Source@1100528802 : 'ServiceLocation,ServiceObject,ServiceOrder';SourceNo@1100528800 : Code[20]) : Integer;
    VAR
      PurchaseLineServiceObject@1100528801 : Record 11072194;
      ServiceOrderObject@1100528803 : Record 11071724;
      ServiceOrder@1100528804 : Record 11012823;
      ObjectFilter@1100528805 : Text;
      Counter@1100528806 : Integer;
      SupplyingCompany@1100527650 : Text;
    BEGIN
      SupplyingCompany := GetSupplyingCompany(Source, SourceNo);

      IF COMPANYNAME <> SupplyingCompany THEN BEGIN
        PurchaseLineServiceObject.CHANGECOMPANY(SupplyingCompany);
        ServiceOrderObject.CHANGECOMPANY(SupplyingCompany);
        ServiceOrder.CHANGECOMPANY(SupplyingCompany);
      END;

      CASE Source OF
        Source::ServiceLocation: PurchaseLineServiceObject.SETRANGE("Service Location No.", SourceNo);
        Source::ServiceObject:   PurchaseLineServiceObject.SETRANGE("Service Object No.", SourceNo);
        Source::ServiceOrder:
          BEGIN
            ServiceOrderObject.SETRANGE("Service Order No.", SourceNo);
            IF ServiceOrderObject.ISEMPTY THEN BEGIN
              IF ServiceOrder.GET(SourceNo) THEN BEGIN
                PurchaseLineServiceObject.SETRANGE("Service Location No.", ServiceOrder."Service Location No.");
                EXIT(PurchaseLineServiceObject.COUNT);
              END;
            END ELSE
              IF ServiceOrderObject.FINDSET THEN
                Counter := 0;
                REPEAT
                  IF Counter = 0 THEN
                    ObjectFilter := ServiceOrderObject."Object No."
                  ELSE
                    ObjectFilter := ObjectFilter + '|' + ServiceOrderObject."Object No.";
                  Counter += 1;
                UNTIL ServiceOrderObject.NEXT = 0;
            PurchaseLineServiceObject.SETFILTER("Service Object No.", ObjectFilter);
          END;
      END;

      EXIT(PurchaseLineServiceObject.COUNT);
    END;

    PROCEDURE ShowNoOfPurchaseLines@1100528811(Source@1100528802 : 'ServiceLocation,ServiceObject,ServiceOrder';SourceNo@1100528800 : Code[20]);
    VAR
      PurchaseLineServiceObject@1100528801 : Record 11072194;
      ServiceOrderObject@1100528803 : Record 11071724;
      ServiceOrder@1100528804 : Record 11012823;
      ObjectFilter@1100528805 : Text;
      Counter@1100528806 : Integer;
      SupplyingCompany@1100527650 : Text;
    BEGIN
      SupplyingCompany := GetSupplyingCompany(Source, SourceNo);

      IF COMPANYNAME <> SupplyingCompany THEN BEGIN
        PurchaseLineServiceObject.CHANGECOMPANY(SupplyingCompany);
        ServiceOrderObject.CHANGECOMPANY(SupplyingCompany);
        ServiceOrder.CHANGECOMPANY(SupplyingCompany);
      END;

      CASE Source OF
        Source::ServiceLocation: PurchaseLineServiceObject.SETRANGE("Service Location No.", SourceNo);
        Source::ServiceObject:   PurchaseLineServiceObject.SETRANGE("Service Object No.", SourceNo);
        Source::ServiceOrder:
          BEGIN
            ServiceOrderObject.SETRANGE("Service Order No.", SourceNo);
            IF ServiceOrderObject.ISEMPTY THEN BEGIN
              IF ServiceOrder.GET(SourceNo) THEN BEGIN
                PurchaseLineServiceObject.SETRANGE("Service Location No.", ServiceOrder."Service Location No.");

                IF COMPANYNAME = SupplyingCompany THEN
                  PAGE.RUNMODAL(11229358, PurchaseLineServiceObject)
                ELSE
                  HYPERLINK(GETURL(CLIENTTYPE::Windows, SupplyingCompany, OBJECTTYPE::Page, 11229358, PurchaseLineServiceObject));

                EXIT;
              END;
            END ELSE
              IF ServiceOrderObject.FINDSET THEN
                Counter := 0;
                REPEAT
                  IF Counter = 0 THEN
                    ObjectFilter := ServiceOrderObject."Object No."
                  ELSE
                    ObjectFilter := ObjectFilter + '|' + ServiceOrderObject."Object No.";
                  Counter += 1;
                UNTIL ServiceOrderObject.NEXT = 0;
              PurchaseLineServiceObject.SETFILTER("Service Object No.", ObjectFilter);
          END;
      ELSE
        EXIT;
      END;

      IF COMPANYNAME = SupplyingCompany THEN
        PAGE.RUNMODAL(11229358, PurchaseLineServiceObject)
      ELSE
        HYPERLINK(GETURL(CLIENTTYPE::Windows, SupplyingCompany, OBJECTTYPE::Page, 11229358, PurchaseLineServiceObject));
    END;

    PROCEDURE GetNoOfPurchaseLinesWithWarranty@1100528814(Source@1100528802 : 'ServiceLocation,ServiceObject,ServiceOrder';SourceNo@1100528800 : Code[20]) : Integer;
    VAR
      PurchaseLineServiceObject@1100528801 : Record 11072194;
      ServiceOrderObject@1100528803 : Record 11071724;
      ServiceOrder@1100528804 : Record 11012823;
      Counter@1100528805 : Integer;
      ObjectFilter@1100528806 : Text;
      SupplyingCompany@1100527650 : Text;
    BEGIN
      SupplyingCompany := GetSupplyingCompany(Source, SourceNo);

      IF COMPANYNAME <> SupplyingCompany THEN BEGIN
        PurchaseLineServiceObject.CHANGECOMPANY(SupplyingCompany);
        ServiceOrderObject.CHANGECOMPANY(SupplyingCompany);
        ServiceOrder.CHANGECOMPANY(SupplyingCompany);
      END;

      CASE Source OF

        Source::ServiceLocation:
          BEGIN
            PurchaseLineServiceObject.SETRANGE("Service Location No.", SourceNo);
            PurchaseLineServiceObject.SETFILTER("End Of Warranty", '>%1', WORKDATE);
          END;
        Source::ServiceObject:
          BEGIN
            PurchaseLineServiceObject.SETRANGE("Service Object No.", SourceNo);
            PurchaseLineServiceObject.SETFILTER("End Of Warranty", '>%1', WORKDATE);
          END;
        Source::ServiceOrder:
          BEGIN
            ServiceOrderObject.SETRANGE("Service Order No.", SourceNo);
            IF ServiceOrderObject.ISEMPTY THEN BEGIN
              IF ServiceOrder.GET(SourceNo) THEN BEGIN
                PurchaseLineServiceObject.SETRANGE("Service Location No.", ServiceOrder."Service Location No.");
                PurchaseLineServiceObject.SETFILTER("End Of Warranty", '>%1', WORKDATE);
                EXIT(PurchaseLineServiceObject.COUNT);
              END;
            END ELSE
              IF ServiceOrderObject.FINDSET THEN
                Counter := 0;
                REPEAT
                  IF Counter = 0 THEN
                    ObjectFilter := ServiceOrderObject."Object No."
                  ELSE
                    ObjectFilter := ObjectFilter + '|' + ServiceOrderObject."Object No.";
                  Counter += 1;
                UNTIL ServiceOrderObject.NEXT = 0;
            PurchaseLineServiceObject.SETFILTER("End Of Warranty", '>%1', WORKDATE);
            PurchaseLineServiceObject.SETFILTER("Service Object No.", ObjectFilter);
          END;
      END;

      EXIT(PurchaseLineServiceObject.COUNT);
    END;

    PROCEDURE ShowNoOfPurchaseLinesWithWarranty@1100528816(Source@1100528802 : 'ServiceLocation,ServiceObject,ServiceOrder';SourceNo@1100528800 : Code[20]);
    VAR
      PurchaseLineServiceObject@1100528801 : Record 11072194;
      ServiceOrderObject@1100528803 : Record 11071724;
      ServiceOrder@1100528804 : Record 11012823;
      ObjectFilter@1100528805 : Text;
      Counter@1100528806 : Integer;
      SupplyingCompany@1100527650 : Text;
    BEGIN
      SupplyingCompany := GetSupplyingCompany(Source, SourceNo);

      IF COMPANYNAME <> SupplyingCompany THEN BEGIN
        PurchaseLineServiceObject.CHANGECOMPANY(SupplyingCompany);
        ServiceOrderObject.CHANGECOMPANY(SupplyingCompany);
        ServiceOrder.CHANGECOMPANY(SupplyingCompany);
      END;

      CASE Source OF

        Source::ServiceLocation:
          BEGIN
            PurchaseLineServiceObject.SETRANGE("Service Location No.", SourceNo);
            PurchaseLineServiceObject.SETFILTER("End Of Warranty", '>%1', WORKDATE);
          END;
        Source::ServiceObject:
          BEGIN
            PurchaseLineServiceObject.SETRANGE("Service Object No.", SourceNo);
            PurchaseLineServiceObject.SETFILTER("End Of Warranty", '>%1', WORKDATE);
          END;
        Source::ServiceOrder:
          BEGIN
            ServiceOrderObject.SETRANGE("Service Order No.", SourceNo);
            IF ServiceOrderObject.ISEMPTY THEN BEGIN
              IF ServiceOrder.GET(SourceNo) THEN BEGIN
                PurchaseLineServiceObject.SETRANGE("Service Location No.", ServiceOrder."Service Location No.");
                PurchaseLineServiceObject.SETFILTER("End Of Warranty", '>%1', WORKDATE);

                IF COMPANYNAME = SupplyingCompany THEN
                  PAGE.RUNMODAL(11229358, PurchaseLineServiceObject)
                ELSE
                  HYPERLINK(GETURL(CLIENTTYPE::Windows, SupplyingCompany, OBJECTTYPE::Page, 11229358, PurchaseLineServiceObject));

                EXIT;
              END;
            END ELSE
              IF ServiceOrderObject.FINDSET THEN
                Counter := 0;
                REPEAT
                  IF Counter = 0 THEN
                    ObjectFilter := ServiceOrderObject."Object No."
                  ELSE
                    ObjectFilter := ObjectFilter + '|' + ServiceOrderObject."Object No.";
                  Counter += 1;
                UNTIL ServiceOrderObject.NEXT = 0;
            PurchaseLineServiceObject.SETFILTER("End Of Warranty", '>%1', WORKDATE);
            PurchaseLineServiceObject.SETFILTER("Service Object No.", ObjectFilter);
          END;
      END;

      IF COMPANYNAME = SupplyingCompany THEN
        PAGE.RUNMODAL(11229358, PurchaseLineServiceObject)
      ELSE
        HYPERLINK(GETURL(CLIENTTYPE::Windows, SupplyingCompany, OBJECTTYPE::Page, 11229358, PurchaseLineServiceObject));
    END;

    PROCEDURE GetRentalUnitNo@1100528815(Source@1100528800 : 'ServiceLocation,ServiceObject,ServiceOrder';SourceNo@1100528801 : Code[20]) : Code[20];
    VAR
      RentalUnit@1100528804 : Record 11012940;
      ServiceLocation@1100528803 : Record 11012801;
      ServiceObject@1100528802 : Record 11071691;
      ServiceOrder@1100528805 : Record 11012823;
    BEGIN
      IF SourceNo = '' THEN
        EXIT;

      CASE Source OF
        Source::ServiceOrder:
          BEGIN
            IF ServiceOrder.GET(SourceNo) THEN
              EXIT(GetRentalUnitNo(Source::ServiceLocation, ServiceOrder."Service Location No."));
          END;
        Source::ServiceLocation:
          BEGIN
            IF ServiceLocation.GET(SourceNo) THEN BEGIN
              IF ServiceLocation."Rental Unit" <> '' THEN
                EXIT(ServiceLocation."Rental Unit");

              RentalUnit.SETRANGE("Service Location No.", SourceNo);
              IF RentalUnit.FINDFIRST THEN
                EXIT(RentalUnit."Rental Unit")
              ELSE
                EXIT;
            END;
          END;
        Source::ServiceObject:
          BEGIN
            ServiceObject.GET(SourceNo);
            EXIT(GetRentalUnitNo(Source::ServiceLocation, ServiceObject."Service Location No."));
          END;
      END;
    END;

    PROCEDURE GetRentalUnitDescription@1100528820(Source@1100528801 : 'ServiceLocation,ServiceObject';SourceNo@1100528800 : Code[20]) : Text[50];
    VAR
      RentalUnit@1100528802 : Record 11012940;
      SupplyingCompany@1100527650 : Text;
    BEGIN
      SupplyingCompany := GetSupplyingCompany(Source, SourceNo);

      IF COMPANYNAME <> SupplyingCompany THEN
        RentalUnit.CHANGECOMPANY(SupplyingCompany);

      IF RentalUnit.GET(GetRentalUnitProjectNo(Source, SourceNo), GetRentalUnitNo(Source, SourceNo)) THEN
      EXIT(RentalUnit.Description);
    END;

    PROCEDURE GetRentalUnitProjectNo@1100528821(Source@1100527652 : 'ServiceLocation,ServiceObject,ServiceOrder';SourceNo@1100527651 : Code[20]) : Code[20];
    VAR
      RentalUnit@1100527655 : Record 11012940;
      ServiceLocation@1100527654 : Record 11012801;
      ServiceObject@1100527653 : Record 11071691;
      ServiceOrder@1100527650 : Record 11012823;
    BEGIN
      IF SourceNo = '' THEN
        EXIT;

      CASE Source OF
        Source::ServiceOrder:
          BEGIN
            IF ServiceOrder.GET(SourceNo) THEN
              EXIT(GetRentalUnitProjectNo(Source::ServiceLocation, ServiceOrder."Service Location No."));
          END;
        Source::ServiceLocation:
          BEGIN
            IF ServiceLocation.GET(SourceNo) THEN BEGIN
              IF ServiceLocation."Project No." <> '' THEN
                EXIT(ServiceLocation."Project No.");

              RentalUnit.SETRANGE("Service Location No.", SourceNo);
              IF RentalUnit.FINDFIRST THEN
                EXIT(RentalUnit."Project No.")
              ELSE
                EXIT;
            END;
          END;
        Source::ServiceObject:
          BEGIN
            ServiceObject.GET(SourceNo);
            EXIT(GetRentalUnitProjectNo(Source::ServiceLocation, ServiceObject."Service Location No."));
          END;
      END;
    END;

    PROCEDURE GetRentalUnitProjectDescription@1100528826(Source@1100528801 : 'ServiceLocation,ServiceObject';SourceNo@1100528800 : Code[20]) : Text[50];
    VAR
      Job@1100528802 : Record 11072003;
      SupplyingCompany@1100527650 : Text;
    BEGIN
      SupplyingCompany := GetSupplyingCompany(Source, SourceNo);

      IF COMPANYNAME <> SupplyingCompany THEN
        Job.CHANGECOMPANY(SupplyingCompany);

      IF Job.GET(GetRentalUnitProjectNo(Source, SourceNo)) THEN
        EXIT(Job.Description);
    END;

    PROCEDURE ShowRentalUnit@1100528817(Source@1100528801 : 'ServiceLocation,ServiceObject';SourceNo@1100528800 : Code[20]);
    VAR
      RentalUnit@1100528802 : Record 11012940;
      SupplyingCompany@1100527650 : Text;
    BEGIN
      SupplyingCompany := GetSupplyingCompany(Source, SourceNo);

      IF COMPANYNAME <> SupplyingCompany THEN BEGIN
        RentalUnit.CHANGECOMPANY(SupplyingCompany);

        IF RentalUnit.GET(GetRentalUnitProjectNo(Source, SourceNo), GetRentalUnitNo(Source, SourceNo)) THEN
          HYPERLINK(GETURL(CLIENTTYPE::Windows, SupplyingCompany, OBJECTTYPE::Page, PAGE::"Rental Unit", RentalUnit));
      END ELSE BEGIN
        IF RentalUnit.GET(GetRentalUnitProjectNo(Source, SourceNo), GetRentalUnitNo(Source, SourceNo)) THEN
          PAGE.RUNMODAL(PAGE::"Rental Unit", RentalUnit);
      END;
    END;

    PROCEDURE ShowProject@1100528819(Source@1100528801 : 'ServiceLocation,ServiceObject';SourceNo@1100528800 : Code[20]);
    VAR
      Job@1100528802 : Record 11072003;
      SupplyingCompany@1100527650 : Text;
    BEGIN
      SupplyingCompany := GetSupplyingCompany(Source, SourceNo);

      IF COMPANYNAME <> SupplyingCompany THEN BEGIN
        Job.CHANGECOMPANY(SupplyingCompany);

        IF Job.GET(GetRentalUnitProjectNo(Source, SourceNo)) THEN
          HYPERLINK(GETURL(CLIENTTYPE::Windows, SupplyingCompany, OBJECTTYPE::Page, PAGE::"Job Card", Job));
      END ELSE BEGIN
        IF Job.GET(GetRentalUnitProjectNo(Source, SourceNo)) THEN
          PAGE.RUNMODAL(PAGE::"Job Card", Job);
      END;
    END;

    PROCEDURE ServiceObjectDeleted@1100528804();
    BEGIN
      Messagebox := STRSUBSTNO(Text004, "Service Object No.");
      "Service Object No." := '';
      MODIFY(FALSE);
    END;

    PROCEDURE FindStandardObjectByElement@1100528802(ProjectNo@1100528800 : Code[20];ElementNo@1100528801 : Code[20];ShowMessage@1100528804 : Boolean) : Code[20];
    VAR
      BaseElement@1100528802 : Record 11012060;
      ProjectElement@1100528803 : Record 11012010;
    BEGIN
      ProjectElement.SETRANGE("Project No.", ProjectNo);
      ProjectElement.SETFILTER("Standard Object", '<>%1', '');
      ProjectElement.SETRANGE(Element, ElementNo);
      IF ProjectElement.FINDFIRST THEN
        EXIT(ProjectElement."Standard Object");

      BaseElement.SETRANGE(Code, ElementNo);
      IF BaseElement.FINDFIRST THEN
        EXIT(BaseElement."Standard Object");

      IF ShowMessage THEN
       MESSAGE(Text005,ElementNo);
    END;

    PROCEDURE GetSupplyingCompany@1100527653(Source@1100527651 : 'ServiceLocation,ServiceObject,ServiceOrder';SourceNo@1100527650 : Code[20]) : Text;
    VAR
      ServiceLocation@1100527654 : Record 11012801;
      ServiceObject@1100527653 : Record 11071691;
      ServiceOrder@1100527652 : Record 11012823;
    BEGIN
      IF SourceNo = '' THEN
        EXIT(COMPANYNAME);

      CASE Source OF
        Source::ServiceOrder:
          BEGIN
            IF ServiceOrder.GET(SourceNo) THEN
              EXIT(GetSupplyingCompany(Source::ServiceLocation, ServiceOrder."Service Location No."));
          END;
        Source::ServiceLocation:
          BEGIN
            IF ServiceLocation.GET(SourceNo) THEN
              IF ServiceLocation."Supplying Company" <> '' THEN
                EXIT(ServiceLocation."Supplying Company");
          END;
        Source::ServiceObject:
          BEGIN
            IF ServiceObject.GET(SourceNo) THEN
              EXIT(GetSupplyingCompany(Source::ServiceLocation, ServiceObject."Service Location No."));
          END;
      END;

      EXIT(COMPANYNAME);
    END;

    BEGIN
    END.
  }
}

