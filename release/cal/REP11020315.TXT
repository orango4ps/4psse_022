OBJECT Report 11020315 Copy Purchase Requisition
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Einkaufsanforderung kopieren;
               ENU=Copy Purchase Requisition;
               NLD=Inkooprequisitie kopi‰ren];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   CopyCancelled := FALSE;
                 END;

  }
  DATASET
  {
    { 1100525000;;DataItem;Origin            ;
               DataItemTable=Table11229330;
               DataItemTableView=SORTING(No.);
               OnAfterGetRecord=BEGIN
                                  RequisitionFrom := "No.";
                                  StartUpdate;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnQueryClosePage=BEGIN
                         CopyCancelled := CloseAction = ACTION::Cancel;
                         EXIT(TRUE);
                       END;

    }
    CONTROLS
    {
      { 1100525004;;Container;
                  ContainerType=ContentArea }

      { 1100525003;1;Group  ;
                  GroupType=Group }

      { 1100525008;2;Field  ;
                  CaptionClass=Text998;
                  Style=Strong;
                  StyleExpr=TRUE }

      { 1100525006;2;Field  ;
                  Name=RequisitionFrom;
                  CaptionML=[DEU=Einkaufsanforderungsnr.;
                             ENU=Purchase Requisition No.;
                             NLD=Inkooprequisitienr.;
                             SVE=Ink”psrekvisition nr];
                  SourceExpr=RequisitionFrom;
                  OnValidate=BEGIN
                               FillDefaults(RequisitionFrom);
                             END;

                  OnLookup=BEGIN
                             OnLookupRequisitionFrom;
                           END;
                            }

      { 1100529400;2;Field  ;
                  CaptionML=[DEU=Beschreibung Einkaufsanforderung;
                             ENU=Description Purchse Requisition;
                             NLD=Omschrijving inkooprequisitie];
                  SourceExpr=RequisitionFromTxt;
                  Editable=FALSE }

      { 1100525005;2;Field  ;
                  CaptionClass=Text999;
                  Style=Strong;
                  StyleExpr=TRUE }

      { 1100525001;2;Field  ;
                  Name=RequisitionTo;
                  CaptionML=[DEU=Einkaufsanforderungsnr.;
                             ENU=Purchase Requisition No.;
                             NLD=Inkooprequisitienr.;
                             SVE=Ink”psrekvisition nr];
                  SourceExpr=RequisitionTo;
                  OnLookup=BEGIN
                             OnLookupRequisitionTo;
                           END;
                            }

      { 1100525000;2;Field  ;
                  CaptionML=[DEU=Beschreibung Einkaufsanforderung;
                             ENU=Description Purchase Requisition;
                             NLD=Omschrijving inkooprequisitie];
                  SourceExpr=RequisitionToTxt }

      { 1100529600;2;Field  ;
                  CaptionClass=Text001;
                  Style=Strong;
                  StyleExpr=TRUE }

      { 1100529601;2;Field  ;
                  Name=CopyVendors;
                  CaptionML=[DEU=Kreditoren;
                             ENU=Vendors;
                             NLD=Leveranciers;
                             NOR=Leverand›rer;
                             SVE=Leverant”rer];
                  SourceExpr=CopyVendors }

      { 1100529602;2;Field  ;
                  Name=CopyPurchasers;
                  CaptionML=[DEU=Eink„ufer;
                             ENU=Purchasers;
                             NLD=Inkopers;
                             NOR=Innkj›pere;
                             SVE=Ink”pare];
                  SourceExpr=CopyPurchasers }

      { 1100529603;2;Field  ;
                  Name=CopyTexts;
                  CaptionML=[DEU=Texte;
                             ENU=Texts;
                             NLD=Teksten;
                             NOR=Tekster;
                             SVE=Texter];
                  SourceExpr=CopyTexts }

      { 1100529604;2;Field  ;
                  Name=CopyComments;
                  CaptionML=[DEU=Kommentarzeilen;
                             ENU=Comment Lines;
                             NLD=Opmerkingen];
                  SourceExpr=CopyComments }

      { 1100529606;2;Field  ;
                  Name=CopyInspections;
                  CaptionML=[DEU=Einkaufsinspektionen;
                             ENU=Purchase Inspections;
                             NLD=Inkoopkeuringen];
                  SourceExpr=CopyInspections }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      RequisitionFrom@1100525007 : Code[20];
      RequisitionTo@1100525006 : Code[20];
      RequisitionFromTxt@1100525003 : Text[100];
      RequisitionToTxt@1100525002 : Text[100];
      ProjectRequisition@1100525001 : Record 11229330;
      Text998@1100525013 : TextConst 'DEU=Kopieren von;ENU=Copy From;NLD=Kopieer van;NOR=Kopier fra;SVE=Kopiera fr†n';
      Text999@1100525010 : TextConst 'DEU=Kopieren in;ENU=Copy To;NLD=Kopieer naar;NOR=Kopier til;SVE=Kopiera till';
      RequisitionNos@1100528900 : Code[20];
      NoSeriesMgt@1100528901 : Codeunit 396;
      CopyVendors@1100529600 : Boolean;
      CopyPurchasers@1100529601 : Boolean;
      CopyTexts@1100529602 : Boolean;
      CopyComments@1100529603 : Boolean;
      Text001@1100529604 : TextConst 'DEU=Zugeh”rige Tabellen kopieren;ENU=Copy Related Tables;NLD=Kopieer gerelateerde tabellen';
      CopyInspections@1100529606 : Boolean;
      CopyCancelled@1100529605 : Boolean;

    PROCEDURE FillDefaults@1(lRequisitionFrom@11012000 : Code[20]);
    BEGIN
      RequisitionFrom  := lRequisitionFrom;
      ProjectRequisition.GET(RequisitionFrom);
      RequisitionFromTxt := ProjectRequisition.Description;
      RequisitionTo := DetermineNewRequisition;
      RequisitionToTxt := RequisitionFromTxt;
    END;

    PROCEDURE StartUpdate@2();
    VAR
      ProjectRequisition@1100529402 : Record 11229330;
      ProjectRequisition2@1100529401 : Record 11229330;
      ProjectRequisitionLine@1100529400 : Record 11229331;
      ProjectRequisitionLine2@1100529403 : Record 11229331;
      CommentLine@1100529406 : Record 11020634;
      VendorByPurchaseRequisition@1100529601 : Record 11229332;
      VendorByPurchaseRequisition2@1100529600 : Record 11229332;
      PurchaserByPurchRequisition@1100529602 : Record 11229337;
      PurchaserByPurchRequisition2@1100529603 : Record 11229337;
      PurchaseText@1100529604 : Record 11012067;
      PurchaseText2@1100529605 : Record 11012067;
      PurchaseInspectionLine@1100529606 : Record 11229328;
      PurchaseInspectionLine2@1100529607 : Record 11229328;
      OriginRecRef@1100529405 : RecordRef;
      TargetRecRef@1100529404 : RecordRef;
      NewRequisition@1100528900 : Code[20];
    BEGIN
      ProjectRequisition.SETRANGE("No.",RequisitionFrom);
      IF ProjectRequisition.FINDSET THEN BEGIN
        REPEAT
          ProjectRequisition2.COPY(ProjectRequisition);
          ProjectRequisition2."No." := RequisitionTo;
          ProjectRequisition2.Description := RequisitionToTxt;
          ProjectRequisition2.VALIDATE(Status, ProjectRequisition2.Status::Open);  //DP01314 (Fixed->FALSE)
          ProjectRequisition2.INSERT(TRUE);

          IF CopyVendors THEN BEGIN
            VendorByPurchaseRequisition.SETRANGE("Purchase Requisition No.", ProjectRequisition."No.");
            IF VendorByPurchaseRequisition.FINDSET THEN
              REPEAT
                VendorByPurchaseRequisition2 := VendorByPurchaseRequisition;
                VendorByPurchaseRequisition2."Purchase Requisition No." := ProjectRequisition2."No.";
                VendorByPurchaseRequisition2."Activate for" := VendorByPurchaseRequisition2."Activate for"::" "; //C043361
                VendorByPurchaseRequisition2.INSERT;
              UNTIL VendorByPurchaseRequisition.NEXT = 0;
          END;

          IF CopyPurchasers THEN BEGIN
            PurchaserByPurchRequisition.SETRANGE("Purchase Requisition No.", ProjectRequisition."No.");
            IF PurchaserByPurchRequisition.FINDSET THEN
              REPEAT
                PurchaserByPurchRequisition2 := PurchaserByPurchRequisition;
                PurchaserByPurchRequisition2."Purchase Requisition No." := ProjectRequisition2."No.";
                PurchaserByPurchRequisition2.INSERT;
              UNTIL PurchaserByPurchRequisition.NEXT = 0;
          END;

          IF CopyComments THEN BEGIN
            OriginRecRef.GETTABLE(ProjectRequisition);
            TargetRecRef.GETTABLE(ProjectRequisition2);
            CommentLine.CopyCommentLines(CommentLine."Table Name"::"Purchase Requisition", OriginRecRef, TargetRecRef);
          END;

          IF CopyTexts THEN BEGIN
            PurchaseText.SETRANGE("Line Type", PurchaseText."Line Type"::Requisition);
            PurchaseText.SETRANGE("No.", ProjectRequisition."No.");
            IF PurchaseText.FINDSET THEN
              REPEAT
                PurchaseText2 := PurchaseText;
                PurchaseText2."No." := ProjectRequisition2."No.";
                PurchaseText2.INSERT;
              UNTIL PurchaseText.NEXT = 0;
          END;
          //
          ProjectRequisitionLine.SETRANGE("Purchase Requisition No.", ProjectRequisition."No.");
          IF ProjectRequisitionLine.FINDSET THEN BEGIN
            REPEAT
              ProjectRequisitionLine2.COPY(ProjectRequisitionLine);
              ProjectRequisitionLine2."Purchase Requisition No." := RequisitionTo;
              ProjectRequisitionLine2.INSERT(TRUE);
              ProjectRequisitionLine2.InitRecord;
              //C037062.sn
              ProjectRequisitionLine2.TRANSFERFIELDS(ProjectRequisitionLine,FALSE);
              ProjectRequisitionLine2."Purchase Route Reference" := ''; //C037622.n
              ProjectRequisitionLine2."Document No." := '';
              ProjectRequisitionLine2."Document Type" := ProjectRequisitionLine2."Document Type"::Quote;
              ProjectRequisitionLine2."Document Line No." := 0;
              ProjectRequisitionLine2.MODIFY;
              //C037062.en

              IF CopyComments THEN BEGIN
                OriginRecRef.GETTABLE(ProjectRequisitionLine);
                TargetRecRef.GETTABLE(ProjectRequisitionLine2);
                CommentLine.CopyCommentLines(CommentLine."Table Name"::"Purchase Requisition Line", OriginRecRef, TargetRecRef);
              END;

              IF CopyInspections THEN BEGIN
                PurchaseInspectionLine.SETRANGE("Document Type", PurchaseInspectionLine."Document Type"::"Purchase Requisition");
                PurchaseInspectionLine.SETRANGE("Document No.", ProjectRequisitionLine."Purchase Requisition No.");
                PurchaseInspectionLine.SETRANGE("Document Line No.", ProjectRequisitionLine."Line No.");
                IF PurchaseInspectionLine.FINDSET THEN
                  REPEAT
                    PurchaseInspectionLine2 := PurchaseInspectionLine;
                    PurchaseInspectionLine2."Document No." := ProjectRequisitionLine2."Purchase Requisition No.";
                    PurchaseInspectionLine2.INSERT(TRUE);
                  UNTIL PurchaseInspectionLine.NEXT = 0;
              END;
            UNTIL ProjectRequisitionLine.NEXT = 0;
          END;
        UNTIL ProjectRequisition.NEXT = 0;
      END;

      CLEAR(NoSeriesMgt);
      NewRequisition := NoSeriesMgt.GetNextNo(RequisitionNos,0D,FALSE);
      IF NewRequisition = RequisitionTo THEN
        NewRequisition := NoSeriesMgt.GetNextNo(RequisitionNos,0D,TRUE);
    END;

    PROCEDURE GetDestination@1100528901(VAR DestRequisition@1100528901 : Code[20]);
    BEGIN
      IF CopyCancelled THEN
        DestRequisition := ''
      ELSE
        DestRequisition := RequisitionTo;
    END;

    PROCEDURE OnLookupRequisitionFrom@1100525006();
    BEGIN
      IF PAGE.RUNMODAL(0, ProjectRequisition) = ACTION::LookupOK THEN BEGIN
         RequisitionFrom := ProjectRequisition."No.";
         FillDefaults(RequisitionFrom);
      END;
    END;

    PROCEDURE OnLookupRequisitionTo@1100525010();
    BEGIN
      PAGE.RUNMODAL(0, ProjectRequisition);
    END;

    PROCEDURE DetermineNewRequisition@1000000000() NewRequisition : Code[20];
    VAR
      PurchaseSetup@1100528900 : Record 312;
      NoSeriesLine@1100528902 : Record 309;
      NoSeriesRelationship@1100528901 : Record 310;
    BEGIN
      CLEAR(NoSeriesMgt);

      IF ProjectRequisition."No. Series" <> '' THEN BEGIN
        RequisitionNos := ProjectRequisition."No. Series";
      END ELSE BEGIN
        PurchaseSetup.GET;
        RequisitionNos := PurchaseSetup."Requisition Nos.";
      END;

      NoSeriesRelationship.SETRANGE(Code, RequisitionNos);
      IF NoSeriesRelationship.FINDSET THEN BEGIN
        REPEAT
          NoSeriesLine.SETRANGE("Series Code", NoSeriesRelationship."Series Code");
          IF NoSeriesLine.FINDSET(FALSE, FALSE) THEN BEGIN
            REPEAT
              IF (NoSeriesLine.Open = TRUE) AND
                 (RequisitionFrom >= NoSeriesLine."Starting No.") AND
                 ((RequisitionFrom < NoSeriesLine."Ending No.") OR (NoSeriesLine."Ending No." = '')) THEN
                RequisitionNos := NoSeriesLine."Series Code";
            UNTIL NoSeriesLine.NEXT = 0;
          END;
        UNTIL NoSeriesRelationship.NEXT = 0;
      END;

      NewRequisition := NoSeriesMgt.GetNextNo(RequisitionNos,0D,FALSE);
      EXIT(NewRequisition);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

