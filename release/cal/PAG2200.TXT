OBJECT Page 2200 Sales Invoice Document API
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Invoice Document API;
               NOR=API for salgsfakturadokument;
               SVE=API f”r f”rs„ljningsfakturadokument];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table2200;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 SELECTLATESTVERSION;
               END;

    OnFindRecord=VAR
                   SalesHeader@1001 : Record 36;
                   SalesInvoiceHeader@1002 : Record 112;
                 BEGIN
                   IF NOT EVALUATE(InvoiceId,GETFILTER(InvoiceId)) THEN
                     EXIT(FALSE);

                   IF ISNULLGUID(InvoiceId) THEN
                     EXIT(FALSE);

                   SalesInvoiceHeader.SETRANGE(Id,InvoiceId);
                   IF SalesInvoiceHeader.FINDFIRST THEN BEGIN
                     GetDocumentFromPostedInvoice(SalesInvoiceHeader);
                     EXIT(TRUE);
                   END;

                   SalesHeader.SETRANGE(Id,InvoiceId);
                   SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Invoice);
                   IF SalesHeader.FINDFIRST THEN BEGIN
                     GetDocumentFromDraftInvoice(SalesHeader);
                     EXIT(TRUE);
                   END;

                   EXIT(FALSE);
                 END;

  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=InvoiceId }

    { 5   ;1   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Base64 }

    { 3   ;1   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Binary }

  }
  CODE
  {

    LOCAL PROCEDURE GetDocumentFromPostedInvoice@1(SalesInvoiceHeader@1000 : Record 112);
    VAR
      ReportSelections@1001 : Record 77;
      FileManagement@1005 : Codeunit 419;
      Convert@1004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Convert";
      FileObj@1009 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.File";
      OutStr@1003 : OutStream;
      DocumentPath@1002 : Text[250];
    BEGIN
      SalesInvoiceHeader.SETRECFILTER;
      ReportSelections.GetPdfReport(
        DocumentPath,ReportSelections.Usage::"S.Invoice",SalesInvoiceHeader,SalesInvoiceHeader."Sell-to Customer No.");

      Base64.CREATEOUTSTREAM(OutStr);
      FileManagement.IsAllowedPath(DocumentPath,FALSE);
      OutStr.WRITETEXT(Convert.ToBase64String(FileObj.ReadAllBytes(DocumentPath)));

      Binary.IMPORT(DocumentPath);

      IF FILE.ERASE(DocumentPath) THEN;
    END;

    LOCAL PROCEDURE GetDocumentFromDraftInvoice@2(SalesHeader@1000 : Record 36);
    VAR
      ReportSelections@1001 : Record 77;
      FileManagement@1006 : Codeunit 419;
      Convert@1004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Convert";
      FileObj@1003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.File";
      OutStr@1005 : OutStream;
      DocumentPath@1002 : Text[250];
    BEGIN
      SalesHeader.SETRECFILTER;
      ReportSelections.GetPdfReport(
        DocumentPath,ReportSelections.Usage::"S.Invoice Draft",SalesHeader,SalesHeader."Sell-to Customer No.");

      Base64.CREATEOUTSTREAM(OutStr);
      FileManagement.IsAllowedPath(DocumentPath,FALSE);
      OutStr.WRITETEXT(Convert.ToBase64String(FileObj.ReadAllBytes(DocumentPath)));

      Binary.IMPORT(DocumentPath);

      IF FILE.ERASE(DocumentPath) THEN;
    END;

    BEGIN
    END.
  }
}

