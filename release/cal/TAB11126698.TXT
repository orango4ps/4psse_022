OBJECT Table 11126698 FSA User
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    CaptionML=ENU=FSA User;
    LookupPageID=Page11129011;
    DrillDownPageID=Page11129011;
  }
  FIELDS
  {
    { 20  ;   ;Username            ;Code20        ;CaptionML=[ENU=Username;
                                                              NOR=Brukernavn;
                                                              SVE=Anv„ndarnamn] }
    { 30  ;   ;Password            ;Text250       ;OnValidate=VAR
                                                                EncryptionMgt@1100528000 : Codeunit 11012367;
                                                              BEGIN
                                                                IF (Password = '') THEN
                                                                  EXIT;
                                                                Password := EncryptionMgt.CalculateStringMD5(Password);
                                                              END;

                                                   ExtendedDatatype=Masked;
                                                   CaptionML=[ENU=Password;
                                                              NOR=Passord;
                                                              SVE=L”senord] }
    { 35  ;   ;Active              ;Boolean       ;OnValidate=VAR
                                                                LicenseManagement@1100528000 : Codeunit 11229289;
                                                                ResourceWOP@1100528001 : Record 11229278;
                                                                ValidationMode@1100528002 : ',WebService,UserInput,NoError';
                                                              BEGIN
                                                                IF Active THEN BEGIN
                                                                  LicenseManagement.ValidateUserCountFSA(TRUE, ValidationMode::UserInput);
                                                                  ResourceWOP.ActivateFsForFsaUser(Rec)
                                                                END ELSE
                                                                  ResourceWOP.DeActivateFsForResourceWOP("Resource No.");
                                                              END;

                                                   CaptionML=[ENU=Active;
                                                              NOR=Aktiv;
                                                              SVE=Aktiv] }
    { 40  ;   ;Resource No.        ;Code20        ;TableRelation="Resource (WOP)".No.;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Active, FALSE);
                                                              END;

                                                   CaptionML=[ENU=Resource No.;
                                                              NOR=Ressursnr.;
                                                              SVE=Resursnr] }
    { 50  ;   ;Resource Company    ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Resource (WOP)".Company WHERE (No.=FIELD(Resource No.)));
                                                   CaptionML=[ENU=Resource Company;
                                                              SVE=F”retag resurs];
                                                   Editable=No }
    { 60  ;   ;Resource Name       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Resource (WOP)".Name WHERE (No.=FIELD(Resource No.)));
                                                   CaptionML=[ENU=Resource Name;
                                                              NOR=Ressursnavn;
                                                              SVE=Resursnamn];
                                                   Editable=No }
    { 100 ;   ;Inventory Order Method;Option      ;CaptionML=ENU=Inventory Order Method;
                                                   OptionCaptionML=ENU=From Location,Purchase Order,Both;
                                                   OptionString=From Location,Purchase Order,Both }
    { 110 ;   ;Login Last Validated on;DateTime   ;CaptionML=ENU=Login Last Validated on;
                                                   Editable=No }
    { 120 ;   ;Common Data Last Sync. on;DateTime ;CaptionML=ENU=Common Data Last Synchonized on;
                                                   Editable=No }
    { 130 ;   ;Device ID           ;GUID          ;CaptionML=ENU=Device ID;
                                                   Editable=No }
    { 140 ;   ;Common Data Sync. Schedule;Code20  ;TableRelation="Common Data Sync. Schedule";
                                                   CaptionML=ENU=Common Data Sync. Schedule }
    { 150 ;   ;Coordinates Logging ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Log Co”rdinates }
    { 160 ;   ;Field Service App Version;Text30   ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Field Service App Version;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Username                                ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528100 : TextConst 'ENU=Login details for the Field Service App';
      MailTemplateManagement@1100528301 : Codeunit 11012622;
      MailTemplateNo@1100528300 : Integer;

    PROCEDURE GetPlanGroupSetupCompany@1100528000() : Text[30];
    VAR
      CompanyPlanGroup@1100528000 : Record 11229300;
    BEGIN
      CALCFIELDS("Resource Company");
      TESTFIELD("Resource No.");
      TESTFIELD("Resource Company");
      EXIT(CompanyPlanGroup.GetSetupCompanyOfPlanGroupOfCompany("Resource Company"));
    END;

    PROCEDURE SendEmail@1100528101();
    VAR
      Language@1100528302 : Record 8;
      MailTemplate@1100528300 : Record 11229450;
      MailTemplateManagement@1100528303 : Codeunit 11012622;
      SubjectText@1100528301 : Text;
      BodyText@1100528100 : Text;
      EmailAdressReceiver@1100528101 : Text[80];
      SMTPMail@1100528102 : Codeunit 400;
    BEGIN
      MailTemplateNo := 68;
      Language.SETRANGE("Windows Language ID", GLOBALLANGUAGE);
      Language.FINDFIRST;
      MailTemplateManagement.GetMailTemplate(MailTemplate, MailTemplateNo, '');
      MailTemplateManagement.GetLayoutTextSubstitutedSubjectAndTotalBody(MailTemplateNo, Language.Code, Rec, SubjectText, BodyText);
      IF (NOT MailTemplate."Use Mail Template Subject Text") THEN
        SubjectText := Text000;

      EmailAdressReceiver := GetEmailAdress;
      SMTPMail.CreateMessage(MailTemplate."From Name", MailTemplate.From, EmailAdressReceiver, SubjectText, BodyText, TRUE);
      SMTPMail.Send;
    END;

    LOCAL PROCEDURE GetEmailAdress@1100528103() : Text[80];
    VAR
      ResourceWOP@1100528101 : Record 11229278;
      Employee@1100528100 : Record 5200;
    BEGIN
      IF "Resource No." <> '' THEN BEGIN
        IF ResourceWOP.GET("Resource No.") THEN BEGIN
          IF ResourceWOP.Company <> COMPANYNAME THEN
            Employee.CHANGECOMPANY(ResourceWOP.Company);
          IF Employee.GET(ResourceWOP."Source No.") THEN BEGIN
            EXIT(Employee."Company E-Mail");
          END;
        END;
      END;
    END;

    PROCEDURE GetProxyUrlAndroid@1100528104() : Text;
    BEGIN
      EXIT(CreateProxyUrl('https://fsa.4ps.nl/login?username=%1&proxy=%2'));
    END;

    PROCEDURE GetProxyUrl@1100528105() : Text;
    BEGIN
      EXIT(CreateProxyUrl('fps.fsa://login?username=%1&proxy=%2'));
    END;

    LOCAL PROCEDURE CreateProxyUrl@1100528102(UrlPlaceholder@1100528102 : Text) : Text;
    VAR
      HttpUtility@1100528101 : DotNet "'System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Web.HttpUtility";
      FieldServiceAppSetup@1100528100 : Record 11126700;
      txt@1100528103 : Text;
    BEGIN
      FieldServiceAppSetup.GET('');
      FieldServiceAppSetup.TESTFIELD(FieldServiceAppSetup."Proxy URL");

      txt :=(STRSUBSTNO(UrlPlaceholder, Username, HttpUtility.UrlEncode(FieldServiceAppSetup."Proxy URL")));
      EXIT(txt);
    END;

    LOCAL PROCEDURE LineBreak@1100525000() : Text;
    VAR
      CRLF@1100525000 : Text[2];
    BEGIN
      CRLF[1] := 13;
      CRLF[2] := 10;
      EXIT(CRLF);
    END;

    PROCEDURE CheckIfResourceIsNotYetAssigned@1100528100();
    VAR
      ResourceWOP@1100528100 : Record 11229278;
    BEGIN
      IF "Resource No." = '' THEN
        EXIT;

      ResourceWOP.CheckIfFsaUserResourceIsNotYetAssigned(Rec);
    END;

    PROCEDURE ResetDeviceID@1100527000();
    BEGIN
      CLEAR("Device ID");
    END;

    BEGIN
    END.
  }
}

