OBJECT Page 11071926 Imported Discount History
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Eingelesene Rabatthistorie;
               ENU=Imported Discount History;
               NLD=Geãmporteerde kortingshistorie;
               NOR=Importert rabatthistorikk;
               SVE=Importerad rabatthistorik];
    SaveValues=Yes;
    LinksAllowed=No;
    SourceTable=Table11012335;
    DataCaptionExpr='';
    SourceTableView=WHERE(Source Type=CONST(Discount));
    PageType=ListPlus;
    ShowFilter=Yes;
    OnOpenPage=BEGIN
                 FindPeriodStartEnd('');

                 CreateVendorFilter;
                 CurrPage.DiscHist.PAGE.SetVendor(gvVendorFilter);
                 CurrPage.DiscHist.PAGE.SetReference('', '', gvRefDateFilter);
                 CurrPage.DiscHist.PAGE.EvaluateReferenceFilter;
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1102601018;1 ;Action    ;
                      Name=Previous Period;
                      CaptionML=[DEU=Vorperiode;
                                 ENU=Previous Period;
                                 NLD=Vorige Kolom;
                                 NOR=Forrige periode;
                                 SVE=FîregÜende period];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriodStartEnd('<=');
                               END;
                                }
      { 1102601017;1 ;Action    ;
                      Name=Next Period;
                      CaptionML=[DEU=Folgeperiode;
                                 ENU=Next Period;
                                 NLD=Volgende Kolom;
                                 NOR=Neste periode;
                                 SVE=NÑsta period];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriodStartEnd('>=');
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[DEU=Optionen;
                           ENU=Options;
                           NLD=Matrixopties;
                           NOR=Alternativer;
                           SVE=Alternativ];
                GroupType=Group }

    { 6   ;2   ;Field     ;
                CaptionML=[DEU=Periodentyp;
                           ENU=Period Type;
                           NLD=Periodesoort;
                           NOR=Periodetype;
                           SVE=Periodtyp];
                OptionCaptionML=[DEU=Tag,Woche,Monat,Quartal,Jahr,Buchhaltungsperiode;
                                 ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 NLD=Dag,Week,Maand,Kwartaal,Jaar,Boekingsperiode;
                                 NOR=Dag,Uke,MÜned,Kvartal,èr,bokfõringsperiode;
                                 SVE=Dag,Vecka,MÜnad,Kvartal,èr,Bokfîringsperiod];
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             FindPeriodStartEnd('');
                           END;
                            }

    { 9   ;2   ;Field     ;
                CaptionML=[DEU=Filterart;
                           ENU=Filter Type;
                           NLD=Weergeven als;
                           NOR=Filtertype;
                           SVE=Filtertyp];
                OptionCaptionML=[DEU=Periode,Kumulativ;
                                 ENU=Period,Cumulative;
                                 NLD=Periode,Cumulatief;
                                 NOR=Periode,Kumulativ;
                                 SVE=Period, Kumulativ];
                SourceExpr=FilterType;
                OnValidate=BEGIN
                             FindPeriodStartEnd('');
                           END;
                            }

    { 1100525008;2;Field  ;
                CaptionML=[DEU=Datumsfilter;
                           ENU=Date Filter;
                           NLD=Datumfilter;
                           NOR=Datofilter;
                           SVE=Datumfilter];
                SourceExpr=gvRefDateFilter;
                OnValidate=BEGIN
                             RefreshDiscHist;
                           END;
                            }

    { 1100525000;1;Part   ;
                Name=DiscHist;
                PagePartID=Page11012312;
                Editable=false;
                PartType=Page }

  }
  CODE
  {
    VAR
      PeriodType@1001 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      FilterType@1002 : 'Period,Cumulative';
      gvVendorFilter@1100525005 : Text[1000];
      gvRefDateFilter@1100525002 : Text[30];
      gvRefDateFrom@1100525001 : Date;
      gvRefDateTo@1100525000 : Date;

    LOCAL PROCEDURE FindPeriod@2(SearchText@1000 : Code[10]);
    VAR
      GLAccBudgetBuf@1100525000 : Record 374;
      Calendar@1002 : Record 2000000007;
      PeriodFormMgt@1003 : Codeunit 359;
    BEGIN
      IF gvRefDateFilter <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",gvRefDateFilter);
        IF NOT PeriodFormMgt.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormMgt.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;

      PeriodFormMgt.FindDate(SearchText,Calendar,PeriodType);
      IF FilterType = FilterType::Period THEN
        GLAccBudgetBuf.SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End")
      ELSE
        GLAccBudgetBuf.SETRANGE("Date Filter",0D, Calendar."Period End");

      IF GLAccBudgetBuf.GETRANGEMIN("Date Filter") = GLAccBudgetBuf.GETRANGEMAX("Date Filter") THEN
        GLAccBudgetBuf.SETRANGE("Date Filter",GLAccBudgetBuf.GETRANGEMIN("Date Filter"));
      gvRefDateFilter := GLAccBudgetBuf.GETFILTER("Date Filter");
    END;

    PROCEDURE CreateVendorFilter@1100525000();
    VAR
      lvDiscRec@1100525000 : Record 11012736;
    BEGIN
      IF lvDiscRec.FINDSET(FALSE, FALSE) THEN BEGIN
        REPEAT
          IF gvVendorFilter = '' THEN
            gvVendorFilter := lvDiscRec.Vendor
          ELSE
            gvVendorFilter := gvVendorFilter + '|' + lvDiscRec.Vendor;
          lvDiscRec.SETFILTER(Vendor, '>%1', lvDiscRec.Vendor);
        UNTIL lvDiscRec.NEXT = 0;
      END;
    END;

    PROCEDURE FindPeriodStartEnd@1210190003(IWhich@1210190000 : Text[10]);
    VAR
      lvPeriodFiltertxt@1210190002 : Text[30];
      lvCumFilterTxt@1210190001 : Text[30];
      SearchPeriodCU@1100525003 : Codeunit 11012016;
      ValidateCu@1100525002 : Codeunit 11012033;
    BEGIN
      IF gvRefDateTo = 0D THEN
        gvRefDateTo := ValidateCu.CheckRefDateLevel('');

      lvPeriodFiltertxt := STRSUBSTNO('%1..%2', gvRefDateFrom, gvRefDateTo);
      lvCumFilterTxt := STRSUBSTNO('..%1', gvRefDateTo);
      SearchPeriodCU.FindPeriod(gvRefDateFrom, gvRefDateTo, lvCumFilterTxt, lvPeriodFiltertxt, PeriodType, IWhich);

      IF FilterType = FilterType::Cumulative THEN
        gvRefDateFrom := 0D;

      FillRefDateFilter;
    END;

    PROCEDURE FillRefDateFilter@1100485004();
    BEGIN
      IF (gvRefDateFrom <> 0D) AND (gvRefDateTo <> 0D) THEN
        gvRefDateFilter := STRSUBSTNO('%1..%2', gvRefDateFrom, gvRefDateTo);
      IF (gvRefDateFrom <> 0D) AND (gvRefDateTo = 0D) THEN
        gvRefDateFilter := STRSUBSTNO('%1..', gvRefDateFrom);
      IF (gvRefDateFrom = 0D) AND (gvRefDateTo <> 0D) THEN
        gvRefDateFilter := STRSUBSTNO('..%1', gvRefDateTo);
      IF (gvRefDateFrom = 0D) AND (gvRefDateTo = 0D) THEN
        gvRefDateFilter := '';

      RefreshDiscHist;
    END;

    PROCEDURE RefreshDiscHist@1100525001();
    BEGIN
      CurrPage.DiscHist.PAGE.ApplyFilters('', '', '', '', gvRefDateFilter);
    END;

    BEGIN
    END.
  }
}

