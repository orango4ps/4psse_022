OBJECT Table 11126700 Field Service App Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Field Service App Setup;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              NOR=Prim‘rn›kkel;
                                                              SVE=Prim„rnyckel] }
    { 10  ;   ;Hour Line Template Code Travel;Code20;
                                                   TableRelation="Hour Line Template".Code WHERE (Type=CONST(Service));
                                                   OnValidate=VAR
                                                                HourLineTemplate@1100525001 : Record 11229799;
                                                                CheckType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                              BEGIN
                                                                IF NOT HourLineTemplate.ValidateCodeforSource(COMPANYNAME,FALSE,"Hour Line Template Code Travel",CheckType::Service,TRUE) THEN
                                                                  FIELDERROR("Hour Line Template Code Travel");
                                                              END;

                                                   OnLookup=VAR
                                                              HourLineTemplate@1100525002 : Record 11229799;
                                                              LookupCompany@1100525001 : Text[30];
                                                              LookupType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                            BEGIN
                                                              LookupCompany := COMPANYNAME;
                                                              LookupType := LookupType::Service;
                                                              IF HourLineTemplate.LookupCodeforSource(LookupCompany,FALSE,"Hour Line Template Code Travel", LookupType,TRUE) THEN
                                                                VALIDATE("Hour Line Template Code Travel");
                                                            END;

                                                   CaptionML=[ENU=Hour Line Template Travel (Service);
                                                              SVE=Tidrapportmall resa (Service)] }
    { 20  ;   ;Hour Line Template Code Work;Code20;TableRelation="Hour Line Template".Code WHERE (Type=CONST(Service));
                                                   OnValidate=VAR
                                                                HourLineTemplate@1100525001 : Record 11229799;
                                                                CheckType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                              BEGIN
                                                                IF NOT HourLineTemplate.ValidateCodeforSource(COMPANYNAME,FALSE,"Hour Line Template Code Work",CheckType::Service,TRUE) THEN
                                                                  FIELDERROR("Hour Line Template Code Work");
                                                              END;

                                                   OnLookup=VAR
                                                              HourLineTemplate@1100525002 : Record 11229799;
                                                              LookupCompany@1100525001 : Text[30];
                                                              LookupType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                            BEGIN
                                                              LookupCompany := COMPANYNAME;
                                                              LookupType := LookupType::Service;
                                                              IF HourLineTemplate.LookupCodeforSource(LookupCompany,FALSE,"Hour Line Template Code Work", LookupType,TRUE) THEN
                                                                VALIDATE("Hour Line Template Code Work");
                                                            END;

                                                   CaptionML=[ENU=Hour Line Template Work (Service);
                                                              SVE=Tidrapportmall arbete (Service)] }
    { 25  ;   ;Hour Line Template Code Break;Code20;
                                                   TableRelation="Hour Line Template".Code WHERE (Source=CONST(Hour Accounting),
                                                                                                  Type=CONST(Indirect));
                                                   OnValidate=VAR
                                                                HourLineTemplate@1100525001 : Record 11229799;
                                                                CheckType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                              BEGIN
                                                                IF NOT HourLineTemplate.ValidateCodeforSource(COMPANYNAME,FALSE,"Hour Line Template Code Break",CheckType::Indirect,TRUE) THEN
                                                                  FIELDERROR("Hour Line Template Code Break");
                                                              END;

                                                   OnLookup=VAR
                                                              HourLineTemplate@1100525002 : Record 11229799;
                                                              LookupCompany@1100525001 : Text[30];
                                                              LookupType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                            BEGIN
                                                              LookupCompany := COMPANYNAME;
                                                              LookupType := LookupType::Indirect;
                                                              IF HourLineTemplate.LookupCodeforSource(LookupCompany,FALSE,"Hour Line Template Code Break", LookupType,TRUE) THEN
                                                                VALIDATE("Hour Line Template Code Break");
                                                            END;

                                                   CaptionML=ENU=Hour Line Template Break }
    { 30  ;   ;Filter Set Cost Obj. Ext. Cost;Code20;
                                                   TableRelation="Export Filter Set (Mobile)";
                                                   CaptionML=ENU=Filter Set Cost Objects Extra Costs }
    { 40  ;   ;Proxy URL           ;Text80        ;OnValidate=BEGIN
                                                                UrlEndsWithSlash;
                                                                CheckUrlStartsWithHttps;
                                                              END;

                                                   CaptionML=ENU=Proxy URL }
    { 50  ;   ;Summary Document Type;Code10       ;TableRelation="Document Type".Type;
                                                   CaptionML=ENU=Summary Document Type }
    { 60  ;   ;Summary Doc Type Description;Text30;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Document Type".Description WHERE (Type=FIELD(Summary Document Type)));
                                                   CaptionML=ENU=Summary Document Type Description;
                                                   Editable=No }
    { 70  ;   ;Privacy Policy URL OLD;Text250     ;CaptionML=ENU=Privacy Policy URL }
    { 80  ;   ;Post Purchase Order Receives;Boolean;
                                                   CaptionML=ENU=Post Purchase Order Receives }
    { 90  ;   ;Max Photo Size in Mb OLD;Decimal   ;CaptionML=ENU=Maximum Photo Size in Mb;
                                                   MinValue=1;
                                                   MaxValue=100 }
    { 100 ;   ;Hour Line Templ. Travel Proj.;Code20;
                                                   TableRelation="Hour Line Template".Code WHERE (Type=CONST(Project));
                                                   OnValidate=VAR
                                                                HourLineTemplate@1100525001 : Record 11229799;
                                                                CheckType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                              BEGIN
                                                                IF NOT HourLineTemplate.ValidateCodeforSource(COMPANYNAME,FALSE,"Hour Line Templ. Travel Proj.",CheckType::Project,TRUE) THEN
                                                                  FIELDERROR("Hour Line Templ. Travel Proj.");
                                                              END;

                                                   OnLookup=VAR
                                                              HourLineTemplate@1100525002 : Record 11229799;
                                                              LookupCompany@1100525001 : Text[30];
                                                              LookupType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                            BEGIN
                                                              LookupCompany := COMPANYNAME;
                                                              LookupType := LookupType::Project;
                                                              IF HourLineTemplate.LookupCodeforSource(LookupCompany,FALSE,"Hour Line Templ. Travel Proj.", LookupType,TRUE) THEN
                                                                VALIDATE("Hour Line Templ. Travel Proj.");
                                                            END;

                                                   CaptionML=ENU=Hour Line Template Travel (Project) }
    { 110 ;   ;Hour Line Templ. Work Proj.;Code20 ;TableRelation="Hour Line Template".Code WHERE (Type=CONST(Project));
                                                   OnValidate=VAR
                                                                HourLineTemplate@1100525001 : Record 11229799;
                                                                CheckType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                              BEGIN
                                                                IF NOT HourLineTemplate.ValidateCodeforSource(COMPANYNAME,FALSE,"Hour Line Templ. Work Proj.",CheckType::Project,TRUE) THEN
                                                                  FIELDERROR("Hour Line Templ. Work Proj.");
                                                              END;

                                                   OnLookup=VAR
                                                              HourLineTemplate@1100525002 : Record 11229799;
                                                              LookupCompany@1100525001 : Text[30];
                                                              LookupType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                            BEGIN
                                                              LookupCompany := COMPANYNAME;
                                                              LookupType := LookupType::Project;
                                                              IF HourLineTemplate.LookupCodeforSource(LookupCompany,FALSE,"Hour Line Templ. Work Proj.", LookupType,TRUE) THEN
                                                                VALIDATE("Hour Line Templ. Work Proj.");
                                                            END;

                                                   CaptionML=ENU=Hour Line Template Work (Project) }
    { 130 ;   ;Polling Interval (Sec);Integer     ;InitValue=300;
                                                   CaptionML=ENU=Polling Interval (Sec);
                                                   MinValue=0;
                                                   MaxValue=86400 }
    { 140 ;   ;Standard Object Editable;Boolean   ;CaptionML=ENU=Standard Object Editable }
    { 150 ;   ;Document Type Pictures;Code10      ;TableRelation="Document Type".Type;
                                                   CaptionML=ENU=Document Type Pictures }
    { 160 ;   ;Document Type Other Documents;Code10;
                                                   TableRelation="Document Type".Type;
                                                   CaptionML=ENU=Document Type Other Documents }
    { 200 ;   ;Wasco Customer Code OLD;Text30     ;CaptionML=ENU=Wasco Customer Code }
    { 210 ;   ;Wasco Login Code OLD;Text30        ;CaptionML=ENU=Wasco Login Code }
    { 220 ;   ;Wasco Password OLD  ;Text30        ;CaptionML=ENU=Wasco Password }
    { 230 ;   ;Wasco Vendor Trade Item OLD;Text30 ;TableRelation="ETIM Vendor - Central Mgt".Code;
                                                   CaptionML=ENU=Wasco Vendor Trade Item }
    { 240 ;   ;Wasco Customer Services OLD;Text100;CaptionML=ENU=Wasco Customer Services }
    { 300 ;   ;TU Customer Number OLD;Text30      ;CaptionML=ENU=TU Customer Number }
    { 310 ;   ;TU User Name OLD    ;Text30        ;CaptionML=ENU=TU User Name }
    { 320 ;   ;TU Password OLD     ;Text30        ;CaptionML=ENU=TU Password }
    { 330 ;   ;TU Vendor Trade Item OLD;Text30    ;TableRelation="ETIM Vendor - Central Mgt".Code;
                                                   CaptionML=ENU=TU Vendor Trade Item }
    { 340 ;   ;My TU Web Service Url OLD;Text150  ;CaptionML=ENU=My TU Web Service Url }
    { 350 ;   ;My TU Web Site Url OLD;Text150     ;CaptionML=ENU=My TU Web Site Url }
    { 360 ;   ;Check Device ID     ;Boolean       ;CaptionML=ENU=Check Device ID }
    { 370 ;   ;Retention Days of Archive;Integer  ;CaptionML=ENU=Retention Days of Archive }
    { 380 ;   ;Manual Common Data Sync. Type;Option;
                                                   CaptionML=ENU=Manual Common Data Sync. Type;
                                                   OptionCaptionML=ENU=All,Changes;
                                                   OptionString=All,Changes }
    { 390 ;   ;Add Existing Object ;Boolean       ;CaptionML=ENU=Add Existing Object }
    { 400 ;   ;Use Travel Home     ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Use Travel Home }
    { 410 ;   ;Documents Destination;Option       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Documents Destination;
                                                   OptionCaptionML=ENU=Source of Work Order,Work Order;
                                                   OptionString=SourceOfWorkOrder,WorkOrder }
    { 420 ;   ;Times in Timesheet  ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT "Times in Timesheet" THEN
                                                                  "Times in Timesheet Mandatory" := FALSE;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Times in Timesheet }
    { 430 ;   ;Times in Timesheet Mandatory;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Times in Timesheet Mandatory }
    { 440 ;   ;Use Breaks          ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Use Breaks }
    { 450 ;   ;Purchase Order Nos. ;Code20        ;TableRelation="No. Series";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Purchase Order Nos.;
                                                              SVE=Ink”psordernr] }
    { 460 ;   ;Absence Horizon (Days);Integer     ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Absence Horizon (Days);
                                                   MinValue=0 }
    { 470 ;   ;Contact Information Editable;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Contact Information Editable }
    { 480 ;   ;No Export to FSA if WO related;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=No Export to FSA if WO related;
                                                   Description=See tooltip on Page }
    { 490 ;   ;Times in Cost Plus Entry;Boolean   ;OnValidate=BEGIN
                                                                IF NOT "Times in Timesheet" THEN
                                                                  "Times in Timesheet Mandatory" := FALSE;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Times in Cost Plus Entry }
    { 500 ;   ;Consignment Horizon (Days);Integer ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Consignment Roster Horizon (Days);
                                                   MinValue=0 }
    { 510 ;   ;Use Quantity Advised;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Use Quantity Advised }
    { 520 ;   ;Create New Object   ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Create New Object }
    { 540 ;   ;Use Generic User Mgt (OLD);Boolean ;DataClassification=ToBeClassified;
                                                   Description=Isn't needed because FSA will always use GAP from the 022 release }
    { 550 ;   ;Allow Creation of Related WO;Boolean;
                                                   CaptionML=ENU=Allow Creation of Related Work Orders }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100528000 : TextConst 'ENU=In production environments %1  must start with ''https://''.';
      Text002@1100528700 : TextConst 'ENU=Are you sure that you want to convert the Field Service App users to Generic user management?';

    LOCAL PROCEDURE UrlEndsWithSlash@1100528000();
    BEGIN
      IF STRLEN("Proxy URL") > 1 THEN
        IF COPYSTR("Proxy URL", STRLEN("Proxy URL"), 1) <> '/' THEN
          "Proxy URL" := "Proxy URL" + '/'
    END;

    LOCAL PROCEDURE CheckUrlStartsWithHttps@1100528001();
    BEGIN
      IF STRLEN("Proxy URL") > 8 THEN
        IF COPYSTR("Proxy URL", 1, 8) <> 'https://' THEN
          MESSAGE(STRSUBSTNO(Text001, FIELDCAPTION("Proxy URL")));
    END;

    PROCEDURE MigrateUserData@1100528002();
    VAR
      FSAUser@1100528000 : Record 11126698;
      GAPAppUser@1100528001 : Record 11124975;
      ResourceWOP@1100528002 : Record 11229278;
      Employee@1100528003 : Record 5200;
      FSAUserSetupGAP@1100528700 : Record 11229875;
      AppUserSetupGAP@1100528701 : Record 11124976;
      AppSetupGroupGAP@1100529300 : Record 11124992;
      GAPInitializer@1100529301 : Codeunit 11128546;
      ProductsGAP@1100529302 : Record 11124990;
      UserByAppSetupGroupGAP@1100528702 : Record 11124980;
    BEGIN
      FSAUser.SETFILTER("Resource No.", '<>%1', '');
      FSAUser.SETRANGE("Resource Company", COMPANYNAME);
      IF FSAUser.FINDSET THEN BEGIN
        REPEAT
          IF ResourceWOP.GET(FSAUser."Resource No.") THEN BEGIN
            GAPAppUser.Username := FSAUser.Username;
            GAPAppUser.Name := ResourceWOP.Name;
            IF Employee.GET(ResourceWOP."Source No.") THEN
              GAPAppUser.Email := Employee."E-Mail";

            IF NOT GAPAppUser.INSERT(TRUE) THEN
              GAPAppUser.MODIFY(TRUE);

            //do not validate because it is already hashed with md5
            GAPAppUser.Password := FSAUser.Password;
            GAPAppUser.MODIFY(FALSE);

            IF NOT AppUserSetupGAP.GET(GAPAppUser.Username) THEN BEGIN
              AppUserSetupGAP.Username := FSAUser.Username;
              AppUserSetupGAP.INSERT;
            END;

            AppUserSetupGAP.VALIDATE("Resource No.", FSAUser."Resource No.");
            AppUserSetupGAP.MODIFY;

            GAPInitializer.InitializeFSA;
            AppSetupGroupGAP.SETRANGE(AppSetupGroupGAP."Product Code", ProductsGAP.GetProductCodeFSA);
            IF AppSetupGroupGAP.FINDFIRST THEN BEGIN
              IF NOT UserByAppSetupGroupGAP.GET(GAPAppUser.Username, ProductsGAP.GetProductCodeFSA) THEN BEGIN
                UserByAppSetupGroupGAP.Username := GAPAppUser.Username;
                UserByAppSetupGroupGAP."Product Code" := ProductsGAP.GetProductCodeFSA;
                UserByAppSetupGroupGAP."Group Name" := AppSetupGroupGAP.Name;
                UserByAppSetupGroupGAP.INSERT;
              END;

              FSAUserSetupGAP.SETRANGE(Username, GAPAppUser.Username);
              IF NOT FSAUserSetupGAP.FINDFIRST THEN BEGIN
                FSAUserSetupGAP.INIT;
                FSAUserSetupGAP."Product Code" := ProductsGAP.GetProductCodeFSA;
                FSAUserSetupGAP."Group Name" := AppSetupGroupGAP.Name;
                FSAUserSetupGAP.Username := GAPAppUser.Username;
                FSAUserSetupGAP.INSERT(TRUE);
              END;

              IF FSAUser.Active THEN
                FSAUserSetupGAP.Active := FSAUserSetupGAP.Active::Yes
              ELSE
                FSAUserSetupGAP.Active := FSAUserSetupGAP.Active::No;
              FSAUserSetupGAP.MODIFY(TRUE);

              FSAUserSetupGAP."Common Data Sync. Schedule" := FSAUser."Common Data Sync. Schedule";
              FSAUserSetupGAP."Inventory Order Method" := FSAUser."Inventory Order Method";
              FSAUserSetupGAP."Device ID" := FSAUser."Device ID";
              FSAUserSetupGAP."Coordinates Logging" := FSAUser."Coordinates Logging";

              FSAUserSetupGAP.MODIFY;
              FSAUser.DELETE;
            END;
          END;
        UNTIL FSAUser.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

