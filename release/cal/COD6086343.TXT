OBJECT Codeunit 6086343 Mileage-Send to Expense User
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.3.00;
  }
  PROPERTIES
  {
    TableNo=6086338;
    Permissions=TableData 6086338=rm;
    OnRun=BEGIN
            TESTFIELD(Status,Status::Open);
            "Transfer Attachments to CO" := TRUE;
            Code(Rec,TRUE,FALSE);
          END;

  }
  CODE
  {
    VAR
      EMOnlineMgt@1160040000 : Codeunit 6086305;
      BatchMode@1160040003 : Boolean;
      SendingToExpUserStatus@1160040001 : TextConst 'DEU=%1 Wird an den Benutzer der Kostenposition gesendet ...;ENU=Sending %1 to the Expense User...;NLD=%1 versturen naar gebruiker...';
      SendWrongStatusErr@1160040002 : TextConst 'DEU=Sie k”nnen %1 mit Status ''%2'' nicht an den Benutzer der Kostenposition senden.;ENU=You cannot send %1 with status ''%2'' to expense user.;NLD=U kunt geen %1 met status ''%2'' aan de gebruiker versturen.';

    LOCAL PROCEDURE Code@1160040020(VAR Mileage@1160040000 : Record 6086338;Force@1160040004 : Boolean;UpdateReference@1160040002 : Boolean);
    VAR
      Window@1160040003 : Dialog;
      EmptyGuid@1160040001 : GUID;
    BEGIN
      IF (NOT Force) AND (Mileage.Status <> Mileage.Status::"Pending Expense User") THEN
        EXIT;

      IF Mileage.Status = Mileage.Status::"Pending Approval" THEN
        ERROR(SendWrongStatusErr,Mileage.TABLECAPTION,FORMAT(Mileage.Status));

      Mileage.CheckInboxAndThrowError;

      IF GUIALLOWED AND NOT BatchMode THEN
        Window.OPEN(STRSUBSTNO(SendingToExpUserStatus,Mileage.TABLECAPTION));

      Mileage.SetSkipSendToExpUser(TRUE);

      IF Mileage."Mileage GUID" = EmptyGuid THEN BEGIN
        IF Mileage."Registration Date" = 0D THEN
          Mileage."Registration Date" := TODAY;
        Mileage."Mileage GUID" := EMOnlineMgt.CreateNewMileage;
      END;

      Mileage."Continia Online Version No." := EMOnlineMgt.UpdateMileage(Mileage);

      //SHADOW NEEDS TO KEEP THE VERSION NO
      IF Mileage.Status = Mileage.Status::Released THEN
        Mileage.MODIFY
      ELSE BEGIN
        Mileage."Transfer Attachments to CO" := FALSE;

        IF Mileage."Mileage Completed" THEN
          Mileage."Mileage Completed" := FALSE;

        Mileage.VALIDATE(Status,Mileage.Status::"Pending Expense User");
        IF NOT UpdateReference THEN
          Mileage.MODIFY(TRUE);
      END;

      Mileage.SetSkipSendToExpUser(FALSE);
      IF GUIALLOWED AND NOT BatchMode THEN
        Window.CLOSE;
    END;

    PROCEDURE UpdateWithoutFiles@1160040003(VAR Mileage@1160040000 : Record 6086338);
    BEGIN
      Mileage."Transfer Attachments to CO" := FALSE;
      Code(Mileage,FALSE,FALSE);
    END;

    PROCEDURE SendReleaseNotification@1160040000(VAR Mileage@1160040000 : Record 6086338);
    BEGIN
      Mileage."Transfer Attachments to CO" := TRUE;
      Code(Mileage,TRUE,FALSE);
    END;

    PROCEDURE UpdateRefWithoutFiles@1160040004(VAR Mileage@1160040000 : Record 6086338);
    BEGIN
      Mileage."Transfer Attachments to CO" := FALSE;
      Code(Mileage,TRUE,TRUE);
    END;

    PROCEDURE SetBatchMode@1160040001(NewbatchMode@1160040000 : Boolean);
    BEGIN
      BatchMode := NewbatchMode;
    END;

    BEGIN
    END.
  }
}

