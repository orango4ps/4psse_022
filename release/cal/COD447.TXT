OBJECT Codeunit 447 Record Link Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    OnRun=VAR
            ConfirmManagement@1000 : Codeunit 27;
          BEGIN
            IF ConfirmManagement.ConfirmProcess(Text001,TRUE) THEN BEGIN
              RemoveOrphanedLink;
              MESSAGE(Text004,NoOfRemoved);
            END;
          END;

  }
  CODE
  {
    VAR
      Text001@1000 : TextConst 'ENU=Do you want to remove links with no record reference?;NOR=Vil du fjerne koblinger uten postreferanse?;SVE=Vill du ta bort alla l„nkar som saknar postreferenser?';
      Text002@1001 : TextConst 'ENU=Removing Record Links without record reference.\;NOR=Fjerner postkoblinger uten postreferanse.\;SVE=Tar bort postl„nkar utan postreferenser.\';
      Text003@1002 : TextConst 'ENU=@1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;NOR=@1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;SVE=@1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Text004@1003 : TextConst 'ENU=%1 orphaned links were removed.;NOR=%1 l›se koblinger ble fjernet.;SVE=%1 tomma l„nkar togs bort.';
      NoOfRemoved@1004 : Integer;

    LOCAL PROCEDURE RemoveOrphanedLink@5();
    VAR
      RecordLink@1000 : Record 2000000068;
      RecordRef@1001 : RecordRef;
      PrevRecID@1006 : RecordID;
      Window@1002 : Dialog;
      i@1003 : Integer;
      Total@1004 : Integer;
      TimeLocked@1005 : Time;
      InTransaction@1011 : Boolean;
      RecordExists@1010 : Boolean;
    BEGIN
      Window.OPEN(Text002 + Text003);
      TimeLocked := TIME;
      WITH RecordLink DO BEGIN
        SETFILTER(Company,'%1|%2','',COMPANYNAME);
        SETCURRENTKEY("Record ID");
        Total := COUNT;
        IF Total = 0 THEN
          EXIT;
        IF FIND('-') THEN
          REPEAT
            i := i + 1;
            IF (i MOD 1000) = 0 THEN
              Window.UPDATE(1,ROUND(i / Total * 10000,1));
            IF FORMAT("Record ID") <> FORMAT(PrevRecID) THEN BEGIN  // Direct comparison doesn't work.
              PrevRecID := "Record ID";
              RecordExists := RecordRef.GET("Record ID");
            END;
            IF NOT RecordExists THEN BEGIN
              DELETE;
              NoOfRemoved := NoOfRemoved + 1;
              IF NOT InTransaction THEN
                TimeLocked := TIME;
              InTransaction := TRUE;
            END;
            IF InTransaction AND (TIME > (TimeLocked + 1000)) THEN BEGIN
              COMMIT;
              TimeLocked := TIME;
              InTransaction := FALSE;
            END;
          UNTIL NEXT = 0;
      END;
      Window.CLOSE;
    END;

    LOCAL PROCEDURE ResetNotifyOnLinks@11(RecVar@1000 : Variant);
    VAR
      RecordLink@1002 : Record 2000000068;
      RecRef@1001 : RecordRef;
    BEGIN
      RecRef.GETTABLE(RecVar);
      RecordLink.SETRANGE("Record ID",RecRef.RECORDID);
      RecordLink.SETRANGE(Notify,TRUE);
      IF NOT RecordLink.ISEMPTY THEN
        RecordLink.MODIFYALL(Notify,FALSE);
    END;

    [External]
    PROCEDURE CopyLinks@20(FromRecord@1000 : Variant;ToRecord@1001 : Variant);
    VAR
      RecRefTo@1002 : RecordRef;
    BEGIN
      RecRefTo.GETTABLE(ToRecord);
      RecRefTo.COPYLINKS(FromRecord);
      ResetNotifyOnLinks(RecRefTo);
      OnAfterCopyLinks(FromRecord,ToRecord);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCopyLinks@1(FromRecord@1001 : Variant;ToRecord@1000 : Variant);
    BEGIN
    END;

    PROCEDURE CreateNote@1100409000(RecRef@1100409000 : RecordRef;PageId@1100409008 : Text;TextString@1100409003 : Text;ToUserId@1100409011 : Text);
    VAR
      RecordLink@1100409001 : Record 2000000068;
      ServerInstance@1100409002 : Record 2000000112;
      Object@1100409013 : Record 2000000001;
      StringFunctions@1100409014 : Codeunit 11012273;
      StringArr@1100409015 : ARRAY [10] OF Text[250];
      TextLengthChar@1100409004 : Char;
      BigText@1100409005 : BigText;
      OStream@1100409006 : OutStream;
      LastId@1100409009 : Integer;
      Counter@1100409016 : Integer;
      ReturnChar@1100409012 : Char;
      HttpUtility@1100409010 : DotNet "'System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Web.HttpUtility";
    BEGIN
      //**4PS.n
      ReturnChar := 10;
      ServerInstance.GET(SERVICEINSTANCEID);
      TextString := CONVERTSTR(TextString, '\', FORMAT(ReturnChar));
      TextLengthChar := STRLEN(TextString);

      StringFunctions.SplitString(PageId, ' ', StringArr);
      FOR Counter := 1 TO ARRAYLEN(StringArr) DO BEGIN
        IF (StringArr[Counter] <> '') THEN
          PageId := StringArr[Counter];
      END;
      Object.GET(Object.Type::Page, '', PageId);
      Object.CALCFIELDS(Caption);

      IF (RecordLink.FINDLAST) THEN
        LastId := RecordLink."Link ID";
      RecordLink.INIT;
      RecordLink."Link ID" := LastId + 1;
      RecordLink.INSERT;

      RecordLink."Record ID" := RecRef.RECORDID;
      RecordLink.URL1 := STRSUBSTNO('dynamicsnav://%1:%2/%3/%4/runpage?page=%5&personalization=%5&bookmark=%6&mode=View',
        ServerInstance."Service Name",
        ServerInstance."Server Port",
        ServerInstance."Server Instance Name",
        COMPANYNAME,
        PageId,
        HttpUtility.UrlEncode(FORMAT(RecRef.RECORDID,0,10))
      );
      RecordLink.Description := Object.Caption;
      RecordLink.Note.CREATEOUTSTREAM(OStream);
      BigText.ADDTEXT(STRSUBSTNO('%1%2', TextLengthChar, TextString));
      BigText.WRITE(OStream);
      RecordLink.Type := RecordLink.Type::Note;
      RecordLink.Created := CURRENTDATETIME;
      RecordLink."User ID" := USERID;
      RecordLink.Company := COMPANYNAME;
      RecordLink.Notify := TRUE;
      RecordLink."To User ID" := ToUserId;

      RecordLink.MODIFY;
    END;

    BEGIN
    END.
  }
}

