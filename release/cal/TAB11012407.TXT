OBJECT Table 11012407 Document Relation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               DocumentRelation@1210190001 : Record 11012407;
               DocumentProperties@1210190000 : Record 11012746;
             BEGIN
               //mg.sn, 26-04-11: M26957
               IF Photo THEN BEGIN
                 DocumentRelation.SETRANGE("Related Document No.", "Related Document No.");
                 IF DocumentRelation.COUNT = 1 THEN BEGIN
                   DELETE;
                   IF CONFIRM(Text000, FALSE, "Related Document No.") THEN BEGIN
                     IF DocumentProperties.GET("Related Document No.") THEN
                       DocumentProperties.DELETE(TRUE);
                   END;
                   INSERT;
                 END;
               END;
               //mg.en, 26-04-11: M26957
             END;

    CaptionML=[ENU=Document Relation;
               NOR=Dokumentrelasjon;
               SVE=Dokumentrelation];
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              NOR=Bilagstype;
                                                              SVE=Dokumenttyp];
                                                   OptionCaptionML=ENU=Document,Purchase Quote,Purchase Order,Try-out Quote,Blanket Order,,Plant Transport Order,Plant Exit Order,Service Order,Sales Invoice,Sales Cr.Memo,Posted Sales Invoice,Posted Sales Cr.Memo,Sales Quote,Sales Order,Service Contract,Plant Order,Plant Transport Ride,Option Quote,Work Order;
                                                   OptionString=Document,Purchase Quote,Purchase Order,Try-out Quote,Blanket Order,,Plant Transport Order,Plant Exit Order,Service Order,Sales Invoice,Sales Cr.Memo,Posted Sales Invoice,Posted Sales Cr.Memo,Sales Quote,Sales Order,Service Contract,Plant Order,Plant Transport Ride,Option Quote,Work Order;
                                                   Description=[Attention; when another option will be added behind Blanket Order, then first an empty so ...,Blanket Order,,<New Option> because there is a reference to Type from Tender Paragraph (see form 11012413)] }
    { 10  ;   ;No.                 ;Code20        ;TableRelation=IF (Document Type=CONST(Document)) "Document Properties".No.
                                                                 ELSE IF (Document Type=CONST(Purchase Quote)) "Purchase Header".No. WHERE (Document Type=CONST(Quote))
                                                                 ELSE IF (Document Type=CONST(Purchase Order)) "Purchase Header".No. WHERE (Document Type=CONST(Order))
                                                                 ELSE IF (Document Type=CONST(Try-out Quote)) "Try-out Quote".Code
                                                                 ELSE IF (Document Type=CONST(Try-out Quote)) "Try-out Quote".Code
                                                                 ELSE IF (Document Type=CONST(Try-out Quote)) "Try-out Quote".Code
                                                                 ELSE IF (Document Type=CONST(Try-out Quote)) "Try-out Quote".Code
                                                                 ELSE IF (Document Type=CONST(Service Order)) "Service Order".No.;
                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr;
                                                              SVE=Nr];
                                                   NotBlank=Yes }
    { 20  ;   ;Related Document No.;Code20        ;TableRelation="Document Properties".No.;
                                                   OnValidate=VAR
                                                                ConvertImage@1199197400 : Codeunit 11012430;
                                                              BEGIN
                                                                IF DocPropRec.GET("Related Document No.") THEN BEGIN
                                                                  "Document No." := DocPropRec."Document No.";
                                                                  Photo := ConvertImage.FileIsJPG(DocPropRec.GetStorageURI);
                                                                  IF NOT DocPropRec.FileCanBeConvertedToPDF THEN
                                                                    Print := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Related Document No.;
                                                              NOR=Relatert Dokumentnr;
                                                              SVE=Relaterat dokumentnr];
                                                   NotBlank=Yes }
    { 21  ;   ;Seq. No.            ;Integer       ;CaptionML=[ENU=Seq. No.;
                                                              NOR=Sekv. nr;
                                                              SVE=Sekv. nr] }
    { 30  ;   ;Document Description;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Document Properties".Description WHERE (No.=FIELD(Related Document No.)));
                                                   CaptionML=[ENU=Document Description;
                                                              NOR=Dokumentbeskrivelse;
                                                              SVE=Dokumentbeskrivning];
                                                   Editable=No }
    { 40  ;   ;Document No.        ;Code20        ;FieldClass=Normal;
                                                   CaptionML=[ENU=Document No.;
                                                              NOR=Dokumentnr.;
                                                              SVE=Dokumentnr];
                                                   Editable=No }
    { 50  ;   ;Creation date       ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Document Properties"."Creation Date" WHERE (No.=FIELD(Related Document No.)));
                                                   CaptionML=[ENU=Creation Date;
                                                              NOR=Opprettet den;
                                                              SVE=Uppl„ggningsdatum];
                                                   Editable=No }
    { 60  ;   ;Description         ;Text30        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 70  ;   ;Description 2       ;Text30        ;CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2] }
    { 81  ;   ;Modification Date   ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Max("Document Modification Date".Date WHERE (Document No.=FIELD(Related Document No.)));
                                                   CaptionML=[ENU=Modification Date;
                                                              NOR=Endringsdato;
                                                              SVE=Žndringsdatum];
                                                   Editable=No }
    { 90  ;   ;Quantity            ;Integer       ;CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal] }
    { 100 ;   ;Document Date       ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Document Properties"."Document Date" WHERE (No.=FIELD(Related Document No.)));
                                                   CaptionML=[ENU=Document Date;
                                                              NOR=Dokumentdato;
                                                              SVE=Dokumentdatum];
                                                   Editable=No }
    { 110 ;   ;Print Photo         ;Boolean       ;CaptionML=ENU=Print Photo }
    { 120 ;   ;Photo               ;Boolean       ;CaptionML=[ENU=Photo;
                                                              NOR=Foto;
                                                              SVE=Foto] }
    { 130 ;   ;Send by E-Mail      ;Boolean       ;CaptionML=[ENU=Send by E-Mail;
                                                              NOR=Send med e-mail;
                                                              SVE=S„nd via Email] }
    { 140 ;   ;Print               ;Boolean       ;OnValidate=VAR
                                                                DocumentProperties@1100528400 : Record 11012746;
                                                              BEGIN
                                                                IF DocumentProperties.GET("Related Document No.") THEN
                                                                  IF NOT DocumentProperties.FileCanBeConvertedToPDF THEN
                                                                    ERROR(Text001, "Related Document No.");
                                                              END;

                                                   CaptionML=[ENU=Print;
                                                              NOR=Skriv ut;
                                                              SVE=Skriv ut] }
  }
  KEYS
  {
    {    ;Document Type,No.,Related Document No.  ;Clustered=Yes }
    {    ;Document No.                             }
    {    ;Document Type,No.,Seq. No.               }
    {    ;Seq. No.                                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DocPropRec@1210190001 : Record 11012746;
      Text000@1210190000 : TextConst 'ENU=Document %1 has no more relations to other documents, delete the document also?;NOR=Dokument %1 har ingen flere relasjoner til andre dokumenter, skal  dette dokumentet ogs† fjernes?;SVE=Dokument %1 har inga fler relationer till andra dokument, ska „ven detta dokument tas bort?';
      Text001@1100528400 : TextConst 'ENU=Not allowed because the file of document %1 cannot be converted to a PDF file.';

    PROCEDURE AddAllLinkedDocumentProperties@1100528400(DocumentType@1100528400 : Integer;No@1100528401 : Code[20]);
    VAR
      SalesHeader@1100529606 : Record 36;
      PurchaseHeader@1100529603 : Record 38;
      SalesInvoiceHeader@1100529607 : Record 112;
      SalesCrMemoHeader@1100529608 : Record 114;
      TryoutQuote@1100529605 : Record 11012758;
      ServiceOrder@1100529609 : Record 11012823;
      PlantTransportOrder@1100529610 : Record 11020505;
      ExitOrder@1100529611 : Record 11012559;
      ExitOrderLine@1100529616 : Record 11012560;
      ServiceContract@1100529614 : Record 11012812;
      PlantOrder@1100529612 : Record 11012556;
      PlantOrderLine@1100529613 : Record 11012557;
      PlantTransportRide@1100529615 : Record 11020517;
      OptionQuoteHeader@1100529617 : Record 11012513;
      WorkOrder@1100529619 : Record 11229279;
      DocumentProperties@1100529600 : Record 11012746;
      DocumentLinkManagement@1100529604 : Codeunit 11012401;
      RecRef@1100529602 : RecordRef;
    BEGIN
      CASE DocumentType OF
        "Document Type"::"Blanket Order":
          BEGIN
            IF NOT PurchaseHeader.GET(PurchaseHeader."Document Type"::"Blanket Order", No) THEN
              EXIT;
            RecRef.GETTABLE(PurchaseHeader);
          END;
        "Document Type"::"Purchase Quote":
          BEGIN
            IF NOT PurchaseHeader.GET(PurchaseHeader."Document Type"::Quote, No) THEN
              EXIT;
            RecRef.GETTABLE(PurchaseHeader);
          END;
        "Document Type"::"Purchase Order":
          BEGIN
            IF NOT PurchaseHeader.GET(PurchaseHeader."Document Type"::Order, No) THEN
              EXIT;
            RecRef.GETTABLE(PurchaseHeader);
          END;
        "Document Type"::"Sales Quote":
          BEGIN
            IF NOT SalesHeader.GET(SalesHeader."Document Type"::Quote, No) THEN
              EXIT;
            RecRef.GETTABLE(SalesHeader);
          END;
        "Document Type"::"Sales Order":
          BEGIN
            IF NOT SalesHeader.GET(SalesHeader."Document Type"::Order, No) THEN
              EXIT;
            RecRef.GETTABLE(SalesHeader);
          END;
        "Document Type"::"Sales Invoice":
          BEGIN
            IF NOT SalesHeader.GET(SalesHeader."Document Type"::Invoice, No) THEN
              EXIT;
            RecRef.GETTABLE(SalesHeader);
          END;
        "Document Type"::"Sales Cr.Memo":
          BEGIN
            IF NOT SalesHeader.GET(SalesHeader."Document Type"::"Credit Memo", No) THEN
              EXIT;
            RecRef.GETTABLE(SalesHeader);
          END;
        "Document Type"::"Posted Sales Invoice":
          BEGIN
            IF NOT SalesInvoiceHeader.GET(No) THEN
              EXIT;
            RecRef.GETTABLE(SalesInvoiceHeader);
          END;
        "Document Type"::"Posted Sales Cr.Memo":
          BEGIN
            IF NOT SalesCrMemoHeader.GET(No) THEN
              EXIT;
            RecRef.GETTABLE(SalesCrMemoHeader);
          END;
        "Document Type"::"Try-out Quote":
          BEGIN
            IF NOT TryoutQuote.GET(No) THEN
              EXIT;
            RecRef.GETTABLE(TryoutQuote);
          END;
        "Document Type"::"Service Order":
          BEGIN
            IF NOT ServiceOrder.GET(No) THEN
              EXIT;
            RecRef.GETTABLE(ServiceOrder);
          END;
        "Document Type"::"Plant Transport Order":
          BEGIN
            IF NOT PlantTransportOrder.GET(No) THEN
              EXIT;
            RecRef.GETTABLE(PlantTransportOrder);
          END;
        "Document Type"::"Plant Exit Order":
          BEGIN
            IF NOT ExitOrder.GET(No) THEN
              EXIT;
            RecRef.GETTABLE(ExitOrder);
          END;
        "Document Type"::"Service Contract":
          BEGIN
            IF NOT ServiceContract.GET(No) THEN
              EXIT;
            RecRef.GETTABLE(ServiceContract);
          END;
        "Document Type"::"Plant Order":
          BEGIN
            IF NOT PlantOrder.GET(No) THEN
              EXIT;
            RecRef.GETTABLE(PlantOrder);
          END;
        "Document Type"::"Plant Transport Ride":
          BEGIN
            IF NOT PlantTransportRide.GET(No) THEN
              EXIT;
            RecRef.GETTABLE(PlantTransportRide);
          END;
        "Document Type"::"Option Quote":
          BEGIN
            IF NOT OptionQuoteHeader.GET(No) THEN
              EXIT;
            RecRef.GETTABLE(OptionQuoteHeader);
          END;
        "Document Type"::"Work Order":
          BEGIN
            IF NOT WorkOrder.GET(No) THEN
              EXIT;
            RecRef.GETTABLE(WorkOrder);
          END;
        ELSE
          EXIT;
      END;

      DocumentLinkManagement.GetDocuments(DocumentProperties, RecRef);

      CASE DocumentType OF
        "Document Type"::"Plant Exit Order":
          BEGIN
            ExitOrderLine.SETRANGE("Exit-order No.", No);
            IF ExitOrderLine.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(ExitOrderLine);
                DocumentLinkManagement.GetDocuments(DocumentProperties, RecRef);
              UNTIL ExitOrderLine.NEXT = 0;
          END;
        "Document Type"::"Plant Order":
          BEGIN
            PlantOrderLine.SETRANGE("Plant Order No.", No);
            IF PlantOrderLine.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(PlantOrderLine);
                DocumentLinkManagement.GetDocuments(DocumentProperties, RecRef);
              UNTIL PlantOrderLine.NEXT = 0;
          END;
      END;

      DocumentProperties.RemovePrevVersions(DocumentProperties);
      DocumentProperties.MARKEDONLY(TRUE);
      IF DocumentProperties.ISEMPTY THEN
        EXIT;

      DocumentProperties.FINDSET;
      REPEAT
        DocumentProperties.CreateDocumentRelation(DocumentType, No);
      UNTIL DocumentProperties.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

