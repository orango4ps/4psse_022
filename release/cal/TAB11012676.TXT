OBJECT Table 11012676 4PS-Mobile Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 11012449=rd;
    CaptionML=[ENU=4PS Mobile Setup;
               NOR=4PS-mobilinnstillinger;
               SVE=4PS-mobilinstÑllningar];
  }
  FIELDS
  {
    { 10  ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              NOR=Primërnõkkel;
                                                              SVE=PrimÑrnyckel] }
    { 20  ;   ;4PS-Mobile Active   ;Boolean       ;OnValidate=VAR
                                                                SpecialLicense@1100525000 : Record 11012449;
                                                                Resource@1100525002 : Record 11229278;
                                                                LoadLicense@1100525001 : Codeunit 11229289;
                                                                PossibleWebServiceMgt@1100525003 : Codeunit 11125354;
                                                              BEGIN
                                                                IF "4PS-Mobile Active" THEN BEGIN
                                                                  IF NOT (SpecialLicense.GET(SpecialLicense."Licence Type"::"4PS Mobile")) OR (SpecialLicense.GET(SpecialLicense."Licence Type"::"4PS FSA"))
                                                                    THEN LoadLicense.RUN();
                                                                END ELSE BEGIN
                                                                  Resource.SETCURRENTKEY(Type, Company, "No.");
                                                                  Resource.SETRANGE(Type, Resource.Type::Employee);
                                                                  Resource.SETRANGE(Company, COMPANYNAME);
                                                                  Resource.SETRANGE("Active in FSA", TRUE);
                                                                  IF NOT Resource.ISEMPTY THEN BEGIN
                                                                    IF NOT CONFIRM(Text003, FALSE, COMPANYNAME, Resource.COUNT, Resource.FIELDCAPTION("Active in FSA")) THEN
                                                                      ERROR('')
                                                                    ELSE
                                                                      Resource.MODIFYALL("Active in FSA", FALSE);
                                                                  END;
                                                                  IF SpecialLicense.GET(SpecialLicense."Licence Type"::"4PS Mobile") THEN
                                                                    SpecialLicense.DELETE(TRUE);
                                                                  IF SpecialLicense.GET(SpecialLicense."Licence Type"::"4PS FSA") THEN
                                                                    SpecialLicense.DELETE(TRUE);
                                                                END;
                                                                IF ((NOT IsMobileActiveInOtherCompany) AND (NOT "4PS-Mobile Active")) OR "4PS-Mobile Active" THEN
                                                                  PossibleWebServiceMgt.ToggleMOB("4PS-Mobile Active");
                                                              END;

                                                   CaptionML=ENU=Field Service Application Active }
    { 30  ;   ;Reference Period Response;Code10   ;TableRelation="Reference Period".Code WHERE (Type=CONST(Common));
                                                   CaptionML=[ENU=Reference Period Response;
                                                              NOR=Referanseperiode, respons;
                                                              SVE=Referensperiod, svar] }
    { 31  ;   ;Reference Period Repair;Code10     ;TableRelation="Reference Period".Code WHERE (Type=CONST(Common));
                                                   CaptionML=[ENU=Reference Period Repair;
                                                              NOR=Referanseperiode, reparasjon;
                                                              SVE=Referensperiod, reparation] }
    { 40  ;   ;Ref. Point Sending SO;Integer      ;TableRelation="Reference Point".No. WHERE (Apply=CONST(ServOrder));
                                                   CaptionML=[ENU=Ref. Point Sending Service Order;
                                                              NOR=Referansepunkt sender serviceordre;
                                                              SVE=Ref.punkt skickar serviceorder];
                                                   BlankZero=Yes }
    { 50  ;   ;Reason Code Hours/Material;Code10  ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code Hours/Material;
                                                              NOR=èrsakskode, timer/materiale] }
    { 60  ;   ;Item Journal Template;Code10       ;TableRelation="Item Journal Template" WHERE (Type=CONST(Item),
                                                                                                Recurring=CONST(No));
                                                   CaptionML=[ENU=Item Journal Template;
                                                              NOR=Artikkeljournalmal;
                                                              SVE=Artikeljournalmall] }
    { 61  ;   ;Item Journal Batch  ;Code10        ;TableRelation="Item Journal Batch".Name WHERE (Journal Template Name=FIELD(Item Journal Template));
                                                   CaptionML=[ENU=Item Journal Batch;
                                                              NOR=Artikkeljournal;
                                                              SVE=Artikeljournal] }
    { 65  ;   ;Determine Def. CO Working Hrs.;Option;
                                                   CaptionML=[ENU=Determine Default Cost Object Working Hrs.;
                                                              NOR=Fastsett standard arbeidstimer for kostnadsobjekt;
                                                              SVE=FaststÑll standardarbetstim. fîr kostnadsobjekt];
                                                   OptionCaptionML=[ENU=Setup,,,Employee;
                                                                    NOR=Innstillinger,,,Ansatt;
                                                                    SVE=InstÑllning,,,AnstÑlld];
                                                   OptionString=Setup,,,Employee }
    { 70  ;   ;Def. Cost Object Working Hrs;Code20;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Labor),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Default Cost Object Working Hours;
                                                              NOR=Standard kostnadsobjekt, arbeidstimer;
                                                              SVE=Standardkostnadsobjekt, arbetstimmar] }
    { 71  ;   ;Def. Wage Comp. Working Hrs;Code10 ;TableRelation="Wage Component".Code WHERE (Component Type=FILTER(Hours|Expenses));
                                                   CaptionML=[ENU=Default Wage Component Working Hours;
                                                              NOR=Standard lõnnsart, arbeidstimer;
                                                              SVE=Standard, lîneart fîr arbetstimmar] }
    { 80  ;   ;Def. Cost Object Travel Hrs;Code20 ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Labor),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Default Cost Object Travel Hours;
                                                              NOR=Standard kostnadsobjekt, reisetimer;
                                                              SVE=Standardkostnadsobjekt, restimmar] }
    { 81  ;   ;Def. Wage Comp. Travel Hrs;Code10  ;TableRelation="Wage Component".Code WHERE (Component Type=FILTER(Hours|Expenses));
                                                   CaptionML=[ENU=Default Wage Component Travel Hours;
                                                              NOR=Standard lõnnsart, arbeidstimer;
                                                              SVE=Standard, lîneart fîr restimmar] }
    { 90  ;   ;Def. Cost Object Items;Code20      ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Material),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Default Cost Object Items;
                                                              NOR=Standard kostnadsobjekt, artikler;
                                                              SVE=Standard, kostnadsobjektsartiklar] }
    { 100 ;   ;Def. Cost Code Pause;Code10        ;TableRelation="Cost Code";
                                                   CaptionML=[ENU=Def. Cost Code Pause;
                                                              NOR=Def. Kostkode, pause;
                                                              SVE=Def. kostnadskodspaus] }
    { 110 ;   ;Def. Cost Code Under-util.;Code10  ;TableRelation="Cost Code";
                                                   CaptionML=[ENU=Def. Cost Code Under-utilization;
                                                              NOR=Def. Kostkode, underforbruk;
                                                              SVE=Def. kostnadskod, underanvÑndning] }
    { 115 ;   ;Def. Cost Code Break;Code10        ;TableRelation="Cost Code";
                                                   CaptionML=ENU=Def. Cost Code Break }
    { 120 ;   ;Daysheet Presentation;Option       ;CaptionML=[ENU=Daysheet Presentation;
                                                              NOR=Dagsplanpresentasjon;
                                                              SVE=Dagsplaneringspresentation];
                                                   OptionCaptionML=[ENU=Hours,Time Ticks;
                                                                    NOR=Timer, timeticks;
                                                                    SVE=Timmar,Timeticks];
                                                   OptionString=Hours,TimeTicks }
    { 121 ;   ;Daysheet Presentation 2;Option     ;CaptionML=[ENU=Daysheet Presentation;
                                                              NOR=Dagsplanpresentasjon;
                                                              SVE=Dagsplaneringspresentation];
                                                   OptionCaptionML=ENU=Daysheet Hours,Day Sheet Time Ticks,Weeksheet Hours,Weeksheet Time Ticks,Week- & Daysheet Hours,Week- & Daysheet Time Ticks;
                                                   OptionString=DaySheetHours,DaySheetTimeTicks,WeekSheetHours,WeekSheetTimeTicks,WeekDaySheetHours,WeekDaySheetTimeTicks }
    { 130 ;   ;Service Order Nos. (Decentral);Code20;
                                                   TableRelation="No. Series";
                                                   OnValidate=VAR
                                                                lvNoSeriesRec@1100525000 : Record 308;
                                                              BEGIN
                                                                lvNoSeriesRec.GET("Service Order Nos. (Decentral)");
                                                                lvNoSeriesRec.TESTFIELD("Manual Nos.", FALSE);
                                                              END;

                                                   CaptionML=[ENU=Service Order Nos. (Decentral);
                                                              NOR=Serviceordrenr. (perifer);
                                                              SVE=Serviceordernr (Perifer)] }
    { 140 ;   ;Receive Message Queue;Text100      ;InitValue=.\private$\4psmobile_receive;
                                                   CaptionML=[ENU=Receive Message Queue;
                                                              NOR=Motta meldingskõ;
                                                              SVE=Ta emot meddelandekî] }
    { 150 ;   ;Reply Message Queue ;Text100       ;InitValue=.\private$\4psmobile_reply;
                                                   CaptionML=[ENU=Reply Message Queue;
                                                              NOR=Svar pÜ meldingskõ;
                                                              SVE=Svara pÜ meddelandekî] }
    { 160 ;   ;Round Working Hours on Minutes;Integer;
                                                   CaptionML=ENU=Round Working Hours on Minutes (Hour Accounting);
                                                   MinValue=0 }
    { 170 ;   ;Round Travel Hours on Minutes;Integer;
                                                   CaptionML=ENU=Round Travel Hours on Minutes (Hour Accounting);
                                                   MinValue=0 }
    { 180 ;   ;Number of Historic Orders;Integer  ;CaptionML=[ENU=Number of Historic Service Orders;
                                                              NOR=Antall historiske serviceordre;
                                                              SVE=Antal historiska serviceordrar];
                                                   MinValue=0 }
    { 190 ;   ;Keep Employee Position History;Integer;
                                                   CaptionML=[ENU=Keep Employee Position History (in Days);
                                                              NOR=Behold ansatts posisjonshistorikk (i dager);
                                                              SVE=BehÜll anstÑllds positionshistorik (i dagar)] }
    { 200 ;   ;Field 1 Main Form   ;Text30        ;OnValidate=BEGIN
                                                                ValidateUIField("Field 1 Main Form");
                                                              END;

                                                   OnLookup=BEGIN
                                                              SelectUIField("Field 1 Main Form");
                                                            END;

                                                   CaptionML=[ENU=Field 1 Main Form;
                                                              NOR=Felt 1 hovedskjema;
                                                              SVE=FÑlt 1, huvudformulÑr] }
    { 210 ;   ;Field 2 Main Form   ;Text30        ;OnValidate=BEGIN
                                                                ValidateUIField("Field 2 Main Form");
                                                              END;

                                                   OnLookup=BEGIN
                                                              SelectUIField("Field 2 Main Form");
                                                            END;

                                                   CaptionML=[ENU=Field 2 Main Form;
                                                              NOR=Felt 2 hovedskjema;
                                                              SVE=FÑlt 2, huvudformulÑr] }
    { 220 ;   ;Field 3 Main Form   ;Text30        ;OnValidate=BEGIN
                                                                ValidateUIField("Field 3 Main Form");
                                                              END;

                                                   OnLookup=BEGIN
                                                              SelectUIField("Field 3 Main Form");
                                                            END;

                                                   CaptionML=[ENU=Field 3 Main Form;
                                                              NOR=Felt 3 hovedskjema;
                                                              SVE=FÑlt 3, huvudformulÑr] }
    { 230 ;   ;Field 4 Main Form   ;Text30        ;OnValidate=BEGIN
                                                                ValidateUIField("Field 4 Main Form");
                                                              END;

                                                   OnLookup=BEGIN
                                                              SelectUIField("Field 4 Main Form");
                                                            END;

                                                   CaptionML=[ENU=Field 4 Main Form;
                                                              NOR=Felt 4 hovedskjema;
                                                              SVE=FÑlt 4, huvudformulÑr] }
    { 240 ;   ;Field 5 Main Form   ;Text30        ;OnValidate=BEGIN
                                                                ValidateUIField("Field 5 Main Form");
                                                              END;

                                                   OnLookup=BEGIN
                                                              SelectUIField("Field 5 Main Form");
                                                            END;

                                                   CaptionML=[ENU=Field 5 Main Form;
                                                              NOR=Felt 5 hovedskjema;
                                                              SVE=FÑlt 5, huvudformulÑr] }
    { 250 ;   ;Sync. Consignment and Absence;Boolean;
                                                   CaptionML=[ENU=Synchronize Consignment and Absence;
                                                              NOR=Synkroniser forsendelse og fravër;
                                                              SVE=Synkronisera konsignation och frÜnvaro] }
    { 260 ;   ;Sync. Window Consign. Absence;Integer;
                                                   CaptionML=[ENU=Sync. Window Consignment and Absence (in days);
                                                              NOR=Synk. Vindu Õ forsendelse og fravër (i dager);
                                                              SVE=Synk. Fînsterkonsignation och frÜnvaro (i dagar)] }
    { 270 ;   ;Reclass. Jnl. Template Name;Code10 ;TableRelation="Item Journal Template" WHERE (Type=CONST(Transfer),
                                                                                                Recurring=CONST(No));
                                                   CaptionML=ENU=Reclass. Jnl. Template Name }
    { 271 ;   ;Reclass. Jnl. Batch Name;Code10    ;TableRelation="Item Journal Batch".Name WHERE (Journal Template Name=FIELD(Reclass. Jnl. Template Name));
                                                   OnValidate=VAR
                                                                ItemJournalBatch@1100528000 : Record 233;
                                                              BEGIN
                                                                IF ItemJournalBatch.GET("Reclass. Jnl. Template Name", "Reclass. Jnl. Batch Name") THEN
                                                                  ItemJournalBatch.TESTFIELD("No. Series");
                                                              END;

                                                   CaptionML=ENU=Reclass. Jnl. Batch Name }
    { 272 ;   ;Requisition Wksh. Templ. Name;Code10;
                                                   TableRelation="Req. Wksh. Template".Name WHERE (Type=CONST(Req.),
                                                                                                   Recurring=CONST(No));
                                                   CaptionML=ENU=Requisition Wksh. Template Name }
    { 273 ;   ;Requisition Wksh. Name;Code10      ;TableRelation="Requisition Wksh. Name".Name WHERE (Worksheet Template Name=FIELD(Requisition Wksh. Templ. Name));
                                                   CaptionML=[ENU=Requisition Wksh. Name;
                                                              NOR=Bestillingsforslagsnavn;
                                                              SVE=Inkîpsfîrslagsnamn] }
    { 274 ;   ;Post Requisition Wksh. Auto;Boolean;CaptionML=ENU=Post Requisition Wksh. Automatically }
    { 275 ;   ;Phys. Inv. Jnl. Template Name;Code10;
                                                   TableRelation="Item Journal Template" WHERE (Type=CONST(Phys. Inventory),
                                                                                                Recurring=CONST(No));
                                                   CaptionML=ENU=Phys. Inventory Jnl. Template Name }
    { 276 ;   ;Phys. Inv. Jnl. Batch Name;Code10  ;TableRelation="Item Journal Batch".Name WHERE (Journal Template Name=FIELD(Phys. Inv. Jnl. Template Name));
                                                   OnValidate=VAR
                                                                ItemJournalBatch@1100528000 : Record 233;
                                                              BEGIN
                                                                IF ItemJournalBatch.GET("Phys. Inv. Jnl. Template Name", "Phys. Inv. Jnl. Batch Name") THEN
                                                                  ItemJournalBatch.TESTFIELD("No. Series");
                                                              END;

                                                   CaptionML=ENU=Phys. Inventory Jnl. Batch Name }
    { 300 ;   ;Source Type Call As History;Boolean;CaptionML=[ENU=Source Type Call As History;
                                                              NOR=Kildetypesamtale som historikk;
                                                              SVE=KÑlltypsamtal som historik] }
    { 310 ;   ;Source Type Contract As Hist.;Boolean;
                                                   CaptionML=[ENU=Source Type Contract As History;
                                                              NOR=Kildetypekontrakt som historikk;
                                                              SVE=KÑlltypkontrakt som historik] }
    { 320 ;   ;Source Type Direct As History;Boolean;
                                                   CaptionML=[ENU=Source Type Direct As History;
                                                              NOR=Kildetype direkte som historikk;
                                                              SVE=KÑlltyp direkt som historik] }
    { 330 ;   ;Source Type Estimate As Hist.;Boolean;
                                                   CaptionML=[ENU=Source Type Estimate As History;
                                                              NOR=Kildetype kalkyle som historikk;
                                                              SVE=KÑlltyp kalkyl som historik] }
    { 340 ;   ;Source Type Modific. As Hist.;Boolean;
                                                   CaptionML=[ENU=Source Type Modification As History;
                                                              NOR=Kildetype endring som historikk;
                                                              SVE=KÑlltyp Ñndring som historik] }
    { 350 ;   ;Source Type Replacem. As Hist.;Boolean;
                                                   CaptionML=[ENU=Source Type Replacement As History;
                                                              NOR=Kildetype erstatning som historikk;
                                                              SVE=KÑlltyp ersÑttn.som historik] }
    { 360 ;   ;Def. Init. Minutes Work. Hours;Integer;
                                                   CaptionML=[ENU=Default Initial Minutes Working Hours;
                                                              NOR=Standard init. Minutter og arbeidstimer;
                                                              SVE=Strd. startmin. och arb.tim.];
                                                   MinValue=0 }
    { 370 ;   ;Def. Round Work. Hours on Min.;Integer;
                                                   CaptionML=[ENU=Default Round Working Hours on Minutes;
                                                              NOR=Standard, rund av arbeidstimer pÜ minuttet;
                                                              SVE=Std.omgÜng, arbetstim. min.];
                                                   MinValue=0 }
    { 380 ;   ;Def. Round Trav. Hours on Min.;Integer;
                                                   CaptionML=[ENU=Default Round Travel Hours on Minutes;
                                                              NOR=Standard, rund av reisetimer pÜ minuttet;
                                                              SVE=Std.omgÜng, restim. min.];
                                                   MinValue=0 }
    { 390 ;   ;Use Decentral Planning;Boolean     ;CaptionML=[ENU=Use Decentral Planning;
                                                              NOR=Bruk perifer planlegging;
                                                              SVE=AnvÑnd perifer planering] }
    { 400 ;   ;Document Mgmt. Max. File Size;Integer;
                                                   OnValidate=BEGIN
                                                                IF "Document Mgmt. Max. File Size" > 8 THEN
                                                                  ERROR(Text002, FIELDCAPTION("Document Mgmt. Max. File Size"), 8);
                                                              END;

                                                   CaptionML=[ENU=Document Mgmt. Max. File Size (MB);
                                                              NOR=DokumenthÜndtering, maks filstõrrelse (MB)] }
    { 410 ;   ;Analysis Code Call Mandatory;Boolean;
                                                   CaptionML=[ENU=Analysis Code Call Mandatory;
                                                              NOR=Analyse, kodesamtale obligatorisk] }
    { 420 ;   ;Service Locs. Online Avail.;Boolean;CaptionML=[ENU=Service Locations Online Available;
                                                              NOR=Servicelokasjoner online er tilgjengelig] }
    { 430 ;   ;Add Existing Objects Allowed;Boolean;
                                                   CaptionML=ENU=Add Existing Objects Allowed }
    { 440 ;   ;Items Online Available;Boolean     ;CaptionML=[ENU=Items Online Available;
                                                              NOR=Artikler online er tilgjengelig] }
    { 441 ;   ;Work Orders Online Available;Boolean;
                                                   CaptionML=ENU=Work Orders Online Available }
    { 450 ;   ;Notify Planner Advice Order;Boolean;CaptionML=ENU=Notify Planner Advice Order }
    { 460 ;   ;Email Notification Adv. Order;Text100;
                                                   CaptionML=ENU=Email Notification Adv. Order }
    { 470 ;   ;Create Purchase Order;Boolean      ;CaptionML=[ENU=Create Purchase Order;
                                                              NOR=Opprette kjõpsordre;
                                                              SVE=Skapa inkîpsorder] }
    { 480 ;   ;Inspection Lines in History;Boolean;CaptionML=ENU=Inspection Lines in Installation History }
    { 490 ;   ;Object Group Fixed for Objects;Boolean;
                                                   CaptionML=ENU=Object Group Fixed for Objects }
    { 500 ;   ;Use Quantity Adviced;Boolean       ;InitValue=Yes;
                                                   CaptionML=ENU=Use Quantity Adviced }
    { 510 ;   ;Filter Set Cost Obj. Ext. Cost;Code20;
                                                   TableRelation="Export Filter Set (Mobile)";
                                                   CaptionML=ENU=Filter Set Cost Objects Extra Costs }
    { 520 ;   ;Order Kind/Type Editable;Boolean   ;CaptionML=ENU=Order Kind/Type Editable }
    { 530 ;   ;Filter Set Wage Comp. Wrk Hrs.;Code20;
                                                   TableRelation="Export Filter Set (Mobile)";
                                                   CaptionML=ENU=Filter Set Wage Components Working Times }
    { 540 ;   ;Cost Plus Lines with Qty Zero;Boolean;
                                                   CaptionML=ENU=Cost Plus Lines with Quantity Zero }
    { 545 ;   ;Object on CP Lines Mandatory;Boolean;
                                                   CaptionML=ENU=Object No. on Cost Plus Lines Mandatory }
    { 550 ;   ;Create New Objects Allowed;Boolean ;CaptionML=ENU=Create New Objects Allowed }
    { 560 ;   ;Standard Object Editable;Boolean   ;CaptionML=ENU=Standard Object Editable }
    { 570 ;   ;Filter Set Editable Std Obj;Code20 ;TableRelation="Export Filter Set (Mobile)";
                                                   CaptionML=ENU=Filter Set Editable Standard Objects }
    { 580 ;   ;Communication Fields Editable;Boolean;
                                                   CaptionML=ENU=Communication Fields Editable }
    { 590 ;   ;Replace Objects Allowed;Boolean    ;CaptionML=ENU=Replace Objects Allowed }
    { 600 ;   ;Create CP Lines for SUP Auto;Boolean;
                                                   CaptionML=ENU=Create Cost Plus Lines for SUP Production Automatically }
    { 610 ;   ;Donot Create Working Times Aut;Boolean;
                                                   CaptionML=ENU=Don't Create Working Times Automatically }
    { 620 ;   ;Customers Online Available;Boolean ;CaptionML=ENU=Customers Online Available }
    { 630 ;   ;Refr. Insp. and Spec before Ex;Boolean;
                                                   CaptionML=ENU=Refresh Inspections and Specification Before Export to FSA }
    { 640 ;   ;Use Vessel Functionality;Boolean   ;CaptionML=ENU=Use Vessel Functionality }
    { 650 ;   ;Filter Set Cost Obj. Travel Hr;Code20;
                                                   TableRelation="Export Filter Set (Mobile)";
                                                   CaptionML=ENU=Filter Set Cost Objects Travel Hours }
    { 660 ;   ;Work Description Editable;Boolean  ;CaptionML=ENU=Work Description Editable }
    { 670 ;   ;Show Project Advice Orders;Boolean ;CaptionML=ENU=Show Project Advice Orders }
    { 680 ;   ;Add Unit Prices Allowed;Boolean    ;CaptionML=ENU=Add Unit Prices Allowed }
    { 690 ;   ;Company Dec. Order Editable;Boolean;CaptionML=ENU=Company Decentral Order Editable }
    { 700 ;   ;Use Hour Line Templates;Boolean    ;CaptionML=ENU=Use Hour Line Templates }
    { 710 ;   ;Def. Hr.Ln. Templ. Wk. Serv.;Code20;TableRelation="Hour Line Template".Code WHERE (Type=CONST(Service));
                                                   OnValidate=VAR
                                                                HourLineTemplate@1100525002 : Record 11229799;
                                                                CheckType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                              BEGIN
                                                                IF NOT HourLineTemplate.ValidateCodeforSource(COMPANYNAME,FALSE,"Def. Hr.Ln. Templ. Wk. Serv.",CheckType::Service,TRUE) THEN
                                                                  FIELDERROR("Def. Hr.Ln. Templ. Wk. Serv.");
                                                              END;

                                                   OnLookup=VAR
                                                              HourLineTemplate@1100525002 : Record 11229799;
                                                              LookupCompany@1100525001 : Text[30];
                                                              LookupType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                            BEGIN
                                                              LookupCompany := COMPANYNAME;
                                                              LookupType := LookupType::Service;
                                                              IF HourLineTemplate.LookupCodeforSource(LookupCompany,FALSE,"Def. Hr.Ln. Templ. Wk. Serv.", LookupType,TRUE) THEN
                                                                VALIDATE("Def. Hr.Ln. Templ. Wk. Serv.");
                                                            END;

                                                   CaptionML=ENU=Default Hour Line Template Working Hours (Service) }
    { 720 ;   ;Def. Hr.Ln. Templ. Wk. Proj.;Code20;TableRelation="Hour Line Template".Code WHERE (Type=CONST(Project));
                                                   OnValidate=VAR
                                                                HourLineTemplate@1100525001 : Record 11229799;
                                                                CheckType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                              BEGIN
                                                                IF NOT HourLineTemplate.ValidateCodeforSource(COMPANYNAME,FALSE,"Def. Hr.Ln. Templ. Wk. Proj.",CheckType::Project,TRUE) THEN
                                                                  FIELDERROR("Def. Hr.Ln. Templ. Wk. Proj.");
                                                              END;

                                                   OnLookup=VAR
                                                              HourLineTemplate@1100525002 : Record 11229799;
                                                              LookupCompany@1100525001 : Text[30];
                                                              LookupType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                            BEGIN
                                                              LookupCompany := COMPANYNAME;
                                                              LookupType := LookupType::Project;
                                                              IF HourLineTemplate.LookupCodeforSource(LookupCompany,FALSE,"Def. Hr.Ln. Templ. Wk. Proj.", LookupType,TRUE) THEN
                                                                VALIDATE("Def. Hr.Ln. Templ. Wk. Proj.");
                                                            END;

                                                   CaptionML=ENU=Default Hour Line Template Working Hours (Project) }
    { 730 ;   ;Def. Hr.Ln. Templ. Tr. Serv.;Code20;TableRelation="Hour Line Template".Code WHERE (Type=CONST(Service));
                                                   OnValidate=VAR
                                                                HourLineTemplate@1100525001 : Record 11229799;
                                                                CheckType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                              BEGIN
                                                                IF NOT HourLineTemplate.ValidateCodeforSource(COMPANYNAME,FALSE,"Def. Hr.Ln. Templ. Tr. Serv.",CheckType::Service,TRUE) THEN
                                                                  FIELDERROR("Def. Hr.Ln. Templ. Tr. Serv.");
                                                              END;

                                                   OnLookup=VAR
                                                              HourLineTemplate@1100525002 : Record 11229799;
                                                              LookupCompany@1100525001 : Text[30];
                                                              LookupType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                            BEGIN
                                                              LookupCompany := COMPANYNAME;
                                                              LookupType := LookupType::Service;
                                                              IF HourLineTemplate.LookupCodeforSource(LookupCompany,FALSE,"Def. Hr.Ln. Templ. Tr. Serv.", LookupType,TRUE) THEN
                                                                VALIDATE("Def. Hr.Ln. Templ. Tr. Serv.");
                                                            END;

                                                   CaptionML=ENU=Default Hour Line Template Travel Hours (Service) }
    { 740 ;   ;Def. Hr.Ln. Templ. Tr. Proj.;Code20;TableRelation="Hour Line Template".Code WHERE (Type=CONST(Project));
                                                   OnValidate=VAR
                                                                HourLineTemplate@1100525001 : Record 11229799;
                                                                CheckType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                              BEGIN
                                                                IF NOT HourLineTemplate.ValidateCodeforSource(COMPANYNAME,FALSE,"Def. Hr.Ln. Templ. Tr. Proj.",CheckType::Project,TRUE) THEN
                                                                  FIELDERROR("Def. Hr.Ln. Templ. Tr. Proj.");
                                                              END;

                                                   OnLookup=VAR
                                                              HourLineTemplate@1100525002 : Record 11229799;
                                                              LookupCompany@1100525001 : Text[30];
                                                              LookupType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                            BEGIN
                                                              LookupCompany := COMPANYNAME;
                                                              LookupType := LookupType::Project;
                                                              IF HourLineTemplate.LookupCodeforSource(LookupCompany,FALSE,"Def. Hr.Ln. Templ. Tr. Proj.", LookupType,TRUE) THEN
                                                                VALIDATE("Def. Hr.Ln. Templ. Tr. Proj.");
                                                            END;

                                                   CaptionML=ENU=Default Hour Line Template Travel Hours (Project) }
    { 750 ;   ;Def. Hr.Ln. Templ. Pause;Code20    ;TableRelation="Hour Line Template".Code;
                                                   OnValidate=VAR
                                                                HourLineTemplate@1100525001 : Record 11229799;
                                                                CheckType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                              BEGIN
                                                                IF NOT HourLineTemplate.ValidateCodeforSource(COMPANYNAME,FALSE,"Def. Hr.Ln. Templ. Pause",CheckType::Service,FALSE) THEN
                                                                  FIELDERROR("Def. Hr.Ln. Templ. Pause");
                                                              END;

                                                   OnLookup=VAR
                                                              HourLineTemplate@1100525002 : Record 11229799;
                                                              LookupCompany@1100525001 : Text[30];
                                                              LookupType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                            BEGIN
                                                              LookupCompany := COMPANYNAME;
                                                              LookupType := LookupType::Service;
                                                              IF HourLineTemplate.LookupCodeforSource(LookupCompany,FALSE,"Def. Hr.Ln. Templ. Pause", LookupType,FALSE) THEN
                                                                VALIDATE("Def. Hr.Ln. Templ. Pause");
                                                            END;

                                                   CaptionML=ENU=Default Hour Line Template Pause }
    { 760 ;   ;Def. Hr.Ln. Templ. Under-util.;Code20;
                                                   TableRelation="Hour Line Template".Code;
                                                   OnValidate=VAR
                                                                HourLineTemplate@1100525001 : Record 11229799;
                                                                CheckType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                              BEGIN
                                                                IF NOT HourLineTemplate.ValidateCodeforSource(COMPANYNAME,FALSE,"Def. Hr.Ln. Templ. Under-util.",CheckType::Service,FALSE) THEN
                                                                  FIELDERROR("Def. Hr.Ln. Templ. Under-util.");
                                                              END;

                                                   OnLookup=VAR
                                                              HourLineTemplate@1100525002 : Record 11229799;
                                                              LookupCompany@1100525001 : Text[30];
                                                              LookupType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                            BEGIN
                                                              LookupCompany := COMPANYNAME;
                                                              LookupType := LookupType::Service;
                                                              IF HourLineTemplate.LookupCodeforSource(LookupCompany,FALSE,"Def. Hr.Ln. Templ. Under-util.", LookupType,FALSE) THEN
                                                                VALIDATE("Def. Hr.Ln. Templ. Under-util.");
                                                            END;

                                                   CaptionML=ENU=Default Hour Line Template Under-utilization }
    { 770 ;   ;Def. Hr.Ln. Templ. Break;Code20    ;TableRelation="Hour Line Template".Code;
                                                   OnValidate=VAR
                                                                HourLineTemplate@1100525001 : Record 11229799;
                                                                CheckType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                              BEGIN
                                                                IF NOT HourLineTemplate.ValidateCodeforSource(COMPANYNAME,FALSE,"Def. Hr.Ln. Templ. Break",CheckType::Service,FALSE) THEN
                                                                  FIELDERROR("Def. Hr.Ln. Templ. Break");
                                                              END;

                                                   OnLookup=VAR
                                                              HourLineTemplate@1100525002 : Record 11229799;
                                                              LookupCompany@1100525001 : Text[30];
                                                              LookupType@1100525000 : 'Project,Indirect,Service,Plant,Unmanned Plant';
                                                            BEGIN
                                                              LookupCompany := COMPANYNAME;
                                                              LookupType := LookupType::Service;
                                                              IF HourLineTemplate.LookupCodeforSource(LookupCompany,FALSE,"Def. Hr.Ln. Templ. Break", LookupType,FALSE) THEN
                                                                VALIDATE("Def. Hr.Ln. Templ. Break");
                                                            END;

                                                   CaptionML=ENU=Default Hour Line Template Break }
    { 780 ;   ;Send Debrief Texts with Order;Boolean;
                                                   CaptionML=ENU=Send Debrief Texts with Order }
    { 790 ;   ;Mileage Registration;Boolean       ;CaptionML=ENU=Mileage Registration }
    { 800 ;   ;Hours Destination   ;Option        ;CaptionML=ENU=Hours Destination;
                                                   OptionCaptionML=ENU=Hour Accounting,Site Mgnmnt. Hours;
                                                   OptionString=Hour Accounting,Site Mgnmnt. Hours }
    { 810 ;   ;Break in Hours Accounting;Boolean  ;CaptionML=ENU=Break in Hours Accounting }
    { 820 ;   ;Serv. Loc. Change in Obj. Debr;Boolean;
                                                   CaptionML=ENU=Service Location Change in Object Debriefing }
    { 830 ;   ;Notify Order Mng. Adv. Order;Boolean;
                                                   CaptionML=ENU=Notify Order Manager Advice Order }
    { 840 ;   ;Notify Assigned to Adv. Order;Boolean;
                                                   CaptionML=ENU=Notify Assigned to Advice Order }
    { 850 ;   ;Max. Posting Retries;Integer       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Max. Posting Retries;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 860 ;   ;Time Between Posting Retries;Integer;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Time Between Posting Retries [ms];
                                                   MinValue=0;
                                                   MaxValue=2000 }
    { 870 ;   ;Work Order Inspection Lines;Boolean;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Work Order Inspection Lines }
    { 880 ;   ;Unass. St. Mt. Item Jnl. Tmpl.;Code10;
                                                   TableRelation="Item Journal Template" WHERE (Type=CONST(Item),
                                                                                                Recurring=CONST(No));
                                                   CaptionML=ENU=Unassigned Stock Mutations Item Journal Template }
    { 890 ;   ;Unass. St. Mt. Item Jnl. Batch;Code10;
                                                   TableRelation="Item Journal Batch".Name WHERE (Journal Template Name=FIELD(Unass. St. Mt. Item Jnl. Tmpl.));
                                                   CaptionML=ENU=Unassigned Stock Mutations Item Journal Batch }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1210190000 : TextConst 'ENU=%1 and %2;NOR=%1 og %2;SVE=%1 och %2';
      Text002@1100409000 : TextConst 'ENU=%1 cannot be greater than %2.;NOR=%1 kan ikke vëre stõrre enn %2.;SVE=%1 kan inte vara stîrre Ñn %2.';
      Text003@1100525000 : TextConst 'ENU=Of company ''%1'' still %2 resources (employees) ''%3'', these wil be set to inactive. Are you sure?';

    PROCEDURE SelectUIField@1100525002(VAR FieldName@1100525001 : Text[30]);
    VAR
      TempPossibleUIField@1210190000 : TEMPORARY Record 11020445;
    BEGIN
      FillUIFieldTable(TempPossibleUIField);

      IF PAGE.RUNMODAL(0, TempPossibleUIField) = ACTION::LookupOK THEN
        FieldName := TempPossibleUIField."Field Name";
    END;

    PROCEDURE ValidateUIField@1100525003(VAR FieldName@1100525001 : Text[30]);
    VAR
      TempPossibleUIField@1100525000 : TEMPORARY Record 11020445;
    BEGIN
      IF FieldName <> '' THEN BEGIN
        FillUIFieldTable(TempPossibleUIField);
        TempPossibleUIField.GET(FieldName);
      END;
    END;

    PROCEDURE FillUIFieldTable@1100525000(VAR PossibleUIField@1100525000 : TEMPORARY Record 11020445);
    VAR
      ServiceOrder@1210190000 : Record 11012823;
    BEGIN
      InsertUIField(PossibleUIField, 'Description', ServiceOrder.FIELDCAPTION(Description));
      InsertUIField(PossibleUIField, 'Address', ServiceOrder.FIELDCAPTION(Address));
      InsertUIField(PossibleUIField, 'City', ServiceOrder.FIELDCAPTION(City));
      InsertUIField(PossibleUIField, 'PostCode', ServiceOrder.FIELDCAPTION("Post Code"));
      InsertUIField(PossibleUIField, 'StartingDateTime', ServiceOrder.FIELDCAPTION("Starting Time"));
      InsertUIField(PossibleUIField, 'EndingDateTime', ServiceOrder.FIELDCAPTION("Ending Time"));
      InsertUIField(PossibleUIField, 'ServiceLocationDescription', ServiceOrder.FIELDCAPTION("Service Location Description"));
      InsertUIField(PossibleUIField, 'ServiceLocationNo', ServiceOrder.FIELDCAPTION("Service Location No."));
      InsertUIField(PossibleUIField, 'NoAndDescription',
        STRSUBSTNO(Text001, ServiceOrder.FIELDCAPTION("No."), ServiceOrder.FIELDCAPTION(Description)));
      InsertUIField(PossibleUIField, 'NavServiceOrderNo', ServiceOrder.FIELDCAPTION("No."));
    END;

    PROCEDURE InsertUIField@1100525001(VAR PossibleUIField@1100525001 : Record 11020445;FieldName@1100525000 : Text[30];FieldCaption@1210190000 : Text[249]);
    BEGIN
      PossibleUIField."Field Name" := FieldName;
      PossibleUIField.Caption := FieldCaption;
      PossibleUIField.INSERT;
    END;

    PROCEDURE PublishWebservicesMOB@1100525004(Publish@1100525001 : Boolean);
    VAR
      PossibleWebServiceMgt@1100525000 : Codeunit 11125354;
    BEGIN
      PossibleWebServiceMgt.ToggleMOB(Publish);
    END;

    LOCAL PROCEDURE IsMobileActiveInOtherCompany@1100529500() : Boolean;
    VAR
      Company@1100529500 : Record 2000000006;
      MobileSetup@1100529501 : Record 11012676;
    BEGIN
      Company.SETFILTER(Name, '<>%1', COMPANYNAME);
      IF Company.FINDSET THEN
        REPEAT
          MobileSetup.CHANGECOMPANY(Company.Name);
          IF MobileSetup.FINDFIRST THEN
            IF MobileSetup."4PS-Mobile Active" THEN
              EXIT(TRUE);
        UNTIL Company.NEXT = 0;
    END;

    PROCEDURE DetermineHourCalcSettings@1100528715(ServiceOrder@1100528708 : Record 11012823;VAR InitialMinutesWorkingHours@1100528701 : Integer;VAR RoundWorkingHoursOnMinutes@1100528702 : Integer;VAR RoundTravelHoursOnMinutes@1100528703 : Integer);
    VAR
      ServiceLocation@1100525002 : Record 11012801;
      ServiceContract@1100525001 : Record 11012812;
      Customer@1100525000 : Record 18;
      SCCustSourceTypeSetup@1100528700 : Record 11071800;
      MobileSetup@1100528709 : Record 11012676;
      Found@1100528707 : Boolean;
    BEGIN
      SCCustSourceTypeSetup.CHANGECOMPANY(ServiceOrder.CURRENTCOMPANY);
      ServiceLocation.CHANGECOMPANY(ServiceOrder.CURRENTCOMPANY);
      ServiceContract.CHANGECOMPANY(ServiceOrder.CURRENTCOMPANY);
      Customer.CHANGECOMPANY(ServiceOrder.CURRENTCOMPANY);

      IF NOT ServiceLocation.GET(ServiceOrder."Service Location No.") THEN
        ServiceLocation.INIT;
      IF NOT ServiceContract.GET(ServiceOrder."Service Contract No.") THEN
        ServiceContract.INIT;
      IF NOT Customer.GET(ServiceOrder."Customer No.") THEN
        Customer.INIT;

      SCCustSourceTypeSetup.SETRANGE("Source Type", ServiceOrder."Source Type");
      IF ServiceOrder."Service Contract No." <> '' THEN BEGIN
        SCCustSourceTypeSetup.SETRANGE(Type, SCCustSourceTypeSetup.Type::Contract);
        SCCustSourceTypeSetup.SETRANGE(Code, ServiceOrder."Service Contract No.");
      END ELSE BEGIN
        SCCustSourceTypeSetup.SETRANGE(Type, SCCustSourceTypeSetup.Type::Customer);
        SCCustSourceTypeSetup.SETRANGE(Code, ServiceOrder."Customer No.");
      END;
      IF NOT SCCustSourceTypeSetup.FINDFIRST THEN
        SCCustSourceTypeSetup.INIT;

      Found := FALSE;

      IF SCCustSourceTypeSetup.Code <> '' THEN BEGIN
        CASE SCCustSourceTypeSetup."Level Settings Hours Calc FSA" OF
          SCCustSourceTypeSetup."Level Settings Hours Calc FSA"::ServiceLocation :
            BEGIN
              IF ServiceLocation."No." <> '' THEN BEGIN
                InitialMinutesWorkingHours := ServiceLocation."Initial Minutes Working Hours";
                RoundWorkingHoursOnMinutes := ServiceLocation."Round Working Hours on Minutes";
                RoundTravelHoursOnMinutes := ServiceLocation."Round Travel Hours on Minutes";
                Found := TRUE;
              END;
            END;
          SCCustSourceTypeSetup."Level Settings Hours Calc FSA"::ServiceContract :
            BEGIN
              IF ServiceContract."No." <> '' THEN BEGIN
                InitialMinutesWorkingHours := ServiceContract."Initial Minutes Working Hours";
                RoundWorkingHoursOnMinutes := ServiceContract."Round Working Hours on Minutes";
                RoundTravelHoursOnMinutes := ServiceContract."Round Travel Hours on Minutes";
                Found := TRUE;
              END;
            END;
          SCCustSourceTypeSetup."Level Settings Hours Calc FSA"::Customer :
            BEGIN
              IF Customer."No." <> '' THEN BEGIN
                InitialMinutesWorkingHours := Customer."Initial Minutes Working Hours";
                RoundWorkingHoursOnMinutes := Customer."Round Working Hours on Minutes";
                RoundTravelHoursOnMinutes := Customer."Round Travel Hours on Minutes";
                Found := TRUE;
              END;
            END;
        END;
      END ELSE BEGIN
        IF ServiceLocation."No." <> '' THEN BEGIN
          InitialMinutesWorkingHours := ServiceLocation."Initial Minutes Working Hours";
          RoundWorkingHoursOnMinutes := ServiceLocation."Round Working Hours on Minutes";
          RoundTravelHoursOnMinutes := ServiceLocation."Round Travel Hours on Minutes";
          Found := TRUE;
        END;
      END;
      IF NOT Found THEN BEGIN
        MobileSetup.CHANGECOMPANY(ServiceOrder.CURRENTCOMPANY);
        MobileSetup.GET;
        InitialMinutesWorkingHours := MobileSetup."Def. Init. Minutes Work. Hours";
        RoundWorkingHoursOnMinutes := MobileSetup."Def. Round Work. Hours on Min.";
        RoundTravelHoursOnMinutes := MobileSetup."Def. Round Trav. Hours on Min.";
      END;
    END;

    PROCEDURE IsUnassignedStockMutationItemJournalEnabled@1100528700() : Boolean;
    BEGIN
      EXIT(("Unass. St. Mt. Item Jnl. Batch" <> '') OR ("Unass. St. Mt. Item Jnl. Tmpl." <> ''));
    END;

    BEGIN
    END.
  }
}

