OBJECT Table 11128791 LTMP Scenario Header
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               NEN2767LTMPHeader@1100528600 : Record 11128784;
             BEGIN
               IF NEN2767LTMPHeader.GET("Header Entry ID") THEN
                 "Price Index Code" := NEN2767LTMPHeader."Price Index Code";
               CreateScenarioLines;
             END;

    OnDelete=VAR
               LTMPScenarioLine@1100528600 : Record 11128792;
             BEGIN
               LTMPScenarioLine.SETRANGE("Header Entry ID", "Header Entry ID");
               LTMPScenarioLine.SETRANGE("Scenario No.", "Scenario No.");
               LTMPScenarioLine.SETRANGE("Version No.", "Version No.");
               LTMPScenarioLine.DELETEALL(TRUE);
             END;

    OnRename=VAR
               LTMPScenarioLine@1100528600 : Record 11128792;
               TmpLTMPScenarioLine@1100528601 : TEMPORARY Record 11128792;
             BEGIN
               IF (xRec."Header Entry ID" <> "Header Entry ID") OR (xRec."Scenario No." <> "Scenario No.") OR (xRec."Version No." <> "Version No.") THEN BEGIN
                 LTMPScenarioLine.SETRANGE("Header Entry ID", xRec."Header Entry ID");
                 LTMPScenarioLine.SETRANGE("Scenario No.", xRec."Scenario No.");
                 LTMPScenarioLine.SETRANGE("Version No.", xRec."Version No.");
                 IF LTMPScenarioLine.FINDSET THEN
                   REPEAT
                     TmpLTMPScenarioLine := LTMPScenarioLine;
                     TmpLTMPScenarioLine.INSERT;
                   UNTIL LTMPScenarioLine.NEXT = 0;
                 IF TmpLTMPScenarioLine.FINDSET THEN
                   REPEAT
                     LTMPScenarioLine := TmpLTMPScenarioLine;
                     LTMPScenarioLine.FIND('=');
                     LTMPScenarioLine.RENAME("Header Entry ID", "Scenario No.", "Version No.", TmpLTMPScenarioLine."Line No.");
                   UNTIL TmpLTMPScenarioLine.NEXT = 0;
               END;
             END;

    CaptionML=ENU=LTMP Scenario Header;
    LookupPageID=Page11128809;
    DrillDownPageID=Page11128809;
  }
  FIELDS
  {
    { 10  ;   ;Header Entry ID     ;Integer       ;TableRelation="NEN2767/LTMP Header";
                                                   CaptionML=ENU=Header Entry ID;
                                                   Editable=No }
    { 20  ;   ;Scenario No.        ;Code10        ;CaptionML=ENU=Scenario No.;
                                                   NotBlank=Yes }
    { 30  ;   ;Version No.         ;Code10        ;CaptionML=[ENU=Version No.;
                                                              NOR=Versjonsnr.;
                                                              SVE=Versionsnr] }
    { 40  ;   ;Policy/Risk Set     ;Code10        ;TableRelation="LTMP Policy/Risk Set";
                                                   OnValidate=VAR
                                                                LTMPPolicyRiskValue@1100528600 : Record 11128789;
                                                                LTMPScenarioLine@1100528601 : Record 11128792;
                                                              BEGIN
                                                                IF (xRec."Policy/Risk Set" <> '') AND (xRec."Policy/Risk Set" <> "Policy/Risk Set") THEN BEGIN
                                                                  LTMPPolicyRiskValue.SETRANGE("Header Entry ID", "Header Entry ID");
                                                                  IF NOT LTMPPolicyRiskValue.ISEMPTY THEN BEGIN
                                                                    IF GUIALLOWED THEN
                                                                      IF NOT CONFIRM(Text000) THEN
                                                                        ERROR('');
                                                                    LTMPPolicyRiskValue.DELETEALL(TRUE);

                                                                    LTMPScenarioLine.SETRANGE("Header Entry ID", "Header Entry ID");
                                                                    LTMPScenarioLine.SETRANGE("Scenario No.", "Scenario No.");
                                                                    LTMPScenarioLine.SETRANGE("Version No.", "Version No.");
                                                                    LTMPScenarioLine.MODIFYALL(Priority, 0, TRUE);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Policy/Risk Set }
    { 50  ;   ;Scenario Description;Text100       ;CaptionML=ENU=Scenario Description }
    { 60  ;   ;Chart Code          ;Code10        ;TableRelation="LTMP Chart Code".Code;
                                                   OnLookup=VAR
                                                              LTMPScenarioChartCode@1100528600 : Record 11128796;
                                                            BEGIN
                                                              CALCFIELDS("Location Type", "Location Code", "Survey No.");
                                                              LTMPScenarioChartCode.SETRANGE("Location Type", "Location Type");
                                                              LTMPScenarioChartCode.SETRANGE("Location Code", "Location Code");
                                                              LTMPScenarioChartCode.SETRANGE("Survey No.", "Survey No.");
                                                              IF PAGE.RUNMODAL(0, LTMPScenarioChartCode) = ACTION::LookupOK THEN
                                                                VALIDATE("Chart Code", LTMPScenarioChartCode.Code);
                                                            END;

                                                   CaptionML=ENU=Chartcode }
    { 70  ;   ;Measurement Date    ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("NEN2767/LTMP Header"."Measurement Date" WHERE (Entry ID=FIELD(Header Entry ID)));
                                                   CaptionML=[ENU=Measurement Date;
                                                              NOR=M†lingsdato];
                                                   Editable=No }
    { 80  ;   ;Price Index Code    ;Code10        ;TableRelation="LTMP Price Index Header";
                                                   CaptionML=ENU=Price Index Code }
    { 90  ;   ;Location Type       ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("NEN2767/LTMP Header"."Location Type" WHERE (Entry ID=FIELD(Header Entry ID)));
                                                   CaptionML=ENU=Location Type;
                                                   OptionCaptionML=ENU=Unbound,Service Location,Survey Location;
                                                   OptionString=Unbound,Service Location,Survey Location;
                                                   Editable=No }
    { 100 ;   ;Location Code       ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("NEN2767/LTMP Header"."Location Code" WHERE (Entry ID=FIELD(Header Entry ID)));
                                                   CaptionML=[ENU=Location Code;
                                                              NOR=Plasseringkode;
                                                              SVE=Lagerst„llekod];
                                                   Editable=No }
    { 110 ;   ;Survey No.          ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("NEN2767/LTMP Header"."Survey No." WHERE (Entry ID=FIELD(Header Entry ID)));
                                                   TableRelation="Service Survey";
                                                   CaptionML=[ENU=Survey No.;
                                                              NOR=Kartlegging nr.;
                                                              SVE=Kartl„ggningsnr];
                                                   Editable=No }
    { 120 ;   ;Final               ;Boolean       ;OnValidate=BEGIN
                                                                IF Final THEN
                                                                  CheckFinalExistsOnes;
                                                              END;

                                                   CaptionML=ENU=Final }
  }
  KEYS
  {
    {    ;Header Entry ID,Scenario No.,Version No.;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=Policy/Risk values exists, these will be deleted, continue?';
      Text001@1100528601 : TextConst 'ENU=Only one scenario can be final';

    PROCEDURE CreateScenarioLines@1100528600();
    VAR
      NEN2767LTMPLine@1100528600 : Record 11128785;
      LTMPScenarioLine@1100528601 : Record 11128792;
    BEGIN
      NEN2767LTMPLine.SETRANGE("Header Entry ID", "Header Entry ID");
      IF NEN2767LTMPLine.FINDSET THEN
        REPEAT
          LTMPScenarioLine."Header Entry ID" := "Header Entry ID";
          LTMPScenarioLine."Scenario No." := "Scenario No.";
          LTMPScenarioLine."Version No." := "Version No.";
          LTMPScenarioLine."Structure Line Code" := NEN2767LTMPLine."Structure Line Code";
          LTMPScenarioLine."Line No." := NEN2767LTMPLine."Line No.";
          LTMPScenarioLine.FillFromNEN2767LTMPLine(NEN2767LTMPLine);
          LTMPScenarioLine.INSERT(TRUE);
        UNTIL NEN2767LTMPLine.NEXT = 0;
    END;

    PROCEDURE UpdateDateFieldsScenarioLines@1100528601();
    VAR
      NEN2767LTMPLine@1100528601 : Record 11128785;
      LTMPScenarioLine@1100528600 : Record 11128792;
    BEGIN
      LTMPScenarioLine.SETRANGE("Header Entry ID", "Header Entry ID");
      LTMPScenarioLine.SETRANGE("Scenario No.", "Scenario No.");
      LTMPScenarioLine.SETRANGE("Version No.", "Version No.");
      IF LTMPScenarioLine.FINDSET THEN
        REPEAT
          IF NEN2767LTMPLine.GET(LTMPScenarioLine."Header Entry ID", LTMPScenarioLine."Structure Line Code", LTMPScenarioLine."Line No.") THEN BEGIN
            LTMPScenarioLine.FillFromNEN2767LTMPLine(NEN2767LTMPLine);
            LTMPScenarioLine.MODIFY(TRUE);
          END;
        UNTIL LTMPScenarioLine.NEXT = 0;
    END;

    PROCEDURE GetCostAmountByYear@1100528609(IYear@1100528600 : Integer) : Decimal;
    VAR
      LTMPScenarioLine@1100528601 : Record 11128792;
      CostAmount@1100528602 : Decimal;
    BEGIN
      LTMPScenarioLine.SETRANGE("Header Entry ID", "Header Entry ID");
      LTMPScenarioLine.SETRANGE("Scenario No.", "Scenario No.");
      LTMPScenarioLine.SETRANGE("Version No.", "Version No.");
      IF LTMPScenarioLine.FINDSET THEN
        REPEAT
          CostAmount += LTMPScenarioLine.GetCostAmountByYear(IYear);
        UNTIL LTMPScenarioLine.NEXT = 0;
      EXIT(CostAmount);
    END;

    LOCAL PROCEDURE CheckFinalExistsOnes@1100528602();
    VAR
      LTMPScenarioHeader@1100528600 : Record 11128791;
    BEGIN
      LTMPScenarioHeader.SETRANGE("Header Entry ID", "Header Entry ID");
      LTMPScenarioHeader.SETRANGE(Final, TRUE);
      IF LTMPScenarioHeader.FINDSET THEN
        REPEAT
          IF (LTMPScenarioHeader."Scenario No." <> "Scenario No.") OR
             (LTMPScenarioHeader."Version No." <> "Version No.")
          THEN
            ERROR(Text001);
        UNTIL LTMPScenarioHeader.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

