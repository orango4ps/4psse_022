OBJECT Table 11072219 Job Service Location
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnInsert=BEGIN
               TESTFIELD("Project No.");
               InitNewRecord;
             END;

    OnDelete=VAR
               JobServiceLocation@1100528800 : Record 11072219;
             BEGIN
               IF "Plot No." = '' THEN BEGIN
                 JobServiceLocation.SETRANGE("Generated in Company", "Generated in Company");
                 JobServiceLocation.SETRANGE(Company, Company);
                 JobServiceLocation.SETRANGE("Project No.", "Project No.");
                 JobServiceLocation.SETFILTER("Service Location No.", '<>%1', '');
                 IF JobServiceLocation.FINDSET THEN
                   ERROR(Text000);
                 JobServiceLocation.DELETEALL;
               END;

               JobServiceLocation.RESET;

               IF "Plot No." <> '' THEN BEGIN
                JobServiceLocation.GET("Generated in Company", Company, "Project No.", "Plot No.");
                IF JobServiceLocation."Service Location No." <> '' THEN
                  ERROR(Text000);
               END;
             END;

    OnRename=VAR
               JobServiceLocation@1100528800 : Record 11072219;
             BEGIN
               JobServiceLocation.SETRANGE("Generated in Company", "Generated in Company");
               JobServiceLocation.SETRANGE(Company, xRec.Company);
               JobServiceLocation.SETRANGE("Project No.", xRec."Project No.");
               JobServiceLocation.SETFILTER("Service Location No.", '<>%1', '');
               IF JobServiceLocation.FINDSET THEN
                 ERROR(Text000, xRec."Project No.", xRec.Company);
             END;

    CaptionML=ENU=Job Service Location;
  }
  FIELDS
  {
    { 10  ;   ;Generated in Company;Text30        ;TableRelation=Company;
                                                   CaptionML=ENU=Generated in Company;
                                                   NotBlank=Yes }
    { 20  ;   ;Company             ;Text30        ;TableRelation=Company;
                                                   CaptionML=[ENU=Company;
                                                              NOR=Selskap;
                                                              SVE=F”retag] }
    { 30  ;   ;Project No.         ;Code20        ;OnValidate=VAR
                                                                Job@1100528800 : Record 11072003;
                                                              BEGIN
                                                                IF Company = '' THEN
                                                                  Job.CHANGECOMPANY(COMPANYNAME)
                                                                ELSE
                                                                  Job.CHANGECOMPANY(Company);
                                                                IF "Project No." <> '' THEN
                                                                  Job.GET("Project No.");
                                                              END;

                                                   OnLookup=VAR
                                                              Job@1100528800 : Record 11072003;
                                                            BEGIN
                                                              IF Company = '' THEN
                                                                Job.CHANGECOMPANY(COMPANYNAME)
                                                              ELSE
                                                                Job.CHANGECOMPANY(Company);
                                                              IF Job.GET("Project No.") THEN;
                                                              IF PAGE.RUNMODAL(PAGE::"Job List", Job) = ACTION::LookupOK THEN
                                                                "Project No." := Job."No.";
                                                            END;

                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr];
                                                   NotBlank=Yes }
    { 40  ;   ;Plot No.            ;Code10        ;OnValidate=VAR
                                                                Plot@1100528800 : Record 11012500;
                                                                ServiceLocation@1100529900 : Record 11012801;
                                                              BEGIN
                                                                IF "Plot No." = '' THEN
                                                                  EXIT;

                                                                IF Company = '' THEN
                                                                  Plot.CHANGECOMPANY(COMPANYNAME)
                                                                ELSE
                                                                  Plot.CHANGECOMPANY(Company);
                                                                Plot.GET("Project No.", "Plot No.");
                                                                IF NOT ((Plot."Post Code" = '') AND (Plot.City = '') AND (Plot.Address = '')) THEN BEGIN
                                                                  ServiceLocation.SETRANGE("Post Code",Plot."Post Code");
                                                                  ServiceLocation.SETRANGE(City,Plot.City);
                                                                  ServiceLocation.SETRANGE(Address,Plot.Address);
                                                                  IF ServiceLocation.FINDFIRST THEN BEGIN
                                                                    "Create Location for Plot" := FALSE;
                                                                    Remark := STRSUBSTNO(Text002,ServiceLocation."No.");
                                                                  END;
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              Plot@1100528800 : Record 11012500;
                                                            BEGIN
                                                              IF Company = '' THEN
                                                                Plot.CHANGECOMPANY(COMPANYNAME)
                                                              ELSE
                                                                Plot.CHANGECOMPANY(Company);

                                                              Plot.SETRANGE("Project No.", "Project No.");
                                                              IF PAGE.RUNMODAL(PAGE::"Plot Number List", Plot) = ACTION::LookupOK THEN
                                                                "Plot No." := Plot."Plot No.";
                                                            END;

                                                   CaptionML=[ENU=Plot No.;
                                                              NOR=Tegningnr;
                                                              SVE=Ritningnr] }
    { 50  ;   ;Service Location No.;Code20        ;TableRelation="Service Location".No.;
                                                   CaptionML=[ENU=Service Location No.;
                                                              NOR=Servicelokasjon Nr.;
                                                              SVE=Serviceplatsnr];
                                                   Editable=No }
    { 60  ;   ;Create Location for Project;Boolean;OnValidate=BEGIN
                                                                IF "Plot No." <> '' THEN
                                                                  ERROR(Text001);
                                                                IF NOT "Create Location for Project" THEN
                                                                  "Use Proj. No. as Serv. Loc. No" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Create Service Location for Project }
    { 70  ;   ;Use Proj. No. as Serv. Loc. No;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Use Proj. No. as Serv. Loc. No" THEN
                                                                  TESTFIELD("Create Location for Project");
                                                              END;

                                                   CaptionML=ENU=Use Project No. as Service Location No. }
    { 80  ;   ;Service Location Description;Text100;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Location".Description WHERE (No.=FIELD(Service Location No.)));
                                                   CaptionML=ENU=Description (Service Location);
                                                   Editable=No }
    { 90  ;   ;Service Location Address;Text100   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Location".Address WHERE (No.=FIELD(Service Location No.)));
                                                   CaptionML=ENU=Address (Service Location);
                                                   Editable=No }
    { 100 ;   ;Service Location Post Code;Code20  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Location"."Post Code" WHERE (No.=FIELD(Service Location No.)));
                                                   CaptionML=ENU=Post Code (Service Location);
                                                   Editable=No }
    { 110 ;   ;Service Location City;Text30       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Location".City WHERE (No.=FIELD(Service Location No.)));
                                                   CaptionML=ENU=City (Service Location);
                                                   Editable=No }
    { 120 ;   ;Create Location for Plot;Boolean   ;InitValue=Yes;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Create Location for Plot }
    { 130 ;   ;Remark              ;Text50        ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Remark;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Generated in Company,Company,Project No.,Plot No.;
                                                   Clustered=Yes }
    {    ;Service Location No.                     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528800 : TextConst 'ENU=Service Locations already created. Deleting not allowed.';
      Text001@1100528801 : TextConst 'ENU=Not allowed on Plot Number.';
      ServiceSetup@1100529600 : Record 11012800;
      ServiceLocationJobHistory@1100529900 : Record 11072555;
      Text002@1100529901 : TextConst 'ENU=A Servicelocation does already exist: %1';

    PROCEDURE InitNewRecord@1100528802();
    BEGIN
      IF "Generated in Company" = '' THEN
        "Generated in Company" := COMPANYNAME;

      IF Company = '' THEN
        Company := COMPANYNAME;
    END;

    PROCEDURE CopyPlotNumbers@1100528804();
    VAR
      Plot@1100528803 : Record 11012500;
      JobServiceLocation@1100528802 : Record 11072219;
      ServiceLocation@1100528500 : Record 11012801;
    BEGIN
      Plot.CHANGECOMPANY(Company);
      Plot.SETRANGE("Project No.", "Project No.");
      Plot.SETFILTER("Plot No.", '<>%1', '');

      IF Plot.FINDSET THEN
        REPEAT
          IF NOT JobServiceLocation.GET("Generated in Company", Company, "Project No.", Plot."Plot No.") THEN BEGIN
            JobServiceLocation.INIT;
            ServiceLocation.RESET;
            IF NOT ((Plot."Post Code" = '') AND (Plot.City = '') AND (Plot.Address = '')) THEN BEGIN
              ServiceLocation.SETRANGE("Post Code",Plot."Post Code");
              ServiceLocation.SETRANGE(City,Plot.City);
              ServiceLocation.SETRANGE(Address,Plot.Address);
              IF ServiceLocation.FINDFIRST THEN BEGIN
                JobServiceLocation.Remark := STRSUBSTNO(Text002,ServiceLocation."No.");
                JobServiceLocation."Create Location for Plot" := FALSE;
              END;
            END;
            JobServiceLocation.Company := Company;
            JobServiceLocation."Project No." := "Project No.";
            JobServiceLocation."Plot No." := Plot."Plot No.";
            JobServiceLocation.INSERT(TRUE);
          END;
        UNTIL Plot.NEXT = 0;
    END;

    PROCEDURE DeletePlotNumbers@1100528803();
    VAR
      JobServiceLocation@1100528800 : Record 11072219;
    BEGIN
      JobServiceLocation.SETRANGE("Generated in Company", "Generated in Company");
      JobServiceLocation.SETRANGE(Company, Company);
      JobServiceLocation.SETRANGE("Project No.", "Project No.");
      JobServiceLocation.SETRANGE("Service Location No.", '');
      JobServiceLocation.SETFILTER("Plot No.", '<>%1', '');
      JobServiceLocation.DELETEALL;
    END;

    PROCEDURE GenerateServiceLocations@1100528800(VAR TempServiceLocation@1100528805 : TEMPORARY Record 11012801;IPreferredEmployee@1100528806 : Code[20];ISubContractor@1100528807 : Code[20]);
    VAR
      ServiceLocation@1100528800 : Record 11012801;
      JobServiceLocation@1100528801 : Record 11072219;
      Job@1100528802 : Record 11072003;
      Plot@1100528803 : Record 11012500;
      RecordRef@1100528804 : RecordRef;
      ServiceLocationJobHistory@1100529900 : Record 11072555;
      SLRemark@1100529901 : Text;
    BEGIN
      Job.CHANGECOMPANY(Company);
      Plot.CHANGECOMPANY(Company);
      Job.GET("Project No.");
      ServiceSetup.GET;

      JobServiceLocation.SETRANGE("Generated in Company", "Generated in Company");
      JobServiceLocation.SETRANGE(Company, Company);
      JobServiceLocation.SETRANGE("Project No.", "Project No.");
      JobServiceLocation.SETRANGE("Service Location No.", '');
      IF NOT "Create Location for Project" THEN
        JobServiceLocation.SETFILTER("Plot No.", '<>%1', '');
      IF JobServiceLocation.FINDSET THEN
        REPEAT
          IF JobServiceLocation."Plot No." <> '' THEN
            Plot.GET("Project No.", JobServiceLocation."Plot No.");

          IF NOT JobServiceLocation."Create Location for Plot" THEN BEGIN
            ServiceLocation.SETRANGE("Post Code",Plot."Post Code");
            ServiceLocation.SETRANGE(City,Plot.City);
            ServiceLocation.SETRANGE(Address,Plot.Address);
            IF ServiceLocation.FINDFIRST THEN BEGIN
              IF ServiceLocation."Project No." <> "Project No." THEN BEGIN
                ServiceLocationJobHistory.AddServiceLocationJobHistory(ServiceLocation);
                IF "Plot No." <> '' THEN
                  ServiceLocation."Plot No." := "Plot No.";
                ServiceLocation.VALIDATE("Project No.", "Project No.");
              END;
              JobServiceLocation."Service Location No." := ServiceLocation."No.";
              SLRemark := STRSUBSTNO(Text002,ServiceLocation."No.");
              IF JobServiceLocation.Remark =  SLRemark THEN
                JobServiceLocation.Remark := '';
            END ELSE
              ServiceLocation.INSERT(TRUE);
          END ELSE BEGIN
            ServiceLocation.INIT;
            ServiceLocation."No." := '';

            IF JobServiceLocation."Plot No." = '' THEN
              IF "Use Proj. No. as Serv. Loc. No" THEN
                ServiceLocation."No." := "Project No.";

            IF Company <> COMPANYNAME THEN
              ServiceLocation."Supplying Company" := Company;
            ServiceLocation.VALIDATE("Project No.", "Project No.");
            ServiceLocation."Plot No." := JobServiceLocation."Plot No.";
            ServiceLocation.INSERT(TRUE);
          END;

          UpdateServiceLocationFromJob(ServiceLocation, JobServiceLocation, Job, Plot, FALSE);

          ServiceLocation."Service Location Type" := TempServiceLocation."Service Location Type";
          ServiceLocation.Type := TempServiceLocation.Type;
          ServiceLocation."Territory Code" := TempServiceLocation."Territory Code";
          ServiceLocation.VALIDATE("Location Manager", TempServiceLocation."Location Manager");
          IF TempServiceLocation."Travel Cost Code" <> '' THEN
            ServiceLocation."Travel Cost Code" := TempServiceLocation."Travel Cost Code"
          ELSE
            ServiceLocation.EvaluatePostCodeGroup;
          ServiceLocation."Travel Distance" := TempServiceLocation."Travel Distance";
          ServiceLocation."Travel Time" := TempServiceLocation."Travel Time";
          ServiceLocation.VALIDATE("Global Dimension 1 Code", TempServiceLocation."Global Dimension 1 Code");
          ServiceLocation."Remote Control" := TempServiceLocation."Remote Control";
          ServiceLocation.VALIDATE("Warranty Company", TempServiceLocation."Warranty Company");
          ServiceLocation.VALIDATE("Warranty Project No.", TempServiceLocation."Warranty Project No.");
          ServiceLocation."Warranty Element No" := TempServiceLocation."Warranty Element No";
          ServiceLocation."Warranty Expires On" := TempServiceLocation."Warranty Expires On";
          ServiceLocation.VALIDATE(Tenant,Plot.Buyer);

          CreateServiceLocationPreferredEmployee(ServiceLocation."No.", IPreferredEmployee);
          ServiceLocation.MODIFY(TRUE);

          JobServiceLocation."Service Location No." := ServiceLocation."No.";
          IF JobServiceLocation."Service Location No." <> '' THEN
            JobServiceLocation."Create Location for Plot" := FALSE;
          JobServiceLocation.MODIFY;

          CreateSubcontractorServiceByProjectAuthority(JobServiceLocation);
          CreateServiceLocationSpecificationLine(ServiceLocation, JobServiceLocation);

          IF JobServiceLocation."Plot No." <> '' THEN
            RecordRef.GETTABLE(Plot)
          ELSE
            RecordRef.GETTABLE(Job);

          CreateDocumentLink(ServiceLocation, RecordRef, Company);

        UNTIL JobServiceLocation.NEXT = 0;
    END;

    PROCEDURE CreateDocumentLink@1100525005(ServiceLocation@1100525007 : Record 11012801;RecRef@1100525006 : RecordRef;CompName@1100525008 : Text[50]);
    VAR
      DocumentProperties@1100525005 : Record 11012746;
      DocumentLink@1100525004 : Record 11012747;
      DocumentLink2@1100529900 : Record 11012747;
      DocumentLinkMgt@1100525002 : Codeunit 11012401;
      DocLinkRID@1100525000 : ARRAY [5] OF RecordID;
    BEGIN
      DocumentLink.RESET;
      DocumentLink.SETCURRENTKEY("Record ID"); //mg, 05-07-11: M27801
      DocumentLink.SETRANGE("Table No.", RecRef.NUMBER);
      DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', RecRef.RECORDID()));
      DocumentLink.SETRANGE("Internal Company", CompName);
      IF DocumentLink.FINDSET THEN BEGIN
        REPEAT
          DocumentProperties.SETRANGE("No.", DocumentLink."Document No.");
          IF DocumentProperties.FINDFIRST THEN BEGIN
            RecRef.GETTABLE(ServiceLocation);
            DocLinkRID[2] := RecRef.RECORDID();
            DocumentLink2.SETRANGE("Document No.", DocumentLink."Document No.");
            DocumentLink2.SETRANGE("Table No.", RecRef.NUMBER);
            DocumentLink2.SETFILTER("Record ID", STRSUBSTNO('''%1''', RecRef.RECORDID()));
            DocumentLink2.SETRANGE("Internal Company", CompName);
            IF DocumentLink2.ISEMPTY THEN BEGIN
              DocumentLinkMgt.CreateDocumentLink(DocumentProperties, DocLinkRID);
              DocumentProperties.MODIFY(TRUE);
            END;
          END;
        UNTIL DocumentLink.NEXT = 0;
      END;
    END;

    PROCEDURE UpdateLocations@1100528801();
    VAR
      ServiceLocation@1100528804 : Record 11012801;
      JobServiceLocation@1100528803 : Record 11072219;
      Job@1100528802 : Record 11072003;
      Plot@1100528801 : Record 11012500;
      RecordRef@1100528800 : RecordRef;
      ProjectAuthority@1100529900 : Record 11020216;
      Contact@1100529902 : Record 5050;
      Vendor@1100529901 : Record 23;
      SubcontractorService@1100529903 : Record 11071789;
      EntryNo@1100529904 : Integer;
      AuthorityType@1100529905 : Record 11020215;
    BEGIN
      Job.CHANGECOMPANY(Company);
      Plot.CHANGECOMPANY(Company);
      Job.GET("Project No.");

      JobServiceLocation.SETRANGE("Generated in Company", "Generated in Company");
      JobServiceLocation.SETRANGE(Company, Company);
      JobServiceLocation.SETRANGE("Project No.", "Project No.");
      JobServiceLocation.SETFILTER("Service Location No.", '<>%1', '');
      IF JobServiceLocation.FINDSET THEN
        REPEAT
          IF JobServiceLocation."Plot No." <> '' THEN
            Plot.GET("Project No.", JobServiceLocation."Plot No.");
          IF ServiceLocation.GET(JobServiceLocation."Service Location No.") THEN BEGIN
            IF ServiceLocation."Project No." <> "Project No." THEN BEGIN
              ServiceLocationJobHistory.AddServiceLocationJobHistory(ServiceLocation);
              IF "Plot No." <> '' THEN
                ServiceLocation."Plot No." := "Plot No.";
              ServiceLocation."Project No." := "Project No.";
            END;
            UpdateServiceLocationFromJob(ServiceLocation, JobServiceLocation, Job, Plot, TRUE);
            ServiceLocation.MODIFY(TRUE);

            SubcontractorService.SETRANGE("Service Location No.", JobServiceLocation."Service Location No.");
            IF SubcontractorService.FINDSET THEN
              SubcontractorService.DELETEALL;

            ProjectAuthority.SETRANGE("Project No.", JobServiceLocation."Project No.");
            ProjectAuthority.SETRANGE("Use as Subc. on Serv. Location", TRUE);
            ProjectAuthority.SETFILTER("Contact No.", '<>%1', '');
            IF ProjectAuthority.FINDSET THEN
              REPEAT
                Contact.GET(ProjectAuthority."Contact No.");
                Contact.GetVendorByContact(Contact, Vendor);
                IF Vendor."No." <> '' THEN BEGIN
                  AuthorityType.GET(ProjectAuthority."Authority Type");
                  SubcontractorService.INIT;
                  SubcontractorService."Service Location No." := JobServiceLocation."Service Location No.";
                  SubcontractorService.Subcontractor := Vendor."No.";
                  SubcontractorService.Discipline := AuthorityType.Discipline;
                  SubcontractorService."Trade Speciality" := AuthorityType."Trade Speciality";
                  SubcontractorService."Apply To" := SubcontractorService."Apply To"::Call;
                  SubcontractorService."Entry No." := GetLastEntryNo(SubcontractorService,JobServiceLocation);
                  SubcontractorService.INSERT;
                  EntryNo += 1;
                END;
              UNTIL ProjectAuthority.NEXT = 0;
            END;

            IF JobServiceLocation."Plot No." <> '' THEN
              RecordRef.GETTABLE(Plot)
            ELSE
              RecordRef.GETTABLE(Job);

            CreateDocumentLink(ServiceLocation, RecordRef, Company);

            JobServiceLocation."Create Location for Plot" := FALSE;
        UNTIL JobServiceLocation.NEXT = 0;
    END;

    LOCAL PROCEDURE UpdateServiceLocationFromJob@1100528600(VAR IOServiceLocation@1100528602 : Record 11012801;IJobServiceLocation@1100528600 : Record 11072219;IJob@1100528601 : Record 11072003;IPlot@1100528603 : Record 11012500;UpdateMode@1100529900 : Boolean);
    VAR
      Contact@1100528604 : Record 5050;
      Customer@1100528605 : Record 18;
    BEGIN
      IF (NOT UpdateMode) OR (UpdateMode AND (IOServiceLocation.Description = '')) THEN
        IOServiceLocation.VALIDATE(Description, COPYSTR(IJob.Description,1,MAXSTRLEN(IOServiceLocation.Description)));
      IF (NOT UpdateMode) OR (UpdateMode AND (IOServiceLocation.Type = '')) THEN
        IOServiceLocation.Type := IJob.Type;
      CASE IPlot."Buy/Rent" OF
        IPlot."Buy/Rent"::Sale:
          BEGIN
            IF IJobServiceLocation."Plot No." <> '' THEN BEGIN
              IF Contact.GET(IPlot.Buyer) THEN
                IF Contact.GetCustomerByContact(Contact, Customer) THEN
                  IF Customer."No." <> '' THEN
                     IOServiceLocation.VALIDATE("Customer No.", Customer."No.");
            END ELSE
              IOServiceLocation.VALIDATE("Customer No.", IJob."Bill-to Customer No.");
          END;
        IPlot."Buy/Rent"::Rent:
          IOServiceLocation.VALIDATE("Customer No.", IJob."Bill-to Customer No.");
      END;
      IF (IJobServiceLocation."Plot No." <> '') AND (IPlot.Address + IPlot.City + IPlot."Post Code" <> '') THEN BEGIN
        IOServiceLocation.Address := IPlot.Address;
        IOServiceLocation.City := IPlot.City;
        IOServiceLocation."Post Code" := IPlot."Post Code";
      END ELSE BEGIN
        IOServiceLocation.Address := IJob.Address;
        IOServiceLocation."Address 2" := IJob."Address 2";
        IOServiceLocation.City := IJob.City;
        IOServiceLocation."Post Code" := IJob."Post Code";
      END;
      IF IJobServiceLocation."Plot No." <> '' THEN BEGIN
        IPlot.CALCFIELDS("Buyer Phone", "Buyer Phone 2", "Buyer Mobile Phone", "Buyer E-Mail");
        IOServiceLocation."Phone No." := IPlot."Buyer Phone";
        IOServiceLocation."Phone No. 2" := IPlot."Buyer Phone 2";
        IOServiceLocation."Mobile Phone No." := IPlot."Buyer Mobile Phone";
        IOServiceLocation."E-Mail" := IPlot."Buyer E-Mail";
      END;
      IOServiceLocation.County := IJob.County;
      IOServiceLocation."Country/Region Code":= IJob."Country/Region Code";
      IOServiceLocation."Territory Code" := IJob."Territory Code";
    END;

    LOCAL PROCEDURE CreateSubcontractorServiceByProjectAuthority@1100528601(IJobServiceLocation@1100528600 : Record 11072219);
    VAR
      ProjectAuthority@1100528602 : Record 11020216;
      AuthorityType@1100528603 : Record 11020215;
      SubcontractorService@1100528604 : Record 11071789;
      Contact@1100528605 : Record 5050;
      Vendor@1100528606 : Record 23;
      EntryNo@1100527300 : Integer;
    BEGIN
      ProjectAuthority.CHANGECOMPANY(IJobServiceLocation.Company);
      AuthorityType.CHANGECOMPANY(IJobServiceLocation.Company);
      Contact.CHANGECOMPANY(IJobServiceLocation.Company);

      ProjectAuthority.SETRANGE("Project No.", IJobServiceLocation."Project No.");
      ProjectAuthority.SETRANGE("Use as Subc. on Serv. Location", TRUE);
      ProjectAuthority.SETFILTER("Contact No.", '<>%1', '');
      IF ProjectAuthority.FINDSET THEN
        REPEAT
          AuthorityType.GET(ProjectAuthority."Authority Type");
          CLEAR(SubcontractorService);
          SubcontractorService."Entry No." := EntryNo + 1;
          SubcontractorService."Service Location No." := IJobServiceLocation."Service Location No.";
          SubcontractorService.Discipline := AuthorityType.Discipline;
          SubcontractorService."Trade Speciality" := AuthorityType."Trade Speciality";
          SubcontractorService."Apply To" := SubcontractorService."Apply To"::Call;
          Contact.GET(ProjectAuthority."Contact No.");
          Contact.GetVendorByContact(Contact, Vendor);
          SubcontractorService.Subcontractor := Vendor."No.";
          SubcontractorService.INSERT(TRUE);
          EntryNo += 1;
        UNTIL ProjectAuthority.NEXT = 0;
    END;

    LOCAL PROCEDURE CreateServiceLocationPreferredEmployee@1100528805(IServiceLocation@1100528802 : Code[20];IResourceWOP@1100528801 : Code[20]);
    VAR
      PreferredEmployee@1100528800 : Record 11012843;
    BEGIN
      IF NOT PreferredEmployee.GET('','',IServiceLocation,'','','','',IResourceWOP) THEN BEGIN
        PreferredEmployee.VALIDATE("Service Location No.", IServiceLocation);
        PreferredEmployee.VALIDATE("Preferred Employee Code", IResourceWOP);
        PreferredEmployee.INSERT(TRUE);
      END;
    END;

    LOCAL PROCEDURE CreateServiceLocationSpecificationLine@1100529600(ServiceLocation@1100529602 : Record 11012801;JobServiceLocation@1100529601 : Record 11072219);
    VAR
      LocationSpecificationLine@1100529600 : Record 11071961;
      Delivery@1100529603 : Record 11012507;
      LastLineNo@1100529604 : Integer;
    BEGIN
      IF ServiceSetup."Spec. Code Final Delivery Date" = '' THEN
        EXIT;

      LocationSpecificationLine.SETRANGE("Service Location No.", ServiceLocation."No.");
      IF LocationSpecificationLine.FINDLAST THEN
        LastLineNo := LocationSpecificationLine."Line No.";

      LocationSpecificationLine.INIT;
      LocationSpecificationLine."Service Location No." := ServiceLocation."No.";
      LocationSpecificationLine."Line No." := LastLineNo + 10000;
      LocationSpecificationLine.Type := LocationSpecificationLine.Type::Line;
      LocationSpecificationLine.VALIDATE("Specification Code", ServiceSetup."Spec. Code Final Delivery Date");
      LocationSpecificationLine.VALIDATE("Field Type", LocationSpecificationLine."Field Type"::Date);
      LocationSpecificationLine.INSERT;

      Delivery.CHANGECOMPANY(JobServiceLocation.Company);
      Delivery.SETRANGE("Project No.", JobServiceLocation."Project No.");
      Delivery.SETRANGE("Plot No.", JobServiceLocation."Plot No.");
      Delivery.SETRANGE("Final Delivery", TRUE);
      IF Delivery.ISEMPTY THEN
        EXIT;

      Delivery.FINDLAST;
      LocationSpecificationLine.VALIDATE("Value (Date)", DT2DATE(Delivery."Delivery Date"));
      LocationSpecificationLine.MODIFY;
    END;

    PROCEDURE GetLastEntryNo@1100529904(SubcontractorService@1100529900 : Record 11071789;JobServiceLocation@1100529901 : Record 11072219) : Integer;
    BEGIN
      SubcontractorService.SETRANGE("Service Location No.",JobServiceLocation."Service Location No.");
      SubcontractorService.SETCURRENTKEY("Entry No.");
      IF SubcontractorService.FINDLAST THEN
        EXIT(SubcontractorService."Entry No." + 1)
      ELSE
        EXIT(0);
    END;

    BEGIN
    END.
  }
}

