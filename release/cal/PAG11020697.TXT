OBJECT Page 11020697 Occ. Prognosis / Level
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Besetzungsprognose/Ebene;
               ENU=Occupation Prognosis / Level;
               NLD=Bezettingsprognose per niveau];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    UsageCategory=Tasks;
    OnOpenPage=BEGIN
                 MATRIX_MaximumSetLength := 12;
                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                 UpdateMatrixSubForm;
               END;

    ActionList=ACTIONS
    {
      { 1100528608;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100528609;1 ;Action    ;
                      Name=Overall Occupation Prognosis;
                      CaptionML=[DEU=Belegungsprognose insgesamt;
                                 ENU=Overall Occupation Prognosis;
                                 NLD=Totale bezettingsprognose];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CalculateRemainingUsage;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TotalOccupationPrognosis@1100529600 : Page 11020683;
                               BEGIN
                                 CLEAR(TotalOccupationPrognosis);
                                 TotalOccupationPrognosis.SetFilterOptions(PeriodType, DateFilter);
                                 TotalOccupationPrognosis.RUN;
                               END;
                                }
      { 1100528610;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100529604;1 ;Action    ;
                      Name=Previous Set;
                      CaptionML=[DEU=Vorheriger Satz;
                                 ENU=Previous Set;
                                 NLD=Vorige Set];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(MATRIX_Step::Previous);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100529603;1 ;Action    ;
                      Name=Previous Column;
                      CaptionML=[DEU=Vorherige Spalte;
                                 ENU=Previous Column;
                                 NLD=Vorige Kolom];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(MATRIX_Step::PreviousColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100529602;1 ;Action    ;
                      Name=Next Column;
                      CaptionML=[DEU=N„chste Spalte;
                                 ENU=Next Column;
                                 NLD=Volgende Kolom];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(MATRIX_Step::NextColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100529601;1 ;Action    ;
                      Name=Next Set;
                      CaptionML=[DEU=N„chster Satz;
                                 ENU=Next Set;
                                 NLD=Volgende Set];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(MATRIX_Step::Next);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528611;1 ;Action    ;
                      CaptionML=[DEU=&Kopieren;
                                 ENU=&Copy;
                                 NLD=&Kopieer;
                                 NOR=&Kopier;
                                 SVE=&Kopiera];
                      Image=Copy;
                      OnAction=VAR
                                 CapacityNeedDetail@1100528600 : Record 11012884;
                                 CopyCapacityNeedDetailsREP@1100528601 : Report 11072018;
                               BEGIN
                                 CapacityNeedDetail.SETRANGE(Type, CapacityNeedDetail.Type::Occupation);
                                 CASE OccupationType OF
                                   OccupationType::Employee:
                                     BEGIN
                                       CapacityNeedDetail.SETRANGE("Source Code", OccupationSourceCode);
                                       CapacityNeedDetail."Source Code" := OccupationSourceCode;
                                     END;
                                   OccupationType::Department:
                                     BEGIN
                                       CapacityNeedDetail.SETRANGE("Source Code", '');
                                       CapacityNeedDetail.SETRANGE("Global Dimension 1 Code", OccupationSourceCode);
                                       CapacityNeedDetail.SETRANGE("Territory Code", '');
                                     END;
                                   OccupationType::Territory:
                                     BEGIN
                                       CapacityNeedDetail.SETRANGE("Source Code", '');
                                       CapacityNeedDetail.SETRANGE("Global Dimension 1 Code", '');
                                       CapacityNeedDetail.SETRANGE("Territory Code", OccupationSourceCode);
                                     END;
                                 END;
                                 CopyCapacityNeedDetailsREP.SETTABLEVIEW(CapacityNeedDetail);
                                 CopyCapacityNeedDetailsREP.SetType(CapacityNeedDetail.Type::Occupation);
                                 CopyCapacityNeedDetailsREP.SetToPeriod(PeriodType, MATRIX_MatrixRecords[1]."Period Start");
                                 CopyCapacityNeedDetailsREP.SetOccupationType(OccupationType);
                                 CopyCapacityNeedDetailsREP.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528600;;Container;
                ContainerType=ContentArea }

    { 1100528601;1;Group  ;
                CaptionML=[DEU=Allgemein;
                           ENU=General;
                           NLD=Algemeen;
                           NOR=Generell;
                           SVE=Allm„nt];
                GroupType=Group }

    { 1100528612;2;Field  ;
                CaptionML=[DEU=Ebene;
                           ENU=Level;
                           NLD=Niveau;
                           NOR=Niv†;
                           SVE=Niv†];
                OptionCaptionML=[DEU=Mitarbeiter, Globale Dimension 1, Gebiet;
                                 ENU=Employee,Global Dimension 1,Territory;
                                 NLD=Werknemer,Kostenplaats,Regio];
                SourceExpr=OccupationType;
                OnValidate=BEGIN
                             OccupationSourceCode := '';
                             OccupationSourceDescription := '';
                             ValidateOccupationSourceCode;
                           END;
                            }

    { 1100528602;2;Field  ;
                SourceExpr=OccupationSourceCode;
                CaptionClass=GetOccupationSourceCodeCaption;
                OnValidate=BEGIN
                             ValidateOccupationSourceCode;
                           END;

                OnLookup=VAR
                           Employee@1100528600 : Record 5200;
                           Territory@1100528602 : Record 286;
                           DimensionValue@1100528603 : Record 349;
                         BEGIN
                           CASE OccupationType OF
                             OccupationType::Employee:
                               BEGIN
                                 IF OccupationSourceCode <> '' THEN
                                   IF NOT Employee.GET(OccupationSourceCode) THEN
                                     Employee.INIT;
                                 IF PAGE.RUNMODAL(0, Employee) = ACTION::LookupOK THEN
                                   OccupationSourceCode := Employee."No.";
                               END;
                             OccupationType::Department:
                               BEGIN
                                 DimensionValue.SETRANGE("Global Dimension No.", 1);
                                 DimensionValue.SETRANGE(Code, OccupationSourceCode);
                                 IF DimensionValue.FINDFIRST THEN;
                                 DimensionValue.SETRANGE(Code);
                                 IF PAGE.RUNMODAL(0, DimensionValue) = ACTION::LookupOK THEN
                                   OccupationSourceCode := DimensionValue.Code;
                               END;
                             OccupationType::Territory:
                               BEGIN
                                 IF OccupationSourceCode <> '' THEN
                                   IF NOT Territory.GET(OccupationSourceCode) THEN
                                     Territory.INIT;
                                 IF PAGE.RUNMODAL(0, Territory) = ACTION::LookupOK THEN
                                   OccupationSourceCode := Territory.Code;
                               END;
                           END;
                           ValidateOccupationSourceCode;
                         END;
                          }

    { 1100528603;2;Field  ;
                SourceExpr=OccupationSourceDescription;
                CaptionClass=GetOccupationSourceDescriptionCaption;
                Editable=FALSE }

    { 1100529600;2;Field  ;
                CaptionML=[DEU=Anzeigen nach;
                           ENU=View by;
                           NLD=Weergeven per];
                OptionCaptionML=[DEU=Tag,Woche,Monat,Quartal,Jahr,Buchhaltungsperiode;
                                 ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 NLD=Dag,Week,Maand,Kwartaal,Jaar,Boekingsperiode];
                SourceExpr=PeriodType;
                Importance=Promoted;
                OnValidate=BEGIN
                             SetColumns(MATRIX_Step::Initial);
                             UpdateMatrixSubForm;
                           END;
                            }

    { 1100528605;1;Part   ;
                Name=MATRIX;
                CaptionML=[DEU=Belegungsprognose;
                           ENU=Occupation Prognosis;
                           NLD=Bezettingsprognose;
                           NOR=Yrkesprognose;
                           SVE=Yrkesprognos];
                PagePartID=Page11229227;
                PartType=Page }

    { 1100528606;;Container;
                ContainerType=FactBoxArea }

    { 1100528607;1;Part   ;
                Name=EmplOccupationFB;
                CaptionML=[DEU=Gesamt;
                           ENU=Total;
                           NLD=Totaal;
                           NOR=Totalt;
                           SVE=Totalt];
                SubPageLink=No.=FIELD(Employee Filter);
                PagePartID=Page11229229;
                ProviderID=1100528605;
                PartType=Page }

  }
  CODE
  {
    VAR
      MATRIX_MatrixRecords@1100528609 : ARRAY [32] OF Record 2000000007;
      MATRIX_MaximumSetLength@1100528608 : Integer;
      MATRIX_PrimKeyRecInCurrSet@1100528607 : Text[1024];
      MATRIX_CaptionSet@1100528606 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1100528605 : Text[250];
      MATRIX_CurrSetLength@1100528604 : Integer;
      MATRIX_Step@1100528603 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec';
      PeriodType@1100528602 : 'Day,Week,Month,Quarter,Year';
      DateFilter@1100528611 : Text;
      OccupationType@1100528612 : 'Employee,Department,Territory';
      OccupationSourceCode@1100528613 : Code[20];
      Text000@1100528614 : TextConst 'DEU=Department;ENU=Department;NLD=Kostenplaats;NOR=Avdeling;SVE=Department';
      OccupationSourceDescription@1100528615 : Text;
      Text001@1100528616 : TextConst 'DEU=Name Mitarbeiter;ENU=Employee Name;NLD=Werknemernaam;NOR=Navn p† ansatt;SVE=Namn p† anst„lld';
      Text002@1100528617 : TextConst 'DEU=Abteilungsbeschreibung;ENU=Department Description;NLD=Kostenplaatsomschrijving';
      Text003@1100528618 : TextConst 'DEU=Beschreibung Gebiet;ENU=Territory Description;NLD=Regio omschrijving;NOR=Omr†debeskrivelse;SVE=Markbeskrivning';

    LOCAL PROCEDURE SetPeriodFilter@1100485000();
    VAR
      Calendar@1100529600 : Record 2000000007;
      i@1100529602 : Integer;
    BEGIN
      IF DateFilter <> '' THEN BEGIN
        Calendar.SETRANGE("Period Type", PeriodType);
        Calendar.SETFILTER("Period Start", DateFilter);
        IF Calendar.ISEMPTY THEN
          Calendar.SETFILTER("Period Start", '>=%1', WORKDATE);
        IF Calendar.FINDFIRST THEN BEGIN
          Calendar.SETRANGE("Period Start");
          IF (Calendar."Period Start" > MATRIX_MatrixRecords[1]."Period Start") AND (MATRIX_MatrixRecords[1]."Period Start" <> 0D) THEN
            IF Calendar.NEXT(-1) <> 0 THEN ;
          DateFilter := STRSUBSTNO('%1..', Calendar."Period Start");
          i := 1;
          WHILE (i < MATRIX_MaximumSetLength - 1) AND (Calendar.NEXT <> 0) DO
            i += 1;
          DateFilter := DateFilter + STRSUBSTNO('%1', NORMALDATE(Calendar."Period End"));
        END;
      END;

      IF DateFilter = '' THEN BEGIN
        PeriodType := PeriodType::Month;
        DateFilter := STRSUBSTNO('%1..%2', DMY2DATE(1, 1,DATE2DMY(WORKDATE,3)), DMY2DATE(31, 12, DATE2DMY(WORKDATE,3)));
      END;
    END;

    PROCEDURE SetOccupationFilter@1100528600(IOccupationType@1100528600 : 'Employee,Department,Territory';IOccupationSourceCode@1100528601 : Code[20]);
    BEGIN
      OccupationType := IOccupationType;
      OccupationSourceCode := IOccupationSourceCode;
      ValidateOccupationSourceCode;
    END;

    LOCAL PROCEDURE MATRIX_GenerateColumnCaptions@1152(MATRIX_SetWanted@1000 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec');
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MATRIX_MatrixRecords);
      SetColumns(MATRIX_SetWanted);
    END;

    LOCAL PROCEDURE UpdateMatrixSubForm@7();
    BEGIN
      CurrPage.MATRIX.PAGE.Load(
        MATRIX_CaptionSet, MATRIX_MatrixRecords, MATRIX_CurrSetLength, OccupationType, OccupationSourceCode);
    END;

    LOCAL PROCEDURE GetOccupationSourceCodeCaption@1100528601() : Text;
    VAR
      Employee@1100528600 : Record 5200;
      Territory@1100528601 : Record 286;
    BEGIN
      CASE OccupationType OF
        OccupationType::Employee:
          EXIT(Employee.TABLECAPTION);
        OccupationType::Department:
          EXIT(Text000);
        OccupationType::Territory:
          EXIT(Territory.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE GetOccupationSourceDescriptionCaption@1100528603() : Text;
    BEGIN
      CASE OccupationType OF
        OccupationType::Employee:
          EXIT(Text001);
        OccupationType::Department:
          EXIT(Text002);
        OccupationType::Territory:
          EXIT(Text003);
      END;
    END;

    LOCAL PROCEDURE ValidateOccupationSourceCode@1100528602();
    VAR
      Employee@1100528602 : Record 5200;
      DimensionValue@1100528601 : Record 349;
      Territory@1100528600 : Record 286;
    BEGIN
      CASE OccupationType OF
        OccupationType::Employee:
          BEGIN
            IF OccupationSourceCode <> '' THEN
              Employee.GET(OccupationSourceCode);
            OccupationSourceDescription := Employee."Full Name";
          END;
        OccupationType::Department:
          BEGIN
            IF OccupationSourceCode <> '' THEN BEGIN
              DimensionValue.SETRANGE("Global Dimension No.", 1);
              DimensionValue.SETRANGE(Code, OccupationSourceCode);
              DimensionValue.FINDFIRST;
            END;
            OccupationSourceDescription := DimensionValue.Name;
          END;
        OccupationType::Territory:
          BEGIN
            IF OccupationSourceCode <> '' THEN
              Territory.GET(OccupationSourceCode);
            OccupationSourceDescription := Territory.Name;
          END;
      END;
      CurrPage.EmplOccupationFB.PAGE.SetOccupationFilter(OccupationType, OccupationSourceCode);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE SetColumns@1100529600(MATRIX_SetWanted@1100529600 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec');
    VAR
      MatrixManagement@1100529601 : Codeunit 9200;
      DateFilterLoc@1100529602 : Text;
    BEGIN
      SetPeriodFilter;
      IF MATRIX_SetWanted = MATRIX_SetWanted::Initial THEN
        DateFilterLoc := DateFilter;

      MatrixManagement.GeneratePeriodMatrixData(
        MATRIX_SetWanted,
        MATRIX_MaximumSetLength,
        FALSE, // UseNameForCaption
        PeriodType,
        DateFilterLoc,
        MATRIX_PrimKeyRecInCurrSet,
        MATRIX_CaptionSet,
        MATRIX_CaptionRange,
        MATRIX_CurrSetLength,
        MATRIX_MatrixRecords);

      CurrPage.EmplOccupationFB.PAGE.SetPeriodFilter(DateFilter);
    END;

    BEGIN
    END.
  }
}

