OBJECT Codeunit 11012804 Copy Object
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text010@11012027 : TextConst 'DEU=Objekt von #1##########\\;ENU=Object from        #1##########\\;NLD=Object van           #1##########\\;NOR=Objekt fra #1##########\\';
      Text011@11012028 : TextConst 'DEU=Objekt zu #2##########\\;ENU=Object to           #2##########\\;NLD=Object naar         #2##########\\;NOR=Objekt til #2##########\\';
      Text014@11012031 : TextConst 'DEU=Besch„ftigt mit #3################ @4@@@@@@@@@@@@@;ENU=Busy with             #3################ @4@@@@@@@@@@@@@;NLD=Bezig met             #3################ @4@@@@@@@@@@@@@;NOR=Opptatt med #3################ @4@@@@@@@@@@@@@;SVE=Upptagen med          #3################ @4@@@@@@@@@@@@@';
      Status@11012009 : Dialog;
      StatusBln@11012010 : Boolean;

    PROCEDURE CopyStandardObject@1100525000(IObjectFrom@11012000 : Code[20];IObjectTo@11012001 : Code[20];IObjectToTxt@11012002 : Text[100];IObjectToTxt2@1100528607 : Text[50]);
    VAR
      StandardObject@1100525000 : Record 11020334;
      ToStandardObject@1100528603 : Record 11020334;
      MaintenanceSchemeVersion@1100528602 : Record 11071743;
      ToMaintenanceSchemeVersion@1100528605 : Record 11071743;
      MaintSchemeVersionLine@1100525001 : Record 11071744;
      ToMaintSchemeVersionLine@1100528604 : Record 11071744;
      CommentLine@1100525002 : Record 97;
      ToCommentLine@1100528606 : Record 97;
      DefMaintSchServObject@1100528600 : Record 11071703;
      ToDefMaintSchServObject@1100528601 : Record 11071703;
      ServiceInspectionVersion@1100528608 : Record 11071750;
      ToServiceInspectionVersion@1100528609 : Record 11071750;
      ServiceInspectionLine@1100528610 : Record 11071751;
      ToServiceInspectionLine@1100528611 : Record 11071751;
      ObjectSpecificationLine@1100528614 : Record 11071781;
      ToObjectSpecificationLine@1100528615 : Record 11071781;
    BEGIN
      StatusBln := FALSE;
      IF NOT StatusBln THEN BEGIN
        OpenDialog;
        Status.UPDATE(1, IObjectFrom);
        Status.UPDATE(2, IObjectTo);
      END;

      IF StandardObject.GET(IObjectFrom) THEN BEGIN
        ToStandardObject := StandardObject;
        ToStandardObject."No." := IObjectTo;
        ToStandardObject.VALIDATE(Description, IObjectToTxt);
        ToStandardObject.VALIDATE("Description 2", IObjectToTxt2);
        ToStandardObject.INSERT(TRUE);
      END;

      DefMaintSchServObject.SETRANGE("Object No.", IObjectFrom);
      IF DefMaintSchServObject.FINDSET THEN
        REPEAT
          ToDefMaintSchServObject := DefMaintSchServObject;
          ToDefMaintSchServObject."Object No." := IObjectTo;
          ToDefMaintSchServObject.INSERT(TRUE);
        UNTIL DefMaintSchServObject.NEXT = 0;

      MaintenanceSchemeVersion.SETFILTER("Line Type", '%1|%2|%3',
        MaintenanceSchemeVersion."Line Type"::"Standard Object",
        MaintenanceSchemeVersion."Line Type"::"Standard Object Deinstallation",
        MaintenanceSchemeVersion."Line Type"::"Standard Object Installation");
      MaintenanceSchemeVersion.SETRANGE(Code, IObjectFrom);
      IF MaintenanceSchemeVersion.FINDSET THEN
        REPEAT
          ToMaintenanceSchemeVersion := MaintenanceSchemeVersion;
          ToMaintenanceSchemeVersion.Code := IObjectTo;
          ToMaintenanceSchemeVersion.INSERT(TRUE);
        UNTIL MaintenanceSchemeVersion.NEXT = 0;

      MaintSchemeVersionLine.SETFILTER("Line Type", '%1|%2|%3',
        MaintSchemeVersionLine."Line Type"::"Standard Object",
        MaintSchemeVersionLine."Line Type"::"Standard Object Deinstallation",
        MaintSchemeVersionLine."Line Type"::"Standard Object Installation");
      MaintSchemeVersionLine.SETRANGE("Type Code", IObjectFrom);
      IF MaintSchemeVersionLine.FINDSET THEN
        REPEAT
          ToMaintSchemeVersionLine := MaintSchemeVersionLine;
          ToMaintSchemeVersionLine."Type Code" := IObjectTo;
          ToMaintSchemeVersionLine.INSERT(TRUE);
        UNTIL MaintSchemeVersionLine.NEXT = 0;

      CommentLine.SETRANGE("Table Name", CommentLine."Table Name"::"Standard Object");
      CommentLine.SETRANGE("No.", IObjectFrom);
      IF CommentLine.FINDSET THEN
        REPEAT
          ToCommentLine := CommentLine;
          ToCommentLine."No." := IObjectTo;
          ToCommentLine.INSERT;
        UNTIL CommentLine.NEXT = 0;

      ServiceInspectionVersion.SETFILTER("Inspection Type", '%1|%2',
        ServiceInspectionVersion."Inspection Type"::"Standard Object",
        ServiceInspectionVersion."Inspection Type"::"Standard Object (Calls)");
      ServiceInspectionVersion.SETRANGE(Code, IObjectFrom);
      IF ServiceInspectionVersion.FINDSET THEN
        REPEAT
          ToServiceInspectionVersion := ServiceInspectionVersion;
          ToServiceInspectionVersion.Code := IObjectTo;
          ToServiceInspectionVersion.INSERT(TRUE);
        UNTIL ServiceInspectionVersion.NEXT = 0;

      ServiceInspectionLine.SETFILTER("Inspection Type", '%1|%2',
        ServiceInspectionLine."Inspection Type"::"Standard Object",
        ServiceInspectionLine."Inspection Type"::"Standard Object (Calls)");
      ServiceInspectionLine.SETRANGE(Code, IObjectFrom);
      IF ServiceInspectionLine.FINDSET THEN
        REPEAT
          ToServiceInspectionLine := ServiceInspectionLine;
          ToServiceInspectionLine.Code := IObjectTo;
          ToServiceInspectionLine.INSERT(TRUE);
        UNTIL ServiceInspectionLine.NEXT = 0;

      ObjectSpecificationLine.SETRANGE("Specification Type", ObjectSpecificationLine."Specification Type"::"Standard Object");
      ObjectSpecificationLine.SETRANGE(Code, IObjectFrom);
      IF ObjectSpecificationLine.FINDSET THEN
        REPEAT
          ToObjectSpecificationLine := ObjectSpecificationLine;
          ToObjectSpecificationLine.Code := IObjectTo;
          ToObjectSpecificationLine.INSERT(TRUE);
        UNTIL ObjectSpecificationLine.NEXT = 0;

      IF StatusBln THEN
        Status.CLOSE;
    END;

    PROCEDURE CopyObject@1100528600(IObjectFrom@11012000 : Code[20];IObjectTo@11012001 : Code[20];ICopySubcontractors@1100528613 : Boolean;ICopyMaterialInventory@1100528616 : Boolean;ICopyConsumptionComponent@1100528617 : Boolean;ICopyReplacementActivities@1100528620 : Boolean;ICopyCommentLines@1100528621 : Boolean;ICopyInspectionLines@1100528622 : Boolean;ICopySpecification@1100528623 : Boolean;ICopyDocuments@1100528624 : Boolean);
    VAR
      ServiceObject@1100525000 : Record 11071691;
      ToServiceObject@1100528603 : Record 11071691;
      MaintenanceSchemeVersion@1100528602 : Record 11071743;
      ToMaintenanceSchemeVersion@1100528605 : Record 11071743;
      MaintSchemeVersionLine@1100525001 : Record 11071744;
      ToMaintSchemeVersionLine@1100528604 : Record 11071744;
      CommentLine@1100525002 : Record 97;
      ToCommentLine@1100528606 : Record 97;
      ServiceInspectionVersion@1100528608 : Record 11071750;
      ToServiceInspectionVersion@1100528609 : Record 11071750;
      ServiceInspectionLine@1100528610 : Record 11071751;
      ToServiceInspectionLine@1100528611 : Record 11071751;
      ObjectSpecificationLine@1100528614 : Record 11071781;
      ToObjectSpecificationLine@1100528615 : Record 11071781;
      SubcontractorService@1100528600 : Record 11071789;
      ToSubcontractorService@1100528601 : Record 11071789;
      ObjectMaterialInventory@1100528607 : Record 11071712;
      ToObjectMaterialInventory@1100528612 : Record 11071712;
      ObjectConsumptionComponent@1100528618 : Record 11071969;
      ToObjectConsumptionComponent@1100528619 : Record 11071969;
      DocumentLinkManagement@1100528625 : Codeunit 11012401;
      FromRecRef@1100528626 : RecordRef;
      ToRecRef@1100528627 : RecordRef;
    BEGIN
      StatusBln := FALSE;
      IF NOT StatusBln THEN BEGIN
        OpenDialog;
        Status.UPDATE(1, IObjectFrom);
        Status.UPDATE(2, IObjectTo);
      END;

      IF ServiceObject.GET(IObjectFrom) THEN BEGIN
        IF ServiceObject.Picture.HASVALUE THEN
          ServiceObject.CALCFIELDS(Picture);

        FromRecRef.GETTABLE(ServiceObject);
        ToServiceObject := ServiceObject;
        ToServiceObject."No." := IObjectTo;
        ToServiceObject.INSERT(TRUE);
        ToRecRef.GETTABLE(ToServiceObject);
        IF IObjectTo = '' THEN
          IObjectTo := ToServiceObject."No.";
      END;

      IF ICopyReplacementActivities THEN BEGIN
        MaintenanceSchemeVersion.SETRANGE("Line Type", MaintenanceSchemeVersion."Line Type"::"Object Installation");
        MaintenanceSchemeVersion.SETRANGE(Code, IObjectFrom);
        IF MaintenanceSchemeVersion.FINDSET THEN
          REPEAT
            ToMaintenanceSchemeVersion := MaintenanceSchemeVersion;
            ToMaintenanceSchemeVersion.Code := IObjectTo;
            ToMaintenanceSchemeVersion.INSERT(TRUE);
          UNTIL MaintenanceSchemeVersion.NEXT = 0;

        MaintSchemeVersionLine.SETRANGE("Line Type", MaintSchemeVersionLine."Line Type"::"Object Installation");
        MaintSchemeVersionLine.SETRANGE("Type Code", IObjectFrom);
        IF MaintSchemeVersionLine.FINDSET THEN
          REPEAT
            ToMaintSchemeVersionLine := MaintSchemeVersionLine;
            ToMaintSchemeVersionLine."Type Code" := IObjectTo;
            ToMaintSchemeVersionLine.INSERT(TRUE);
          UNTIL MaintSchemeVersionLine.NEXT = 0;
      END;

      IF ICopyCommentLines THEN BEGIN
        CommentLine.SETRANGE("Table Name", CommentLine."Table Name"::ServObject);
        CommentLine.SETRANGE("No.", IObjectFrom);
        IF CommentLine.FINDSET THEN
          REPEAT
            ToCommentLine := CommentLine;
            ToCommentLine."No." := IObjectTo;
            ToCommentLine.INSERT;
          UNTIL CommentLine.NEXT = 0;
      END;

      IF ICopyInspectionLines THEN BEGIN
        ServiceInspectionVersion.SETRANGE("Inspection Type", ServiceInspectionVersion."Inspection Type"::"Object (Calls)");
        ServiceInspectionVersion.SETRANGE(Code, IObjectFrom);
        IF ServiceInspectionVersion.FINDSET THEN
          REPEAT
            ToServiceInspectionVersion := ServiceInspectionVersion;
            ToServiceInspectionVersion.Code := IObjectTo;
            ToServiceInspectionVersion.INSERT(TRUE);
          UNTIL ServiceInspectionVersion.NEXT = 0;

        ServiceInspectionLine.SETRANGE("Inspection Type", ServiceInspectionLine."Inspection Type"::"Object (Calls)");
        ServiceInspectionLine.SETRANGE(Code, IObjectFrom);
        IF ServiceInspectionLine.FINDSET THEN
          REPEAT
            ToServiceInspectionLine := ServiceInspectionLine;
            ToServiceInspectionLine.Code := IObjectTo;
            ToServiceInspectionLine.INSERT(TRUE);
          UNTIL ServiceInspectionLine.NEXT = 0;
      END;

      IF ICopySpecification THEN BEGIN
        ObjectSpecificationLine.SETRANGE("Specification Type", ObjectSpecificationLine."Specification Type"::Object);
        ObjectSpecificationLine.SETRANGE(Code, IObjectFrom);
        IF ObjectSpecificationLine.FINDSET THEN
          REPEAT
            ToObjectSpecificationLine := ObjectSpecificationLine;
            ToObjectSpecificationLine.Code := IObjectTo;
            ToObjectSpecificationLine.INSERT(TRUE);
          UNTIL ObjectSpecificationLine.NEXT = 0;
      END;

      IF ICopySubcontractors THEN BEGIN
        SubcontractorService.SETRANGE("Service Contract No.", '');
        SubcontractorService.SETRANGE("Complex Code", '');
        SubcontractorService.SETRANGE("Service Location No.", '');
        SubcontractorService.SETRANGE("Object No.", IObjectFrom);
        SubcontractorService.SETRANGE("Maintenance Scheme Code", '');
        IF SubcontractorService.FINDSET THEN
          REPEAT
            ToSubcontractorService := SubcontractorService;
            ToSubcontractorService."Object No." := IObjectTo;
            ToSubcontractorService.INSERT(TRUE);
          UNTIL SubcontractorService.NEXT = 0;
      END;

      IF ICopyMaterialInventory THEN BEGIN
        ObjectMaterialInventory.SETRANGE(Type, ObjectMaterialInventory.Type::Object);
        ObjectMaterialInventory.SETRANGE(Code, IObjectFrom);
        IF ObjectMaterialInventory.FINDSET THEN
          REPEAT
            ToObjectMaterialInventory := ObjectMaterialInventory;
            ToObjectMaterialInventory.Code := IObjectTo;
            ToObjectMaterialInventory.INSERT(TRUE);
          UNTIL ObjectMaterialInventory.NEXT = 0;
      END;

      IF ICopyConsumptionComponent THEN BEGIN
        ObjectConsumptionComponent.SETRANGE("Object No.", IObjectFrom);
        IF ObjectConsumptionComponent.FINDSET THEN
          REPEAT
            ToObjectConsumptionComponent := ObjectConsumptionComponent;
            ToObjectConsumptionComponent."Object No." := IObjectTo;
            ToObjectConsumptionComponent.INSERT(TRUE);
          UNTIL ObjectConsumptionComponent.NEXT = 0;
      END;

      IF ICopyDocuments THEN
        DocumentLinkManagement.CopyDocLinks(FromRecRef, ToRecRef);

      IF StatusBln THEN
        Status.CLOSE;
    END;

    PROCEDURE OpenDialog@12();
    BEGIN
      Status.OPEN(
         Text010 +
         Text011 +
         Text014);

      StatusBln := TRUE;
    END;

    BEGIN
    END.
  }
}

