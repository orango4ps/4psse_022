OBJECT Codeunit 5151 Integration Service
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    EventSubscriberInstance=Manual;
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [External]
    PROCEDURE GetDeletedIntegrationItems@2(VAR IntegrationRecords@1000 : XMLport 5151;FromDateTime@1001 : DateTime;MaxRecords@1002 : Integer;PageID@1003 : Integer);
    VAR
      IntegrationRecord@1004 : Record 5151;
    BEGIN
      IntegrationRecord.SETCURRENTKEY("Page ID","Deleted On");
      IntegrationRecord.SETRANGE("Page ID",PageID);
      IF FromDateTime = 0DT THEN
        IntegrationRecord.SETFILTER("Deleted On",'<>%1',0DT)
      ELSE
        IntegrationRecord.SETFILTER("Deleted On",'>=%1',FromDateTime);
      IntegrationRecords.SetMaxRecords(MaxRecords);
      IntegrationRecords.SETTABLEVIEW(IntegrationRecord);
    END;

    [External]
    PROCEDURE GetModifiedIntegrationItems@3(VAR IntegrationRecords@1000 : XMLport 5151;FromDateTime@1001 : DateTime;MaxRecords@1002 : Integer;PageID@1003 : Integer);
    VAR
      IntegrationRecord@1004 : Record 5151;
    BEGIN
      IntegrationRecord.SETCURRENTKEY("Page ID","Modified On");
      IntegrationRecord.SETRANGE("Page ID",PageID);
      IntegrationRecord.SETFILTER("Deleted On",'=%1',0DT);
      IF FromDateTime <> 0DT THEN
        IntegrationRecord.SETFILTER("Modified On",'>=%1',FromDateTime);
      IntegrationRecords.SetMaxRecords(MaxRecords);
      IntegrationRecords.SETTABLEVIEW(IntegrationRecord);
    END;

    [External]
    PROCEDURE UpdateIntegrationID@4(RecIDIn@1000 : Text[1024];IntegrationID@1001 : GUID);
    VAR
      IntegrationRecord@1002 : Record 5151;
      RecID@1003 : RecordID;
    BEGIN
      EVALUATE(RecID,RecIDIn);
      IntegrationRecord.SETRANGE("Record ID",RecID);
      IntegrationRecord.FINDFIRST;
      IntegrationRecord.RENAME(IntegrationID);
    END;

    [External]
    PROCEDURE GetRecIDFromIntegrationID@5(IntegrationID@1000 : GUID) : Text[1024];
    VAR
      IntegrationRecord@1001 : Record 5151;
    BEGIN
      IF IntegrationRecord.GET(IntegrationID) THEN
        EXIT(FORMAT(IntegrationRecord."Record ID"));
    END;

    [External]
    PROCEDURE GetIntegrationIDFromRecID@6(RecIDIn@1000 : Text[1024]) : GUID;
    VAR
      IntegrationRecord@1001 : Record 5151;
      RecID@1002 : RecordID;
    BEGIN
      EVALUATE(RecID,RecIDIn);
      IntegrationRecord.SETRANGE("Record ID",RecID);
      IntegrationRecord.FINDFIRST;
      EXIT(IntegrationRecord."Integration ID");
    END;

    [External]
    PROCEDURE GetVersion@7() : Text[30];
    BEGIN
      EXIT('1.0.0.0');
    END;

    [EventSubscriber(Codeunit,5465,OnForceIsApiEnabledVerification)]
    LOCAL PROCEDURE SetOnForceIsApiEnabledVerification@21(VAR ForceIsApiEnabledVerification@1000 : Boolean);
    BEGIN
      ForceIsApiEnabledVerification := TRUE;
    END;

    BEGIN
    END.
  }
}

