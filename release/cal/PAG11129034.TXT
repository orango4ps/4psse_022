OBJECT Page 11129034 Service Object FSA WS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=;
    SourceTable=Table11071691;
    PageType=List;
    SourceTableTemporary=Yes;
    OnAfterGetRecord=BEGIN
                       IF NOT ServiceLocation.GET("Service Location No.") THEN
                         ServiceLocation.INIT;
                     END;

  }
  CONTROLS
  {
    { 1100528000;0;Container;
                ContainerType=ContentArea }

    { 1100528013;1;Field  ;
                SourceExpr=ServiceOrderNo;
                OnValidate=BEGIN
                             FillSourceTable;
                           END;
                            }

    { 1100528001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100528002;2;Field  ;
                Name=No;
                SourceExpr="No." }

    { 1100528003;2;Field  ;
                Name=Description;
                SourceExpr=Description }

    { 1100528004;2;Field  ;
                Name=StandardObjectNo;
                SourceExpr="Standard Object No." }

    { 1100528005;2;Field  ;
                Name=StandardObjectDescription;
                SourceExpr="Standard Object Description" }

    { 1100528006;2;Field  ;
                Name=BrandCode;
                SourceExpr="Brand Code" }

    { 1100528007;2;Field  ;
                Name=BrandDescription;
                SourceExpr="Brand Description" }

    { 1100528010;2;Field  ;
                Name=ModelCode;
                SourceExpr="Model Code" }

    { 1100528011;2;Field  ;
                Name=ModelDescription;
                SourceExpr="Model Description" }

    { 1100528008;2;Field  ;
                Name=TypeCode;
                SourceExpr="Type Code" }

    { 1100528009;2;Field  ;
                Name=TypeDescription;
                SourceExpr="Type Description" }

    { 1100528012;2;Field  ;
                Name=ObjectGroup;
                SourceExpr="Object Group" }

    { 1100527003;2;Field  ;
                Name=ObjectCustomer;
                SourceExpr="Object Customer" }

    { 1100527000;2;Field  ;
                Name=Address;
                SourceExpr=ServiceLocation.Address }

    { 1100527001;2;Field  ;
                Name=PostCode;
                SourceExpr=ServiceLocation."Post Code" }

    { 1100527002;2;Field  ;
                Name=City;
                SourceExpr=ServiceLocation.City }

    { 1100527004;2;Field  ;
                Name=Building;
                SourceExpr=Building }

    { 1100527005;2;Field  ;
                Name=Floor;
                SourceExpr=Floor }

    { 1100527006;2;Field  ;
                Name=Room;
                SourceExpr=Room }

    { 1100527007;2;Field  ;
                Name=Quantity;
                SourceExpr=Quantity }

    { 1100527008;2;Field  ;
                Name=CustomerFeature;
                SourceExpr="Customer Feature" }

  }
  CODE
  {
    VAR
      ServiceOrderNo@1100528000 : Code[20];
      ServiceLocation@1100527000 : Record 11012801;

    LOCAL PROCEDURE FillSourceTable@1100528002();
    VAR
      ServiceOrder@1100528006 : Record 11012823;
      ServiceContract@1100528005 : Record 11012812;
      ContractObject@1100528004 : Record 11071702;
      ServiceLocation@1100528003 : Record 11012801;
      ServiceObjectLocationRelated@1100528002 : Record 11071691;
      ServiceObject@1100528001 : Record 11071691;
      Add@1100528000 : Boolean;
    BEGIN
      Rec.RESET;
      Rec.DELETEALL;

      IF NOT ServiceOrder.GET(ServiceOrderNo) THEN
        EXIT;

      IF ServiceOrder."Service Contract No." <> '' THEN BEGIN
        IF ServiceOrder."Service Location No." <> '' THEN BEGIN
          ServiceLocation.GET(ServiceOrder."Service Location No.");
          ServiceLocation.GetRelatedObjects(ServiceObjectLocationRelated);
        END;

        ServiceContract.GET(ServiceOrder."Service Contract No.");

        ContractObject.SETRANGE("Service Contract No.", ServiceOrder."Service Contract No.");
        IF ContractObject.FINDSET THEN
          REPEAT
            Add := ContractObjectMatchOrderDate(ServiceOrder, ContractObject);

            IF Add AND (ServiceOrder."Service Location No." <> '') THEN
              Add := ContractObjectMatchServiceObjectLocationRelated(ContractObject, ServiceObjectLocationRelated);

            ServiceObject.GET(ContractObject."Service Object No.");

            IF Add THEN
              Add := ServiceOrderObjectVendorMatch(ServiceOrder, ServiceObject);

            IF Add THEN BEGIN
              Rec.INIT;
              Rec.TRANSFERFIELDS(ServiceObject);
              IF Rec.INSERT THEN;
            END;
          UNTIL ContractObject.NEXT = 0;
      END ELSE BEGIN
        IF ServiceOrder."Service Location No." <> '' THEN BEGIN
          ServiceLocation.GET(ServiceOrder."Service Location No.");
          ServiceLocation.GetRelatedObjects(ServiceObjectLocationRelated);
          IF ServiceObjectLocationRelated.FINDSET THEN
            REPEAT
              Rec.INIT;
              Rec.TRANSFERFIELDS(ServiceObjectLocationRelated);
              IF Rec.INSERT THEN;
            UNTIL ServiceObjectLocationRelated.NEXT = 0;
        END;
      END;
    END;

    LOCAL PROCEDURE ContractObjectMatchOrderDate@1100528000(ServiceOrder@1100528001 : Record 11012823;ContractObject@1100528000 : Record 11071702) : Boolean;
    VAR
      ReferenceDate@1100528002 : Date;
    BEGIN
      IF ServiceOrder."Starting Date" <> 0D THEN
        ReferenceDate := ServiceOrder."Starting Date"
      ELSE
        ReferenceDate := ServiceOrder."Order Date";
      IF (ContractObject."Starting Date" > ReferenceDate) THEN
        EXIT(FALSE);
      IF ((ContractObject."Ending Date" > 0D) AND (ContractObject."Ending Date" < ReferenceDate)) THEN
        EXIT(FALSE);
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE ContractObjectMatchServiceObjectLocationRelated@1100528001(ContractObject@1100528000 : Record 11071702;VAR ServiceObjectLocationRelated@1100528001 : Record 11071691) Result : Boolean;
    BEGIN
      ServiceObjectLocationRelated.FILTERGROUP(8);
      ServiceObjectLocationRelated.SETRANGE("No.", ContractObject."Service Object No.");
      Result := NOT ServiceObjectLocationRelated.ISEMPTY;
      ServiceObjectLocationRelated.SETRANGE("No.");
      ServiceObjectLocationRelated.FILTERGROUP(0);
    END;

    LOCAL PROCEDURE ServiceOrderObjectVendorMatch@1100528003(ServiceOrder@1100528003 : Record 11012823;ServiceObject@1100528007 : Record 11071691) : Boolean;
    VAR
      ServiceOrderObject@1100528004 : Record 11071724;
      ServiceObject2@1100528005 : Record 11071691;
      VendorWillBeCharged@1100528002 : Boolean;
      BilltoVendorNo@1100528001 : Code[20];
      BilltoVendorNo2@1100528000 : Code[20];
    BEGIN
      VendorWillBeCharged := ServiceObject.VendorWillBeCharged(ServiceOrder."No.", WORKDATE, BilltoVendorNo);

      ServiceOrderObject.RESET;
      ServiceOrderObject.SETRANGE("Service Order No.", ServiceOrder."No.");
      ServiceOrderObject.SETFILTER("Object No.", '<>%1', ServiceObject."No.");
      IF ServiceOrderObject.FINDFIRST THEN BEGIN
        ServiceObject2.GET(ServiceOrderObject."Object No.");
        IF (ServiceObject2.VendorWillBeCharged(ServiceOrder."No.", WORKDATE, BilltoVendorNo2) <> VendorWillBeCharged) OR
           (BilltoVendorNo2 <> BilltoVendorNo) THEN
          EXIT(FALSE);
      END;

      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

