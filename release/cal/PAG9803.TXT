OBJECT Page 9803 Permissions
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Permissions;
               NOR=Tillatelser;
               SVE=Beh”righeter];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table2000000005;
    PopulateAllFields=Yes;
    DataCaptionFields=Object Type,Object Name;
    PageType=List;
    SourceTableTemporary=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Read,Insert,Modify,Delete,Execute;
                                NOR=Ny,Prosess,Rapport,Les,Sett inn,Endre,Slett,Kj›r;
                                SVE=Ny,Process,Rapport,L„sa,Infoga,Žndra,Ta bort,K”ra];
    ShowFilter=No;
    OnOpenPage=VAR
                 PermissionSet@1000 : Record 2000000004;
                 PermissionPagesMgt@1001 : Codeunit 9001;
               BEGIN
                 PermissionPagesMgt.RaiseNotificationThatSecurityFilterNotEditableForSystemAndExtension;

                 IF CurrentRoleID = '' THEN
                   IF GETFILTER("Role ID") <> '' THEN
                     CurrentRoleID := GETRANGEMIN("Role ID")
                   ELSE
                     IF PermissionSet.FINDFIRST THEN
                       CurrentRoleID := PermissionSet."Role ID";
                 RESET;
                 FillTempPermissions;
               END;

    OnAfterGetRecord=BEGIN
                       SetObjectZeroName(Rec);
                       ZeroObjStyleExpr := "Object ID" = 0;
                       IsNewRecord := FALSE;
                     END;

    OnAfterGetCurrRecord=VAR
                           Permission@1000 : Record 2000000005;
                         BEGIN
                           ActivateControls;
                           SetObjectZeroName(Rec);
                           IF NOT IsNewRecord THEN BEGIN
                             Permission := Rec;
                             PermissionRecExists := Permission.FIND;
                           END ELSE
                             PermissionRecExists := FALSE;
                           AllowChangePrimaryKey := NOT PermissionRecExists AND (Show = Show::"Only In Permission Set");
                           ZeroObjStyleExpr := PermissionRecExists AND ("Object ID" = 0);
                         END;

    ActionList=ACTIONS
    {
      { 12      ;    ;ActionContainer;
                      CaptionML=[ENU=Set Permission;
                                 NOR=Angi tillatelse;
                                 SVE=Ange beh”righet];
                      ActionContainerType=ActionItems }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 38  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=Allm„nt];
                GroupType=Group }

    { 42  ;2   ;Group     ;
                GroupType=Group }

    { 39  ;3   ;Field     ;
                Name=CurrentRoleID;
                CaptionML=[ENU=Permission Set;
                           NOR=Tillatelsessett;
                           SVE=Beh”righetsupps„ttning];
                ToolTipML=[ENU=Specifies the permission set that the permission belongs to.;
                           NOR=Angir tillatelsessettet som tillatelsen tilh›rer.;
                           SVE=Anger den beh”righetsupps„ttning som beh”righeten tillh”r.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CurrentRoleID;
                Importance=Promoted;
                Editable=FALSE }

    { 2   ;1   ;Group     ;
                Name=Group;
                CaptionML=[ENU=AllPermission;
                           NOR=Alle tillatelser;
                           SVE=All beh”righet];
                GroupType=Repeater }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of object that the permissions apply to in the current database.;
                           NOR=Angir hvilken objekttype tillatelsene gjelder for i den gjeldende databasen.;
                           SVE=Anger typen f”r objektet som beh”righeterna g„ller i den aktuella databasen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Object Type";
                Enabled=AllowChangePrimaryKey;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the object to which the permissions apply.;
                           NOR=Angir ID-en for objektet som tillatelsene gjelder for.;
                           SVE=Anger id:t f”r objektet som beh”righeterna g„ller.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Object ID";
                Enabled=AllowChangePrimaryKey;
                LookupPageID=All Objects with Caption;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr }

    { 9   ;2   ;Field     ;
                Name=ObjectName;
                CaptionML=[ENU=Object Name;
                           NOR=Objektnavn;
                           SVE=Objektnamn];
                ToolTipML=[ENU=Specifies the name of the object to which the permissions apply.;
                           NOR=Angir navnet p† objektet som tillatelsene gjelder for.;
                           SVE=Anger namnet p† objektet som beh”righeterna g„ller.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ObjectName;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies information about whether the permission set has read permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have read permission.;
                           NOR=Angir informasjon om tillatelsessettene har lesetillatelse til dette objektet eller ikke. Verdiene for feltet er Tomt, Ja og Indirekte. Indirekte betyr tillatelse bare gjennom et annet objekt. Hvis feltet er tomt, har ikke tillatelsessettet lesetillatelse.;
                           SVE=Inneh†ller information om huruvida beh”righetsupps„ttningen har l„sbeh”righet till det h„r objektet. F„ltet kan vara tomt eller ha v„rdet Ja eller Indirekt. Indirekt inneb„r att beh”righet bara ges via ett annat objekt. Om f„ltet „r tomt har beh”righetsupps„ttningen inte l„sbeh”righet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Read Permission";
                Enabled=IsTableData;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies information about whether the permission set has insert permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have insert permission.;
                           NOR=Angir informasjon om tillatelsessettene har innsettingstillatelse til dette objektet eller ikke. Verdiene for feltet er Tomt, Ja og Indirekte. Indirekte betyr tillatelse bare gjennom et annet objekt. Hvis feltet er tomt, har ikke tillatelsessettet innsettingstillatelse.;
                           SVE=Inneh†ller information om huruvida beh”righetsupps„ttningen har infogningsbeh”righet till det h„r objektet. F„ltet kan vara tomt eller ha v„rdet Ja eller Indirekt. Indirekt inneb„r att beh”righet bara ges via ett annat objekt. Om f„ltet „r tomt har beh”righetsupps„ttningen inte infogningsbeh”righet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Insert Permission";
                Enabled=IsTableData;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies information about whether the permission set has modify permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have modify permission.;
                           NOR=Angir informasjon om tillatelsessettene har endringstillatelse til dette objektet eller ikke. Verdiene for feltet er Tomt, Ja og Indirekte. Indirekte betyr tillatelse bare gjennom et annet objekt. Hvis feltet er tomt, har ikke tillatelsessettet endringstillatelse.;
                           SVE=Inneh†ller information om huruvida beh”righetsupps„ttningen har „ndringsbeh”righet till det h„r objektet. F„ltet kan vara tomt eller ha v„rdet Ja eller Indirekt. Indirekt inneb„r att beh”righet bara ges via ett annat objekt. Om f„ltet „r tomt har beh”righetsupps„ttningen inte „ndringsbeh”righet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Modify Permission";
                Enabled=IsTableData;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies information about whether the permission set has delete permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have delete permission.;
                           NOR=Angir informasjon om tillatelsessettene har slettetillatelse til dette objektet eller ikke. Verdiene for feltet er Tomt, Ja og Indirekte. Indirekte betyr tillatelse bare gjennom et annet objekt. Hvis feltet er tomt, har ikke tillatelsessettet slettetillatelse.;
                           SVE=Inneh†ller information om huruvida beh”righetsupps„ttningen har borttagningsbeh”righet till det h„r objektet. F„ltet kan vara tomt eller ha v„rdet Ja eller Indirekt. Indirekt inneb„r att beh”righet bara ges via ett annat objekt. Om f„ltet „r tomt har beh”righetsupps„ttningen inte borttagningsbeh”righet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Delete Permission";
                Enabled=IsTableData;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies information about whether the permission set has execute permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have execute permission.;
                           NOR=Angir informasjon om tillatelsessettene har kj›ringstillatelse til dette objektet eller ikke. Verdiene for feltet er Tomt, Ja og Indirekte. Indirekte betyr tillatelse bare gjennom et annet objekt. Hvis feltet er tomt, har ikke tillatelsessettet kj›ringstillatelse.;
                           SVE=Inneh†ller information om huruvida beh”righetsupps„ttningen har k”rningsbeh”righet till det h„r objektet. F„ltet kan vara tomt eller ha v„rdet Ja eller Indirekt. Indirekt inneb„r att beh”righet bara ges via ett annat objekt. Om f„ltet „r tomt har beh”righetsupps„ttningen inte k”rningsbeh”righet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Execute Permission";
                Enabled=NOT IsTableData;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the security filter that is being applied to this permission set to limit the access that this permission set has to the data contained in this table.;
                           NOR=Angir sikkerhetsfilteret som brukes p† dette tillatelsessettet, for † begrense tilgangen som dette tillatelsessettet har til dataene i denne tabellen.;
                           SVE=Anger s„kerhetsfiltret som „r kopplat till denna beh”righetsupps„ttning f”r att begr„nsa den †tkomst som den h„r beh”righetsupps„ttningen har till data i den h„r tabellen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Security Filter";
                Enabled=IsTableData;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr;
                OnAssistEdit=VAR
                               PermissionPagesMgt@1000 : Codeunit 9001;
                               OutputSecurityFilter@1001 : Text;
                             BEGIN
                               // User cannot edit Security filter field for Systems.
                               // Since this field is empty for System type it can be used as a flag it.
                               IF FORMAT("Security Filter") = '' THEN
                                 EXIT;

                               IF PermissionPagesMgt.ShowSecurityFilterForPermission(OutputSecurityFilter,Rec) THEN
                                 EVALUATE("Security Filter",OutputSecurityFilter);
                             END;
                              }

  }
  CODE
  {
    VAR
      CurrentRoleID@1000 : Code[20];
      Show@1002 : 'Only In Permission Set,All';
      IsTableData@1001 : Boolean INDATASET;
      IsNewRecord@1010 : Boolean;
      PermissionRecExists@1008 : Boolean;
      AllowChangePrimaryKey@1004 : Boolean;
      AllObjTxt@1009 : TextConst '@@@="%1= type name, e.g. Table Data or Report or Page";ENU=All objects of type %1;NOR=Alle objekter av typen %1;SVE=Alla objekt av typen %1';
      ZeroObjStyleExpr@1011 : Boolean;
      ObjectName@1005 : Text;

    LOCAL PROCEDURE FillTempPermissions@1003();
    VAR
      TempPermission@1000 : TEMPORARY Record 2000000005;
      Permission@1002 : Record 2000000005;
    BEGIN
      TempPermission.COPY(Rec,TRUE);
      TempPermission.RESET;
      TempPermission.DELETEALL;
      FILTERGROUP(2);
      SETRANGE("Role ID",CurrentRoleID);
      Permission.SETRANGE("Role ID",CurrentRoleID);
      FILTERGROUP(0);

      IF Permission.FIND('-') THEN
        REPEAT
          TempPermission := Permission;
          TempPermission.INSERT;
        UNTIL Permission.NEXT = 0;

      IF Show = Show::All THEN
        FillTempPermissionsForAllObjects(TempPermission);
      IsNewRecord := FALSE;
      IF FIND('=<>') THEN;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE FillTempPermissionsForAllObjects@5(VAR Permission@1005 : Record 2000000005);
    VAR
      TempPermission@1007 : TEMPORARY Record 2000000005;
      AllObj@1006 : Record 2000000038;
    BEGIN
      AllObj.SETRANGE("Object Type");
      TempPermission.COPY(Permission,TRUE);
      TempPermission.INIT;
      IF AllObj.FINDSET THEN
        REPEAT
          TempPermission."Object Type" := AllObj."Object Type";
          TempPermission."Object ID" := AllObj."Object ID";
          TempPermission."Read Permission" := "Read Permission"::" ";
          TempPermission."Insert Permission" := "Insert Permission"::" ";
          TempPermission."Modify Permission" := "Modify Permission"::" ";
          TempPermission."Delete Permission" := "Delete Permission"::" ";
          TempPermission."Execute Permission" := "Execute Permission"::" ";
          SetObjectZeroName(TempPermission);
          IF TempPermission.INSERT THEN;
        UNTIL AllObj.NEXT = 0;
    END;

    LOCAL PROCEDURE ActivateControls@1();
    BEGIN
      IsTableData := "Object Type" = "Object Type"::"Table Data"
    END;

    LOCAL PROCEDURE SetObjectZeroName@9(VAR Permission@1000 : Record 2000000005);
    BEGIN
      IF Permission."Object ID" <> 0 THEN BEGIN
        Permission.CALCFIELDS("Object Name");
        ObjectName := Permission."Object Name";
      END ELSE
        ObjectName := COPYSTR(STRSUBSTNO(AllObjTxt,Permission."Object Type"),1,MAXSTRLEN(Permission."Object Name"));
    END;

    BEGIN
    END.
  }
}

