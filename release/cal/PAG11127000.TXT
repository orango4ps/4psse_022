OBJECT Page 11127000 Service Locations V2 FSA WS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=;
    SourceTable=Table11012801;
    PageType=List;
    SourceTableTemporary=Yes;
  }
  CONTROLS
  {
    { 1100528100;0;Container;
                ContainerType=ContentArea }

    { 1100528010;1;Field  ;
                Name=ResourceNo;
                SourceExpr=ResourceNo }

    { 1100526000;1;Field  ;
                Name=FromDate;
                SourceExpr=FromDate;
                OnValidate=BEGIN
                             FillSourceTable();
                           END;
                            }

    { 1100528101;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100528102;2;Field  ;
                Name=No;
                SourceExpr="No." }

    { 1100528103;2;Field  ;
                Name=Description;
                SourceExpr=Description }

    { 1100528003;2;Field  ;
                Name=Name;
                SourceExpr=Name }

    { 1100528001;2;Field  ;
                Name=Address;
                SourceExpr=Address }

    { 1100528000;2;Field  ;
                Name=City;
                SourceExpr=City }

    { 1100528002;2;Field  ;
                Name=ContactName;
                SourceExpr="Contact Name" }

    { 1100528004;2;Field  ;
                Name=PhoneNo;
                SourceExpr="Phone No." }

    { 1100528104;2;Field  ;
                Name=ReportProcedure;
                SourceExpr=GetReportProcedure }

    { 1100528005;2;Field  ;
                Name=Blocked;
                SourceExpr=GetBlocked }

    { 1100528006;2;Field  ;
                Name=CompanyName;
                SourceExpr=CURRENTCOMPANY }

    { 1100528007;2;Field  ;
                Name=InitialMinutesWorkingHours;
                SourceExpr="Initial Minutes Working Hours" }

    { 1100528008;2;Field  ;
                Name=RoundWorkingHoursOnMinutes;
                SourceExpr="Round Working Hours on Minutes" }

    { 1100528009;2;Field  ;
                Name=RoundTravelHoursOnMinutes;
                SourceExpr="Round Travel Hours on Minutes" }

    { 1100527000;2;Field  ;
                Name=PostCode;
                SourceExpr="Post Code" }

    { 1100526001;2;Field  ;
                Name=Deleted;
                SourceExpr=GetDeleted }

  }
  CODE
  {
    VAR
      ResourceNo@1100528000 : Code[20];
      FromDate@1100526000 : DateTime;
      GuidDeleted@1100526001 : GUID;

    LOCAL PROCEDURE GetReportProcedure@1100528100() : Text;
    VAR
      ServiceText@1100528100 : Record 11012882;
    BEGIN
      EXIT(ServiceText.GetServiceLocationText(0,"No.",TRUE));
    END;

    LOCAL PROCEDURE FillSourceTable@1100526000();
    VAR
      ServiceLocation@1100526000 : Record 11012801;
      Resource@1100526001 : Record 11229278;
      DeletedData@1100526002 : Record 11229871;
      ExportFilterSetMgt@1100526003 : Codeunit 11012200;
      GetAll@1100528700 : Boolean;
    BEGIN
      Rec.RESET;
      Rec.DELETEALL;

      GetAll := DATE2DMY(DT2DATE(FromDate), 3) <= 1950;

      IF Resource.GET(ResourceNo) THEN
        IF Resource."Filter Set (Mobile)" <> '' THEN
          ExportFilterSetMgt.SetExportFiltersOnServLoc(Resource."Filter Set (Mobile)", COMPANYNAME, ServiceLocation);

      IF NOT GetAll THEN
        ServiceLocation.SETFILTER("Last Date Modified", '%1..', DT2DATE(FromDate) - 1);
      IF ServiceLocation.FINDSET THEN
        REPEAT
          Rec.INIT;
          Rec.TRANSFERFIELDS(ServiceLocation);
          IF Rec.INSERT THEN;
        UNTIL ServiceLocation.NEXT = 0;

      IF GetAll THEN
        EXIT;

      GuidDeleted := CREATEGUID;

      DeletedData.SETRANGE("Table ID", DATABASE::"Service Location");
      DeletedData.SETFILTER(Date, '%1..', DT2DATE(FromDate) - 1);
      IF DeletedData.FINDSET THEN
        REPEAT
          IF NOT ServiceLocation.GET(DeletedData."Code 1") THEN BEGIN
            Rec.INIT;
            Rec."No." := DeletedData."Code 1";
            Rec.Description := FORMAT(GuidDeleted);
            IF Rec.INSERT THEN;
          END;
        UNTIL DeletedData.NEXT = 0;
    END;

    LOCAL PROCEDURE GetDeleted@1100526001() : Boolean;
    BEGIN
      EXIT(Description = FORMAT(GuidDeleted));
    END;

    LOCAL PROCEDURE GetBlocked@1100528700() : Boolean;
    VAR
      Customer@1100528700 : Record 18;
    BEGIN
      IF Blocked THEN
        EXIT(TRUE);

      IF Customer.GET("Customer No.") THEN
        IF Customer.Blocked = Customer.Blocked::All THEN
          EXIT(TRUE);

      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

