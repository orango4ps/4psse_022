OBJECT Page 491 Items by Location
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Items by Location;
               NOR=Varer per lokasjon;
               SVE=Artiklar per lagerst„lle];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table27;
    DataCaptionExpr='';
    PageType=ListPlus;
    OnInit=BEGIN
             TempMatrixLocation.GetLocationsIncludingUnspecifiedLocation(FALSE,FALSE);
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 SetColumns(MATRIX_SetWanted::Initial);
               END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 31      ;1   ;Action    ;
                      CaptionML=[ENU=Previous Set;
                                 NOR=Forrige sett;
                                 SVE=F”reg†ende upps„ttning];
                      ToolTipML=[ENU=Go to the previous set of data.;
                                 NOR=G† til forrige datasett.;
                                 SVE=G† till f”reg†ende dataupps„ttning.];
                      ApplicationArea=#Location;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 SetColumns(MATRIX_SetWanted::Previous);
                               END;
                                }
      { 32      ;1   ;Action    ;
                      CaptionML=[ENU=Next Set;
                                 NOR=Neste sett;
                                 SVE=N„sta upps„ttning];
                      ToolTipML=[ENU=Go to the next set of data.;
                                 NOR=G† til neste datasett.;
                                 SVE=G† till n„sta dataupps„ttning.];
                      ApplicationArea=#Location;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 SetColumns(MATRIX_SetWanted::Next);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 12  ;1   ;Group     ;
                CaptionML=[ENU=Options;
                           NOR=Alternativer;
                           SVE=Alternativ] }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=Show Items in Transit;
                           NOR=Vis varer i transitt;
                           SVE=Visa artiklar i transit];
                ToolTipML=[ENU=Specifies the items in transit between locations.;
                           NOR=Angir varene som er i transitt mellom lokasjoner.;
                           SVE=Anger artiklarna som ”verf”rs mellan lagerst„llen.];
                ApplicationArea=#Location;
                SourceExpr=ShowInTransit;
                OnValidate=BEGIN
                             ShowInTransitOnAfterValidate;
                           END;
                            }

    { 15  ;2   ;Field     ;
                CaptionML=[ENU=Show Column Name;
                           NOR=Vis kolonnenavn;
                           SVE=Visa kolumnnamn];
                ToolTipML=[ENU=Specifies that the names of columns are shown in the matrix window.;
                           NOR=Angir at navnene p† kolonnene vises i matrisevinduet.;
                           SVE=Anger namnen p† kolumnerna som visas i matrisf”nstret.];
                ApplicationArea=#Location;
                SourceExpr=ShowColumnName;
                OnValidate=BEGIN
                             ShowColumnNameOnAfterValidate;
                           END;
                            }

    { 30  ;2   ;Field     ;
                CaptionML=[ENU=Column Set;
                           NOR=Kolonnesett;
                           SVE=Kolumnupps„ttning];
                ToolTipML=[ENU=Specifies the range of values that are displayed in the matrix window, for example, the total period. To change the contents of the field, choose Next Set or Previous Set.;
                           NOR=Angir verdiomr†dene som vises i matrisevinduet, for eksempel hele perioden. Hvis du vil endre innholdet i feltet, velger du Neste sett eller Forrige sett.;
                           SVE=Anger v„rdeintervallen som visas i tabellf”nstret, till exempel hela perioden. Om du vill „ndra inneh†llet i f„ltet v„ljer du N„sta upps„ttning eller F”reg†ende upps„ttning.];
                ApplicationArea=#Location;
                SourceExpr=MATRIX_CaptionRange;
                Editable=FALSE }

    { 1   ;1   ;Part      ;
                Name=MatrixForm;
                ApplicationArea=#Location;
                PagePartID=Page9231;
                PartType=Page;
                ShowFilter=No }

  }
  CODE
  {
    VAR
      TempMatrixLocation@1000 : TEMPORARY Record 14;
      MatrixRecords@1010 : ARRAY [32] OF Record 14;
      MatrixRecordRef@1007 : RecordRef;
      MATRIX_SetWanted@1006 : 'Initial,Previous,Same,Next';
      ShowColumnName@1002 : Boolean;
      ShowInTransit@1003 : Boolean;
      MATRIX_CaptionSet@1008 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1011 : Text[100];
      MATRIX_PKFirstRecInCurrSet@1001 : Text[80];
      MATRIX_CurrSetLength@1004 : Integer;
      UnspecifiedLocationCodeTxt@1005 : TextConst '@@@=Code for unspecified location;ENU=UNSPECIFIED;NOR=IKKE ANGITT;SVE=OSPECIFICERAT';
      DPA_IsHardFilter@1100000999 : Boolean;

    PROCEDURE SetColumns@6(SetWanted@1002 : 'Initial,Previous,Same,Next');
    VAR
      MatrixMgt@1000 : Codeunit 9200;
      CaptionFieldNo@1001 : Integer;
      CurrentMatrixRecordOrdinal@1003 : Integer;
    BEGIN
      TempMatrixLocation.SETRANGE("Use As In-Transit",ShowInTransit);

      CLEAR(MATRIX_CaptionSet);
      CLEAR(MatrixRecords);
      CurrentMatrixRecordOrdinal := 1;

      MatrixRecordRef.GETTABLE(TempMatrixLocation);
      MatrixRecordRef.SETTABLE(TempMatrixLocation);

      IF ShowColumnName THEN
        CaptionFieldNo := TempMatrixLocation.FIELDNO(Name)
      ELSE
        CaptionFieldNo := TempMatrixLocation.FIELDNO(Code);

      MatrixMgt.GenerateMatrixData(MatrixRecordRef,SetWanted,ARRAYLEN(MatrixRecords),CaptionFieldNo,MATRIX_PKFirstRecInCurrSet,
        MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrSetLength);

      IF MATRIX_CaptionSet[1] = '' THEN BEGIN
        MATRIX_CaptionSet[1] := UnspecifiedLocationCodeTxt;
        MATRIX_CaptionRange := STRSUBSTNO('%1%2',MATRIX_CaptionSet[1],MATRIX_CaptionRange);
      END;

      IF MATRIX_CurrSetLength > 0 THEN BEGIN
        TempMatrixLocation.SETPOSITION(MATRIX_PKFirstRecInCurrSet);
        TempMatrixLocation.FIND;
        REPEAT
          MatrixRecords[CurrentMatrixRecordOrdinal].COPY(TempMatrixLocation);
          CurrentMatrixRecordOrdinal := CurrentMatrixRecordOrdinal + 1;
        UNTIL (CurrentMatrixRecordOrdinal > MATRIX_CurrSetLength) OR (TempMatrixLocation.NEXT <> 1);
      END;

      UpdateMatrixSubform;
    END;

    LOCAL PROCEDURE ShowColumnNameOnAfterValidate@19074585();
    BEGIN
      SetColumns(MATRIX_SetWanted::Same);
    END;

    LOCAL PROCEDURE ShowInTransitOnAfterValidate@19033613();
    BEGIN
      SetColumns(MATRIX_SetWanted::Initial);
    END;

    LOCAL PROCEDURE UpdateMatrixSubform@10();
    BEGIN
      CurrPage.MatrixForm.PAGE.Load(MATRIX_CaptionSet,MatrixRecords,TempMatrixLocation,MATRIX_CurrSetLength);
      CurrPage.MatrixForm.PAGE.SETRECORD(Rec);
      CurrPage.UPDATE(FALSE);
    END;

    BEGIN
    END.
  }
}

