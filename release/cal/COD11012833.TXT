OBJECT Codeunit 11012833 Revise Additional Activities
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1100528601 : TextConst 'DEU=Besch„ftigt mit  #1################# @2@@@@@@@@@@@@@;ENU=Busy with       #1################# @2@@@@@@@@@@@@@;NLD=Bezig met       #1################# @2@@@@@@@@@@@@@;NOR=Opptatt med       #1################# @2@@@@@@@@@@@@@;SVE=Upptagen med    #1################# @2@@@@@@@@@@@@@';
      Text002@1100528600 : TextConst 'DEU=Erg„nzende T„tigkeiten;ENU=Additional Activities;NLD=Aanvullende werkzaamheden;NOR=Tilleggsaktiviteter;SVE=Ytterligare aktiviteter';

    PROCEDURE ReviceAdditionalActivities@1100528600(VAR IItemtoReplace@1100528600 : Record 11012322;VAR IMaintSchemeVersionLine@1100528602 : Record 11071744;ActPrice@1100528606 : Boolean);
    VAR
      ItemTypeOpt@1100528603 : 'Item,Basic Item,Trade Item,Trade Vendor';
      Status@1100528601 : Dialog;
      currec@1100528604 : Integer;
      maxrec@1100528605 : Integer;
    BEGIN
      IF IItemtoReplace.FINDSET THEN BEGIN
        Status.OPEN(Text001);
        Status.UPDATE(1, Text002);
        REPEAT
          IF IItemtoReplace."Trade Item (Old)" <> '' THEN BEGIN
            IMaintSchemeVersionLine.SETRANGE("Trade Item", IItemtoReplace."Trade Item (Old)");
            IMaintSchemeVersionLine.SETRANGE("Vendor (Trade Item)", IItemtoReplace."Vendor (Old)");
          END ELSE BEGIN
            IF IItemtoReplace."Basic Item (Old)" <> '' THEN BEGIN
              IMaintSchemeVersionLine.SETRANGE("Basic Item", IItemtoReplace."Basic Item (Old)");
              IMaintSchemeVersionLine.SETRANGE(Manufacturer, IItemtoReplace."Manufacturer (Old)");
            END ELSE BEGIN
              IF IItemtoReplace."Item No. (Old)" <> '' THEN BEGIN
                IMaintSchemeVersionLine.SETRANGE("Item No.", IItemtoReplace."Item No. (Old)");
              END ELSE BEGIN
                IF IItemtoReplace."Cost Object (Old)" <> '' THEN BEGIN
                  IMaintSchemeVersionLine.SETFILTER("Trade Item", '%1', '');
                  IMaintSchemeVersionLine.SETFILTER("Vendor (Trade Item)", '%1', '');
                  IMaintSchemeVersionLine.SETFILTER("Basic Item", '%1', '');
                  IMaintSchemeVersionLine.SETFILTER(Manufacturer, '%1', '');
                  IMaintSchemeVersionLine.SETFILTER("Item No.", '%1', '');
                  IMaintSchemeVersionLine.SETRANGE("Cost Object", IItemtoReplace."Cost Object (Old)");
                END;
              END;
            END;
          END;
          IF IMaintSchemeVersionLine.FINDSET(TRUE, FALSE) THEN BEGIN
            currec := 0;
            maxrec := IMaintSchemeVersionLine.COUNT;
            REPEAT
              IF IItemtoReplace."Cost Object (Old)" <> '' THEN BEGIN
                IMaintSchemeVersionLine."Cost Object" := IItemtoReplace."Cost Object (New)";
              END ELSE BEGIN
                IMaintSchemeVersionLine."Item No." := IItemtoReplace."Item No. (New)";
                IMaintSchemeVersionLine."Basic Item" := IItemtoReplace."Basic Item (New)";
                IMaintSchemeVersionLine."Trade Item" := IItemtoReplace."Trade Item (New)";
                IMaintSchemeVersionLine.Manufacturer := IItemtoReplace."Manufacturer (New)";
                IMaintSchemeVersionLine."Vendor (Trade Item)" := IItemtoReplace."Vendor (New)";
              END;
              IF ActPrice THEN BEGIN
                IF IItemtoReplace."Trade Item (New)" <> '' THEN
                  IMaintSchemeVersionLine.ValidateItem(ItemTypeOpt::"Trade Item", TRUE)
                ELSE
                  IF IItemtoReplace."Basic Item (New)" <> '' THEN
                    IMaintSchemeVersionLine.ValidateItem(ItemTypeOpt::"Basic Item", TRUE)
                  ELSE
                    IF IItemtoReplace."Item No. (New)" <> '' THEN
                      IMaintSchemeVersionLine.ValidateItem(ItemTypeOpt::Item, TRUE);
              END;
              IMaintSchemeVersionLine.MODIFY;
              currec += 1;
              Status.UPDATE(2, ROUND(currec / maxrec * 10000, 1));
            UNTIL IMaintSchemeVersionLine.NEXT = 0;
          END;
        UNTIL IItemtoReplace.NEXT = 0;
        Status.CLOSE;
      END;
    END;

    BEGIN
    END.
  }
}

