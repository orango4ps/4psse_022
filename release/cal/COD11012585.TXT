OBJECT Codeunit 11012585 Post Returned Loss Order
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    TableNo=11012655;
    OnRun=BEGIN
            ReturnOrderRec.COPY(Rec);
            Code;
            Rec := ReturnOrderRec;
          END;

  }
  CODE
  {
    VAR
      Text000@1100525000 : TextConst 'ENU=Do you want to post the %1?;NOR=Vil du bokf›re %1?;SVE=Vill du bokf”ra %1?';
      PlantSetup@1100525003 : Record 11012550;
      ReturnOrderRec@1100525001 : Record 11012655;
      ReturnOrderLineRec@1100525002 : Record 11012656;
      Text001@1100525004 : TextConst 'ENU=No %1 present on order ''%2''.;NOR=Det finnes ingen %1 p† ordre ''%2''.;SVE=Det finns ingen %1 p† order ''%2''.';
      ExitOrderLineRec@1100525005 : Record 11012560;
      PlantTypeRec@1100525006 : Record 11012551;
      PlantNoRec@1100525007 : Record 11012552;
      PlantLocRec@1100525010 : Record 11012554;
      PlantRateCodeRec@1100525008 : Record 11020502;
      PlantElementMgt@1100525009 : Codeunit 11012582;
      PlantInventoryMgt@1100525011 : Codeunit 11012566;
      "-EVRY-"@1100285003 : Integer;
      FADeprBook@1100285000 : Record 5612;

    PROCEDURE PostOrderYN@1100525000(Rec@1100525000 : Record 11012655) : Boolean;
    BEGIN
      WITH Rec DO BEGIN
        IF CONFIRM(Text000,FALSE,TABLECAPTION) THEN
          EXIT(TRUE);
      END;
    END;

    PROCEDURE Code@1100525001();
    BEGIN
      PlantSetup.GET;
      WITH ReturnOrderRec DO BEGIN
        LOCKTABLE;
        ReturnOrderLineRec.LOCKTABLE;
        ExitOrderLineRec.LOCKTABLE;

        CALCFIELDS("Exit Order Date");
        TESTFIELD("No.");
        TESTFIELD(Posted, FALSE);
        TESTFIELD("Exit Order No.");
        TESTFIELD("Return Date");
        IF Location = '' THEN
          TESTFIELD("Customer No.");
        CheckLocationCustBlock(TRUE);;
        CheckExitOrderNo();
        CheckReturnDate();

        //* Check Lines
        ReturnOrderLineRec.SETRANGE("Returned Loss Order No.", "No.");
        ReturnOrderLineRec.SETRANGE(Type, ReturnOrderLineRec.Type::Plant);
        IF ReturnOrderLineRec.ISEMPTY THEN
          ERROR(Text001, ReturnOrderLineRec.TABLECAPTION, "No.");
        ReturnOrderLineRec.SETRANGE(Type);  //* Reset filter
        ReturnOrderLineRec.FINDSET(FALSE, FALSE);
        REPEAT
          CheckOrderLine();
        UNTIL ReturnOrderLineRec.NEXT = 0;

        //* Post Lines
        ReturnOrderLineRec.RESET;
        ReturnOrderLineRec.SETRANGE("Returned Loss Order No.", "No.");
        ReturnOrderLineRec.SETRANGE(Type, ReturnOrderLineRec.Type::Plant);
        ReturnOrderLineRec.FINDSET(TRUE, FALSE);
        REPEAT
          ProcessOrderLine();
        UNTIL ReturnOrderLineRec.NEXT = 0;

        Posted := TRUE;
        "Posting Date" := TODAY;
        "Posted by" := USERID;
        "Posted on" := CURRENTDATETIME;
        MODIFY;
      END;
    END;

    PROCEDURE CheckOrderLine@1100525005();
    BEGIN
      WITH ReturnOrderLineRec DO BEGIN
        IF Type = Type::Text THEN BEGIN
          TESTFIELD("Exit Order Line No.", 0);
          TESTFIELD("Plant Type", '');
          EXIT;
        END;

        CALCFIELDS("Exit Date", "Exit From Location");
        TESTFIELD("Exit Order Line No.");
        TESTFIELD("Plant Type");
        TESTFIELD("No.");
        TESTFIELD(Quantity, 1);  //* Only unique
        TESTFIELD("To Location");
        TESTFIELD("On Location from");
        IF NOT PlantSetup."Rate Codes" THEN
          TESTFIELD("To Rate Code", '')
        ELSE
          TESTFIELD("To Rate Code");
        TESTFIELD(Description);  //*33268
        IF NOT PlantSetup.CheckElementMandatory("To Location", "To Element", '') THEN //*C004558
          TESTFIELD("To Element");
      END;
    END;

    PROCEDURE ProcessOrderLine@1100525004();
    VAR
      PostExitOrder@1100529000 : Codeunit 11012559;
      EmplNo@1100525000 : Code[20];
      EmplComp@1100525001 : Text[30];
      ExpectedReturnDepot@1100529001 : Code[20];
    BEGIN
      WITH ReturnOrderLineRec DO BEGIN
        CheckOrderLine();
        ExitOrderLineRec.GET("Exit Order No.", "Exit Order Line No.");
        TESTFIELD("Plant Type", ExitOrderLineRec."Plant Type");
        TESTFIELD("No.", ExitOrderLineRec."No.");
        PlantTypeRec.GET("Plant Type");
        PlantNoRec.GET("Plant Type", "No.");
        CheckExitOrderLine();
        PlantLocRec.GET("To Location");
        CheckLocationBlock(TRUE);
        CheckOnLocationFrom();
        IF PlantSetup."Rate Codes" THEN
          PlantRateCodeRec.CheckPlantRateCode("To Location", "To Rate Code", TRUE, '', 0);
        IF "To Element" <> '' THEN BEGIN
          IF PlantLocRec."Project No." = '' THEN
            TESTFIELD("To Element", '');
          PlantElementMgt.CheckProjectElement(PlantLocRec."Company Name", PlantLocRec."Project No.", "To Element", FALSE);
        END;

        //* Insert plant on location (as in codeunit 11012550 'Post Plant Number', function CreateInventory)
        IF PlantLocRec."Employee No." <> '' THEN BEGIN
          EmplNo := PlantLocRec."Employee No.";
          EmplComp := PlantLocRec."Company Name";
        END;
        IF NOT PlantLocRec.Depot THEN
          ExpectedReturnDepot := GetExpectedReturnDepot;
        PlantInventoryMgt.SetPlantGroup('', "To Plant Group", TRUE);
        PlantInventoryMgt.CreateStockToLocation(
          3, "Returned Loss Order No.", "Line No.",  //* OrderType: 3=Returned Exit
          "To Location", "Plant Type", "No.",
          "On Location from", Quantity, 0, "To Rate Code",
          EmplNo, EmplComp, 0, ExpectedReturnDepot);

       //* Update 'Returned' on exit-orderline
        ExitOrderLineRec.GET("Exit Order No.", "Exit Order Line No.");
        ExitOrderLineRec.Returned := ExitOrderLineRec.Returned::Yes;
        ExitOrderLineRec.MODIFY;

        PostExitOrder.OpenInspection(ExitOrderLineRec);  //*C006223.n
      END;
    END;

    LOCAL PROCEDURE GetExpectedReturnDepot@1100529000() : Code[20];
    VAR
      PlantInventory@1100529000 : Record 11012555;
    BEGIN
      WITH ReturnOrderLineRec DO BEGIN
        CALCFIELDS("Exit From Location");

        PlantInventory.SETCURRENTKEY(Removed, Location, "Plant Type", "Plant No.");
        PlantInventory.SETRANGE(Removed, TRUE);
        PlantInventory.SETRANGE(Location, "Exit From Location");
        PlantInventory.SETRANGE("Plant Type", "Plant Type");
        PlantInventory.SETRANGE("Plant No.", "No.");
        PlantInventory.SETRANGE("Removal Order Type", PlantInventory."Removal Order Type"::"Exit Order");
        PlantInventory.SETRANGE("Removal Order", "Exit Order No.");
        PlantInventory.SETRANGE("Removal Order Line", "Exit Order Line No.");
        IF PlantInventory.FINDFIRST THEN
          EXIT(PlantInventory."Expected Return Depot");
      END;
      EXIT('');
    END;

    LOCAL PROCEDURE "---EVRY---"@1100409000();
    BEGIN
    END;

    PROCEDURE ReleaseFADeprBook@1100409001(_faNo@1100409000 : Code[20]);
    BEGIN
      FADeprBook.RESET;
      FADeprBook.SETRANGE("FA No.",_faNo);
      IF NOT FADeprBook.ISEMPTY THEN
        FADeprBook.MODIFYALL("Disposal Date",0D,TRUE); // currently no val code
    END;

    BEGIN
    {
      -EVRY-
      LAHE 130424 Reactivate FA components if plant FA is main asset
      LAHE 130605 Feature of Reactivation revoked.
    }
    END.
  }
}

