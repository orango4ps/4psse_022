OBJECT Report 11128068 BG Max
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=PE7.02.01 (12047962),4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=BG Max;
               SVE=BG Max];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  gTextFile.TEXTMODE := TRUE;
                  IF gFileMgt.CanRunDotNetOnClient THEN
                    gServerFileName := gFileMgt.UploadFileSilent(gFileName)
                  ELSE
                    gServerFileName := gFileMgt.UploadFile(PEB004, gFileName);

                  IF gServerFileName = '' THEN
                    CurrReport.QUIT;

                  gTextFile.OPEN(gServerFileName,TEXTENCODING::Windows);
                END;

    OnPostReport=BEGIN
                   gTextFile.CLOSE;
                   ERASE(gServerFileName);
                 END;

  }
  DATASET
  {
    { 5444;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               gSalesRecSetup.GET;

                               gGenJnlBatch.GET(gGenJnlLine."Journal Template Name",gGenJnlLine."Journal Batch Name");
                               gGenJnlTemplate.GET(gGenJnlLine."Journal Template Name");
                               gGenJnlBatch.TESTFIELD("No. Series");
                               gDocNo := gNoSeriesMgt.GetNextNo(gGenJnlBatch."No. Series",WORKDATE,FALSE);
                               gGLSetup.GET;

                               gGenJnlLine.RESET;
                               gGenJnlLine.SETRANGE("Journal Template Name",gGenJnlLine."Journal Template Name");
                               gGenJnlLine.SETRANGE("Journal Batch Name",gGenJnlLine."Journal Batch Name");
                               gGenJnlLine.DELETEALL;

                               gtDocNoRec.RESET;
                               gtDocNoRec.DELETEALL;

                               DeleteInfoLine;

                               gW.OPEN('@1@@@@@@@@@@@@@@@@@@@@@@@@@');
                             END;

               OnAfterGetRecord=VAR
                                  lType@1100570000 : Text[2];
                                  lAmount@1100570001 : Decimal;
                                BEGIN
                                  IF gTextFile.LEN = gTextFile.POS THEN
                                    CurrReport.BREAK;
                                  gW.UPDATE(1,ROUND(gTextFile.POS/gTextFile.LEN*10000,1.0));
                                  gTextFile.READ(gTextLine);

                                  lType := COPYSTR(gTextLine,1,2);

                                  CASE lType OF
                                    '01': // Startpost
                                      BEGIN
                                       IF COPYSTR(gTextLine,3,5) <> 'BGMAX' THEN
                                            ERROR(PEB009);
                                      END;
                                    '05':
                                      BEGIN // ™ppningspost
                                        gCurrencyCode := COPYSTR(gTextLine,23,3);
                                        IF gBankAccountNo = '' THEN BEGIN
                                          gCaseRecieptAccmapping.GET(gCaseRecieptAccmapping."File Type"::"BG Max",gCurrencyCode);
                                          gCaseRecieptAccmapping.TESTFIELD("Account Type");
                                          gCaseRecieptAccmapping.TESTFIELD("Account No.");
                                          CLEAR("gTotalAmount(LCY)");
                                        END ELSE
                                          CLEAR(gCaseRecieptAccmapping);
                                      END;
                                    '20','21': // Betalningspost / Avdragspost
                                      BEGIN
                                        InsertGlLines(TODAY);
                                      END;
                                    '15': // Inst„ttningspost
                                      BEGIN
                                        InsertGlLines(TODAY);

                                        lAmount := Txt2Dec(COPYSTR(gTextLine,51,18));

                                        EVALUATE(gPostingDate,COPYSTR(gTextLine,38,8));

                                        InitGlLine(gPostingDate);
                                        IF gBankAccountNo = '' THEN BEGIN
                                          CASE gCaseRecieptAccmapping."Account Type" OF
                                            gCaseRecieptAccmapping."Account Type"::"G/L Account":
                                              gGenJnlLine.VALIDATE("Account Type", gGenJnlLine."Account Type"::"G/L Account");
                                            gCaseRecieptAccmapping."Account Type"::"Bank Account":
                                              gGenJnlLine.VALIDATE("Account Type", gGenJnlLine."Account Type"::"Bank Account");
                                          END;
                                          gGenJnlLine.VALIDATE("Account No.", gCaseRecieptAccmapping."Account No.");
                                        END ELSE BEGIN
                                          CASE gAccountType OF
                                            gAccountType::"G/L Account":
                                              gGenJnlLine.VALIDATE("Account Type", gGenJnlLine."Account Type"::"G/L Account");
                                            gAccountType::"Bank Account":
                                              gGenJnlLine.VALIDATE("Account Type", gGenJnlLine."Account Type"::"Bank Account");
                                          END;
                                          gGenJnlLine.VALIDATE("Account No.", gBankAccountNo);
                                        END;

                                        IF gCaseRecieptAccmapping."File Currency Code" <> '' THEN
                                          gGenJnlLine.VALIDATE("Currency Code",SetCurrencyCode(gCaseRecieptAccmapping."File Currency Code"));
                                        gGenJnlLine.VALIDATE(Amount,lAmount);

                                        gGenJnlLine.VALIDATE(Description,PEB002);
                                        gGenJnlLine.INSERT;

                                        // L„gg in datum p† alla raderna
                                        gGenJnlLine.RESET;
                                        gGenJnlLine.SETRANGE("Journal Template Name",gGenJnlLine."Journal Template Name");
                                        gGenJnlLine.SETRANGE("Journal Batch Name",gGenJnlLine."Journal Batch Name");
                                        IF gGenJnlLine.FINDSET THEN REPEAT
                                          gAppliesToDocNo := gGenJnlLine."Applies-to Doc. No.";
                                          gGenJnlLine."Applies-to Doc. No." := '';
                                          gGenJnlLine.VALIDATE("Posting Date",gPostingDate);
                                          gGenJnlLine."Applies-to Doc. No." := gAppliesToDocNo;
                                          gGenJnlLine.MODIFY;
                                        UNTIL gGenJnlLine.NEXT = 0;
                                      END;
                                  END;
                                  InsertInfoLineTemp(lType,COPYSTR(gTextLine,3));
                                END;

               OnPostDataItem=BEGIN
                                gW.CLOSE;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   gFileNameVisible := gFileMgt.CanRunDotNetOnClient;
                 END;

    }
    CONTROLS
    {
      { 1000000000;;Container;
                  Name=Cont;
                  ContainerType=ContentArea }

      { 1100570001;1;Group  ;
                  CaptionML=[ENU=Options;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 12047958;2;Field    ;
                  CaptionML=[ENU=File Name;
                             NOR=Filnavn;
                             SVE=Filnamn];
                  SourceExpr=gFileName;
                  Visible=gFileNameVisible;
                  OnAssistEdit=BEGIN
                                 gFileName := gFileMgt.OpenFileDialog(PEB004,gFileName,PEB003);
                               END;
                                }

      { 1000000002;2;Field  ;
                  CaptionML=[ENU=Account Type;
                             NOR=Kontotype;
                             SVE=Kontotyp];
                  OptionCaptionML=[ENU=G/L Account,,,Bank Account;
                                   NOR=Hovedbokskonto,,,Bankkonto;
                                   SVE=Redov.konto,,,Bankkonto];
                  SourceExpr=gAccountType;
                  OnValidate=BEGIN
                               CLEAR(gBankAccountNo);
                             END;
                              }

      { 1100570000;2;Field  ;
                  CaptionML=[ENU=Account No;
                             NOR=Nr;
                             SVE=Kontonr];
                  SourceExpr=gBankAccountNo;
                  OnValidate=BEGIN
                               IF gBankAccountNo = '' THEN
                                 EXIT;
                               CASE gAccountType OF
                                 gAccountType::"G/L Account":
                                   BEGIN
                                     gGLAccount.GET(gBankAccountNo);
                                   END;
                                 gAccountType::"Bank Account":
                                   BEGIN
                                     gBankAccount.GET(gBankAccountNo);
                                   END;
                               END;
                             END;

                  OnLookup=BEGIN
                             CASE gAccountType OF
                               gAccountType::"G/L Account":
                                 BEGIN
                                   IF PAGE.RUNMODAL(0,gGLAccount) = ACTION::LookupOK THEN
                                     gBankAccountNo := gGLAccount."No.";
                                 END;
                               gAccountType::"Bank Account":
                                 BEGIN
                                   IF PAGE.RUNMODAL(0,gBankAccount) = ACTION::LookupOK THEN
                                     gBankAccountNo := gBankAccount."No.";
                                 END;
                             END;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      gFileName@12047960 : Text;
      gTextFile@1000 : File;
      gTextLine@1002 : Text[250];
      gDocNo@1005 : Code[20];
      gJnlTemplateName@1014 : Code[10];
      gJnlBatchName@1015 : Code[10];
      gGenJnlBatch@1016 : Record 232;
      PEB001@1021 : TextConst 'ENU=Does not Exist or is Paid;SVE=Finns inte eller „r betald';
      PEB002@1022 : TextConst 'ENU=BGMAX Payment;SVE=BGMAX betalning';
      gGLSetup@1000000002 : Record 98;
      gGenJnlTemplate@1000000007 : Record 80;
      PEB003@1070000 : TextConst 'ENU=All files|*.*|TXT-files (*.txt)|*.txt|WRI-files (*.wri)|*.wri;SVE=Alla filer|*.*|TXT-filer (*.txt)|*.txt|WRI-filer (*.wri)|*.wri';
      PEB004@1000000008 : TextConst 'ENU=Import BG Max;NOR="Importer BgMax ";SVE=Import BG Max';
      gSalesRecSetup@1000000014 : Record 311;
      gBaseCodeUnits@1000000015 : Codeunit 11128082;
      gW@1070002 : Dialog;
      gGenJnlLine@1070007 : Record 81;
      PEB005@1000000006 : TextConst 'ENU=The Sum of marked Lines Differ with %1;SVE=Summa m„rkta rader avviker med %1';
      gBankAccountNo@1100570003 : Code[20];
      gGLAccount@1100570002 : Record 15;
      gBankAccount@1100570001 : Record 270;
      gAccountType@1100570000 : 'G/L Account,Customer,Vendor,Bank Account,Fixed Asset';
      gCaseRecieptAccmapping@1100570005 : Record 11128070;
      gtTextLineEntry@1100570006 : TEMPORARY Record 11128080;
      gNoSeriesMgt@1100570007 : Codeunit 396;
      gPostingDate@1100570008 : Date;
      gCurrencyCode@1100570004 : Code[10];
      gtGLLines@1100570010 : TEMPORARY Record 81;
      "gTotalAmount(LCY)"@1000000003 : Decimal;
      PEB006@1000000001 : TextConst 'ENU=Amount Difference with %1;SVE=Beloppsdifferens p† %1';
      gtDocNoRec@1000000004 : TEMPORARY Record 11128072;
      PEB007@1000000005 : TextConst 'ENU=Paid more than once in this file;SVE=Dubbelbetald i samma fil';
      PEB008@1000000012 : TextConst 'ENU=Customer No. Diff.;SVE=Kundnr diff.';
      PEB009@1100570011 : TextConst 'ENU=It is not a BGMAF file;SVE=Det „r inte en BGMAX fil';
      gFileMgt@12047958 : Codeunit 419;
      gServerFileName@12047959 : Text;
      gBaseTables@12047961 : Codeunit 11128078;
      gAppliesToDocNo@12047962 : Code[20];
      gFileNameVisible@12047964 : Boolean INDATASET;
      PEB001a@1100285100 : TextConst 'ENU=%1 Does not Exist or is Paid;SVE=%1 Finns inte eller „r betald';

    PROCEDURE SetGenJnlLine@1(NewGLJnlLine@1000 : Record 81);
    BEGIN
      gGenJnlLine := NewGLJnlLine;
      gJnlTemplateName := gGenJnlLine."Journal Template Name";
      gJnlBatchName := gGenJnlLine."Journal Batch Name";
    END;

    PROCEDURE InvCredExist@2(pApplyToDocNo@1000000000 : Code[20];VAR pvLastCustomerNo@1000000002 : Code[20];VAR pvCustomerNoError@1000000001 : Boolean) : Boolean;
    VAR
      CustLedgerEntry@1000 : Record 21;
    BEGIN
      IF pApplyToDocNo = '' THEN
        EXIT(FALSE);
      CustLedgerEntry.SETCURRENTKEY("Document No.");
      CustLedgerEntry.SETRANGE("Document No.",pApplyToDocNo);
      CustLedgerEntry.SETRANGE(Open,TRUE);
      IF CustLedgerEntry.FIND('-') THEN BEGIN
        IF NOT pvCustomerNoError AND (pvLastCustomerNo <> '') THEN
          pvCustomerNoError := pvLastCustomerNo <> CustLedgerEntry."Customer No.";
        pvLastCustomerNo := CustLedgerEntry."Customer No.";
        EXIT(TRUE);
      END ELSE
        EXIT(FALSE);
    END;

    PROCEDURE Txt2Dec@1000000006(pText@1000000000 : Text[30]) : Decimal;
    VAR
      TempAmount@1000000001 : Decimal;
    BEGIN
      EVALUATE(TempAmount,pText);
      EXIT(ROUND(TempAmount / 100));
    END;

    PROCEDURE SetCurrencyCode@1100570000(PCode@1100570000 : Code[10]) : Code[10];
    BEGIN
      gGLSetup.TESTFIELD("LCY Code");
      IF PCode = gGLSetup."LCY Code" THEN
        EXIT('')
      ELSE
        EXIT(PCode);
    END;

    PROCEDURE InsertInfoLineTemp@1100570002(pType@1100570000 : Text[2];pText@1000000000 : Text[1000]);
    BEGIN
      IF NOT (pType IN ['20'..'29']) THEN
        EXIT;
      gtTextLineEntry.INIT;
      gtTextLineEntry."Line No." += 10000;
      gtTextLineEntry.Description := pText;
      gtTextLineEntry."Line Code" := pType;
      gtTextLineEntry."File Type" := gtTextLineEntry."File Type"::"BG-Max";
      gtTextLineEntry.INSERT;
    END;

    PROCEDURE CopyInfoLine@1100570011();
    VAR
      TextLineEntry@1100570000 : Record 11128080;
    BEGIN
      gtTextLineEntry.RESET;
      IF gtTextLineEntry.FIND('-') THEN REPEAT
        TextLineEntry := gtTextLineEntry;
        TextLineEntry."Journal Template Name" := gGenJnlLine."Journal Template Name";
        TextLineEntry."Journal Batch Name" := gGenJnlLine."Journal Batch Name";
        TextLineEntry."Journal Line No." := gGenJnlLine."Line No.";
        TextLineEntry.INSERT;
      UNTIL gtTextLineEntry.NEXT = 0;
      gtGLLines := gGenJnlLine;
      gtGLLines.INSERT;
    END;

    PROCEDURE DeleteInfoLine@1100570014();
    VAR
      TextLineEntry@1100570000 : Record 11128080;
    BEGIN
      TextLineEntry.RESET;
      TextLineEntry.SETRANGE("Journal Template Name",gGenJnlLine."Journal Template Name");
      TextLineEntry.SETRANGE("Journal Batch Name",gGenJnlLine."Journal Batch Name");
      TextLineEntry.DELETEALL;
    END;

    PROCEDURE InsertGlLines@1100570008(pPostingDate@1100570005 : Date);
    VAR
      Txt@1100570000 : Text;
      StartPos@1100570001 : Integer;
      ApplyToDocNo@1100570002 : Code[20];
      tDocNoRec@1100570003 : TEMPORARY Record 11128072;
      RestAmount@1100570004 : Decimal;
      lvAmount@1100570006 : Decimal;
      OneLine@1000000002 : Boolean;
      LastCustomerNo@1000000004 : Code[20];
      CustomerNoError@1000000003 : Boolean;
      ROTRUTInformation@1100285100 : Record 11128101;
      Currency@1100285101 : Record 4;
      PayerName@1100285102 : Text;
      Txt2@1100285103 : Text;
      SEPaymentImport@1100285104 : Codeunit 11128001;
    BEGIN
      StartPos := 1;

      tDocNoRec.RESET;
      tDocNoRec.DELETEALL;

      gtTextLineEntry.RESET;
      IF NOT gtTextLineEntry.FINDSET THEN
        EXIT;

      Txt := '';
      REPEAT
        CASE gtTextLineEntry."Line Code" OF
          //Betalnings-/avdragspost
          '20','21':
            BEGIN
              Txt += COPYSTR(gtTextLineEntry.Description,11,25);
              lvAmount := Txt2Dec(COPYSTR(gtTextLineEntry.Description,36,18));

              // Kredit
              IF gtTextLineEntry."Line Code" = '21' THEN
                lvAmount := -lvAmount;
            END;

          //Extra referensnummerpost
          '22','23': Txt += COPYSTR(gtTextLineEntry.Description,11,25);

          //Informations-post
          '25': Txt += DELCHR(COPYSTR(gtTextLineEntry.Description,1,50),'<>');

          //Namnpost
      //>>180208
          '26':
              PayerName := DELCHR(COPYSTR(gtTextLineEntry.Description,1,24),'<>',' ');

          //Adresspost
          '27','28':;

          //Organisationsnummerpost
          '29':;
      //<<180208
        END;
      UNTIL gtTextLineEntry.NEXT = 0;

      // Leta efter ett eller fler giltiga fakt/kredit-nr i textstr„ngen
      IF Txt <> '' THEN BEGIN
        Txt2 := Txt;  //180912
        REPEAT
          Txt := COPYSTR(Txt,StartPos);
          ApplyToDocNo := gBaseCodeUnits.GetInvNoFromString(Txt);
          IF InvCredExist(ApplyToDocNo,LastCustomerNo,CustomerNoError) THEN BEGIN
            // Undvika dubletter f”r den h„r inbet.
            tDocNoRec.INIT;
            tDocNoRec."No." := ApplyToDocNo;
            IF tDocNoRec.INSERT THEN;
          END;
          StartPos := STRPOS(Txt,ApplyToDocNo) + STRLEN(ApplyToDocNo)+1;
      //>>180813, Bug #17784
      //  UNTIL ApplyToDocNo = '';
          IF (ApplyToDocNo='') THEN StartPos +=1;
        UNTIL (ApplyToDocNo = '') AND (StartPos >= STRLEN(Txt));
      //<<180813
        Txt := Txt2;  //180912
      END;


      RestAmount := lvAmount;

      tDocNoRec.RESET;
      IF tDocNoRec.FIND('-') THEN BEGIN
        OneLine := tDocNoRec.COUNT = 1;
        // Infoga rader i Journalen
        REPEAT
          InitGlLine(pPostingDate);
          gGenJnlLine.VALIDATE("Account Type", gGenJnlLine."Account Type"::Customer);

          gAppliesToDocNo := tDocNoRec."No.";
          gGenJnlLine.VALIDATE("Applies-to Doc. No.",gAppliesToDocNo);
          gGenJnlLine."Applies-to Doc. No." := '';

          // Hittat olika kundnr
          IF CustomerNoError THEN
            SetTextForInfo(gGenJnlLine,PEB008);

          // Markerar dubletter i filen.
          gtDocNoRec.INIT;
          gtDocNoRec."No." := tDocNoRec."No.";
          IF NOT gtDocNoRec.INSERT THEN
            SetTextForInfo(gGenJnlLine,PEB007);

      //>>4PSSE, 180109
      //>>RFC1127
      //    gGenJnlLine."Received amount" := lvAmount;
          gGenJnlLine.VALIDATE("Received amount", lvAmount);
      //<<RFC1127
          IF OneLine AND (gGenJnlLine.Amount <> -lvAmount) THEN BEGIN
            ROTRUTInformation.RESET;
            ROTRUTInformation.SETRANGE(Type,ROTRUTInformation.Type::"Posted Invoice");
            ROTRUTInformation.SETRANGE("Invoice No.",gAppliesToDocNo);
            IF ROTRUTInformation.FINDSET THEN
              ROTRUTInformation.CALCSUMS(Amount);

            IF gGenJnlLine."Currency Code" = '' THEN
              Currency.InitRoundingPrecision
            ELSE BEGIN
              Currency.GET(gGenJnlLine."Currency Code");
              Currency.TESTFIELD("Amount Rounding Precision");
            END;
            gGenJnlLine.VALIDATE(Amount,ROUND(gGenJnlLine.Amount + ROTRUTInformation.Amount,Currency."Amount Rounding Precision",Currency.InvoiceRoundingDirection));
          END;
      //<<4PSSE

          // Om det „r en rad s† tas beloppet ur filen
          IF OneLine AND (gGenJnlLine.Amount <> -lvAmount) THEN BEGIN
            SetTextForInfo(gGenJnlLine,STRSUBSTNO(PEB006,gGenJnlLine.Amount + lvAmount));
            //  gGenJnlLine.Comment := STRSUBSTNO(PEB006,gGenJnlLine.Amount + Amount); //4PSSE 180109
      //>>180918
            gGenJnlLine."Applies-to Doc. No." := gAppliesToDocNo;
            SEPaymentImport.VerifySetNotMatchedOnAfterValidateAppliestoDocNoTable(gGenJnlLine);
            gGenJnlLine."Applies-to Doc. No." := '';
      //<<180918
            gGenJnlLine.VALIDATE(Amount,-lvAmount);
          END;

          gGenJnlLine."Applies-to Doc. No." := gAppliesToDocNo;

          gGenJnlLine.INSERT;

          CopyInfoLine;
          "gTotalAmount(LCY)" += gGenJnlLine."Amount (LCY)";
          RestAmount += gGenJnlLine.Amount;
        UNTIL tDocNoRec.NEXT = 0;
      END ELSE BEGIN
        InitGlLine(pPostingDate);
        gGenJnlLine.VALIDATE("Account Type", gGenJnlLine."Account Type"::Customer);
        gGenJnlLine.VALIDATE("Currency Code",SetCurrencyCode(gCaseRecieptAccmapping."File Currency Code"));
        gGenJnlLine.VALIDATE(Amount,-lvAmount);

        gGenJnlLine.VALIDATE(Description,PEB001);
      //>>4PSSE, 170822
      //>>RFC1127
      //    gGenJnlLine."Received amount" := lvAmount;
          gGenJnlLine.VALIDATE("Received amount", lvAmount);
      //<<RFC1127
        //gGenJnlLine.VALIDATE(Description,PEB001);
      //>>180208
      //  gtTextLineEntry.RESET;
      //  gtTextLineEntry.SETFILTER("Line Code",'22|23|25');
      //  IF gtTextLineEntry.FINDFIRST THEN
      //    tDocNoRec."No." := COPYSTR(DELCHR(gtTextLineEntry.Description,'<>',' '),1,MAXSTRLEN(tDocNoRec."No."));
      //  gGenJnlLine.VALIDATE(Description,STRSUBSTNO(PEB001a,tDocNoRec."No."));
        gGenJnlLine.VALIDATE(Description ,COPYSTR(PayerName + ' ' + DELCHR(Txt,'<>',' '),1,MAXSTRLEN(gGenJnlLine.Description)));
      //<<180208
        gGenJnlLine."Not Matched" := TRUE;
      //<<4PSSE

        gGenJnlLine."Information Type" := gGenJnlLine."Information Type"::Error;
        gGenJnlLine.INSERT;

        CopyInfoLine;
        "gTotalAmount(LCY)" += gGenJnlLine."Amount (LCY)";
        RestAmount += gGenJnlLine.Amount;
      END;

      // Om det „r en diff
      IF RestAmount <> 0 THEN BEGIN
        InitGlLine(pPostingDate);
        gGenJnlLine.VALIDATE("Currency Code",SetCurrencyCode(gCaseRecieptAccmapping."File Currency Code"));
        gGenJnlLine.VALIDATE(Amount,-RestAmount);

        gGenJnlLine.Description := STRSUBSTNO(PEB005,-RestAmount);
        gGenJnlLine."Information Type" := gGenJnlLine."Information Type"::Error;
        "gTotalAmount(LCY)" += gGenJnlLine."Amount (LCY)";
        gGenJnlLine.INSERT;
        CopyInfoLine;
        // M„rk raderna med Error
        gtGLLines.RESET;
        IF gtGLLines.FINDSET THEN REPEAT
          gGenJnlLine."Journal Template Name" := gtGLLines."Journal Template Name";
          gGenJnlLine."Journal Batch Name" := gtGLLines."Journal Batch Name";
          gGenJnlLine."Line No." := gtGLLines."Line No.";
          gGenJnlLine.FIND;
          gGenJnlLine."Information Type" := gGenJnlLine."Information Type"::Error;
          gGenJnlLine.MODIFY;
        UNTIL gtGLLines.NEXT = 0;
      END;

      gtGLLines.RESET;
      gtGLLines.DELETEALL;

      gtTextLineEntry.RESET;
      gtTextLineEntry.DELETEALL;
    END;

    PROCEDURE InitGlLine@1100570010(pPostingDate@1100570000 : Date);
    BEGIN
      gGenJnlLine.INIT;
      gGenJnlLine."Journal Template Name" := gJnlTemplateName;
      gGenJnlLine."Journal Batch Name" := gJnlBatchName;
      gGenJnlLine."Line No." += 10000;
      gGenJnlLine.VALIDATE("Document Type",gGenJnlLine."Document Type"::Payment);
      gGenJnlLine.VALIDATE("Document No.",gDocNo);
      gGenJnlLine."Posting No. Series" := gGenJnlBatch."Posting No. Series";
      gGenJnlLine."Source Code" := gGenJnlTemplate."Source Code";
      gGenJnlLine.VALIDATE("Posting Date",pPostingDate);
    END;

    PROCEDURE SetTextForInfo@1000000004(VAR pvGenJournalLine@1000000000 : Record 81;pTxt2@1000000001 : Text[50]);
    BEGIN
      pvGenJournalLine."Information Type" := pvGenJournalLine."Information Type"::Error;
      //IF pvGenJournalLine.Information = '' THEN
      //  pvGenJournalLine.Information := pTxt2
      //ELSE
      //  pvGenJournalLine.Information := COPYSTR(pvGenJournalLine.Information + ' | ' + pTxt2,1,50);
      IF pvGenJournalLine.Comment = '' THEN
        pvGenJournalLine.Comment := pTxt2
      ELSE
        pvGenJournalLine.Comment := COPYSTR(pvGenJournalLine.Comment + ' | ' + pTxt2,1,MAXSTRLEN(pvGenJournalLine.Comment));
    END;

    BEGIN
    {
      PEB *** Begin ***
      PEB0065 BG-Max
      PEB
      PEB *** End ***

      180813 ORANGO.DL Bug #17784, N„r en BG-Max fil l„ses in med flera inbetalningar till en kund och n†gon av dessa poster inte „r ”ppna kommer de som „r med i filen efter den st„ngda posten att inte komma med.
      180912 ORANGO.DL #18246, lost info at no-match after searching for invoices
      180918 ORANGO.DL re-verify applies-to doc. no.
      190213 ORANGO.DL RFC1127 use publisher for "Received amount"
    }
    END.
  }
  RDLDATA
  {
  }
}

