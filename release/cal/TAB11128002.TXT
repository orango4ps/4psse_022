OBJECT Table 11128002 SE Translation Texts
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Translation Texts;
               NOR=Oversettelse, tekst;
               SVE=Spr†ktexter];
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[ENU=Document,G/L Account,Resource;
                                                                    NOR=Dokumenter,Hovedbokkonto,Ressurs;
                                                                    SVE=Dokument,Konto,Resurs];
                                                   OptionString=Document,G/L Account,Resource }
    { 2   ;   ;Languagecode        ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Languagecode;
                                                              NOR=Spr†kkode;
                                                              SVE=Spr†kkod] }
    { 3   ;   ;Code                ;Text30        ;TableRelation=IF (Type=CONST(G/L Account)) "G/L Account".No.
                                                                 ELSE IF (Type=CONST(Resource)) Resource.No.;
                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 4   ;   ;Text                ;Text250       ;OnValidate=BEGIN
                                                                IF (Type <> Type::Document) AND (STRLEN(Text) > 50) THEN BEGIN
                                                                  Text := COPYSTR(Text,1,50);
                                                                  MESSAGE(Text001,FIELDCAPTION(Text));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Text;
                                                              NOR=Tekst;
                                                              SVE=Ben„mning] }
  }
  KEYS
  {
    {    ;Type,Languagecode,Code                  ;Clustered=Yes }
    {    ;Type,Code,Languagecode                   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100525001 : TextConst 'ENU=%1 can contain maximum of 50 characters;NOR=%1 kan inneholde maksimalt 50 tegn;SVE=%1 f†r inte vara l„ngre „n 50 tecken';
      Text002@1100525000 : TextConst 'ENU=String "%1" to long in the report, max 30 char;NOR=Streng "%1" for lang i rapporten, maksimalt 30 tegn;SVE=%1 f†r inte vara l„ngre „n 30 tecken';
      DocText@1100525005 : Record 11128002;
      LanguageCode@1100525004 : Code[10];
      Language@1100525003 : Record 8;
      SEBasicSetup@1100525002 : Record 11128009;

    PROCEDURE SetLanguage@2(LanguageIn@1000 : Code[10]);
    BEGIN
      SEBasicSetup.GET;
      IF LanguageIn = '' THEN
        Languagecode := SEBasicSetup."Local language for documents"
      ELSE
        Languagecode := LanguageIn;
      IF SEBasicSetup."Local language for documents" <> 'SE' THEN
        Language.GET(SEBasicSetup."Local language for documents");
      DELETEALL;
    END;

    PROCEDURE x@1(SearchField@1000 : Text[250]) : Text[190];
    BEGIN
      SearchField := DELCHR(SearchField,'>');
      IF STRLEN(SearchField) > 30 THEN
        ERROR(Text002,SearchField);
      IF GET(Type::Document,Languagecode,SearchField) THEN
        EXIT('');
      IF NOT DocText.GET(Type::Document,Languagecode,SearchField) THEN BEGIN
        Language.RESET;
        Language.SETFILTER(Code,'<>%1','');
        IF Language.FIND('-') THEN REPEAT
          DocText.INIT;
          DocText.Type := Type::Document;
          DocText.Languagecode := Language.Code;
          DocText.Code := SearchField;
          IF DocText.INSERT THEN;
        UNTIL Language.NEXT = 0;
        DocText.INIT;
        DocText.Type := Type::Document;
        CLEAR(DocText.Languagecode);
        DocText.Code := SearchField;
        DocText.Text := SearchField;
        IF DocText.INSERT THEN;
        DocText.INIT;
        DocText.Type := Type::Document;
        DocText.Languagecode := 'SE';
        DocText.Code := SearchField;
        IF DocText.INSERT THEN;
        DocText.GET(Type::Document,Languagecode,SearchField);
      END;
      IF DocText.Text = '' THEN
        EXIT(DocText.Code)
      ELSE
        IF DocText.Text = '-' THEN
          EXIT('')
        ELSE
          EXIT(DocText.Text);
    END;

    PROCEDURE ClearField@3(LanguageIn@1000 : Code[10];FieldIn@1001 : Text[250]);
    BEGIN
      FieldIn := DELCHR(FieldIn,'>');
      IF STRLEN(FieldIn) > 30 THEN
        ERROR(Text002,FieldIn);
      INIT;
      Type := Type::Document;
      Languagecode := Languagecode;
      Code := FieldIn;
      IF INSERT THEN;
    END;

    PROCEDURE TableTranslations@1000000000(InType@1000000000 : 'Document,G/L Account,Resource';InLanguagecode@1000000001 : Code[10];InCode@1000000002 : Code[20];InText@1000000003 : Text[250]) : Text[250];
    BEGIN
      IF InLanguagecode = '' THEN BEGIN
        SEBasicSetup.GET;
        SEBasicSetup.TESTFIELD("Local language for documents");
        InLanguagecode := SEBasicSetup."Local language for documents";
      END;

      IF NOT DocText.GET(InType,InLanguagecode,InCode) THEN
        CLEAR(DocText);

      IF DocText.Text <> '' THEN
        EXIT(DocText.Text)
      ELSE
        EXIT(InText);
    END;

    BEGIN
    END.
  }
}

