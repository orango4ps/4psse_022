OBJECT Report 11012742 Adj. Survey Hours by Cost Obj.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=šbersichtsstunden nach Kostentr„ger anpassen;
               ENU=Adjust Survey Hours by Cost Object;
               NLD=Uren per kostendrager corrigeren;
               NOR=Juster kartl.timer etter kostobjekt;
               SVE=Just.kartl.tim. efter kst.obj.];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF CurrentHours = 0 THEN
                    ERROR(Text000);
                END;

  }
  DATASET
  {
    { 8689;    ;DataItem;                    ;
               DataItemTable=Table11071813;
               DataItemTableView=SORTING(Survey No.,Location Code,Seq. No.);
               OnPreDataItem=BEGIN
                               IF (NewHours = CurrentHours) AND NOT DeleteLinesFirst THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=VAR
                                  MaintenanceSchemeVersion@1100528601 : Record 11071743;
                                  ServSurvLocObjDetail@1100528603 : Record 11071807;
                                  ServiceSurveyManagement@1100528602 : Codeunit 11012852;
                                  AdjustmentFactor@1100528600 : Decimal;
                                BEGIN
                                  AdjustmentFactor := (NewHours / CurrentHours) -1;

                                  ServSurvLocObjDetail.SETRANGE("Survey No.", "Survey No.");
                                  ServSurvLocObjDetail.SETRANGE("Location Code", "Location Code");
                                  ServSurvLocObjDetail.SETRANGE("Seq. No.", "Seq. No.");
                                  IF ServSurvLocObjDetail.FINDSET THEN
                                    REPEAT
                                      AdjustServSurvObjectAddActLine(
                                        "Survey No.", "Location Code", "Seq. No.", ServSurvLocObjDetail."Maintenance Scheme Code", CostObject,
                                        AdjustmentFactor, DeleteLinesFirst);

                                      MaintenanceSchemeVersion.SETRANGE("Line Type", MaintenanceSchemeVersion."Line Type"::"Maintenance Scheme");
                                      MaintenanceSchemeVersion.SETRANGE(Code, ServSurvLocObjDetail."Maintenance Scheme Code");
                                      MaintenanceSchemeVersion.SETRANGE("Belongs to Scheme", '');
                                      MaintenanceSchemeVersion.SETFILTER("Index Date", '..%1', ServiceSurveyManagement.GetReferenceDate("Survey No."));
                                      IF MaintenanceSchemeVersion.FINDLAST THEN
                                        AdjustMaintSchemeVersionLine(
                                          MaintenanceSchemeVersion, "Survey No.", "Location Code", "Seq. No.", CostObject, AdjustmentFactor);

                                      MaintenanceSchemeVersion.SETRANGE("Line Type", MaintenanceSchemeVersion."Line Type"::"Standard Object");
                                      MaintenanceSchemeVersion.SETRANGE(Code, "Standard Object No.");
                                      MaintenanceSchemeVersion.SETRANGE("Belongs to Scheme", ServSurvLocObjDetail."Maintenance Scheme Code");
                                      MaintenanceSchemeVersion.SETFILTER("Index Date", '..%1', ServiceSurveyManagement.GetReferenceDate("Survey No."));
                                      IF MaintenanceSchemeVersion.FINDLAST THEN
                                        AdjustMaintSchemeVersionLine(
                                          MaintenanceSchemeVersion, "Survey No.", "Location Code", "Seq. No.", CostObject, AdjustmentFactor);

                                      ServSurvLocObjDetail.UpdateTotals;
                                      ServSurvLocObjDetail.MODIFY;
                                      ServSurvLocObjDetail.UpdateTotalsObject;
                                    UNTIL ServSurvLocObjDetail.NEXT = 0;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   UpdateHours;
                 END;

    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=[NOR=Kostnadsobjekt;
                             SVE=Kostnadsobjekt];
                  SourceExpr=CostObject;
                  CaptionClass='1,1,2';
                  TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                              Cost Type=CONST(Labor));
                  OnValidate=BEGIN
                               CostObjectValidate;
                             END;
                              }

      { 1100525004;2;Field  ;
                  CaptionML=[DEU=Zuerst Anpassungszeilen l”schen;
                             ENU=Delete Adjustment Lines First;
                             NLD=Correctieregels eerst verwijderen;
                             NOR=Fjern justeringsrader f›rst;
                             SVE=Ta bort justeringsrader f”rst];
                  SourceExpr=DeleteLinesFirst;
                  OnValidate=BEGIN
                               UpdateHours;
                             END;
                              }

      { 1100525005;2;Field  ;
                  CaptionML=[DEU=Aktuelle Stunden;
                             ENU=Current Hours;
                             NLD=Huidige uren;
                             NOR=N†v‘rende timer;
                             SVE=Aktuella timmar];
                  SourceExpr=CurrentHours;
                  Editable=false }

      { 1100525006;2;Field  ;
                  CaptionML=[DEU=Neue Stunden;
                             ENU=New Hours;
                             NLD=Nieuw uren;
                             NOR=Nye timer;
                             SVE=Nya timmar];
                  SourceExpr=NewHours }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ServSurvLocationObject@1100528600 : Record 11071813;
      CostObject@1100528602 : Code[20];
      CostObjectName@1100528604 : Text[50];
      CurrentHours@1100528601 : Decimal;
      NewHours@1100528603 : Decimal;
      Text000@1100528605 : TextConst 'DEU="Aktuelle Stunden = 0, Anpassung nicht m”glich.";ENU=Current Hours is 0, cannot adjustment.;NLD=Huidige uren is 0, bijwerken niet mogelijk.;NOR=N†v‘rende timer er 0, kan ikke justere;SVE=Aktuella timmar „r 0, kan inte justeras.';
      DeleteLinesFirst@1100528606 : Boolean;

    PROCEDURE SetDefaults@1100528600(VAR IServSurvLocationObject@1100528600 : Record 11071813);
    BEGIN
      ServSurvLocationObject.COPY(IServSurvLocationObject);

      UpdateHours;
    END;

    PROCEDURE GetCurrentCostByCostObject@1100528602(ICostObject@1100528608 : Code[20]) : Decimal;
    VAR
      ServSurvLocObjDetail@1100528609 : Record 11071807;
      ServiceSurveyManagement@1100528600 : Codeunit 11012852;
      Dummy@1100528607 : Decimal;
      Hours@1100528606 : Decimal;
      TotalHours@1100528610 : Decimal;
    BEGIN
      IF ServSurvLocationObject.FINDSET THEN
        REPEAT
          ServSurvLocObjDetail.SETRANGE("Survey No.", ServSurvLocationObject."Survey No.");
          ServSurvLocObjDetail.SETRANGE("Location Code", ServSurvLocationObject."Location Code");
          ServSurvLocObjDetail.SETRANGE("Seq. No.", ServSurvLocationObject."Seq. No.");
          IF ServSurvLocObjDetail.FINDSET THEN
            REPEAT
              Hours := 0;
              ServiceSurveyManagement.GetCostObjectDetByCostObject(ServSurvLocObjDetail,
                ICostObject, '', NOT DeleteLinesFirst, Dummy, Hours, Dummy, Dummy, Dummy, Dummy, Dummy);
              Hours *= ServSurvLocationObject.Quantity * ServSurvLocationObject."Quantity per Object";
              TotalHours += Hours;
            UNTIL ServSurvLocObjDetail.NEXT = 0;
        UNTIL ServSurvLocationObject.NEXT = 0;
      EXIT(TotalHours);
    END;

    PROCEDURE UpdateHours@1100528601();
    BEGIN
      IF CostObject <> '' THEN
        CurrentHours := GetCurrentCostByCostObject(CostObject)
      ELSE
        CurrentHours := 0;
      NewHours := CurrentHours;
    END;

    PROCEDURE AdjustMaintSchemeVersionLine@1100528612(IMaintenanceSchemeVersion@1100528601 : Record 11071743;ISurveyNo@1100528603 : Code[20];ILocationCode@1100528604 : Code[10];ISeqNo@1100528605 : Integer;ICostObject@1100528608 : Code[20];IAdjustmentFactor@1100528607 : Decimal);
    VAR
      MaintSchemeVersionLine@1100528600 : Record 11071744;
      ServSurvObjectAddAct@1100528602 : Record 11071814;
      LineNo@1100528606 : Integer;
    BEGIN
      MaintSchemeVersionLine.SETRANGE("Line Type", IMaintenanceSchemeVersion."Line Type");
      MaintSchemeVersionLine.SETRANGE("Type Code", IMaintenanceSchemeVersion.Code);
      MaintSchemeVersionLine.SETRANGE("Belongs to Scheme", IMaintenanceSchemeVersion."Belongs to Scheme");
      MaintSchemeVersionLine.SETRANGE("Index Date", IMaintenanceSchemeVersion."Index Date");
      MaintSchemeVersionLine.SETRANGE("Cost Object", ICostObject);
      IF MaintSchemeVersionLine.FINDSET THEN
       REPEAT
         ServSurvObjectAddAct.SETRANGE("Survey No.", ISurveyNo);
         ServSurvObjectAddAct.SETRANGE("Location Code", ILocationCode);
         ServSurvObjectAddAct.SETRANGE("Seq. No.", ISeqNo);
         IF IMaintenanceSchemeVersion."Line Type" = IMaintenanceSchemeVersion."Line Type"::"Maintenance Scheme" THEN
           ServSurvObjectAddAct.SETRANGE("Maintenance Scheme Code", IMaintenanceSchemeVersion.Code)
         ELSE
           ServSurvObjectAddAct.SETRANGE("Maintenance Scheme Code", IMaintenanceSchemeVersion."Belongs to Scheme");
         IF ServSurvObjectAddAct.FINDLAST THEN
           LineNo := ServSurvObjectAddAct."Line No.";
         LineNo += 10000;

         ServSurvObjectAddAct.INIT;
         ServSurvObjectAddAct.VALIDATE("Survey No.", ISurveyNo);
         ServSurvObjectAddAct.VALIDATE("Location Code", ILocationCode);
         ServSurvObjectAddAct.VALIDATE("Seq. No.", ISeqNo);
         IF IMaintenanceSchemeVersion."Line Type" = IMaintenanceSchemeVersion."Line Type"::"Maintenance Scheme" THEN
           ServSurvObjectAddAct.VALIDATE("Maintenance Scheme Code", IMaintenanceSchemeVersion.Code)
         ELSE
           ServSurvObjectAddAct.VALIDATE("Maintenance Scheme Code", IMaintenanceSchemeVersion."Belongs to Scheme");

         ServSurvObjectAddAct."Line No." := LineNo;

         ServSurvObjectAddAct.VALIDATE("Cost Type", MaintSchemeVersionLine."Cost Type");
         ServSurvObjectAddAct.VALIDATE("Cost Object", MaintSchemeVersionLine."Cost Object");
         ServSurvObjectAddAct.VALIDATE("Cost Component", MaintSchemeVersionLine."Cost Component");
         ServSurvObjectAddAct.VALIDATE(Description, MaintSchemeVersionLine.Description);
         ServSurvObjectAddAct.VALIDATE(Quantity, MaintSchemeVersionLine.Quantity * IAdjustmentFactor);
         ServSurvObjectAddAct.VALIDATE("Unit of Measure", MaintSchemeVersionLine."Unit of Measure");
         ServSurvObjectAddAct.VALIDATE("Frequency per Year", MaintSchemeVersionLine."Frequency per Year");

         IF MaintSchemeVersionLine."Cost Type" = MaintSchemeVersionLine."Cost Type"::Labor THEN BEGIN
           ServSurvObjectAddAct.VALIDATE(Norm, MaintSchemeVersionLine.Norm);
           ServSurvObjectAddAct.VALIDATE("Rate Code", MaintSchemeVersionLine."Rate Code");
           ServSurvObjectAddAct.VALIDATE(Rate, MaintSchemeVersionLine.Rate);
         END ELSE BEGIN
           ServSurvObjectAddAct.VALIDATE("Item No.", MaintSchemeVersionLine."Item No.");
           ServSurvObjectAddAct.VALIDATE("Basic Item", MaintSchemeVersionLine."Basic Item");
           ServSurvObjectAddAct.VALIDATE(Manufacturer, MaintSchemeVersionLine.Manufacturer);
           ServSurvObjectAddAct.VALIDATE("Vendor (Trade Item)", MaintSchemeVersionLine."Vendor (Trade Item)");
           ServSurvObjectAddAct.VALIDATE("Trade Item", MaintSchemeVersionLine."Trade Item");
           ServSurvObjectAddAct.VALIDATE("Cost Price", MaintSchemeVersionLine."Cost Price");
           ServSurvObjectAddAct.VALIDATE("Gross Price", MaintSchemeVersionLine."Gross Price");
           ServSurvObjectAddAct.VALIDATE("Purchase Discount %", MaintSchemeVersionLine."Purchase Discount %");
         END;
         ServSurvObjectAddAct.VALIDATE("Maintenance Interval", MaintSchemeVersionLine."Maintenance Interval");
         ServSurvObjectAddAct.VALIDATE(Vendor, MaintSchemeVersionLine.Vendor);
         ServSurvObjectAddAct.VALIDATE("Line Status", MaintSchemeVersionLine."Line Status");
         ServSurvObjectAddAct.VALIDATE("Text Block", MaintSchemeVersionLine."Text Block");

         IF IMaintenanceSchemeVersion."Line Type" = IMaintenanceSchemeVersion."Line Type"::"Maintenance Scheme" THEN
           ServSurvObjectAddAct."Line Type" := ServSurvObjectAddAct."Line Type"::"Maintenance Scheme"
         ELSE
           ServSurvObjectAddAct."Line Type" := ServSurvObjectAddAct."Line Type"::"Standard Object";
         IF ServSurvObjectAddAct.Quantity <> 0 THEN
           ServSurvObjectAddAct.INSERT(TRUE);
       UNTIL MaintSchemeVersionLine.NEXT = 0;
    END;

    PROCEDURE AdjustServSurvObjectAddActLine@1100528615(ISurveyNo@1100528603 : Code[20];ILocationCode@1100528602 : Code[10];ISeqNo@1100528601 : Integer;IMaintenanceScheme@1100528608 : Code[20];ICostObject@1100528606 : Code[20];IAdjustmentFactor@1100528600 : Decimal;IDeleteLinesFirst@1100528609 : Boolean);
    VAR
      ServSurvObjectAddAct@1100528605 : Record 11071814;
      TmpServSurvObjectAddAct@1100528607 : TEMPORARY Record 11071814;
      LineNo@1100528604 : Integer;
    BEGIN
      ServSurvObjectAddAct.SETRANGE("Survey No.", ISurveyNo);
      ServSurvObjectAddAct.SETRANGE("Location Code", ILocationCode);
      ServSurvObjectAddAct.SETRANGE("Seq. No.", ISeqNo);
      ServSurvObjectAddAct.SETRANGE("Maintenance Scheme Code", IMaintenanceScheme);
      ServSurvObjectAddAct.SETRANGE("Cost Object", ICostObject);
      IF IDeleteLinesFirst THEN
        ServSurvObjectAddAct.DELETEALL(TRUE)
      ELSE
        IF ServSurvObjectAddAct.FINDLAST THEN
          LineNo := ServSurvObjectAddAct."Line No.";
      IF ServSurvObjectAddAct.FINDSET THEN
        REPEAT
          LineNo += 10000;
          TmpServSurvObjectAddAct := ServSurvObjectAddAct;
          TmpServSurvObjectAddAct."Line No." := LineNo;
          TmpServSurvObjectAddAct.VALIDATE(Quantity, TmpServSurvObjectAddAct.Quantity * IAdjustmentFactor);
          IF TmpServSurvObjectAddAct.Quantity <> 0 THEN
            TmpServSurvObjectAddAct.INSERT;
        UNTIL ServSurvObjectAddAct.NEXT = 0;

      IF TmpServSurvObjectAddAct.FINDSET THEN
        REPEAT
          ServSurvObjectAddAct := TmpServSurvObjectAddAct;
          ServSurvObjectAddAct.INSERT(TRUE);
        UNTIL TmpServSurvObjectAddAct.NEXT = 0;
    END;

    PROCEDURE CostObjectValidate@1100525000();
    VAR
      DimensionValue@1100525000 : Record 349;
    BEGIN
      DimensionValue.SETCURRENTKEY("Global Dimension No.");
      DimensionValue.SETRANGE("Global Dimension No.", 2);
      DimensionValue.SETRANGE(Code, CostObject);
      IF DimensionValue.FINDFIRST THEN
        CostObjectName := DimensionValue.Name
      ELSE
        CostObjectName := '';
      UpdateHours;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

