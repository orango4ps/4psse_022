OBJECT Page 6000 Dispatch Board
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Dispatch Board;
               NOR=Servicefordeling;
               SVE=Beordringstavla];
    ApplicationArea=#Service;
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table5900;
    SourceTableView=SORTING(Status,Response Date,Response Time,Priority);
    DataCaptionFields=Status;
    PageType=Worksheet;
    UsageCategory=Tasks;
    OnOpenPage=BEGIN
                 IF UserMgt.GetServiceFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetServiceFilter);
                   FILTERGROUP(0);
                 END;
                 SetAllFilters;

                 IF ISEMPTY THEN BEGIN
                   ServOrderFilter := '';
                   SetServOrderFilter;
                 END;
               END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 59      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Dispatch Board;
                                 NOR=Servi&cefordeling;
                                 SVE=&Beordringstavla];
                      Image=ServiceMan }
      { 60      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=&Show Document;
                                 NOR=V&is dokument;
                                 SVE=&Visa dokument];
                      ToolTipML=[ENU=Open the document that the information on the line comes from.;
                                 NOR=èpne dokumentet som informasjonen pÜ linjen kommer fra.;
                                 SVE=ôppna dokumentet som informationen pÜ raden hÑmtas frÜn.];
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=View;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 PageManagement@1000 : Codeunit 700;
                               BEGIN
                                 PageManagement.PageRunModal(Rec);
                               END;
                                }
      { 8       ;1   ;ActionGroup;
                      CaptionML=[ENU=Pla&nning;
                                 NOR=Pla&nlegging;
                                 SVE=Plan&ering];
                      Image=Planning }
      { 9       ;2   ;Action    ;
                      CaptionML=[ENU=Resource &Allocations;
                                 NOR=Ressurs&tildeling;
                                 SVE=Resurs&fîrdelning];
                      ToolTipML=[ENU=View or allocate resources, such as technicians or resource groups to service items. The allocation can be made by resource number or resource group number, allocation date and allocated hours. You can also reallocate and cancel allocations. You can only have one active allocation per service item.;
                                 NOR=Vis eller fordel ressurser, for eksempel teknikere eller ressursgrupper til servicevarer. Fordelingen kan gjõres etter ressursnummer eller ressursgruppenummer, fordelingsdato og fordelte timer. Du kan dessuten fordele pÜ nytt samt kansellere fordelinger. Du kan ha bare Çn aktiv fordeling per servicevare.;
                                 SVE=Visa eller fîrdela resurser, t.ex. tekniker eller resursgrupper till serviceartiklar. Fîrdelningen kan gîras per resursnummer eller resursgruppsnummer, fîrdelningsdatum och fîrdelade timmar. Du kan ocksÜ gîra omfîrdelningar och avsluta fîrdelningar. Det kan endast finnas en aktiv fîrdelning per serviceartikel.];
                      ApplicationArea=#Service;
                      RunObject=Page 6005;
                      RunPageView=SORTING(Status,Document Type,Document No.,Service Item Line No.,Allocation Date,Starting Time,Posted)
                                  WHERE(Status=FILTER(<>Canceled));
                      RunPageLink=Document Type=FIELD(Document Type),
                                  Document No.=FIELD(No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ResourcePlanning;
                      PromotedCategory=Process;
                      PromotedOnly=Yes }
      { 55      ;2   ;Action    ;
                      CaptionML=[ENU=Demand Overview;
                                 NOR=Behovsoversikt;
                                 SVE=Behovsîversikt];
                      ToolTipML=[ENU=Get an overview of demand for your items when planning sales, production, jobs, or service management and when they will be available.;
                                 NOR=FÜ en oversikt over etterspõrsel for varene nÜr du planlegger salg, produksjon, prosjekter eller servicestyring samt nÜr de vil vëre tilgjengelige.;
                                 SVE=Visa en îversikt îver efterfrÜgan pÜ dina artiklar nÑr du planerar fîrsÑljning, produktion, projekt, eller servicehantering och nÑr de ska skrivas ut.];
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      Image=Forecast;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 DemandOverview@1000 : Page 5830;
                               BEGIN
                                 DemandOverview.SetCalculationParameter(TRUE);
                                 DemandOverview.Initialize(0D,4,'','','');
                                 DemandOverview.RUNMODAL;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 47      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Print;
                                 NOR=&Skriv ut;
                                 SVE=Skriv &ut];
                      Image=Print }
      { 48      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Print &Dispatch Board;
                                 NOR=Skriv ut &servicefordeling;
                                 SVE=Skriv ut &beordningstavla];
                      ToolTipML=[ENU=Print the information on the dispatch board.;
                                 NOR=Skriv ut informasjon om servicefordelingen.;
                                 SVE=Skriv ut informationen pÜ beordringstavlan.];
                      ApplicationArea=#Service;
                      Image=Print;
                      OnAction=BEGIN
                                 REPORT.RUN(REPORT::"Dispatch Board",TRUE,TRUE,Rec);
                               END;
                                }
      { 49      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Print Service &Order;
                                 NOR=Skriv ut service&ordre;
                                 SVE=&Skriv ut serviceorder];
                      ToolTipML=[ENU=Print the selected service order.;
                                 NOR=Skriv ut den valgte serviceordren.;
                                 SVE=Skriv ut den valda serviceordern.];
                      ApplicationArea=#Service;
                      Image=Print;
                      OnAction=BEGIN
                                 CLEAR(ServHeader);
                                 ServHeader.SETRANGE("Document Type","Document Type");
                                 ServHeader.SETRANGE("No.","No.");
                                 REPORT.RUN(REPORT::"Service Order",TRUE,TRUE,ServHeader);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 22  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=AllmÑnt] }

    { 24  ;2   ;Field     ;
                CaptionML=[ENU=Resource Filter;
                           NOR=Ressursfilter;
                           SVE=Resursfilter];
                ToolTipML=[ENU=Specifies the filter that displays an overview of documents with service item lines that a certain resource is allocated to.;
                           NOR=Angir filteret som viser en oversikt over dokumenter med servicevarelinjer der en bestemt ressurs er tildelt.;
                           SVE=Anger filtret som visar en îversikt îver dokument med serviceartikelrader som en viss resurs har fîrdelats till.];
                ApplicationArea=#Service;
                SourceExpr=ResourceFilter;
                OnValidate=BEGIN
                             SetResourceFilter;
                             ResourceFilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           Res.RESET;
                           IF PAGE.RUNMODAL(0,Res) = ACTION::LookupOK THEN BEGIN
                             Text := Res."No.";
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 39  ;2   ;Field     ;
                CaptionML=[ENU=Resource Group Filter;
                           NOR=Ressursgruppefilter;
                           SVE=Resursgruppfilter];
                ToolTipML=[ENU=Specifies the filter that displays an overview of documents with service item lines that a certain resource group is allocated to.;
                           NOR=Angir filteret som viser en oversikt over dokumenter med servicevarelinjer der en bestemt ressursgruppe er tildelt.;
                           SVE=Anger filtret som visar en îversikt îver dokument med serviceartikelrader som en viss resursgrupp har fîrdelats till.];
                ApplicationArea=#Service;
                SourceExpr=ResourceGroupFilter;
                OnValidate=BEGIN
                             SetResourceGroupFilter;
                             ResourceGroupFilterOnAfterVali;
                           END;

                OnLookup=BEGIN
                           ResourceGroup.RESET;
                           IF PAGE.RUNMODAL(0,ResourceGroup) = ACTION::LookupOK THEN BEGIN
                             Text := ResourceGroup."No.";
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 42  ;2   ;Field     ;
                CaptionML=[ENU=Response Date Filter;
                           NOR=Responsdatofilter;
                           SVE=Svarsdatumfilter];
                ToolTipML=[ENU=Specifies the filter that displays an overview of documents with the specified value in the Response Date field.;
                           NOR=Angir filteret som viser en oversikt over dokumenter med den angitte verdien i feltet Responsdato.;
                           SVE=Anger filtret som visar en îversikt îver dokument med det angivna vÑrdet i fÑltet Svarsdatum.];
                ApplicationArea=#Service;
                SourceExpr=RespDateFilter;
                OnValidate=BEGIN
                             SetRespDateFilter;
                             RespDateFilterOnAfterValidate;
                           END;
                            }

    { 30  ;2   ;Field     ;
                CaptionML=[ENU=Allocation Filter;
                           NOR=Tildelingsfilter;
                           SVE=Fîrdelningsfilter];
                ToolTipML=[ENU=Specifies the filter that displays the overview of documents from their allocation analysis point of view.;
                           NOR=Angir filteret som viser oversikten over dokumenter fra tildelingsanalysens synsvinkel.;
                           SVE=Anger filter som visar en îversikt îver dokumenten utifrÜn en fîrdelningsanalys.];
                OptionCaptionML=[ENU=" ,No or Partial Allocation,Full Allocation,Reallocation Needed";
                                 NOR=" ,Ingen eller delvis tildeling,Full tildeling,Ny tildeling nõdvendig";
                                 SVE=" ,Ingen eller delvis fîrdelning,FullstÑndig fîrdelning,Omfîrdelning nîdvÑndig"];
                ApplicationArea=#Service;
                SourceExpr=AllocationFilter;
                OnValidate=BEGIN
                             SetAllocFilter;
                             AllocationFilterOnAfterValidat;
                           END;
                            }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Document Filter;
                           NOR=Dokumentfilter;
                           SVE=Dokumentfilter];
                ToolTipML=[ENU=Specifies the filter that displays the overview of the documents of the specified type.;
                           NOR=Angir filteret som viseroversikten over dokumentene for den angitte typen.;
                           SVE=Anger filtret som visar en îversikt îver dokument av angiven typ.];
                OptionCaptionML=[ENU=Order,Quote,All;
                                 NOR=Ordre,Tilbud,Alle;
                                 SVE=Order,Offert,Alla];
                ApplicationArea=#Service;
                SourceExpr=DocFilter;
                OnValidate=BEGIN
                             SetDocFilter;
                             DocFilterOnAfterValidate;
                           END;
                            }

    { 65  ;2   ;Field     ;
                CaptionML=[ENU=No. Filter;
                           NOR=Nr.filter;
                           SVE=Nummerfilter];
                ToolTipML=[ENU=Specifies the filter that is used to see the specified document.;
                           NOR=Angir filteret som brukes for Ü se det angitte dokumentet.;
                           SVE=Anger filter som anvÑnds fîr att se det angivna dokumentet.];
                ApplicationArea=#Service;
                SourceExpr=ServOrderFilter;
                OnValidate=BEGIN
                             SetServOrderFilter;
                             ServOrderFilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           ServHeader.RESET;
                           SetDocFilter2(ServHeader);
                           IF PAGE.RUNMODAL(0,ServHeader) = ACTION::LookupOK THEN BEGIN
                             Text := ServHeader."No.";
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 79  ;2   ;Field     ;
                CaptionML=[ENU=Status Filter;
                           NOR=Statusfilter;
                           SVE=Statusfilter];
                ToolTipML=[ENU=Specifies the filter that displays an overview of documents with a certain value in the Status field.;
                           NOR=Angir filteret som viser en oversikt over dokumenter med en bestemt verdi i Status-feltet.;
                           SVE=Anger filtret som visar en îversikt îver dokument med ett visst vÑrde i fÑltet Status.];
                OptionCaptionML=[ENU=" ,Pending,In Process,Finished,On Hold";
                                 NOR=" ,I kõ,I arbeid,Ferdig,Avvent";
                                 SVE=" ,FîrestÜende,PÜgÜende,Avslutad,Stoppad"];
                ApplicationArea=#Service;
                SourceExpr=StatusFilter;
                OnValidate=BEGIN
                             SetStatusFilter;
                             StatusFilterOnAfterValidate;
                           END;
                            }

    { 45  ;2   ;Field     ;
                CaptionML=[ENU=Customer Filter;
                           NOR=Kundefilter;
                           SVE=Kundfilter];
                ToolTipML=[ENU=Specifies the filter that displays an overview of documents with a certain value in the Customer No. field.;
                           NOR=Angir filteret som viser en oversikt over dokumenter med en bestemt verdi i kundenummerfeltet.;
                           SVE=Anger filtret som visar en îversikt îver dokument med ett visst vÑrde i fÑltet Kundnr.];
                ApplicationArea=#Service;
                SourceExpr=CustomFilter;
                OnValidate=BEGIN
                             SetCustFilter;
                             CustomFilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           Cust.RESET;
                           IF PAGE.RUNMODAL(0,Cust) = ACTION::LookupOK THEN BEGIN
                             Text := Cust."No.";
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 43  ;2   ;Field     ;
                CaptionML=[ENU=Contract Filter;
                           NOR=Kontraktfilter;
                           SVE=Kontraktsfilter];
                ToolTipML=[ENU=Specifies all billable prices for the job task.;
                           NOR=Angir alle fakturerbare priser for prosjektoppgaven.;
                           SVE=Anger alla fakturerbara priser fîr projektaktiviteten.];
                ApplicationArea=#Service;
                SourceExpr=ContractFilter;
                OnValidate=BEGIN
                             SetContractFilter;
                             ContractFilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           ServiceContract.RESET;
                           ServiceContract.SETRANGE("Contract Type",ServiceContract."Contract Type"::Contract);
                           IF PAGE.RUNMODAL(0,ServiceContract) = ACTION::LookupOK THEN BEGIN
                             Text := ServiceContract."Contract No.";
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 37  ;2   ;Field     ;
                CaptionML=[ENU=Zone Filter;
                           NOR=Sonefilter;
                           SVE=Zonfilter];
                ToolTipML=[ENU=Specifies the filter that displays an overview of documents with a certain value in the Service Zone Code field.;
                           NOR=Angir filteret som viser en oversikt over dokumenter med en bestemt verdi i feltet Servicesonekode.;
                           SVE=Anger filtret som visar en îversikt îver dokument med ett visst vÑrde i fÑltet Servicezonskod.];
                ApplicationArea=#Service;
                SourceExpr=ZoneFilter;
                OnValidate=BEGIN
                             SetZoneFilter;
                             ZoneFilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           ServiceZones.RESET;
                           IF PAGE.RUNMODAL(0,ServiceZones) = ACTION::LookupOK THEN BEGIN
                             Text := ServiceZones.Code;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the estimated date when work on the order should start, that is, when the service order status changes from Pending, to In Process.;
                           NOR=Angir den beregnede datoen da arbeidet pÜ ordren skal starte, det vi si nÜr serviceordrestatusen endres fra Venter til PÜgÜr.;
                           SVE=Anger det datum dÜ arbete i ordern berÑknas pÜbîrjas, det vill sÑga nÑr serviceorderstatus Ñndras frÜn FîrestÜende till PÜgÜende.];
                ApplicationArea=#Service;
                SourceExpr="Response Date" }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the estimated time when work on the order starts, that is, when the service order status changes from Pending, to In Process.;
                           NOR=Angir den beregnede klokkeslettet da arbeidet pÜ ordren starter, det vi si nÜr serviceordrestatusen endres fra Venter til PÜgÜr.;
                           SVE=Anger den tid dÜ arbete i ordern inleds, det vill sÑga nÑr serviceorderstatus Ñndras frÜn FîrestÜende till PÜgÜende.];
                ApplicationArea=#Service;
                SourceExpr="Response Time" }

    { 81  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the priority of the service order.;
                           NOR=Angir prioriteten til serviceordren.;
                           SVE=Anger serviceorderns prioritet.];
                ApplicationArea=#Service;
                SourceExpr=Priority }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of the service document on the line.;
                           NOR=Angir typen servicedokument pÜ linjen.;
                           SVE=Anger typen av servicedokument pÜ raden.];
                ApplicationArea=#Service;
                SourceExpr="Document Type" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the involved entry or record, according to the specified number series.;
                           NOR=Angir nummeret pÜ den aktuelle oppfõringen eller posten, i henhold til den angitte nummerserien.;
                           SVE=Anger numret fîr den berîrda transaktionen eller posten, enligt den angivna nummerserien.];
                ApplicationArea=#Service;
                SourceExpr="No." }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a short description of the service document, such as Order 2001.;
                           NOR=Angir en kort beskrivelse av servicedokumentet, for eksempel Ordre 2001.;
                           SVE=Anger en kort beskrivning av servicedokumentet, till exempel Order 2001.];
                ApplicationArea=#Service;
                SourceExpr=Description;
                Visible=FALSE }

    { 33  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the service order status, which reflects the repair or maintenance status of all service items on the service order.;
                           NOR=Angir serviceordrestatusen, som gjenspeiler reparasjons- eller vedlikeholdsstatusen til alle servicevarer i denne serviceordren.;
                           SVE=Anger serviceorderns status, som visar reparations- eller underhÜllsstatus fîr alla serviceartiklar i serviceordern.];
                ApplicationArea=#Service;
                SourceExpr=Status }

    { 53  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the customer who owns the items in the service document.;
                           NOR=Angir nummeret pÜ kunden som eier varene i servicedokumentet.;
                           SVE=Anger numret pÜ kunden som Ñger artiklarna i servicedokumentet.];
                ApplicationArea=#Service;
                SourceExpr="Customer No." }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the customer to whom the items on the document will be shipped.;
                           NOR=Angir navnet pÜ kunden som varene i dokumentet skal leveres til.;
                           SVE=Anger namnet pÜ kunden som artiklarna pÜ dokumentet ska levereras till.];
                ApplicationArea=#Service;
                SourceExpr=Name }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the contract associated with the order.;
                           NOR=Angir nummeret pÜ kontrakten som er knyttet til ordren.;
                           SVE=Anger numret pÜ kontraktet som Ñr kopplat till ordern.];
                ApplicationArea=#Service;
                SourceExpr="Contract No.";
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the service zone code of the customer's ship-to address in the service order.;
                           NOR=Angir servicesonekoden for kundens lever til-adresse i serviceordren.;
                           SVE=Anger servicezonkoden fîr kundens leveransadress i serviceordern.];
                ApplicationArea=#Service;
                SourceExpr="Service Zone Code" }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of resource allocations to service items in this order.;
                           NOR=Angir antall ressurstildelinger til servicevarer i denne ordren.;
                           SVE=Anger antalet resursfîrdelningar fîr serviceartiklar i serviceordern.];
                ApplicationArea=#Service;
                SourceExpr="No. of Allocations" }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the related order was created.;
                           NOR=Angir datoen da den relaterte ordren ble opprettet.;
                           SVE=Anger datumet nÑr den relaterade ordern skapades.];
                ApplicationArea=#Service;
                SourceExpr="Order Date" }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the time when the service order was created.;
                           NOR=Angir klokkeslettet da serviceordren ble opprettet.;
                           SVE=Anger tidpunkten nÑr serviceordern skapades.];
                ApplicationArea=#Service;
                SourceExpr="Order Time" }

    { 40  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that you must reallocate resources to at least one service item in this service order.;
                           NOR=Angir at du mÜ tildele ressurser pÜ nytt til minst Çn servicevare i denne serviceordren.;
                           SVE=Anger att du mÜste omfîrdela resurser till minst en serviceartikel i serviceordern.];
                ApplicationArea=#Service;
                SourceExpr="Reallocation Needed" }

    { 94  ;1   ;Group      }

    { 92  ;2   ;Field     ;
                Name=Description2;
                CaptionML=[ENU=Service Order Description;
                           NOR=Beskrivelse av serviceordre;
                           SVE=Serviceorder beskrivning];
                ToolTipML=[ENU=Specifies a short description of the service document, such as Order 2001.;
                           NOR=Angir en kort beskrivelse av servicedokumentet, for eksempel Ordre 2001.;
                           SVE=Anger en kort beskrivning av servicedokumentet, till exempel Order 2001.];
                ApplicationArea=#Service;
                SourceExpr=Description;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                ApplicationArea=#RecordLinks;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                ApplicationArea=#Notes;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ServiceZones@1018 : Record 5957;
      Cust@1017 : Record 18;
      Res@1020 : Record 156;
      ResourceGroup@1023 : Record 152;
      ServHeader@1004 : Record 5900;
      ServiceContract@1019 : Record 5965;
      UserMgt@1005 : Codeunit 5700;
      DocFilter@1006 : 'Order,Quote,All';
      StatusFilter@1007 : ' ,Pending,In Process,Finished,On Hold';
      RespDateFilter@1010 : Text;
      ServOrderFilter@1009 : Text;
      CustomFilter@1013 : Text;
      ZoneFilter@1014 : Text;
      ContractFilter@1015 : Text;
      ResourceFilter@1016 : Text;
      ResourceGroupFilter@1022 : Text;
      AllocationFilter@1008 : ' ,No or Partial Allocation,Full Allocation,Reallocation Needed';

    [External]
    PROCEDURE SetAllFilters@3();
    BEGIN
      SetDocFilter;
      SetStatusFilter;
      SetRespDateFilter;
      SetServOrderFilter;
      SetCustFilter;
      SetZoneFilter;
      SetContractFilter;
      SetResourceFilter;
      SetResourceGroupFilter;
      SetAllocFilter;
    END;

    [External]
    PROCEDURE SetDocFilter@7();
    BEGIN
      FILTERGROUP(2);
      SetDocFilter2(Rec);
      FILTERGROUP(0);
    END;

    [External]
    PROCEDURE SetDocFilter2@2(VAR ServHeader@1000 : Record 5900);
    BEGIN
      WITH ServHeader DO BEGIN
        FILTERGROUP(2);
        CASE DocFilter OF
          DocFilter::Order:
            SETRANGE("Document Type","Document Type"::Order);
          DocFilter::Quote:
            SETRANGE("Document Type","Document Type"::Quote);
          DocFilter::All:
            SETFILTER("Document Type",'%1|%2',"Document Type"::Order,"Document Type"::Quote);
        END;
        FILTERGROUP(0);
      END;
    END;

    [External]
    PROCEDURE SetStatusFilter@8();
    BEGIN
      FILTERGROUP(2);
      CASE StatusFilter OF
        StatusFilter::" ":
          SETRANGE(Status);
        StatusFilter::Pending:
          SETRANGE(Status,Status::Pending);
        StatusFilter::"In Process":
          SETRANGE(Status,Status::"In Process");
        StatusFilter::Finished:
          SETRANGE(Status,Status::Finished);
        StatusFilter::"On Hold":
          SETRANGE(Status,Status::"On Hold");
      END;
      FILTERGROUP(0);
    END;

    [External]
    PROCEDURE SetRespDateFilter@9();
    BEGIN
      FILTERGROUP(2);
      SETFILTER("Response Date",RespDateFilter);
      RespDateFilter := GETFILTER("Response Date");
      FILTERGROUP(0);
    END;

    [External]
    PROCEDURE SetServOrderFilter@10();
    BEGIN
      FILTERGROUP(2);
      SETFILTER("No.",ServOrderFilter);
      ServOrderFilter := GETFILTER("No.");
      FILTERGROUP(0);
    END;

    [External]
    PROCEDURE SetCustFilter@11();
    BEGIN
      FILTERGROUP(2);
      SETFILTER("Customer No.",CustomFilter);
      CustomFilter := GETFILTER("Customer No.");
      FILTERGROUP(0);
    END;

    [External]
    PROCEDURE SetZoneFilter@12();
    BEGIN
      FILTERGROUP(2);
      SETFILTER("Service Zone Code",ZoneFilter);
      ZoneFilter := GETFILTER("Service Zone Code");
      FILTERGROUP(0);
    END;

    [External]
    PROCEDURE SetContractFilter@13();
    BEGIN
      FILTERGROUP(2);
      SETFILTER("Contract No.",ContractFilter);
      ContractFilter := GETFILTER("Contract No.");
      FILTERGROUP(0);
    END;

    [External]
    PROCEDURE SetResourceFilter@4();
    BEGIN
      FILTERGROUP(2);
      IF ResourceFilter <> '' THEN BEGIN
        SETFILTER("No. of Allocations",'>0');
        SETFILTER("Resource Filter",ResourceFilter);
        ResourceFilter := GETFILTER("Resource Filter");
      END ELSE BEGIN
        IF ResourceGroupFilter = '' THEN
          SETRANGE("No. of Allocations");
        SETRANGE("Resource Filter");
      END;
      FILTERGROUP(0);
    END;

    [External]
    PROCEDURE SetResourceGroupFilter@6();
    BEGIN
      FILTERGROUP(2);
      IF ResourceGroupFilter <> '' THEN BEGIN
        SETFILTER("No. of Allocations",'>0');
        SETFILTER("Resource Group Filter",ResourceGroupFilter);
        ResourceGroupFilter := GETFILTER("Resource Group Filter");
      END ELSE BEGIN
        IF ResourceFilter = '' THEN
          SETRANGE("No. of Allocations");
        SETRANGE("Resource Group Filter");
      END;
      FILTERGROUP(0);
    END;

    [External]
    PROCEDURE SetAllocFilter@1();
    BEGIN
      FILTERGROUP(2);
      CASE AllocationFilter OF
        AllocationFilter::" ":
          BEGIN
            SETRANGE("No. of Unallocated Items");
            SETRANGE("Reallocation Needed");
          END;
        AllocationFilter::"No or Partial Allocation":
          BEGIN
            SETFILTER("No. of Unallocated Items",'>0');
            SETRANGE("Reallocation Needed",FALSE);
          END;
        AllocationFilter::"Full Allocation":
          BEGIN
            SETRANGE("No. of Unallocated Items",0);
            SETRANGE("Reallocation Needed",FALSE);
          END;
        AllocationFilter::"Reallocation Needed":
          BEGIN
            SETRANGE("No. of Unallocated Items");
            SETRANGE("Reallocation Needed",TRUE);
          END;
      END;
      FILTERGROUP(0);
    END;

    LOCAL PROCEDURE RespDateFilterOnAfterValidate@19063229();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ServOrderFilterOnAfterValidate@19063213();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE StatusFilterOnAfterValidate@19021475();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ZoneFilterOnAfterValidate@19076430();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE CustomFilterOnAfterValidate@19018481();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ContractFilterOnAfterValidate@19030304();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ResourceFilterOnAfterValidate@19005532();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE DocFilterOnAfterValidate@19004301();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE AllocationFilterOnAfterValidat@19066130();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ResourceGroupFilterOnAfterVali@19056724();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    BEGIN
    END.
  }
}

