OBJECT Report 11012154 Archive Estimates
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Archivieren Kalkulationen;
               ENU=Archive Estimates;
               NLD=Calculaties archiveren;
               NOR=Arkiver kalkyler;
               SVE=Arkivera kalkyler];
    ProcessingOnly=Yes;
    UsageCategory=Tasks;
  }
  DATASET
  {
    { 1530;    ;DataItem;                    ;
               DataItemTable=Table11012151;
               OnPreDataItem=BEGIN
                               IF ArchiveBln THEN BEGIN
                                 ProjSetup.GET;
                                 ProjSetup.TESTFIELD("Archive Company");
                               END ELSE BEGIN
                                 IF RemoveBln THEN
                                   IF CONFIRM(Text010, FALSE) = FALSE THEN
                                     ERROR('');
                               END;

                               Window.OPEN(Text001 +
                                           Text002);

                               ArchiveCommonData;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF IncludeFixedEstimates OR NOT Fixed THEN BEGIN
                                    IF ArchiveBln THEN BEGIN
                                      IF ArchiveEstimate THEN BEGIN
                                        ArchiveEstimateInfo;
                                        DeleteEstimate;
                                      END;
                                    END ELSE
                                      DeleteEstimate;
                                    COMMIT;
                                  END;
                                END;

               ReqFilterFields=No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=[DEU=Archivieren Kalkulationen;
                             ENU=Archive Estimates;
                             NLD=Calculaties archiveren;
                             NOR=Arkiver kalkyler;
                             SVE=Arkivera kalkyler];
                  SourceExpr=ArchiveBln }

      { 1100525003;2;Field  ;
                  CaptionML=[DEU=Kalkulationen l”schen;
                             ENU=Remove Estimates;
                             NLD=Calculaties verwijderen;
                             NOR=Fjern kalkyler;
                             SVE=Ta bort kalkyler];
                  SourceExpr=RemoveBln }

      { 1100525004;2;Field  ;
                  CaptionML=[DEU=Feste Sch„tzungen einschlieáen;
                             ENU=Include Fixed Estimates;
                             NLD=Bevroren calculaties meenemen;
                             NOR=Inkluder faste kalkyler;
                             SVE=Inkludera fasta kalkyler];
                  SourceExpr=IncludeFixedEstimates }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ProjSetup@11012002 : Record 315;
      EstRec@11012003 : Record 11012151;
      UnitRec@11012006 : Record 204;
      Unit1Rec@11012007 : Record 204;
      DimValRec@11012008 : Record 349;
      DimVal1Rec@11012009 : Record 349;
      NormGrpRec@11012010 : Record 11012164;
      NormGrp1Rec@11012011 : Record 11012164;
      RateGrpRec@11012012 : Record 11012161;
      RateGrp1Rec@11012013 : Record 11012161;
      CommLineRec@1100485007 : Record 97;
      CommLine1Rec@1100485008 : Record 97;
      EstRateRec@11012014 : Record 11012160;
      EstRate1Rec@11012015 : Record 11012160;
      EstGrpRec@11012016 : Record 11012157;
      EstGrp1Rec@11012017 : Record 11012157;
      EstPrinRec@11012018 : Record 11012170;
      EstPrin1Rec@11012019 : Record 11012170;
      EstRespRec@11012020 : Record 11012159;
      EstResp1Rec@11012021 : Record 11012159;
      EstModelRec@1100485001 : Record 11012196;
      EstModel1Rec@1100485002 : Record 11012196;
      SubEstRecNEW@1100525000 : Record 11072074;
      SubEst1RecNEW@1100525001 : Record 11072074;
      EstPartRecNEW@1100525002 : Record 11072073;
      EstPart1RecNEW@1100525003 : Record 11072073;
      EstLineRecNEW@1100525004 : Record 11072072;
      EstLine1RecNEW@1100525005 : Record 11072072;
      RcpLineRecNEW@1100525006 : Record 11072075;
      RcpLine1RecNEW@1100525007 : Record 11072075;
      EstChrgRecNEW@1100528001 : Record 11229771;
      EstChrg1RecNEW@1100528000 : Record 11229771;
      EstCodeRecNEW@1100528003 : Record 11229772;
      EstCode1RecNEW@1100528002 : Record 11229772;
      EstModelQuanRec@1100485005 : Record 11012197;
      EstModelQuan1Rec@1100485006 : Record 11012197;
      SumRec@11012034 : Record 11012172;
      Sum1Rec@11012035 : Record 11012172;
      SumLineRec@11012036 : Record 11012171;
      SumLine1Rec@11012037 : Record 11012171;
      SumExcRec@11012038 : Record 11012173;
      SumExc1Rec@11012039 : Record 11012173;
      ArchiveBln@1100485009 : Boolean;
      RemoveBln@11012040 : Boolean;
      IncludeFixedEstimates@1210190000 : Boolean;
      Window@11012041 : Dialog;
      LineCount@11012042 : Integer;
      NoOfRecords@11012043 : Integer;
      Text000@11012044 : TextConst 'DEU=Kalkulation %1 bereits im Archivbetrieb vorhanden. M”chten Sie fortfahren?;ENU="Estimate %1 already exists in Archive Company; Continue ?";NLD="Calculatie %1 bestaat al in archiefbedrijf; Doorgaan ?";NOR=Kalkylen %1 finnes allerede i arkivert selskap. Vil du fortsette?;SVE=Kalkylen %1 finns redan i arkiverat f”retag. Vill du forts„tta?';
      Text001@11012001 : TextConst 'DEU=Kalkulation            #1##########\\;ENU=Estimate               #1##########\\;NLD=Calculatie             #1##########\\;NOR=Kalkyle               #1##########\\;SVE=Kalkyl                 #1##########\\';
      Text002@11012000 : TextConst 'DEU=Besch„ftigt mit     #2#################### @3@@@@@@@@@@@@@;ENU=Busy With             #2#################### @3@@@@@@@@@@@@@;NLD=Bezig met             #2#################### @3@@@@@@@@@@@@@;NOR=Opptatt med        #2#################### @3@@@@@@@@@@@@@;SVE=Upptagen med          #2#################### @3@@@@@@@@@@@@@';
      Text010@1100485010 : TextConst 'DEU=M”chten Sie die angegebene Auswahl l”schen ohne zu archivieren?;ENU=Do you want to remove selection without archiving ?;NLD=Wilt u de opgegeven selectie verwijderen zonder te archiveren ?;NOR=Vil du fjerne utvalg uten arkivering?;SVE=Vill du ta bort val utan arkivering?';
      Text020@11012062 : TextConst 'DEU=L”schen;ENU=Delete;NLD=Verwijderen;NOR=Fjern;SVE=Ta bort';
      DimMgt@1100485000 : Codeunit 408;
      DocumentLinkManagement@1100528700 : Codeunit 11012401;
      EstimateQuantitySheet@1100525025 : Record 11012186;
      EstimateQuantity1Sheet@1100525024 : Record 11012186;
      EstimateFeature@1100525023 : Record 11012177;
      EstimateFeature1@1100525022 : Record 11012177;
      EstimateFeaturePart@1100525021 : Record 11012178;
      EstimateFeature1Part@1100525020 : Record 11012178;
      ConfiguratorPart@1100525019 : Record 11012176;
      Configurator1Part@1100525018 : Record 11012176;
      ConfiguratorSubEstLevel@1100525017 : Record 11012191;
      ConfiguratorSubEst1Level@1100525016 : Record 11012191;
      ConfiguratorRowQuantity@1100525015 : Record 11012192;
      ConfiguratorRow1Quantity@1100525014 : Record 11012192;
      EstimateQuantitySheetHeader@1100525013 : Record 11020462;
      EstimateQuantitySheet1Header@1100525012 : Record 11020462;
      EstimateQuantityRelation@1100525011 : Record 11020463;
      EstimateQuantity1Relation@1100525010 : Record 11020463;
      EstimateQuantitySheetLine@1100525009 : Record 11020464;
      EstimateQuantitySheet1Line@1100525008 : Record 11020464;
      CommentLineGroup@1100525027 : Record 11020595;
      CommentLine1Group@1100525026 : Record 11020595;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;

    PROCEDURE ArchiveCommonData@1();
    BEGIN
      IF NOT ArchiveBln THEN EXIT;

      LineCount := 0;
      DimVal1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      DimValRec.SETRANGE("Global Dimension No.", 2);
      IF DimValRec.FINDSET THEN BEGIN
        Window.UPDATE(2, DimValRec.TABLECAPTION);
        NoOfRecords := DimValRec.COUNT;
        REPEAT
          DimMgt.GetDimValueRec(2, DimValRec.Code, DimVal1Rec, FALSE,'');
          IF DimVal1Rec.Code = '' THEN BEGIN
            DimVal1Rec.INIT;
            DimVal1Rec.COPY(DimValRec);
            DimVal1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
            DimVal1Rec.INSERT;
            Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
            LineCount := LineCount + 1;
          END;
        UNTIL DimValRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      Unit1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      IF UnitRec.FINDSET THEN BEGIN
        Window.UPDATE(2, UnitRec.TABLECAPTION);
        NoOfRecords := UnitRec.COUNT;
        REPEAT
          IF NOT Unit1Rec.GET(UnitRec.Code) THEN BEGIN
            Unit1Rec.INIT;
            Unit1Rec.COPY(UnitRec);
            Unit1Rec.INSERT;
            Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
            LineCount := LineCount + 1;
          END;
        UNTIL UnitRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      NormGrp1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      IF NormGrpRec.FINDSET THEN BEGIN
        Window.UPDATE(2, NormGrpRec.TABLECAPTION);
        NoOfRecords := NormGrpRec.COUNT;
        REPEAT
          IF NOT NormGrp1Rec.GET(NormGrpRec.Code) THEN BEGIN
            NormGrp1Rec.INIT;
            NormGrp1Rec.COPY(NormGrpRec);
            NormGrp1Rec.INSERT;
            Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
            LineCount := LineCount + 1;
          END;
        UNTIL NormGrpRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      RateGrp1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      IF RateGrpRec.FINDSET THEN BEGIN
        Window.UPDATE(2, RateGrpRec.TABLECAPTION);
        NoOfRecords := RateGrpRec.COUNT;
        REPEAT
          IF NOT RateGrp1Rec.GET(RateGrpRec."No.") THEN BEGIN
            RateGrp1Rec.INIT;
            RateGrp1Rec.COPY(RateGrpRec);
            RateGrp1Rec.INSERT;
            Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
            LineCount := LineCount + 1;
          END;
        UNTIL RateGrpRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstGrp1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      IF EstGrpRec.FINDSET THEN BEGIN
        Window.UPDATE(2, EstGrpRec.TABLECAPTION);
        NoOfRecords := EstGrpRec.COUNT;
        REPEAT
          IF NOT EstGrp1Rec.GET(EstGrpRec."No.", EstGrpRec.Type) THEN BEGIN
            EstGrp1Rec.INIT;
            EstGrp1Rec.COPY(EstGrpRec);
            EstGrp1Rec.INSERT;
            Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
            LineCount := LineCount + 1;
          END;
        UNTIL EstGrpRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      //recepten, artikelen, bewerkingscodes ??
    END;

    PROCEDURE ArchiveEstimate@2() : Boolean;
    VAR
      DocumentLink@1100528701 : Record 11012747;
      RecRef@1100528700 : RecordRef;
      EstLineTotal@1100525000 : Record 11072077;
      EstLineTotal1@1100525001 : Record 11072077;
      EstPartTotal@1100525002 : Record 11229767;
      EstPartTotal1@1100525003 : Record 11229767;
    BEGIN
      IF NOT ArchiveBln THEN EXIT;

      EstRec.CHANGECOMPANY(ProjSetup."Archive Company");
      IF EstRec.GET(Estimate."No.") THEN BEGIN
        IF NOT CONFIRM(Text000, TRUE, Estimate."No.") THEN
          EXIT(FALSE)
        ELSE
          DeleteArchivedEstimate;
      END;
      EstRec.COPY(Estimate);
      EstRec.INSERT;

      IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
        RecRef.GETTABLE(Estimate);
        DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
      END;

      Window.UPDATE(1, Estimate."No.");

      LineCount := 0;
      SubEst1RecNEW.CHANGECOMPANY(ProjSetup."Archive Company");
      SubEstRecNEW.SETRANGE("Estimate No.",Estimate."No.");
      IF SubEstRecNEW.FINDSET THEN BEGIN
        Window.UPDATE(2, SubEstRecNEW.TABLECAPTION);
        NoOfRecords := SubEstRecNEW.COUNT;
        REPEAT
          SubEst1RecNEW.INIT;
          SubEst1RecNEW.COPY(SubEstRecNEW);
          SubEst1RecNEW.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(SubEstRecNEW);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL SubEstRecNEW.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstPart1RecNEW.CHANGECOMPANY(ProjSetup."Archive Company");
      EstPartRecNEW.SETRANGE("Estimate No.",Estimate."No.");
      IF EstPartRecNEW.FINDSET THEN BEGIN
        Window.UPDATE(2, EstPartRecNEW.TABLECAPTION);
        NoOfRecords := EstPartRecNEW.COUNT;
        REPEAT
          EstPart1RecNEW.INIT;
          EstPart1RecNEW.COPY(EstPartRecNEW);
          EstPart1RecNEW.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(EstPartRecNEW);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL EstPartRecNEW.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstLine1RecNEW.CHANGECOMPANY(ProjSetup."Archive Company");
      EstLineRecNEW.SETRANGE("Estimate No.",Estimate."No.");
      IF EstLineRecNEW.FINDSET THEN BEGIN
        Window.UPDATE(2, EstLineRecNEW.TABLECAPTION);
        NoOfRecords := EstLineRecNEW.COUNT;
        REPEAT
          EstLine1RecNEW.INIT;
          EstLine1RecNEW.COPY(EstLineRecNEW);
          EstLine1RecNEW.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(EstLineRecNEW);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL EstLineRecNEW.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      RcpLine1RecNEW.CHANGECOMPANY(ProjSetup."Archive Company");
      RcpLineRecNEW.SETRANGE("Estimate No.",Estimate."No.");
      IF RcpLineRecNEW.FINDSET THEN BEGIN
        Window.UPDATE(2, RcpLineRecNEW.TABLECAPTION);
        NoOfRecords := RcpLineRecNEW.COUNT;
        REPEAT
          RcpLine1RecNEW.INIT;
          RcpLine1RecNEW.COPY(RcpLineRecNEW);
          RcpLine1RecNEW.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(RcpLineRecNEW);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL RcpLineRecNEW.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstPartTotal1.CHANGECOMPANY(ProjSetup."Archive Company");
      EstPartTotal.SETRANGE("Estimate No.",Estimate."No.");
      IF EstPartTotal.FINDSET THEN BEGIN
        Window.UPDATE(2, EstPartTotal.TABLECAPTION);
        NoOfRecords := EstPartTotal.COUNT;
        REPEAT
          EstPartTotal1.INIT;
          EstPartTotal1.COPY(EstPartTotal);
          EstPartTotal1.INSERT;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL EstPartTotal.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstLineTotal1.CHANGECOMPANY(ProjSetup."Archive Company");
      EstLineTotal.SETRANGE("Estimate No.",Estimate."No.");
      IF EstLineTotal.FINDSET THEN BEGIN
        Window.UPDATE(2, EstLineTotal.TABLECAPTION);
        NoOfRecords := EstLineTotal.COUNT;
        REPEAT
          EstLineTotal1.INIT;
          EstLineTotal1.COPY(EstLineTotal);
          EstLineTotal1.INSERT;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL EstLineTotal.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstChrg1RecNEW.CHANGECOMPANY(ProjSetup."Archive Company");
      EstChrgRecNEW.SETRANGE("Estimate No.",Estimate."No.");
      IF EstChrgRecNEW.FINDSET THEN BEGIN
        Window.UPDATE(2, EstChrgRecNEW.TABLECAPTION);
        NoOfRecords := EstChrgRecNEW.COUNT;
        REPEAT
          EstChrg1RecNEW.INIT;
          EstChrg1RecNEW.COPY(EstChrgRecNEW);
          EstChrg1RecNEW.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(EstChrgRecNEW);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL EstChrgRecNEW.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstCode1RecNEW.CHANGECOMPANY(ProjSetup."Archive Company");
      EstCodeRecNEW.SETRANGE("Estimate No.",Estimate."No.");
      IF EstCodeRecNEW.FINDSET THEN BEGIN
        Window.UPDATE(2, EstCodeRecNEW.TABLECAPTION);
        NoOfRecords := EstCodeRecNEW.COUNT;
        REPEAT
          EstCode1RecNEW.INIT;
          EstCode1RecNEW.COPY(EstCodeRecNEW);
          EstCode1RecNEW.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(EstCodeRecNEW);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL EstCodeRecNEW.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstModelQuan1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      EstModelQuanRec.SETRANGE("Estimate No.",Estimate."No.");
      IF EstModelQuanRec.FINDSET THEN BEGIN
        Window.UPDATE(2, EstModelQuanRec.TABLECAPTION);
        NoOfRecords := EstModelQuanRec.COUNT;
        REPEAT
          EstModelQuan1Rec.INIT;
          EstModelQuan1Rec.COPY(EstModelQuanRec);
          EstModelQuan1Rec.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(EstModelQuanRec);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL EstModelQuanRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      Sum1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      SumRec.SETRANGE("Estimate No.",Estimate."No.");
      IF SumRec.FINDSET THEN BEGIN
        Window.UPDATE(2, SumRec.TABLECAPTION);
        NoOfRecords := SumRec.COUNT;
        REPEAT
          Sum1Rec.INIT;
          Sum1Rec.COPY(SumRec);
          Sum1Rec.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(SumRec);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL SumRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      SumLine1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      SumLineRec.SETRANGE("Estimate No.",Estimate."No.");
      IF SumLineRec.FINDSET THEN BEGIN
        Window.UPDATE(2, SumLineRec.TABLECAPTION);
        NoOfRecords := SumLineRec.COUNT;
        REPEAT
          SumLine1Rec.INIT;
          SumLine1Rec.COPY(SumLineRec);
          SumLine1Rec.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(SumLineRec);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL SumLineRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      SumExc1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      SumExcRec.SETRANGE("Estimate No.",Estimate."No.");
      IF SumExcRec.FINDSET THEN BEGIN
        Window.UPDATE(2, SumExcRec.TABLECAPTION);
        NoOfRecords := SumExcRec.COUNT;
        REPEAT
          SumExc1Rec.INIT;
          SumExc1Rec.COPY(SumExcRec);
          SumExc1Rec.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(SumExcRec);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL SumExcRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstimateQuantity1Sheet.CHANGECOMPANY(ProjSetup."Archive Company");
      EstimateQuantitySheet.SETRANGE("Estimate No.",Estimate."No.");
      IF EstimateQuantitySheet.FINDSET THEN BEGIN
        Window.UPDATE(2, EstimateQuantitySheet.TABLECAPTION);
        NoOfRecords := EstimateQuantitySheet.COUNT;
        REPEAT
          EstimateQuantity1Sheet.INIT;
          EstimateQuantity1Sheet.COPY(EstimateQuantitySheet);
          EstimateQuantity1Sheet.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(EstimateQuantitySheet);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL EstimateQuantitySheet.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstimateFeature1.CHANGECOMPANY(ProjSetup."Archive Company");
      EstimateFeature.SETRANGE("Estimate No.",Estimate."No.");
      IF EstimateFeature.FINDSET THEN BEGIN
        Window.UPDATE(2, EstimateFeature.TABLECAPTION);
        NoOfRecords := EstimateFeature.COUNT;
        REPEAT
          EstimateFeature1.INIT;
          EstimateFeature1.COPY(EstimateFeature);
          EstimateFeature1.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(EstimateFeature);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL EstimateFeature.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstimateFeature1Part.CHANGECOMPANY(ProjSetup."Archive Company");
      EstimateFeaturePart.SETRANGE("Estimate No.",Estimate."No.");
      IF EstimateFeaturePart.FINDSET THEN BEGIN
        Window.UPDATE(2, EstimateFeaturePart.TABLECAPTION);
        NoOfRecords := EstimateFeaturePart.COUNT;
        REPEAT
          EstimateFeature1Part.INIT;
          EstimateFeature1Part.COPY(EstimateFeaturePart);
          EstimateFeature1Part.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(EstimateFeaturePart);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL EstimateFeaturePart.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      Configurator1Part.CHANGECOMPANY(ProjSetup."Archive Company");
      ConfiguratorPart.SETRANGE("Estimate No.",Estimate."No.");
      IF ConfiguratorPart.FINDSET THEN BEGIN
        Window.UPDATE(2, ConfiguratorPart.TABLECAPTION);
        NoOfRecords := ConfiguratorPart.COUNT;
        REPEAT
          Configurator1Part.INIT;
          Configurator1Part.COPY(ConfiguratorPart);
          Configurator1Part.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(ConfiguratorPart);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL ConfiguratorPart.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      ConfiguratorSubEst1Level.CHANGECOMPANY(ProjSetup."Archive Company");
      ConfiguratorSubEstLevel.SETRANGE("Estimate No.",Estimate."No.");
      IF ConfiguratorSubEstLevel.FINDSET THEN BEGIN
        Window.UPDATE(2, ConfiguratorSubEstLevel.TABLECAPTION);
        NoOfRecords := ConfiguratorSubEstLevel.COUNT;
        REPEAT
          ConfiguratorSubEst1Level.INIT;
          ConfiguratorSubEst1Level.COPY(ConfiguratorSubEstLevel);
          ConfiguratorSubEst1Level.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(ConfiguratorSubEstLevel);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL ConfiguratorSubEstLevel.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      ConfiguratorRow1Quantity.CHANGECOMPANY(ProjSetup."Archive Company");
      ConfiguratorRowQuantity.SETRANGE("Estimate No.",Estimate."No.");
      IF ConfiguratorRowQuantity.FINDSET THEN BEGIN
        Window.UPDATE(2, ConfiguratorRowQuantity.TABLECAPTION);
        NoOfRecords := ConfiguratorRowQuantity.COUNT;
        REPEAT
          ConfiguratorRow1Quantity.INIT;
          ConfiguratorRow1Quantity.COPY(ConfiguratorRowQuantity);
          ConfiguratorRow1Quantity.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(ConfiguratorRowQuantity);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL ConfiguratorRowQuantity.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstimateQuantitySheet1Header.CHANGECOMPANY(ProjSetup."Archive Company");
      EstimateQuantitySheetHeader.SETRANGE("Estimate No.",Estimate."No.");
      IF EstimateQuantitySheetHeader.FINDSET THEN BEGIN
        Window.UPDATE(2, EstimateQuantitySheetHeader.TABLECAPTION);
        NoOfRecords := EstimateQuantitySheetHeader.COUNT;
        REPEAT
          EstimateQuantitySheet1Header.INIT;
          EstimateQuantitySheet1Header.COPY(EstimateQuantitySheetHeader);
          EstimateQuantitySheet1Header.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(EstimateQuantitySheetHeader);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL EstimateQuantitySheetHeader.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstimateQuantity1Relation.CHANGECOMPANY(ProjSetup."Archive Company");
      EstimateQuantityRelation.SETRANGE("Estimate No.",Estimate."No.");
      IF EstimateQuantityRelation.FINDSET THEN BEGIN
        Window.UPDATE(2, EstimateQuantityRelation.TABLECAPTION);
        NoOfRecords := EstimateQuantityRelation.COUNT;
        REPEAT
          EstimateQuantity1Relation.INIT;
          EstimateQuantity1Relation.COPY(EstimateQuantityRelation);
          EstimateQuantity1Relation.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(EstimateQuantityRelation);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL EstimateQuantityRelation.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstimateQuantitySheet1Line.CHANGECOMPANY(ProjSetup."Archive Company");
      EstimateQuantitySheetLine.SETRANGE("Estimate No.",Estimate."No.");
      IF EstimateQuantitySheetLine.FINDSET THEN BEGIN
        Window.UPDATE(2, EstimateQuantitySheetLine.TABLECAPTION);
        NoOfRecords := EstimateQuantitySheetLine.COUNT;
        REPEAT
          EstimateQuantitySheet1Line.INIT;
          EstimateQuantitySheet1Line.COPY(EstimateQuantityRelation);
          EstimateQuantitySheet1Line.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(EstimateQuantitySheet1Line);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL EstimateQuantitySheet1Line.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE ArchiveEstimateInfo@1100485000();
    VAR
      DocumentLink@1100528701 : Record 11012747;
      RecRef@1100528700 : RecordRef;
      TryOut@1100525005 : Record 11012750;
      TryOut1@1100525004 : Record 11012750;
      TryOutQuote@1100525003 : Record 11012758;
      TryOutQuote1@1100525002 : Record 11012758;
      TryOutSuccessor@1100525001 : Record 11012761;
      TryOutSuccessor1@1100525000 : Record 11012761;
    BEGIN
      IF NOT ArchiveBln THEN EXIT;

      LineCount := 0;
      CommLine1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      CommLineRec.SETRANGE("Table Name",CommLineRec."Table Name"::Estimate);
      CommLineRec.SETRANGE("No.",Estimate."No.");
      IF CommLineRec.FINDSET THEN BEGIN
        Window.UPDATE(2, CommLineRec.TABLECAPTION);
        NoOfRecords := CommLineRec.COUNT;
        REPEAT
          CommLine1Rec.INIT;
          CommLine1Rec.COPY(CommLineRec);
          CommLine1Rec.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(CommLineRec);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL CommLineRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstRate1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      EstRateRec.SETRANGE("Estimate No.",Estimate."No.");
      IF EstRateRec.FINDSET THEN BEGIN
        Window.UPDATE(2, EstRateRec.TABLECAPTION);
        NoOfRecords := EstRateRec.COUNT;
        REPEAT
          EstRate1Rec.INIT;
          EstRate1Rec.COPY(EstRateRec);
          EstRate1Rec.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(EstRateRec);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL EstRateRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstResp1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      EstRespRec.SETRANGE("Estimate No.",Estimate."No.");
      IF EstRespRec.FINDSET THEN BEGIN
        Window.UPDATE(2, EstRespRec.TABLECAPTION);
        NoOfRecords := EstRespRec.COUNT;
        REPEAT
          EstResp1Rec.INIT;
          EstResp1Rec.COPY(EstRespRec);
          EstResp1Rec.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(EstRespRec);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL EstRespRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstPrin1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      EstPrinRec.SETRANGE("Estimate No.",Estimate."No.");
      IF EstPrinRec.FINDSET THEN BEGIN
        Window.UPDATE(2, EstPrinRec.TABLECAPTION);
        NoOfRecords := EstPrinRec.COUNT;
        REPEAT
          EstPrin1Rec.INIT;
          EstPrin1Rec.COPY(EstPrinRec);
          EstPrin1Rec.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(EstPrinRec);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL EstPrinRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      EstModel1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      EstModelRec.SETRANGE("Estimate No.",Estimate."No.");
      IF EstModelRec.FINDSET THEN BEGIN
        Window.UPDATE(2, EstModelRec.TABLECAPTION);
        NoOfRecords := EstModelRec.COUNT;
        REPEAT
          EstModel1Rec.INIT;
          EstModel1Rec.COPY(EstModelRec);
          EstModel1Rec.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(EstModelRec);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL EstModelRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      CommentLine1Group.CHANGECOMPANY(ProjSetup."Archive Company");
      CommentLineGroup.SETRANGE("Estimate No.",Estimate."No.");
      IF CommentLineGroup.FINDSET THEN BEGIN
        Window.UPDATE(2, CommentLineGroup.TABLECAPTION);
        NoOfRecords := CommentLineGroup.COUNT;
        REPEAT
          CommentLine1Group.INIT;
          CommentLine1Group.COPY(CommentLineGroup);
          CommentLine1Group.INSERT;
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
            RecRef.GETTABLE(CommentLineGroup);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, ProjSetup."Archive Company", RemoveBln);
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL CommentLineGroup.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      TryOut1.CHANGECOMPANY(ProjSetup."Archive Company");
      TryOutQuote1.CHANGECOMPANY(ProjSetup."Archive Company");
      TryOutSuccessor1.CHANGECOMPANY(ProjSetup."Archive Company");
      TryOutSuccessor.SETCURRENTKEY("Estimate No.");
      TryOutSuccessor.SETRANGE("Estimate No.",Estimate."No.");
      IF TryOutSuccessor.FINDSET THEN BEGIN
        Window.UPDATE(2, TryOutSuccessor.TABLECAPTION);
        NoOfRecords := TryOutSuccessor.COUNT;
        REPEAT
          TryOutSuccessor1.INIT;
          TryOutSuccessor1."Try-out No." := TryOutSuccessor."Try-out No.";
          TryOutSuccessor1."Try-out Quote" := TryOutSuccessor."Try-out Quote";
          TryOutSuccessor1."Line No." := 0;
          REPEAT
            TryOutSuccessor1."Estimate No." := TryOutSuccessor."Estimate No.";
            TryOutSuccessor1."Line No." := TryOutSuccessor1."Line No." + 1;
          UNTIL TryOutSuccessor1.INSERT;
          IF TryOutSuccessor."Try-out No." <> '' THEN BEGIN
            TryOut.SETRANGE(Code,TryOutSuccessor."Try-out No.");
            IF TryOut.FINDSET THEN BEGIN
              REPEAT
                TryOut1.INIT;
                TryOut1.COPY(TryOut);
                IF TryOut1.INSERT THEN;
              UNTIL TryOut.NEXT = 0;
            END;
          END;
          IF TryOutSuccessor."Try-out Quote" <> '' THEN BEGIN
            TryOutQuote.SETRANGE(Code,TryOutSuccessor."Try-out Quote");
            IF TryOutQuote.FINDSET THEN BEGIN
              REPEAT
                TryOutQuote1.INIT;
                TryOutQuote1.COPY(TryOutQuote);
                IF TryOutQuote1.INSERT THEN;
              UNTIL TryOutQuote.NEXT = 0;
            END;
          END;
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
        UNTIL TryOutSuccessor.NEXT = 0;
        Window.UPDATE(3,0);
      END;
    END;

    PROCEDURE DeleteEstimate@1100485001();
    BEGIN
      IF NOT RemoveBln THEN EXIT;

      IF IncludeFixedEstimates AND Estimate.Fixed THEN BEGIN
        Estimate.Fixed := FALSE;
        Estimate.MODIFY;
      END;

      Window.UPDATE(1, Estimate."No.");
      Window.UPDATE(2,Text020);
      Window.UPDATE(3,0);
      Estimate.DELETE(TRUE);
    END;

    PROCEDURE DeleteArchivedEstimate@1210190000();
    VAR
      DocumentLink@1210190001 : Record 11012747;
      RecRef@1210190000 : RecordRef;
      EstLineTotal1@1100525001 : Record 11072077;
      EstPartTotal1@1100525000 : Record 11229767;
    BEGIN
      EstRec.CHANGECOMPANY(ProjSetup."Archive Company");
      IF NOT EstRec.GET(Estimate."No.") THEN
        EXIT;
      EstRec.DELETE;

      IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN BEGIN
        RecRef.GETTABLE(Estimate);
        DocumentLinkManagement.DeleteDocumentLinksInCompany(RecRef, ProjSetup."Archive Company");
      END;

      SubEst1RecNEW.CHANGECOMPANY(ProjSetup."Archive Company");
      SubEst1RecNEW.SETRANGE("Estimate No.", Estimate."No.");
      SubEst1RecNEW.DELETEALL;

      EstPart1RecNEW.CHANGECOMPANY(ProjSetup."Archive Company");
      EstPart1RecNEW.SETRANGE("Estimate No.", Estimate."No.");
      EstPart1RecNEW.DELETEALL;

      EstLine1RecNEW.CHANGECOMPANY(ProjSetup."Archive Company");
      EstLine1RecNEW.SETRANGE("Estimate No.", Estimate."No.");
      EstLine1RecNEW.DELETEALL;

      RcpLine1RecNEW.CHANGECOMPANY(ProjSetup."Archive Company");
      RcpLine1RecNEW.SETRANGE("Estimate No.", Estimate."No.");
      RcpLine1RecNEW.DELETEALL;

      EstChrg1RecNEW.CHANGECOMPANY(ProjSetup."Archive Company");
      EstChrg1RecNEW.SETRANGE("Estimate No.", Estimate."No.");
      EstChrg1RecNEW.DELETEALL;

      EstCode1RecNEW.CHANGECOMPANY(ProjSetup."Archive Company");
      EstCode1RecNEW.SETRANGE("Estimate No.", Estimate."No.");
      EstCode1RecNEW.DELETEALL;

      EstPartTotal1.CHANGECOMPANY(ProjSetup."Archive Company");
      EstPartTotal1.SETRANGE("Estimate No.", Estimate."No.");
      EstPartTotal1.DELETEALL;

      EstLineTotal1.CHANGECOMPANY(ProjSetup."Archive Company");
      EstLineTotal1.SETRANGE("Estimate No.", Estimate."No.");
      EstLineTotal1.DELETEALL;

      EstModelQuan1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      EstModelQuan1Rec.SETRANGE("Estimate No.", Estimate."No.");
      EstModelQuan1Rec.DELETEALL;

      Sum1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      Sum1Rec.SETRANGE("Estimate No.", Estimate."No.");
      Sum1Rec.DELETEALL;

      SumLine1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      SumLine1Rec.SETRANGE("Estimate No.", Estimate."No.");
      SumLine1Rec.DELETEALL;

      SumExc1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      SumExc1Rec.SETRANGE("Estimate No.", Estimate."No.");
      SumExc1Rec.DELETEALL;

      CommLine1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      CommLine1Rec.SETRANGE("Table Name", CommLineRec."Table Name"::Estimate);
      CommLine1Rec.SETRANGE("No.", Estimate."No.");
      CommLine1Rec.DELETEALL;

      EstRate1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      EstRate1Rec.SETRANGE("Estimate No.", Estimate."No.");
      EstRate1Rec.DELETEALL;

      EstResp1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      EstResp1Rec.SETRANGE("Estimate No.", Estimate."No.");
      EstResp1Rec.DELETEALL;

      EstPrin1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      EstPrin1Rec.SETRANGE("Estimate No.", Estimate."No.");
      EstPrin1Rec.DELETEALL;

      EstModel1Rec.CHANGECOMPANY(ProjSetup."Archive Company");
      EstModel1Rec.SETRANGE("Estimate No.", Estimate."No.");
      EstModel1Rec.DELETEALL;

      CommentLine1Group.CHANGECOMPANY(ProjSetup."Archive Company");
      CommentLine1Group.SETRANGE("Estimate No.", Estimate."No.");
      CommentLine1Group.DELETEALL;

      EstimateQuantity1Sheet.CHANGECOMPANY(ProjSetup."Archive Company");
      EstimateQuantity1Sheet.SETRANGE("Estimate No.", Estimate."No.");
      EstimateQuantity1Sheet.DELETEALL;

      EstimateFeature1.CHANGECOMPANY(ProjSetup."Archive Company");
      EstimateFeature1.SETRANGE("Estimate No.", Estimate."No.");
      EstimateFeature1.DELETEALL;

      EstimateFeature1Part.CHANGECOMPANY(ProjSetup."Archive Company");
      EstimateFeature1Part.SETRANGE("Estimate No.", Estimate."No.");
      EstimateFeature1Part.DELETEALL;

      Configurator1Part.CHANGECOMPANY(ProjSetup."Archive Company");
      Configurator1Part.SETRANGE("Estimate No.", Estimate."No.");
      Configurator1Part.DELETEALL;

      ConfiguratorSubEst1Level.CHANGECOMPANY(ProjSetup."Archive Company");
      ConfiguratorSubEst1Level.SETRANGE("Estimate No.", Estimate."No.");
      ConfiguratorSubEst1Level.DELETEALL;

      ConfiguratorRow1Quantity.CHANGECOMPANY(ProjSetup."Archive Company");
      ConfiguratorRow1Quantity.SETRANGE("Estimate No.", Estimate."No.");
      ConfiguratorRow1Quantity.DELETEALL;

      EstimateQuantitySheet1Header.CHANGECOMPANY(ProjSetup."Archive Company");
      EstimateQuantitySheet1Header.SETRANGE("Estimate No.", Estimate."No.");
      EstimateQuantitySheet1Header.DELETEALL;

      EstimateQuantity1Relation.CHANGECOMPANY(ProjSetup."Archive Company");
      EstimateQuantity1Relation.SETRANGE("Estimate No.", Estimate."No.");
      EstimateQuantity1Relation.DELETEALL;

      EstimateQuantitySheet1Line.CHANGECOMPANY(ProjSetup."Archive Company");
      EstimateQuantitySheet1Line.SETRANGE("Estimate No.", Estimate."No.");
      EstimateQuantitySheet1Line.DELETEALL;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

