OBJECT Page 11020275 Project Financial Status SubPr
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Projekt Finanzstatus untergeordnete Projekte;
               ENU=Project Financial Status Sub Projects;
               NLD=Project financiâle status subprojecten;
               NOR=Underprosjektetes Finansielle status for prosjekt;
               SVE=Projekt, delpr. ekon. stat.];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table11072003;
    PageType=ListPlus;
    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 ProjectSetup.GET;
                 InventSetupRec.GET;

                 PeriodType := GETRANGEMAX("Period Type Filter");

                 //Set range based on permission employee
                 Permissions.CostControlReports(Rec);
                 ProjRec.COPYFILTERS(Rec);

                 //Speed up
                 ProjRec.SETRANGE("Cost Control Up to Date");
                 IF ProjRec.FIND('-') THEN
                   SETFILTER("Project Filter", ProjRec."No.");
               END;

    OnAfterGetRecord=BEGIN
                       SETFILTER("Project Filter","No.");
                       CALCFIELDS("Actual Costs","Actual Hours",Revenues,"Open (Purchase)","Received/Not Invoiced",
                                  "Received/Not Inv. Hours","Open Amount (Hours)","Open Hours");
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 109     ;1   ;Action    ;
                      CaptionML=[DEU=Vorperiode;
                                 ENU=Previous Period;
                                 NLD=Vorige periode;
                                 NOR=Forrige periode;
                                 SVE=FîregÜende period];
                      ToolTipML=[DEU=Vorperiode;
                                 ENU=Previous Period;
                                 NLD=Vorige periode;
                                 NOR=Forrige periode;
                                 SVE=FîregÜende period];
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SearchPeriodCu.FindPeriod(Rec,PeriodType,'<=');
                               END;
                                }
      { 110     ;1   ;Action    ;
                      CaptionML=[DEU=Folgeperiode;
                                 ENU=Next Period;
                                 NLD=Volgende periode;
                                 NOR=Neste periode;
                                 SVE=NÑsta period];
                      ToolTipML=[DEU=Folgeperiode;
                                 ENU=Next Period;
                                 NLD=Volgende periode;
                                 NOR=Neste periode;
                                 SVE=NÑsta period];
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SearchPeriodCu.FindPeriod(Rec,PeriodType,'>=');
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1903121901;1;Group  ;
                CaptionML=[DEU=Optionen;
                           ENU=Options;
                           NLD=Opties;
                           NOR=Alternativer;
                           SVE=Alternativ] }

    { 101 ;2   ;Field     ;
                CaptionML=[DEU=Kumulationsfilter;
                           ENU=Cumulation Filter;
                           NLD=Cumulatie filter;
                           NOR=Akkumuleringsfilter;
                           SVE=Ackumuleringsfilter];
                SourceExpr=GETFILTER("Cumulation Filter" );
                OnValidate=BEGIN
                             IF STRLEN(PeriodFilter) > 3 THEN
                               PeriodFilter := '';
                             SearchPeriodCu.FindPeriod(Rec,PeriodType,PeriodFilter);
                           END;
                            }

    { 103 ;2   ;Field     ;
                CaptionML=[DEU=Anzeigen nach;
                           ENU=View by;
                           NLD=Periodesoort;
                           NOR=Vis per;
                           SVE=Visa per];
                OptionCaptionML=[DEU=Tag,Woche,Monat,Quartal,Jahr,Buchhaltungsperiode;
                                 ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 NLD=Dag,Week,Maand,Kwartaal,Jaar,Boekingsperiode;
                                 NOR=Dag,Uke,MÜned,Kvartal,èr,bokfõringsperiode;
                                 SVE=Dag,Vecka,MÜnad,Kvartal,èr,Bokfîringsperiod];
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             IF PeriodType = PeriodType::"Accounting Period" THEN
                               AccountingPerioPeriodTypeOnVal;
                             IF PeriodType = PeriodType::Year THEN
                               YearPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Quarter THEN
                               QuarterPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Month THEN
                               MonthPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Week THEN
                               WeekPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Day THEN
                               DayPeriodTypeOnValidate;
                           END;
                            }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="No." }

    { 4   ;2   ;Field     ;
                SourceExpr=Description }

    { 1000000000;2;Field  ;
                SourceExpr="Project Type";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Project Status";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="Single/Main/Sub Project";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                CaptionML=[DEU=Projekt-Manager;
                           ENU=Project Manager;
                           NLD=Projectleider;
                           NOR=Prosjektleder;
                           SVE=Platschef];
                SourceExpr="Name Project Manager";
                Visible=FALSE }

    { 1210190006;2;Field  ;
                SourceExpr="Global Dimension 1 Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 40  ;2   ;Field     ;
                SourceExpr="Actual Costs" }

    { 1100485002;2;Field  ;
                SourceExpr="Actual Hours" }

    { 1100485000;2;Field  ;
                SourceExpr=Revenues }

    { 1100485008;2;Field  ;
                CaptionML=[DEU=WIP-Position;
                           ENU=WIP Position;
                           NLD=OHW positie;
                           NOR=Arbeidskapital, posisjon;
                           SVE=PÜgÜende arbeten, position];
                SourceExpr="Actual Costs" - Revenues }

    { 1210190046;2;Field  ;
                CaptionML=[DEU=Ausstehend (Einkauf);
                           ENU=Open (Purchase);
                           NLD=Openstaand (Inkoop);
                           NOR=èpne innkjõp;
                           SVE=ôppna inkîp];
                SourceExpr="Open (Purchase)" }

    { 1210190048;2;Field  ;
                CaptionML=[DEU=Eingegangen/Nicht fakturiert;
                           ENU=Received/Not Invoiced;
                           NLD=Ontvangen/Niet gefactureerd;
                           NOR=Mottatt/ikke fakturert;
                           SVE=Mottaget/inte fakturerat];
                SourceExpr="Received/Not Invoiced" }

    { 1100485004;2;Field  ;
                SourceExpr="Received/Not Inv. Hours" }

    { 1210190028;2;Field  ;
                SourceExpr="Open Amount (Hours)" }

    { 1100485006;2;Field  ;
                SourceExpr="Open Hours" }

  }
  CODE
  {
    VAR
      ProjectSetup@11012001 : Record 315;
      ProjRec@11012005 : Record 11072003;
      InventSetupRec@1210190009 : Record 313;
      SearchPeriodCu@11012014 : Codeunit 11012013;
      Permissions@11012019 : Codeunit 11012026;
      PeriodType@11012021 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      PeriodFilter@1100485000 : Text[50];
      DPA_IsHardFilter@1100000999 : Boolean;

    PROCEDURE Setfilter@1100485000(lProjCde@1210190000 : Code[20]);
    BEGIN
      FILTERGROUP(2);
      SETRANGE("No.",lProjCde);
      FILTERGROUP(0);
    END;

    PROCEDURE SetPeriodType@1100485001(iPeriodType@1100485000 : 'Day,Week,Month,Quarter,Year,Accounting Period');
    BEGIN
      PeriodType := iPeriodType;
    END;

    PROCEDURE SetDrillDownFilter@1100485002();
    BEGIN
      IF GETFILTER("Project Filter") <> "No." THEN
        SETFILTER("Project Filter","No.");
    END;

    LOCAL PROCEDURE ActualCostsOnActivate@19059329();
    BEGIN
      SetDrillDownFilter;
    END;

    LOCAL PROCEDURE ActualHoursOnActivate@19065440();
    BEGIN
      SetDrillDownFilter;
    END;

    LOCAL PROCEDURE RevenuesOnActivate@19055072();
    BEGIN
      SetDrillDownFilter;
    END;

    LOCAL PROCEDURE OpenPurchaseOnActivate@19043200();
    BEGIN
      SetDrillDownFilter;
    END;

    LOCAL PROCEDURE ReceivedNotInvoicedOnActivate@19011601();
    BEGIN
      SetDrillDownFilter;
    END;

    LOCAL PROCEDURE ReceivedNotInvHoursOnActivate@19009003();
    BEGIN
      SetDrillDownFilter;
    END;

    LOCAL PROCEDURE OpenAmountHoursOnActivate@19025172();
    BEGIN
      SetDrillDownFilter;
    END;

    LOCAL PROCEDURE OpenHoursOnActivate@19015105();
    BEGIN
      SetDrillDownFilter;
    END;

    LOCAL PROCEDURE CumulationFilterOnAfterInput@19045865(VAR Text@19045866 : Text[1024]);
    BEGIN
      PeriodFilter := Text;
    END;

    LOCAL PROCEDURE DayPeriodTypeOnPush@19008851();
    BEGIN
      SearchPeriodCu.FindPeriod(Rec,PeriodType,'');
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnPush@19046063();
    BEGIN
      SearchPeriodCu.FindPeriod(Rec,PeriodType,'');
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnPush@19047374();
    BEGIN
      SearchPeriodCu.FindPeriod(Rec,PeriodType,'');
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnPush@19018850();
    BEGIN
      SearchPeriodCu.FindPeriod(Rec,PeriodType,'');
    END;

    LOCAL PROCEDURE YearPeriodTypeOnPush@19051042();
    BEGIN
      SearchPeriodCu.FindPeriod(Rec,PeriodType,'');
    END;

    LOCAL PROCEDURE AccountingPerioPeriodTypOnPush@19038761();
    BEGIN
      SearchPeriodCu.FindPeriod(Rec,PeriodType,'');
    END;

    LOCAL PROCEDURE DayPeriodTypeOnValidate@19012979();
    BEGIN
      DayPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnValidate@19058475();
    BEGIN
      WeekPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnValidate@19021027();
    BEGIN
      MonthPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnValidate@19015346();
    BEGIN
      QuarterPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnValidate@19064743();
    BEGIN
      YearPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE AccountingPerioPeriodTypeOnVal@19058901();
    BEGIN
      AccountingPerioPeriodTypOnPush;
    END;

    BEGIN
    {
      4PS01 Jan ter Harmsel Call 1800 Overhead Surcharges on Purchase Lines must be taken into account.
    }
    END.
  }
}

