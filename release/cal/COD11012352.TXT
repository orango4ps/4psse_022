OBJECT Codeunit 11012352 NS Item Tracking Entries-Apply
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text11012010@1100528600 : TextConst 'DEU=" liegt vor dem Buchungsdatum.";ENU=" is before the posting date.";NLD=" valt voor de boekingsdatum.";NOR=" er f›r bokf›ringsdatoen.";SVE=" „r f”re bokf”ringsdatumet."';

    PROCEDURE ApplyNSItemTrackingEntry@1100528605(VAR NSItemTrackingEntry@1100528601 : Record 11071902;ItemTrackCode@1100528606 : Code[20]);
    VAR
      ItemTrackingCode@1100528600 : Record 6502;
      OldNSItemTrackingEntry@1100528602 : Record 11071902;
      ItemJnlLine@1100526205 : Record 83;
      ItemTrackingMgt@1100526204 : Codeunit 6500;
      AppliedQty@1100528603 : Decimal;
      FirstApplication@1100528604 : Boolean;
      SNRequired@1100526203 : Boolean;
      LotRequired@1100526202 : Boolean;
      SNInfoRequired@1100526201 : Boolean;
      LotInfoRequired@1100526200 : Boolean;
      ApplnPostingDate@1100528605 : Date;
    BEGIN
      ItemTrackingCode.GET(ItemTrackCode);
      ItemJnlLine."Entry Type" := NSItemTrackingEntry."Entry Type";
      ItemTrackingMgt.GetItemTrackingSettings(
        ItemTrackingCode,NSItemTrackingEntry."Entry Type",ItemJnlLine.Signed(NSItemTrackingEntry.Quantity) > 0,
        SNRequired,LotRequired,SNInfoRequired,LotInfoRequired);

      FirstApplication := TRUE;
      WITH OldNSItemTrackingEntry DO BEGIN
        REPEAT
          IF FirstApplication THEN BEGIN
            FirstApplication := FALSE;
            SETCURRENTKEY("Item No.",Open,"Variant Code",Positive,"Location Code");
            SETRANGE("Item No.",NSItemTrackingEntry."Item No.");
            SETRANGE(Open,TRUE);
            SETRANGE("Variant Code",NSItemTrackingEntry."Variant Code");
            SETRANGE(Positive,NOT NSItemTrackingEntry.Positive);
            SETRANGE("Location Code",NSItemTrackingEntry."Location Code");
            IF ItemTrackingCode."SN Specific Tracking" OR SNRequired THEN   //C007689.c
              SETRANGE("Serial No.",NSItemTrackingEntry."Serial No.");
            IF ItemTrackingCode."Lot Specific Tracking" OR LotRequired THEN //C007689.c
              SETRANGE("Lot No.",NSItemTrackingEntry."Lot No.");
            //C005508
            IF NSItemTrackingEntry."Project No." <> '' THEN
              SETRANGE("Project No.", NSItemTrackingEntry."Project No.");
            IF NSItemTrackingEntry."Service Order No." <> '' THEN
              SETRANGE("Service Order No.", NSItemTrackingEntry."Service Order No.");
            //
            IF NOT FINDFIRST THEN
              EXIT;
          END ELSE
            IF NEXT = 0 THEN
              EXIT;

          IF ABS("Remaining Quantity") > ABS(NSItemTrackingEntry."Remaining Quantity") THEN
            AppliedQty := NSItemTrackingEntry."Remaining Quantity"
          ELSE
            AppliedQty := -"Remaining Quantity";

          IF AppliedQty <> 0 THEN BEGIN
            "Remaining Quantity" := "Remaining Quantity" + AppliedQty;
            Open := "Remaining Quantity" <> 0;

            IF NSItemTrackingEntry.Positive THEN BEGIN
              IF NSItemTrackingEntry."Posting Date" >= "Posting Date" THEN
                ApplnPostingDate := NSItemTrackingEntry."Posting Date"
              ELSE
                ApplnPostingDate := "Posting Date";
              InsertNSApplEntry(
                "Entry No.",NSItemTrackingEntry."Entry No.",
                "Entry No.",ApplnPostingDate,-AppliedQty)
            END ELSE BEGIN
              IF ItemTrackingCode."Strict Expiration Posting" AND ("Expiration Date" <> 0D) THEN
                IF NSItemTrackingEntry."Posting Date" > "Expiration Date" THEN
                  FIELDERROR("Expiration Date",Text11012010);

              NSItemTrackingEntry."Expiration Date" := 0D; // No Expiration date on negative entries

              InsertNSApplEntry(
                NSItemTrackingEntry."Entry No.", "Entry No.",NSItemTrackingEntry."Entry No.",
                NSItemTrackingEntry."Posting Date",AppliedQty);
            END;

            MODIFY;

            NSItemTrackingEntry."Remaining Quantity" := NSItemTrackingEntry."Remaining Quantity" - AppliedQty;
            NSItemTrackingEntry.Open := NSItemTrackingEntry."Remaining Quantity" <> 0;
            IF NSItemTrackingEntry."Remaining Quantity" = 0 THEN
              EXIT;
          END;
        UNTIL FALSE;
      END;
    END;

    PROCEDURE ApplyUndoneTrackingEntries@1100528500(VAR OldNSItemTrackingEntry@1100528500 : Record 11071902;VAR NewNSItemTrackingEntry@1100528501 : Record 11071902);
    VAR
      AppliedQty@1100528503 : Decimal;
      ApplnPostingDate@1100528502 : Date;
    BEGIN
      IF ABS(OldNSItemTrackingEntry."Remaining Quantity") > ABS(NewNSItemTrackingEntry."Remaining Quantity") THEN
        AppliedQty := NewNSItemTrackingEntry."Remaining Quantity"
      ELSE
        AppliedQty := -OldNSItemTrackingEntry."Remaining Quantity";

      IF AppliedQty = 0 THEN
        EXIT;

      IF NewNSItemTrackingEntry.Positive THEN BEGIN
        IF NewNSItemTrackingEntry."Posting Date" >= OldNSItemTrackingEntry."Posting Date" THEN
          ApplnPostingDate := NewNSItemTrackingEntry."Posting Date"
        ELSE
          ApplnPostingDate := OldNSItemTrackingEntry."Posting Date";
        InsertNSApplEntry(
          OldNSItemTrackingEntry."Entry No.",NewNSItemTrackingEntry."Entry No.",
          OldNSItemTrackingEntry."Entry No.",ApplnPostingDate,-AppliedQty)
      END ELSE BEGIN
        NewNSItemTrackingEntry."Expiration Date" := 0D; // No Expiration date on negative entries

        InsertNSApplEntry(
          NewNSItemTrackingEntry."Entry No.", OldNSItemTrackingEntry."Entry No.",NewNSItemTrackingEntry."Entry No.",
          NewNSItemTrackingEntry."Posting Date",AppliedQty);
      END;

      OldNSItemTrackingEntry."Remaining Quantity" := 0;
      OldNSItemTrackingEntry.Open := FALSE;
      OldNSItemTrackingEntry.MODIFY;

      NewNSItemTrackingEntry."Remaining Quantity" := 0;
      NewNSItemTrackingEntry.Open := FALSE;
      NewNSItemTrackingEntry.MODIFY;
    END;

    LOCAL PROCEDURE InsertNSApplEntry@12(ItemTrackingEntryNo@1001 : Integer;InboundItemEntry@1002 : Integer;OutboundItemEntry@1003 : Integer;PostingDate@1005 : Date;Quantity@1006 : Decimal);
    VAR
      OldNSItemApplnEntry@1008 : Record 11071904;
      NSItemApplnEntry@1100528600 : Record 11071904;
      NSItemApplnEntryExists@1000 : Boolean;
      EntryNo@1100528601 : Integer;
    BEGIN
      IF Quantity < 0 THEN BEGIN
        OldNSItemApplnEntry.SETCURRENTKEY("Inbound Item Entry No.","NS Item Tracking Entry No.","Outbound Item Entry No.");
        OldNSItemApplnEntry.SETRANGE("Inbound Item Entry No.",InboundItemEntry);
        OldNSItemApplnEntry.SETRANGE("NS Item Tracking Entry No.",ItemTrackingEntryNo);
        OldNSItemApplnEntry.SETRANGE("Outbound Item Entry No.",OutboundItemEntry);
        IF OldNSItemApplnEntry.FINDSET THEN BEGIN
          NSItemApplnEntry := OldNSItemApplnEntry;
          NSItemApplnEntry.Quantity := NSItemApplnEntry.Quantity + Quantity;
          NSItemApplnEntry."Last Modified Date" := CURRENTDATETIME;
          NSItemApplnEntry."Last Modified By" := USERID;
          NSItemApplnEntry.MODIFY;
          NSItemApplnEntryExists := TRUE;
        END;
      END;

      IF NOT NSItemApplnEntryExists THEN BEGIN
        NSItemApplnEntry.LOCKTABLE;
        IF NSItemApplnEntry.FINDLAST THEN
          EntryNo := NSItemApplnEntry."Entry No." + 1
        ELSE
          EntryNo := 1;

        NSItemApplnEntry.INIT;
        NSItemApplnEntry."Entry No." := EntryNo;
        NSItemApplnEntry."NS Item Tracking Entry No." := ItemTrackingEntryNo;
        NSItemApplnEntry."Inbound Item Entry No." := InboundItemEntry;
        NSItemApplnEntry."Outbound Item Entry No." := OutboundItemEntry;
        NSItemApplnEntry.Quantity := Quantity;
        NSItemApplnEntry."Posting Date" := PostingDate;
        NSItemApplnEntry."Creation Date" := CURRENTDATETIME;
        NSItemApplnEntry."Created By" := USERID;
        NSItemApplnEntry.INSERT;
      END;
    END;

    BEGIN
    {
      //**4PS DP00121
    }
    END.
  }
}

