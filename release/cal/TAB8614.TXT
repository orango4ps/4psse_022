OBJECT Table 8614 Config. Package Record
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               ConfigPackageData@1000 : Record 8615;
               ConfigPackageManagement@1001 : Codeunit 8611;
             BEGIN
               ConfigPackageData.SETRANGE("Package Code","Package Code");
               ConfigPackageData.SETRANGE("Table ID","Table ID");
               ConfigPackageData.SETRANGE("No.","No.");
               ConfigPackageData.DELETEALL;

               ConfigPackageManagement.CleanRecordError(Rec);
             END;

    ReplicateData=No;
    CaptionML=[ENU=Config. Package Record;
               NOR=Konfig.pakkepost];
  }
  FIELDS
  {
    { 1   ;   ;Package Code        ;Code20        ;TableRelation="Config. Package";
                                                   CaptionML=[ENU=Package Code;
                                                              NOR=Pakkekode;
                                                              SVE=Paketkod];
                                                   NotBlank=Yes }
    { 2   ;   ;Table ID            ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Table));
                                                   CaptionML=[ENU=Table ID;
                                                              NOR=Tabell-ID;
                                                              SVE=Tabell-ID];
                                                   NotBlank=Yes;
                                                   Editable=Yes }
    { 3   ;   ;No.                 ;Integer       ;CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 4   ;   ;Invalid             ;Boolean       ;CaptionML=[ENU=Invalid;
                                                              NOR=Ugyldig] }
    { 10  ;   ;Parent Record No.   ;Integer       ;CaptionML=[ENU=Parent Record No.;
                                                              NOR=Overordnet postnr.;
                                                              SVE=Nr p† ”verordnad post] }
  }
  KEYS
  {
    {    ;Package Code,Table ID,No.               ;Clustered=Yes }
    {    ;Package Code,Table ID,Invalid            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE FitsProcessingFilter@2(RuleNo@1000 : Integer) : Boolean;
    VAR
      ConfigPackageData@1001 : Record 8615;
      ConfigPackageFilter@1003 : Record 8626;
      ConfigValidateMgt@1005 : Codeunit 8617;
      RecRefTemp@1002 : RecordRef;
      FieldRef@1004 : FieldRef;
    BEGIN
      ConfigPackageData.RESET;
      ConfigPackageData.SETRANGE("Package Code","Package Code");
      ConfigPackageData.SETRANGE("Table ID","Table ID");
      ConfigPackageData.SETRANGE("No.","No.");
      IF FindProcessingRuleFilters(ConfigPackageFilter,RuleNo) THEN BEGIN
        RecRefTemp.OPEN("Table ID",TRUE);
        REPEAT
          ConfigPackageData.SETRANGE("Field ID",ConfigPackageFilter."Field ID");
          IF ConfigPackageData.FINDFIRST THEN BEGIN
            FieldRef := RecRefTemp.FIELD(ConfigPackageData."Field ID");
            ConfigValidateMgt.EvaluateTextToFieldRef(ConfigPackageData.Value,FieldRef,FALSE);
            FieldRef.SETFILTER(ConfigPackageFilter."Field Filter");
          END ELSE
            EXIT(FALSE);
        UNTIL ConfigPackageFilter.NEXT = 0;
        RecRefTemp.INSERT;
        IF RecRefTemp.ISEMPTY THEN
          EXIT(FALSE);
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE FindProcessingRuleFilters@1(VAR ConfigPackageFilter@1000 : Record 8626;RuleNo@1001 : Integer) : Boolean;
    BEGIN
      ConfigPackageFilter.RESET;
      ConfigPackageFilter.SETRANGE("Package Code","Package Code");
      ConfigPackageFilter.SETRANGE("Table ID","Table ID");
      ConfigPackageFilter.SETRANGE("Processing Rule No.",RuleNo);
      EXIT(ConfigPackageFilter.FINDSET);
    END;

    BEGIN
    END.
  }
}

