OBJECT Report 99001017 Calculate Plan - Plan. Wksh.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Planung ber. - Plan.-Vorschlag;
               ENU=Calculate Plan - Plan. Wksh.;
               NLD=Plan berekenen - Planningsvoorstel;
               NOR=Beregn plan - planl.forslag;
               SVE=BerÑkna plan - planeringsfîrslag];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 8129;    ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemTableView=SORTING(Low-Level Code)
                                 WHERE(Type=CONST(Inventory));
               OnPreDataItem=BEGIN
                               OpenWindow;
                               CLEAR(CalcItemPlan);
                               CalcItemPlan.SetTemplAndWorksheet(CurrTemplateName,CurrWorksheetName,NetChange);
                               CalcItemPlan.SetParm(UseForecast,ExcludeForecastBefore,Item);
                               CalcItemPlan.Initialize(FromDate,ToDate,MPS,MRP,RespectPlanningParm);

                               SetAtStartPosition := TRUE;

                               ReqLine.SETRANGE("Worksheet Template Name",CurrTemplateName);
                               ReqLine.SETRANGE("Journal Batch Name",CurrWorksheetName);
                               PlanningErrorLog.SETRANGE("Worksheet Template Name",CurrTemplateName);
                               PlanningErrorLog.SETRANGE("Journal Batch Name",CurrWorksheetName);
                               IF PlanningErrorLog.FINDFIRST AND ReqLine.FINDFIRST THEN
                                 SetAtStartPosition := NOT CONFIRM(Text009);

                               PlanningErrorLog.DELETEALL;
                               CLEARLASTERROR;

                               OnAfterItemOnPreDataItem(Item);
                               COMMIT;
                             END;

               OnAfterGetRecord=VAR
                                  ErrorText@1000 : Text[1000];
                                BEGIN
                                  UpdateWindow;

                                  IF NOT SetAtStartPosition THEN BEGIN
                                    SetAtStartPosition := TRUE;
                                    GET(PlanningErrorLog."Item No.");
                                    FIND('=<>');
                                  END;

                                  IF NoPlanningResiliency THEN BEGIN
                                    CalcItemPlan.RUN(Item);
                                    CounterOK := CounterOK + 1;
                                  END ELSE BEGIN
                                    CalcItemPlan.ClearInvtProfileOffsetting;
                                    CalcItemPlan.SetResiliencyOn;
                                    IF CalcItemPlan.RUN(Item) THEN
                                      CounterOK := CounterOK + 1
                                    ELSE
                                      IF NOT CalcItemPlan.GetResiliencyError(PlanningErrorLog) THEN BEGIN
                                        ErrorText := COPYSTR(GETLASTERRORTEXT,1,MAXSTRLEN(ErrorText));
                                        IF ErrorText = '' THEN
                                          ErrorText := Text011
                                        ELSE
                                          CLEARLASTERROR;
                                        PlanningErrorLog.SetJnlBatch(CurrTemplateName,CurrWorksheetName,"No.");
                                        PlanningErrorLog.SetError(
                                          COPYSTR(STRSUBSTNO(ErrorText,TABLECAPTION,"No."),1,250),0,GETPOSITION);
                                      END;
                                  END;

                                  COMMIT;
                                END;

               OnPostDataItem=BEGIN
                                CalcItemPlan.Finalize;
                                CloseWindow;

                                OnAfterItemOnPostDataItem;
                              END;

               ReqFilterFields=No.,Search Description,Location Filter }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   MfgSetup.GET;
                   UseForecast := MfgSetup."Current Production Forecast";
                   IF MfgSetup."Combined MPS/MRP Calculation" THEN BEGIN
                     MPS := TRUE;
                     MRP := TRUE;
                   END ELSE
                     MRP := NOT MPS;

                   OnAfterOnOpenPage;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 10  ;2   ;Group     ;
                  CaptionML=[DEU=Berechnen;
                             ENU=Calculate;
                             NLD=Berekenen;
                             NOR=Beregn;
                             SVE=BerÑkna] }

      { 11  ;3   ;Field     ;
                  Name=MPS;
                  CaptionML=[DEU=Prod.-Programmplanung;
                             ENU=MPS;
                             NLD=MPS;
                             NOR=MPS;
                             SVE=Prod.program];
                  ToolTipML=[DEU=Gibt an, ob ein Hauptproduktionsschema (MPS) anhand unabhÑngiger Nachfrage berechnet werden muss.;
                             ENU="Specifies whether to calculate a master production schedule (MPS) based on independent demand. ";
                             NLD="Hiermee wordt opgegeven of een hoofdproductieschema (MPS) moet worden berekend op basis van onafhankelijke vraag. ";
                             NOR="Angir om du vil beregne en hovedproduksjonsplan (MPS) basert pÜ ikke-konkret behov. ";
                             SVE="Anger om du vill berÑkna en produktionsplan utifrÜn icke hÑrledd efterfrÜgan. "];
                  ApplicationArea=#Planning;
                  SourceExpr=MPS;
                  OnValidate=BEGIN
                               IF NOT MfgSetup."Combined MPS/MRP Calculation" THEN
                                 MRP := NOT MPS
                               ELSE
                                 IF NOT MPS THEN
                                   MRP := TRUE;
                             END;
                              }

      { 12  ;3   ;Field     ;
                  Name=MRP;
                  CaptionML=[DEU=Nettobedarf;
                             ENU=MRP;
                             NLD=MRP;
                             NOR=MRP;
                             SVE=Nettobehov];
                  ToolTipML=[DEU=Gibt an, ob ein Nettobedarf berechnet werden muss, wobei eine abhÑngige Nachfrage anhand des Hauptproduktionsschemas (MPS) berechnet wird.;
                             ENU=Specifies whether to calculate an MRP, which will calculate dependent demand that is based on the MPS.;
                             NLD=Hiermee wordt opgegeven of een MRP moet worden berekend, waarbij een afhankelijke vraag wordt berekend die is gebaseerd op het MPS.;
                             NOR=Angir om du vil beregne en MRP, som beregner konkret behov som er basert pÜ MPS.;
                             SVE=Anger om du vill berÑkna ett nettobehov, som berÑknar hÑrledd efterfrÜgan utifrÜn produktionsplanen.];
                  ApplicationArea=#Planning;
                  SourceExpr=MRP;
                  OnValidate=BEGIN
                               IF NOT MfgSetup."Combined MPS/MRP Calculation" THEN
                                 MPS := NOT MRP
                               ELSE
                                 IF NOT MRP THEN
                                   MPS := TRUE;
                             END;
                              }

      { 1   ;2   ;Field     ;
                  Name=StartingDate;
                  CaptionML=[DEU=Startdatum;
                             ENU=Starting Date;
                             NLD=Begindatum;
                             NOR=Startdato;
                             SVE=Startdatum];
                  ToolTipML=[DEU=Gibt das Datum an, das fÅr neue AuftrÑge verwendet werden soll. Anhand dieses Datums wird der Lagerbestand bewertet.;
                             ENU=Specifies the date to use for new orders. This date is used to evaluate the inventory.;
                             NLD=Hiermee wordt de datum opgegeven die voor nieuwe orders wordt gebruikt. Deze datum wordt gebruikt bij de voorraadwaardering.;
                             NOR=Angir datoen som skal brukes for nye ordrer. Denne datoen brukes til Ü evaluere lageret.;
                             SVE=Anger det datum som ska anvÑndas fîr nya order. Detta datum anvÑnds fîr att inventera lagret.];
                  ApplicationArea=#Planning;
                  SourceExpr=FromDate }

      { 3   ;2   ;Field     ;
                  Name=EndingDate;
                  CaptionML=[DEU=Enddatum;
                             ENU=Ending Date;
                             NLD=Einddatum;
                             NOR=Sluttdato;
                             SVE=Slutdatum];
                  ToolTipML=[DEU=Gibt das Datum an, an dem die Planungsperiode endet. Der Bedarf wird nach diesem Datum nicht einbezogen.;
                             ENU=Specifies the date where the planning period ends. Demand is not included beyond this date.;
                             NLD=Hiermee wordt de datum opgegeven waarop de planningsperiode eindigt. Vraag van na deze datum wordt niet opgenomen.;
                             NOR=Angir datoen da planleggingsperioden slutter. Behovet er ikke inkludert etter denne datoen.;
                             SVE=Anger det datum dÜ planeringsperioden slutar. EfterfrÜgan inkluderas inte efter detta datum.];
                  ApplicationArea=#Planning;
                  SourceExpr=ToDate }

      { 16  ;2   ;Field     ;
                  CaptionML=[DEU=Abbrechen und ersten Fehler anzeigen;
                             ENU=Stop and Show First Error;
                             NLD=Stoppen en eerste fout tonen;
                             NOR=Stopp og vis fõrste feil;
                             SVE=Stoppa och visa fîrsta felet];
                  ToolTipML=[DEU=Gibt an, ob die AusfÅhrung der Planung angehalten werden soll, wenn ein Fehler auftritt. Wenn die AusfÅhrung der Planung angehalten wird, wird eine Meldung mit Informationen Åber den ersten Fehler angezeigt.;
                             ENU=Specifies whether to stop the planning run when it encounters an error. If the planning run stops, then a message is displayed with information about the first error.;
                             NLD=Hiermee wordt opgegeven of de uitvoering van de planning moet worden gestopt wanneer er een fout optreedt. Als de uitvoering van de planning wordt stopgezet, wordt een bericht met informatie over de eerste fout weergegeven.;
                             NOR=Angir om du vil stoppe planleggingskjõringen nÜr det oppstÜr en feil. Hvis planleggingskjõringen stopper, vises det en melding med informasjon om den fõrste feilen.;
                             SVE=Anger om du vill stoppa planeringskîrningen nÑr ett fel intrÑffar. Om planeringskîrningen stoppas visas ett meddelande med information om det fîrsta felet.];
                  ApplicationArea=#Planning;
                  SourceExpr=NoPlanningResiliency }

      { 5   ;2   ;Field     ;
                  CaptionML=[DEU=Planung verwenden;
                             ENU=Use Forecast;
                             NLD=Prognose gebruiken;
                             NOR=Bruk prognose;
                             SVE=AnvÑnd prognos];
                  ToolTipML=[DEU=Gibt eine Planung an, die als Bedarf einbezogen werden soll, wenn die Planungsstapelverarbeitung ausgefÅhrt wird.;
                             ENU=Specifies a forecast that should be included as demand when running the planning batch job.;
                             NLD=Hiermee wordt een prognose opgegeven die als vraag wordt opgenomen bij de batchtaak voor de planning.;
                             NOR=Angir en prognose som skal tas med som behov nÜr du utfõrer planleggingskjõrselen.;
                             SVE=Anger en prognos som ska inkluderas som efterfrÜgan nÑr batchjobbet kîrs.];
                  ApplicationArea=#Planning;
                  SourceExpr=UseForecast;
                  TableRelation="Production Forecast Name".Name }

      { 7   ;2   ;Field     ;
                  CaptionML=[DEU=Planung vorher ausschlie·en;
                             ENU=Exclude Forecast Before;
                             NLD=Prognose uitsluiten voor;
                             NOR=Utelat prognose fõr;
                             SVE=Undanta prognos fîre];
                  ToolTipML=[DEU=Gibt an, wieviel der ausgewÑhlten Prognose in die Planung aufgenommen werden soll, indem ein Datum eingegeben wird, vor dem der Planungsbedarf nicht enthalten ist.;
                             ENU=Specifies how much of the selected forecast to include in the planning run, by entering a date before which forecast demand is not included.;
                             NLD=Hiermee wordt opgegeven hoeveel van de geselecteerde prognose moet worden opgenomen in de planning, doordat een datum wordt ingevoerd waarv¢¢r prognosevraag niet wordt opgenomen.;
                             NOR=Angir hvor mye av den valgte prognosen som skal inkluderes i planleggingskjõringen, ved Ü angi en dato som prognosebehovet ikke er inkludert fõr.;
                             SVE=Anger hur mycket av en vald prognos som ska inkluderas i planeringskîrningen genom att ange ett datum fîre vilket ingen prognosefterfrÜgan inkluderas.];
                  ApplicationArea=#Planning;
                  SourceExpr=ExcludeForecastBefore }

      { 2   ;2   ;Field     ;
                  CaptionML=[DEU=Planungsparameter fÅr Ausnahmewarnungen berÅcksichtigen;
                             ENU=Respect Planning Parameters for Exception Warnings;
                             NLD=Planningsparameters voor uitzonderingswaarschuwingen respecteren;
                             NOR=Respekter planleggingsparametre for unntaksadvarsler;
                             SVE=Ta hÑnsyn till planeringsparametrar fîr undantagsvarningar];
                  ToolTipML=[DEU=Gibt an, ob die Planungszeilen mit Ausnahmewarnungen die Planungsparameter fÅr den Artikel oder die Lagerhaltungsdatenkarte berÅcksichtigen.;
                             ENU=Specifies whether planning lines with Exception warnings will respect the planning parameters on the item or SKU card.;
                             NLD=Hiermee wordt opgegeven of planningsregels met uitzonderingswaarschuwingen rekening houden met de planningsparameters voor het artikel of de SKU-kaart.;
                             NOR=Angir om planleggingslinjer med unntaksadvarsler vil respektere planleggingsparametrene pÜ varekortet eller LFE-kortet.;
                             SVE=Anger om planeringsrader med undantagsvarningar ska ta hÑnsyn till planeringsparametrarna fîr artikeln eller kortet fîr lagerstÑlleenheten.];
                  ApplicationArea=#Planning;
                  SourceExpr=RespectPlanningParm }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      MfgSetup@1004 : Record 99000765;
      PlanningErrorLog@1018 : Record 5430;
      ReqLine@1021 : Record 246;
      CalcItemPlan@1005 : Codeunit 5431;
      Window@1006 : Dialog;
      Counter@1023 : Integer;
      CounterOK@1017 : Integer;
      NoOfRecords@1012 : Integer;
      NetChange@1009 : Boolean;
      MPS@1003 : Boolean;
      MRP@1002 : Boolean;
      NoPlanningResiliency@1022 : Boolean;
      SetAtStartPosition@1001 : Boolean;
      FromDate@1011 : Date;
      ToDate@1010 : Date;
      ExcludeForecastBefore@1015 : Date;
      Text005@1014 : TextConst 'DEU=Plan berechnen...\\;ENU=Calculating the plan...\\;NLD=Berekenen plan...\\;NOR=Beregner planen...\\;SVE=BerÑknar plan...\\';
      Text006@1025 : TextConst 'DEU=Status;ENU=Progress;NLD=Voortgang;NOR=Fremdrift;SVE=Fîrlopp';
      Text007@1024 : TextConst 'DEU=Es wurden nicht alle Artikel geplant. Insgesamt %1 Artikel wurden nicht geplant.;ENU=Not all items were planned. A total of %1 items were not planned.;NLD=Niet alle artikelen zijn gepland. Er zijn in totaal %1 artikelen niet gepland.;NOR=Ikke alle varer ble planlagt. Totalt %1 varer ble ikke planlagt.;SVE=Alla artiklar har inte planerats. Totalt %1 artiklar har inte planerats.';
      Text008@1020 : TextConst 'DEU=Es liegt nichts zum Planen vor.;ENU=There is nothing to plan.;NLD=Niets te plannen.;NOR=Det finnes ingenting Ü planlegge.;SVE=Det finns ingenting att planera.';
      CurrTemplateName@1008 : Code[10];
      CurrWorksheetName@1007 : Code[10];
      UseForecast@1013 : Code[10];
      Text009@1016 : TextConst 'DEU=Bei der letzten AusfÅhrung dieses Stapels sind Fehler aufgetreten.\Soll der Stapel von der letzten Position aus fortgesetzt werden?;ENU=The last time this batch was run, errors were encountered.\Do you want the batch to continue from where it left off?;NLD=De vorige keer dat deze batchverwerking werd uitgevoerd, zijn er fouten opgetreden.\Wilt u doorgaan daar waar de batchverwerking is afgebroken?;NOR=Sist gang denne satsvise filen ble kjõrt, oppstod det feil.\Vil du at den satsvise filen skal fortsette fra der den stoppet?;SVE=NÑr den hÑr batchen senast kîrdes intrÑffade fel.\Vill du att batchen ska fortsÑtta dÑr den slutade?';
      Text011@1000 : TextConst 'DEU=Nicht zu erkennender Fehler beim Planen von %1 %2. Berechnen Sie den Plan mit der Option "Abbruch und Fehler anzeigen" erneut.;ENU=An unidentified error occurred while planning %1 %2. Recalculate the plan with the option "Stop and Show Error".;NLD=Tijdens het plannen van %1 %2 is een ongeãdentificeerde fout opgetreden. Herbereken het plan met de optie Stoppen en eerste fout tonen.;NOR=Det oppstod en uidentifisert feil under planlegging av %1 %2. Oppdater planen med alternativet "Stopp og vis feil".;SVE=Ett ovÑntat fel uppstod vid planering av %1 %2. BerÑkna om planen med alternativet Stoppa och visa fel.';
      RespectPlanningParm@1026 : Boolean;

    [External]
    PROCEDURE SetTemplAndWorksheet@2(TemplateName@1000 : Code[10];WorksheetName@1001 : Code[10];Regenerative@1002 : Boolean);
    BEGIN
      CurrTemplateName := TemplateName;
      CurrWorksheetName := WorksheetName;
      NetChange := NOT Regenerative;
    END;

    [External]
    PROCEDURE InitializeRequest@3(NewFromDate@1001 : Date;NewToDate@1000 : Date;NewRespectPlanningParm@1002 : Boolean);
    BEGIN
      FromDate := NewFromDate;
      ToDate := NewToDate;
      RespectPlanningParm := NewRespectPlanningParm;

      MfgSetup.GET;
      IF MfgSetup."Combined MPS/MRP Calculation" THEN BEGIN
        MPS := TRUE;
        MRP := TRUE;
      END ELSE
        MRP := NOT MPS;
      UseForecast := MfgSetup."Current Production Forecast";
    END;

    [External]
    PROCEDURE OpenWindow@5();
    VAR
      Indentation@1000 : Integer;
    BEGIN
      Counter := 0;
      CounterOK := 0;
      NoOfRecords := Item.COUNT;
      Indentation := STRLEN(Text006);
      IF STRLEN(Item.FIELDCAPTION("Low-Level Code")) > Indentation THEN
        Indentation := STRLEN(Item.FIELDCAPTION("Low-Level Code"));
      IF STRLEN(Item.FIELDCAPTION("No.")) > Indentation THEN
        Indentation := STRLEN(Item.FIELDCAPTION("No."));

      Window.OPEN(
        Text005 +
        PADSTR(Text006,Indentation) + ' @1@@@@@@@@@@@@@\' +
        PADSTR(Item.FIELDCAPTION("Low-Level Code"),Indentation) + ' #2######\' +
        PADSTR(Item.FIELDCAPTION("No."),Indentation) + ' #3##########');
    END;

    [External]
    PROCEDURE UpdateWindow@6();
    BEGIN
      Counter := Counter + 1;
      Window.UPDATE(1,ROUND(Counter / NoOfRecords * 10000,1));
      Window.UPDATE(2,Item."Low-Level Code");
      Window.UPDATE(3,Item."No.");
    END;

    [External]
    PROCEDURE CloseWindow@1();
    BEGIN
      Window.CLOSE;

      IF Counter = 0 THEN
        MESSAGE(Text008);
      IF Counter > CounterOK THEN BEGIN
        MESSAGE(Text007,Counter - CounterOK);
        IF PlanningErrorLog.FINDFIRST THEN
          PAGE.RUNMODAL(0,PlanningErrorLog);
      END;
    END;

    [Integration(DEFAULT,TRUE)]
    LOCAL PROCEDURE OnAfterOnOpenPage@4();
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterItemOnPreDataItem@7(Item@1000 : Record 27);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterItemOnPostDataItem@8();
    BEGIN
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

