OBJECT Table 11071923 Sold Item To Service Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               SoldItemToServiceLine@1100409000 : Record 11071923;
             BEGIN
               //kzwerver, 121029, n, #C003252
               "Line No." := 0;
               SoldItemToServiceLine.SETRANGE(Code, Code);
               IF (SoldItemToServiceLine.FINDLAST) THEN
                 "Line No." := SoldItemToServiceLine."Line No." + 1;
             END;

    CaptionML=[ENU=Sold Item To Service Line;
               NOR=Solgt artikkel til servicerad;
               SVE=S†ld artikel till servicerad];
  }
  FIELDS
  {
    { 1   ;   ;Code                ;GUID          ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   Editable=No }
    { 5   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr];
                                                   Editable=No }
    { 10  ;   ;Source              ;Option        ;CaptionML=[ENU=Source;
                                                              NOR=Source;
                                                              SVE=K„lla];
                                                   OptionCaptionML=[ENU=,Project,Service Order,Sales Order;
                                                                    NOR=,Prosjekt,Serviceordre,Salgsordre;
                                                                    SVE=,Projekt,Serviceorder,F”rs„ljningsorder];
                                                   OptionString=,Project,Service Order,Sales Order;
                                                   Editable=No }
    { 20  ;   ;Source No.          ;Code20        ;CaptionML=[ENU=Source No.;
                                                              NOR=Kildenr.;
                                                              SVE=Ursprungsnr];
                                                   Editable=No }
    { 30  ;   ;Item No.            ;Code20        ;OnValidate=VAR
                                                                Item@1100528600 : Record 27;
                                                              BEGIN
                                                                IF "Item No." <> '' THEN BEGIN
                                                                  Item.GET("Item No.");
                                                                  VALIDATE("Standard Object No.", Item."Standard Object No.");
                                                                END ELSE
                                                                  VALIDATE("Standard Object No.", '');
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              NOR=Artikkelnr;
                                                              SVE=Artikelnr];
                                                   Editable=No }
    { 40  ;   ;Basic Item          ;Code20        ;CaptionML=[ENU=Basic Item;
                                                              NOR=Fabrikantartikkel;
                                                              SVE=Basartikel];
                                                   Editable=No }
    { 45  ;   ;Manufacturer        ;Code15        ;CaptionML=[ENU=Manufacturer;
                                                              NOR=Produsent;
                                                              SVE=Tillverkare];
                                                   Editable=No }
    { 50  ;   ;Trade Item          ;Code20        ;CaptionML=[ENU=Trade Item;
                                                              NOR=Katalogartikkel;
                                                              SVE=Anskaffningsartikel];
                                                   Editable=No }
    { 55  ;   ;Vendor (Trade Item) ;Code15        ;CaptionML=[ENU=Vendor (Trade Item);
                                                              NOR=Leverand›r (katalogartikkel);
                                                              SVE=Leverant”r (skaffningsartikel)];
                                                   Editable=No }
    { 60  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning];
                                                   Editable=No }
    { 65  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2];
                                                   Editable=No }
    { 70  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 75  ;   ;Unit of Measure     ;Code10        ;CaptionML=[ENU=Unit of Measure;
                                                              NOR=M†leenhet;
                                                              SVE=M†ttenhet];
                                                   Editable=No }
    { 80  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              NOR=Bokf›ringsdato;
                                                              SVE=Bokf”ringsdatum];
                                                   Editable=No }
    { 90  ;   ;Service Location No.;Code20        ;CaptionML=[ENU=Service Location No.;
                                                              NOR=Servicelokasjon Nr.;
                                                              SVE=Serviceplatsnr] }
    { 100 ;   ;Standard Object No. ;Code20        ;TableRelation="Standard Object";
                                                   CaptionML=[ENU=Standard Object No.;
                                                              NOR=Standardobjektnr;
                                                              SVE=Standardobjektsnr] }
    { 110 ;   ;Standard Object Description;Text100;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Standard Object".Description WHERE (No.=FIELD(Standard Object No.)));
                                                   CaptionML=[ENU=Standard Object Description;
                                                              NOR=Standard objektsbeskrivelse;
                                                              SVE=Standardobjektsbeskrivning];
                                                   Editable=No }
    { 120 ;   ;Standard Object Description 2;Text50;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Standard Object"."Description 2" WHERE (No.=FIELD(Standard Object No.)));
                                                   CaptionML=[ENU=Standard Object Description 2;
                                                              SVE=Standardobjektsbeskrivning 2];
                                                   Editable=No }
    { 1110;   ;Serial No.          ;Code40        ;CaptionML=[ENU=Serial No.;
                                                              NOR=Serienr.;
                                                              SVE=Serienr] }
    { 1340;   ;Lot No.             ;Code40        ;CaptionML=[ENU=Lot No.;
                                                              NOR=Partinr.;
                                                              SVE=Partinr] }
    { 1350;   ;Warranty Starting Date Vendor;Date ;CaptionML=[ENU=Warranty Starting Date Vendor;
                                                              SVE=Leverant”rs startdatum f”r garanti] }
    { 1360;   ;Warranty Exp. Date Vendor;Date     ;CaptionML=[ENU=Warranty Expiration Date Vendor;
                                                              SVE=Leverant”rs slutdatum f”r garanti] }
    { 1370;   ;Warranty Starting Date Cust.;Date  ;CaptionML=[ENU=Warranty Starting Date Customer;
                                                              SVE=Kunds startdatum f”r garanti] }
    { 1380;   ;Warranty Exp. Date Customer;Date   ;CaptionML=[ENU=Warranty Expiration Date Customer;
                                                              SVE=Kunds slutdatum f”r garanti] }
    { 1390;   ;Warranty Code Vendor;Code10        ;TableRelation="Service Warranty";
                                                   CaptionML=[ENU=Warranty Code Vendor;
                                                              NOR=Garantikode leverand›r;
                                                              SVE=Grantikod leveran”r] }
    { 1400;   ;Warranty Code Customer;Code10      ;TableRelation="Service Warranty";
                                                   CaptionML=[ENU=Warranty Code Customer;
                                                              NOR=Garantikode kunde;
                                                              SVE=Grantikod kund] }
    { 1410;   ;Vendor No.          ;Code20        ;CaptionML=[ENU=Vendor No.;
                                                              NOR=Leverand›rnr.;
                                                              SVE=Leverant”rsnr];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Code,Line No.                           ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1210190000 : TextConst 'ENU=First select line(s).;NOR=Velg rad(er) f›rst.;SVE=V„lj f”rst rad(er).';
      Text002@1210190001 : TextConst 'ENU=There are %1 %2 created.\First %2 is %3.;NOR=Det er opprettet %1 %2.\F›rste %2 er %3.;SVE=%1 %2 har skapats.\F”rsta %2 „r %3.';
      Text003@1210190002 : TextConst 'ENU=There are %1 %2 Lines created.;NOR=Det er opprettet %1 %2-rader;SVE=%1 %2 rader har skapats.';
      Text004@1100409000 : TextConst 'ENU=You must specify %1.;NOR=Du m† spesifisere %1.;SVE=Du m†ste specificera %1.';
      Text005@1100528600 : TextConst 'ENU=%1 Line(s) changed.';
      Text006@1100528601 : TextConst 'ENU=%1 Lines Compressed';

    PROCEDURE UpdateTable@1100528301();
    VAR
      SoldItemToServiceFilter@1210190000 : Record 11071922;
    BEGIN
      ClearTable;
      SoldItemToServiceFilter.SETRANGE("User ID", USERID);
      SoldItemToServiceFilter.FINDFIRST;

      IF (SoldItemToServiceFilter."Project Filter" <> '') THEN
        ReadProjectLedgerEntry(SoldItemToServiceFilter);
      IF (SoldItemToServiceFilter."Service Order Filter" <> '') THEN
        ReadServiceLedgerEntry(SoldItemToServiceFilter);
      IF (SoldItemToServiceFilter."Sales Order Filter" <> '') THEN
        ReadSalesLine(SoldItemToServiceFilter);
    END;

    PROCEDURE CreateObjects@1100528300(VAR SoldItemToServiceLineRec@1100528306 : Record 11071923);
    VAR
      SoldItemToServiceLine@1100528307 : Record 11071923;
      ServiceObject@1100528300 : Record 11071691;
      Item@1100528305 : Record 27;
      CreateObjectsfromSoldItem@1210190001 : Page 11020394;
      LocationCode@1100528304 : Code[20];
      ObjectCounter@1100528301 : Integer;
      FirstObjectCode@1210190000 : Code[20];
    BEGIN
      SoldItemToServiceLine.COPY(SoldItemToServiceLineRec);
      IF SoldItemToServiceLine.ISEMPTY THEN
        ERROR(Text001);

      CreateObjectsfromSoldItem.LOOKUPMODE := TRUE;
      IF CreateObjectsfromSoldItem.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;
      LocationCode := CreateObjectsfromSoldItem.GetLocationCode;
      IF LocationCode = '' THEN
        ERROR(Text004, ServiceObject.FIELDCAPTION("Service Location No."));

      SoldItemToServiceLine.FINDSET;
      REPEAT
        SoldItemToServiceLine.TESTFIELD("Standard Object No.");
        CheckSerialNumber(SoldItemToServiceLine."Serial No.");  //db, 16-10-12: C002013

        ServiceObject.INIT;
        ServiceObject."No." := '';
        ServiceObject.INSERT(TRUE);

        ServiceObject.VALIDATE("Standard Object No.", SoldItemToServiceLine."Standard Object No.");
        ServiceObject.Description := SoldItemToServiceLine.Description;
        ServiceObject."Description 2" := SoldItemToServiceLine."Description 2";
        ServiceObject."Service Location No." := LocationCode;
        ServiceObject.Quantity := SoldItemToServiceLine.Quantity;
        ServiceObject."Warranty Starting Date Cust." := SoldItemToServiceLine."Warranty Starting Date Cust.";
        ServiceObject."Warranty Code Customer" := SoldItemToServiceLine."Warranty Code Customer";
        ServiceObject."Warranty Starting Date Vendor" := SoldItemToServiceLine."Warranty Starting Date Vendor";
        ServiceObject."Warranty Code Vendor" := SoldItemToServiceLine."Warranty Code Vendor";
        ServiceObject."Warranty Exp. Date Vendor" := SoldItemToServiceLine."Warranty Exp. Date Vendor";
        ServiceObject."Warranty Exp. Date Customer" := SoldItemToServiceLine."Warranty Exp. Date Customer";
        ServiceObject."Vendor No." := SoldItemToServiceLine."Vendor No.";
        ServiceObject.MODIFY(TRUE);

        IF (SoldItemToServiceLine."Item No." <> '') AND
           (Item.GET(SoldItemToServiceLine."Item No.")) AND
           (Item."Item Tracking Code" <> '')
        THEN BEGIN
          //DP00118.sn
          CreateSpecificationRecord(ServiceObject."No.", 1, 0D, SoldItemToServiceLine."Serial No.", 0, 0, 0);
          CreateSpecificationRecord(ServiceObject."No.", 2, 0D, SoldItemToServiceLine."Lot No.", 0, 0, 0);
          CreateSpecificationRecord(ServiceObject."No.", 3, SoldItemToServiceLine."Warranty Starting Date Vendor", '', 0, 0, 0);
          CreateSpecificationRecord(ServiceObject."No.", 4, SoldItemToServiceLine."Warranty Exp. Date Vendor", '', 0, 0, 0);
          CreateSpecificationRecord(ServiceObject."No.", 5, SoldItemToServiceLine."Warranty Starting Date Cust.", '', 0, 0, 0);
          CreateSpecificationRecord(ServiceObject."No.", 6, SoldItemToServiceLine."Warranty Exp. Date Customer", '', 0, 0, 0);
          CreateSpecificationRecord(ServiceObject."No.", 7, 0D, SoldItemToServiceLine."Warranty Code Customer", 0, 0, 0);
          CreateSpecificationRecord(ServiceObject."No.", 8, 0D, SoldItemToServiceLine."Warranty Code Customer", 0, 0, 0);
          //DP00118.en
        END;

        IF FirstObjectCode = '' THEN
          FirstObjectCode := ServiceObject."No.";
        ObjectCounter += 1;
      UNTIL SoldItemToServiceLine.NEXT = 0;

      IF ObjectCounter > 0 THEN
        MESSAGE(Text002, ObjectCounter, ServiceObject.TABLECAPTION, FirstObjectCode);

      CLEARMARKS;
      MARKEDONLY(FALSE);
    END;

    PROCEDURE CreateMaterialInventory@1100528302(VAR SoldItemToServiceLineRec@1100528305 : Record 11071923);
    VAR
      SoldItemToServiceLine@1100528306 : Record 11071923;
      ObjectMaterialInventory@1100528303 : Record 11071712;
      Item@1100528900 : Record 27;
      CreateMatInvFromSoldItem@1210190000 : Page 11020395;
      ObjectCode@1100528302 : Code[20];
      RecordCounter@1100528301 : Integer;
      NextLineNo@1100528304 : Integer;
    BEGIN
      SoldItemToServiceLine.COPY(SoldItemToServiceLineRec);

      IF SoldItemToServiceLine.ISEMPTY THEN
        ERROR(Text001);

      CreateMatInvFromSoldItem.LOOKUPMODE := TRUE;
      IF (CreateMatInvFromSoldItem.RUNMODAL <> ACTION::LookupOK) THEN
        EXIT;
      ObjectCode := CreateMatInvFromSoldItem.GetObjectCode;

      ObjectMaterialInventory.SETRANGE(Type, ObjectMaterialInventory.Type::Object);
      ObjectMaterialInventory.SETRANGE(Code, ObjectCode);
      IF (ObjectMaterialInventory.FINDLAST) THEN
        NextLineNo := ObjectMaterialInventory."Line No.";

      SoldItemToServiceLine.FINDFIRST;
      REPEAT
        CheckSerialNumber(SoldItemToServiceLine."Serial No.");  //db, 16-10-12: C002013

        NextLineNo += 10000;
        ObjectMaterialInventory.INIT;
        ObjectMaterialInventory.Type := ObjectMaterialInventory.Type::Object;
        ObjectMaterialInventory.Code := ObjectCode;
        ObjectMaterialInventory."Line No." := NextLineNo;
        ObjectMaterialInventory."Item No." := SoldItemToServiceLine."Item No.";
        ObjectMaterialInventory.Manufacturer := SoldItemToServiceLine.Manufacturer;
        ObjectMaterialInventory."Basic Item" := SoldItemToServiceLine."Basic Item";
        ObjectMaterialInventory."Vendor (Trade Item)" := SoldItemToServiceLine."Vendor (Trade Item)";
        ObjectMaterialInventory."Trade Item" := SoldItemToServiceLine."Trade Item";
        ObjectMaterialInventory.Description := SoldItemToServiceLine.Description;
        ObjectMaterialInventory.Quantity := SoldItemToServiceLine.Quantity;
        ObjectMaterialInventory."Unit of Measure" := SoldItemToServiceLine."Unit of Measure";
        //DP00118.sn
        ObjectMaterialInventory."Warranty Start Date Customer" := SoldItemToServiceLine."Warranty Starting Date Cust.";
        ObjectMaterialInventory."Warranty Code Customer" := SoldItemToServiceLine."Warranty Code Customer";
        ObjectMaterialInventory."Warranty Start Date Vendor" := SoldItemToServiceLine."Warranty Starting Date Vendor";
        ObjectMaterialInventory."Warranty Code Vendor" := SoldItemToServiceLine."Warranty Code Vendor";
        ObjectMaterialInventory."Warranty Date Vendor" := SoldItemToServiceLine."Warranty Exp. Date Vendor";
        ObjectMaterialInventory."Warranty Date Customer" := SoldItemToServiceLine."Warranty Exp. Date Customer";
        //DP00118.en
        ObjectMaterialInventory.INSERT(TRUE);

        //DP00118.sn
        IF (SoldItemToServiceLine."Item No." <> '') AND
           (Item.GET(SoldItemToServiceLine."Item No.")) AND
           (Item."Item Tracking Code" <> '')
        THEN BEGIN
          CreateSpecificationRecord(ObjectCode, 1, 0D, SoldItemToServiceLine."Serial No.", 0, 0, NextLineNo);
          CreateSpecificationRecord(ObjectCode, 2, 0D, SoldItemToServiceLine."Lot No.", 0, 0, NextLineNo);
          CreateSpecificationRecord(ObjectCode, 3, SoldItemToServiceLine."Warranty Starting Date Vendor", '', 0, 0, NextLineNo);
          CreateSpecificationRecord(ObjectCode, 4, SoldItemToServiceLine."Warranty Exp. Date Vendor", '', 0, 0, NextLineNo);
          CreateSpecificationRecord(ObjectCode, 5, SoldItemToServiceLine."Warranty Starting Date Cust.", '', 0, 0, NextLineNo);
          CreateSpecificationRecord(ObjectCode, 6, SoldItemToServiceLine."Warranty Exp. Date Customer", '', 0, 0, NextLineNo);
          CreateSpecificationRecord(ObjectCode, 7, 0D, SoldItemToServiceLine."Warranty Code Customer", 0, 0, NextLineNo);
          CreateSpecificationRecord(ObjectCode, 8, 0D, SoldItemToServiceLine."Warranty Code Customer", 0, 0, NextLineNo);
        END;
        //DP00118.en
        RecordCounter += 1;
      UNTIL (SoldItemToServiceLine.NEXT = 0);

      IF (RecordCounter > 0) THEN
        MESSAGE(Text003, RecordCounter, ObjectMaterialInventory.TABLECAPTION);

      CLEARMARKS;
      MARKEDONLY(FALSE);
    END;

    PROCEDURE CreateSpecificationRecord@1100528304(ObjectCode@1100528302 : Code[20];SpecType@1100528304 : Option;DateValue@1100528305 : Date;TextValue@1100528306 : Text[100];DecimalValue@1100528307 : Decimal;OptionValue@1100528308 : Option;ObjectLine@1100528900 : Integer);
    VAR
      ServiceSetup@1100528300 : Record 11012800;
      ObjectSpecificationLine@1100528301 : Record 11071781;
      ObjectSpecificationLine2@1100525000 : Record 11071781;
      LastLineNo@1100528303 : Integer;
      LineNo@1100525001 : Integer;
    BEGIN
      //SpecType
      //  1: Serial No
      //  2: Lot No
      //  3: Warranty Starting Date Vendor
      //  4: Warranty Date Vendor
      //  5: Warranty Starting Date Customer
      //  6: Warranty Date Customer
      //  7: Warranty Code Vendor
      //  8: Warranty Code Customer

      ServiceSetup.GET;
      //DP00118.sn
      IF ObjectLine <> 0 THEN BEGIN
        ObjectSpecificationLine.SETRANGE("Specification Type", ObjectSpecificationLine."Specification Type"::"Object Line");
        ObjectSpecificationLine.SETRANGE("Object Line No.", ObjectLine);
      END ELSE BEGIN
        ObjectSpecificationLine.SETRANGE("Specification Type", ObjectSpecificationLine."Specification Type"::Object);
      END;
      //DP00118.en
      ObjectSpecificationLine.SETRANGE(Code, ObjectCode);
      IF (ObjectSpecificationLine.FINDLAST) THEN
        LastLineNo := ObjectSpecificationLine."Line No.";
      LastLineNo += 10000;

      ObjectSpecificationLine.INIT;
      //DP00118.sn
      IF ObjectLine <> 0 THEN BEGIN
        ObjectSpecificationLine.VALIDATE("Specification Type", ObjectSpecificationLine."Specification Type"::"Object Line");
        ObjectSpecificationLine."Object Line No." := ObjectLine;
      END ELSE BEGIN
        ObjectSpecificationLine.VALIDATE("Specification Type", ObjectSpecificationLine."Specification Type"::Object);
      END;
      //DP00118.en
      ObjectSpecificationLine.VALIDATE(Code, ObjectCode);
      ObjectSpecificationLine."Line No." := LastLineNo;
      ObjectSpecificationLine.VALIDATE(Type, ObjectSpecificationLine.Type::Line);
      CASE SpecType OF
        1: BEGIN
          IF TextValue = '' THEN
            EXIT;
          IF ServiceSetup."Spec. Code Serial No." = '' THEN
            EXIT;
          ObjectSpecificationLine.VALIDATE("Specification Code", ServiceSetup."Spec. Code Serial No.");
          ObjectSpecificationLine.VALIDATE("Field Type", ObjectSpecificationLine."Field Type"::Text);
          ObjectSpecificationLine.VALIDATE(Value, TextValue);
        END;
        2: BEGIN
          IF TextValue = '' THEN
            EXIT;
          IF ServiceSetup."Spec. Code Lot No." = '' THEN
            EXIT;
          ObjectSpecificationLine.VALIDATE("Specification Code", ServiceSetup."Spec. Code Lot No.");
          ObjectSpecificationLine.VALIDATE("Field Type", ObjectSpecificationLine."Field Type"::Text);
          ObjectSpecificationLine.VALIDATE(Value, TextValue);
        END;
        3: BEGIN
          IF DateValue = 0D THEN
            EXIT;
          IF ServiceSetup."Spec. Code Warr. Start Date V" = '' THEN
            EXIT;
          ObjectSpecificationLine.VALIDATE("Specification Code", ServiceSetup."Spec. Code Warr. Start Date V");
          ObjectSpecificationLine.VALIDATE("Field Type", ObjectSpecificationLine."Field Type"::Date);
          ObjectSpecificationLine.VALIDATE("Value (Date)", DateValue);
        END;
        4: BEGIN
          IF DateValue = 0D THEN
            EXIT;
          IF ServiceSetup."Spec. Code Warranty Date Vend." = '' THEN
            EXIT;
          ObjectSpecificationLine.VALIDATE("Specification Code", ServiceSetup."Spec. Code Warranty Date Vend.");
          ObjectSpecificationLine.VALIDATE("Field Type", ObjectSpecificationLine."Field Type"::Date);
          ObjectSpecificationLine.VALIDATE("Value (Date)", DateValue);
        END;
        5: BEGIN
          IF DateValue = 0D THEN
            EXIT;
          IF ServiceSetup."Spec. Code Warr. Start Date C." = '' THEN
            EXIT;
          ObjectSpecificationLine.VALIDATE("Specification Code", ServiceSetup."Spec. Code Warr. Start Date C.");
          ObjectSpecificationLine.VALIDATE("Field Type", ObjectSpecificationLine."Field Type"::Date);
          ObjectSpecificationLine.VALIDATE("Value (Date)", DateValue);
        END;
        6: BEGIN
          IF DateValue = 0D THEN
            EXIT;
          IF ServiceSetup."Spec. Code Warranty Date Cust." = '' THEN
            EXIT;
          ObjectSpecificationLine.VALIDATE("Specification Code", ServiceSetup."Spec. Code Warranty Date Cust.");
          ObjectSpecificationLine.VALIDATE("Field Type", ObjectSpecificationLine."Field Type"::Date);
          ObjectSpecificationLine.VALIDATE("Value (Date)", DateValue);
        END;
        7: BEGIN
          IF TextValue = '' THEN
            EXIT;
          IF ServiceSetup."Spec. Code Warranty Code Vend." = '' THEN
            EXIT;
          ObjectSpecificationLine.VALIDATE("Specification Code", ServiceSetup."Spec. Code Warranty Code Vend.");
          ObjectSpecificationLine.VALIDATE("Field Type", ObjectSpecificationLine."Field Type"::Text);
          ObjectSpecificationLine.VALIDATE(Value, TextValue);
        END;
        8: BEGIN
          IF TextValue = '' THEN
            EXIT;
          IF ServiceSetup."Spec. Code Warranty Code Cust." = '' THEN
            EXIT;
          ObjectSpecificationLine.VALIDATE("Specification Code", ServiceSetup."Spec. Code Warranty Code Cust.");
          ObjectSpecificationLine.VALIDATE("Field Type", ObjectSpecificationLine."Field Type"::Text);
          ObjectSpecificationLine.VALIDATE(Value, TextValue);
        END;
      END;

      ObjectSpecificationLine2.COPY(ObjectSpecificationLine);
      ObjectSpecificationLine2.SETRECFILTER;
      ObjectSpecificationLine2.SETRANGE("Line No.");
      ObjectSpecificationLine2.SETRANGE(Type, ObjectSpecificationLine.Type);
      ObjectSpecificationLine2.SETRANGE("Specification Code", ObjectSpecificationLine."Specification Code");
      IF ObjectSpecificationLine2.FINDFIRST THEN BEGIN
        LineNo := ObjectSpecificationLine2."Line No.";
        ObjectSpecificationLine2 := ObjectSpecificationLine;
        ObjectSpecificationLine2."Line No." := LineNo;
        ObjectSpecificationLine2.MODIFY(TRUE);
      END ELSE
        ObjectSpecificationLine.INSERT(TRUE);
    END;

    PROCEDURE ReadProjectLedgerEntry@1100528303(SoldItemToServiceFilter@1210190000 : Record 11071922);
    VAR
      JobLedgerEntry@1100528301 : Record 11072005;
      NSItemTrackingRelation@1100528500 : Record 11071905;
      TotQuanSpecified@1100528501 : Decimal;
    BEGIN
      JobLedgerEntry.SETFILTER("Job No.", SoldItemToServiceFilter."Project Filter");
      //JobLedgerEntry.SETFILTER("Service Order No.", SoldItemToServiceFilter."Service Order Filter");
      JobLedgerEntry.SETFILTER("Posting Date", SoldItemToServiceFilter."Posting Date Filter");
      JobLedgerEntry.SETRANGE("Cost Type", JobLedgerEntry."Cost Type"::Material);
      JobLedgerEntry.SETFILTER(Quantity, '>0');
      IF (NOT JobLedgerEntry.FINDFIRST) THEN
        EXIT;

      REPEAT
        INIT;
        "Line No." := 0;

        Source := Source::Project;
        "Source No." := JobLedgerEntry."Job No.";
        VALIDATE("Item No.", JobLedgerEntry."Item No.");
        "Basic Item" := JobLedgerEntry."Basic Item";
        Manufacturer := JobLedgerEntry.Manufacturer;
        "Trade Item" := JobLedgerEntry."Trade Item";
        "Vendor (Trade Item)" := JobLedgerEntry."Vendor (Trade Item)";
        Description := JobLedgerEntry.Description;
        "Description 2" := JobLedgerEntry."Description 2";
        "Unit of Measure" := JobLedgerEntry."Unit of Measure Code";
        "Posting Date" := JobLedgerEntry."Posting Date";
        "Vendor No." := JobLedgerEntry."Vendor No.";
        //DP00121.sn
        TotQuanSpecified := 0;
        NSItemTrackingRelation.SETCURRENTKEY("Project Ledger Entry No.");
        NSItemTrackingRelation.SETRANGE("Project Ledger Entry No.", JobLedgerEntry."Entry No.");
        IF NSItemTrackingRelation.FINDSET THEN
          REPEAT
            InsertLineFromNSItemTracking(
              NSItemTrackingRelation."Item Tracking Entry No.",TotQuanSpecified, FALSE);
          UNTIL NSItemTrackingRelation.NEXT = 0;

        IF (TotQuanSpecified = 0) OR ((JobLedgerEntry.Quantity - TotQuanSpecified) <> 0 ) THEN BEGIN
          Quantity := JobLedgerEntry.Quantity - TotQuanSpecified;
          "Serial No." := '';
          "Lot No." := '';
          INSERT(TRUE); //kzwerver, 121029, c, #C003252
        END;
        //
      UNTIL (JobLedgerEntry.NEXT = 0);
    END;

    PROCEDURE ReadServiceLedgerEntry@1100528306(SoldItemToServiceFilter@1210190000 : Record 11071922);
    VAR
      ServiceLedgerEntry@1100528301 : Record 11012819;
      NSItemTrackingRelation@1100528502 : Record 11071905;
      TotQuanSpecified@1100528500 : Decimal;
    BEGIN
      //ServiceLedgerEntry.SETFILTER("Project No.", SoldItemToServiceFilter."Project Filter");
      ServiceLedgerEntry.SETFILTER("Service Order No.", SoldItemToServiceFilter."Service Order Filter");
      ServiceLedgerEntry.SETFILTER("Posting Date", SoldItemToServiceFilter."Posting Date Filter");
      ServiceLedgerEntry.SETRANGE("Cost Type", ServiceLedgerEntry."Cost Type"::Material);
      ServiceLedgerEntry.SETFILTER(Quantity, '>0');
      IF (NOT ServiceLedgerEntry.FINDFIRST) THEN
        EXIT;

      REPEAT
        INIT;
        "Line No." := 0;
        Source := Source::"Service Order";
        "Source No." := ServiceLedgerEntry."Service Order No.";
        VALIDATE("Item No.", ServiceLedgerEntry."Item No.");
        "Basic Item" := ServiceLedgerEntry."Basic Item";
        Manufacturer := ServiceLedgerEntry.Manufacturer;
        "Trade Item" := ServiceLedgerEntry."Trade Item";
        "Vendor (Trade Item)" := ServiceLedgerEntry."Vendor (Trade Item)";
        Description := ServiceLedgerEntry.Description;
        "Description 2" := ServiceLedgerEntry."Description 2";
        "Unit of Measure" := ServiceLedgerEntry."Unit of Measure Code";
        "Posting Date" := ServiceLedgerEntry."Posting Date";
        "Service Location No." := ServiceLedgerEntry."Service Location No.";
        "Vendor No." := ServiceLedgerEntry."Vendor No.";

        //DP00121.sn
        TotQuanSpecified := 0;
        NSItemTrackingRelation.SETCURRENTKEY("Service Ledger Entry No.");
        NSItemTrackingRelation.SETRANGE("Service Ledger Entry No.", ServiceLedgerEntry."Entry No.");
        IF NSItemTrackingRelation.FINDSET THEN
          REPEAT
            InsertLineFromNSItemTracking(
              NSItemTrackingRelation."Item Tracking Entry No.",TotQuanSpecified, FALSE);
          UNTIL NSItemTrackingRelation.NEXT = 0;

        IF (TotQuanSpecified = 0) OR ((ServiceLedgerEntry.Quantity - TotQuanSpecified) <> 0 ) THEN BEGIN
          Quantity := ServiceLedgerEntry.Quantity - TotQuanSpecified;
          "Serial No." := '';
          "Lot No." := '';
          INSERT(TRUE);  //kzwerver, 121029, c, #C003252
        END;
        //
      UNTIL (ServiceLedgerEntry.NEXT = 0);
    END;

    PROCEDURE ReadSalesLine@1100528310(SoldItemToServiceFilter@1210190000 : Record 11071922);
    VAR
      SalesLine@1100528301 : Record 37;
      ItemEntryRelation@1100528500 : Record 6507;
      NSItemEntryRelation@1100528501 : Record 11071903;
      TotQuanSpecified@1100528502 : Decimal;
    BEGIN
      SalesLine.SETRANGE("Document Type", SalesLine."Document Type"::Order);
      SalesLine.SETFILTER("Document No.", SoldItemToServiceFilter."Sales Order Filter");
      //SalesLine.SETFILTER("Job No.", SoldItemToServiceFilter."Project Filter");
      //SalesLine.SETFILTER("Service Order No.", SoldItemToServiceFilter."Service Order Filter");
      SalesLine.SETFILTER("Item Category Code", SoldItemToServiceFilter."Item Category Filter");
      SalesLine.SETFILTER("Item No.", '<>%1', '');
      SalesLine.SETFILTER(Quantity, '>0');
      IF (NOT SalesLine.FINDFIRST) THEN
        EXIT;

      REPEAT
        INIT;
        Source := Source::"Sales Order";
        "Source No." := SalesLine."Document No.";
        VALIDATE("Item No.", SalesLine."Item No.");
        "Basic Item" := SalesLine."Basic Item";
        Manufacturer := SalesLine.Manufacturer;
        "Trade Item" := SalesLine."Trade Item";
        "Vendor (Trade Item)" := SalesLine."Vendor (Trade Item)";
        Description := SalesLine.Description;
        "Description 2" := SalesLine."Description 2";
        "Unit of Measure" := SalesLine."Unit of Measure Code";

        //DP00121.sn
        TotQuanSpecified := 0;
        NSItemEntryRelation.SETCURRENTKEY("Order No.", "Order Line No.");
        NSItemEntryRelation.SETRANGE("Order No.", SalesLine."Document No.");
        NSItemEntryRelation.SETRANGE("Order Line No.", SalesLine."Line No.");
        IF NSItemEntryRelation.FINDSET THEN
          REPEAT
            InsertLineFromNSItemTracking(
              NSItemEntryRelation."Item Tracking Entry No.",TotQuanSpecified, TRUE);
          UNTIL NSItemEntryRelation.NEXT = 0;

        ItemEntryRelation.SETCURRENTKEY("Order No.", "Order Line No.");
        ItemEntryRelation.SETRANGE("Order No.", SalesLine."Document No.");
        ItemEntryRelation.SETRANGE("Order Line No.", SalesLine."Line No.");
        IF ItemEntryRelation.FINDSET THEN
          REPEAT
            InsertLineFromItemTracking(
              ItemEntryRelation."Item Entry No.",TotQuanSpecified, TRUE);
          UNTIL ItemEntryRelation.NEXT = 0;

        IF (TotQuanSpecified = 0) OR ((SalesLine.Quantity - TotQuanSpecified) <> 0 ) THEN BEGIN
          Quantity := SalesLine.Quantity - TotQuanSpecified;
          "Serial No." := '';
          "Lot No." := '';
          INSERT(TRUE);  //kzwerver, 121029, c, #C003252
        END;
        //
      UNTIL (SalesLine.NEXT = 0);
    END;

    PROCEDURE ClearTable@1100528305();
    BEGIN
      CLEARMARKS;
      MARKEDONLY(FALSE);
      DELETEALL;
    END;

    PROCEDURE InsertLineFromNSItemTracking@1100528500(ItemTrackingEntryNo@1100528500 : Integer;VAR TotQuanSpecified@1100528502 : Decimal;SalesOrder@1100528503 : Boolean);
    VAR
      NSItemTrackingEntry@1100528501 : Record 11071902;
    BEGIN
      //DP00121
      NSItemTrackingEntry.GET(ItemTrackingEntryNo);
      IF SalesOrder THEN
        Quantity := -NSItemTrackingEntry.Quantity
      ELSE
        Quantity := NSItemTrackingEntry.Quantity;
      "Serial No." := NSItemTrackingEntry."Serial No.";
      "Lot No." := NSItemTrackingEntry."Lot No.";
      "Warranty Starting Date Vendor" := NSItemTrackingEntry."Warranty Start Date Vendor";
      "Warranty Exp. Date Vendor" := NSItemTrackingEntry."Warranty Date Vendor";
      "Warranty Starting Date Cust." := NSItemTrackingEntry."Warranty Start Date Customer";
      "Warranty Exp. Date Customer" := NSItemTrackingEntry."Warranty Date Customer";
      "Warranty Code Vendor" := NSItemTrackingEntry."Warranty Code Vendor";
      "Warranty Code Customer" := NSItemTrackingEntry."Warranty Code Customer";
      INSERT(TRUE);  //kzwerver, 121029, c, #C003252

      TotQuanSpecified := TotQuanSpecified + Quantity;
      "Line No." := "Line No." + 1 ;
    END;

    PROCEDURE InsertLineFromItemTracking@1100528501(ItemTrackingEntryNo@1100528500 : Integer;VAR TotQuanSpecified@1100528502 : Decimal;SalesOrder@1100528503 : Boolean);
    VAR
      NSItemLedgerEntry@1100528501 : Record 32;
    BEGIN
      //DP00121
      NSItemLedgerEntry.GET(ItemTrackingEntryNo);
      IF SalesOrder THEN
        Quantity := -NSItemLedgerEntry.Quantity
      ELSE
        Quantity := NSItemLedgerEntry.Quantity;
      "Serial No." := NSItemLedgerEntry."Serial No.";
      "Lot No." := NSItemLedgerEntry."Lot No.";
      "Warranty Starting Date Vendor" := NSItemLedgerEntry."Warranty Start Date Vendor";
      "Warranty Exp. Date Vendor" := NSItemLedgerEntry."Warranty Date";
      "Warranty Starting Date Cust." := NSItemLedgerEntry."Warranty Start Date Customer";
      "Warranty Exp. Date Customer" := NSItemLedgerEntry."Warranty Date Customer";
      "Warranty Code Vendor" := NSItemLedgerEntry."Warranty Code Vendor";
      "Warranty Code Customer" := NSItemLedgerEntry."Warranty Code Customer";
      INSERT(TRUE);  //kzwerver, 121029, c, #C003252

      TotQuanSpecified := TotQuanSpecified + Quantity;
      "Line No." := "Line No." + 1 ;
    END;

    PROCEDURE CheckSerialNumber@1100528900(SerialNo@1100528900 : Code[40]);
    VAR
      ServiceObject@1100528903 : Record 11071691;
      ObjectSpecificationLine@1100528902 : Record 11071781;
      Text000@1100528901 : TextConst 'ENU=Serialnumber %1 already used for %2 %3 %4;NOR=Serienummer %1 er allerede brukt for %2 %3 %4';
      ObjectDetail@1100528904 : Text[250];
    BEGIN
      //db, 16-10-12: C002013
      IF SerialNo = '' THEN EXIT;

      WITH ObjectSpecificationLine DO BEGIN
        SETRANGE(Value, SerialNo);
        IF FINDFIRST THEN BEGIN
          IF "Object Line No." <> 0 THEN BEGIN
            ObjectDetail := FIELDCAPTION("Object Line No.") + ' ' + FORMAT("Object Line No.");
          END;
          ERROR(Text000, SerialNo, ServiceObject.TABLECAPTION, Code, ObjectDetail);
        END;
      END;
    END;

    PROCEDURE ApplyChanges@1100528600(IUpdateStandardObjectNo@1100528613 : Boolean;IStandardObjectNo@1100528614 : Code[20];IChangeWarrantyCodeCustomer@1100528607 : Boolean;IWarrantyCodeCustomer@1100528600 : Code[10];IChangeWarrantyStartDateCustomer@1100528608 : Boolean;IWarrantyStartDateCustomer@1100528601 : Date;IChangeWarrantyDateCustomer@1100528609 : Boolean;IWarrantyDateCustomer@1100528602 : Date;IChangeWarrantyCodeVendor@1100528610 : Boolean;IWarrantyCodeVendor@1100528603 : Code[10];IChangeWarrantyStartDateVendor@1100528611 : Boolean;IWarrantyStartDateVendor@1100528604 : Date;IChangeWarrantyDateVendor@1100528612 : Boolean;IWarrantyDateVendor@1100528605 : Date);
    VAR
      SoldItemToServiceLine@1100528606 : Record 11071923;
    BEGIN
      SoldItemToServiceLine.COPY(Rec);
      IF SoldItemToServiceLine.ISEMPTY THEN
        ERROR(Text001);
      IF SoldItemToServiceLine.FINDSET THEN
        REPEAT
          IF IUpdateStandardObjectNo THEN
            SoldItemToServiceLine.VALIDATE("Standard Object No.", IStandardObjectNo);
          IF IChangeWarrantyCodeCustomer THEN
            SoldItemToServiceLine.VALIDATE("Warranty Code Customer", IWarrantyCodeCustomer);
          IF IChangeWarrantyStartDateCustomer THEN
            SoldItemToServiceLine.VALIDATE("Warranty Starting Date Cust.", IWarrantyStartDateCustomer);
          IF IChangeWarrantyDateCustomer THEN
            SoldItemToServiceLine.VALIDATE("Warranty Exp. Date Customer", IWarrantyDateCustomer);
          IF IChangeWarrantyCodeVendor THEN
            SoldItemToServiceLine.VALIDATE("Warranty Code Vendor", IWarrantyCodeVendor);
          IF IChangeWarrantyStartDateVendor THEN
            SoldItemToServiceLine.VALIDATE("Warranty Starting Date Vendor", IWarrantyStartDateVendor);
          IF IChangeWarrantyDateVendor THEN
            SoldItemToServiceLine.VALIDATE("Warranty Exp. Date Vendor", IWarrantyDateVendor);
          SoldItemToServiceLine.MODIFY(TRUE);
        UNTIL SoldItemToServiceLine.NEXT = 0;
      IF GUIALLOWED THEN
        MESSAGE(Text005, SoldItemToServiceLine.COUNT);
    END;

    PROCEDURE Compress@1100528603(VAR IOSoldItemToServiceLine@1100528600 : Record 11071923);
    VAR
      SoldItemToServiceLine@1100528601 : Record 11071923;
      NoOfLinesCompressed@1100528602 : Integer;
    BEGIN
      SoldItemToServiceLine.COPY(IOSoldItemToServiceLine);
      IF SoldItemToServiceLine.ISEMPTY THEN
        ERROR(Text001);
      SoldItemToServiceLine.SETRANGE(Source, SoldItemToServiceLine.Source::Project);
      CompressBySource(SoldItemToServiceLine, NoOfLinesCompressed);

      SoldItemToServiceLine.COPY(IOSoldItemToServiceLine);
      SoldItemToServiceLine.SETRANGE(Source, SoldItemToServiceLine.Source::"Service Order");
      CompressBySource(SoldItemToServiceLine, NoOfLinesCompressed);

      SoldItemToServiceLine.COPY(IOSoldItemToServiceLine);
      SoldItemToServiceLine.SETRANGE(Source, SoldItemToServiceLine.Source::"Sales Order");
      CompressBySource(SoldItemToServiceLine, NoOfLinesCompressed);

      MESSAGE(Text006, NoOfLinesCompressed);
    END;

    LOCAL PROCEDURE CompressBySource@1100528604(VAR IOSoldItemToServiceLine@1100528600 : Record 11071923;VAR ONoOfLinesCompressed@1100528605 : Integer);
    VAR
      SoldItemToServiceLine@1100528603 : Record 11071923;
      TmpSoldItemToServiceLine@1100528602 : TEMPORARY Record 11071923;
      TmpCode@1100528601 : TEMPORARY Record 11072003;
    BEGIN
      SoldItemToServiceLine.COPY(IOSoldItemToServiceLine);
      IF SoldItemToServiceLine.FINDSET THEN
        REPEAT
          IF NOT TmpCode.GET(SoldItemToServiceLine."Source No.") THEN BEGIN
            TmpCode."No." := SoldItemToServiceLine."Source No.";
            TmpCode.INSERT;
          END;
        UNTIL SoldItemToServiceLine.NEXT = 0;

      IF TmpCode.FINDSET THEN BEGIN
        REPEAT
          SoldItemToServiceLine.SETRANGE("Source No.", TmpCode."No.");
          SoldItemToServiceLine.SETFILTER("Standard Object No.", '<>%1', '');
          IF SoldItemToServiceLine.FINDSET THEN
            REPEAT
              TmpSoldItemToServiceLine.SETRANGE("Source No.", SoldItemToServiceLine."Source No.");
              TmpSoldItemToServiceLine.SETRANGE("Standard Object No.", SoldItemToServiceLine."Standard Object No.");
              TmpSoldItemToServiceLine.SETRANGE("Item No.", SoldItemToServiceLine."Item No.");
              TmpSoldItemToServiceLine.SETRANGE("Serial No.", SoldItemToServiceLine."Serial No.");
              TmpSoldItemToServiceLine.SETRANGE("Lot No.", SoldItemToServiceLine."Lot No.");
              TmpSoldItemToServiceLine.SETRANGE("Warranty Code Customer", SoldItemToServiceLine."Warranty Code Customer");
              TmpSoldItemToServiceLine.SETRANGE("Warranty Starting Date Cust.", SoldItemToServiceLine."Warranty Starting Date Cust.");
              TmpSoldItemToServiceLine.SETRANGE("Warranty Exp. Date Customer", SoldItemToServiceLine."Warranty Exp. Date Customer");
              TmpSoldItemToServiceLine.SETRANGE("Vendor No.", SoldItemToServiceLine."Vendor No.");
              TmpSoldItemToServiceLine.SETRANGE("Warranty Code Vendor", SoldItemToServiceLine."Warranty Code Vendor");
              TmpSoldItemToServiceLine.SETRANGE("Warranty Starting Date Vendor", SoldItemToServiceLine."Warranty Starting Date Vendor");
              TmpSoldItemToServiceLine.SETRANGE("Warranty Exp. Date Vendor", SoldItemToServiceLine."Warranty Exp. Date Vendor");
              IF NOT TmpSoldItemToServiceLine.FINDFIRST THEN BEGIN
                TmpSoldItemToServiceLine := SoldItemToServiceLine;
                TmpSoldItemToServiceLine.INSERT;
              END ELSE BEGIN
                TmpSoldItemToServiceLine.Quantity += SoldItemToServiceLine.Quantity;
                TmpSoldItemToServiceLine.MODIFY;
                ONoOfLinesCompressed += 1;
              END;
              SoldItemToServiceLine.DELETE;
            UNTIL SoldItemToServiceLine.NEXT = 0;
        UNTIL TmpCode.NEXT = 0;

        TmpSoldItemToServiceLine.RESET;
        IF TmpSoldItemToServiceLine.FINDSET THEN
          REPEAT
            SoldItemToServiceLine := TmpSoldItemToServiceLine;
            SoldItemToServiceLine.INSERT(TRUE);
            TmpSoldItemToServiceLine.DELETE;
          UNTIL TmpSoldItemToServiceLine.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

