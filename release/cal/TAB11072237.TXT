OBJECT Table 11072237 Service Sales Disc./Surch.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Service Sales Discount/Surcharge;
    LookupPageID=Page11229405;
    DrillDownPageID=Page11229405;
  }
  FIELDS
  {
    { 10  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF Type IN [Type::Contract, Type::"Contract Template"] THEN BEGIN
                                                                  "Discount/Surcharge" := "Discount/Surcharge"::Discount;
                                                                  "Ending Date" := 0D;
                                                                  Source := Source::" ";
                                                                  "Contract Group" := '';
                                                                  "Transaction Mode Filter" := '';
                                                                  CLEAR("Invoice Period");
                                                                END ELSE BEGIN
                                                                  "Object No." := '';
                                                                  "Currency Code" := '';
                                                                  CLEAR(Period);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Typ];
                                                   OptionCaptionML=ENU=Customer Group,Contract,Contract Template;
                                                   OptionString=Customer Group,Contract,Contract Template }
    { 20  ;   ;Code                ;Code20        ;TableRelation=IF (Type=CONST(Contract)) Service-Contract
                                                                 ELSE IF (Type=CONST(Customer Group)) "Customer Price Group";
                                                   OnValidate=VAR
                                                                ServiceContract@1100528600 : Record 11012812;
                                                                ContractInstallment@1100528601 : Record 11071707;
                                                              BEGIN
                                                                IF Type IN [Type::Contract, Type::"Contract Template"] THEN
                                                                  IF Code <> '' THEN BEGIN
                                                                    ServiceContract.GET(Code);
                                                                    VALIDATE("Currency Code", ServiceContract."Currency Code");
                                                                    CASE ServiceContract."Invoice Type" OF
                                                                      ServiceContract."Invoice Type"::Dynamic:
                                                                        TestPeriodForPositiveYearOrMonth(ServiceContract."Invoice Interval");
                                                                      ServiceContract."Invoice Type"::Installments:
                                                                        BEGIN
                                                                          ContractInstallment.SETRANGE("Service Contract No.", Code);
                                                                          IF ContractInstallment.FINDSET THEN
                                                                            REPEAT
                                                                              TestPeriodForPositiveYearOrMonth(ContractInstallment."Invoice Interval");
                                                                            UNTIL ContractInstallment.NEXT = 0;
                                                                        END;
                                                                    END;
                                                                  END ELSE
                                                                    "Currency Code" := '';
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 25  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 30  ;   ;Discount/Surcharge  ;Option        ;OnValidate=BEGIN
                                                                IF "Discount/Surcharge" = "Discount/Surcharge"::Surcharge THEN
                                                                  TESTFIELD(Type, Type::"Customer Group")
                                                              END;

                                                   CaptionML=ENU=Discount/Surcharge;
                                                   OptionCaptionML=[ENU=Discount,Surcharge;
                                                                    NOR=Rabatt,Tilleggsgebyr;
                                                                    SVE=Rabatt,Till„ggsavgift];
                                                   OptionString=Discount,Surcharge }
    { 40  ;   ;Starting Date       ;Date          ;CaptionML=[ENU=Starting Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum] }
    { 50  ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                IF "Ending Date" <> 0D THEN
                                                                  TESTFIELD(Type, Type::"Customer Group");
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              NOR=Sluttdato;
                                                              SVE=Slutdatum] }
    { 60  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 70  ;   ;Period              ;DateFormula   ;OnValidate=BEGIN
                                                                IF FORMAT(Period) <> '' THEN BEGIN
                                                                  IF NOT (Type IN [Type::Contract, Type::"Contract Template"]) THEN
                                                                    FIELDERROR(Type, STRSUBSTNO(Text002, Type::Contract, Type::"Contract Template"));
                                                                  TestPeriodForPositiveYearOrMonth(Period);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Period;
                                                              NOR=Periode;
                                                              SVE=Period] }
    { 80  ;   ;Amount              ;Decimal       ;OnValidate=VAR
                                                                Currency2@1100528600 : Record 4;
                                                                CurrencyExchangeRate@1100528601 : Record 330;
                                                              BEGIN
                                                                IF Amount <> 0 THEN BEGIN
                                                                  TESTFIELD(Percentage, 0);
                                                                  IF Type = Type::Contract THEN
                                                                    TestContractFixedDynamicInvoicing;
                                                                  IF Type = Type::"Contract Template" THEN
                                                                    TestContractTemplateFixedDynamicInvoicing;
                                                                END;

                                                                Currency2.InitRoundingPrecision;
                                                                IF "Currency Code" <> '' THEN BEGIN
                                                                  "Amount (LCY)" :=
                                                                    ROUND(
                                                                      CurrencyExchangeRate.ExchangeAmtFCYToLCY(
                                                                        0, '', "Starting Date", "Currency Code", Amount,
                                                                         CurrencyExchangeRate.ExchangeRate(0, '', "Starting Date", "Currency Code",TRUE),TRUE),
                                                                         Currency2."Amount Rounding Precision");
                                                                END ELSE
                                                                  "Amount (LCY)" := ROUND(Amount,Currency2."Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp];
                                                   MinValue=0 }
    { 90  ;   ;Percentage          ;Decimal       ;OnValidate=BEGIN
                                                                IF Percentage <> 0 THEN
                                                                  TESTFIELD(Amount, 0);
                                                              END;

                                                   CaptionML=[ENU=Percentage;
                                                              NOR=Prosent;
                                                              SVE=Procent] }
    { 100 ;   ;Object No.          ;Code20        ;TableRelation=Service-Object;
                                                   OnValidate=VAR
                                                                ServiceContract@1100525000 : Record 11012812;
                                                              BEGIN
                                                                IF "Object No." <> '' THEN BEGIN
                                                                  TESTFIELD(Type, Type::Contract);
                                                                  ServiceContract.GET(Code);
                                                                  ServiceContract.TESTFIELD("Invoice Type", ServiceContract."Invoice Type"::Dynamic);
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              ContractObject@1100528600 : Record 11071702;
                                                              ServiceObject@1100528601 : Record 11071691;
                                                            BEGIN
                                                              IF Type = Type::Contract THEN BEGIN
                                                                ContractObject.SETRANGE("Service Contract No.", Code);
                                                                IF ContractObject.FINDSET THEN
                                                                  REPEAT
                                                                    ServiceObject."No." := ContractObject."Service Object No.";
                                                                    ServiceObject.MARK(TRUE);
                                                                  UNTIL ContractObject.NEXT = 0;
                                                                ServiceObject.MARKEDONLY(TRUE);
                                                                IF PAGE.RUNMODAL(0, ServiceObject) = ACTION::LookupOK THEN
                                                                  VALIDATE("Object No.", ServiceObject."No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Object No.;
                                                              NOR=Objektnr.;
                                                              SVE=Objektnr] }
    { 150 ;   ;Source              ;Option        ;OnValidate=BEGIN
                                                                IF Source <> Source::" " THEN
                                                                  TESTFIELD(Type, Type::"Customer Group");
                                                                IF Source = Source::"Service Order" THEN BEGIN
                                                                  "Contract Group" := '';
                                                                  CLEAR("Invoice Period");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Source;
                                                              NOR=Source;
                                                              SVE=K„lla];
                                                   OptionCaptionML=ENU=" ,Contract,Service Order";
                                                   OptionString=[ ,Contract,Service Order] }
    { 160 ;   ;Contract Group      ;Code20        ;TableRelation="Service Contract Group".Code;
                                                   OnValidate=BEGIN
                                                                IF "Contract Group" <> '' THEN BEGIN
                                                                  TESTFIELD(Type, Type::"Customer Group");
                                                                  TESTFIELD(Source, Source::Contract);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Contract Group;
                                                              NOR=Kontraktgruppe;
                                                              SVE=Kontraktsgrupp] }
    { 170 ;   ;Transaction Mode Filter;Code100    ;OnValidate=VAR
                                                                Customer@1100528600 : Record 18;
                                                              BEGIN
                                                                IF "Transaction Mode Filter" <> '' THEN
                                                                  TESTFIELD(Type, Type::"Customer Group");
                                                              END;

                                                   CaptionML=ENU=Transaction Mode Filter }
    { 180 ;   ;Invoice Period      ;DateFormula   ;OnValidate=BEGIN
                                                                IF FORMAT("Invoice Period") <> '' THEN BEGIN
                                                                  TESTFIELD(Type, Type::"Customer Group");
                                                                  TESTFIELD(Source, Source::Contract);
                                                                  TestPeriodForPositiveYearOrMonth("Invoice Period");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Invoice Period;
                                                              NOR=Fakturaperiode;
                                                              SVE=Fakturaperiod] }
    { 190 ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                VALIDATE("Amount (LCY)");
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod];
                                                   Editable=No }
    { 200 ;   ;Amount (LCY)        ;Decimal       ;OnValidate=VAR
                                                                Currency2@1100528600 : Record 4;
                                                                CurrencyExchangeRate@1100528601 : Record 330;
                                                              BEGIN
                                                                IF "Amount (LCY)" <> 0 THEN BEGIN
                                                                  TESTFIELD(Percentage, 0);
                                                                  IF Type = Type::Contract THEN
                                                                    TestContractFixedDynamicInvoicing;
                                                                  IF Type = Type::"Contract Template" THEN
                                                                    TestContractTemplateFixedDynamicInvoicing;
                                                                END;
                                                                Currency2.InitRoundingPrecision;
                                                                IF "Currency Code" <> '' THEN BEGIN
                                                                  Amount :=
                                                                    ROUND(
                                                                      CurrencyExchangeRate.ExchangeAmtLCYToFCY(
                                                                        0, '', "Starting Date", "Currency Code", "Amount (LCY)",
                                                                         CurrencyExchangeRate.ExchangeRate(0, '', "Starting Date", "Currency Code",TRUE),TRUE),
                                                                         Currency2."Amount Rounding Precision");
                                                                END ELSE
                                                                  Amount := ROUND("Amount (LCY)",Currency2."Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Amount (LCY);
                                                              NOR=Bel›p (NOK);
                                                              SVE=Belopp (BVA)] }
  }
  KEYS
  {
    {    ;Type,Code,Object No.,Line No.           ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=Period must be a positive value and in Years of Months';
      Text001@1100528601 : TextConst 'ENU=YM';
      Text002@1100528602 : TextConst 'ENU=must be %1 or %2';

    LOCAL PROCEDURE TestPeriodForPositiveYearOrMonth@1100528600(InvoicePeriod@1100528600 : DateFormula);
    VAR
      RegExpManagement@1100528601 : Codeunit 11012262;
    BEGIN
      IF NOT RegExpManagement.RegExpFindMatches(FORMAT(InvoicePeriod), '^[+]?\d+[' + Text001 + ']$') THEN
        ERROR(Text000);
    END;

    LOCAL PROCEDURE TestContractFixedDynamicInvoicing@1100528601();
    VAR
      ServiceContract@1100528600 : Record 11012812;
    BEGIN
      IF NOT ServiceContract.GET(Code) THEN
        EXIT;
      IF ServiceContract."Invoice Type" <> ServiceContract."Invoice Type"::Dynamic THEN
        EXIT;
      ServiceContract.TESTFIELD("Dynamic Invoice Type", ServiceContract."Dynamic Invoice Type"::"Invoice Interval");
    END;

    LOCAL PROCEDURE TestContractTemplateFixedDynamicInvoicing@1100528602();
    VAR
      ServiceContractTemplate@1100528600 : Record 11071754;
    BEGIN
      IF NOT ServiceContractTemplate.GET(Code) THEN
        EXIT;
      IF ServiceContractTemplate."Invoice Type" <> ServiceContractTemplate."Invoice Type"::Dynamic THEN
        EXIT;
      ServiceContractTemplate.TESTFIELD("Dynamic Invoice Type", ServiceContractTemplate."Dynamic Invoice Type"::"Invoice Interval");
    END;

    PROCEDURE DetermineEffectiveSalesDiscountDS@1100528604(IInvoiceType@1100528614 : 'Dynamic,Installment';IServiceContractNo@1100528611 : Code[20];IServiceObjectNo@1100528612 : Code[20];IInstallmentLineNo@1100528613 : Integer;VAR OServiceSalesDiscSurch@1100528615 : Record 11072237);
    VAR
      ServiceContract@1100528601 : Record 11012812;
      ContractObject@1100528602 : Record 11071702;
      ContractInstallment@1100528603 : Record 11071707;
      Date@1100528605 : Record 2000000007;
      OriginalInvoiceFrom@1100528616 : Date;
      InvoiceFrom@1100528604 : Date;
      InvoiceUntil@1100528600 : Date;
      InvoiceInterval@1100528607 : DateFormula;
    BEGIN
      CASE IInvoiceType OF
        IInvoiceType::Dynamic:
          BEGIN
            ContractObject.GET(IServiceContractNo, IServiceObjectNo);
            ContractObject.CALCFIELDS("Invoice Interval");
            OriginalInvoiceFrom := ContractObject."Invoice From";
            IF ContractObject."Invoiced Until" <> 0D THEN
              InvoiceFrom := ContractObject."Invoiced Until" +1
            ELSE
              InvoiceFrom := ContractObject."Invoice From";
            ServiceContract.GET(IServiceContractNo);
            InvoiceInterval := ContractObject."Invoice Interval";
          END;
        IInvoiceType::Installment:
          BEGIN
            ContractInstallment.GET(IServiceContractNo, IInstallmentLineNo);
            OriginalInvoiceFrom := ContractInstallment."Invoice From";
            IF ContractInstallment."Invoiced Until" <> 0D THEN
              InvoiceFrom := ContractInstallment."Invoiced Until" +1
            ELSE
              InvoiceFrom := ContractInstallment."Invoice From";
            InvoiceInterval := ContractInstallment."Invoice Interval";
          END;
      END;
      IF FORMAT(InvoiceInterval) = '' THEN
        IF IInvoiceType = IInvoiceType::Installment THEN
          EXIT
        ELSE
          EVALUATE(InvoiceInterval, '<1D>');
      InvoiceUntil := CALCDATE(InvoiceInterval, InvoiceFrom) -1;
      Date.SETRANGE("Period Type", Date."Period Type"::Month);
      Date.SETRANGE("Period Start", InvoiceFrom, InvoiceUntil);
      IF Date.FINDSET THEN
        REPEAT
          InsertServiceSalesDiscSurchRecords(IInvoiceType, IServiceContractNo, IServiceObjectNo, OriginalInvoiceFrom, InvoiceFrom, OServiceSalesDiscSurch);
        UNTIL Date.NEXT = 0
      ELSE
        IF (IInvoiceType = IInvoiceType::Dynamic) AND (InvoiceFrom <= InvoiceUntil) THEN
          InsertServiceSalesDiscSurchRecords(IInvoiceType, IServiceContractNo, IServiceObjectNo, OriginalInvoiceFrom, InvoiceFrom, OServiceSalesDiscSurch);
      IF FINDFIRST THEN;
    END;

    LOCAL PROCEDURE InsertServiceSalesDiscSurchRecords@1100528603(IInvoiceType@1100528608 : 'Dynamic,Installment';IServiceContractNo@1100528611 : Code[20];IServiceObjectNo@1100528610 : Code[20];IOriginalInvoiceFrom@1100528606 : Date;IInvoiceFrom@1100528602 : Date;VAR OServiceSalesDiscSurch@1100528600 : Record 11072237);
    VAR
      TmpServiceSalesDiscSurch@1100528607 : TEMPORARY Record 11072237;
      ServiceSalesDiscSurch@1100528601 : Record 11072237;
      EmptyDateFormula@1100528603 : DateFormula;
      LoopType@1100528604 : 'With Object,Without Object';
      PeriodEnd@1100528605 : Date;
    BEGIN
      TmpServiceSalesDiscSurch.COPY(OServiceSalesDiscSurch, TRUE);
      TmpServiceSalesDiscSurch.DELETEALL;
      ServiceSalesDiscSurch.SETRANGE(Type, ServiceSalesDiscSurch.Type::Contract);
      ServiceSalesDiscSurch.SETRANGE(Code, IServiceContractNo);
      CASE IInvoiceType OF
        IInvoiceType::Dynamic:
          ServiceSalesDiscSurch.SETRANGE("Object No.", IServiceObjectNo);
        IInvoiceType::Installment:
          BEGIN
            ServiceSalesDiscSurch.SETRANGE("Object No.", '');
            LoopType := LoopType::"Without Object";
          END;
      END;
      ServiceSalesDiscSurch.SETRANGE("Discount/Surcharge", ServiceSalesDiscSurch."Discount/Surcharge"::Discount);
      ServiceSalesDiscSurch.SETFILTER("Starting Date", '<>%1&<=%2', 0D, IOriginalInvoiceFrom);
      ServiceSalesDiscSurch.SETFILTER("Ending Date", '%1|>=%2', 0D, IOriginalInvoiceFrom);
      ServiceSalesDiscSurch.SETFILTER(Period, '<>%1', EmptyDateFormula);
      FOR LoopType := LoopType TO LoopType::"Without Object" DO BEGIN
        IF ServiceSalesDiscSurch.FIND('+') THEN
          REPEAT
            OServiceSalesDiscSurch := ServiceSalesDiscSurch;
            PeriodEnd := CALCDATE(ServiceSalesDiscSurch.Period, IOriginalInvoiceFrom) -1;
            IF IInvoiceFrom <= PeriodEnd THEN
              OServiceSalesDiscSurch."Contract Group" := '*'
            ELSE
              OServiceSalesDiscSurch."Contract Group" := '';
            IF OServiceSalesDiscSurch.INSERT THEN;
          UNTIL ServiceSalesDiscSurch.NEXT(-1) = 0;
        ServiceSalesDiscSurch.SETRANGE("Object No.", '');
      END;
    END;

    BEGIN
    END.
  }
}

