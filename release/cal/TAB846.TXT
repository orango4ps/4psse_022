OBJECT Table 846 Cash Flow Worksheet Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00,4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               LOCKTABLE;
               ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
               ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
             END;

    CaptionML=[ENU=Cash Flow Worksheet Line;
               NOR=Forslagslinje for kontantstrõm;
               SVE=Rad i kassaflîdeskalkylblad];
  }
  FIELDS
  {
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 3   ;   ;Cash Flow Forecast No.;Code20      ;TableRelation="Cash Flow Forecast";
                                                   OnValidate=VAR
                                                                CashFlowForecast@1000 : Record 840;
                                                              BEGIN
                                                                IF "Cash Flow Forecast No." = '' THEN
                                                                  EXIT;

                                                                CashFlowForecast.GET("Cash Flow Forecast No.");
                                                                Description := CashFlowForecast.Description;
                                                              END;

                                                   CaptionML=[ENU=Cash Flow Forecast No.;
                                                              NOR=Kontantstrõmprognosenr.;
                                                              SVE=Kassaflîdesprognosnr] }
    { 4   ;   ;Cash Flow Date      ;Date          ;CaptionML=[ENU=Cash Flow Date;
                                                              NOR=Kontantstrõmdato;
                                                              SVE=Kassaflîdesdatum] }
    { 5   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              NOR=Bilagsnr.;
                                                              SVE=Dokumentnr] }
    { 6   ;   ;Cash Flow Account No.;Code20       ;TableRelation="Cash Flow Account";
                                                   OnValidate=VAR
                                                                CFAccount@1000 : Record 841;
                                                              BEGIN
                                                                IF "Cash Flow Account No." <> '' THEN BEGIN
                                                                  CFAccount.GET("Cash Flow Account No.");
                                                                  CFAccount.TESTFIELD("Account Type",CFAccount."Account Type"::Entry);
                                                                  CFAccount.TESTFIELD(Blocked,FALSE);
                                                                  IF "Cash Flow Account No." <> xRec."Cash Flow Account No." THEN BEGIN
                                                                    Description := CFAccount.Name;
                                                                    "Source Type" := CFAccount."Source Type";
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Cash Flow Account No.;
                                                              NOR=Kontantstrõmkontonr.;
                                                              SVE=Kontonr fîr kassaflîde] }
    { 7   ;   ;Source Type         ;Option        ;OnValidate=BEGIN
                                                                IF "Source Type" <> "Source Type"::"G/L Budget" THEN
                                                                  "G/L Budget Name" := '';
                                                              END;

                                                   CaptionML=[ENU=Source Type;
                                                              NOR=Kildetype;
                                                              SVE=Ursprungstyp];
                                                   OptionCaptionML=[ENU=" ,Receivables,Payables,Liquid Funds,Cash Flow Manual Expense,Cash Flow Manual Revenue,Sales Orders,Purchase Orders,Fixed Assets Budget,Fixed Assets Disposal,Service Orders,G/L Budget,,,Job,Tax,Cortana Intelligence,Liquidity Prognosis Project,Liquidity Prognosis Contract";
                                                                    NOR=" ,Kundekonto,Leverandõrkonto,Likvide midler,Kontantstrõm manuelle utgifter,Kontantstrõm manuelle inntekter,Ordre,Bestilling,Aktivabudsjett,Aktivasalg,Tjenesteordrer,Budsjett,,,Prosjekt,Mva,Cortana Intelligence";
                                                                    SVE=" ,Kundreskontra,Leverantîrsreskontra,Likviditetsfond,Manuell kostnad fîr kassaflîde,Manuell intÑkt fîr kassaflîde,FîrsÑljningsorder,Inkîpsorder,Budget fîr anlÑggningstillgÜngar,Avyttring av anlÑggningstillgÜngar,Serviceorder,Redovisningsbudget,,,Projekt,Skatt,Cortana Intelligence,Projekt fîr likviditetsprognos,Likviditetsprognosavtal"];
                                                   OptionString=[ ,Receivables,Payables,Liquid Funds,Cash Flow Manual Expense,Cash Flow Manual Revenue,Sales Orders,Purchase Orders,Fixed Assets Budget,Fixed Assets Disposal,Service Orders,G/L Budget,,,Job,Tax,Cortana Intelligence,Liquidity Prognosis Project,Liquidity Prognosis Contract] }
    { 8   ;   ;Description         ;Text250       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 9   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              NOR=Bilagstype;
                                                              SVE=Dokumenttyp];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    NOR=" ,Betaling,Faktura,Kreditnota,Rentenota,Purring,Refusjon";
                                                                    SVE=" ,Betalning,Faktura,Kreditnota,RÑntefaktura,BetalningspÜminnelse,èterbetalning"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 10  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              NOR=Bilagsdato;
                                                              SVE=Dokumentdatum] }
    { 11  ;   ;Pmt. Discount Date  ;Date          ;CaptionML=[ENU=Pmt. Discount Date;
                                                              NOR=Kont.rabattdato;
                                                              SVE=Kassarabattsdatum] }
    { 12  ;   ;Pmt. Disc. Tolerance Date;Date     ;CaptionML=[ENU=Pmt. Disc. Tolerance Date;
                                                              NOR=Dato for kontantrabattoleranse;
                                                              SVE=Datum fîr kassarabattolerans] }
    { 13  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   CaptionML=[ENU=Payment Terms Code;
                                                              NOR=Betalingsbet.kode;
                                                              SVE=Betalningsvillkorskod] }
    { 14  ;   ;Payment Discount    ;Decimal       ;CaptionML=[ENU=Payment Discount;
                                                              NOR=Kontantrabatt;
                                                              SVE=Kassarabatt] }
    { 15  ;   ;Associated Entry No.;Integer       ;CaptionML=[ENU=Associated Entry No.;
                                                              NOR=Tilknyttet oppfõringsnr.;
                                                              SVE=Associerat postnummer] }
    { 16  ;   ;Overdue             ;Boolean       ;CaptionML=[ENU=Overdue;
                                                              NOR=Forfalt;
                                                              SVE=Fîrfallet];
                                                   Editable=No }
    { 17  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              NOR=Snarveisdimensjon 2 - kode;
                                                              SVE=GenvÑg dimension 2 kod];
                                                   CaptionClass='1,2,2' }
    { 18  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              NOR=Snarveisdimensjon 1 - kode;
                                                              SVE=GenvÑg dimension 1 kod];
                                                   CaptionClass='1,2,1' }
    { 30  ;   ;Amount (LCY)        ;Decimal       ;CaptionML=[ENU=Amount (LCY);
                                                              NOR=Belõp (NOK);
                                                              SVE=Belopp (BVA)] }
    { 34  ;   ;Source No.          ;Code20        ;TableRelation=IF (Source Type=CONST(Liquid Funds)) "G/L Account"
                                                                 ELSE IF (Source Type=CONST(Receivables)) "Cust. Ledger Entry"."Document No."
                                                                 ELSE IF (Source Type=CONST(Payables)) "Vendor Ledger Entry"."Document No."
                                                                 ELSE IF (Source Type=CONST(Fixed Assets Budget)) "Fixed Asset"
                                                                 ELSE IF (Source Type=CONST(Fixed Assets Disposal)) "Fixed Asset"
                                                                 ELSE IF (Source Type=CONST(Sales Orders)) "Sales Header".No. WHERE (Document Type=CONST(Order))
                                                                 ELSE IF (Source Type=CONST(Purchase Orders)) "Purchase Header".No. WHERE (Document Type=CONST(Order))
                                                                 ELSE IF (Source Type=CONST(Service Orders)) "Service Header".No. WHERE (Document Type=CONST(Order))
                                                                 ELSE IF (Source Type=CONST(Cash Flow Manual Expense)) "Cash Flow Manual Expense"
                                                                 ELSE IF (Source Type=CONST(Cash Flow Manual Revenue)) "Cash Flow Manual Revenue"
                                                                 ELSE IF (Source Type=CONST(G/L Budget)) "G/L Account"
                                                                 ELSE IF (Source Type=CONST(Job)) Job.No.
                                                                 ELSE IF (Source Type=CONST(Liquidity Prognosis Project)) Job.No.
                                                                 ELSE IF (Source Type=CONST(Liquidity Prognosis Contract)) Service-Contract.No.;
                                                   OnValidate=VAR
                                                                CustLedgEntry@1000 : Record 21;
                                                                VendLedgEntry@1001 : Record 25;
                                                              BEGIN
                                                                CASE "Source Type" OF
                                                                  "Source Type"::"Liquid Funds":
                                                                    MoveDefualtDimToJnlLineDim(DATABASE::"G/L Account","Source No.","Dimension Set ID");
                                                                  "Source Type"::Receivables:
                                                                    BEGIN
                                                                      CustLedgEntry.SETRANGE("Document No.","Source No.");
                                                                      IF CustLedgEntry.FINDFIRST THEN
                                                                        "Dimension Set ID" := CustLedgEntry."Dimension Set ID";
                                                                    END;
                                                                  "Source Type"::Payables:
                                                                    BEGIN
                                                                      VendLedgEntry.SETRANGE("Document No.","Source No.");
                                                                      IF VendLedgEntry.FINDFIRST THEN
                                                                        "Dimension Set ID" := VendLedgEntry."Dimension Set ID";
                                                                    END;
                                                                  "Source Type"::"Fixed Assets Disposal",
                                                                  "Source Type"::"Fixed Assets Budget":
                                                                    MoveDefualtDimToJnlLineDim(DATABASE::"Fixed Asset","Source No.","Dimension Set ID");
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Source No.;
                                                              NOR=Kildenr.;
                                                              SVE=Ursprungsnr] }
    { 35  ;   ;G/L Budget Name     ;Code10        ;TableRelation="G/L Budget Name";
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Source Type","Source Type"::"G/L Budget");
                                                              END;

                                                   CaptionML=[ENU=G/L Budget Name;
                                                              NOR=Budsjettnavn;
                                                              SVE=Redov.budgetnamn] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnValidate=BEGIN
                                                                DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              NOR=Dimensjonssett-ID;
                                                              SVE=DimensionsuppsÑttnings-ID];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Line No.                                ;Clustered=Yes }
    {    ;Cash Flow Forecast No.,Document No.     ;SumIndexFields=Amount (LCY) }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DimMgt@1001 : Codeunit 408;

    [External]
    PROCEDURE EmptyLine@1002() : Boolean;
    BEGIN
      EXIT(("Cash Flow Forecast No." = '') AND ("Cash Flow Account No." = ''));
    END;

    [External]
    PROCEDURE ValidateShortcutDimCode@1004(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    [External]
    PROCEDURE LookupShortcutDimCode@1005(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    [External]
    PROCEDURE ShowShortcutDimCode@1006(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    [External]
    PROCEDURE ShowDimensions@1007();
    BEGIN
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1',"Line No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    [External]
    PROCEDURE MoveDefualtDimToJnlLineDim@2(TableID@1004 : Integer;No@1005 : Code[20];VAR DimensionSetID@1003 : Integer);
    VAR
      TableID2@1000 : ARRAY [10] OF Integer;
      No2@1002 : ARRAY [10] OF Code[20];
      Dimension@1001 : Code[10];
    BEGIN
      TableID2[1] := TableID;
      No2[1] := No;
      Dimension := '';
      DimensionSetID :=
        DimMgt.GetRecDefaultDimID(
          Rec,CurrFieldNo,TableID2,No2,'',Dimension,Dimension,0,0);
    END;

    [External]
    PROCEDURE CalculateCFAmountAndCFDate@4();
    VAR
      GeneralLedgerSetup@1004 : Record 98;
      PaymentTerms@1001 : Record 3;
      CashFlowForecast@1006 : Record 840;
      PaymentTermsToApply@1000 : Code[10];
      CFDiscountDate@1002 : Date;
      CheckCrMemo@1003 : Boolean;
      ApplyCFPaymentTerm@1007 : Boolean;
      DiscountDateCalculation@1005 : DateFormula;
    BEGIN
      IF "Document Date" = 0D THEN
        "Document Date" := WORKDATE;
      IF "Cash Flow Date" = 0D THEN
        "Cash Flow Date" := "Document Date";
      IF "Amount (LCY)" = 0 THEN
        EXIT;

      CASE "Document Type" OF
        "Document Type"::Invoice:
          CheckCrMemo := FALSE;
        "Document Type"::"Credit Memo":
          CheckCrMemo := TRUE;
        ELSE
          EXIT;
      END;

      IF NOT CashFlowForecast.GET("Cash Flow Forecast No.") THEN
        EXIT;

      PaymentTermsToApply := "Payment Terms Code";
      ApplyCFPaymentTerm := CashFlowForecast."Consider CF Payment Terms" AND PaymentTerms.GET(PaymentTermsToApply);
      IF "Source Type" IN ["Source Type"::"Sales Orders","Source Type"::"Purchase Orders","Source Type"::"Service Orders",
                           "Source Type"::Job]
      THEN
        ApplyCFPaymentTerm := TRUE;

      IF NOT ApplyCFPaymentTerm THEN BEGIN
        IF NOT CashFlowForecast."Consider Discount" THEN
          EXIT;

        IF CashFlowForecast."Consider Pmt. Disc. Tol. Date" THEN
          CFDiscountDate := "Pmt. Disc. Tolerance Date"
        ELSE
          CFDiscountDate := "Pmt. Discount Date";

        IF CFDiscountDate <> 0D THEN BEGIN
          IF CFDiscountDate >= WORKDATE THEN BEGIN
            "Cash Flow Date" := CFDiscountDate;
            "Amount (LCY)" := "Amount (LCY)" - "Payment Discount";
          END ELSE
            "Payment Discount" := 0;
        END;

        EXIT;
      END;

      IF NOT PaymentTerms.GET(PaymentTermsToApply) THEN
        EXIT;

      IF CheckCrMemo AND NOT PaymentTerms."Calc. Pmt. Disc. on Cr. Memos" THEN
        EXIT;

      IF CashFlowForecast."Consider Discount" THEN BEGIN
        GeneralLedgerSetup.GET;

        DiscountDateCalculation := PaymentTerms."Discount Date Calculation";
        IF FORMAT(DiscountDateCalculation) = '' THEN
          DiscountDateCalculation := PaymentTerms."Due Date Calculation";
        CFDiscountDate := CALCDATE(DiscountDateCalculation,"Document Date");
        IF CashFlowForecast."Consider Pmt. Disc. Tol. Date" THEN
          CFDiscountDate := CALCDATE(GeneralLedgerSetup."Payment Discount Grace Period",CFDiscountDate);

        IF CFDiscountDate >= WORKDATE THEN BEGIN
          "Cash Flow Date" := CFDiscountDate;
          "Payment Discount" := ROUND("Amount (LCY)" * PaymentTerms."Discount %" / 100);
          "Amount (LCY)" := "Amount (LCY)" - "Payment Discount";
        END ELSE BEGIN
          "Cash Flow Date" := CALCDATE(PaymentTerms."Due Date Calculation","Document Date");
          "Payment Discount" := 0;
        END;
      END ELSE
        "Cash Flow Date" := CALCDATE(PaymentTerms."Due Date Calculation","Document Date");
    END;

    PROCEDURE ShowSource@3();
    VAR
      CFManagement@1000 : Codeunit 841;
    BEGIN
      CFManagement.ShowSource(Rec);
    END;

    [External]
    PROCEDURE GetNumberOfSourceTypes@1() : Integer;
    BEGIN
      EXIT(16);
    END;

    BEGIN
    {
      4PS, renumbered objects
    }
    END.
  }
}

