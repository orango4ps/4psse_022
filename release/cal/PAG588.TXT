OBJECT Page 588 XBRL Schemas
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=XBRL Schemas;
               NOR=XBRL-skjemaer;
               SVE=XBRL scheman];
    SourceTable=Table399;
    DataCaptionFields=XBRL Taxonomy Name;
    PageType=List;
    AutoSplitKey=Yes;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 11      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Schema;
                                 NOR=&Skjema;
                                 SVE=&Schema];
                      Image=Template }
      { 12      ;2   ;Action    ;
                      CaptionML=[ENU=Linkbases;
                                 NOR=Koblingsbaser;
                                 SVE=L„nkbaser];
                      ToolTipML=[ENU=View a new taxonomy linkbase or a previously imported taxonomy linkbase that you want to update or export. The window contains a line for each schema that you have imported.;
                                 NOR=Vis en ny eller tidligere importert taksonomikoblingsbase som du vil oppdatere eller eksportere. Vinduet inneholder en linje for hvert skjema som du har importert.;
                                 SVE=Visa en ny l„nkbas f”r taxonomi eller en tidigare importerad l„nkbas f”r taxonomi som du vill uppdatera eller exportera. F”nstret inneh†ller en rad f”r varje schema som du har importerat.];
                      ApplicationArea=#XBRL;
                      RunObject=Page 589;
                      RunPageLink=XBRL Taxonomy Name=FIELD(XBRL Taxonomy Name),
                                  XBRL Schema Line No.=FIELD(Line No.);
                      Promoted=Yes;
                      Image=LinkWithExisting;
                      PromotedCategory=Process }
      { 13      ;2   ;Separator  }
      { 14      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Import;
                                 NOR=Importer;
                                 SVE=Importera];
                      ToolTipML=[ENU=Import an XBRL taxonomy into your company database by first importing one or more schemas in .sad format. After you have completed the import of both schemas and linkbases and have applied the linkbases to the schema, you can set up the lines and map the general ledger accounts in the chart of accounts to the appropriate taxonomy lines.;
                                 NOR=Importer en XBRL-taksonomien inn i selskapsdatabasen ved f›rst † importere ett eller flere skjemaer i SAD-format. N†r du har fullf›rt importen av skjemaer og koblingsbaser, og har brukt koblingsbasene p† skjemaet, kan du definere linjene og tilordne finanskontiene i kontoplanen til riktige taksonomilinjer.;
                                 SVE=Importera en XBRL-taxonomi till f”retagets databas genom att f”rst importera ett eller flera scheman i .sad-format. N„r du har importerat b†de scheman och l„nkbaser och har till„mpat l„nkbaserna p† schemat, kan du l„gga upp raderna och koppla redovisningskontona i kontoplanen till l„mpliga taxonomirader.];
                      ApplicationArea=#XBRL;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ConfirmManagement@1001 : Codeunit 27;
                                 XMLExists@1000 : Boolean;
                                 FileName@1002 : Text;
                                 i@1003 : Integer;
                               BEGIN
                                 CALCFIELDS(XSD);
                                 XMLExists := XSD.HASVALUE;
                                 FileName := FileMgt.BLOBImport(TempBlob,'*.xsd');
                                 IF FileName = '' THEN
                                   EXIT;
                                 XSD := TempBlob.Blob;
                                 IF XMLExists THEN
                                   IF NOT ConfirmManagement.ConfirmProcess(Text001,TRUE) THEN
                                     EXIT;
                                 IF STRPOS(FileName,'\') <> 0 THEN BEGIN
                                   i := STRLEN(FileName);
                                   WHILE (i > 0) AND (FileName[i] <> '\') DO
                                     i := i - 1;
                                 END;
                                 IF i > 0 THEN BEGIN
                                   schemaLocation := CONVERTSTR(COPYSTR(FileName,i + 1),' ','_');
                                   "Folder Name" := COPYSTR(FileName,1,i);
                                 END ELSE
                                   schemaLocation := CONVERTSTR(FileName,' ','_');
                                 CurrPage.SAVERECORD;
                                 CODEUNIT.RUN(CODEUNIT::"XBRL Import Taxonomy Spec. 2",Rec);
                               END;
                                }
      { 15      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=E&xport;
                                 NOR=E&ksporter;
                                 SVE=&Exportera];
                      ToolTipML=[ENU=Export the XBRL schema to an .xsd file for reuse in another database.;
                                 NOR=Eksporter XBRL-skjemaet til en XSD-fil til bruk p† nytt i en annen database.;
                                 SVE=Exportera XBRL-schemat till en .xsd-fil s† att det kan †teranv„ndas i en annan databas.];
                      ApplicationArea=#XBRL;
                      Image=Export;
                      OnAction=BEGIN
                                 CALCFIELDS(XSD);
                                 IF XSD.HASVALUE THEN BEGIN
                                   TempBlob.Blob := XSD;
                                   FileMgt.BLOBExport(TempBlob,'*.xsd',TRUE);
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of the XBRL schema.;
                           NOR=Angir en beskrivelse for XBRL-skjemaet.;
                           SVE=Anger en beskrivning av XBRL-schemat.];
                ApplicationArea=#XBRL;
                SourceExpr=Description }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the uniform resource identifier (URI) for the namespace if there is an overall targetNamespace for this taxonomy.;
                           NOR=Angir URI (uniform resource identifier) for navneomr†det hvis det finnes en samlet targetNamespace for denne taksonomien.;
                           SVE=Anger URI:n (Uniform Resource Identifier) f”r namnrymden, om det finns en total targetNamespace f”r den h„r taxonomin.];
                ApplicationArea=#XBRL;
                SourceExpr=targetNamespace;
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the uniform resource identifier (URI) of the schema file.;
                           NOR=Angir URI (uniform resource identifier) for skjemafilen.;
                           SVE=Anger en URI (Uniform Resource Identifier) f”r schemafilen.];
                ApplicationArea=#XBRL;
                SourceExpr=schemaLocation;
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=XSD File Imported;
                           NOR=XSD-fil er importert;
                           SVE=XSD-fil importerad];
                ToolTipML=[ENU=Specifies if an XBRL schema has been imported.;
                           NOR=Angir om et XBRL-skjema er importert.;
                           SVE=Anger om ett XBRL-schema har importerats.];
                ApplicationArea=#XBRL;
                SourceExpr=XSD.HASVALUE;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                ApplicationArea=#RecordLinks;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                ApplicationArea=#Notes;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text001@1000 : TextConst 'ENU=Do you want to replace the existing definition?;NOR=Vil du erstatte eksisterende definisjon?;SVE=Vill du ers„tta befintlig definition?';
      TempBlob@1001 : Record 99008535;
      FileMgt@1002 : Codeunit 419;

    BEGIN
    END.
  }
}

