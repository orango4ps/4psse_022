OBJECT Table 11229419 Field Checksum
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Previously Modified By" := USERID;
               "Previously Modified On" := CURRENTDATETIME;
               "Last Modified By" := "Previously Modified By";
               "Last Modified On" := "Previously Modified On";
             END;

    OnModify=BEGIN
               "Previously Modified By" := "Last Modified By";
               "Previously Modified On" := "Last Modified On";
               "Last Modified By" := USERID;
               "Last Modified On" := CURRENTDATETIME;
             END;

    CaptionML=ENU=Field Checksum;
  }
  FIELDS
  {
    { 10  ;   ;Record Id           ;RecordID      ;CaptionML=[ENU=Record Id;
                                                              SVE=Post-ID];
                                                   Editable=No }
    { 20  ;   ;Field No.           ;Integer       ;CaptionML=[ENU=Field No.;
                                                              SVE=F„ltnr];
                                                   Editable=No }
    { 100 ;   ;Hash Value          ;Text250       ;CaptionML=ENU=Hash Value;
                                                   Editable=No }
    { 500 ;   ;Previously Modified By;Text50      ;CaptionML=ENU=Previously Modified By;
                                                   Editable=No }
    { 510 ;   ;Previously Modified On;DateTime    ;CaptionML=ENU=Previously Modified On;
                                                   Editable=No }
    { 520 ;   ;Last Modified By    ;Text50        ;CaptionML=[ENU=Last Modified By;
                                                              SVE=Žndrades senast av];
                                                   Editable=No }
    { 530 ;   ;Last Modified On    ;DateTime      ;CaptionML=ENU=Last Modified On;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Record Id,Field No.                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      WindowProcessTxt@1100528301 : TextConst 'ENU=@1@@@@@@@@@@@@@@@@@@@';

    PROCEDURE CleanUpData@1100528302();
    VAR
      FieldChecksum@1100528301 : Record 11229419;
      RecId@1100528305 : RecordID;
      RecRef@1100528304 : RecordRef;
      RecCount@1100528302 : Integer;
      Counter@1100528303 : Integer;
      Window@1100528300 : Dialog;
    BEGIN
      IF (NOT FieldChecksum.FINDSET(TRUE, TRUE)) THEN
        EXIT;
      RecCount := FieldChecksum.COUNT;
      Window.OPEN(WindowProcessTxt, Counter);
      REPEAT
        Counter += 1;
        IF (Counter MOD 100 = 0) THEN
          Window.UPDATE(1, ROUND(Counter / RecCount * 10000, 1));
        RecId := FieldChecksum."Record Id";
        IF (NOT RecRef.GET(RecId)) THEN
          FieldChecksum.DELETE;
      UNTIL (FieldChecksum.NEXT = 0);
      Window.CLOSE;
    END;

    PROCEDURE GetHashValue@1100528300(RecId@1100528301 : RecordID;FieldNo@1100528300 : Integer) : Text;
    BEGIN
      IF (NOT GET(RecId, FieldNo)) THEN
        INIT;
      EXIT("Hash Value");
    END;

    PROCEDURE UpdateHashValue@1100528307(RecId@1100528300 : RecordID;FieldNo@1100528301 : Integer);
    VAR
      PrevHashValue@1100528302 : Text;
      RecRef@1100528303 : RecordRef;
      FldRef@1100528304 : FieldRef;
    BEGIN
      IF (NOT GET(RecId, FieldNo)) THEN BEGIN
        INIT;
        VALIDATE("Record Id", RecId);
        VALIDATE("Field No.", FieldNo);
        INSERT(TRUE);
      END;
      PrevHashValue := "Hash Value";

      IF (RecRef.GET(RecId)) THEN BEGIN
        FldRef := RecRef.FIELD(FieldNo);
        "Hash Value" := CalculateHashValue(FldRef);
        MODIFY(PrevHashValue <> "Hash Value");
      END;
    END;

    LOCAL PROCEDURE "---Locals---"@1100528309();
    BEGIN
    END;

    LOCAL PROCEDURE CalculateHashValue@1100528308(FldRef@1100528300 : FieldRef) : Text;
    VAR
      Field@1100528302 : TEMPORARY Record 2000000041;
      HashValue@1100528301 : Text;
      TextValue@1100528304 : Text;
      Convert@1100528308 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Convert";
      Encoding@1100528309 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.Encoding";
      HashAlgorithm@1100528305 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Security.Cryptography.HashAlgorithm";
    BEGIN
      IF (FORMAT(FldRef.CLASS) <> FORMAT(Field.Class::Normal)) THEN
        FldRef.CALCFIELD;
      TextValue := FORMAT(FldRef.VALUE);
      CASE FORMAT(FldRef.TYPE) OF
        FORMAT(Field.Type::BigInteger),
        FORMAT(Field.Type::Decimal),
        FORMAT(Field.Type::Integer),
        FORMAT(Field.Type::Option):
          IF (TextValue = '0') THEN
            EXIT('');
        FORMAT(Field.Type::Binary),
        FORMAT(Field.Type::BLOB),
        FORMAT(Field.Type::GUID),
        FORMAT(Field.Type::Media),
        FORMAT(Field.Type::MediaSet):
          IF (TextValue = '{00000000-0000-0000-0000-000000000000}') THEN
            EXIT('');
        FORMAT(Field.Type::Boolean):
          IF (LOWERCASE(TextValue) = 'false') THEN
            EXIT('');
        FORMAT(Field.Type::Date):
          IF (UPPERCASE(TextValue) = '0D') THEN
            EXIT('');
        FORMAT(Field.Type::DateTime):
          IF (UPPERCASE(TextValue) = '0DT') THEN
            EXIT('');
        FORMAT(Field.Type::Time):
            IF (UPPERCASE(TextValue) = '0T') THEN
            EXIT('');
      END;
      IF (TextValue = '') THEN
        EXIT('');

      HashAlgorithm := HashAlgorithm.Create;
      HashValue := Convert.ToBase64String(HashAlgorithm.ComputeHash(Encoding.UTF8.GetBytes(LOWERCASE(TextValue))));
      EXIT(HashValue);
    END;

    BEGIN
    END.
  }
}

