OBJECT Page 11130486 Service Order FB
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Serviceauftrag;
               ENU=Service Order;
               NLD=Serviceorder;
               NOR=Serviceordre;
               SVE=Serviceorder];
    SourceTable=Table11012823;
    PageType=CardPart;
    OnAfterGetRecord=BEGIN
                       NoOfActiveWarrantyDiscTerms :=
                         ServiceOrderInfoMgt.GetNoOfActiveWarrantyDiscTerms("No.", "Order Date", 0);
                     END;

  }
  CONTROLS
  {
    { 1210190000;;Container;
                ContainerType=ContentArea }

    { 1210190001;1;Field  ;
                Lookup=No;
                CaptionML=[DEU=Meldungsnr.;
                           ENU=Call No.;
                           NLD=Meldingsnr.;
                           NOR=Samtalenr;
                           SVE=Samtalsnr];
                SourceExpr="Call No.";
                Editable=FALSE;
                OnAssistEdit=VAR
                               ServiceCall@1100528600 : Record 11012822;
                             BEGIN
                               ServiceCall.GET("Call No.");
                               ServiceCall.ActivateServCallCard;
                             END;
                              }

    { 1100525007;1;Field  ;
                Lookup=No;
                CaptionML=[DEU=Verglasungsmeldungsnr.;
                           ENU=Glazing Service Call No.;
                           NLD=Glasmeldingsnr.;
                           NOR=Servicesamtalenr. for Innglassing;
                           SVE=Servicesamtalsnr fîr inglasning];
                SourceExpr="Glazing Service Call No.";
                Visible=FALSE;
                Editable=FALSE;
                OnAssistEdit=VAR
                               GlazingCall@1100528600 : Record 11125777;
                             BEGIN
                               //C028730
                               GlazingCall.GET("Glazing Service Call No.");
                               GlazingCall.ActivateServCallCard;
                             END;
                              }

    { 1100525004;1;Field  ;
                CaptionML=[DEU=ArbeitsauftrÑge;
                           ENU=Work Orders;
                           NLD=Werkorders;
                           SVE=Arbetsordrar];
                SourceExpr=ServiceOrderInfoMgt.GetNoOfWorkOrders("No.");
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowSOWorkOrders("No.");
                            END;
                             }

    { 1210190015;1;Field  ;
                CaptionML=[DEU=VerfÅgbares Guthaben (Kunde);
                           ENU=Available Credit (Customer);
                           NLD=Beschikbaar krediet (klant);
                           NOR=Tilgjengelig kreditt (kunde);
                           SVE=TillgÑnglig kredit (kund)];
                DecimalPlaces=0:0;
                SourceExpr=GetCreditLimit;
                AutoFormatType=1;
                Editable=FALSE;
                OnDrillDown=VAR
                              Cust@1100525000 : Record 18;
                            BEGIN
                              Cust.LookupAvailCredit("Customer No.");
                            END;
                             }

    { 1100525000;1;Field  ;
                CaptionML=[DEU=SA-Rechnungen erfassen nach;
                           ENU=Collect SO Invoices By;
                           NLD=Verzamel service order;
                           NOR=Samle inn servicefakturaer etter;
                           SVE=Insamla servicefakturor efter];
                SourceExpr=ServiceOrderInfoMgt.CollectSOInvoicesBy("Bill-to Customer No.");
                Visible=FALSE }

    { 1100528600;1;Field  ;
                CaptionML=[DEU=Ressourcen;
                           ENU=Resources;
                           NLD=Resources;
                           NOR=RESSURS;
                           SVE=Resurser];
                SourceExpr=ServiceOrderInfoMgt.NoOfResourcesByServiceOrder("No.");
                Visible=FALSE }

    { 1100409000;1;Field  ;
                CaptionML=[DEU=Verlauf ServiceauftrÑge;
                           ENU=History Service Orders;
                           NLD=Historie serviceorders;
                           NOR=Historikk for Serviceordre;
                           SVE=Historik serviceordrar];
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfHistorySOs("Service Location No."));
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowHistorySOs("Service Location No.");
                            END;
                             }

    { 1100525001;1;Field  ;
                CaptionML=[DEU=Verwandte ServiceauftrÑge (Vertrag);
                           ENU=Related Service Orders (Contract);
                           NLD=Gerel. serviceorders (contract);
                           NOR=Relaterte Serviceordre (Kontrakt);
                           SVE=Relaterade serviceorder (Kontrakt)];
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfSOSameContract("Service Contract No."));
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowSOSameContract("Service Contract No.");
                            END;
                             }

    { 1100525002;1;Field  ;
                CaptionML=[DEU=Verwandte ServiceauftrÑge (Standort);
                           ENU=Related Service Orders (Location);
                           NLD=Gerel. serviceorders (locatie);
                           NOR=Relaterte Serviceordre (Plassering);
                           SVE=Relaterade serviceorder (Placering)];
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfSOSameLocation("Service Location No."));
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowSOSameLocation("Service Location No.");
                            END;
                             }

    { 1100525003;1;Field  ;
                CaptionML=[DEU=Verwandte ServiceauftrÑge (Meldung);
                           ENU=Related Service Orders (Melding);
                           NLD=Gerel. serviceorders (melding);
                           NOR=Relaterte Serviceordre (Melding);
                           SVE=Relaterade serviceorder (AnmÑlda)];
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfSOSameCall("Call No."));
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowSOSameCall("Call No.");
                            END;
                             }

    { 1210190009;1;Field  ;
                CaptionML=[DEU=Belege;
                           ENU=Documents;
                           NLD=Documenten;
                           NOR=Dokument;
                           SVE=Dokument];
                SourceExpr=STRSUBSTNO('%1', GetInfo());
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ShowDocuments;
                            END;
                             }

    { 1100526000;1;Field  ;
                CaptionML=[DEU=Arbeitsauftragsbelege;
                           ENU=Work Order Documents;
                           NLD=Werkorderdocumenten];
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfWorkOrderDocuments("No."));
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowWorkOrderDocuments("No.");
                            END;
                             }

    { 1210190007;1;Field  ;
                CaptionML=[DEU=Lead-Generierungen;
                           ENU=Try-outs;
                           NLD=Trajecten;
                           NOR=Prospekter;
                           SVE=Anbud];
                SourceExpr=STRSUBSTNO('%1', GetNoOfTryOuts());
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=VAR
                              TryoutSuccessor@1210190000 : Record 11012761;
                            BEGIN
                              TryoutSuccessor.ShowTryOut('', '', '', '', "No.", '', '', '', 1);
                            END;
                             }

    { 1210190006;1;Field  ;
                CaptionML=[DEU=Angebotsgenerierungen;
                           ENU=Try-out Quotes;
                           NLD=Trajectenoffertes;
                           NOR=Tilbudsforespõrsler;
                           SVE=AnbudsfîrfrÜgningar];
                SourceExpr=STRSUBSTNO('%1', GetNoOfTryOutQuotes());
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=VAR
                              TryoutSuccessor@1210190000 : Record 11012761;
                            BEGIN
                              TryoutSuccessor.ShowTryOut('', '', '', '', "No.", '', '', '', 2);
                            END;
                             }

    { 1100525005;1;Field  ;
                Name=AdviceOrderLineOpen;
                CaptionML=[DEU=Offene Vorschlagsauftragszeilen;
                           ENU=Open Advice Order Lines;
                           NLD=Open adviesorderregels];
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfAdviceOrderLines("No.",FALSE));
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowAdviceOrderLines("No.",FALSE);  //DP01015
                            END;
                             }

    { 1100525006;1;Field  ;
                Name=AdviceOrderLineProcessed;
                CaptionML=[DEU=Verarbeitete Vorschlagsauftragszeilen;
                           ENU=Processed Advice Order Lines;
                           NLD=Verwerkte adviesorderregels];
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfAdviceOrderLines("No.",TRUE));
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowAdviceOrderLines("No.", TRUE);  //DP01015
                            END;
                             }

    { 1210190004;1;Field  ;
                CaptionML=[DEU=Offene Artikel Buch.-Blattzeilen;
                           ENU=Open Item Journal Lines;
                           NLD=Open artikeldagboekregels;
                           NOR=èpne artikkeljournalrader;
                           SVE=ôppna artikeljournalrader];
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfOpenItemJournalLines("No."));
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowOpenItemJournalLines("No.");
                            END;
                             }

    { 1210190003;1;Field  ;
                CaptionML=[DEU=Offene Einkaufszeilen;
                           ENU=Open Purchase Lines;
                           NLD=Open inkoopregels;
                           NOR=èpne innkjõpsrader;
                           SVE=ôppna inkîpsrader];
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfOpenPurchaseLines("No."));
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowOpenPurchaseLines("No.");
                            END;
                             }

    { 1100528601;1;Field  ;
                CaptionML=[DEU=Bestellzeilen Erh. nicht faktur.;
                           ENU=Rec. not Inv. Purchase Lines;
                           NLD=Ontv. niet gefact. inkoopregels;
                           NOR=Reg. Ikke fakturerte innkjõpsrader];
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfRNIPurchLinesServiceOrder("No."));
                Editable=false;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowRNIPurchaseLinesServiceOrder("No.");
                            END;
                             }

    { 1100409002;1;Field  ;
                CaptionML=[DEU=Werkzeuglagerort;
                           ENU=Plant Location;
                           NLD=Materieellocaties;
                           NOR=Maskinplassering;
                           SVE=Maskinplats];
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfPlantLocations("No."));
                Visible=FALSE;
                Editable=false;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowPlantCompanies("No.");
                            END;
                             }

    { 1100529000;1;Field  ;
                SourceExpr="Plant Parts";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ShowPlantParts;
                            END;
                             }

    { 1100528800;1;Field  ;
                CaptionML=[DEU=Wartungsstatusmeldungen;
                           ENU=Maint. Status Messages;
                           NLD=Onderhoudstatusberichten];
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfINSBOUMaintStatusMessages("No."));
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowNoOfOpenINSBOUMaintStatusMessages("No.");
                            END;
                             }

    { 1100527200;1;Field  ;
                SourceExpr="Open (Inventory)" }

    { 1100528602;1;Field  ;
                CaptionML=[DEU=Aktive Garantiezeilen;
                           ENU=Active Warranty Lines;
                           NLD=Actieve garantieregels;
                           NOR=Aktive garantirader;
                           SVE=Aktiva garantirader];
                SourceExpr=NoOfActiveWarrantyDiscTerms;
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowActiveWarrantyDiscTerms("No.", "Order Date", 0, 0, TRUE);
                            END;
                             }

    { 1100527000;1;Field  ;
                CaptionML=[DEU=Au·endienststatusursachen;
                           ENU=Field Service Status Reasons;
                           NLD=Buitendienststatusredenen];
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfFSAStatusReasons("No."));
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowFSAStatusReasons("No.");
                            END;
                             }

    { 1100527400;1;Field  ;
                CaptionML=[DEU=Aktive Vertragsrabattbedingungen;
                           ENU=Active Contract Discount Terms;
                           NLD=Actieve contractkortingscondities];
                SourceExpr=ServiceOrderInfoMgt.GetNoOfActiveContractDiscountTerms("No.", "Order Date");
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowActiveContractDiscountTerms("No.", "Order Date");
                            END;
                             }

  }
  CODE
  {
    VAR
      ServiceOrderInfoMgt@1210190001 : Codeunit 11012841;
      NoOfActiveWarrantyDiscTerms@1100528600 : Integer;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;

    PROCEDURE StartServOrders@1100485002(lvAction@1100485000 : Integer;lvCount@1100485001 : Boolean) : Integer;
    VAR
      lvServOrderRec@1100485002 : Record 11012823;
    BEGIN
      lvServOrderRec.SETFILTER("No.", '<>%1', "No.");
      CASE lvAction OF
        0:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Service Contract No.");
            lvServOrderRec.SETRANGE("Service Contract No.", "Service Contract No.");
            IF (lvCount = TRUE) AND ("Service Contract No." = '') THEN EXIT(0);
          END;
        1:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Service Location No.");
            lvServOrderRec.SETRANGE("Service Location No.", "Service Location No.");
            IF (lvCount = TRUE) AND ("Service Location No." = '') THEN EXIT(0);
          END;
        2:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Call No.");
            lvServOrderRec.SETRANGE("Call No.", "Call No.");
            lvServOrderRec.SETRANGE("Source Type", lvServOrderRec."Source Type"::Call);
            IF (lvCount = TRUE) AND ("Call No." = '') THEN EXIT(0);
          END;
        3:
          BEGIN
            IF NOT lvCount THEN BEGIN
              IF "Base Service Order No." = '' THEN
                EXIT(0);
              lvServOrderRec.SETRANGE("No.", "Base Service Order No.");
              PAGE.RUNMODAL(PAGE::"Base Service Order", lvServOrderRec);
              EXIT(0);
            END ELSE BEGIN
              lvServOrderRec.SETCURRENTKEY("Base Service Order No.");
              lvServOrderRec.SETRANGE("Base Service Order No.", "Base Service Order No.");
              IF ("Base Service Order No."= '') THEN EXIT(0);
              EXIT(lvServOrderRec.COUNT);
            END;
          END;
      END;

      IF lvCount = FALSE THEN BEGIN
        PAGE.RUNMODAL(0, lvServOrderRec);
      END ELSE BEGIN
        EXIT(lvServOrderRec.COUNT);
      END;
    END;

    PROCEDURE GetNoOfServOrders@1100485001(lvAction@1100485001 : Integer) NumServOrder : Integer;
    BEGIN
      NumServOrder := StartServOrders(lvAction, TRUE);
      EXIT(NumServOrder);
    END;

    PROCEDURE GetInfo@1100525002() : Integer;
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentLinkMgt@1100525001 : Codeunit 11012401;
    BEGIN
      //C026176.sn
      IF "No." = '' THEN
        EXIT(0);
      //C026176.en

      RecRef.GETTABLE(Rec);

      EXIT(DocumentLinkMgt.GetInfo(RecRef))
    END;

    PROCEDURE ShowDocuments@1100525000();
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentFilters@1100525001 : Codeunit 11012432;
    BEGIN
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Global Dimension 1 Code", FALSE, TRUE);
    END;

    PROCEDURE GetNoOfTryOuts@1100528600() : Integer;
    VAR
      TryoutSuccessor@1210190000 : Record 11012761;
      TryoutCode@1100528600 : Code[20];
    BEGIN
      //C026176.sn
      IF "No." = '' THEN
        EXIT(0);
      //C026176.en

      IF FPSLicenseManagement.LicenseAndReadPermissionForTable(TryoutSuccessor) THEN
        EXIT(TryoutSuccessor.GetNoOfTryOuts('', '', '', '', "No.", '', '', '', 1, TryoutCode));
    END;

    PROCEDURE GetNoOfTryOutQuotes@1100528602() : Integer;
    VAR
      TryoutSuccessor@1210190000 : Record 11012761;
      TryoutCode@1100528600 : Code[20];
    BEGIN
      //C026176.sn
      IF "No." = '' THEN
        EXIT(0);
      //C026176.en


      IF FPSLicenseManagement.LicenseAndReadPermissionForTable(TryoutSuccessor) THEN
        EXIT(TryoutSuccessor.GetNoOfTryOuts('', '', '', '', "No.", '', '', '', 2, TryoutCode));
    END;

    PROCEDURE GetCreditLimit@1100525001() : Decimal;
    VAR
      Customer@1100525000 : Record 18;
    BEGIN
      //C026176.sn
      IF "Bill-to Customer No." = '' THEN
        EXIT(0);
      //C026176.en

      IF NOT Customer.GET("Bill-to Customer No.") THEN
        EXIT(0);

      EXIT(Customer.CalcAvailableCreditCommonForActualCreditLimit(FALSE));
    END;

    BEGIN
    END.
  }
}

