OBJECT Page 11128090 Project Detail Prognosis Other
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Prognosis Other;
               NOR=Prognose Annet;
               SVE=Prognos annat];
    SourceTable=Table11012035;
    DelayedInsert=Yes;
    PageType=List;
    OnOpenPage=BEGIN
                 ProjSetUp.GET;
                 SpecificationsVisible := ProjSetUp."Prognosis Specifications";
               END;

    OnAfterGetRecord=BEGIN
                       CalculateValues(Rec,NOT "Fix Prognosis Line");

                       CALCFIELDS("Project Related Name");
                       IF "Project Related Name" <> '' THEN
                         "Cost Object Description" := "Project Related Name";
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  SetValuesToZero;
                  CalcTotals;
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=BEGIN
                     TESTFIELD("Cost Object"); // 31179.n
                   END;

    ActionList=ACTIONS
    {
      { 1100525005;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100525003;1 ;ActionGroup;
                      CaptionML=[ENU=Line;
                                 NOR=Linje;
                                 SVE=Rad] }
      { 1100525001;2 ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Specifications;
                                 NOR=Spesifikasjoner;
                                 SVE=Specifikationer];
                      Promoted=Yes;
                      Visible=SpecificationsVisible;
                      Image=SetupList;
                      OnAction=BEGIN
                                 ShowDetailLines();
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr=Element;
                Editable=ElementEDITABLE }

    { 4   ;2   ;Field     ;
                SourceExpr="Element Description";
                Visible=FALSE;
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Cost Object";
                Editable="Cost ObjectEDITABLE";
                LookupPageID=Cost Object List }

    { 8   ;2   ;Field     ;
                SourceExpr="Unit Cost Object";
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="Cost Object Description";
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                CaptionML=[ENU=Budget;
                           NOR=Budsjett;
                           SVE=Budget];
                SourceExpr=BudgetDec;
                Editable=FALSE }

    { 1100485006;2;Field  ;
                CaptionML=[ENU=Open (Purchase);
                           NOR=èpne innkjõp;
                           SVE=ôppna inkîp];
                SourceExpr=OpenDec;
                Visible=FALSE;
                Editable=FALSE }

    { 1100485008;2;Field  ;
                CaptionML=[ENU=Received/Not Invoiced;
                           NOR="Mottatt/ikke fakturert ";
                           SVE=Mottaget/inte fakturerat];
                SourceExpr=RecNotInvDec;
                Visible=FALSE;
                Editable=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="Open Ovh. Surch. (Purchase)";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525006;2;Field  ;
                SourceExpr="Open (Inventory)";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525008;2;Field  ;
                SourceExpr="Open Ovh. Surch. (Inventory)";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525010;2;Field  ;
                SourceExpr="Open Ovh. Surch. (Hours)";
                Visible=FALSE;
                Editable=FALSE }

    { 1210190002;2;Field  ;
                CaptionML=[ENU=Actual Costs;
                           NOR=Faktiske koster;
                           SVE=Verkliga kostnader];
                SourceExpr=ActualDec;
                Visible=FALSE;
                Editable=FALSE }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=Total Cost;
                           NOR=Total kost;
                           SVE=Total kostnad];
                SourceExpr=TotalCostDec;
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=Allowed;
                           NOR=Tillatt;
                           SVE=TillÜten];
                SourceExpr=AllowedDec;
                Editable=FALSE }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Available;
                           NOR=Disponibelt;
                           SVE=Disponibelt];
                SourceExpr=AvailableDec;
                Editable=FALSE }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Result;
                           NOR=Resultat;
                           SVE=Resultat];
                SourceExpr=ResultDec;
                Editable=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Previous Date";
                Visible=FALSE;
                Editable=FALSE }

    { 24  ;2   ;Field     ;
                SourceExpr="Previous Prognosis";
                Editable=FALSE }

    { 1100485000;2;Field  ;
                SourceExpr="Prev Prognosis End Result" }

    { 1100485010;2;Field  ;
                SourceExpr="Risc Coverage";
                OnValidate=BEGIN
                             RiscCoverageOnAfterValidate;
                           END;
                            }

    { 26  ;2   ;Field     ;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 28  ;2   ;Field     ;
                SourceExpr="Unit of Measure" }

    { 30  ;2   ;Field     ;
                SourceExpr=Price;
                OnValidate=BEGIN
                             PriceOnAfterValidate;
                           END;
                            }

    { 1100525002;2;Field  ;
                SourceExpr=Amount;
                OnDrillDown=BEGIN
                              //DP00042.sn
                              CurrPage.SAVERECORD;
                              AmountOnDrillDown;
                              CurrPage.UPDATE(FALSE);
                              //DP00042.en
                            END;
                             }

    { 1210190004;2;Field  ;
                SourceExpr="Total Risc Coverage Amount";
                Visible=FALSE }

    { 1210190027;2;Field  ;
                SourceExpr="Total Release Risc Coverage";
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Ovh. Surcharge" }

    { 32  ;2   ;Field     ;
                SourceExpr="Amount incl. Surcharge";
                OnValidate=BEGIN
                             AmountinclSurchargeOnAfterVali;
                           END;
                            }

    { 1100485004;2;Field  ;
                CaptionML=[ENU=Estimated Purchase Result;
                           NOR=Kalkulert Innkjõpsresultat;
                           SVE=Kalkylerat inkîpsresultat];
                SourceExpr=EstimPurchResultDec;
                Visible=FALSE;
                Editable=FALSE }

    { 34  ;2   ;Field     ;
                CaptionML=[ENU=Prognosis End Result;
                           NOR=Forventet Sluttresultat;
                           SVE=FîrvÑntat \slutresultat];
                SourceExpr="Prognosis End Result";
                OnValidate=BEGIN
                             PrognosisEndResultOnAfterValid;
                           END;
                            }

    { 1210190000;2;Field  ;
                SourceExpr=Comment }

    { 1100485002;2;Field  ;
                SourceExpr="Prognosis Total Cost" }

    { 1210190003;0;Container;
                ContainerType=FactBoxArea }

    { 1210190001;1;Part   ;
                CaptionML=[ENU=Prognosis Line;
                           NOR=Prognoserad;
                           SVE=Prognosrad];
                SubPageLink=Project No.=FIELD(Project No.),
                            Prognosis Date=FIELD(Prognosis Date),
                            Cost Type=FIELD(Cost Type),
                            Cost Object=FIELD(Cost Object);
                PagePartID=Page11130130;
                PartType=Page }

  }
  CODE
  {
    VAR
      ProjSetUp@11012000 : Record 315;
      ProjRec@11012001 : Record 11072003;
      ElemCstObjCntrlRec@11012002 : Record 11012050;
      CstObjCntrlRec@11012003 : Record 11012047;
      SearchProgrDate@11012004 : Codeunit 11012014;
      CostContMgt@1210190002 : Codeunit 11012006;
      BudgetDec@11012005 : Decimal;
      BudgetSurchargeDec@1100525005 : Decimal;
      ActualDec@11012006 : Decimal;
      ResultDec@11012008 : Decimal;
      TotalCostDec@11012009 : Decimal;
      TotCostExclRiscCovDec@1100485002 : Decimal;
      AvailableDec@11012010 : Decimal;
      AllowedDec@1100485001 : Decimal;
      RecNotInvDec@1210190001 : Decimal;
      OpenDec@1210190000 : Decimal;
      PrognTotCostDec@1100485000 : Decimal;
      EstimPurchResultDec@1100485003 : Decimal;
      SurchOpenDec@1100525004 : Decimal;
      SurchOpenAmountHoursDec@1100525003 : Decimal;
      OpenAmountInvDec@1100525002 : Decimal;
      SurchOpenAmountInvDec@1100525001 : Decimal;
      RiscCoverage@1210190004 : Decimal;
      RiscCoverageWithdraw@1210190003 : Decimal;
      ElementCostObjEditable@1100525000 : Boolean INDATASET;
      Text19025091@19015138 : TextConst 'ENU=Prognosis;NOR=Prognose;SVE=Prognos';
      ElementEDITABLE@1100525006 : Boolean INDATASET;
      "Cost ObjectEDITABLE"@1100525007 : Boolean INDATASET;
      SpecificationsVisible@1100525008 : Boolean INDATASET;

    PROCEDURE SetValuesToZero@4();
    BEGIN
      BudgetDec := 0;
      BudgetSurchargeDec := 0;   //M20030
      ActualDec := 0;
      TotalCostDec := 0;
      TotCostExclRiscCovDec := 0;
      AllowedDec := 0;
      ResultDec := 0;
      AvailableDec := 0;
      RecNotInvDec := 0;
      OpenDec := 0;
      PrognTotCostDec :=0;
      EstimPurchResultDec := 0;
      RiscCoverage := 0;  // 25531.n
      RiscCoverageWithdraw := 0;  // 25531.n

      //4PS -25-05-2010 sn
      SurchOpenDec := 0;
      SurchOpenAmountHoursDec := 0;
      OpenAmountInvDec := 0;
      SurchOpenAmountInvDec := 0;
      //4PS -25-05-2010 en
    END;

    PROCEDURE CalculateValues@10(VAR lPrognLineRec@11012000 : Record 11012035;SaveValues@1210190000 : Boolean);
    VAR
      DummyDec@11012001 : Decimal;
      lvProgHeaderRec@1100530000 : Record 11012034;
    BEGIN
      WITH lPrognLineRec DO BEGIN
        SetValuesToZero;
        IF NOT ProjRec.GET("Project No.") THEN
          EXIT;

        IF NOT SaveValues AND "Fix Prognosis Line" THEN BEGIN
          BudgetDec := "Budget Amount";
          BudgetSurchargeDec := lPrognLineRec."Budget Surcharge Amount"; //M20030
          ActualDec := "Actual Costs";
          TotalCostDec := "Total Cost";
          TotCostExclRiscCovDec := "Total Cost (Excl. Risc Cov.)";
          AllowedDec := "Allowed Costs";
          ResultDec := "Allowed Costs" - "Total Cost";
          RecNotInvDec := "Received/Not Invoiced";
          OpenDec := "Open (Purchase)";
          RiscCoverage := "Total Risc Coverage Amount"; // 25531.n
          RiscCoverageWithdraw := "Total Release Risc Coverage";  // 25531.n

          //4PS -25-05-2010 sn
          SurchOpenDec := "Open Ovh. Surch. (Purchase)";
          SurchOpenAmountHoursDec := "Open Ovh. Surch. (Hours)";
          OpenAmountInvDec := "Open (Inventory)";
          SurchOpenAmountInvDec := "Open Ovh. Surch. (Inventory)";
          //4PS -25-05-2010 en

          // 4PS CALL C-019133
          IF ProjSetUp."Calculate Available" = ProjSetUp."Calculate Available"::"Budget - Allowed Cost" THEN
            AvailableDec := "Budget Amount" - AllowedDec - OpenDec
          ELSE
            AvailableDec := "Budget Amount" - TotalCostDec;

          PrognTotCostDec := "Amount incl. Surcharge" + "Total Cost";
          EstimPurchResultDec := "Estimated Purchase Result"; //**4PS01.n
        END ELSE BEGIN
          //Set Filters
          ProjRec.SETRANGE("Period Filter",0D,"Prognosis Date");
          SearchProgrDate.DetermineDate(ProjRec, ProjRec."Single/Main/Sub Project" = ProjRec."Single/Main/Sub Project"::Single);

          IF ProjRec."Prognosis per Element" THEN BEGIN
            //Prognosis per Project-Element-Cost Object
            IF ElemCstObjCntrlRec.GET("Project No.",Element,"Cost Type","Cost Object") THEN BEGIN
              ElemCstObjCntrlRec.RESET;
              ProjRec.COPYFILTER("Progress Filter", ElemCstObjCntrlRec."Progress Filter");
              ElemCstObjCntrlRec.SETRANGE("Prognosis Filter", "Prognosis Date");
              ElemCstObjCntrlRec.SETRANGE("Cumulation Filter",0D,"Prognosis Date");
              ElemCstObjCntrlRec.SETRANGE("Main Project No.","Main Project No.");
              IF "Project No." <> "Main Project No." THEN
                ElemCstObjCntrlRec.SETRANGE("Project Filter","Project No.");
              ElemCstObjCntrlRec.CALCFIELDS(Budget, "Actual Costs","Budget Surcharge Amount",
                                           "Risc Coverage","Risc Coverage Withdraw"); // 25531.n
              BudgetDec := ElemCstObjCntrlRec.Budget;
              RiscCoverage := ElemCstObjCntrlRec."Risc Coverage";  // 25531.n
              RiscCoverageWithdraw := ElemCstObjCntrlRec."Risc Coverage Withdraw";  // 25531.n
              BudgetSurchargeDec := ElemCstObjCntrlRec."Budget Surcharge Amount"; //M20030
              ActualDec := ElemCstObjCntrlRec."Actual Costs";
              //ElemCstObjCntrlRec.CalculateAllowed(AllowedDec,DummyDec,DummyDec,DummyDec); //**4PS01.o
              //**4PS01.sn
              CostContMgt.AllowedAndPurchElemCostObj(ElemCstObjCntrlRec, AllowedDec,DummyDec,DummyDec,DummyDec,
                DummyDec, EstimPurchResultDec, DummyDec, DummyDec, DummyDec, TRUE);
              //**4PS01.en
              OpenDec := CostContMgt.OutstandingElemCostObj(ElemCstObjCntrlRec,TRUE);
              RecNotInvDec := CostContMgt.ReceivedNotInvoicedElemCostObj(ElemCstObjCntrlRec,TRUE);
              TotalCostDec := CostContMgt.TotCostElemCostObj(ElemCstObjCntrlRec,TRUE);
              ResultDec := CostContMgt.ResultElemCostObj(ElemCstObjCntrlRec,TRUE);

              //4PS -25-05-2010 sn
              ElemCstObjCntrlRec.CALCFIELDS("Open Ovh. Surch. (Hours)", "Open (Inventory)",
                 "Open Ovh. Surch. (Inventory)");
              SurchOpenDec := CostContMgt.OpenOvhPurchElemCostObj(ElemCstObjCntrlRec,TRUE);
              SurchOpenAmountHoursDec := ElemCstObjCntrlRec."Open Ovh. Surch. (Hours)";
              OpenAmountInvDec := ElemCstObjCntrlRec."Open (Inventory)";
              SurchOpenAmountInvDec := ElemCstObjCntrlRec."Open Ovh. Surch. (Inventory)";
              //4PS -25-05-2010 en

              // 4PS CALL C-019133
              IF ProjSetUp."Calculate Available" = ProjSetUp."Calculate Available"::"Budget - Allowed Cost" THEN
                AvailableDec := BudgetDec - AllowedDec - OpenDec
              ELSE
                AvailableDec := BudgetDec - TotalCostDec;
              PrognTotCostDec := "Amount incl. Surcharge" + TotalCostDec;
              "Prognosis End Result" := AvailableDec - "Amount incl. Surcharge";

              CstObjCntrlRec.CALCFIELDS("Risc Coverage (Prognosis)");
              TotCostExclRiscCovDec := TotalCostDec - ElemCstObjCntrlRec."Risc Coverage (Prognosis)";
            END;
          END ELSE BEGIN
            //Prognosis per Project-Cost Object
            IF CstObjCntrlRec.GET("Project No.","Cost Type","Cost Object") THEN BEGIN
              CstObjCntrlRec.RESET;
              ProjRec.COPYFILTER("Progress Filter",CstObjCntrlRec."Progress Filter");
              CstObjCntrlRec.SETRANGE("Prognosis Filter", "Prognosis Date");
              CstObjCntrlRec.SETRANGE("Cumulation Filter",0D,"Prognosis Date");
              CstObjCntrlRec.SETRANGE("Main Project No.","Main Project No.");
              IF "Project No." <> "Main Project No." THEN
                CstObjCntrlRec.SETRANGE("Project Filter","Project No.");
              CstObjCntrlRec.CALCFIELDS(Budget, "Actual Costs", "Budget Surcharge Amount",
                                        "Risc Coverage","Risc Coverage Withdraw"); // 25531.n
              BudgetDec := CstObjCntrlRec.Budget;
              RiscCoverage := CstObjCntrlRec."Risc Coverage";  // 25531.n
              RiscCoverageWithdraw := CstObjCntrlRec."Risc Coverage Withdraw";  // 25531.n
              BudgetSurchargeDec := CstObjCntrlRec."Budget Surcharge Amount" ; //M20030
              ActualDec := CstObjCntrlRec."Actual Costs";
              //CstObjCntrlRec.CalculateAllowed(AllowedDec,DummyDec,DummyDec,DummyDec); //**4PS01.o
              //**4PS01.sn
              CostContMgt.AllowedAndPurchCostObj(CstObjCntrlRec, AllowedDec,
                DummyDec,DummyDec,DummyDec,
                DummyDec, EstimPurchResultDec, DummyDec, DummyDec, DummyDec, TRUE);
              //**4PS01.en
              OpenDec := CostContMgt.OutstandingCostObj(CstObjCntrlRec,TRUE);
              RecNotInvDec := CostContMgt.ReceivedNotInvoicedCostObj(CstObjCntrlRec,TRUE);
              TotalCostDec := CostContMgt.TotCostCostObj(CstObjCntrlRec,TRUE);
              ResultDec := CostContMgt.ResultCostObj(CstObjCntrlRec,TRUE);

              //4PS -25-05-2010 sn
              CstObjCntrlRec.CALCFIELDS("Open Ovh. Surch. (Hours)", "Open (Inventory)",
                "Open Ovh. Surch. (Inventory)");
              SurchOpenDec := CostContMgt.OpenOvhPurchCostObj(CstObjCntrlRec,TRUE);
              SurchOpenAmountHoursDec := CstObjCntrlRec."Open Ovh. Surch. (Hours)";
              OpenAmountInvDec := CstObjCntrlRec."Open (Inventory)";
              SurchOpenAmountInvDec := CstObjCntrlRec."Open Ovh. Surch. (Inventory)";
              //4PS -25-05-2010 en

              // 4PS CALL C-019133
              IF ProjSetUp."Calculate Available" = ProjSetUp."Calculate Available"::"Budget - Allowed Cost" THEN
                AvailableDec := BudgetDec - AllowedDec - OpenDec
              ELSE
                AvailableDec := BudgetDec - TotalCostDec;

              PrognTotCostDec := "Amount incl. Surcharge" + TotalCostDec;
              "Prognosis End Result" := AvailableDec - "Amount incl. Surcharge";

              CstObjCntrlRec.CALCFIELDS("Risc Coverage (Prognosis)");
              TotCostExclRiscCovDec := TotalCostDec - CstObjCntrlRec."Risc Coverage (Prognosis)";
            END;
          END;
        END;

        IF SaveValues THEN BEGIN
          //"Fix Prognosis Line" := TRUE;
          IF NOT lvProgHeaderRec.GET("Project No.", "Prognosis Date") THEN lvProgHeaderRec.INIT;  //db, 13-01-11
          "Fix Prognosis Line" := lvProgHeaderRec."Fix Prognosis Line";  //db, 13-01-11

          "Budget Amount" := BudgetDec;
          "Total Risc Coverage Amount" := RiscCoverage; // 25531.n
          "Total Release Risc Coverage" := RiscCoverageWithdraw;  // 25531.n
          "Budget Surcharge Amount" := BudgetSurchargeDec; //M20030
          "Actual Costs" := ActualDec;
          "Open (Purchase)" := OpenDec;
          "Received/Not Invoiced" := RecNotInvDec;
          "Total Cost" := TotalCostDec;
          "Total Cost (Excl. Risc Cov.)" := TotCostExclRiscCovDec;
          "Allowed Costs" := AllowedDec;

          //4PS -25-05-2010 sn
          "Open Ovh. Surch. (Purchase)" := SurchOpenDec;
          "Open Ovh. Surch. (Hours)" := SurchOpenAmountHoursDec;
          "Open (Inventory)" := OpenAmountInvDec;
          "Open Ovh. Surch. (Inventory)" := SurchOpenAmountInvDec;
          //4PS -25-05-2010 en

          "Prognosis Total Cost" := PrognTotCostDec;
          "Estimated Purchase Result" := EstimPurchResultDec; //**4PS01.n
        END;

        CALCFIELDS("Previous Date", "Previous Prognosis","Prev Prognosis End Result");

      END;
    END;

    PROCEDURE CalcTotals@1100485000();
    BEGIN
      CALCFIELDS(
        "Total Prognosis Labor", "Total Prognosis Material",
        "Total Prognosis Subcontracting", "Total Prognosis Plant",
        "Total Prognosis Sundry", "Total Prognosis",
        "Total Progn. End Result Labor", "Total Progn. End Result Mat.",
        "Total Progn. End Result Subc.", "Total Progn. End Result Plant",
        "Total Progn. End Result Sundry", "Total Prognosis End Result");
    END;

    PROCEDURE ShowDetailLines@11136552();
    BEGIN
      //DP00042
      CurrPage.SAVERECORD;  //C006391.n
      AmountOnDrillDown;
    END;

    LOCAL PROCEDURE RiscCoverageOnAfterValidate@19065993();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE PriceOnAfterValidate@19065147();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE AmountinclSurchargeOnAfterVali@19001334();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE PrognosisEndResultOnAfterValid@19000495();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      CalcTotals;

      IF Element <> '' THEN
        ElementCostObjEditable := NOT ElemCstObjCntrlRec.GET("Project No.",Element,"Cost Type","Cost Object")
      ELSE
        IF "Cost Object" <> '' THEN
          ElementCostObjEditable := NOT CstObjCntrlRec.GET("Project No.","Cost Type","Cost Object")
        ELSE
          ElementCostObjEditable := TRUE;

      ElementEDITABLE := (ElementCostObjEditable);
      "Cost ObjectEDITABLE":= (ElementCostObjEditable);
    END;

    BEGIN
    {
      //20060706-JE : Added fields [Prev Prognosis End Result], [Total Expected Costs]
      4PS01 JD Call C-006737 18-12-2006 Voorcalculatorisch inkoopresultaat opnemen in prognose scherm
    }
    END.
  }
}

