OBJECT Report 11012956 Invoice Sales Rental Contract
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Fakturieren Vermietungsvertrag;
               ENU=Invoice Sales Rental Contract;
               NLD=Factureren verhuurcontract;
               SVE=Uthyrningskontrakt f”r faktura];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 6640;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Order),
                                       Sales Document Type=CONST(RentalContract),
                                       Status=CONST(Released),
                                       Rental Contract Invoice Status=CONST(Chargeable));
               ReqFilterHeadingML=[DEU=Vermietungsvertrag;
                                   ENU=Sales Rental Contract;
                                   NLD=Verhuurcontract;
                                   SVE=Uthyrningskontrakt (f”rs„ljning)];
               OnPreDataItem=BEGIN
                               IF ReplacePostingDate AND (PostingDateReq = 0D) THEN
                                 ERROR(Text000);
                               CounterTotal := COUNT;
                               Window.OPEN(Text001);
                             END;

               OnAfterGetRecord=VAR
                                  lvProjRec@1100485000 : Record 11072003;
                                BEGIN
                                  //IF CalcInvDisc THEN
                                  //  CalculateInvoiceDiscount;   //* Switched off see remark in function

                                  Counter := Counter + 1;
                                  Window.UPDATE(1,"No.");
                                  Window.UPDATE(2,ROUND(Counter / CounterTotal * 10000,1));
                                  "Sales Header".Ship := FALSE;
                                  "Sales Header".Invoice := TRUE;
                                  CLEAR(SalesPost);
                                  UpdatePostingAndDocDateFromInput(ReplacePostingDate,ReplaceDocumentDate,PostingDateReq);
                                  IF SalesPost.RUN("Sales Header") THEN BEGIN //* Only execute test, CU 80 contains exit for 'Rental Contract'.
                                                                              //* As in the case of invoice 'Rental Order'.
                                    SalesLineNo := 0;
                                    SalesLine.LOCKTABLE;

                                    InvoiceSalesLines;

                                    "Rental Contract Invoice Status" := "Rental Contract Invoice Status"::"Temporary";
                                    MODIFY;

                                    IF lvProjRec.GET("Job No.") THEN BEGIN
                                      //* Set to Technical finished, for now we will do this always (maybe later on we need a setup)
                                      //* 17-05-2008 We agreed on Technical finished, now should be administrative finished.
                                      //*            Do it in 2 steps, otherwise certain fields will not be filled (ia date tech. finished).
                                      IF lvProjRec."Project Status" < lvProjRec."Project Status"::"Administrative Finished" THEN BEGIN
                                        IF lvProjRec."Project Status" < lvProjRec."Project Status"::"Technical Finished" THEN
                                          lvProjRec.VALIDATE("Project Status", lvProjRec."Project Status"::"Technical Finished");
                                        lvProjRec.VALIDATE("Project Status", lvProjRec."Project Status"::"Administrative Finished");
                                        lvProjRec.MODIFY(TRUE);
                                      END;
                                    END;

                                    IF SalesLineNo > 0 THEN
                                      CounterOK := CounterOK + 1;
                                    IF MARKEDONLY THEN
                                      MARK(FALSE);
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                Window.CLOSE;
                                MESSAGE(Text002,CounterOK,CounterTotal);
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   SalesSetup.GET;
                   CalcInvDisc := SalesSetup."Calc. Inv. Discount";
                   ReplacePostingDate := FALSE;
                   ReplaceDocumentDate := FALSE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 3   ;2   ;Field     ;
                  CaptionML=[DEU=Buchungsdatum;
                             ENU=Posting Date;
                             NLD=Boekingsdatum;
                             NOR=Bokf›ringsdato;
                             SVE=Bokf”ringsdatum];
                  SourceExpr=PostingDateReq }

      { 4   ;2   ;Field     ;
                  CaptionML=[DEU=Buchungsdatum ersetzen;
                             ENU=Replace Posting Date;
                             NLD=Boekingsdatum vervangen;
                             NOR=Erstatt bokf›ringsdato;
                             SVE=Ers„tt bokf”ringsdatum];
                  SourceExpr=ReplacePostingDate;
                  OnValidate=BEGIN
                               IF ReplacePostingDate THEN
                                 MESSAGE(Text003);
                             END;
                              }

      { 5   ;2   ;Field     ;
                  CaptionML=[DEU=Belegdatum ersetzen;
                             ENU=Replace Document Date;
                             NLD=Documentdatum vervangen;
                             NOR=Erstatt dokumentdato;
                             SVE=Ers„tt dokumentdatum];
                  SourceExpr=ReplaceDocumentDate }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Bitte das Buchungsdatum eingeben.;ENU=Please enter the posting date.;NLD=Geef een boekingsdatum op.;NOR=Angi bokf›ringsdatoen.;SVE=Skriv in bokf”ringsdatum.';
      Text001@1001 : TextConst 'DEU=Fakturieren Auftr„ge   #1########## @2@@@@@@@@@@@@@;ENU=Invoice orders  #1########## @2@@@@@@@@@@@@@;NLD=Factureren orders   #1########## @2@@@@@@@@@@@@@;SVE=Fakturaorder  #1########## @2@@@@@@@@@@@@@';
      Text002@1002 : TextConst 'DEU=%1 der %2 Auftr„ge fakturiert;ENU=%1 of %2 orders invoiced.;NLD=%1 van %2 order(s) gefactureerd.;SVE=%1 av %2 order har fakturerats.';
      SalesLine@1005 : Record 37;
      SalesSetup@1006 : Record 311;
      SalesCalcDisc@1007 : Codeunit 60;
      SalesPost@1008 : Codeunit 80;
      Window@1009 : Dialog;
      PostingDateReq@1012 : Date;
      CounterTotal@1013 : Integer;
      Counter@1014 : Integer;
      CounterOK@1015 : Integer;
      ReplacePostingDate@1016 : Boolean;
      ReplaceDocumentDate@1017 : Boolean;
      CalcInvDisc@1018 : Boolean;
      SalesInvHeader@1100485023 : Record 36;
      SalesInvLine@1100485022 : Record 37;
      InvCounter@1100485018 : Integer;
      SalesLineNo@1100485017 : Integer;
      Text003@1100485002 : TextConst 'DEU=Der zu dem neuen Buchungsdatum geh”rige Wechselkurs auf dem Verkaufskopf wird nicht auf die Verkaufszeilen angewendet.;ENU=The exchange rate associated with the new posting date on the sales header will not apply to the sales lines.;NLD=De wisselkoers die gekoppeld is aan de nieuwe boekingsdatum op de verkoopkop is niet van toepassing op de verkoopregels.;NOR=Valutakursen tilknyttet den nye bokf›ringsdatoen p† salgshodet vil ikke gjelde for salgsradene.;SVE=V„xelkursen kopplad till det nya bokf”ringsdatumet p† f”rs.huvudet kommer inte att g„lla f”r f”rs.raderna.';

    PROCEDURE CalculateInvoiceDiscount@1();
    BEGIN
      {
      //* Do not calculate discount here, should be done before on quote/order.
      //* Do not change amounts here (can be kan offer amount).
      //* Selection 'CalcInvDisc' is also removed from tab option

      SalesLine.RESET;
      SalesLine.SETRANGE("Document Type","Sales Header"."Document Type");
      SalesLine.SETRANGE("Document No.","Sales Header"."No.");
      IF SalesLine.FIND('-') THEN
        IF SalesCalcDisc.RUN(SalesLine) THEN BEGIN
          "Sales Header".GET("Sales Header"."Document Type","Sales Header"."No.");
          COMMIT;
        END;
      }
    END;

    PROCEDURE InvoiceSalesLines@1100485008();
    BEGIN
      WITH SalesLine DO BEGIN
        RESET;
        SETRANGE("Document Type", "Sales Header"."Document Type");
        SETRANGE("Document No.", "Sales Header"."No.");
        IF FINDSET(TRUE, FALSE) THEN
          REPEAT
            InsertSalesInvHeader;
            InsertSalesInvLine;
            "Quantity Invoiced" := Quantity;
            MODIFY;
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE InsertSalesInvHeader@3();
    BEGIN
      IF SalesLineNo > 0 THEN
        EXIT;

      WITH SalesInvHeader DO BEGIN
        SalesInvHeader := "Sales Header";
        "Document Type" := "Document Type"::Invoice;
        "No." := '';
        Status := Status::Open;
        VALIDATE("No.");
        INSERT(TRUE);

        IF "Sales Header"."Posting Description" <> '' THEN
          "Posting Description" := "Sales Header"."Posting Description";
        IF ReplacePostingDate THEN
          "Posting Date" := PostingDateReq;
        IF ReplaceDocumentDate THEN
          "Document Date" := PostingDateReq;
        Status := Status::Released;
        "Related Sales Order No." := "Sales Header"."No.";
        FillDefaultInvoiceLayoutCode();
        MODIFY;
      END;

      InvCounter := InvCounter + 1;
      SalesLineNo := 10000;
    END;

    PROCEDURE InsertSalesInvLine@1100485019();
    BEGIN
      WITH SalesInvLine DO BEGIN
        TRANSFERFIELDS(SalesLine);
        SuspendUpdateVATAmounts(TRUE);
        "Document Type" := SalesInvHeader."Document Type";
        "Document No." := SalesInvHeader."No.";
        "Line No." := SalesLine."Line No.";
        "System-Created Entry" := TRUE;
        IF ("Plant Type" <> '') OR ("Plant Set Code" <> '') THEN
          "Rental Period" := STRSUBSTNO('%1..%2', SalesLine."Rental Starting Date", SalesLine."Rental Ending Date");

        InitQtyToShip;

        SalesInvLineFinish;
        INSERT;

        SalesLineNo := "Line No." + 10000;
      END;
    END;

    PROCEDURE SalesInvLineFinish@1100485007();
    BEGIN
      WITH SalesInvLine DO BEGIN
        SuspendUpdateVATAmounts(FALSE);
        IF Type <> Type::" " THEN
          UpdateAmounts;
      END;
    END;

    BEGIN
    {
      //* Copied from report 'Invoice Sales Rental Order' (R11020229).
      //* Simpler because not periodic invoice, Rental Contract will be once only fully invoiced.
    }
    END.
  }
  RDLDATA
  {
  }
}

