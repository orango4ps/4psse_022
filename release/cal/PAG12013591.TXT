OBJECT Page 12013591 Inbnd Exflow Doc. Line Subform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF510000,4PS;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Inbound Exflow Purchase Doc. Line Subform;
               SVE=Ing†ende Exflow ink”psdok.-rad subform.];
    SourceTable=Table12013588;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  Type := xRec.Type;
                  CASE Type OF
                    Type::"G/L Account":
                      Quantity := 1;
                    Type::"Fixed Asset":
                      Quantity := 1;
                  END;

                  CLEAR(ShortcutDimCode);
                END;

    OnDeleteRecord=BEGIN
                     IF ("Line No." = SelectedExfPurchDocLine."Line No.") THEN
                       RecalcAllLines;

                     CurrPage.UPDATE;
                   END;

    ActionList=ACTIONS
    {
      { 1100285069;  ;ActionContainer;
                      Name=<Action1900000004>;
                      ActionContainerType=ActionItems }
      { 1100285068;1 ;ActionGroup;
                      Name=<Action1907935204>;
                      CaptionML=[ENU=&Line;
                                 SVE=Ra&d];
                      Image=Line }
      { 1100285051;2 ;Action    ;
                      CaptionML=[ENU=&Purchase Order Card;
                                 SVE=&Ink”psorder kort];
                      Image=Card;
                      OnAction=BEGIN
                                 OpenOrderCard;
                               END;
                                }
      { 1100285044;2 ;Action    ;
                      Name=Dimensions;
                      CaptionML=[ENU=Dimensions;
                                 SVE=Dimensioner];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1100285045;2 ;Action    ;
                      Name=Show Approval Proposal;
                      ShortCutKey=Ctrl+Alt+A;
                      CaptionML=[ENU=Show Approval Proposal;
                                 SVE=Visa attestf”rslag];
                      Image=Approvals;
                      OnAction=BEGIN
                                 GET("Inbound Document No.","Line No.");
                                 ExfWorkflowMgt.CreateProposals(Rec,FALSE,FALSE,TRUE,TRUE);
                                 ExfWorkflowMgt.ShowProposals(Rec);
                               END;
                                }
      { 1100285100;2 ;Action    ;
                      Name=Show Available Templates;
                      CaptionML=[ENU=Show Available Templates;
                                 SVE=Visa m”jliga attestregler];
                      OnAction=VAR
                                 TemplateRule@1100285000 : Record 12013645;
                               BEGIN
                                 TemplateRule.ShowPotentialTemplatesWkshFromExFPurch(Rec);
                               END;
                                }
      { 1100285046;2 ;Action    ;
                      Name=ItemChargeAssignment;
                      AccessByPermission=TableData 5800=R;
                      CaptionML=[ENU=Item Charge &Assignment;
                                 SVE=Art.omkost.&f”rdelning];
                      Image=ItemCosts;
                      OnAction=BEGIN
                                 ShowItemChargeAssgnt;
                               END;
                                }
      { 1100285035;2 ;Action    ;
                      Name=DeferralSchedule;
                      CaptionML=[ENU=Deferral Schedule;
                                 SVE=Periodiseringsschema];
                      Enabled="Deferral Code" <> '';
                      Image=PaymentPeriod;
                      OnAction=BEGIN
                                 ExfPurchDocHead.GET("Inbound Document No.");
                                 ShowDeferrals(ExfPurchDocHead."Posting Date",ExfPurchDocHead."Currency Code");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100285000;0;Container;
                ContainerType=ContentArea }

    { 1100285001;1;Group  ;
                GroupType=Repeater }

    { 1100285002;2;Field  ;
                SourceExpr="Error Message";
                OnAssistEdit=BEGIN
                               IF "Error Message" <> '' THEN
                                 MESSAGE(STRSUBSTNO(EXF001,"Error Message"));
                             END;
                              }

    { 1100285003;2;Field  ;
                SourceExpr="Validation Error";
                Visible=False }

    { 1100285070;2;Field  ;
                SourceExpr="Potential UOM Mismatch";
                Visible=FALSE }

    { 1100285095;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE }

    { 1100285004;2;Field  ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             CASE Type OF
                               Type::"G/L Account":
                                 Quantity := 1;
                               Type::"Fixed Asset":
                                 Quantity := 1;
                             END;
                           END;
                            }

    { 1100285005;2;Field  ;
                SourceExpr="No.";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100285052;2;Field  ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 1100285006;2;Field  ;
                SourceExpr="Vendor Item No.";
                Visible=False }

    { 1100285007;2;Field  ;
                SourceExpr=Description }

    { 1100285065;2;Field  ;
                SourceExpr="Description 2";
                Visible=False }

    { 1100285050;2;Field  ;
                SourceExpr="Approver Comment";
                Visible=False }

    { 1100285008;2;Field  ;
                SourceExpr="Check Order Line (OCR)";
                Visible=False }

    { 1100285009;2;Field  ;
                SourceExpr="Order No.";
                Visible=False;
                OnLookup=BEGIN
                           OrderNoLookup;

                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 1100285066;2;Field  ;
                SourceExpr="Order Line No.";
                Visible=False;
                OnValidate=VAR
                             ExFlowPurchaseDocHead@1100285002 : Record 12013587;
                             ExFlowSetup@1100285001 : Record 12013601;
                             ExFlowValidatePurchDoc@1100285000 : Codeunit 12013594;
                           BEGIN
                             IF "Outstanding Quantity (Order)" <> 0 THEN BEGIN
                               CurrPage.SAVERECORD;
                               ExFlowPurchaseDocHead.GET("Inbound Document No.");
                               ExFlowSetup.GET;
                               ExFlowValidatePurchDoc.MatchReceiptReturn(ExFlowPurchaseDocHead,ExFlowSetup,TRUE);
                               CurrPage.UPDATE(FALSE);
                             END;
                           END;
                            }

    { 1100285010;2;Field  ;
                SourceExpr="Order No. (Import)";
                Visible=False }

    { 1100285059;2;Field  ;
                SourceExpr="Original No. (Import)";
                Visible=false }

    { 1100285096;2;Field  ;
                SourceExpr="Receipt No. Mandatory";
                Visible=False }

    { 1100285011;2;Field  ;
                SourceExpr="Receipt Date" }

    { 1100285097;2;Field  ;
                SourceExpr="Receipt No." }

    { 1100285098;2;Field  ;
                SourceExpr="Receipt Line No." }

    { 1100285092;2;Field  ;
                SourceExpr="Original No. (Matching)";
                Visible=False }

    { 1100285012;2;Field  ;
                SourceExpr="Direct Unit Cost (Matching)";
                Visible=FALSE }

    { 1100285067;2;Field  ;
                SourceExpr="Quantity (Matching)";
                Visible=FALSE }

    { 1100285055;2;Field  ;
                SourceExpr="Match Qty. Imp Inv. (Base)";
                Visible=FALSE }

    { 1100285101;2;Field  ;
                SourceExpr="Matched Qty. Invoice (Base)";
                Visible=FALSE }

    { 1100285093;2;Field  ;
                SourceExpr="Gen. Bus. Posting Group";
                Visible=FALSE }

    { 1100285013;2;Field  ;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=False;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100285094;2;Field  ;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE }

    { 1100285015;2;Field  ;
                SourceExpr="VAT Prod. Posting Group";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100285016;2;Field  ;
                SourceExpr="VAT %";
                Visible=False }

    { 1100285017;2;Field  ;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100285060;2;Field  ;
                SourceExpr="Quantity (Import)";
                Visible=FALSE }

    { 1100285053;2;Field  ;
                SourceExpr=Approval;
                Visible=False }

    { 1100285018;2;Field  ;
                SourceExpr="Outstanding Quantity (Order)";
                Visible=False }

    { 1100285019;2;Field  ;
                SourceExpr="Unit of Measure Code";
                Visible=False }

    { 1100285020;2;Field  ;
                SourceExpr="Direct Unit Cost";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100285014;2;Field  ;
                SourceExpr="Direct Unit Cost (Import)";
                Visible=FALSE }

    { 1100285022;2;Field  ;
                SourceExpr=Amount;
                Visible=False }

    { 1100285048;2;Field  ;
                SourceExpr="Amount Including VAT";
                Visible=false }

    { 1100285023;2;Field  ;
                SourceExpr="Line Discount %";
                Visible=False;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100285024;2;Field  ;
                SourceExpr="Line Discount Amount";
                Visible=False;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100285025;2;Field  ;
                SourceExpr="Quantity Received (Order)";
                Visible=False }

    { 1100285026;2;Field  ;
                SourceExpr="Quantity Invoiced (Order)";
                Visible=False }

    { 1100285027;2;Field  ;
                SourceExpr="Direct Unit Cost (Order)";
                Visible=False }

    { 1100285099;2;Field  ;
                SourceExpr="Line Discount % (Order)" }

    { 1100285056;2;Field  ;
                SourceExpr="Sales Order No. (Order)";
                Visible=False }

    { 1100285057;2;Field  ;
                SourceExpr="Sales Order Line No. (Order)";
                Visible=False }

    { 1100285058;2;Field  ;
                SourceExpr="Drop Shipment (Order)";
                Visible=False }

    { 1100285028;2;Field  ;
                SourceExpr="Test Unit Costs" }

    { 1100285091;2;Field  ;
                SourceExpr="Accept Potential UOM Mismatch" }

    { 1100285029;2;Field  ;
                SourceExpr="Allow Invoice Disc.";
                Visible=False }

    { 1100285047;2;Field  ;
                SourceExpr="Location Code";
                Visible=FALSE }

    { 1100285030;2;Field  ;
                SourceExpr="Job No.";
                Visible=False }

    { 1100285079;2;Field  ;
                SourceExpr="Job No. (Import)";
                Visible=FALSE }

    { 1100285090;2;Field  ;
                SourceExpr="Job Task No.";
                Visible=FALSE }

    { 1100285089;2;Field  ;
                SourceExpr="Job Line Type";
                Visible=FALSE }

    { 1100285088;2;Field  ;
                SourceExpr="Job Unit Price";
                Visible=FALSE }

    { 1100285087;2;Field  ;
                SourceExpr="Job Total Price";
                Visible=FALSE }

    { 1100285085;2;Field  ;
                SourceExpr="Job Line Amount";
                Visible=FALSE }

    { 1100285086;2;Field  ;
                SourceExpr="Job Line Discount Amount";
                Visible=FALSE }

    { 1100285084;2;Field  ;
                SourceExpr="Job Line Discount %";
                Visible=FALSE }

    { 1100285083;2;Field  ;
                SourceExpr="Job Unit Price (LCY)";
                Visible=FALSE }

    { 1100285082;2;Field  ;
                SourceExpr="Job Total Price (LCY)";
                Visible=FALSE }

    { 1100285081;2;Field  ;
                SourceExpr="Job Line Amount (LCY)";
                Visible=FALSE }

    { 1100285080;2;Field  ;
                SourceExpr="Job Line Disc. Amount (LCY)";
                Visible=FALSE }

    { 1100285078;2;Field  ;
                SourceExpr="Insurance No.";
                Visible=FALSE }

    { 1100285071;2;Field  ;
                SourceExpr="FA Posting Type";
                Visible=FALSE }

    { 1100285072;2;Field  ;
                SourceExpr="Depreciation Book Code";
                Visible=FALSE }

    { 1100285073;2;Field  ;
                SourceExpr="Depr. until FA Posting Date";
                Visible=FALSE }

    { 1100285074;2;Field  ;
                SourceExpr="Depr. Acquisition Cost";
                Visible=FALSE }

    { 1100285075;2;Field  ;
                SourceExpr="Budgeted FA No.";
                Visible=FALSE }

    { 1100285076;2;Field  ;
                SourceExpr="Duplicate in Depreciation Book";
                Visible=FALSE }

    { 1100285077;2;Field  ;
                SourceExpr="Use Duplication List";
                Visible=FALSE }

    { 1100285032;2;Field  ;
                SourceExpr="First Approver";
                Visible=False }

    { 1100285033;2;Field  ;
                SourceExpr="Template Rule";
                Visible=False }

    { 1100285049;2;Field  ;
                SourceExpr="Applied Template Rule" }

    { 1101285000;2;Field  ;
                SourceExpr="Periodic Template Code 4PS" }

    { 1101285001;2;Field  ;
                SourceExpr="Periodic Starting Date 4PS" }

    { 1100285054;2;Field  ;
                SourceExpr="Auto. Acc. Group";
                Visible=False }

    { 1100285061;2;Field  ;
                SourceExpr="Invoice to Customer";
                Visible=False }

    { 1100285062;2;Field  ;
                SourceExpr="Invoicing Amount";
                Visible=False }

    { 1100285063;2;Field  ;
                SourceExpr="Start Date for Invoicing";
                Visible=False }

    { 1000000003;2;Field  ;
                SourceExpr="Service Order No." }

    { 1100285064;2;Field  ;
                SourceExpr="Invoicing Code";
                Visible=False }

    { 1100285102;2;Field  ;
                SourceExpr="Manually Unmatched";
                Visible=FALSE }

    { 1100285031;2;Field  ;
                SourceExpr="Matching Comment";
                Visible=FALSE }

    { 1100285043;2;Field  ;
                SourceExpr="Shortcut Dimension 1 Code" }

    { 1100285042;2;Field  ;
                SourceExpr="Shortcut Dimension 2 Code" }

    { 1100285041;2;Field  ;
                Name=ShortCutDim3Column;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(3,ShortcutDimCode[3]);
                         END;
                          }

    { 1100285040;2;Field  ;
                Name=ShortCutDim4Column;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(4,ShortcutDimCode[4]);
                         END;
                          }

    { 1100285039;2;Field  ;
                Name=ShortCutDim5Column;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(5,ShortcutDimCode[5]);
                         END;
                          }

    { 1100285038;2;Field  ;
                Name=ShortCutDim6Column;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(6,ShortcutDimCode[6]);
                         END;
                          }

    { 1100285037;2;Field  ;
                Name=ShortCutDim7Column;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(7,ShortcutDimCode[7]);
                         END;
                          }

    { 1100285036;2;Field  ;
                Name=ShortCutDim8Column;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(8,ShortcutDimCode[8]);
                         END;
                          }

    { 1100285508;2;Field  ;
                SourceExpr="Estimate No.";
                Visible=FALSE }

    { 1100285507;2;Field  ;
                SourceExpr="Extension Contract" }

    { 1100285505;2;Field  ;
                SourceExpr="Cost Type";
                Visible=FALSE }

    { 1100285504;2;Field  ;
                SourceExpr=Element }

    { 1100285503;2;Field  ;
                SourceExpr="Plot No.";
                Visible=FALSE }

    { 1100285502;2;Field  ;
                SourceExpr="Plant No." }

    { 1100285501;2;Field  ;
                SourceExpr="Plant Type" }

    { 1100285500;2;Field  ;
                SourceExpr="Cost Component Plant" }

  }
  CODE
  {
    VAR
      PurchHeaderTemp@1100285013 : TEMPORARY Record 38;
      PurchLineTemp@1100285012 : TEMPORARY Record 39;
      ExfPurchDocHead@1100285011 : Record 12013587;
      SelectedExfPurchDocLine@1100285008 : Record 12013588;
      ExfWorkflowMgt@1100285007 : Codeunit 12013593;
      PurchPriceCalcMgt@1100285005 : Codeunit 7010;
      AutoFormatCurrency@1100285004 : Code[10];
      ShortcutDimCode@1100285016 : ARRAY [8] OF Code[20];
      UpdateAllowedVar@1100285000 : Boolean;
      Text000@1100285014 : TextConst 'ENU=Unable to execute this function while in view only mode.;SVE=Kan inte utf”ra funktionen i skrivskyddat l„ge.';
      Text001@1100285001 : TextConst 'ENU=This line is not connected to an Purchase Order (Order No field is blank).;SVE=Denna rad „r inte kopplad till en ink”psorder (Order Nr f„ltet „r blankt).';
      EXF001@1100285002 : TextConst 'ENU=%1;SVE=%1';

    PROCEDURE ShowDimensions@10();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    PROCEDURE SetUpdateAllowed@2(UpdateAllowed@1000 : Boolean);
    BEGIN
      UpdateAllowedVar:=UpdateAllowed;
    END;

    PROCEDURE UpdateAllowed@5() : Boolean;
    BEGIN
      IF UpdateAllowedVar = FALSE THEN BEGIN
        MESSAGE(Text000);
        EXIT(FALSE);
      END ELSE
        EXIT(TRUE);
    END;

    PROCEDURE ShowPrices@15();
    BEGIN
      ExfPurchDocHead.GET("Inbound Document No.");
      PurchHeaderTemp.TRANSFERFIELDS(ExfPurchDocHead);

      PurchLineTemp.TRANSFERFIELDS(Rec);

      CLEAR(PurchPriceCalcMgt);
    END;

    PROCEDURE ShowLineDisc@16();
    BEGIN
      ExfPurchDocHead.GET("Inbound Document No.");
      PurchHeaderTemp.TRANSFERFIELDS(ExfPurchDocHead);

      PurchLineTemp.TRANSFERFIELDS(Rec);

      CLEAR(PurchPriceCalcMgt);
    END;

    PROCEDURE RecalcAllLines@1011301();
    VAR
      ExfPurchDocHeader@1010010 : Record 12013587;
      ExfPurchDocLine@1010009 : Record 12013588;
      TempVATAmountLine0@1010008 : TEMPORARY Record 290;
      TempVATAmountLine1@1010006 : TEMPORARY Record 290;
      ExFValidatePurchDoc@1100285000 : Codeunit 12013594;
    BEGIN
      ExfPurchDocHeader.GET("Inbound Document No.");
      IF ExFValidatePurchDoc.ManualEntryExists(ExfPurchDocHeader) THEN
        EXIT;

      ExfPurchDocLine.SETRANGE("Inbound Document No.",ExfPurchDocHeader."Inbound Document No.");
      ExfPurchDocLine.SETFILTER(Type,'>0');
      ExfPurchDocLine.SETFILTER(Quantity,'<>0');
      ExfPurchDocLine.SETFILTER(ExfPurchDocLine."Line No.",'<>%1',"Line No.");

      ExfPurchDocLine.SetExfPurchDocHeader(ExfPurchDocHeader);
      ExfPurchDocLine.CalcVATAmountLines(0,ExfPurchDocHeader,ExfPurchDocLine,TempVATAmountLine0);
      ExfPurchDocLine.CalcVATAmountLines(1,ExfPurchDocHeader,ExfPurchDocLine,TempVATAmountLine1);
      ExfPurchDocLine.UpdateVATOnLines(0,ExfPurchDocHeader,ExfPurchDocLine,TempVATAmountLine0);
      ExfPurchDocLine.UpdateVATOnLines(1,ExfPurchDocHeader,ExfPurchDocLine,TempVATAmountLine1);
    END;

    PROCEDURE SetCurrency@1011303(CurrCode@1010007 : Code[10]);
    BEGIN
      AutoFormatCurrency := CurrCode;
    END;

    PROCEDURE OpenOrderCard@1100285003();
    VAR
      PurchaseHeader@1100285001 : Record 38;
      PurchaseOrder@1100285000 : Page 50;
    BEGIN
      IF "Order No." = '' THEN
        ERROR(Text001);

      PurchaseHeader.GET("Document Type"::Order,"Order No.");
      PurchaseOrder.SETRECORD(PurchaseHeader);
      PurchaseOrder.RUN;
    END;

    PROCEDURE GetReceipt@1100285000();
    BEGIN
      Rec.GetReceipt;
    END;

    PROCEDURE GetReturnShipment@1100285001();
    BEGIN
      Rec.GetReturnShipment;
    END;

    BEGIN
    END.
  }
}

