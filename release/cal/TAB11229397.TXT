OBJECT Table 11229397 Impl. Activity Element
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    DataCaptionFields=Description;
    CaptionML=ENU=Implementation Activity Element;
    LookupPageID=Page11125691;
    DrillDownPageID=Page11125691;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;OnValidate=BEGIN
                                                                CreateStandardElement(Code,Chapter,Paragraph,Level);
                                                                IF CurrFieldNo = FIELDNO(Code) THEN
                                                                  IF (xRec.Code <> '') AND (xRec.Code <> Code) THEN
                                                                    ERROR(Text000);  //db, 28-08-14: C017149
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 3   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 5   ;   ;Description Translation;Text30     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Impl. Act. Element Translation".Translation WHERE (Code=FIELD(Code),
                                                                                                                          Language Code=FIELD(FILTER(Language Filter))));
                                                   CaptionML=[ENU=Description Translation;
                                                              SVE=Beskrivning, ”vers„ttning];
                                                   Editable=No }
    { 10  ;   ;Level               ;Integer       ;CaptionML=[ENU=Level;
                                                              NOR=Niv†;
                                                              SVE=Niv†] }
    { 20  ;   ;Chapter             ;Code20        ;CaptionML=[ENU=Chapter;
                                                              NOR=Kapittel;
                                                              SVE=Kapitel] }
    { 30  ;   ;Paragraph           ;Code20        ;CaptionML=[ENU=Paragraph;
                                                              NOR=Avsnitt;
                                                              SVE=Stycke] }
    { 1000;   ;Start Date          ;Date          ;CaptionML=[ENU=Start Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum] }
    { 1010;   ;End Date            ;Date          ;CaptionML=[ENU=End Date;
                                                              NOR=Sluttdato;
                                                              SVE=Slutdatum] }
    { 1020;   ;Blocked             ;Boolean       ;CaptionML=[ENU=Blocked;
                                                              NOR=Sperret;
                                                              SVE=Sp„rrad] }
    { 1030;   ;Work Group          ;Code20        ;TableRelation="Impl. Activity Work Group";
                                                   CaptionML=[ENU=Work Group;
                                                              NOR=Arbeidsgruppe;
                                                              SVE=Arbetsgrupp] }
    { 2010;   ;No. Of Activities   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Impl. Activity" WHERE (Implementation Element=FIELD(Code)));
                                                   CaptionML=ENU=No. of Activities;
                                                   Editable=No }
    { 2020;   ;No. Of Open Activities;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("Impl. Activity" WHERE (Implementation Element=FIELD(Code),
                                                                                             Open=CONST(Yes)));
                                                   CaptionML=ENU=No. of Open Activities;
                                                   Editable=No }
    { 2030;   ;Subject             ;Code20        ;TableRelation="Impl. Activity Subject".Code WHERE (Type=CONST(Subject));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Subject Description");
                                                              END;

                                                   CaptionML=[ENU=Subject;
                                                              NOR=Emne;
                                                              SVE=Ang†ende] }
    { 2040;   ;Phase               ;Code20        ;TableRelation="Impl. Activity Subject".Code WHERE (Type=CONST(Phase));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Phase Description");
                                                              END;

                                                   CaptionML=[ENU=Phase;
                                                              NOR=Fase;
                                                              SVE=Fas] }
    { 2050;   ;Subject Description ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Impl. Activity Subject".Description WHERE (Type=CONST(Subject),
                                                                                                                  Code=FIELD(Subject)));
                                                   CaptionML=ENU=Subject Description;
                                                   Editable=No }
    { 2060;   ;Phase Description   ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Impl. Activity Subject".Description WHERE (Type=CONST(Phase),
                                                                                                                  Code=FIELD(Phase)));
                                                   CaptionML=[ENU=Phase Description;
                                                              NOR=Fasebeskrivelse;
                                                              SVE=Fasbeskrivning];
                                                   Editable=No }
    { 2070;   ;Language Filter     ;Code10        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Language Filter;
                                                              SVE=Spr†kfilter] }
    { 3000;   ;Status              ;Code20        ;TableRelation="Impl. Activity Status".Code WHERE (Type=CONST(Status));
                                                   OnValidate=VAR
                                                                ImplActivity@1100528200 : Record 11229390;
                                                              BEGIN
                                                                IF GUIALLOWED THEN
                                                                  IF CONFIRM(Text008, TRUE, ImplActivity.FIELDCAPTION(Status)) THEN BEGIN
                                                                    ImplActivity.SETCURRENTKEY("Implementation Element");
                                                                    ImplActivity.SETRANGE("Implementation Element",Code);
                                                                    IF ImplActivity.FINDSET(TRUE,FALSE) THEN
                                                                      REPEAT
                                                                        ImplActivity.VALIDATE(Status, Status);
                                                                        ImplActivity.MODIFY;
                                                                      UNTIL ImplActivity.NEXT = 0;
                                                                  END;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Status;
                                                              SVE=Status] }
    { 3010;   ;Status 4PS          ;Code20        ;TableRelation="Impl. Activity Status".Code WHERE (Type=CONST(Status 4PS));
                                                   OnValidate=VAR
                                                                ImplActivity@1100528200 : Record 11229390;
                                                              BEGIN
                                                                IF GUIALLOWED THEN
                                                                  IF CONFIRM(Text008, TRUE, ImplActivity.FIELDCAPTION("Status 4PS")) THEN BEGIN
                                                                    ImplActivity.SETCURRENTKEY("Implementation Element");
                                                                    ImplActivity.SETRANGE("Implementation Element",Code);
                                                                    IF ImplActivity.FINDSET(TRUE,FALSE) THEN
                                                                      REPEAT
                                                                        ImplActivity.VALIDATE("Status 4PS", "Status 4PS");
                                                                        ImplActivity.MODIFY;
                                                                      UNTIL ImplActivity.NEXT = 0;
                                                                  END;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Status 4PS }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Description,Description Translation }
  }
  CODE
  {
    VAR
      Frmt@1100529207 : Code[20];
      StartCode@1100529206 : Code[20];
      TempCode@1100529205 : Code[20];
      lp@1100529204 : Integer;
      sp1@1100529203 : Integer;
      sp2@1100529202 : Integer;
      sp3@1100529201 : Integer;
      x@1100529200 : Integer;
      Text000@1100529211 : TextConst 'ENU=%1 %2 does not exist;NOR=%1 %2 finnes ikke;SVE=%1 %2 finns inte.';
      Text006@1100529209 : TextConst 'ENU=Only 3 levels allowed;NOR=kun tre niv†er tillates;SVE=Endast tre niv†er till†ts';
      Text007@1100529208 : TextConst 'ENU=Code should not exceed format %1;NOR=Kodee kan ikke overskride Format %1;SVE=Kod f†r inte ”verstiga format %1';
      Text008@1100528200 : TextConst 'ENU=Update the %1 of the underlying activities?';

    PROCEDURE CreateStandardElement@16(VAR Element@11012000 : Code[20];VAR Chapter@11012001 : Code[20];VAR Paragraph@11012002 : Code[20];VAR Level@11012003 : Integer);
    VAR
      ImplActivityElement@11012004 : Record 11229397;
    BEGIN
      FormatElem(Element,0,'');
      DetermineLevel(Element,Chapter,Paragraph,Level);

      CASE Level OF
        1:IF NOT ImplActivityElement.GET(StartCode) THEN
            ERROR(Text000, ImplActivityElement.TABLECAPTION, StartCode);
        2:IF NOT ImplActivityElement.GET(Chapter) THEN
            ERROR(Text000, ImplActivityElement.TABLECAPTION, Chapter);
        3:IF NOT ImplActivityElement.GET(Paragraph) THEN
            ERROR(Text000, ImplActivityElement.TABLECAPTION, Paragraph);
      END;
    END;

    PROCEDURE FormatElem@5(VAR Element@11012000 : Code[20];SourceType@11012001 : Integer;CompName@1100485000 : Text[50]);
    VAR
      ImplActivitySetup@1100528600 : Record 11229389;
    BEGIN
      ImplActivitySetup.GET;
      ImplActivitySetup.TESTFIELD("Implementation Element Format");

      x := 0;
      sp1 := 0;
      sp2 := 0;
      sp3 := 0;
      StartCode := '';
      IF CompName = '' THEN CompName := COMPANYNAME;

      Frmt := ImplActivitySetup."Implementation Element Format";
      lp := STRLEN(Frmt);

      REPEAT
        x := x + 1;
        IF COPYSTR(Frmt,x,1) = '.' THEN BEGIN
          IF sp1 = 0 THEN
            sp1 := x
          ELSE
            IF sp2 = 0 THEN
              sp2 :=x
            ELSE
              ERROR(Text006);
          StartCode := StartCode + '.';
        END ELSE BEGIN
          StartCode := StartCode + '0';
        END;
      UNTIL x = lp;

      IF Element = '' THEN
        EXIT;

      //Verwijder punten
      WHILE STRPOS(Element,'.') > 0 DO
        Element := DELSTR(Element, STRPOS(Element,'.'),1);
      TempCode := StartCode;
      WHILE STRPOS(TempCode,'.') > 0 DO
        TempCode := DELSTR(TempCode, STRPOS(TempCode,'.'),1);

      //Test lengte
      IF STRLEN(Element) > STRLEN(TempCode) THEN
        ERROR(Text007, Frmt);

      //Voeg nullen toe
      Element := PADSTR(Element, lp, '0');

      //Voeg punten toe
      x := 0;
      TempCode := '';
      IF sp1 <> 0 THEN BEGIN
        x := sp1;
        TempCode := COPYSTR(Element, 1, sp1-1) + '.';
      END;
      IF sp2 <> 0 THEN BEGIN
        x := sp2 - 1;
        TempCode := TempCode + COPYSTR(Element, sp1, sp2-sp1-1) + '.';
      END;
      IF sp3 <> 0 THEN BEGIN
        x := sp3 - 2;
        TempCode := TempCode + COPYSTR(Element, sp2, sp3-sp2-1) + '.';
      END;
      IF (x > 1) AND (x < lp) THEN BEGIN
        TempCode := TempCode + COPYSTR(Element, x, lp-x);
        Element := COPYSTR(TempCode, 1, lp);
      END;
    END;

    PROCEDURE DetermineLevel@6(VAR Element@11012000 : Code[20];VAR Chapter@11012001 : Code[20];VAR Paragraph@11012002 : Code[20];VAR Level@11012003 : Integer);
    BEGIN
      IF COPYSTR(Element, 1, lp) = COPYSTR(StartCode, 1, lp) THEN
        Level := 0
      ELSE
        IF sp1 = 0 THEN
          Level := 1
        ELSE
          IF COPYSTR(Element, sp1+1, lp-sp1) = COPYSTR(StartCode, sp1+1, lp-sp1) THEN
            Level := 1
          ELSE
            IF sp2 = 0 THEN
              Level := 2
            ELSE
              IF COPYSTR(Element, sp2+1, lp-sp2) = COPYSTR(StartCode, sp2+1, lp-sp2) THEN
                Level := 2
              ELSE
                Level := 3;

      CASE Level OF
        0:BEGIN
            Chapter := '';
            Paragraph := '';
          END;
        1:BEGIN
            Chapter := Element;
            Paragraph := '';
          END;
        2,3:BEGIN
            IF sp2 <> 0 THEN BEGIN
              Chapter := COPYSTR(Element, 1, sp1) + COPYSTR(StartCode, sp1+1, lp-sp1);
              Paragraph := COPYSTR(Element, 1, sp2) + COPYSTR(StartCode, sp2+1, lp-sp2);
            END ELSE BEGIN
              Chapter := COPYSTR(Element, 1, sp1) + COPYSTR(StartCode, sp1+1, lp-sp1);
              Paragraph := '';
            END;
          END;
      END;
    END;

    BEGIN
    END.
  }
}

