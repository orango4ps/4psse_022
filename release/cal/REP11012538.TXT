OBJECT Report 11012538 Assign Summary to Option
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Endblatt der Option zuordnen;
               ENU=Assign Summary to Option;
               NLD=Staartblad aan optie toekennen;
               NOR=Tilordne sammendrag til alternativ;
               SVE=Tilldela sammandrag till alternativ];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  ValidateSummaryCode;
                END;

  }
  DATASET
  {
    { 6498;    ;DataItem;OptionRec           ;
               DataItemTable=Table11012502;
               DataItemTableView=SORTING(Project No.,Plot No.,House Model,Main Group,Group,Sub Group,Option);
               OnPreDataItem=BEGIN
                               FILTERGROUP(9);
                               CASE OptionLevel OF
                                 OptionLevel::Plot:
                                   BEGIN
                                     OptionRec.SETRANGE("Project No.", ProjectNo);  //* Only for one/this project
                                     OptionRec.SETFILTER("Plot No.", '<>%1', '');
                                   END;
                                 OptionLevel::Project:
                                   BEGIN
                                     OptionRec.SETRANGE("Project No.", ProjectNo);  //* Only for one/this project
                                     OptionRec.SETRANGE("Plot No.", '');
                                   END;
                                 OptionLevel::HouseModel:
                                   BEGIN
                                     OptionRec.SETRANGE("Project No.", '');
                                     OptionRec.SETRANGE("Plot No.", '');
                                     OptionRec.SETFILTER("House Model", '<>%1', '');
                                   END;
                               ELSE
                                 CurrReport.BREAK;
                               END;
                               FILTERGROUP(0);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF NOT SummaryPresent THEN
                                    CopySummary;
                                END;

               ReqFilterFields=Project No.,Plot No.,House Model,Main Group,Group,Sub Group,Option }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=VAR
                   Proj@1100528500 : Record 11072003;
                 BEGIN
                   ProcessType := ProcessType::Assign;
                   SummaryCode := '';
                   IF ProjectNo  <> '' THEN BEGIN
                     IF Proj.GET(ProjectNo) THEN
                       SummaryCode := Proj."Summary Sheet Option";
                   END;
                 END;

      OnQueryClosePage=BEGIN
                         IF CloseAction = ACTION::OK THEN
                           ValidateSummaryCode;
                       END;

    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=[DEU=Endblatt;
                             ENU=Summary;
                             NLD=Staartblad;
                             NOR=Sammendrag;
                             SVE=Sammanfattning];
                  NotBlank=Yes;
                  SourceExpr=SummaryCode;
                  TableRelation="Standard Summary Sheet" }

      { 1100528500;2;Field  ;
                  CaptionML=[DEU=Verarbeitungstyp;
                             ENU=Process Type;
                             NLD=Processoort;
                             SVE=Processtyp];
                  OptionCaptionML=[DEU=Zuweisen,Ersetzen und zuweisegn;
                                   ENU=Assign,Replace and Assign;
                                   NLD=Toekennen,Vervangen en toekennen];
                  SourceExpr=ProcessType }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ProcessType@1100528500 : 'Assign,Replace and Assign ';
      OptionLevel@1100528502 : 'Plot,Project,HouseModel';
      ProjectNo@1100528501 : Code[20];
      SummaryCode@1210190002 : Code[20];

    PROCEDURE SetSelections@1100528501(OptionLevelNo@1100528500 : Integer;ProjNo@1100528501 : Code[20]);
    BEGIN
      OptionLevel := OptionLevelNo - 1;
      IF OptionLevel <> OptionLevel::HouseModel THEN
        ProjectNo := ProjNo;
    END;

    LOCAL PROCEDURE ValidateSummaryCode@1100528500();
    VAR
      StandardSummarySheet@1100528500 : Record 11020236;
    BEGIN
      StandardSummarySheet.GET(SummaryCode);
      StandardSummarySheet.TESTFIELD(Summary);
    END;

    LOCAL PROCEDURE SummaryPresent@1210190000() : Boolean;
    VAR
      BudgetSummarySheet@1100528500 : Record 11012064;
    BEGIN
      WITH OptionRec DO BEGIN
        BudgetSummarySheet.SETRANGE("Project No.", "Project No.");
        BudgetSummarySheet.SETRANGE("Plot No.", "Plot No.");
        BudgetSummarySheet.SETRANGE("House Model", "House Model");
        BudgetSummarySheet.SETRANGE("Main Group", "Main Group");
        BudgetSummarySheet.SETRANGE(Group, Group);
        BudgetSummarySheet.SETRANGE("Sub Group", "Sub Group");
        BudgetSummarySheet.SETRANGE(Option, Option);
        IF NOT BudgetSummarySheet.ISEMPTY THEN BEGIN
          IF ProcessType <> ProcessType::"Replace and Assign " THEN
            EXIT(TRUE);
          BudgetSummarySheet.DELETEALL;
        END;
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE CopySummary@1210190001();
    VAR
      StandardSummaryLine@1210190002 : Record 11020237;
      BudgetSummarySheet@1210190001 : Record 11012064;
    BEGIN
      WITH OptionRec DO BEGIN
        StandardSummaryLine.SETRANGE(Summary, SummaryCode);
        IF StandardSummaryLine.FINDSET THEN BEGIN
          REPEAT
            BudgetSummarySheet.TRANSFERFIELDS(StandardSummaryLine);
            BudgetSummarySheet.Summary := '';
            BudgetSummarySheet.VALIDATE("Project No.", "Project No.");
            BudgetSummarySheet.VALIDATE("Plot No.", "Plot No.");
            BudgetSummarySheet.VALIDATE("House Model", "House Model");
            BudgetSummarySheet.VALIDATE("Main Group", "Main Group");
            BudgetSummarySheet.VALIDATE(Group, Group);
            BudgetSummarySheet.VALIDATE("Sub Group", "Sub Group");
            BudgetSummarySheet.VALIDATE(Option, Option);
            BudgetSummarySheet.INSERT(TRUE);
            BudgetSummarySheet.ReCalcOptionSummaryLines;
          UNTIL StandardSummaryLine.NEXT = 0 ;
          BudgetSummarySheet.UpdateOptBudgetLines();
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

