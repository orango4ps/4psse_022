OBJECT Codeunit 11012630 Mail Template Functions
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11020579;
    OnRun=VAR
            MailTemplateFunction@1100528300 : Record 11229464;
          BEGIN
            GenericTempTable.COPY(Rec);

            CASE GenericTempTable.Code1 OF
              UPPERCASE('ApproverGetNoOfOpenConsentLines'): ApproverGetNoOfOpenConsentLines;
              UPPERCASE('ApproverGetConsentHyperlink'): ApproverGetConsentHyperlink;
              UPPERCASE('AppUserGetCcaProxyUrl'): AppUserGetCcaProxyUrl;
              UPPERCASE('AppUserGetCcaProxyUrlAndroid'): AppUserGetCcaProxyUrlAndroid;
              UPPERCASE('AppUserGetPlaProxyUrl'): AppUserGetPlaProxyUrl;
              UPPERCASE('AppUserGetPlaProxyUrlAndroid'): AppUserGetPlaProxyUrlAndroid;
              UPPERCASE('CommentLineGetComment'): CommentLineGetComment;
              UPPERCASE('DebriefTextGetComment'): DebriefTextGetComment;
              UPPERCASE('FsaUserGetProxyUrl'): FsaUserGetProxyUrl;
              UPPERCASE('FsaUserGetProxyUrlAndroid'): FsaUserGetProxyUrlAndroid;
              UPPERCASE('GeneralAdvancedTextGetText'): GeneralAdvancedTextGetText;
              UPPERCASE('HourAccountingGetEmployeeNamesReportingDelay'): HourAccountingGetEmployeeNamesReportingDelay;
              UPPERCASE('HourAccountingGetWeekYearText'): HourAccountingGetWeekYearText;
              UPPERCASE('PlanningAgreementGetShortEndingTime'): PlanningAgreementGetShortEndingTime;
              UPPERCASE('PlanningAgreementGetShortStartingTime'): PlanningAgreementGetShortStartingTime;
              UPPERCASE('ProjectAuthorityGetContact'): ProjectAuthorityGetContact;
              UPPERCASE('ServiceOrderGetFullStartingDate'): ServiceOrderGetFullStartingDate;
              UPPERCASE('ServiceOrderGetPlanningAgreementCode'): ServiceOrderGetPlanningAgreementCode;
              UPPERCASE('ServiceTextGetComment'): ServiceTextGetComment;
              UPPERCASE('ServicePortalUserGetPassword'): ServicePortalUserGetPassword;
              UPPERCASE('SiteManagerHourAccountingGetWeekYear'): SiteManagerHourAccountingGetWeekYear;
              UPPERCASE('SiteManagerHourAccountingGetEmployeeNames'): SiteManagerHourAccountingGetEmployeeNames;
              UPPERCASE('SubcontractorPortalUserGetPassword'): SubcontractorPortalUserGetPassword;
              UPPERCASE('VendorPurchActionGetContact'): VendorPurchActionGetContact;
              UPPERCASE('WorkOrderTextGetComment'): WorkOrderTextGetComment;
              ELSE ERROR(FunctionNotDefinedTxt, GenericTempTable.Code1, MailTemplateFunction.TABLECAPTION);
            END;

            Rec := GenericTempTable;
          END;

  }
  CODE
  {
    VAR
      GenericTempTable@1100528300 : TEMPORARY Record 11020579;
      FunctionNotDefinedTxt@1100528301 : TextConst 'DEU=Funktion %1 ist ncht als %2 Funktion definiert.;ENU=Function %1 is not defined as %2 Function.;NLD=Functie %1 is niet gedefini‰erd als %2 functie.';
      MailTemplateManagement@1100528302 : Codeunit 11012622;
      CRLF@1100528303 : Text;

    LOCAL PROCEDURE ApproverGetNoOfOpenConsentLines@1100528302();
    VAR
      Approver@1100528300 : Record 11012229;
    BEGIN
      IF (NOT Approver.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      GenericTempTable.Text1 := FORMAT(Approver.GetNoOfOpenConsentLines);
    END;

    LOCAL PROCEDURE ApproverGetConsentHyperlink@1100528303();
    VAR
      Approver@1100528300 : Record 11012229;
    BEGIN
      IF (NOT Approver.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      GenericTempTable.Text1 := Approver.GetConsentHyperlink;
    END;

    LOCAL PROCEDURE AppUserGetCcaProxyUrl@1100528316();
    VAR
      AppUser@1100528300 : Record 11130031;
    BEGIN
      IF (NOT AppUser.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      GenericTempTable.Text1 := AppUser.GetCCAProxyUrl;
    END;

    LOCAL PROCEDURE AppUserGetCcaProxyUrlAndroid@1100528321();
    VAR
      AppUser@1100528300 : Record 11130031;
    BEGIN
      IF (NOT AppUser.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      GenericTempTable.Text1 := AppUser.GetCCAProxyUrlAndroid;
    END;

    LOCAL PROCEDURE AppUserGetPlaProxyUrl@1100528312();
    VAR
      AppUser@1100528300 : Record 11130031;
    BEGIN
      IF (NOT AppUser.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      GenericTempTable.Text1 := AppUser.GetPLAProxyUrl;
    END;

    LOCAL PROCEDURE AppUserGetPlaProxyUrlAndroid@1100528311();
    VAR
      AppUser@1100528300 : Record 11130031;
    BEGIN
      IF (NOT AppUser.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      GenericTempTable.Text1 := AppUser.GetPLAProxyUrlAndroid;
    END;

    LOCAL PROCEDURE CommentLineGetComment@1100528315();
    VAR
      CommentLine@1100528300 : Record 97;
      FullTextLine@1100528301 : Text;
      OStream@1100528302 : OutStream;
    BEGIN
      IF (NOT CommentLine.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      CommentLine.SETRECFILTER;
      CommentLine.SETRANGE("Line No.");
      IF (NOT CommentLine.FINDSET) THEN
        EXIT;

      FullTextLine := '';
      REPEAT
        ProcessTextLine(FullTextLine, CommentLine.Comment, CommentLine."Line Break");
      UNTIL (CommentLine.NEXT = 0);
      GenericTempTable.Blob1.CREATEOUTSTREAM(OStream);
      OStream.WRITE(FullTextLine);
    END;

    LOCAL PROCEDURE DebriefTextGetComment@1100528323();
    VAR
      DebriefText@1100528300 : Record 11012886;
      FullTextLine@1100528301 : Text;
      OStream@1100528302 : OutStream;
    BEGIN
      IF (NOT DebriefText.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      DebriefText.SETRECFILTER;
      DebriefText.SETRANGE("Line No.");
      IF (NOT DebriefText.FINDSET) THEN
        EXIT;

      FullTextLine := '';
      REPEAT
        ProcessTextLine(FullTextLine, DebriefText.Comment, TRUE);
      UNTIL (DebriefText.NEXT = 0);
      GenericTempTable.Blob1.CREATEOUTSTREAM(OStream);
      OStream.WRITE(FullTextLine);
    END;

    LOCAL PROCEDURE FsaUserGetProxyUrl@1100528308();
    VAR
      AppUserGAP@1100529300 : Record 11124975;
    BEGIN
      IF (NOT AppUserGAP.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      GenericTempTable.Text1 := AppUserGAP.GetFSAProxyUrl;
    END;

    LOCAL PROCEDURE FsaUserGetProxyUrlAndroid@1100528307();
    VAR
      AppUserGAP@1100529300 : Record 11124975;
    BEGIN
      IF (NOT AppUserGAP.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      GenericTempTable.Text1 := AppUserGAP.GetFSAProxyUrlAndroid;
    END;

    LOCAL PROCEDURE GeneralAdvancedTextGetText@1100528320();
    VAR
      GeneralAdvancedText@1100528300 : Record 11072231;
      FullTextLine@1100528301 : Text;
      OStream@1100528302 : OutStream;
    BEGIN
      IF (NOT GeneralAdvancedText.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      GeneralAdvancedText.SETRECFILTER;
      GeneralAdvancedText.SETRANGE(Type, GeneralAdvancedText.Type::External);
      GeneralAdvancedText.SETRANGE("Line No.");
      IF (NOT GeneralAdvancedText.FINDSET) THEN
        EXIT;

      FullTextLine := '';
      REPEAT
        ProcessTextLine(FullTextLine, GeneralAdvancedText.Text, GeneralAdvancedText."Line Break");
      UNTIL (GeneralAdvancedText.NEXT = 0);
      GenericTempTable.Blob1.CREATEOUTSTREAM(OStream);
      OStream.WRITE(FullTextLine);
    END;

    LOCAL PROCEDURE HourAccountingGetEmployeeNamesReportingDelay@1100528310();
    VAR
      HourAccounting@1100528300 : Record 11012038;
    BEGIN
      IF (NOT HourAccounting.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      GenericTempTable.Text1 := HourAccounting.GetEmployeeNamesReportingDelay;
    END;

    LOCAL PROCEDURE HourAccountingGetWeekYearText@1100528309();
    VAR
      HourAccounting@1100528300 : Record 11012038;
    BEGIN
      IF (NOT HourAccounting.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      GenericTempTable.Text1 := HourAccounting.GetWeekYearText;
    END;

    LOCAL PROCEDURE PlanningAgreementGetShortEndingTime@1100528306();
    VAR
      PlanningAgreement@1100528300 : Record 11071729;
      ServiceOrder@1100528301 : Record 11012823;
      WorkOrder@1100528302 : Record 11229279;
      RecId@1100528303 : RecordID;
    BEGIN
      RecId := GenericTempTable.RecId1;
      CASE RecId.TABLENO OF
        DATABASE::"Service Order": BEGIN
          IF (NOT ServiceOrder.GET(RecId)) THEN
            EXIT;
          PlanningAgreement.GetPlanningAgreement(ServiceOrder."Starting Time");
        END;
        DATABASE::"Work Order": BEGIN
          IF (NOT WorkOrder.GET(RecId)) THEN
            EXIT;
          IF (WorkOrder."Starting Date/Time" = 0DT) THEN
            EXIT;
          PlanningAgreement.GetPlanningAgreement(DT2TIME(WorkOrder."Starting Date/Time"));
        END;
      END;
      GenericTempTable.Text1 := PlanningAgreement.GetShortEndingTime(GenericTempTable.Int2);
    END;

    LOCAL PROCEDURE PlanningAgreementGetShortStartingTime@1100528305();
    VAR
      PlanningAgreement@1100528300 : Record 11071729;
      ServiceOrder@1100528302 : Record 11012823;
      WorkOrder@1100528301 : Record 11229279;
      RecId@1100528303 : RecordID;
    BEGIN
      RecId := GenericTempTable.RecId1;
      CASE RecId.TABLENO OF
        DATABASE::"Service Order": BEGIN
          IF (NOT ServiceOrder.GET(RecId)) THEN
            EXIT;
          PlanningAgreement.GetPlanningAgreement(ServiceOrder."Starting Time");
        END;
        DATABASE::"Work Order": BEGIN
          IF (NOT WorkOrder.GET(RecId)) THEN
            EXIT;
          IF (WorkOrder."Starting Date/Time" = 0DT) THEN
            EXIT;
          PlanningAgreement.GetPlanningAgreement(DT2TIME(WorkOrder."Starting Date/Time"));
        END;
      END;
      GenericTempTable.Text1 := PlanningAgreement.GetShortStartingTime(GenericTempTable.Int2);
    END;

    LOCAL PROCEDURE ProjectAuthorityGetContact@1100528300();
    VAR
      ProjectAuthority@1100528301 : Record 11020216;
    BEGIN
      IF (NOT ProjectAuthority.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      IF (ProjectAuthority."Contact Person No." <> '') THEN
        GenericTempTable.Text1 := ProjectAuthority."Contact Person No."
      ELSE
        GenericTempTable.Text1 := ProjectAuthority."Contact No.";
    END;

    LOCAL PROCEDURE ServiceOrderGetFullStartingDate@1100528304();
    VAR
      ServiceOrder@1100528300 : Record 11012823;
    BEGIN
      IF (NOT ServiceOrder.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      GenericTempTable.Text1 := ServiceOrder.GetFullStartingDate(GenericTempTable.Int2);
    END;

    LOCAL PROCEDURE ServiceOrderGetPlanningAgreementCode@1100528319();
    VAR
      PlanningAgreement@1100528300 : Record 11071729;
      ServiceOrder@1100528301 : Record 11012823;
    BEGIN
      IF (NOT ServiceOrder.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      GenericTempTable.Text1 := PlanningAgreement.GetPlanningAgreementCode(ServiceOrder."Starting Time");
    END;

    LOCAL PROCEDURE ServicePortalUserGetPassword@1100528318();
    VAR
      ServPortUser@1100528300 : Record 11126063;
    BEGIN
      IF (NOT ServPortUser.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      GenericTempTable.Text1 := ServPortUser."Tmp Password";

      ServPortUser."Tmp Password" := '';
      ServPortUser.MODIFY;
    END;

    LOCAL PROCEDURE ServiceTextGetComment@1100528322();
    VAR
      ServiceText@1100528300 : Record 11012882;
      FullTextLine@1100528302 : Text;
      OStream@1100528301 : OutStream;
    BEGIN
      IF (NOT ServiceText.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      ServiceText.SETRECFILTER;
      ServiceText.SETRANGE("Line No.");
      IF (NOT ServiceText.FINDSET) THEN
        EXIT;

      FullTextLine := '';
      REPEAT
        ProcessTextLine(FullTextLine, ServiceText.Comment, ServiceText."Line Break");
      UNTIL (ServiceText.NEXT = 0);
      GenericTempTable.Blob1.CREATEOUTSTREAM(OStream);
      OStream.WRITE(FullTextLine);
    END;

    LOCAL PROCEDURE SiteManagerHourAccountingGetWeekYear@1100528313();
    VAR
      SiteMngmntHoursHeader@1100528300 : Record 11012360;
    BEGIN
      IF (NOT SiteMngmntHoursHeader.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      GenericTempTable.Text1 := SiteMngmntHoursHeader.GetWeekYearText;
    END;

    LOCAL PROCEDURE SiteManagerHourAccountingGetEmployeeNames@1100528314();
    VAR
      SiteMngmntHoursHeader@1100528300 : Record 11012360;
    BEGIN
      IF (NOT SiteMngmntHoursHeader.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      GenericTempTable.Text1 := SiteMngmntHoursHeader.GetEmployeeNamesReportingDelay;
    END;

    LOCAL PROCEDURE SubcontractorPortalUserGetPassword@1100528317();
    VAR
      SubcontPortUser@1100528300 : Record 11126401;
    BEGIN
      IF (NOT SubcontPortUser.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      GenericTempTable.Text1 := SubcontPortUser."Tmp Password";

      SubcontPortUser."Tmp Password" := '';
      SubcontPortUser.MODIFY;
    END;

    LOCAL PROCEDURE VendorPurchActionGetContact@1100528301();
    VAR
      Contact@1100528300 : Record 5050;
      VendorsbyPurchaseAction@1100528301 : Record 11012068;
    BEGIN
      IF (NOT VendorsbyPurchaseAction.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      IF (VendorsbyPurchaseAction.Type = VendorsbyPurchaseAction.Type::Vendor) THEN BEGIN
        Contact.GetContactByVendor(VendorsbyPurchaseAction."Vendor No.", Contact, FALSE);
        GenericTempTable.Text1 := Contact."No.";
      END ELSE
        GenericTempTable.Text1 := VendorsbyPurchaseAction."Vendor No.";
    END;

    LOCAL PROCEDURE WorkOrderTextGetComment@1100528326();
    VAR
      WorkOrderText@1100528300 : Record 11229284;
      FullTextLine@1100528301 : Text;
      OStream@1100528302 : OutStream;
    BEGIN
      IF (NOT WorkOrderText.GET(GenericTempTable.RecId1)) THEN
        EXIT;
      WorkOrderText.SETRECFILTER;
      WorkOrderText.SETRANGE("Line No.");
      IF (NOT WorkOrderText.FINDSET) THEN
        EXIT;

      FullTextLine := '';
      REPEAT
        ProcessTextLine(FullTextLine, WorkOrderText.Comment, WorkOrderText."Line Break");
      UNTIL (WorkOrderText.NEXT = 0);
      GenericTempTable.Blob1.CREATEOUTSTREAM(OStream);
      OStream.WRITE(FullTextLine);
    END;

    LOCAL PROCEDURE "---Locals---"@1100528324();
    BEGIN
    END;

    LOCAL PROCEDURE ProcessTextLine@1100528325(VAR FullTextLine@1100528300 : Text;TextLine@1100528301 : Text;LineBreak@1100528302 : Boolean);
    BEGIN
      IF (CRLF = '') THEN
        CRLF := MailTemplateManagement.GetCRLF;

      FullTextLine += TextLine;
      IF (LineBreak) THEN
        FullTextLine += CRLF
      ELSE BEGIN
        IF (TextLine <> '') THEN
          FullTextLine += ' ';
      END;
    END;

    BEGIN
    {
      *****************************
      **NOTE: Rec is Temporary !!**
      *****************************

      Standard Input:
       Mandatory:
        Rec.Code1 = FuctionName
        Rec.Int1 = Output Type
        Rec.RecId1 = Base Table RecordId
       Optional:
        Rec.Int2 = Language Id
        Rec.Code2 = Language Code

      Standard Output:
        IF Option1 = 1 THEN
          Rec.Blob1
        ELSE
          Rec.Text1
    }
    END.
  }
}

