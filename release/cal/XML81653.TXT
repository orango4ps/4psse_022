OBJECT XMLport 81653 Imp. CustContact
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS7.00Toolsv1.MC;
  }
  PROPERTIES
  {
    DefaultFieldsValidation=No;
    Format/Evaluate=C/SIDE Format/Evaluate;
    PreserveWhiteSpace=Yes;
    OnInitXMLport=BEGIN
                    XMLNo := 81653;
                    MainTableID := 5050;
                  END;

    OnPreXMLport=VAR
                   FileManagement@1100525001 : Codeunit 419;
                 BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   ConversionXMLPort.GET(XMLNo);

                   //ConvMgt.CheckComCde(LookupJobNo,11072003,JobCommentCde);
                   //ConvMgt.CheckComCde(LookupJobNo,18,CustCommentCde);

                   ConvMgt.DeleteConComment(XMLNo);
                   ConvMgt.CreateConComment(XMLNo,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XMLNo,'Start');
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XMLNo,'Stop');
                    ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{7B539476-C20A-46BC-A552-62FED55766AD}];  ;Root                ;Element ;Text     }

    { [{A667E51D-CE85-4A0D-946E-DE2CCC52ED51}];1 ;Contact             ;Element ;Table   ;
                                                  SourceTable=Table5050;
                                                  SourceTableView=SORTING(Field1);
                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 lvFADeprBookRec@1100525001 : Record 5612;
                                                                                 lvGenJnlLineRec@1100525000 : Record 81;
                                                                                 lvDec@1100285000 : Decimal;
                                                                                 lvLineNo@1100285001 : Integer;
                                                                               BEGIN
                                                                                 IF A = '' THEN
                                                                                   currXMLport.SKIP;

                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR(Contact);


                                                                                 WITH Contact DO BEGIN
                                                                                   Contact.VALIDATE("No.",CreatePerson(''));
                                                                                   VALIDATE("First Name",A);
                                                                                   VALIDATE(Surname,B);
                                                                                   VALIDATE(Type,Contact.Type::Person);
                                                                                   VALIDATE(Address,C);
                                                                                   VALIDATE("Post Code",D);
                                                                                   VALIDATE(City,E);
                                                                                   VALIDATE("Phone No.",F);
                                                                                   VALIDATE("Mobile Phone No.",G);
                                                                                   VALIDATE("E-Mail",H);
                                                                                   MODIFY(TRUE);
                                                                                   Contact2.SETRANGE("COC Registration No.",I);
                                                                                   IF Contact2.COUNT = 1 THEN
                                                                                     IF Contact2.FINDFIRST THEN BEGIN
                                                                                       Contact.CreateContactPerson(Contact2."Company No.",Contact2."No.",Contact."No.");
                                                                                     END;
                                                                                   MODIFY(TRUE);

                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{3AC77EC7-9326-4B76-BA5F-EA1F70D4DA67}];2 ;A                   ;Element ;Text    ;
                                                  Width=20 }

    { [{1B889F9B-B9E2-4749-96B0-D22BA1117049}];2 ;B                   ;Element ;Text    ;
                                                  Width=50 }

    { [{CE22C59B-1AB0-479B-983C-0592AB64AF92}];2 ;C                   ;Element ;Text     }

    { [{C7EB8114-3594-4B0B-891A-25B32EB6E9AB}];2 ;D                   ;Element ;Text     }

    { [{A2119947-07C8-4440-8397-17228305D09E}];2 ;E                   ;Element ;Text     }

    { [{DC30892F-2678-4B7A-981E-397DE9F893B6}];2 ;F                   ;Element ;Text     }

    { [{3BEF7BBB-E605-460B-94D2-D7E5B38C06A0}];2 ;G                   ;Element ;Text     }

    { [{48D2BC8E-BC18-475E-973D-F6D182C1FA55}];2 ;H                   ;Element ;Text     }

    { [{79C93D14-F4EB-4B0E-8A49-FEF16A5B6C39}];2 ;I                   ;Element ;Text     }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                   CreateNewNosBln := TRUE;
                 END;

    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      "// GENERAL"@1100525034 : Integer;
      CommentRec@1100525033 : Record 97;
      ConvMgt@1100525032 : Codeunit 11020212;
      NoSerieMgt@1100525031 : Codeunit 396;
      XMLNo@1100525028 : Integer;
      MainTableID@1100525027 : Integer;
      CreateNewNosBln@1100525026 : Boolean;
      ImpLineCounter@1100525025 : Integer;
      CommentCde@1100525024 : Code[10];
      ConversionFileFormat@1100525023 : Record 11020691;
      RunIsImportRunBln@1100525022 : Boolean;
      ConversionXMLPort@1100525002 : Record 11020640;
      PostingDateFromImportFile@1100525001 : Boolean;
      "//"@1100525020 : Integer;
      "// THIS DATAPORT"@1100525019 : Integer;
      Text001@1100525036 : TextConst 'ENU=OPENING;NLD=BEGINSTAND;SVE=™PPNAR';
      Text002@1100525035 : TextConst 'ENU=Acquisition Cost;NLD=Aanschafwaarde;SVE=Redov.integration-anskaff.kost';
      Text003@1100525030 : TextConst 'ENU=Cumulative Depreciation;NLD=Cumulatieve afschrijving;SVE=Ackumulerad avskrivning';
      LookupJobNo@1100285001 : Boolean;
      JobCommentCde@1100285000 : Code[20];
      LookupCustomerNo@1100285005 : Boolean;
      CustCommentCde@1100285004 : Code[20];
      ProjCde@1100285002 : Code[20];
      SettlementSheet@1100285003 : Record 11012021;
      CustCde@1100285006 : Code[20];
      CommissionRec@1100285007 : Record 11012020;
      DInt@1100285500 : Integer;
      EDec@1100285501 : Decimal;
      ProjPrincRec@1100285502 : Record 11012005;
      Contact2@1100285503 : Record 5050;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    VAR
      FADepriationBook@1100529900 : Record 5612;
      GenJnlLine@1100529901 : Record 81;
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,Contact.FIELDNAME("First Name"),'Text30','');
        InsertColumnLine(XMLNo,'B',MainTableID,Contact.FIELDNAME(Surname),'Text50','');
        InsertColumnLine(XMLNo,'C',MainTableID,Contact.FIELDNAME(Address),'Text50','');
        InsertColumnLine(XMLNo,'D',MainTableID,Contact.FIELDNAME("Post Code"),'Code20','');
        InsertColumnLine(XMLNo,'E',MainTableID,Contact.FIELDNAME(City),'Text30','');
        InsertColumnLine(XMLNo,'F',MainTableID,Contact.FIELDNAME("Phone No."),'Text30','');
        InsertColumnLine(XMLNo,'G',MainTableID,Contact.FIELDNAME("Mobile Phone No."),'Text30','');
        InsertColumnLine(XMLNo,'H',MainTableID,Contact.FIELDNAME("E-Mail"),'Text80','');
        InsertColumnLine(XMLNo,'I',MainTableID,Contact.FIELDNAME("COC Registration No."),'Text50','');

      END;
    END;

    PROCEDURE ClearFields@1100529902();
    BEGIN
      CLEAR(Contact);
      CLEAR(Contact2);
      A := '';
      B := '';
      C := '';
      D := '';
      E := '';
      F := '';
      G := '';
      H := '';
      I := '';
    END;

    PROCEDURE FillConversionXMLPortFields@1100409004();
    VAR
      ConversionXMLPort@1100409000 : Record 11020640;
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      ConversionXMLPort."Main Table ID" := MainTableID;
      ConversionXMLPort.MODIFY;
    END;

    BEGIN
    END.
  }
}

