OBJECT Codeunit 11012870 Service Order Mgt
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1100525000 : TextConst 'DEU=Offen,,In Bearbeitung,Technisch abgeslossen,Administration abgeschlossen,,FÑllig;ENU=Open,,In Process,Technical Finished,Administrative Finished,,Cancelled;NLD=Openstaand,,In uitvoering,Technisch gereed,Administratief gereed,,Vervallen;NOR=èpen,,PÜgÜr,Teknisk ferdig,Administrativt ferdig,,Kansellert;SVE=ôppen,,PÜgÜr,Tekniskt fÑrdig,Administrativt fÑrdig,,Avbruten';

    PROCEDURE UpdateServiceOrderStatus@1100525000(VAR IServiceOrder@1100525000 : Record 11012823);
    VAR
      ServiceOrder@1100525001 : Record 11012823;
      Selection@1100525002 : Integer;
      ServiceOrder2@1100525003 : Record 11012823;
    BEGIN
      ServiceOrder.COPY(IServiceOrder);
      IF NOT ServiceOrder.ISEMPTY THEN BEGIN
        Selection := STRMENU(Text001, 0);
        IF Selection = 0 THEN EXIT;
        IF ServiceOrder.FINDSET(TRUE, FALSE) THEN BEGIN
          ServiceOrder.SetMultipleAnswerStatusChange;
          REPEAT
            IF ServiceOrder.Status = ServiceOrder.Status::Finished THEN
              ServiceOrder.FIELDERROR(Status);
            ServiceOrder2.COPY(ServiceOrder);
            ServiceOrder2.StatusOnBeforeValidate;
            ServiceOrder2.VALIDATE(Status, Selection -1);
            ServiceOrder2.MODIFY(TRUE);
            COMMIT;
          UNTIL ServiceOrder.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE ShowHourAccounting@1100529600(ServiceOrderNo@1100529603 : Code[20]);
    VAR
      UserSetup@1100529601 : Record 91;
      HourAccounting@1100529602 : Record 11012038;
    BEGIN
      UserSetup.GET(USERID);
      UserSetup.TESTFIELD("Employee No.");

      CreateOrFindHourAccounting(HourAccounting, DATE2DWY(WORKDATE, 3), DATE2DWY(WORKDATE, 2), UserSetup."Employee No.", ServiceOrderNo);
      PAGE.RUNMODAL(PAGE::"Hour Accounting", HourAccounting);
    END;

    LOCAL PROCEDURE CreateOrFindHourAccounting@1100529606(VAR HourAccounting@1100529609 : Record 11012038;LocYear@1100529607 : Integer;LocWeek@1100529606 : Integer;LocEmployeeNo@1100529600 : Code[20];LocServiceOrderNo@1100529602 : Code[20]);
    VAR
      HourAccountingLine@1100529603 : Record 11012039;
      HourAccountingLineNo@1100529601 : Integer;
    BEGIN
      IF HourAccounting.GET(LocYear, LocWeek, LocEmployeeNo) THEN BEGIN
        HourAccountingLine.SETRANGE(Year, LocYear);
        HourAccountingLine.SETRANGE(Week, LocWeek);
        HourAccountingLine.SETRANGE("Employee No.", LocEmployeeNo);
        HourAccountingLine.SETRANGE(Type, HourAccountingLine.Type::Service);
        HourAccountingLine.SETRANGE("Service Order No.", LocServiceOrderNo);
        IF NOT HourAccountingLine.ISEMPTY THEN
          EXIT;
        HourAccountingLine.SETRANGE(Type);
        HourAccountingLine.SETRANGE("Service Order No.");
        HourAccountingLine.SETCURRENTKEY(Year, Week, "Employee No.", "Line No.");
        IF HourAccountingLine.FINDLAST THEN
          HourAccountingLineNo := HourAccountingLine."Line No.";
      END ELSE BEGIN
        HourAccounting.INIT;
        HourAccounting.VALIDATE(Year, LocYear);
        HourAccounting.VALIDATE(Week, LocWeek);
        HourAccounting.VALIDATE("Employee No.", LocEmployeeNo);
        HourAccounting.INSERT(TRUE);
      END;

      CLEAR(HourAccountingLine);
      HourAccountingLine.Year := LocYear;
      HourAccountingLine.Week := LocWeek;
      HourAccountingLine.VALIDATE("Employee No.", LocEmployeeNo);
      HourAccountingLine."Line No." := HourAccountingLineNo + 10000;
      HourAccountingLine.INSERT(TRUE);
      HourAccountingLine.Type := HourAccountingLine.Type::Service;
      HourAccountingLine.VALIDATE("Service Order No.", LocServiceOrderNo);
      HourAccountingLine.MODIFY(TRUE);
      COMMIT;
    END;

    BEGIN
    END.
  }
}

