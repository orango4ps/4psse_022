OBJECT Table 11012744 Alternative Trade Item
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF NOT ISTEMPORARY THEN
                 ERROR('');
             END;

    CaptionML=ENU=Alternative Trade Item;
  }
  FIELDS
  {
    { 10  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 20  ;   ;Item Code           ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD(Vendor));
                                                   CaptionML=[ENU=Item Code;
                                                              NOR=Artikkelkode;
                                                              SVE=Artikelkod] }
    { 25  ;   ;Original Item Code  ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD(Original Vendor));
                                                   CaptionML=ENU=Original Item Code }
    { 27  ;   ;Original Unit of Measure Code;Code10;
                                                   TableRelation="Unit of Measure".Code;
                                                   CaptionML=ENU=Original Unit of Measure Code }
    { 30  ;   ;Vendor              ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   CaptionML=[ENU=Vendor;
                                                              NOR=Leverand›r;
                                                              SVE=Leverant”r] }
    { 35  ;   ;Original Vendor     ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   CaptionML=ENU=Original Vendor }
    { 40  ;   ;Item Description    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Trade Item"."Item Description" WHERE (Vendor=FIELD(Vendor),
                                                                                                             Item Code=FIELD(Item Code)));
                                                   CaptionML=[ENU=Item Description;
                                                              NOR=Artikkelbeskrivelse;
                                                              SVE=Artikelbeskrivning];
                                                   Editable=No }
    { 50  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal] }
    { 55  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod] }
    { 60  ;   ;Price               ;Decimal       ;CaptionML=[ENU=Price;
                                                              NOR=Pris;
                                                              SVE=Pris];
                                                   AutoFormatType=2 }
    { 65  ;   ;Price (FCY)         ;Decimal       ;CaptionML=ENU=Price (FCY);
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Currency Code" }
    { 70  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp];
                                                   AutoFormatType=1 }
    { 75  ;   ;Amount (FCY)        ;Decimal       ;CaptionML=ENU=Amount (FCY);
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 80  ;   ;Alternative Item Code;Code20       ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD(Alternative Vendor));
                                                   CaptionML=ENU=Alternative Item Code }
    { 90  ;   ;Alternative Vendor  ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   CaptionML=[ENU=Alternative Vendor;
                                                              NOR=Alternativ leverand›r;
                                                              SVE=Alternativ leverant”r] }
    { 100 ;   ;Alternative Price   ;Decimal       ;CaptionML=[ENU=Alternative Price;
                                                              NOR=Alternativpris;
                                                              SVE=Alternativpris];
                                                   AutoFormatType=2 }
    { 105 ;   ;Alternative Price (FCY);Decimal    ;CaptionML=ENU=Alternative Price (FCY);
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Currency Code" }
    { 110 ;   ;Alternative Amount  ;Decimal       ;CaptionML=ENU=Alternative Amount;
                                                   AutoFormatType=1 }
    { 115 ;   ;Alternative Amount (FCY);Decimal   ;CaptionML=ENU=Alternative Amount (FCY);
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 120 ;   ;Source Record ID    ;RecordID      ;CaptionML=[ENU=Source Record ID;
                                                              NOR=Kildepost-ID;
                                                              SVE=K„llpost-ID] }
    { 125 ;   ;Source Record is Compressed;Boolean;CaptionML=ENU=Source Record is Compressed }
    { 130 ;   ;No. of Alternative Trade Items;Integer;
                                                   OnLookup=BEGIN
                                                              ShowAlternativeItems;
                                                            END;

                                                   CaptionML=ENU=No. of Alternative Trade Items }
  }
  KEYS
  {
    {    ;Line No.                                ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      UpdateAction@1100528400 : 'Fill Alternative with Lowest Price,Fill Alternative with Lowest Price of Vendor,Fill Alternative,Fill Actual';

    PROCEDURE CreateAlternativeTradeItem@1100528415(LineNo@1100528401 : Integer;ItemCode@1100528400 : Code[20];UnitOfMeasureCode@1100528408 : Code[10];Vendor2@1100528402 : Code[15];Quantity2@1100528403 : Decimal;CurrencyCode@1100528410 : Code[10];Price2@1100528404 : Decimal;PriceFCY@1100528411 : Decimal;Amount2@1100528405 : Decimal;AmountFCY@1100528412 : Decimal;SourceRecID@1100528406 : RecordID;SourceRecIsCompressed@1100528409 : Boolean);
    VAR
      ItemSetup@1100528407 : Record 11012300;
    BEGIN
      IF (ItemCode = '') OR (Vendor2 = '') THEN
        EXIT;

      "Line No." := LineNo;
      "Item Code" := ItemCode;
      "Original Item Code" := ItemCode;
      "Original Unit of Measure Code" := UnitOfMeasureCode;
      Vendor := Vendor2;
      "Original Vendor" := Vendor2;
      Quantity := Quantity2;
      "Currency Code" := CurrencyCode;
      Price := Price2;
      "Price (FCY)" := PriceFCY;
      Amount := Amount2;
      "Amount (FCY)" := AmountFCY;
      "Source Record ID" := SourceRecID;
      "Source Record is Compressed" := SourceRecIsCompressed;
      "Alternative Item Code" := "Item Code";
      "Alternative Vendor" := Vendor;
      "Alternative Price" := Price;
      "Alternative Price (FCY)" := "Price (FCY)";
      "Alternative Amount" := Amount;
      "Alternative Amount (FCY)" := "Amount (FCY)";
      INSERT(TRUE);
      ItemSetup.GET;
      DetermineLowestPriceAlternative(FALSE, '', "No. of Alternative Trade Items");
      MODIFY(TRUE);
    END;

    LOCAL PROCEDURE DetermineLowestPriceAlternative@1100528400(SpecificVendor@1100528402 : Boolean;VendorNo@1100528403 : Code[15];VAR NoOfAlternativeTradeItems@1100528406 : Integer);
    VAR
      TradeItem@1100528400 : Record 11012317;
      TempTradeItem@1100528401 : TEMPORARY Record 11012317;
      UpdateAlternativeTradeItem@1100528404 : Codeunit 11012309;
      UpdateAction2@1100528405 : Integer;
    BEGIN
      TradeItem.GET("Original Vendor", "Original Item Code");
      TradeItem.GetAlternativeTradeItems(TempTradeItem);
      IF SpecificVendor THEN BEGIN
        TempTradeItem.SETRANGE(Vendor, VendorNo);
        UpdateAction2 := UpdateAction::"Fill Alternative with Lowest Price of Vendor"
      END ELSE
        UpdateAction2 := UpdateAction::"Fill Alternative with Lowest Price";
      IF TempTradeItem.FINDSET THEN
        REPEAT
          UpdateAlternativeTradeItem.SetVariables(UpdateAction2, TempTradeItem);
          IF UpdateAlternativeTradeItem.RUN(Rec) THEN;
        UNTIL TempTradeItem.NEXT = 0;
      NoOfAlternativeTradeItems := TempTradeItem.COUNT;
    END;

    PROCEDURE ActualItemChanged@1100528404() : Boolean;
    BEGIN
      IF "Item Code" <> "Original Item Code" THEN
        EXIT(TRUE);
      IF Vendor <> "Original Vendor" THEN
        EXIT(TRUE);
    END;

    PROCEDURE CopyAlternativeItemsToActualItems@1100528402();
    VAR
      TradeItem@1100528401 : Record 11012317;
      UpdateAlternativeTradeItem@1100528400 : Codeunit 11012309;
    BEGIN
      IF FINDSET THEN
        REPEAT
          TradeItem.GET("Alternative Vendor", "Alternative Item Code");
          UpdateAlternativeTradeItem.SetVariables(
            UpdateAction::"Fill Actual", TradeItem);
          IF UpdateAlternativeTradeItem.RUN(Rec) THEN;
        UNTIL NEXT = 0;
    END;

    PROCEDURE UndoChangesOfActualItems@1100528407();
    VAR
      TradeItem@1100528401 : Record 11012317;
      UpdateAlternativeTradeItem@1100528400 : Codeunit 11012309;
    BEGIN
      IF FINDSET THEN
        REPEAT
          TradeItem.GET("Original Vendor", "Original Item Code");
          UpdateAlternativeTradeItem.SetVariables(
            UpdateAction::"Fill Actual", TradeItem);
          IF UpdateAlternativeTradeItem.RUN(Rec) THEN;
        UNTIL NEXT = 0;
    END;

    PROCEDURE GetLowestPriceAlternativeItems@1100528403();
    VAR
      NoOfAlternativeTradeItems@1100528400 : Integer;
    BEGIN
      IF FINDSET THEN
        REPEAT
          DetermineLowestPriceAlternative(FALSE, '', NoOfAlternativeTradeItems);
        UNTIL NEXT = 0;
    END;

    PROCEDURE GetLowestPriceAlternativeItemsForSpecificVendor@1100528405(VendorNo@1100528400 : Code[15]);
    VAR
      NoOfAlternativeTradeItems@1100528401 : Integer;
    BEGIN
      IF FINDSET THEN
        REPEAT
          DetermineLowestPriceAlternative(TRUE, VendorNo, NoOfAlternativeTradeItems);
        UNTIL NEXT = 0;
    END;

    LOCAL PROCEDURE ShowAlternativeItems@1100528414();
    BEGIN
      FindAlternativeItem(TRUE);
    END;

    PROCEDURE FindAlternativeItem@1100528408(ReadOnly@1100528401 : Boolean);
    VAR
      TradeItem@1100528400 : Record 11012317;
      TempTradeItem@1100528402 : TEMPORARY Record 11012317;
    BEGIN
      TradeItem.GET("Original Vendor", "Original Item Code");
      TradeItem.GetAlternativeTradeItems(TempTradeItem);
      HandleLookupOfAlternativeItem(TempTradeItem, ReadOnly);
    END;

    PROCEDURE FindAlternativeItemOnGTINCodeItem@1100528409();
    VAR
      TradeItem@1100528400 : Record 11012317;
      TempTradeItem@1100528402 : TEMPORARY Record 11012317;
    BEGIN
      TradeItem.GET("Original Vendor", "Original Item Code");
      TradeItem.GetAlternativeTradeItemsWithinGTINCodeItemFilter(TempTradeItem);
      HandleLookupOfAlternativeItem(TempTradeItem, FALSE);
    END;

    PROCEDURE FindAlternativeItemOnProductCode@1100528410();
    VAR
      TradeItem@1100528400 : Record 11012317;
      TempTradeItem@1100528402 : TEMPORARY Record 11012317;
    BEGIN
      TradeItem.GET("Original Vendor", "Original Item Code");
      TradeItem.GetAlternativeTradeItemsWithinProductCodeFilter(TempTradeItem);
      HandleLookupOfAlternativeItem(TempTradeItem, FALSE);
    END;

    PROCEDURE FindAlternativeItemOnBasicItem@1100528411();
    VAR
      TradeItem@1100528400 : Record 11012317;
      TempTradeItem@1100528402 : TEMPORARY Record 11012317;
    BEGIN
      TradeItem.GET("Original Vendor", "Original Item Code");
      TradeItem.GetAlternativeTradeItemsWithinBasicItemFilter(TempTradeItem);
      HandleLookupOfAlternativeItem(TempTradeItem, FALSE);
    END;

    PROCEDURE FindAlternativeItemOnItemRelation@1100528412();
    VAR
      TradeItem@1100528400 : Record 11012317;
      TempTradeItem@1100528402 : TEMPORARY Record 11012317;
    BEGIN
      TradeItem.GET("Original Vendor", "Original Item Code");
      TradeItem.GetAlternativeTradeItemsWithinItemRelationFilter(TempTradeItem);
      HandleLookupOfAlternativeItem(TempTradeItem, FALSE);
    END;

    PROCEDURE FindAlternativeItemOnGTINCodeItemOrBasicItemOrItemRelation@1100528413();
    VAR
      TradeItem@1100528400 : Record 11012317;
      TempTradeItem@1100528402 : TEMPORARY Record 11012317;
    BEGIN
      TradeItem.GET("Original Vendor", "Original Item Code");
      TradeItem.GetAlternativeTradeItemsWithinGTINCodeItemFilter(TempTradeItem);
      TradeItem.GetAlternativeTradeItemsWithinBasicItemFilter(TempTradeItem);
      TradeItem.GetAlternativeTradeItemsWithinItemRelationFilter(TempTradeItem);
      HandleLookupOfAlternativeItem(TempTradeItem, FALSE);
    END;

    LOCAL PROCEDURE HandleLookupOfAlternativeItem@1100528417(VAR TempTradeItem@1100528400 : TEMPORARY Record 11012317;ReadOnly@1100528402 : Boolean);
    VAR
      UpdateAlternativeTradeItem@1100528401 : Codeunit 11012309;
    BEGIN
      IF TempTradeItem.GET("Alternative Vendor", "Alternative Item Code") THEN;
      IF (PAGE.RUNMODAL(PAGE::"Trade Item List", TempTradeItem) = ACTION::LookupOK) AND
         NOT ReadOnly
      THEN BEGIN
        UpdateAlternativeTradeItem.SetVariables(UpdateAction::"Fill Alternative", TempTradeItem);
        UpdateAlternativeTradeItem.RUN(Rec);
      END;
    END;

    PROCEDURE RemoveSelectionFilter@1100528406(OrigLineNoFilter@1100528400 : Text);
    BEGIN
      MARKEDONLY(FALSE);
      SETFILTER("Line No.", OrigLineNoFilter);
    END;

    BEGIN
    END.
  }
}

