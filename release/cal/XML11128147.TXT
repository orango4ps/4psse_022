OBJECT XMLport 11128147 Imp. Add Info Cust Entrie SE
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    Permissions=TableData 21=rm;
    CaptionML=ENU=Imp. Additional Info Customers Entries IMSE;
    DefaultFieldsValidation=No;
    Format/Evaluate=C/SIDE Format/Evaluate;
    PreserveWhiteSpace=Yes;
    OnInitXMLport=BEGIN
                    XMLNo := 11128147;
                    MainTableID := 21;
                  END;

    OnPreXMLport=BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   ConversionXMLPort.GET(XMLNo);
                 END;

    Format=Variable Text;
    FieldDelimiter=<None>;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{7B539476-C20A-46BC-A552-62FED55766AD}];  ;Root                ;Element ;Text     }

    { [{A667E51D-CE85-4A0D-946E-DE2CCC52ED51}];1 ;CustomerLedgerEntry ;Element ;Table   ;
                                                  SourceTable=Table21;
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              ClearFields;
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 lvInt@1100285000 : Integer;
                                                                                 lvDate@1100285001 : Date;
                                                                               BEGIN
                                                                                 StripData;
                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 WITH CustLedgerEntry DO BEGIN
                                                                                   SETCURRENTKEY("Document No.");

                                                                                   CustCde := ConvMgt.DetermineNewCode(
                                                                                     LookupCustomerNo,
                                                                                     CommentRec."Table Name"::Customer,
                                                                                     CustCommentCde,
                                                                                     A);

                                                                                   SETRANGE("Customer No.", CustCde);
                                                                                   SETRANGE("Document No.", B);
                                                                                   IF NOT FINDFIRST THEN
                                                                                     ERROR(Text001,CustCde,B);

                                                                                   VALIDATE("Project No.", C);
                                                                                   VALIDATE("Blocked for Reminder", D);
                                                                                   VALIDATE("Blocked for Interest", E);


                                                                                   CLEAR(lvInt);
                                                                                   IF F <> '' THEN BEGIN
                                                                                     EVALUATE(lvInt,F);
                                                                                     IF lvInt = 1 THEN
                                                                                       VALIDATE("Sent to Collection", TRUE);
                                                                                   END;

                                                                                   CLEAR(lvDate);
                                                                                   IF G <> '' THEN BEGIN
                                                                                     EVALUATE(lvDate,G);
                                                                                     IF lvDate <> 0D THEN
                                                                                       VALIDATE("Sent to Collection Date", lvDate);
                                                                                   END;

                                                                                   MODIFY(TRUE);
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{3AC77EC7-9326-4B76-BA5F-EA1F70D4DA67}];2 ;A                   ;Element ;Text    ;
                                                  Width=20 }

    { [{1B889F9B-B9E2-4749-96B0-D22BA1117049}];2 ;B                   ;Element ;Text    ;
                                                  Width=50 }

    { [{D76B46B3-243B-4FF7-8D1D-C7B64CCFA492}];2 ;C                   ;Element ;Text    ;
                                                  Width=50 }

    { [{11AAC24C-6612-4FE6-9973-FE5EF2EF2C43}];2 ;D                   ;Element ;Text    ;
                                                  Width=50 }

    { [{F0633544-507F-4C5E-A35B-A0DD95F11E63}];2 ;E                   ;Element ;Text    ;
                                                  Width=50 }

    { [{98E7308F-19D5-4AF6-89FB-48DB78E52124}];2 ;F                   ;Element ;Text    ;
                                                  Width=50 }

    { [{23B2F6EB-78F9-48FB-BC70-858F6A53A74C}];2 ;G                   ;Element ;Text    ;
                                                  Width=50 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100409000;;Container;
                  Name=Options;
                  ContainerType=ContentArea }

      { 1100409001;1;Field  ;
                  Name=LookupCustomerNo;
                  CaptionML=ENU=Find Customer by Old Customer No;
                  SourceExpr=LookupCustomerNo;
                  OnValidate=BEGIN
                               IF NOT LookupCustomerNo THEN
                                 CustCommentCde := '';
                             END;
                              }

      { 1100409002;1;Field  ;
                  Name=CustCommentCde;
                  CaptionML=ENU=Comment Code old Customer;
                  SourceExpr=CustCommentCde;
                  TableRelation="Comment Code" }

    }
  }
  CODE
  {
    VAR
      "// GENERAL"@1100525062 : Integer;
      ConversionXMLPort@1100409001 : Record 11020640;
      XMLNo@1100409000 : Integer;
      MainTableID@1100409002 : Integer;
      CommentRec@1100525061 : Record 97;
      ConvMgt@1100525059 : Codeunit 11020212;
      NoSerieMgt@1100525058 : Codeunit 396;
      ImpLineCounter@1100409007 : Integer;
      XmlShowStatus@1100409006 : Codeunit 11130006;
      "//"@1100525049 : Integer;
      "// THIS DATAPORT"@1100525048 : Integer;
      LookupCustomerNo@1100409005 : Boolean;
      CustCommentCde@1100409004 : Code[20];
      CustLedgerEntry@1100285000 : Record 21;
      Text001@1100285001 : TextConst 'ENU=Customer Ledger Entrie Not Found.\Customer: %1\Document No.: %2';
      CustCde@1100285002 : Code[20];

    PROCEDURE AddConversionFileFormatLine@1100529901();
    VAR
      ConversionFileFormat@1100409000 : Record 11020691;
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [XMLport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,"Cust. Ledger Entry".FIELDNAME("Customer No."),'Code20','OldTxt');
        InsertColumnLine(XMLNo,'B',MainTableID,"Cust. Ledger Entry".FIELDNAME("Document No."),'Code20','');
        InsertColumnLine(XMLNo,'C',MainTableID,"Cust. Ledger Entry".FIELDNAME("Project No."),'Code20','');
        InsertColumnLine(XMLNo,'D',MainTableID,"Cust. Ledger Entry".FIELDNAME("Blocked for Reminder"),'Code3','');
        InsertColumnLine(XMLNo,'E',MainTableID,"Cust. Ledger Entry".FIELDNAME("Blocked for Interest"),'Code3','');
        InsertColumnLine(XMLNo,'F',MainTableID,"Cust. Ledger Entry".FIELDNAME("Sent to Collection"),'Integer','OneTrueTxt');
        InsertColumnLine(XMLNo,'G',MainTableID,"Cust. Ledger Entry".FIELDNAME("Sent to Collection Date"),'Date','');
      END;
    END;

    PROCEDURE FillConversionXMLPortFields@1100409004();
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      //ConversionXMLPort."Post by Journal Template Batch" := TRUE;
      //ConversionXMLPort."Journal Template Type" := ConversionXMLPort."Journal Template Type"::Sales;
      ConversionXMLPort.MODIFY;
    END;

    PROCEDURE StripData@1100485000();
    BEGIN
    END;

    PROCEDURE ClearFields@1100529902();
    BEGIN
      CLEAR("Cust. Ledger Entry");

      CLEAR(A);
      CLEAR(B);
      CLEAR(C);
      CLEAR(D);
      CLEAR(E);
      CLEAR(F);
      CLEAR(G);
    END;

    BEGIN
    {
      140415 ITERO.SB Check if fields is filled in before evaluate
    }
    END.
  }
}

