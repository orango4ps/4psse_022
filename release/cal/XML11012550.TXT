OBJECT XMLport 11012550 Import Secutest Base10 Data
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Import Secutest Base10 Data;
    Direction=Import;
    DefaultFieldsValidation=No;
    Format/Evaluate=XML Format/Evaluate;
    PreserveWhiteSpace=Yes;
    TextEncoding=WINDOWS;
    Namespaces=[xs=http://www.w3.org/2001/XMLSchema;
                msdata=urn:schemas-microsoft-com:xml-msdata];
    OnInitXMLport=BEGIN
                    RequestPageOnly := FALSE;
                  END;

    OnPreXMLport=BEGIN
                   IF RequestPageOnly THEN
                     currXMLport.QUIT;
                   ProcessImportInspectionsCU.SecutestBase10_InitProcess(InspectionType);
                 END;

    OnPostXMLport=BEGIN
                    ProcessImportInspectionsCU.CheckPrintErrors();
                  END;

    FieldDelimiter=<None>;
    TableSeparator=<None>;
    FileName=*.xml;
  }
  ELEMENTS
  {
    { [{B51B9B73-4ED5-48B9-8BE2-68470C08F422}];  ;Export              ;Element ;Text    ;
                                                  MaxOccurs=Once }

    { [{3F2A7AB7-59A1-4713-B0CC-DB30C5BD23EB}];1 ;Export_x0020_meetwaarden;Element;Table;
                                                  SourceTable=Table2000000026;
                                                  Import::OnAfterInitRecord=BEGIN

                                                                              CLEAR(Test_x0020_instrument);
                                                                              CLEAR(Typ);
                                                                              CLEAR(Fabrikant);
                                                                              CLEAR(Seriennummer);
                                                                              CLEAR(Cost_x0020_centre);
                                                                              CLEAR(Department);
                                                                              CLEAR(Opmerking);
                                                                              CLEAR(Meetwaarde_x0020_tekst);
                                                                              CLEAR(Meetsoort);
                                                                              CLEAR(Waarde);
                                                                              CLEAR(Grens);
                                                                              CLEAR(Datum);
                                                                              CLEAR(Inspecteur);
                                                                              CLEAR(Goedgekeurd);
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 lvLine@1100529900 : Text;
                                                                               BEGIN
                                                                                 IF (Test_x0020_instrument = '') AND
                                                                                    (Datum = '') AND
                                                                                    (Goedgekeurd = '') AND
                                                                                    (Opmerking = '')
                                                                                 THEN
                                                                                   currXMLport.SKIP;

                                                                                 lvLine :=
                                                                                   Test_x0020_instrument + ';' + Typ + ';' + Fabrikant + ';' + Seriennummer + ';' + Cost_x0020_centre + ';' +
                                                                                   Department + ';' + Opmerking + ';' + Meetwaarde_x0020_tekst + ';' + Meetsoort + ';' + Waarde + ';' +
                                                                                   Grens + ';' + Datum + ';' + Inspecteur + ';' + Goedgekeurd + ';';
                                                                                 ImportLine := COPYSTR(lvLine, 1, MAXSTRLEN(ImportLine));

                                                                                 ProcessImportInspectionsCU.SecutestBase10_ProcessLine(ImportLine, Test_x0020_instrument, Datum, Goedgekeurd, Opmerking);

                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{C657EE15-F28D-48A1-B0E2-56F3CA4651CC}];2 ;Test_x0020_instrument;Element;Text     }

    { [{17BDCC6A-46B1-4B41-8C44-E1FC40D77144}];2 ;Typ                 ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{5B0A94CF-FC89-4D13-94B7-CF9AA64831BF}];2 ;Fabrikant           ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{FA05BACA-B47F-4CF1-A8E5-39E280C64FBB}];2 ;Seriennummer        ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{6E4838F3-2BA3-491D-8E2A-7AF29E66C40A}];2 ;Cost_x0020_centre   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{3A3E38A4-FE4A-497A-BB36-EBA1FB0B2C89}];2 ;Department          ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{674804DE-267C-4E11-A5D2-80CF787EEC6F}];2 ;Opmerking           ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{5D8F749C-6822-47FB-A543-22DF7314BC40}];2 ;Meetwaarde_x0020_tekst;Element;Text   ;
                                                  MinOccurs=Zero }

    { [{0CDE42BE-BB82-42E1-B0CF-E5FD8BD0837C}];2 ;Meetsoort           ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{DC4F46E9-1746-4E65-AF0C-907815EEA5F1}];2 ;Waarde              ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{E377EE95-20BC-441F-B88D-A14568399912}];2 ;Grens               ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{350B7D9C-5A5E-403E-AEB7-0D58F1B5AC30}];2 ;Datum               ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{61FC317E-7394-489E-8C8C-0AF3BD83CA6E}];2 ;Inspecteur          ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{91D0C0EC-C99E-4291-A425-561A5196982D}];2 ;Goedgekeurd         ;Element ;Text    ;
                                                  MinOccurs=Zero }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF InspectionTypeRec.COUNT = 1 THEN BEGIN
                     InspectionTypeRec.FIND('-');
                     InspectionType := InspectionTypeRec.Code;
                   END;
                 END;

      OnQueryClosePage=BEGIN
                         IF CloseAction = ACTION::Cancel THEN
                           RequestPageOK := FALSE
                         ELSE
                           RequestPageOK := TRUE;
                       END;

    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=[ENU=Options;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  Name=InspectionType;
                  CaptionML=[ENU=Inspection Type;
                             SVE=Inspektionstyp];
                  SourceExpr=InspectionType;
                  TableRelation="Inspection Type".Code }

    }
  }
  CODE
  {
    VAR
      InspectionTypeRec@1100525004 : Record 11012562;
      ProcessImportInspectionsCU@1100525003 : Codeunit 11012580;
      InspectionType@1100525002 : Code[20];
      ImportLine@1100525000 : Text[500];
      RequestPageOnly@1100529900 : Boolean;
      RequestPageOK@1100528500 : Boolean;

    PROCEDURE GetInspectionType@1100529901() : Code[20];
    BEGIN
      EXIT(InspectionType);
    END;

    PROCEDURE GetFileName@1100529902() : Text[250];
    BEGIN
      EXIT(currXMLport.FILENAME);
    END;

    PROCEDURE SetInspectionType@1100529905(InspectionTypeParam@1100529900 : Code[20]);
    BEGIN
      InspectionType := InspectionTypeParam;
    END;

    PROCEDURE RunRequestPageOnly@1100529904() : Boolean;
    BEGIN
      RequestPageOnly := TRUE;
      currXMLport.RUN;
      EXIT(RequestPageOK);
    END;

    BEGIN
    END.
  }
}

