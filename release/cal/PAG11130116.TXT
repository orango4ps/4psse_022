OBJECT Page 11130116 Project Cost Plus Entry FB
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Project Cost;
               NOR=Prosjektkost;
               SVE=Projektkostnad];
    SourceTable=Table11012019;
    PageType=CardPart;
    OnOpenPage=BEGIN
                 CalcTotalsSheet;
               END;

    OnNextRecord=BEGIN
                   CalcTotalsSheet;
                 END;

    OnAfterGetRecord=BEGIN
                       CalcTotalsSheet;
                       IF "Employee No." = '' THEN BEGIN
                         CLEAR("Employee Hours");
                         CLEAR("Employee Amount");
                       END;
                     END;

  }
  CONTROLS
  {
    { 1210190000;0;Container;
                ContainerType=ContentArea }

    { 1210190004;1;Field  ;
                DrillDown=No;
                CaptionML=[ENU=Employee;
                           NOR=Ansatt;
                           SVE=Personal];
                SourceExpr="Name Employee" }

    { 1210190003;1;Field  ;
                CaptionML=[ENU=Total Cost Project;
                           NOR=Totale prosjektkoster;
                           SVE=Totala projektkostnader];
                SourceExpr=TotalCostsProject;
                AutoFormatType=1;
                Editable=FALSE }

    { 1100285000;1;Field  ;
                CaptionML=[ENU=Chargeable Hours New;
                           NOR=Belastbare timer, ny;
                           SVE=Debiterbara timmar New];
                BlankZero=Yes;
                SourceExpr=ChargeableHours }

    { 1210190002;1;Field  ;
                DrillDown=No;
                CaptionML=[ENU=Chargeable Hours;
                           SVE=Debiterbara timmar];
                BlankZero=Yes;
                SourceExpr="Employee Hours" }

    { 1210190001;1;Field  ;
                DrillDown=No;
                CaptionML=[ENU=Chargeable Amount;
                           NOR=Belastbart bel›p;
                           SVE=Debiterbart belopp];
                BlankZero=Yes;
                SourceExpr="Employee Amount" }

    { 1210190008;1;Field  ;
                CaptionML=[ENU=Total Basic Price;
                           NOR=Totalt grunnpris;
                           SVE=Totalt grundpris];
                SourceExpr=TotalCostsDec;
                AutoFormatType=1;
                Editable=FALSE }

    { 1210190007;1;Field  ;
                CaptionML=[ENU=Margin;
                           NOR=Marginal;
                           SVE=TB];
                SourceExpr=MarginDec;
                AutoFormatType=1;
                Editable=FALSE }

    { 1210190006;1;Field  ;
                CaptionML=[ENU=Invoiced;
                           NOR=Fakturert;
                           SVE=Fakturerat];
                SourceExpr=SettlSheetRec.Invoiced;
                AutoFormatType=1;
                Editable=FALSE }

    { 1210190005;1;Field  ;
                CaptionML=[ENU=Still to Invoice;
                           NOR=Avventer fakturering;
                           SVE=Inv„ntar fakturering];
                SourceExpr=SettlSheetRec."To Invoice";
                AutoFormatType=1;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      TotalCostsProject@1210190000 : Decimal;
      TotalCostsDec@1210190001 : Decimal;
      MarginDec@1210190002 : Decimal;
      SettlSheetRec@1210190003 : Record 11012021;
      ProjRec@1210190004 : Record 11072003;
      ChargeableHours@1100285000 : Decimal;

    PROCEDURE CalcTotalsSheet@1100485001();
    VAR
      DeterminePrognosisDate@1100525002 : Codeunit 11012029;
      CostContMgt@1100525001 : Codeunit 11012006;
      ProjFilter@1100525000 : Text[250];
      lvProjCostPlusEntry@1100285000 : Record 11012019;
    BEGIN
      //>>IME-055
      ChargeableHours := 0;
      //<<IME-055

      //db, 20-08-07
      IF NOT SettlSheetRec.GET("Project No.", Principal, "Commission No.", "Settl.Sheet No.") THEN BEGIN
        SettlSheetRec.INIT;
        TotalCostsDec := 0;
        MarginDec := 0;
        TotalCostsProject := 0; //10-08-2010, M19913
        //>>IME-055
        ChargeableHours := 0;
        //<<IME-055
      END ELSE BEGIN
        SettlSheetRec.CALCFIELDS(Invoiced,"To Invoice");
        TotalCostsDec := SettlSheetRec.CalcTotalBasicPrice;
        MarginDec := SettlSheetRec.Invoiced + SettlSheetRec."To Invoice" - TotalCostsDec;
        //10-08-2010, M19913.sn
        IF ProjRec.GET("Project No.") THEN BEGIN
          DeterminePrognosisDate.DetermineDate(ProjRec);

          ProjRec.FillProjectFilter(ProjFilter);
          ProjRec.SETFILTER("Project Filter", ProjFilter);

          TotalCostsProject := CostContMgt.TotCostProject(ProjRec,TRUE);
        END;
        //10-08-2010, M19913.en

        //>>IME-055
        //Field "Employee Hour" Table 11012019
        //Sum("Project Cost Plus Entry".Quantity WHERE (Project No.=FIELD(Project No.),Employee No.=FIELD(Employee No.),Invoiced=CONST(No)))
        //replaced field "Employee Hour" with ChargeableHours
        lvProjCostPlusEntry.RESET;
        lvProjCostPlusEntry.SETRANGE("Project No."  , "Project No.");
        lvProjCostPlusEntry.SETRANGE("Employee No." , "Employee No.");
        lvProjCostPlusEntry.SETRANGE(Invoiced       , FALSE);
        lvProjCostPlusEntry.SETRANGE("Cost Type"    , lvProjCostPlusEntry."Cost Type" :: Labor);
        //IF lvProjCostPlusEntry.FINDFIRST THEN REPEAT
        IF lvProjCostPlusEntry.FINDSET(FALSE) THEN REPEAT
           ChargeableHours := ChargeableHours + lvProjCostPlusEntry.Quantity;
        UNTIL lvProjCostPlusEntry.NEXT = 0;
        //<<IME-055
      END;
    END;

    BEGIN
    {
      131113 ITERO.GH IME-055
      160225 ITERO.DL IME424x repace 'findfirst then repeat' (causes locking) with 'findset(false) then repeat'
    }
    END.
  }
}

