OBJECT Codeunit 330 ReqJnlManagement
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03,4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 244=imd,
                TableData 245=imd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text002@1000 : TextConst 'ENU=RECURRING;NOR=GJENTAK.;SVE=èTERKOMMER';
      Text004@1001 : TextConst 'ENU=DEFAULT;NOR=STANDARD;SVE=STANDARD';
      Text005@1002 : TextConst 'ENU=Default Journal;NOR=Standardkladd;SVE=Standardjournal';
      Text99000000@1003 : TextConst 'ENU=%1 Worksheet;NOR=Forslag %1;SVE=%1 fîrslag';
      Text99000001@1004 : TextConst 'ENU=Recurring Worksheet;NOR=Gjentakelsesforslag;SVE=èterkommande fîrslag';
      LastReqLine@1005 : Record 246;
      OpenFromBatch@1006 : Boolean;

    [External]
    PROCEDURE TemplateSelection@1(PageID@1006 : Integer;RecurringJnl@1000 : Boolean;Type@1001 : 'Req.,For. Labor,Planning';VAR ReqLine@1004 : Record 246;VAR JnlSelected@1003 : Boolean);
    VAR
      ReqWkshTmpl@1002 : Record 244;
      LocalText000@1005 : TextConst 'ENU=Req.,For. Labor,Planning;NOR=Forsl.,Underlevrd.,Planlegging;SVE=Rekv.,Ext.arb.k.,Planering';
    BEGIN
      JnlSelected := TRUE;

      ReqWkshTmpl.RESET;
      ReqWkshTmpl.SETRANGE("Page ID",PageID);
      ReqWkshTmpl.SETRANGE(Recurring,RecurringJnl);
      ReqWkshTmpl.SETRANGE(Type,Type);
      OnTemplateSelectionSetFilter(ReqWkshTmpl,Type);

      CASE ReqWkshTmpl.COUNT OF
        0:
          BEGIN
            ReqWkshTmpl.INIT;
            ReqWkshTmpl.Recurring := RecurringJnl;
            ReqWkshTmpl.Type := Type;
            IF NOT RecurringJnl THEN BEGIN
              ReqWkshTmpl.Name := COPYSTR(FORMAT(SELECTSTR(Type + 1,LocalText000)),1,MAXSTRLEN(ReqWkshTmpl.Name));
              ReqWkshTmpl.Description := STRSUBSTNO(Text99000000,SELECTSTR(Type + 1,LocalText000));
            END ELSE BEGIN
              ReqWkshTmpl.Name := Text002;
              ReqWkshTmpl.Description := Text99000001;
            END;
            ReqWkshTmpl.VALIDATE("Page ID");
            ReqWkshTmpl.INSERT;
            COMMIT;
          END;
        1:
          ReqWkshTmpl.FINDFIRST;
        ELSE
          JnlSelected := PAGE.RUNMODAL(0,ReqWkshTmpl) = ACTION::LookupOK;
      END;
      IF JnlSelected THEN BEGIN
        ReqLine.FILTERGROUP := 2;
        ReqLine.SETRANGE("Worksheet Template Name",ReqWkshTmpl.Name);
        ReqLine.FILTERGROUP := 0;
        IF OpenFromBatch THEN BEGIN
          ReqLine."Worksheet Template Name" := '';
          PAGE.RUN(ReqWkshTmpl."Page ID",ReqLine);
        END;
      END;
    END;

    [External]
    PROCEDURE TemplateSelectionFromBatch@9(VAR ReqWkshName@1003 : Record 245);
    VAR
      ReqLine@1000 : Record 246;
      ReqWkshTmpl@1002 : Record 244;
    BEGIN
      OpenFromBatch := TRUE;
      ReqWkshTmpl.GET(ReqWkshName."Worksheet Template Name");
      ReqWkshTmpl.TESTFIELD("Page ID");
      ReqWkshName.TESTFIELD(Name);

      ReqLine.FILTERGROUP := 2;
      ReqLine.SETRANGE("Worksheet Template Name",ReqWkshTmpl.Name);
      ReqLine.FILTERGROUP := 0;

      ReqLine."Worksheet Template Name" := '';
      ReqLine."Journal Batch Name" := ReqWkshName.Name;
      PAGE.RUN(ReqWkshTmpl."Page ID",ReqLine);
    END;

    [External]
    PROCEDURE OpenJnl@2(VAR CurrentJnlBatchName@1000 : Code[10];VAR ReqLine@1001 : Record 246);
    BEGIN
      OnBeforeOpenJnl(CurrentJnlBatchName,ReqLine);

      CheckTemplateName(ReqLine.GETRANGEMAX("Worksheet Template Name"),CurrentJnlBatchName);
      ReqLine.FILTERGROUP := 2;
      ReqLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      ReqLine.FILTERGROUP := 0;
    END;

    [External]
    PROCEDURE OpenJnlBatch@10(VAR ReqWkshName@1002 : Record 245);
    VAR
      ReqWkshTmpl@1003 : Record 244;
      ReqLine@1004 : Record 246;
      JnlSelected@1001 : Boolean;
    BEGIN
      IF ReqWkshName.GETFILTER("Worksheet Template Name") <> '' THEN
        EXIT;
      ReqWkshName.FILTERGROUP(2);
      IF ReqWkshName.GETFILTER("Worksheet Template Name") <> '' THEN BEGIN
        ReqWkshName.FILTERGROUP(0);
        EXIT;
      END;
      ReqWkshName.FILTERGROUP(0);

      IF NOT ReqWkshName.FIND('-') THEN
        FOR ReqWkshTmpl.Type := ReqWkshTmpl.Type::"Req." TO ReqWkshTmpl.Type::Planning DO BEGIN
          ReqWkshTmpl.SETRANGE(Type,ReqWkshTmpl.Type);
          IF NOT ReqWkshTmpl.FINDFIRST THEN
            TemplateSelection(0,FALSE,ReqWkshTmpl.Type,ReqLine,JnlSelected);
          IF ReqWkshTmpl.FINDFIRST THEN
            CheckTemplateName(ReqWkshTmpl.Name,ReqWkshName.Name);
          IF ReqWkshTmpl.Type IN [ReqWkshTmpl.Type::"Req."] THEN BEGIN
            ReqWkshTmpl.SETRANGE(Recurring,TRUE);
            IF NOT ReqWkshTmpl.FINDFIRST THEN
              TemplateSelection(0,TRUE,ReqWkshTmpl.Type,ReqLine,JnlSelected);
            IF ReqWkshTmpl.FINDFIRST THEN
              CheckTemplateName(ReqWkshTmpl.Name,ReqWkshName.Name);
            ReqWkshTmpl.SETRANGE(Recurring);
          END;
        END;

      ReqWkshName.FIND('-');
      JnlSelected := TRUE;
      ReqWkshName.CALCFIELDS("Template Type",Recurring);
      ReqWkshTmpl.SETRANGE(Recurring,ReqWkshName.Recurring);
      IF NOT ReqWkshName.Recurring THEN
        ReqWkshTmpl.SETRANGE(Type,ReqWkshName."Template Type");
      IF ReqWkshName.GETFILTER("Worksheet Template Name") <> '' THEN
        ReqWkshTmpl.SETRANGE(Name,ReqWkshName.GETFILTER("Worksheet Template Name"));
      CASE ReqWkshTmpl.COUNT OF
        1:
          ReqWkshTmpl.FINDFIRST;
        ELSE
          JnlSelected := PAGE.RUNMODAL(0,ReqWkshTmpl) = ACTION::LookupOK;
      END;
      IF NOT JnlSelected THEN
        ERROR('');

      ReqWkshName.FILTERGROUP(0);
      ReqWkshName.SETRANGE("Worksheet Template Name",ReqWkshTmpl.Name);
      ReqWkshName.FILTERGROUP(2);
    END;

    LOCAL PROCEDURE CheckTemplateName@3(CurrentJnlTemplateName@1000 : Code[10];VAR CurrentJnlBatchName@1001 : Code[10]);
    VAR
      ReqWkshName@1002 : Record 245;
    BEGIN
      ReqWkshName.SETRANGE("Worksheet Template Name",CurrentJnlTemplateName);
      IF NOT ReqWkshName.GET(CurrentJnlTemplateName,CurrentJnlBatchName) THEN BEGIN
        IF NOT ReqWkshName.FINDFIRST THEN BEGIN
          ReqWkshName.INIT;
          ReqWkshName."Worksheet Template Name" := CurrentJnlTemplateName;
          ReqWkshName.Name := Text004;
          ReqWkshName.Description := Text005;
          ReqWkshName.INSERT(TRUE);
          COMMIT;
        END;
        CurrentJnlBatchName := ReqWkshName.Name
      END;
    END;

    [External]
    PROCEDURE CheckName@4(CurrentJnlBatchName@1000 : Code[10];VAR ReqLine@1001 : Record 246);
    VAR
      ReqWkshName@1002 : Record 245;
    BEGIN
      ReqWkshName.GET(ReqLine.GETRANGEMAX("Worksheet Template Name"),CurrentJnlBatchName);
    END;

    [External]
    PROCEDURE SetName@5(CurrentJnlBatchName@1000 : Code[10];VAR ReqLine@1001 : Record 246);
    BEGIN
      ReqLine.FILTERGROUP := 2;
      ReqLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      ReqLine.FILTERGROUP := 0;
      IF ReqLine.FIND('-') THEN;
    END;

    [External]
    PROCEDURE LookupName@8(VAR CurrentJnlBatchName@1000 : Code[10];VAR ReqLine@1001 : Record 246);
    VAR
      ReqWkshName@1002 : Record 245;
    BEGIN
      COMMIT;
      ReqWkshName."Worksheet Template Name" := ReqLine.GETRANGEMAX("Worksheet Template Name");
      ReqWkshName.Name := ReqLine.GETRANGEMAX("Journal Batch Name");
      ReqWkshName.FILTERGROUP(2);
      ReqWkshName.SETRANGE("Worksheet Template Name",ReqWkshName."Worksheet Template Name");
      ReqWkshName.FILTERGROUP(0);
      OnBeforeLookupName(ReqWkshName);
      IF PAGE.RUNMODAL(0,ReqWkshName) = ACTION::LookupOK THEN BEGIN
        CurrentJnlBatchName := ReqWkshName.Name;
        SetName(CurrentJnlBatchName,ReqLine);
      END;
    END;

    [External]
    PROCEDURE GetDescriptionAndRcptName@6(VAR ReqLine@1000 : Record 246;VAR Description@1001 : Text[100];VAR BuyFromVendorName@1002 : Text[100]);
    VAR
      Vend@1003 : Record 23;
      GLAcc@1004 : Record 15;
      Item@1100527000 : Record 27;
    BEGIN
      IF ReqLine."No." = '' THEN
        Description := ''
      ELSE
        IF (ReqLine.Type <> LastReqLine.Type) OR
           (ReqLine."No." <> LastReqLine."No.")
        THEN
          CASE ReqLine.Type OF
            ReqLine.Type::"G/L Account":
              IF GLAcc.GET(ReqLine."No.") THEN
                Description := GLAcc.Name
              ELSE
                Description := '';
            //**4PS.sn
            ReqLine.Type::Item:
              IF Item.GET(ReqLine."No.") THEN
                Description := Item.Description
              ELSE
                Description := '';
            //**4PS.en
          END;

      IF ReqLine."Vendor No." = '' THEN
        BuyFromVendorName := ''
      ELSE
        IF ReqLine."Vendor No." <> LastReqLine."Vendor No." THEN BEGIN
          IF Vend.GET(ReqLine."Vendor No.") THEN
            BuyFromVendorName := Vend.Name
          ELSE
            BuyFromVendorName := '';
        END;

      LastReqLine := ReqLine;
    END;

    [External]
    PROCEDURE SetUpNewLine@7(VAR ReqLine@1000 : Record 246;LastReqLine@1001 : Record 246);
    VAR
      ReqWkshTmpl@1210190000 : Record 244;
    BEGIN
      ReqLine.Type := LastReqLine.Type;
      ReqLine."Recurring Method" := LastReqLine."Recurring Method";
      ReqLine."Order Date" := LastReqLine."Order Date";
      //**4PS.sn, kkleermaker, 110817, M28649
      IF ReqWkshTmpl.GET(ReqLine."Worksheet Template Name") THEN
        IF (ReqWkshTmpl."Location Code" <> '') THEN
          ReqLine."Location Code" := ReqWkshTmpl."Location Code";
      //**4PS.en, kkleermaker, 110817, M28649
      OnAfterSetUpNewLine(ReqLine,LastReqLine);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterSetUpNewLine@12(VAR ReqLine@1000 : Record 246;VAR LastReqLine@1001 : Record 246);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeLookupName@15(VAR ReqWkshName@1000 : Record 245);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeOpenJnl@13(VAR CurrentJnlBatchName@1000 : Code[10];VAR ReqLine@1001 : Record 246);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnTemplateSelectionSetFilter@11(VAR ReqWkshTemplate@1000 : Record 244;VAR Type@1001 : Option);
    BEGIN
    END;

    BEGIN
    END.
  }
}

