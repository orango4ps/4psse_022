OBJECT Page 11126981 DSP Monitor
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=DSP Monitor;
    SourceTable=Table11126762;
    PageType=List;
    UsageCategory=Tasks;
    PromotedActionCategoriesML=ENU=New,Manage,Process,Workload,Discipline Actions,Order Actions;
    OnOpenPage=BEGIN
                 DSPSetup.GET;
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
               END;

    OnAfterGetRecord=VAR
                       ReferencePeriod@1100525000 : Record 11020272;
                     BEGIN
                     END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                   END;

    ActionList=ACTIONS
    {
      { 1100528321;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100525036;1 ;Action    ;
                      Name=Service Order;
                      CaptionML=ENU=Service Order;
                      Promoted=Yes;
                      Image=ServiceLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100525000 : Record 11012823;
                               BEGIN
                                 ServiceOrder.SETRANGE("No.", "Service Order No.");
                                 PAGE.RUNMODAL(PAGE::"Service Order (General)", ServiceOrder);
                               END;
                                }
      { 1100528312;1 ;Action    ;
                      Name=Object;
                      CaptionML=ENU=Object;
                      Promoted=Yes;
                      Image=WorkCenterLoad;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrderObject@1100528300 : Record 11071724;
                               BEGIN
                                 ServiceOrderObject.SETRANGE("Service Order No.", "Service Order No.");
                                 ServiceOrderObject.SETRANGE("Object No.", "Object No.");
                                 PAGE.RUNMODAL(PAGE::"Service Order Objects", ServiceOrderObject);
                               END;
                                }
      { 1100528316;1 ;Action    ;
                      Name=Specification Lines;
                      CaptionML=ENU=Specification Lines;
                      Promoted=Yes;
                      Image=Allocations;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrderObjSpecLine@1100528300 : Record 11071782;
                               BEGIN
                                 ServiceOrderObjSpecLine.SETRANGE("Service Order No.", "Service Order No.");
                                 ServiceOrderObjSpecLine.SETRANGE("Service Object No.", "Object No.");
                                 PAGE.RUNMODAL(PAGE::"Service Order Obj. Spec. Lines", ServiceOrderObjSpecLine);
                               END;
                                }
      { 1100528326;1 ;Action    ;
                      Name=Unit Prices;
                      CaptionML=ENU=Unit Prices;
                      Promoted=Yes;
                      Image=CostCenter;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SUPRecordingLine@1100528301 : Record 11071772;
                               BEGIN
                                 SUPRecordingLine.SETRANGE("Service Order No.", "Service Order No.");
                                 SUPRecordingLine.SETRANGE("Object No.", "Object No.");
                                 PAGE.RUNMODAL(0, SUPRecordingLine);
                               END;
                                }
      { 1100528325;1 ;Action    ;
                      Name=Production Recording;
                      CaptionML=ENU=Production Recording;
                      Promoted=Yes;
                      Image=GeneralPostingSetup;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SUPProduction@1100528301 : Record 11071773;
                               BEGIN
                                 SUPProduction.SETRANGE("Service Order No.", "Service Order No.");
                                 SUPProduction.SETRANGE("Object No.", "Object No.");
                                 PAGE.RUNMODAL(0, SUPProduction);
                               END;
                                }
      { 1100528340;1 ;Action    ;
                      Name=Production Recordings;
                      CaptionML=ENU=Rated Production Recordings;
                      Promoted=Yes;
                      Image=GeneralPostingSetup;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SUPProduction@1100528301 : Record 11071773;
                               BEGIN
                                 SUPProduction.FILTERGROUP(9);
                                 SUPProduction.SETFILTER("Processed By Dsp", '<>%1', 0DT);
                                 SUPProduction.FILTERGROUP(0);
                                 SUPProduction.SETFILTER(Status, '%1|%2', SUPProduction.Status::Approved, SUPProduction.Status::Rejected);
                                 PAGE.RUNMODAL(0, SUPProduction);
                               END;
                                }
      { 1100525002;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525026;1 ;ActionGroup;
                      CaptionML=ENU=Workload }
      { 1100525035;2 ;Action    ;
                      Name=New Requests;
                      CaptionML=ENU=New Requests;
                      Promoted=Yes;
                      Image=Worksheets;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ServiceOrderObject@1100525000 : Record 11071724;
                               BEGIN
                                 ServiceOrderObject.FILTERGROUP(9);
                                 ServiceOrderObject.SETFILTER("Dsp Origin", '%1|%2', ServiceOrderObject."Dsp Origin"::DSP, ServiceOrderObject."Dsp Origin"::LIP);
                                 ServiceOrderObject.FILTERGROUP(0);
                                 ServiceOrderObject.SETRANGE("Actual Reference Point", DSPSetup."Reference Point New Object");
                                 PAGE.RUNMODAL(0, ServiceOrderObject);
                               END;
                                }
      { 1100525027;2 ;Action    ;
                      Name=Adjustments;
                      CaptionML=ENU=Adjustments;
                      Promoted=Yes;
                      Image=Document;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 DSPAssignment@1100525000 : Record 11126740;
                               BEGIN
                                 DSPAssignment.SETFILTER("No. Of Adjustments", '>%1', 0);
                                 PAGE.RUNMODAL(PAGE::"DSP Assignments", DSPAssignment);
                               END;
                                }
      { 1100525028;2 ;Action    ;
                      Name=Cancelations;
                      CaptionML=ENU=Cancelations;
                      Promoted=Yes;
                      Image=DeleteExpiredComponents;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 DSPCancellation@1100528300 : Record 11126733;
                               BEGIN
                                 PAGE.RUNMODAL(PAGE::"DSP Cancellations", DSPCancellation);
                               END;
                                }
      { 1100528320;2 ;Action    ;
                      Name=Production Judgements;
                      CaptionML=ENU=Production Judgements;
                      Promoted=Yes;
                      Image=InwardEntry;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 DSPJudgementProdRecording@1100528300 : Record 11126737;
                               BEGIN
                                 PAGE.RUNMODAL(PAGE::"DSP Judgements Prod Recording", DSPJudgementProdRecording);
                               END;
                                }
      { 1100528314;2 ;Action    ;
                      Name=Assignments Ready;
                      CaptionML=ENU=Assignments Ready;
                      Promoted=Yes;
                      Image=CostLedger;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 DSPAssignmentReady@1100525000 : Record 11126754;
                               BEGIN
                                 PAGE.RUNMODAL(PAGE::"DSP Assignments Ready", DSPAssignmentReady);
                               END;
                                }
      { 1100525034;1 ;ActionGroup;
                      CaptionML=ENU=Discipline Actions }
      { 1100525018;2 ;Action    ;
                      Name=Adjustment;
                      CaptionML=ENU=Adjustment;
                      Promoted=Yes;
                      Image=Action;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 DSPAdjustmentMessage@1100528300 : Record 11126727;
                                 TempDSPAdjustmentMessage@1100528301 : TEMPORARY Record 11126727;
                               BEGIN
                                 SendMultipleAdjustementMessages;
                               END;
                                }
      { 1100525031;2 ;Action    ;
                      Name=Attempt;
                      CaptionML=ENU=Attempt;
                      Promoted=Yes;
                      Image=RemoveContacts;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 DSPPlanMessage@1100528300 : Record 11126752;
                               BEGIN
                                 SendMultipleContactMessages;
                               END;
                                }
      { 1100525032;2 ;Action    ;
                      Name=Plan;
                      CaptionML=ENU=Plan;
                      Promoted=Yes;
                      Image=ContactReference;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 DSPPlanMessage@1100528300 : Record 11126752;
                               BEGIN
                                 SendMultiplePlanMessages;
                               END;
                                }
      { 1100525015;2 ;Action    ;
                      Name=Change Reference Point;
                      CaptionML=ENU=Change Reference Point;
                      Promoted=Yes;
                      Image=EntriesList;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 GenericTempTable@1100525000 : TEMPORARY Record 11020579;
                               BEGIN
                                 UpdateMultipleServiceOrderObjectReferencePoints;
                               END;
                                }
      { 1100525016;2 ;Action    ;
                      Name=Change Status;
                      CaptionML=ENU=Change Status;
                      Promoted=Yes;
                      Image=Status;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 GenericTempTable@1100525000 : TEMPORARY Record 11020579;
                               BEGIN
                                 UpdateMultipleServiceObjectStatuses;
                               END;
                                }
      { 1100528339;2 ;Action    ;
                      Name=Change Scenario;
                      CaptionML=ENU=Change Scenario;
                      Promoted=Yes;
                      Image=BOMRegisters;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 UpdateMultipleScenarios;
                               END;
                                }
      { 1100525025;1 ;ActionGroup;
                      CaptionML=ENU=Order Actions }
      { 1100525017;2 ;Action    ;
                      Name=Change Production Cluster ID;
                      CaptionML=ENU=Change Production Cluster ID;
                      Promoted=Yes;
                      Visible=false;
                      Image=Production;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 GenericTempTable@1100525000 : TEMPORARY Record 11020579;
                               BEGIN
                                 UpdateMultipleServiceOrderProductionClusterIDs;
                               END;
                                }
      { 1100528347;2 ;Action    ;
                      Name=Send Work Order to Go MapForms;
                      CaptionML=ENU=Send Work Order to Go MapForms;
                      Promoted=Yes;
                      Image=LaunchWeb;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 DSPMonitor@1100528303 : Record 11126762;
                                 ServiceOrderObject@1100528301 : Record 11071724;
                                 DSPGMFManagement@1100528300 : Codeunit 11126218;
                                 DSPGMFWorkOrderSelector@1100528302 : Page 11126976;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(DSPMonitor);
                                 SetServiceOrderObjectSelection(DSPMonitor, ServiceOrderObject);
                                 DSPGMFWorkOrderSelector.SETTABLEVIEW(ServiceOrderObject);
                                 DSPGMFWorkOrderSelector.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater;
                FreezeColumnID=Discipline }

    { 1100528318;2;Field  ;
                SourceExpr="Service Order No." }

    { 1100528300;2;Field  ;
                SourceExpr="Production Cluster Id";
                Visible=false;
                Editable=false }

    { 1100525013;2;Field  ;
                SourceExpr="Cluster Id" }

    { 1100525012;2;Field  ;
                SourceExpr="Connection Object Id" }

    { 1100528310;2;Field  ;
                SourceExpr="Assignment Id" }

    { 1100528301;2;Field  ;
                SourceExpr="Version No." }

    { 1100525020;2;Field  ;
                SourceExpr=Discipline }

    { 1100528346;2;Field  ;
                SourceExpr=Operator }

    { 1100528335;2;Field  ;
                SourceExpr="Description Order" }

    { 1100528336;2;Field  ;
                SourceExpr="Description 2 Order" }

    { 1100525010;2;Field  ;
                SourceExpr="Address Order" }

    { 1100528337;2;Field  ;
                SourceExpr="City Order" }

    { 1100528338;2;Field  ;
                SourceExpr="Status Order" }

    { 1100528317;2;Field  ;
                SourceExpr="Starting Date Order" }

    { 1100525024;2;Field  ;
                SourceExpr="Actual Reference Point Order" }

    { 1100528313;2;Field  ;
                SourceExpr="Global Dimension 1 Code" }

    { 1100528341;2;Field  ;
                SourceExpr="Service Contract No." }

    { 1100528342;2;Field  ;
                SourceExpr="Service Contract Descr" }

    { 1100528343;2;Field  ;
                SourceExpr="Employee No." }

    { 1100528344;2;Field  ;
                SourceExpr="Employee Name" }

    { 1100528319;2;Field  ;
                SourceExpr="Object No." }

    { 1100528800;2;Field  ;
                SourceExpr="Description Object" }

    { 1100528348;2;Field  ;
                SourceExpr="Description 2 Object" }

    { 1100528315;2;Field  ;
                SourceExpr="Status Object" }

    { 1100528327;2;Field  ;
                SourceExpr="Starting Date Planning" }

    { 1100528323;2;Field  ;
                SourceExpr=Origin }

    { 1100525009;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Actual Reference Point Object" }

    { 1100528332;2;Field  ;
                SourceExpr="Tg Submitted" }

    { 1100528333;2;Field  ;
                SourceExpr="Tg Approved" }

    { 1100528334;2;Field  ;
                SourceExpr="Tg Denied" }

    { 1100528322;2;Field  ;
                SourceExpr="Aga Submitted" }

    { 1100528328;2;Field  ;
                SourceExpr="Aga Approved" }

    { 1100528324;2;Field  ;
                SourceExpr="Aga Denied" }

    { 1100528329;2;Field  ;
                SourceExpr="Agp Submitted" }

    { 1100528330;2;Field  ;
                SourceExpr="Agp Approved" }

    { 1100528331;2;Field  ;
                SourceExpr="Agp Denied" }

    { 1100528302;2;Field  ;
                SourceExpr="Og Received" }

    { 1100528303;2;Field  ;
                SourceExpr="DSP Process" }

    { 1100528307;2;Field  ;
                SourceExpr=Connection }

    { 1100528308;2;Field  ;
                SourceExpr="Inner Work" }

    { 1100528305;2;Field  ;
                SourceExpr=Meter }

    { 1100528304;2;Field  ;
                SourceExpr="Connection Type" }

    { 1100528306;2;Field  ;
                SourceExpr="Fysical State" }

    { 1100528309;2;Field  ;
                SourceExpr="Capacity Change" }

    { 1100528311;2;Field  ;
                SourceExpr="Participants mandatory" }

    { 1100528345;2;Field  ;
                SourceExpr="Kind of Work" }

    { 1100525022;0;Container;
                ContainerType=FactBoxArea }

    { 1100525023;1;Part   ;
                CaptionML=ENU=DSP Details;
                SubPageLink=Service Order No.=FIELD(Service Order No.),
                            Object No.=FIELD(Object No.);
                PagePartID=Page11126937;
                PartType=Page }

  }
  CODE
  {
    VAR
      DSPSetup@1100528301 : Record 11126726;
      DSPAssignmentManagement@1100528305 : Codeunit 11126716;
      DSPManagement@1100528302 : Codeunit 11126714;
      DSPPlanningManagement@1100528300 : Codeunit 11126717;
      DSPGMFManagement@1100528304 : Codeunit 11126218;
      ServiceOrderInfoMgt@1100409000 : Codeunit 11012841;
      CountMarked@1100528307 : Integer;
      CountProcessed@1100528308 : Integer;
      DPA_IsHardFilter@1100528303 : Boolean;
      ActionCompletedTxt@1100528306 : TextConst 'ENU=The Action has been created for %2 (of %1) record(s).\Action execution is done by the DSP Queue.';

    LOCAL PROCEDURE "---Locals---"@1100528311();
    BEGIN
    END;

    LOCAL PROCEDURE DifferentSelectedVersions@1100528302(VAR FirstVersion@1100528302 : Boolean;VAR SecondVersion@1100528303 : Boolean);
    VAR
      DSPMonitor@1100528304 : Record 11126762;
      CountV1@1100528300 : Integer;
      CountV2@1100528301 : Integer;
    BEGIN
      CurrPage.SETSELECTIONFILTER(DSPMonitor);
      IF (NOT DSPMonitor.FINDSET) THEN EXIT;

      DSPMonitor.SETRANGE("Version No.", DSPSetup."First DSP version");
      CountV1 := DSPMonitor.COUNT;
      DSPMonitor.SETRANGE("Version No.", DSPSetup."Second DSP Version");
      CountV2 := DSPMonitor.COUNT;
      FirstVersion := (CountV1 <> 0);
      SecondVersion := (CountV2 <> 0);
    END;

    LOCAL PROCEDURE SendMultipleAdjustementMessages@1100528309();
    VAR
      DSPMonitor@1100528306 : Record 11126762;
      DSPAdjustmentMessage@1100528301 : Record 11126727;
      TempBlob@1100528303 : TEMPORARY Record 99008535;
      DSPAdjustmentMessageDialog@1100528302 : Page 11126965;
      AdjustmentMessageNo@1100528300 : Integer;
      FirstVersion@1100528304 : Boolean;
      SecondVersion@1100528305 : Boolean;
    BEGIN
      CLEAR(DSPAdjustmentMessage);
      DifferentSelectedVersions(FirstVersion, SecondVersion);
      DSPAdjustmentMessageDialog.SetVars(FirstVersion, SecondVersion);
      IF (DSPAdjustmentMessageDialog.RUNMODAL <> ACTION::OK) THEN EXIT;

      AdjustmentMessageNo := DSPAdjustmentMessageDialog.GetNo;
      IF (AdjustmentMessageNo <= 0) THEN EXIT;
      DSPAdjustmentMessageDialog.GetExplanation(TempBlob);

      CurrPage.SETSELECTIONFILTER(DSPMonitor);
      CountMarked := DSPMonitor.COUNT;
      CountProcessed := 0;
      IF (NOT DSPMonitor.FINDSET) THEN EXIT;

      REPEAT
        IF (DSPMonitor."Assignment Id" <> '') AND (DSPMonitor."Object No." <> '') THEN BEGIN
          DSPAdjustmentMessage.INIT;
          DSPAdjustmentMessage."Service Order No." := DSPMonitor."Service Order No.";
          DSPAdjustmentMessage."Object No." := DSPMonitor."Object No.";
          DSPAdjustmentMessage."Line No." := DSPAdjustmentMessage.GetLastLineNo + 10000;

          DSPAdjustmentMessage."Adjustment Reason No." := AdjustmentMessageNo;
          IF (TempBlob.Blob.HASVALUE) THEN
            DSPAdjustmentMessage.Explanation := TempBlob.Blob;

          DSPAdjustmentMessage.INSERT(TRUE);
          DSPAssignmentManagement.SendAdjustmentMessage(DSPAdjustmentMessage);
          CountProcessed += 1;
        END;
      UNTIL (DSPMonitor.NEXT = 0);
      MESSAGE(ActionCompletedTxt, CountMarked, CountProcessed);
    END;

    LOCAL PROCEDURE SendMultipleContactMessages@1100528307();
    VAR
      DSPMonitor@1100528311 : Record 11126762;
      DSPCode@1100528310 : Record 11126753;
      DSPPlanMessage@1100528305 : Record 11126752;
      TempBlob@1100528304 : TEMPORARY Record 99008535;
      DSPContactMessageDialog@1100528303 : Page 11126986;
      FirstVersion@1100528301 : Boolean;
      SecondVersion@1100528300 : Boolean;
      PlanMessageEndTime@1100528309 : DateTime;
      PlanMessageNo@1100528302 : Integer;
      PlanMessageOperatorMandatory@1100528306 : Boolean;
      PlanMessagePlanningTimeNo@1100528307 : Integer;
      PlanMessageStartTime@1100528308 : DateTime;
    BEGIN
      CLEAR(DSPPlanMessage);
      DifferentSelectedVersions(FirstVersion, SecondVersion);
      DSPContactMessageDialog.SetVars(FirstVersion, SecondVersion);
      IF (DSPContactMessageDialog.RUNMODAL <> ACTION::OK) THEN
        EXIT;

      PlanMessageNo := DSPContactMessageDialog.GetNo;
      PlanMessageStartTime := DSPContactMessageDialog.GetStartTime;
      IF (PlanMessageNo <= 0) THEN EXIT;
      DSPContactMessageDialog.GetRemark(TempBlob);

      CurrPage.SETSELECTIONFILTER(DSPMonitor);
      CountMarked := DSPMonitor.COUNT;
      CountProcessed := 0;
      IF (NOT DSPMonitor.FINDSET) THEN
        EXIT;

      REPEAT
        IF (DSPMonitor."Assignment Id" <> '') AND (DSPMonitor."Object No." <> '') THEN BEGIN
          DSPPlanMessage.INIT;
          DSPPlanMessage.Type := DSPPlanMessage.Type::ContactAttempt;
          DSPPlanMessage."Service Order No." := DSPMonitor."Service Order No.";
          DSPPlanMessage."Object No." := DSPMonitor."Object No.";
          DSPPlanMessage."Seq No." := DSPPlanMessage.GetLastSeqNo + 10000;

          DSPPlanMessage."Contact Attempt No." := PlanMessageNo;
          DSPPlanMessage."Contact Time" := PlanMessageStartTime;
          IF (TempBlob.Blob.HASVALUE) THEN
            DSPPlanMessage.Remark := TempBlob.Blob;
          DSPPlanMessage.INSERT(TRUE);

          DSPPlanningManagement.SendPlanMessage(DSPPlanMessage);
          CountProcessed += 1;
        END;
      UNTIL (DSPMonitor.NEXT = 0);
      MESSAGE(ActionCompletedTxt, CountMarked, CountProcessed);
    END;

    LOCAL PROCEDURE SendMultiplePlanMessages@1100528310();
    VAR
      DSPMonitor@1100528311 : Record 11126762;
      DSPCode@1100528310 : Record 11126753;
      DSPPlanMessage@1100528305 : Record 11126752;
      TempBlob@1100528304 : TEMPORARY Record 99008535;
      DSPPlanMessageDialog@1100528303 : Page 11126985;
      FirstVersion@1100528301 : Boolean;
      SecondVersion@1100528300 : Boolean;
      PlanMessageEndTime@1100528309 : DateTime;
      PlanMessageNo@1100528302 : Integer;
      PlanMessageOperatorMandatory@1100528306 : Boolean;
      PlanMessagePlanningTimeNo@1100528307 : Integer;
      PlanMessageStartTime@1100528308 : DateTime;
    BEGIN
      CLEAR(DSPPlanMessage);
      DifferentSelectedVersions(FirstVersion, SecondVersion);
      DSPPlanMessageDialog.SetVars(FirstVersion, SecondVersion);
      IF (DSPPlanMessageDialog.RUNMODAL <> ACTION::OK) THEN
        EXIT;

      PlanMessagePlanningTimeNo := DSPPlanMessageDialog.GetTimeNo;
      PlanMessageNo := DSPPlanMessageDialog.GetNo;
      PlanMessageStartTime := DSPPlanMessageDialog.GetStartTime;
      PlanMessageEndTime := DSPPlanMessageDialog.GetEndTime;
      IF (PlanMessageEndTime = 0DT) THEN PlanMessageEndTime := PlanMessageStartTime;
      IF (PlanMessageNo <= 0) OR (PlanMessagePlanningTimeNo <= 0) OR
         (PlanMessageStartTime = 0DT) OR (PlanMessageEndTime = 0DT)
      THEN
        EXIT;
      PlanMessageOperatorMandatory := DSPPlanMessageDialog.GetOperatorMandatory;
      DSPPlanMessageDialog.GetRemark(TempBlob);

      CurrPage.SETSELECTIONFILTER(DSPMonitor);
      CountMarked := DSPMonitor.COUNT;
      CountProcessed := 0;
      IF (NOT DSPMonitor.FINDSET) THEN
        EXIT;

      REPEAT
        IF (DSPMonitor."Assignment Id" <> '') AND (DSPMonitor."Object No." <> '') THEN BEGIN
          DSPPlanMessage.INIT;
          DSPPlanMessage.Type := DSPPlanMessage.Type::Plan;
          DSPPlanMessage."Service Order No." := DSPMonitor."Service Order No.";
          DSPPlanMessage."Object No." := DSPMonitor."Object No.";
          DSPPlanMessage."Seq No." := DSPPlanMessage.GetLastSeqNo + 10000;

          DSPPlanMessage."Reason No." := PlanMessageNo;
          DSPPlanMessage."Planning Time No." := PlanMessagePlanningTimeNo;
          DSPPlanMessage."Start Time" := PlanMessageStartTime;
          DSPPlanMessage."End Time" := PlanMessageEndTime;
          DSPPlanMessage."Operator Mandatory" := PlanMessageOperatorMandatory;
          IF (TempBlob.Blob.HASVALUE) THEN
            DSPPlanMessage.Remark := TempBlob.Blob;
          DSPPlanMessage.INSERT(TRUE);

          DSPPlanningManagement.SendPlanMessage(DSPPlanMessage);
          CountProcessed += 1;
        END;
      UNTIL (DSPMonitor.NEXT = 0);
      MESSAGE(ActionCompletedTxt, CountMarked, CountProcessed);
    END;

    LOCAL PROCEDURE SetServiceOrderObjectSelection@1100528304(VAR DSPMonitor@1100528300 : Record 11126762;VAR ServiceOrderObject@1100528301 : Record 11071724);
    BEGIN
      IF (NOT DSPMonitor.FINDFIRST) THEN
        EXIT;

      REPEAT
        IF (ServiceOrderObject.GET(DSPMonitor."Service Order No.", DSPMonitor."Object No.", '')) THEN
          ServiceOrderObject.MARK(TRUE);
      UNTIL (DSPMonitor.NEXT = 0);
      ServiceOrderObject.MARKEDONLY(TRUE);
    END;

    LOCAL PROCEDURE UpdateMultipleScenarios@1100528301();
    VAR
      DSPCode@1100528304 : Record 11126753;
      DSPMonitor@1100528303 : Record 11126762;
      DSPScenarioDialog@1100528300 : Page 11126993;
      FirstVersion@1100528307 : Boolean;
      SecondVersion@1100528306 : Boolean;
      SpecCode@1100528305 : Code[10];
      ScenarioNo@1100528301 : Integer;
      ScenarioOption@1100528302 : Option;
    BEGIN
      DifferentSelectedVersions(FirstVersion, SecondVersion);
      DSPScenarioDialog.SetVars(FirstVersion, SecondVersion);
      IF (DSPScenarioDialog.RUNMODAL <> ACTION::OK) THEN
        EXIT;
      ScenarioOption := DSPScenarioDialog.GetScenarioOption;
      ScenarioNo := DSPScenarioDialog.GetScenarioNo;
      IF (ScenarioNo = 0) OR (ScenarioOption = 0) THEN
        EXIT;

      CurrPage.SETSELECTIONFILTER(DSPMonitor);
      CountMarked := DSPMonitor.COUNT;
      CountProcessed := 0;
      IF (NOT DSPMonitor.FINDSET) THEN
        EXIT;
      IF (NOT DSPCode.GET(ScenarioOption, ScenarioNo)) THEN
        EXIT;

      REPEAT
        IF (DSPMonitor."Assignment Id" <> '') AND (DSPMonitor."Object No." <> '') THEN BEGIN
          CASE ScenarioOption OF
            11: SpecCode := 'SC-AANSL';
            12: SpecCode := 'SC-BINWRK';
            13: SpecCode := 'SC-METER';
            14: SpecCode := 'SC-TYPEAAN';
            15: SpecCode := 'SC-FYSTAT';
            16: SpecCode := 'SC-WIJZCAP';
            ELSE SpecCode := '';
          END;
          IF (SpecCode <> '') THEN BEGIN
            DSPManagement.SetServiceOrderSpecLineNewValue(DSPMonitor."Service Order No.", DSPMonitor."Object No.",
              SpecCode, DSPCode.Description);
            CountProcessed += 1;
          END;
        END;
      UNTIL (DSPMonitor.NEXT = 0);
      MESSAGE(ActionCompletedTxt, CountMarked, CountProcessed);
    END;

    LOCAL PROCEDURE UpdateMultipleServiceObjectStatuses@1100528300();
    VAR
      DSPMonitor@1100528303 : Record 11126762;
      ServiceObject@1100528302 : Record 11071691;
      DSPServiceOrderStatusDialog@1100528301 : Page 11126984;
      SelectedStatus@1100528300 : Code[10];
    BEGIN
      IF (DSPServiceOrderStatusDialog.RUNMODAL <> ACTION::OK) THEN EXIT;
      SelectedStatus := DSPServiceOrderStatusDialog.ReturnSelectedStatus;
      IF (SelectedStatus = '') THEN
        EXIT;

      CurrPage.SETSELECTIONFILTER(DSPMonitor);
      CountMarked := DSPMonitor.COUNT;
      CountProcessed := 0;
      IF (NOT DSPMonitor.FINDSET) THEN
        EXIT;

      REPEAT
        IF (ServiceObject.GET(DSPMonitor."Object No.")) THEN BEGIN
          ServiceObject.VALIDATE(Status, SelectedStatus);
          ServiceObject.MODIFY(TRUE);
        END;
        CountProcessed += 1;
      UNTIL (DSPMonitor.NEXT = 0);
      MESSAGE(ActionCompletedTxt, CountMarked, CountProcessed);
    END;

    LOCAL PROCEDURE UpdateMultipleServiceOrderProductionClusterIDs@1100528303();
    VAR
      DSPMonitor@1100528304 : Record 11126762;
      ServiceOrder@1100528300 : Record 11012823;
      DSPCLusterIDDialog@1100528303 : Page 11126983;
      ClusterID@1100528302 : Text[50];
      PrevOrderNo@1100528301 : Code[20];
    BEGIN
      IF (DSPCLusterIDDialog.RUNMODAL <> ACTION::OK) THEN EXIT;
      ClusterID := DSPCLusterIDDialog.GetProductionClusterId;
      IF (ClusterID = '') THEN
        EXIT;
      PrevOrderNo := '';

      CurrPage.SETSELECTIONFILTER(DSPMonitor);
      CountMarked := DSPMonitor.COUNT;
      CountProcessed := 0;
      IF (NOT DSPMonitor.FINDSET) THEN
        EXIT;

      REPEAT
        IF (PrevOrderNo <> DSPMonitor."Service Order No.") THEN BEGIN
          IF (ServiceOrder.GET(DSPMonitor."Service Order No.")) THEN BEGIN
            ServiceOrder.VALIDATE("Dsp Production Cluster Id", ClusterID);
            ServiceOrder.MODIFY(TRUE);
          END;
        END;
        PrevOrderNo := DSPMonitor."Service Order No.";
        CountProcessed += 1;
      UNTIL (DSPMonitor.NEXT = 0);
      MESSAGE(ActionCompletedTxt, CountMarked, CountProcessed);
    END;

    LOCAL PROCEDURE UpdateMultipleServiceOrderObjectReferencePoints@1100528305();
    VAR
      DSPMonitor@1100528304 : Record 11126762;
      ServiceObject@1100528300 : Record 11071691;
      DocumentReferencePoint@1100528301 : Record 11020296;
      DSPReferencePointDialog@1100528303 : Page 11126987;
      ReferencePointNo@1100528302 : Integer;
    BEGIN
      IF (DSPReferencePointDialog.RUNMODAL <> ACTION::OK) THEN EXIT;
      ReferencePointNo := DSPReferencePointDialog.GetReferencePoint;
      IF (ReferencePointNo = 0) THEN
        EXIT;

      CurrPage.SETSELECTIONFILTER(DSPMonitor);
      CountMarked := DSPMonitor.COUNT;
      CountProcessed := 0;
      IF (NOT DSPMonitor.FINDSET) THEN
        EXIT;

      REPEAT
        IF (ServiceObject.GET(DSPMonitor."Object No.")) THEN
          DocumentReferencePoint.InsertDocRefPoint(DocumentReferencePoint.Type::ServObject, ServiceObject."No.",
            ReferencePointNo, TODAY, TIME);
        CountProcessed += 1;
      UNTIL (DSPMonitor.NEXT = 0);
      MESSAGE(ActionCompletedTxt, CountMarked, CountProcessed);
    END;

    BEGIN
    END.
  }
}

