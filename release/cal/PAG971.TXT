OBJECT Page 971 Activity Details FactBox
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Activity Details;
               NOR=Aktivitetsdetaljer;
               SVE=Aktivitetsdetaljer];
    SourceTable=Table951;
    PageType=CardPart;
    OnAfterGetRecord=BEGIN
                       TimeSheetMgt.GetActivityInfo(Rec,ActivityCaption,ActivitiID,ActivitySubCaption,ActivitySubID);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 4   ;1   ;Field     ;
                DrillDown=No;
                CaptionML=[ENU=Line Comment;
                           NOR=Linjemerknad;
                           SVE=Radkommentar];
                ToolTipML=[ENU=Specifies that a comment about this document has been entered.;
                           NOR=Angir at en kommentar om dokumentet har blitt registrert.;
                           SVE=Anger att en kommentar om det h„r dokumentet har angetts.];
                ApplicationArea=#Comments;
                SourceExpr=Comment }

    { 3   ;1   ;Field     ;
                DrillDown=No;
                CaptionML=[ENU=Line Total;
                           NOR=Linjetotal;
                           SVE=Radtotal];
                ToolTipML=[ENU=Specifies the total number of hours that have been entered on a time sheet.;
                           NOR=Angir det totale antallet timer som er angitt i en timeliste.;
                           SVE=Anger det totala antalet timmar som har angetts i en tidrapport.];
                ApplicationArea=#Jobs;
                SourceExpr="Total Quantity" }

    { 1   ;1   ;Field     ;
                ApplicationArea=#Jobs;
                SourceExpr=ActivitiID;
                CaptionClass='3,' + ActivityCaption;
                OnLookup=BEGIN
                           LookupActivity;
                         END;
                          }

    { 2   ;1   ;Field     ;
                ApplicationArea=#Jobs;
                SourceExpr=ActivitySubID;
                CaptionClass='3,' + ActivitySubCaption;
                OnLookup=BEGIN
                           LookupSubActivity;
                         END;
                          }

  }
  CODE
  {
    VAR
      TimeSheetMgt@1000 : Codeunit 950;
      ActivityCaption@1002 : Text[30];
      ActivitySubCaption@1010 : Text;
      ActivitiID@1003 : Code[20];
      ActivitySubID@1011 : Code[20];

    [External]
    PROCEDURE SetEmptyLine@2();
    BEGIN
      ActivityCaption := '';
      ActivitiID := '';
      ActivitySubCaption := '';
      ActivitiID := '';
    END;

    LOCAL PROCEDURE LookupActivity@3();
    VAR
      Job@1000 : Record 11072003;
      CauseOfAbsence@1002 : Record 5206;
      ServiceHeader@1004 : Record 5900;
      AssemblyHeader@1006 : Record 900;
      JobList@1001 : Page 11072004;
      CausesOfAbsence@1003 : Page 5210;
      ServiceOrders@1005 : Page 9318;
      AssemblyOrders@1007 : Page 902;
    BEGIN
      CASE Type OF
        Type::Job:
          BEGIN
            CLEAR(JobList);
            IF "Job No." <> '' THEN BEGIN
              Job.GET("Job No.");
              JobList.SETRECORD(Job);
            END;
            JobList.RUNMODAL;
          END;
        Type::Absence:
          BEGIN
            CLEAR(CausesOfAbsence);
            IF "Cause of Absence Code" <> '' THEN BEGIN
              CauseOfAbsence.GET("Cause of Absence Code");
              CausesOfAbsence.SETRECORD(CauseOfAbsence);
            END;
            CausesOfAbsence.RUNMODAL;
          END;
        Type::Service:
          BEGIN
            CLEAR(ServiceOrders);
            IF "Service Order No." <> '' THEN
              IF ServiceHeader.GET(ServiceHeader."Document Type"::Order,"Service Order No.") THEN
                ServiceOrders.SETRECORD(ServiceHeader);
            ServiceOrders.RUNMODAL;
          END;
        Type::"Assembly Order":
          BEGIN
            CLEAR(AssemblyOrders);
            IF "Assembly Order No." <> '' THEN
              IF AssemblyHeader.GET(AssemblyHeader."Document Type"::Order,"Assembly Order No.") THEN
                AssemblyOrders.SETRECORD(AssemblyHeader);
            AssemblyOrders.RUNMODAL;
          END;
      END;
    END;

    LOCAL PROCEDURE LookupSubActivity@4();
    VAR
      JobTask@1000 : Record 11072600;
      JobTaskList@1001 : Page 11072602;
    BEGIN
      IF Type = Type::Job THEN BEGIN
        CLEAR(JobTaskList);
        IF "Job Task No." <> '' THEN BEGIN
          JobTask.GET("Job No.","Job Task No.");
          JobTaskList.SETRECORD(JobTask);
        END;
        JobTaskList.RUNMODAL;
      END;
    END;

    BEGIN
    {
      4PS, Objects renumbered
    }
    END.
  }
}

