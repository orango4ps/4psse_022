OBJECT Page 11229546 Recording Value MMR
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Aufnahme des Werts fÅr Instandsetzungsma·nahmen und Renovierungen;
               ENU=Recording Value Major Maintenance and Renovation;
               NLD=Opnamewaarde groot onderhoud en renovatie];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11072251;
    SourceTableView=SORTING(Project No.,Plot No.,Phase,Recording Date,Seq. No.)
                    ORDER(Ascending)
                    WHERE(Plot No.=FILTER(''));
    PageType=ListPlus;
    OnOpenPage=VAR
                 PlotRecordingCrossList@1100528200 : Record 11072253;
               BEGIN
                 PlotRecordingCrossList.SETRANGE("Project No.", "Project No.");
                 IF PlotRecordingCrossList.FINDFIRST THEN;
                 IF Rec.FIND THEN;
                 CurrPage.MATRIX.PAGE.SETTABLEVIEW(PlotRecordingCrossList);
                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                 UpdateMatrixSubForm;
               END;

    OnAfterGetRecord=BEGIN
                       UpdateMatrixSubForm;
                       CurrPage.UPDATE(FALSE);
                     END;

    OnAfterGetCurrRecord=BEGIN
                           //MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                           //UpdateMatrixSubForm;
                           //CurrPage.UPDATE(FALSE);
                         END;

    ActionList=ACTIONS
    {
      { 1210190004;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190008;1 ;Action    ;
                      CaptionML=[DEU=Vorheriger Satz;
                                 ENU=Previous Set;
                                 NLD=Vorige Set;
                                 NOR=Forrige sett;
                                 SVE=FîregÜende uppsÑttning];
                      ToolTipML=[DEU=Vorheriger Satz;
                                 ENU=Previous Set;
                                 NLD=Vorige Set;
                                 NOR=Forrige sett;
                                 SVE=FîregÜende uppsÑttning];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Previous);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1210190007;1 ;Action    ;
                      CaptionML=[DEU=Vorherige Spalte;
                                 ENU=Previous Column;
                                 NLD=Vorige Kolom;
                                 NOR=Forrige kolonne;
                                 SVE=FîregÜende kolumn];
                      ToolTipML=[DEU=Vorheriger Satz;
                                 ENU=Previous Set;
                                 NLD=Vorige Set;
                                 NOR=Forrige sett;
                                 SVE=FîregÜende uppsÑttning];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::PreviousColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1210190006;1 ;Action    ;
                      CaptionML=[DEU=NÑchste Spalte;
                                 ENU=Next Column;
                                 NLD=Volgende Kolom;
                                 NOR=Neste kolonne;
                                 SVE=NÑsta kolumn];
                      ToolTipML=[DEU=NÑchster Satz;
                                 ENU=Next Set;
                                 NLD=Volgende Set;
                                 NOR=Neste Sett;
                                 SVE=NÑsta uppsÑttning];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::NextColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1210190005;1 ;Action    ;
                      CaptionML=[DEU=NÑchster Satz;
                                 ENU=Next Set;
                                 NLD=Volgende Set;
                                 NOR=Neste Sett;
                                 SVE=GÜ till nÑsta kolumn.];
                      ToolTipML=[DEU=NÑchster Satz;
                                 ENU=Next Set;
                                 NLD=Volgende Set;
                                 NOR=Neste Sett;
                                 SVE=NÑsta uppsÑttning];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Next);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1210190012;1 ;Action    ;
                      CaptionML=[DEU=Erster Satz;
                                 ENU=First Set;
                                 NLD=Eerste Set;
                                 NOR=Fõrsta sett;
                                 SVE=Fîrsta uppsÑttning];
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::FirstRec);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1210190013;1 ;Action    ;
                      CaptionML=[DEU=Letzter Satz;
                                 ENU=Last Set;
                                 NLD=Laatste Set;
                                 NOR=Siste sett;
                                 SVE=Senaste uppsÑttning];
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::LastRec);
                                 UpdateMatrixSubForm;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1210190000;;Container;
                ContainerType=ContentArea }

    { 1210190001;1;Group  ;
                Name=General;
                CaptionML=[DEU=Allgemein;
                           ENU=General;
                           NLD=Algemeen;
                           NOR=Generell;
                           SVE=AllmÑnt];
                GroupType=Group }

    { 1100528200;2;Field  ;
                CaptionML=[DEU=Aufnahmeart;
                           ENU=Recording Type;
                           NLD=Soort opname];
                OptionCaptionML=[DEU=Kalte Aufnahme,Warme Aufnahme,Produktion;
                                 ENU=Cold Recording,Warm Recording,Production;
                                 NLD=Koude Opname,Warme Opname,Productie];
                SourceExpr=Phase;
                Importance=Promoted }

    { 1100528201;2;Field  ;
                CaptionML=[DEU=Datum bis eins.;
                           ENU=Date to;
                           NLD=Datum opname;
                           NOR=Dato til;
                           SVE=Datum till];
                SourceExpr="Recording Date" }

    { 1100528204;2;Field  ;
                CaptionML=[DEU=Bemerkung;
                           ENU=Remark;
                           NLD=Opmerking];
                SourceExpr=Remarks;
                QuickEntry=FALSe }

    { 1100528209;2;Field  ;
                Lookup=Yes;
                CaptionML=[DEU=Wohnungsmodell;
                           ENU=House Model;
                           NLD=Woningmodel;
                           NOR=Husmodell;
                           SVE=Husmodell];
                SourceExpr=HouseModelFilter;
                TableRelation="House Model".Model WHERE (Project No.=FIELD(Project No.));
                LookupPageID=House Models by Project List;
                OnValidate=BEGIN
                             MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                             UpdateMatrixSubForm;
                             CurrPage.UPDATE();
                           END;
                            }

    { 1100528208;2;Field  ;
                CaptionML=[DEU=Verwendete Zeilen anzeigen;
                           ENU=Show lines in use;
                           NLD=Uitsluitend gebruikte regels];
                SourceExpr=ShowLinesUsed;
                Importance=Promoted;
                OnValidate=BEGIN
                             UpdateMatrixSubForm;
                             CurrPage.UPDATE();
                           END;
                            }

    { 1210190011;2;Field  ;
                CaptionML=[DEU=Modellbeschreibung anzeigen;
                           ENU=Show Model Description;
                           NLD=Toon kolomnamen;
                           NOR=Vis Modellbeskrivelse;
                           SVE=Visa modellbeskrivning];
                SourceExpr=ShowModelDescription;
                Importance=Promoted;
                Visible=FALSE;
                OnValidate=BEGIN
                             MATRIX_GenerateColumnCaptions(MATRIX_Step::Same);
                             UpdateMatrixSubForm;
                           END;
                            }

    { 1210190003;1;Part   ;
                Name=MATRIX;
                SubPageLink=Project No.=FIELD(Project No.);
                PagePartID=Page11229547;
                PartType=Page }

  }
  CODE
  {
    VAR
      MATRIX_MatrixRecords@1210190010 : ARRAY [32] OF Record 11012500;
      MATRIX_CaptionSet@1210190009 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1210190008 : Text[250];
      MATRIX_PrimKeyFirstCaption@1210190004 : Text[80];
      MATRIX_CurrentNoOfColumns@1210190003 : Integer;
      MATRIX_Step@1210190012 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec';
      ShowModelDescription@1100525001 : Boolean;
      PlotFilter@1100528202 : Code[20];
      HouseModelFilter@1100528200 : Code[20];
      PlotSQRecording@1100528204 : Record 11072251;
      ShowLinesUsed@1100528205 : Boolean;

    PROCEDURE MATRIX_GenerateColumnCaptions@1152(MATRIX_SetWanted@1000 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec');
    VAR
      MatrixMgt@1002 : Codeunit 9200;
      i@1004 : Integer;
      RecRef@1006 : RecordRef;
      Plot@1210190000 : Record 11012500;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MATRIX_MatrixRecords);
      MATRIX_CurrentNoOfColumns := 12;

      //*** this specific case
      IF FIND('=><') THEN;
      Plot.SETRANGE("Project No.", "Project No.");
      IF PlotFilter <> '' THEN
        Plot.SETRANGE("Plot No.",PlotFilter);
      IF HouseModelFilter <> '' THEN
        Plot.SETRANGE("House Model", HouseModelFilter);
      //Plot.SETRANGE("MMR Phase", Phase);
      //*** end

      RecRef.GETTABLE(Plot); //***
      RecRef.SETTABLE(Plot); //***
      MatrixMgt.GenerateMatrixData(
        RecRef,MATRIX_SetWanted,12,20, //***
        MATRIX_PrimKeyFirstCaption,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);

      FOR i := 1 TO MATRIX_CurrentNoOfColumns DO
        MATRIX_MatrixRecords[i]."Plot No." := MATRIX_CaptionSet[i];

      IF ShowModelDescription THEN
        MatrixMgt.GenerateMatrixData(
          RecRef,MATRIX_SetWanted::Same,12,30, //***
          MATRIX_PrimKeyFirstCaption,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);

      FOR i := 1 TO 12 DO BEGIN
        //*** this specific case
        IF ShowModelDescription AND (MATRIX_CaptionSet[i] <> '') THEN
          MATRIX_CaptionSet[i] :=
            STRSUBSTNO('%1 (%2)', MATRIX_MatrixRecords[i]."Plot No.", MATRIX_CaptionSet[i]);
        //*** end
        //IF MATRIX_CaptionSet[i] <> '' THEN BEGIN
        //   MATRIX_CaptionSet[i] := STRSUBSTNO('%1 %2', MATRIX_CaptionSet[i], Text001);
        //   MATRIX_CaptionSet[i+12] := STRSUBSTNO(Text002);
        //END;
        IF MATRIX_CaptionSet[i] = '' THEN
          MATRIX_CaptionSet[i] := ' ';
      END;
    END;

    LOCAL PROCEDURE UpdateMatrixSubForm@7();
    VAR
      PlotRecordingCrossList@1100528200 : Record 11072253;
      lvJob@1100528201 : Record 11072003;
    BEGIN
      lvJob.GET("Project No.");

      PlotRecordingCrossList.FILTERGROUP(9);
      IF ShowLinesUsed THEN
        PlotRecordingCrossList.SETRANGE("Line In Use", ShowLinesUsed)
      ELSE
        PlotRecordingCrossList.SETRANGE("Line In Use");

      IF HouseModelFilter <> '' THEN
        PlotRecordingCrossList.SETRANGE("House Model", HouseModelFilter)
      ELSE
        PlotRecordingCrossList.SETRANGE("House Model");
      PlotRecordingCrossList.FILTERGROUP(0);

      CurrPage.MATRIX.PAGE.SETTABLEVIEW(PlotRecordingCrossList);
      CurrPage.MATRIX.PAGE.Load(
        lvJob, MATRIX_CaptionSet,MATRIX_MatrixRecords,MATRIX_CurrentNoOfColumns, Phase, "Recording Date", ShowLinesUsed);
    END;

    PROCEDURE FindSetDateFilter@1100528200();
    VAR
      PlotSQRecording@1100528200 : Record 11072251;
    BEGIN
      {old code
      DateFilter := 0D;

      SETRANGE(Type, ShowRecordingType);
      IF FINDLAST THEN
        DateFilter := "Recording Date";
      SETRANGE(Type);



      PlotSQRecording.SETCURRENTKEY("Project No.", "Recording Date");
      PlotSQRecording.SETRANGE("Project No.", "Project No.");

      CASE ShowRecordingType OF
        ShowRecordingType::"Cold Recording":
        BEGIN
          PlotSQRecording.SETRANGE(Type, PlotSQRecording.Type::"Cold Recording");
          IF PlotSQRecording.FINDLAST THEN
            DateFilter := PlotSQRecording."Recording Date";
        END;
        ShowRecordingType::"Warm Recording":
        BEGIN
          PlotSQRecording.SETRANGE(Type, PlotSQRecording.Type::"Warm Recording");
          IF PlotSQRecording.FINDLAST THEN
            DateFilter := PlotSQRecording."Recording Date";
        END;
        ShowRecordingType::Production:
        BEGIN
          PlotSQRecording.SETRANGE(Type, PlotSQRecording.Type::Production);
          IF PlotSQRecording.FINDLAST THEN
            DateFilter := PlotSQRecording."Recording Date";
        END;
      END;
       }
    END;

    PROCEDURE SetPlotFilter@1100528201(lvPlotFilter@1100528200 : Code[20]);
    BEGIN
      PlotFilter := lvPlotFilter;
    END;

    PROCEDURE SetHouseModelFilter@1100528202(lvHouseModelFilter@1100528200 : Code[20]);
    BEGIN
      HouseModelFilter := lvHouseModelFilter;
    END;

    BEGIN
    END.
  }
}

