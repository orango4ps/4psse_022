OBJECT Codeunit 6223 OpenXML Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      FileMgt@1004 : Codeunit 419;
      WrkShtHelper@1001 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorksheetHelper";
      UID@1000 : Integer;
      CreateWrkBkFailedErr@1002 : TextConst 'ENU=Could not create the Excel workbook.;NOR=Kan ikke opprette Excel-arbeidsboken.;SVE=Det gick inte att skapa Excel-arbetsboken.';
      OpenWrkBkFailedErr@1003 : TextConst 'ENU=Could not open the Excel workbook.;NOR=Kan ikke †pne Excel-arbeidsboken.';
      MissingXMLMapErr@1005 : TextConst 'ENU=The Excel workbook must contain an XML map.;NOR=Excel-arbeidsboken m† inneholde en XML-tilordning.';
      VmlShapeAnchorTxt@1007 : TextConst '@@@={Locked};ENU=%1,15,%2,10,%3,31,%4,9;NOR=%1,15,%2,10,%3,31,%4,9';
      CommentVmlShapeXmlTxt@1006 : TextConst
        '@@@={Locked}',
        'ENU="<v:shape id=""%1"" type=""#_x0000_t202"" style=''position:absolute;  margin-left:59.25pt;margin-top:1.5pt;width:96pt;height:55.5pt;z-index:1;  visibility:hidden'' fillcolor=""#ffffe1"" o:insetmode=""auto""><v:fill color2=""#ffffe1""/><v:shadow color=""black"" obscured=""t""/><v:path o:connecttype=""none""/><v:textbox style=''mso-direction-alt:auto''><div style=''text-align:left''/></v:textbox><x:ClientData ObjectType=""Note""><x:MoveWithCells/><x:SizeWithCells/><x:Anchor>%2</x:Anchor><x:AutoFill>False</x:AutoFill><x:Row>%3</x:Row><x:Column>%4</x:Column></x:ClientData></v:shape>"',
        'NOR="<v:shape id=""%1"" type=""#_x0000_t202"" style=''position:absolute;  margin-left:59.25pt;margin-top:1.5pt;width:96pt;height:55.5pt;z-index:1;  visibility:hidden'' fillcolor=""#ffffe1"" o:insetmode=""auto""><v:fill color2=""#ffffe1""/><v:shadow color=""black"" obscured=""t""/><v:path o:connecttype=""none""/><v:textbox style=''mso-direction-alt:auto''><div style=''text-align:left''/></v:textbox><x:ClientData ObjectType=""Note""><x:MoveWithCells/><x:SizeWithCells/><x:Anchor>%2</x:Anchor><x:AutoFill>False</x:AutoFill><x:Row>%3</x:Row><x:Column>%4</x:Column></x:ClientData></v:shape>"';

    PROCEDURE AddAndInitializeCommentsPart@45(WorksheetWriter@1003 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorksheetWriter";VAR VmlDrawingPart@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Packaging.VmlDrawingPart");
    VAR
      WorkSheetCommentsPart@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart";
      Comments@1002 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Comments";
    BEGIN
      WorkSheetCommentsPart := WorksheetWriter.Worksheet.WorksheetPart.WorksheetCommentsPart;
      IF ISNULL(WorkSheetCommentsPart) THEN
        WorkSheetCommentsPart := WorksheetWriter.CreateWorksheetCommentsPart;

      AddVmlDrawingPart(WorksheetWriter,VmlDrawingPart);

      WorkSheetCommentsPart.Comments := Comments.Comments;

      AddWorkSheetAuthor(WorkSheetCommentsPart.Comments,USERID);

      WorksheetWriter.CreateCommentList(WorkSheetCommentsPart.Comments);
    END;

    LOCAL PROCEDURE AddVmlDrawingPart@59(WorksheetWriter@1004 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorksheetWriter";VAR VmlDrawingPart@1002 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Packaging.VmlDrawingPart");
    VAR
      StringValue@1003 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.StringValue";
      LegacyDrawing@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.LegacyDrawing";
      LocalWorksheet@1006 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Worksheet";
      LastChild@1005 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.OpenXmlElement";
      VmlPartId@1001 : Text;
    BEGIN
      VmlDrawingPart := WorksheetWriter.CreateVmlDrawingPart;
      VmlPartId := WorksheetWriter.Worksheet.WorksheetPart.GetIdOfPart(VmlDrawingPart);
      LegacyDrawing := LegacyDrawing.LegacyDrawing;
      LegacyDrawing.Id := StringValue.FromString(VmlPartId);
      LocalWorksheet := WorksheetWriter.Worksheet.WorksheetPart.Worksheet;
      LastChild := LocalWorksheet.LastChild;
      IF LastChild.GetType.Equals(LegacyDrawing.GetType) THEN
        LastChild.Remove;

      WrkShtHelper.AppendElementToOpenXmlElement(WorksheetWriter.Worksheet.WorksheetPart.Worksheet,LegacyDrawing);
    END;

    PROCEDURE AddColumnHeader@23(WorksheetWriter@1001 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorksheetWriter";VAR Table@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Table";ColumnID@1002 : Integer;ColumnName@1003 : Text;VAR TableColumn@1006 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.TableColumn");
    VAR
      TableColumns@1005 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.TableColumns";
    BEGIN
      TableColumns := Table.TableColumns;
      TableColumn := WorksheetWriter.CreateTableColumn(ColumnID,ColumnName,GetElementName(ColumnName));
      WrkShtHelper.AppendElementToOpenXmlElement(TableColumns,TableColumn);
    END;

    PROCEDURE AddColumnHeaderWithXPath@35(WorksheetWriter@1001 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorksheetWriter";VAR Table@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Table";ColumnID@1002 : Integer;ColumnName@1003 : Text;Type@1004 : Text;XPath@1009 : Text);
    VAR
      TableColumn@1008 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.TableColumn";
      XmlColumnProperties@1006 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.XmlColumnProperties";
    BEGIN
      AddColumnHeader(WorksheetWriter,Table,ColumnID,ColumnName,TableColumn);
      XmlColumnProperties :=
        WorksheetWriter.CreateXmlColumnProperties(1,XPath,WorksheetWriter.XmlDataType2XmlDataValues(Type));
      TableColumn.XmlColumnProperties(XmlColumnProperties);
    END;

    PROCEDURE AddSingleXMLCellProperties@9(VAR SingleXMLCell@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.SingleXmlCell";CellReference@1001 : Text;XPath@1002 : Text;Mapid@1004 : Integer;ConnectionId@1007 : Integer);
    VAR
      XMLCellProperties@1008 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.XmlCellProperties";
      XMLProperties@1009 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.XmlProperties";
      UInt32Value@1005 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.UInt32Value";
      StringValue@1006 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.StringValue";
      XmlDataValues@1010 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.XmlDataValues";
      WrkShtWriter2@1003 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorksheetWriter";
    BEGIN
      StringValue := StringValue.StringValue(CellReference);
      SingleXMLCell.CellReference := StringValue;
      UInt32Value := UInt32Value.UInt32Value;
      UInt32Value.Value := ConnectionId;
      SingleXMLCell.ConnectionId := UInt32Value;

      XMLCellProperties := XMLCellProperties.XmlCellProperties;
      WrkShtHelper.AppendElementToOpenXmlElement(SingleXMLCell,XMLCellProperties);
      UInt32Value.Value := 1;
      XMLCellProperties.Id := UInt32Value;
      StringValue := StringValue.StringValue(FORMAT(SingleXMLCell.Id));
      XMLCellProperties.UniqueName := StringValue;

      XMLProperties := XMLProperties.XmlProperties;
      WrkShtHelper.AppendElementToOpenXmlElement(XMLCellProperties,XMLProperties);
      UInt32Value.Value := Mapid;
      XMLProperties.MapId := UInt32Value;
      StringValue := StringValue.StringValue(XPath);
      XMLProperties.XPath := StringValue;
      XmlDataValues := XmlDataValues.String;

      XMLProperties.XmlDataType := WrkShtWriter2.GetEnumXmlDataValues(XmlDataValues);
    END;

    PROCEDURE AddTable@1(WorksheetWriter@1015 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorksheetWriter";StartFromRow@1002 : Integer;ColumnCount@1000 : Integer;RowCount@1001 : Integer;VAR Table@1013 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Table");
    VAR
      TableColumns@1008 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.TableColumns";
      TablePart@1007 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.TablePart";
      TableParts@1006 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.TableParts";
      TableDefinitionPart@1004 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Packaging.TableDefinitionPart";
      Reference@1014 : Text;
    BEGIN
      Reference := 'A' + FORMAT(StartFromRow) + ':' + GetXLColumnID(ColumnCount) + FORMAT(RowCount + StartFromRow);

      InitTable(WorksheetWriter,Table,Reference,1);
      AppendAutoFilter(Table);
      AppendTableStyleInfo(Table);
      TableColumns := WorksheetWriter.CreateTableColumns(ColumnCount);
      Table.TableColumns(TableColumns);

      TableDefinitionPart := WorksheetWriter.CreateTableDefinitionPart;
      TableDefinitionPart.Table := Table;

      TableParts := WorksheetWriter.CreateTableParts(1);
      WrkShtHelper.AppendElementToOpenXmlElement(WorksheetWriter.Worksheet,TableParts);
      TablePart := WorksheetWriter.CreateTablePart(WorksheetWriter.Worksheet.WorksheetPart.GetIdOfPart(TableDefinitionPart));
      WrkShtHelper.AppendElementToOpenXmlElement(TableParts,TablePart);
    END;

    PROCEDURE AddWorkSheetAuthor@11(Comments@1003 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Comments";AuthorText@1002 : Text);
    VAR
      Author@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Author";
      Authors@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Authors";
    BEGIN
      Authors := Authors.Authors;
      WrkShtHelper.AppendElementToOpenXmlElement(Comments,Authors);
      Author := Author.Author;
      Author.Text := AuthorText;
      WrkShtHelper.AppendElementToOpenXmlElement(Authors,Author);
    END;

    PROCEDURE AppendAutoFilter@4(VAR Table@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Table");
    VAR
      AutoFilter@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.AutoFilter";
      StringValue@1002 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.StringValue";
    BEGIN
      AutoFilter := AutoFilter.AutoFilter;
      AutoFilter.Reference := StringValue.StringValue(Table.Reference.Value);
      WrkShtHelper.AppendElementToOpenXmlElement(Table,AutoFilter);
    END;

    PROCEDURE AppendTableStyleInfo@25(VAR Table@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Table");
    VAR
      BooleanValue@1005 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.BooleanValue";
      StringValue@1006 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.StringValue";
      TableStyleInfo@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.TableStyleInfo";
    BEGIN
      TableStyleInfo := TableStyleInfo.TableStyleInfo;
      TableStyleInfo.Name := StringValue.StringValue('TableStyleMedium2');
      TableStyleInfo.ShowFirstColumn := BooleanValue.BooleanValue(FALSE);
      TableStyleInfo.ShowLastColumn := BooleanValue.BooleanValue(FALSE);
      TableStyleInfo.ShowRowStripes := BooleanValue.BooleanValue(TRUE);
      TableStyleInfo.ShowColumnStripes := BooleanValue.BooleanValue(FALSE);
      WrkShtHelper.AppendElementToOpenXmlElement(Table,TableStyleInfo);
    END;

    PROCEDURE CleanMapInfo@38(MapInfo@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.MapInfo");
    VAR
      MapInfoString@1001 : Text;
    BEGIN
      MapInfoString :=
        ReplaceSubString(
          FORMAT(MapInfo.OuterXml),
          '<x:MapInfo SelectionNamespaces="" xmlns:x="http://schemas.openxmlformats.org/spreadsheetml/2006/main">',
          '');
      MapInfoString := ReplaceSubString(MapInfoString,'</x:MapInfo>','');
      MapInfoString := ReplaceSubString(MapInfoString,'x:','');
      MapInfo.InnerXml(MapInfoString);
    END;

    PROCEDURE CreateBook@82(VAR TempBlob@1000 : Record 99008535;VAR WrkBkWriter@1002 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorkbookWriter");
    VAR
      IStream@1001 : InStream;
    BEGIN
      CLEAR(WrkBkWriter);
      TempBlob.Blob.CREATEINSTREAM(IStream);
      WrkBkWriter := WrkBkWriter.Create(IStream);
      IF ISNULL(WrkBkWriter) THEN
        ERROR(CreateWrkBkFailedErr);
    END;

    [Internal]
    PROCEDURE CreateSchemaConnection@10(VAR WrkbkWriter@1000 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorkbookWriter";SetupDataFileName@1001 : Text);
    VAR
      ConnectionsPart@1002 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Packaging.ConnectionsPart";
      Connections@1008 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Connections";
      Connection@1003 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Connection";
      UInt32Value@1004 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.UInt32Value";
      StringValue@1005 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.StringValue";
      BooleanTrueValue@1006 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.BooleanValue";
      WebQueryProperties@1007 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.WebQueryProperties";
      ByteValue@1009 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.ByteValue";
    BEGIN
      ConnectionsPart := WrkbkWriter.AddConnectionsPart;
      Connections := Connections.Connections;
      Connection := WrkbkWriter.CreateConnection(1);
      UInt32Value := UInt32Value.UInt32Value;
      Connection.Name := StringValue.StringValue(FileMgt.GetFileName(SetupDataFileName));
      UInt32Value.Value := 4;
      Connection.Type := UInt32Value;
      BooleanTrueValue := BooleanTrueValue.BooleanValue(TRUE);
      Connection.Background := BooleanTrueValue;
      ByteValue := ByteValue.ByteValue;
      ByteValue.Value := 0;
      Connection.RefreshedVersion := ByteValue;
      WebQueryProperties := WebQueryProperties.WebQueryProperties;
      WebQueryProperties.XmlSource := BooleanTrueValue;
      WebQueryProperties.SourceData := BooleanTrueValue;
      WebQueryProperties.Url := StringValue.StringValue(SetupDataFileName);
      WebQueryProperties.HtmlTables := BooleanTrueValue;
      WrkShtHelper.AppendElementToOpenXmlElement(Connection,WebQueryProperties);
      WrkShtHelper.AppendElementToOpenXmlElement(Connections,Connection);
      ConnectionsPart.Connections := Connections;
    END;

    PROCEDURE CreateTableStyles@8(Workbook@1002 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Workbook");
    VAR
      Stylesheet@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Stylesheet";
      Tablestyles@1001 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.TableStyles";
      UInt32Value@1003 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.UInt32Value";
      StringValue@1004 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.StringValue";
    BEGIN
      Tablestyles := Tablestyles.TableStyles;
      UInt32Value := UInt32Value.UInt32Value;
      UInt32Value.Value := 0;
      Tablestyles.Count := UInt32Value;
      Tablestyles.DefaultTableStyle := StringValue.StringValue('TableStyleMedium2');
      Tablestyles.DefaultPivotStyle := StringValue.StringValue('PivotStyleLight16');

      Stylesheet := Workbook.WorkbookPart.WorkbookStylesPart.Stylesheet;
      WrkShtHelper.AppendElementToOpenXmlElement(Stylesheet,Tablestyles);
    END;

    PROCEDURE CloseBook@5(VAR WrkBkWriter@1000 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorkbookWriter");
    BEGIN
      WrkBkWriter.Workbook.Save;
      WrkBkWriter.Close;
      CLEAR(WrkBkWriter);
    END;

    PROCEDURE CopyDataToExcelTable@33(WorksheetWriter@1007 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorksheetWriter";DataTable@1005 : DotNet "'System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Data.DataTable");
    VAR
      DataColumn@1006 : DotNet "'System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Data.DataColumn";
      DataRow@1004 : DotNet "'System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Data.DataRow";
      DataTableRowsCount@1003 : Integer;
      RowsCount@1002 : Integer;
      ColumnsCount@1001 : Integer;
      DataTableColumnsCount@1000 : Integer;
    BEGIN
      DataTableRowsCount := DataTable.Rows.Count;
      RowsCount := 0;
      DataTableColumnsCount := DataTable.Columns.Count;
      REPEAT
        DataRow := DataTable.Rows.Item(RowsCount);
        ColumnsCount := 0;
        REPEAT
          DataColumn := DataTable.Columns.Item(ColumnsCount);
          WriteCellValue(WorksheetWriter,FORMAT(DataColumn.DataType),DataRow,RowsCount,ColumnsCount);
          ColumnsCount += 1;
        UNTIL ColumnsCount = DataTableColumnsCount - 1;
        RowsCount += 1;
      UNTIL RowsCount = DataTableRowsCount;
    END;

    PROCEDURE ExtractXMLSchema@109(WorkBookPart@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Packaging.WorkbookPart") XMLSchemaDataFile : Text;
    VAR
      XMLWriter@1002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlWriter";
    BEGIN
      IF ISNULL(WorkBookPart.CustomXmlMappingsPart) THEN
        ERROR(MissingXMLMapErr);
      IF ISNULL(WorkBookPart.CustomXmlMappingsPart.MapInfo) THEN
        ERROR(MissingXMLMapErr);
      XMLSchemaDataFile := FileMgt.ServerTempFileName('');
      XMLWriter := XMLWriter.Create(XMLSchemaDataFile);
      WorkBookPart.CustomXmlMappingsPart.MapInfo.FirstChild.FirstChild.WriteTo(XMLWriter);
      XMLWriter.Close;
    END;

    PROCEDURE FindTableDefinition@79(WrkShtReader@1002 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorksheetReader";VAR Table@1003 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Table") : Boolean;
    VAR
      TableDefinitionPart@1006 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Packaging.TableDefinitionPart";
      Enumerable@1009 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.IEnumerable";
      Enumerator@1008 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.IEnumerator";
    BEGIN
      Enumerable := WrkShtReader.Worksheet.WorksheetPart.TableDefinitionParts;
      Enumerator := Enumerable.GetEnumerator;
      Enumerator.MoveNext;
      TableDefinitionPart := Enumerator.Current;
      IF ISNULL(TableDefinitionPart) THEN
        EXIT(FALSE);

      Table := TableDefinitionPart.Table;
      EXIT(TRUE);
    END;

    [External]
    PROCEDURE GetElementName@12(NameIn@1000 : Text) : Text;
    BEGIN
      NameIn := DELCHR(NameIn,'=','?''`');
      NameIn := CONVERTSTR(NameIn,'<>,./\+&()%:','            ');
      NameIn := CONVERTSTR(NameIn,'-','_');
      NameIn := DELCHR(NameIn,'=',' ');
      EXIT(NameIn);
    END;

    [External]
    PROCEDURE GetXLColumnID@20(ColumnNo@1003 : Integer) : Text[10];
    VAR
      ExcelBuf@1000 : Record 370;
    BEGIN
      ExcelBuf.INIT;
      ExcelBuf.VALIDATE("Column No.",ColumnNo);
      EXIT(ExcelBuf.xlColID);
    END;

    PROCEDURE ImportSchema@7(VAR WrkbkWriter@1000 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorkbookWriter";SchemaFileName@1001 : Text;MapId@1009 : BigInteger;RootElementName@1014 : Text);
    VAR
      CustomXMLMappingsPart@1003 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Packaging.CustomXmlMappingsPart";
      MapInfo@1004 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.MapInfo";
      Schema@1005 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Schema";
      StreamReader@1006 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.StreamReader";
      OpenXmlUnknownElement@1008 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.OpenXmlUnknownElement";
      Map@1002 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Map";
      DataBinding@1013 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.DataBinding";
      UInt32Value@1010 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.UInt32Value";
      StringValue@1011 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.StringValue";
      BooleanValue@1012 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.BooleanValue";
      StreamText@1007 : Text;
    BEGIN
      StreamReader := StreamReader.StreamReader(SchemaFileName);
      StreamReader.ReadLine;
      StreamText := StreamReader.ReadToEnd;
      StreamReader.Close;
      OpenXmlUnknownElement := OpenXmlUnknownElement.CreateOpenXmlUnknownElement(StreamText);

      Schema := WrkbkWriter.CreateSchemaFromOpenXmlUnknown(OpenXmlUnknownElement);
      Schema.Id := StringValue.StringValue('Schema1');

      MapInfo := MapInfo.MapInfo;
      MapInfo.SelectionNamespaces := StringValue.StringValue('');
      WrkShtHelper.AppendElementToOpenXmlElement(MapInfo,Schema);
      Map := Map.Map;
      UInt32Value := UInt32Value.UInt32Value;
      UInt32Value.Value := MapId;
      Map.ID := UInt32Value;
      Map.Name := StringValue.StringValue(RootElementName + '_Map');
      Map.RootElement := StringValue.StringValue(RootElementName);
      Map.SchemaId := Schema.Id;
      Map.ShowImportExportErrors := BooleanValue.BooleanValue(FALSE);
      Map.AutoFit := BooleanValue.BooleanValue(TRUE);
      Map.AppendData := BooleanValue.BooleanValue(FALSE);
      Map.PreserveAutoFilterState := BooleanValue.BooleanValue(TRUE);
      Map.PreserveFormat := BooleanValue.BooleanValue(TRUE);

      DataBinding := DataBinding.DataBinding;
      DataBinding.FileBinding := BooleanValue.BooleanValue(TRUE);
      DataBinding.ConnectionId := Map.ID;
      UInt32Value.Value := 1;
      DataBinding.DataBindingLoadMode := UInt32Value;
      WrkShtHelper.AppendElementToOpenXmlElement(MapInfo,Map);
      WrkShtHelper.AppendElementToOpenXmlElement(Map,DataBinding);

      CustomXMLMappingsPart := WrkbkWriter.AddCustomXmlMappingsPart;
      CustomXMLMappingsPart.MapInfo := MapInfo;
    END;

    LOCAL PROCEDURE InitTable@6(VAR WorksheetWriter@1003 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorksheetWriter";VAR Table@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Table";Reference@1001 : Text;ConnectionId@1002 : Integer);
    VAR
      BooleanValue@1005 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.BooleanValue";
      StringValue@1004 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.StringValue";
      UInt32Value@1006 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.UInt32Value";
    BEGIN
      UID += 1;
      Table := WorksheetWriter.CreateTable(UID);
      Table.Name := StringValue.StringValue('Table' + FORMAT(UID));
      Table.DisplayName := StringValue.StringValue('Table' + FORMAT(UID));
      Table.Reference := StringValue.StringValue(Reference);
      Table.TotalsRowShown := BooleanValue.BooleanValue(FALSE);

      UInt32Value := UInt32Value.UInt32Value;
      UInt32Value.Value := ConnectionId;
      Table.ConnectionId := UInt32Value;
    END;

    PROCEDURE OpenBook@3(VAR TempBlob@1001 : Record 99008535;VAR WrkBkReader@1000 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorkbookReader");
    VAR
      IStream@1002 : InStream;
    BEGIN
      CLEAR(WrkBkReader);
      TempBlob.Blob.CREATEINSTREAM(IStream);
      WrkBkReader := WrkBkReader.Open(IStream);
      IF ISNULL(WrkBkReader) THEN
        ERROR(OpenWrkBkFailedErr);
    END;

    LOCAL PROCEDURE ReplaceSubString@17(String@1001 : Text;Old@1002 : Text;New@1003 : Text) : Text;
    VAR
      Pos@1000 : Integer;
    BEGIN
      Pos := STRPOS(String,Old);
      WHILE Pos <> 0 DO BEGIN
        String := DELSTR(String,Pos,STRLEN(Old));
        String := INSSTR(String,New,Pos);
        Pos := STRPOS(String,Old);
      END;
      EXIT(String);
    END;

    PROCEDURE SetCellComment@2(WrkShtWriter@1010 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorksheetWriter";CellReference@1000 : Text;CommentValue@1001 : Text);
    VAR
      Comment@1004 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Comment";
      CommentText@1003 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.CommentText";
      Run@1006 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Run";
      UInt32Value@1014 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.UInt32Value";
      StringValue@1015 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.StringValue";
      Int32Value@1020 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Int32Value";
      CommentList@1008 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.CommentList";
      Comments@1005 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Comments";
      SpreadsheetText@1009 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Text";
      RunProperties@1007 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.RunProperties";
      CommentsPart@1002 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart";
      Bold@1012 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Bold";
      FontSize@1013 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.FontSize";
      DoubleValue@1016 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.DoubleValue";
      Color@1018 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.Color";
      RunFont@1017 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.RunFont";
      RunPropCharSet@1019 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.RunPropertyCharSet";
    BEGIN
      CommentsPart := WrkShtWriter.Worksheet.WorksheetPart.WorksheetCommentsPart;
      Comments := CommentsPart.Comments;

      IF ISNULL(Comments) THEN BEGIN
        Comments := Comments.Comments;
        CommentsPart.Comments := Comments;
      END;

      CommentList := Comments.CommentList;

      IF ISNULL(CommentList) THEN
        CommentList := WrkShtWriter.CreateCommentList(Comments);

      Comment := Comment.Comment;
      Comment.AuthorId := UInt32Value.FromUInt32(0);
      Comment.Reference := StringValue.StringValue(CellReference);

      CommentText := CommentText.CommentText;

      Run := Run.Run;

      RunProperties := RunProperties.RunProperties;
      Bold := Bold.Bold;

      FontSize := FontSize.FontSize;
      FontSize.Val := DoubleValue.FromDouble(9);

      Color := Color.Color;
      Color.Indexed := UInt32Value.FromUInt32(81);

      RunFont := RunFont.RunFont;
      RunFont.Val := StringValue.FromString('Tahoma');

      RunPropCharSet := RunPropCharSet.RunPropertyCharSet;
      RunPropCharSet.Val := Int32Value.FromInt32(1);

      WrkShtHelper.AppendElementToOpenXmlElement(RunProperties,Bold);
      WrkShtHelper.AppendElementToOpenXmlElement(RunProperties,FontSize);
      WrkShtHelper.AppendElementToOpenXmlElement(RunProperties,Color);
      WrkShtHelper.AppendElementToOpenXmlElement(RunProperties,RunFont);
      WrkShtHelper.AppendElementToOpenXmlElement(RunProperties,RunPropCharSet);

      SpreadsheetText := WrkShtWriter.AddText(CommentValue);
      SpreadsheetText.Text := CommentValue;

      WrkShtHelper.AppendElementToOpenXmlElement(Run,RunProperties);
      WrkShtHelper.AppendElementToOpenXmlElement(Run,SpreadsheetText);

      WrkShtHelper.AppendElementToOpenXmlElement(CommentText,Run);
      Comment.CommentText := CommentText;

      WrkShtWriter.AppendComment(CommentList,Comment);

      CommentsPart.Comments.Save;
      WrkShtWriter.Worksheet.Save;
    END;

    PROCEDURE SetSingleCellValue@101(VAR WrkShtWriter@1001 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorksheetWriter";VAR SingleXMLCells@1007 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.SingleXmlCells";RowNo@1002 : Integer;ColumnNo@1003 : Text;Value@1005 : Text;XPath@1004 : Text);
    VAR
      SingleXMLCell@1000 : DotNet "'DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.DocumentFormat.OpenXml.Spreadsheet.SingleXmlCell";
    BEGIN
      UID += 1;
      SingleXMLCell := WrkShtWriter.AddSingleXmlCell(UID);
      WrkShtHelper.AppendElementToOpenXmlElement(SingleXMLCells,SingleXMLCell);
      AddSingleXMLCellProperties(SingleXMLCell,ColumnNo + FORMAT(RowNo),XPath,1,1);
      WrkShtWriter.SetCellValueText(RowNo,ColumnNo,Value,WrkShtWriter.DefaultCellDecorator);
    END;

    PROCEDURE SetupWorksheetHelper@13(WorkbookWriter@1000 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorkbookWriter");
    BEGIN
      WrkShtHelper := WrkShtHelper.WorksheetHelper(WorkbookWriter.FirstWorksheet.Worksheet);
    END;

    PROCEDURE WriteCellValue@22(VAR WrkShtWriter@1001 : DotNet "'Microsoft.Dynamics.Nav.OpenXml, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.OpenXml.Spreadsheet.WorksheetWriter";DataColumnDataType@1000 : Text;VAR DataRow@1004 : DotNet "'System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Data.DataRow";RowsCount@1003 : Integer;ColumnsCount@1002 : Integer);
    BEGIN
      CASE DataColumnDataType OF
        'System.DateTime':
          WrkShtWriter.SetCellValueDate(
            RowsCount + 4,GetXLColumnID(ColumnsCount + 1),DataRow.Item(ColumnsCount),'',
            WrkShtWriter.DefaultCellDecorator);
        'System.Time':
          WrkShtWriter.SetCellValueTime(
            RowsCount + 4,GetXLColumnID(ColumnsCount + 1),DataRow.Item(ColumnsCount),'',
            WrkShtWriter.DefaultCellDecorator);
        'System.Boolean':
          WrkShtWriter.SetCellValueBoolean(
            RowsCount + 4,GetXLColumnID(ColumnsCount + 1),DataRow.Item(ColumnsCount),
            WrkShtWriter.DefaultCellDecorator);
        'System.Integer','System.Int32':
          WrkShtWriter.SetCellValueNumber(
            RowsCount + 4,GetXLColumnID(ColumnsCount + 1),FORMAT(DataRow.Item(ColumnsCount)),'',
            WrkShtWriter.DefaultCellDecorator);
        ELSE
          WrkShtWriter.SetCellValueText(
            RowsCount + 4,GetXLColumnID(ColumnsCount + 1),DataRow.Item(ColumnsCount),
            WrkShtWriter.DefaultCellDecorator);
      END;
    END;

    PROCEDURE CreateCommentVmlShapeXml@57(ColId@1000 : Integer;RowId@1001 : Integer) CommentShape : Text;
    VAR
      Guid@1002 : GUID;
      Anchor@1003 : Text;
    BEGIN
      Guid := CREATEGUID;

      Anchor := CreateCommentVmlAnchor(ColId,RowId);

      CommentShape := STRSUBSTNO(CommentVmlShapeXmlTxt,Guid,Anchor,RowId - 1,ColId - 1);
    END;

    LOCAL PROCEDURE CreateCommentVmlAnchor@14(ColId@1000 : Integer;RowId@1001 : Integer) : Text;
    BEGIN
      EXIT(STRSUBSTNO(VmlShapeAnchorTxt,ColId,RowId - 2,ColId + 2,RowId + 5));
    END;

    BEGIN
    END.
  }
}

