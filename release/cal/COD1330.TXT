OBJECT Codeunit 1330 Instruction Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 1518=rimd,
                TableData 11229374=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      WarnUnpostedDocumentsTxt@1006 : TextConst 'ENU=Warn about unposted documents.;NOR=Varsle om dokumenter som ikke er bokf›rt.;SVE=Varning om ej bokf”rda dokument.';
      WarnUnpostedDocumentsDescriptionTxt@1005 : TextConst 'ENU=Show warning when you close a document that you have not posted.;NOR=Vis advarsel n†r du fors›ker † lukke et dokument som ikke er bokf›rt.;SVE=Visa en varning n„r du st„nger ett dokument som inte har bokf”rts.';
      ConfirmAfterPostingDocumentsTxt@1004 : TextConst 'ENU=Confirm after posting documents.;NOR=Bekreft etter dokumentbokf›ring.;SVE=Bekr„fta n„r dokument har bokf”rts.';
      ConfirmAfterPostingDocumentsDescriptionTxt@1003 : TextConst 'ENU=Show warning when you post a document where you can choose to view the posted document.;NOR=Vis advarsel n†r du bokf›rer et dokument der du kan velge † vise det bokf›rte dokumentet.;SVE=Visa en varning n„r du bokf”r ett dokument d„r du kan v„lja att visa det bokf”rda dokumentet.';
      ConfirmPostingAfterCurrentCalendarDateTxt@1002 : TextConst 'ENU=Confirm posting after the current calendar date.;NOR=Bekreft bokf›ring etter den gjeldende kalenderdatoen.;SVE=Bekr„fta bokf”ring efter det aktuella r„kenskaps†ret.';
      ConfirmPostingAfterCurrentCalendarDateDescriptionTxt@1001 : TextConst 'ENU=Show warning when you post entries where the posting date is after the current calendar date.;NOR=Vis advarsel n†r du bokf›rer poster der bokf›ringsdatoen er etter den gjeldende kalenderdatoen.;SVE=Visa en varning n„r du bokf”r transaktioner d„r bokf”ringsdatumet infaller efter det aktuella r„kenskaps†ret.';
      MarkBookingAsInvoicedWarningTxt@1007 : TextConst 'ENU=Confirm marking booking as invoiced.;NOR=Bekreft merkede bestillinger som fakturerte.;SVE=Bekr„fta bokning markerad som fakturerad.';
      MarkBookingAsInvoicedWarningDescriptionTxt@1008 : TextConst 'ENU=Show warning when you mark a Booking appointment as invoiced.;NOR=Vis en advarsel n†r du merker en bestillingsavtale som fakturert.;SVE=Visa varning n„r bokningsm”te markeras som fakturerat.';
      OfficeUpdateNotificationTxt@1009 : TextConst 'ENU=Notify user of Outlook add-in update.;NOR=Varsle bruker om oppdatering av Outlook-tillegg.;SVE=Meddela anv„ndaren om uppdatering av Outlook-till„gg.';
      OfficeUpdateNotificationDescriptionTxt@1010 : TextConst 'ENU=Ask user to update their Outlook add-in when an update is available.;NOR=Be bruker om † oppdatere Outlook-tillegget n†r en oppdatering er tilgjengelig.;SVE=Be anv„ndaren uppdatera Outlook-till„gget n„r en uppdatering „r tillg„nglig.';
      AutomaticLineItemsDialogNotificationTxt@1011 : TextConst 'ENU=Discover line items in Outlook add-in;NOR=Oppdag linjevarer i Outlook-tillegg;SVE=Uppt„ck radartiklar i Outlook-till„gg';
      AutomaticLineItemsDialogNotificationDescriptionTxt@1012 : TextConst 'ENU=Scan the email body for potential line items when you create documents in the Outlook add-in.;NOR=Skann br›dteksten i e-posten for potensielle linjevarer n†r du oppretter dokumenter i Outlook-tillegget.;SVE=Genoms”k br”dtexten i e-posten efter potentiella radartiklar n„r du skapar dokument i Outlook-till„gget.';
      ClosingUnreleasedOrdersNotificationTxt@1000 : TextConst 'ENU=Warn about unreleased orders.;NOR=Varsle om ikke-frigitte ordrer.;SVE=Du kan inte bokf”ra n„r ett eller flera datum infaller utanf”r det aktuella r„kenskaps†ret.';
      ClosingUnreleasedOrdersNotificationDescriptionTxt@1013 : TextConst 'ENU=Show warning when you close an order that you have not released.;NOR=Vis advarsel n†r du fors›ker † lukke en ordre som ikke er frigitt.';
      ClosingUnreleasedOrdersConfirmQst@1014 : TextConst 'ENU=The document has not been released.\Are you sure you want to exit?;NOR=Dokumentet er ikke frigitt.\Er du sikker p† at du vil avslutte?';
      SpecificUSerID@1100525000 : Code[50];

    [External]
    PROCEDURE ShowConfirm@8(ConfirmQst@1000 : Text;InstructionType@1001 : Code[50]) : Boolean;
    BEGIN
      IF GUIALLOWED AND IsEnabled(InstructionType) THEN BEGIN
        COMMIT;
        EXIT(CONFIRM(ConfirmQst));
      END;

      EXIT(TRUE);
    END;

    [External]
    PROCEDURE ShowConfirmUnreleased@21() : Boolean;
    BEGIN
      EXIT(ShowConfirm(ClosingUnreleasedOrdersConfirmQst,ClosingUnreleasedOrdersCode));
    END;

    [External]
    PROCEDURE DisableMessageForCurrentUser@4(InstructionType@1002 : Code[50]);
    VAR
      UserPreference@1000 : Record 1306;
    BEGIN
      //**4PS.sn
      IF GetUserID <> USERID THEN
        UserPreference.DisableInstructionUser(InstructionType,GetUserID)
      ELSE
      //**4PS.en
        UserPreference.DisableInstruction(InstructionType);
    END;

    [External]
    PROCEDURE EnableMessageForCurrentUser@10(InstructionType@1002 : Code[50]);
    VAR
      UserPreference@1000 : Record 1306;
    BEGIN
      //**4PS.sn
      IF GetUserID <> USERID THEN
        UserPreference.EnableInstructionUser(InstructionType,GetUserID)
      ELSE
      //**4PS.en
        UserPreference.EnableInstruction(InstructionType);
    END;

    [External]
    PROCEDURE IsEnabled@1(InstructionType@1003 : Code[50]) : Boolean;
    VAR
      UserPreference@1000 : Record 1306;
    BEGIN
      EXIT(NOT UserPreference.GET(USERID,InstructionType));
    END;

    [External]
    PROCEDURE IsUnpostedEnabledForRecord@22(Record@1001 : Variant) : Boolean;
    VAR
      MyNotifications@1002 : Record 1518;
    BEGIN
      EXIT(MyNotifications.IsEnabledForRecord(GetClosingUnpostedDocumentNotificationId,Record));
    END;

    [External]
    PROCEDURE IsMyNotificationEnabled@91(NotificationID@1001 : GUID) : Boolean;
    VAR
      MyNotifications@1000 : Record 1518;
    BEGIN
      IF NOT MyNotifications.GET(USERID,NotificationID) THEN
        EXIT(FALSE);

      EXIT(MyNotifications.Enabled);
    END;

    [External]
    PROCEDURE ShowPostedConfirmationMessageCode@6() : Code[50];
    BEGIN
      EXIT(UPPERCASE('ShowPostedConfirmationMessage'));
    END;

    [External]
    PROCEDURE QueryPostOnCloseCode@2() : Code[50];
    BEGIN
      EXIT(UPPERCASE('QueryPostOnClose'));
    END;

    [External]
    PROCEDURE OfficeUpdateNotificationCode@3() : Code[50];
    BEGIN
      EXIT(UPPERCASE('OfficeUpdateNotification'));
    END;

    [External]
    PROCEDURE PostingAfterCurrentCalendarDateNotAllowedCode@5() : Code[50];
    BEGIN
      EXIT(UPPERCASE('PostingAfterCurrentCalendarDateNotAllowed'));
    END;

    [External]
    PROCEDURE ClosingUnreleasedOrdersCode@19() : Code[50];
    BEGIN
      EXIT(UPPERCASE('ClosingUnreleasedOrders'));
    END;

    [External]
    PROCEDURE MarkBookingAsInvoicedWarningCode@15() : Code[50];
    BEGIN
      EXIT(UPPERCASE('MarkBookingAsInvoicedWarning'));
    END;

    [External]
    PROCEDURE AutomaticLineItemsDialogCode@7() : Code[50];
    BEGIN
      EXIT(UPPERCASE('AutomaticallyCreateLineItemsFromOutlook'));
    END;

    [External]
    PROCEDURE GetClosingUnpostedDocumentNotificationId@16() : GUID;
    BEGIN
      EXIT('612A2701-4BBB-4C5B-B4C0-629D96B60644');
    END;

    [External]
    PROCEDURE GetDocumentTypeInvoiceFilter@11() : Text;
    VAR
      SalesHeader@1000 : Record 36;
    BEGIN
      SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Invoice);
      EXIT(SalesHeader.GETVIEW(FALSE));
    END;

    [External]
    PROCEDURE GetOpeningPostedDocumentNotificationId@17() : GUID;
    BEGIN
      EXIT('0C6ED8F1-7408-4352-8DD1-B9F17332607D');
    END;

    [External]
    PROCEDURE GetMarkBookingAsInvoicedWarningNotificationId@18() : GUID;
    BEGIN
      EXIT('413A3221-D47F-4FBF-8822-0029AB41F9A6');
    END;

    [External]
    PROCEDURE GetOfficeUpdateNotificationId@25() : GUID;
    BEGIN
      EXIT('882980DE-C2F6-4D4F-BF39-BB3A9FE3D7DA');
    END;

    [External]
    PROCEDURE GetPostingAfterCurrentCalendarDateNotificationId@14() : GUID;
    BEGIN
      EXIT('F76D6004-5EC5-4DEA-B14D-71B2AEB53ACF');
    END;

    [External]
    PROCEDURE GetClosingUnreleasedOrdersNotificationId@9() : GUID;
    BEGIN
      EXIT('F76D6004-3FD8-2ABC-B14D-61B2AEB53ACF');
    END;

    [External]
    PROCEDURE GetAutomaticLineItemsDialogNotificationId@20() : GUID;
    BEGIN
      EXIT('7FFD2619-BCEF-48F1-B5D1-469DCE5E6631');
    END;

    [External]
    PROCEDURE InsertDefaultUnpostedDoucumentNotification@23();
    VAR
      MyNotifications@1000 : Record 1518;
    BEGIN
      MyNotifications.SetSpecificUserID(GetUserID); //**4PS.n
      MyNotifications.InsertDefaultWithTableNumAndFilter(GetClosingUnpostedDocumentNotificationId,
        WarnUnpostedDocumentsTxt,
        WarnUnpostedDocumentsDescriptionTxt,
        DATABASE::"Sales Header",
        GetDocumentTypeInvoiceFilter);
    END;

    [EventSubscriber(Page,1518,OnInitializingNotificationWithDefaultState)]
    LOCAL PROCEDURE OnInitializingNotificationWithDefaultState@13();
    VAR
      MyNotifications@1000 : Record 1518;
    BEGIN
      MyNotifications.SetSpecificUserID(GetUserID); //**4PS.n
      InsertDefaultUnpostedDoucumentNotification;
      MyNotifications.InsertDefault(GetOpeningPostedDocumentNotificationId,
        ConfirmAfterPostingDocumentsTxt,
        ConfirmAfterPostingDocumentsDescriptionTxt,
        IsEnabled(ShowPostedConfirmationMessageCode));
      MyNotifications.InsertDefault(GetPostingAfterCurrentCalendarDateNotificationId,
        ConfirmPostingAfterCurrentCalendarDateTxt,
        ConfirmPostingAfterCurrentCalendarDateDescriptionTxt,
        IsEnabled(PostingAfterCurrentCalendarDateNotAllowedCode));
      MyNotifications.InsertDefault(GetMarkBookingAsInvoicedWarningNotificationId,
        MarkBookingAsInvoicedWarningTxt,
        MarkBookingAsInvoicedWarningDescriptionTxt,
        IsEnabled(MarkBookingAsInvoicedWarningCode));
      MyNotifications.InsertDefault(GetAutomaticLineItemsDialogNotificationId,
        AutomaticLineItemsDialogNotificationTxt,
        AutomaticLineItemsDialogNotificationDescriptionTxt,
        IsEnabled(AutomaticLineItemsDialogCode));
      MyNotifications.InsertDefault(GetOfficeUpdateNotificationId,
        OfficeUpdateNotificationTxt,
        OfficeUpdateNotificationDescriptionTxt,
        IsEnabled(OfficeUpdateNotificationCode));
      MyNotifications.InsertDefault(GetClosingUnreleasedOrdersNotificationId,
        ClosingUnreleasedOrdersNotificationTxt,
        ClosingUnreleasedOrdersNotificationDescriptionTxt,
        IsEnabled(ClosingUnreleasedOrdersCode));
    END;

    [EventSubscriber(Table,1518,OnStateChanged)]
    LOCAL PROCEDURE OnStateChanged@12(NotificationId@1000 : GUID;NewEnabledState@1001 : Boolean;NotificationUserID@1100529600 : Code[50]);
    BEGIN
      CASE NotificationId OF
        GetClosingUnpostedDocumentNotificationId:
          IF NewEnabledState THEN
            EnableMessageForCurrentUser(QueryPostOnCloseCode)
          ELSE
            DisableMessageForCurrentUser(QueryPostOnCloseCode);
        GetOpeningPostedDocumentNotificationId:
          IF NewEnabledState THEN
            EnableMessageForCurrentUser(ShowPostedConfirmationMessageCode)
          ELSE
            DisableMessageForCurrentUser(ShowPostedConfirmationMessageCode);
        GetAutomaticLineItemsDialogNotificationId:
          IF NewEnabledState THEN
            EnableMessageForCurrentUser(AutomaticLineItemsDialogCode)
          ELSE
            DisableMessageForCurrentUser(AutomaticLineItemsDialogCode);
        GetPostingAfterCurrentCalendarDateNotificationId:
          IF NewEnabledState THEN
            EnableMessageForCurrentUser(PostingAfterCurrentCalendarDateNotAllowedCode)
          ELSE
            DisableMessageForCurrentUser(PostingAfterCurrentCalendarDateNotAllowedCode);
        GetClosingUnreleasedOrdersNotificationId:
          IF NewEnabledState THEN
            EnableMessageForCurrentUser(ClosingUnreleasedOrdersCode)
          ELSE
            DisableMessageForCurrentUser(ClosingUnreleasedOrdersCode);
      END;
    END;

    [EventSubscriber(Page,11130277,OnInitializingDefaultNotifications)]
    LOCAL PROCEDURE OnInitializingDefaultNotifications@1100529600();
    VAR
      DefaultMyNotificationSetup@1100529600 : Record 11229374;
      MyNotificationsPage@1100525000 : Page 1518;
    BEGIN
      //**4PS
      MyNotificationsPage.InitializeNotificationsWithDefaultState;

      DefaultMyNotificationSetup.InitializeDefaultNotifications;
    END;

    PROCEDURE InsertDefaultNotification@1100529601(LocUserID@1100529602 : Code[50]);
    BEGIN
      //**4PS
      SetSpecificUserID(LocUserID);
      OnInitializingNotificationWithDefaultState;
    END;

    PROCEDURE SetSpecificUserID@1100525001(SpecUserID@1100525000 : Code[50]);
    BEGIN
      //**4PS
      SpecificUSerID := SpecUserID;
    END;

    LOCAL PROCEDURE GetUserID@1100525002() : Code[50];
    BEGIN
      //**4PS
      IF SpecificUSerID <> '' THEN
        EXIT(SpecificUSerID)
      ELSE
        EXIT(USERID);
    END;

    BEGIN
    END.
  }
}

