OBJECT Page 11127125 Proj. Dev Rubric Relations
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Projektentw. Rubrik Beziehungen;
               ENU=Project Dev. Rubric Relations;
               NLD=Projectontwikkeling rubriek relaties];
    SourceTable=Table11012902;
    PageType=List;
    OnOpenPage=BEGIN
                 AddLinesOnOpenPage;
               END;

    ActionList=ACTIONS
    {
      { 1100528500;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528501;1 ;Action    ;
                      CaptionML=[DEU=Projektentw. Rubrik Beziehung erstellen;
                                 ENU=Create Project Dev. Rubric Relation;
                                 NLD=Kopieer standaard projectontwikkelings rubriek relaties];
                      Promoted=Yes;
                      Image=CreateLinesFromJob;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopyLinesFromBase;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100525000;0;Container;
                ContainerType=ContentArea }

    { 1100525001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100525002;2;Field  ;
                SourceExpr="Project No.";
                Visible=FALSE }

    { 1100525003;2;Field  ;
                SourceExpr="Rubric Code" }

    { 1100525004;2;Field  ;
                SourceExpr="Cost Object" }

    { 1100525005;2;Field  ;
                SourceExpr="Cost Object Description" }

  }
  CODE
  {

    LOCAL PROCEDURE AddLinesOnOpenPage@1100525000();
    VAR
      InvestmProposalRubricLine@1100525000 : Record 11012913;
      ProjectDevRubricRelation@1100525001 : Record 11012902;
    BEGIN
      IF GETFILTER("Project No.") = '' THEN
        EXIT;

      COPYFILTER("Project No.", InvestmProposalRubricLine."Project No.");
      InvestmProposalRubricLine.SETRANGE(Type, InvestmProposalRubricLine.Type::Costs);
      IF InvestmProposalRubricLine.FINDSET THEN
        REPEAT
          IF NOT ProjectDevRubricRelation.GET(InvestmProposalRubricLine."Project No.", InvestmProposalRubricLine."Rubric Code") THEN BEGIN
            ProjectDevRubricRelation.INIT;
            ProjectDevRubricRelation."Project No." := InvestmProposalRubricLine."Project No.";
            ProjectDevRubricRelation."Rubric Code" := InvestmProposalRubricLine."Rubric Code";
            ProjectDevRubricRelation.INSERT;
          END;
        UNTIL InvestmProposalRubricLine.NEXT = 0;
    END;

    LOCAL PROCEDURE CopyLinesFromBase@1100528501();
    VAR
      ProjectDevelopment@1100528501 : Record 11012915;
      BaseProjDevRubricRel@1100528500 : Record 11012901;
      ProjectDevRubricRelation@1100528502 : Record 11012902;
    BEGIN
      IF GETFILTER("Project No.") = '' THEN
        EXIT;
      IF BaseProjDevRubricRel.ISEMPTY THEN
        EXIT;
      COPYFILTER("Project No.", ProjectDevelopment."Project No.");
      ProjectDevelopment.FINDFIRST;
      BaseProjDevRubricRel.FINDSET;
      REPEAT
        IF NOT ProjectDevRubricRelation.GET(ProjectDevelopment."Project No.", BaseProjDevRubricRel."Rubric Code") THEN BEGIN
          ProjectDevRubricRelation.INIT;
          ProjectDevRubricRelation."Project No." := ProjectDevelopment."Project No.";
          ProjectDevRubricRelation."Rubric Code" := BaseProjDevRubricRel."Rubric Code";
          ProjectDevRubricRelation."Cost Object" := BaseProjDevRubricRel."Cost Object";
          ProjectDevRubricRelation.INSERT;
        END ELSE
          IF ProjectDevRubricRelation."Cost Object" = '' THEN BEGIN
            ProjectDevRubricRelation."Cost Object" := BaseProjDevRubricRel."Cost Object";
            ProjectDevRubricRelation.MODIFY;
          END;
      UNTIL BaseProjDevRubricRel.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

