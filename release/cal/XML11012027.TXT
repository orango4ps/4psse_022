OBJECT XMLport 11012027 Import Indirect Hours - FSA
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Import Indirect Hours - FSA;
    Direction=Import;
    OnPreXMLport=BEGIN
                   MessType := 'INDIRECTHOURS';
                   IF MessID = 'FV-4PS' THEN
                     MessType := 'DEBRIEF';  //* Field Vision can only handle 1 type for all returned message
                 END;

  }
  ELEMENTS
  {
    { [{66BEC9F8-C5AB-422A-B48E-F31762EBB04C}];  ;Message             ;Element ;Text     }

    { [{4D5830E6-413C-4362-921B-F9E4F3786A81}];1 ;MessageID           ;Attribute;Text   ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF (MessageID <> MessID) THEN BEGIN
                                                                                    gLogbookRec.WriteExchangeError(STRSUBSTNO(Text000a,MessageID,MessID),ErrorRec.Type::Error,0);
                                                                                    currXMLport.BREAK;
                                                                                  END;
                                                                                END;
                                                                                 }

    { [{E28E3AD4-B274-4602-B78C-3F503C28670D}];1 ;MessageType         ;Attribute;Text   ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF (MessageType <> MessType) THEN BEGIN
                                                                                    gLogbookRec.WriteExchangeError(STRSUBSTNO(Text000b,MessageType,MessType),ErrorRec.Type::Error,0);
                                                                                    currXMLport.BREAK;
                                                                                  END;
                                                                                END;
                                                                                 }

    { [{0D46DD12-385F-4810-9666-9E0C4525D1D3}];1 ;ListIndirectHours   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{A9512768-B2A4-454D-80B8-3AA19B62EC04}];2 ;IndirectHours       ;Element ;Table   ;
                                                  VariableName=IndirectHours;
                                                  SourceTable=Table11012273;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              InitImportDataLine(IndirectHours, IndirectHours."Line Type"::IndirectHours);
                                                                            END;

                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 XMLFormatMgtCU.EvaluateDate(Hour_Date,IndirectHours.Date);
                                                                                 XMLFormatMgtCU.EvaluateDecimal(Hour_Quantity,IndirectHours.Quantity);
                                                                                 XMLFormatMgtCU.EvaluateTime(Hour_FromTime,IndirectHours."From Time");
                                                                                 XMLFormatMgtCU.EvaluateTime(Hour_ToTime,IndirectHours."To Time");
                                                                               END;

                                                  Import::OnAfterInsertRecord=BEGIN
                                                                                IndirectHours.INIT;
                                                                                Hour_Date := '';
                                                                                Hour_Quantity := '';
                                                                                Hour_FromTime := '';
                                                                                Hour_ToTime := '';
                                                                              END;
                                                                               }

    { [{86D5A3CE-1AF7-4F14-8A05-74E60FD96177}];3 ;Hour_EmployeeNo     ;Element ;Field   ;
                                                  DataType=Code;
                                                  FieldValidate=No;
                                                  SourceField=IndirectHours::Employee No. }

    { [{5310B9DF-B047-4555-AB50-AE8D804DACE6}];3 ;Hour_Date           ;Element ;Text    ;
                                                  DataType=DateTime }

    { [{078BBA5A-912E-401B-9905-0E596DCD5CCB}];3 ;Hour_CostCode       ;Element ;Field   ;
                                                  DataType=Code;
                                                  FieldValidate=No;
                                                  SourceField=IndirectHours::Cost Code }

    { [{F31E77F7-E858-42C5-9AC2-21B27E123ECA}];3 ;Hour_CostObject     ;Element ;Field   ;
                                                  DataType=Code;
                                                  FieldValidate=No;
                                                  SourceField=IndirectHours::Cost Object }

    { [{3952AD4D-7246-40DA-A37D-2D9FE34897E8}];3 ;Hour_CostComponent  ;Element ;Field   ;
                                                  DataType=Code;
                                                  FieldValidate=No;
                                                  SourceField=IndirectHours::Cost Component }

    { [{B5436E6E-7197-42BE-82D6-A953B7665FA3}];3 ;Hour_WageComponent  ;Element ;Field   ;
                                                  DataType=Code;
                                                  FieldValidate=No;
                                                  SourceField=IndirectHours::Wage Component }

    { [{D6C74056-D3A0-48F7-B1BA-DAD213D40E79}];3 ;Hour_Quantity       ;Element ;Text    ;
                                                  DataType=Decimal }

    { [{F5C84FFB-5CCE-4BDB-B194-8C16AA47F3E2}];3 ;Hour_Comment        ;Element ;Field   ;
                                                  DataType=Text;
                                                  FieldValidate=No;
                                                  SourceField=IndirectHours::Comment }

    { [{6F1D7A96-AAAD-47FC-B0EC-E5610EFFCE6D}];3 ;Hour_FromTime       ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{D5399207-A504-40D8-B020-9FFE52A84F08}];3 ;Hour_ToTime         ;Element ;Text    ;
                                                  MinOccurs=Zero }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      gLogbookRec@1100485001 : Record 11012271;
      ErrorRec@1100485004 : Record 11012272;
      XMLFormatMgtCU@1100485002 : Codeunit 11012092;
      Counter@1100485000 : Integer;
      MessID@1100485009 : Code[30];
      MessType@1100485010 : Code[30];
      Text000a@1100485007 : TextConst 'ENU=Message ID ''%1'' incorrect, must be ''%2''';
      Text000b@1100485008 : TextConst 'ENU=Message Type ''%1'' incorrect, must be ''%2''';

    PROCEDURE SetImportData@1100485000(ILogbookRec@1100485000 : Record 11012271;IMessID@1100485001 : Code[30]);
    BEGIN
      gLogbookRec := ILogbookRec;
      MessID := IMessID;
    END;

    PROCEDURE GetImportData@1100485001() : Integer;
    BEGIN
      EXIT(Counter);
    END;

    PROCEDURE InitImportDataLine@1100485003(VAR IOImportLineRec@1100485000 : Record 11012273;ILineType@1100485001 : Option);
    BEGIN
      Counter := Counter + 1;

      IOImportLineRec."Date/Time" := gLogbookRec."Date/Time";
      IOImportLineRec."Message Type" := gLogbookRec."Message Type";
      IOImportLineRec."Line No." := Counter;
      IOImportLineRec."Line Type" := ILineType;
    END;

    BEGIN
    END.
  }
}

