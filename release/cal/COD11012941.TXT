OBJECT Codeunit 11012941 Rental Package Prolongation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11229841;
    OnRun=VAR
            RentalPackageProlong@1100529000 : Record 11229841;
          BEGIN
            RentalPackageProlong.COPY(Rec);
            IF NOT CONFIRM(Text000, TRUE, "Prolong Code", "Entry No.", FIELDCAPTION(Period), Period) THEN
              EXIT;
            Code(RentalPackageProlong);
            Rec.COPY(RentalPackageProlong);
          END;

  }
  CODE
  {
    VAR
      Text000@1100529000 : TextConst 'DEU=Prolongation ''%1-%2'', %3 ''%4''. Prozessprolongation?;ENU=Prolongation ''%1-%2'', %3 ''%4''. Process prolongation?;NLD=Verlenging ''%1-%2'', %3 ''%4''. Verlenging uitvoeren?';
      Text001@1100529001 : TextConst 'DEU=Prolongation ''%1-%2'' (mit niedrigerem %3) wurde noch nicht verarbeitet;ENU=Prolongation ''%1-%2'' (with lower %3) is not processed yet;NLD=Verlenging ''%1-%2'' (met lager %3)  is nog niet uitgevoerd';
      Text002@1100529002 : TextConst 'DEU=Prolongation ''%1-%2'' (mit h”herem %3) wurde bereits verarbeitet;ENU=Prolongation ''%1-%2'' (with higher %3) is already processed;NLD=Verlenging ''%1-%2'' (met hoger %3)  is al uitgevoerd';
      Text003@1100529003 : TextConst 'DEU=%1, neues Datum %2 muss gr”áer sein;ENU="%1, new date %2 must be greater ";NLD="%1, nieuwe datum %2 moet groter zijn "';
      Text004@1100529004 : TextConst 'DEU=Aktualisiert: Paket %1, Zeilen %2;ENU=Updated: Package %1, Lines %2;NLD=Bijgewerkt: Pakket %1, Regels %2';

    LOCAL PROCEDURE Code@1100529000(VAR RentalPackageProlong@1100529000 : Record 11229841);
    BEGIN
      WITH RentalPackageProlong DO BEGIN
        CheckProlongation(RentalPackageProlong);
        IF ProcessProlongation(RentalPackageProlong) THEN BEGIN
          "Executed on" := TODAY;
          MODIFY;
        END;
      END;
    END;

    LOCAL PROCEDURE CheckProlongation@1100529001(RentalPackageProlong@1100529000 : Record 11229841);
    VAR
      RentalPackageProlong2@1100529001 : Record 11229841;
    BEGIN
      WITH RentalPackageProlong DO BEGIN
        TESTFIELD("Project No.");
        TESTFIELD("Rental Unit");
        TESTFIELD("Starting Date");
        TESTFIELD("Prolong Code");
        TESTFIELD("Entry No.");
        TESTFIELD("Executed on", 0D);
        TESTFIELD(Period);

        RentalPackageProlong2.SETRANGE("Project No.", "Project No.");
        RentalPackageProlong2.SETRANGE("Rental Unit", "Rental Unit");
        RentalPackageProlong2.SETRANGE("Starting Date", "Starting Date");
        RentalPackageProlong2.SETRANGE("Prolong Code", "Prolong Code");
        RentalPackageProlong2.SETFILTER("Entry No.", '<%1', "Entry No.");
        RentalPackageProlong2.SETRANGE("Executed on", 0D);
        IF RentalPackageProlong2.FINDFIRST THEN
          ERROR(Text001, RentalPackageProlong2."Prolong Code", RentalPackageProlong2."Entry No.", FIELDCAPTION("Entry No."));

        RentalPackageProlong2.SETFILTER("Entry No.", '>%1', "Entry No.");
        RentalPackageProlong2.SETFILTER("Executed on", '<>%1', 0D);
        IF RentalPackageProlong2.FINDFIRST THEN
          ERROR(Text002, RentalPackageProlong2."Prolong Code", RentalPackageProlong2."Entry No.", FIELDCAPTION("Entry No."));
      END;
    END;

    LOCAL PROCEDURE ProcessProlongation@1100529004(RentalPackageProlong@1100529000 : Record 11229841) : Boolean;
    VAR
      RentalPackage@1100529001 : Record 11012941;
      RentalRateLine@1100529002 : Record 11012942;
      NewDate@1100529003 : Date;
      CounterHead@1100529004 : Integer;
      CounterLine@1100529005 : Integer;
    BEGIN
      WITH RentalPackageProlong DO BEGIN
        RentalPackage.GET("Project No.", "Rental Unit", "Starting Date");
        RentalPackage.TESTFIELD(Status, RentalPackage.Status::Active);
        RentalPackage.TESTFIELD("Termination Reason", '');
        IF RentalPackage."Prolong Code" = "Prolong Code" THEN BEGIN
          RentalPackage.TESTFIELD("Ending Date");
          NewDate := CALCDATE(Period, RentalPackage."Ending Date");
          IF NewDate <= RentalPackage."Ending Date" THEN
            RentalPackage.FIELDERROR("Ending Date", STRSUBSTNO(Text003, RentalPackage."Ending Date", NewDate));
          RentalPackage.VALIDATE("Ending Date", NewDate);
          RentalPackage.SetSkipCheckPackageEditable(TRUE);
          RentalPackage.MODIFY(TRUE);
          CounterHead := 1;
        END;

        RentalRateLine.SETRANGE("Project No.", "Project No.");
        RentalRateLine.SETRANGE("Rental Unit", "Rental Unit");
        RentalRateLine.SETRANGE("Starting Date Package", "Starting Date");
        RentalRateLine.SETRANGE("Prolong Code", "Prolong Code");
        RentalRateLine.SETRANGE("Termination Reason", '');
        IF RentalRateLine.FINDSET(TRUE,FALSE) THEN BEGIN
          REPEAT
            RentalRateLine.TESTFIELD("Ending Date Line");
            NewDate := CALCDATE(Period, RentalRateLine."Ending Date Line");
            IF NewDate <= RentalRateLine."Ending Date Line" THEN
              RentalRateLine.FIELDERROR("Ending Date Line", STRSUBSTNO(Text003, RentalRateLine."Ending Date Line", NewDate));
            RentalRateLine.VALIDATE("Ending Date Line", NewDate);
            RentalRateLine.SetSkipCheckPackageEditable(TRUE);
            RentalRateLine.MODIFY(TRUE);
            CounterLine := CounterLine + 1;
          UNTIL RentalRateLine.NEXT = 0;
        END;
      END;
      MESSAGE(Text004, CounterHead, CounterLine);
      EXIT(CounterHead + CounterLine > 0);
    END;

    BEGIN
    END.
  }
}

