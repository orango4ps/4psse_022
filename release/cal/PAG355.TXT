OBJECT Page 355 Receivables-Payables Lines
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW111.00,4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               NOR=Linjer;
               SVE=Rader];
    LinksAllowed=No;
    SourceTable=Table2000000007;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 RESET;
               END;

    OnFindRecord=BEGIN
                   EXIT(PeriodFormMgt.FindDate(Which,Rec,PeriodType));
                 END;

    OnNextRecord=BEGIN
                   EXIT(PeriodFormMgt.NextDate(Steps,Rec,PeriodType));
                 END;

    OnAfterGetRecord=BEGIN
                       SetDateFilter;
                       GLSetup.DPA_SetFilters(CurrPage.OBJECTID(FALSE));//**4PS.n
                       //GLSetup.CALCFIELDS("Cust. Balances Due","Vendor Balances Due"); //191126
                       GLSetup.CALCFIELDS("Cust. Balances Due","Vendor Balances Due","Vendor Invoice Inw. Reg. Due","Vendor Cr.Memo Inw. Reg. Due"); //191126
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Period Start;
                           NOR=Periodens start;
                           SVE=Periodstart];
                ToolTipML=[NOR=Angir begynnelsen av perioden som dekkes av sammendragsrapporten for utestÜende belõp for kunder og leverandõrer.;
                           SVE=Anger inledningen pÜ den period som omfattas av sammanfattningsrapporten îver kundreskontra och leverantîrsreskontra.];
                ApplicationArea=#Suite;
                SourceExpr="Period Start" }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Period Name;
                           NOR=Periodenavn;
                           SVE=Periodnamn];
                ToolTipML=[ENU=Specifies the name of the period covered by the summary report of receivables for customers and payables for vendors.;
                           NOR=Angir navnet pÜ perioden som dekkes av sammendragsrapporten for utestÜende belõp for kunder og leverandõrer.;
                           SVE=Anger namnet pÜ den period som omfattas av sammanfattningsrapporten îver kundreskontra och leverantîrsreskontra.];
                ApplicationArea=#Suite;
                SourceExpr="Period Name" }

    { 22  ;2   ;Field     ;
                Name=CustBalancesDue;
                DrillDown=Yes;
                CaptionML=[ENU=Cust. Balances Due;
                           NOR=Kundesaldo, forfalt;
                           SVE=Kunders fîrfallna saldo];
                ToolTipML=[ENU=Specifies the total amount your company is owed by customers. The program automatically calculates and updates the contents of the field, using entries in the Remaining Amt. (LCY) field in the Cust. Ledger Entry table.;
                           NOR=Angir det totale belõpet som kunder skylder selskapet ditt. Programmet beregner og oppdaterer automatisk innholdet i feltet ved hjelp av postene i feltet Restbelõp (NOK) i tabellen Kundepost.;
                           SVE=Anger det totala beloppet som kunder Ñr skyldiga ditt fîretag. InnehÜllet i fÑltet berÑknas och uppdateras automatiskt baserat pÜ transaktionerna i fÑltet èterstÜende belopp (BVA) i tabellen Kundreskontratransaktion.];
                ApplicationArea=#Suite;
                SourceExpr=GLSetup."Cust. Balances Due";
                AutoFormatType=1;
                OnDrillDown=BEGIN
                              ShowCustEntriesDue;
                            END;
                             }

    { 24  ;2   ;Field     ;
                Name=VendorBalancesDue;
                DrillDown=Yes;
                CaptionML=[ENU=Vendor Balances Due;
                           NOR=Leverandõrsaldo, forfalt;
                           SVE=Leverantîrers fîrfallna saldo];
                ToolTipML=[ENU=Specifies the total amount your company owes its vendors. The program automatically calculates and updates the contents of the field, using entries in the Remaining Amt. (LCY) field in the Vendor Ledger Entry table.;
                           NOR=Angir det totale belõpet som kunder skylder sine leverandõrer. Programmet beregner og oppdaterer automatisk innholdet i feltet ved hjelp av postene i feltet Restbelõp (NOK) i tabellen Leverandõrpost.;
                           SVE=Anger det totala beloppet som ditt fîretag Ñr skyldigt leverantîrer. InnehÜllet i fÑltet berÑknas och uppdateras automatiskt baserat pÜ transaktionerna i fÑltet èterstÜende belopp (BVA) i tabellen Lev.reskontratransaktion.];
                ApplicationArea=#Suite;
                SourceExpr=GLSetup."Vendor Balances Due";
                AutoFormatType=1;
                OnDrillDown=BEGIN
                              ShowVendEntriesDue;
                            END;
                             }

    { 12  ;2   ;Field     ;
                Name=ReceivablesPayables;
                CaptionML=[ENU=Receivables-Payables;
                           NOR=Likviditetsoversikt;
                           SVE=Likviditet];
                ToolTipML=[ENU=Specifies expected payments from customers and to vendors. It does not include other transactions that affect liquidity or the liquid balance at the beginning of the period. Therefore, the amounts in the column do not represent the liquid balance at the close of the period.;
                           NOR=Angir forventede innbetalinger fra kunder og utbetalinger til leverandõrer. Den inneholder ikke andre transaksjoner som pÜvirker likviditeten eller den likvide beholdningen i begynnelsen av perioden. Belõpene i kolonnen representerer derfor ikke beholdningen av likvide midler i slutten av perioden.;
                           SVE=Anger fîrvÑntade betalningar frÜn kunder och till leverantîrer. Den tar inte med andra transaktioner som pÜverkar likviditeten eller det likvida saldot vid periodens bîrjan. Beloppen i kolumnen representerar dÑrfîr inte det likvida saldot vid periodens slut.];
                ApplicationArea=#Suite;
                SourceExpr=GLSetup."Cust. Balances Due" - GLSetup."Vendor Balances Due";
                AutoFormatType=1 }

    { 1101285000;2;Field  ;
                Name=VendorInwardRegDue;
                CaptionML=[ENU=Vendor Inward Reg. Due;
                           SVE=Leverantîrers ank. reg. saldo];
                SourceExpr=GLSetup."Vendor Invoice Inw. Reg. Due"+GLSetup."Vendor Cr.Memo Inw. Reg. Due";
                OnDrillDown=BEGIN
                              ShowInwardEntriesDue;  //191126
                            END;
                             }

  }
  CODE
  {
    VAR
      GLSetup@1000 : Record 98;
      CustLedgEntry@1001 : Record 21;
      VendLedgEntry@1002 : Record 25;
      PeriodFormMgt@1003 : Codeunit 359;
      PeriodType@1004 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      AmountType@1005 : 'Net Change,Balance at Date';

    [External]
    PROCEDURE Set@1(VAR NewGLSetup@1000 : Record 98;NewPeriodType@1001 : Integer;NewAmountType@1002 : 'Net Change,Balance at Date');
    BEGIN
      GLSetup.COPY(NewGLSetup);
      PeriodType := NewPeriodType;
      AmountType := NewAmountType;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ShowCustEntriesDue@2();
    BEGIN
      SetDateFilter;
      CustLedgEntry.RESET;
      CustLedgEntry.SETRANGE(Open,TRUE);
      CustLedgEntry.SETFILTER("Due Date",GLSetup.GETFILTER("Date Filter"));
      CustLedgEntry.SETFILTER("Global Dimension 1 Code",GLSetup.GETFILTER("Global Dimension 1 Filter"));
      CustLedgEntry.SETFILTER("Global Dimension 2 Code",GLSetup.GETFILTER("Global Dimension 2 Filter"));
      PAGE.RUN(0,CustLedgEntry)
    END;

    LOCAL PROCEDURE ShowVendEntriesDue@3();
    BEGIN
      SetDateFilter;
      VendLedgEntry.RESET;
      VendLedgEntry.SETRANGE(Open,TRUE);
      VendLedgEntry.SETFILTER("Due Date",GLSetup.GETFILTER("Date Filter"));
      VendLedgEntry.SETFILTER("Global Dimension 1 Code",GLSetup.GETFILTER("Global Dimension 1 Filter"));
      VendLedgEntry.SETFILTER("Global Dimension 2 Code",GLSetup.GETFILTER("Global Dimension 2 Filter"));
      PAGE.RUN(0,VendLedgEntry);
    END;

    LOCAL PROCEDURE SetDateFilter@4();
    BEGIN
      IF AmountType = AmountType::"Net Change" THEN
        GLSetup.SETRANGE("Date Filter","Period Start","Period End")
      ELSE
        GLSetup.SETRANGE("Date Filter",0D,"Period End");
    END;

    LOCAL PROCEDURE ShowInwardEntriesDue@1000000000();
    VAR
      InwardRegEntry@1000000000 : Record 11128012;
    BEGIN
      //191126
      SetDateFilter;
      VendLedgEntry.RESET;
      InwardRegEntry.SETRANGE(Open,TRUE);
      InwardRegEntry.SETFILTER("Due Date",GLSetup.GETFILTER("Date Filter"));
      PAGE.RUN(0,InwardRegEntry);
    END;

    BEGIN
    {
      191126 #26301 Added Code, New Function - ShowInwardEntriesDue
    }
    END.
  }
}

