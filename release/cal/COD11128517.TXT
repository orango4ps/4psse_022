OBJECT Codeunit 11128517 Payroll Integration Tools
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVNO7.10 (15000200);
  }
  PROPERTIES
  {
    Permissions=TableData 25=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      AboutPayrollInt@1080000 : TextConst 'ENU=Payroll Integration version %1\¸ Microsoft Business Solutions Norway.;NOR=L›nnsintegrasjonsversjon %1\¸ Microsoft Business Solutions Norge.';
      NotEmptyJnlQst@1080001 : TextConst 'ENU=Journal is not empty.\Continue and add new lines?;NOR=Kladden er ikke tom.\Vil du fortsette og legge til nye linjer?';

    PROCEDURE AboutPayrollIntegration@22();
    VAR
      Version@1000000000 : Text[30];
    BEGIN
      Version := '3.40.00';
      MESSAGE(AboutPayrollInt,Version);
    END;

    PROCEDURE NewFilename@16(fileName@1080000 : Text[250]) : Text[250];
    VAR
      FileMgt@1080003 : Codeunit 419;
      file1@1080001 : Text[250];
      file2@1080002 : Text[250];
    BEGIN
      // Renames the file. Example: file name='c:\payment.dat':
      // 1. File 'c:\payment.d~~' is deleted.
      // 2. File 'c:\payment.da~' is renamed to 'c:\payment.d~~'.
      // 3. File 'c:\payment.dat' is renamed to 'c:\payment.da~'.
      // This is used to save old versions of payment files and return data.
      // If the user forgets to import a file, a ~ sign will be added to the file name after the next import.
      // RETURNS: New file name of the current file

      // If one of the two last characters of the filename is ~ , the new file name is NOT created
      // This because the file name is already used. For.ex. if the user
      // - imports an old file
      IF FileMgt.ClientFileExists(fileName) THEN BEGIN
        IF (COPYSTR(fileName,STRLEN(fileName) - 1,1) = '~') OR
           (COPYSTR(fileName,STRLEN(fileName) - 2,1) = '~')
        THEN
          EXIT;

        file1 := COPYSTR(fileName,1,STRLEN(fileName) - 1) + '~';
        file2 := COPYSTR(fileName,1,STRLEN(fileName) - 2) + '~~';
        IF FileMgt.ClientFileExists(file2) THEN
          FileMgt.DeleteClientFile(file2);
        IF FileMgt.ClientFileExists(file1) THEN
          FileMgt.MoveFile(file1,file2);
        FileMgt.MoveFile(fileName,file1);
      END;

      EXIT(file1);
    END;

    PROCEDURE CheckJournal@1(VAR NextLineNo@1080000 : Integer;DefGenJnlLine@1080001 : Record 81);
    VAR
      GenJnlLine@1080002 : Record 81;
      PayrollSetup@1080003 : Record 11128513;
    BEGIN
      // Make sure the correct def. journal is used, if any specified
      PayrollSetup.GET;
      IF PayrollSetup."Journal Template Name" <> '' THEN BEGIN
        DefGenJnlLine.TESTFIELD("Journal Template Name",PayrollSetup."Journal Template Name");
        DefGenJnlLine.TESTFIELD("Journal Batch Name",PayrollSetup."Journal Name");
      END;

      GenJnlLine.SETRANGE("Journal Template Name",DefGenJnlLine."Journal Template Name");
      GenJnlLine.SETRANGE("Journal Batch Name",DefGenJnlLine."Journal Batch Name");
      IF GenJnlLine.FINDLAST THEN BEGIN
        IF CONFIRM(NotEmptyJnlQst) THEN
          NextLineNo := GenJnlLine."Line No." + 10000
        ELSE
          ERROR('');
      END ELSE
        NextLineNo := 0;
    END;

    BEGIN
    END.
  }
}

