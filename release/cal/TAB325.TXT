OBJECT Table 325 VAT Posting Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04,4PS14.00,NAVNO,4PSSE;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "VAT %" = 0 THEN
                 "VAT %" := GetVATPtc;
             END;

    OnDelete=BEGIN
               CheckSetupUsage;
             END;

    CaptionML=[ENU=VAT Posting Setup;
               NOR=Mva-bokf›ringsoppsett;
               SVE=Moms bokf”ringsinst„llning];
    LookupPageID=Page472;
    DrillDownPageID=Page472;
  }
  FIELDS
  {
    { 1   ;   ;VAT Bus. Posting Group;Code20      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              NOR=Mva-bokf›ringsgruppe - firma;
                                                              SVE=Moms r”relsebokf”ringsmall] }
    { 2   ;   ;VAT Prod. Posting Group;Code20     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              NOR=Mva-bokf›ringsgruppe - vare;
                                                              SVE=Moms produktbokf”ringsmall] }
    { 3   ;   ;VAT Calculation Type;Option        ;CaptionML=[ENU=VAT Calculation Type;
                                                              NOR=Mva-beregningstype;
                                                              SVE=Momsber„kningstyp];
                                                   OptionCaptionML=[ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                                    NOR=Normal mva.,Snudd avregning,Full mva.,Salgsmva.;
                                                                    SVE=Normal moms,Omv„nd EG-moms,Enbart moms,Oms„ttningsskatt];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax }
    { 4   ;   ;VAT %               ;Decimal       ;OnValidate=BEGIN
                                                                TestNotSalesTax(FIELDCAPTION("VAT %"));
                                                                CheckVATIdentifier;
                                                              END;

                                                   CaptionML=[ENU=VAT %;
                                                              NOR=Mva-%;
                                                              SVE=Momssats %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 5   ;   ;Unrealized VAT Type ;Option        ;OnValidate=BEGIN
                                                                TestNotSalesTax(FIELDCAPTION("Unrealized VAT Type"));

                                                                IF "Unrealized VAT Type" > 0 THEN BEGIN
                                                                  GLSetup.GET;
                                                                  IF NOT GLSetup."Unrealized VAT" AND NOT GLSetup."Prepayment Unrealized VAT" THEN
                                                                    GLSetup.TESTFIELD("Unrealized VAT",TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Unrealized VAT Type;
                                                              NOR=Urealisert mva-type;
                                                              SVE=Hantering oreal. moms];
                                                   OptionCaptionML=[ENU=" ,Percentage,First,Last,First (Fully Paid),Last (Fully Paid)";
                                                                    NOR=" ,Prosent,F›rst,Sist,F›rst (Fullt betalt),Sist (Fullt betalt)";
                                                                    SVE=" ,Procentuell f”rdelning,F”rst moms,Sist moms,F”rst moms (hela bel.),Sist moms (hela bel.)"];
                                                   OptionString=[ ,Percentage,First,Last,First (Fully Paid),Last (Fully Paid)] }
    { 6   ;   ;Adjust for Payment Discount;Boolean;OnValidate=BEGIN
                                                                TestNotSalesTax(FIELDCAPTION("Adjust for Payment Discount"));

                                                                IF "Adjust for Payment Discount" THEN BEGIN
                                                                  GLSetup.GET;
                                                                  GLSetup.TESTFIELD("Adjust for Payment Disc.",TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Adjust for Payment Discount;
                                                              NOR=Juster for kontantrabatt;
                                                              SVE=Justera f”r kassarabatt] }
    { 7   ;   ;Sales VAT Account   ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                TestNotSalesTax(FIELDCAPTION("Sales VAT Account"));

                                                                CheckGLAcc("Sales VAT Account");
                                                              END;

                                                   CaptionML=[ENU=Sales VAT Account;
                                                              NOR=Utg†ende mva-konto;
                                                              SVE=Utg†ende moms] }
    { 8   ;   ;Sales VAT Unreal. Account;Code20   ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                TestNotSalesTax(FIELDCAPTION("Sales VAT Unreal. Account"));

                                                                CheckGLAcc("Sales VAT Unreal. Account");
                                                              END;

                                                   CaptionML=[ENU=Sales VAT Unreal. Account;
                                                              NOR=Konto for ureal. utg†ende mva;
                                                              SVE=Oreal. utg†ende moms] }
    { 9   ;   ;Purchase VAT Account;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                TestNotSalesTax(FIELDCAPTION("Purchase VAT Account"));

                                                                CheckGLAcc("Purchase VAT Account");
                                                              END;

                                                   CaptionML=[ENU=Purchase VAT Account;
                                                              NOR=Inng†ende mva-konto;
                                                              SVE=Konto f”r ing†ende moms] }
    { 10  ;   ;Purch. VAT Unreal. Account;Code20  ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                TestNotSalesTax(FIELDCAPTION("Purch. VAT Unreal. Account"));

                                                                CheckGLAcc("Purch. VAT Unreal. Account");
                                                              END;

                                                   CaptionML=[ENU=Purch. VAT Unreal. Account;
                                                              NOR=Konto for ureal. inng†ende mva;
                                                              SVE=Oreal. ing†ende moms] }
    { 11  ;   ;Reverse Chrg. VAT Acc.;Code20      ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                TestNotSalesTax(FIELDCAPTION("Reverse Chrg. VAT Acc."));

                                                                CheckGLAcc("Reverse Chrg. VAT Acc.");
                                                              END;

                                                   CaptionML=[ENU=Reverse Chrg. VAT Acc.;
                                                              NOR=Snudd avregning-konto;
                                                              SVE=Omv„nd EG-moms] }
    { 12  ;   ;Reverse Chrg. VAT Unreal. Acc.;Code20;
                                                   TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                TestNotSalesTax(FIELDCAPTION("Reverse Chrg. VAT Unreal. Acc."));

                                                                CheckGLAcc("Reverse Chrg. VAT Unreal. Acc.");
                                                              END;

                                                   CaptionML=[ENU=Reverse Chrg. VAT Unreal. Acc.;
                                                              NOR=Ureal. snudd avregn.-konto;
                                                              SVE=Oreal. omv„nd EG-moms] }
    { 13  ;   ;VAT Identifier      ;Code20        ;OnValidate=BEGIN
                                                                "VAT %" := GetVATPtc;
                                                              END;

                                                   CaptionML=[ENU=VAT Identifier;
                                                              NOR=Mva-type;
                                                              SVE=Moms-ID] }
    { 14  ;   ;EU Service          ;Boolean       ;CaptionML=[ENU=EU Service;
                                                              NOR=EU-tjeneste;
                                                              SVE=EU-tj„nst] }
    { 15  ;   ;VAT Clause Code     ;Code20        ;TableRelation="VAT Clause";
                                                   CaptionML=[ENU=VAT Clause Code;
                                                              NOR=Mva-setningskode;
                                                              SVE=Kod f”r momsklausul] }
    { 16  ;   ;Certificate of Supply Required;Boolean;
                                                   CaptionML=[ENU=Certificate of Supply Required;
                                                              NOR=Mottaksdeklarasjon er obligatorisk;
                                                              SVE=Leveransintyg kr„vs] }
    { 17  ;   ;Tax Category        ;Code10        ;CaptionML=[ENU=Tax Category;
                                                              NOR=Avgiftskategori;
                                                              SVE=Momskategori] }
    { 20  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 10604;  ;Calc. Prop. Deduction VAT;Boolean  ;CaptionML=[ENU=Calc. Prop. Deduction VAT;
                                                              NOR=Beregn forholdsmessig fradrag];
                                                   Description=NAVNO (10604) }
    { 10605;  ;Proportional Deduction VAT %;Decimal;
                                                   CaptionML=[ENU=Proportional Deduction VAT %;
                                                              NOR=Forholdsmessig fradrags-%];
                                                   DecimalPlaces=0:5;
                                                   Description=NAVNO (10605) }
    { 10606;  ;VAT Code            ;Code10        ;TableRelation="VAT Code".Code;
                                                   OnValidate=VAR
                                                                VATPostingSetup@1080000 : Record 325;
                                                              BEGIN
                                                                // Test for unique VAT Code in the VAT Posting Setup
                                                                IF "VAT Code" <> '' THEN BEGIN
                                                                  VATPostingSetup.SETRANGE("VAT Code","VAT Code");
                                                                  IF VATPostingSetup.FINDFIRST THEN
                                                                    ERROR(
                                                                      Text1080000,FIELDNAME("VAT Code"),TABLENAME,VATPostingSetup."VAT Bus. Posting Group",
                                                                      VATPostingSetup."VAT Prod. Posting Group");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=VAT Code;
                                                              NOR=Mva-kode;
                                                              SVE=Momskod];
                                                   Description=NAVNO (10606) }
    { 10608;  ;VAT Settlement Rate ;Option        ;CaptionML=[ENU=VAT Settlement Rate;
                                                              NOR=Kurs for Mva-oppgj›r];
                                                   OptionCaptionML=[ENU=Normal,Medium,Low;
                                                                    NOR=Normal,Middels,Lav];
                                                   OptionString=Normal,Medium,Low;
                                                   Description=NAVNO (10608) }
    { 10609;  ;Sales VAT Reporting Code;Code10    ;TableRelation="VAT Code".Code;
                                                   CaptionML=[ENU=Sales VAT Reporting Code;
                                                              NOR=Mva-rapporteringskode for salg];
                                                   Description=NAVNO (10609) }
    { 10610;  ;Purchase VAT Reporting Code;Code10 ;TableRelation="VAT Code".Code;
                                                   CaptionML=[ENU=Purchase VAT Reporting Code;
                                                              NOR=Mva-rapporteringskode for kj›p];
                                                   Description=NAVNO (10610) }
    { 10670;  ;Sales SAF-T Tax Code;Integer       ;CaptionML=[ENU=Sales SAF-T Tax Code;
                                                              NOR=SAF-T-avgiftskode for salg];
                                                   Description=NAVNO14.04 }
    { 10671;  ;Purchase SAF-T Tax Code;Integer    ;CaptionML=[ENU=Purchase SAF-T Tax Code;
                                                              NOR=SAF-T-avgiftskode for kj›p];
                                                   Description=NAVNO14.04 }
    { 10672;  ;Sales SAF-T Standard Tax Code;Code10;
                                                   CaptionML=[ENU=Sales SAF-T Standard Tax Code;
                                                              NOR=Standard SAF-T-avgiftskode for salg];
                                                   Description=NAVNO14.04 }
    { 10673;  ;Purch. SAF-T Standard Tax Code;Code10;
                                                   CaptionML=[ENU=Purchase SAF-T Standard Tax Code;
                                                              NOR=Standard SAF-T-avgiftskode for kj›p];
                                                   Description=NAVNO14.04 }
    { 11012000;;Manually           ;Boolean       ;CaptionML=[ENU=Manually;
                                                              NOR=Manuelt;
                                                              SVE=Manuellt] }
    { 11012010;;VAT Irrecoverable Invoices;Code20 ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("VAT Irrecoverable Invoices");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=VAT Irrecoverable Invoices }
    { 11012020;;VAT Unpaid Invoices;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("VAT Irrecoverable Invoices");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=VAT Unpaid Invoices }
    { 11128000;;Print as Construct VAT;Boolean    ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Print as Construct VAT;
                                                              SVE=Skriv ut som byggmoms];
                                                   Description=SRSE-1001 }
  }
  KEYS
  {
    {    ;VAT Bus. Posting Group,VAT Prod. Posting Group;
                                                   Clustered=Yes }
    {    ;VAT Prod. Posting Group,VAT Bus. Posting Group }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 must be entered on the tax jurisdiction line when %2 is %3.;NOR=%1 m† angis p† mva-jurisdiksjonslinjen n†r %2 er %3.;SVE=%1 m†ste anges p† skattemyndighetsraden n„r %2 „r %3.';
      Text001@1001 : TextConst 'ENU="%1 = %2 has already been used for %3 = %4 in %5 for %6 = %7 and %8 = %9.";NOR="%1 = %2 er allerede brukt for %3 = %4 i %5 for %6 = %7 og %8 = %9.";SVE="%1 = %2 har redan anv„ndts f”r %3 = %4 i %5 f”r %6 = %7 och %8 = %9."';
      GLSetup@1002 : Record 98;
      PostingSetupMgt@1005 : Codeunit 48;
      YouCannotDeleteErr@1004 : TextConst '@@@="%1 = Location Code; %2 = Posting Group";ENU=You cannot delete %1 %2.;NOR=Du kan ikke slette %1 %2.;SVE=Du kan inte ta bort %1 %2.';
      Text1080000@1080000 : TextConst 'ENU=%1 is already used in %2 %3, %4.;NOR=%1 er allerede brukt i %2 %3, %4.';
      AlreadyUsedErr@1100285101 : TextConst 'ENU=%1 is already used in VAT posting setup %2, %3, field %4'';NOR=%1 er allerede brukt i mva-bokf›ringsoppsett %2, %3, felt %4';
      SAFTTaxCodeLbl@1100285100 : TextConst 'ENU=SAF-T Tax Code;NOR=SAF-T-avgiftskode';

    [External]
    PROCEDURE CheckGLAcc@2(AccNo@1000 : Code[20]);
    VAR
      GLAcc@1001 : Record 15;
    BEGIN
      IF AccNo <> '' THEN BEGIN
        GLAcc.GET(AccNo);
        GLAcc.CheckGLAcc;
      END;
    END;

    LOCAL PROCEDURE CheckSetupUsage@24();
    VAR
      GLEntry@1000 : Record 17;
    BEGIN
      GLEntry.SETRANGE("VAT Bus. Posting Group","VAT Bus. Posting Group");
      GLEntry.SETRANGE("VAT Prod. Posting Group","VAT Prod. Posting Group");
      IF NOT GLEntry.ISEMPTY THEN
        ERROR(YouCannotDeleteErr,"VAT Bus. Posting Group","VAT Prod. Posting Group");
    END;

    [External]
    PROCEDURE TestNotSalesTax@1(FromFieldName@1000 : Text[100]);
    BEGIN
      IF "VAT Calculation Type" = "VAT Calculation Type"::"Sales Tax" THEN
        ERROR(
          Text000,
          FromFieldName,FIELDCAPTION("VAT Calculation Type"),
          "VAT Calculation Type");
    END;

    LOCAL PROCEDURE CheckVATIdentifier@14();
    VAR
      VATPostingSetup@1000 : Record 325;
    BEGIN
      VATPostingSetup.SETRANGE("VAT Bus. Posting Group","VAT Bus. Posting Group");
      VATPostingSetup.SETFILTER("VAT Prod. Posting Group",'<>%1',"VAT Prod. Posting Group");
      VATPostingSetup.SETFILTER("VAT %",'<>%1',"VAT %");
      VATPostingSetup.SETRANGE("VAT Identifier","VAT Identifier");
      IF VATPostingSetup.FINDFIRST THEN
        ERROR(
          Text001,
          FIELDCAPTION("VAT Identifier"),VATPostingSetup."VAT Identifier",
          FIELDCAPTION("VAT %"),VATPostingSetup."VAT %",TABLECAPTION,
          FIELDCAPTION("VAT Bus. Posting Group"),VATPostingSetup."VAT Bus. Posting Group",
          FIELDCAPTION("VAT Prod. Posting Group"),VATPostingSetup."VAT Prod. Posting Group");
    END;

    LOCAL PROCEDURE GetVATPtc@3() : Decimal;
    VAR
      VATPostingSetup@1000 : Record 325;
    BEGIN
      VATPostingSetup.SETRANGE("VAT Bus. Posting Group","VAT Bus. Posting Group");
      VATPostingSetup.SETFILTER("VAT Prod. Posting Group",'<>%1',"VAT Prod. Posting Group");
      VATPostingSetup.SETRANGE("VAT Identifier","VAT Identifier");
      IF NOT VATPostingSetup.FINDFIRST THEN
        VATPostingSetup."VAT %" := "VAT %";
      EXIT(VATPostingSetup."VAT %");
    END;

    [External]
    PROCEDURE GetSalesAccount@4(Unrealized@1000 : Boolean) : Code[20];
    VAR
      SalesVATAccountNo@1002 : Code[20];
      IsHandled@1001 : Boolean;
    BEGIN
      OnBeforeGetSalesAccount(Rec,Unrealized,SalesVATAccountNo,IsHandled);
      IF IsHandled THEN
        EXIT(SalesVATAccountNo);

      IF Unrealized THEN BEGIN
        IF "Sales VAT Unreal. Account" = '' THEN
          PostingSetupMgt.SendVATPostingSetupNotification(Rec,FIELDCAPTION("Sales VAT Unreal. Account"));
        TESTFIELD("Sales VAT Unreal. Account");
        EXIT("Sales VAT Unreal. Account");
      END;
      IF "Sales VAT Account" = '' THEN
        PostingSetupMgt.SendVATPostingSetupNotification(Rec,FIELDCAPTION("Sales VAT Account"));
      TESTFIELD("Sales VAT Account");
      EXIT("Sales VAT Account");
    END;

    [External]
    PROCEDURE GetPurchAccount@5(Unrealized@1000 : Boolean) : Code[20];
    VAR
      PurchVATAccountNo@1001 : Code[20];
      IsHandled@1002 : Boolean;
    BEGIN
      OnBeforeGetPurchAccount(Rec,Unrealized,PurchVATAccountNo,IsHandled);
      IF IsHandled THEN
        EXIT(PurchVATAccountNo);

      IF Unrealized THEN BEGIN
        IF "Purch. VAT Unreal. Account" = '' THEN
          PostingSetupMgt.SendVATPostingSetupNotification(Rec,FIELDCAPTION("Purch. VAT Unreal. Account"));
        TESTFIELD("Purch. VAT Unreal. Account");
        EXIT("Purch. VAT Unreal. Account");
      END;
      IF "Purchase VAT Account" = '' THEN
        PostingSetupMgt.SendVATPostingSetupNotification(Rec,FIELDCAPTION("Purchase VAT Account"));
      TESTFIELD("Purchase VAT Account");
      EXIT("Purchase VAT Account");
    END;

    [External]
    PROCEDURE GetRevChargeAccount@6(Unrealized@1000 : Boolean) : Code[20];
    BEGIN
      IF Unrealized THEN BEGIN
        IF "Reverse Chrg. VAT Unreal. Acc." = '' THEN
          PostingSetupMgt.SendVATPostingSetupNotification(Rec,FIELDCAPTION("Reverse Chrg. VAT Unreal. Acc."));
        TESTFIELD("Reverse Chrg. VAT Unreal. Acc.");
        EXIT("Reverse Chrg. VAT Unreal. Acc.");
      END;
      IF "Reverse Chrg. VAT Acc." = '' THEN
        PostingSetupMgt.SendVATPostingSetupNotification(Rec,FIELDCAPTION("Reverse Chrg. VAT Acc."));
      TESTFIELD("Reverse Chrg. VAT Acc.");
      EXIT("Reverse Chrg. VAT Acc.");
    END;

    [External]
    PROCEDURE SetAccountsVisibility@8(VAR UnrealizedVATVisible@1000 : Boolean;VAR AdjustForPmtDiscVisible@1001 : Boolean);
    BEGIN
      GLSetup.GET;
      UnrealizedVATVisible := GLSetup."Unrealized VAT" OR GLSetup."Prepayment Unrealized VAT";
      AdjustForPmtDiscVisible := GLSetup."Adjust for Payment Disc.";
    END;

    [External]
    PROCEDURE SuggestSetupAccounts@26();
    VAR
      RecRef@1000 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      SuggestVATAccounts(RecRef);
      RecRef.MODIFY;
    END;

    LOCAL PROCEDURE SuggestVATAccounts@30(VAR RecRef@1000 : RecordRef);
    BEGIN
      IF "Sales VAT Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Sales VAT Account"));
      IF "Purchase VAT Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Purchase VAT Account"));

      IF "Unrealized VAT Type" > 0 THEN BEGIN
        IF "Sales VAT Unreal. Account" = '' THEN
          SuggestAccount(RecRef,FIELDNO("Sales VAT Unreal. Account"));
        IF "Purch. VAT Unreal. Account" = '' THEN
          SuggestAccount(RecRef,FIELDNO("Purch. VAT Unreal. Account"));
      END;

      IF "VAT Calculation Type" = "VAT Calculation Type"::"Reverse Charge VAT" THEN BEGIN
        IF "Reverse Chrg. VAT Acc." = '' THEN
          SuggestAccount(RecRef,FIELDNO("Reverse Chrg. VAT Acc."));
        IF ("Unrealized VAT Type" > 0) AND ("Reverse Chrg. VAT Unreal. Acc." = '') THEN
          SuggestAccount(RecRef,FIELDNO("Reverse Chrg. VAT Unreal. Acc."));
      END;
    END;

    LOCAL PROCEDURE SuggestAccount@34(VAR RecRef@1000 : RecordRef;AccountFieldNo@1001 : Integer);
    VAR
      TempAccountUseBuffer@1002 : TEMPORARY Record 63;
      RecFieldRef@1003 : FieldRef;
      VATPostingSetupRecRef@1005 : RecordRef;
      VATPostingSetupFieldRef@1006 : FieldRef;
    BEGIN
      VATPostingSetupRecRef.OPEN(DATABASE::"VAT Posting Setup");

      VATPostingSetupRecRef.RESET;
      VATPostingSetupFieldRef := VATPostingSetupRecRef.FIELD(FIELDNO("VAT Bus. Posting Group"));
      VATPostingSetupFieldRef.SETRANGE("VAT Bus. Posting Group");
      VATPostingSetupFieldRef := VATPostingSetupRecRef.FIELD(FIELDNO("VAT Prod. Posting Group"));
      VATPostingSetupFieldRef.SETFILTER('<>%1',"VAT Prod. Posting Group");
      TempAccountUseBuffer.UpdateBuffer(VATPostingSetupRecRef,AccountFieldNo);

      VATPostingSetupRecRef.RESET;
      VATPostingSetupFieldRef := VATPostingSetupRecRef.FIELD(FIELDNO("VAT Bus. Posting Group"));
      VATPostingSetupFieldRef.SETFILTER('<>%1',"VAT Bus. Posting Group");
      VATPostingSetupFieldRef := VATPostingSetupRecRef.FIELD(FIELDNO("VAT Prod. Posting Group"));
      VATPostingSetupFieldRef.SETRANGE("VAT Prod. Posting Group");
      TempAccountUseBuffer.UpdateBuffer(VATPostingSetupRecRef,AccountFieldNo);

      VATPostingSetupRecRef.CLOSE;

      TempAccountUseBuffer.RESET;
      TempAccountUseBuffer.SETCURRENTKEY("No. of Use");
      IF TempAccountUseBuffer.FINDLAST THEN BEGIN
        RecFieldRef := RecRef.FIELD(AccountFieldNo);
        RecFieldRef.VALUE(TempAccountUseBuffer."Account No.");
      END;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeGetPurchAccount@9(VAR VATPostingSetup@1000 : Record 325;Unrealized@1001 : Boolean;VAR PurchVATAccountNo@1002 : Code[20];VAR IsHandled@1003 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeGetSalesAccount@7(VAR VATPostingSetup@1000 : Record 325;Unrealized@1001 : Boolean;VAR SalesVATAccountNo@1002 : Code[20];VAR IsHandled@1003 : Boolean);
    BEGIN
    END;

    PROCEDURE AssignSAFTTaxCodes@1100285101();
    VAR
      SAFTSetup@1100285100 : Record 11072490;
    BEGIN
      //NAVNO14.04
      SAFTSetup.LOCKTABLE;
      IF NOT SAFTSetup.GET THEN BEGIN
        SAFTSetup.INIT;
        SAFTSetup.INSERT;
      END;
      "Sales SAF-T Tax Code" := SAFTSetup."Last Tax Code" + 1;
      "Purchase SAF-T Tax Code" := "Sales SAF-T Tax Code" + 1;
      SAFTSetup."Last Tax Code" := "Purchase SAF-T Tax Code";
      SAFTSetup.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE VerifyTaxCodeExists@1100285102(NewTaxCode@1100285101 : Integer);
    VAR
      VATPostingSetup@1100285100 : Record 325;
    BEGIN
      //NAVNO14.04
      VATPostingSetup.SETRANGE("Sales SAF-T Tax Code", NewTaxCode);
      IF VATPostingSetup.FINDFIRST() THEN
        ERROR(
          AlreadyUsedErr, SAFTTaxCodeLbl, VATPostingSetup."VAT Bus. Posting Group", VATPostingSetup."VAT Prod. Posting Group", FIELDCAPTION("Sales SAF-T Tax Code"));
      VATPostingSetup.SETRANGE("Sales SAF-T Tax Code");
      VATPostingSetup.SETRANGE("Purchase SAF-T Tax Code", NewTaxCode);
      IF VATPostingSetup.FINDFIRST() THEN
        ERROR(
          AlreadyUsedErr, SAFTTaxCodeLbl, VATPostingSetup."VAT Bus. Posting Group", VATPostingSetup."VAT Prod. Posting Group", FIELDCAPTION("Purchase SAF-T Tax Code"));
    END;

    BEGIN
    {
      190805 ORANGO.DL SRSE-1001, ConstructVAT
    }
    END.
  }
}

