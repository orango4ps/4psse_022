OBJECT Page 83805 User Personalization Card Cert
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Change Profile;
               NOR=Endre profil;
               SVE=Žndra profil];
    SourceTable=Table2000000073;
    DataCaptionExpr="User ID";
    DelayedInsert=Yes;
    PageType=Card;
    OnInit=BEGIN
             IF NOT UserSetup.GET(USERID) THEN
               ERROR(Err001,USERID);
             IF NOT UserSetup."Allow Change Profile" THEN
               ERROR(Err002,USERID);
           END;

    OnOpenPage=BEGIN
                 HideExternalUsers;
                 SETRANGE("User ID",USERID);
               END;

    OnAfterGetRecord=BEGIN
                       AUP."Profile ID" := "Profile ID";
                     END;

    OnInsertRecord=BEGIN
                     TESTFIELD("User SID");
                   END;

    OnModifyRecord=BEGIN
                     TESTFIELD("User SID");
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 13      ;1   ;ActionGroup;
                      CaptionML=[ENU=User &Personalization;
                                 NOR=&Brukertilpasning;
                                 SVE=Anv„ndaran&passning];
                      Image=Grid }
      { 14      ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+L;
                      CaptionML=[ENU=List;
                                 NOR=Oversikt;
                                 SVE=Lista];
                      ToolTipML=[ENU=View or edit a list of all users who have personalized their user interface by customizing one or more pages.;
                                 NOR=Vis eller rediger en liste med alle brukere som har tilpasset brukergrensesnittet ved † tilpasse ‚n eller flere sider.;
                                 SVE=Visa eller redigera en lista med alla anv„ndare som har anpassat sitt anv„ndargr„nssnitt genom att anpassa en eller flera sidor.];
                      ApplicationArea=#Basic,#Suite;
                      Image=OpportunitiesList;
                      OnAction=VAR
                                 UserPersList@1102601000 : Page 9173;
                               BEGIN
                                 UserPersList.LOOKUPMODE := TRUE;
                                 UserPersList.SETRECORD(Rec);
                                 IF UserPersList.RUNMODAL = ACTION::LookupOK THEN
                                   UserPersList.GETRECORD(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=Allm„nt] }

    { 4   ;2   ;Field     ;
                DrillDown=No;
                CaptionML=[ENU=User ID;
                           NOR=Bruker-ID;
                           SVE=Anv„ndar-ID];
                ToolTipML=[ENU=Specifies the user ID of a user who is using Database Server Authentication to log on to Dynamics NAV.;
                           NOR=Angir bruker-ID-en for en bruker som bruker Databaseservergodkjenning til † logge p† Dynamics NAV.;
                           SVE=Anger anv„ndar-ID:t f”r en anv„ndare som anv„nder Databasserververifiering f”r att logga in i Dynamics NAV.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="User ID";
                Enabled=FALSE;
                Editable=FALSE;
                OnAssistEdit=VAR
                               UserPersonalization@1005 : Record 2000000073;
                               UserMgt@1002 : Codeunit 418;
                               SID@1006 : GUID;
                               UserID@1001 : Code[50];
                             BEGIN
                               UserMgt.LookupUser(UserID,SID);

                               IF (SID <> "User SID") AND NOT ISNULLGUID(SID) THEN BEGIN
                                 IF UserPersonalization.GET(SID) THEN BEGIN
                                   UserPersonalization.CALCFIELDS("User ID");
                                   ERROR(Text000,TABLECAPTION,UserPersonalization."User ID");
                                 END;

                                 VALIDATE("User SID",SID);
                                 CALCFIELDS("User ID");

                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Profile ID;
                           NOR=Profil-ID;
                           SVE=Profil-ID];
                ToolTipML=[ENU=Specifies the ID of the profile that is associated with the current user.;
                           NOR=Angir ID-en for profilen som er knyttet til den gjeldende brukeren.;
                           SVE=Anger id:t f”r den profil som „r kopplad till den aktuella anv„ndaren.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AUP."Profile ID";
                TableRelation="Allowed User Profiels"."Profile ID" WHERE (User ID=FIELD(User ID));
                LookupPageID=Allowed User Profiles;
                OnValidate=BEGIN
                             VALIDATE("Profile ID",AUP."Profile ID");
                           END;
                            }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Language ID;
                           NOR=Spr†k-ID;
                           SVE=Spr†k-ID];
                ToolTipML=[ENU=Specifies the ID of the language that Microsoft Windows is set up to run for the selected user.;
                           NOR=Angir ID-en for spr†ket som Microsoft Windows er konfigurert til † kj›re for den valgte brukeren.;
                           SVE=Anger id:t f”r spr†ket som Microsoft Windows ska k”ra f”r den valda anv„ndaren.];
                BlankZero=Yes;
                SourceExpr="Language ID";
                OnValidate=VAR
                             LanguageManagement@1000000000 : Codeunit 43;
                           BEGIN
                             LanguageManagement.ValidateApplicationLanguage("Language ID");
                           END;

                OnLookup=VAR
                           LanguageManagement@1000000001 : Codeunit 43;
                         BEGIN
                           LanguageManagement.LookupApplicationLanguage("Language ID");

                           IF "Language ID" <> xRec."Language ID" THEN
                             VALIDATE("Language ID","Language ID");
                         END;
                          }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Locale ID;
                           NOR=ID for nasjonal innstilling;
                           SVE=Spr†kvariant-ID];
                ToolTipML=[ENU=Specifies the ID of the locale that Microsoft Windows is set up to run for the selected user.;
                           NOR=Angir ID-en for den nasjonale innstillingen som Microsoft Windows er konfigurert til † kj›re for den valgte brukeren.;
                           SVE=Anger id:t f”r de nationella inst„llningar som Microsoft Windows ska anv„nda f”r den valda anv„ndaren.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Locale ID";
                TableRelation="Windows Language"."Language ID";
                Importance=Additional }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=Time Zone;
                           NOR=Tidssone;
                           SVE=Tidszon];
                ToolTipML=[ENU=Specifies the time zone that Microsoft Windows is set up to run for the selected user.;
                           NOR=Angir tidssonen som Microsoft Windows er konfigurert til † kj›re for den valgte brukeren.;
                           SVE=Anger tidszonen som Microsoft Windows ska anv„nda f”r den valda anv„ndaren.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Time Zone";
                Importance=Additional;
                OnValidate=BEGIN
                             ConfPersMgt.ValidateTimeZone("Time Zone")
                           END;

                OnLookup=BEGIN
                           EXIT(ConfPersMgt.LookupTimeZone(Text))
                         END;
                          }

    { 10  ;2   ;Field     ;
                CaptionML=[ENU=Company;
                           NOR=Selskap;
                           SVE=F”retag];
                ToolTipML=[ENU=Specifies the company that is associated with the user.;
                           NOR=Angir selskapet som er knyttet til brukeren.;
                           SVE=Anger f”retaget som „r kopplat till anv„ndaren.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Company }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ConfPersMgt@1000 : Codeunit 9170;
      Text000@1008 : TextConst '@@@=User Personalization User1 already exists.;ENU=%1 %2 already exists.;NOR=%1 %2 finnes allerede.;SVE=%1 %2 finns redan.';
      UserSetup@1100583000 : Record 91;
      Err001@1100583001 : TextConst 'ENU=User Setup dosent exist for %1!;SVE=Anv„ndarinst„llning saknas f”r %1!';
      Err002@1100583002 : TextConst 'ENU=%1 does not have permission to change profile!;SVE=%1 saknar beh”righet att „ndra profil!';
      AUP@110128000 : Record 83801;

    LOCAL PROCEDURE HideExternalUsers@5();
    VAR
      PermissionManager@1001 : Codeunit 9002;
      OriginalFilterGroup@1000 : Integer;
    BEGIN
      IF NOT PermissionManager.SoftwareAsAService THEN
        EXIT;

      OriginalFilterGroup := FILTERGROUP;
      FILTERGROUP := 2;
      CALCFIELDS("License Type");
      SETFILTER("License Type",'<>%1',"License Type"::"External User");
      FILTERGROUP := OriginalFilterGroup;
    END;

    BEGIN
    END.
  }
}

