OBJECT XMLport 11020207 Exchange User Data
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Exchange Users;
  }
  ELEMENTS
  {
    { [{737D6D1A-8B94-4AE0-B8AB-53E499E4D272}];  ;Root                ;Element ;Text    ;
                                                  VariableName=<Root> }

    { [{1A443120-7111-4F05-844E-62DB4783CB66}];1 ;UserGroup           ;Element ;Table   ;
                                                  SourceTable=Table9000;
                                                  SourceTableView=SORTING(Field1);
                                                  MinOccurs=Zero;
                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 UserGroup@1100529200 : Record 9000;
                                                                               BEGIN
                                                                                 IF UserGroup.GET("User Group".Code) THEN BEGIN
                                                                                   UserGroup.Name := "User Group".Name;
                                                                                   UserGroup.MODIFY;
                                                                                   currXMLport.SKIP;
                                                                                 END;
                                                                               END;
                                                                                }

    { [{6AC309F1-45CE-4473-BF4D-9597EAEF8D1F}];2 ;UserGroupCode       ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=User Group::Code }

    { [{970B184B-3317-4230-9625-4D2D11518159}];2 ;UserGroupName       ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=User Group::Name }

    { [{CB2C9F68-9F3F-4B72-B4CA-61FE03BDA865}];2 ;UserGroupPermissionSet;Element;Table  ;
                                                  SourceTable=Table9003;
                                                  SourceTableView=SORTING(Field1,Field2,Field6,Field5)
                                                                  WHERE(Field2=FILTER(<>SUPER));
                                                  LinkFields=Field1=FIELD(Field1);
                                                  LinkTable=User Group;
                                                  MinOccurs=Zero }

    { [{2E9EF4EF-69C9-4EF2-B3A0-29A2CB231ABC}];3 ;UserGroupPermissionSetUserGroupCode;Element;Field;
                                                  DataType=Code;
                                                  AutoCalcField=No;
                                                  SourceField=User Group Permission Set::User Group Code }

    { [{8B6D2DC9-49A7-4413-95A9-6C86AF404C00}];3 ;UserGroupPermissionSetRoleID;Element;Field;
                                                  DataType=Code;
                                                  AutoCalcField=No;
                                                  SourceField=User Group Permission Set::Role ID }

    { [{9B694679-9D4D-43AC-8632-3C8A627BC9D0}];3 ;UserGroupPermissionSetScope;Element;Field;
                                                  DataType=Option;
                                                  FieldValidate=No;
                                                  SourceField=User Group Permission Set::Scope }

    { [{5F20900E-CBE6-41AA-84E1-F6A73BC60CEF}];1 ;User                ;Element ;Table   ;
                                                  SourceTable=Table2000000120;
                                                  SourceTableView=SORTING(Field1);
                                                  MinOccurs=Zero;
                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 //CheckNewUser.SETRANGE("User Name",User."User Name");
                                                                                 CheckNewUser.SETRANGE("Windows Security ID",User."Windows Security ID");
                                                                                 IF NOT CheckNewUser.FINDFIRST THEN BEGIN
                                                                                   CheckNewUser.INIT;
                                                                                   CheckNewUser."User Security ID" := User."User Security ID";
                                                                                   CheckNewUser."User Name" := User."User Name";
                                                                                   CheckNewUser."Full Name" := User."Full Name";
                                                                                   CheckNewUser.State := User.State;
                                                                                   CheckNewUser."Expiry Date" := User."Expiry Date";
                                                                                   CheckNewUser."Windows Security ID" := User."Windows Security ID";
                                                                                   CheckNewUser."Change Password" := User."Change Password";
                                                                                   CheckNewUser."License Type" := User."License Type";
                                                                                   CheckNewUser."Authentication Email" := User."Authentication Email";
                                                                                   CheckNewUser.INSERT;
                                                                                 END;

                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{931BF532-FD25-4AD4-B485-1B1AD84BA672}];2 ;UserUserSecurityID  ;Element ;Field   ;
                                                  DataType=GUID;
                                                  FieldValidate=No;
                                                  SourceField=User::User Security ID }

    { [{0929B46C-820B-45A7-83F0-45D5823C6056}];2 ;UserUserName        ;Element ;Field   ;
                                                  DataType=Code;
                                                  FieldValidate=No;
                                                  SourceField=User::User Name }

    { [{B5E6DC59-0316-4532-A9C4-9F06B5AD8860}];2 ;UserFullName        ;Element ;Field   ;
                                                  DataType=Text;
                                                  FieldValidate=No;
                                                  SourceField=User::Full Name }

    { [{7126BC4B-D6F8-4C4B-B556-8D590A79771D}];2 ;UserState           ;Element ;Field   ;
                                                  DataType=Option;
                                                  FieldValidate=No;
                                                  SourceField=User::State }

    { [{6A5752C4-8350-4EAB-A98C-EA2B2A0D7290}];2 ;UserExpiryDate      ;Element ;Field   ;
                                                  DataType=DateTime;
                                                  FieldValidate=No;
                                                  SourceField=User::Expiry Date }

    { [{E5D31258-50F5-4AF5-A3B8-33FAF94E683B}];2 ;UserWindowsSecurityID;Element;Field   ;
                                                  DataType=Text;
                                                  FieldValidate=No;
                                                  SourceField=User::Windows Security ID }

    { [{F3BA73AF-12B3-4347-BB0A-726F19497779}];2 ;UserChangePassword  ;Element ;Field   ;
                                                  DataType=Boolean;
                                                  FieldValidate=No;
                                                  SourceField=User::Change Password }

    { [{EF3F0FFA-0995-414E-B4E8-4CE301A261BD}];2 ;UserLicenseType     ;Element ;Field   ;
                                                  DataType=Option;
                                                  FieldValidate=No;
                                                  SourceField=User::License Type }

    { [{3790F4E1-8BE3-4E81-A436-E6F6AB40240B}];2 ;UserAuthenticationEmail;Element;Field ;
                                                  DataType=Text;
                                                  FieldValidate=No;
                                                  SourceField=User::Authentication Email }

    { [{16D8DAF1-48CF-410F-9E58-B1C334CE3D49}];2 ;UserGroupMember     ;Element ;Table   ;
                                                  SourceTable=Table9001;
                                                  SourceTableView=SORTING(Field1,Field2,Field3);
                                                  LinkFields=Field2=FIELD(Field1);
                                                  LinkTable=User;
                                                  MinOccurs=Zero;
                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 UserGroupMember@1100529200 : Record 9001;
                                                                               BEGIN
                                                                                 IF UserGroupMember.GET("User Group Member"."User Group Code","User Group Member"."User Security ID","User Group Member"."Company Name") THEN
                                                                                   currXMLport.SKIP;

                                                                                 IF ("User Group Member"."Company Name" <> '') AND NOT Company.GET("User Group Member"."Company Name") THEN
                                                                                   currXMLport.SKIP;

                                                                                 "User Group Member"."User Security ID" := CheckNewUser."User Security ID";
                                                                               END;
                                                                                }

    { [{AF4A9DA7-572A-471F-ABFA-8ABD3FE90CBF}];3 ;UserGroupMemberUserGroupCode;Element;Field;
                                                  DataType=Code;
                                                  AutoCalcField=No;
                                                  SourceField=User Group Member::User Group Code }

    { [{478451E6-F53A-45E9-90E3-262B16D625DF}];3 ;UserGroupMemberUserSecurityID;Element;Field;
                                                  DataType=GUID;
                                                  FieldValidate=No;
                                                  SourceField=User Group Member::User Security ID }

    { [{F13F87A1-EB94-4F39-9B52-E19E6537131A}];3 ;UserGroupMemberCompanyName;Element;Field;
                                                  DataType=Text;
                                                  FieldValidate=No;
                                                  SourceField=User Group Member::Company Name }

    { [{F63D8C0B-83BD-43A8-93A4-C53C89912672}];2 ;AccessControl       ;Element ;Table   ;
                                                  SourceTable=Table2000000053;
                                                  SourceTableView=SORTING(Field1,Field2,Field3)
                                                                  WHERE(Field2=FILTER(<>SUPER));
                                                  LinkFields=Field1=FIELD(Field1);
                                                  LinkTable=User;
                                                  MinOccurs=Zero;
                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 AccessControl@1100529400 : Record 2000000053;
                                                                               BEGIN
                                                                                 IF ("User Group Member"."Company Name" <> '') AND NOT Company.GET("User Group Member"."Company Name") THEN
                                                                                   currXMLport.SKIP;

                                                                                 IF AccessControl.GET("Access Control"."User Security ID","Access Control"."Role ID","Access Control"."Company Name") THEN
                                                                                   currXMLport.SKIP;

                                                                                 "User Group Member"."User Security ID" := CheckNewUser."User Security ID";
                                                                               END;
                                                                                }

    { [{65C8A7FD-FBB5-42E3-B636-390C80AF64E5}];3 ;AccessControlRoleID ;Element ;Field   ;
                                                  DataType=Code;
                                                  FieldValidate=No;
                                                  SourceField=Access Control::Role ID }

    { [{DA3539F4-F1EA-4045-8511-F46AB052A924}];3 ;AccessControlCompanyName;Element;Field;
                                                  DataType=Text;
                                                  FieldValidate=No;
                                                  SourceField=Access Control::Company Name }

    { [{0E291A36-3734-44FA-8CB8-F7A40B7C0F40}];3 ;AccessControlScope  ;Element ;Field   ;
                                                  DataType=Option;
                                                  FieldValidate=No;
                                                  SourceField=Access Control::Scope }

    { [{6E783D78-1D82-428B-A817-B530AB967D76}];2 ;UserPersonalization ;Element ;Table   ;
                                                  SourceTable=Table2000000073;
                                                  SourceTableView=SORTING(Field3);
                                                  LinkFields=Field3=FIELD(Field1);
                                                  LinkTable=User;
                                                  MinOccurs=Zero;
                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 UserPersonalization@1100529200 : Record 2000000073;
                                                                               BEGIN
                                                                                 IF ("User Personalization".Company <> '') AND NOT Company.GET("User Personalization".Company) THEN
                                                                                   currXMLport.SKIP;

                                                                                 IF UserPersonalization.GET(CheckNewUser."User Security ID") THEN          // If table was empty on logon a default record is inserted...
                                                                                   UserPersonalization.DELETE;

                                                                                 "User Personalization"."User SID" := CheckNewUser."User Security ID";
                                                                               END;
                                                                                }

    { [{8ADA2DD2-4A95-4E99-898E-41C9EC9D951B}];3 ;ProfileIDUserPersonalization;Element;Field;
                                                  DataType=Code;
                                                  AutoCalcField=No;
                                                  SourceField=User Personalization::Profile ID }

    { [{3283AD5D-0A29-4A13-9637-61E1C039A395}];3 ;LanguageIDUserPersonalization;Element;Field;
                                                  DataType=Integer;
                                                  AutoCalcField=No;
                                                  SourceField=User Personalization::Language ID }

    { [{2477B75F-780A-4588-81AD-56CD359725D2}];3 ;CompanyUserPersonalization;Element;Field;
                                                  DataType=Text;
                                                  FieldValidate=No;
                                                  SourceField=User Personalization::Company }

    { [{A96DD1B7-E4A9-49A4-A21C-367DD867814A}];3 ;ScopeUserPersonalization;Element;Field;
                                                  DataType=Option;
                                                  FieldValidate=No;
                                                  SourceField=User Personalization::Scope }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      CheckNewUser@1100529200 : Record 2000000120;
      Company@1100525000 : Record 2000000006;

    BEGIN
    END.
  }
}

