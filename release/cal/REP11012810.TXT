OBJECT Report 11012810 Close Service Orders
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=ServiceauftrÑge fertigmelden;
               ENU=Close Service Orders;
               NLD=Serviceorders gereedmelden;
               NOR=Steng Serviceordre;
               SVE=StÑng serviceorder];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF PostingDate = 0D THEN
                    ERROR(Text000);

                  ServContract.COPY("Service-Contract");
                  //FilterServContract := ("Service-Contract".GETFILTERS <> '');  //db, 06-12-10: M24359 (new field on request form)
                END;

    OnPostReport=BEGIN
                   DisplayError;
                 END;

    UsageCategory=Tasks;
  }
  DATASET
  {
    { 1373;    ;DataItem;                    ;
               DataItemTable=Table11012823;
               OnPreDataItem=BEGIN
                               IF PostClosedServOrder THEN BEGIN
                                 IF GETFILTER(Status) <> '' THEN
                                   IF NOT CONFIRM(Text006) THEN
                                     ERROR(Text007);

                               //SETRANGE(Status, Status::"Administrative Finished");  //db, 29-03-10
                                 SETFILTER(Status, '%1|%2', Status::"Administrative Finished", Status::Finished);  //db, 29-03-10
                               END ELSE BEGIN
                                 IF GETFILTER(Status) = '' THEN BEGIN  //db, 31-03-10
                                   FILTERGROUP(6);
                                   SETFILTER(Status, '<=%1', Status::"Administrative Finished");
                                   ServOrderRec.FILTERGROUP(6);
                                   ServOrderRec.COPYFILTERS("Service Order");
                                   ServOrderRec.FILTERGROUP(0);
                                   FILTERGROUP(0);
                                 END;
                               END;

                               ServOrderRec.COPYFILTERS("Service Order");
                               IF NOT ServOrderRec.FINDFIRST THEN
                                 MESSAGE(Text001);
                             END;

               OnAfterGetRecord=VAR
                                  ServiceOrderExtension@1100528601 : Record 11071727;
                                BEGIN
                                  IF NOT ServContrInFilter THEN
                                    CurrReport.SKIP;

                                  ServiceOrderExtension.GetServOrderExtension("No.");
                                  IF OnlySOsWithoutMasterProject AND (ServiceOrderExtension."Master Project" <> '') THEN
                                    CurrReport.SKIP;

                                  IF CheckOrderStatus("Service Order") THEN  //db, 29-03-10
                                    ProcessServOrder("Service Order");
                                END;

               ReqFilterFields=No.,Status,Closing Date }

    { 4178;    ;DataItem;                    ;
               DataItemTable=Table11012812;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=BEGIN
                               IF NOT FilterServContract THEN CurrReport.BREAK;  //db, 29-03-10
                             END;

               ReqFilterFields=Status,Renewal Date }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF PostingDate = 0D THEN
                     PostingDate := TODAY;
                 END;

    }
    CONTROLS
    {
      { 1100528300;;Container;
                  ContainerType=ContentArea }

      { 1100528600;1;Group  ;
                  CaptionML=[DEU=ZusÑtzlicher Filter;
                             ENU=Extra Filter;
                             NLD=Extra filter];
                  GroupType=Group }

      { 1100528601;2;Field  ;
                  CaptionML=[DEU=Nur ServiceauftrÑge ohne Masterprojekt;
                             ENU=Only Service Orders without Master Project;
                             NLD=Alleen serviceorders zonder "Doorbelasten aan project"];
                  SourceExpr=OnlySOsWithoutMasterProject }

      { 1100528500;2;Field  ;
                  CaptionML=[DEU=Einschl. FortsetzungsauftrÑge;
                             ENU=Including Next Service Orders;
                             NLD=Inclusief vervolgorders];
                  SourceExpr=IncludeNextServOrders }

      { 1100528301;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100528302;2;Field  ;
                  CaptionML=[DEU=Buchungsdatum;
                             ENU=Posting Date;
                             NLD=Boekingsdatum;
                             NOR=Bokfõringsdato;
                             SVE=Bokfîringsdatum];
                  SourceExpr=PostingDate }

      { 1100528303;2;Field  ;
                  CaptionML=[DEU=Ignorieren Verkaufskontrolle;
                             ENU=Ingnore Sales Control;
                             NLD=Negeer verkoopcontrole;
                             NOR=Ignorer salgskontroll;
                             SVE=Ignorera fîrsÑljningskontroll];
                  SourceExpr=IgnoreSales;
                  OnValidate=BEGIN
                               IF IgnoreSales THEN
                                 MESSAGE(Text004 + Text005);
                             END;
                              }

      { 1100528304;2;Field  ;
                  CaptionML=[DEU=Ignorieren Einkaufskontrolle;
                             ENU=Ignore Purchase Control;
                             NLD=Negeer inkoopcontrole;
                             NOR=Ignorer innkjõpskontroll;
                             SVE=Ignorera inkîpskontroll];
                  SourceExpr=IgnorePurchase;
                  OnValidate=BEGIN
                               IF IgnorePurchase THEN
                                 MESSAGE(Text002 + Text003);
                             END;
                              }

      { 1100525000;2;Field  ;
                  CaptionML=[DEU=Werkzeugstandortsteuerung ignorieren;
                             ENU=Ignore Plant Location Control;
                             NLD=Negeer materieellocatiecontrole;
                             NOR=Ignorer maskinlokasjonkontroll;
                             SVE=Ignorera maskinplatskontroll];
                  SourceExpr=IgnorePlant }

      { 1100529100;2;Field  ;
                  CaptionML=[DEU=ArbeitsauftrÑge ignorieren;
                             ENU=Ignore Work Orders;
                             NLD=Negeer werkorders];
                  SourceExpr=IgnoreWorkOrders }

      { 1100528201;2;Field  ;
                  CaptionML=[DEU=Ignoriere Artikeljournalkontrolle;
                             ENU=Ignore Item Journal Check;
                             NLD=Negeer artikeljournaalcontrole];
                  SourceExpr=IgnoreItemJournal }

      { 1100528200;2;Field  ;
                  CaptionML=[DEU=Ignoriere andere Betriebe;
                             ENU=Ignore Other Companies;
                             NLD=Negeer andere bedrijven];
                  SourceExpr=IgnoreInterCompany }

      { 1100528305;2;Field  ;
                  CaptionML=[DEU=Ignorieren Buchungen nach Buch.-DatumÅberpr.;
                             ENU=Ignore Future Posting Control;
                             NLD=Negeer boekingen na boekingsdatum controle;
                             NOR=Ignorer kontroll av framtidig bokfõring;
                             SVE=Ignorera kontroll av framtida bokfîring];
                  SourceExpr=IgnoreFuturePostings }

      { 1100528306;2;Field  ;
                  CaptionML=[DEU=Filter Servicevertrag;
                             ENU=Filter Service Contract;
                             NLD=Filter servicecontract;
                             NOR=Filter, servicekontrakt;
                             SVE=Filtrera servicekontrakt];
                  SourceExpr=FilterServContract }

      { 1100528308;2;Field  ;
                  CaptionML=[DEU=Alle Verkaufsrechnungen bezahlt;
                             ENU=All sales invoices paid;
                             NLD=Alle verkoopfacturen betaald];
                  SourceExpr=CheckInvoicesPaid }

      { 1100528309;2;Field  ;
                  CaptionML=[DEU=Buchen;
                             ENU=Post;
                             NLD=Boeken;
                             NOR=Bokfõr;
                             SVE=Bokfîr];
                  SourceExpr=PostClosedServOrder }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@11012042 : TextConst 'DEU=AuswÑhlen Buchungsdatum auf Registerblatt ''Optionen'';ENU=Select Posting Date on Option Tab;NLD=Selecteer boekingsdatum op tabblad opties;NOR=Velg bokfõringsdato pÜ alternativ-fanen;SVE=VÑlj bokfîringsdatum pÜ alternativfliken';
      Text001@11012043 : TextConst 'DEU=Es sind keine ServicauftrÑge mit Status ''Finanziell fertig'' vorhanden;ENU=There are no Service Orders with status Administrative Finished.;NLD=Er zijn geen serviceorders met status administratief gereed;NOR=Det er ingen serviceordre med status Administrativt ferdig.;SVE=Det finns inga serviceorder med status Administrativt fÑrdig.';
      ServOrderRec@11012000 : Record 11012823;
      ServContract@1100525001 : Record 11012812;
      PostingDate@1210190001 : Date;
      PostClosedServOrder@1210190006 : Boolean;
      IgnorePurchase@11012040 : Boolean;
      IgnoreSales@11012041 : Boolean;
      IgnorePlant@1100525000 : Boolean;
      IgnoreWorkOrders@1100529100 : Boolean;
      IgnoreFuturePostings@1100485002 : Boolean;
      ClosingProcedure@1210190015 : Codeunit 11012046;
      Text002@1210190005 : TextConst 'DEU=Das Ignorieren der Einkaufskontrolle kann zur Folge haben, dass ServiceauftrÑge zu frÅh fertiggemeldet werden.\;ENU=Ignoring the Purchase Check could result in closing Service Orders too early.\;NLD=Het negeren van de inkoopcontrole kan tot gevolg hebben dat serviceorders te vroeg worden gereedgemeld.\;NOR=Ignorering av innkjõpskontroll kan resultere i for tidlig lukking av serviceordre.\;SVE=Om kîpkontrollen ignoreras kan serviceorder avslutas fîr tidigt.\';
      Text003@1210190004 : TextConst 'DEU=Es kînnen doch noch Einkaufsbestellungen vorhanden sein.;ENU=There could still be Purchase Orders present.;NLD=Er kunnen immers nog inkooporders aanwezig zijn.;NOR=Det kan fortsatt finnes innkjõpsordre.;SVE=Det kan fortfarande finnas inkîpsorder.';
      Text004@1210190003 : TextConst 'DEU=Das Ingnorieren der Verkaufskontrolle kann zur Folge haben, daas ServiceauftrÑge zu frÅh fertiggemeldet werden.\;ENU=Ignoring the Sales Check could result in closing Service Orders too early.\;NLD=Het negeren van de verkoopcontrole kan tot gevolg hebben dat serviceorders te vroeg worden gereedgemeld.\;NOR=Ignorering av salgskontroll kan resultere i for tidlig lukking av serviceordre.\;SVE=Om fîrsÑljningskontrollen ignoreras kan serviceorder avslutas fîr tidigt.\';
      Text005@1210190002 : TextConst 'DEU=Es kînnen doch noch nicht fakturierte Regie- oder Ratenzeilen vorhanden sein.;ENU=There could still not Invoiced Cost Plus Entries or Installment Lines present.;NLD=Er kunnen immers nog ongefactureerde regie- of termijnregels aanwezig zijn.;NOR=Det kan fortsatt finnes rapporterte selvkoster eller avdragsrader som ikke er fakturert..;SVE=Det kan fortfarande finnas redovisade sjÑlvkostnader eller avbetalningsrader som inte har fakturerats.';
      gvType@1210190000 : 'Project,Service Contract,Service Order';
      Text006@1100485001 : TextConst 'DEU=Sie haben das Buchen gewÑhlt und einen Filter auf Status eingesellt. Mîchten Sie mit dem Buchen der ServiceauftrÑge mit vorbestimmtem Status fortfahren?;ENU="You have chosen to post and you''ve put a filter on Status. Would you like to continue posting Service Orders with predefined Status ? ";NLD=U heeft gekozen voor boeken en een filter gezet op status. Wilt u doorgaan met boeken van serviceorders met voorgedefinieerde status ?;NOR=Du har valgt Ü bokfõre, og du har satt et filter pÜ status. Vil du fortsette Ü bokfõre serviceordre med forhÜndsdefinert status?;SVE="Du har valt att bokfîra och du har satt ett filter pÜ status. Vill du fortsÑtta bokfîra serviceorder med fîrdefinierad status? "';
      Text007@1100485000 : TextConst 'DEU=Das Beenden ist abgebrochen worden.;ENU=Closing is stopped.;NLD=Het gereedmelden is afgebroken.;NOR=Stengingen er avbrutt;SVE=StÑngningen har avbrutits';
      FilterServContract@1100525003 : Boolean;
      CheckInvoicesPaid@1100409000 : Boolean;
      OnlySOsWithoutMasterProject@1100528600 : Boolean INDATASET;
      IncludeNextServOrders@1100528500 : Boolean INDATASET;
      IgnoreItemJournal@1100528200 : Boolean;
      IgnoreInterCompany@1100528201 : Boolean;

    PROCEDURE ServContrInFilter@1100525000() : Boolean;
    BEGIN
      IF NOT FilterServContract THEN
        EXIT(TRUE);

      ServContract.FILTERGROUP(10);
      ServContract.SETRANGE("No.", "Service Order"."Service Contract No.");
      EXIT(NOT ServContract.ISEMPTY);
    END;

    PROCEDURE ProcessServOrder@1100525001(ServiceOrder@1100528500 : Record 11012823);
    VAR
      NextServiceOrder@1100528501 : Record 11012823;
    BEGIN
      //db, 29-03-10
      CLEAR(ClosingProcedure);  //Needed because each Service Order is committed now in ClosingProcedure.
      ClosingProcedure.SetSelection(gvType::"Service Order",'',ServiceOrder."Service Contract No.",ServiceOrder."No.",
        PostingDate,IgnorePurchase,IgnoreSales,IgnoreFuturePostings,FALSE,IgnoreWorkOrders,'',FALSE,
        IgnoreItemJournal,IgnoreInterCompany);
      ClosingProcedure.SetSelectionIgnorePlant(IgnorePlant);
      ClosingProcedure.SetServOrderExtraTest(CheckInvoicesPaid, FALSE);
      ClosingProcedure.Check;
      IF PostClosedServOrder THEN
        ClosingProcedure.Post;

      IF IncludeNextServOrders THEN BEGIN
        NextServiceOrder.SETRANGE("Base Service Order No.",ServiceOrder."No.");
        NextServiceOrder.SETFILTER("No.",'<>%1',ServiceOrder."No.");
        IF NextServiceOrder.FINDSET THEN
          REPEAT
            IF CheckOrderStatus(NextServiceOrder) THEN
              ProcessServOrder(NextServiceOrder);
          UNTIL NextServiceOrder.NEXT = 0;
      END;
    END;

    PROCEDURE CheckOrderStatus@1100525003(ServiceOrder@1100528500 : Record 11012823) : Boolean;
    BEGIN
      //db, 29-03-10
      WITH ServiceOrder DO BEGIN
        IF Status = Status::"Administrative Finished" THEN EXIT(TRUE);

        IF (Status = Status::Finished) OR (Status = Status::Cancelled) THEN BEGIN
          CALCFIELDS("Serv.Order WIP not processed");
          EXIT("Serv.Order WIP not processed");
        END;
      END;
      EXIT(FALSE);
    END;

    PROCEDURE DisplayError@1100528500();
    BEGIN
      ClosingProcedure.DisplayError;
    END;

    BEGIN
    {
      db, 29-03-10: extra filter on entries to process contractual costs on service order at the same time with contract revenue.
    }
    END.
  }
  RDLDATA
  {
  }
}

