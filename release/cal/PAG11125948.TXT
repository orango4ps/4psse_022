OBJECT Page 11125948 Plant Meter Reading
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Werkzeug ZÑhlerstand;
               ENU=Plant Meter Reading;
               NLD=Meterstand materieel;
               SVE=MaskinrÑknareavlÑsning];
    SourceTable=Table11072671;
    DelayedInsert=Yes;
    PageType=List;
    UsageCategory=Tasks;
    OnOpenPage=BEGIN
                 ReplacementActionsEnabled := CURRENTCOMPANY = COMPANYNAME;
               END;

    OnAfterGetRecord=BEGIN
                       GetLineData();
                       SetEditable();
                     END;

    OnNewRecord=BEGIN
                  IF NOT CurrPage.EDITABLE THEN BEGIN
                    "Plant Type" := '';
                    "Plant No." := '';
                    "Plant Description" := '';
                  END ELSE BEGIN
                    IF Date = 0D THEN
                      Date := TODAY;
                    IF (CurrOrderType <> 0) AND (CurrOrderNo <> '') THEN BEGIN
                      "Order Type" := CurrOrderType;
                      "Order No." := CurrOrderNo;
                    END;
                  END;
                END;

    OnAfterGetCurrRecord=BEGIN
                           GetLineData();
                           SetEditable();
                         END;

    ActionList=ACTIONS
    {
      { 1100529018;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100529019;1 ;Action    ;
                      CaptionML=[DEU=Ersetzen ZÑhler;
                                 ENU=Meter Replacement;
                                 NLD=Vervanging meter];
                      Promoted=Yes;
                      Enabled=ReplacementActionsEnabled;
                      PromotedIsBig=Yes;
                      Image=Change;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 NewStartingValueMeterReading("New Starting Value Type"::Replacement, CurrOrderType, CurrOrderNo);
                               END;
                                }
      { 1100529020;1 ;Action    ;
                      CaptionML=[DEU=Maximaler Wert ist erreicht;
                                 ENU=Maximum Value Reached;
                                 NLD=Maximale waarde bereikt];
                      Promoted=Yes;
                      Enabled=ReplacementActionsEnabled;
                      PromotedIsBig=Yes;
                      Image=LimitedCredit;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 NewStartingValueMeterReading("New Starting Value Type"::MaximumValue, CurrOrderType, CurrOrderNo);
                               END;
                                }
      { 1100529023;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100529022;1 ;Action    ;
                      CaptionML=[DEU=Abweichende erwartete Mengen;
                                 ENU=Deviating Expected Quantities;
                                 NLD=Afwijkende verwachte aantallen];
                      Enabled=DeviatingExpectedQuantitiesEnabled;
                      PromotedIsBig=Yes;
                      Image=CreateSerialNo;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 PlantMeterType@1100529000 : Record 11229921;
                               BEGIN
                                 TESTFIELD("Plant Type");
                                 TESTFIELD("Plant No.");
                                 TESTFIELD(Meter);
                                 TESTFIELD("Meter Reading Type");
                                 PlantMeterType.CHANGECOMPANY(CURRENTCOMPANY);
                                 PlantMeterType.GET("Plant Type", "Plant No.", Meter, "Meter Reading Type");
                                 PlantMeterType.ShowDeviatingExpectedQuantity;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100529000;0;Container;
                ContainerType=ContentArea }

    { 1100529001;1;Group  ;
                GroupType=Repeater }

    { 1100529002;2;Field  ;
                SourceExpr="Plant Type";
                Editable=KeyFieldsEditable;
                OnValidate=BEGIN
                             GetLineData();
                           END;
                            }

    { 1100529003;2;Field  ;
                SourceExpr="Plant No.";
                Editable=KeyFieldsEditable;
                OnValidate=BEGIN
                             GetLineData();
                           END;
                            }

    { 1100529004;2;Field  ;
                SourceExpr="Plant Description" }

    { 1100529005;2;Field  ;
                SourceExpr="Inspection No.";
                Visible=FALSE }

    { 1100529400;2;Field  ;
                SourceExpr=Meter;
                Editable=KeyFieldsEditable }

    { 1100529006;2;Field  ;
                SourceExpr="Meter Reading Type";
                Editable=KeyFieldsEditable;
                OnValidate=BEGIN
                             GetLineData();
                           END;
                            }

    { 1100529008;2;Field  ;
                SourceExpr=Date;
                Editable=KeyFieldsEditable;
                OnValidate=BEGIN
                             GetLineData();
                           END;
                            }

    { 1100529401;2;Field  ;
                SourceExpr="Meter Time";
                Editable=KeyFieldsEditable }

    { 1100529010;2;Field  ;
                CaptionML=[DEU=Voriges Datum;
                           ENU=Previous Date;
                           NLD=Vorige datum;
                           NOR=Forrige dato;
                           SVE=FîregÜende datum];
                SourceExpr=PreviousMeterReading.Date;
                Visible=FALSE;
                Editable=FALSE }

    { 1100529011;2;Field  ;
                CaptionML=[DEU=ZurÅck;
                           ENU=Previous;
                           NLD=Vorige stand;
                           NOR=Forrige;
                           SVE=FîregÜende];
                DecimalPlaces=0:0;
                SourceExpr=PreviousMeterReading."Meter Reading";
                Visible=FALSE;
                Editable=FALSE }

    { 1100529009;2;Field  ;
                SourceExpr="Meter Reading";
                OnValidate=VAR
                             MeterReading@1100409000 : Record 11072671;
                           BEGIN
                             //T005361.sn
                             IF Date < TODAY THEN BEGIN
                               //**4PS.sn BI049 KD 10-08-16
                               // IF MeterReading.GET("Plant Type", "Plant No.", "Meter Reading Type", Date, "Service Order") THEN BEGIN
                               MeterReading.CHANGECOMPANY(CURRENTCOMPANY);
                               IF MeterReading.GET("Plant Type", "Plant No.", Meter, "Meter Reading Type", Date, "Meter Time") THEN BEGIN
                               //**4PS.en BI049 KD 10-08-16
                                 IF NOT CONFIRM(Text001, FALSE,
                                   FIELDCAPTION("Meter Reading"), FIELDCAPTION("Plant No."), "Plant Type", "Plant No.",
                                   FIELDCAPTION("Meter Reading Type"), "Meter Reading Type", FIELDCAPTION(Date), Date)
                                 THEN
                                   "Meter Reading" := MeterReading."Meter Reading";
                               END;
                             END;
                             //T005361.en
                             CurrPage.UPDATE;
                             GetLineData();
                           END;
                            }

    { 1100529007;2;Field  ;
                SourceExpr="Unit of Measure" }

    { 1100529016;2;Field  ;
                SourceExpr="New Starting Value Type" }

    { 1100529017;2;Field  ;
                SourceExpr="End Meter Reading";
                Editable="New Starting Value Type"<>0;
                HideValue="New Starting Value Type"=0 }

    { 1100529012;2;Field  ;
                CaptionML=[DEU=VerfÅgnar bis zur nÑchsten Inspektion;
                           ENU=Available until Next Inspection;
                           NLD=Beschikbaar tot volgende keuring;
                           NOR=Disponibelt;
                           SVE=Disponibelt];
                DecimalPlaces=0:0;
                SourceExpr=AvailableMR;
                Editable=FALSE;
                HideValue=AvailableHideValue;
                Style=Attention;
                StyleExpr=AvailableNegative }

    { 1100529013;2;Field  ;
                CaptionML=[DEU=Erwaterter ZÑhlerstand;
                           ENU=Expected Meter Reading;
                           NLD=Verwachte meterstand];
                DecimalPlaces=0:0;
                BlankZero=Yes;
                SourceExpr=ExpectedMR;
                Visible=FALSE;
                Editable=FALSE }

    { 1100529014;2;Field  ;
                SourceExpr="Order Type" }

    { 1100529015;2;Field  ;
                SourceExpr="Order No." }

    { 1100528500;2;Field  ;
                SourceExpr="Order Description";
                Visible=FALSE }

    { 1100529600;2;Field  ;
                SourceExpr=Comment }

    { 1100529021;2;Field  ;
                SourceExpr="Meter Reading Type Comment";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      PreviousMeterReading@1100529000 : Record 11072671;
      KeyFieldsEditable@1100409001 : Boolean INDATASET;
      DeviatingExpectedQuantitiesEnabled@1100529007 : Boolean INDATASET;
      AvailableHideValue@1100529003 : Boolean INDATASET;
      AvailableNegative@1100529002 : Boolean INDATASET;
      AvailableMR@1100529001 : Decimal;
      Text001@1100409000 : TextConst 'DEU=éndern %1, %2 ''%3-%4'', %5 ''%6'', %7 ''%8''. Sind Sie sicher?;ENU=Modify %1, %2 ''%3-%4'', %5 ''%6'', %7 ''%8''. Are you sure?;NLD=Wijzigen %1, %2 ''%3-%4'', %5 ''%6'', %7 ''%8''. Weet u het zeker?';
      ExpectedMR@1100529006 : Decimal;
      CurrOrderType@1100529005 : Option;
      CurrOrderNo@1100529004 : Code[20];
      ReplacementActionsEnabled@1100529600 : Boolean INDATASET;

    PROCEDURE SetCurrentOrderNo@1100529002(OrderType@1100529001 : Integer;OrderNo@1100529000 : Code[20]);
    BEGIN
      CurrOrderType := OrderType;
      CurrOrderNo := OrderNo;
    END;

    LOCAL PROCEDURE GetLineData@1100529000();
    VAR
      PlantMeterType@1100529000 : Record 11229921;
    BEGIN
      GetPreviousMeterReadingRecord(Rec, PreviousMeterReading);
      PlantMeterType.CHANGECOMPANY(CURRENTCOMPANY);
      AvailableMR := PlantMeterType.AvailableMeterReadingUntilNextInspection("Plant Type", "Plant No.", Meter, "Meter Reading Type", AvailableHideValue);
      AvailableHideValue := (NOT AvailableHideValue);
      AvailableNegative := (AvailableMR < 0);
      ExpectedMR := PlantMeterType.ExpectedMeterReading("Plant Type", "Plant No.", Meter, "Meter Reading Type");
    END;

    PROCEDURE SetEditable@1100409000();
    VAR
      MeterReading@1100409000 : Record 11072671;
      PlantMeterType@1100529000 : Record 11229921;
    BEGIN
      //T005361.n
      KeyFieldsEditable := TRUE;
      //**4PS.sn BI049 KD 10-08-16
      // IF ("Plant Type" <> '') AND ("Plant No." <> '') AND ("Meter Reading Type" <> '') AND (Date <> 0D) THEN BEGIN
      //  IF MeterReading.GET("Plant Type", "Plant No.", "Meter Reading Type", Date, "Service Order") THEN
      IF ("Plant Type" <> '') AND ("Plant No." <> '') AND (Meter <> '') AND  ("Meter Reading Type" <> '') AND (Date <> 0D) AND (Date <> TODAY) THEN BEGIN
        MeterReading.CHANGECOMPANY(CURRENTCOMPANY);
        IF MeterReading.GET("Plant Type", "Plant No.", Meter, "Meter Reading Type", Date, "Meter Time") THEN
      //**4PS.en BI049 KD 10-08-16
          KeyFieldsEditable := FALSE;
      END;
      DeviatingExpectedQuantitiesEnabled := FALSE;
      IF ("Plant Type" <> '') AND ("Plant No." <> '') AND (Meter <> '') AND  ("Meter Reading Type" <> '') THEN BEGIN
        PlantMeterType.CHANGECOMPANY(CURRENTCOMPANY);
        IF PlantMeterType.GET("Plant Type", "Plant No.", Meter, "Meter Reading Type") THEN
          DeviatingExpectedQuantitiesEnabled := (FORMAT(PlantMeterType."Period (Expectation)") <> '');
      END;
    END;

    PROCEDURE SetCompany@1100529600(NewCompanyName@1100529600 : Text[30]);
    BEGIN
      CHANGECOMPANY(NewCompanyName);
    END;

    BEGIN
    {
      4PS 10-08-16 UKR-C25593 KD: Multiple meter readings (BI049) - Fields Meter, Time added
                                                                    Triggers "Meter Reading - OnValidate", GetLineData, SetEditable changed
    }
    END.
  }
}

