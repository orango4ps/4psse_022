OBJECT Table 11125708 Requested Activity Capacity
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckIfReqActCapCanBeChanged;
               TESTFIELD("Resource Code");
               TESTFIELD("Plan Hours");
               CheckProjectStatus();
               ReqActCapMgt.UpdateReqActCapByDay(Rec, FALSE);
               ReqActCapMgt.UpdateProjActivityPeriod(Rec, 1);  //* 1: BeforeInsert

               "Resource Description" := GetResourceDescription();
             END;

    OnModify=BEGIN
               CheckIfReqActCapCanBeChanged;
               TESTFIELD("Resource Code");
               TESTFIELD("Plan Hours");
               CheckProjectStatus();
               ReqActCapMgt.UpdateReqActCapByDay(Rec, FALSE);
               ReqActCapMgt.UpdateProjActivityPeriod(Rec, 2);  //* 2: BeforeModify

               "Resource Description" := GetResourceDescription();
             END;

    OnDelete=VAR
               AssignActCapRec@1100525000 : Record 11125710;
             BEGIN
               CheckIfReqActCapCanBeChanged;
               DeleteReqActCapByDay();

               AssignActCapRec.SETRANGE("Project No.", "Project No.");
               AssignActCapRec.SETRANGE("Activity Code", "Activity Code");
               AssignActCapRec.SETRANGE("Line No. Request", "Line No.");
               AssignActCapRec.DELETEALL(TRUE);  //* With 'True', so delete also related

               ReqActCapMgt.UpdateProjActivityPeriod(Rec, 3);  //* 3: BeforeDelete
             END;

    OnRename=BEGIN
               CheckIfReqActCapCanBeChanged;

               "Resource Description" := GetResourceDescription();
             END;

    CaptionML=[ENU=Requested Activity Capacity;
               NOR=Anmodet aktivitetskapasitet;
               SVE=Beg„rd aktivitetskapacitet];
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr.;
                                                              SVE=Projektnr] }
    { 20  ;   ;Activity Code       ;Code10        ;TableRelation="Project Planning Base Activity";
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Activity Code;
                                                              NOR=Aktivitetskode;
                                                              SVE=Aktivitetskod] }
    { 30  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 40  ;   ;Resource Type       ;Option        ;OnValidate=BEGIN
                                                                IF "Resource Type" <> xRec."Resource Type" THEN
                                                                  "Resource Code" := '';

                                                                ReqActCapMgt.CalculatePeriodOrPlannedHours(Rec);

                                                                "Resource Description" := GetResourceDescription();
                                                              END;

                                                   CaptionML=[ENU=Resource Type;
                                                              NOR=Ressurstype;
                                                              SVE=Resurstyp];
                                                   OptionCaptionML=[ENU=Team Type,Discipline,Plant;
                                                                    NOR=Teamtype,Disiplin,Maskin;
                                                                    SVE=Teamtyp,Disciplin,Maskin];
                                                   OptionString=TeamType,Discipline,Plant }
    { 50  ;   ;Resource Code       ;Code20        ;TableRelation=IF (Resource Type=CONST(TeamType)) "Project Planning Team Type"
                                                                 ELSE IF (Resource Type=CONST(Discipline)) Discipline
                                                                 ELSE IF (Resource Type=CONST(Plant)) "Plant Type";
                                                   OnValidate=VAR
                                                                PlantTypeRec@1100525000 : Record 11012551;
                                                              BEGIN
                                                                IF "Resource Code" <> '' THEN BEGIN
                                                                  CASE "Resource Type" OF
                                                                    "Resource Type"::Plant:
                                                                      BEGIN
                                                                        PlantTypeRec.GET("Resource Code");
                                                                        PlantTypeRec.TESTFIELD(Bulk, FALSE);
                                                                      END;
                                                                  END;
                                                                END;

                                                                ReqActCapMgt.CalculatePeriodOrPlannedHours(Rec);

                                                                "Resource Description" := GetResourceDescription();
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupResourceCode(TRUE);
                                                            END;

                                                   CaptionML=[ENU=Resource Code;
                                                              NOR=Ressurskode;
                                                              SVE=Resurskod];
                                                   NotBlank=Yes }
    { 51  ;   ;Resource Description;Text50        ;CaptionML=[ENU=Resource Description;
                                                              NOR=Ressursbeskrivelse;
                                                              SVE=Resursbeskrivning];
                                                   Description=Added for GPP;
                                                   Editable=No }
    { 60  ;   ;Plan Method         ;Option        ;OnValidate=BEGIN
                                                                ReqActCapMgt.CalculatePeriodOrPlannedHours(Rec);
                                                              END;

                                                   CaptionML=[ENU=Plan Method;
                                                              NOR=Planlegg Metode;
                                                              SVE=Planmetod];
                                                   OptionCaptionML=[ENU=Forward,,Period;
                                                                    NOR=Fremover,,Periode;
                                                                    SVE=Fram†t,,Period];
                                                   OptionString=Forward,,Period }
    { 70  ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                IF "Starting Date" <> xRec."Starting Date" THEN BEGIN
                                                                  IF ("Ending Date" <> 0D) AND ("Ending Date" < "Starting Date") AND ("Plan Method" = "Plan Method"::Period) THEN
                                                                    "Ending Date" := 0D;
                                                                END;
                                                                ReqActCapMgt.CalculatePeriodOrPlannedHours(Rec);
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum] }
    { 80  ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                IF "Ending Date" <> xRec."Ending Date" THEN BEGIN
                                                                  IF ("Ending Date" <> 0D) AND ("Ending Date" < "Starting Date") AND ("Plan Method" = "Plan Method"::Period) THEN
                                                                    FIELDERROR("Ending Date", Text000);
                                                                END;
                                                                IF ("Plan Method" = "Plan Method"::Period) THEN
                                                                  ReqActCapMgt.CalculatePeriodOrPlannedHours(Rec);
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              NOR=Sluttdato;
                                                              SVE=Slutdatum] }
    { 90  ;   ;Plan Hours          ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Plan Method" = "Plan Method"::Forward) THEN
                                                                  ReqActCapMgt.CalculatePeriodOrPlannedHours(Rec);
                                                              END;

                                                   CaptionML=[ENU=Hours Request;
                                                              NOR=Timeforesp›rsel;
                                                              SVE=Timmar, f”rfr†gan];
                                                   MinValue=0 }
    { 100 ;   ;Total Labor Hours   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Requested Activity Capacity"."Plan Hours" WHERE (Project No.=FIELD(Project No.),
                                                                                                                     Activity Code=FIELD(Activity Code),
                                                                                                                     Resource Type=FILTER(TeamType|Discipline)));
                                                   CaptionML=[ENU=Total Labor Hours;
                                                              NOR=Totale arbeidstimer;
                                                              SVE=Totala timmar f”r arbetskraft];
                                                   Editable=No }
    { 110 ;   ;Activity Description;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Planning Activity".Description WHERE (Project No.=FIELD(Project No.),
                                                                                                                     Code=FIELD(Activity Code)));
                                                   CaptionML=[ENU=Activity Description;
                                                              NOR=Aktivitetsbeskrivelse;
                                                              SVE=Aktivitetsbeskrivning];
                                                   Editable=No }
    { 120 ;   ;Quantity            ;Decimal       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                ReqActCapMgt.CalculatePeriodOrPlannedHours(Rec);
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   MinValue=0 }
    { 130 ;   ;Hours by Day        ;Decimal       ;OnValidate=BEGIN
                                                                ReqActCapMgt.CalculatePeriodOrPlannedHours(Rec);
                                                              END;

                                                   CaptionML=[ENU=Hours/day (different);
                                                              NOR=Timer/Dag (Forskjellig);
                                                              SVE=Timmar/dag (olika)];
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   Description=Fill this field only if different from norm hours. See T1115710, field 100 }
    { 200 ;   ;Assigned Labor Hours;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Assigned Activ. Cap. by Day".Hours WHERE (Project No.=FIELD(Project No.),
                                                                                                              Activity Code=FIELD(Activity Code),
                                                                                                              Line No. Request=FIELD(Line No.),
                                                                                                              Resource Type=CONST(Employee)));
                                                   CaptionML=[ENU=Assigned Labor Hours;
                                                              NOR=Tilordnede arbeidstimer;
                                                              SVE=Tilldelade arbetstimmar];
                                                   Editable=No }
    { 210 ;   ;Assigned Plant Hours;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Assigned Activ. Cap. by Day".Hours WHERE (Project No.=FIELD(Project No.),
                                                                                                              Activity Code=FIELD(Activity Code),
                                                                                                              Line No. Request=FIELD(Line No.),
                                                                                                              Resource Type=CONST(Plant)));
                                                   CaptionML=[ENU=Assigned Plant Hours;
                                                              NOR=Tilordnede maskintimer;
                                                              SVE=Tilldelade Maskinstimmar];
                                                   Editable=No }
    { 220 ;   ;Changed             ;Boolean       ;CaptionML=[ENU=Changed;
                                                              NOR=Endret;
                                                              SVE=Žndrad];
                                                   Description=Added for GPP }
  }
  KEYS
  {
    {    ;Project No.,Activity Code,Line No.      ;Clustered=Yes }
    {    ;Project No.,Activity Code,Resource Type,Resource Code;
                                                   SumIndexFields=Plan Hours }
    {    ;Changed                                  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100525000 : TextConst 'ENU=may not before %1;NOR=kan ikke v‘re f›r %1;SVE=f†r inte vara f”re %1';
      ReqActCapMgt@1100525001 : Codeunit 11125707;
      ProjActCapComMgt@1100525002 : Codeunit 11125706;

    PROCEDURE CheckProjectStatus@1100525005();
    VAR
      ProjRec@1100525000 : Record 11072003;
    BEGIN
      ProjRec.GET("Project No.");
      IF NOT (ProjRec."Project Status" IN [ProjRec."Project Status"::Preparation,ProjRec."Project Status"::Production]) THEN
        ProjRec.FIELDERROR("Project Status");
    END;

    PROCEDURE GetResourceDescription@1100525000() : Text[100];
    BEGIN
      EXIT(ProjActCapComMgt.GetResourceDescription(DATABASE::"Requested Activity Capacity", "Resource Type", "Resource Code", ''));
    END;

    PROCEDURE LookupResourceCode@1100525002(EditableMode@1100525000 : Boolean);
    VAR
      TeamTypeRec@1100525003 : Record 11125706;
      DisciplineRec@1100525001 : Record 11020204;
      PlantTypeRec@1100525002 : Record 11012551;
    BEGIN
      CASE "Resource Type" OF
        "Resource Type"::TeamType:
          BEGIN
            TeamTypeRec.Code := "Resource Code";
            IF NOT EditableMode THEN
              PAGE.RUNMODAL(0, TeamTypeRec)
            ELSE BEGIN
              IF PAGE.RUNMODAL(0, TeamTypeRec) = ACTION::LookupOK THEN
                VALIDATE("Resource Code", TeamTypeRec.Code);
            END;
          END;
        "Resource Type"::Discipline:
          BEGIN
            DisciplineRec.Code := "Resource Code";
            IF NOT EditableMode THEN
              PAGE.RUNMODAL(0, DisciplineRec)
            ELSE BEGIN
              IF PAGE.RUNMODAL(0, DisciplineRec) = ACTION::LookupOK THEN
                VALIDATE("Resource Code", DisciplineRec.Code);
            END;
          END;
        "Resource Type"::Plant:
          BEGIN
            PlantTypeRec.FILTERGROUP(6);
            PlantTypeRec.SETRANGE(Bulk, FALSE);
            PlantTypeRec.FILTERGROUP(0);
            PlantTypeRec.Code := "Resource Code";
            IF NOT EditableMode THEN
              PAGE.RUNMODAL(0, PlantTypeRec)
            ELSE BEGIN
              IF PAGE.RUNMODAL(0, PlantTypeRec) = ACTION::LookupOK THEN
                VALIDATE("Resource Code", PlantTypeRec.Code);
            END;
          END;
      END;
    END;

    PROCEDURE GetResourceHoursByDay@1100525001() : Decimal;
    BEGIN
      EXIT(ProjActCapComMgt.GetReqActCapResourceHoursByDay(Rec));
    END;

    PROCEDURE DeleteReqActCapByDay@1100525004();
    VAR
      ReqActCapByDayRec@1100525001 : Record 11125709;
    BEGIN
      ReqActCapByDayRec.SETRANGE("Project No.", "Project No.");
      ReqActCapByDayRec.SETRANGE("Activity Code", "Activity Code");
      ReqActCapByDayRec.SETRANGE("Line No. Request", "Line No.");
      ReqActCapByDayRec.DELETEALL;
    END;

    PROCEDURE AssignedHours@1100525003() : Decimal;
    BEGIN
      CASE "Resource Type" OF
        "Resource Type"::TeamType,
        "Resource Type"::Discipline:
          BEGIN
            CALCFIELDS("Assigned Labor Hours");
            EXIT("Assigned Labor Hours");
          END;
        "Resource Type"::Plant:
          BEGIN
            CALCFIELDS("Assigned Plant Hours");
            EXIT("Assigned Plant Hours");
          END;
      END;

      EXIT(0);
    END;

    LOCAL PROCEDURE CheckIfReqActCapCanBeChanged@1100528400();
    VAR
      JobsSetup@1100528400 : Record 315;
    BEGIN
      IF JobsSetup.GET THEN
        JobsSetup.TESTFIELD("Disable Capacity Planning", FALSE);
    END;

    PROCEDURE CalcTotDiffHrsTeamMembersByDay@1100528401() HoursByDay : Decimal;
    BEGIN
      IF "Resource Type" = "Resource Type"::TeamType THEN
        HoursByDay :=
          Quantity * ProjActCapComMgt.CalcTeamTypeLaborHoursByDay("Resource Code", "Hours by Day");
    END;

    PROCEDURE CalcDiffHrsTeamByDay@1100528402(DiffHrsTeamMembersByDay@1100528400 : Decimal) HoursByDay : Decimal;
    BEGIN
      IF ("Resource Type" = "Resource Type"::TeamType) AND
         (Quantity * ProjActCapComMgt.CalcTeamTypeFTE("Resource Code") > 0)
      THEN
        HoursByDay := DiffHrsTeamMembersByDay / (Quantity * ProjActCapComMgt.CalcTeamTypeFTE("Resource Code"));
    END;

    BEGIN
    END.
  }
}

