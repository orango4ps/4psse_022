OBJECT Codeunit 11072009 JobJnlManagement
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03,4PS14.00 (1020);
  }
  PROPERTIES
  {
    Permissions=TableData 11072007=imd,
                TableData 11072011=imd,
                TableData 11020408=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=JOB;ENU=JOB;NLD=PROJECT;NOR=JOB;SVE=JOB';
      Text001@1001 : TextConst 'DEU=Projekt Buch.-Blatt;ENU=Job Journal;NLD=Projectdagboek;NOR=Prosjektkladd;SVE=Projektjournal';
      Text002@1002 : TextConst 'DEU=WIEDERK.;ENU=RECURRING;NLD=PERIODIEK;NOR=GJENTAK.;SVE=èTERKOMMER';
      Text003@1003 : TextConst 'DEU=Wiederk. Projekt Buch.-Blatt;ENU=Recurring Job Journal;NLD=Periodiek projectdagboek;NOR=Repeterende prosjektjournal;SVE=èterkommande projektjournal';
      Text004@1004 : TextConst 'DEU=STANDARD;ENU=DEFAULT;NLD=STANDAARD;NOR=STANDARD;SVE=STANDARD';
      Text005@1005 : TextConst 'DEU=Standard Buch.-Blatt;ENU=Default Journal;NLD=Standaarddagboek;NOR=Standardkladd;SVE=Standardjournal';
      LastJobJnlLine@1006 : Record 11072008;
      OpenFromBatch@1007 : Boolean;

    [External]
    PROCEDURE TemplateSelection@1(PageID@1004 : Integer;RecurringJnl@1000 : Boolean;VAR JobJnlLine@1003 : Record 11072008;VAR JnlSelected@1002 : Boolean);
    VAR
      JobJnlTemplate@1001 : Record 11072007;
    BEGIN
      JnlSelected := TRUE;

      JobJnlTemplate.RESET;
      JobJnlTemplate.SETRANGE("Page ID",PageID);
      JobJnlTemplate.SETRANGE(Recurring,RecurringJnl);

      CASE JobJnlTemplate.COUNT OF
        0:
          BEGIN
            JobJnlTemplate.INIT;
            JobJnlTemplate.Recurring := RecurringJnl;
            IF NOT RecurringJnl THEN BEGIN
              JobJnlTemplate.Name := Text000;
              JobJnlTemplate.Description := Text001;
            END ELSE BEGIN
              JobJnlTemplate.Name := Text002;
              JobJnlTemplate.Description := Text003;
            END;
            JobJnlTemplate.VALIDATE("Page ID");
            JobJnlTemplate.INSERT;
            COMMIT;
          END;
        1:
          JobJnlTemplate.FINDFIRST;
        ELSE
          JnlSelected := PAGE.RUNMODAL(0,JobJnlTemplate) = ACTION::LookupOK;
      END;
      IF JnlSelected THEN BEGIN
        JobJnlLine.FILTERGROUP := 2;
        JobJnlLine.SETRANGE("Journal Template Name",JobJnlTemplate.Name);
        JobJnlLine.FILTERGROUP := 0;
        IF OpenFromBatch THEN BEGIN
          JobJnlLine."Journal Template Name" := '';
          PAGE.RUN(JobJnlTemplate."Page ID",JobJnlLine);
        END;
      END;
    END;

    [External]
    PROCEDURE TemplateSelectionFromBatch@10(VAR JobJnlBatch@1000 : Record 11072011);
    VAR
      JobJnlLine@1002 : Record 11072008;
      JobJnlTemplate@1003 : Record 11072007;
    BEGIN
      OpenFromBatch := TRUE;
      JobJnlTemplate.GET(JobJnlBatch."Journal Template Name");
      JobJnlTemplate.TESTFIELD("Page ID");
      JobJnlBatch.TESTFIELD(Name);

      JobJnlLine.FILTERGROUP := 2;
      JobJnlLine.SETRANGE("Journal Template Name",JobJnlTemplate.Name);
      JobJnlLine.FILTERGROUP := 0;

      JobJnlLine."Journal Template Name" := '';
      JobJnlLine."Journal Batch Name" := JobJnlBatch.Name;
      PAGE.RUN(JobJnlTemplate."Page ID",JobJnlLine);
    END;

    [External]
    PROCEDURE OpenJnl@2(VAR CurrentJnlBatchName@1000 : Code[10];VAR JobJnlLine@1001 : Record 11072008);
    BEGIN
      CheckTemplateName(JobJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
      JobJnlLine.FILTERGROUP := 2;
      JobJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      JobJnlLine.FILTERGROUP := 0;
    END;

    [External]
    PROCEDURE OpenJnlBatch@12(VAR JobJnlBatch@1000 : Record 11072011);
    VAR
      JobJnlTemplate@1002 : Record 11072007;
      JobJnlLine@1004 : Record 11072008;
      JnlSelected@1003 : Boolean;
    BEGIN
      IF JobJnlBatch.GETFILTER("Journal Template Name") <> '' THEN
        EXIT;
      JobJnlBatch.FILTERGROUP(2);
      IF JobJnlBatch.GETFILTER("Journal Template Name") <> '' THEN BEGIN
        JobJnlBatch.FILTERGROUP(0);
        EXIT;
      END;
      JobJnlBatch.FILTERGROUP(0);

      IF NOT JobJnlBatch.FIND('-') THEN BEGIN
        IF NOT JobJnlTemplate.FINDFIRST THEN
          TemplateSelection(0,FALSE,JobJnlLine,JnlSelected);
        IF JobJnlTemplate.FINDFIRST THEN
          CheckTemplateName(JobJnlTemplate.Name,JobJnlBatch.Name);
        JobJnlTemplate.SETRANGE(Recurring,TRUE);
        IF NOT JobJnlTemplate.FINDFIRST THEN
          TemplateSelection(0,TRUE,JobJnlLine,JnlSelected);
        IF JobJnlTemplate.FINDFIRST THEN
          CheckTemplateName(JobJnlTemplate.Name,JobJnlBatch.Name);
        JobJnlTemplate.SETRANGE(Recurring);
      END;
      JobJnlBatch.FIND('-');
      JnlSelected := TRUE;
      JobJnlBatch.CALCFIELDS(Recurring);
      JobJnlTemplate.SETRANGE(Recurring,JobJnlBatch.Recurring);
      IF JobJnlBatch.GETFILTER("Journal Template Name") <> '' THEN
        JobJnlTemplate.SETRANGE(Name,JobJnlBatch.GETFILTER("Journal Template Name"));
      CASE JobJnlTemplate.COUNT OF
        1:
          JobJnlTemplate.FINDFIRST;
        ELSE
          JnlSelected := PAGE.RUNMODAL(0,JobJnlTemplate) = ACTION::LookupOK;
      END;
      IF NOT JnlSelected THEN
        ERROR('');

      JobJnlBatch.FILTERGROUP(0);
      JobJnlBatch.SETRANGE("Journal Template Name",JobJnlTemplate.Name);
      JobJnlBatch.FILTERGROUP(2);
    END;

    LOCAL PROCEDURE CheckTemplateName@3(CurrentJnlTemplateName@1000 : Code[10];VAR CurrentJnlBatchName@1001 : Code[10]);
    VAR
      JobJnlBatch@1002 : Record 11072011;
    BEGIN
      JobJnlBatch.SETRANGE("Journal Template Name",CurrentJnlTemplateName);
      IF NOT JobJnlBatch.GET(CurrentJnlTemplateName,CurrentJnlBatchName) THEN BEGIN
        IF NOT JobJnlBatch.FINDFIRST THEN BEGIN
          JobJnlBatch.INIT;
          JobJnlBatch."Journal Template Name" := CurrentJnlTemplateName;
          JobJnlBatch.SetupNewBatch;
          JobJnlBatch.Name := Text004;
          JobJnlBatch.Description := Text005;
          JobJnlBatch.INSERT(TRUE);
          COMMIT;
        END;
        CurrentJnlBatchName := JobJnlBatch.Name;
      END;
    END;

    [External]
    PROCEDURE CheckName@4(CurrentJnlBatchName@1000 : Code[10];VAR JobJnlLine@1001 : Record 11072008);
    VAR
      JobJnlBatch@1002 : Record 11072011;
    BEGIN
      JobJnlBatch.GET(JobJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
    END;

    [External]
    PROCEDURE SetName@5(CurrentJnlBatchName@1000 : Code[10];VAR JobJnlLine@1001 : Record 11072008);
    BEGIN
      JobJnlLine.FILTERGROUP := 2;
      JobJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      JobJnlLine.FILTERGROUP := 0;
      IF JobJnlLine.FIND('-') THEN;
    END;

    [External]
    PROCEDURE LookupName@6(VAR CurrentJnlBatchName@1000 : Code[10];VAR JobJnlLine@1001 : Record 11072008);
    VAR
      JobJnlBatch@1002 : Record 11072011;
    BEGIN
      COMMIT;
      JobJnlBatch."Journal Template Name" := JobJnlLine.GETRANGEMAX("Journal Template Name");
      JobJnlBatch.Name := JobJnlLine.GETRANGEMAX("Journal Batch Name");
      JobJnlBatch.FILTERGROUP(2);
      JobJnlBatch.SETRANGE("Journal Template Name",JobJnlBatch."Journal Template Name");
      OnLookupNameOnAfterSetFilters(JobJnlBatch);
      JobJnlBatch.FILTERGROUP(0);
      IF PAGE.RUNMODAL(0,JobJnlBatch) = ACTION::LookupOK THEN BEGIN
        CurrentJnlBatchName := JobJnlBatch.Name;
        SetName(CurrentJnlBatchName,JobJnlLine);
      END;
    END;

    [External]
    PROCEDURE GetNames@7(VAR JobJnlLine@1000 : Record 11072008;VAR JobDescription@1001 : Text[100];VAR AccName@1002 : Text[100]);
    VAR
      Job@1003 : Record 11072003;
      Res@1004 : Record 156;
      Item@1005 : Record 27;
      GLAcc@1006 : Record 15;
    BEGIN
      IF (JobJnlLine."Job No." = '') OR
         (JobJnlLine."Job No." <> LastJobJnlLine."Job No.")
      THEN BEGIN
        JobDescription := '';
        IF Job.GET(JobJnlLine."Job No.") THEN
          JobDescription := Job.Description;
      END;

      IF (JobJnlLine.Type <> LastJobJnlLine.Type) OR
         (JobJnlLine."No." <> LastJobJnlLine."No.")
      THEN BEGIN
        AccName := '';
        IF JobJnlLine."No." <> '' THEN
          CASE JobJnlLine.Type OF
            JobJnlLine.Type::Resource:
              IF Res.GET(JobJnlLine."No.") THEN
                AccName := Res.Name;
            JobJnlLine.Type::Item:
              IF Item.GET(JobJnlLine."No.") THEN
                AccName := Item.Description;
            JobJnlLine.Type::"G/L Account":
              IF GLAcc.GET(JobJnlLine."No.") THEN
                AccName := GLAcc.Name;
          END;
      END;

      LastJobJnlLine := JobJnlLine;
    END;

    [External]
    PROCEDURE GetNextEntryNo@8() : Integer;
    VAR
      JobEntryNo@1000 : Record 11020408;
    BEGIN
      WITH JobEntryNo DO BEGIN
        LOCKTABLE;
        IF NOT GET THEN
          INSERT;
        "Entry No." := "Entry No." + 1;
        MODIFY;
        EXIT("Entry No.");
      END;
    END;

    [Integration]
    LOCAL PROCEDURE OnLookupNameOnAfterSetFilters@9(VAR JobJournalBatch@1000 : Record 11072011);
    BEGIN
    END;

    BEGIN
    END.
  }
}

