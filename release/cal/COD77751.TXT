OBJECT Codeunit 77751 Meta Data Mgt Local
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=LocalRelTool;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Window@1100525003 : Dialog;
      Progress@1100525002 : Integer;
      NoOfRecords@1100525001 : Integer;
      Counter@1100525000 : Integer;
      Text000@1100525007 : TextConst 'ENU=Automatic Data Conversion %1 (%2)  @1@@@@@@@@@@@@@';
      Text010@1100525005 : TextConst 'ENU=Data in tables in selected table types will be deleted, continue?';

    PROCEDURE FillExtTableDataIntFromObject@1100485001();
    VAR
      MetaDataSetup@1210190000 : Record 77752;
      Object@1100485001 : Record 2000000001;
      ExtendedTablePropertyINT@1100525002 : Record 77754;
      AllObjectsWithCaption@1100525001 : Record 2000000058;
      ObjectRangePerGranule@1100409000 : Record 55313;
    BEGIN
      MetaDataSetup.GET;
      Object.SETRANGE(Type,Object.Type::Table);
      Object.SETFILTER(ID,MetaDataSetup."4PS Construct Object Filter");
      IF Object.FINDSET(FALSE,FALSE) THEN
        REPEAT
          IF NOT ExtendedTablePropertyINT.GET(Object.ID) THEN BEGIN
            ExtendedTablePropertyINT.INIT;
            ExtendedTablePropertyINT."Table ID" := Object.ID;
            ExtendedTablePropertyINT.INSERT(TRUE);
          END;
          AllObjectsWithCaption.SETRANGE("Object Type",AllObjectsWithCaption."Object Type"::Table);
          AllObjectsWithCaption.SETRANGE("Object ID",Object.ID);
          IF AllObjectsWithCaption.FINDSET(FALSE,FALSE) THEN
            ExtendedTablePropertyINT."Table Caption" := AllObjectsWithCaption."Object Caption";

          ObjectRangePerGranule.GetGranule(ExtendedTablePropertyINT."Table ID",ExtendedTablePropertyINT.Granule,ExtendedTablePropertyINT."Granule Name");
          ExtendedTablePropertyINT.MODIFY(TRUE);
        UNTIL Object.NEXT = 0;
    END;

    PROCEDURE UpdateProgressWindow@1100525005(NewProgress@11012000 : Integer);
    BEGIN
      IF NoOfRecords > 0 THEN BEGIN
        NewProgress := ROUND(NewProgress / NoOfRecords * 100,1);
        IF (NewProgress <> Progress) THEN
          Window.UPDATE(1,100 * NewProgress);
        Progress := NewProgress;
      END;
    END;

    BEGIN
    END.
  }
}

