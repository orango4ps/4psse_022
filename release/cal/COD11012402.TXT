OBJECT Codeunit 11012402 Excel Automation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      XlApp@1100528703 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.ApplicationClass" RUNONCLIENT;
      XlWrkBk@1100528702 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook" RUNONCLIENT;
      ExcelEnumeration@1100528700 : Codeunit 11012375;
      CurrentSheetNo@11012006 : Integer;
      CurrentCol@11012007 : Integer;
      CurrentRow@11012008 : Integer;
      ActivePrinter@1100528706 : Text;
      CurSettingBold@11012011 : Boolean;
      CurSettingItalic@11012012 : Boolean;
      CurSettingUnderline@11012013 : Integer;
      CurSettingFontName@11012014 : Text[250];
      Text000@1100525000 : TextConst 'ENU=Page &P of &N;NOR=Side &P av &N;SVE=Sida &P av &N';
      CurSettingForegroundColour@1100528705 : Integer;
      CurSettingBackgroundColour@1100528704 : Integer;
      Text001@1100528701 : TextConst 'ENU=Worksheet %1 not found.';
      Text002@1100528708 : TextConst 'ENU=The selected range in SetRowHiddenInRange should be a single cel.;NOR=Det valgte intervallet i SetRowHiddenInRange b›r v‘re en enkel celle.';
      Text003@1100528707 : TextConst 'ENU=The selected range in SetRowHiddenInRange should be a single cel.;NOR=Det valgte intervallet i SetRowHiddenInRange b›r v‘re en enkel celle.';

    PROCEDURE InitExcel@2();
    BEGIN
      ResetDecoratorSettings;

      IF NOT ISNULL(XlApp) THEN
        CLEAR(XlApp);
      XlApp := XlApp.ApplicationClass;
      IF ISNULL(XlApp) THEN
        ERROR(Text000);
    END;

    PROCEDURE GiveUserControl@11();
    BEGIN
      IF NOT ISNULL(XlApp) THEN BEGIN
        XlApp.Visible := TRUE;
        XlApp.UserControl := TRUE;
        CLEAR(XlApp);
      END;
    END;

    PROCEDURE SetFullScreen@27(OnOff@11012000 : Boolean);
    BEGIN
      XlApp.DisplayFullScreen(OnOff);
    END;

    PROCEDURE TermExcel@20();
    VAR
      XlHelper@1100528700 : DotNet "'Microsoft.Dynamics.Nav.Integration.Office, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Integration.Office.Excel.ExcelHelper" RUNONCLIENT;
    BEGIN
      IF NOT ISNULL(XlWrkBk) THEN
        CLEAR(XlWrkBk);

      IF NOT ISNULL(XlApp) THEN BEGIN
        XlHelper.CallQuit(XlApp);
        CLEAR(XlApp);
      END;
    END;

    PROCEDURE InitWorkbook@24(SheetName@11012000 : Text[30]);
    VAR
      XlWrkSht@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
    BEGIN
      ResetDecoratorSettings;

      CurrentCol := 1;
      CurrentRow := 1;

      CurrentSheetNo := 1;

      ActivePrinter := '';

      XlWrkBk := XlApp.Workbooks.Add(ExcelEnumeration.XlWBATemplate_xlWBATWorksheet);
      XlWrkSht := XlApp.ActiveSheet;
      XlWrkSht.Name := SheetName;
    END;

    PROCEDURE OpenWorkbook@25(FileName@11012000 : Text[250]);
    VAR
      XlHelper@1100528700 : DotNet "'Microsoft.Dynamics.Nav.Integration.Office, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Integration.Office.Excel.ExcelHelper" RUNONCLIENT;
    BEGIN
      CurrentSheetNo := 1;

      ActivePrinter := '';

      XlWrkBk := XlHelper.CallOpen(XlApp, FileName);
    END;

    PROCEDURE OpenWorkbookWithReadOnlyCheck@1100526001(FileName@11012000 : Text[250];ReadOnly@1100526000 : Boolean);
    VAR
      TypeMissing@1100526001 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object" RUNONCLIENT;
      XLPlatform@1100526002 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.XlPlatform" RUNONCLIENT;
    BEGIN
      //DP02273
      CurrentSheetNo := 1;

      ActivePrinter := '';

      XlWrkBk := XlApp.Workbooks.Open(FileName, 0, ReadOnly, 5, '', '', TRUE, XLPlatform.xlWindows, '', FALSE, FALSE, 0, TRUE, 1, 0);
    END;

    PROCEDURE SaveWorkbook@1100528708();
    BEGIN
      XlWrkBk.Save;
    END;

    PROCEDURE SaveWorkbookAs@21(FileName@11012000 : Text[250]);
    VAR
      DotNetManagement@1100528700 : Codeunit 11012374;
      TypeMissing@1100528704 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object" RUNONCLIENT;
    BEGIN
      DotNetManagement.GetTypeMissing(TypeMissing);

      XlWrkBk.SaveAs(FileName, ExcelEnumeration.XlFileFormat_xlWorkbookDefault,
        TypeMissing, TypeMissing, FALSE, FALSE, ExcelEnumeration.XlSaveAsAccessMode_xlNoChange, TypeMissing, TypeMissing, TypeMissing, TypeMissing, TypeMissing);
    END;

    PROCEDURE SaveWorkbookAsXMLMacroEnabled@1100525002(FileName@11012000 : Text[250]);
    VAR
      DotNetManagement@1100528701 : Codeunit 11012374;
      TypeMissing@1100528700 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object" RUNONCLIENT;
    BEGIN
      DotNetManagement.GetTypeMissing(TypeMissing);

      XlWrkBk.SaveAs(FileName, ExcelEnumeration.XlFileFormat_xlOpenXMLWorkbookMacroEnabled,
        TypeMissing, TypeMissing, FALSE, FALSE, ExcelEnumeration.XlSaveAsAccessMode_xlNoChange, TypeMissing, TypeMissing, TypeMissing, TypeMissing, TypeMissing);
    END;

    PROCEDURE CloseWorkbook@22();
    BEGIN
      XlWrkBk.Close(FALSE, '', FALSE);
    END;

    PROCEDURE CloseWorkbookWithoutSaving@1100525001();
    BEGIN
      XlWrkBk.Close(FALSE, '', FALSE);
    END;

    PROCEDURE PrintWorkBook@1100525000();
    VAR
      DotNetManagement@1100528703 : Codeunit 11012374;
      TypeMissing@1100528702 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object" RUNONCLIENT;
    BEGIN
      DotNetManagement.GetTypeMissing(TypeMissing);

      XlWrkBk.PrintOut(TypeMissing, TypeMissing, TypeMissing, TypeMissing, ActivePrinter, FALSE, FALSE, '');
    END;

    PROCEDURE AddWorksheet@3(SheetName@11012001 : Text[30]) @11012000 : Integer;
    VAR
      DotNetManagement@1100528702 : Codeunit 11012374;
      TypeMissing@1100528700 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object" RUNONCLIENT;
      XlWrkSht@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
    BEGIN
      DotNetManagement.GetTypeMissing(TypeMissing);

      XlWrkSht := XlWrkBk.Worksheets.Add(TypeMissing, XlWrkBk.Worksheets.Item(XlWrkBk.Worksheets.Count), TypeMissing, TypeMissing);
      XlWrkSht.Name := SheetName;

      EXIT(XlWrkBk.Worksheets.Count);
    END;

    PROCEDURE AddPicture@1100528600(Left@1100528603 : Integer;Top@1100528604 : Integer;Width@1100528600 : Decimal;Height@1100528601 : Decimal;FileName@1100528602 : Text);
    VAR
      XlWrkSht@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      DotNetManagement@1100528700 : Codeunit 11012374;
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      XlWrkSht.Shapes.AddPicture(
        FileName, DotNetManagement.MsoTriState_msoCTrue, DotNetManagement.MsoTriState_msoCTrue, Left, Top, Width, Height);
    END;

    PROCEDURE AddChart@1100528706(ChartName@1100528716 : Text;FromSourceCol@1100528705 : Integer;FromSourceRow@1100528706 : Integer;ToSourceCol@1100528708 : Integer;ToSourceRow@1100528707 : Integer;Gallery@1100528709 : Integer;Format@1100528710 : Integer;PlotBy@1100528711 : Integer;CategoryLabels@1100528712 : Integer;SeriesLabels@1100528713 : Integer;HasLegend@1100528714 : Boolean;Title@1100528715 : Text);
    VAR
      DotNetManagement@1100528702 : Codeunit 11012374;
      TypeMissing@1100528701 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object" RUNONCLIENT;
      XlWrkSht@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528704 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
      XlChart@1100528703 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Chart" RUNONCLIENT;
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromColRow(XlWrkSht, FromSourceCol, FromSourceRow, ToSourceCol, ToSourceRow, XlRange);

      DotNetManagement.GetTypeMissing(TypeMissing);
      XlChart := XlWrkBk.Charts.Add(TypeMissing, TypeMissing, TypeMissing, TypeMissing);
      XlChart.Name := ChartName;
      XlChart.ChartWizard(
        XlRange, Gallery, Format, PlotBy,
        CategoryLabels, SeriesLabels, HasLegend, Title,
        TypeMissing, TypeMissing, TypeMissing);
    END;

    PROCEDURE PrintSheet@32();
    VAR
      DotNetManagement@1100528701 : Codeunit 11012374;
      TypeMissing@1100528700 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object" RUNONCLIENT;
      XlWrkSht@1100528702 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
    BEGIN
      DotNetManagement.GetTypeMissing(TypeMissing);

      GetCurrentXlWrkSht(XlWrkSht);
      XlWrkSht.PrintOut(TypeMissing, TypeMissing, TypeMissing, TypeMissing, ActivePrinter, FALSE, FALSE, '');
    END;

    PROCEDURE WriteCell@4(Col@11012000 : Integer;Row@11012001 : Integer;Contents@1100528702 : Text);
    VAR
      XlWrkSht@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromColRow(XlWrkSht, Col, Row, 0, 0, XlRange);
      XlRange.Value(ExcelEnumeration.XlRangeValueDataType_xlRangeValueDefault, Contents);

      XlRange.Font.Bold := CurSettingBold;
      XlRange.Font.Underline := CurSettingUnderline;
      XlRange.Font.Italic := CurSettingItalic;
      IF CurSettingFontName <> '' THEN
        XlRange.Font.Name := CurSettingFontName;
      IF CurSettingForegroundColour <> -1 THEN
        XlRange.Font.ColorIndex := CurSettingForegroundColour;
      IF CurSettingBackgroundColour <> -1 THEN BEGIN
        XlRange.Interior.ColorIndex := CurSettingBackgroundColour;
        XlRange.Interior.Pattern := 1;
      END;

      CurrentCol := Col;
      CurrentRow := Row;
    END;

    PROCEDURE ReadCell@26(Col@11012001 : Integer;Row@11012002 : Integer) @11012000 : Text[250];
    VAR
      XlWrkSht@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromColRow(XlWrkSht, Col, Row, 0, 0, XlRange);
      EXIT(FORMAT(XlRange.Value(ExcelEnumeration.XlRangeValueDataType_xlRangeValueDefault)));
    END;

    PROCEDURE ReadCellVariant@1100528709(Col@11012001 : Integer;Row@11012002 : Integer;VAR Value@1100528702 : Variant);
    VAR
      XlWrkSht@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromColRow(XlWrkSht, Col, Row, 0, 0, XlRange);
      Value := XlRange.Value(ExcelEnumeration.XlRangeValueDataType_xlRangeValueDefault);
    END;

    PROCEDURE Write@8(Contents@1100528700 : Text);
    BEGIN
      WriteCell(CurrentCol + 1, CurrentRow, Contents);
    END;

    PROCEDURE WriteLN@9(Contents@1100528700 : Text);
    BEGIN
      WriteCell(CurrentCol + 1, CurrentRow, Contents);
      CurrentCol := 1;
      CurrentRow += 1;
    END;

    PROCEDURE AutoFit@15(FromCol@11012000 : Integer;ToCol@11012001 : Integer);
    VAR
      XlWrkSht@1100528702 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
      FromColumnID@1100528700 : Code[10];
      ToColumnID@1100528703 : Code[10];
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      FromColumnID := GetColumnIDFromCol(FromCol);
      ToColumnID := GetColumnIDFromCol(ToCol);
      XlRange := XlWrkSht.Range(FromColumnID + ':' + FromColumnID, ToColumnID + ':' + ToColumnID);
      XlRange.EntireColumn.AutoFit;
    END;

    PROCEDURE AutoFitAll@13();
    VAR
      XlWrkSht@1100528703 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      XlWrkSht.Cells.Select;
      XlWrkSht.Cells.EntireColumn.AutoFit;
    END;

    PROCEDURE FreezePane@1100485003(RangeName@1100485000 : Text[30]);
    VAR
      XlWrkSht@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromRangeName(XlWrkSht, RangeName, XlRange);
      XlRange.Select;
      XlApp.ActiveWindow.FreezePanes := TRUE;
    END;

    PROCEDURE SetPrinter@33(Name@11012000 : Text[250]);
    BEGIN
      ActivePrinter := Name;
    END;

    PROCEDURE SetCurrentSheetNo@10(No@11012001 : Integer) @11012000 : Integer;
    BEGIN
      CurrentSheetNo := No;
      EXIT(CurrentSheetNo);
    END;

    PROCEDURE SetCurrentSheet@1100528705(SheetName@1100528703 : Text[50]) : Integer;
    VAR
      Enumerator@1100528701 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.IEnumerator" RUNONCLIENT;
      XlWrkSht@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      Found@1100528702 : Boolean;
      No@1100528704 : Integer;
    BEGIN
      Enumerator := XlWrkBk.Worksheets.GetEnumerator;
      WHILE Enumerator.MoveNext AND (NOT Found) DO BEGIN
        No += 1;
        XlWrkSht := Enumerator.Current;
        IF SheetName = XlWrkSht.Name THEN
          Found := TRUE;
      END;

      IF Found THEN
        CurrentSheetNo := No
      ELSE
        ERROR(Text001, SheetName);

      EXIT(CurrentSheetNo);
    END;

    PROCEDURE SetDefaultFilePath@1100485020(FilePath@1100485000 : Text);
    BEGIN
      // function has no effect
      XlApp.DefaultFilePath := FilePath;
    END;

    PROCEDURE SetFontSize@18(Size@11012000 : Integer);
    VAR
      XlWrkSht@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      XlWrkSht.Cells.Font.Size := Size;
    END;

    PROCEDURE SetFont@23(Name@11012000 : Text[250]);
    VAR
      XlWrkSht@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      XlWrkSht.Cells.Font.Name := Name;
    END;

    PROCEDURE SetNumberFormatColumn@31(Col@1100528702 : Integer;NumberFormat@11012000 : Text[30]);
    VAR
      XlWrkSht@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
      ColumnID@1100528703 : Code[10];
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      ColumnID := GetColumnIDFromCol(Col);
      XlRange := XlWrkSht.Range(ColumnID + ':' + ColumnID, ColumnID + ':' + ColumnID);
      XlRange.EntireColumn.NumberFormat := NumberFormat;
    END;

    PROCEDURE SetNumberFormatInRange@1100528707(RangeName@1100528701 : Text[30];NumberFormat@1100528700 : Text[30]);
    VAR
      XlWrkSht@1100528703 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528702 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromRangeName(XlWrkSht, RangeName, XlRange);
      XlRange.NumberFormat := NumberFormat;
    END;

    PROCEDURE SetBordersInRange@1100485005(RangeName@1100528703 : Text[30];BorderIndex@1100528702 : Integer;LineStyle@1100528701 : Integer;LineWeight@1100528700 : Integer);
    VAR
      XlWrkSht@1100528705 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528704 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
      XLBorder@1100528706 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Border" RUNONCLIENT;
      i@1100528707 : Integer;
    BEGIN
      // BorderIndex:
      // 1:Cell/Left, 2:Cell/Right, 3:Cell/Top, 4:Cell/Bottom 5:Cell/DiagRB 6:Cell/DiagLB
      // 7:Range/Left, 8:Range/Top, 9:Range/Bottom, 10:Range/Right, 11:Range/VertCentre, 12: Range/HorCentre,
      // 13:Range/Round
      // LineStyle:
      // 1:Streight, 2:Small Spaces, 3:Bigger Spaces etc.
      // LineWeight: Pt.

      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromRangeName(XlWrkSht, RangeName, XlRange);
      IF BorderIndex = 13 THEN BEGIN
        FOR i := 7 TO 10 DO BEGIN
          XLBorder := XlRange.Borders.Item(i);
          XLBorder.LineStyle := LineStyle;
          XLBorder.Weight := LineWeight;
        END;
      END ELSE BEGIN
        XLBorder := XlRange.Borders.Item(BorderIndex);
        XLBorder.LineStyle := LineStyle;
        XLBorder.Weight := LineWeight;
      END;
    END;

    PROCEDURE SetInteriorColorInRange@1100528800(RangeName@1100528800 : Text[30];Colour@1100528801 : Code[30]);
    VAR
      XlWrkSht@1100528803 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528802 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
    BEGIN
      CurSettingBackgroundColour := ExcelEnumeration.TranslateColour(Colour);

      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromRangeName(XlWrkSht, RangeName, XlRange);

      IF CurSettingBackgroundColour <> -1 THEN BEGIN
        XlRange.Interior.ColorIndex := CurSettingBackgroundColour;
        XlRange.Interior.Pattern := 1;
      END;
    END;

    PROCEDURE SetFontColorInRange@1100528805(RangeName@1100528800 : Text[30];Colour@1100528801 : Code[30]);
    VAR
      XlWrkSht@1100528803 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528802 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
    BEGIN
      CurSettingForegroundColour := ExcelEnumeration.TranslateColour(Colour);

      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromRangeName(XlWrkSht, RangeName, XlRange);

      IF CurSettingForegroundColour <> -1 THEN
        XlRange.Font.ColorIndex := CurSettingForegroundColour;
    END;

    PROCEDURE MergeCellsInRange@1100525007(RangeName@1100525000 : Text[30]);
    VAR
      XlWrkSht@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromRangeName(XlWrkSht, RangeName, XlRange);
      XlRange.Merge := TRUE;
    END;

    PROCEDURE MergeCellsInRangeToOneCell@1100528801(RangeName@1100525000 : Text[30]);
    VAR
      XlWrkSht@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromRangeName(XlWrkSht, RangeName, XlRange);
      XlRange.Merge(FALSE);
    END;

    PROCEDURE SetColumnWidthInRange@1100528601(RangeName@1210190001 : Text[30];ColumnWidth@1210190000 : Integer);
    VAR
      XlWrkSht@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromRangeName(XlWrkSht, RangeName, XlRange);
      XlRange.ColumnWidth(ColumnWidth);
    END;

    PROCEDURE SetRowHiddenInRange@1000000001(RangeName@1000000000 : Text[30]);
    VAR
      XlWrkSht@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
    BEGIN
      IF STRPOS(RangeName, ':') <> 0 THEN
        ERROR(Text002);

      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromRangeName(XlWrkSht, RangeName, XlRange);
      XlRange.EntireRow.Hidden := TRUE;
    END;

    PROCEDURE SetColumnHiddenInRange@1000000002(RangeName@1000000000 : Text[30]);
    VAR
      XlWrkSht@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
    BEGIN
      IF STRPOS(RangeName, ':') <> 0 THEN
        ERROR(Text003);

      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromRangeName(XlWrkSht, RangeName, XlRange);
      XlRange.EntireColumn.Hidden := TRUE;
    END;

    PROCEDURE SetFontNameInRange@1100525021(RangeName@1100525000 : Text[30];FontName@1100525001 : Text[50]);
    VAR
      XlWrkSht@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromRangeName(XlWrkSht, RangeName, XlRange);
      XlRange.Font.Name := FontName;
    END;

    PROCEDURE SetHorzAlignmentInRange@1210190003(RangeName@1210190001 : Text[30];Alignment@1210190000 : Integer);
    VAR
      XlWrkSht@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
    BEGIN
      // Alignment = XlHAlign Enumeration
      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromRangeName(XlWrkSht, RangeName, XlRange);
      XlRange.HorizontalAlignment(Alignment);
    END;

    PROCEDURE SetVerticalAlignmentInRange@1100485021(RangeName@1100485001 : Text[30];Alignment@1100485000 : Integer);
    VAR
      XlWrkSht@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
    BEGIN
      // Alignment = XlVAlign Enumeration
      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromRangeName(XlWrkSht, RangeName, XlRange);
      XlRange.VerticalAlignment(Alignment);
    END;

    PROCEDURE SetOrientationInRange@1100485001(RangeName@1210190001 : Text[30];Orientation@1210190000 : Integer);
    VAR
      XlWrkSht@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
    BEGIN
      // Orientation -90 to 90 degrees
      GetCurrentXlWrkSht(XlWrkSht);
      GetXlRangeFromRangeName(XlWrkSht, RangeName, XlRange);
      XlRange.Orientation(Orientation);
    END;

    PROCEDURE GetColumnWidth@1100528602(Col@1100528601 : Integer) : Decimal;
    VAR
      XlWrkSht@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      XlRange@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT;
      ColumnID@1100528702 : Text[30];
      ColumnWidthText@1100528703 : Text[30];
      ColumnWidthDecimal@1100528704 : Decimal;
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      ColumnID := GetColumnIDFromCol(Col);
      XlRange := XlWrkSht.Range(ColumnID + ':' + ColumnID, ColumnID + ':' + ColumnID);
      ColumnWidthText := FORMAT(XlRange.ColumnWidth);
      EVALUATE(ColumnWidthDecimal, ColumnWidthText);
      EXIT(ColumnWidthDecimal);
    END;

    PROCEDURE GetColumnWidthInRange@1100528603(FromCol@1100528600 : Integer;ToCol@1100528601 : Integer) TotalColumnWidth : Decimal;
    VAR
      i@1100528602 : Integer;
    BEGIN
      TotalColumnWidth := 0;
      FOR i := FromCol TO ToCol DO
        TotalColumnWidth += GetColumnWidth(i);
    END;

    PROCEDURE SetHeader@1100528605(LeftHeader@1100528600 : Text[1024];CenterHeader@1100528601 : Text[1024];RightHeader@1100528602 : Text[1024];RightHeaderPicture@1100528603 : Text[1024]);
    VAR
      XlWrkSht@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      XlWrkSht.PageSetup.LeftHeader := LeftHeader;
      XlWrkSht.PageSetup.CenterHeader := CenterHeader;
      XlWrkSht.PageSetup.RightHeader := RightHeader;
      XlWrkSht.PageSetup.RightFooter := Text000;

      IF RightHeaderPicture <> '' THEN BEGIN
        XlWrkSht.PageSetup.RightHeaderPicture.Filename := RightHeaderPicture;
        XlWrkSht.PageSetup.RightHeaderPicture.Height := 50;
        XlWrkSht.PageSetup.RightHeader := '&G';
      END;
    END;

    PROCEDURE SetMargins@1100525003(LeftMargin@1100525000 : Decimal;RightMargin@1100525001 : Decimal;TopMargin@1100525002 : Decimal;BottomMargin@1100525003 : Decimal;HeaderMargin@1100525004 : Decimal;FooterMargin@1100525005 : Decimal;CenterHorizontally@1100525006 : Boolean;CenterVertically@1100525007 : Boolean);
    VAR
      XlWrkSht@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
    BEGIN
      // This function sets all different margins and let's the user select horizontal and vertical centering.
      // NOTE: When value equals -1 then the property isn't set, so default value is untouched.

      IF (LeftMargin < 0) THEN
        LeftMargin := -1;
      IF (LeftMargin > 10) THEN
        LeftMargin := 10;

      IF (RightMargin < 0) THEN
        RightMargin := -1;
      IF (RightMargin > 10) THEN
        RightMargin := 10;

      IF (TopMargin < 0) THEN
        TopMargin := -1;
      IF (TopMargin > 10) THEN
        TopMargin := 10;

      IF (BottomMargin < 0) THEN
        BottomMargin := -1;
      IF (BottomMargin > 10) THEN
        BottomMargin := 10;

      IF (HeaderMargin < 0) THEN
        HeaderMargin := -1;
      IF (HeaderMargin > 10) THEN
        HeaderMargin := 10;

      IF (FooterMargin < 0) THEN
        FooterMargin := -1;
      IF (FooterMargin > 10) THEN
        FooterMargin := 10;

      GetCurrentXlWrkSht(XlWrkSht);

      IF (LeftMargin <> -1) THEN
        XlWrkSht.PageSetup.LeftMargin := XlApp.CentimetersToPoints(LeftMargin);

      IF (RightMargin <> -1) THEN
        XlWrkSht.PageSetup.RightMargin := XlApp.CentimetersToPoints(RightMargin);

      IF (TopMargin <> -1) THEN
        XlWrkSht.PageSetup.TopMargin := XlApp.CentimetersToPoints(TopMargin);

      IF (BottomMargin <> -1) THEN
        XlWrkSht.PageSetup.BottomMargin := XlApp.CentimetersToPoints(BottomMargin);

      IF (HeaderMargin <> -1) THEN
        XlWrkSht.PageSetup.HeaderMargin := XlApp.CentimetersToPoints(HeaderMargin);

      IF (FooterMargin <> -1) THEN
        XlWrkSht.PageSetup.FooterMargin := XlApp.CentimetersToPoints(FooterMargin);

      XlWrkSht.PageSetup.CenterHorizontally := CenterHorizontally;
      XlWrkSht.PageSetup.CenterVertically := CenterVertically;
    END;

    PROCEDURE SetPrintHeader@1100485006(PrintTitleRows@1100485000 : Text);
    VAR
      XlWrkSht@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
    BEGIN
      GetCurrentXlWrkSht(XlWrkSht);
      XlWrkSht.PageSetup.PrintTitleRows := PrintTitleRows;
    END;

    PROCEDURE GetCurrentCol@6() @11012000 : Integer;
    BEGIN
      EXIT(CurrentCol);
    END;

    PROCEDURE GetCurrentRow@7() @11012000 : Integer;
    BEGIN
      EXIT(CurrentRow);
    END;

    PROCEDURE SetSettingFont@12(Name@11012000 : Text[250]);
    BEGIN
      CurSettingFontName := Name;
    END;

    PROCEDURE SetSettingBold@16(NewValue@11012000 : Boolean);
    BEGIN
      CurSettingBold := NewValue;
    END;

    PROCEDURE SetSettingItalic@14(NewValue@11012000 : Boolean);
    BEGIN
      CurSettingItalic := NewValue;
    END;

    PROCEDURE SetSettingUnderlined@17(NewValue@11012000 : Integer);
    BEGIN
      CurSettingUnderline := NewValue;
    END;

    PROCEDURE SetSettingForegroundColour@28(Colour@11012000 : Code[30]);
    BEGIN
      CurSettingForegroundColour := ExcelEnumeration.TranslateColour(Colour);
    END;

    PROCEDURE SetSettingBackgroundColour@29(Colour@11012000 : Code[30]);
    BEGIN
      CurSettingBackgroundColour := ExcelEnumeration.TranslateColour(Colour);
    END;

    LOCAL PROCEDURE ResetDecoratorSettings@19();
    BEGIN
      CurSettingBold := FALSE;
      CurSettingItalic := FALSE;
      CurSettingUnderline := ExcelEnumeration.XlUnderlineStyle_xlUnderlineStyleNone;
      CurSettingFontName := '';
      CurSettingForegroundColour := -1;
      CurSettingBackgroundColour := -1;
    END;

    PROCEDURE GetXlWrkBk@1100528704(XlWrkBk2@1100528701 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook" RUNONCLIENT);
    BEGIN
      XlWrkBk2 := XlWrkBk;
    END;

    PROCEDURE GetCurrentXlWrkSht@1100528702(VAR XlWrkSht@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT);
    BEGIN
      XlWrkSht := XlWrkBk.Worksheets.Item(CurrentSheetNo);
    END;

    LOCAL PROCEDURE GetXlRangeFromColRow@1100528701(XlWrkSht@1100528710 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;FromColumn@1100528704 : Integer;FromRow@1100528705 : Integer;ToColumn@1100528702 : Integer;ToRow@1100528703 : Integer;VAR XlRange@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT);
    VAR
      ExcelBuffer@1100528706 : Record 370;
      RangeName@1100528701 : Text[30];
    BEGIN
      RangeName := ExcelBuffer.RC2Range(FromRow, FromColumn, ToRow, ToColumn);

      GetXlRangeFromRangeName(XlWrkSht, RangeName, XlRange);
    END;

    PROCEDURE GetXlRangeFromRangeName@1100528703(XlWrkSht@1100528700 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;RangeName@1100528701 : Text;VAR XlRange@1100528702 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range" RUNONCLIENT);
    VAR
      Cell1@1100528704 : Text;
      Cell2@1100528705 : Text;
    BEGIN
      GetCellsFromRangeName(RangeName, Cell1, Cell2);

      XlRange := XlWrkSht.Range(Cell1, Cell2)
    END;

    PROCEDURE GetColumnIDFromCol@1100528700(Col@1100528701 : Integer) : Code[10];
    VAR
      ExcelBuffer@1100528700 : Record 370;
    BEGIN
      ExcelBuffer.VALIDATE("Column No.", Col);
      EXIT(ExcelBuffer.xlColID);
    END;

    PROCEDURE GetCellsFromRangeName@1100525009(RangeName@1100525000 : Text[30];VAR Cell1@1100525001 : Text[30];VAR Cell2@1100525002 : Text[30]);
    VAR
      Position@1100525003 : Integer;
    BEGIN
      Position := STRPOS(RangeName, ':');
      IF Position <> 0 THEN BEGIN
        Cell1 := COPYSTR(RangeName, 1, Position - 1);
        Cell2 := COPYSTR(RangeName, Position + 1);
      END ELSE BEGIN
        Cell1 := RangeName;
        Cell2 := RangeName;
      END;
      //Convert A to A:A
      IF Cell1 = DELCHR(Cell1, '=', '1234567890') THEN
        Cell1 += ':' + Cell1;
      IF Cell2 = DELCHR(Cell2, '=', '1234567890') THEN
        Cell2 += ':' + Cell2;
      //Convert 1 to 1:1
      IF Cell1 = DELCHR(Cell1, '=', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') THEN
        Cell1 += ':' + Cell1;
      IF Cell2 = DELCHR(Cell2, '=', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') THEN
        Cell2 += ':' + Cell2;
    END;

    PROCEDURE TranslateKeyword@1100526000(Keyword2@1100526000 : Text[80]) : Text[80];
    VAR
      ExtAppKeywordTranslation@1100528700 : Record 11020566;
      DotNetManagement@1100528701 : Codeunit 11012374;
    BEGIN
      EXIT(
        ExtAppKeywordTranslation.GetKeywordTranslation(
          ExtAppKeywordTranslation.Application::Excel,
          Keyword2,
          DotNetManagement.GetApplicationLanguageID(XlApp)));
    END;

    PROCEDURE ExcelVersion@1100485000() : Text[30];
    BEGIN
      EXIT(COPYSTR(XlApp.Version, 1, 30));
    END;

    PROCEDURE ExcelMajorVersionNo@1210190000() Version : Integer;
    VAR
      VersionText@1210190000 : Text[30];
    BEGIN
      VersionText := ExcelVersion;
      IF STRPOS(VersionText, '.') <> 0 THEN
        VersionText := COPYSTR(VersionText, 1, STRPOS(VersionText, '.') - 1);
      EVALUATE(Version, VersionText);
    END;

    PROCEDURE GetVersionDependentFileExtension@1100528710() : Text[30];
    BEGIN
      IF ExcelMajorVersionNo >= 12 THEN
        EXIT('.xlsx')
      ELSE
        EXIT('.xls');
    END;

    PROCEDURE PageSetup@1100528802(PaperSize@1100528804 : Integer;PageOrientation@1100528801 : Integer;FitToPagesWide@1100528802 : Integer;FitToPagesTall@1100528803 : Integer;Zoom@1100528805 : Integer;CenterHorizontally@1100528806 : Boolean;CenterVertically@1100528807 : Boolean);
    VAR
      XlWrkSht@1100528800 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
    BEGIN
      //PaperSize: A3 = 8, A4 = 9

      //PaperOrientation: Landscape = 2

      GetCurrentXlWrkSht(XlWrkSht);

      IF (FitToPagesWide <> 0) OR (FitToPagesTall <> 0) OR (Zoom = 0) THEN
        XlWrkSht.PageSetup.Zoom := FALSE
      ELSE
        XlWrkSht.PageSetup.Zoom := Zoom;

      XlWrkSht.PageSetup.PaperSize := PaperSize;
      XlWrkSht.PageSetup.Orientation := PageOrientation;
      XlWrkSht.PageSetup.FitToPagesWide := FitToPagesWide;
      IF FitToPagesTall <> 0 THEN
        XlWrkSht.PageSetup.FitToPagesTall := FitToPagesTall
      ELSE
        XlWrkSht.PageSetup.FitToPagesTall := FALSE;
      XlWrkSht.PageSetup.CenterHorizontally := CenterHorizontally;
      XlWrkSht.PageSetup.CenterVertically := CenterVertically;
    END;

    PROCEDURE CheckInitExcel@1100529600() : Boolean;
    BEGIN
      IF NOT ISNULL(XlApp) THEN
        CLEAR(XlApp);
      XlApp := XlApp.ApplicationClass;
      IF ISNULL(XlApp) THEN
        EXIT(FALSE);
      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

