OBJECT Table 11125662 Web Combined Plant Item
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Web Combined Plant Item;
               NOR=Web, Kombinert maskinartikkel;
               SVE=Webbkombinerad Maskinsartikel];
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;ValidateTableRelation=Yes;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 15  ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=Item,Plant Type;
                                                                    NOR=Artikkel,Maskintype;
                                                                    SVE=Artikel,Maskinstyp];
                                                   OptionString=Item,Plant Type }
    { 17  ;   ;Category            ;Code20        ;CaptionML=[ENU=Category;
                                                              NOR=Kategori;
                                                              SVE=Kategori] }
    { 20  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 30  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2] }
    { 60  ;   ;Date Updated        ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              NOR=Oppdateringsdato;
                                                              SVE=Uppdateringsdatum];
                                                   Editable=No }
    { 70  ;   ;Blocked             ;Boolean       ;CaptionML=[ENU=Blocked;
                                                              NOR=Sperret;
                                                              SVE=SpÑrrad] }
    { 110 ;   ;Unit Price          ;Decimal       ;CaptionML=[ENU=Unit Price;
                                                              NOR=Enhetspris;
                                                              SVE=A-pris];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 120 ;   ;Buy Back Price      ;Decimal       ;CaptionML=[ENU=Buy Back Price;
                                                              NOR=Tilbakekjõpspris;
                                                              SVE=èterkîpspris] }
    { 130 ;   ;Unit of Measure     ;Code10        ;CaptionML=[ENU=Sales Unit of Measure;
                                                              NOR=Salgsenhet;
                                                              SVE=Enhet i fîrsÑljning] }
    { 140 ;   ;Rental Rate         ;Decimal       ;CaptionML=[ENU=Rental Rate;
                                                              NOR=Leiesats;
                                                              SVE=Uthyrningsavgift] }
    { 150 ;   ;Sales Type          ;Option        ;CaptionML=[ENU=Sales Type;
                                                              NOR=Salgstype;
                                                              SVE=Fîrs.typ];
                                                   OptionCaptionML=[ENU=Sales,Rent,Sales/Buy-Back;
                                                                    NOR=Salg,Leie,Salg/Buy-Back;
                                                                    SVE=FîrsÑljning,Hyra,FîrsÑljning/Üterkîp];
                                                   OptionString=Sales,Rent,BuyBack }
    { 160 ;   ;Plant Unit of Measure;Code10       ;CaptionML=[ENU=Plant Unit of Measure;
                                                              NOR=Maskin MÜleenhet;
                                                              SVE=Maskin mÜttenhet] }
    { 200 ;   ;Plant CP Active     ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Plant Type" WHERE (Code=FIELD(No.),
                                                                                         Export to Website=CONST(Yes)));
                                                   CaptionML=[ENU=Plant CP Active;
                                                              NOR=Maskin CP Aktiv;
                                                              SVE=Maskinens CP Ñr aktiv];
                                                   Description=CP Available + Class filled;
                                                   Editable=No }
    { 201 ;   ;Item CP Active      ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist(Item WHERE (No.=FIELD(No.),
                                                                                 CP Available=CONST(Yes)));
                                                   CaptionML=[ENU=Item CP Active;
                                                              NOR=Artikkel CP Aktiv;
                                                              SVE=Artikel CP aktiv];
                                                   Description=CP Available + Class filled;
                                                   Editable=No }
    { 210 ;   ;Dust Free           ;Code20        ;CaptionML=ENU=Dust Free }
  }
  KEYS
  {
    {    ;No.,Type                                ;Clustered=Yes }
    {    ;Category,No.,Type                        }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100525004 : TextConst 'ENU=Synchronize #1#######################\\Status      @2@@@@@@@@@@@@@@@@@@@@@@@;NOR=Synkroniser #1#######################\\Status @2@@@@@@@@@@@@@@@@@@@@@@@;SVE=Synkronisera #1#######################\\Status      @2@@@@@@@@@@@@@@@@@@@@@@@';
      Text001@1100525003 : TextConst 'ENU=Update for Items?;NOR=Oppdater for artikler?;SVE=Vill du uppdatera fîr artiklar?';
      Text002@1100525002 : TextConst 'ENU=Update for Plant Types?;NOR=Oppdater for maskintyper?;SVE=Vill du uppdatera fîr Maskinstyper?';
      Text003@1100525001 : TextConst 'ENU=Update for Items and Plant Types?;NOR=Oppdater for artikler og maskintyper?;SVE=Vill du uppdatera fîr artiklar och Maskinstyper?';
      Text004@1100525000 : TextConst 'ENU=Updated CP Items ready.;NOR=Oppdaterte CP-artikler er klare.;SVE=Uppdaterade CP-artiklar klara.';
      Window@1100525005 : Dialog;
      WebItemRec@1100525006 : Record 11125662;
      ItemRec@1100525008 : Record 27;
      ItemFeatureRec@1100525011 : Record 11020301;
      PlantTypeRec@1100525007 : Record 11012551;
      PlantProfileAnswer@1100525013 : Record 11012582;
      Counter@1100525009 : Integer;
      RecordCounter@1100525010 : Integer;
      gvCategory@1100525012 : Code[20];
      gvProfileCode@1100525014 : Code[20];
      gvQuestionLine@1100525015 : Integer;
      gvDustFreeCode@1100525017 : Code[20];
      gvDustFreeQuestionLine@1100525016 : Integer;

    PROCEDURE UpdateCPItems@1100485000(IMode@1100485000 : Integer;IConfirmed@1100485001 : Boolean;ICategory@1100525002 : Code[20];IProfileCode@1100525001 : Code[20];IQuestionLine@1100525000 : Integer;IDustFreeCode@1100525004 : Code[20];IDustFreeQuestionLine@1100525003 : Integer;RentalRateType@1100409000 : 'Internal,External');
    BEGIN
      //* Input Mode: 1=Items, 2=Plant types, 3=Both
      IF NOT IConfirmed THEN BEGIN
        CASE IMode OF
          1: IF NOT CONFIRM(Text001) THEN EXIT;
          2: IF NOT CONFIRM(Text002) THEN EXIT;
          3: IF NOT CONFIRM(Text003) THEN EXIT;
        END;
      END;

      IF GUIALLOWED THEN
        Window.OPEN(Text000);

      gvCategory := ICategory;          // filling from web-call
      gvProfileCode := IProfileCode;
      gvQuestionLine := IQuestionLine;
      gvDustFreeCode := IDustFreeCode;
      gvDustFreeQuestionLine := IDustFreeQuestionLine;

      CASE IMode OF
        1: UpdateFromItems();
        2: UpdateFromPlantTypes(RentalRateType); //kzwerver, 121214, c, #C00424
        3:
          BEGIN
            UpdateFromItems();
            UpdateFromPlantTypes(RentalRateType); //kzwerver, 121214, c, #C00424
          END;
      END;

      IF GUIALLOWED THEN BEGIN
        MESSAGE(Text004);
        Window.CLOSE;
      END;
    END;

    LOCAL PROCEDURE UpdateFromItems@1000000000();
    VAR
      lvItemSalesBayBackRateRec@1100485000 : Record 11020318;
    BEGIN

      WebItemRec.RESET;
      WebItemRec.SETRANGE(Type,Type::Item);
      WebItemRec.SETRANGE("Item CP Active",FALSE);
      WebItemRec.DELETEALL;

      WebItemRec.RESET;
      WebItemRec.SETRANGE(Type,Type::Item);
      IF WebItemRec.FINDSET(TRUE, TRUE) THEN BEGIN
        REPEAT
          IF NOT ItemRec.GET(WebItemRec."No.") THEN
            WebItemRec.DELETE;
        UNTIL WebItemRec.NEXT = 0;
      END;

      WebItemRec.RESET;
      ItemRec.RESET;
      ItemRec.SETRANGE("CP Available",TRUE);
      IF ItemRec.FINDSET THEN BEGIN
        Counter := 0;
        RecordCounter := ItemRec.COUNT;
        IF GUIALLOWED THEN
          Window.UPDATE(1,ItemRec.TABLECAPTION);

        REPEAT
          UpdateWindowStatus;

          WebItemRec.SETRANGE("No.", ItemRec."No.");
          WebItemRec.SETRANGE(Type, Type::Item);
          WebItemRec.DELETEALL;

          WebItemRec.INIT;
          WebItemRec."No." := ItemRec."No.";
          WebItemRec.Description := ItemRec.Description;
          WebItemRec."Description 2" := ItemRec."Description 2";
          WebItemRec."Date Updated" := TODAY;
          WebItemRec.Blocked := ItemRec.Blocked;
          WebItemRec.Type := Type::Item;
          WebItemRec."Unit of Measure" :=ItemRec."Sales Unit of Measure";
          WebItemRec."Sales Type" := WebItemRec."Sales Type"::Sales;
          WebItemRec."Unit Price" := ItemRec."Unit Price";
          IF ItemRec."Sales/Buy-Back Item (Plant)" THEN BEGIN
            WebItemRec."Sales Type" := WebItemRec."Sales Type"::BuyBack;
            lvItemSalesBayBackRateRec.SETRANGE("Item No.", ItemRec."No.");
            lvItemSalesBayBackRateRec.SETFILTER("Starting Date", '..%1', TODAY);
            IF lvItemSalesBayBackRateRec.FINDLAST THEN BEGIN  //* When not found then is remains 'ItemRec."Unit Price"'
              WebItemRec."Unit Price" := lvItemSalesBayBackRateRec."Sales Rate";
              WebItemRec."Buy Back Price" := lvItemSalesBayBackRateRec."Buy Back Rate"
            END;
          END ELSE BEGIN
            WebItemRec."Sales Type" := WebItemRec."Sales Type"::Sales;
          END;

          IF (gvCategory  <> '') AND (ItemFeatureRec.GET(ItemRec."No.", gvCategory)) THEN
            WebItemRec.Category := COPYSTR(ItemFeatureRec.Value, 1, 20);

          WebItemRec.INSERT;
        UNTIL ItemRec.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE UpdateFromPlantTypes@1100485004(RentalRateType@1100409000 : 'Internal,External');
    VAR
      lvRentalRateRec@1100485002 : Record 11012567;
    BEGIN

      WebItemRec.RESET;
      WebItemRec.SETRANGE(Type,Type::"Plant Type");
      WebItemRec.SETRANGE("Plant CP Active",FALSE);
      WebItemRec.DELETEALL;

      WebItemRec.RESET;
      WebItemRec.SETRANGE(Type,Type::"Plant Type");
      IF WebItemRec.FINDSET(TRUE, TRUE) THEN BEGIN
        REPEAT
          IF NOT PlantTypeRec.GET(WebItemRec."No.") THEN
            WebItemRec.DELETE;
        UNTIL WebItemRec.NEXT = 0;
      END;

      PlantTypeRec.RESET;
      WebItemRec.RESET;

      PlantTypeRec.SETRANGE("Export to Website",TRUE);
      IF PlantTypeRec.FINDSET THEN BEGIN
        Counter := 0;
        RecordCounter := PlantTypeRec.COUNT;
        IF GUIALLOWED THEN
          Window.UPDATE(1,PlantTypeRec.TABLECAPTION);

        REPEAT
          UpdateWindowStatus;

          WebItemRec.SETRANGE("No.", PlantTypeRec.Code);
          WebItemRec.SETRANGE(Type, Type::"Plant Type");
          WebItemRec.DELETEALL;

          WebItemRec.INIT;
          WebItemRec."No." := PlantTypeRec.Code;
          WebItemRec.Description := PlantTypeRec.Description;
          WebItemRec.Type := Type::"Plant Type";
          IF PlantTypeRec."Rental Type" = PlantTypeRec."Rental Type"::Rental THEN BEGIN
            lvRentalRateRec.SETRANGE("Rental Type",lvRentalRateRec."Rental Type"::Rental);
            lvRentalRateRec.SETRANGE("Plant Type", PlantTypeRec.Code);
            lvRentalRateRec.SETFILTER("Plant No.", '%1', '');
            lvRentalRateRec.SETFILTER("Starting Date", '..%1', TODAY);
            IF lvRentalRateRec.FINDLAST THEN BEGIN
              CASE RentalRateType OF
                RentalRateType::Internal: WebItemRec."Rental Rate" := lvRentalRateRec."Rental Rate (Days)";
                RentalRateType::External: WebItemRec."Rental Rate" := lvRentalRateRec."Rental Rate External (Days)";
              END;
            END ELSE BEGIN
              WebItemRec."Rental Rate" := PlantTypeRec."Current Price";
            END;
            WebItemRec."Sales Type" := WebItemRec."Sales Type"::Rent;
          END ELSE BEGIN
            //* Sale/Buy Back or both (concerns sale/buy back-plant that will be rented sometimes)
            lvRentalRateRec.SETRANGE("Rental Type",lvRentalRateRec."Rental Type"::"Sales / Buy Back");
            lvRentalRateRec.SETRANGE("Plant Type", PlantTypeRec.Code);
            lvRentalRateRec.SETFILTER("Plant No.", '%1', '');
            lvRentalRateRec.SETFILTER("Starting Date", '..%1', TODAY);
            IF lvRentalRateRec.FINDLAST THEN BEGIN
              WebItemRec."Unit Price" := lvRentalRateRec."Sales Rate";
              WebItemRec."Buy Back Price" := lvRentalRateRec."Buy Back Rate";
            END ELSE BEGIN
              WebItemRec."Unit Price" := PlantTypeRec."Current Price";
             END;
            WebItemRec."Sales Type" := WebItemRec."Sales Type"::BuyBack;
          END;
          //WebItemRec."Unit of Measure" := PlantTypeRec."Unit of Measure";     //**4PS.BNBM o  19-04-2011
          WebItemRec."Unit of Measure" := PlantTypeRec."Rate Unit of Measure";  //**4PS.BNBM n  19-04-2011
          WebItemRec."Plant Unit of Measure" := PlantTypeRec."Unit of Measure";   //C002583 (19-09-2012 Dura, new field Plant Unit)

          FillCategory;
          FillDustFree;

          WebItemRec."Date Updated" := TODAY;
          WebItemRec.INSERT;
        UNTIL PlantTypeRec.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE UpdateWindowStatus@87();
    BEGIN
      IF GUIALLOWED THEN BEGIN
        Counter := Counter + 1;
        Window.UPDATE(2,ROUND(Counter / RecordCounter * 10000,1));
      END;
    END;

    LOCAL PROCEDURE FillCategory@1100525001();
    BEGIN
      IF gvProfileCode = '' THEN
        EXIT;

      PlantProfileAnswer.RESET;
      PlantProfileAnswer.SETRANGE(Level, PlantProfileAnswer.Level::PlantType);
      PlantProfileAnswer.SETRANGE("Plant Type", PlantTypeRec.Code);
      PlantProfileAnswer.SETRANGE("Profile Code", gvProfileCode);
      PlantProfileAnswer.SETRANGE("Line No. Question", gvQuestionLine);
      IF PlantProfileAnswer.FINDFIRST THEN
        WebItemRec.Category := COPYSTR(PlantProfileAnswer.Answer, 1,20);
    END;

    LOCAL PROCEDURE FillDustFree@1100525002();
    BEGIN
      IF gvDustFreeCode = '' THEN
        EXIT;

      PlantProfileAnswer.RESET;
      PlantProfileAnswer.SETRANGE(Level, PlantProfileAnswer.Level::PlantType);
      PlantProfileAnswer.SETRANGE("Plant Type", PlantTypeRec.Code);
      PlantProfileAnswer.SETRANGE("Profile Code", gvDustFreeCode);
      PlantProfileAnswer.SETRANGE("Line No. Question", gvDustFreeQuestionLine);
      IF PlantProfileAnswer.FINDFIRST THEN
        WebItemRec."Dust Free" := COPYSTR(PlantProfileAnswer.Answer, 1,20);
    END;

    BEGIN
    END.
  }
}

