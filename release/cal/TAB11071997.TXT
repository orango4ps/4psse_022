OBJECT Table 11071997 Service Category Template
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ServiceContractTemplate@1100528600 : Record 11071754;
             BEGIN
               IF "Service Contract Template Code" <> '' THEN BEGIN
                 ServiceContractTemplate.GET("Service Contract Template Code");
                 IF NOT (ServiceContractTemplate."Budget Based on" IN
                   [ServiceContractTemplate."Budget Based on"::Category, ServiceContractTemplate."Budget Based on"::"Category + Maintenance Scheme"])
                 THEN
                   ServiceContractTemplate.FIELDERROR("Budget Based on");
               END;
             END;

    OnDelete=VAR
               ServiceContractTemplate@1100528600 : Record 11071754;
             BEGIN
               IF ServiceContractTemplate.GET("Service Contract Template Code") THEN
                 IF (ServiceContractTemplate."Service Category (Call)" = Code) OR (ServiceContractTemplate."Service Category (Direct)" = Code) THEN
                   ERROR(Text000, TABLECAPTION, Code, ServiceContractTemplate.Code);
             END;

    CaptionML=ENU=Service Category Template;
    LookupPageID=Page11229353;
    DrillDownPageID=Page11229353;
  }
  FIELDS
  {
    { 10  ;   ;Service Contract Template Code;Code20;
                                                   TableRelation="Service-Contract Template";
                                                   CaptionML=ENU=Service Contract Template Code;
                                                   Editable=No }
    { 20  ;   ;Code                ;Code10        ;TableRelation="Service Category".Code WHERE (Service Contract No.=CONST());
                                                   OnValidate=VAR
                                                                ServiceCategory@1100528600 : Record 11071985;
                                                              BEGIN
                                                                IF "Service Contract Template Code" <> '' THEN
                                                                  IF ServiceCategory.GET('', Code) THEN BEGIN
                                                                    Description := ServiceCategory.Description;
                                                                    "Service Type" := ServiceCategory."Service Type";
                                                                    "Service Type (Other)" := ServiceCategory."Service Type (Other)";
                                                                  END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 30  ;   ;Description         ;Text30        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 40  ;   ;Calc. Progress Perc. Progn/Res;Option;
                                                   OnValidate=VAR
                                                                ServiceContractTemplate@1100528600 : Record 11071754;
                                                              BEGIN
                                                                IF ServiceContractTemplate.GET("Service Contract Template Code") THEN BEGIN
                                                                  IF NOT ("Calc. Progress Perc. Progn/Res" IN ["Calc. Progress Perc. Progn/Res"::"Actual Cost", "Calc. Progress Perc. Progn/Res"::"Elapsed Time"]) THEN
                                                                    ServiceContractTemplate.TESTFIELD("Result Calc. on Total Contract", FALSE);
                                                                  ServiceContractTemplate.TestProgressMethodvsProgressMeasurement("Calc. Progress Perc. Progn/Res", ServiceContractTemplate."Level Progress Measurement");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Calculation Progress Perc. Prognosis/Preclosure Result;
                                                   OptionCaptionML=ENU=Allowed Hours,,,Actual Cost,Elapsed Time,,Available Hours,,Allowed Cost,,Available Cost,,None;
                                                   OptionString=Allowed Hours,,,Actual Cost,Elapsed Time,,Available Hours,,Allowed Cost,,Available Cost,,None }
    { 50  ;   ;Unit Price Status   ;Option        ;CaptionML=[ENU=Unit Price Status;
                                                              NOR=Enhetspris, status;
                                                              SVE=Enhetsprisstatus];
                                                   OptionCaptionML=ENU=" ,Pre-Recording,Recording,Production Recording";
                                                   OptionString=[ ,Pre-Recording,Recording,Production Recording] }
    { 60  ;   ;Service Type        ;Code20        ;TableRelation="Service Type";
                                                   CaptionML=[ENU=Service Type;
                                                              SVE=Servicetyp] }
    { 70  ;   ;Service Type (Other);Code20        ;TableRelation="Service Type";
                                                   CaptionML=[ENU=Service Type (Additional Cost);
                                                              SVE=Servicetyp (extra kostnad)] }
    { 80  ;   ;Rest of Contract    ;Boolean       ;OnValidate=VAR
                                                                ServiceContractTemplate@1100529600 : Record 11071754;
                                                              BEGIN
                                                                IF ServiceContractTemplate.GET("Service Contract Template Code") THEN
                                                                  IF "Rest of Contract" THEN
                                                                    ServiceContractTemplate.TESTFIELD("Contract Duration")
                                                                  ELSE
                                                                    ServiceContractTemplate.TESTFIELD("Result Calc. on Total Contract", FALSE);
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Rest of Contract }
    { 90  ;   ;Calc. Interim Results by Order;Boolean;
                                                   OnValidate=VAR
                                                                ServiceContractTemplate@1100529600 : Record 11071754;
                                                              BEGIN
                                                                IF "Calc. Interim Results by Order" THEN BEGIN
                                                                  TESTFIELD("Service Contract Template Code");
                                                                  ServiceContractTemplate.GET("Service Contract Template Code");
                                                                  ServiceContractTemplate.TESTFIELD("Level Progress Measurement", ServiceContractTemplate."Level Progress Measurement"::"Service Category");
                                                                END;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Calculate Interim Results by Order }
    { 120 ;   ;Exclude SOs From Est. Result;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Exclude Service Orders From Estimated Result }
  }
  KEYS
  {
    {    ;Service Contract Template Code,Code     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528601 : TextConst 'ENU=%1 %2 cannot be deleted, still being used in Service Contract %3';

    BEGIN
    END.
  }
}

