OBJECT Page 11229234 SL Cockpit FB
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Servicestandort-Cockpit FB;
               ENU=Service Location Cockpit FB;
               NLD=Servicelocatie cockpit FB];
    SourceTable=Table11012801;
    PageType=CardPart;
    OnAfterGetRecord=BEGIN
                       DetermineNextSOs;
                     END;

  }
  CONTROLS
  {
    { 1100528600;;Container;
                ContainerType=ContentArea }

    { 1100528613;1;Group  ;
                CaptionML=[DEU=Beschwerde;
                           ENU=Calls;
                           NLD=Meldingen;
                           NOR=Samtaler;
                           SVE=samtal];
                GroupType=Group }

    { 1100528602;2;Field  ;
                CaptionML=[DEU=Historie;
                           ENU=History;
                           NLD=Historie;
                           NOR=Historikk;
                           SVE=Historik];
                SourceExpr=ServiceLocationInfoMgt.GetNoOfHistoryCalls("No.");
                OnDrillDown=BEGIN
                              ServiceLocationInfoMgt.ShowHistoryCalls("No.");
                            END;
                             }

    { 1100528605;2;Field  ;
                CaptionML=[DEU=ôffnen;
                           ENU=Open;
                           NLD=Openstaand;
                           NOR=èpne;
                           SVE=ôppen];
                SourceExpr=ServiceLocationInfoMgt.GetNoOfOpenCalls("No.");
                OnDrillDown=BEGIN
                              ServiceLocationInfoMgt.ShowOpenCalls("No.");
                            END;
                             }

    { 1100528607;2;Field  ;
                CaptionML=[DEU=Offen gleiche Postleitzahl;
                           ENU=Open same Post Code;
                           NLD=Openstaand o.b.v. postcode];
                SourceExpr=ServiceLocationInfoMgt.GetNoOfOpenCallsSamePC("No.");
                OnDrillDown=BEGIN
                              ServiceLocationInfoMgt.ShowOpenCallsSamePC("No.");
                            END;
                             }

    { 1100528614;1;Group  ;
                CaptionML=[DEU=ServiceauftrÑge;
                           ENU=Service Orders;
                           NLD=Serviceorders;
                           NOR=Serviceordre;
                           SVE=Serviceorder];
                GroupType=Group }

    { 1100528601;2;Field  ;
                CaptionML=[DEU=Historie;
                           ENU=History;
                           NLD=Historie;
                           NOR=Historikk;
                           SVE=Historik];
                SourceExpr=ServiceLocationInfoMgt.GetNoOfHistorySOs("No.");
                OnDrillDown=BEGIN
                              ServiceLocationInfoMgt.ShowHistorySOs("No.");
                            END;
                             }

    { 1100528612;2;Field  ;
                CaptionML=[DEU=ôffnen;
                           ENU=Open;
                           NLD=Openstaand;
                           NOR=èpne;
                           SVE=ôppen];
                SourceExpr=ServiceLocationInfoMgt.GetNoOfOpenSOs("No.");
                OnDrillDown=BEGIN
                              ServiceLocationInfoMgt.ShowOpenSOs("No.");
                            END;
                             }

    { 1100528603;2;Field  ;
                CaptionML=[DEU=NÑchste (Meldung);
                           ENU=Next (Call);
                           NLD=Volgende (melding)];
                SourceExpr=NextSONo_Call;
                OnDrillDown=VAR
                              ServiceOrder@1100528600 : Record 11012823;
                            BEGIN
                              IF ServiceOrder.GET(NextSONo_Call) THEN
                                ServiceOrder.ShowServiceOrderCard;
                            END;
                             }

    { 1100528604;2;Field  ;
                CaptionML=[DEU=NÑchster (Vertrag);
                           ENU=Next (Contract);
                           NLD=Volgende (contract)];
                SourceExpr=NextSONo_Maint;
                OnDrillDown=VAR
                              ServiceOrder@1100528600 : Record 11012823;
                            BEGIN
                              IF ServiceOrder.GET(NextSONo_Maint) THEN
                                ServiceOrder.ShowServiceOrderCard;
                            END;
                             }

    { 1100528611;1;Field  ;
                CaptionML=[DEU=NÑchstes Wartungsdatum;
                           ENU=Next Maintenance Date;
                           NLD=Volgende onderhoudsdatum;
                           NOR=Neste vedlikeholdsdato;
                           SVE=NÑsta underhÜllsdatum];
                SourceExpr=NextMaintenanceDate }

    { 1100528606;1;Field  ;
                CaptionML=[DEU=Datum Termin gesendet;
                           ENU=Date Sent Appointment;
                           NLD=Verzenddatum afspraak];
                SourceExpr=DateSentAppoinment }

    { 1100528610;1;Field  ;
                CaptionML=[DEU=Anmeldungsverfahren;
                           ENU=Report Procedure;
                           NLD=Aanmeldprocedure;
                           NOR=Annen Servicelokasjon informasjon;
                           SVE=ôvrig service&platsinformation];
                SourceExpr=ServiceOrderInfoMgt.GetNoOfServiceTextLines("No.", TextType::"Report Procedure");
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.EditServiceTextLines("No.", TextType::"Report Procedure");
                            END;
                             }

    { 1100528609;1;Field  ;
                CaptionML=[DEU=Kommentarzeilen;
                           ENU=Comment Lines;
                           NLD=Opmerkingen];
                SourceExpr=ServiceLocationInfoMgt.GetNoOfCommentLines("No.");
                OnDrillDown=BEGIN
                              ServiceLocationInfoMgt.EditCommentLines("No.");
                            END;
                             }

    { 1100528608;1;Field  ;
                CaptionML=[DEU=Belege;
                           ENU=Documents;
                           NLD=Documenten;
                           NOR=Dokument;
                           SVE=Dokument];
                SourceExpr=ServiceLocationInfoMgt.GetNoOfDocuments("No.");
                OnDrillDown=BEGIN
                              ServiceLocationInfoMgt.ShowDocuments("No.");
                            END;
                             }

    { 1100528500;1;Field  ;
                CaptionML=[DEU=Defekte;
                           ENU=Defects;
                           NLD=Gebreken];
                SourceExpr=ServiceLocationInfoMgt.GetNoOfOpenDefects("No.");
                OnDrillDown=BEGIN
                              //DP001529
                              ServiceLocationInfoMgt.ShowOpenDefects("No.");
                            END;
                             }

  }
  CODE
  {
    VAR
      ServiceLocationInfoMgt@1100528601 : Codeunit 11012856;
      ServiceOrderInfoMgt@1100528608 : Codeunit 11012841;
      NextSONo_Call@1100528602 : Code[20];
      NextSOStartingDate_Call@1100528600 : Date;
      NextSONo_Maint@1100528604 : Code[20];
      NoOfNextSO_Call@1100528603 : Integer;
      DateSentAppoinment@1100528607 : Date;
      TextType@1100528609 : 'Problem,Internal,Resolve,Cause,Invoice,Report Procedure,Contract Terms,Invoice Agreements';
      NextMaintenanceDate@1100528606 : Date;

    PROCEDURE ShowSOCard@1100528600(IServiceOrderNo@1100528600 : Code[20]);
    VAR
      ServiceOrder@1100528601 : Record 11012823;
    BEGIN
      IF ServiceOrder.GET(IServiceOrderNo) THEN
        ServiceOrder.ShowServiceOrderCard
    END;

    PROCEDURE DetermineNextSOs@1100528601();
    VAR
      ServiceOrder@1100528600 : Record 11012823;
      ServiceOrderExtension@1100528601 : Record 11071727;
      ServiceLocationInfoMgt@1100528602 : Codeunit 11012856;
    BEGIN
      ServiceLocationInfoMgt.GetDSOpenSOsBySourceType("No.", ServiceOrder."Source Type"::Call, ServiceOrder);
      NoOfNextSO_Call := ServiceOrder.COUNT;
      NextSONo_Call := '';
      NextSOStartingDate_Call := 0D;
      NextSONo_Maint := '';
      //NextSOStartingDate_Maint := 0D;
      DateSentAppoinment := 0D;
      IF NoOfNextSO_Call = 0 THEN
        NextSOStartingDate_Call := 0D
      ELSE BEGIN
        ServiceOrder.SETCURRENTKEY("Starting Date");
        ServiceOrder.FINDFIRST;
        NextSONo_Call := ServiceOrder."No.";
        NextSOStartingDate_Call := ServiceOrder."Starting Date";
      END;

      NextMaintenanceDate := ServiceLocationInfoMgt.GetNextMaintenanceDate("No.", NextSONo_Maint);

      ServiceOrder.RESET;
      ServiceLocationInfoMgt.GetDSOpenSOsBySourceType("No.", ServiceOrder."Source Type"::Contract, ServiceOrder);
      //NoOfNextSO_Maint := ServiceOrder.COUNT;
      IF ServiceOrder.COUNT <> 0 THEN BEGIN
        ServiceOrder.SETCURRENTKEY("Starting Date");
        ServiceOrder.FINDFIRST;
        NextSONo_Maint := ServiceOrder."No.";
      //  NextSOStartingDate_Maint := ServiceOrder."Starting Date";
        ServiceOrderExtension.GetServOrderExtension(ServiceOrder."No.");
        DateSentAppoinment := ServiceOrderExtension."Date Appointm. Confirm. Sent";
      END;
    END;

    BEGIN
    END.
  }
}

