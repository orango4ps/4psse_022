OBJECT Page 6012 Res.Gr Availability Lines (SM)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Lines;
               NOR=Linjer;
               SVE=Rader];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table2000000007;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 RESET;
               END;

    OnFindRecord=BEGIN
                   EXIT(PeriodFormMgt.FindDate(Which,Rec,PeriodType));
                 END;

    OnNextRecord=BEGIN
                   EXIT(PeriodFormMgt.NextDate(Steps,Rec,PeriodType));
                 END;

    OnAfterGetRecord=BEGIN
                       SetDateFilter;
                       ResGr.CALCFIELDS(Capacity,"Qty. on Service Order");
                       CapacityAfterOrders := ResGr.Capacity;
                       CapacityAfterQuotes := CapacityAfterOrders;
                       NetAvailability := CapacityAfterQuotes - ResGr."Qty. on Service Order";
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Period Start;
                           NOR=Periodens start;
                           SVE=Periodstart];
                ToolTipML=[ENU="Specifies the start date of the period defined on the line for the resource group. ";
                           NOR="Angir startdatoen for perioden som er definert p† linjen for ressursgruppen. ";
                           SVE="Anger startdatumet f”r den period som angetts p† raden f”r resursgruppen. "];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Period Start" }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=Period Name;
                           NOR=Periodenavn;
                           SVE=Periodnamn];
                ToolTipML=[ENU=Specifies the name of the period shown in the line.;
                           NOR=Angir navnet p† perioden som vises p† linjen.;
                           SVE=Anger namnet p† perioden som visas p† raden.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Period Name" }

    { 4   ;2   ;Field     ;
                Name=Capacity;
                CaptionML=[ENU=Capacity;
                           NOR=Kapasitet;
                           SVE=Kapacitet];
                ToolTipML=[ENU=Specifies the total capacity for the corresponding time period.;
                           NOR=Angir samlet kapasitet for tilsvarende tidsperiode.;
                           SVE=Anger den totala kapaciteten f”r aktuell tidsperiod.];
                ApplicationArea=#Manufacturing;
                DecimalPlaces=0:5;
                SourceExpr=ResGr.Capacity;
                OnDrillDown=VAR
                              ResCapacityEntry@1001 : Record 160;
                              IsHandled@1000 : Boolean;
                            BEGIN
                              ResCapacityEntry.SETRANGE("Resource Group No.",ResGr."No.");
                              ResCapacityEntry.SETRANGE(Date,"Period Start","Period End");
                              IsHandled := FALSE;
                              OnAfterCapacityOnDrillDown(ResCapacityEntry,IsHandled);
                              IF IsHandled THEN
                                EXIT;

                              PAGE.RUNMODAL(0,ResCapacityEntry);
                            END;
                             }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=Qty. on Service Order;
                           NOR=Ant. i serviceordre;
                           SVE=Ant. p† serviceorder];
                ToolTipML=[ENU=Specifies how many units of the item are allocated to service orders, meaning listed on outstanding service order lines.;
                           NOR=Angir hvor mange enheter av varen som er tildelt til serviceordrer, det vil si oppf›rt p† †pne serviceordrelinjer.;
                           SVE=Anger hur m†nga enheter av artikeln som „r tilldelade serviceorder, vilket inneb„r att de „r angivna p† utest†ende serviceorderrader.];
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=ResGr."Qty. on Service Order";
                OnDrillDown=VAR
                              ServOrderAlloc@1001 : Record 5950;
                            BEGIN
                              ServOrderAlloc.SETRANGE("Resource Group No.",ResGr."No.");
                              ServOrderAlloc.SETRANGE("Allocation Date","Period Start","Period End");
                              ServOrderAlloc.SETFILTER(Status,'%1|%2',ServOrderAlloc.Status::Active,ServOrderAlloc.Status::Finished);
                              ServOrderAlloc.SETRANGE(Posted,FALSE);
                              PAGE.RUNMODAL(0,ServOrderAlloc);
                            END;
                             }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Net Availability;
                           NOR=Netto tilgjengelighet;
                           SVE=Nettodisposition];
                ToolTipML=[ENU=Specifies capacity, minus the quantity on order (Job), minus quantity on Service Order, minus Job Quotes Allocation.;
                           NOR=Angir kapasitet, minus antallet p† ordren (prosjekt), minus antall p† serviceordre, minus tildelte prosjekttilbud.;
                           SVE=Anger kapacitet, minus antal p† order (projekt), minus antal p† serviceorder, minus offererad kapacitet i projekt.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=NetAvailability }

  }
  CODE
  {
    VAR
      ResGr@1006 : Record 152;
      PeriodFormMgt@1003 : Codeunit 359;
      CapacityAfterOrders@1000 : Decimal;
      CapacityAfterQuotes@1001 : Decimal;
      NetAvailability@1002 : Decimal;
      PeriodType@1004 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      AmountType@1005 : 'Net Change,Balance at Date';

    [External]
    PROCEDURE Set@1(VAR NewResGr@1000 : Record 152;NewPeriodType@1001 : Integer;NewAmountType@1002 : 'Net Change,Balance at Date');
    BEGIN
      ResGr.COPY(NewResGr);
      PeriodType := NewPeriodType;
      AmountType := NewAmountType;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SetDateFilter@4();
    BEGIN
      IF AmountType = AmountType::"Net Change" THEN
        ResGr.SETRANGE("Date Filter","Period Start","Period End")
      ELSE
        ResGr.SETRANGE("Date Filter",0D,"Period End");
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCapacityOnDrillDown@2(VAR ResCapacityEntry@1000 : Record 160;VAR IsHandled@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

