OBJECT Page 11125316 Estimate Line Cost
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Estimate Lines (Cost);
    SourceTable=Table11072072;
    DataCaptionExpr=GetDataCaptionEstPart;
    DelayedInsert=No;
    PageType=List;
    AutoSplitKey=Yes;
    RefreshOnActivate=Yes;
    ShowFilter=No;
    OnInit=BEGIN
             InitEditable;
           END;

    OnOpenPage=VAR
                 InstallationMng@1100525000 : Codeunit 11012268;
                 FPSLicenseManagement@1100527400 : Codeunit 11229289;
               BEGIN
                 GetFilterZeroLines(FALSE);
                 IF FPSLicenseManagement.LicenseAndReadPermissionForTable(ServSetup) THEN
                   ServSetup.GET;
                 CheckFiltergroup4;  //db, 09-06-15
                 ShowPartActions := EstRec.StructurePresent("Estimate No.");   //DP00909
                 ShowModelActions := EstRec.ModelPresent("Estimate No.");  //DP00909
                 TableLinkedTradeItemInLicense := InstallationMng.LicensePermissionForTableData(DATABASE::"Linked Trade Item");
               END;

    OnAfterGetRecord=BEGIN
                       RefQuote := RouteRefMgtCU.GetQuoteOfReference("Purchase Route Reference");
                       GetItemSpecifications;
                       DescriptionStyleExpr := ("Attached to Line No." <> 0) OR ("Part of Line" <> 0);
                       //C032591.sn
                       ChargePresent(chrg0,chrg1,chrg2,chrg3,chrg4,chrg5);
                       SurchargeStyleExpr := (chrg0 = TRUE);
                       NormStyleExpr := (chrg1 = TRUE);
                       PriceStyleExpr := (chrg2 = TRUE) OR (chrg3 = TRUE) OR (chrg4 = TRUE) OR (chrg5 = TRUE);
                       //C032591.en
                       LinkedRecipe := "Linked Recipe";  //DP02082

                       IF gFromReference THEN BEGIN
                         gFromReference := FALSE;
                         SETRANGE("Line No.");
                       END;
                     END;

    OnNewRecord=BEGIN
                  RefQuote := '';
                  IF EstRec.GET("Estimate No.") THEN
                    "Recipe Group" := EstRec."Recipe Group";
                  IF SubEstRec.GET("Estimate No.", "Sub-Estimate No.") THEN
                    IF SubEstRec."Recipe Group" <> '' THEN
                      "Recipe Group" := SubEstRec."Recipe Group";  //C028822
                  //C050221.sn
                  "Cost Type (Price)" := xRec."Cost Type (Price)";
                  GetAbsenceValue;
                  GetDefaultsCostObject("Cost Type (Price)", "Cost Object Price");
                  //C050221.en
                  InitRecord;
                END;

    OnInsertRecord=BEGIN
                     CheckEstEditable;
                     IF NOT FixedOff THEN BEGIN
                       ERROR(Text000);
                     END;
                     CheckHideZeroLines;  //C025240
                     ValidateRecipe;
                     IF TableLinkedTradeItemInLicense THEN
                       LinkedTradeItem.AddTradeItemsEstimateLine(Rec, 0);
                   END;

    OnModifyRecord=BEGIN
                     CheckEstEditable;
                     IF NOT FixedOff THEN BEGIN
                       CurrPage.UPDATE(FALSE);
                       ERROR(Text001);
                     END;
                     IF TableLinkedTradeItemInLicense THEN
                       LinkedTradeItem.AddTradeItemsEstimateLine(Rec, 1);
                   END;

    OnDeleteRecord=BEGIN
                     CheckEstEditable;
                     IF NOT FixedOff THEN BEGIN
                       CurrPage.UPDATE(FALSE);
                       ERROR(Text002);
                     END;

                     RouteRefMgtCU.CheckDeleteEstLineHasQuoteNEW(Rec, TRUE);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           CheckEstEditable;
                           SetEditable;

                           GetPartTotals(EstPartRec, TotalPartCost, TotalPartSales, TotalPartGross);

                           CALCFIELDS("Quantity Model Exist");
                           IF Recipe <> '' THEN BEGIN
                             CALCFIELDS("Total Recipe");
                           END;

                           IF "Level BOM" < 10 THEN
                             DescriptionIndent := "Level BOM";

                           CheckEditableDimensionOrScaling;
                         END;

    ActionList=ACTIONS
    {
      { 1100529012;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100529011;1 ;Action    ;
                      Name=Sales Price;
                      CaptionML=[ENU=Sales Price;
                                 NOR=Salgspris;
                                 SVE=F”rs„ljningspris];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SalesPrices;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 EstimateManagementRTC.EditViewEstimateLines("Estimate No.", "Sub-Estimate No.", "Part Group", Part, 0, TRUE);  //C033558
                               END;
                                }
      { 1100529010;1 ;Action    ;
                      Name=Totals;
                      CaptionML=[ENU=Totals;
                                 NOR=Totaler;
                                 SVE=Totaler];
                      RunObject=Page 11125328;
                      RunPageLink=Estimate No.=FIELD(Estimate No.),
                                  Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                  Part Group=FIELD(Part Group),
                                  Part=FIELD(Part);
                      PromotedIsBig=Yes;
                      Image=LedgerBudget }
      { 1100529009;1 ;Action    ;
                      Name=Model Quantities;
                      CaptionML=[ENU=Model Quantities;
                                 NOR=Modellantall;
                                 SVE=Modellantal];
                      RunObject=Page 11125329;
                      RunPageLink=Estimate No.=FIELD(Estimate No.),
                                  Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                  Part Group=FIELD(Part Group),
                                  Part=FIELD(Part);
                      Promoted=Yes;
                      Visible=ShowModelActions;
                      PromotedIsBig=Yes;
                      Image=Warehouse;
                      PromotedCategory=Process }
      { 1100529008;1 ;ActionGroup;
                      CaptionML=[ENU=Comments;
                                 NOR=Merknader;
                                 SVE=Kommentar] }
      { 1100529007;2 ;Action    ;
                      Name=EstimateComment;
                      CaptionML=ENU=Comment Lines (Estimate);
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Estimate),
                                  No.=FIELD(Estimate No.);
                      Image=ViewComments }
      { 1100529006;2 ;Action    ;
                      Name=SubEstimateComment;
                      CaptionML=ENU=Comment Lines (Sub-Estimate);
                      RunObject=Page 11124914;
                      RunPageLink=Table Name=CONST(Estimate),
                                  Estimate No.=FIELD(Estimate No.),
                                  Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                  Part Group=FILTER(''),
                                  Part=FILTER(''),
                                  Estimate Line No.=FILTER(0);
                      Image=ViewComments }
      { 1100529005;2 ;Action    ;
                      Name=PartComment;
                      CaptionML=ENU=Comment Lines (Part);
                      RunObject=Page 11124914;
                      RunPageLink=Table Name=CONST(Estimate),
                                  Estimate No.=FIELD(Estimate No.),
                                  Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                  Part Group=FIELD(Part Group),
                                  Part=FIELD(Part),
                                  Estimate Line No.=FILTER(0);
                      Image=ViewComments }
      { 1100525000;2 ;Action    ;
                      Name=LineComment;
                      ShortCutKey=Shift+Ctrl+R;
                      CaptionML=ENU=Comment Lines (Estimate Line);
                      Image=ViewComments;
                      OnAction=BEGIN
                                 EditCommentLines;
                               END;
                                }
      { 1100529004;1 ;ActionGroup;
                      CaptionML=[ENU=Estimate &Part;
                                 NOR=Kalkyle &del;
                                 SVE=Kalkyl&del] }
      { 1100409018;2 ;Action    ;
                      Name=Estimate Part Card;
                      CaptionML=ENU=Estimate Part (Card);
                      RunObject=Page 11130179;
                      RunPageLink=Estimate No.=FIELD(Estimate No.),
                                  Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                  Part Group=FIELD(Part Group),
                                  Part=FIELD(Part);
                      Image=ExplodeBOM }
      { 1100529003;2 ;Action    ;
                      Name=Estimate Index;
                      ShortCutKey=Ctrl+F5;
                      CaptionML=[ENU=Estimate Index;
                                 NOR=Kalkuler Index;
                                 SVE=Kalkylindex];
                      Description=DP00909 (option disabled);
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=BOMVersions;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 EstRec.ShowIndex("Estimate No.", "Sub-Estimate No.", "Part Group", Part, TRUE);  //DP00909
                               END;
                                }
      { 1100409017;2 ;Action    ;
                      Name=OfferAmount;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=[ENU=Offer Amounts;
                                 NOR=Tilbudsbel›p;
                                 SVE=Anbudsbelopp];
                      Image=ContractPayment;
                      OnAction=BEGIN
                                 ShowOfferAmount;  //db, 24-02-15
                               END;
                                }
      { 1100409001;2 ;Action    ;
                      Name=Quantity Sheet;
                      CaptionML=[ENU=Quantity Sheet;
                                 NOR=Antallspesifikasjon;
                                 SVE=Antalsspecifikation];
                      Image=Worksheet;
                      OnAction=VAR
                                 QuantitySheetHeader@1100409000 : Record 11020462;
                               BEGIN
                                 QuantitySheetHeader.StartQuantitySheet("Estimate No.", "Sub-Estimate No.", "Part Group", Part);  //db, 24-02-15
                               END;
                                }
      { 1100529002;2 ;Action    ;
                      Name=Recipe Lines;
                      ShortCutKey=Ctrl+Q;
                      CaptionML=[ENU=Recipe Lines;
                                 NOR=Malrader;
                                 SVE=Mallrader];
                      Image=GetLines;
                      OnAction=BEGIN
                                 EstimateManagementRTC.EditViewRecipeLines(Rec, FALSE);  //db, 14-03-14: testfield Recipe + ShowPage Cost/Sales
                               END;
                                }
      { 1100529000;2 ;Action    ;
                      Name=Purchase Route References;
                      CaptionML=[ENU=Purchase Route References;
                                 NOR=Referanser for innkj›psruter;
                                 SVE=Referenser f”r ink”psf”ljd];
                      Visible=FALSE;
                      Image=ContactReference;
                      OnAction=BEGIN
                                 ShowPurchRouteRef;
                               END;
                                }
      { 1100528999;2 ;Action    ;
                      Name=Internal Text;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=[ENU=&Internal Text;
                                 NOR=&Intern tekst;
                                 SVE=&Intern text];
                      Visible=FALSE;
                      Image=SNInfo;
                      OnAction=BEGIN
                                 EditText(0);
                               END;
                                }
      { 1100528998;2 ;Action    ;
                      Name=External Text;
                      ShortCutKey=Shift+Ctrl+E;
                      CaptionML=[ENU=&External Text;
                                 NOR=&Ekstern tekst;
                                 SVE=&Extern text];
                      Visible=FALSE;
                      Image=SNInfo;
                      OnAction=BEGIN
                                 EditText(1);
                               END;
                                }
      { 1100528996;2 ;Action    ;
                      Name=Details;
                      ShortCutKey=Shift+Ctrl+L;
                      CaptionML=[ENU=Details;
                                 NOR=Detaljer;
                                 SVE=Detaljer];
                      Visible=FALSE;
                      Image=View;
                      OnAction=BEGIN
                                 EditDetailEstimateLine;  //DP00381
                               END;
                                }
      { 1100528995;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528994;1 ;Action    ;
                      Name=Surcharge;
                      CaptionML=[ENU=&Surcharge;
                                 NOR=&Tilleggsgebyr;
                                 SVE=&Till„ggsavgift];
                      Image=InsertStartingFee;
                      OnAction=BEGIN
                                 GenerateCharge;
                               END;
                                }
      { 1100529001;1 ;Action    ;
                      Name=Zero Lines;
                      ShortCutKey=F11;
                      CaptionML=[ENU=Zero Lines (on/off);
                                 SVE=Nollrader (Av/P†)];
                      Image=GetLines;
                      OnAction=BEGIN
                                 SetFilterZeroLinesByUser(Rec);  //C025240
                                 CurrPage.RecipeLinesCostSF.PAGE.GetFilterZeroLines(TRUE);  //C025240
                               END;
                                }
      { 1100529025;1 ;Action    ;
                      Name=ActivateFullCostPrice;
                      CaptionML=ENU=Full Cost Price (on/off);
                      Image=GetBinContent;
                      OnAction=BEGIN
                                 ActivateCheckFullCostPrice;  //C057346
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100528502;1 ;Action    ;
                      Name=AssignToHeader;
                      ShortCutKey=Shift+Ctrl+R;
                      CaptionML=ENU=Add Line To Header (Plant);
                      Image=EditReminder;
                      OnAction=BEGIN
                                 AddLineToHeader;  //db, 12-03-19
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100528503;1 ;Action    ;
                      Name=Hyperlink;
                      ShortCutKey=Shift+Ctrl+H;
                      CaptionML=ENU=Hyperlink;
                      ToolTipML=ENU=Hyperlink;
                      Promoted=Yes;
                      Image=LaunchWeb;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TradeItem@1100528500 : Record 11012317;
                               BEGIN
                                 TradeItem.StartHyperlink("Vendor (Trade Item)", "Trade Item");  //C052598
                               END;
                                }
      { 1100409014;1 ;Action    ;
                      Name=Previous Chapter;
                      CaptionML=[ENU=Previous Chapter;
                                 NOR=Forrige kapittel;
                                 SVE=F”reg†ende kapitel];
                      Visible=FALSE;
                      Image=PreviousSet;
                      OnAction=BEGIN
                                 //db, 16-02-15
                                 EstimateManagementRTC.FilterEstimateLinesNextPart(2, 0, Rec); //2=chapter, 0=previous
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100409013;1 ;Action    ;
                      Name=Previous Paragraph;
                      CaptionML=[ENU=Previous Paragraph;
                                 NOR=Forrige avsnitt;
                                 SVE=F”reg†ende stycke];
                      Visible=FALSE;
                      Image=PreviousSet;
                      OnAction=BEGIN
                                 //db, 16-02-15
                                 EstimateManagementRTC.FilterEstimateLinesNextPart(1, 0, Rec); //1=paragraph, 0=previous
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100409012;1 ;Action    ;
                      Name=Previous Part;
                      ShortCutKey=Shift+Ctrl+F11;
                      CaptionML=[ENU=Previous Part;
                                 NOR=Forrige del;
                                 SVE=F”reg†ende del];
                      Visible=ShowPartActions;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 //db, 16-02-15
                                 EstimateManagementRTC.FilterEstimateLinesNextPart(0, 0, Rec); //0=part, 0=previous
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100409011;1 ;Action    ;
                      Name=Next Part;
                      ShortCutKey=Shift+Ctrl+F12;
                      CaptionML=[ENU=Next Part;
                                 NOR=Neste del;
                                 SVE=N„sta del];
                      Visible=ShowPartActions;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 //db, 16-02-15
                                 EstimateManagementRTC.FilterEstimateLinesNextPart(0, 1, Rec); //0=part, 1=next
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100409010;1 ;Action    ;
                      Name=Next Paragraph;
                      CaptionML=[ENU=Next Paragraph;
                                 NOR=Neste avsnitt;
                                 SVE=N„sta stycke];
                      Visible=FALSE;
                      Image=NextSet;
                      OnAction=BEGIN
                                 //db, 16-02-15
                                 EstimateManagementRTC.FilterEstimateLinesNextPart(1, 1, Rec); //1=paragraph, 1=next
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100409009;1 ;Action    ;
                      Name=Next Chapter;
                      CaptionML=[ENU=Next Chapter;
                                 NOR=Neste kapittel;
                                 SVE=N„sta kapitel];
                      Visible=FALSE;
                      Image=NextSet;
                      OnAction=BEGIN
                                 //db, 16-02-15
                                 EstimateManagementRTC.FilterEstimateLinesNextPart(2, 1, Rec); //2=chapter, 1=next
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100528993;1 ;ActionGroup;
                      CaptionML=[ENU=&Copy;
                                 NOR=&Kopier;
                                 SVE=&Kopiera] }
      { 1100409000;2 ;Action    ;
                      Name=New Buffer Procedure;
                      ShortCutKey=Shift+Ctrl+B;
                      CaptionML=ENU=Buffer Procedure;
                      Promoted=Yes;
                      Image=SelectLineToApply;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 EstLineFrm@1100409000 : Page 11229318;
                               BEGIN
                                 //db, 15-07-14: C016190
                                 EstLineFrm.SetSelection("Estimate No.","Sub-Estimate No.", "Part Group", Part, "Line No.");
                                 EstLineFrm.RUNMODAL;
                               END;
                                }
      { 1100525007;2 ;ActionGroup;
                      Name=Old Buffer Procedure;
                      CaptionML=ENU=Old Buffer Procedure;
                      Visible=FALSE;
                      Image=Transactions }
      { 1100528992;3 ;Action    ;
                      Name=Show Buffer;
                      ShortCutKey=Alt+F9;
                      CaptionML=[ENU=Show Buffer;
                                 NOR=Vis buffer;
                                 SVE=Visa buffert];
                      Image=Allocations;
                      OnAction=BEGIN
                                 ShowBuffer;
                               END;
                                }
      { 1100528991;3 ;Action    ;
                      Name=Copy to Buffer;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Copy &to Buffer;
                                 NOR=Kopier &til buffer;
                                 SVE=Kopiera &till buffert];
                      Image=SelectLineToApply;
                      OnAction=BEGIN
                                 CopyToBuffer;
                               END;
                                }
      { 1100528990;3 ;Action    ;
                      Name=Copy from Buffer;
                      ShortCutKey=Shift+F9;
                      CaptionML=[ENU=Copy &from Buffer;
                                 NOR=Kopier &fra buffer;
                                 SVE=Kopiera &fr†n buffert];
                      Image=PostApplication;
                      OnAction=BEGIN
                                 CopyFromBuffer;
                               END;
                                }
      { 1100528989;2 ;Action    ;
                      Name=Copy Recipes;
                      ShortCutKey=F9;
                      CaptionML=[ENU=Copy &Recipes;
                                 NOR=Kopier &maler;
                                 SVE=Kopiera &mallar];
                      Image=Copy;
                      OnAction=BEGIN
                                 CopyEstimateRecipe;  //db, 19-05-14: name changed to skip tablefunction with same name
                               END;
                                }
      { 1100528988;2 ;Action    ;
                      Name=Copy Model Quantities;
                      ShortCutKey=Shift+Ctrl+F9;
                      CaptionML=[ENU=Copy &Model Quantities;
                                 NOR=Kopier &modellantall;
                                 SVE=Kopiera &modellantal];
                      Visible=ShowModelActions;
                      Image=Copy;
                      OnAction=BEGIN
                                 CopyModelQuan;
                               END;
                                }
      { 1100528987;2 ;Action    ;
                      Name=Copy Part Lines;
                      CaptionML=[ENU=Copy &Part Lines;
                                 NOR=Kopier &delrader;
                                 SVE=Kopiera &delrader];
                      Image=Copy;
                      OnAction=BEGIN
                                 SelectPartLines;
                               END;
                                }
      { 1100528986;2 ;Action    ;
                      Name=Copy Entries;
                      CaptionML=[ENU=Copy &Entries;
                                 NOR=Kopier &transaksjoner;
                                 SVE=Kopiera &transaktioner];
                      Image=Copy;
                      OnAction=BEGIN
                                 SelectEntry;
                               END;
                                }
      { 1100528985;1 ;ActionGroup;
                      CaptionML=[ENU=Functions;
                                 NOR=Funksjoner;
                                 SVE=Funktioner] }
      { 1100528984;2 ;Action    ;
                      Name=[Explode ];
                      CaptionML=[ENU=Explode Recipe;
                                 NOR=Utfold mal;
                                 SVE=Expandera mall];
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeRecipe;
                               END;
                                }
      { 1100528602;2 ;Action    ;
                      Name=Pick other vendor;
                      CaptionML=ENU=Pick other vendor;
                      Image=Change;
                      OnAction=VAR
                                 TradeItem@1100528601 : Record 11012317;
                                 WebshopItemMgt@1100528600 : Codeunit 11012306;
                                 VendorNo@1100528602 : Code[20];
                                 TradeItemNo@1100528603 : Code[20];
                               BEGIN
                                 TradeItem.GET("Vendor (Trade Item)", "Trade Item");
                                 TradeItem.TESTFIELD("Maintained by 2ba");
                                 TradeItem.TESTFIELD(TradeItem."Product ID Guid (2ba)");
                                 VendorNo := "Vendor (Trade Item)";
                                 TradeItemNo := "Trade Item";
                                 WebshopItemMgt.RunModalDialogForOneItem(VendorNo, TradeItemNo);
                                 IF "Vendor (Trade Item)" <> VendorNo THEN BEGIN
                                   VALIDATE("Trade Item", '');
                                   VALIDATE("Vendor (Trade Item)", VendorNo);
                                 END;
                                 IF "Trade Item" <> TradeItemNo THEN
                                   VALIDATE("Trade Item", TradeItemNo);
                               END;
                                }
      { 1100528979;2 ;Action    ;
                      Name=Import E-plan Item List;
                      CaptionML=[ENU=Import E-plan Item List;
                                 NOR=Importer artikkelliste for E-Plan;
                                 SVE=Importera artikellista f”r E-Plan];
                      RunPageOnRec=Yes;
                      Image=Import;
                      OnAction=VAR
                                 EstLineRec@1100528900 : Record 11072072;
                                 EplanImport@1100529300 : XMLport 11071866;
                                 FromFile@1100529500 : Text;
                                 InStream@1100529501 : InStream;
                               BEGIN
                                 EstLineRec.SETRANGE("Estimate No.","Estimate No.");
                                 EstLineRec.SETRANGE("Sub-Estimate No.","Sub-Estimate No.");
                                 EstLineRec.SETRANGE("Part Group","Part Group");
                                 EstLineRec.SETRANGE(Part,Part);
                                 EplanImport.SETTABLEVIEW(EstLineRec);

                                 UPLOADINTOSTREAM(Text011, '', '', FromFile, InStream);
                                 EplanImport.SETSOURCE(InStream);
                                 EplanImport.IMPORT;
                               END;
                                }
      { 1100529022;2 ;Action    ;
                      Name=CalculatePart;
                      CaptionML=ENU=Calculate Part;
                      Image=CalculatePlan;
                      OnAction=BEGIN
                                 UpdateMgt.UpdateTotals("Estimate No.", "Sub-Estimate No.", Part, TRUE);  //DP02080
                               END;
                                }
      { 1100525014;2 ;Action    ;
                      Name=InitFullCostPrice;
                      CaptionML=ENU=Initialize Full Cost Price;
                      Image=CalculateCost;
                      OnAction=VAR
                                 EstimateOfferAmount@1100525000 : Page 11229778;
                               BEGIN
                                 EstimateOfferAmount.CallReport(FALSE,FALSE,"Estimate No.","Sub-Estimate No.");  //db, 24-01-19
                               END;
                                }
      { 1100525015;2 ;Action    ;
                      Name=InitFullSalesPrice;
                      CaptionML=ENU=Initialize Full Sales Price;
                      Visible=FALSE;
                      Image=CalculateSalesTax;
                      OnAction=VAR
                                 EstimateOfferAmount@1100525000 : Page 11229778;
                               BEGIN
                                 EstimateOfferAmount.CallReport(TRUE,FALSE,"Estimate No.","Sub-Estimate No.");  //db, 24-01-19
                               END;
                                }
      { 1100528400;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Find Lowest Price Trade Items;
                      Image=PriceAdjustment;
                      OnAction=VAR
                                 EstimateLine@1100528400 : Record 11072072;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(EstimateLine);
                                 EstimateLine.FindLowestPriceTradeItems;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100529503;1 ;ActionGroup;
                      CaptionML=ENU=BOM-Item;
                      Visible=FALSE }
      { 1100528983;2 ;Action    ;
                      Name=Explode BOM;
                      CaptionML=[ENU=&Explode BOM;
                                 NOR=&Utfold stykkliste;
                                 SVE=&Expandera struktur];
                      Visible=FALSE;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM;
                               END;
                                }
      { 1100528982;2 ;Action    ;
                      Name=Modify BOM Discount;
                      CaptionML=[ENU=Modify BOM Discount;
                                 NOR=Endre stykklisterabatt;
                                 SVE=Žndra strukturrabatt];
                      Visible=FALSE;
                      Image=CalculateDiscount;
                      OnAction=BEGIN
                                 UpgradeBOMDiscount;
                               END;
                                }
      { 1100528981;2 ;Action    ;
                      Name=Modify BOM Amount;
                      CaptionML=[ENU=Modify BOM Amount;
                                 NOR=Endre stykklistebel›p;
                                 SVE=Žndra strukturbelopp];
                      Visible=FALSE;
                      Image=ContractPayment;
                      OnAction=BEGIN
                                 UpgradeBOMAmount;
                               END;
                                }
      { 1100528980;2 ;Action    ;
                      Name=Remove Zero-Lines BOM;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Remove Zero-Lines BOM;
                                 NOR=Vil du fjerne Null-rader i stykkliste?;
                                 SVE=Vill du ta bort nollrader i strukturen?];
                      Visible=FALSE;
                      Image=CancelLine;
                      OnAction=BEGIN
                                 RemoveZeroLinesBOM;
                               END;
                                }
      { 1100529502;1 ;ActionGroup;
                      CaptionML=[ENU=Plant;
                                 NOR=Maskin;
                                 SVE=Maskin];
                      Visible=FALSE }
      { 1100529501;2 ;Action    ;
                      CaptionML=[ENU=&Explode Sets;
                                 NOR=&Utfold sett;
                                 SVE=&Expandera set];
                      Visible=FALSE;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeSetLines;
                               END;
                                }
      { 1100529500;2 ;Action    ;
                      CaptionML=[ENU=Add Std. P&lant Costs and Items;
                                 NOR=Legg til standard M&askinkoster og -Artikler;
                                 SVE=L„gg till std. A&nl„ggningskostnader och -artiklar];
                      Visible=FALSE;
                      Image=Costs;
                      OnAction=BEGIN
                                 InsertPlantCostLines;
                               END;
                                }
      { 1100528978;  ;ActionContainer;
                      ActionContainerType=Reports }
      { 1100528976;1 ;Action    ;
                      Name=Estimate Reports;
                      CaptionML=ENU=Estimate Reports;
                      Image=Report;
                      OnAction=BEGIN
                                 SetFilterPrintDoc(0);
                               END;
                                }
      { 1100528975;1 ;Action    ;
                      Name=Sub-Estimate Reports;
                      CaptionML=[ENU=Sub-Estimate Reports;
                                 SVE=Delkalkyler, rapporter];
                      Image=Report;
                      OnAction=BEGIN
                                 SetFilterPrintDoc(1);
                               END;
                                }
      { 1100528958;1 ;Action    ;
                      Name=Estimate &Part Reports;
                      CaptionML=ENU=Estimate &Part Reports;
                      Image=report;
                      OnAction=BEGIN
                                 SetFilterPrintDoc(2);
                               END;
                                }
      { 1100528957;1 ;Action    ;
                      Name=Estimate &Lines Reports;
                      CaptionML=ENU=Estimate &Lines Reports;
                      Image=report;
                      OnAction=BEGIN
                                 SetFilterPrintDoc(3);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528900;;Container;
                ContainerType=ContentArea }

    { 1100528901;1;Group  ;
                CaptionML=ENU=Estimate Lines (Cost);
                GroupType=Repeater;
                FreezeColumnID=Description }

    { 1100528902;2;Field  ;
                SourceExpr="Estimate No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100409004;2;Field  ;
                SourceExpr="Estimate Description";
                Importance=Additional;
                Visible=FALSE }

    { 1100528903;2;Field  ;
                SourceExpr="Sub-Estimate No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100409003;2;Field  ;
                SourceExpr="Sub-Estimate Description";
                Importance=Additional;
                Visible=FALSE }

    { 1100528904;2;Field  ;
                SourceExpr="Part Group";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528905;2;Field  ;
                SourceExpr=Part;
                Visible=FALSE;
                Editable=FALSE }

    { 1100409002;2;Field  ;
                SourceExpr="Part Description";
                Importance=Additional;
                Visible=FALSE }

    { 1100528906;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528907;2;Field  ;
                SourceExpr="Cost Type (Price)";
                Editable=CostTypePriceEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100525008;2;Field  ;
                SourceExpr="Cost Type (Hours)";
                Visible=FALSE;
                Editable=CostTypeHoursEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100528908;2;Field  ;
                SourceExpr="Recipe Group";
                Visible=FALSE;
                Editable=RecipeGroupEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100528909;2;Field  ;
                SourceExpr=Recipe;
                Editable=RecipeEditable;
                Style=Strong;
                StyleExpr=LinkedRecipe;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             CheckUpdateQuantityFromRelation("Estimate No.", "Sub-Estimate No.", "Part Group", Part);
                             IF Quantity <> 0 THEN VALIDATE(Quantity);  //db, 10-06-15: update recipe totals if other recipe is chosen
                             CurrPage.UPDATE(FALSE);
                             SetEditable;
                           END;

                OnLookup=BEGIN
                           OnBeforeLookup;
                           IF HandleLookupRecipe THEN BEGIN
                             CurrPage.UPDATE(FALSE);  //C027336
                           END ELSE BEGIN
                             //C046933.so
                             //CurrPage.SAVERECORD;
                             //CheckUpdateQuantityFromRelation("Estimate No.", "Sub-Estimate No.", "Part Group", Part);  //db, 06-02-15
                             //IF Quantity <> 0 THEN VALIDATE(Quantity);  //db, 10-06-15: update recipe totals if other recipe is chosen
                             //CurrPage.UPDATE(FALSE);
                             //C046933.eo
                           END;
                           SetEditable;
                         END;

                OnAssistEdit=BEGIN
                               OnAssistEditRecipe; //DP02082
                             END;
                              }

    { 1100529021;2;Field  ;
                SourceExpr="Linked Recipe";
                Visible=FALSE }

    { 1100409007;2;Field  ;
                SourceExpr="Set Code";
                Visible=FALSE;
                Editable=SetCodeEditable;
                OnValidate=BEGIN
                             IF Quantity = 0 THEN BEGIN
                               Quantity := 1;  //db, 29-12-14: init quantity before explode to fill cumulative quantity on related lines
                               "Quantity (Sales)" := Quantity;  //C053101
                             END;
                             CurrPage.SAVERECORD;
                             ExplodeSetLines;
                           END;

                OnLookup=BEGIN
                           OnBeforeLookup;
                           LookupSetCode;  //DP01208
                           IF "Set Code" <> xRec."Set Code" THEN BEGIN
                             IF Quantity = 0 THEN BEGIN
                               Quantity := 1;
                               "Quantity (Sales)" := Quantity;  //C053101
                             END;
                             CurrPage.SAVERECORD;
                             ExplodeSetLines;
                           END;
                         END;
                          }

    { 1100409006;2;Field  ;
                SourceExpr="Plant Type";
                Visible=FALSE;
                Editable=PlantTypeEditable;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             InsertPlantCostLines;
                           END;

                OnLookup=BEGIN
                           LookupPlantType;  //DP01208
                           CurrPage.SAVERECORD;
                           InsertPlantCostLines;
                         END;
                          }

    { 1100528910;2;Field  ;
                SourceExpr="Item No.";
                Editable=ItemNoEditable;
                OnValidate=BEGIN
                             CopyItemText;  //C044685
                             SetEditable;
                           END;

                OnLookup=BEGIN
                           OnBeforeLookup;
                           IF HandleLookupItem(FIELDNO("Item No.")) THEN BEGIN
                             CurrPage.UPDATE(FALSE);  //C027336
                           END ELSE BEGIN
                             IF ("Item No." <> xRec."Item No.") THEN BEGIN
                               CopyItemText;  //C044685
                             END;
                           END;
                         END;
                          }

    { 1100528912;2;Field  ;
                SourceExpr=Manufacturer;
                Visible=FALSE;
                Editable=ManufacturerEditable }

    { 1100528913;2;Field  ;
                SourceExpr="Basic Item";
                Visible=FALSE;
                Editable=BasicItemEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;

                OnLookup=BEGIN
                           OnBeforeLookup;
                           IF HandleLookupItem(FIELDNO("Basic Item")) THEN
                             CurrPage.UPDATE(FALSE);  //C027336
                         END;
                          }

    { 1100528914;2;Field  ;
                SourceExpr="Vendor (Trade Item)";
                Editable=VendorTradeItemEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100528915;2;Field  ;
                SourceExpr="Trade Item";
                Editable=TradeItemEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;

                OnLookup=BEGIN
                           OnBeforeLookup;
                           IF HandleLookupItem(FIELDNO("Trade Item")) THEN
                             CurrPage.UPDATE(FALSE);  //C027336
                         END;

                OnAssistEdit=BEGIN
                               OnBeforeLookup;
                               IF HandleAssistEditItem(FIELDNO("Trade Item")) THEN
                                 CurrPage.UPDATE(FALSE); //C027336
                             END;
                              }

    { 1100528916;2;Field  ;
                SourceExpr="Cost Object Labor";
                Editable=CostObjectLaborEditable;
                OnValidate=BEGIN
                             ProcessCostObject(1,0,"Cost Object Labor");
                             RecalcTotals;
                           END;

                OnLookup=BEGIN
                           OnBeforeLookup;
                           ProcessCostObject(2,0,"Cost Object Labor");
                           RecalcTotals;
                         END;
                          }

    { 1100528917;2;Field  ;
                SourceExpr="Cost Object Price";
                Editable=CostObjectPriceEditable;
                OnValidate=BEGIN
                             ProcessCostObject(1,1,"Cost Object Price");
                             RecalcTotals;
                           END;

                OnLookup=BEGIN
                           OnBeforeLookup;
                           ProcessCostObject(2,1,"Cost Object Price");
                           RecalcTotals;
                         END;
                          }

    { 1100528918;2;Field  ;
                SourceExpr="Cost Component";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100528919;2;Field  ;
                SourceExpr=Code;
                Visible=FALSE;
                Editable=CodeEditable }

    { 1100528920;2;Field  ;
                SourceExpr=Description;
                Editable=FixedOff;
                Style=StandardAccent;
                StyleExpr=DescriptionStyleExpr }

    { 1100528000;2;Field  ;
                CaptionML=ENU=Related to Surcharge Line;
                SourceExpr=GetAttachedToSurcharge;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528921;2;Field  ;
                SourceExpr="Internal Text Block";
                Visible=FALSE;
                OnLookup=BEGIN
                           EditText(0);
                         END;
                          }

    { 1100528922;2;Field  ;
                SourceExpr="External Text Block";
                Visible=FALSE;
                OnLookup=BEGIN
                           EditText(1);
                         END;
                          }

    { 1100528923;2;Field  ;
                SourceExpr=Comment;
                Visible=FALSE;
                OnLookup=BEGIN
                           EditCommentLines;
                         END;
                          }

    { 1100528924;2;Field  ;
                SourceExpr="Time Quantity";
                Visible=FALSE;
                Editable=TimeQuantityEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100528925;2;Field  ;
                SourceExpr="Unit of Time";
                Visible=FALSE;
                Editable=UnitOfTimeEditable }

    { 1100528926;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Length;
                Visible=FALSE;
                Editable=LWHEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                             CheckEditableDimensionOrScaling;
                           END;
                            }

    { 1100528927;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Width;
                Visible=FALSE;
                Editable=LWHEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                             CheckEditableDimensionOrScaling;
                           END;
                            }

    { 1100528928;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Height;
                Visible=FALSE;
                Editable=LWHEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                             CheckEditableDimensionOrScaling;
                           END;
                            }

    { 1100528929;2;Field  ;
                SourceExpr=Quantity;
                Editable=QuantityEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100529400;2;Field  ;
                AssistEdit=Yes;
                CaptionML=ENU=Sheet Present;
                SourceExpr="Quantity Sheet Present";
                Visible=FALSE;
                OnLookup=BEGIN
                           //C031184: however lookup defined on tablefield, RecalcTotals is required
                           OnBeforeLookup;
                           IF EnterQuantity(4) THEN BEGIN
                             EditQuanSheet;
                             RecalcTotals;
                           END;
                         END;
                          }

    { 1100525006;2;Field  ;
                SourceExpr="Deviating Sales Quantity";
                Visible=FALSE }

    { 1100528930;2;Field  ;
                SourceExpr="Part Quantity";
                Visible=FALSE }

    { 1100528931;2;Field  ;
                SourceExpr="Original Quantity";
                Visible=FALSE;
                Editable=OriginalQuantityEditable;
                OnValidate=BEGIN
                             IF (xRec."Original Quantity" <> "Original Quantity") AND (xRec."Original Quantity" <> 0) THEN BEGIN
                               ChangeQuantityExplodedLines("Original Quantity" / xRec."Original Quantity");
                               CurrPage.UPDATE;
                             END;
                           END;
                            }

    { 1100528932;2;Field  ;
                SourceExpr="Part of Line";
                Visible=FALSE }

    { 1100528933;2;Field  ;
                SourceExpr="Unit of Measure";
                Editable=UnitOfMeasureEditable }

    { 1100528934;2;Field  ;
                SourceExpr="Ignore Part Quantity";
                Visible=FALSE;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100528935;2;Field  ;
                SourceExpr="Line Status";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100528936;2;Field  ;
                SourceExpr="Surcharge Type";
                Visible=FALSE;
                Editable=SurchargeTypeEditable;
                Style=Strong;
                StyleExpr=SurchargeStyleExpr;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100528937;2;Field  ;
                SourceExpr="Surcharge %";
                Visible=FALSE;
                Editable=SurchargePercEditable;
                Style=Strong;
                StyleExpr=SurchargeStyleExpr;
                OnDrillDown=VAR
                              ChrgPag@1100528900 : Page 11229327;
                            BEGIN
                              OnBeforeLookup;
                              ChrgRec.RESET;
                              ChrgRec.SETRANGE("Estimate No.", "Estimate No.");
                              ChrgRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
                              ChrgRec.SETRANGE("Part Group", "Part Group");
                              ChrgRec.SETRANGE(Part, Part);
                              ChrgRec.SETRANGE("Recipe Line", 0);
                              ChrgRec.SETRANGE("Recipe Group", '');
                              ChrgRec.SETRANGE(Recipe, '');
                              ChrgRec.SETRANGE("Surcharge Line", "Line No.");
                              ChrgPag.SETTABLEVIEW(ChrgRec);
                              ChrgPag.SetSelection(2);
                              ChrgPag.RUNMODAL;

                              RecalcTotals;
                              CurrPage.UPDATE(FALSE);  //C033874
                            END;
                             }

    { 1100528938;2;Field  ;
                SourceExpr="Norm Group";
                Visible=FALSE;
                Editable=NormGroupEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100528939;2;Field  ;
                SourceExpr="Sub Operation Code";
                Visible=FALSE;
                Editable=SubOperationCodeEditable;
                OnValidate=BEGIN
                             ProcessSubOperation;

                             RecalcTotals;
                             IF "Sub Operation Code" <> '' THEN BEGIN
                               "Norm Agreement" := FALSE;
                               "Norm Agreement (Sales)" := FALSE;
                             END;
                             SetEditable;
                           END;

                OnLookup=VAR
                           OperPag@1100528901 : Page 11012178;
                           OperRec@1100528900 : Record 11012166;
                         BEGIN
                           OnBeforeLookup;
                           IF (Recipe <> '') OR ("Surcharge Type" <> "Surcharge Type"::" ") THEN EXIT;  //C022442

                           CLEAR(OperPag);
                           OperPag.LOOKUPMODE(TRUE);
                           OperPag.SetSelection(DATABASE::"Estimate Line","Estimate No.","Sub-Estimate No.",
                             "Part Group",Part,0,'','');

                           OperRec.Code := "Sub Operation Code";
                           OperPag.SETRECORD(OperRec);

                           IF OperPag.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             OperPag.GETRECORD(OperRec);
                             VALIDATE("Sub Operation Code", OperRec.Code);
                             ProcessSubOperation;
                             RecalcTotals;
                           END;
                           IF "Sub Operation Code" <> xRec."Sub Operation Code" THEN  //C052757: option cancel clears data
                             CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1100528940;2;Field  ;
                SourceExpr=Norm;
                Editable=NormEditable;
                Style=Strong;
                StyleExpr=NormStyleExpr;
                OnValidate=BEGIN
                             "Norm Agreement" := TRUE;
                             RecalcTotals;
                           END;

                OnLookup=BEGIN
                           OnBeforeLookup;
                           IF HandleLookupOperationNorm(FALSE) THEN BEGIN
                             IF Norm <> xRec.Norm THEN  //C052757: option cancel clears data
                               CurrPage.UPDATE(FALSE);
                           END ELSE BEGIN
                             IF Norm <> xRec.Norm THEN  //C052757: option cancel clears data
                               RecalcTotals;
                           END;
                         END;
                          }

    { 1100528941;2;Field  ;
                CaptionML=[ENU=Norm (Minuts);
                           NOR=Norm (minutter);
                           SVE=Norm (minuter)];
                SourceExpr=GetMinuts(0,0);
                Visible=FALSE;
                Editable=FALSE }

    { 1100525010;2;Field  ;
                SourceExpr="Production Rate";
                Visible=FALSE;
                Editable=ProductionRateEditable;
                Style=Strong;
                StyleExpr=NormStyleExpr;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100529901;2;Field  ;
                SourceExpr="Plant Rates in Hours";
                Visible=FALSE;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100528501;2;Field  ;
                SourceExpr="Subcontracting in Hours";
                Visible=FALSE;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100528942;2;Field  ;
                SourceExpr="Rate Code";
                Editable=RateCodeEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                             SetEditable;
                           END;
                            }

    { 1100528943;2;Field  ;
                SourceExpr="Cost Rate" }

    { 1100528601;2;Field  ;
                SourceExpr="Cost Rate (FCY)";
                Visible=FALSE }

    { 1100528944;2;Field  ;
                SourceExpr="Wage Component";
                Visible=FALSE;
                Editable=WageComponentEditable;
                OnValidate=BEGIN
                             RecalcTotals;  //DP00236
                             SetEditable;
                           END;
                            }

    { 1100528611;2;Field  ;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 1100525009;2;Field  ;
                SourceExpr="Currency Agreement";
                Visible=FALSE }

    { 1100528945;2;Field  ;
                SourceExpr="Gross Price";
                Editable=GrossPriceEditable;
                Style=Strong;
                StyleExpr=PriceStyleExpr;
                OnValidate=BEGIN
                             "Price Agreement" := TRUE;
                             RecalcTotals;
                           END;
                            }

    { 1100528603;2;Field  ;
                SourceExpr="Gross Price (FCY)";
                Visible=FALSE }

    { 1100528946;2;Field  ;
                SourceExpr="Purchase Discount %";
                Editable=PurchaseDiscountPercEditable;
                OnValidate=BEGIN
                             "Price Agreement" := TRUE;
                             RecalcTotals;
                           END;
                            }

    { 1100528947;2;Field  ;
                SourceExpr="Net Cost Price";
                Editable=NetCostPriceEditable;
                Style=Strong;
                StyleExpr=PriceStyleExpr;
                OnValidate=BEGIN
                             "Price Agreement" := TRUE;
                             RecalcTotals;
                           END;
                            }

    { 1100528604;2;Field  ;
                SourceExpr="Net Cost Price (FCY)";
                Visible=FALSE }

    { 1100529017;2;Field  ;
                SourceExpr="Hours Recipe (Cost)";
                Visible=FALSE }

    { 1100528997;2;Field  ;
                SourceExpr="Labor Recipe (Cost)";
                Visible=FALSE }

    { 1100529016;2;Field  ;
                SourceExpr="Material Recipe (Cost)";
                Visible=FALSE }

    { 1100529018;2;Field  ;
                SourceExpr="Subcontracting Recipe (Cost)";
                Visible=FALSE }

    { 1100529019;2;Field  ;
                SourceExpr="Plant Recipe (Cost)";
                Visible=FALSE }

    { 1100529020;2;Field  ;
                SourceExpr="Sundry Recipe (Cost)";
                Visible=FALSE }

    { 1100528948;2;Field  ;
                CaptionML=ENU=Total Recipe (Cost);
                SourceExpr="Total Recipe";
                Visible=FALSE }

    { 1100528949;2;Field  ;
                DecimalPlaces=2:3;
                SourceExpr=Hours }

    { 1100528950;2;Field  ;
                SourceExpr="Labor Cost Amount";
                Visible=FALSE }

    { 1100528612;2;Field  ;
                SourceExpr="Labor Cost Amount (FCY)";
                Visible=FALSE }

    { 1100528951;2;Field  ;
                SourceExpr="Material Gross Amount";
                Visible=FALSE }

    { 1100528605;2;Field  ;
                SourceExpr="Material Gross Amount (FCY)";
                Visible=FALSE }

    { 1100528952;2;Field  ;
                SourceExpr="Material Cost Amount";
                Visible=FALSE }

    { 1100528606;2;Field  ;
                SourceExpr="Material Cost Amount (FCY)";
                Visible=FALSE }

    { 1100528953;2;Field  ;
                SourceExpr="Subcontracting Cost Amount";
                Visible=FALSE }

    { 1100528607;2;Field  ;
                SourceExpr="Subcontr. Cost Amount (FCY)";
                Visible=FALSE }

    { 1100528954;2;Field  ;
                SourceExpr="Plant Cost Amount";
                Visible=FALSE }

    { 1100528608;2;Field  ;
                SourceExpr="Plant Cost Amount (FCY)";
                Visible=FALSE }

    { 1100528955;2;Field  ;
                SourceExpr="Sundry Cost Amount";
                Visible=FALSE }

    { 1100528609;2;Field  ;
                SourceExpr="Sundry Cost Amount (FCY)";
                Visible=FALSE }

    { 1100528956;2;Field  ;
                SourceExpr="Cost Amount" }

    { 1100528610;2;Field  ;
                SourceExpr="Cost Amount (FCY)";
                Visible=FALSE }

    { 1100525004;2;Field  ;
                CaptionML=[ENU=Margin %;
                           NOR=Marginal %;
                           SVE=Marginalprocent];
                SourceExpr=GetMargin("Sales Amount","Cost Amount");
                Visible=FALSE }

    { 1100525003;2;Field  ;
                CaptionML=[ENU=Markup %;
                           NOR=P†f›ringsprosent;
                           SVE=P†l„ggsprocent];
                SourceExpr=GetMarkup("Sales Amount","Cost Amount");
                Visible=FALSE }

    { 1100525002;2;Field  ;
                SourceExpr="Sales Amount";
                Visible=FALSE }

    { 1100529023;2;Field  ;
                SourceExpr="Summary Line calculated on";
                Visible=FALSE }

    { 1100528959;2;Field  ;
                SourceExpr="Price Reference Date";
                Visible=FALSE }

    { 1100528960;2;Field  ;
                SourceExpr="Norm Agreement";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100528961;2;Field  ;
                SourceExpr="Price Agreement";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100528962;2;Field  ;
                SourceExpr="Ask for Quote";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100528963;2;Field  ;
                CaptionML=[ENU=Quote No.;
                           NOR=Foresp›rselsnr.;
                           SVE=Offertnr];
                SourceExpr=RefQuote;
                Visible=FALSE;
                Editable=FALSE;
                OnLookup=VAR
                           lvPurchHeadRec@1100528900 : Record 38;
                         BEGIN
                           IF (RefQuote = '') THEN
                             EXIT;

                           IF (COPYSTR(RefQuote, 1, 1) = '<') THEN  // IF Quote No. is '<Nr.>', then more than one quote present
                             RouteRefMgtCU.ShowReferenceQuoteList("Purchase Route Reference")
                           ELSE BEGIN
                             lvPurchHeadRec.SETRANGE("Document Type", lvPurchHeadRec."Document Type"::Quote);
                             lvPurchHeadRec.SETRANGE("No.", RefQuote);
                             PAGE.RUNMODAL(PAGE::"Purchase Quote", lvPurchHeadRec);
                           END;
                         END;
                          }

    { 1100528964;2;Field  ;
                SourceExpr="Purchase Route Reference";
                Visible=FALSE }

    { 1100528965;2;Field  ;
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100528966;2;Field  ;
                SourceExpr=Vendor;
                Visible=FALSE;
                Editable=FixedOff }

    { 1100528967;2;Field  ;
                SourceExpr="Vendor Name";
                Visible=FALSE }

    { 1100529900;2;Field  ;
                SourceExpr="Subcontracting Activity";
                Visible=FALSE;
                Editable=FixedOff;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100528968;2;Field  ;
                SourceExpr=Subcontractor;
                Visible=FALSE;
                Editable=FixedOff;
                OnValidate=BEGIN
                             CALCFIELDS("Subcontractor Name");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100528969;2;Field  ;
                SourceExpr="Subcontractor Name";
                Visible=FALSE }

    { 1100528970;2;Field  ;
                SourceExpr="Service Order No.";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100528971;2;Field  ;
                SourceExpr="Project No.";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100528972;2;Field  ;
                SourceExpr=Element;
                Editable=FixedOff }

    { 1100528973;2;Field  ;
                SourceExpr="Extension Contract";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100528974;2;Field  ;
                SourceExpr="Project Planning Activity Code";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100528600;2;Field  ;
                SourceExpr="Price History 0 Exists";
                Visible=FALSE }

    { 1100409005;2;Field  ;
                SourceExpr="Quantity Sheet Feature";
                Visible=FALSE;
                OnValidate=BEGIN
                             //DP00686
                             CurrPage.SAVERECORD;
                             CheckUpdateQuantityFromRelation("Estimate No.", "Sub-Estimate No.", "Part Group", Part);
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 1100525011;2;Field  ;
                SourceExpr="Scheme Code";
                Visible=FALSE }

    { 1100527200;2;Field  ;
                DecimalPlaces=0:5;
                SourceExpr="Scaling Factor";
                Visible=FALSE;
                Editable=ScalingFactorEditable;
                OnValidate=BEGIN
                             CheckEditableDimensionOrScaling;
                           END;
                            }

    { 1100527201;2;Field  ;
                DecimalPlaces=0:5;
                SourceExpr="Base Quantity";
                Visible=FALSE }

    { 1100525012;2;Field  ;
                SourceExpr="Comments for Logistics";
                Visible=FALSE }

    { 1100529024;2;Field  ;
                SourceExpr=Discipline;
                Visible=FALSE }

    { 1100527300;2;Field  ;
                SourceExpr="Start Rental Period";
                Visible=FALSE;
                Editable=RentalEditable }

    { 1100527301;2;Field  ;
                SourceExpr="End Rental Period";
                Visible=FALSE;
                Editable=RentalEditable }

    { 1100527302;2;Field  ;
                SourceExpr="Rental Period Formula";
                Visible=FALSE;
                Editable=RentalEditable }

    { 1100527303;2;Field  ;
                SourceExpr="Rental Time Units";
                Visible=FALSE;
                Editable=RentalEditable }

    { 1100528500;2;Field  ;
                SourceExpr="Original Vendor (Trade Item)";
                Visible=FALSE }

    { 1100409016;1;Part   ;
                Name=RecipeLinesCostSF;
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Sub-Estimate No.=FIELD(Sub-Estimate No.),
                            Part Group=FIELD(Part Group),
                            Part=FIELD(Part),
                            Estimate Line=FIELD(Line No.),
                            Recipe Group=FIELD(Recipe Group),
                            Recipe=FIELD(Recipe);
                PagePartID=Page11229328;
                Editable=SubPageEditable;
                PartType=Page }

    { 1100525013;1;Part   ;
                CaptionML=[ENU=Estimate Part;
                           NOR=Kalkyledel;
                           SVE=Kalkyldel];
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Sub-Estimate No.=FIELD(Sub-Estimate No.),
                            Part Group=FIELD(Part Group),
                            Part=FIELD(Part);
                PagePartID=Page11229330;
                Visible=ShowPartActions;
                Editable=FALSE;
                PartType=Page }

    { 1100528977;0;Container;
                ContainerType=FactBoxArea }

    { 1100529015;1;Part   ;
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Sub-Estimate No.=FIELD(Sub-Estimate No.),
                            Part Group=FIELD(Part Group),
                            Part=FIELD(Part);
                PagePartID=Page11229313;
                PartType=Page }

    { 1100529013;1;Part   ;
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Sub-Estimate No.=FIELD(Sub-Estimate No.),
                            Part Group=FIELD(Part Group),
                            Part=FIELD(Part),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11229311;
                PartType=Page }

    { 1100529014;1;Part   ;
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Sub-Estimate No.=FIELD(Sub-Estimate No.),
                            Part Group=FIELD(Part Group),
                            Part=FIELD(Part),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11229312;
                PartType=Page }

    { 1100528911;1;Part   ;
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Sub-Estimate No.=FIELD(Sub-Estimate No.),
                            Part Group=FIELD(Part Group),
                            Part=FIELD(Part),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11229315;
                PartType=Page }

    { 1100525001;1;Part   ;
                CaptionML=ENU=Comment Lines (Estimate Line);
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Sub-Estimate No.=FIELD(Sub-Estimate No.),
                            Part Group=FIELD(Part Group),
                            Part=FIELD(Part),
                            Estimate Line No.=FIELD(Line No.),
                            Recipe Line No.=CONST(0);
                PagePartID=Page11126553;
                PartType=Page }

    { 1100525005;1;Part   ;
                CaptionML=ENU=Comment Lines (Recipe Line);
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Sub-Estimate No.=FIELD(Sub-Estimate No.),
                            Part Group=FIELD(Part Group),
                            Part=FIELD(Part),
                            Estimate Line No.=FIELD(Estimate Line),
                            Group=FIELD(Recipe Group),
                            No.=FIELD(Recipe),
                            Recipe Line No.=FIELD(Line No.);
                PagePartID=Page11126553;
                ProviderID=1100409016;
                PartType=Page }

  }
  CODE
  {
    VAR
      ServSetup@1100528924 : Record 11012800;
      EstRec@1100528922 : Record 11012151;
      SubEstRec@1100529500 : Record 11072074;
      ChrgRec@1100528921 : Record 11229771;
      EstPartRec@1100528920 : Record 11072073;
      EstLineRec@1100528919 : Record 11072072;
      RcpLineRec@1100528918 : Record 11072075;
      RecipeRec@1100528917 : Record 11020581;
      BaseRcpLineRec@1100528916 : Record 11020582;
      PartLineRec@1100528915 : Record 11072076;
      SalesRecipeLineRec@1100528930 : Record 11229789;
      RouteRefMgtCU@1100528913 : Codeunit 11012045;
      chrg0@1100528912 : Boolean;
      chrg1@1100528911 : Boolean;
      chrg2@1100528910 : Boolean;
      chrg3@1100528909 : Boolean;
      chrg4@1100528908 : Boolean;
      chrg5@1100528907 : Boolean;
      gFromReference@1100528906 : Boolean;
      RefQuote@1100528905 : Code[20];
      BufferMgt@1100528904 : Codeunit 11012230;
      ChangedCostAmountBOM@1100528903 : Decimal;
      ChangedSalesAmountBOM@1100525008 : Decimal;
      TotalPartCost@1100528902 : Decimal;
      TotalPartGross@1100528901 : Decimal;
      TotalPartSales@1100528900 : Decimal;
      Text000@1100528929 : TextConst 'ENU=Adding not allowed, Estimate is fixed.;NOR=Ikke tillatt † legge til, kalkylen er fast.;SVE=Till„gg „r inte till†tet, kalkylen „r fast.';
      Text001@1100528928 : TextConst 'ENU=Changing not allowed, Estimate is fixed.;NOR=Endring er ikke tillatt, kalkylen er fast.;SVE=Žndring „r inte till†tet, kalkylen „r fast.';
      Text002@1100528927 : TextConst 'ENU=Deleting not allowed, Estimate is fixed.;NOR=Fjerning er ikke tillatt, kalkylen er fast.;SVE=Borttagning „r inte till†ten, kalkylen „r fast.';
      Text009@1100528926 : TextConst 'ENU=Add Line first.;NOR=Legg til rad f›rst.;SVE=L„gg till rad f”rst.';
      Text010@1100528925 : TextConst 'ENU=Remove Zero Lines BOM ?;NOR=Vil du fjerne Null-rader i stykkliste?;SVE=Vill du ta bort nollrader i strukturen?';
      RecipeGroupEditable@1100528931 : Boolean INDATASET;
      RecipeEditable@1100528932 : Boolean INDATASET;
      SetCodeEditable@1100409000 : Boolean INDATASET;
      PlantTypeEditable@1100528933 : Boolean INDATASET;
      CostTypePriceEditable@1100525003 : Boolean INDATASET;
      CostTypeHoursEditable@1100525009 : Boolean INDATASET;
      ItemNoEditable@1100528934 : Boolean INDATASET;
      ManufacturerEditable@1100528935 : Boolean INDATASET;
      BasicItemEditable@1100528936 : Boolean INDATASET;
      VendorTradeItemEditable@1100528937 : Boolean INDATASET;
      TradeItemEditable@1100528938 : Boolean INDATASET;
      CostObjectLaborEditable@1100528939 : Boolean INDATASET;
      CostObjectPriceEditable@1100528940 : Boolean INDATASET;
      CodeEditable@1100528941 : Boolean INDATASET;
      TimeQuantityEditable@1100528942 : Boolean INDATASET;
      UnitOfTimeEditable@1100528943 : Boolean INDATASET;
      LWHEditable@1100525001 : Boolean INDATASET;
      QuantityEditable@1100528947 : Boolean INDATASET;
      OriginalQuantityEditable@1100528948 : Boolean INDATASET;
      UnitOfMeasureEditable@1100525002 : Boolean INDATASET;
      SurchargeTypeEditable@1100528949 : Boolean INDATASET;
      SurchargePercEditable@1100528950 : Boolean INDATASET;
      NormGroupEditable@1100528951 : Boolean INDATASET;
      SubOperationCodeEditable@1100528952 : Boolean INDATASET;
      NormEditable@1100528953 : Boolean INDATASET;
      ProductionRateEditable@1100528400 : Boolean INDATASET;
      GrossPriceEditable@1100528954 : Boolean INDATASET;
      PurchaseDiscountPercEditable@1100528956 : Boolean INDATASET;
      NetCostPriceEditable@1100528955 : Boolean INDATASET;
      RateCodeEditable@1100528958 : Boolean INDATASET;
      WageComponentEditable@1100528959 : Boolean INDATASET;
      DescriptionIndent@1100528957 : Integer INDATASET;
      EstimateManagementRTC@1100528960 : Codeunit 11130010;
      FixedOff@1100525000 : Boolean;
      SubPageEditable@1100525004 : Boolean INDATASET;
      UpdateMgt@1100525005 : Codeunit 11012229;
      ShowPartActions@1100525006 : Boolean INDATASET;
      ShowModelActions@1100525007 : Boolean INDATASET;
      DescriptionStyleExpr@1100529400 : Boolean INDATASET;
      SurchargeStyleExpr@1100529401 : Boolean INDATASET;
      NormStyleExpr@1100529402 : Boolean INDATASET;
      PriceStyleExpr@1100529403 : Boolean INDATASET;
      LinkedTradeItem@1100529600 : Record 11020466;
      TableLinkedTradeItemInLicense@1100525010 : Boolean;
      ScalingFactorEditable@1100527200 : Boolean;
      RentalEditable@1100527300 : Boolean INDATASET;
      LinkedRecipe@1100528914 : Boolean INDATASET;
      Text011@1100529501 : TextConst 'ENU=Select File..';

    PROCEDURE CopyEstimateRecipe@2();
    VAR
      EstLineRec@1100528900 : Record 11072072;
      CopyReport@1100528901 : Report 11012340;
    BEGIN
      //db, 19-05-14: name changed to skip tablefunction with same name
      EstLineRec := Rec;
      EstLineRec.SETRECFILTER;
      CopyReport.SETTABLEVIEW(EstLineRec);
      CopyReport.FillDefaults("Estimate No.","Sub-Estimate No.","Part Group",Part,"Line No.","Recipe Group",Recipe);
      CopyReport.RUNMODAL;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE SelectEntry@1100485001();
    BEGIN
      CopyEntry;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE SelectPartLines@1100485002();
    VAR
      CopyFrm@1100485000 : Page 11125326;
    BEGIN
      CopyFrm.FillDefaults("Estimate No.","Sub-Estimate No.","Part Group",Part,"Line No.");
      PartLineRec.SETRANGE("Part Group","Part Group");
      PartLineRec.SETRANGE(Part,Part);
      CopyFrm.SETTABLEVIEW(PartLineRec);
      CopyFrm.EDITABLE(FALSE);
      CopyFrm.RUNMODAL;

      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE CopyToBuffer@1210190005();
    BEGIN
      EstLineRec.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(EstLineRec);
      BufferMgt.CopyToBuffer(0,EstLineRec,RcpLineRec,PartLineRec,BaseRcpLineRec,SalesRecipeLineRec);
    END;

    PROCEDURE CopyFromBuffer@1210190006();
    BEGIN
      BufferMgt.CopyFromBuffer(0,Rec,RcpLineRec,PartLineRec,BaseRcpLineRec,SalesRecipeLineRec);
    END;

    PROCEDURE ShowBuffer@1210190007();
    BEGIN
      BufferMgt.ShowBuffer(0,Rec,RcpLineRec,PartLineRec,BaseRcpLineRec,SalesRecipeLineRec);
    END;

    PROCEDURE CheckEstEditable@3();
    VAR
      EstRec@11012000 : Record 11012151;
    BEGIN
      IF EstRec.GET("Estimate No.") THEN
        FixedOff := NOT EstRec.Fixed;
    END;

    PROCEDURE GenerateCharge@4();
    VAR
      EstimateLine@1100525000 : Record 11072072;
    BEGIN
      EstimateLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(EstimateLine);
      EstimateLine.CreateCharge;
      RecalcTotals;
    END;

    PROCEDURE RecalcTotals@5();
    BEGIN
      CurrPage.SAVERECORD;
      UpdateRecipeTotals;
      CheckIgnoreRecipeQuantity;
      CalculateTotals;
      CheckEstimateCharge;
      CurrPage.UPDATE(FALSE); //C027336
    END;

    PROCEDURE EditText@8(lvType@1210190000 : 'intern,extern');
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      IF "Line No." = 0 THEN
        ERROR(Text009);

      TextFrm.TextType(lvType);
      TextFrm.SetSelection(DATABASE::"Estimate Line","Estimate No.","Sub-Estimate No.",
        "Part Group",Part,'','',"Line No.",0);

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE HandleZeroLines@1210190002();
    BEGIN
      SetFilterZeroLinesByUser(Rec);  //C025240
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE GetFilterZeroLines@1210190003(lvRefresh@1210190000 : Boolean);
    BEGIN
      GetFilterZeroLinesByUser(Rec);  //C025240
      IF lvRefresh = TRUE THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ShowPurchRouteRef@1210190004();
    BEGIN
      RouteRefMgtCU.ShowReferenceList("Purchase Route Reference");
    END;

    PROCEDURE InitSelectionFromReference@1210190008(IEstLineNo@1210190000 : Integer);
    BEGIN
      gFromReference := TRUE;
      SETRANGE("Line No.", IEstLineNo);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE CopyModelQuan@1100485000();
    VAR
      CopyPage@11012000 : Page 11012259;
    BEGIN
      CopyPage.FillDefaults("Estimate No.","Sub-Estimate No.","Part Group",Part,'');
      CopyPage.StdDialogRunModal;  //C027729
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ExplodeRecipe@1210190009();
    VAR
      EstimateLine@1100525000 : Record 11072072;
    BEGIN
      EstimateLine.COPY(Rec);
      EstimateLine.SETFILTER(Recipe, '<>%1', '');
      EstimateLine.MARKEDONLY(TRUE);
      IF EstimateLine.ISEMPTY THEN
        EstimateLine.MARK(TRUE);
      IF EstimateLine.FINDSET THEN BEGIN
        REPEAT
          EstimateLine.ExplodeRecipe;
        UNTIL EstimateLine.NEXT = 0;
      END;
      CLEARMARKS;
    END;

    PROCEDURE ExplodeBOM@1100525000();
    VAR
      EstimateLine@1100525000 : Record 11072072;
    BEGIN
      EstimateLine.COPY(Rec);
      EstimateLine.MARKEDONLY(TRUE);
      IF EstimateLine.ISEMPTY THEN
        EstimateLine.MARK(TRUE);
      IF EstimateLine.FINDSET THEN BEGIN
        REPEAT
          ChangedCostAmountBOM := EstimateLine."Cost Amount";
          ChangedSalesAmountBOM := EstimateLine."Sales Amount";  //C028603
          CODEUNIT.RUN(CODEUNIT::"EstimateLine-Explode BOM",EstimateLine);
          UpgradeBOMAmountAfter(EstimateLine);
          COMMIT;
        UNTIL EstimateLine.NEXT = 0;
      END;
      CLEARMARKS;
    END;

    PROCEDURE EditCommentLines@1100525015();
    VAR
      UpdateMgt@1210190000 : Codeunit 11012229;
    BEGIN
      UpdateMgt.EditCommentLines("Estimate No.","Sub-Estimate No.","Part Group",Part,"Line No.",'','',0,0);  //DP00686
    END;

    PROCEDURE UpgradeBOMDiscount@1100525002();
    VAR
      EstimateLine@1100525000 : Record 11072072;
      ProcessBOMDiscount@1100525001 : Report 11012549;
    BEGIN
      EstimateLine.COPY(Rec);
      EstimateLine.SETRECFILTER;
      ProcessBOMDiscount.SetSelection(DATABASE::"Estimate Line");
      ProcessBOMDiscount.SetSelectionEstimate(EstimateLine,1);  //C028603: 1=cost, 2=sales
      ProcessBOMDiscount.SETTABLEVIEW(EstimateLine);
      ProcessBOMDiscount.RUNMODAL;
      CurrPage.UPDATE;
    END;

    PROCEDURE RemoveZeroLinesBOM@1100525003();
    VAR
      EstimateLine@1100525001 : Record 11072072;
      RemoveZeroLinesBOM@1100525002 : Report 11012358;
    BEGIN
      IF NOT CONFIRM(Text010,FALSE) THEN
        EXIT;

      EstimateLine.COPY(Rec);
      EstimateLine.MARKEDONLY(TRUE);
      IF EstimateLine.ISEMPTY THEN BEGIN
        EstimateLine.MARKEDONLY(FALSE);
        EstimateLine.SETRANGE("Line No.", "Line No.");
      END;
      IF EstimateLine.FINDSET THEN BEGIN
        REPEAT
          RemoveZeroLinesBOM.SetSelection(DATABASE::"Estimate Line");
          RemoveZeroLinesBOM.SetSelectionEstimate(EstimateLine);
          RemoveZeroLinesBOM.SETTABLEVIEW(EstimateLine);
          RemoveZeroLinesBOM.USEREQUESTPAGE(FALSE);
          RemoveZeroLinesBOM.RUNMODAL;
          COMMIT;
          CLEAR(RemoveZeroLinesBOM);
        UNTIL EstimateLine.NEXT = 0;
      END;
      CLEARMARKS;
    END;

    PROCEDURE UpgradeBOMAmount@1100525001();
    VAR
      EstimateLine@1100525002 : Record 11072072;
      ProcessBOMAmount@1100525001 : Report 11012359;
    BEGIN
      EstimateLine.COPY(Rec);
      EstimateLine.SETRECFILTER;
      ProcessBOMAmount.SetSelection(DATABASE::"Estimate Line");
      ProcessBOMAmount.SetSelectionEstimate(EstimateLine,1);  //C028603 : 1=cost, 2=sales
      ProcessBOMAmount.SETTABLEVIEW(EstimateLine);
      ProcessBOMAmount.RUNMODAL;
      CurrPage.UPDATE;
    END;

    PROCEDURE UpgradeBOMAmountAfter@1100525005(VAR EstimateLine2@1100525000 : Record 11072072);
    VAR
      EstimateLine@1100525002 : Record 11072072;
      ProcessBOMAmount@1100525001 : Report 11012359;
    BEGIN
      EstimateLine.COPY(EstimateLine2);
      EstimateLine.SETRECFILTER;
      ProcessBOMAmount.SetSelection(DATABASE::"Estimate Line");
      ProcessBOMAmount.SetSelectionEstimateAmount(EstimateLine,ChangedCostAmountBOM,ChangedSalesAmountBOM);  //C028603
      ProcessBOMAmount.SETTABLEVIEW(EstimateLine);
      ProcessBOMAmount.USEREQUESTPAGE(FALSE);
      ProcessBOMAmount.RUNMODAL;
      CurrPage.UPDATE;
    END;

    PROCEDURE EditDetailEstimateLine@1100528901();
    BEGIN
      IF Recipe <> '' THEN EXIT;
      PAGE.RUNMODAL(PAGE::"Estimate Line Card", Rec);
    END;

    PROCEDURE SortEstimateLines@1210190010(VAR EstLineSort@1100528900 : 'SubEst,Part,Item,TradeItem,CostObject,CodingSystem,Recipe');
    BEGIN
      //DP00260: Estimate Lines MF
      SortLines(Rec, EstLineSort);
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE SetFilterLines@1100528902(EstFilter@1100528901 : Text[1024];SubEstFilter@1100528902 : Text[1024];PartFilter@1100528903 : Text[1024];CurrEst@1100528904 : Code[20];CurrSubEst@1100528905 : Code[20];CurrPartGrp@1100528908 : Code[20];CurrPart@1100528906 : Code[20];ShowLines@1100528907 : 'All,CurrLine');
    BEGIN
      //DP00260: Estimate Lines MF
      IF ShowLines = ShowLines::All THEN BEGIN
        IF EstFilter = '' THEN
          SETFILTER("Estimate No.", '<>%1', '')
        ELSE
          SETFILTER("Estimate No.", EstFilter);
        SETFILTER("Sub-Estimate No.", SubEstFilter);
        SETRANGE("Part Group");
        SETFILTER(Part, PartFilter);
      END ELSE BEGIN
        SETRANGE("Estimate No.", CurrEst);
        SETRANGE("Sub-Estimate No.", CurrSubEst);
        SETRANGE("Part Group", CurrPartGrp);
        SETRANGE(Part, CurrPart);
      END;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetFilterPrintDoc@1100528903(lvAction@1100485000 : Integer);
    VAR
      EstPartRec@1100485002 : Record 11072073;
      PrintDoc@1100485001 : Codeunit 229;
    BEGIN
      EstPartRec."Estimate No." := "Estimate No.";
      EstPartRec."Sub-Estimate No." := "Sub-Estimate No.";
      EstPartRec."Part Group" := "Part Group";
      EstPartRec.Part := Part;
      PrintDoc.PrintEstimateNEW(EstPartRec, lvAction);
    END;

    PROCEDURE SetEditable@1100525500();
    BEGIN
      CheckEstEditable;

      SubPageEditable := FixedOff;
      RecipeGroupEditable := FixedOff;
      RecipeEditable := FixedOff;
      SetCodeEditable := FixedOff;
      PlantTypeEditable := FixedOff;
      CostTypePriceEditable := FixedOff;
      CostTypeHoursEditable := FixedOff;
      ItemNoEditable := FixedOff;
      ManufacturerEditable := FixedOff;
      BasicItemEditable := FixedOff;
      VendorTradeItemEditable := FixedOff;
      TradeItemEditable := FixedOff;
      CostObjectLaborEditable := FixedOff;
      CostObjectPriceEditable := FixedOff;
      CodeEditable := FixedOff;
      LWHEditable := FixedOff;
      TimeQuantityEditable := FixedOff;
      QuantityEditable := FixedOff;
      UnitOfMeasureEditable := FixedOff;
      SurchargeTypeEditable := FixedOff;
      SurchargePercEditable := FixedOff;
      NormGroupEditable := FixedOff;
      SubOperationCodeEditable := FixedOff;
      NormEditable := FixedOff;
      ProductionRateEditable := FixedOff;
      RateCodeEditable := FixedOff;
      WageComponentEditable := FixedOff;
      GrossPriceEditable := FixedOff;
      PurchaseDiscountPercEditable := FixedOff;
      NetCostPriceEditable := FixedOff;
      RentalEditable := FixedOff;

      IF FixedOff THEN BEGIN
        SubPageEditable := (Recipe <> '');
        RecipeGroupEditable := ("Surcharge Type" = "Surcharge Type"::" ");
        RecipeEditable := (("Basic Item" = '') AND ("Trade Item" = '') AND ("Item No." = '')
          AND ("Surcharge Type" = "Surcharge Type"::" "));
        SetCodeEditable := ((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" ")
          AND ("Item No." + "Basic Item" + "Trade Item" = '') AND ("Plant Type" = ''));
        PlantTypeEditable := ((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" ")
          AND ("Item No." + "Basic Item" + "Trade Item" = ''));
        ItemNoEditable := ((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
        ManufacturerEditable := ((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
        BasicItemEditable := ((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
        VendorTradeItemEditable := ((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
        TradeItemEditable := ((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
        CostObjectLaborEditable := (Recipe = '');
        CostObjectPriceEditable := (Recipe = '');
        CodeEditable := (Recipe='');
        LWHEditable := EnterQuantity(1);
        TimeQuantityEditable := ("Surcharge Type" = "Surcharge Type"::" ");
        QuantityEditable := EnterQuantity(2);
        SurchargeTypeEditable := (Recipe + "Item No." + "Basic Item" + "Trade Item" = '');
        SurchargePercEditable := ("Surcharge Type" <> "Surcharge Type"::" ");
        NormGroupEditable := (Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" ");
        SubOperationCodeEditable := (Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" ");
        NormEditable := ((Recipe = '') AND ("Sub Operation Code" = '') AND
          ("Surcharge Type" = "Surcharge Type"::" ") AND ("Rate Code" <> '')) OR
          ("Cost Type (Hours)"="Cost Type (Hours)"::Subcontracting) OR
          ("Cost Type (Hours)"="Cost Type (Hours)"::Plant);
        ProductionRateEditable := NormEditable OR (Recipe <> '');
        RateCodeEditable := (Recipe='') AND
          ("Cost Type (Hours)"="Cost Type (Hours)"::Labor);  //DP01047
        WageComponentEditable := ((Recipe = '') AND
          ("Surcharge Type" = "Surcharge Type"::" ") AND ("Rate Code" <> ''));
        GrossPriceEditable := (Recipe='') AND ("Surcharge Type" = "Surcharge Type"::" ");
        PurchaseDiscountPercEditable := (Recipe='') AND ("Surcharge Type" = "Surcharge Type"::" ");
        NetCostPriceEditable := (Recipe='') AND ("Surcharge Type" = "Surcharge Type"::" ");
        RentalEditable := (Recipe = '');
        IF ("Cost Type (Price)" = "Cost Type (Price)"::Plant) OR
           ("Cost Type (Price)" = "Cost Type (Price)"::Subcontracting) THEN
          RateCodeEditable := FALSE;  //C061168
      END;
    END;

    PROCEDURE InitEditable@1100525004();
    BEGIN
      SubPageEditable := TRUE;
      RecipeGroupEditable := TRUE;
      RecipeEditable := TRUE;
      SetCodeEditable := TRUE;
      PlantTypeEditable := TRUE;
      CostTypePriceEditable := TRUE;
      CostTypeHoursEditable := TRUE;
      ItemNoEditable := TRUE;
      ManufacturerEditable := TRUE;
      BasicItemEditable := TRUE;
      VendorTradeItemEditable := TRUE;
      TradeItemEditable := TRUE;
      CostObjectLaborEditable := TRUE;
      CostObjectPriceEditable := TRUE;
      CodeEditable := TRUE;
      LWHEditable := TRUE;
      TimeQuantityEditable := TRUE;
      UnitOfTimeEditable := TRUE;
      QuantityEditable := TRUE;
      OriginalQuantityEditable := TRUE;
      UnitOfMeasureEditable := TRUE;
      SurchargeTypeEditable := TRUE;
      SurchargePercEditable := TRUE;
      NormGroupEditable := TRUE;
      SubOperationCodeEditable := TRUE;
      NormEditable := TRUE;
      ProductionRateEditable := TRUE;
      RateCodeEditable := TRUE;
      WageComponentEditable := TRUE;
      GrossPriceEditable := TRUE;
      PurchaseDiscountPercEditable := TRUE;
      NetCostPriceEditable := TRUE;
      ScalingFactorEditable := TRUE;
    END;

    PROCEDURE ApplyFilterLineEstimate@1100409000(iEst@1100409002 : Code[20];iSubEst@1100409000 : Code[250];iPart@1100409001 : Code[250]);
    BEGIN
      SETRANGE("Estimate No.", iEst);
      SETFILTER("Sub-Estimate No.", iSubEst);
      SETFILTER(Part, iPart);
      CurrPage.UPDATE;
    END;

    PROCEDURE InsertPlantCostLines@1100409002();
    VAR
      Rec2@1100525000 : Record 11072072;
      EstimatePlantMgt@1100409000 : Codeunit 11012232;
    BEGIN
      Rec2.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(Rec2);
      Rec2.SETFILTER(Rec2."Plant Type",'<>%1','');

      EstimatePlantMgt.SkipQuestion;  //db, 04-02-19
      IF EstimatePlantMgt.InsPltCostItmLinesToEstLine(Rec2) THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ExplodeSetLines@1100409001();
    VAR
      Rec2@1100525000 : Record 11072072;
      EstimatePlantMgt@1100409000 : Codeunit 11012232;
    BEGIN
      Rec2.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(Rec2);
      Rec2.SETFILTER(Rec2."Set Code",'<>%1','');

      EstimatePlantMgt.SkipQuestion;  //db, 04-02-19
      IF EstimatePlantMgt.ExplodeSetLinesToEstLine(Rec2) THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ValidateRecipe@6();
    VAR
      RecipeLineRec@11012001 : Record 11072075;
    BEGIN
      //db, 12-02-15: due to problems with AutoSplitKey (Linenumber not yet filled when RecipeCode is validated in sourcetable), force CopyRecipe
      IF Recipe = '' THEN EXIT;

      RecipeLineRec.SETRANGE("Estimate No.", "Estimate No.");
      RecipeLineRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
      RecipeLineRec.SETRANGE("Part Group", "Part Group");
      RecipeLineRec.SETRANGE(Part, Part);
      RecipeLineRec.SETRANGE("Estimate Line", "Line No.");
      IF RecipeLineRec.FINDFIRST THEN EXIT;

      IF RecipeRec.GET("Recipe Group",Recipe) THEN
        CopyRecipe;

      //DP02082.sn
      EstRec.GET("Estimate No.");
      IF EstRec."Apply Linked Recipe" THEN
        VALIDATE("Linked Recipe", EstRec."Apply Linked Recipe");
      //DP02082.en
    END;

    PROCEDURE GetDataCaptionEstPart@1100528000() : Text[250];
    VAR
      EstimatePart@1100528000 : Record 11072073;
    BEGIN
      IF NOT EstimatePart.GET("Estimate No.", "Sub-Estimate No.", "Part Group", Part) THEN EstimatePart.INIT;
      EXIT(EstimatePart.GetDataCaption);
    END;

    PROCEDURE ShowOfferAmount@1100525006();
    VAR
      EstPartRec@1100525000 : Record 11072073;
    BEGIN
      EstPartRec.SETRANGE("Estimate No.","Estimate No.");
      EstPartRec."Estimate No." := "Estimate No.";
      EstPartRec."Sub-Estimate No." := "Sub-Estimate No.";
      EstPartRec."Part Group" := "Part Group";
      EstPartRec.Part := Part;
      PAGE.RUNMODAL(PAGE::"Estimate Offer Amount",EstPartRec);
    END;

    LOCAL PROCEDURE CheckFiltergroup4@1100525007();
    BEGIN
      //db, 09-06-15:
      //if column added or removed on SubPage (RecipeLine or CommentLine) mainpage (EstimateLine) is opened again without keyfields in filtergroup 4
      //this filter is set by codeunit 11130010 (Estimate Management RTC) and called from Estimate Part or Index
      //regular SubPageLink is ignored due to functions GetNext/PreviousPart
      FILTERGROUP(4);
      IF GETFILTER("Estimate No.") = '' THEN BEGIN
        SETFILTER("Estimate No.", "Estimate No.");
        SETFILTER("Sub-Estimate No.", "Sub-Estimate No.");
        SETFILTER("Part Group", "Part Group");
        SETFILTER(Part, Part);
      END;
      FILTERGROUP(0);
    END;

    LOCAL PROCEDURE CheckEditableDimensionOrScaling@1100527211();
    BEGIN
      IF (Length <> 0) OR
        (Width <> 0) OR
        (Height <> 0)
        THEN BEGIN
          ScalingFactorEditable := FALSE;
          LWHEditable := TRUE;
          EXIT;
        END;

      IF "Scaling Factor" <> 0 THEN BEGIN
        LWHEditable := FALSE;
        ScalingFactorEditable := TRUE;
        EXIT;
      END
      ELSE BEGIN
        ScalingFactorEditable := TRUE;
        LWHEditable := TRUE;
      END;
    END;

    LOCAL PROCEDURE OnBeforeLookup@1100527000();
    BEGIN
      xRec := Rec;  //C046148: avoid problem with CurrPage.SAVERECORD by RecalcTotals
    END;

    BEGIN
    END.
  }
}

