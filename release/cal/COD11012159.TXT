OBJECT Codeunit 11012159 Pull-Poll Mgt (FSA)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      FSASetupRec@1100485000 : Record 11012138;
      ImportExportMgtCU@1100485002 : Codeunit 11012090;

    PROCEDURE PullPollProcess@1100485004(VAR VarFSAExchangeProcessRec@1100485019 : Record 11012138);
    VAR
      lvEmplRec@1100485002 : Record 5200;
      lvCustRec@1100485020 : Record 18;
      lvItemRec@1100485000 : Record 27;
      lvServLocRec@1100485021 : Record 11012801;
      lvServOrderRec@1100485001 : Record 11012823;
      lvUnitRec@1100485014 : Record 204;
      lvDimValCostObjectRec@1100485013 : Record 349;
      lvDimValCostCentreRec@1100485022 : Record 349;
      lvCostCompRec@1100485011 : Record 11012012;
      lvServOrderKindRec@1100485010 : Record 11012837;
      lvServOrderTypeRec@1100485009 : Record 11012837;
      lvServProblemRec@1100485008 : Record 11012842;
      lvServCauseRec@1100485007 : Record 11012842;
      lvServSolutionRec@1100485006 : Record 11012842;
      lvDisciplineRec@1100485005 : Record 11020204;
      lvTradeSpecRec@1100485004 : Record 11020285;
      lvTradeExpRec@1100485003 : Record 11020286;
      lvWageCompRec@1100485017 : Record 11012014;
      lvCostCodeRec@1100485016 : Record 11012083;
      lvRefPointRec@1100485015 : Record 11020271;
      lvDebriefTextRubricRec@1100485012 : Record 11012885;
      lvTradeAssRec@1100485024 : Record 11012015;
      lvTerritoryRec@1100485023 : Record 286;
    BEGIN
      FSASetupRec.GET('');

      IF ((FSASetupRec."Automatic Exchange on" = FSASetupRec."Automatic Exchange on"::Client) AND
          (VarFSAExchangeProcessRec."Primary Key" <> 'LOCK')) OR
         ((FSASetupRec."Automatic Exchange on" = FSASetupRec."Automatic Exchange on"::NAS) AND
          (VarFSAExchangeProcessRec."Primary Key" <> 'NAS'))
      THEN
        EXIT;

      VarFSAExchangeProcessRec.FIND;
      //* Ook al wordt er niets geexporteerd/geimporteerd dan toch deze datum/tijd bijwerken.
      VarFSAExchangeProcessRec."Autmatic Exchange Last Active" := CURRENTDATETIME;
      VarFSAExchangeProcessRec.MODIFY;
      COMMIT;

      //* EXPORT
      IF (FSASetupRec."Time Interval Reference Data" > 0) THEN BEGIN
        IF (GetSinceSeconds(VarFSAExchangeProcessRec."Last Interval Check Ref. Data") >=
            GetIntervalSeconds(FSASetupRec."Time Interval Reference Data", FSASetupRec."Interval Unit Reference Data"))
        THEN BEGIN
          lvUnitRec.SETRANGE("Export to FSA", TRUE);
          lvDimValCostObjectRec.SETRANGE("Export to FSA", TRUE);
          lvDimValCostCentreRec.SETRANGE("Export to FSA", TRUE);
          lvCostCompRec.SETRANGE("Export to FSA", TRUE);
          lvServOrderKindRec.SETRANGE("Export to FSA", TRUE);
          lvServOrderTypeRec.SETRANGE("Export to FSA", TRUE);
          lvServProblemRec.SETRANGE("Export to FSA", TRUE);
          lvServCauseRec.SETRANGE("Export to FSA", TRUE);
          lvServSolutionRec.SETRANGE("Export to FSA", TRUE);
          lvDisciplineRec.SETRANGE("Export to FSA", TRUE);
          lvTradeSpecRec.SETRANGE("Export to FSA", TRUE);
          lvTradeExpRec.SETRANGE("Export to FSA", TRUE);
          lvWageCompRec.SETRANGE("Export to FSA", TRUE);
          lvCostCodeRec.SETRANGE("Export to FSA", TRUE);
          lvRefPointRec.SETRANGE("Export to FSA", TRUE);
          lvDebriefTextRubricRec.SETRANGE("Export to FSA", TRUE);
          lvTradeAssRec.SETRANGE("Export to FSA", TRUE);
          lvTerritoryRec.SETRANGE("Export to FSA", TRUE);
          ImportExportMgtCU.ExportReferenceData(
            lvUnitRec,
            lvDimValCostObjectRec,
            lvDimValCostCentreRec,
            lvCostCompRec,
            lvServOrderKindRec,
            lvServOrderTypeRec,
            lvServProblemRec,
            lvServCauseRec,
            lvServSolutionRec,
            lvDisciplineRec,
            lvTradeSpecRec,
            lvTradeExpRec,
            lvWageCompRec,
            lvCostCodeRec,
            lvRefPointRec,
            lvDebriefTextRubricRec,
            lvTradeAssRec,
            lvTerritoryRec
            );
          COMMIT;
          //
          VarFSAExchangeProcessRec.FIND;
          VarFSAExchangeProcessRec."Last Interval Check Ref. Data" := CURRENTDATETIME;
          VarFSAExchangeProcessRec."Autmatic Exchange Last Active" := CURRENTDATETIME;
          VarFSAExchangeProcessRec.MODIFY;
          COMMIT;
        END;
      END;

      IF (FSASetupRec."Time Interval Employees" > 0) THEN BEGIN
        IF (GetSinceSeconds(VarFSAExchangeProcessRec."Last Interval Check Employees") >=
            GetIntervalSeconds(FSASetupRec."Time Interval Employees", FSASetupRec."Interval Unit Employees"))
        THEN BEGIN
          lvEmplRec.SETRANGE("Export to FSA", TRUE);
          ImportExportMgtCU.ExportEmployees(lvEmplRec);
          COMMIT;
          //
          IF FSASetupRec."Field Service Administration" = FSASetupRec."Field Service Administration"::Nemo THEN BEGIN
            lvCustRec.SETRANGE("Export to FSA", TRUE);
            ImportExportMgtCU.ExportCustomers(lvCustRec);
            COMMIT;
            //
            lvItemRec.SETRANGE("Export to FSA", TRUE);
            ImportExportMgtCU.ExportItems(lvItemRec);
            COMMIT;
            //
            lvServLocRec.SETRANGE("Export to FSA", TRUE);
            ImportExportMgtCU.ExportServiceLocations(lvServLocRec);
            COMMIT;
          END;
          //
          VarFSAExchangeProcessRec.FIND;
          VarFSAExchangeProcessRec."Last Interval Check Employees" := CURRENTDATETIME;
          VarFSAExchangeProcessRec."Autmatic Exchange Last Active" := CURRENTDATETIME;
          VarFSAExchangeProcessRec.MODIFY;
          COMMIT;
        END;
      END;

      IF (FSASetupRec."Time Interval Service Orders" > 0) THEN BEGIN
        IF (GetSinceSeconds(VarFSAExchangeProcessRec."Last Interval Check Sv.Orders") >=
            GetIntervalSeconds(FSASetupRec."Time Interval Service Orders", FSASetupRec."Interval Unit Service Orders"))
        THEN BEGIN
          lvServOrderRec.SETRANGE("Export to FSA", TRUE);
          ImportExportMgtCU.ExportServiceOrders(lvServOrderRec);
          COMMIT;
          //
          VarFSAExchangeProcessRec.FIND;
          VarFSAExchangeProcessRec."Last Interval Check Sv.Orders" := CURRENTDATETIME;
          VarFSAExchangeProcessRec."Autmatic Exchange Last Active" := CURRENTDATETIME;
          VarFSAExchangeProcessRec.MODIFY;
          COMMIT;
        END;
      END;


      //* IMPORT
      IF (FSASetupRec."Time Interval Debrief" > 0) THEN BEGIN
        IF (GetSinceSeconds(VarFSAExchangeProcessRec."Last Interval Check Debrief") >=
            GetIntervalSeconds(FSASetupRec."Time Interval Debrief", FSASetupRec."Interval Unit Debrief"))
        THEN BEGIN
          ImportExportMgtCU.ProcessImportPresentFiles();
          //
          VarFSAExchangeProcessRec.FIND;
          VarFSAExchangeProcessRec."Last Interval Check Debrief" := CURRENTDATETIME;
          VarFSAExchangeProcessRec."Autmatic Exchange Last Active" := CURRENTDATETIME;
          VarFSAExchangeProcessRec.MODIFY;
          COMMIT;
        END;
      END;
    END;

    PROCEDURE GetIntervalSeconds@1100485000(ITimeInterval@1100485000 : Integer;ITimeUnit@1100485001 : Option) : Decimal;
    BEGIN
      CASE ITimeUnit OF
        FSASetupRec."Interval Unit Employees"::Hour: EXIT(ITimeInterval * 3600);
        FSASetupRec."Interval Unit Employees"::Minute: EXIT(ITimeInterval * 60);
      END;
    END;

    PROCEDURE GetSinceSeconds@1100485003(ILastDateTime@1100485000 : DateTime) : Decimal;
    BEGIN
      EXIT((CURRENTDATETIME - ILastDateTime) / 1000);
    END;

    BEGIN
    END.
  }
}

