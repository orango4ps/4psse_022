OBJECT Table 11130031 App User
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    CaptionML=ENU=App User;
  }
  FIELDS
  {
    { 20  ;   ;Username            ;Code20        ;CaptionML=[ENU=Username;
                                                              NOR=Brukernavn;
                                                              SVE=Anv„ndarnamn] }
    { 30  ;   ;Password            ;Text250       ;OnValidate=VAR
                                                                EncryptionMgt@1100528000 : Codeunit 11012367;
                                                              BEGIN
                                                                IF (Password = '') THEN
                                                                  EXIT;
                                                                Password := EncryptionMgt.CalculateStringMD5(Password);
                                                              END;

                                                   ExtendedDatatype=Masked;
                                                   CaptionML=[ENU=Password;
                                                              NOR=Passord;
                                                              SVE=L”senord] }
    { 35  ;   ;Active              ;Boolean       ;OnValidate=BEGIN
                                                                // TODO.djnieuwenhuizen: needs fixing when general usermanagement is refactored.
                                                                // IF Active THEN BEGIN
                                                                //  LicenseManagement.CheckUsersWithLicenseFSA(TRUE);
                                                                //  ResourceWOP.ActivateFsForAppUser("Resource No.");
                                                                // END ELSE
                                                                //  ResourceWOP.DeActivateFsForResourceWOP("Resource No.");
                                                              END;

                                                   CaptionML=[ENU=Active;
                                                              NOR=Aktiv;
                                                              SVE=Aktiv] }
    { 40  ;   ;Resource No.        ;Code20        ;TableRelation="Resource (WOP)".No.;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Active, FALSE);

                                                                IF ("Resource No." <> xRec."Resource No.") THEN
                                                                  "Employee No." := GetEmployeeNoFromResource("Resource No.");

                                                                CALCFIELDS("Resource Company", "Resource Name");
                                                              END;

                                                   ValidateTableRelation=Yes;
                                                   TestTableRelation=Yes;
                                                   CaptionML=[ENU=Resource No.;
                                                              NOR=Ressursnr.;
                                                              SVE=Resursnr] }
    { 50  ;   ;Resource Company    ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Resource (WOP)".Company WHERE (No.=FIELD(Resource No.)));
                                                   CaptionML=[ENU=Resource Company;
                                                              SVE=F”retag resurs];
                                                   Editable=No }
    { 60  ;   ;Resource Name       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Resource (WOP)".Name WHERE (No.=FIELD(Resource No.)));
                                                   CaptionML=[ENU=Resource Name;
                                                              NOR=Ressursnavn;
                                                              SVE=Resursnamn];
                                                   Editable=No }
    { 100 ;   ;Inventory Order Method;Option      ;CaptionML=ENU=Inventory Order Method;
                                                   OptionCaptionML=ENU=From Location,Purchase Order,Both;
                                                   OptionString=From Location,Purchase Order,Both }
    { 110 ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   OnValidate=VAR
                                                                CalculatedEmployeeNo@1100528000 : Code[20];
                                                              BEGIN
                                                                CalculatedEmployeeNo := GetEmployeeNoFromResource("Resource No.");
                                                                IF CalculatedEmployeeNo <> '' THEN
                                                                  TESTFIELD("Employee No.", CalculatedEmployeeNo);
                                                              END;

                                                   CaptionML=[ENU=Employee No.;
                                                              NOR=Ansattnr;
                                                              SVE=Anst„llningsnr] }
  }
  KEYS
  {
    {    ;Username                                ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528100 : TextConst 'ENU=Login details for the %1';
      MailTemplateManagement@1100528302 : Codeunit 11012622;
      MailTemplateNo@1100528300 : Integer;
      Application@1100528000 : 'FSA,PLA,CCA';
      Text001@1100528001 : TextConst 'ENU=field service app';
      Text002@1100528002 : TextConst 'ENU=plant app';
      Text003@1100527200 : TextConst 'ENU=civil construction app';
      Text004@1100528301 : TextConst 'ENU=Application %1 not defined.';

    PROCEDURE GetPlanGroupSetupCompany@1100528000() : Text[30];
    VAR
      CompanyPlanGroup@1100528000 : Record 11229300;
    BEGIN
      CALCFIELDS("Resource Company");
      TESTFIELD("Resource No.");
      TESTFIELD("Resource Company");
      EXIT(CompanyPlanGroup.GetSetupCompanyOfPlanGroupOfCompany("Resource Company"));
    END;

    PROCEDURE SendEmail@1100528101(App@1100528000 : Option);
    VAR
      MailTemplate@1100528300 : Record 11229450;
      Language@1100528302 : Record 8;
      MailTemplateManagement@1100528303 : Codeunit 11012622;
      AppName@1100528001 : Text;
      SubjectText@1100528301 : Text;
      BodyText@1100528100 : Text;
      EmailAdressReceiver@1100528101 : Text[80];
      SMTPMail@1100528102 : Codeunit 400;
      SaveLanguageId@1100528305 : Integer;
    BEGIN
      MailTemplateNo := 0;
      CASE App OF
        Application::PLA :
          BEGIN
            MailTemplateNo := 67;
            AppName := Text002;
          END;
          Application::CCA :
          BEGIN
            MailTemplateNo := 72;
            AppName := Text003;
          END;
        ELSE ERROR(Text004, App);
      END;

      Language.SETRANGE("Windows Language ID", GLOBALLANGUAGE);
      Language.FINDFIRST;
      MailTemplateManagement.GetMailTemplate(MailTemplate, MailTemplateNo, '');

      MailTemplateManagement.GetLayoutTextSubstitutedSubjectAndTotalBody(MailTemplateNo, Language.Code, Rec, SubjectText, BodyText);

      SaveLanguageId := GLOBALLANGUAGE;
      GLOBALLANGUAGE(WINDOWSLANGUAGE);
      IF (NOT MailTemplate."Use Mail Template Subject Text") THEN
        SubjectText := STRSUBSTNO(Text000, AppName);
      GLOBALLANGUAGE(SaveLanguageId);

      EmailAdressReceiver := GetEmailAdress;
      SMTPMail.CreateMessage(MailTemplate."From Name", MailTemplate.From, EmailAdressReceiver, SubjectText, BodyText, TRUE);
      SMTPMail.Send;
    END;

    LOCAL PROCEDURE GetEmailAdress@1100528103() : Text[80];
    VAR
      ResourceWOP@1100528101 : Record 11229278;
      Employee@1100528100 : Record 5200;
    BEGIN
      IF "Resource No." <> '' THEN BEGIN
        IF ResourceWOP.GET("Resource No.") THEN BEGIN
          IF ResourceWOP.Company <> COMPANYNAME THEN
            Employee.CHANGECOMPANY(ResourceWOP.Company);
          IF Employee.GET(ResourceWOP."Source No.") THEN BEGIN
            EXIT(Employee."Company E-Mail");
          END;
        END;
      END;
    END;

    PROCEDURE GetPLAProxyUrlAndroid@1100528104() : Text;
    BEGIN
      EXIT(CreatePLAProxyUrl('https://pla.4ps.nl/login?username=%1&proxy=%2'));
    END;

    PROCEDURE GetPLAProxyUrl@1100528105() : Text;
    BEGIN
      EXIT(CreatePLAProxyUrl('fps.pla://login?username=%1&proxy=%2'));
    END;

    LOCAL PROCEDURE CreatePLAProxyUrl@1100528102(UrlPlaceholder@1100528102 : Text) : Text;
    VAR
      HttpUtility@1100528101 : DotNet "'System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Web.HttpUtility";
      PlantAppSetup@1100528100 : Record 11124924;
      Url@1100528103 : Text;
    BEGIN
      PlantAppSetup.GET;
      PlantAppSetup.TESTFIELD("Proxy URL");

      Url := STRSUBSTNO(UrlPlaceholder, Username, HttpUtility.UrlEncode(PlantAppSetup."Proxy URL"));
      EXIT(Url);
    END;

    PROCEDURE GetCCAProxyUrlAndroid@1100527200() : Text;
    BEGIN
      EXIT(CreateCCAProxyUrl('https://cca.4ps.nl/login?username=%1&proxy=%2'));
    END;

    PROCEDURE GetCCAProxyUrl@1100527201() : Text;
    BEGIN
      EXIT(CreateCCAProxyUrl('fps.cca://login?username=%1&proxy=%2'));
    END;

    LOCAL PROCEDURE CreateCCAProxyUrl@1100527203(UrlPlaceholder@1100528102 : Text) : Text;
    VAR
      HttpUtility@1100528101 : DotNet "'System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Web.HttpUtility";
      CCAAppSetup@1100528100 : Record 11128520;
      Url@1100528103 : Text;
    BEGIN
      CCAAppSetup.GET;
      CCAAppSetup.TESTFIELD("Proxy URL");

      Url := STRSUBSTNO(UrlPlaceholder, Username, HttpUtility.UrlEncode(CCAAppSetup."Proxy URL"));
      EXIT(Url);
    END;

    LOCAL PROCEDURE LineBreak@1100525000() : Text;
    VAR
      CRLF@1100525000 : Text[2];
    BEGIN
      CRLF[1] := 13;
      CRLF[2] := 10;
      EXIT(CRLF);
    END;

    PROCEDURE CheckIfResourceIsNotYetAssigned@1100528100();
    BEGIN
      IF "Resource No." = '' THEN
        EXIT;

      //ResourceWOP.CheckIfFsaUserResourceIsNotYetAssigned(Rec);
    END;

    LOCAL PROCEDURE GetEmployeeNoFromResource@1100528001(ResourceNo@1100528000 : Code[20]) EmployeeNo : Code[20];
    VAR
      ResourceWOP@1100528001 : Record 11229278;
    BEGIN
      EmployeeNo := '';

      IF ResourceNo = '' THEN
        EXIT;

      IF ResourceWOP.GET(ResourceNo) THEN
        IF ResourceWOP.Type = ResourceWOP.Type::Employee THEN
          EmployeeNo := ResourceWOP."Source No.";
    END;

    BEGIN
    END.
  }
}

