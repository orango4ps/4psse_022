OBJECT Table 823 Name/Value Buffer
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    ReplicateData=No;
    CaptionML=[ENU=Name/Value Buffer;
               NOR=Buffer for navn/verdi;
               SVE=Namn/v„rde-buffert];
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;Integer       ;AutoIncrement=Yes;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=ID;
                                                              NOR=ID;
                                                              SVE=ID] }
    { 2   ;   ;Name                ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Name;
                                                              NOR=Navn;
                                                              SVE=Namn] }
    { 3   ;   ;Value               ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Value;
                                                              NOR=Verdi;
                                                              SVE=V„rde] }
    { 4   ;   ;Value BLOB          ;BLOB          ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Value BLOB;
                                                              NOR=Verdi-BLOB] }
    { 5   ;   ;Value Long          ;Text2048      ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Value Long;
                                                              NOR=Lang verdi] }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Name                                     }
    { 2   ;Brick               ;Name,Value                               }
  }
  CODE
  {
    VAR
      TemporaryErr@1000 : TextConst 'ENU=The record must be temporary.;NOR=Posten m† v‘re midlertidig.;SVE=Posten m†ste vara tempor„r.';

    [External]
    PROCEDURE AddNewEntry@1001(NewName@1000 : Text[250];NewValue@1001 : Text);
    VAR
      NewID@1002 : Integer;
    BEGIN
      IF NOT ISTEMPORARY THEN
        ERROR(TemporaryErr);

      CLEAR(Rec);

      NewID := 1;
      IF FINDLAST THEN
        NewID := ID + 1;

      ID := NewID;
      Name := NewName;
      SetValueWithoutModifying(NewValue);

      INSERT(TRUE);
    END;

    [External]
    PROCEDURE GetValue@22() : Text;
    VAR
      TempBlob@1001 : Record 99008535;
      CR@1002 : Text[1];
    BEGIN
      IF NOT "Value BLOB".HASVALUE THEN
        EXIT(Value);
      CR[1] := 10;
      CALCFIELDS("Value BLOB");
      TempBlob.Blob := "Value BLOB";
      EXIT(TempBlob.ReadAsText(CR,TEXTENCODING::Windows));
    END;

    [External]
    PROCEDURE SetValue@24(NewValue@1000 : Text);
    BEGIN
      SetValueWithoutModifying(NewValue);
      MODIFY;
    END;

    [External]
    PROCEDURE SetValueWithoutModifying@25(NewValue@1000 : Text);
    VAR
      TempBlob@1001 : Record 99008535;
    BEGIN
      CLEAR("Value BLOB");
      Value := COPYSTR(NewValue,1,MAXSTRLEN(Value));
      IF STRLEN(NewValue) <= MAXSTRLEN(Value) THEN
        EXIT; // No need to store anything in the blob
      IF NewValue = '' THEN
        EXIT;
      TempBlob.WriteAsText(NewValue,TEXTENCODING::Windows);
      "Value BLOB" := TempBlob.Blob;
    END;

    BEGIN
    END.
  }
}

