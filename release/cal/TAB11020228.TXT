OBJECT Table 11020228 Hour Set Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Hour Set Line;
               NOR=Time Still inn Rad;
               SVE=Rad f”r timmall];
  }
  FIELDS
  {
    { 10  ;   ;Hour Set            ;Code10        ;TableRelation="Hour Set";
                                                   CaptionML=[ENU=Hour Set;
                                                              NOR=Timemal;
                                                              SVE=Timmall] }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 30  ;   ;Supplying Company   ;Text30        ;TableRelation=Company;
                                                   OnValidate=VAR
                                                                ICLicenceCu@1100485000 : Codeunit 11012780;
                                                              BEGIN
                                                                IF "Supplying Company" <> '' THEN
                                                                  ICLicenceCu.CheckICEntry("Supplying Company");
                                                              END;

                                                   CaptionML=[ENU=Supplying Company;
                                                              NOR=Leverende  selskap;
                                                              SVE=Levererande f”retag] }
    { 40  ;   ;Employee No.        ;Code20        ;TableRelation=IF (Supplying Company=FILTER('')) Employee;
                                                   OnValidate=BEGIN
                                                                IF "Employee No." <> '' THEN BEGIN
                                                                  EmplRec.CHANGECOMPANY("Supplying Company");
                                                                  EmplRec.GET("Employee No.");
                                                                  Element := EmplRec.Element;
                                                                  IF EmplRec."Global Dimension 2 Code" <> '' THEN
                                                                    VALIDATE("Cost Object", EmplRec."Global Dimension 2 Code");
                                                                END;
                                                                CALCFIELDS("Full Name");
                                                                EmplNameOtherCompany;
                                                              END;

                                                   OnLookup=BEGIN
                                                              EmplRec.CHANGECOMPANY("Supplying Company");
                                                              EmplRec."No." := "Employee No.";
                                                              IF PAGE.RUNMODAL(0, EmplRec) = ACTION::LookupOK THEN
                                                                VALIDATE("Employee No.", EmplRec."No.");
                                                            END;

                                                   CaptionML=[ENU=Employee No.;
                                                              NOR=Ansattnr;
                                                              SVE=Anst„llningsnr] }
    { 45  ;   ;Full Name           ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Employee No.)));
                                                   CaptionML=[ENU=Employee Name;
                                                              NOR=Navn p† ansatt;
                                                              SVE=Namn p† anst„lld];
                                                   Editable=No }
    { 50  ;   ;Element             ;Code20        ;TableRelation="Base Element";
                                                   OnValidate=VAR
                                                                ElemRec@1210190006 : Record 11012060;
                                                                ElementFormat@1210190005 : Codeunit 11012022;
                                                              BEGIN
                                                                ElementFormat.FormatElem(Element,2,'');
                                                                IF Element <> '' THEN
                                                                  ElemRec.GET(Element);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 60  ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Cost Type=FILTER(<Revenue),
                                                                                               Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                IF "Cost Object" = '' THEN
                                                                  EXIT;

                                                                DimMgt.GetDimValueRec(2, "Cost Object", DimValRec, TRUE, '');
                                                                DimValRec.TESTFIELD(Blocked, FALSE);
                                                                "Cost Type" := DimValRec."Cost Type";

                                                                IF (DimValRec."Wage Component" <> '') AND ("Wage Component" <> DimValRec."Wage Component") THEN
                                                                  VALIDATE("Wage Component", DimValRec."Wage Component");
                                                                IF DimValRec.Element <> '' THEN
                                                                  VALIDATE(Element, DimValRec.Element);

                                                                CheckCostType;
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 70  ;   ;Cost Type           ;Option        ;CaptionML=[ENU=Cost Type;
                                                              NOR=Kostnadstype;
                                                              SVE=Kostnadstyp];
                                                   OptionCaptionML=[ENU=Labor,Material,Subcontracting,Plant,Sundry,Revenue;
                                                                    NOR=Arbeidskraft,Materiale,Underentrepen›r,Maskin,Diverse,Inntekt;
                                                                    SVE=Arbetskraft,Material,Underentreprenad,Maskin,Diverse,Int„kt];
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry,Revenue }
    { 80  ;   ;Wage Component      ;Code10        ;TableRelation="Wage Component".Code WHERE (Component Type=FILTER(Hours|Expenses));
                                                   OnValidate=BEGIN
                                                                CheckCostType;
                                                              END;

                                                   CaptionML=[ENU=Wage Component;
                                                              NOR=L›nnsart;
                                                              SVE=L”neart] }
    { 90  ;   ;Component Type      ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Wage Component"."Component Type" WHERE (Code=FIELD(Wage Component)));
                                                   CaptionML=[ENU=Component Type;
                                                              NOR=Komponenttype;
                                                              SVE=Komponenttyp];
                                                   OptionCaptionML=[ENU=Hours,Days,Expenses;
                                                                    NOR=Timer,dager,Utgifter;
                                                                    SVE=Timmar,dagar,utgifter];
                                                   OptionString=Hours,Days,Expenses;
                                                   Editable=No }
    { 100 ;   ;Comment             ;Text100       ;CaptionML=[ENU=Comment;
                                                              NOR=Kommentar;
                                                              SVE=Kommentar] }
    { 110 ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp] }
    { 120 ;   ;Plant No.           ;Code10        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   CaptionML=[ENU=Plant No.;
                                                              NOR=Maskinnr.;
                                                              SVE=Maskinnr] }
    { 130 ;   ;Cost Component      ;Code20        ;TableRelation="Cost Component".Code;
                                                   CaptionML=[ENU=Cost Component;
                                                              NOR=Kostnadskomponent;
                                                              SVE=Kostnadskomponent] }
    { 140 ;   ;Cost Code           ;Code10        ;TableRelation="Cost Code".Code;
                                                   OnValidate=VAR
                                                                lvCostCodeRec@1100525000 : Record 11012083;
                                                              BEGIN
                                                                IF "Cost Code" <> '' THEN BEGIN
                                                                   lvCostCodeRec.GET("Cost Code");
                                                                   lvCostCodeRec.TESTFIELD(Blocked, FALSE);
                                                                   IF lvCostCodeRec.Component <>'' THEN
                                                                     "Wage Component" := lvCostCodeRec.Component;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Cost Code;
                                                              NOR=Kostkode;
                                                              SVE=Kostnadskod] }
  }
  KEYS
  {
    {    ;Hour Set,Line No.                       ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      HumanResourcesSetup@1210190004 : Record 5218;
      EmplRec@1210190000 : Record 5200;
      DimValRec@1210190002 : Record 349;
      DimMgt@1210190001 : Codeunit 408;
      Text001@1210190006 : TextConst 'ENU=may not be of Cost Type %1;NOR=kan ikke v‘re kostnadstypen %1;SVE=f†r inte vara kostnadstypen %1';
      Text004@1210190005 : TextConst 'ENU=in combination with %1 %2 may not be of Cost Type %3;NOR=i kombinasjon med %1 kan %2 ikke v‘re Kostnadstype %3;SVE=i kombination med %1 kan %2 inte vara kostnadstyp %3';

    PROCEDURE CheckCostType@1210190008();
    VAR
      ShowErrorMessage@1210190000 : Boolean;
    BEGIN
      //Same Function in Hour Accounting Line
      IF "Cost Object" = '' THEN
        EXIT;

      HumanResourcesSetup.GET;
      //Checks irrespective of Component Type
      CASE "Cost Type" OF
        "Cost Type"::Material,
        "Cost Type"::Subcontracting:
          ShowErrorMessage := TRUE;
        "Cost Type"::Plant:
          ShowErrorMessage := (NOT HumanResourcesSetup."Accept Plant Costs Hours");
      END;
      IF ShowErrorMessage THEN
        FIELDERROR("Cost Object", STRSUBSTNO(Text001, "Cost Type"));

      IF "Wage Component" = '' THEN
        EXIT;

      //Checks depending on Component Type
      CALCFIELDS("Component Type");
      IF "Component Type" = "Component Type"::Hours THEN
        CASE "Cost Type" OF
          "Cost Type"::Labor:;
          "Cost Type"::Plant:
            ShowErrorMessage := (NOT HumanResourcesSetup."Accept Plant Costs Hours");
          "Cost Type"::Sundry:
            ShowErrorMessage := (NOT HumanResourcesSetup."Accept Sundry Costs Hours");
          ELSE
            ShowErrorMessage := TRUE;
        END;

      IF ShowErrorMessage THEN
        FIELDERROR("Cost Object", STRSUBSTNO(Text004, FIELDCAPTION("Component Type"), "Component Type", "Cost Type"));
    END;

    PROCEDURE EmplNameOtherCompany@1210190005();
    BEGIN
      IF "Supplying Company" = '' THEN
        EXIT;

      "Full Name" := '';
      IF "Employee No." <> '' THEN BEGIN
        EmplRec.CHANGECOMPANY("Supplying Company");
        IF EmplRec.GET("Employee No.") THEN
          "Full Name" := EmplRec."Full Name";
      END;
    END;

    BEGIN
    END.
  }
}

