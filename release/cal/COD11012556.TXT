OBJECT Codeunit 11012556 Order Coll. Report Printed
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11012556;
    OnRun=BEGIN
            FIND;
            "Order Pick List Printed" := "Order Pick List Printed" + 1;
            IF Status < Status::Printed THEN
              Status := Status::Printed;
            MODIFY;

            IF (NOT Posted) AND (Type = Type::Arrival) AND (Status = Status::Printed) AND ("Purchase Order No." = '') THEN
              QuantityIsAskQuantity(Rec, TRUE);

            COMMIT;
          END;

  }
  CODE
  {
    VAR
      PlantSetupRec@1100485000 : Record 11012550;

    PROCEDURE QuantityIsAskQuantity@1100485002(IPlantOrderRec@1100485001 : Record 11012556;AutomMode@1100409000 : Boolean);
    VAR
      lvOrderLineRec@1100485000 : Record 11012557;
    BEGIN
      IPlantOrderRec.TESTFIELD(Posted, FALSE);
      IPlantOrderRec.TESTFIELD(Type, IPlantOrderRec.Type::Arrival);

      PlantSetupRec.GET;
      IF NOT PlantSetupRec."Extended Picking Procedure" THEN
        EXIT;

      IF AutomMode THEN BEGIN  //C003966.n
        IF IPlantOrderRec.PlantOrderIsBackorder(IPlantOrderRec."No.") THEN
          EXIT;
      END;

      WITH lvOrderLineRec DO BEGIN
        SETRANGE("Plant Order No.", IPlantOrderRec."No.");
        //SETRANGE(Type, Type::Plant);
        SETFILTER(Type, '%1|%2', Type::Plant, Type::Item);
        SETRANGE(Quantity, 0);
        SETFILTER("Asked Quantity", '<>0');
        SETRANGE("Purchase Order", '');  //* Als IO dan automatisch gevuld bij ontvangst
        IF FINDSET(TRUE,FALSE) THEN BEGIN
          REPEAT
            Quantity := "Asked Quantity";
            MODIFY(TRUE);
          UNTIL NEXT = 0;
        END;
      END;

      //WITH lvItemLineRec DO BEGIN
      //  SETRANGE("Plant Order No.", IPlantOrderRec."No.");
      //  SETRANGE(Type, Type::Item);
      //  SETRANGE(Quantity, 0);
      //  SETFILTER("Asked Quantity", '<>0');
      //  SETRANGE("Purchase Order", '');
      //  IF FINDSET(TRUE,FALSE) THEN BEGIN
      //    REPEAT
      //      Quantity := "Asked Quantity";
      //      MODIFY(TRUE);
      //    UNTIL NEXT = 0;
      //  END;
      //END;
    END;

    BEGIN
    END.
  }
}

