OBJECT Codeunit 11128582 OIOUBL Export Issued Reminder
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVDK10.00 (13612);
  }
  PROPERTIES
  {
    TableNo=297;
    Permissions=TableData 297=rm;
    OnRun=VAR
            IssuedReminder2@1101100009 : Record 297;
            IssuedReminderLine@1101100008 : Record 298;
            IssuedReminderLine2@1101100007 : Record 298;
            RBMgt@1060002 : Codeunit 419;
            XMLDOMManagement@1060012 : Codeunit 6224;
            XMLCurrNode@1101100005 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
            XMLdocOut@1101100004 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
            XMLNewChild@1101100003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
            DocNameSpace@1101100001 : Text[250];
            CurrencyCode@1060003 : Code[10];
            Prefix@1101100000 : Text[30];
            FromFile@1060004 : Text[1024];
            ToFile@1060005 : Text[1024];
            DocNameSpace2@1060001 : Text[250];
            Prefix2@1060000 : Text[30];
            VATPercentage@1060006 : Decimal;
            TaxableAmount@1060010 : Decimal;
            TaxAmount@1060008 : Decimal;
            TotalAmount@1060007 : Decimal;
            DocumentType@1060009 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Finance Charge,Reminder';
            FileName@1060011 : Text;
          BEGIN
            CODEUNIT.RUN(CODEUNIT::"OIOUBL Check Issued Reminder",Rec);
            ReadGLSetup;
            ReadCompanyInfo;

            IF "Currency Code" = '' THEN
              CurrencyCode := GLSetup."LCY Code"
            ELSE
              CurrencyCode := "Currency Code";

            IssuedReminderLine.SETRANGE("Reminder No.","No.");
            IssuedReminderLine.SETFILTER(Type,'>%1',0);
            IssuedReminderLine.SETFILTER("No.",'<>%1',' ');
            IF NOT IssuedReminderLine.FINDSET THEN
              EXIT;

            FromFile := RBMgt.ServerTempFileName('');

            // Reminder
            Header :=
              '<?xml version="1.0" encoding="UTF-8" ?> ' +
              '<Reminder xmlns="urn:oasis:names:specification:ubl:schema:xsd:Reminder-2" ' +
              'xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" ' +
              'xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" ' +
              'xmlns:ccts="urn:oasis:names:specification:ubl:schema:xsd:CoreComponentParameters-2" ' +
              'xmlns:sdt="urn:oasis:names:specification:ubl:schema:xsd:SpecializedDatatypes-2" ' +
              'xmlns:udt="urn:un:unece:uncefact:data:specification:UnqualifiedDataTypesSchemaModule:2" ' +
              'xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" ' +
              'xsi:schemaLocation="urn:oasis:names:specification:ubl:schema:xsd:Reminder-2 UBL-Reminder-2.0.xsd"/> ';

            XMLDOMManagement.LoadXMLDocumentFromText(Header,XMLdocOut);
            XMLCurrNode := XMLdocOut.DocumentElement;

            WITH OIOUBLDOMManagement DO BEGIN
              DocNameSpace := 'urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2';
              DocNameSpace2 := 'urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2';

              Prefix := 'cbc';
              Prefix2 := 'cac';

              AddElement(XMLCurrNode,'UBLVersionID','2.0',DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'CustomizationID','OIOUBL-2.02',DocNameSpace,XMLNewChild,Prefix);

              AddElement(XMLCurrNode,'ProfileID','Procurement-BilSim-1.0',DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:profileid-1.2');
              AddAttribute(XMLCurrNode,'schemeAgencyID','320');
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'ID',"No.",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'CopyIndicator',OIOUBLDocumentEncode.BooleanToText("Electronic Reminder Created"),
                DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'IssueDate',OIOUBLDocumentEncode.DateToText("Posting Date"),DocNameSpace,XMLNewChild,Prefix);

              AddElement(XMLCurrNode,'ReminderTypeCode','Advis',DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'listID','urn:oioubl.codelist:remindertypecode-1.1');
              AddAttribute(XMLCurrNode,'listAgencyID','320');
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'ReminderSequenceNumeric','1',DocNameSpace,XMLNewChild,Prefix);

              AddElement(XMLCurrNode,'DocumentCurrencyCode',CurrencyCode,DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'AccountingCost',"Account Code DK",DocNameSpace,XMLNewChild,Prefix);

              // Reminder->AccountingSupplierParty
              AddElement(XMLCurrNode,'AccountingSupplierParty','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;

              AddElement(XMLCurrNode,'Party','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'WebsiteURI',CompanyInfo."Home Page",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'EndpointID',OIOUBLDocumentEncode.GetCompanyVATRegNo(CompanyInfo."VAT Registration No."),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeID','DK:CVR');
              XMLCurrNode := XMLCurrNode.ParentNode;

              // Reminder->AccountingSupplierParty->PartyIdentification
              AddElement(XMLCurrNode,'PartyIdentification','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'ID',OIOUBLDocumentEncode.GetCompanyVATRegNo(CompanyInfo."VAT Registration No."),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeID','DK:CVR');
              XMLCurrNode := XMLCurrNode.ParentNode;

              // Reminder->AccountingSupplierParty->PartyName
              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'PartyName','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'Name',CompanyInfo.Name,DocNameSpace,XMLNewChild,Prefix);

              // Reminder->AccountingSupplierParty->PostalAddress
              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'PostalAddress','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'AddressFormatCode','StructuredLax',DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'listID','urn:oioubl:codelist:addressformatcode-1.1');
              AddAttribute(XMLCurrNode,'listAgencyID','320');
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'StreetName',CompanyInfo.Address,DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'AdditionalStreetName',CompanyInfo."Address 2",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'InhouseMail',CompanyInfo."E-Mail",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'CityName',CompanyInfo.City,DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'PostalZone',CompanyInfo."Post Code",DocNameSpace,XMLNewChild,Prefix);

              // Reminder->AccountingSupplierParty->Address->Country
              AddElement(XMLCurrNode,'Country','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'IdentificationCode',CompanyInfo."Country/Region Code",DocNameSpace,XMLNewChild,Prefix);

              // Reminder->AccountingSupplierParty->PartyTextScheme
              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'PartyTaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'CompanyID',OIOUBLDocumentEncode.GetCompanyVATRegNo(CompanyInfo."VAT Registration No."),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeID','DK:SE');
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'TaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'ID','63',DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeAgencyID','320');
              AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxschemeid-1.1');
              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'Name','Moms',DocNameSpace,XMLNewChild,Prefix);

              // Reminder->AccountingSupplierParty->PartyLegalEntity
              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'PartyLegalEntity','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'RegistrationName',CompanyInfo.Name,DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'CompanyID',OIOUBLDocumentEncode.GetCompanyVATRegNo(CompanyInfo."VAT Registration No."),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeID','DK:CVR');
              XMLCurrNode := XMLCurrNode.ParentNode;

              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;

              // Reminder->AccountingCustomerParty
              AddElement(XMLCurrNode,'AccountingCustomerParty','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;

              AddElement(XMLCurrNode,'Party','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'EndpointID',"EAN No.",DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeAgencyID','9');
              AddAttribute(XMLCurrNode,'schemeID','GLN');
              XMLCurrNode := XMLCurrNode.ParentNode;

              // Reminder->AccountingCustomerParty->PartyIdentification
              AddElement(XMLCurrNode,'PartyIdentification','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'ID',OIOUBLDocumentEncode.GetCustomerVATRegNo("VAT Registration No."),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeID','DK:CVR');
              XMLCurrNode := XMLCurrNode.ParentNode;

              // Reminder->AccountingCustomerParty->PartyName
              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'PartyName','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'Name',Name,DocNameSpace,XMLNewChild,Prefix);

              // Reminder->AccountingCustomerParty->PostalAddress
              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'PostalAddress','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'AddressFormatCode','StructuredLax',DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'listID','urn:oioubl:codelist:addressformatcode-1.1');
              AddAttribute(XMLCurrNode,'listAgencyID','320');
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'StreetName',Address,DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'AdditionalStreetName',"Address 2",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'CityName',City,DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'PostalZone',"Post Code",DocNameSpace,XMLNewChild,Prefix);

              // Reminder->AccountingCustomerParty->Address->Country
              AddElement(XMLCurrNode,'Country','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'IdentificationCode',OIOUBLDocumentEncode.GetOIOUBLCountryRegionCode("Country/Region Code"),
                DocNameSpace,XMLNewChild,Prefix);

              // Reminder->AccountingCustomerParty->Contact
              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'Contact','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'ID',Contact,DocNameSpace,XMLNewChild,Prefix);

              AddElement(XMLCurrNode,'Name',Contact,DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'Telephone',"Contact Phone No.",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'Telefax',"Contact Fax No.",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'ElectronicMail',"Contact E-Mail",DocNameSpace,XMLNewChild,Prefix);

              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;

              // Reminder->PaymentMeans
              AddElement(XMLCurrNode,'PaymentMeans','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;

              AddElement(XMLCurrNode,'ID','1',DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'PaymentMeansCode','42',DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'PaymentDueDate',OIOUBLDocumentEncode.DateToText("Due Date"),DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'PaymentChannelCode',GetPaymentChannelCode,DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'listAgencyID','320');
              AddAttribute(XMLCurrNode,'listID','urn:oioubl:codelist:paymentchannelcode-1.1');
              XMLCurrNode := XMLCurrNode.ParentNode;

              // Reminder->PaymentMeans->PayeeFinancialAccount
              AddElement(XMLCurrNode,'PayeeFinancialAccount','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;

              AddElement(XMLCurrNode,'ID',CompanyInfo."Bank Account No.",DocNameSpace,XMLNewChild,Prefix);

              // Reminder->PaymentMeans->PayeeFinancialAccount->FinancialInstitutionBranch
              AddElement(XMLCurrNode,'FinancialInstitutionBranch','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;

              AddElement(XMLCurrNode,'ID',CompanyInfo."Bank Branch No.",DocNameSpace,XMLNewChild,Prefix);

              // Reminder->PaymentMeans->PayeeFinancialAccount->FinancialInstitutionBranch->FinancialInstitution
              AddElement(XMLCurrNode,'FinancialInstitution','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;

              IF CompanyInfo."SWIFT Code" <> '' THEN
                AddElement(XMLCurrNode,'ID',CompanyInfo."SWIFT Code",DocNameSpace,XMLNewChild,Prefix)
              ELSE
                AddElement(XMLCurrNode,'ID','null',DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'Name',CompanyInfo."Bank Name",DocNameSpace,XMLNewChild,Prefix);

              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;

              // Reminder->PaymentTerms
              TotalAmount := 0;
              IssuedReminderLine2.RESET;
              IssuedReminderLine2.COPY(IssuedReminderLine);
              IF IssuedReminderLine2.FINDSET THEN
                REPEAT
                  TotalAmount := TotalAmount + IssuedReminderLine2.Amount + IssuedReminderLine2."VAT Amount";
                UNTIL IssuedReminderLine2.NEXT = 0;

              AddElement(XMLCurrNode,'PaymentTerms','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;

              AddElement(XMLCurrNode,'ID','1',DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'PaymentMeansID','1',DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'Amount',OIOUBLDocumentEncode.DecimalToText(TotalAmount),DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'PenaltyPeriod','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'StartDate',OIOUBLDocumentEncode.DateToText("Due Date"),DocNameSpace,XMLNewChild,Prefix);

              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;

              // Reminder->TaxTotal (for ("Normal VAT" AND "VAT %" <> 0) OR "Full VAT")
              IssuedReminderLineFound := FALSE;
              VATPercentage := 0;
              IssuedReminderLine2.RESET;
              IssuedReminderLine2.COPY(IssuedReminderLine);
              IssuedReminderLine2.SETFILTER("VAT Calculation Type",'%1|%2',IssuedReminderLine2."VAT Calculation Type"::"Normal VAT",
                IssuedReminderLine2."VAT Calculation Type"::"Full VAT");
              IF IssuedReminderLine2.FINDFIRST THEN BEGIN
                TaxableAmount := 0;
                TaxAmount := 0;
                IF IssuedReminderLine2."VAT Calculation Type" = IssuedReminderLine2."VAT Calculation Type"::"Full VAT" THEN
                  VATPercentage := IssuedReminderLine2."VAT %";
                REPEAT
                  CASE IssuedReminderLine2."VAT Calculation Type" OF
                    IssuedReminderLine2."VAT Calculation Type"::"Normal VAT":
                      IF IssuedReminderLine2."VAT %" <> 0 THEN BEGIN
                        UpdateTaxAmtAndTaxableAmt(IssuedReminderLine2.Amount,IssuedReminderLine2."VAT Amount",TaxableAmount,TaxAmount);
                        IF VATPercentage = 0 THEN
                          VATPercentage := IssuedReminderLine2."VAT %";
                      END;
                    IssuedReminderLine2."VAT Calculation Type"::"Full VAT":
                      UpdateTaxAmtAndTaxableAmt(IssuedReminderLine2.Amount,IssuedReminderLine2."VAT Amount",TaxableAmount,TaxAmount);
                  END;
                UNTIL IssuedReminderLine2.NEXT = 0;

                IF IssuedReminderLineFound THEN BEGIN
                  AddElement(XMLCurrNode,'TaxTotal','',DocNameSpace2,XMLNewChild,Prefix2);
                  XMLCurrNode := XMLNewChild;

                  AddElement(XMLCurrNode,'TaxAmount',
                    OIOUBLDocumentEncode.DecimalToText(TaxAmount),DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
                  XMLCurrNode := XMLCurrNode.ParentNode;

                  // Reminder->TaxTotal->TaxSubtotal
                  AddElement(XMLCurrNode,'TaxSubtotal','',DocNameSpace2,XMLNewChild,Prefix2);
                  XMLCurrNode := XMLNewChild;

                  AddElement(XMLCurrNode,'TaxableAmount',
                    OIOUBLDocumentEncode.DecimalToText(TaxableAmount),DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
                  XMLCurrNode := XMLCurrNode.ParentNode;

                  AddElement(XMLCurrNode,'TaxAmount',
                    OIOUBLDocumentEncode.DecimalToText(TaxAmount),DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
                  XMLCurrNode := XMLCurrNode.ParentNode;

                  // Reminder->TaxTotal->TaxSubtotal->TaxCategory
                  AddElement(XMLCurrNode,'TaxCategory','',DocNameSpace2,XMLNewChild,Prefix2);
                  XMLCurrNode := XMLNewChild;

                  AddElement(XMLCurrNode,'ID',GetTaxCategoryID(IssuedReminderLine2."VAT Calculation Type",VATPercentage),
                    DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxcategoryid-1.1');
                  AddAttribute(XMLCurrNode,'schemeAgencyID','320');
                  XMLCurrNode := XMLCurrNode.ParentNode;

                  AddElement(XMLCurrNode,'Percent',OIOUBLDocumentEncode.DecimalToText(VATPercentage),
                    DocNameSpace,XMLNewChild,Prefix);

                  // Reminder->TaxTotal->TaxSubtotal->TaxCategory->TaxScheme
                  AddElement(XMLCurrNode,'TaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);
                  XMLCurrNode := XMLNewChild;

                  AddElement(XMLCurrNode,'ID','63',DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxschemeid-1.1');
                  XMLCurrNode := XMLCurrNode.ParentNode;
                  AddElement(XMLCurrNode,'Name','Moms',DocNameSpace,XMLNewChild,Prefix);

                  XMLCurrNode := XMLCurrNode.ParentNode;
                  XMLCurrNode := XMLCurrNode.ParentNode;
                  XMLCurrNode := XMLCurrNode.ParentNode;
                  XMLCurrNode := XMLCurrNode.ParentNode;
                END;
              END;

              // Reminder->TaxTotal (for "Normal VAT" AND "VAT %" = 0)
              IssuedReminderLineFound := FALSE;
              VATPercentage := 0;
              IssuedReminderLine2.RESET;
              IssuedReminderLine2.COPY(IssuedReminderLine);
              IssuedReminderLine2.SETFILTER("VAT Calculation Type",'%1',IssuedReminderLine2."VAT Calculation Type"::"Normal VAT");
              IssuedReminderLine2.SETFILTER("VAT %",'0');
              IF IssuedReminderLine2.FINDFIRST THEN BEGIN
                TaxableAmount := 0;
                TaxAmount := 0;
                VATPercentage := IssuedReminderLine2."VAT %";
                REPEAT
                  UpdateTaxAmtAndTaxableAmt(IssuedReminderLine2.Amount,IssuedReminderLine2."VAT Amount",TaxableAmount,TaxAmount);
                UNTIL IssuedReminderLine2.NEXT = 0;

                IF IssuedReminderLineFound THEN BEGIN
                  AddElement(XMLCurrNode,'TaxTotal','',DocNameSpace2,XMLNewChild,Prefix2);
                  XMLCurrNode := XMLNewChild;

                  AddElement(XMLCurrNode,'TaxAmount',
                    OIOUBLDocumentEncode.DecimalToText(TaxAmount),DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
                  XMLCurrNode := XMLCurrNode.ParentNode;

                  // Reminder->TaxTotal->TaxSubtotal
                  AddElement(XMLCurrNode,'TaxSubtotal','',DocNameSpace2,XMLNewChild,Prefix2);
                  XMLCurrNode := XMLNewChild;
                  AddElement(XMLCurrNode,'TaxableAmount',
                    OIOUBLDocumentEncode.DecimalToText(TaxableAmount),DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
                  XMLCurrNode := XMLCurrNode.ParentNode;

                  AddElement(XMLCurrNode,'TaxAmount',
                    OIOUBLDocumentEncode.DecimalToText(TaxAmount),DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
                  XMLCurrNode := XMLCurrNode.ParentNode;

                  // Reminder->TaxTotal->TaxSubtotal->TaxCategory
                  AddElement(XMLCurrNode,'TaxCategory','',DocNameSpace2,XMLNewChild,Prefix2);
                  XMLCurrNode := XMLNewChild;
                  AddElement(XMLCurrNode,'ID',GetTaxCategoryID(IssuedReminderLine2."VAT Calculation Type",VATPercentage),
                    DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxcategoryid-1.1');
                  AddAttribute(XMLCurrNode,'schemeAgencyID','320');
                  XMLCurrNode := XMLCurrNode.ParentNode;

                  AddElement(XMLCurrNode,'Percent',OIOUBLDocumentEncode.DecimalToText(VATPercentage),
                    DocNameSpace,XMLNewChild,Prefix);

                  // Reminder->TaxTotal->TaxSubtotal->TaxCategory->TaxScheme
                  AddElement(XMLCurrNode,'TaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);
                  XMLCurrNode := XMLNewChild;

                  AddElement(XMLCurrNode,'ID','63',DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxschemeid-1.1');
                  XMLCurrNode := XMLCurrNode.ParentNode;
                  AddElement(XMLCurrNode,'Name','Moms',DocNameSpace,XMLNewChild,Prefix);

                  XMLCurrNode := XMLCurrNode.ParentNode;
                  XMLCurrNode := XMLCurrNode.ParentNode;
                  XMLCurrNode := XMLCurrNode.ParentNode;
                  XMLCurrNode := XMLCurrNode.ParentNode;
                END;
              END;

              // Reminder->TaxTotal (for "Reverse Charge VAT")
              VATPercentage := 0;
              IssuedReminderLineFound := FALSE;
              IssuedReminderLine2.RESET;
              IssuedReminderLine2.COPY(IssuedReminderLine);
              IssuedReminderLine2.SETFILTER("VAT Calculation Type",'%1',IssuedReminderLine2."VAT Calculation Type"::"Reverse Charge VAT");
              IF IssuedReminderLine2.FINDFIRST THEN BEGIN
                TaxableAmount := 0;
                TaxAmount := 0;
                VATPercentage := IssuedReminderLine2."VAT %";
                REPEAT
                  UpdateTaxAmtAndTaxableAmt(IssuedReminderLine2.Amount,IssuedReminderLine2."VAT Amount",TaxableAmount,TaxAmount);
                UNTIL IssuedReminderLine2.NEXT = 0;

                IF IssuedReminderLineFound THEN BEGIN
                  AddElement(XMLCurrNode,'TaxTotal','',DocNameSpace2,XMLNewChild,Prefix2);
                  XMLCurrNode := XMLNewChild;

                  AddElement(XMLCurrNode,'TaxAmount',
                    OIOUBLDocumentEncode.DecimalToText(TaxAmount),DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
                  XMLCurrNode := XMLCurrNode.ParentNode;

                  // Reminder->TaxTotal->TaxSubtotal
                  AddElement(XMLCurrNode,'TaxSubtotal','',DocNameSpace2,XMLNewChild,Prefix2);
                  XMLCurrNode := XMLNewChild;
                  AddElement(XMLCurrNode,'TaxableAmount',
                    OIOUBLDocumentEncode.DecimalToText(TaxableAmount),DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
                  XMLCurrNode := XMLCurrNode.ParentNode;

                  AddElement(XMLCurrNode,'TaxAmount',
                    OIOUBLDocumentEncode.DecimalToText(TaxAmount),DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
                  XMLCurrNode := XMLCurrNode.ParentNode;

                  // Reminder->TaxTotal->TaxSubtotal->TaxCategory
                  AddElement(XMLCurrNode,'TaxCategory','',DocNameSpace2,XMLNewChild,Prefix2);
                  XMLCurrNode := XMLNewChild;

                  AddElement(XMLCurrNode,'ID',GetTaxCategoryID(IssuedReminderLine2."VAT Calculation Type",VATPercentage),
                    DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxcategoryid-1.1');
                  AddAttribute(XMLCurrNode,'schemeAgencyID','320');
                  XMLCurrNode := XMLCurrNode.ParentNode;

                  AddElement(XMLCurrNode,'Percent',OIOUBLDocumentEncode.DecimalToText(VATPercentage),
                    DocNameSpace,XMLNewChild,Prefix);

                  // Reminder->TaxTotal->TaxSubtotal->TaxCategory->TaxScheme
                  AddElement(XMLCurrNode,'TaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);
                  XMLCurrNode := XMLNewChild;

                  AddElement(XMLCurrNode,'ID','63',DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxschemeid-1.1');
                  XMLCurrNode := XMLCurrNode.ParentNode;
                  AddElement(XMLCurrNode,'Name','Moms',DocNameSpace,XMLNewChild,Prefix);

                  XMLCurrNode := XMLCurrNode.ParentNode;
                  XMLCurrNode := XMLCurrNode.ParentNode;
                  XMLCurrNode := XMLCurrNode.ParentNode;
                  XMLCurrNode := XMLCurrNode.ParentNode;
                END;
              END;

              // Reminder->LegalMonetaryTotal
              TaxableAmount := 0;
              TaxAmount := 0;

              IssuedReminderLine2.RESET;
              IssuedReminderLine2.COPY(IssuedReminderLine);
              IssuedReminderLineFound := FALSE;
              IF IssuedReminderLine2.FINDSET THEN
                REPEAT
                  TaxableAmount := TaxableAmount + IssuedReminderLine2.Amount;
                  TaxAmount := TaxAmount + IssuedReminderLine2."VAT Amount";
                UNTIL IssuedReminderLine2.NEXT = 0;

              AddElement(XMLCurrNode,'LegalMonetaryTotal','',
                DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;

              AddElement(XMLCurrNode,'LineExtensionAmount',OIOUBLDocumentEncode.DecimalToText(TaxableAmount),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'currencyID',CurrencyCode);
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'TaxExclusiveAmount',OIOUBLDocumentEncode.DecimalToText(TaxAmount),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'TaxInclusiveAmount',OIOUBLDocumentEncode.DecimalToText(TotalAmount),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'PayableAmount',OIOUBLDocumentEncode.DecimalToText(TotalAmount),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
              XMLCurrNode := XMLCurrNode.ParentNode;

              XMLCurrNode := XMLCurrNode.ParentNode;

              // Reminder->ReminderLine
              REPEAT
                IF IssuedReminderLine.Amount <> 0 THEN BEGIN
                  IssuedReminderLine.TESTFIELD(Description);

                  AddElement(XMLCurrNode,'ReminderLine','',DocNameSpace2,XMLNewChild,Prefix2);
                  XMLCurrNode := XMLNewChild;

                  AddElement(XMLCurrNode,'ID',FORMAT(IssuedReminderLine."Line No."),DocNameSpace,XMLNewChild,Prefix);
                  AddElement(XMLCurrNode,'Note',IssuedReminderLine.Description,DocNameSpace,XMLNewChild,Prefix);

                  IF IssuedReminderLine.Amount > 0 THEN BEGIN
                    AddElement(XMLCurrNode,'DebitLineAmount',OIOUBLDocumentEncode.DecimalToText(IssuedReminderLine.Amount),
                      DocNameSpace,XMLNewChild,Prefix);
                    XMLCurrNode := XMLNewChild;
                    AddAttribute(XMLCurrNode,'currencyID',CurrencyCode);
                    XMLCurrNode := XMLCurrNode.ParentNode;
                  END;

                  IF IssuedReminderLine.Amount < 0 THEN BEGIN
                    AddElement(XMLCurrNode,'CreditLineAmount',OIOUBLDocumentEncode.DecimalToText(IssuedReminderLine.Amount),
                      DocNameSpace,XMLNewChild,Prefix);
                    XMLCurrNode := XMLNewChild;
                    AddAttribute(XMLCurrNode,'currencyID',CurrencyCode);
                    XMLCurrNode := XMLCurrNode.ParentNode;
                  END;
                  AddElement(XMLCurrNode,'AccountingCost',IssuedReminderLine."Account Code DK",DocNameSpace,XMLNewChild,Prefix);

                  XMLCurrNode := XMLCurrNode.ParentNode;
                END;
              UNTIL IssuedReminderLine.NEXT = 0;
            END;

            SalesSetup.GET;
            SalesSetup."OIOUBL Reminder Path" := DELCHR(SalesSetup."OIOUBL Reminder Path",'>','\');
            XMLdocOut.Save(FromFile);
            IF RBMgt.CanRunDotNetOnClient THEN BEGIN
              SalesSetup.VerifyAndSetOIOUBLPathSetup(DocumentType::Reminder);
              ToFile := RBMgt.DownloadTempFile(FromFile);
              RBMgt.CopyClientFile(ToFile,STRSUBSTNO('%1\%2.xml',SalesSetup."OIOUBL Reminder Path","No."),TRUE);
            END ELSE BEGIN
              FileName := STRSUBSTNO('%1.xml',"No.");
              IF SalesSetup."OIOUBL Fin. Chrg. Memo Path" <> '' THEN
                MESSAGE(STRSUBSTNO(PleaseUsetheStdReminderPath,SalesSetup."OIOUBL Reminder Path"))
              ELSE
                MESSAGE(UsetheIOULBClientPath);
              DOWNLOAD(FromFile,'',SalesSetup."OIOUBL Reminder Path",'',FileName);
            END;

            IssuedReminder2.GET("No.");
            IssuedReminder2."Electronic Reminder Created" := TRUE;
            IssuedReminder2.MODIFY;
          END;

  }
  CODE
  {
    VAR
      CompanyInfo@1101100002 : Record 79;
      GLSetup@1101100003 : Record 98;
      SalesSetup@1101100012 : Record 311;
      OIOUBLDOMManagement@1101100006 : Codeunit 11128571;
      OIOUBLDocumentEncode@1101100007 : Codeunit 11128570;
      Header@1101100005 : Text[1000];
      CompanyInfoRead@1101100000 : Boolean;
      GLSetupRead@1101100001 : Boolean;
      IssuedReminderLineFound@1060001 : Boolean;
      PleaseUsetheStdReminderPath@1060003 : TextConst 'ENU=Please save the file under %1.';
      UsetheIOULBClientPath@1060002 : TextConst 'ENU=Please save the file to a location from which it can be retrieved by the OIOUBL function.';

    LOCAL PROCEDURE ReadCompanyInfo@1101100003();
    BEGIN
      IF NOT CompanyInfoRead THEN BEGIN
        CompanyInfo.GET;
        CompanyInfoRead := TRUE;
      END;
    END;

    PROCEDURE ReadGLSetup@1101100011();
    BEGIN
      IF NOT GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
    END;

    PROCEDURE GetPaymentChannelCode@1060014() : Text[7];
    BEGIN
      EXIT(CompanyInfo.GetPaymentChannelCode);
    END;

    PROCEDURE GetTaxCategoryID@1060038(Type@1060000 : 'Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax';VATPercent@1060001 : Decimal) : Text[15];
    BEGIN
      CASE Type OF
        Type::"Normal VAT":
          BEGIN
            IF VATPercent <> 0 THEN
              EXIT('StandardRated');
            EXIT('ZeroRated');
          END;
        Type::"Full VAT":
          EXIT('StandardRated');
        Type::"Reverse Charge VAT":
          EXIT('ReversedCharge');
        ELSE
          EXIT('ZeroRated');
      END;
    END;

    PROCEDURE UpdateTaxAmtAndTaxableAmt@1060001(Amount@1060005 : Decimal;VATAmount@1060004 : Decimal;VAR TaxableAmountParam@1060002 : Decimal;VAR TaxAmountParam@1060003 : Decimal);
    BEGIN
      IssuedReminderLineFound := TRUE;
      TaxableAmountParam := TaxableAmountParam + Amount;
      TaxAmountParam := TaxAmountParam + VATAmount
    END;

    BEGIN
    {
      http://oioubl.info/Classes/da/Reminder.html
    }
    END.
  }
}

