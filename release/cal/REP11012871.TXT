OBJECT Report 11012871 Create Service Authorities
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Serviceinstanzen aktualisieren;
               ENU=Create Service Authorities;
               NLD=Service-instanties bijwerken;
               NOR=Opprett servicemyndighet;
               SVE=Skapa servicebeh”righet];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  PurchasesPayablesSetup.GET();
                  ContactBusinessRelation.SETCURRENTKEY("Link to Table","No.");
                END;

  }
  DATASET
  {
    { 4178;    ;DataItem;                    ;
               DataItemTable=Table11012812;
               DataItemTableView=SORTING(No.);
               ReqFilterFields=No. }

    { 2306;1   ;DataItem;PurchaseLineQuote   ;
               DataItemTable=Table39;
               DataItemTableView=SORTING(Document Type,Service Contract No.,Service Order No.,Service Location No.,Service Control Year,Service Source Type,Order Date)
                                 WHERE(Document Type=CONST(Quote));
               OnPreDataItem=BEGIN
                               IF NOT BasedOnQuotes THEN
                                 CurrReport.BREAK;

                               SETFILTER("Expected Receipt Date", '%1..', ReferenceDate);
                             END;

               OnAfterGetRecord=BEGIN
                                  CreateAuthorities("Service Order No.","Buy-from Vendor No.");
                                END;

               DataItemLink=Service Contract No.=FIELD(No.) }

    { 9088;1   ;DataItem;PurchaseLineOrder   ;
               DataItemTable=Table39;
               DataItemTableView=SORTING(Document Type,Service Contract No.,Service Order No.,Service Location No.,Service Control Year,Service Source Type,Order Date)
                                 WHERE(Document Type=CONST(Order));
               OnPreDataItem=BEGIN
                               IF NOT BasedOnOrders THEN
                                 CurrReport.BREAK;

                               SETFILTER("Posting Date", '%1..', ReferenceDate);
                             END;

               OnAfterGetRecord=BEGIN
                                  CreateAuthorities("Service Order No.","Buy-from Vendor No.");
                                END;

               DataItemLink=Service Contract No.=FIELD(No.) }

    { 7289;1   ;DataItem;PurchaseLineInvoice ;
               DataItemTable=Table123;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnPreDataItem=BEGIN
                               IF NOT BasedOnInvoices THEN
                                 CurrReport.BREAK;

                               SETFILTER("Posting Date", '%1..', ReferenceDate);
                             END;

               OnAfterGetRecord=BEGIN
                                  CreateAuthorities("Service Order No.","Buy-from Vendor No.");
                                END;

               DataItemLink=Service Contract No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=[DEU=Basierend auf Angeboten;
                             ENU=Based on Quotes;
                             NLD=Op basis van offertes;
                             NOR=Basert p† tilbud;
                             SVE=Baserat p† offerter];
                  SourceExpr=BasedOnQuotes }

      { 1100525003;2;Field  ;
                  CaptionML=[DEU=Aufgrund von Auftr„gen;
                             ENU=Based on Orders;
                             NLD=Op basis van orders;
                             NOR=Basert p† ordre;
                             SVE=Baserad p† order];
                  SourceExpr=BasedOnOrders }

      { 1100525004;2;Field  ;
                  CaptionML=[DEU=Basierend auf Rechnungen;
                             ENU=Based on Invoices;
                             NLD=Op basis van facturen;
                             NOR=Basert p† fakturaer;
                             SVE=Baserat p† fakturor];
                  SourceExpr=BasedOnInvoices }

      { 1100525005;2;Field  ;
                  CaptionML=[DEU=Stichtag;
                             ENU=Reference Date;
                             NLD=Peildatum;
                             NOR=Referansedato;
                             SVE=Referensdatum];
                  SourceExpr=ReferenceDate }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      PurchasesPayablesSetup@1100525004 : Record 312;
      VendorAuthorities@1100525003 : Record 11020639;
      ServiceAuthority@1100525008 : Record 11012838;
      ContactBusinessRelation@1100525007 : Record 5054;
      BasedOnQuotes@1100525000 : Boolean;
      BasedOnOrders@1100525001 : Boolean;
      BasedOnInvoices@1100525002 : Boolean;
      ReferenceDate@1100525009 : Date;

    PROCEDURE CreateAuthorities@1100525002(ServiceOrder@1100525000 : Code[20];Vendor@1100525001 : Code[20]);
    BEGIN
      IF ServiceOrder <> '' THEN BEGIN
        ContactBusinessRelation.SETRANGE("Link to Table",ContactBusinessRelation."Link to Table"::Vendor);
        ContactBusinessRelation.SETRANGE("No.", Vendor);
        IF ContactBusinessRelation.FINDFIRST THEN BEGIN
          VendorAuthorities.RESET;
          VendorAuthorities.SETRANGE("Vendor No.", Vendor);
          IF VendorAuthorities.FINDSET THEN BEGIN
            REPEAT
              ServiceAuthority."Service Order No." := ServiceOrder;
              ServiceAuthority."Authority Type" := VendorAuthorities."Authority Type";
              ServiceAuthority."Contact No." := ContactBusinessRelation."Contact No.";
              IF ServiceAuthority.INSERT THEN;
            UNTIL VendorAuthorities.NEXT = 0;
          END ELSE BEGIN
            ServiceAuthority."Service Order No." := ServiceOrder;
            ServiceAuthority."Authority Type" := PurchasesPayablesSetup."Default Authority Type";
            ServiceAuthority."Contact No." := ContactBusinessRelation."Contact No.";
            IF ServiceAuthority.INSERT THEN;
          END;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

