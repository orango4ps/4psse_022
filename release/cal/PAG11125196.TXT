OBJECT Page 11125196 Tender Document Code
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Baubeschreibungscodierung;
               ENU=Tender Document Coding;
               NLD=Bestekscodering;
               NOR=Koding av tilbudsdokument;
               SVE=Kodning av anbudsdokument];
    SourceTable=Table11071720;
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    PromotedActionCategoriesML=[DEU=Neu, Prozess, Bericht, Objekt;
                                ENU=New,Process,Report,Object;
                                NLD=Nieuw,Proces,Lijst,Object;
                                NOR=Ny,Prosesser,Rapporter,Objekt;
                                SVE=Ny,Behandla,Rapport,Objekt];
    OnOpenPage=BEGIN
                 BuildLocationTenderDocument(ServiceLocationNo, CodingSystemNo);
                 CurrPage.UPDATE(FALSE);
               END;

    OnAfterGetRecord=VAR
                       LicensePermission@1100409000 : Record 2000000043;
                       ServiceObjectInfoMgt@1100525000 : Codeunit 11012840;
                       NEN2767Management@1100528600 : Codeunit 11012863;
                     BEGIN
                       ServiceObjectInfoMgt.GetStdSpecValues("Service Object No.", SerialNo, YearOfManufacture);
                       DescriptionIndent := 0;
                       DescriptionOnFormat;
                       IF "Object Line" THEN
                         CALCFIELDS("Brand Code", "Type Code", "Model Code");

                       IF LicensePermission.GET(LicensePermission."Object Type"::Table, DATABASE::"NEN2767 Condition Buffer OBS") THEN
                         IF LicensePermission."Execute Permission" = LicensePermission."Execute Permission"::Yes THEN BEGIN
                           IF "Object Line" THEN BEGIN
                             MeasurementDate := TODAY;
                             ConditionScore := NEN2767Management.GetObjectConditionScore("Service Object No.", MeasurementDate);
                           END;
                       END;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100525003;1;Field  ;
                CaptionML=[DEU=Baubeschreibungscode System;
                           ENU=Tender Code System;
                           NLD=Bestekscode systeem;
                           NOR=Tilbudskodesystem;
                           SVE=Anbudskodsystem];
                SourceExpr=CodingSystemNo;
                OnValidate=VAR
                             CodingSystem@1100525000 : Record 11012088;
                           BEGIN
                             IF CodingSystemNo <> '' THEN BEGIN
                               IF NOT CodingSystem.GET(CodingSystemNo) THEN BEGIN
                                 CodingSystem.SETFILTER("Coding System", '@' + CodingSystemNo + '*');
                                 IF CodingSystem.COUNT = 1 THEN BEGIN
                                   CodingSystem.FINDFIRST;
                                   CodingSystemNo := CodingSystem."Coding System";
                                 END ELSE
                                   CodingSystem.GET(CodingSystemNo);
                               END;
                             END;
                             BuildLocationTenderDocument(ServiceLocationNo, CodingSystemNo);

                             CurrPage.UPDATE(FALSE);
                           END;

                OnLookup=VAR
                           CodingSystem@1100525000 : Record 11012088;
                         BEGIN
                           IF CodingSystemNo <> '' THEN
                             CodingSystem.GET(CodingSystemNo);
                           IF PAGE.RUNMODAL(0, CodingSystem) = ACTION::LookupOK THEN
                             CodingSystemNo := CodingSystem."Coding System";

                           BuildLocationTenderDocument(ServiceLocationNo, CodingSystemNo);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1100526200;1;Group  ;
                Editable=FALSE;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 1100526201;2;Field  ;
                SourceExpr="No." }

    { 1100526203;2;Field  ;
                SourceExpr=Description }

    { 1100528601;2;Field  ;
                SourceExpr="Description 2" }

    { 1100526205;2;Field  ;
                Lookup=No;
                SourceExpr="Service Object No.";
                OnAssistEdit=VAR
                               ServiceObject@1100529500 : Record 11071691;
                             BEGIN
                               IF "Service Object No." = '' THEN EXIT;
                               ServiceObject.GET("Service Object No.");
                               PAGE.RUNMODAL(PAGE::"Service Object", ServiceObject);
                             END;
                              }

    { 1100528606;2;Field  ;
                SourceExpr="Brand Code" }

    { 1100528607;2;Field  ;
                SourceExpr="Brand Description";
                Visible=FALSE }

    { 1100528610;2;Field  ;
                SourceExpr="Model Code" }

    { 1100528611;2;Field  ;
                SourceExpr="Model Description";
                Visible=FALSE }

    { 1100528608;2;Field  ;
                SourceExpr="Type Code" }

    { 1100528609;2;Field  ;
                SourceExpr="Type Description";
                Visible=FALSE }

    { 1100526207;2;Field  ;
                Lookup=No;
                SourceExpr="Standard Object No.";
                OnAssistEdit=VAR
                               StandardObject@1100529500 : Record 11020334;
                             BEGIN
                               IF "Standard Object No." = '' THEN EXIT;
                               StandardObject.GET("Standard Object No.");
                               PAGE.RUNMODAL(PAGE::"Standard Object", StandardObject);
                             END;
                              }

    { 1100525000;2;Field  ;
                CaptionML=[DEU=Seriennr.;
                           ENU=Serial No.;
                           NLD=Serienr.;
                           NOR=Serienr.;
                           SVE=Serienr];
                SourceExpr=SerialNo;
                Editable=false }

    { 1100525001;2;Field  ;
                CaptionML=[DEU=Baujahr;
                           ENU=Year Of Manufacture;
                           NLD=Bouwjaar;
                           NOR=Produksjons†r;
                           SVE=Tillverknings†r];
                SourceExpr=YearOfManufacture;
                Editable=false }

    { 1100528600;2;Field  ;
                SourceExpr=Blocked }

    { 1100528701;2;Field  ;
                SourceExpr="Customer Feature" }

    { 1100528702;2;Field  ;
                SourceExpr="Object Customer" }

    { 1100525002;2;Field  ;
                CaptionML=[DEU=Messdatum;
                           ENU=Measurement Date;
                           NLD=Meetdatum;
                           NOR=M†lingsdato];
                SourceExpr=MeasurementDate;
                Visible=false;
                Editable=false }

    { 1100528602;2;Field  ;
                CaptionML=[DEU=Bedingung Endstand;
                           ENU=Condition Score;
                           NLD=Conditiescore;
                           NOR=Poengsum for tilstand];
                SourceExpr=ConditionScore;
                Visible=false;
                Editable=false }

  }
  CODE
  {
    VAR
      ServiceLocationNo@1100526201 : Code[20];
      CodingSystemNo@1100526200 : Code[20];
      DescriptionEmphasize@19010547 : Boolean INDATASET;
      DescriptionIndent@19057867 : Integer INDATASET;
      SerialNo@1100525001 : Text[80];
      YearOfManufacture@1100525000 : Text[80];
      ConditionScore@1100528601 : ',1,2,3,4,5,6';
      MeasurementDate@1100528600 : Date;

    PROCEDURE SetDefaults@1100526209(IServiceLocationNo@1100526201 : Code[20];ICodingSystemNo@1100526200 : Code[20]);
    BEGIN
      ServiceLocationNo := IServiceLocationNo;
      CodingSystemNo := ICodingSystemNo;
    END;

    PROCEDURE BuildLocationTenderDocument@1100526201(IServiceLocationNo@1100526207 : Code[20];ITenderCodeSystemNo@1100526201 : Code[20]);
    VAR
      ServiceSetup@1100526200 : Record 11012800;
      CodeperCodingSystem@1100526206 : Record 11012089;
      ServiceObject@1100526205 : Record 11071691;
      TmpServiceLocStructureLine@1100526204 : TEMPORARY Record 11071720;
      TmpServiceLocStructureLine2@1100526202 : TEMPORARY Record 11071720;
    BEGIN
      ServiceSetup.GET;
      ServiceObject.SETCURRENTKEY("Service Location No.");
      ServiceObject.SETRANGE("Service Location No.", IServiceLocationNo);

      CodeperCodingSystem.SETRANGE("Coding System", ITenderCodeSystemNo);
      IF CodeperCodingSystem.FINDSET THEN BEGIN
        REPEAT
          InsertTempRecord(CodeperCodingSystem, '', TmpServiceLocStructureLine, CodeperCodingSystem.Description, '', IServiceLocationNo);
          IF ServiceSetup."Tender Code System 1" = CodeperCodingSystem."Coding System" THEN
            ServiceObject.SETRANGE("Tender Code 1", CodeperCodingSystem.Code)
          ELSE
            ServiceObject.SETRANGE("Tender Code 2", CodeperCodingSystem.Code);
          IF ServiceObject.FINDSET THEN BEGIN
            REPEAT
              InsertTempRecord(CodeperCodingSystem, ServiceObject."No.", TmpServiceLocStructureLine,
                ServiceObject.Description, ServiceObject."Description 2", IServiceLocationNo);
              InsertCheckRecord(IServiceLocationNo, CodeperCodingSystem.Code, TmpServiceLocStructureLine2);
              InsertCheckRecord(IServiceLocationNo, CodeperCodingSystem.Chapter, TmpServiceLocStructureLine2);
              InsertCheckRecord(IServiceLocationNo, CodeperCodingSystem.Paragraph, TmpServiceLocStructureLine2);
            UNTIL ServiceObject.NEXT = 0;
          END;
        UNTIL CodeperCodingSystem.NEXT = 0;
        IF TmpServiceLocStructureLine.FINDFIRST THEN BEGIN
          REPEAT
            IF NOT (TmpServiceLocStructureLine."Object Line") AND (TmpServiceLocStructureLine.Level <> 0) THEN
              IF NOT TmpServiceLocStructureLine2.GET(TmpServiceLocStructureLine."Service Location No.", 0,
                TmpServiceLocStructureLine."No.", '')
              THEN
                TmpServiceLocStructureLine.DELETE;
          UNTIL TmpServiceLocStructureLine.NEXT = 0;
        END;
      END;

      DELETEALL;
      IF TmpServiceLocStructureLine.FINDFIRST THEN
        REPEAT
          COPY(TmpServiceLocStructureLine);
          INSERT;
        UNTIL TmpServiceLocStructureLine.NEXT = 0;
    END;

    PROCEDURE InsertTempRecord@1100526212(iCodeCodeSystem@1100526200 : Record 11012089;IObjectCde@1100526201 : Code[20];VAR ITempObjectCodeRec@1100526202 : TEMPORARY Record 11071720;IDescTxt@1100526203 : Text[100];IDesc2Txt@1100528600 : Text[50];ILocation@1100526204 : Code[20]);
    BEGIN
      ITempObjectCodeRec.INIT;
      ITempObjectCodeRec."No." := iCodeCodeSystem.Code;
      ITempObjectCodeRec."Service Location No." := ILocation;
      ITempObjectCodeRec."Service Object No." := IObjectCde;
      IF IObjectCde <> '' THEN
        ITempObjectCodeRec."Object Line" := TRUE;
      ITempObjectCodeRec.Level := iCodeCodeSystem.Level;
      ITempObjectCodeRec."Element Level 1" := iCodeCodeSystem.Chapter;
      ITempObjectCodeRec."Element Level 2" := iCodeCodeSystem.Paragraph;
      ITempObjectCodeRec.Description := IDescTxt;
      ITempObjectCodeRec."Description 2" := IDesc2Txt;
      ITempObjectCodeRec.INSERT;
    END;

    PROCEDURE InsertCheckRecord@1100526200(IServiceLocationNo@1100526202 : Code[20];ICode@1100526200 : Code[20];VAR ITempObjectCode2Rec@1100526201 : TEMPORARY Record 11071720);
    BEGIN
      IF NOT ITempObjectCode2Rec.GET(IServiceLocationNo, 0, ICode, '') THEN BEGIN
        ITempObjectCode2Rec.INIT;
        ITempObjectCode2Rec."Service Location No." := IServiceLocationNo;
        ITempObjectCode2Rec."No." := ICode;
        ITempObjectCode2Rec.INSERT;
      END;
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      IF "Object Line" THEN
        DescriptionIndent := Level +1
      ELSE BEGIN
        DescriptionIndent := Level;
        DescriptionEmphasize := TRUE;
      END;
    END;

    BEGIN
    END.
  }
}

