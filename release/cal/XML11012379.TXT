OBJECT XMLport 11012379 Import Employees Payroll
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import Employees;
               SVE=Importera anst„llda];
    Direction=Import;
    DefaultFieldsValidation=No;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    HumanResourcesSetup.GET;
                    HumanResourcesSetup.TESTFIELD("Salary Application",HumanResourcesSetup."Salary Application"::Payroll);
                    currXMLport.FILENAME(HumanResourcesSetup."Pathname Files from Salary");
                  END;

    OnPreXMLport=BEGIN
                   StartupCompany := COMPANYNAME;
                 END;

    OnPostXMLport=BEGIN
                    NewFile := HumanResourcesSetup.DetermineBackupFile(currXMLport.FILENAME);
                    IF NewFile <> currXMLport.FILENAME THEN
                      FileMgt.RenameClientFile(currXMLport.FILENAME, NewFile, TRUE);
                  END;

    Format=Fixed Text;
  }
  ELEMENTS
  {
    { [{FF0BEBBA-286E-4A74-AC4D-2956CD53380C}];  ;Root                ;Element ;Text     }

    { [{B2BA3488-DA30-4094-BF6E-6D99FBA781F7}];1 ;Employee            ;Element ;Table   ;
                                                  SourceTable=Table5200;
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              Employee.INIT;
                                                                              CLEAR(NormHoursTxt);
                                                                              CLEAR(NormDaysTxt);
                                                                              CLEAR(EmploymentDateTxt);
                                                                              CLEAR(TerminationDateTxt);
                                                                              CLEAR(gvCompany);
                                                                              CLEAR(TradeAssCode);
                                                                              CLEAR(EmployerCde);
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 RecRef@1100528400 : RecordRef;
                                                                               BEGIN
                                                                                 WITH Employee DO BEGIN
                                                                                   StripZero("No.");
                                                                                   IF "No." <> '' THEN BEGIN
                                                                                     IF gvCompany <> gvPayrollCompany THEN BEGIN
                                                                                       gvPayrollCompany := '';
                                                                                       IF (gvCompany  = '') THEN BEGIN
                                                                                         HumanResourcesSetup.CHANGECOMPANY(StartupCompany);
                                                                                         EmployerRec.CHANGECOMPANY(StartupCompany);
                                                                                         EmplRec.CHANGECOMPANY(StartupCompany);
                                                                                         GLSetup.CHANGECOMPANY(StartupCompany);
                                                                                         RMSetup.CHANGECOMPANY(StartupCompany);
                                                                                         TradeAssRec.CHANGECOMPANY(StartupCompany);
                                                                                         DefaultDim.CHANGECOMPANY(StartupCompany);
                                                                                         DimValRec.CHANGECOMPANY(StartupCompany);
                                                                                         gvPayrollCompany := gvCompany;
                                                                                         CompanyRec.GET(StartupCompany)
                                                                                       END ELSE BEGIN
                                                                                         CompanyRec.FINDSET;
                                                                                         REPEAT
                                                                                           HumanResourcesSetup.CHANGECOMPANY(CompanyRec.Name);
                                                                                           HumanResourcesSetup.GET;
                                                                                           IF HumanResourcesSetup."Delivering Company (Navision)" = gvCompany THEN BEGIN
                                                                                             HumanResourcesSetup.CHANGECOMPANY(CompanyRec.Name);
                                                                                             EmployerRec.CHANGECOMPANY(CompanyRec.Name);
                                                                                             EmplRec.CHANGECOMPANY(CompanyRec.Name);
                                                                                             RMSetup.CHANGECOMPANY(CompanyRec.Name);
                                                                                             TradeAssRec.CHANGECOMPANY(CompanyRec.Name);
                                                                                             GLSetup.CHANGECOMPANY(CompanyRec.Name);
                                                                                             DefaultDim.CHANGECOMPANY(CompanyRec.Name);
                                                                                             DimValRec.CHANGECOMPANY(CompanyRec.Name);
                                                                                             gvPayrollCompany := gvCompany;
                                                                                           END;
                                                                                         UNTIL (HumanResourcesSetup."Delivering Company (Navision)" = gvCompany) OR (CompanyRec.NEXT = 0);
                                                                                       END;
                                                                                     END;
                                                                                     //
                                                                                     HumanResourcesSetup.GET;
                                                                                     IF (gvCompany  <> '') AND
                                                                                        (HumanResourcesSetup."Delivering Company (Navision)" <> gvCompany) THEN
                                                                                       ERROR(Text002, gvCompany);
                                                                                     RMSetup.GET;
                                                                                     IF (RMSetup."Bus. Rel. Code for Employees" <> '') AND (RMSetup."Contact Nos. Employees" <> '') THEN
                                                                                       ERROR(Text004, CompanyRec.Name);
                                                                                     GLSetup.GET;
                                                                                     IF (NOT EmployerRec.GET(EmployerCde)) THEN BEGIN
                                                                                       IF CheckEmployerBl THEN
                                                                                         ERROR(Text003, EmployerCde);
                                                                                       EmployerCde := '';
                                                                                     END;
                                                                                     RecFound := FALSE;
                                                                                     //
                                                                                     EmplRec.INIT;
                                                                                     IF EmplRec.GET("No.") THEN
                                                                                       RecFound := TRUE
                                                                                     ELSE
                                                                                       EmplRec."No." := "No.";
                                                                                     IF (EmplRec.Initials = '') OR (SkipInitialsBln = FALSE) THEN
                                                                                       EmplRec.Initials := InitialsCde;
                                                                                     EmplRec."Last Name" := "Last Name";
                                                                                     EmplRec."Search Name" := UPPERCASE(EmplRec."Last Name");
                                                                                     EmplRec."Full Name" :=   EmplRec."Last Name";
                                                                                     EmplRec."Norm Hours" := "Norm Hours" /10;
                                                                                     EmplRec."Norm Days" := "Norm Days" / 10;
                                                                                     EmplRec."Employment Date" := "Employment Date";
                                                                                     EmplRec."Termination Date" := "Termination Date";
                                                                                     EmplRec.Status := EmplRec.Status::Active;
                                                                                     IF EmplRec."Termination Date" <> 0D THEN
                                                                                       EmplRec.Status := EmplRec.Status::Terminated;
                                                                                     EmplRec.Employer := EmployerCde;
                                                                                     EmplRec.DetermineAccountHours;
                                                                                     IF RecFound THEN
                                                                                       EmplRec.MODIFY(FALSE)
                                                                                     ELSE
                                                                                       EmplRec.INSERT(FALSE);
                                                                                     RecRef.GETTABLE(EmplRec);
                                                                                     XMLportStatusDialogMgt.ShowImportStatus(RecRef);
                                                                                     //StripZero(TradeAssCode);
                                                                                     IF TradeAssRec.GET(TradeAssCode) THEN
                                                                                       EmplRec."Trade Association" := TradeAssCode;
                                                                                     StripZero("Global Dimension 1 Code");
                                                                                     IF NOT DimValRec.GET(GLSetup."Shortcut Dimension 1 Code", "Global Dimension 1 Code" ) THEN
                                                                                       "Global Dimension 1 Code" := '';
                                                                                     EmplRec."Global Dimension 1 Code" := "Global Dimension 1 Code";
                                                                                     SaveDefaultDimCpy(DATABASE::Employee, EmplRec."No.", 1, "Global Dimension 1 Code");
                                                                                     EmplRec.MODIFY(FALSE);
                                                                                   END;
                                                                                   currXMLport.SKIP;
                                                                                 END;
                                                                               END;
                                                                                }

    { [{8F2DE8FC-7A2F-4DF4-8FE8-FC6E48D8CC63}];2 ;Dummy1              ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=4 }

    { [{60826FC4-632A-454A-841F-DAF2BD8F40B9}];2 ;LastName            ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Employee::Last Name;
                                                  MinOccurs=Zero;
                                                  Width=25 }

    { [{B89C4675-B3DE-4EC2-A2B3-E3FC21792DB9}];2 ;NormHoursTxt        ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  FillEmptyTextWithZero(NormHoursTxt);
                                                                                  NormHoursTxt := CONVERTSTR(NormHoursTxt, '.', ',');
                                                                                  EVALUATE(Employee."Norm Hours", NormHoursTxt);
                                                                                END;

                                                  Width=3 }

    { [{00C0864D-8A4A-435C-BB5A-0BC34C54D8C7}];2 ;NormDaysTxt         ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  FillEmptyTextWithZero(NormDaysTxt);
                                                                                  NormDaysTxt := CONVERTSTR(NormDaysTxt, '.', ',');
                                                                                  EVALUATE(Employee."Norm Days", NormDaysTxt);
                                                                                END;

                                                  Width=2 }

    { [{01521278-2829-460A-A15E-F0629D1DEBD3}];2 ;EmploymentDateTxt   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  Employee."Employment Date" := ConvertDate(EmploymentDateTxt);
                                                                                END;

                                                  Width=6 }

    { [{FB1B7F73-81D6-4C4B-B53A-7E4761DF3125}];2 ;TerminationDateTxt  ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  Employee."Termination Date" := ConvertDate(TerminationDateTxt);
                                                                                END;

                                                  Width=6 }

    { [{0230D63A-DD94-4DC9-A784-E8E803C94C05}];2 ;gvCompany           ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=3 }

    { [{F267C54C-A4AD-4A9A-B7D1-FCF346AA6121}];2 ;GlobalDimension1Code;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Employee::Global Dimension 1 Code;
                                                  MinOccurs=Zero;
                                                  Width=6 }

    { [{1CA04323-DBA6-43F6-9499-6B31780DC415}];2 ;Dummy2              ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=3 }

    { [{509A378A-6536-4FB6-8E64-80E6594E48B3}];2 ;TradeAssCode        ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=3 }

    { [{952C9D7D-EC03-4FA9-AF1A-2EA474F8D498}];2 ;Dummy3              ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=2 }

    { [{3578C1F5-9BDB-4C7C-9F51-2E5D8E8F1D76}];2 ;No                  ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Employee::No.;
                                                  MinOccurs=Zero;
                                                  Width=6 }

    { [{1014E968-E2C0-437A-A19C-377259A451EC}];2 ;EmployerCde         ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=6 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   CheckEmployerBl := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100528401;;Container;
                  ContainerType=ContentArea }

      { 1100528400;1;Group  ;
                  CaptionML=[ENU=Options;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100528402;2;Field  ;
                  CaptionML=[ENU=Do not modify initials;
                             SVE=Žndra inte initialer];
                  SourceExpr=SkipInitialsBln }

      { 1100528403;2;Field  ;
                  CaptionML=[ENU=Check Employer;
                             SVE=Kontrollera arbetsgivare];
                  SourceExpr=CheckEmployerBl }

    }
  }
  CODE
  {
    VAR
      HumanResourcesSetup@1100528423 : Record 5218;
      EmplRec@1100528422 : Record 5200;
      EmployerRec@1100528421 : Record 11012013;
      CompanyRec@1100528420 : Record 2000000006;
      RMSetup@1100528419 : Record 5079;
      TradeAssRec@1100528418 : Record 11012015;
      GLSetup@1100528417 : Record 98;
      DimValRec@1100528416 : Record 349;
      DefaultDim@1100528415 : Record 352;
      XMLportStatusDialogMgt@1100528413 : Codeunit 11130006;
      FileMgt@1100528412 : Codeunit 419;
      NewFile@1100528411 : Text[250];
      InitialsCde@1100528410 : Code[10];
      SkipInitialsBln@1100528409 : Boolean;
      RecFound@1100528407 : Boolean;
      CheckEmployerBl@1100528406 : Boolean;
      StartupCompany@1100528402 : Text[100];
      gvPayrollCompany@1100528401 : Text[100];
      Text002@1100528404 : TextConst 'ENU=Company %1 not found in database;SVE=F”retag %1 hittades inte i databasen';
      Text003@1100528403 : TextConst 'ENU=Unknown Employer %1;SVE=Ok„nd arbetsgivare %1';
      Text004@1100528400 : TextConst 'ENU=Importing into %1 not possible;SVE=Import till %1 „r inte m”jlig';

    PROCEDURE StripZero@1(VAR convcde@11012000 : Code[10]);
    VAR
      Position@11012001 : Integer;
    BEGIN
      Position := STRPOS(convcde,'0');
      WHILE Position = 1 DO
        BEGIN
          convcde := DELSTR(convcde,Position,1);
          Position := STRPOS(convcde,'0');
        END;
    END;

    PROCEDURE SaveDefaultDimCpy@53(TableID@1000 : Integer;No@1001 : Code[40];FieldNumber@1002 : Integer;ShortcutDimCode@1003 : Code[20]);
    BEGIN
      IF ShortcutDimCode <> '' THEN BEGIN
        IF DefaultDim.GET(TableID, No, GLSetup."Shortcut Dimension 1 Code")
        THEN BEGIN
          DefaultDim."Dimension Value Code" := ShortcutDimCode;
          DefaultDim.MODIFY;
        END ELSE BEGIN
          DefaultDim.INIT;
          DefaultDim."Table ID" := TableID;
          DefaultDim."No." := No;
          DefaultDim."Dimension Code" := GLSetup."Shortcut Dimension 1 Code";
          DefaultDim."Dimension Value Code" := ShortcutDimCode;
          DefaultDim.INSERT;
        END;
      END ELSE
        IF DefaultDim.GET(TableID,No, GLSetup."Shortcut Dimension 1 Code") THEN BEGIN
          DefaultDim.DELETE;
        END;
    END;

    PROCEDURE ConvertDate@1210190003(DateTxt@1210190000 : Text[10]) Date : Date;
    BEGIN
      IF DateTxt = '' THEN EXIT(0D);
      IF DateTxt = '000000' THEN EXIT(0D);
      EVALUATE(Date, DateTxt);
    END;

    PROCEDURE FillEmptyTextWithZero@1100525013(VAR Text@1100525000 : Text[1024]);
    BEGIN
      IF DELCHR(Text,'<>=',' ') = '' THEN
        Text := '0';
    END;

    PROCEDURE InitXMLPort@1100529500(iSkipInitialsBln@1100529500 : Boolean;iCheckEmployerBln@1100529501 : Boolean);
    BEGIN
      SkipInitialsBln := iSkipInitialsBln;
      CheckEmployerBl := iCheckEmployerBln;
    END;

    BEGIN
    END.
  }
}

