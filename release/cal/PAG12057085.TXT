OBJECT Page 12057085 Ex Replacer
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF502000;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table12013607;
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 "All Companies" := TRUE;
                 "Start Date" := TODAY;
                 UpdateUserGroupLines;
               END;

    OnDeleteRecord=VAR
                     EXUserGroupLine@1100285000 : Record 12013607;
                   BEGIN
                     EXUserGroupLine.CHANGECOMPANY("Temp Company Name");

                     EXUserGroupLine.RESET;
                     EXUserGroupLine.SETRANGE(Code, Rec.Code);
                     EXUserGroupLine.SETRANGE("Line No.", "Temp Line No.");
                     IF EXUserGroupLine.FINDFIRST THEN
                       EXUserGroupLine.DELETE;
                   END;

    ActionList=ACTIONS
    {
      { 1100285015;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100285016;1 ;Action    ;
                      Name=Add Replacer;
                      CaptionML=[ENU=Add Replacer;
                                 SVE=L„gg till Ers„ttare];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CoupledUsers;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 WebCompanyID@1100285000 : Record 12013630;
                               BEGIN
                                 IF Approver = '' THEN
                                   ERROR(TXT004);
                                 IF Replacer = Approver THEN
                                   ERROR(TXT005, Replacer, Approver);
                                 IF "Start Date" = 0D THEN
                                   ERROR(TXT006);
                                 IF "End Date" = 0D THEN
                                   ERROR(TXT007);

                                 IF "All Companies" THEN BEGIN
                                   IF WebCompanyID.FINDSET THEN
                                     REPEAT
                                       ReplaceUserMgt.ReplaceUser(WebCompanyID."Company Name", Approver,Replacer,"Start Date","End Date");
                                     UNTIL WebCompanyID.NEXT = 0;
                                 END ELSE IF Company <> '' THEN
                                   ReplaceUserMgt.ReplaceUser(Company, Approver,Replacer,"Start Date","End Date")
                                 ELSE
                                   ERROR(TXT009);

                                 UpdateUserGroupLines;
                                 MESSAGE(TXT008);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100285000;;Container;
                Name=General;
                CaptionML=[ENU=General;
                           SVE=Allmänt];
                ContainerType=ContentArea }

    { 1100285013;1;Group  ;
                GroupType=Group }

    { 1100285011;2;Field  ;
                Name=All Companies;
                CaptionML=[ENU=All Companies;
                           SVE=Alla F”retag];
                SourceExpr="All Companies";
                OnValidate=BEGIN
                             IF "All Companies" THEN
                               Company := '';

                             UpdateUserGroupLines;
                           END;
                            }

    { 1100285001;2;Field  ;
                Name=Company;
                CaptionML=[ENU=Company;
                           SVE=F”retag];
                SourceExpr=Company;
                TableRelation="Web Company ID" WHERE (Web enabled=CONST(Yes));
                OnValidate=BEGIN
                             IF Company <> '' THEN
                               "All Companies" := FALSE
                             ELSE
                               "All Companies" := TRUE;

                             UpdateUserGroupLines;
                           END;
                            }

    { 1100285002;2;Field  ;
                Name=Approver;
                CaptionML=[ENU=Approver;
                           SVE=Attestant];
                SourceExpr=Approver;
                TableRelation="EX User Company"."User ID";
                OnValidate=BEGIN
                             UpdateUserGroupLines;
                           END;

                OnLookup=VAR
                           TempEXUserCompany@1100285001 : TEMPORARY Record 12013641;
                           EXUserCompany@1100285002 : Record 12013641;
                           WebCompanyID@1100285003 : Record 12013630;
                         BEGIN
                           IF NOT "All Companies" AND (Company = '') THEN
                             ERROR(TXT009);

                           SetWebCompanyIDFilters(WebCompanyID);
                           IF WebCompanyID.FINDSET THEN
                             REPEAT
                               IF NOT "All Companies" THEN
                                 EXUserCompany.CHANGECOMPANY(WebCompanyID."Company Name");
                               EXUserCompany.RESET;
                               EXUserCompany.SETRANGE(Blocked, FALSE);
                               IF EXUserCompany.FINDSET THEN
                                 REPEAT
                                   IF NOT TempEXUserCompany.GET(EXUserCompany."User ID") THEN BEGIN
                                     TempEXUserCompany.INIT;
                                     TempEXUserCompany.TRANSFERFIELDS(EXUserCompany);
                                     TempEXUserCompany.INSERT;
                                   END;
                                 UNTIL EXUserCompany.NEXT = 0;
                             UNTIL WebCompanyID.NEXT = 0;

                           IF PAGE.RUNMODAL(0,TempEXUserCompany) = ACTION::LookupOK THEN
                             Approver := TempEXUserCompany."User ID";

                           Replacer := '';
                           UpdateUserGroupLines;
                         END;

                ShowMandatory=True }

    { 1100285003;2;Field  ;
                Name=Replacer;
                CaptionML=[ENU=Replacer;
                           SVE=Ers„ttare];
                SourceExpr=Replacer;
                TableRelation="EX User Company"."User ID";
                OnLookup=VAR
                           TempEXUserCompany@1100285002 : TEMPORARY Record 12013641;
                           EXUserCompany@1100285001 : Record 12013641;
                           WebCompanyID@1100285000 : Record 12013630;
                           FirstLoop@1100285004 : Boolean;
                         BEGIN
                           IF Approver = '' THEN
                             ERROR(TXT011);

                           IF NOT "All Companies" AND (Company = '') THEN
                             ERROR(TXT009);

                           FirstLoop := TRUE;
                           SetWebCompanyIDFilters(WebCompanyID);
                           IF WebCompanyID.FINDSET THEN
                             REPEAT
                               EXUserCompany.CHANGECOMPANY(WebCompanyID."Company Name");
                               IF FirstLoop THEN
                                 InsertInitialTempEXUserComp(EXUserCompany, TempEXUserCompany, FirstLoop)
                               ELSE
                                 RemoveInvalidReplacers(EXUserCompany, TempEXUserCompany);
                             UNTIL WebCompanyID.NEXT = 0;

                           IF PAGE.RUNMODAL(0,TempEXUserCompany) = ACTION::LookupOK THEN
                             Replacer := TempEXUserCompany."User ID";
                         END;

                ShowMandatory=TRUE }

    { 1100285004;2;Field  ;
                Name=Start Date;
                CaptionML=[ENU=Start Date;
                           SVE=Fr.o.m datum];
                SourceExpr="Start Date";
                OnValidate=BEGIN
                             IF "Start Date" < TODAY THEN
                               ERROR(TXT001);
                             IF ("Start Date" >= "End Date") AND NOT ("End Date" = 0D) THEN
                               ERROR(TXT002, "Start Date", "End Date");
                           END;

                ShowMandatory=TRUE }

    { 1100285005;2;Field  ;
                Name=End Date;
                CaptionML=[ENU=End Date;
                           SVE=T.o.m Datum];
                SourceExpr="End Date";
                OnValidate=BEGIN
                             IF "End Date" < TODAY THEN
                               ERROR(TXT003);
                             IF ("Start Date" >= "End Date") AND NOT ("End Date" = 0D) THEN
                               ERROR(TXT002, "Start Date", "End Date");
                           END;

                ShowMandatory=TRUE }

    { 1100285006;1;Group  ;
                GroupType=Repeater }

    { 1100285014;2;Field  ;
                CaptionML=[ENU=Company Name;
                           SVE=F”retagsnamn];
                SourceExpr="Temp Company Name";
                Editable=FALSE }

    { 1100285007;2;Field  ;
                CaptionML=[ENU=Approval Group;
                           SVE=Attestgrupp];
                SourceExpr=Code;
                Editable=FALSE }

    { 1100285008;2;Field  ;
                CaptionML=[ENU=Replacer;
                           SVE=Ers„ttare];
                SourceExpr="User ID";
                Editable=FALSE }

    { 1100285020;2;Field  ;
                SourceExpr="User Name";
                Editable=FALSE }

    { 1100285009;2;Field  ;
                SourceExpr="Starting Date";
                OnValidate=BEGIN
                             IF "Starting Date" < TODAY THEN
                               ERROR(TXT001);
                             IF ("Starting Date" >= "Ending Date") AND NOT ("Ending Date" = 0D) THEN
                               ERROR(TXT002, "Starting Date", "Ending Date");
                           END;
                            }

    { 1100285010;2;Field  ;
                SourceExpr="Ending Date";
                OnValidate=BEGIN
                             IF "Ending Date" < TODAY THEN
                               ERROR(TXT003);
                             IF ("Start Date" >= "Ending Date") THEN
                               ERROR(TXT002, "Starting Date", "Ending Date");
                           END;
                            }

    { 1100285012;2;Field  ;
                SourceExpr="Temp Line No.";
                Visible=FALSE;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      ReplaceUserMgt@1100285015 : Codeunit 12057141;
      "All Companies"@1100285006 : Boolean;
      Company@1100285000 : Text[30];
      Approver@1100285001 : Code[20];
      Replacer@1100285002 : Code[20];
      "Start Date"@1100285003 : Date;
      "End Date"@1100285004 : Date;
      TXT001@1100285007 : TextConst 'ENU=Start Date can not be earlier than today;SVE=Fr.o.m datum f†r ej vara tidigare „n dagensdatum';
      TXT002@1100285008 : TextConst 'ENU=Start Date (%1) cannot be larger or equal to End Date (%2);SVE=Fr.o.m datum (%1) f†r ej vara st”rre eller lika med t.o.m datum (%2)';
      TXT003@1100285009 : TextConst 'ENU=End Date cannot be earlier than today;SVE=T.o.m datum f†r ej vara tidigare „n dagensdatum';
      TXT004@1100285010 : TextConst 'ENU=Approver missing;SVE=Attestant saknas';
      TXT005@1100285011 : TextConst 'ENU=Replacer (%1) cannot be the same as Approver (%2);SVE=Ers„ttare (%1) f†r ej vara samma som Attestant (%2)';
      TXT006@1100285012 : TextConst 'ENU=Start Date Requires a value;SVE=Fr.o.m datum f†r ej vara tomt';
      TXT007@1100285013 : TextConst 'ENU=End Date Requires a value;SVE=T.o.m datum f†r ej vara tomt';
      TXT008@1100285014 : TextConst 'ENU=Replacers added;SVE=Ers„ttare inlagda';
      TXT009@1100285016 : TextConst 'ENU=No Company Selected;SVE=Inget f”retag valt';
      TXT010@1100285018 : TextConst 'ENU=No Replacers Found;SVE=Ingen ers„ttare finns';
      TXT011@1100285019 : TextConst 'ENU=Must select Approver before selecting replacer;SVE=M†st l„gga till attestant innan ers„ttare';

    LOCAL PROCEDURE UpdateUserGroupLines@1100285000();
    VAR
      EXUserGroupLine@1100285001 : Record 12013607;
      WebCompanyID@1100285003 : Record 12013630;
      Count@1100285002 : Integer;
    BEGIN
      Rec.DELETEALL;
      IF Approver = '' THEN BEGIN
        SetEmptyEXUserGroupLine;
        EXIT;
      END;

      IF (Company = '') AND NOT "All Companies" THEN BEGIN
        SetEmptyEXUserGroupLine;
        EXIT;
      END;

      Count := 0;
      Rec.SETCURRENTKEY("Temp Company Name");
      SetWebCompanyIDFilters(WebCompanyID);
      IF WebCompanyID.FINDSET THEN
        REPEAT
          EXUserGroupLine.CHANGECOMPANY(WebCompanyID."Company Name");
          EXUserGroupLine.RESET;
          EXUserGroupLine.SETFILTER("User ID", '<>%1', Approver);
          EXUserGroupLine.SETFILTER("Ending Date", '>=%1|%2', TODAY, 0D);
          IF EXUserGroupLine.FINDSET THEN
            REPEAT
              InsertTempRec(EXUserGroupLine, WebCompanyID."Company Name", Count);
            UNTIL EXUserGroupLine.NEXT = 0;
        UNTIL WebCompanyID.NEXT = 0;

      IF Rec.ISEMPTY THEN
        SetEmptyEXUserGroupLine;
    END;

    LOCAL PROCEDURE SetEmptyEXUserGroupLine@1100285019();
    BEGIN
      INIT;
      Rec.Code := TXT010;
      INSERT;
    END;

    PROCEDURE SetApprover@1100285001(SelectedApprover@1100285000 : Code[20]);
    BEGIN
      Approver := SelectedApprover;
    END;

    LOCAL PROCEDURE SetWebCompanyIDFilters@1100285013(VAR WebCompanyID@1100285000 : Record 12013630);
    BEGIN
      WebCompanyID.RESET;
      WebCompanyID.SETRANGE("Web enabled", TRUE);
      IF Company <> '' THEN
        WebCompanyID.SETRANGE("Company Name", Company);
    END;

    LOCAL PROCEDURE InsertInitialTempEXUserComp@1100285021(VAR EXUserCompany@1100285000 : Record 12013641;VAR TempEXUserCompany@1100285001 : TEMPORARY Record 12013641;VAR FirstLoop@1100285002 : Boolean);
    BEGIN
      IF NOT EXUserCompany.GET(Approver) THEN
        EXIT;

      EXUserCompany.RESET;
      EXUserCompany.SETRANGE(Blocked, FALSE);
      EXUserCompany.SETFILTER("User ID", '<>%1', Approver);
      IF EXUserCompany.FINDSET THEN
        REPEAT
          TempEXUserCompany.INIT;
          TempEXUserCompany.TRANSFERFIELDS(EXUserCompany);
          TempEXUserCompany.INSERT;
        UNTIL EXUserCompany.NEXT = 0;
      FirstLoop := FALSE;
    END;

    LOCAL PROCEDURE RemoveInvalidReplacers@1100285004(VAR EXUserCompany@1100285000 : Record 12013641;VAR TempEXUserCompany@1100285001 : TEMPORARY Record 12013641);
    BEGIN
      IF NOT EXUserCompany.GET(Approver) THEN
        EXIT;

      TempEXUserCompany.RESET;
      IF TempEXUserCompany.FINDSET(TRUE) THEN
        REPEAT
          IF NOT EXUserCompany.GET(TempEXUserCompany."User ID") THEN
            TempEXUserCompany.DELETE;
        UNTIL TempEXUserCompany.NEXT = 0;
    END;

    LOCAL PROCEDURE InsertTempRec@1100285011(EXUserGroupLine@1100285000 : Record 12013607;CompanyName@1100285002 : Text[30];VAR Count@1100285001 : Integer);
    VAR
      EXUserGroup@1100285003 : Record 12013606;
    BEGIN
      IF (EXUserGroupLine."Replacer Added For User" <> Approver) AND (EXUserGroupLine.Code <> Approver) THEN
        EXIT;

      EXUserGroup.CHANGECOMPANY(CompanyName);
      EXUserGroup.RESET;
      EXUserGroup.SETRANGE(Code, EXUserGroupLine.Code);
      EXUserGroup.SETRANGE(Blocked, FALSE);
      IF EXUserGroup.ISEMPTY THEN
        EXIT;

      INIT;
      Rec.TRANSFERFIELDS(EXUserGroupLine);
      Rec."Temp Company Name" := CompanyName;
      Rec."Temp Line No." := EXUserGroupLine."Line No.";
      Rec."Line No." := Count;
      INSERT;
      Count := Count + 1;
    END;

    BEGIN
    END.
  }
}

