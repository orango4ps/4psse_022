OBJECT Page 11229427 Create Next Service Order Unf.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Fortsetzungsauftrag (Unfertig) erstellen;
               ENU=Create Next Service Order (Unfinished);
               NLD=Vervolgorder aanmaken (niet gerealiseerd);
               SVE=Skapa nÑsta serviceorder (ofÑrdig)];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table11012823;
    PageType=StandardDialog;
    OnInit=BEGIN
             InitSettings;
           END;

    OnOpenPage=BEGIN
                 SetSourceServiceOrders(Rec);
               END;

    OnAfterGetRecord=BEGIN
                       DetermineSettings;
                     END;

    OnQueryClosePage=BEGIN
                       CloseActionOK := CloseAction IN [ACTION::OK, ACTION::LookupOK];
                     END;

  }
  CONTROLS
  {
    { 1100528600;0;Container;
                ContainerType=ContentArea }

    { 1100528603;1;Group  ;
                CaptionML=[DEU=Kopieren von;
                           ENU=Copy From;
                           NLD=Kopieer van;
                           NOR=Kopier fra;
                           SVE=Kopiera frÜn];
                GroupType=Group }

    { 1100528604;2;Field  ;
                CaptionML=[DEU=Nr.;
                           ENU=No.;
                           NLD=Nr.;
                           NOR=Nr.;
                           SVE=Nr];
                SourceExpr=ServiceOrderNo;
                Editable=FALSE }

    { 1100528605;2;Field  ;
                CaptionML=[DEU=Beschreibung;
                           ENU=Description;
                           NLD=Omschrijving;
                           NOR=Beskrivelse;
                           SVE=Beskrivning];
                SourceExpr=ServiceOrderDescription;
                Editable=FALSE }

    { 1100528623;2;Field  ;
                CaptionML=[DEU=Herkunftsart;
                           ENU=Source Type;
                           NLD=Bron;
                           NOR=Kildetype;
                           SVE=Ursprungstyp];
                OptionCaptionML=[DEU=" ,Meldung,Vertrag,Direkt,SchÑtzung,,,Modifikation,Ersatz";
                                 ENU=" ,Call,Contract,Direct,Estimate,,,Modification,Replacement";
                                 NLD=" ,Melding,Contract,Direct,Calculatie,,,Modificatie,Vervanging";
                                 NOR=" ,Samtale,Kontrakt,Direkte,Kalkyle,,,Modifisering,Erstatning";
                                 SVE=" ,Samtal,Kontrakt,Direkt,Kalkyl,,,éndring,ErsÑttning"];
                SourceExpr=ServiceOrderSourceType;
                Enabled=FALSE }

    { 1100527350;2;Field  ;
                CaptionML=[DEU=éndern Sie den aktuellen Referenzpunkt des Serviceauftrags;
                           ENU=Change Actual Reference Point of the Service Order;
                           NLD=Wijzig het actuele logmoment van de serviceorder];
                SourceExpr=ChangeActualReferencePoint }

    { 1100528606;1;Group  ;
                CaptionML=[DEU=Kopieren in;
                           ENU=Copy To;
                           NLD=Kopieer naar;
                           NOR=Kopier til;
                           SVE=Kopiera till];
                GroupType=Group }

    { 1100528607;2;Field  ;
                CaptionML=[DEU=Herkunftsart;
                           ENU=Source Type;
                           NLD=Bron;
                           NOR=Kildetype;
                           SVE=Ursprungstyp];
                OptionCaptionML=[DEU=*, Meldung,Vertrag,Direkt,Kalkulieren,,,Modifikation,Ersatz;
                                 ENU=*,Call,Contract,Direct,Estimate,,,Modification,Replacement;
                                 NLD=*,Melding,Contract,Direct,Calculatie,,,Modificatie,Vervanging;
                                 NOR=Samtale,Kontrakt,Direkte,Kalkyle,,,Endring,Erstatning;
                                 SVE=*,Samtal,Kontrakt,Direkt,Kalkyl,,,éndring,ErsÑttning];
                SourceExpr=SourceType;
                Enabled=FALSE }

    { 1100528608;2;Field  ;
                CaptionML=[DEU=Nummernserie;
                           ENU=No. Series;
                           NLD=Nummerreeks;
                           NOR=Nr-serie;
                           SVE=Nr-serier];
                SourceExpr=NoSeries;
                Enabled=FALSE }

    { 1100528609;2;Field  ;
                CaptionML=[DEU=Auftragsart;
                           ENU=Order Kind;
                           NLD=Ordersoort;
                           NOR=Type ordre;
                           SVE=Ordertyp];
                SourceExpr=OrderKind;
                TableRelation="Service Order Indication".Code WHERE (Indication=CONST(Kind)) }

    { 1100528610;2;Field  ;
                CaptionML=[DEU=Meldungsreferenz kopieren;
                           ENU=Copy Call Reference;
                           NLD=Kopieer verwijzing naar servicemelding];
                SourceExpr=CopyCallReference }

    { 1100528622;2;Field  ;
                CaptionML=[DEU=Kopieren Fortsetzungsgenerierung;
                           ENU=Copy Try-Out Successor;
                           NLD=Kopiâren vervolgtraject;
                           NOR=Kopier etterfõlger (prospekt);
                           SVE=Kopiera efterfîljare, anbud];
                SourceExpr=CopyTryOutSuccessor }

    { 1100528612;2;Field  ;
                CaptionML=[DEU=Bemerkungszeilen kopieren;
                           ENU=Copy Comment Lines;
                           NLD=Kopieer opmerkingen;
                           SVE=Kopiera kommentarsrader];
                SourceExpr=CopyCommentLines }

    { 1100528613;2;Field  ;
                CaptionML=[DEU=Objekte kopieren;
                           ENU=Copy Objects;
                           NLD=Kopieer objecten];
                SourceExpr=CopyObjects }

    { 1100528614;2;Field  ;
                CaptionML=[DEU=Vorschlagsauftragszeilen verschieben;
                           ENU=Move Advice Order Lines;
                           NLD=Verplaats adviesorderregels];
                SourceExpr=MoveAdviceOrderLines;
                OnValidate=BEGIN
                             UpdateEnabled;
                           END;
                            }

    { 1100528615;2;Field  ;
                CaptionML=[DEU=Vorschlagsauftrag Zeilenstatus;
                           ENU=Advice Order Line Status;
                           NLD=Adviesorderregelstatus];
                OptionCaptionML=[DEU=Beide,Offen,Freigegeben;
                                 ENU=Both,Open,Released;
                                 NLD=Beide,Openstaand,Vrijgegeven;
                                 SVE=BÜda,ôppen,SlÑppt];
                SourceExpr=AdviceOrderLineStatus;
                Enabled=AdviceOrderLineStatusEnabled }

    { 1100528616;2;Field  ;
                CaptionML=[DEU=Offene Budgetzeilen verschieben;
                           ENU=Move Open Budget Lines;
                           NLD=Verplaats openstaande begrotingsregels];
                SourceExpr=MoveOrderBudgetLines }

    { 1100528620;2;Field  ;
                CaptionML=[DEU=Belege kopieren;
                           ENU=Copy Documents;
                           NLD=Kopieer documenten];
                SourceExpr=CopyDocuments }

    { 1100528621;2;Field  ;
                CaptionML=[DEU=Kopieren StÅckpreise;
                           ENU=Copy Unit Prices;
                           NLD=Kopieer eenheidsprijzen;
                           NOR=Kopier enhetspriser;
                           SVE=Kopiera enhetspriser];
                SourceExpr=CopyUnitPrices }

    { 1100528617;2;Field  ;
                CaptionML=[DEU=Lîsungstext kopieren;
                           ENU=Copy Resolution Text;
                           NLD=Kopieer oplossingstekst];
                SourceExpr=CopySolutionText }

    { 1100528618;2;Field  ;
                CaptionML=[DEU=Ursachentext kopieren;
                           ENU=Copy Cause Text;
                           NLD=Kopieer oorzaaktekst];
                SourceExpr=CopyCauseText }

    { 1100528619;2;Field  ;
                CaptionML=[DEU=Ressource kopieren;
                           ENU=Copy Resource;
                           NLD=Kopieer werknemer/onderaannemer];
                SourceExpr=CopyResource }

    { 1100528800;2;Field  ;
                CaptionML=[DEU=Zugewiesene kopieren an;
                           ENU=Copy Assigned to;
                           NLD=Kopieer actie voor;
                           SVE=Kopiera tilldelad till];
                SourceExpr=CopyAssignTo }

    { 1100528601;2;Field  ;
                CaptionML=[DEU=Nebenkosten kopieren;
                           ENU=Copy Extra Cost;
                           NLD=Kopieer bijkomende kosten];
                SourceExpr=CopyServiceExtraCost }

    { 1100528501;2;Field  ;
                CaptionML=[DEU=Kopiere Nachbesprechungstext;
                           ENU=Copy Debrief Text;
                           NLD=Kopieer debrieftekst];
                SourceExpr=CopyDebriefText }

    { 1100528401;2;Field  ;
                CaptionML=[DEU=Service Prozessfeldzuweisung anwenden;
                           ENU=Apply Service Process Field Assignm.;
                           NLD=Service procesveldtoekenning toepassen];
                SourceExpr=ApplyServiceProcessFieldAssignm }

  }
  CODE
  {
    VAR
      CopyMethod@1100528600 : 'Copy,Unfinished,Additional';
      SourceType@1100528601 : 'Call,Contract,Direct,Estimate,,,Modification,Replacement';
      NoSeries@1100528602 : Code[20];
      OrderKind@1100528603 : Code[20];
      CopyCallReference@1100528604 : Boolean;
      CopyTryOutSuccessor@1100528617 : Boolean;
      CopyCommentLines@1100528606 : Boolean;
      CopyObjects@1100528607 : Boolean;
      MoveAdviceOrderLines@1100528608 : Boolean;
      AdviceOrderLineStatus@1100528609 : 'Both,Open,Released';
      AdviceOrderLineStatusEnabled@1100528614 : Boolean;
      MoveOrderBudgetLines@1100528610 : Boolean;
      CopySolutionText@1100528611 : Boolean;
      CopyCauseText@1100528612 : Boolean;
      CopyResource@1100528613 : Boolean;
      CopyDocuments@1100528615 : Boolean;
      CopyUnitPrices@1100528616 : Boolean;
      CopyServiceExtraCost@1100528605 : Boolean;
      CloseActionOK@1100528619 : Boolean;
      CreatedServiceOrder@1100528620 : Code[20];
      CopyAssignTo@1100528800 : Boolean;
      ServiceOrderNo@1100528618 : Code[20];
      ServiceOrderDescription@1100528621 : Text[50];
      ServiceOrderSourceType@1100528622 : Option;
      MultiCopy@1100528623 : Boolean;
      CopyDebriefText@1100528500 : Boolean;
      ApplyServiceProcessFieldAssignm@1100528400 : Boolean;
      ChangeActualReferencePoint@1100527350 : Boolean;

    LOCAL PROCEDURE SetSourceServiceOrders@1100528604(VAR IServiceOrders@1100528600 : Record 11012823);
    BEGIN
      COPY(IServiceOrders);
      MultiCopy := COUNT > 1;
      IF NOT MultiCopy THEN BEGIN
        FINDFIRST;
        ServiceOrderNo := "No.";
        ServiceOrderDescription := Description;
        ServiceOrderSourceType := "Source Type" +1;
      END ELSE BEGIN
        ServiceOrderNo := STRSUBSTNO('[%1]', COUNT);
        ServiceOrderDescription := '';
        ServiceOrderSourceType := 0;
      END;
    END;

    LOCAL PROCEDURE InitSettings@1100528603();
    VAR
      ServiceSetup@1100528600 : Record 11012800;
    BEGIN
      ServiceSetup.GET;

      CopyCallReference := TRUE;
      CopyTryOutSuccessor := TRUE;
      CopyCommentLines := TRUE;
      CopyObjects := TRUE;
      MoveAdviceOrderLines := TRUE;
      MoveOrderBudgetLines := TRUE;
      CopyDocuments := ServiceSetup."Copy Docs to Next Order";
      CopyUnitPrices := ServiceSetup."Copy Unit Prices to Next Order";
      CopySolutionText := TRUE;
      CopyCauseText := TRUE;
      CopyResource := TRUE;
      CopySolutionText := FALSE;
      CopyDebriefText := FALSE;
      ApplyServiceProcessFieldAssignm := FALSE;
      ChangeActualReferencePoint := FALSE;
    END;

    LOCAL PROCEDURE DetermineSettings@1100528601();
    VAR
      ServiceSetup@1100528600 : Record 11012800;
      ServiceOrder@1100528601 : Record 11012823;
      AllSOsHaveSameSourceType@1100528602 : Boolean;
    BEGIN
      ServiceSetup.GET;

      ServiceOrder.COPY(Rec);
      IF ServiceOrder.FINDFIRST THEN BEGIN
        ServiceOrder.SETFILTER("Source Type", '<>%1', "Source Type");
        AllSOsHaveSameSourceType := ServiceOrder.ISEMPTY;
      END;
      IF NOT MultiCopy OR AllSOsHaveSameSourceType THEN BEGIN
        SourceType := "Source Type" +1;
        NoSeries := GetNoSeriesBySourceType(SourceType -1);
      END ELSE BEGIN
        SourceType := 0;
        NoSeries := '';
      END;
      OrderKind := "Order Kind";

      UpdateEnabled;
    END;

    LOCAL PROCEDURE GetNoSeriesBySourceType@1100528600(ISourceType@1100528601 : Option) : Code[20];
    VAR
      ServiceSourceTypeSetup@1100528600 : Record 11071726;
    BEGIN
      ServiceSourceTypeSetup.GET(ISourceType);
      ServiceSourceTypeSetup.TESTFIELD("No. Series");
      EXIT(ServiceSourceTypeSetup."No. Series");
    END;

    LOCAL PROCEDURE UpdateEnabled@1100528606();
    BEGIN
      AdviceOrderLineStatusEnabled := MoveAdviceOrderLines;
    END;

    LOCAL PROCEDURE StdDialogConfirm@1100528400() : Boolean;
    BEGIN
      CurrPage.RUNMODAL;
      EXIT(CloseActionOK);
    END;

    LOCAL PROCEDURE StdDialogDoAction@1100528401(VAR OCreatedServiceOrderNoRange@1100528600 : Code[50]);
    BEGIN
      OCreatedServiceOrderNoRange := DoCopy();
    END;

    PROCEDURE StdDialogRunModal@1100528404(ISourceServiceOrderNo@1100528601 : Code[20];VAR OCreatedServiceOrderNo@1100528600 : Code[20]) : Boolean;
    VAR
      ServiceOrder@1100528602 : Record 11012823;
    BEGIN
      ServiceOrder.GET(ISourceServiceOrderNo);
      ServiceOrder.SETRECFILTER;
      EXIT(StdDialogRunModalMultiCopy(ServiceOrder, OCreatedServiceOrderNo));
    END;

    PROCEDURE StdDialogRunModalMultiCopy@1100528602(VAR ISourceServiceOrders@1100528601 : Record 11012823;VAR OCreatedServiceOrderNoRange@1100528600 : Code[50]) : Boolean;
    BEGIN
      SetSourceServiceOrders(ISourceServiceOrders);
      IF StdDialogConfirm THEN BEGIN
        StdDialogDoAction(OCreatedServiceOrderNoRange);
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE DoCopy@1100528609() : Code[50];
    VAR
      CopyServiceOrderCall@1100528600 : Codeunit 11012851;
      CreatedServiceOrderNo@1100528603 : Code[20];
      FirstCreatedServiceOrderNo@1100528601 : Code[20];
      LastCreatedServiceOrderNo@1100528602 : Code[20];
    BEGIN
      IF FINDSET THEN
        REPEAT
          CreatedServiceOrderNo :=
            CopyServiceOrderCall.CopyServiceOrder(
              "No.", CopyMethod::Unfinished, "Source Type", GetNoSeriesBySourceType("Source Type"), OrderKind, CopyCallReference, TRUE, CopyTryOutSuccessor, CopyCommentLines,
              CopyObjects, MoveAdviceOrderLines, AdviceOrderLineStatus, MoveOrderBudgetLines, CopyDocuments, CopyUnitPrices, CopySolutionText,
              CopyCauseText, CopyResource, CopyAssignTo, CopyServiceExtraCost, FALSE, CopyDebriefText, ApplyServiceProcessFieldAssignm);
          IF FirstCreatedServiceOrderNo = '' THEN
            FirstCreatedServiceOrderNo := CreatedServiceOrderNo;
          LastCreatedServiceOrderNo := CreatedServiceOrderNo;

          IF ChangeActualReferencePoint THEN
            UpdateToNextRefPoint(5);
        UNTIL NEXT = 0;
      IF FirstCreatedServiceOrderNo = LastCreatedServiceOrderNo THEN
        EXIT(FirstCreatedServiceOrderNo)
      ELSE
        EXIT(STRSUBSTNO('%1..%2', FirstCreatedServiceOrderNo, LastCreatedServiceOrderNo));
    END;

    PROCEDURE GetCreatedServiceOrder@1100528605() : Code[20];
    BEGIN
      EXIT(CreatedServiceOrder);
    END;

    BEGIN
    END.
  }
}

