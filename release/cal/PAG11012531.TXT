OBJECT Page 11012531 Option Budget Summary Sheet
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Option Budget Summary Sheet;
               NOR=Budsjettjustering, sammendragsark;
               SVE=Alternativbudget, sammandragsark];
    SourceTable=Table11012064;
    PageType=List;
    OnInit=BEGIN
             CostComponentEditable := TRUE;
             TmpOptionRec.DELETEALL;
           END;

    OnOpenPage=VAR
                 JobSetup@1100525000 : Record 315;
               BEGIN
                 JobSetup.GET;
                 CostComponentEditable := JobSetup."Cost Component Editable";
               END;

    OnClosePage=BEGIN
                  CheckUpdateOptionBudget();
                END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=BEGIN
                     UpdateTmpOption();
                   END;

    OnModifyRecord=BEGIN
                     UpdateTmpOption();
                   END;

    OnDeleteRecord=BEGIN
                     UpdateTmpOption();
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190034;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 NOR=Fu&nksjon;
                                 SVE=F&unktioner] }
      { 1210190073;2 ;Action    ;
                      CaptionML=[ENU=Get Standard Summary Sheet;
                                 NOR=Hente standardsammendragsark;
                                 SVE=H„mta standardsammandragsark];
                      Image=Import;
                      OnAction=BEGIN
                                 CopyTemplate("Project No.", '', "Plot No.", "House Model", "Main Group", Group, "Sub Group", Option);
                                 ReCalcOptionSummaryLines;
                                 UpdateOptBudgetLines();
                                 UpdateTmpOption();
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190000;1;Group  ;
                GroupType=Repeater }

    { 1210190067;2;Field  ;
                SourceExpr="Row No." }

    { 1210190001;2;Field  ;
                SourceExpr=Element }

    { 1210190003;2;Field  ;
                SourceExpr="Cost Type";
                OnValidate=BEGIN
                             FieldsOnAfterValidate;
                           END;
                            }

    { 1210190005;2;Field  ;
                SourceExpr="Cost Object";
                OnValidate=BEGIN
                             FieldsOnAfterValidate;
                           END;
                            }

    { 1100525001;2;Field  ;
                SourceExpr="Overhead Surcharge";
                Visible=FALSE }

    { 1100485000;2;Field  ;
                SourceExpr="Cost Component";
                Editable=CostComponentEditable }

    { 1210190007;2;Field  ;
                SourceExpr=Description }

    { 1210190009;2;Field  ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             FieldsOnAfterValidate;
                           END;
                            }

    { 1210190075;2;Field  ;
                SourceExpr="Kind of Surcharge";
                Editable=KindOfSurchargeEditable;
                OnValidate=BEGIN
                             FieldsOnAfterValidate;
                           END;
                            }

    { 1100409000;2;Field  ;
                SourceExpr="Amount/Hours";
                OnValidate=BEGIN
                             FieldsOnAfterValidate;
                           END;
                            }

    { 1210190011;2;Field  ;
                SourceExpr=Quantity;
                Editable=FieldsEditable;
                OnValidate=BEGIN
                             FieldsOnAfterValidate;
                           END;
                            }

    { 1210190013;2;Field  ;
                SourceExpr=Norm;
                Editable=NormEditable;
                OnValidate=BEGIN
                             FieldsOnAfterValidate;
                           END;
                            }

    { 1210190015;2;Field  ;
                SourceExpr="Unit of Measure";
                Editable=FieldsEditable }

    { 1210190017;2;Field  ;
                SourceExpr="Rate Code";
                Editable=RateCodeEditable;
                OnValidate=BEGIN
                             FieldsOnAfterValidate;
                           END;
                            }

    { 1210190019;2;Field  ;
                SourceExpr="Rate (LCY)";
                Editable=RateEditable;
                OnValidate=BEGIN
                             FieldsOnAfterValidate;
                           END;
                            }

    { 1210190021;2;Field  ;
                SourceExpr="Price (LCY)";
                Editable=PriceEditable;
                OnValidate=BEGIN
                             FieldsOnAfterValidate;
                           END;
                            }

    { 1210190023;2;Field  ;
                SourceExpr=Hours;
                Editable=FieldsEditable }

    { 1210190025;2;Field  ;
                SourceExpr="Amount (LCY)";
                Editable=AmountEditable }

    { 1210190027;2;Field  ;
                SourceExpr="Cost Type Filter";
                Editable=CostTypeFilterEditable;
                OnValidate=BEGIN
                             FieldsOnAfterValidate;
                           END;
                            }

    { 1210190029;2;Field  ;
                SourceExpr="Cost Object Filter";
                Editable=CostObjectFilterEditable;
                OnValidate=BEGIN
                             FieldsOnAfterValidate;
                           END;
                            }

    { 1210190035;2;Field  ;
                SourceExpr="Element Filter";
                Editable=ElementFilterEditable;
                OnValidate=BEGIN
                             FieldsOnAfterValidate;
                           END;
                            }

    { 1210190069;2;Field  ;
                SourceExpr=Totaling;
                OnValidate=BEGIN
                             FieldsOnAfterValidate;
                           END;
                            }

    { 1210190071;2;Field  ;
                SourceExpr=Subtotal;
                Editable=FALSE;
                OnValidate=BEGIN
                             FieldsOnAfterValidate;
                           END;
                            }

    { 1210190002;0;Container;
                ContainerType=FactBoxArea }

    { 1100525002;1;Part   ;
                SubPageLink=Project No.=FIELD(Project No.),
                            Plot No.=FIELD(Plot No.),
                            House Model=FIELD(House Model),
                            Main Group=FIELD(Main Group),
                            Group=FIELD(Group),
                            Sub Group=FIELD(Sub Group),
                            Option=FIELD(Option);
                PagePartID=Page11130293;
                PartType=Page }

    { 1210190004;1;Part   ;
                CaptionML=[ENU=Option Budget Totals;
                           NOR=Alternativt budsjett-totaler;
                           SVE=Alternativ budget uppg†r till];
                SubPageView=WHERE(Summary Filter=FILTER(No));
                SubPageLink=Project No.=FIELD(Project No.),
                            Plot No.=FIELD(Plot No.),
                            House Model=FIELD(House Model),
                            Main Group=FIELD(Main Group),
                            Group=FIELD(Group),
                            Sub Group=FIELD(Sub Group),
                            Option=FIELD(Option),
                            Summary Filter=FILTER(No);
                PagePartID=Page11130292;
                PartType=Page }

    { 1100525000;1;Part   ;
                SubPageLink=Project No.=FIELD(Project No.),
                            Contract No.=FIELD(Contract No.),
                            Plot No.=FIELD(Plot No.),
                            House Model=FIELD(House Model),
                            Main Group=FIELD(Main Group),
                            Group=FIELD(Group),
                            Sub Group=FIELD(Sub Group),
                            Option=FIELD(Option);
                PagePartID=Page11130294;
                PartType=Page }

  }
  CODE
  {
    VAR
      TmpOptionRec@1210190015 : TEMPORARY Record 11012502;
      CostComponentEditable@19073195 : Boolean INDATASET;
      FieldsEditable@1210190000 : Boolean INDATASET;
      RateCodeEditable@1210190001 : Boolean INDATASET;
      NormEditable@1210190002 : Boolean INDATASET;
      RateEditable@1210190003 : Boolean INDATASET;
      AmountEditable@1210190004 : Boolean INDATASET;
      KindOfSurchargeEditable@1210190005 : Boolean INDATASET;
      PriceEditable@1210190006 : Boolean INDATASET;
      CostTypeFilterEditable@1210190007 : Boolean INDATASET;
      CostObjectFilterEditable@1210190008 : Boolean INDATASET;
      ElementFilterEditable@1210190009 : Boolean INDATASET;

    PROCEDURE UpdateTmpOption@1210190003();
    BEGIN
      IF TmpOptionRec.GET("Project No.", "Plot No.", "House Model", "Main Group", Group, "Sub Group", Option) THEN
        EXIT;

      TmpOptionRec.INIT;
      TmpOptionRec."Project No." := "Project No.";
      TmpOptionRec."Plot No." := "Plot No.";
      TmpOptionRec."House Model" := "House Model";
      TmpOptionRec."Main Group" := "Main Group";
      TmpOptionRec.Group := Group;
      TmpOptionRec."Sub Group" := "Sub Group";
      TmpOptionRec.Option := Option;
      TmpOptionRec.INSERT;
    END;

    PROCEDURE CheckUpdateOptionBudget@1210190004();
    VAR
      lvBudgSummaryRec@1210190000 : Record 11012064;
      lvOptionRec@1210190001 : Record 11012502;
    BEGIN
      WITH TmpOptionRec DO BEGIN
        IF NOT FINDSET(TRUE, FALSE) THEN
          EXIT;

        REPEAT
          lvBudgSummaryRec."Project No." := "Project No.";
          lvBudgSummaryRec."Contract No." := '';
          lvBudgSummaryRec."Plot No." := "Plot No.";
          lvBudgSummaryRec."House Model" := "House Model";
          lvBudgSummaryRec."Main Group" := "Main Group";
          lvBudgSummaryRec.Group := Group;
          lvBudgSummaryRec."Sub Group" := "Sub Group";
          lvBudgSummaryRec.Option := Option;
          lvBudgSummaryRec.UpdateOptBudgetLines();

          IF ("Plot No." <> '') THEN BEGIN
            lvOptionRec.GET("Project No.", "Plot No.", "House Model", "Main Group", Group, "Sub Group", Option);
            lvOptionRec.UpdateWorkBudgetOnChanges(lvOptionRec, FALSE, FALSE);
          END;
          DELETE;
          COMMIT;
        UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE FieldsOnAfterValidate@19065147();
    BEGIN
      CurrPage.UPDATE();
      CalcOptionTotals();
      CurrPage.UPDATE();
      ReCalcOptionSummaryLines();
      CurrPage.UPDATE();
      SetFieldsEditable;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      SetFieldsEditable;
    END;

    PROCEDURE SetFieldsEditable@1210190002();
    BEGIN
      IF Type = Type::Text THEN
        FieldsEditable := FALSE
      ELSE
        FieldsEditable := TRUE;

      RateCodeEditable := ("Cost Type" = "Cost Type"::Labor) AND FieldsEditable;
      NormEditable := ("Cost Type" = "Cost Type"::Labor) AND FieldsEditable;
      RateEditable :=
        ("Cost Type" = "Cost Type"::Labor) AND
        ("Rate Code" = '') AND FieldsEditable;
      AmountEditable :=
        ("Cost Type" = "Cost Type"::Labor) AND (Norm = 0) AND
        (Quantity = 0) AND FieldsEditable AND (Type <> Type::Surcharge);

      KindOfSurchargeEditable := (Type = Type::Surcharge) OR (Type = Type::Subtotal);
      PriceEditable := (("Cost Type" <> "Cost Type"::Labor) AND (Type <> Type::Text) AND (Type <> Type::Surcharge));
      CostTypeFilterEditable := (Type = Type::Surcharge) OR (Type = Type::Subtotal);
      CostObjectFilterEditable := (Type = Type::Surcharge) OR (Type = Type::Subtotal);
      ElementFilterEditable := (Type = Type::Surcharge);
    END;

    BEGIN
    END.
  }
}

