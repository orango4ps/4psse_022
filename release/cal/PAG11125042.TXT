OBJECT Page 11125042 Subcontracting Hours Invoice
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Subuntern. Stunden Rechnung;
               ENU=Subcontracting Hours Invoice;
               NLD=Onderaannemings uren factuur;
               NOR=Faktura for underentrepen›r (Timer);
               SVE=Faktura f”r underentreprenadstimmar];
    SourceTable=Table11020694;
    DelayedInsert=Yes;
    PageType=List;
    AutoSplitKey=Yes;
    OnOpenPage=VAR
                 LoopCount@1100528200 : Integer;
               BEGIN
                 ShowGetReceiptLines := TRUE;
                 FOR LoopCount := 0 TO 9 DO
                 BEGIN
                   FILTERGROUP(LoopCount);
                   IF GETFILTER(Type) = FORMAT(Type::Order) THEN BEGIN
                     ShowGetReceiptLines := FALSE;
                     LoopCount := 9;
                   END;
                 END;
                 FILTERGROUP(0);
               END;

    OnClosePage=BEGIN
                  IF (CurrPage.EDITABLE) OR LinesImported THEN
                    UpdateAmounts(HoldEntryNo);
                END;

    OnNewRecord=BEGIN
                  GetGlobalVars;
                END;

    OnModifyRecord=BEGIN
                     SetGlobalVars(Year, Week, "Vendor No.", "Project No.", "Service Order No.", HoldEntryNo);
                   END;

    ActionList=ACTIONS
    {
      { 1100528202;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528201;1 ;ActionGroup;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unctions;
                                 NLD=F&uncties;
                                 NOR=Fu&nksjon;
                                 SVE=Fu&nktion];
                      Image=Action }
      { 1100528200;2 ;Action    ;
                      Name=GetReceiptLines;
                      AccessByPermission=TableData 120=R;
                      Ellipsis=Yes;
                      CaptionML=[DEU=&Wareneingangszeilen abrufen;
                                 ENU=&Get Receipt Lines;
                                 NLD=O&ntvangstregels ophalen;
                                 NOR=&Hente Kvitteringsrader;
                                 SVE=H„mta inl&everans];
                      Visible=ShowGetReceiptLines;
                      Image=Receipt;
                      OnAction=VAR
                                 SubcontractingHoursInvoice@1100528200 : Record 11020694;
                                 InCount@1100528201 : Integer;
                                 OutCount@1100528202 : Integer;
                               BEGIN
                                 CurrPage.EDITABLE(TRUE);
                                 FILTERGROUP(9);
                                 SubcontractingHoursInvoice.SETFILTER(Type, GETFILTER(Type));
                                 SubcontractingHoursInvoice.SETFILTER("Document No.", GETFILTER("Document No."));
                                 FILTERGROUP(0);
                                 InCount := SubcontractingHoursInvoice.COUNT;
                                 GetReceipts;
                                 OutCount := SubcontractingHoursInvoice.COUNT;
                                 IF InCount <> OutCount THEN
                                   LinesImported := TRUE;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100528300;1;Group  ;
                GroupType=Repeater }

    { 1100528303;2;Field  ;
                SourceExpr=Year }

    { 1100528305;2;Field  ;
                SourceExpr=Week }

    { 1100528307;2;Field  ;
                SourceExpr="Vendor No." }

    { 1100528301;2;Field  ;
                SourceExpr="Vendor Name" }

    { 1100528309;2;Field  ;
                SourceExpr="Employee No." }

    { 1100528338;2;Field  ;
                SourceExpr="Employee Name" }

    { 1100525000;2;Field  ;
                SourceExpr="Employee Social Security No.";
                Visible=FALSE }

    { 1100528311;2;Field  ;
                SourceExpr="Project No." }

    { 1100528340;2;Field  ;
                SourceExpr="Extension Contract";
                Visible=FALSE }

    { 1100528342;2;Field  ;
                SourceExpr="Cost Object";
                Visible=FALSE }

    { 1100528344;2;Field  ;
                SourceExpr="Cost Object Description";
                Visible=FALSE }

    { 1100528315;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE }

    { 1100528346;2;Field  ;
                SourceExpr="Element Description";
                Visible=FALSE }

    { 1100528348;2;Field  ;
                SourceExpr="Hour Rate" }

    { 1100528317;2;Field  ;
                SourceExpr="B Amount %" }

    { 1100528206;2;Field  ;
                SourceExpr="Fixed B Amount per Hour" }

    { 1100528319;2;Field  ;
                SourceExpr=Monday }

    { 1100528321;2;Field  ;
                SourceExpr=Tuesday }

    { 1100528323;2;Field  ;
                SourceExpr=Wednesday }

    { 1100528325;2;Field  ;
                SourceExpr=Thursday }

    { 1100528327;2;Field  ;
                SourceExpr=Friday }

    { 1100528329;2;Field  ;
                SourceExpr=Saturday }

    { 1100528331;2;Field  ;
                SourceExpr=Sunday }

    { 1100528333;2;Field  ;
                SourceExpr="Total Hours" }

    { 1100528203;2;Field  ;
                CaptionML=[DEU=Datensatz-ID;
                           ENU=Record ID;
                           NLD=Record ID;
                           NOR=Post-ID;
                           SVE=Post-ID];
                SourceExpr=FORMAT("Record ID");
                Visible=FALSE }

    { 1100528204;2;Field  ;
                CaptionML=[DEU=Aus Datensatz-ID kopieren;
                           ENU=Copy from Record ID;
                           NLD=Gekopieerd van Record ID];
                SourceExpr=FORMAT("Copy from Record ID");
                Visible=FALSE }

    { 1100528205;2;Field  ;
                SourceExpr="Copy Present";
                Visible=FALSE }

    { 1100525002;0;Container;
                ContainerType=FactBoxArea }

    { 1100525001;1;Part   ;
                SubPageLink=Type=FIELD(Type),
                            Document No.=FIELD(Document No.);
                PagePartID=Page11129843 }

  }
  CODE
  {
    VAR
      LastInsertedYear@1100528302 : Integer;
      LastInsertedWeek@1100528301 : Integer;
      LastInsertedVendor@1100528300 : Code[20];
      HoldEntryNo@1100409000 : Integer;
      LastInsertedProject@1100409002 : Code[20];
      LastInsertedServiceOrder@1100409001 : Code[20];
      ShowGetReceiptLines@1100528200 : Boolean INDATASET;
      LinesImported@1100528201 : Boolean;

    PROCEDURE SetGlobalVars@1100525000(YearNo@1100525000 : Integer;WeekNo@1100525001 : Integer;VendorNo@1100525002 : Code[20];ProjectNo@1100525003 : Code[20];ServiceOrderNo@1100525004 : Code[20];EntryNo@1100409000 : Integer);
    BEGIN
      HoldEntryNo := EntryNo;
      LastInsertedYear := YearNo;
      LastInsertedWeek := WeekNo;
      LastInsertedVendor := VendorNo;
      LastInsertedProject := ProjectNo;
      LastInsertedServiceOrder := ServiceOrderNo;
    END;

    PROCEDURE GetGlobalVars@1100525003();
    BEGIN
      VALIDATE(Year, LastInsertedYear);
      VALIDATE(Week, LastInsertedWeek);
      VALIDATE("Vendor No.", LastInsertedVendor);
      "Project No." := LastInsertedProject;
      "Service Order No." := LastInsertedServiceOrder;
    END;

    LOCAL PROCEDURE GetReceipts@1100528200();
    VAR
      PurchInvHeader@1100528202 : Record 122;
      PurchaseHeader@1100528200 : Record 38;
      SubcontractingHoursInvoice@1100528201 : Record 11020694;
      GetSubcontractingHoursInv@1100528203 : Page 11126646;
    BEGIN
      CASE Type OF
        Type::Invoice:
          BEGIN
            PurchaseHeader.GET(PurchaseHeader."Document Type"::Invoice, "Document No.");
            GetSubcontractingHoursInv.SetToDocument(
              SubcontractingHoursInvoice.Type::Invoice,
              PurchaseHeader."No.");
            IF PurchaseHeader."Related Purch. Order No." <> '' THEN
              SubcontractingHoursInvoice.SETRANGE("Purchase Order No.", PurchaseHeader."Related Purch. Order No.");
            SubcontractingHoursInvoice.FILTERGROUP(9);
            SubcontractingHoursInvoice.SETRANGE("Vendor No.",PurchaseHeader."Buy-from Vendor No.");
          END;
        Type::"Posted Invoice":
          BEGIN
            PurchInvHeader.GET("Document No.");
            GetSubcontractingHoursInv.SetToDocument(
              SubcontractingHoursInvoice.Type::"Posted Invoice",
              PurchInvHeader."No.");
            IF PurchInvHeader."Related Purch. Order No." <> '' THEN
              SubcontractingHoursInvoice.SETRANGE("Purchase Order No.", PurchInvHeader."Related Purch. Order No.");
            SubcontractingHoursInvoice.FILTERGROUP(9);
            SubcontractingHoursInvoice.SETRANGE("Vendor No.",PurchInvHeader."Buy-from Vendor No.");
          END;
      ELSE
        EXIT;
      END;
      SubcontractingHoursInvoice.SETRANGE(Type, SubcontractingHoursInvoice.Type::"Posted Receipt");
      SubcontractingHoursInvoice.FILTERGROUP(0);
      GetSubcontractingHoursInv.SETTABLEVIEW(SubcontractingHoursInvoice);
      GetSubcontractingHoursInv.LOOKUPMODE := TRUE;
      GetSubcontractingHoursInv.RUNMODAL;
    END;

    BEGIN
    END.
  }
}

