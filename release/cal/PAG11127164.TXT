OBJECT Page 11127164 Barcode Hour Accounting
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Editable=Yes;
    CaptionML=[DEU=Barcode Stundenerfassung;
               ENU=Barcode Hour Accounting;
               NLD=Barcode urenverantwoording];
    SaveValues=Yes;
    SourceTable=Table11128530;
    PopulateAllFields=Yes;
    PageType=List;
    AutoSplitKey=Yes;
    ShowFilter=No;
    OnOpenPage=VAR
                 BarcodeSelectEmployee@1100528200 : Page 11127160;
               BEGIN
                 EmployeeFilter := '';
                 DateFilter := WORKDATE;
                 BarcodeSelectEmployee.RUNMODAL;
                 EmployeeFilter := BarcodeSelectEmployee.GetEmployee;
                 IF NOT Employee.GET(EmployeeFilter) THEN
                   IF PreviousEmployee <> '' THEN BEGIN
                     EmployeeFilter := PreviousEmployee;
                     Employee.GET(EmployeeFilter);
                   END ELSE
                     ERROR('');
                 ShowTable;
               END;

    OnClosePage=VAR
                  BarcodeHourAccounting@1100528200 : Page 11127164;
                BEGIN
                  IF StartNewPage THEN BEGIN
                    BarcodeHourAccounting.SetPreviousEmployee(OldFilter);
                    BarcodeHourAccounting.RUN;
                  END;
                END;

    OnNewRecord=VAR
                  BarcodeHourAccountingSetup@1100528200 : Record 11128531;
                  BarcodeHourAccounting@1100528202 : Record 11128530;
                BEGIN
                  IF "Employee No." = '' THEN
                    EXIT;
                  BarcodeHourAccounting.SETRANGE("Employee No.", "Employee No." );
                  BarcodeHourAccounting.SETRANGE("Start Date", "Start Date" );
                  IF BarcodeHourAccounting.ISEMPTY THEN BEGIN
                    IF BarcodeHourAccountingSetup.GET THEN BEGIN
                      VALIDATE("Cost Code", BarcodeHourAccountingSetup."Default Cost Code");
                      Barcode := "Cost Code";
                      "Start Time" := TIME;
                    END;
                  END;
                END;

    ActionList=ACTIONS
    {
      { 1100528514;  ;ActionContainer;
                      ActionContainerType=ActionItems }
    }
  }
  CONTROLS
  {
    { 1100528500;0;Container;
                ContainerType=ContentArea }

    { 1100528205;1;Group  ;
                GroupType=Group }

    { 1100528204;2;Field  ;
                CaptionML=[DEU=Mitarbeiter;
                           ENU=Employee;
                           NLD=Werknemer];
                SourceExpr=EmployeeFilter;
                TableRelation=Employee.No.;
                OnValidate=BEGIN
                             ShowTable;
                             CurrPage.UPDATE(FALSE);
                           END;

                QuickEntry=FALSE }

    { 1100528206;2;Field  ;
                CaptionML=[DEU=Datum;
                           ENU=Date;
                           NLD=Datum];
                SourceExpr=DateFilter;
                OnValidate=BEGIN
                             ShowTable;
                             CurrPage.UPDATE(FALSE);
                           END;

                QuickEntry=FALSE }

    { 1100528515;2;Field  ;
                SourceExpr=Employee."Full Name";
                Editable=False }

    { 1100528501;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100528502;2;Field  ;
                SourceExpr="Employee No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528504;2;Field  ;
                SourceExpr="Start Date";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528506;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528503;2;Field  ;
                SourceExpr=Barcode;
                OnValidate=VAR
                             BarcodeHourAccountingSetup@1100528200 : Record 11128531;
                           BEGIN
                             BarcodeHourAccountingSetup.GET;
                             CASE TRUE OF
                               BarcodeHourAccountingSetup."Sign Out Code" = Barcode:
                                 CurrPage.UPDATE;
                               BarcodeHourAccountingSetup."Confirm Code" = Barcode:
                                 BEGIN
                                   CurrPage.UPDATE;
                                   OldFilter := EmployeeFilter;
                                   Barcode := '';
                                   EmployeeFilter := '';
                                   EmployeeName := '';
                                   CLEAR(Employee);
                                   StartNewPage := TRUE;
                                   SETFILTER("Line No.", '=%1', 0);
                                   CurrPage.UPDATE;
                                   CurrPage.CLOSE;
                                 END;
                             ELSE
                               CurrPage.UPDATE;
                             END;
                           END;
                            }

    { 1100528508;2;Field  ;
                SourceExpr="Cost Object";
                LookupPageID=Cost Object List }

    { 1100528202;2;Field  ;
                CaptionML=[DEU=Kostentr„gerbeschreibung;
                           ENU=Cost Object Description;
                           NLD=Kostendrageromschrijving];
                SourceExpr=GetCostObjectDescription;
                QuickEntry=false }

    { 1100528505;2;Field  ;
                SourceExpr="Start Time";
                Editable=FALSE;
                QuickEntry=false }

    { 1100528518;2;Field  ;
                SourceExpr="Hour Line Template Code";
                QuickEntry=false }

    { 1100528200;2;Field  ;
                SourceExpr="Receiving Company";
                QuickEntry=false }

    { 1100528507;2;Field  ;
                SourceExpr="Project No.";
                QuickEntry=False }

    { 1100528209;2;Field  ;
                CaptionML=[DEU=Projektbeschreibung;
                           ENU=Project Description;
                           NLD=Projectomschrijving];
                SourceExpr=GetProjectDescription;
                QuickEntry=false }

    { 1100528509;2;Field  ;
                SourceExpr=Element;
                QuickEntry=false }

    { 1100528201;2;Field  ;
                CaptionML=[DEU=Elementbeschreibung;
                           ENU=Element Description;
                           NLD=Elementomschrijving];
                SourceExpr=GetElementDescription;
                QuickEntry=false }

    { 1100528510;2;Field  ;
                SourceExpr="Cost Code";
                QuickEntry=false }

    { 1100528203;2;Field  ;
                CaptionML=[DEU=Kostentr„gerbeschreibung;
                           ENU=Cost Object Description;
                           NLD=Kostencodeomschrijving];
                SourceExpr=GetCostCodeDescription;
                QuickEntry=false }

    { 1100528517;2;Field  ;
                SourceExpr="Supplying Company";
                QuickEntry=false }

    { 1100528511;2;Field  ;
                SourceExpr="End Date";
                Editable=FALSE;
                QuickEntry=false }

    { 1100528512;2;Field  ;
                SourceExpr="End Time";
                QuickEntry=false }

    { 1100528513;2;Field  ;
                SourceExpr=Hours;
                Editable=FALSE;
                QuickEntry=false }

    { 1100528207;;Container;
                ContainerType=FactBoxArea }

    { 1100528208;1;Part   ;
                SubPageLink=Employee No.=FIELD(Employee No.),
                            Start Date=FIELD(Start Date),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11127163;
                PartType=Page }

  }
  CODE
  {
    VAR
      EmployeeFilter@1100528200 : Code[20];
      DateFilter@1100528201 : Date;
      EmployeeName@1100528500 : Text[100];
      Employee@1100528501 : Record 5200;
      StartNewPage@1100528203 : Boolean;
      PreviousEmployee@1100528204 : Code[20];
      OldFilter@1100528205 : Code[20];

    PROCEDURE ShowTable@1100485000();
    VAR
      BarcodeHourAccountingSetup@1100528200 : Record 11128531;
    BEGIN
      BarcodeHourAccountingSetup.GET;
      IF EmployeeFilter <> '' THEN
        SETRANGE("Employee No.", EmployeeFilter)
      ELSE
        SETRANGE("Employee No.", '');

      IF (EmployeeFilter <> '') AND Employee.GET(EmployeeFilter) THEN BEGIN
      SETRANGE("Start Date", DateFilter);
        IF FINDLAST THEN BEGIN
          IF "Cost Code" <> BarcodeHourAccountingSetup."Sign Out Code" THEN BEGIN
            SETRANGE("End Date", 0D);
            IF COUNT IN [0,1] THEN BEGIN
              IF ((("Cost Code" <> BarcodeHourAccountingSetup."Default Cost Code") AND ("Cost Code" <> '')) OR ("Project No." <> '')) OR (COUNT = 0) THEN BEGIN
                Rec.INIT;
                "Line No." += 10000;
                "Employee No." := EmployeeFilter;
                "Start Date" := DateFilter;
                "Start Time" := TIME;
                INSERT(TRUE);
              END;
            END;
          END;
          SETRANGE("End Date")
        END ELSE BEGIN
          Rec.INIT;
          "Line No." := 10000;
          "Employee No." := EmployeeFilter;
          "Start Date" := DateFilter;
          "Start Time" := TIME;
          VALIDATE("Cost Code", BarcodeHourAccountingSetup."Default Cost Code");
          Barcode := "Cost Code";
          INSERT(TRUE);
        END;
      END;
      FINDLAST;
    END;

    PROCEDURE SetPreviousEmployee@1100528200(Employee@1100528200 : Code[20]);
    BEGIN
      PreviousEmployee := Employee;
    END;

    BEGIN
    END.
  }
}

