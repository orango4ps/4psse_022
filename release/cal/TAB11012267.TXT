OBJECT Table 11012267 Progress Level (PTP)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               ProgressLinePTP@1100525000 : Record 11012268;
               ProgressLevel@1210190000 : Record 11012036;
             BEGIN
               IF (ProgressLevel.GET("Project No.", "Progress Date")) THEN
                 ProgressLevel.DELETE(TRUE);

               ProgressLinePTP.SETRANGE("Project No.","Project No.");
               ProgressLinePTP.SETRANGE("Progress Date","Progress Date");
               ProgressLinePTP.DELETEALL(TRUE);
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=[ENU=Progress Level - Project Tender Paragraph;
               NOR=Fremdriftsniv† Í prosjekttilbudsavsnitt;
               SVE=F”rloppsniv† Í projektanbudsstycke];
    LookupPageID=Page11020561;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job WHERE (Progress on base of Tender=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Project Description");
                                                              END;

                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr];
                                                   NotBlank=Yes }
    { 20  ;   ;Progress Date       ;Date          ;CaptionML=[ENU=Progress Date;
                                                              NOR=Fremdriftsdato;
                                                              SVE=F”rloppsdatum];
                                                   NotBlank=Yes }
    { 30  ;   ;Comment             ;Text50        ;CaptionML=[ENU=Comment;
                                                              NOR=Kommentar;
                                                              SVE=Kommentar] }
    { 40  ;   ;Project Description ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Project Description;
                                                              NOR=Prosjektbeskrivelse;
                                                              SVE=Projektbeskrivning];
                                                   Editable=No }
    { 50  ;   ;Text                ;Text250       ;CaptionML=[ENU=Text;
                                                              NOR=Tekst;
                                                              SVE=Ben„mning] }
    { 60  ;   ;Technical Finished  ;Boolean       ;CaptionML=[ENU=Technical Finished;
                                                              NOR=Teknisk Ferdig;
                                                              SVE=Tekniskt f„rdigt] }
  }
  KEYS
  {
    {    ;Project No.,Progress Date               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@11012002 : TextConst 'ENU=Renaming %1 not possible. Copy %1 and delete the old %1.;NOR=Kan ikke endre navn p† %1. kopier %1 og fjerne den gamle %1.;SVE=Det g†r inte att byta namn p† %1. Kopiera %1 och ta bort den gamla %1.';

    PROCEDURE CreateLines@1100525000();
    VAR
      ProjectTenderParagraph@1100525001 : Record 11012263;
      ProgressLinePTP@1100525000 : Record 11012268;
    BEGIN
      ProjectTenderParagraph.SETRANGE("Project No.","Project No.");
      ProjectTenderParagraph.SETRANGE(Level,ProjectTenderParagraph.Level::"Tender Paragraph");
      IF ProjectTenderParagraph.FINDSET THEN BEGIN
        REPEAT
          ProgressLinePTP.SETRANGE("Project No.","Project No.");
          ProgressLinePTP.SETRANGE("Progress Date","Progress Date");
          ProgressLinePTP.SETRANGE("Tender Paragraph",ProjectTenderParagraph."Tender Paragraph");
          IF ProgressLinePTP.ISEMPTY THEN BEGIN
            ProgressLinePTP.INIT;
            ProgressLinePTP."Project No." := "Project No.";
            ProgressLinePTP.VALIDATE("Progress Date","Progress Date");
            ProgressLinePTP."Tender Paragraph" := ProjectTenderParagraph."Tender Paragraph";
            ProgressLinePTP.VALIDATE(Description,ProjectTenderParagraph.Description);
            ProgressLinePTP."Description 2" := ProjectTenderParagraph."Description 2";
            ProgressLinePTP.INSERT;
          END;
        UNTIL ProjectTenderParagraph.NEXT = 0;
      END;
    END;

    PROCEDURE CreateProgress@1100525001();
    VAR
      ProgressLevel@1100525000 : Record 11012036;
    BEGIN
      ProgressLevel.INIT;
      ProgressLevel."Project No." := "Project No.";
      ProgressLevel."Progress Date" := "Progress Date";
      ProgressLevel.Comment := Comment;
      ProgressLevel.Text := Text;
      ProgressLevel."Technical Finished" := "Technical Finished";
      ProgressLevel."Project Description" := "Project Description";
      ProgressLevel.FillCreated();
      ProgressLevel.INSERT;
      CODEUNIT.RUN(CODEUNIT::"Create Progress Lines",ProgressLevel);
    END;

    PROCEDURE CreateLinesFromInstallMotLines@1100525002(VAR InstallmentMotivationLine@1100525000 : Record 11012472);
    VAR
      ProgressLinePTP@1100525001 : Record 11012268;
      ProjectTenderParagraph@1100525002 : Record 11012263;
      Text001@1100525003 : TextConst 'ENU=Project Tender Paragraph %1 for job %2 does not exists in table %3. You can only create progress lines if there are corresponding Project Tender Paragraphs in table %3.;NOR=Prosjekttilbudsavsnitt %1 for jobben %2 finnes ikke i tabellen %3. Du kan kun opprette fremdriftsrader hvis det finnes tilh›rende prosjekttilbudsavsnitt i tabellen %3.;SVE=Projektanbudsstycket %1 f”r jobbet %2 finns inte i tabellen %3. Du kan endast skapa f”rloppsrader om det finns motsvarande projektanbudsstycken i tabellen %3.';
      Text002@1100525004 : TextConst 'ENU=Quantity and/or unit of measure in Project Tender Paragraph %1 for job %2 does correspondent with Quantity and/or unit of measure in table %3. You can only create progress lines if there are corresponding Project Tender Paragraphs in table %3 has the same quantity and unit of measure.;NOR=Antall og/eller enheter i prosjekttilbudsavsnitt %1 for jobben %2 stemmer overens med antall og/eller enheter i tabellen %3. Du kan kun opprette fremdriftsrader hvis det finnes tilh›rende prosjekttilbudsavsnitt i tabellen %3 med samme antall og m†leenhet.;SVE=Antal och/eller enheter i projektanbudsstycket %1 f”r jobbet %2 st„mmer ”verens med antal och/eller enheter i tabellen %3. Du kan endast skapa f”rloppsrader om det finns motsvarande projektanbudsstycken i tabellen %3 med samma antal och enheter.';
    BEGIN
      //check related project tender paragraphs
      IF InstallmentMotivationLine.FINDSET THEN BEGIN
        REPEAT
          IF NOT ProjectTenderParagraph.GET("Project No.",InstallmentMotivationLine."Tender Paragraph No.") THEN BEGIN
            MESSAGE(STRSUBSTNO(Text001,
              InstallmentMotivationLine."Tender Paragraph No.",
              "Project No.",
              ProjectTenderParagraph.TABLECAPTION));
            EXIT;
          END ELSE BEGIN
            InstallmentMotivationLine.CALCFIELDS("Element Quantity",Unit);
            IF (ProjectTenderParagraph.Quantity <> InstallmentMotivationLine."Element Quantity") OR
              (ProjectTenderParagraph."Unit of Measure Code" <> InstallmentMotivationLine.Unit)
            THEN BEGIN
              MESSAGE(STRSUBSTNO(Text002,
                InstallmentMotivationLine."Tender Paragraph No.",
                "Project No.",
                ProjectTenderParagraph.TABLECAPTION));
              EXIT;
            END;
          END;
        UNTIL InstallmentMotivationLine.NEXT = 0;
      END;

      //if all related project tender paragraphs are correct insert progress lines
      IF InstallmentMotivationLine.FINDSET THEN BEGIN
        REPEAT
          ProgressLinePTP.INIT;
          ProgressLinePTP."Project No." := "Project No.";
          ProgressLinePTP."Progress Date" := "Progress Date";
          ProgressLinePTP."Tender Paragraph" := InstallmentMotivationLine."Tender Paragraph No.";
          ProgressLinePTP.VALIDATE("Progress in Period",InstallmentMotivationLine.Production);
          ProgressLinePTP.VALIDATE("Progress till Period",InstallmentMotivationLine."Production Cumulative");  //C059435
          ProgressLinePTP.Description := InstallmentMotivationLine.Description;
          IF ProgressLinePTP.INSERT(TRUE) THEN;
        UNTIL InstallmentMotivationLine.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

