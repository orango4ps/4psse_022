OBJECT Page 5197 Attendee Subform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW111.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               NOR=Linjer;
               SVE=Rader];
    LinksAllowed=No;
    SourceTable=Table5199;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       StyleIsStrong := FALSE;
                       AttendanceTypeIndent := 0;
                       SendInvitationEditable := TRUE;

                       IF "Attendance Type" = "Attendance Type"::"To-do Organizer" THEN BEGIN
                         StyleIsStrong := TRUE;
                         SendInvitationEditable := FALSE;
                       END ELSE
                         AttendanceTypeIndent := 1;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 NOR=F&unksjoner;
                                 SVE=Fu&nktion];
                      Image=Action }
      { 1901742104;2 ;Action    ;
                      CaptionML=[ENU=Make &Phone Call;
                                 NOR=Sl† &nummeret;
                                 SVE=&Ring upp];
                      ToolTipML=[ENU=Call the selected contact.;
                                 NOR=Ring den valgte kontakten.;
                                 SVE=Ring upp den markerade kontakten.];
                      ApplicationArea=#RelationshipMgmt;
                      Image=Calls;
                      OnAction=BEGIN
                                 MakePhoneCall;
                               END;
                                }
      { 1100409000;2 ;Action    ;
                      CaptionML=ENU=Call Centre Form;
                      OnAction=BEGIN
                                 //**4PS
                                 CreateCallInCallCenterPage;
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 NOR=&Linje;
                                 SVE=Ra&d];
                      Image=Line }
      { 1901313204;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 NOR=Kort;
                                 SVE=Kort];
                      ToolTipML=[ENU=View or change detailed information about the attendee.;
                                 NOR=Vis eller endre detaljert informasjon om deltakeren.;
                                 SVE=Visa eller „ndra detaljerad information om deltagaren.];
                      ApplicationArea=#RelationshipMgmt;
                      Image=EditLines;
                      OnAction=BEGIN
                                 ShowCard;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                IndentationColumnName=AttendanceTypeIndent;
                IndentationControls=Attendance Type;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of attendance for the meeting. You can select from: Required, Optional and Task Organizer.;
                           NOR=Angir deltakertypen for m›tet. Du kan velge mellom Obligatorisk, Valgfritt og Oppgavearrang›r.;
                           SVE=Anger m”tets n„rvarotyp. V„lj mellan: Krav, Valfri och Uppgiftsorganisat”r.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Attendance Type";
                Style=Strong;
                StyleExpr=StyleIsStrong }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of the attendee. You can choose from Contact or Salesperson.;
                           NOR=Angir deltakertypen. Du kan velge mellom Kontakt og Selger.;
                           SVE=Anger typen av deltagare. Du kan v„lja mellan Kontakt och S„ljare.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Attendee Type";
                Style=Strong;
                StyleExpr=StyleIsStrong }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the attendee participating in the task.;
                           NOR=Angir nummeret for deltakeren som deltar i oppgaven.;
                           SVE=Anger numret p† deltagaren som deltar i uppgiften.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Attendee No.";
                Style=Strong;
                StyleExpr=StyleIsStrong }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the attendee participating in the task.;
                           NOR=Angir navnet p† deltakeren som deltar i oppgaven.;
                           SVE=Anger namnet p† deltagaren som deltar i uppgiften.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Attendee Name";
                Style=Strong;
                StyleExpr=StyleIsStrong }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that you want to send an invitation to the attendee by e-mail. The Send Invitation option is only available for contacts and salespeople with an e-mail address. The Send Invitation option is not available for the meeting organizer.;
                           NOR=Angir at du vil sende en invitasjon til deltakeren med e-post. Alternativet Send invitasjon er tilgjengelig bare for kontakter og selgere som har en e-postadresse. Alternativet Send invitasjon er ikke tilgjengelig for m›tearrang›ren.;
                           SVE=Anger att du vill skicka en inbjudan till deltagaren via e-post. Alternativet Skicka inbjudan „r bara tillg„ngligt f”r kontakter och s„ljare som har e-postadresser. Alternativet Skicka inbjudningar „r inte tillg„ngligt f”r m”tesorganisat”ren.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Send Invitation";
                Editable=SendInvitationEditable }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of the attendee's response to a meeting invitation.;
                           NOR=Angir deltakerens svartype for m›teinvitasjonen.;
                           SVE=Anger den typ av svar som deltagaren gav f”r en m”tesinbjudan.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Invitation Response Type";
                Style=Strong;
                StyleExpr=StyleIsStrong }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the meeting invitation has been sent to the attendee. The Send Invitation option is not available for the meeting organizer.;
                           NOR=Angir at m›teinvitasjonen er sendt til deltakeren. Alternativet Send invitasjon er ikke tilgjengelig for m›tearrang›ren.;
                           SVE=Anger att en m”tesinbjudan har skickats till deltagaren. Alternativet Skicka inbjudningar „r inte tillg„ngligt f”r m”tesorganisat”ren.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Invitation Sent" }

  }
  CODE
  {
    VAR
      Text004@1000 : TextConst 'ENU=The Make Phone Call function is not available for a salesperson.;NOR=Funksjonen Sl† nummeret er ikke tilgjengelig for en selger.;SVE=Funktionen Ring upp „r inte tillg„nglig f”r en s„ljare.';
      StyleIsStrong@1001 : Boolean INDATASET;
      SendInvitationEditable@1002 : Boolean INDATASET;
      AttendanceTypeIndent@1003 : Integer;

    LOCAL PROCEDURE ShowCard@1();
    VAR
      Cont@1000 : Record 5050;
      Salesperson@1001 : Record 13;
    BEGIN
      IF "Attendee Type" = "Attendee Type"::Contact THEN BEGIN
        IF Cont.GET("Attendee No.") THEN
          //PAGE.RUN(PAGE::"Contact Card",Cont); //**4PS.o
          Cont.RunContactForm; //**4PS.n
      END ELSE
        IF Salesperson.GET("Attendee No.") THEN
          PAGE.RUN(PAGE::"Salesperson/Purchaser Card",Salesperson);
    END;

    LOCAL PROCEDURE MakePhoneCall@2();
    VAR
      Attendee@1003 : Record 5199;
      TempSegmentLine@1002 : TEMPORARY Record 11072040;
      Cont@1001 : Record 5050;
      Task@1000 : Record 5080;
      SalespersonPurchaser@1100528700 : Record 13;
      Campaign@1100528701 : Record 11072034;
    BEGIN
      IF "Attendee Type" = "Attendee Type"::Salesperson THEN
        ERROR(Text004);
      IF Cont.GET("Attendee No.") THEN BEGIN
        //**4PS.so
        //IF Task.FindAttendeeTask(Task,Attendee) THEN
        //  TempSegmentLine."To-do No." := Task."No.";
        //TempSegmentLine."Contact No." := Cont."No.";
        //TempSegmentLine."Contact Company No." := Cont."Company No.";
        //TempSegmentLine."Campaign No." := Task."Campaign No.";
        //TempSegmentLine.CreatePhoneCall;
        //**4PS.sn
        // See also SegLine.CreateInteractionFromToDo
        IF Task.FindAttendeeTask(Task,Rec) THEN
          TempSegmentLine."To-do No." := Task."Organizer To-do No.";
        TempSegmentLine.VALIDATE("Contact No.", Cont."No.");
        IF SalespersonPurchaser.GET(Task."Salesperson Code") THEN
          TempSegmentLine."Salesperson Code" := SalespersonPurchaser.Code;
        IF Campaign.GET(Task."Campaign No.") THEN
          TempSegmentLine."Campaign No." := Campaign."No.";
        //**4PS.en
        TempSegmentLine.CreatePhoneCall;
      END;
    END;

    PROCEDURE CreateCallInCallCenterPage@1100525000();
    VAR
      Task@1100409000 : Record 5080;
      SegLine@1100525002 : Record 11072040;
      Contact@1100528700 : Record 5050;
      SalespersonPurchaser@1100528701 : Record 13;
      Campaign@1100528702 : Record 11072034;
    BEGIN
      //**4PS
      IF "Attendee Type" = "Attendee Type"::Salesperson THEN
        ERROR(Text004);
      IF Contact.GET("Attendee No.") THEN BEGIN
        IF Task.FindAttendeeTask(Task, Rec) THEN
          SegLine."To-do No." := Task."Organizer To-do No.";
        SegLine.VALIDATE("Contact No.", Contact."No.");
        IF SalespersonPurchaser.GET(Task."Salesperson Code") THEN
          SegLine."Salesperson Code" := SalespersonPurchaser.Code;
        IF Campaign.GET(Task."Campaign No.") THEN
          SegLine."Campaign No." := Campaign."No.";
        SegLine."Line No." := 777;
        SegLine.CreateCallUsingCallCenterPage;
      END;
    END;

    BEGIN
    END.
  }
}

