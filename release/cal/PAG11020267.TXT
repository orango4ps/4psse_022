OBJECT Page 11020267 Job Purchase Order List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Projektauftragszeile Bericht;
               ENU=Job Purchase Order List;
               NLD=Project orderregel lijst;
               NOR=Jobbens kj›psordreliste;
               SVE=Jobbets ink”psorderlista];
    SourceTable=Table39;
    SourceTableView=WHERE(Outstanding-Rcd/Not Invoiced=FILTER(Yes),
                          Removal Contribution=FILTER(No));
    PageType=List;
    OnInit=BEGIN
             TradeItemEnabled := TRUE;
           END;

    OnOpenPage=VAR
                 FPSLicenseManagement@1100528500 : Codeunit 11229289;
               BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 //mg.sc, 11-10-11: M29565
                 OnlyNotCreatedAsCostPlusEntry := TRUE;
                 CheckCompress("No.", '', '', FALSE, g_table, OnlyNotCreatedAsCostPlusEntry);  //db, 21-08-07 (melding 10172)
                 //mg.ec, 11-10-11: M29565

                 IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(ItemSetup) THEN
                   TradeItemEnabled := FALSE;
               END;

    OnAfterGetRecord=BEGIN
                       DetermineBackOrderQuantity;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     //DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485003;1 ;Action    ;
                      Name=CopyButton;
                      CaptionML=[DEU=&Kopieren;
                                 ENU=&Copy;
                                 NLD=&Kopieer;
                                 NOR=&Kopier;
                                 SVE=&Kopiera];
                      Promoted=Yes;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetSelection(g_table, g_code1, g_code2, g_code3, g_code4);
                                 CopyLines;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 1100485007;1 ;Action    ;
                      CaptionML=[DEU=B&eleg;
                                 ENU=&Document;
                                 NLD=&Document;
                                 NOR=&Dokument;
                                 SVE=&Dokument];
                      Promoted=Yes;
                      Image=Document;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowPurchaseOrder;
                               END;
                                }
      { 1100485002;1 ;Action    ;
                      CaptionML=[DEU=&Eing„nge;
                                 ENU=&Receipts;
                                 NLD=&Ontvangsten;
                                 NOR=&Kvitteringer;
                                 SVE=&Inleveranser];
                      Promoted=Yes;
                      Image=PostedReceipts;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowReceipt;
                               END;
                                }
      { 1210190001;1 ;Action    ;
                      CaptionML=[DEU=Nur nicht-erstellte Regieeintragszeilen anzeigen;
                                 ENU=Only show non-created Cost Plus Entries;
                                 NLD=Toon alleen niet als regiemutaties aangemaakte regels;
                                 NOR=Vis kun ikke-opprettede selvkosttransaksjoner;
                                 SVE=Visa endast icke-skapade redovisade sj„lvkostnader];
                      Image=CancelAllLines;
                      OnAction=BEGIN
                                 IF (OnlyNotCreatedAsCostPlusEntry) THEN
                                   OnlyNotCreatedAsCostPlusEntry := FALSE
                                 ELSE
                                   OnlyNotCreatedAsCostPlusEntry := TRUE;

                                 CheckCompress("No.", '', '', FALSE, g_table, OnlyNotCreatedAsCostPlusEntry); //mg, 11-10-11: M29565
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100525541;1;Group  ;
                GroupType=Repeater }

    { 1100525540;2;Field  ;
                SourceExpr="Document No." }

    { 1100525539;2;Field  ;
                SourceExpr="Buy-from Vendor No." }

    { 1100525538;2;Field  ;
                Name=Name;
                CaptionML=[DEU=Name;
                           ENU=Name;
                           NLD=Naam;
                           NOR=Navn;
                           SVE=Namn];
                SourceExpr="Vendor Name" }

    { 1100525537;2;Field  ;
                SourceExpr="Service Order No.";
                Visible=FALSE }

    { 1100525536;2;Field  ;
                SourceExpr="Service Location No.";
                Visible=FALSE }

    { 1100525533;2;Field  ;
                SourceExpr="Service Contract No.";
                Visible=FALSE }

    { 1100525532;2;Field  ;
                SourceExpr="Job No.";
                Visible=FALSE }

    { 1100525531;2;Field  ;
                SourceExpr="Plot No.";
                Visible=FALSE }

    { 1100525530;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE }

    { 1100525529;2;Field  ;
                SourceExpr="Extension Contract";
                Visible=FALSE }

    { 1100525528;2;Field  ;
                SourceExpr="Cost Type" }

    { 1100525527;2;Field  ;
                SourceExpr="Item No." }

    { 1100525526;2;Field  ;
                SourceExpr=Manufacturer;
                Enabled=TradeItemEnabled }

    { 1100525525;2;Field  ;
                SourceExpr="Basic Item";
                Enabled=TradeItemEnabled }

    { 1100525524;2;Field  ;
                SourceExpr="Vendor (Trade Item)";
                Enabled=TradeItemEnabled }

    { 1100525523;2;Field  ;
                SourceExpr="Trade Item";
                Enabled=TradeItemEnabled }

    { 1100525522;2;Field  ;
                SourceExpr=Type;
                Visible=FALSE }

    { 1100525521;2;Field  ;
                SourceExpr="No.";
                Visible=FALSE }

    { 1100525520;2;Field  ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 1100525519;2;Field  ;
                SourceExpr="Shortcut Dimension 2 Code" }

    { 1100525518;2;Field  ;
                SourceExpr=Description }

    { 1100525517;2;Field  ;
                SourceExpr="Description 2" }

    { 1100525516;2;Field  ;
                SourceExpr=Quantity }

    { 1100525515;2;Field  ;
                SourceExpr="Unit of Measure" }

    { 1100525514;2;Field  ;
                SourceExpr="Line Amount" }

    { 1100525513;2;Field  ;
                SourceExpr="Amount (LCY)" }

    { 1100525512;2;Field  ;
                SourceExpr="Outstanding Quantity" }

    { 1100525511;2;Field  ;
                SourceExpr="Outstanding Amount";
                Visible=FALSE }

    { 1100525510;2;Field  ;
                SourceExpr="Quantity Received" }

    { 1100525509;2;Field  ;
                SourceExpr="Amt. Rcd. Not Invoiced";
                Visible=FALSE }

    { 1100525508;2;Field  ;
                SourceExpr="Quantity Invoiced" }

    { 1100525507;2;Field  ;
                SourceExpr="Expected Receipt Date" }

    { 1100525506;2;Field  ;
                CaptionML=[DEU=Nachlieferung;
                           ENU=Backorder Qty.;
                           NLD=Nalevering;
                           NOR=Backordreantall;
                           SVE=Backorderantal];
                BlankZero=Yes;
                SourceExpr=BackOrderQuantity;
                Visible=FALSE;
                Editable=FALSE }

    { 1100525505;2;Field  ;
                SourceExpr="Expected Back Order Date" }

    { 1100525504;2;Field  ;
                SourceExpr="Purchase Action" }

    { 1100525503;2;Field  ;
                SourceExpr="Purchase Phase" }

    { 1100525500;2;Field  ;
                SourceExpr="Location Code" }

    { 1210190002;2;Field  ;
                SourceExpr="Cost Plus Entry Created" }

  }
  CODE
  {
    VAR
      ItemSetup@1100525501 : Record 11012300;
      g_table@1100485003 : Integer;
      g_code1@1100485004 : Code[20];
      g_code2@1100485002 : Code[20];
      g_code3@1100485001 : Code[20];
      g_code4@1100485000 : Code[20];
      DPA_IsHardFilter@1100000999 : Boolean;
      OnlyNotCreatedAsCostPlusEntry@1210190000 : Boolean;
      TradeItemEnabled@1100525500 : Boolean INDATASET;
      BackOrderQuantity@1100525502 : Decimal;
      gProj@1210190003 : Code[20];
      gServOrder@1210190002 : Code[20];
      gServContr@1210190001 : Code[20];

    PROCEDURE SetSelection@1100485000(l_table@1100485003 : Integer;l_code1@1100485004 : Code[20];l_code2@1100485000 : Code[20];l_code3@1100485001 : Code[20];l_code4@1100485002 : Code[20]);
    BEGIN
      g_table := l_table;
      g_code1 := l_code1;
      g_code2 := l_code2;
      g_code3 := l_code3;
      g_code4 := l_code4;
    END;

    PROCEDURE ShowReceipt@2();
    VAR
      RcptLineRec@1100485000 : Record 121;
    BEGIN
      RcptLineRec.RESET;
      RcptLineRec.SETCURRENTKEY("Order No.","Order Line No.");
      RcptLineRec.SETRANGE("Order No.","Document No.");
      IF NOT MARKEDONLY THEN
        RcptLineRec.SETRANGE("Order Line No.","Line No.");
      PAGE.RUNMODAL(PAGE::"Receipt Line List",RcptLineRec);
    END;

    PROCEDURE ShowPurchaseOrder@1210190001();
    VAR
      PurchOrder@1210190000 : Record 38;
    BEGIN
      PurchOrder.SETRANGE("Document Type","Document Type");
      PurchOrder.SETRANGE("No.","Document No.");
      IF PurchOrder.FINDFIRST THEN
        PurchOrder.SETRECFILTER;
      IF "Document Type" = "Document Type"::Quote THEN
        PAGE.RUNMODAL(PAGE::"Purchase Quote", PurchOrder);
      IF "Document Type" = "Document Type"::Order THEN
        PAGE.RUNMODAL(PAGE::"Purchase Order", PurchOrder);
      IF "Document Type" = "Document Type"::"Blanket Order" THEN
        PAGE.RUNMODAL(PAGE::"Blanket Purchase Order", PurchOrder);
      IF "Document Type" = "Document Type"::Invoice THEN
        PAGE.RUNMODAL(PAGE::"Purchase Invoice", PurchOrder);
      IF "Document Type" = "Document Type"::"Credit Memo" THEN
        PAGE.RUNMODAL(PAGE::"Purchase Credit Memo", PurchOrder);
    END;

    PROCEDURE CopyLines@1210190004();
    VAR
      CopyMgt@1100525500 : Codeunit 11012068;
      PurchaseLine@1100525501 : Record 39;
    BEGIN
      CurrPage.SETSELECTIONFILTER(PurchaseLine);
      CopyMgt.SetSelectionObligation(g_table, g_code1, g_code2, g_code3, g_code4);
      CopyMgt.CopyPurchObligations(PurchaseLine);
      CurrPage.CLOSE;
    END;

    PROCEDURE DetermineBackOrderQuantity@1100485002();
    BEGIN
      BackOrderQuantity := Quantity - "Qty. to Receive" - "Quantity Received";
      IF BackOrderQuantity < 0 THEN
        BackOrderQuantity := 0;
      IF BackOrderQuantity = 0 THEN
        "Expected Back Order Date" := 0D;
    END;

    PROCEDURE CheckCompress@1210190000(lvProj@1210190001 : Code[20];lvServOrder@1210190003 : Code[20];lvServContr@1210190004 : Code[20];lvMark@1210190000 : Boolean;g_table@1100485001 : Integer;OnlyNotCreatedAsCostPlusEntry@1210190002 : Boolean);
    VAR
      lvTmpPurchOrderRec@1100485000 : TEMPORARY Record 38;
    BEGIN
      //RESET;  //db, 27-07-04: heft filter op documentsoort=order van hoofd/subform op
      gProj := lvProj;
      gServOrder := lvServOrder;
      gServContr := lvServContr;

      CLEARMARKS;
      IF lvMark THEN BEGIN
        lvTmpPurchOrderRec.DELETEALL;
        IF lvProj <> '' THEN
          SETRANGE("Job No.", lvProj);
        IF lvServContr <> '' THEN
          SETRANGE("Service Contract No.", lvServContr);
        IF lvServOrder <> '' THEN
          SETRANGE("Service Order No.", lvServOrder);
        IF FINDSET THEN BEGIN
          REPEAT
            IF NOT lvTmpPurchOrderRec.GET("Document Type", "Document No.") THEN BEGIN
              lvTmpPurchOrderRec."Document Type" := "Document Type";
              lvTmpPurchOrderRec."No." := "Document No.";
              lvTmpPurchOrderRec.INSERT;
              MARK := TRUE;
            END;
          UNTIL NEXT = 0;
          Rec := xRec;
        END;
      END;
      //SETCURRENTKEY("Document Type","Document No.","Line No.");  //db, 27-07-04
      MARKEDONLY(lvMark);

      IF g_table <> 0 THEN BEGIN  //db, 29-08-07 (melding 10172)
        SETRANGE("Outstanding-Rcd/Not Invoiced", TRUE);
        SETRANGE("Removal Contribution", FALSE);
        //mg.sn, 11-10-11: M29565
        IF OnlyNotCreatedAsCostPlusEntry THEN
          SETRANGE("Cost Plus Entry Created", FALSE)
        ELSE
          SETRANGE("Cost Plus Entry Created");
        //mg.en, 11-10-11: M29565
      END;
    END;

    BEGIN
    END.
  }
}

