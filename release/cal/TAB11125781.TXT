OBJECT Table 11125781 Glazing Service Call Activity
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               UpdateVatProdPostingGrp;  //RFC 547
             END;

    CaptionML=[ENU=Glazing Service Call Activity;
               NOR=Samtaleaktivitet innglassingservice;
               SVE=Servicesamtalsakt. inglasn.];
    LookupPageID=Page11125797;
    DrillDownPageID=Page11125797;
  }
  FIELDS
  {
    { 1   ;   ;Glazing Service Call No.;Code20    ;TableRelation="Glazing Service Call";
                                                   OnValidate=VAR
                                                                GlazingServiceCall@1100525000 : Record 11125777;
                                                              BEGIN
                                                                IF NOT GlazingServiceCall.GET("Glazing Service Call No.") THEN
                                                                  GlazingServiceCall.INIT;

                                                                "Price Reference Date" := GlazingServiceCall.Date;
                                                                VALIDATE("Rate Code", GlazingServiceCall."Default Rate Code");
                                                              END;

                                                   CaptionML=[ENU=Glazing Service Call No.;
                                                              NOR=Servicesamtalenr. for Innglassing;
                                                              SVE=Servicesamtalsnr f”r inglasning];
                                                   NotBlank=Yes }
    { 2   ;   ;Glazing Service Call Line No.;Integer;
                                                   TableRelation="Glazing Service Call Line"."Line No." WHERE (Glazing Service Call No.=FIELD(Glazing Service Call No.));
                                                   OnValidate=VAR
                                                                GlazingServiceCallLine@1100525000 : Record 11125778;
                                                              BEGIN
                                                                IF NOT GlazingServiceCallLine.GET("Glazing Service Call No.", "Glazing Service Call Line No.") THEN
                                                                  GlazingServiceCallLine.INIT;

                                                                // jhoek.200410.begin
                                                                "Surface Area" := GlazingServiceCallLine."Surface Area (m2)";
                                                                "Linear Meters" := GlazingServiceCallLine."Linear Meters";
                                                                "Call Line Quantity" := GlazingServiceCallLine.Quantity;
                                                                "Height Surcharge" := GlazingServiceCallLine."Height Surcharge";
                                                                "No. of Glaziers" := GlazingServiceCallLine."No. of Glaziers";
                                                                // jhoek.200410.end
                                                              END;

                                                   CaptionML=[ENU=Glazing Service Call Line No.;
                                                              NOR=Servicesamtalsradnr. for Innglassing;
                                                              SVE=Servicesamtalsradnr f”r inglasning];
                                                   NotBlank=Yes }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 10  ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[ENU=" ,Removal,Mounting";
                                                                    NOR=" ,Fjerning,Montering";
                                                                    SVE=" ,Borttag,Montering"];
                                                   OptionString=[ ,Removal,Mounting];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 30  ;   ;Cost Driver         ;Option        ;OnValidate=BEGIN
                                                                IF "Cost Driver" = "Cost Driver"::" " THEN
                                                                  "Qty. per Unit of Measure" := 0
                                                                ELSE
                                                                  "Qty. per Unit of Measure" := 1; // jhoek.170510

                                                                UpdateQuantity;
                                                              END;

                                                   CaptionML=[ENU=Cost Driver;
                                                              NOR=Kostnadsdriver;
                                                              SVE=Kostnadsdrivare];
                                                   OptionCaptionML=[ENU=" ,,,,,Surface Area,,,,,Linear Meters,,,,,,,,,,Height Surcharge,,,,,No. of Glaziers,,,,,Quantity of Call Line";
                                                                    NOR=" ,,,,,Overflate omr†de,,,,,l›pemeter,,,,,,,,,,St›rrelse tilleggsgebyr,,,,,Antall glassmestere,,,,,Antall av samtalerader";
                                                                    SVE=" ,,,,,Ytarea,,,,,L”pmeter,,,,,,,,,,H”jd till„ggsavgift,,,,,Antal glasm„stare,,,,,Ant. samtalslinje"];
                                                   OptionString=[ ,,,,,Surface Area,,,,,Linear Meters,,,,,,,,,,Height Surcharge,,,,,No. of Glaziers,,,,,Qty. of Call Line] }
    { 40  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=VAR
                                                                Item@1100525000 : Record 27;
                                                              BEGIN
                                                                IF NOT Item.GET("Item No.") THEN
                                                                  Item.INIT
                                                                //mg.sn, 13-12-11: M31429
                                                                ELSE BEGIN
                                                                  Item.TESTFIELD(Blocked, FALSE);
                                                                END;
                                                                //mg.en, 13-12-11: M31429

                                                                IF Item."Global Dimension 2 Code" <> '' THEN
                                                                  "Cost Object Code Material" := Item."Global Dimension 2 Code";
                                                                "Material Price" := Item."Standard Cost";

                                                                IF Description = '' THEN
                                                                  Description := Item.Description;

                                                                UpdateVatProdPostingGrp;  //RFC 547
                                                                UpdateTotals; //mg, 25-01-12: M32523
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              NOR=Artikkelnr;
                                                              SVE=Artikelnr] }
    { 41  ;   ;Item Description    ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item.Description WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=[ENU=Item Description;
                                                              NOR=Artikkelbeskrivelse;
                                                              SVE=Artikelbeskrivning];
                                                   Editable=No }
    { 50  ;   ;Cost Object Code Labor;Code20      ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Labor),
                                                                                               Global Dimension No.=CONST(2));
                                                   OnValidate=VAR
                                                                DimensionValue@1100525000 : Record 349;
                                                              BEGIN
                                                                DimensionValue.SETCURRENTKEY(Code, "Global Dimension No.");
                                                                DimensionValue.SETRANGE(Code, "Cost Object Code Labor");
                                                                DimensionValue.SETRANGE("Global Dimension No.", 2);

                                                                IF NOT DimensionValue.FINDFIRST THEN
                                                                  DimensionValue.INIT;

                                                                IF DimensionValue.Name <> '' THEN
                                                                  IF Description = '' THEN
                                                                    Description := DimensionValue.Name;

                                                                UpdateVatProdPostingGrp;  //RFC 547

                                                                VALIDATE(Norm, 0); // jhoek.100910
                                                              END;

                                                   CaptionML=[ENU=Cost Object Code Labor;
                                                              NOR=Kostnadsobjekt, arbeid;
                                                              SVE=Kostnadsobjektkod, arbetskraft] }
    { 51  ;   ;Cost Object Name Labor;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dimension Value".Name WHERE (Global Dimension No.=CONST(2),
                                                                                                    Cost Type=CONST(Labor),
                                                                                                    Code=FIELD(Cost Object Code Labor)));
                                                   CaptionML=[ENU=Cost Object Name Labor;
                                                              NOR=Kostnadsobjektnavn, arbeid;
                                                              SVE=Kostn.objektnamn, arbetskraft];
                                                   Editable=No }
    { 60  ;   ;Cost Object Code Material;Code20   ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Material),
                                                                                               Global Dimension No.=CONST(2));
                                                   OnValidate=VAR
                                                                DimensionValue@1100525000 : Record 349;
                                                              BEGIN
                                                                DimensionValue.SETCURRENTKEY(Code, "Global Dimension No.");
                                                                DimensionValue.SETRANGE(Code, "Cost Object Code Material");
                                                                DimensionValue.SETRANGE("Global Dimension No.", 2);

                                                                IF NOT DimensionValue.FINDFIRST THEN
                                                                  DimensionValue.INIT;

                                                                UpdateVatProdPostingGrp;  //RFC 547

                                                                IF "Item No." = '' THEN
                                                                  VALIDATE("Material Price", DimensionValue.Price);

                                                                IF DimensionValue.Name <> '' THEN
                                                                  IF Description = '' THEN
                                                                    Description := DimensionValue.Name;
                                                              END;

                                                   CaptionML=[ENU=Cost Object Code Material;
                                                              NOR=Kostnadsobjektkode, materiale;
                                                              SVE=Kostnadsobjektkod, material] }
    { 61  ;   ;Cost Object Name Material;Text50   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dimension Value".Name WHERE (Global Dimension No.=CONST(2),
                                                                                                    Cost Type=CONST(Material),
                                                                                                    Code=FIELD(Cost Object Code Material)));
                                                   CaptionML=[ENU=Cost Object Name Material;
                                                              NOR=Kostnadsobjektnavn, materialer;
                                                              SVE=Kostnadsobjektnamn, material];
                                                   Editable=No }
    { 70  ;   ;Cost Object Code Subcontr.;Code20  ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Subcontracting),
                                                                                               Global Dimension No.=CONST(2));
                                                   OnValidate=VAR
                                                                DimensionValue@1100525000 : Record 349;
                                                              BEGIN
                                                                DimensionValue.SETCURRENTKEY(Code, "Global Dimension No.");
                                                                DimensionValue.SETRANGE(Code, "Cost Object Code Subcontr.");
                                                                DimensionValue.SETRANGE("Global Dimension No.", 2);

                                                                IF NOT DimensionValue.FINDFIRST THEN
                                                                  DimensionValue.INIT;

                                                                UpdateVatProdPostingGrp;  //RFC 547

                                                                VALIDATE("Subcontracting Price", DimensionValue.Price);

                                                                IF DimensionValue.Name <> '' THEN
                                                                  IF Description = '' THEN
                                                                    Description := DimensionValue.Name;
                                                              END;

                                                   CaptionML=[ENU=Cost Object Code Subcontr.;
                                                              NOR=Kostnadsobjektkode, underentrepren›r;
                                                              SVE=Kostn.obj.kod, underent.] }
    { 71  ;   ;Cost Object Name Subcontr.;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dimension Value".Name WHERE (Global Dimension No.=CONST(2),
                                                                                                    Cost Type=CONST(Subcontracting),
                                                                                                    Code=FIELD(Cost Object Code Subcontr.)));
                                                   CaptionML=[ENU=Cost Object Name Subcontr.;
                                                              NOR=Kostnadsobjektnavn, underentrepren›r;
                                                              SVE=Kostn.obj.namn, underent.];
                                                   Editable=No }
    { 80  ;   ;Cost Object Code Plant;Code20      ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Plant),
                                                                                               Global Dimension No.=CONST(2));
                                                   OnValidate=VAR
                                                                DimensionValue@1100525000 : Record 349;
                                                              BEGIN
                                                                DimensionValue.SETCURRENTKEY(Code, "Global Dimension No.");
                                                                DimensionValue.SETRANGE(Code, "Cost Object Code Plant");
                                                                DimensionValue.SETRANGE("Global Dimension No.", 2);

                                                                IF NOT DimensionValue.FINDFIRST THEN
                                                                  DimensionValue.INIT;

                                                                UpdateVatProdPostingGrp;  //RFC 547

                                                                VALIDATE("Plant Price", DimensionValue.Price);

                                                                IF DimensionValue.Name <> '' THEN
                                                                  IF Description = '' THEN
                                                                    Description := DimensionValue.Name;
                                                              END;

                                                   CaptionML=[ENU=Cost Object Code Plant;
                                                              NOR=Kostnadsobjektkode, maskin;
                                                              SVE=Kostnadsobjektkod, maskin] }
    { 81  ;   ;Cost Object Name Plant;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dimension Value".Name WHERE (Global Dimension No.=CONST(2),
                                                                                                    Cost Type=CONST(Plant),
                                                                                                    Code=FIELD(Cost Object Code Plant)));
                                                   CaptionML=[ENU=Cost Object Name Plant;
                                                              NOR=Kostnadsobjektnavn, maskin;
                                                              SVE=Kostnadsobjektnamn, maskin];
                                                   Editable=No }
    { 100 ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 200 ;   ;Surface Area        ;Decimal       ;OnValidate=BEGIN
                                                                UpdateQuantity;
                                                              END;

                                                   CaptionML=[ENU=Surface Area;
                                                              NOR=Overflateomr†de;
                                                              SVE=Ytarea];
                                                   Editable=No }
    { 210 ;   ;Linear Meters       ;Decimal       ;OnValidate=BEGIN
                                                                UpdateQuantity;
                                                              END;

                                                   CaptionML=[ENU=Linear Meters;
                                                              NOR=L›pemeter;
                                                              SVE=L”pmeter];
                                                   Editable=No }
    { 220 ;   ;Call Line Quantity  ;Decimal       ;OnValidate=BEGIN
                                                                UpdateQuantity;
                                                              END;

                                                   CaptionML=[ENU=Call Line Quantity;
                                                              NOR=Antall samtalerader;
                                                              SVE=Antal samtalslinje];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 230 ;   ;Height Surcharge    ;Decimal       ;OnValidate=BEGIN
                                                                UpdateQuantity;
                                                              END;

                                                   CaptionML=[ENU=Height Surcharge;
                                                              NOR=St›rrelse p† tilleggsgebyr;
                                                              SVE=H”jd, extra avgift];
                                                   Editable=No }
    { 240 ;   ;No. of Glaziers     ;Decimal       ;OnValidate=BEGIN
                                                                UpdateQuantity;
                                                              END;

                                                   CaptionML=[ENU=No. of Glaziers;
                                                              NOR=Antall glassmestere;
                                                              SVE=Antal glasm„stare];
                                                   Editable=No }
    { 300 ;   ;Qty. per Unit of Measure;Decimal   ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                IF "Qty. per Unit of Measure" <> 0 THEN
                                                                  IF ("Cost Driver" = "Cost Driver"::" ") OR ("Cost Driver" = "Cost Driver"::"Qty. of Call Line") THEN
                                                                    FIELDERROR("Qty. per Unit of Measure", STRSUBSTNO(Text000, FIELDCAPTION("Cost Driver")));

                                                                UpdateQuantity;
                                                              END;

                                                   CaptionML=[ENU=Qty. per Unit of Measure;
                                                              NOR=Antall per M†leenhet;
                                                              SVE=Antal per enhet] }
    { 310 ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO(Quantity) THEN
                                                                  IF Quantity <> 0 THEN
                                                                    TESTFIELD("Cost Driver", "Cost Driver"::" ");

                                                                UpdateHours;
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 320 ;   ;Unit of Measure Code;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              NOR=M†leenhetskode;
                                                              SVE=Enhetskod] }
    { 330 ;   ;Norm                ;Decimal       ;OnValidate=BEGIN
                                                                IF Norm <> 0 THEN
                                                                  TESTFIELD("Cost Object Code Labor"); // jhoek.100910

                                                                UpdateHours;
                                                              END;

                                                   CaptionML=[ENU=Norm;
                                                              NOR=Norm;
                                                              SVE=Norm];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 340 ;   ;Rate Code           ;Code10        ;TableRelation="Budget Rate".Code;
                                                   OnValidate=BEGIN
                                                                UpdateRate;
                                                              END;

                                                   CaptionML=[ENU=Rate Code;
                                                              NOR=Avgiftskode;
                                                              SVE=Avgiftskod] }
    { 345 ;   ;Price Reference Date;Date          ;OnValidate=BEGIN
                                                                UpdateRate;
                                                              END;

                                                   CaptionML=[ENU=Price Reference Date;
                                                              NOR=Referansedato for pris;
                                                              SVE=Priss„ttningsdatum];
                                                   Editable=No }
    { 350 ;   ;Rate                ;Decimal       ;OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=[ENU=Rate;
                                                              NOR=Avgift;
                                                              SVE=Avgift];
                                                   BlankZero=Yes }
    { 360 ;   ;Hours               ;Decimal       ;OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=[ENU=Hours;
                                                              NOR="Timer ";
                                                              SVE=Timmar];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 361 ;   ;Total Hours         ;Decimal       ;CaptionML=[ENU=Total Hours;
                                                              NOR=Timer totalt;
                                                              SVE=Totalt timmar];
                                                   Editable=No }
    { 370 ;   ;Material Price      ;Decimal       ;OnValidate=BEGIN
                                                                IF "Material Price" <> 0 THEN
                                                                  TESTFIELD("Cost Object Code Material"); // jhoek.100910

                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=[ENU=Material Price;
                                                              NOR=Materialepris;
                                                              SVE=Materialpris];
                                                   BlankZero=Yes }
    { 380 ;   ;Subcontracting Price;Decimal       ;OnValidate=BEGIN
                                                                IF "Subcontracting Price" <> 0 THEN
                                                                  TESTFIELD("Cost Object Code Subcontr."); // jhoek.100910

                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=[ENU=Subcontracting Price;
                                                              NOR=Underentrepen›rpris;
                                                              SVE=Underentreprenadspris];
                                                   BlankZero=Yes }
    { 390 ;   ;Plant Price         ;Decimal       ;OnValidate=BEGIN
                                                                IF "Plant Price" <> 0 THEN
                                                                  TESTFIELD("Cost Object Code Plant"); // jhoek.100910

                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=[ENU=Plant Price;
                                                              NOR=Maskinpris;
                                                              SVE=Maskinpris];
                                                   BlankZero=Yes }
    { 400 ;   ;Labor Amount        ;Decimal       ;CaptionML=[ENU=Labor Amount;
                                                              NOR=Arbeidskraftsbel›p;
                                                              SVE=Arbetskraftsbelopp];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 410 ;   ;Material Amount     ;Decimal       ;CaptionML=[ENU=Material Amount;
                                                              NOR=Materialebel›p;
                                                              SVE=Materialbelopp];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 420 ;   ;Subcontracting Amount;Decimal      ;CaptionML=[ENU=Subcontracting Amount;
                                                              NOR=Underentrepren›rbel›p;
                                                              SVE=Underentreprenadsbelopp];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 430 ;   ;Plant Amount        ;Decimal       ;CaptionML=[ENU=Plant Amount;
                                                              NOR=Maskinbel›p;
                                                              SVE=Maskin belopp];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 500 ;   ;Cost Amount         ;Decimal       ;CaptionML=[ENU=Cost Amount;
                                                              NOR=Kostbel›p;
                                                              SVE=Kostnadsbelopp];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 510 ;   ;Surcharge %         ;Decimal       ;OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=[ENU=Surcharge %;
                                                              NOR=Tilleggsgebyrsprosent;
                                                              SVE=Till„ggsavgiftsprocent];
                                                   BlankZero=Yes }
    { 511 ;   ;Surcharge           ;Decimal       ;CaptionML=[ENU=Surcharge;
                                                              NOR=Tilleggsgebyr;
                                                              SVE=Till„ggsavgift];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 520 ;   ;Profit/Risk %       ;Decimal       ;OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=[ENU=Profit/Risk %;
                                                              NOR=Fortjeneste/Risiko %;
                                                              SVE=Procent vinst/risk];
                                                   BlankZero=Yes }
    { 521 ;   ;Profit/Risk         ;Decimal       ;CaptionML=[ENU=Profit/Risk;
                                                              NOR=Fortjeneste/Risiko;
                                                              SVE=Vinst/risk];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 530 ;   ;Sales Amount        ;Decimal       ;CaptionML=[ENU=Sales Amount;
                                                              NOR=Salgsbel›p;
                                                              SVE=F”rs„ljningsbelopp];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 600 ;   ;Service Order No.   ;Code20        ;CaptionML=[ENU=Service Order No.;
                                                              NOR=Serviceordrenr.;
                                                              SVE=Serviceordernr];
                                                   Editable=No }
    { 700 ;   ;Total Cost Amount   ;Decimal       ;CaptionML=[ENU=Total Cost Amount;
                                                              NOR=Totalt kostbel›p;
                                                              SVE=Totalt kostnadsbelopp];
                                                   Editable=No }
    { 710 ;   ;Total Sales Amount  ;Decimal       ;CaptionML=[ENU=Total Sales Amount;
                                                              NOR=Totalt salgsbel›p;
                                                              SVE=Totalt f”rs„ljningsbelopp];
                                                   Editable=No }
    { 1001;   ;Labor Sales Amount  ;Decimal       ;CaptionML=[ENU=Labor Sales Amount;
                                                              NOR=Bel›p salg arbied;
                                                              SVE=Arbetskraft f”rs„ljningsbelopp];
                                                   Editable=No }
    { 1002;   ;Material Sales Amount;Decimal      ;CaptionML=[ENU=Material Sales Amount;
                                                              NOR=Bel›p salg materialer;
                                                              SVE=F”rs„ljningsbelopp material];
                                                   Editable=No }
    { 1003;   ;Subcontr. Sales Amount;Decimal     ;CaptionML=[ENU=Subcontracting Sales Amount;
                                                              NOR=Bel›p salg underentrepren›r;
                                                              SVE=Underentreprenad, f”rs„ljningsbelopp];
                                                   Editable=No }
    { 1004;   ;Plant Sales Amount  ;Decimal       ;CaptionML=[ENU=Plant Sales Amount;
                                                              NOR=Bel›p maskinsalg;
                                                              SVE=Maskinf”rs„ljningsbelopp];
                                                   Editable=No }
    { 1051;   ;Labor VAT Prod. Post. Grp;Code20   ;TableRelation="VAT Product Posting Group".Code;
                                                   CaptionML=[ENU=VAT Prod. Posting Group Labor;
                                                              NOR=MVA, produksjon bokf›ringsgruppe;
                                                              SVE=Momsprod. bokf.mall arb.kr.];
                                                   Editable=No }
    { 1052;   ;Material VAT Prod. Post. Grp;Code20;TableRelation="VAT Product Posting Group".Code;
                                                   CaptionML=[ENU=Material VAT Prod. Posting Group;
                                                              NOR=Materiale MVA, produksjon bokf›ringsgruppe;
                                                              SVE=Momsprod. bokf.mall material];
                                                   Editable=No }
    { 1053;   ;Subcontr. VAT Prod. Post. Grp;Code20;
                                                   TableRelation="VAT Product Posting Group".Code;
                                                   CaptionML=[ENU=Subcontracting VAT Prod. Posting Group;
                                                              NOR=Underentrepren›r MVA, produksjon bokf›ringsgruppe;
                                                              SVE=Underentreprenad, momsprod. bokf.gr.];
                                                   Editable=No }
    { 1054;   ;Plant VAT Prod. Post. Grp;Code20   ;TableRelation="VAT Product Posting Group".Code;
                                                   CaptionML=[ENU=Plant VAT Prod. Posting Group;
                                                              NOR=Maskin MVA, produksjon bokf›ringsgruppe;
                                                              SVE=Maskin momsprod. bokf”ringsmall];
                                                   Editable=No }
    { 1061;   ;Labor VAT %         ;Decimal       ;CaptionML=[ENU=Labor VAT %;
                                                              NOR=Arbeid mva. %;
                                                              SVE=Arbetskraft moms %];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 1062;   ;Material VAT %      ;Decimal       ;CaptionML=[ENU=Material VAT %;
                                                              NOR=Materiell mva. %;
                                                              SVE=Momsprocent material];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 1063;   ;Subcontr. VAT %     ;Decimal       ;CaptionML=[ENU=Subcontracting VAT %;
                                                              NOR=Underentrepren›r mva. %;
                                                              SVE=Underentreprenad momsprocent];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 1064;   ;Plant VAT %         ;Decimal       ;CaptionML=[ENU=Plant VAT %;
                                                              NOR=Maskin mva. %;
                                                              SVE=Maskin moms%];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 1070;   ;Total Sales VAT Amt ;Decimal       ;CaptionML=[ENU=Total Sales VAT Amount;
                                                              NOR=Totalt salg, mva.-bel›p;
                                                              SVE=Totalt, f”rs„ljningsmomsbelopp];
                                                   Editable=No }
    { 1071;   ;Labor Sales VAT Amt ;Decimal       ;CaptionML=[ENU=Labor Sales VAT Amount;
                                                              NOR=Arbeidssalg, mva.-bel›p;
                                                              SVE=Arb.kr. f”rs„ljn.momsbelopp];
                                                   Editable=No }
    { 1072;   ;Material Sales VAT Amt;Decimal     ;CaptionML=[ENU=Material Sales VAT Amount;
                                                              NOR=Materialsalg, mva.-bel›p;
                                                              SVE=F”rs„ljn.momsbel, mat.];
                                                   Editable=No }
    { 1073;   ;Subcontr. Sales VAT Amt;Decimal    ;CaptionML=[ENU=Subcontracting Sales VAT Amount;
                                                              NOR=Underentrepren›rsalg, mva-bel›p;
                                                              SVE=Underentreprenad, f”rs.momsbel.];
                                                   Editable=No }
    { 1074;   ;Plant Sales VAT Amt ;Decimal       ;CaptionML=[ENU=Plant Sales VAT Amount;
                                                              NOR=Maskinsalg, mva-bel›p;
                                                              SVE=Maskinf”rs„ljning momsbelopp];
                                                   Editable=No }
    { 1080;   ;Tot Sls Amt incl. VAT;Decimal      ;CaptionML=[ENU=Total Sales Amount incl. VAT;
                                                              NOR=Totalt salgsbel›p inkl. mva.;
                                                              SVE=Totalt f”rs„ljningsbelopp inkl. moms];
                                                   Editable=No }
    { 1081;   ;Labor Sls Amt incl. VAT;Decimal    ;CaptionML=[ENU=Labor Sales Amount incl. VAT;
                                                              NOR=Bel›p, salgsarbeid inkl. mva.;
                                                              SVE=Arb.kr. f”rs„ljn.bel.inkl.moms];
                                                   Editable=No }
    { 1082;   ;Material Sls Amt incl. VAT;Decimal ;CaptionML=[ENU=Material Sales Amount incl. VAT;
                                                              NOR=Bel›p salgsmateriell inkl. mva.;
                                                              SVE=F”rs„ljn.bel. inkl. moms, mat.];
                                                   Editable=No }
    { 1083;   ;Subc. Sls Amt incl. VAT;Decimal    ;CaptionML=[ENU=Subcontracting Sales Amount incl. VAT;
                                                              NOR=Bel›p salg underentrepren›r inkl. mva.;
                                                              SVE=Underentreprenad, f”rs.bel. inkl.moms];
                                                   Editable=No }
    { 1084;   ;Plant Sls Amt incl. VAT;Decimal    ;CaptionML=[ENU=Plant Sales Amount incl. VAT;
                                                              NOR=Bel›p maskinsalg inkl. mva.;
                                                              SVE=Maskinf”rs„ljn.bel. inkl. moms];
                                                   Editable=No }
    { 1090;   ;Correction Factor (Cost);Decimal   ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=ENU=Correction Factor (Cost);
                                                   DecimalPlaces=2:5 }
    { 1100;   ;Correction Factor (Sales);Decimal  ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=ENU=Correction Factor (Sales);
                                                   DecimalPlaces=2:5 }
  }
  KEYS
  {
    {    ;Glazing Service Call No.,Glazing Service Call Line No.,Type,Line No.;
                                                   SumIndexFields=Hours,Total Hours,Cost Amount,Sales Amount,Total Cost Amount,Total Sales Amount,Tot Sls Amt incl. VAT,Total Sales VAT Amt;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Labor VAT Prod. Post. Grp,Material VAT Prod. Post. Grp,Subcontr. VAT Prod. Post. Grp,Plant VAT Prod. Post. Grp;
                                                   SumIndexFields=Labor Sales Amount,Labor Sales VAT Amt,Material Sales Amount,Material Sales VAT Amt,Subcontr. Sales Amount,Subcontr. Sales VAT Amt,Plant Sales Amount,Plant Sales VAT Amt,Labor Sls Amt incl. VAT,Material Sls Amt incl. VAT,Subc. Sls Amt incl. VAT,Plant Sls Amt incl. VAT }
    {    ;Plant VAT Prod. Post. Grp,Labor VAT Prod. Post. Grp,Material VAT Prod. Post. Grp,Subcontr. VAT Prod. Post. Grp;
                                                   SumIndexFields=Labor Amount,Material Amount,Subcontracting Amount,Plant Amount }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100525000 : TextConst 'ENU=cannot be set if %1 is blank of ''Quantity of Call Line";NOR=Kan ikke settes hvis %1 er blank p† ''Antall av samtalerader''';

    PROCEDURE UpdateQuantity@1100525001();
    BEGIN
      CASE "Cost Driver" OF
      //  "Cost Driver"::" ": VALIDATE(Quantity, 0);
        "Cost Driver"::"Surface Area": VALIDATE(Quantity, "Qty. per Unit of Measure" * "Surface Area");
        "Cost Driver"::"Linear Meters": VALIDATE(Quantity, "Qty. per Unit of Measure" * "Linear Meters");
        "Cost Driver"::"Height Surcharge": VALIDATE(Quantity, "Qty. per Unit of Measure" * "Height Surcharge");
        "Cost Driver"::"No. of Glaziers": VALIDATE(Quantity, "Qty. per Unit of Measure" * "No. of Glaziers");
        "Cost Driver"::"Qty. of Call Line": VALIDATE(Quantity, "Qty. per Unit of Measure" * "Call Line Quantity");
      END;
    END;

    PROCEDURE UpdateHours@1100525002();
    BEGIN
      VALIDATE(Hours, Quantity * Norm);
    END;

    PROCEDURE UpdateTotals@1100525003();
    BEGIN
      IF "Cost Driver" <> "Cost Driver"::"Qty. of Call Line" THEN BEGIN
        "Labor Amount" := Rate * Hours;
        "Material Amount" := "Material Price" * Quantity;
        "Subcontracting Amount" := "Subcontracting Price" * Quantity;
        "Plant Amount" := "Plant Price" * Quantity;
      END ELSE BEGIN
        "Labor Amount" := Rate * Norm;
        "Material Amount" := "Material Price";
        "Subcontracting Amount" := "Subcontracting Price";
        "Plant Amount" := "Plant Price";
      END;

      "Cost Amount" := "Labor Amount" + "Material Amount" + "Subcontracting Amount" + "Plant Amount";
      Surcharge := ("Surcharge %" / 100) * "Cost Amount";
      "Profit/Risk" := ("Profit/Risk %" / 100) * "Cost Amount";
      "Sales Amount" := "Cost Amount" + Surcharge + "Profit/Risk";

      "Labor Amount" *= "Correction Factor (Cost)";
      "Material Amount" *= "Correction Factor (Cost)";
      "Subcontracting Amount" *= "Correction Factor (Cost)";
      "Plant Amount" *= "Correction Factor (Cost)";
      "Cost Amount" *= "Correction Factor (Cost)";
      "Sales Amount" *= "Correction Factor (Sales)";

      CASE "Cost Driver" OF
        "Cost Driver"::" ":
          BEGIN
            "Total Cost Amount" := "Cost Amount";
            "Total Sales Amount" := "Sales Amount";
            "Total Hours" := Hours;
          END;
        "Cost Driver"::"Qty. of Call Line":
          BEGIN
            "Total Cost Amount" := "Cost Amount" * "Call Line Quantity";
            "Total Sales Amount" := "Sales Amount" * "Call Line Quantity";
            "Total Hours" := Hours;
          END;
        ELSE BEGIN
          "Total Cost Amount" := "Cost Amount" * "Call Line Quantity";
          "Total Sales Amount" := "Sales Amount" * "Call Line Quantity";
          "Total Hours" := Hours * "Call Line Quantity";
        END;
      END;

      CalcVATAmount;  //RFC 547
    END;

    PROCEDURE UpdateRate@1100525008();
    BEGIN
      VALIDATE(Rate, GetRate("Rate Code", "Price Reference Date"));
    END;

    PROCEDURE GetRate@1100525013(RateCode@1100525000 : Code[10];ReferenceDate@1100525001 : Date) : Decimal;
    VAR
      BudgetRate@1100525004 : Record 11012000;
    BEGIN
      BudgetRate.SETRANGE(Code, RateCode);
      BudgetRate.SETFILTER("Starting Date", '<=%1', ReferenceDate);
      BudgetRate.FINDLAST;

      EXIT(BudgetRate.Rate);
    END;

    PROCEDURE CallLineQtyForBudget@1100525000() : Decimal;
    BEGIN
      CASE "Cost Driver" OF
        "Cost Driver"::" ",
        "Cost Driver"::"Qty. of Call Line": //mg, 09-11-11: M30503
        // "Cost Driver"::"No. of Glaziers": jhoek.071210
          EXIT(1);
      ELSE
        EXIT("Call Line Quantity");
      END;
    END;

    PROCEDURE UpdateVatProdPostingGrp@1100525018();
    VAR
      ServiceSetup@1100525001 : Record 11012800;
      ItemRec@1100525002 : Record 27;
      ServLocRec@1100525003 : Record 11012801;
      GlazingServiceCall@1100525004 : Record 11125777;
      Customer@1100525005 : Record 18;
      DimValRec@1100525006 : Record 349;
      DimMgt@1100525000 : Codeunit 408;
    BEGIN
      // RFC 547
      GlazingServiceCall.GET("Glazing Service Call No.");
      ServiceSetup.GET;
      IF NOT ServLocRec.GET(GlazingServiceCall."Service Location No.") THEN
        ServLocRec.INIT;
      IF NOT Customer.GET(GlazingServiceCall."Customer No.") THEN
        Customer.INIT;

      //Material
      "Material VAT Prod. Post. Grp" := '';
      IF (ServiceSetup."Source VAT Prod. Posting Group" =
          ServiceSetup."Source VAT Prod. Posting Group"::"Item/CostObject") THEN
      BEGIN
        IF NOT ItemRec.GET("Item No.") THEN
          ItemRec.INIT;
        IF (ItemRec."VAT Prod. Posting Group" <> '') THEN
        BEGIN
          "Material VAT Prod. Post. Grp" := ItemRec."VAT Prod. Posting Group";
        END;
        IF "Material VAT Prod. Post. Grp" = '' THEN BEGIN
          DimMgt.GetDimValueRec(2,"Cost Object Code Material",DimValRec,FALSE,'');
          IF (DimValRec."VAT Prod. Posting Group" <> '') THEN
          BEGIN
            "Material VAT Prod. Post. Grp" := DimValRec."VAT Prod. Posting Group";
          END;
        END;
      END;
      IF "Material VAT Prod. Post. Grp" = '' THEN
          "Material VAT Prod. Post. Grp" := ServLocRec."VAT Prod. Posting Group";
      IF "Material VAT Prod. Post. Grp" = '' THEN
          "Material VAT Prod. Post. Grp" := Customer."VAT Prod. Posting Group";
      IF "Material VAT Prod. Post. Grp" = '' THEN
        "Material VAT Prod. Post. Grp" := ServiceSetup."VAT Prod. Posting Group";

      //Labor
      "Labor VAT Prod. Post. Grp" := '';
      IF (ServiceSetup."Source VAT Prod. Posting Group" =
          ServiceSetup."Source VAT Prod. Posting Group"::"Item/CostObject") THEN
      BEGIN
        DimMgt.GetDimValueRec(2,"Cost Object Code Labor",DimValRec,FALSE,'');
        IF (DimValRec."VAT Prod. Posting Group" <> '') THEN
        BEGIN
          "Labor VAT Prod. Post. Grp" := DimValRec."VAT Prod. Posting Group";
        END;
      END;
      IF "Labor VAT Prod. Post. Grp" = '' THEN
        "Labor VAT Prod. Post. Grp" := ServLocRec."VAT Prod. Posting Group";
      IF "Labor VAT Prod. Post. Grp" = '' THEN
        "Labor VAT Prod. Post. Grp" := Customer."VAT Prod. Posting Group";
      IF "Labor VAT Prod. Post. Grp" = '' THEN
        "Labor VAT Prod. Post. Grp":= ServiceSetup."VAT Prod. Posting Group";

      //Subcontracting
      "Subcontr. VAT Prod. Post. Grp" := '';
      IF (ServiceSetup."Source VAT Prod. Posting Group" =
          ServiceSetup."Source VAT Prod. Posting Group"::"Item/CostObject") THEN
      BEGIN
        DimMgt.GetDimValueRec(2,"Cost Object Code Subcontr.",DimValRec,FALSE,'');
        IF (DimValRec."VAT Prod. Posting Group" <> '') THEN
        BEGIN
          "Subcontr. VAT Prod. Post. Grp" := DimValRec."VAT Prod. Posting Group";
        END;
      END;
      IF "Subcontr. VAT Prod. Post. Grp" = '' THEN
        "Subcontr. VAT Prod. Post. Grp" := ServLocRec."VAT Prod. Posting Group";
      IF "Subcontr. VAT Prod. Post. Grp" = '' THEN
        "Subcontr. VAT Prod. Post. Grp" := Customer."VAT Prod. Posting Group";
      IF "Subcontr. VAT Prod. Post. Grp" = '' THEN
        "Subcontr. VAT Prod. Post. Grp":= ServiceSetup."VAT Prod. Posting Group";

      //Plant
      "Plant VAT Prod. Post. Grp" := '';
      IF (ServiceSetup."Source VAT Prod. Posting Group" =
          ServiceSetup."Source VAT Prod. Posting Group"::"Item/CostObject") THEN
      BEGIN
        DimMgt.GetDimValueRec(2,"Cost Object Code Plant",DimValRec,FALSE,'');
        IF (DimValRec."VAT Prod. Posting Group" <> '') THEN
        BEGIN
          "Plant VAT Prod. Post. Grp" := DimValRec."VAT Prod. Posting Group";
        END;
      END;
      IF "Plant VAT Prod. Post. Grp" = '' THEN
        "Plant VAT Prod. Post. Grp" := ServLocRec."VAT Prod. Posting Group";
      IF "Plant VAT Prod. Post. Grp" = '' THEN
        "Plant VAT Prod. Post. Grp" := Customer."VAT Prod. Posting Group";
      IF "Plant VAT Prod. Post. Grp" = '' THEN
        "Plant VAT Prod. Post. Grp":= ServiceSetup."VAT Prod. Posting Group";
    END;

    PROCEDURE CalcVATAmount@1100525019();
    VAR
      GlazingServiceCall@1100525001 : Record 11125777;
    BEGIN
      // RFC 547
      GlazingServiceCall.GET("Glazing Service Call No.");
      CalcVATAmount2(GlazingServiceCall);
    END;

    PROCEDURE CalcVATAmount2@1100525004(GlazingServiceCall@1100525001 : Record 11125777);
    VAR
      VATPostingSetup@1100525000 : Record 325;
      Currency@1100525002 : Record 4;
    BEGIN
      // RFC 547
      Currency.InitRoundingPrecision;

      IF "Cost Amount" <> 0 THEN BEGIN
        "Material Sales Amount" := ROUND(
          "Total Sales Amount" * ("Material Amount"/"Cost Amount"),
          Currency."Unit-Amount Rounding Precision");
        "Labor Sales Amount" := ROUND(
          "Total Sales Amount" * ("Labor Amount"/"Cost Amount"),
          Currency."Unit-Amount Rounding Precision");
        "Subcontr. Sales Amount" := ROUND(
          "Total Sales Amount" * ("Subcontracting Amount"/"Cost Amount"),
          Currency."Unit-Amount Rounding Precision");
        "Plant Sales Amount" := ROUND(
          "Total Sales Amount" * ("Plant Amount"/"Cost Amount"),
          Currency."Unit-Amount Rounding Precision");
      END ELSE BEGIN
        "Material Sales Amount" := 0;
        "Labor Sales Amount" := 0;
        "Subcontr. Sales Amount" := 0;
        "Plant Sales Amount" := 0;
      END;

      IF NOT VATPostingSetup.GET(GlazingServiceCall."VAT Bus. Posting Group",
                                 "Material VAT Prod. Post. Grp")
      THEN
        VATPostingSetup.INIT;

      "Material VAT %" := 0;
      "Material Sales VAT Amt" := 0;
      "Material Sls Amt incl. VAT" := "Material Sales Amount";
      IF VATPostingSetup."VAT Calculation Type" = VATPostingSetup."VAT Calculation Type"::"Normal VAT" THEN BEGIN
        "Material VAT %" := VATPostingSetup."VAT %";
        "Material Sls Amt incl. VAT" := ROUND(
           "Material Sales Amount" * (100 + "Material VAT %") /100,
           Currency."Unit-Amount Rounding Precision");
        "Material Sales VAT Amt" := "Material Sls Amt incl. VAT" - "Material Sales Amount";
      END;

      IF NOT VATPostingSetup.GET(GlazingServiceCall."VAT Bus. Posting Group",
                                 "Labor VAT Prod. Post. Grp")
      THEN
        VATPostingSetup.INIT;

      "Labor VAT %" := 0;
      "Labor Sales VAT Amt" := 0;
      "Labor Sls Amt incl. VAT" := "Labor Sales Amount";
      IF VATPostingSetup."VAT Calculation Type" = VATPostingSetup."VAT Calculation Type"::"Normal VAT" THEN BEGIN
        "Labor VAT %" := VATPostingSetup."VAT %";
        "Labor Sls Amt incl. VAT" := ROUND(
           "Labor Sales Amount" * (100 + "Labor VAT %") /100,
           Currency."Unit-Amount Rounding Precision");
        "Labor Sales VAT Amt" := "Labor Sls Amt incl. VAT" - "Labor Sales Amount";
      END;

      IF NOT VATPostingSetup.GET(GlazingServiceCall."VAT Bus. Posting Group",
                                 "Subcontr. VAT Prod. Post. Grp")
      THEN
        VATPostingSetup.INIT;

      "Subcontr. VAT %" := 0;
      "Subcontr. Sales VAT Amt" := 0;
      "Subc. Sls Amt incl. VAT" := "Subcontr. Sales Amount";
      IF VATPostingSetup."VAT Calculation Type" = VATPostingSetup."VAT Calculation Type"::"Normal VAT" THEN BEGIN
        "Subcontr. VAT %" := VATPostingSetup."VAT %";
        "Subc. Sls Amt incl. VAT" := ROUND(
           "Subcontr. Sales Amount" * (100 + "Subcontr. VAT %") /100,
           Currency."Unit-Amount Rounding Precision");
        "Subcontr. Sales VAT Amt" := "Subc. Sls Amt incl. VAT" - "Subcontr. Sales Amount";
      END;

      IF NOT VATPostingSetup.GET(GlazingServiceCall."VAT Bus. Posting Group",
                                 "Plant VAT Prod. Post. Grp")
      THEN
        VATPostingSetup.INIT;

      "Plant VAT %" := 0;
      "Plant Sales VAT Amt" := 0;
      "Plant Sls Amt incl. VAT" := "Plant Sales Amount";
      IF VATPostingSetup."VAT Calculation Type" = VATPostingSetup."VAT Calculation Type"::"Normal VAT" THEN BEGIN
        "Plant VAT %" := VATPostingSetup."VAT %";
        "Plant Sls Amt incl. VAT" := ROUND(
           "Plant Sales Amount" * (100 + "Plant VAT %") /100,
           Currency."Unit-Amount Rounding Precision");
        "Plant Sales VAT Amt" := "Plant Sls Amt incl. VAT" - "Plant Sales Amount";
      END;

      "Total Sales VAT Amt" :=
        "Plant Sales VAT Amt" + "Subcontr. Sales VAT Amt" +
       "Labor Sales VAT Amt" + "Material Sales VAT Amt";
      "Tot Sls Amt incl. VAT" :=
        "Plant Sls Amt incl. VAT" + "Subc. Sls Amt incl. VAT" +
        "Labor Sls Amt incl. VAT" + "Material Sls Amt incl. VAT";
    END;

    BEGIN
    END.
  }
}

