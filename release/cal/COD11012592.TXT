OBJECT Codeunit 11012592 Ext. Transport Planning Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1100525000 : TextConst 'DEU=Keine Berechtigung fÅr %1 ''%2'' mit %3 ''%4'';ENU=No permission for %1 ''%2'' with %3 ''%4'';NLD=Geen permissie voor %1 ''%2'' met %3 ''%4''';
      Text002@1100529000 : TextConst 'DEU=Transport wurde bereits angefordert, erneut îffnen nicht zulÑssig (wenn erforderlich, stornieren Sie den Transport zuerst);ENU=Transport is already requested, reopen not allowed (if necessary, first cancel transport);NLD=Transport is al aangevraagd, opnieuw openen niet toegestaan (eventueel eerst transport annuleren).';
      Text003@1100529001 : TextConst 'DEU=Erneut îffnen nicht zulÑssig, warten Sie auf BestÑtigung der Stornierung.;ENU=Reopen not allowed, wait for confirmation of the cancellation.;NLD=Opnieuw openen niet toegestaan, wacht op bevestiging van de annulering.';
      Text004@1100529002 : TextConst 'DEU=Transport wurde bereits beendet, sind Sie sicher, dass Sie diesen erneut îffnen wollen?;ENU=Transport is already finished, Reopen, are you sure?;NLD=Transport is al gereed. Opnieuw openen, weet u het zeker?';
      Text005@1100529003 : TextConst 'DEU=Transport wurde bereits angefordert, sind Sie sicher, dass Sie nicht warten wollen, bis bestÑtigt wird, dass der Transport bereit ist?;ENU=Transport is already requested, are you sure you do not want to wait for confirmation that the transport is ready?;NLD=Transport is al aangevraagd, weet u zeker dat u niet wilt wachten op de bevestiging dat het transport gereed is?';
      Text006@1100529004 : TextConst 'DEU=Transport wurde storniert, sind Sie sicher, dass Sie den Transport als beendet einstellen mîchten?;ENU=Transport is canceled, are you sure you want to set transport to finished?;NLD=Transport is geannuleerd, weet u zeker dat u transport gereed wilt melden?';
      Text007@1100529005 : TextConst 'DEU=%1 ist ''%2'', noch keine StornierungsbestÑtigung von %3 erhalten. wurde %3 informiert (oder erledigen Sie das jetzt). \Auf beendet einstellen und fortfahren, sind Sie sicher?;ENU="%1 is ''%2'', not yet received a cancellation confirmation from %3. Is %3 informed (or do this right now). \Continue with set to finished, are you sure? ";NLD="%1 is ''%2'', nog geen annuleringsbevestiging van %3 ontvangen Is %3 geãnformeerd (of doe dit nu direct). \Doorgaan met op gereed zetten, weet u het zeker? "';

    PROCEDURE RequestExternalTransport@1100525000(VAR Rec@1100525000 : Record 11012556);
    VAR
      PlantOrder@1100525001 : Record 11012556;
    BEGIN
      WITH PlantOrder DO BEGIN
        COPY(Rec);
        CheckCommon(PlantOrder);
        TESTFIELD("Transport Status (Ext.)", "Transport Status (Ext.)"::Open);

        "Transport Status (Ext.)" := "Transport Status (Ext.)"::Request;
        MODIFY;
        UpdateLogbook("No.", "Transport Status (Ext.)", USERID, FALSE);
      END;
      Rec := PlantOrder;
    END;

    PROCEDURE UpdateExternalTransport@1100525006(VAR Rec@1100525000 : Record 11012556);
    VAR
      PlantOrder@1100525001 : Record 11012556;
    BEGIN
      WITH PlantOrder DO BEGIN
        COPY(Rec);
        CheckCommon(PlantOrder);
        TESTFIELD("Transport Status (Ext.)", "Transport Status (Ext.)"::Requested);

        "Transport Status (Ext.)" := "Transport Status (Ext.)"::Update;
        MODIFY;
        UpdateLogbook("No.", "Transport Status (Ext.)", USERID, FALSE);
      END;
      Rec := PlantOrder;
    END;

    PROCEDURE CancelExternalTransport@1100525009(VAR Rec@1100525000 : Record 11012556);
    VAR
      PlantOrder@1100525001 : Record 11012556;
    BEGIN
      WITH PlantOrder DO BEGIN
        COPY(Rec);
        CheckCommon(PlantOrder);
        IF NOT ("Transport Status (Ext.)" IN
          ["Transport Status (Ext.)"::Requested, "Transport Status (Ext.)"::Update, "Transport Status (Ext.)"::Updated])
        THEN
          FIELDERROR("Transport Status (Ext.)");

        "Transport Status (Ext.)" := "Transport Status (Ext.)"::Cancel;
        MODIFY;
        UpdateLogbook("No.", "Transport Status (Ext.)", USERID, FALSE);
      END;
      Rec := PlantOrder;
    END;

    PROCEDURE ReopenExternalTransport@1100529001(VAR Rec@1100525000 : Record 11012556);
    VAR
      PlantOrder@1100525001 : Record 11012556;
      Forced@1100529000 : Boolean;
    BEGIN
      WITH PlantOrder DO BEGIN
        COPY(Rec);
        CheckPermissionExternalTransportPlanning;
        TESTFIELD("No.");
        TESTFIELD(Posted, FALSE);

        CASE "Transport Status (Ext.)" OF
          "Transport Status (Ext.)"::Open:
            FIELDERROR("Transport Status (Ext.)");
          "Transport Status (Ext.)"::Request:
            Forced := FALSE;  //OK
          "Transport Status (Ext.)"::Requested,
          "Transport Status (Ext.)"::Update,
          "Transport Status (Ext.)"::Updated:
            ERROR(Text002);
          "Transport Status (Ext.)"::Cancel:
            ERROR(Text003);
          "Transport Status (Ext.)"::Canceled:
            Forced := FALSE;  //OK
          "Transport Status (Ext.)"::Finished:
            BEGIN
              IF NOT CONFIRM(Text004, FALSE) THEN
                ERROR('');
              Forced := TRUE;
            END;
        ELSE
          FIELDERROR("Transport Status (Ext.)");
        END;

        "Transport Status (Ext.)" := "Transport Status (Ext.)"::Open;
        MODIFY;
        UpdateLogbook("No.", "Transport Status (Ext.)", USERID, Forced);
      END;
      Rec := PlantOrder;
    END;

    PROCEDURE FinishExternalTransport@1100529002(VAR Rec@1100525000 : Record 11012556);
    VAR
      PlantOrder@1100525001 : Record 11012556;
      Forced@1100529000 : Boolean;
    BEGIN
      WITH PlantOrder DO BEGIN
        COPY(Rec);
        CheckPermissionExternalTransportPlanning;
        TESTFIELD("No.");
        TESTFIELD(Posted, FALSE);

        CASE "Transport Status (Ext.)" OF
          "Transport Status (Ext.)"::Open:
            FIELDERROR("Transport Status (Ext.)");
          "Transport Status (Ext.)"::Request:
            FIELDERROR("Transport Status (Ext.)"); //If necessary it can be reopened
          "Transport Status (Ext.)"::Requested,
          "Transport Status (Ext.)"::Update,
          "Transport Status (Ext.)"::Updated:
            BEGIN
              IF NOT CONFIRM(Text005, FALSE) THEN
                ERROR('');
              Forced := TRUE;
            END;
          "Transport Status (Ext.)"::Cancel,
          "Transport Status (Ext.)"::Canceled:
            BEGIN
              IF NOT CONFIRM(Text006, FALSE) THEN
                ERROR('');
              IF "Transport Status (Ext.)" = "Transport Status (Ext.)"::Cancel THEN BEGIN
                IF NOT CONFIRM(Text007, FALSE, FIELDCAPTION("Transport Status (Ext.)"), "Transport Status (Ext.)", FIELDCAPTION("Shipping Agent")) THEN
                  ERROR('');
              END;
              Forced := TRUE;
            END;
          "Transport Status (Ext.)"::Finished:
            FIELDERROR("Transport Status (Ext.)");
        ELSE
          FIELDERROR("Transport Status (Ext.)");
        END;

        "Transport Status (Ext.)" := "Transport Status (Ext.)"::Finished;
        MODIFY;
        UpdateLogbook("No.", "Transport Status (Ext.)", USERID, Forced);
      END;
      Rec := PlantOrder;
    END;

    LOCAL PROCEDURE CheckCommon@1100529000(PlantOrder@1100529000 : Record 11012556);
    BEGIN
      WITH PlantOrder DO BEGIN
        CheckPermissionExternalTransportPlanning;
        TESTFIELD("No.");
        TESTFIELD(Posted, FALSE);
        TESTFIELD("Shipping Agent");
        CheckExternalPlanningForShippingAgent("Shipping Agent");
        IF Type = Type::"Negative Inventory Correction" THEN
          FIELDERROR(Type);
      END;
    END;

    PROCEDURE UpdateLogbook@1100525001(PlantOrderNo@1100525001 : Code[20];TransportStatus@1100525002 : Option;ActionBy@1100525003 : Text;ForcedAction@1100529000 : Boolean);
    VAR
      LogbookExternalTransport@1100525000 : Record 11229916;
    BEGIN
      WITH LogbookExternalTransport DO BEGIN
        INIT;
        "Plant Order No." := PlantOrderNo;
        "Entry No." := 0;
        Status := TransportStatus;
        "Date/Time" := CURRENTDATETIME;
        "Action by" := COPYSTR(ActionBy, 1, MAXSTRLEN("Action by"));
        Forced := ForcedAction;
        INSERT(TRUE);
      END;
    END;

    LOCAL PROCEDURE CheckPermissionExternalTransportPlanning@1100525005();
    VAR
      PlantSetup@1100525001 : Record 11012550;
      UserSetup@1100525000 : Record 91;
    BEGIN
      PlantSetup.GET;
      PlantSetup.TESTFIELD("Transport Status (Ext. Plan.)", TRUE);
      UserSetup.GET(USERID);
      UserSetup.TESTFIELD("Access Plant Transport Status", TRUE);
    END;

    LOCAL PROCEDURE CheckExternalPlanningForShippingAgent@1100525003(ShippingAgent@1100525001 : Code[10]);
    VAR
      TransportPlanWsIdShipAgent@1100525000 : Record 11229917;
    BEGIN
      TransportPlanWsIdShipAgent.GET(ShippingAgent);
      TransportPlanWsIdShipAgent.TESTFIELD(Blocked, FALSE);
      TransportPlanWsIdShipAgent.TESTFIELD("Identification Code");
    END;

    PROCEDURE CheckIdentificationCodeWS@1100528006(ShippingAgent@1100525000 : Code[10];IdentificationCode@1100528002 : Code[50]);
    VAR
      TransportPlanWsIdShipAgent@1100528001 : Record 11229917;
    BEGIN
      IF (ShippingAgent <> '') AND (IdentificationCode <> '') THEN BEGIN
        IF TransportPlanWsIdShipAgent.GET(ShippingAgent) THEN BEGIN
          IF (NOT TransportPlanWsIdShipAgent.Blocked) AND
             (IdentificationCode = TransportPlanWsIdShipAgent."Identification Code")
          THEN
            EXIT;  //OK
        END;
      END;
      ERROR(Text001,
        TransportPlanWsIdShipAgent.FIELDCAPTION("Shipping Agent"), ShippingAgent,
        TransportPlanWsIdShipAgent.FIELDCAPTION("Identification Code"), IdentificationCode);
    END;

    BEGIN
    END.
  }
}

