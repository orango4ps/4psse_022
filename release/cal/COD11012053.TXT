OBJECT Codeunit 11012053 Create Small Proj. DelObjCAll
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11012450;
    OnRun=BEGIN
            ComplaintSetupRec.GET;
            IF (ComplaintSetupRec."Small Project Company" = '') OR
               (ComplaintSetupRec."Small Project Company" = COMPANYNAME)
            THEN BEGIN
              SmallProjInOtherCompany := FALSE;
              SmallJobRec.CHANGECOMPANY(COMPANYNAME);
              GeneralText.CHANGECOMPANY(COMPANYNAME);
            END ELSE BEGIN
              SmallProjInOtherCompany := TRUE;
              SmallJobRec.CHANGECOMPANY(ComplaintSetupRec."Small Project Company");
              GeneralText.CHANGECOMPANY(ComplaintSetupRec."Small Project Company");
            END;

            CallRec.COPY(Rec);
            CLEAR(DelObject);
            CLEAR(DelProject);
            IF "Delivered Object" <> '' THEN BEGIN
              DelObject.GET("Delivered Object");
              DelProject.GET(DelObject."Delivered Project");
            END;
            IF "Project No." <> '' THEN
              IF JobRec.GET("Project No.") THEN
                DelProject."Territory Code" := JobRec."Territory Code";

            CASE Handling OF
              Handling::Guarantee, Handling::"Contractor Costs",
              Handling::Maintenance, Handling::"Customer Costs",
              Handling::"Not yet known":
                GenSmallProj;
              ELSE
                //MESSAGE(Text002);
                FIELDERROR(Handling);
            END;

            "Small Project No." := SmallJobRec."No.";
            "Small Project Company" := ComplaintSetupRec."Small Project Company";
            IF "Small Project No." <> '' THEN
              MESSAGE(Text001,"Small Project No.");

            MODIFY();
          END;

  }
  CODE
  {
    VAR
      ComplaintSetupRec@1210190002 : Record 11012108;
      CallRec@1100485000 : Record 11012450;
      JobRec@1100485001 : Record 11072003;
      SmallJobRec@1210190001 : Record 11072003;
      gRecPrincipal@1210190007 : Record 11012005;
      gRecCustomer@1210190008 : Record 18;
      DelObject@1210190005 : Record 11012101;
      DelProject@1210190006 : Record 11012100;
      NoSeriesMngmntCU@1210190003 : Codeunit 396;
      Text001@1100485002 : TextConst 'DEU=Kleinprojekt: %1 erstellt.;ENU=Small Project: %1 generated.;NLD=Klusproject: %1 aangemaakt.;NOR=Lite prosjekt: %1 generert;SVE=Mindre projekt: %1 har genererats.';
      SmallProjInOtherCompany@1100485004 : Boolean;
      ComplaintNote@1100409001 : Record 11012454;
      GeneralText@1100409000 : Record 11020260;

    [External]
    PROCEDURE GenSmallProj@1210190000();
    VAR
      lvCust@1210190000 : Code[20];
    BEGIN
      AddSmallJobRec;
      AddComplaintTextToProject;
      IF SmallProjInOtherCompany THEN
        EXIT;

      lvCust := GetProspectRelation(CallRec."Contact No.");
      IF lvCust  <> '' THEN BEGIN
        IF gRecCustomer.GET(lvCust) THEN BEGIN
          IF NOT gRecPrincipal.GET(SmallJobRec."No.",lvCust) THEN BEGIN
            gRecPrincipal.INIT;
            gRecPrincipal."Project No." := SmallJobRec."No.";
            gRecPrincipal.Principal := lvCust;
            gRecPrincipal.INSERT(TRUE);
          END;
          SmallJobRec."Bill-to Customer No." := lvCust;
          IF (CallRec."Delivered Object" = '') OR (CallRec.Address = '') THEN //C002434.n
            SmallJobRec.CopyBillToAddress();                                  //C002434.n
          SmallJobRec.ValidateBillToCustomerData(TRUE, FALSE);  //*C-028192.c
          SmallJobRec."Settlement Method" := DetermineSettlementMethod;
          SmallJobRec."Order No. Customer" := CallRec."External Contract No.";
          SmallJobRec.MODIFY;
        END;
      END;
    END;

    PROCEDURE GetProspectRelation@11012000(lContact@11012000 : Code[20]) : Code[20];
    VAR
      lContBusRel@11012001 : Record 5054;
    BEGIN
      lContBusRel.SETRANGE("Contact No.", lContact);
      lContBusRel.SETRANGE("Link to Table", lContBusRel."Link to Table"::Customer);
      IF lContBusRel.FIND('-') THEN
        EXIT(lContBusRel."No.")
      ELSE
        EXIT('');
    END;

    [External]
    PROCEDURE AddSmallJobRec@1100485003();
    VAR
      lvJobSetupRec@1100485000 : Record 315;
      lvSalesSetupRec@1100485001 : Record 311;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      CallRec.CALCFIELDS(Address,"Address 2","Postal Code",City);

      ComplaintSetupRec.TESTFIELD("Small Project Nos.");

      SmallJobRec.INIT;
      SmallJobRec."No. Series" := ComplaintSetupRec."Small Project Nos.";
      CLEAR(NoSeriesMngmntCU);
      IF SmallProjInOtherCompany THEN
        NoSeriesMngmntCU.SetFromOtherCompany(ComplaintSetupRec."Small Project Company");
      SmallJobRec."No." := NoSeriesMngmntCU.GetNextNo(SmallJobRec."No. Series",WORKDATE,TRUE);
      SmallJobRec."Small Project" := TRUE;
      SmallJobRec."Project Status" := SmallJobRec."Project Status"::Production;
      SmallJobRec."Settlement Method" := DetermineSettlementMethod;
      IF SmallProjInOtherCompany THEN
        SmallJobRec."Origin Complaint Company" := COMPANYNAME;
      SmallJobRec."Origin Complaint No." := CallRec."No.";
      SmallJobRec.VALIDATE(Description,CallRec.Description);
      IF CallRec.Address <> '' THEN BEGIN
        SmallJobRec.Address := CallRec.Address;
        SmallJobRec."Address 2" := CallRec."Address 2";
        SmallJobRec."Post Code" := CallRec."Postal Code";
        SmallJobRec.City := CallRec.City;
      END;
      SmallJobRec."Territory Code" := DelProject."Territory Code";
      SmallJobRec."Starting Date" := CallRec."Preferred Start Date";
      SmallJobRec."Ending Date" := CallRec."Preferred End Date";
      SmallJobRec."Order No. Customer" := CallRec."External Contract No.";

      IF (NOT SmallProjInOtherCompany) THEN BEGIN
        SmallJobRec."Project Type" := SmallJobRec.DetermineProjectTypeSeries(COMPANYNAME);
        SmallJobRec.INSERT(TRUE);

        IF CallRec."Main Project No." <> '' THEN BEGIN
          SmallJobRec."Single/Main/Sub Project" := SmallJobRec."Single/Main/Sub Project"::"Sub Project";
          SmallJobRec."Main Project" := CallRec."Main Project No.";
        END ELSE BEGIN
          SmallJobRec."Main Project" := SmallJobRec."No.";
        END;
        SmallJobRec.MODIFY;

      END ELSE BEGIN
        SmallJobRec."Project Type" := SmallJobRec.DetermineProjectTypeSeries(ComplaintSetupRec."Small Project Company");
        SmallJobRec."Creation Date" := TODAY;
        SmallJobRec."Creation Time" := TIME;
        SmallJobRec."Version Date" := TODAY;
        SmallJobRec."Created by" := USERID;

        IF CallRec."Main Project No." <> '' THEN BEGIN
          SmallJobRec."Single/Main/Sub Project" := SmallJobRec."Single/Main/Sub Project"::"Sub Project";
          SmallJobRec."Main Project" := CallRec."Main Project No.";
        END ELSE BEGIN
          SmallJobRec."Main Project" := SmallJobRec."No.";
        END;

        lvJobSetupRec.CHANGECOMPANY(ComplaintSetupRec."Small Project Company");
        lvJobSetupRec.GET;
        SmallJobRec."Prognosis Level" := lvJobSetupRec."Default Prognosis Level";
        SmallJobRec."Progress Method" := lvJobSetupRec."Default Progress per";
        SmallJobRec."Progress Registry" := lvJobSetupRec."Default Progress in";
        SmallJobRec."Progress from Instal. Progress" := lvJobSetupRec."Progress from Instal. Progress";
        SmallJobRec."Forecast Level" := lvJobSetupRec."Forecast Level";
        SmallJobRec."Days Notify Buyer" := lvJobSetupRec."Days Notify Buyer";
        SmallJobRec."Days Repair Before" := lvJobSetupRec."Days Repair Before";
        SmallJobRec."Days Delayed Repair" := lvJobSetupRec."Days Delayed Repair";
        SmallJobRec."Days Notify Guarantee Fund" := lvJobSetupRec."Days Notify Guarantee Fund";
        SmallJobRec."Days End Service Period" := lvJobSetupRec."Days End Service Period";
        SmallJobRec."Budget Level for Options" := lvJobSetupRec."Default Budget Level Options";

        lvSalesSetupRec.CHANGECOMPANY(ComplaintSetupRec."Small Project Company");
        IF FPSLicenseManagement.LicenseAndReadPermissionForTable(lvSalesSetupRec) THEN BEGIN
          lvSalesSetupRec.GET;
          SmallJobRec."Calculate B Amounts based on" := lvSalesSetupRec."Calculate B Amounts based on";
        END;

        SmallJobRec.INSERT(FALSE);
      END;
    END;

    [External]
    PROCEDURE DetermineSettlementMethod@1100525000() : Integer;
    BEGIN
      IF (CallRec.Handling = CallRec.Handling::Guarantee) OR (CallRec.Handling = CallRec.Handling::"Contractor Costs") THEN
        EXIT(0) // Fixed Price
      ELSE
        EXIT(1); //Cost Plus
    END;

    [External]
    PROCEDURE AddComplaintTextToProject@1100525001();
    VAR
      LineNo@1100525000 : Integer;
    BEGIN
      ComplaintNote.SETRANGE("Complaint No.", CallRec."No.");
      IF ComplaintNote.FINDSET(FALSE,FALSE) THEN BEGIN
        REPEAT
          LineNo := LineNo + 10000;
          GeneralText.INIT;
          GeneralText.Table := GeneralText.Table::Job;
          GeneralText.Code := SmallJobRec."No.";
          GeneralText."Table Line No." := 0;
          GeneralText."Line No." := LineNo;
          GeneralText.Text := COPYSTR(ComplaintNote.Note,1,80);
          GeneralText.Date := TODAY;
          GeneralText."Time Created" := TIME;
          GeneralText."Created by" := USERID;
          GeneralText."Line Break" := ComplaintNote."Line Break";
          GeneralText.INSERT(FALSE);
        UNTIL ComplaintNote.NEXT =0;
      END;
    END;

    BEGIN
    END.
  }
}

