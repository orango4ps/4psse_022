OBJECT Page 11126077 Cap. Need Try-out Quote MB
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Tarifkomponente Ert„ge;
               ENU=Matrix;
               NLD=Matrix];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table11020285;
    PageType=ListPart;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             FieldEditable1 := TRUE;
             FieldEditable2 := TRUE;
             FieldEditable3 := TRUE;
             FieldEditable4 := TRUE;
             FieldEditable5 := TRUE;
             FieldEditable6 := TRUE;
             FieldEditable7 := TRUE;
             FieldEditable8 := TRUE;
             FieldEditable9 := TRUE;
             FieldEditable10 := TRUE;
             FieldEditable11 := TRUE;
             FieldEditable12 := TRUE;
             FieldVisible1 := TRUE;
             FieldVisible2 := TRUE;
             FieldVisible3 := TRUE;
             FieldVisible4 := TRUE;
             FieldVisible5 := TRUE;
             FieldVisible6 := TRUE;
             FieldVisible7 := TRUE;
             FieldVisible8 := TRUE;
             FieldVisible9 := TRUE;
             FieldVisible10 := TRUE;
             FieldVisible11 := TRUE;
             FieldVisible12 := TRUE;
           END;

    OnOpenPage=VAR
                 TmpTradeSpeciality@1100528600 : TEMPORARY Record 11020285;
               BEGIN
                 DetermineTradeSpecialitySet(TmpTradeSpeciality);
                 OnlyTryoutDisciplines(TryoutQuoteCode, TmpTradeSpeciality);
                 Rec.COPY(TmpTradeSpeciality, TRUE);
               END;

    OnAfterGetRecord=VAR
                       I@1100528700 : Integer;
                     BEGIN
                       FOR I := 1 TO MATRIX_CurrSetLength DO
                         MATRIX_OnAfterGetRecord(I);

                       FOR I := 1 TO ARRAYLEN(MATRIX_MatrixRecords) DO
                         MATRIX_SetFieldEditable(I);
                     END;

  }
  CONTROLS
  {
    { 1100528731;0;Container;
                ContainerType=ContentArea }

    { 1100528730;1;Group  ;
                GroupType=Repeater;
                FreezeColumnID=Description }

    { 1100528712;2;Field  ;
                SourceExpr=Discipline;
                Editable=FALSE }

    { 1100528713;2;Field  ;
                SourceExpr=Code;
                Editable=FALSE }

    { 1100528714;2;Field  ;
                SourceExpr=Description;
                Editable=FALSE }

    { 1100528711;2;Field  ;
                Name=Field1;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[1];
                CaptionClass='3,' + MATRIX_CaptionSet[1];
                Visible=FieldVisible1;
                Editable=FieldEditable1;
                OnValidate=BEGIN
                             MATRIX_OnValidate(1);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(1);
                            END;
                             }

    { 1100528710;2;Field  ;
                Name=Field2;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[2];
                CaptionClass='3,' + MATRIX_CaptionSet[2];
                Visible=FieldVisible2;
                Editable=FieldEditable2;
                OnValidate=BEGIN
                             MATRIX_OnValidate(2);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(2);
                            END;
                             }

    { 1100528709;2;Field  ;
                Name=Field3;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[3];
                CaptionClass='3,' + MATRIX_CaptionSet[3];
                Visible=FieldVisible3;
                Editable=FieldEditable3;
                OnValidate=BEGIN
                             MATRIX_OnValidate(3);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(3);
                            END;
                             }

    { 1100528708;2;Field  ;
                Name=Field4;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[4];
                CaptionClass='3,' + MATRIX_CaptionSet[4];
                Visible=FieldVisible4;
                Editable=FieldEditable4;
                OnValidate=BEGIN
                             MATRIX_OnValidate(4);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(4);
                            END;
                             }

    { 1100528707;2;Field  ;
                Name=Field5;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[5];
                CaptionClass='3,' + MATRIX_CaptionSet[5];
                Visible=FieldVisible5;
                Editable=FieldEditable5;
                OnValidate=BEGIN
                             MATRIX_OnValidate(5);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(5);
                            END;
                             }

    { 1100528706;2;Field  ;
                Name=Field6;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[6];
                CaptionClass='3,' + MATRIX_CaptionSet[6];
                Visible=FieldVisible6;
                Editable=FieldEditable6;
                OnValidate=BEGIN
                             MATRIX_OnValidate(6);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(6);
                            END;
                             }

    { 1100528705;2;Field  ;
                Name=Field7;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[7];
                CaptionClass='3,' + MATRIX_CaptionSet[7];
                Visible=FieldVisible7;
                Editable=FieldEditable7;
                OnValidate=BEGIN
                             MATRIX_OnValidate(7);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(7);
                            END;
                             }

    { 1100528704;2;Field  ;
                Name=Field8;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[8];
                CaptionClass='3,' + MATRIX_CaptionSet[8];
                Visible=FieldVisible8;
                Editable=FieldEditable8;
                OnValidate=BEGIN
                             MATRIX_OnValidate(8);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(8);
                            END;
                             }

    { 1100528703;2;Field  ;
                Name=Field9;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[9];
                CaptionClass='3,' + MATRIX_CaptionSet[9];
                Visible=FieldVisible9;
                Editable=FieldEditable9;
                OnValidate=BEGIN
                             MATRIX_OnValidate(9);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(9);
                            END;
                             }

    { 1100528702;2;Field  ;
                Name=Field10;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[10];
                CaptionClass='3,' + MATRIX_CaptionSet[10];
                Visible=FieldVisible10;
                Editable=FieldEditable10;
                OnValidate=BEGIN
                             MATRIX_OnValidate(10);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(10);
                            END;
                             }

    { 1100528701;2;Field  ;
                Name=Field11;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[11];
                CaptionClass='3,' + MATRIX_CaptionSet[11];
                Visible=FieldVisible11;
                Editable=FieldEditable11;
                OnValidate=BEGIN
                             MATRIX_OnValidate(11);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(11);
                            END;
                             }

    { 1100528700;2;Field  ;
                Name=Field12;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[12];
                CaptionClass='3,' + MATRIX_CaptionSet[12];
                Visible=FieldVisible12;
                Editable=FieldEditable12;
                OnValidate=BEGIN
                             MATRIX_OnValidate(12);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(12);
                            END;
                             }

  }
  CODE
  {
    VAR
      MATRIX_MatrixRecord@1100528723 : Record 2000000007;
      MATRIX_MatrixRecords@1100528722 : ARRAY [32] OF Record 2000000007;
      MATRIX_CaptionSet@1100528718 : ARRAY [32] OF Text[80];
      MATRIX_CurrSetLength@1100528716 : Integer;
      MATRIX_CellData@1100528715 : ARRAY [32] OF Decimal;
      MATRIX_PeriodType@1100528712 : 'Day,Week,Month,Quarter,Year';
      FieldEditable1@1100528711 : Boolean INDATASET;
      FieldEditable2@1100528710 : Boolean INDATASET;
      FieldEditable3@1100528709 : Boolean INDATASET;
      FieldEditable4@1100528708 : Boolean INDATASET;
      FieldEditable5@1100528707 : Boolean INDATASET;
      FieldEditable6@1100528706 : Boolean INDATASET;
      FieldEditable7@1100528705 : Boolean INDATASET;
      FieldEditable8@1100528704 : Boolean INDATASET;
      FieldEditable9@1100528703 : Boolean INDATASET;
      FieldEditable10@1100528702 : Boolean INDATASET;
      FieldEditable11@1100528701 : Boolean INDATASET;
      FieldEditable12@1100528700 : Boolean INDATASET;
      FieldVisible1@1100409007 : Boolean INDATASET;
      FieldVisible2@1100409006 : Boolean INDATASET;
      FieldVisible3@1100409005 : Boolean INDATASET;
      FieldVisible4@1100409004 : Boolean INDATASET;
      FieldVisible5@1100409003 : Boolean INDATASET;
      FieldVisible6@1100409002 : Boolean INDATASET;
      FieldVisible7@1100409001 : Boolean INDATASET;
      FieldVisible8@1100409000 : Boolean INDATASET;
      FieldVisible9@1100409008 : Boolean INDATASET;
      FieldVisible10@1100409009 : Boolean INDATASET;
      FieldVisible11@1100409010 : Boolean INDATASET;
      FieldVisible12@1100409011 : Boolean INDATASET;
      TryoutQuote@1100528714 : Record 11012758;
      TempTradeSpeciality@1100528717 : TEMPORARY Record 11020285;
      TryoutQuoteCode@1100528600 : Code[20];

    PROCEDURE Load@1132(VAR CaptionSet@1005 : ARRAY [32] OF Text[80];VAR MatrixRecords@1006 : ARRAY [32] OF Record 2000000007;CurrSetLength@1007 : Integer;PeriodType@1100528700 : 'Day,Week,Month,Quarter,Year';ITryoutQuoteCode@1100528701 : Code[20]);
    BEGIN
      CLEAR(MATRIX_CellData);
      COPYARRAY(MATRIX_CaptionSet, CaptionSet, 1);
      COPYARRAY(MATRIX_MatrixRecords, MatrixRecords, 1);

      MATRIX_CurrSetLength := CurrSetLength;

      MATRIX_SetFieldVisible;

      MATRIX_PeriodType := PeriodType;
      TryoutQuoteCode := ITryoutQuoteCode;
      IF TryoutQuoteCode <> '' THEN
        TryoutQuote.GET(ITryoutQuoteCode)
      ELSE
        CLEAR(TryoutQuote);

      SetDisciplineFilter(ITryoutQuoteCode);
    END;

    LOCAL PROCEDURE MATRIX_OnAfterGetRecord@1135(ColumnNo@1010 : Integer);
    VAR
      CapacityNeedDetail@1100528700 : Record 11012884;
    BEGIN
      MATRIX_MatrixRecord := MATRIX_MatrixRecords[ColumnNo];

      SetCapacityNeedDetailFilters(CapacityNeedDetail, MATRIX_MatrixRecord."Period Start", MATRIX_MatrixRecord."Period End");
      CapacityNeedDetail.SETCURRENTKEY(Type, "Source Code");
      CapacityNeedDetail.CALCSUMS(Hours);

      MATRIX_CellData[ColumnNo] := CapacityNeedDetail.Hours;
    END;

    LOCAL PROCEDURE MATRIX_OnValidate@1100525001(ColumnNo@1008 : Integer);
    BEGIN
      MATRIX_UpdateCell(ColumnNo);
    END;

    LOCAL PROCEDURE MATRIX_OnLookup@1100528701(ColumnNo@1100409000 : Integer);
    BEGIN
    END;

    LOCAL PROCEDURE MATRIX_OnDrillDown@1100409000(ColumnNo@1100409000 : Integer);
    VAR
      CapacityNeedDetail@1100528701 : Record 11012884;
    BEGIN
      MATRIX_MatrixRecord := MATRIX_MatrixRecords[ColumnNo];

      SetCapacityNeedDetailFilters(CapacityNeedDetail, MATRIX_MatrixRecord."Period Start", MATRIX_MatrixRecord."Period End");
      CapacityNeedDetail.SETCURRENTKEY(Type, "Source Code");
      PAGE.RUNMODAL(0, CapacityNeedDetail);
    END;

    LOCAL PROCEDURE MATRIX_OnAssistEdit@1100409001(ColumnNo@1100409000 : Integer);
    BEGIN
    END;

    LOCAL PROCEDURE MATRIX_UpdateCell@1100485007(ColumnNo@1100528701 : Integer);
    VAR
      CapacityNeedDetail@1100528700 : Record 11012884;
      CellValue@1100528703 : Decimal;
    BEGIN
      MATRIX_MatrixRecord := MATRIX_MatrixRecords[ColumnNo];

      CellValue := MATRIX_CellData[ColumnNo];

      SetCapacityNeedDetailFilters(CapacityNeedDetail, MATRIX_MatrixRecord."Period Start", MATRIX_MatrixRecord."Period End");
      CapacityNeedDetail.SETCURRENTKEY(Type, "Source Code");
      CapacityNeedDetail.DELETEALL(TRUE);

      IF CellValue <> 0 THEN BEGIN
        CapacityNeedDetail.INIT;
        CapacityNeedDetail.Hours := CellValue;
        CapacityNeedDetail.Type := CapacityNeedDetail.Type::Workload;
        CapacityNeedDetail."Workload Type" := CapacityNeedDetail."Workload Type"::TryoutQuote;
        CapacityNeedDetail."Source Code" := TryoutQuote.Code;
        CapacityNeedDetail."Global Dimension 1 Code" := TryoutQuote."Global Dimension 1 Code";
        CapacityNeedDetail."Discipline Code" := Rec.Discipline;
        CapacityNeedDetail."Trade Speciality Code" := Rec.Code;
        CapacityNeedDetail.Date := MATRIX_MatrixRecord."Period Start";
        CapacityNeedDetail.INSERT(TRUE);
      END;
    END;

    LOCAL PROCEDURE MATRIX_SetFieldEditable@1100528700(ColumnNo@1100528700 : Integer);
    BEGIN
      CASE ColumnNo OF
        1: FieldEditable1 := ColumnNo <= MATRIX_CurrSetLength;
        2: FieldEditable2 := ColumnNo <= MATRIX_CurrSetLength;
        3: FieldEditable3 := ColumnNo <= MATRIX_CurrSetLength;
        4: FieldEditable4 := ColumnNo <= MATRIX_CurrSetLength;
        5: FieldEditable5 := ColumnNo <= MATRIX_CurrSetLength;
        6: FieldEditable6 := ColumnNo <= MATRIX_CurrSetLength;
        7: FieldEditable7 := ColumnNo <= MATRIX_CurrSetLength;
        8: FieldEditable8 := ColumnNo <= MATRIX_CurrSetLength;
        9: FieldEditable9 := ColumnNo <= MATRIX_CurrSetLength;
        10: FieldEditable10 := ColumnNo <= MATRIX_CurrSetLength;
        11: FieldEditable11 := ColumnNo <= MATRIX_CurrSetLength;
        12: FieldEditable12 := ColumnNo <= MATRIX_CurrSetLength;
      END;
    END;

    LOCAL PROCEDURE MATRIX_SetFieldVisible@1100409002();
    BEGIN
    END;

    PROCEDURE SetCapacityNeedDetailFilters@1100528702(VAR CapacityNeedDetail@1100528700 : Record 11012884;PeriodStart@1100528701 : Date;PeriodEnd@1100528702 : Date);
    BEGIN
      CapacityNeedDetail.SETRANGE(Type, CapacityNeedDetail.Type::Workload);
      CapacityNeedDetail.SETRANGE("Workload Type", CapacityNeedDetail."Workload Type"::TryoutQuote);
      CapacityNeedDetail.SETFILTER("Source Code", TryoutQuote.Code);
      CapacityNeedDetail.SETFILTER("Global Dimension 1 Code", TryoutQuote."Global Dimension 1 Code");
      CapacityNeedDetail.SETRANGE("Discipline Code", Rec.Discipline);
      CapacityNeedDetail.SETRANGE("Trade Speciality Code", Rec.Code);
      CapacityNeedDetail.SETRANGE(Date, PeriodStart, PeriodEnd);
    END;

    LOCAL PROCEDURE SetDisciplineFilter@1100485008(TryoutQuoteCode@1100528701 : Code[20]);
    VAR
      TryoutQuote@1100528700 : Record 11012758;
      TryoutDiscipline@1100485000 : Record 11020205;
      TradeSpeciality@1100485001 : Record 11020285;
    BEGIN
      TempTradeSpeciality.DELETEALL;

      IF TryoutQuote.GET(TryoutQuoteCode) THEN BEGIN
        TryoutDiscipline.SETRANGE("Try-out No.", TryoutQuote."Try-out No.");
        IF TryoutDiscipline.FINDSET THEN BEGIN
          REPEAT
            TradeSpeciality.SETRANGE(Discipline, TryoutDiscipline."Discipline Code");
            IF TradeSpeciality.FINDSET THEN BEGIN
              REPEAT
                TempTradeSpeciality := TradeSpeciality;
                TempTradeSpeciality.INSERT;
              UNTIL TradeSpeciality.NEXT = 0;
            END;
          UNTIL TryoutDiscipline.NEXT = 0;
        END;
      END;

      IF TempTradeSpeciality.ISEMPTY THEN BEGIN
        TradeSpeciality.RESET;
        IF TradeSpeciality.FINDSET THEN BEGIN
          REPEAT
            TempTradeSpeciality := TradeSpeciality;
            TempTradeSpeciality.INSERT;
          UNTIL TradeSpeciality.NEXT = 0;
        END;
      END;
    END;

    LOCAL PROCEDURE FindRec@59(VAR TradeSpeciality@1001 : Record 11020285;Which@1002 : Text[250]) : Boolean;
    VAR
      Found@1100528700 : Boolean;
    BEGIN
      TempTradeSpeciality.Discipline := TradeSpeciality.Discipline;
      TempTradeSpeciality.Code := TradeSpeciality.Code;
      Found := TempTradeSpeciality.FIND(Which);
      IF Found THEN BEGIN
        TradeSpeciality.INIT;
        TradeSpeciality.TRANSFERFIELDS(TempTradeSpeciality);
      END;
      EXIT(Found);
    END;

    LOCAL PROCEDURE NextRec@60(VAR TradeSpeciality@1001 : Record 11020285;Steps@1002 : Integer) : Integer;
    VAR
      ResultSteps@1100528700 : Integer;
    BEGIN
      TempTradeSpeciality.Discipline := TradeSpeciality.Discipline;
      TempTradeSpeciality.Code := TradeSpeciality.Code;
      ResultSteps := TempTradeSpeciality.NEXT(Steps);
      IF ResultSteps <> 0 THEN BEGIN
        TradeSpeciality.INIT;
        TradeSpeciality.TRANSFERFIELDS(TempTradeSpeciality);
      END;
      EXIT(ResultSteps);
    END;

    LOCAL PROCEDURE OnlyTryoutDisciplines@1100528600(ITryoutQuoteCode@1100528603 : Code[20];VAR IOTradeSpeciality@1100528600 : Record 11020285);
    VAR
      TryoutDiscipline@1100528601 : Record 11020205;
      TryoutQuote@1100528602 : Record 11012758;
    BEGIN
      IF NOT IOTradeSpeciality.ISTEMPORARY THEN
        EXIT;
      IF NOT TryoutQuote.GET(ITryoutQuoteCode) THEN
        EXIT;
      IF TryoutQuote."Try-out No." = '' THEN
        EXIT;
      TryoutDiscipline.SETRANGE("Try-out No.", TryoutQuote."Try-out No.");
      IF TryoutDiscipline.ISEMPTY THEN
        EXIT;
      IOTradeSpeciality.SETFILTER(Discipline, '<>%1', '');
      IF IOTradeSpeciality.FINDSET THEN
        REPEAT
          TryoutDiscipline.SETRANGE("Discipline Code", IOTradeSpeciality.Discipline);
          IF TryoutDiscipline.ISEMPTY THEN
            IOTradeSpeciality.DELETE;
        UNTIL IOTradeSpeciality.NEXT = 0;
      IOTradeSpeciality.RESET;
    END;

    BEGIN
    END.
  }
}

