OBJECT Page 6086386 Settlement - Expense Subform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW17.00.00.3.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Ausgaben;
               ENU=Expenses;
               NLD=Uitgaven];
    SourceTable=Table6086320;
    PageType=ListPart;
    OnOpenPage=VAR
                 EMOnlineMgt@6086300 : Codeunit 6086305;
               BEGIN
                 EMOnlineMgt.IsCompanyActive(FALSE);
                 EnableFields;
                 ShowEntryNo := WebClientMgt.IsWebClient;
               END;

    OnFindRecord=BEGIN
                   GetExpHeader;
                   EXIT(FIND(Which));
                 END;

    OnAfterGetRecord=BEGIN
                       ShortcutFieldFunctions.ShowShortcutFieldValues(ShortcutFieldValues,DATABASE::Expense,0,'',"Entry No.");
                     END;

    OnNewRecord=VAR
                  Expense@1160040002 : Record 6086320;
                BEGIN
                  CLEAR(ShortcutFieldValues);

                  GetExpHeader;
                  IF ExpHeader.Status = ExpHeader.Status::Released THEN
                    EXIT;

                  "Entry No." := Expense.GetEntryNo;
                  "Continia User ID" := ExpHeader."Continia User ID";
                  VALIDATE("Settlement No.",ExpHeader."No.");
                  "Expense Header GUID" := ExpHeader."Exp. Header GUID";
                  "Country/Region Code" := ExpHeader."Country/Region Code";
                  "Currency Code" := ExpHeader."Currency Code";
                  "Global Dimension 1 Code" := ExpHeader."Global Dimension 1 Code";
                  "Global Dimension 2 Code" := ExpHeader."Global Dimension 2 Code";
                  "Job No." := ExpHeader."Job No.";
                  "Job Task No." := ExpHeader."Job Task No.";
                  "Job Line Type" := ExpHeader."Job Line Type";
                  Billable := ExpHeader.Billable;

                  IF NOT BelowxRec THEN BEGIN
                    Expense.RESET;
                    Expense.SETCURRENTKEY("Settlement No.","Settlement Line No.");
                    Expense.SETRANGE("Settlement No.",ExpHeader."No.");
                    Expense.SETFILTER("Settlement Line No.",'<%1',xRec."Settlement Line No.");
                    IF Expense.FINDLAST THEN
                      "Settlement Line No." := ROUND((xRec."Settlement Line No." + Expense."Settlement Line No.") / 2,1)
                    ELSE
                      "Settlement Line No." := ROUND((xRec."Settlement Line No.") / 2,1);

                  END ELSE
                    IF Rec.COUNT > 1 THEN
                      "Settlement Line No." := xRec."Settlement Line No." + 10000
                    ELSE
                      "Settlement Line No." := + 10000;

                  "Document Date" := xRec."Document Date";
                END;

    OnInsertRecord=VAR
                     Expense@1160040000 : Record 6086320;
                   BEGIN
                     "Entry No." := Expense.GetEntryNo;
                     IF "Document Date" = 0D THEN
                       "Document Date" := TODAY;
                     "Cash/Private Card" := TRUE;

                     GetExpHeader;
                     "Continia User ID" := ExpHeader."Continia User ID";
                   END;

    OnDeleteRecord=BEGIN
                     IF NOT "Matched to Bank Transaction" THEN
                       EXIT(TRUE)
                     ELSE BEGIN
                       VALIDATE("Settlement No.",'');
                       MODIFY(TRUE);
                       EXIT(FALSE);
                     END;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           IF WebClientMgt.IsWebClient THEN
                             UpdateImage;
                         END;

    ActionList=ACTIONS
    {
      { 1160040041;  ;ActionContainer;
                      Name=ActionItems;
                      CaptionML=;
                      ActionContainerType=ActionItems }
      { 9       ;1   ;ActionGroup;
                      Name=Lines;
                      CaptionML=[DEU=Zeilen;
                                 ENU=Lines;
                                 NLD=Lines] }
      { 13      ;2   ;Action    ;
                      Name=Attachments;
                      ShortCutKey=Shift+Ctrl+T;
                      CaptionML=[DEU=AnhÑnge;
                                 ENU=Attachments;
                                 NLD=Bijlagen];
                      Image=Attachments;
                      OnAction=BEGIN
                                 ShowAttachments;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 12      ;2   ;Action    ;
                      Name=Dimensions;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[DEU=Dimensionen;
                                 ENU=Dimensions;
                                 NLD=Dimensies];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 Rec.LookupDimensions(TRUE);
                               END;
                                }
      { 11      ;2   ;Action    ;
                      Name=Extra Fields;
                      CaptionML=[DEU=ZusÑtzliche Felder;
                                 ENU=Extra Fields;
                                 NLD=Extra velden];
                      Image=SelectField;
                      OnAction=BEGIN
                                 Rec.LookupExtraFields(TRUE);
                               END;
                                }
      { 4       ;2   ;Action    ;
                      Name=Attendees;
                      CaptionML=[DEU=Statusfilter;
                                 ENU=Attendees;
                                 NLD=Deelnemers];
                      Image=Users;
                      OnAction=BEGIN
                                 Rec.DrillDownAttendees;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 10      ;2   ;Action    ;
                      Name=Comments;
                      CaptionML=[DEU=Bemerkungen;
                                 ENU=Comments;
                                 NLD=Opmerkingen];
                      Image=ViewComments;
                      OnAction=BEGIN
                                 Rec.LookupComments;
                               END;
                                }
      { 1160040040;1 ;ActionGroup;
                      Name=Functions;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unctions;
                                 NLD=F&unctie] }
      { 1160040034;2 ;Action    ;
                      Name=Merge Expenses;
                      CaptionML=[DEU=Ausgaben zusammenfÅhren;
                                 ENU=Merge Expenses;
                                 NLD=Uitgave samenvoeging];
                      Image=GetSourceDoc;
                      OnAction=VAR
                                 Expense@1160040001 : Record 6086320;
                                 Expense2@1160040002 : Record 6086320;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(Expense);

                                 IF Expense.COUNT <> 2 THEN
                                   ERROR(Select2ExpToMergeErr);

                                 Expense.FINDSET;
                                 Expense2.GET(Expense."Entry No.");
                                 Expense.NEXT;
                                 Expense.MergeExpenses(Expense,Expense2);

                                 CurrPage.UPDATE;
                               END;
                                }
      { 1160040008;2 ;Action    ;
                      Name=Match Bank Transaction;
                      ShortCutKey=Shift+F11;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Banktransaktion abgleichen;
                                 ENU=Match Bank Transaction;
                                 NLD=Match banktransactie];
                      Image=SettleOpenTransactions;
                      OnAction=VAR
                                 Expense@1160040001 : Record 6086320;
                               BEGIN
                                 MatchToBankTrans;
                               END;
                                }
      { 1160040042;2 ;Action    ;
                      Name=Expense Split and Allocation;
                      ShortCutKey=Shift+Ctrl+L;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Trennen und Zuweisen von Ausgaben;
                                 ENU=Expense Split and Allocation;
                                 NLD=Uitgavensplitsing en allocatie];
                      Image=Split;
                      OnAction=BEGIN
                                 SplitAndAllocate;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 2       ;2   ;Separator  }
      { 7       ;2   ;Action    ;
                      Name=Get Expenses;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Ausgaben abrufen;
                                 ENU=Get Expenses;
                                 NLD=Ophalen uitgaven];
                      Image=GetLines;
                      OnAction=BEGIN
                                 ExpHeader.AttachExpensesToSettlement;
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=Detach Expenses;
                      CaptionML=[DEU=Ausgaben voneinander trennen;
                                 ENU=Detach Expenses;
                                 NLD=Uitgaven loskoppelen];
                      Image=RemoveLine;
                      OnAction=VAR
                                 Expense@1160040001 : Record 6086320;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(Expense);
                                 Rec.DetachExpFromSettlement(Expense);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1160040000;;Container;
                Name=ContentArea;
                ContainerType=ContentArea }

    { 1160040001;1;Group  ;
                Name=Group;
                Editable=StatusEditable;
                GroupType=Repeater }

    { 6   ;2   ;Field     ;
                Name=Comment;
                CaptionML=[DEU=Bemerkungen;
                           ENU=Comments;
                           NLD=Opmerkingen];
                SourceExpr=HasComments;
                Editable=false }

    { 1160040003;2;Field  ;
                Name=Document Date;
                SourceExpr="Document Date" }

    { 1160040002;2;Field  ;
                Name=Expense Type;
                SourceExpr="Expense Type" }

    { 1160040004;2;Field  ;
                Name=Description;
                SourceExpr=Description }

    { 6086301;2;Field     ;
                Name=No. of Attachments;
                SourceExpr="No. of Attachments";
                Visible=FALSE }

    { 6086302;2;Field     ;
                Name=AttendeesDisplayText;
                CaptionML=[DEU=Statusfilter;
                           ENU=Attendees;
                           NLD=Deelnemers];
                SourceExpr=GetAttendeesForDisplay;
                OnDrillDown=BEGIN
                              DrillDownAttendees;
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 1160040005;2;Field  ;
                Name=Currency Code;
                SourceExpr="Currency Code" }

    { 1160040006;2;Field  ;
                Name=Amount;
                SourceExpr=Amount }

    { 1160040007;2;Field  ;
                Name=Amount (LCY);
                SourceExpr="Amount (LCY)" }

    { 1160040033;2;Field  ;
                Name=Allocated Amount (LCY);
                SourceExpr="Allocated Amount (LCY)";
                OnDrillDown=VAR
                              ExpenseAllocation@1000 : Record 6086321;
                            BEGIN
                              ExpenseAllocation.SETCURRENTKEY("Expense Entry No.");
                              ExpenseAllocation.SETRANGE("Expense Entry No.","Entry No.");
                              PAGE.RUNMODAL(PAGE::"Expense Split and Allocation",ExpenseAllocation);
                              CurrPage.UPDATE(FALSE);
                            END;
                             }

    { 1160040009;2;Field  ;
                Name=No Refund;
                SourceExpr="No Refund";
                Visible=false }

    { 1160040010;2;Field  ;
                Name=Bank-Currency Amount;
                SourceExpr="Bank-Currency Amount";
                Visible=false }

    { 1160040011;2;Field  ;
                Name=Bank Currency Code;
                SourceExpr="Bank Currency Code";
                Visible=false }

    { 1160040012;2;Field  ;
                Name=Cash/Private Card;
                SourceExpr="Cash/Private Card" }

    { 1160040013;2;Field  ;
                Name=Matched to Bank Transaction;
                SourceExpr="Matched to Bank Transaction" }

    { 1160040014;2;Field  ;
                Name=Global Dimension 1 Code;
                SourceExpr="Global Dimension 1 Code" }

    { 1160040015;2;Field  ;
                Name=Global Dimension 2 Code;
                SourceExpr="Global Dimension 2 Code" }

    { 1160040016;2;Field  ;
                Name=Job No.;
                SourceExpr="Job No.";
                Visible=JobNoVisible }

    { 1160040017;2;Field  ;
                Name=Job Task No.;
                SourceExpr="Job Task No.";
                Visible=JobNoVisible }

    { 1   ;2   ;Field     ;
                Name=Billable;
                SourceExpr=Billable;
                Visible=false }

    { 6086303;2;Field     ;
                Name=Admin Comment;
                SourceExpr="Admin Comment" }

    { 3   ;2   ;Field     ;
                Name=Job Line Type;
                SourceExpr="Job Line Type";
                Visible=false }

    { 1160040018;2;Field  ;
                Name=ShortcutField1;
                SourceExpr=ShortcutFieldValues[1];
                CaptionClass=GetShortcutFieldCaption(1);
                Visible=CustomFieldVisible1;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(1,DATABASE::Expense,0,'',"Entry No.",ShortcutFieldValues[1]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(1,DATABASE::Expense,0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040019;2;Field  ;
                Name=ShortcutField2;
                SourceExpr=ShortcutFieldValues[2];
                CaptionClass=GetShortcutFieldCaption(2);
                Visible=CustomFieldVisible2;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(2,DATABASE::Expense,0,'',"Entry No.",ShortcutFieldValues[2]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(2,DATABASE::Expense,0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040020;2;Field  ;
                Name=ShortcutField3;
                SourceExpr=ShortcutFieldValues[3];
                CaptionClass=GetShortcutFieldCaption(3);
                Visible=CustomFieldVisible3;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(3,DATABASE::Expense,0,'',"Entry No.",ShortcutFieldValues[3]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(3,DATABASE::Expense,0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040021;2;Field  ;
                Name=ShortcutField4;
                SourceExpr=ShortcutFieldValues[4];
                CaptionClass=GetShortcutFieldCaption(4);
                Visible=CustomFieldVisible4;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(4,DATABASE::Expense,0,'',"Entry No.",ShortcutFieldValues[4]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(4,DATABASE::Expense,0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040022;2;Field  ;
                Name=ShortcutField5;
                SourceExpr=ShortcutFieldValues[5];
                CaptionClass=GetShortcutFieldCaption(5);
                Visible=CustomFieldVisible5;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(5,DATABASE::Expense,0,'',"Entry No.",ShortcutFieldValues[5]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(5,DATABASE::Expense,0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040023;2;Field  ;
                Name=ShortcutField6;
                SourceExpr=ShortcutFieldValues[6];
                CaptionClass=GetShortcutFieldCaption(6);
                Visible=CustomFieldVisible6;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(6,DATABASE::Expense,0,'',"Entry No.",ShortcutFieldValues[6]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(6,DATABASE::Expense,0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040024;2;Field  ;
                Name=ShortcutField7;
                SourceExpr=ShortcutFieldValues[7];
                CaptionClass=GetShortcutFieldCaption(7);
                Visible=CustomFieldVisible7;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(7,DATABASE::Expense,0,'',"Entry No.",ShortcutFieldValues[7]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(7,DATABASE::Expense,0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040025;2;Field  ;
                Name=ShortcutField8;
                SourceExpr=ShortcutFieldValues[8];
                CaptionClass=GetShortcutFieldCaption(8);
                Visible=CustomFieldVisible8;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(8,DATABASE::Expense,0,'',"Entry No.",ShortcutFieldValues[8]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(8,DATABASE::Expense,0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040026;2;Field  ;
                Name=ShortcutField9;
                SourceExpr=ShortcutFieldValues[9];
                CaptionClass=GetShortcutFieldCaption(9);
                Visible=CustomFieldVisible9;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(9,DATABASE::Expense,0,'',"Entry No.",ShortcutFieldValues[9]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(9,DATABASE::Expense,0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040027;2;Field  ;
                Name=ShortcutField10;
                SourceExpr=ShortcutFieldValues[10];
                CaptionClass=GetShortcutFieldCaption(10);
                Visible=CustomFieldVisible10;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(10,DATABASE::Expense,0,'',"Entry No.",ShortcutFieldValues[10]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(10,DATABASE::Expense,0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 8   ;2   ;Field     ;
                Name=Expense Account Type;
                SourceExpr="Expense Account Type";
                Visible=false }

    { 1160040028;2;Field  ;
                Name=Expense Account;
                SourceExpr="Expense Account";
                Visible=false;
                OnLookup=BEGIN
                           EXIT(LookupPostingAccount(Text));
                         END;
                          }

    { 1160040030;2;Field  ;
                Name=Gen. Prod. Posting Group;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=false }

    { 1160040031;2;Field  ;
                Name=VAT. Prod. Posting Group;
                SourceExpr="VAT Prod. Posting Group";
                Visible=false }

    { 6086300;2;Field     ;
                Name=Entry No.;
                SourceExpr="Entry No.";
                Visible=ShowEntryNo;
                Editable=False }

  }
  CODE
  {
    VAR
      ExpHeader@1001 : Record 6086339;
      ShortcutFieldFunctions@1003 : Codeunit 6086304;
      WebClientMgt@1000 : Codeunit 6085662;
      CustomFieldNames@1002 : ARRAY [10] OF Text[50];
      ShortcutFieldCaptions@1160040001 : ARRAY [10] OF Text[250];
      ShortcutFieldValues@1160040000 : ARRAY [10] OF Text[250];
      CustomFieldVisible1@1160040004 : Boolean INDATASET;
      CustomFieldVisible2@1160040005 : Boolean INDATASET;
      CustomFieldVisible3@1160040006 : Boolean INDATASET;
      CustomFieldVisible4@1160040007 : Boolean INDATASET;
      CustomFieldVisible5@1160040008 : Boolean INDATASET;
      CustomFieldVisible6@1160040009 : Boolean INDATASET;
      CustomFieldVisible7@1160040010 : Boolean INDATASET;
      CustomFieldVisible8@1160040011 : Boolean INDATASET;
      CustomFieldVisible9@1160040012 : Boolean INDATASET;
      CustomFieldVisible10@1160040013 : Boolean INDATASET;
      Select2ExpToMergeErr@1160040014 : TextConst 'DEU=WÑhlen Sie zwei Ausgaben, um sie zusammenzufÅhren.;ENU=Please select two expenses to merge them.;NLD=Selecteer 2 uitgaven om samen te voegen.';
      JobNoVisible@1160040015 : Boolean INDATASET;
      StatusEditable@6086300 : Boolean INDATASET;
      ShowEntryNo@6086301 : Boolean;

    LOCAL PROCEDURE GetShortcutFieldCaption@1160040001(ShortcutFieldNo@1160040000 : Integer) : Text[250];
    BEGIN
      IF ShortcutFieldCaptions[1] = '' THEN
        ShortcutFieldFunctions.GetShortcutFieldCaptionsArray(ShortcutFieldCaptions,DATABASE::Expense);

      EXIT(ShortcutFieldCaptions[ShortcutFieldNo]);
    END;

    PROCEDURE MergeExpenses@1160040007();
    VAR
      Expense@1160040001 : Record 6086320;
      Expense2@1160040000 : Record 6086320;
    BEGIN
      CurrPage.SETSELECTIONFILTER(Expense);

      IF Expense.COUNT <> 2 THEN
        ERROR(Select2ExpToMergeErr);

      Expense.FINDSET;
      Expense2.GET(Expense."Entry No.");
      Expense.NEXT;
      Expense.MergeExpenses(Expense,Expense2);

      CurrPage.UPDATE;
    END;

    PROCEDURE MatchToBankTransaction@1160040008();
    BEGIN
      Rec.MatchToBankTrans;
    END;

    LOCAL PROCEDURE EnableFields@1160040003();
    VAR
      EMSetup@1000 : Record 6086300;
    BEGIN
      EMSetup.GET;

      CustomFieldNames[1] := EMSetup."Shortcut Field 1 Code (Exp.)";
      CustomFieldNames[2] := EMSetup."Shortcut Field 2 Code (Exp.)";
      CustomFieldNames[3] := EMSetup."Shortcut Field 3 Code (Exp.)";
      CustomFieldNames[4] := EMSetup."Shortcut Field 4 Code (Exp.)";
      CustomFieldNames[5] := EMSetup."Shortcut Field 5 Code (Exp.)";
      CustomFieldNames[6] := EMSetup."Shortcut Field 6 Code (Exp.)";
      CustomFieldNames[7] := EMSetup."Shortcut Field 7 Code (Exp.)";
      CustomFieldNames[8] := EMSetup."Shortcut Field 8 Code (Exp.)";
      CustomFieldNames[9] := EMSetup."Shortcut Field 9 Code (Exp.)";
      CustomFieldNames[10] := EMSetup."Shortcut Field 10 Code (Exp.)";

      CustomFieldVisible1 := CustomFieldNames[1] <> '';
      CustomFieldVisible2 := CustomFieldNames[2] <> '';
      CustomFieldVisible3 := CustomFieldNames[3] <> '';
      CustomFieldVisible4 := CustomFieldNames[4] <> '';
      CustomFieldVisible5 := CustomFieldNames[5] <> '';
      CustomFieldVisible6 := CustomFieldNames[6] <> '';
      CustomFieldVisible7 := CustomFieldNames[7] <> '';
      CustomFieldVisible8 := CustomFieldNames[8] <> '';
      CustomFieldVisible9 := CustomFieldNames[9] <> '';
      CustomFieldVisible10 := CustomFieldNames[10] <> '';

      JobNoVisible := ShortcutFieldFunctions.JobNoVisible(DATABASE::Expense);
    END;

    PROCEDURE UpdateImage@1();
    VAR
      RecRef@1000 : RecordRef;
    BEGIN
      IF ISEMPTY THEN
        EXIT;

      RecRef.GETTABLE(Rec);
    END;

    PROCEDURE GetRecordID@3() : Text;
    VAR
      RecRef@1000 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);

      EXIT(FORMAT(RecRef.RECORDID));
    END;

    PROCEDURE HasComments@1160040011() : Boolean;
    BEGIN
      EXIT(HasExpenseComment OR HasApprovalComment);
    END;

    LOCAL PROCEDURE GetExpHeader@6();
    VAR
      Expense@1000 : Record 6086320;
    BEGIN
      Expense.COPY(Rec);
      Expense.FILTERGROUP(4);

      IF Expense.GETRANGEMIN("Settlement No.") = '' THEN
        EXIT;

      ExpHeader.GET(ExpHeader."Document Type"::Settlement,Expense.GETRANGEMIN("Settlement No."));
      StatusEditable := (ExpHeader.Status = ExpHeader.Status::Open) OR (ExpHeader.Status = ExpHeader.Status::"Pending Expense User");
    END;

    BEGIN
    END.
  }
}

