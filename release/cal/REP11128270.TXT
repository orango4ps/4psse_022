OBJECT Report 11128270 Generate Prognosis CC
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW16.00.01,4PS6.00,4PSSE,SEEV.CC.I005;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Generate Prognosis (Cost Component);
               NOR=Opprett Prognose (Kostkomponent);
               SVE=Skapa prognos (kostnadskomponent)];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   StartProcess := FALSE;
                 END;

    OnPreReport=BEGIN
                  StartProcess := TRUE;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=No;
      OnOpenPage=BEGIN
                   PrognosisDate := SetPrognosisDate;
                   IF PrognosisDate = 0D THEN
                     PrognosisDate := WORKDATE;

                   includeFinishedJobs := FALSE; //IME403
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1100528801;1;Field  ;
                  CaptionML=[ENU=Prognosis Date;
                             NOR=Prognosedato;
                             SVE=Prognosdatum];
                  SourceExpr=PrognosisDate }

      { 1100285100;1;Field  ;
                  CaptionML=[ENU=Include closed jobs;
                             NOR=Ta med avsluttede prosjekter;
                             SVE=Ta med avslutade projekt];
                  SourceExpr=includeFinishedJobs }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Next Steps after create Prognosis;
                             NOR=Neste steg etter † Opprette Prognose;
                             SVE=N„sta steg efter att skapa prognos] }

      { 1100528800;2;Field  ;
                  CaptionML=[ENU=Copy Previous Cost Prognosis;
                             NOR=Kopier forrige Kostprognose;
                             SVE=Kopiera f”reg†ende kostnadsprognos];
                  SourceExpr=CopyPrevCostPrognosis;
                  OnValidate=BEGIN
                               IF CopyPrevCostPrognosis THEN BEGIN
                                 CopyPrevPrognosisEndResult := FALSE;
                                 FillProgWithAvailableCost := FALSE;
                               END;
                             END;
                              }

      { 1100528802;2;Field  ;
                  CaptionML=[ENU=Copy Previous Prognosis &End Result;
                             NOR=Kopier forrige prognose for &Sluttresultat;
                             SVE=Kopiera f”reg†ende prognos f”r &slutresultat];
                  SourceExpr=CopyPrevPrognosisEndResult;
                  OnValidate=BEGIN
                               IF CopyPrevPrognosisEndResult THEN BEGIN
                                 CopyPrevCostPrognosis := FALSE;
                                 FillProgWithAvailableCost := FALSE;
                               END;
                             END;
                              }

      { 1100528806;2;Field  ;
                  CaptionML=[ENU=Fill Prognosis with &Available Cost;
                             NOR=Fyll ut Prognose med &Tilgjengelige Kostnader;
                             SVE=Fyll i prognos med &tillg„ngliga kostnader];
                  SourceExpr=FillProgWithAvailableCost;
                  OnValidate=BEGIN
                               IF FillProgWithAvailableCost THEN BEGIN
                                 CopyPrevCostPrognosis := FALSE;
                                 CopyPrevPrognosisEndResult := FALSE;
                               END;
                             END;
                              }

      { 1000000000;2;Field  ;
                  CaptionML=[ENU=Generate cost plus entries;
                             NOR=Opprette selvkosttransaksjoner;
                             SVE=Skapa sj„lvkostnadsrader];
                  SourceExpr=GenerateCostPlusEntries }

      { 1000000003;2;Field  ;
                  CaptionML=[ENU="Copy Previous Revenue prognosis ";
                             NOR=Kopier forrige Inntektsprognose;
                             SVE=Kopiera f”reg†ende int„ktsprognos];
                  SourceExpr=CopyPrevRevenuePrognosis2;
                  OnValidate=BEGIN
                               //>>IME065
                               IF FillPrognosisExpectedRevenue THEN
                                 FillPrognosisExpectedRevenue := FALSE;
                               //<<IME065
                             END;
                              }

      { 1000000005;2;Field  ;
                  CaptionML=[ENU=Copy Previous Prognosis End Result Revenue;
                             NOR=Kopier forrige Prognose for Inntekt Í Sluttresultat;
                             SVE=Kopiera f”reg†ende prognos resulterande int„kt];
                  SourceExpr=CopyPrevPrognosisEndResRevenue;
                  Visible=FALSE }

      { 1000000007;2;Field  ;
                  CaptionML=[ENU="Fill prognosis with expected revenue ";
                             NOR=Fyll ut Prognose med forvented inntekt;
                             SVE=Fyll prognos med f”rv„ntad int„kt];
                  SourceExpr=FillPrognosisExpectedRevenue;
                  OnValidate=BEGIN
                               //>>IME065
                               IF CopyPrevRevenuePrognosis2 THEN
                                 CopyPrevRevenuePrognosis2 := FALSE;
                               //<<IME065
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      PrognosisDate@1100528800 : Date;
      SetPrognosisDate@1100528813 : Date;
      CopyPrevCostPrognosis@1100528801 : Boolean;
      CopyPrevPrognosisEndResult@1100528802 : Boolean;
      CopyPrevRevenuePrognosis@1100528803 : Boolean;
      CopyPrevPrognosisTotalRev@1100528804 : Boolean;
      CopyCommentsPrevPrognosis@1100528805 : Boolean;
      FillProgWithAvailableCost@1100528806 : Boolean;
      FillProgWithExtrapolatedCosts@1100528807 : Boolean;
      FillProgFromProjPlanningAct@1100528808 : Boolean;
      FillProgFromRequestedActCap@1100528809 : Boolean;
      FillProgFromAssignedActCap@1100528810 : Boolean;
      FillProgRevenues@1100528811 : Boolean;
      CalcSurcharges@1100528812 : Boolean;
      StartProcess@1100528814 : Boolean;
      "-EVRY-"@1000000000 : Integer;
      GenerateCostPlusEntries@1000000001 : Boolean;
      CopyPrevRevenuePrognosis2@1000000002 : Boolean;
      CopyPrevPrognosisEndResRevenue@1000000003 : Boolean;
      FillPrognosisExpectedRevenue@1000000004 : Boolean;
      includeFinishedJobs@1100285100 : Boolean;

    PROCEDURE SetSelections@1100528803(VAR iPrognosisDate@1100528805 : Date);
    BEGIN
      SetPrognosisDate := iPrognosisDate;
    END;

    PROCEDURE GetSelections@1100528800(VAR oStartProcess@1100528813 : Boolean;VAR oPrognosisDate@1100528805 : Date;VAR oCopyPrevCostPrognosis@1100528804 : Boolean;VAR oCopyPrevPrognosisEndResult@1100528803 : Boolean;VAR oFillProgWithAvailableCost@1100528812 : Boolean;VAR _generateCostPlusEntries@1000000000 : Boolean;VAR _copyPrevRevenuePrognosis2@1000000001 : Boolean;VAR _copyPrevPrognosisEndResRev@1000000002 : Boolean;VAR _fillPrognosisExpectedRev@1000000003 : Boolean;VAR oincludeFinishedJobs@1100285100 : Boolean);
    BEGIN
      oStartProcess := StartProcess;
      oPrognosisDate := PrognosisDate;
      oCopyPrevCostPrognosis := CopyPrevCostPrognosis;
      oCopyPrevPrognosisEndResult := CopyPrevPrognosisEndResult;
      //oCopyPrevRevenuePrognosis := CopyPrevRevenuePrognosis;
      //oCopyPrevPrognosisTotalRev := CopyPrevPrognosisTotalRev;
      //oCopyCommentsPrevPrognosis := CopyCommentsPrevPrognosis;
      oFillProgWithAvailableCost := FillProgWithAvailableCost;
      //oFillProgWithExtrapolatedCosts := FillProgWithExtrapolatedCosts;
      //oFillProgFromProjPlanningAct := FillProgFromProjPlanningAct;
      //oFillProgFromRequestedActCap := FillProgFromRequestedActCap;
      //oFillProgFromAssignedActCap := FillProgFromAssignedActCap;
      //oFillProgRevenues := FillProgRevenues;
      //oCalcSurcharges := CalcSurcharges;
      //>> LAHE 130528
      _generateCostPlusEntries := GenerateCostPlusEntries;
      _copyPrevRevenuePrognosis2 := CopyPrevRevenuePrognosis2;
      _copyPrevPrognosisEndResRev := CopyPrevPrognosisEndResRevenue;
      _fillPrognosisExpectedRev := FillPrognosisExpectedRevenue;
      //<< LAHE 130528

      //IME403
      oincludeFinishedJobs := includeFinishedJobs;
    END;

    BEGIN
    {
      -SE EVRY-
      LAHE 121213 Copy of r11012668

      4PS-001, set CopyPrevPrognosisEndResRevenue to Visible:No in req.page
      IME065, able to either CopyPrevPrognosisEndResRevenue or FillPrognosisExpectedRevenue, not both!
      160120 ITERO.DL IME403 don't include closed projects in prognosis
      190607 ORANGO.DL IME24216 SaveValues yes->no
    }
    END.
  }
  RDLDATA
  {
  }
}

