OBJECT Table 1878 VAT Assisted Setup Templates
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=VAT Assisted Setup Templates;
               NOR=Maler for mva-assistert oppsett];
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 3   ;   ;Default VAT Bus. Posting Grp;Code20;TableRelation="VAT Assisted Setup Bus. Grp.".Code WHERE (Selected=CONST(Yes),
                                                                                                            Default=CONST(No));
                                                   CaptionML=[ENU=Default VAT Bus. Posting Grp;
                                                              NOR=Standard mva-bokf.grp. - firma] }
    { 4   ;   ;Default VAT Prod. Posting Grp;Code20;
                                                   TableRelation="VAT Setup Posting Groups"."VAT Prod. Posting Group" WHERE (Selected=CONST(Yes),
                                                                                                                             Default=CONST(No));
                                                   CaptionML=[ENU=Default VAT Prod. Posting Grp;
                                                              NOR=Standard mva-bokf.grp. - produkt] }
    { 5   ;   ;Table ID            ;Integer       ;CaptionML=[ENU=Table ID;
                                                              NOR=Tabell-ID;
                                                              SVE=Tabell-ID] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE PopulateRecFromTemplates@1();
    VAR
      ConfigTemplateHeader@1000 : Record 8618;
      Customer@1003 : Record 18;
      Item@1004 : Record 27;
      ConfigTemplateLine@1001 : Record 8619;
      VATAssistedSetupBusGrp@1002 : Record 1879;
      VATSetupPostingGroups@1005 : Record 1877;
    BEGIN
      DELETEALL;
      IF ConfigTemplateHeader.FINDSET THEN
        REPEAT
          Code := ConfigTemplateHeader.Code;
          Description := ConfigTemplateHeader.Description;
          "Table ID" := ConfigTemplateHeader."Table ID";

          IF
             (ConfigTemplateHeader."Table ID" = DATABASE::Customer) OR
             (ConfigTemplateHeader."Table ID" = DATABASE::Vendor)
          THEN
            IF ConfigTemplateLine.GetLine(ConfigTemplateLine,ConfigTemplateHeader.Code,Customer.FIELDNO("VAT Bus. Posting Group")) THEN
              IF
                 VATAssistedSetupBusGrp.GET(
                   COPYSTR(ConfigTemplateLine."Default Value",1,MAXSTRLEN("Default VAT Bus. Posting Grp")),FALSE)
              THEN
                "Default VAT Bus. Posting Grp" :=
                  COPYSTR(ConfigTemplateLine."Default Value",1,MAXSTRLEN("Default VAT Bus. Posting Grp"));

          IF ConfigTemplateHeader."Table ID" = DATABASE::Item THEN
            IF ConfigTemplateLine.GetLine(ConfigTemplateLine,ConfigTemplateHeader.Code,Item.FIELDNO("VAT Prod. Posting Group")) THEN
              IF
                 VATSetupPostingGroups.GET(
                   COPYSTR(ConfigTemplateLine."Default Value",1,MAXSTRLEN("Default VAT Prod. Posting Grp")),FALSE)
              THEN
                "Default VAT Prod. Posting Grp" :=
                  COPYSTR(ConfigTemplateLine."Default Value",1,MAXSTRLEN("Default VAT Prod. Posting Grp"));

          INSERT;
        UNTIL ConfigTemplateHeader.NEXT = 0;
    END;

    [External]
    PROCEDURE ValidateCustomerTemplate@2(VAR VATValidationError@1003 : Text) : Boolean;
    BEGIN
      EXIT(ValidateTemplates(DATABASE::Customer,VATValidationError));
    END;

    [External]
    PROCEDURE ValidateVendorTemplate@5(VAR VATValidationError@1001 : Text) : Boolean;
    BEGIN
      EXIT(ValidateTemplates(DATABASE::Vendor,VATValidationError));
    END;

    [External]
    PROCEDURE ValidateItemTemplate@7(VAR VATValidationError@1001 : Text) : Boolean;
    BEGIN
      EXIT(ValidateTemplates(DATABASE::Item,VATValidationError));
    END;

    LOCAL PROCEDURE ValidateTemplates@4(TableID@1000 : Integer;VAR VATValidationError@1002 : Text) : Boolean;
    VAR
      VATAssistedSetupBusGrp@1001 : Record 1879;
      VATSetupPostingGroups@1003 : Record 1877;
      VATAssistedSetupTemplates@1004 : Record 1878;
    BEGIN
      VATAssistedSetupTemplates.SETRANGE("Table ID",TableID);
      VATAssistedSetupBusGrp.SETRANGE(Selected,TRUE);
      VATAssistedSetupBusGrp.SETRANGE(Default,FALSE);
      VATSetupPostingGroups.SETRANGE(Selected,TRUE);
      VATSetupPostingGroups.SETRANGE(Default,FALSE);

      IF VATAssistedSetupTemplates.FINDSET THEN
        REPEAT
          WITH VATAssistedSetupTemplates DO BEGIN
            IF ("Default VAT Bus. Posting Grp" <> '') AND
               (("Table ID" = DATABASE::Customer) OR ("Table ID" = DATABASE::Vendor))
            THEN BEGIN
              VATAssistedSetupBusGrp.SETRANGE(Code,"Default VAT Bus. Posting Grp");
              IF NOT VATAssistedSetupBusGrp.FINDFIRST THEN BEGIN
                VATValidationError := "Default VAT Bus. Posting Grp";
                EXIT(FALSE);
              END;
            END;

            IF ("Default VAT Prod. Posting Grp" <> '') AND
               ("Table ID" = DATABASE::Item)
            THEN BEGIN
              VATSetupPostingGroups.SETRANGE("VAT Prod. Posting Group","Default VAT Prod. Posting Grp");
              IF NOT VATSetupPostingGroups.FINDFIRST THEN BEGIN
                VATValidationError := "Default VAT Prod. Posting Grp";
                EXIT(FALSE);
              END;
            END;
          END;
        UNTIL VATAssistedSetupTemplates.NEXT = 0;
      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

