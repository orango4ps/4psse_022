OBJECT Page 11126121 Service Survey Line SF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=šbersichtzeilen;
               ENU=Survey Lines;
               NLD=Inventarisatieregels;
               NOR=Kartleggingsrader;
               SVE=Kartl„ggningslinjer];
    SourceTable=Table11071806;
    PageType=ListPart;
    OnInit=BEGIN
             DescriptionEditable := TRUE;
             CodeEditable := TRUE;
           END;

    OnAfterGetRecord=BEGIN
                       DescriptionIndent := 0;
                       IF "Object Line" THEN BEGIN
                         CALCFIELDS(Description, "Description 2", "Brand Code", "Model Code", "Type Code");
                         LineDescription := Description;
                         LineDescription2 := "Description 2";
                       END ELSE BEGIN
                         LineDescription := "Code Description";
                         LineDescription2 := '';
                       END;

                       MarginPerc := 0;
                       IF "Object Line" THEN
                         IF ServSurvLocationObject.GET("Survey No.", "Location Code", "Seq. No.") THEN
                           MarginPerc := ServSurvLocationObject.GetMarginPerc;

                       GetQuantities;

                       UpdateEditable;
                       LineDescriptionOnFormat;

                       UpdateHideValue;
                     END;

    OnNewRecord=BEGIN
                  LineDescription := '';
                  UpdateEditable;
                END;

    OnAfterGetCurrRecord=BEGIN
                           GetQuantities;
                           UpdateEditable;
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unctions;
                                 NLD=F&uncties;
                                 NOR=Fu&nksjon;
                                 SVE=F&unktion] }
      { 1902576004;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Kollektiv „ndern;
                                 ENU=Modify Collectively;
                                 NLD=Collectief bijwerken;
                                 NOR=Modifiser kollektivt;
                                 SVE=Žndra samlat];
                      Image=Approval;
                      OnAction=BEGIN
                                 UpdateSurveyLocObjects();
                               END;
                                }
      { 1901129604;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Runder Verkaufsbetrag;
                                 ENU=Round Sales Amount;
                                 NLD=Verkoopbedrag afronden;
                                 NOR=Rund av salgsbel›p;
                                 SVE=Omg†ng, f”rs„ljningsbelopp];
                      Image=AmountByPeriod;
                      OnAction=BEGIN
                                 RoundSalesAmount;
                               END;
                                }
      { 1901808004;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Stunden nach Objekttr„ger anpassen;
                                 ENU=Adjust Hours by Cost Object;
                                 NLD=Uren per kostendrager corrigeren;
                                 NOR=Juster timer etter kostnadsobjekt;
                                 SVE=Justera timmar efter kostnadsobjekt];
                      Image=ItemTrackingLedger;
                      OnAction=BEGIN
                                 AdjustHoursByCostObject;
                               END;
                                }
      { 1903254404;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Verbinden mit Servicevertrag;
                                 ENU=Attach to Service Contract;
                                 NLD=Koppel aan servicecontract;
                                 NOR=Legg ved servicekontrakt;
                                 SVE=Bifoga till servicekontrakt];
                      Image=ServiceAgreement;
                      OnAction=BEGIN
                                 AttachToContract;
                               END;
                                }
      { 1100525001;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Strukturzeilen kopieren;
                                 ENU=Copy Structure Lines;
                                 NLD=Structuurregels kopi‰ren];
                      Image=Copy;
                      OnAction=VAR
                                 ServiceSurveyStructureLineLoc@1100529600 : Record 11071806;
                                 CopyServiceSurvey@1100525000 : Report 11072153;
                               BEGIN
                                 //DP00978
                                 CurrPage.SETSELECTIONFILTER(ServiceSurveyStructureLineLoc);

                                 CopyServiceSurvey.SetDefaults("Survey No.", "Location Code", "Structure No.", Code);
                                 CopyServiceSurvey.SetCopySelectedLines(ServiceSurveyStructureLineLoc);
                                 CopyServiceSurvey.RUNMODAL;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1900868904;1 ;ActionGroup;
                      CaptionML=[DEU=Zeil&e;
                                 ENU=Lin&e;
                                 NLD=R&egel;
                                 NOR=Ra&d;
                                 SVE=R&ad] }
      { 1900022404;2 ;Action    ;
                      Name=<Action1900868904>;
                      ShortCutKey=Shift+F7;
                      CaptionML=[DEU=&Objekt;
                                 ENU=&Object;
                                 NLD=&Object;
                                 NOR=&Objekt;
                                 SVE=&Objekt];
                      Image=WorkCenterLoad;
                      OnAction=BEGIN
                                 ShowObjects;  //C028404
                               END;
                                }
      { 1100525000;2 ;Action    ;
                      ShortCutKey=Ctrl+D;
                      CaptionML=[DEU=Details;
                                 ENU=Details;
                                 NLD=Details;
                                 NOR=Detaljer;
                                 SVE=Detaljer];
                      Image=ViewDetails;
                      OnAction=BEGIN
                                 ShowDetails;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100528600;1;Group  ;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 1100528601;2;Field  ;
                SourceExpr="Survey No.";
                Visible=FALSE }

    { 1100528603;2;Field  ;
                SourceExpr="Location Code";
                Visible=FALSE }

    { 1100528605;2;Field  ;
                SourceExpr="Structure No.";
                Visible=FALSE }

    { 1100528607;2;Field  ;
                SourceExpr=Code;
                Editable=CodeEditable;
                OnAssistEdit=VAR
                               ServSurveyLocStructure@1100528601 : Record 11071805;
                               ServiceSurveyStructureLine@1100528602 : Record 11071806;
                             BEGIN
                               IF "Object Line" OR (Code = '') THEN
                                 ERROR(Text000);

                               ServiceSurveyStructureLine := Rec;
                               IF NOT ServiceSurveyStructureLine.FIND THEN
                                 EXIT;

                               IF ServSurveyLocStructure.GET("Survey No.", "Location Code", "Structure No.") THEN
                                 IF ServSurveyLocStructure."Base Structure" THEN
                                   SelectStdObjects
                                 ELSE
                                   SelectLocObjects;
                             END;
                              }

    { 1100528609;2;Field  ;
                Name=Description;
                CaptionML=[DEU=Beschreibung;
                           ENU=Description;
                           NLD=Omschrijving;
                           NOR=Beskrivelse;
                           SVE=Beskrivning];
                SourceExpr=LineDescription;
                Editable=DescriptionEditable;
                Style=Strong;
                StyleExpr=DescriptionEmphasize;
                OnValidate=BEGIN
                             LineDescriptionOnAfterValidate;
                           END;
                            }

    { 1100528622;2;Field  ;
                CaptionML=[DEU=Beschreibung 2;
                           ENU=Description 2;
                           NLD=Omschrijving 2;
                           NOR=Beskrivelse 2;
                           SVE=Beskrivning 2];
                SourceExpr=LineDescription2;
                OnValidate=BEGIN
                             LineDescriptionOnAfterValidate;
                           END;
                            }

    { 1100528611;2;Field  ;
                DrillDown=No;
                SourceExpr="Standard Object No.";
                Editable=FALSE }

    { 1100528613;2;Field  ;
                DrillDown=No;
                SourceExpr="Standard Object Description";
                Visible=FALSE }

    { 1100528624;2;Field  ;
                SourceExpr="Standard Object Description 2" }

    { 1100528626;2;Field  ;
                SourceExpr="Brand Code" }

    { 1100528628;2;Field  ;
                SourceExpr="Brand Description" }

    { 1100528630;2;Field  ;
                SourceExpr="Model Code" }

    { 1100528632;2;Field  ;
                SourceExpr="Model Description" }

    { 1100528634;2;Field  ;
                SourceExpr="Type Code" }

    { 1100528636;2;Field  ;
                SourceExpr="Type Description" }

    { 1100528638;2;Field  ;
                CaptionML=[DEU=Menge;
                           ENU=Quantity;
                           NLD=Hoeveelheid;
                           NOR=Antall;
                           SVE=Antal];
                BlankZero=Yes;
                SourceExpr=EditQuantity;
                Editable=QuantityEditable;
                OnValidate=BEGIN
                             ModifyQuantities;
                           END;
                            }

    { 1100528640;2;Field  ;
                CaptionML=[DEU=Menge pro Objekt;
                           ENU=Quantity per Object;
                           NLD=Hoeveelheid per object;
                           NOR=Kvantum per objekt;
                           SVE=Antal per objekt];
                BlankZero=Yes;
                SourceExpr=EditQuantityperObject;
                Visible=FALSE;
                Editable=QuantityperObjectEditable;
                OnValidate=BEGIN
                             ModifyQuantities;
                           END;
                            }

    { 1100528602;2;Field  ;
                SourceExpr=Subcontracting }

    { 1100528663;2;Field  ;
                SourceExpr="Include in Contract" }

    { 1100528619;2;Field  ;
                DrillDown=No;
                SourceExpr="Service Package";
                Visible=FALSE }

    { 1100528608;2;Field  ;
                SourceExpr=Hours }

    { 1100528610;2;Field  ;
                SourceExpr="Total Hours" }

    { 1100528606;2;Field  ;
                SourceExpr="Additional Activities" }

    { 1100528621;2;Field  ;
                DrillDown=No;
                SourceExpr="Object Customer";
                Visible=FALSE }

    { 1100528623;2;Field  ;
                DrillDown=No;
                SourceExpr="In use since";
                Visible=FALSE }

    { 1100528625;2;Field  ;
                DrillDown=No;
                SourceExpr="Warranty Starting Date";
                Visible=FALSE }

    { 1100528627;2;Field  ;
                DrillDown=No;
                SourceExpr="Warranty Code";
                Visible=FALSE }

    { 1100528629;2;Field  ;
                DrillDown=No;
                SourceExpr=Building;
                Visible=FALSE }

    { 1100528631;2;Field  ;
                DrillDown=No;
                SourceExpr=Floor;
                Visible=FALSE }

    { 1100528633;2;Field  ;
                DrillDown=No;
                SourceExpr=Room;
                Visible=FALSE }

    { 1100528635;2;Field  ;
                DrillDown=No;
                SourceExpr="Customer Feature";
                Visible=FALSE }

    { 1100528669;2;Field  ;
                SourceExpr="Serial No.";
                Visible=FALSE }

    { 1100528637;2;Field  ;
                DrillDown=No;
                SourceExpr="Year of Manufacture";
                Visible=FALSE }

    { 1100528639;2;Field  ;
                SourceExpr="Net Cost Price";
                HideValue=NetCostPriceHideValue }

    { 1100528615;2;Field  ;
                SourceExpr="Net Cost Price (Material)";
                Visible=FALSE }

    { 1100528617;2;Field  ;
                SourceExpr="Net Cost Price (Labor)";
                Visible=FALSE }

    { 1100528642;2;Field  ;
                SourceExpr="Net Cost Price (Subcontr.)";
                Visible=FALSE }

    { 1100528644;2;Field  ;
                SourceExpr="Net Cost Price (Plant)";
                Visible=FALSE }

    { 1100528646;2;Field  ;
                SourceExpr="Net Cost Price (Sundry)";
                Visible=FALSE }

    { 1100528641;2;Field  ;
                SourceExpr="Surcharge Amount";
                HideValue=SurchargeAmountHideValue }

    { 1100528643;2;Field  ;
                DrillDown=No;
                SourceExpr="Cost Price";
                HideValue=CostPriceHideValue }

    { 1100528645;2;Field  ;
                SourceExpr="Sales Surcharge Amount";
                HideValue=SalesSurchargeAmountHideValue }

    { 1100528647;2;Field  ;
                DrillDown=No;
                SourceExpr="Base Sales Price";
                HideValue=BaseSalesPriceHideValue }

    { 1100528649;2;Field  ;
                DrillDown=No;
                SourceExpr="Correction Factor";
                HideValue=CorrectionFactorHideValue }

    { 1100528651;2;Field  ;
                DrillDown=No;
                SourceExpr="Sales Price";
                HideValue=SalesPriceHideValue }

    { 1100528653;2;Field  ;
                DrillDown=No;
                SourceExpr="Cost Amount";
                HideValue=CostAmountHideValue }

    { 1100528655;2;Field  ;
                DrillDown=No;
                SourceExpr="Sales Amount";
                HideValue=SalesAmountHideValue }

    { 1100528620;2;Field  ;
                CaptionML=[DEU=Margen-%;
                           ENU=Margin %;
                           NLD=Marge %;
                           NOR=Marginal %;
                           SVE=TG];
                SourceExpr=MarginPerc;
                Editable=FALSE }

    { 1100528604;2;Field  ;
                SourceExpr="Object Group" }

    { 1100528657;2;Field  ;
                DrillDown=No;
                SourceExpr="Customer Object Group" }

    { 1100528659;2;Field  ;
                DrillDown=No;
                SourceExpr="Service Rate";
                HideValue=ServiceRateHideValue }

    { 1100528661;2;Field  ;
                DrillDown=No;
                SourceExpr="Service Amount";
                HideValue=ServiceAmountHideValue }

    { 1100528665;2;Field  ;
                SourceExpr="Objects Created" }

    { 1100528667;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Service Contract No." }

    { 1100528612;2;Field  ;
                SourceExpr="Tender Code System 1" }

    { 1100528614;2;Field  ;
                SourceExpr="Tender Code 1" }

    { 1100528616;2;Field  ;
                SourceExpr="Tender Code System 2" }

    { 1100528618;2;Field  ;
                SourceExpr="Tender Code 2" }

  }
  CODE
  {
    VAR
      ServSurvLocationObject@1100528603 : Record 11071813;
      LineDescription@1100528600 : Text[100];
      Text000@1100528601 : TextConst 'DEU=Eine Strukturzeile w„hlen;ENU=Select a Structure Line;NLD=Selecteer een structuurregel;NOR=Velg en strukturrad;SVE=V„lj en strukturrad';
      Text001@1100528602 : TextConst 'DEU=Eine Objektzeile w„hlen;ENU=Select a Object Line;NLD=Selecteer een objectregel;NOR=Velg en objektrad;SVE=V„lj en objektrad';
      Text004@1100528604 : TextConst 'DEU=Zuerst Datens„tze ausw„hlen;ENU=First select records;NLD=Selecteer eerst records;NOR=Marker poster f›rst;SVE=Markera f”rst poster';
      LineDescription2@1100528606 : Text[50];
      DescriptionEmphasize@19010547 : Boolean INDATASET;
      DescriptionIndent@19057867 : Integer INDATASET;
      NetCostPriceHideValue@19076013 : Boolean INDATASET;
      SurchargeAmountHideValue@19014877 : Boolean INDATASET;
      CostPriceHideValue@19013020 : Boolean INDATASET;
      SalesSurchargeAmountHideValue@19043667 : Boolean INDATASET;
      BaseSalesPriceHideValue@19012414 : Boolean INDATASET;
      CorrectionFactorHideValue@19076625 : Boolean INDATASET;
      SalesPriceHideValue@19025435 : Boolean INDATASET;
      CostAmountHideValue@19070123 : Boolean INDATASET;
      SalesAmountHideValue@19062867 : Boolean INDATASET;
      ServiceRateHideValue@19015016 : Boolean INDATASET;
      ServiceAmountHideValue@19038052 : Boolean INDATASET;
      CodeEditable@19001698 : Boolean INDATASET;
      DescriptionEditable@19061412 : Boolean INDATASET;
      QuantityEditable@1100528609 : Boolean;
      QuantityperObjectEditable@1100528610 : Boolean;
      MarginPerc@1100528605 : Decimal;
      EditQuantity@1100528607 : Integer;
      EditQuantityperObject@1100528608 : Integer;

    PROCEDURE SelectStdObjects@1100528600();
    VAR
      ServSurvLocationObject@1100528600 : Record 11071813;
      ServiceSurveyStructureLine@1100528601 : Record 11071806;
      StandardObject@1100528603 : Record 11020334;
      ServiceSurvey@1100528604 : Record 11071803;
      StandardObjectList@1100528602 : Page 11072547;
      ServiceObjectManagement@1100409000 : Codeunit 11012808;
    BEGIN
      ServiceObjectManagement.ApplyStandardObjectFilter(StandardObject);
      //StandardObject.SETRANGE("Object Standard Object", TRUE);
      IF "Standard Object No." <> '' THEN
        IF StandardObject.GET("Standard Object No.") THEN;

      ServiceSurvey.GET("Survey No.");

      StandardObjectList.LOOKUPMODE(TRUE);
      StandardObjectList.SetSelection(DATABASE::"Service Survey Structure Line", "Survey No.", "Location Code", Code, "Structure No.");
      StandardObjectList.SETTABLEVIEW(StandardObject);
      StandardObjectList.SETRECORD(StandardObject);
      IF StandardObjectList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        StandardObjectList.GETRECORD(StandardObject);

        ServSurvLocationObject."Survey No." := "Survey No.";
        ServSurvLocationObject."Location Code" := "Location Code";
        ServSurvLocationObject."Seq. No." := 0;
        ServSurvLocationObject.INSERT(TRUE);
        ServSurvLocationObject.VALIDATE("Standard Object No.", StandardObject."No.");
        ServSurvLocationObject.VALIDATE(Quantity, 1);
        ServSurvLocationObject.MODIFY(TRUE);

        ServiceSurveyStructureLine := Rec;
        ServiceSurveyStructureLine."Seq. No." := ServSurvLocationObject."Seq. No.";
        ServiceSurveyStructureLine."Object Line" := TRUE;
        ServiceSurveyStructureLine."Line No." := 0;
        ServiceSurveyStructureLine.INSERT(TRUE);
      END;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SelectLocObjects@1100528603();
    VAR
      ServSurvLocationObject@1100528600 : Record 11071813;
      TmpServSurvLocationObject@1100528603 : TEMPORARY Record 11071813;
      ServiceSurveyStructureLine@1100528602 : Record 11071806;
      ServiceSurvLocObjectList@1100528601 : Page 11126124;
    BEGIN
      ServSurvLocationObject.SETRANGE("Survey No.", "Survey No.");
      ServSurvLocationObject.SETRANGE("Location Code", "Location Code");
      IF ServSurvLocationObject.FINDSET THEN
        REPEAT
          TmpServSurvLocationObject := ServSurvLocationObject;
          TmpServSurvLocationObject.INSERT;
        UNTIL ServSurvLocationObject.NEXT = 0;

      ServiceSurveyStructureLine.SETRANGE("Survey No.", "Survey No.");
      ServiceSurveyStructureLine.SETRANGE("Location Code", "Location Code");
      ServiceSurveyStructureLine.SETRANGE("Structure No.", "Structure No.");
      IF ServiceSurveyStructureLine.FINDSET THEN
        REPEAT
          IF TmpServSurvLocationObject.GET(ServiceSurveyStructureLine."Survey No.",
               ServiceSurveyStructureLine."Location Code", ServiceSurveyStructureLine."Seq. No.")
          THEN
            TmpServSurvLocationObject.DELETE;
        UNTIL ServiceSurveyStructureLine.NEXT = 0;


      ServiceSurvLocObjectList.LOOKUPMODE(TRUE);
      ServiceSurvLocObjectList.SetSelection(TmpServSurvLocationObject);
      IF ServiceSurvLocObjectList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        ServiceSurvLocObjectList.GETRECORD(TmpServSurvLocationObject);
        ServiceSurveyStructureLine := Rec;
        ServiceSurveyStructureLine."Seq. No." := TmpServSurvLocationObject."Seq. No.";
        ServiceSurveyStructureLine."Object Line" := TRUE;
        ServiceSurveyStructureLine."Line No." := 0;
        ServiceSurveyStructureLine.INSERT(TRUE);
      END ELSE BEGIN
        IF ServiceSurvLocObjectList.IsMultiCopy THEN BEGIN
          ServiceSurvLocObjectList.GetSelection(TmpServSurvLocationObject);
          IF TmpServSurvLocationObject.FINDSET THEN
            REPEAT
              ServiceSurveyStructureLine := Rec;
              ServiceSurveyStructureLine."Seq. No." := TmpServSurvLocationObject."Seq. No.";
              ServiceSurveyStructureLine."Object Line" := TRUE;
              ServiceSurveyStructureLine."Line No." := 0;
              ServiceSurveyStructureLine.INSERT(TRUE);
            UNTIL TmpServSurvLocationObject.NEXT = 0;
        END;
      END;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE UpdateEditable@1100528601();
    BEGIN
      CodeEditable := NOT "Object Line";
      DescriptionEditable := NOT "Object Line";
      QuantityEditable := "Object Line";
      QuantityperObjectEditable := "Object Line";
    END;

    PROCEDURE ShowObjectCard@1100528604();
    VAR
      ServSurvLocationObject@1100528600 : Record 11071813;
    BEGIN
      IF NOT "Object Line" THEN
        ERROR(Text001);

      ServSurvLocationObject.SETRANGE("Survey No.", "Survey No.");
      ServSurvLocationObject.SETRANGE("Location Code", "Location Code");
      ServSurvLocationObject.SETRANGE("Seq. No.", "Seq. No.");
      PAGE.RUNMODAL(PAGE::"Service Surv. Loc. Object", ServSurvLocationObject);
    END;

    LOCAL PROCEDURE ShowObjects@1100525001();
    VAR
      SurveyStructureLine@1100525001 : Record 11071806;
      SeqFilter@1100525002 : Text[1000];
    BEGIN
      //DP00978
      IF NOT "Object Line" THEN BEGIN
        SurveyStructureLine.SETRANGE("Survey No.", "Survey No.");
        SurveyStructureLine.SETRANGE("Location Code", "Location Code");
        SurveyStructureLine.SETRANGE("Structure No.", "Structure No.");
        SurveyStructureLine.SETRANGE("Object Line", TRUE);
        IF Level = 3 THEN
          SurveyStructureLine.SETRANGE(Code, Code);
        IF Level = 2 THEN
          SurveyStructureLine.SETRANGE("Element Level 2", Code);
        IF Level = 1 THEN
          SurveyStructureLine.SETRANGE("Element Level 1", Code);
        IF SurveyStructureLine.FINDSET THEN BEGIN
          REPEAT
             IF SeqFilter <> '' THEN
               SeqFilter := SeqFilter + '|';
             SeqFilter := SeqFilter + STRSUBSTNO('%1', SurveyStructureLine."Seq. No.");
          UNTIL SurveyStructureLine.NEXT = 0;
        END;
        ServSurvLocationObject.SETRANGE("Survey No.", "Survey No.");
        ServSurvLocationObject.SETRANGE("Location Code", "Location Code");
        ServSurvLocationObject.SETFILTER("Seq. No.", SeqFilter);
        PAGE.RUNMODAL(PAGE::"Service Survey Objects", ServSurvLocationObject);
      END ELSE BEGIN
        ServSurvLocationObject.SETRANGE("Survey No.", "Survey No.");
        ServSurvLocationObject.SETRANGE("Location Code", "Location Code");
        ServSurvLocationObject.SETRANGE("Seq. No.", "Seq. No.");
        PAGE.RUNMODAL(PAGE::"Service Surv. Loc. Object", ServSurvLocationObject);
      END;
    END;

    LOCAL PROCEDURE ShowDetails@1100525000();
    VAR
      SurveyLocationObjectDetail@1100525000 : Record 11071807;
      SurveyStructureLine@1100525001 : Record 11071806;
      SeqFilter@1100525002 : Text[1000];
    BEGIN
      //DP00978
      IF NOT "Object Line" THEN BEGIN
        SurveyStructureLine.SETRANGE("Survey No.", "Survey No.");
        SurveyStructureLine.SETRANGE("Location Code", "Location Code");
        SurveyStructureLine.SETRANGE("Structure No.", "Structure No.");
        IF Level = 3 THEN
          SurveyStructureLine.SETRANGE(Code, Code);
        IF Level = 2 THEN
          SurveyStructureLine.SETRANGE("Element Level 2", Code);
        IF Level = 1 THEN
          SurveyStructureLine.SETRANGE("Element Level 1", Code);
        IF SurveyStructureLine.FINDSET THEN BEGIN
          REPEAT
             IF SeqFilter <> '' THEN
               SeqFilter := SeqFilter + '|';
             SeqFilter := SeqFilter + STRSUBSTNO('%1', SurveyStructureLine."Seq. No.");
          UNTIL SurveyStructureLine.NEXT = 0;
        END;
        SurveyLocationObjectDetail.SETRANGE("Survey No.", "Survey No.");
        SurveyLocationObjectDetail.SETRANGE("Location Code", "Location Code");
        SurveyLocationObjectDetail.SETFILTER("Seq. No.", SeqFilter);
      END ELSE BEGIN
        SurveyLocationObjectDetail.SETRANGE("Survey No.", "Survey No.");
        SurveyLocationObjectDetail.SETRANGE("Location Code", "Location Code");
        SurveyLocationObjectDetail.SETRANGE("Seq. No.", "Seq. No.");
      END;
      PAGE.RUNMODAL(PAGE::"Service Survey Line Details", SurveyLocationObjectDetail);
    END;

    PROCEDURE UpdateSurveyLocObjects@1100528602();
    VAR
      ServiceSurveyStructureLine@1100528602 : Record 11071806;
      ServSurvLocationObject@1100528600 : Record 11071813;
      UpdateSurvLocationObjects@1100528603 : Report 11012738;
    BEGIN
      CurrPage.SETSELECTIONFILTER(ServiceSurveyStructureLine);
      IF ServiceSurveyStructureLine.ISEMPTY THEN
        ERROR(Text004);

      GetObjectRecordSet(ServiceSurveyStructureLine, ServSurvLocationObject);
      UpdateSurvLocationObjects.SETTABLEVIEW(ServSurvLocationObject);
      UpdateSurvLocationObjects.RUNMODAL;
    END;

    PROCEDURE AttachToContract@1100528605();
    VAR
      ServiceSurveyStructureLine@1100525000 : Record 11071806;
    BEGIN
      CurrPage.SETSELECTIONFILTER(ServiceSurveyStructureLine);
      AttachSelObjectsToContract(ServiceSurveyStructureLine);
    END;

    PROCEDURE RoundSalesAmount@1100528606();
    VAR
      ServiceSurveyStructureLine@1100525000 : Record 11071806;
    BEGIN
      CurrPage.SETSELECTIONFILTER(ServiceSurveyStructureLine);
      RoundSalesAmountSelObjects(ServiceSurveyStructureLine);
    END;

    PROCEDURE AdjustHoursByCostObject@1100528607();
    VAR
      ServiceSurveyStructureLine@1100528601 : Record 11071806;
      ServSurvLocationObject@1100528600 : Record 11071813;
    BEGIN
      CurrPage.SETSELECTIONFILTER(ServiceSurveyStructureLine);
      IF ServiceSurveyStructureLine.ISEMPTY THEN
        ERROR(Text004);

      GetObjectRecordSet(ServiceSurveyStructureLine, ServSurvLocationObject);
      ServSurvLocationObject.AdjustHoursByCostObject(ServSurvLocationObject);
    END;

    LOCAL PROCEDURE LineDescriptionOnAfterValidate@19032569();
    BEGIN
      IF "Object Line" THEN BEGIN
        Description := LineDescription;
        "Description 2" := LineDescription2;
        MODIFY;
      END ELSE
        "Code Description" := LineDescription;
    END;

    LOCAL PROCEDURE LineDescriptionOnFormat@19076134();
    BEGIN
      IF "Object Line" THEN BEGIN
        DescriptionIndent := Level + 1;
        DescriptionEmphasize := FALSE;
      END ELSE BEGIN
        DescriptionIndent := Level;
        DescriptionEmphasize := TRUE;
      END;
    END;

    LOCAL PROCEDURE UpdateHideValue@19043991();
    BEGIN
      NetCostPriceHideValue := (NOT "Object Line");
      SurchargeAmountHideValue := (NOT "Object Line");
      CostPriceHideValue := (NOT "Object Line");
      SalesSurchargeAmountHideValue := (NOT "Object Line");
      BaseSalesPriceHideValue := (NOT "Object Line");
      CorrectionFactorHideValue := (NOT "Object Line");
      SalesPriceHideValue := (NOT "Object Line");
      CostAmountHideValue := (NOT "Object Line");
      SalesAmountHideValue := (NOT "Object Line");
      ServiceRateHideValue := (NOT "Object Line");
      ServiceAmountHideValue := (NOT "Object Line");
    END;

    LOCAL PROCEDURE GetQuantities@1100528610();
    VAR
      ServSurvLocationObject@1100528600 : Record 11071813;
    BEGIN
      EditQuantity := 0;
      EditQuantityperObject := 0;
      IF ServSurvLocationObject.GET("Survey No.", "Location Code", "Seq. No.") THEN BEGIN
        EditQuantity := ServSurvLocationObject.Quantity;
        EditQuantityperObject := ServSurvLocationObject."Quantity per Object"
      END;
    END;

    LOCAL PROCEDURE ModifyQuantities@1100528608();
    VAR
      ServSurvLocationObject@1100528600 : Record 11071813;
    BEGIN
      IF ServSurvLocationObject.GET("Survey No.", "Location Code", "Seq. No.") THEN BEGIN
        IF (ServSurvLocationObject.Quantity <> EditQuantity) OR
           (ServSurvLocationObject."Quantity per Object" <> EditQuantityperObject)
        THEN BEGIN
          ServSurvLocationObject.VALIDATE(Quantity, EditQuantity);
          ServSurvLocationObject.VALIDATE("Quantity per Object", EditQuantityperObject);
          ServSurvLocationObject.MODIFY(TRUE);
        END;
      END;
    END;

    BEGIN
    END.
  }
}

