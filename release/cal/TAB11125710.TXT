OBJECT Table 11125710 Assigned Activity Capacity
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckIfAssActCapCanBeChanged;
               TESTFIELD("Resource Code");
               IF "Resource Type" = "Resource Type"::Plant THEN
                 TESTFIELD("Plant No.");
               CheckProjectStatus();

               AssignActCapMgt.UpdateAssignActCapByDay(Rec);
             END;

    OnModify=BEGIN
               CheckIfAssActCapCanBeChanged;
               TESTFIELD("Resource Code");
               IF "Resource Type" = "Resource Type"::Plant THEN
                 TESTFIELD("Plant No.");
               CheckProjectStatus();

               AssignActCapMgt.UpdateAssignActCapByDay(Rec);
             END;

    OnDelete=BEGIN
               CheckIfAssActCapCanBeChanged;
               DeleteAssignActCapByDay();
             END;

    OnRename=BEGIN
               CheckIfAssActCapCanBeChanged;
             END;

    CaptionML=[ENU=Assigned Activity Capacity;
               NOR=Tilordnet aktivitetskapasitet;
               SVE=Tilldelad aktivitetskapacitet];
    LookupPageID=Page11125727;
    DrillDownPageID=Page11125727;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr] }
    { 20  ;   ;Activity Code       ;Code10        ;TableRelation="Project Planning Base Activity";
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Activity Code;
                                                              NOR=Aktivitetskode;
                                                              SVE=Aktivitetskod] }
    { 30  ;   ;Line No. Request    ;Integer       ;TableRelation="Requested Activity Capacity"."Line No." WHERE (Project No.=FIELD(Project No.),
                                                                                                                 Activity Code=FIELD(Activity Code));
                                                   OnValidate=BEGIN
                                                                FillDefaults();
                                                              END;

                                                   CaptionML=[ENU=Line No. Request;
                                                              NOR=Radnr, foresp›rsel;
                                                              SVE=Radnr, f”rfr†gan] }
    { 40  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 50  ;   ;Resource Type       ;Option        ;OnValidate=BEGIN
                                                                IF ReqActCapRec.GET("Project No.", "Activity Code", "Line No. Request") THEN BEGIN
                                                                  IF ReqActCapRec."Resource Type" = ReqActCapRec."Resource Type"::Plant THEN
                                                                    TESTFIELD("Resource Type", "Resource Type"::Plant);
                                                                END;

                                                                IF "Resource Type" <> xRec."Resource Type" THEN BEGIN
                                                                  "Resource Code" := '';
                                                                  "Plant No." := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Resource Type;
                                                              NOR=Ressurstype;
                                                              SVE=Resurstyp];
                                                   OptionCaptionML=[ENU=Team,Employee,Plant,Subcontractor;
                                                                    NOR=Team,Ansatt,Maskin,Underentrepen›r;
                                                                    SVE=Team,Anst„lld,Maskin,Underentrepren”r];
                                                   OptionString=Team,Employee,Plant,Subcontractor;
                                                   NotBlank=Yes }
    { 60  ;   ;Resource Code       ;Code20        ;TableRelation=IF (Resource Type=CONST(Team)) "Project Planning Team"
                                                                 ELSE IF (Resource Type=CONST(Employee)) Employee
                                                                 ELSE IF (Resource Type=CONST(Plant)) "Plant Type"
                                                                 ELSE IF (Resource Type=CONST(Subcontractor)) Vendor WHERE (Subcontractor Type=FILTER(Subcontractor|Self Employed|Employment Agency));
                                                   OnValidate=VAR
                                                                EmplRec@1100525001 : Record 5200;
                                                                PlantTypeRec@1100525000 : Record 11012551;
                                                              BEGIN
                                                                IF "Resource Code" <> xRec."Resource Code" THEN
                                                                  "Plant No." := '';

                                                                IF "Resource Code" = '' THEN
                                                                  EXIT;

                                                                CASE "Resource Type" OF
                                                                  "Resource Type"::Employee:
                                                                    BEGIN
                                                                      EmplRec.GET("Resource Code");
                                                                      //IF NOT (EmplRec.Schedule IN [EmplRec.Schedule::Project, EmplRec.Schedule::Both]) THEN
                                                                      //  EmplRec.FIELDERROR(Schedule);
                                                                    END;
                                                                  "Resource Type"::Plant:
                                                                    BEGIN
                                                                      PlantTypeRec.GET("Resource Code");
                                                                      PlantTypeRec.TESTFIELD(Bulk, FALSE);
                                                                    END;
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupResourceCode(TRUE);
                                                            END;

                                                   CaptionML=[ENU=Resource Code;
                                                              NOR=Ressurskode;
                                                              SVE=Resurskod];
                                                   NotBlank=Yes }
    { 70  ;   ;Plant No.           ;Code10        ;TableRelation=IF (Resource Type=CONST(Plant)) "Plant Number".No. WHERE (Plant Type=FIELD(Resource Code));
                                                   OnValidate=BEGIN
                                                                IF "Plant No." <> '' THEN BEGIN
                                                                  TESTFIELD("Resource Type", "Resource Type"::Plant);
                                                                  TESTFIELD("Resource Code");
                                                                END ELSE BEGIN
                                                                  IF "Resource Type" = "Resource Type"::Plant THEN
                                                                    TESTFIELD("Plant No.");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Plant No.;
                                                              NOR=Maskinnr.;
                                                              SVE=Maskinnr] }
    { 80  ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                IF ("Ending Date" <> 0D) AND ("Ending Date" < "Starting Date") THEN
                                                                  "Ending Date" := 0D;
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum] }
    { 90  ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                IF ("Ending Date" <> 0D) AND ("Ending Date" < "Starting Date") THEN
                                                                  FIELDERROR("Ending Date", Text001);
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              NOR=Sluttdato;
                                                              SVE=Slutdatum] }
    { 100 ;   ;Hours by Day        ;Decimal       ;CaptionML=[ENU=Hours/day (different);
                                                              NOR=Timer/Dag (Forskjellig);
                                                              SVE=Timmar/dag (olika)];
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   Description=Fill this field only if different from norm hours. Only if less than norm hours of a day this will replace the number of hours for a day(date) }
    { 200 ;   ;Assigned Labor Hours;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Assigned Activ. Cap. by Day".Hours WHERE (Project No.=FIELD(Project No.),
                                                                                                              Activity Code=FIELD(Activity Code),
                                                                                                              Line No. Request=FIELD(Line No. Request),
                                                                                                              Line No. Assign=FIELD(Line No.),
                                                                                                              Resource Type=CONST(Employee)));
                                                   CaptionML=[ENU=Assigned Labor Hours;
                                                              NOR=Tilordnede arbeidstimer;
                                                              SVE=Tilldelade arbetstimmar];
                                                   Editable=No }
    { 210 ;   ;Assigned Plant Hours;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Assigned Activ. Cap. by Day".Hours WHERE (Project No.=FIELD(Project No.),
                                                                                                              Activity Code=FIELD(Activity Code),
                                                                                                              Line No. Request=FIELD(Line No. Request),
                                                                                                              Line No. Assign=FIELD(Line No.),
                                                                                                              Resource Type=CONST(Plant)));
                                                   CaptionML=[ENU=Assigned Plant Hours;
                                                              NOR=Tilordnede maskintimer;
                                                              SVE=Tilldelade Maskinstimmar];
                                                   Editable=No }
    { 220 ;   ;Changed             ;Boolean       ;CaptionML=[ENU=Changed;
                                                              NOR=Endret;
                                                              SVE=Žndrad];
                                                   Description=Added for GPP }
  }
  KEYS
  {
    {    ;Project No.,Activity Code,Line No. Request,Line No.;
                                                   Clustered=Yes }
    {    ;Resource Type,Resource Code              }
    {    ;Changed                                  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ReqActCapRec@1100525005 : Record 11125708;
      AssignActCapMgt@1100525001 : Codeunit 11125708;
      ProjActCapComMgt@1100525002 : Codeunit 11125706;
      Text001@1100525003 : TextConst 'ENU=may not before %1;NOR=kan ikke v‘re f›r %1;SVE=f†r inte vara f”re %1';

    PROCEDURE CheckProjectStatus@1100525005();
    VAR
      ProjRec@1100525000 : Record 11072003;
    BEGIN
      ProjRec.GET("Project No.");
      IF NOT (ProjRec."Project Status" IN [ProjRec."Project Status"::Preparation,ProjRec."Project Status"::Production]) THEN
        ProjRec.FIELDERROR("Project Status");
    END;

    PROCEDURE FillDefaults@1100525001();
    BEGIN
      IF ReqActCapRec.GET("Project No.", "Activity Code", "Line No. Request") THEN BEGIN
        CASE ReqActCapRec."Resource Type" OF
          ReqActCapRec."Resource Type"::TeamType:
            "Resource Type" := "Resource Type"::Team;
          ReqActCapRec."Resource Type"::Discipline:
            "Resource Type" := "Resource Type"::Employee;
          ReqActCapRec."Resource Type"::Plant:
            BEGIN
              "Resource Type" := "Resource Type"::Plant;
              "Resource Code" := ReqActCapRec."Resource Code";
            END;
        END;
        "Starting Date" := ReqActCapRec."Starting Date";
        "Ending Date" := ReqActCapRec."Ending Date";
      END;
    END;

    PROCEDURE GetResourceDescription@1100525000() : Text[100];
    BEGIN
      EXIT(ProjActCapComMgt.GetResourceDescription(
        DATABASE::"Assigned Activity Capacity", "Resource Type", "Resource Code", "Plant No."));
    END;

    PROCEDURE LookupResourceCode@1100525002(EditableMode@1100525000 : Boolean);
    VAR
      TeamRec@1100525003 : Record 11012437;
      EmplRec@1100525001 : Record 5200;
      PlantTypeRec@1100525002 : Record 11012551;
      VendorRec@1100528400 : Record 23;
    BEGIN
      CASE "Resource Type" OF
        "Resource Type"::Team:
          BEGIN
            TeamRec.SETCURRENTKEY("Team Type Code", Code);
            TeamRec.Code := "Resource Code";
            IF "Resource Code" <> '' THEN BEGIN
              IF NOT TeamRec.GET("Resource Code") THEN
                TeamRec.Code := '';
            END;
            IF TeamRec.Code = '' THEN BEGIN
              IF ReqActCapRec.GET("Project No.", "Activity Code", "Line No. Request") THEN BEGIN
                IF ReqActCapRec."Resource Type" = ReqActCapRec."Resource Type"::TeamType THEN
                  TeamRec."Team Type Code" := ReqActCapRec."Resource Code";
              END;
            END;
            IF NOT EditableMode THEN
              PAGE.RUNMODAL(0, TeamRec)
            ELSE BEGIN
              IF PAGE.RUNMODAL(0, TeamRec) = ACTION::LookupOK THEN
                VALIDATE("Resource Code", TeamRec.Code);
            END;
          END;
        "Resource Type"::Employee:
          BEGIN
            EmplRec.SETCURRENTKEY(Discipline, "No.");
            EmplRec.FILTERGROUP(6);
            //EmplRec.SETFILTER(Schedule, '%1|%2', EmplRec.Schedule::Project, EmplRec.Schedule::Both);
            EmplRec.FILTERGROUP(0);
            EmplRec."No." := "Resource Code";
            IF "Resource Code" <> '' THEN BEGIN
              IF NOT EmplRec.GET("Resource Code") THEN
                EmplRec."No." := '';
            END;
            IF EmplRec."No." = '' THEN BEGIN
              IF ReqActCapRec.GET("Project No.", "Activity Code", "Line No. Request") THEN BEGIN
                IF ReqActCapRec."Resource Type" = ReqActCapRec."Resource Type"::Discipline THEN
                  EmplRec.Discipline := ReqActCapRec."Resource Code";
              END;
            END;
            IF NOT EditableMode THEN
              PAGE.RUNMODAL(0, EmplRec)
            ELSE BEGIN
              IF PAGE.RUNMODAL(0, EmplRec) = ACTION::LookupOK THEN
                VALIDATE("Resource Code", EmplRec."No.");
            END;
          END;
        "Resource Type"::Plant:
          BEGIN
            PlantTypeRec.FILTERGROUP(6);
            PlantTypeRec.SETRANGE(Bulk, FALSE);
            PlantTypeRec.FILTERGROUP(0);
            PlantTypeRec.Code := "Resource Code";
            IF NOT EditableMode THEN
              PAGE.RUNMODAL(0, PlantTypeRec)
            ELSE BEGIN
              IF PAGE.RUNMODAL(0, PlantTypeRec) = ACTION::LookupOK THEN
                VALIDATE("Resource Code", PlantTypeRec.Code);
            END;
          END;
        "Resource Type"::Subcontractor:
          BEGIN
            VendorRec.FILTERGROUP(6);
            VendorRec.SETFILTER("Subcontractor Type",'>%1',VendorRec."Subcontractor Type"::" ");
            VendorRec.FILTERGROUP(0);
            VendorRec."No." := "Resource Code";
            IF "Resource Code" <> '' THEN BEGIN
              IF NOT VendorRec.GET("Resource Code") THEN
                VendorRec."No." := '';
            END;
            IF NOT EditableMode THEN
              PAGE.RUNMODAL(0, VendorRec)
            ELSE BEGIN
              IF PAGE.RUNMODAL(0, VendorRec) = ACTION::LookupOK THEN
                VALIDATE("Resource Code", VendorRec."No.");
            END;
          END;
      END;
    END;

    PROCEDURE DeleteAssignActCapByDay@1100525004();
    VAR
      AssignActCapByDayRec@1100525001 : Record 11125711;
    BEGIN
      AssignActCapByDayRec.SETRANGE("Project No.", "Project No.");
      AssignActCapByDayRec.SETRANGE("Activity Code", "Activity Code");
      AssignActCapByDayRec.SETRANGE("Line No. Request", "Line No. Request");
      AssignActCapByDayRec.SETRANGE("Line No. Assign", "Line No.");
      AssignActCapByDayRec.DELETEALL;
    END;

    LOCAL PROCEDURE CheckIfAssActCapCanBeChanged@1100528400();
    VAR
      JobsSetup@1100528400 : Record 315;
    BEGIN
      IF JobsSetup.GET THEN
        IF "Line No. Request" <> 0 THEN
          JobsSetup.TESTFIELD("Disable Capacity Planning", FALSE)
        ELSE
          JobsSetup.TESTFIELD("Disable Capacity Planning", TRUE);
    END;

    PROCEDURE CalcTotDiffHrsTeamMembersByDay@1100528401() HoursByDay : Decimal;
    BEGIN
      IF "Resource Type" = "Resource Type"::Team THEN
        HoursByDay :=
          ProjActCapComMgt.CalcTeamLaborHoursByDay("Resource Code", "Hours by Day");
    END;

    PROCEDURE CalcDiffHrsTeamByDay@1100528402(DiffHrsTeamMembersByDay@1100528400 : Decimal) HoursByDay : Decimal;
    BEGIN
      IF ("Resource Type" = "Resource Type"::Team) AND
         (ProjActCapComMgt.CalcTeamFTE("Resource Code") > 0)
      THEN
        HoursByDay := DiffHrsTeamMembersByDay / ProjActCapComMgt.CalcTeamFTE("Resource Code");
    END;

    BEGIN
    END.
  }
}

