OBJECT Table 5475 Sales Invoice Entity Aggregate
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
               UpdateReferencedRecordIds;
             END;

    OnModify=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
               UpdateReferencedRecordIds;
             END;

    OnRename=BEGIN
               IF NOT Posted THEN
                 ERROR(CannotChangeNumberOnNonPostedErr);

               IF Posted AND (NOT IsRenameAllowed) THEN
                 ERROR(CannotModifyPostedInvoiceErr);

               "Last Modified Date Time" := CURRENTDATETIME;
               UpdateReferencedRecordIds;
             END;

    CaptionML=[ENU=Sales Invoice Entity Aggregate;
               NOR=Enhet for salgsfaktura - aggregering];
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;InitValue=Invoice;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Document Type;
                                                              NOR=Dokumenttype;
                                                              SVE=Dokumenttyp];
                                                   OptionCaptionML=[ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                                    NOR=Tilbud,Ordre,Faktura,Kreditnota,Rammeordre,Ordreretur;
                                                                    SVE=Offert,Order,Faktura,Kreditnota,Avropsorder,Returorder];
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order }
    { 2   ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                UpdateSellToCustomerId;
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Customer No.;
                                                              NOR=Salg til-kundenr.;
                                                              SVE=F”rs.kundnr];
                                                   NotBlank=Yes }
    { 3   ;   ;No.                 ;Code20        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 4   ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                UpdateBillToCustomerId;
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              NOR=Faktura-til kundenummer;
                                                              SVE=Faktureringskundnr];
                                                   NotBlank=Yes }
    { 5   ;   ;Bill-to Name        ;Text100       ;TableRelation=Customer;
                                                   ValidateTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to Name;
                                                              NOR=Faktura-til navn;
                                                              SVE=Faktureringsnamn] }
    { 7   ;   ;Bill-to Address     ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to Address;
                                                              NOR=Faktura-til adresse;
                                                              SVE=Faktureringsadress] }
    { 8   ;   ;Bill-to Address 2   ;Text50        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to Address 2;
                                                              NOR=Faktura-til adresse 2;
                                                              SVE=Faktureringsadress 2] }
    { 9   ;   ;Bill-to City        ;Text30        ;TableRelation=IF (Bill-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Bill-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Bill-to Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to City;
                                                              NOR=Faktura-til sted;
                                                              SVE=Faktureras ort] }
    { 10  ;   ;Bill-to Contact     ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to Contact;
                                                              NOR=Faktura-til kontakt;
                                                              SVE=Faktureringskontaktperson] }
    { 11  ;   ;Your Reference      ;Text35        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Your Reference;
                                                              NOR=Deres referanse;
                                                              SVE=Er referens] }
    { 12  ;   ;Ship-to Code        ;Code10        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to Code;
                                                              NOR=Lever-til kode;
                                                              SVE=Leveransadresskod] }
    { 13  ;   ;Ship-to Name        ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to Name;
                                                              NOR=Lever-til navn;
                                                              SVE=Leveransnamn] }
    { 15  ;   ;Ship-to Address     ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to Address;
                                                              NOR=Lever-til adresse;
                                                              SVE=Leveransadress] }
    { 16  ;   ;Ship-to Address 2   ;Text50        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to Address 2;
                                                              NOR=Lever-til adresse 2;
                                                              SVE=Leveransadress 2] }
    { 17  ;   ;Ship-to City        ;Text30        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to City;
                                                              NOR=Lever-til by/sted;
                                                              SVE=Leveransort] }
    { 18  ;   ;Ship-to Contact     ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to Contact;
                                                              NOR=Lever-til kontakt;
                                                              SVE=Leveranskontaktperson] }
    { 20  ;   ;Posting Date        ;Date          ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Posting Date;
                                                              NOR=Bokf›ringsdato;
                                                              SVE=Bokf”ringsdatum] }
    { 23  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   OnValidate=BEGIN
                                                                UpdatePaymentTermsId;
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Payment Terms Code;
                                                              NOR=Betalingsbet.kode;
                                                              SVE=Betalningsvillkorskod] }
    { 24  ;   ;Due Date            ;Date          ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Due Date;
                                                              NOR=Forfallsdato;
                                                              SVE=F”rfallodatum] }
    { 27  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   OnValidate=BEGIN
                                                                UpdateShipmentMethodId;
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              NOR=Leveringsm†tekode;
                                                              SVE=Utleveransvillkorskod] }
    { 31  ;   ;Customer Posting Group;Code20      ;TableRelation="Customer Posting Group";
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Customer Posting Group;
                                                              NOR=Bokf›ringsgruppe - kunde;
                                                              SVE=Kundbokf”ringsmall] }
    { 32  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                UpdateCurrencyId;
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod] }
    { 35  ;   ;Prices Including VAT;Boolean       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Prices Including VAT;
                                                              NOR=Priser inkl. mva.;
                                                              SVE=Priser inkl. moms] }
    { 43  ;   ;Salesperson Code    ;Code20        ;TableRelation=Salesperson/Purchaser;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Salesperson Code;
                                                              NOR=Selgerkode;
                                                              SVE=S„ljarkod] }
    { 44  ;   ;Order No.           ;Code20        ;OnValidate=BEGIN
                                                                UpdateOrderId;
                                                              END;

                                                   AccessByPermission=TableData 110=R;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Order No.;
                                                              NOR=Ordrenr.;
                                                              SVE=Ordernr] }
    { 56  ;   ;Recalculate Invoice Disc.;Boolean  ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Sales Line" WHERE (Document Type=CONST(Invoice),
                                                                                         Document No.=FIELD(No.),
                                                                                         Recalculate Invoice Disc.=CONST(Yes)));
                                                   CaptionML=[ENU=Recalculate Invoice Disc.;
                                                              NOR=Beregn fakturarabatt p† nytt;
                                                              SVE=Ber„kna om fakturarabatt];
                                                   Editable=No }
    { 60  ;   ;Amount              ;Decimal       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 61  ;   ;Amount Including VAT;Decimal       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Amount Including VAT;
                                                              NOR=Bel›p inkl. mva.;
                                                              SVE=Belopp inkl. moms];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 70  ;   ;VAT Registration No.;Text20        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=VAT Registration No.;
                                                              NOR=Organisasjonsnr.;
                                                              SVE=Momsregistreringsnr] }
    { 79  ;   ;Sell-to Customer Name;Text100      ;TableRelation=Customer;
                                                   ValidateTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Customer Name;
                                                              NOR=Salg til-kundenavn;
                                                              SVE=F”rs.kundnamn] }
    { 81  ;   ;Sell-to Address     ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Address;
                                                              NOR=Salg til-adresse;
                                                              SVE=F”rs.adress] }
    { 82  ;   ;Sell-to Address 2   ;Text50        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Address 2;
                                                              NOR=Salg til-adresse 2;
                                                              SVE=F”rs.adress 2] }
    { 83  ;   ;Sell-to City        ;Text30        ;TableRelation=IF (Sell-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Sell-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Sell-to Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to City;
                                                              NOR=Salg til-sted;
                                                              SVE=F”rs.ort] }
    { 84  ;   ;Sell-to Contact     ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Contact;
                                                              NOR=Salg til-kontakt;
                                                              SVE=F”rs.kontakt] }
    { 85  ;   ;Bill-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to Post Code;
                                                              NOR=Faktura-til postnummer;
                                                              SVE=Faktureras postnr] }
    { 86  ;   ;Bill-to County      ;Text30        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to County;
                                                              NOR=Faktura-til fylke/delstat;
                                                              SVE=Faktureras delstat];
                                                   CaptionClass='5,1,' + "Bill-to Country/Region Code" }
    { 87  ;   ;Bill-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to Country/Region Code;
                                                              NOR=Faktura-til lands-/omr†dekode;
                                                              SVE=Faktureringsland/-region] }
    { 88  ;   ;Sell-to Post Code   ;Code20        ;TableRelation=IF (Sell-to Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Sell-to Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Sell-to Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Post Code;
                                                              NOR=Salg til-postnr.;
                                                              SVE=F”rs.postnrkod] }
    { 89  ;   ;Sell-to County      ;Text30        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to County;
                                                              NOR=Salg til-fylke/delstat;
                                                              SVE=F”rs.delstat];
                                                   CaptionClass='5,1,' + "Sell-to Country/Region Code" }
    { 90  ;   ;Sell-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Country/Region Code;
                                                              NOR=Lands-/omr†dekode for Salg til;
                                                              SVE=F”rs.land/-region] }
    { 91  ;   ;Ship-to Post Code   ;Code20        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to Post Code;
                                                              NOR=Lever-til postnummer;
                                                              SVE=Leveranspostnrkod] }
    { 92  ;   ;Ship-to County      ;Text30        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to County;
                                                              NOR=Lever-til fylke/delstat;
                                                              SVE=Leveransl„n];
                                                   CaptionClass='5,1,' + "Ship-to Country/Region Code" }
    { 93  ;   ;Ship-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Ship-to Country/Region Code;
                                                              NOR=Lever-til lands-/omr†dekode;
                                                              SVE=Kod f”r leveransland/-region] }
    { 99  ;   ;Document Date       ;Date          ;OnValidate=BEGIN
                                                                VALIDATE("Posting Date","Document Date");
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Document Date;
                                                              NOR=Dokumentdato;
                                                              SVE=Dokumentdatum] }
    { 100 ;   ;External Document No.;Code35       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=External Document No.;
                                                              NOR=Eksterndokumentnr.;
                                                              SVE=Externt dokumentnr] }
    { 114 ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   OnValidate=BEGIN
                                                                IF IsUsingVAT THEN
                                                                  ERROR(SalesTaxOnlyFieldErr,FIELDCAPTION("Tax Area Code"));
                                                              END;

                                                   ValidateTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Tax Area Code;
                                                              NOR=Mva-omr†dekode;
                                                              SVE=Skatteomr†deskod] }
    { 115 ;   ;Tax Liable          ;Boolean       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Tax Liable;
                                                              NOR=Skyldig mva.;
                                                              SVE=Skattepliktig] }
    { 116 ;   ;VAT Bus. Posting Group;Code20      ;TableRelation="VAT Business Posting Group";
                                                   OnValidate=BEGIN
                                                                IF NOT IsUsingVAT THEN
                                                                  ERROR(VATOnlyFieldErr,FIELDCAPTION("VAT Bus. Posting Group"));
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              NOR=Mva-bokf›ringsgruppe - firma;
                                                              SVE=Moms r”relsebokf”ringsmall] }
    { 121 ;   ;Invoice Discount Calculation;Option;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Invoice Discount Calculation;
                                                              NOR=Fakturarabattberegning;
                                                              SVE=Fakturarabattber„kning];
                                                   OptionCaptionML=[ENU=None,%,Amount;
                                                                    NOR=Ingen,%,Bel›p;
                                                                    SVE=Ingen,%,Belopp];
                                                   OptionString=None,%,Amount }
    { 122 ;   ;Invoice Discount Value;Decimal     ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Invoice Discount Value;
                                                              NOR=Fakturarabattverdi;
                                                              SVE=Fakturarabattv„rde];
                                                   AutoFormatType=1 }
    { 167 ;   ;Last Email Sent Status;Option      ;ObsoleteState=Removed;
                                                   ObsoleteReason=Do not store the sent status in the entity but calculate it on a fly to avoid etag change after invoice sending.;
                                                   CaptionML=[ENU=Last Email Sent Status;
                                                              NOR=Status for sending av siste e-post];
                                                   OptionCaptionML=[@@@={Locked};
                                                                    ENU=Not Sent,In Process,Finished,Error;
                                                                    NOR=Not Sent,In Process,Finished,Error];
                                                   OptionString=Not Sent,In Process,Finished,Error }
    { 170 ;   ;IsTest              ;Boolean       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=IsTest;
                                                              NOR=IsTest] }
    { 171 ;   ;Sell-to Phone No.   ;Text30        ;ExtendedDatatype=Phone No.;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Phone No.;
                                                              NOR=Salg til-telefonnr.] }
    { 172 ;   ;Sell-to E-Mail      ;Text80        ;ExtendedDatatype=E-Mail;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Email;
                                                              NOR=E-post;
                                                              SVE=E-post] }
    { 1304;   ;Cust. Ledger Entry No.;Integer     ;TableRelation="Cust. Ledger Entry"."Entry No.";
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Cust. Ledger Entry No.;
                                                              NOR=Kundepostnr.;
                                                              SVE=Kundreskontra l”pnr] }
    { 1305;   ;Invoice Discount Amount;Decimal    ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Invoice Discount Amount;
                                                              NOR=Fakturarabattbel›p;
                                                              SVE=Fakturarabatt];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 5052;   ;Sell-to Contact No. ;Code20        ;TableRelation=Contact;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Contact No.;
                                                              NOR=Salg til-kontaktnr.;
                                                              SVE=F”rs.kontaktnr] }
    { 8000;   ;Id                  ;GUID          ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Id;
                                                              NOR=ID;
                                                              SVE=ID] }
    { 9600;   ;Total Tax Amount    ;Decimal       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Total Tax Amount;
                                                              NOR=Totalt mva-bel›p];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 9601;   ;Status              ;Option        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=[@@@={Locked};
                                                                    ENU=" ,Draft,In Review,Open,Paid,Canceled,Corrective";
                                                                    NOR=" ,Draft,In Review,Open,Paid,Canceled,Corrective"];
                                                   OptionString=[ ,Draft,In Review,Open,Paid,Canceled,Corrective] }
    { 9602;   ;Posted              ;Boolean       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Posted;
                                                              NOR=Bokf›rt;
                                                              SVE=Bokf”rd] }
    { 9603;   ;Subtotal Amount     ;Decimal       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Subtotal Amount;
                                                              NOR=Delsumbel›p;
                                                              SVE=Delsummebelopp];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 9624;   ;Discount Applied Before Tax;Boolean;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Discount Applied Before Tax;
                                                              NOR=Rabatt tatt i bruk f›r skatt] }
    { 9630;   ;Last Modified Date Time;DateTime   ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Last Modified Date Time;
                                                              NOR=Dato/klokkeslett for siste endring;
                                                              SVE=Senast „ndrad, datum och tid];
                                                   Editable=No }
    { 9631;   ;Customer Id         ;GUID          ;TableRelation=Customer.Id;
                                                   OnValidate=BEGIN
                                                                UpdateSellToCustomerNo;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Customer Id;
                                                              NOR=Kunde-ID;
                                                              SVE=Kund-ID] }
    { 9632;   ;Order Id            ;GUID          ;OnValidate=BEGIN
                                                                UpdateOrderNo;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Order Id;
                                                              NOR=Ordre-ID;
                                                              SVE=Order-ID] }
    { 9633;   ;Contact Graph Id    ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Contact Graph Id;
                                                              NOR=Graph-ID for kontakt] }
    { 9634;   ;Currency Id         ;GUID          ;TableRelation=Currency.Id;
                                                   OnValidate=BEGIN
                                                                UpdateCurrencyCode;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Currency Id;
                                                              NOR=Valuta-ID] }
    { 9635;   ;Payment Terms Id    ;GUID          ;TableRelation="Payment Terms".Id;
                                                   OnValidate=BEGIN
                                                                UpdatePaymentTermsCode;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Payment Terms Id;
                                                              NOR=ID for betalingsbetingelser] }
    { 9636;   ;Shipment Method Id  ;GUID          ;TableRelation="Shipment Method".Id;
                                                   OnValidate=BEGIN
                                                                UpdateShipmentMethodCode;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Shipment Method Id;
                                                              NOR=ID for leveringsm†te] }
    { 9637;   ;Tax Area ID         ;GUID          ;OnValidate=BEGIN
                                                                IF IsUsingVAT THEN
                                                                  UpdateVATBusinessPostingGroupCode
                                                                ELSE
                                                                  UpdateTaxAreaCode;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Tax Area ID;
                                                              NOR=ID for mva-omr†de] }
    { 9638;   ;Bill-to Customer Id ;GUID          ;TableRelation=Customer.Id;
                                                   OnValidate=BEGIN
                                                                UpdateBillToCustomerNo;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Bill-to Customer Id;
                                                              NOR=Faktura-til kunde-ID] }
  }
  KEYS
  {
    {    ;No.,Posted                               }
    {    ;Id                                      ;Clustered=Yes }
    {    ;Cust. Ledger Entry No.                   }
    {    ;Document Date,Status                    ;SumIndexFields=Amount Including VAT }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CannotChangeNumberOnNonPostedErr@1004 : TextConst 'ENU=The number of the invoice can not be changed.;NOR=Fakturanummeret kan ikke endres.';
      CannotModifyPostedInvoiceErr@1001 : TextConst '@@@={Locked};ENU=The invoice has been posted and can no longer be modified.;NOR=The invoice has been posted and can no longer be modified.';
      IsRenameAllowed@1000 : Boolean;
      SalesTaxOnlyFieldErr@1002 : TextConst '@@@=%1 - Name of the field, e.g. Tax Liable, Tax Group Code, VAT Business posting group;ENU=Current Tax setup is set to VAT. Field %1 can only be used with Sales Tax.;NOR=Gjeldende mva-oppsett er satt til Mva. Feltet %1 kan bare brukes med Salgs-mva.';
      VATOnlyFieldErr@1003 : TextConst '@@@=%1 - Name of the field, e.g. Tax Liable, Tax Group Code, VAT Business posting group;ENU=Current Tax setup is set to Sales Tax. Field %1 can only be used with VAT.;NOR=Gjeldende mva-oppsett er satt til Salgs-mva. Feltet %1 kan bare brukes med Mva.';

    LOCAL PROCEDURE UpdateSellToCustomerId@2();
    VAR
      Customer@1000 : Record 18;
    BEGIN
      IF "Sell-to Customer No." = '' THEN BEGIN
        CLEAR("Customer Id");
        EXIT;
      END;

      IF NOT Customer.GET("Sell-to Customer No.") THEN
        EXIT;

      "Customer Id" := Customer.Id;
    END;

    LOCAL PROCEDURE UpdateBillToCustomerId@16();
    VAR
      Customer@1000 : Record 18;
    BEGIN
      IF "Bill-to Customer No." = '' THEN BEGIN
        CLEAR("Bill-to Customer Id");
        EXIT;
      END;

      IF NOT Customer.GET("Bill-to Customer No.") THEN
        EXIT;

      "Bill-to Customer Id" := Customer.Id;
    END;

    LOCAL PROCEDURE UpdateOrderId@3();
    VAR
      SalesHeader@1000 : Record 36;
    BEGIN
      IF NOT SalesHeader.GET(SalesHeader."Document Type"::Order,"Order No.") THEN
        EXIT;

      "Order Id" := SalesHeader.Id;
    END;

    [External]
    PROCEDURE UpdateCurrencyId@9();
    VAR
      Currency@1000 : Record 4;
    BEGIN
      IF "Currency Code" = '' THEN BEGIN
        CLEAR("Currency Id");
        EXIT;
      END;

      IF NOT Currency.GET("Currency Code") THEN
        EXIT;

      "Currency Id" := Currency.Id;
    END;

    [External]
    PROCEDURE UpdatePaymentTermsId@57();
    VAR
      PaymentTerms@1000 : Record 3;
    BEGIN
      IF "Payment Terms Code" = '' THEN BEGIN
        CLEAR("Payment Terms Id");
        EXIT;
      END;

      IF NOT PaymentTerms.GET("Payment Terms Code") THEN
        EXIT;

      "Payment Terms Id" := PaymentTerms.Id;
    END;

    [External]
    PROCEDURE UpdateShipmentMethodId@59();
    VAR
      ShipmentMethod@1000 : Record 10;
    BEGIN
      IF "Shipment Method Code" = '' THEN BEGIN
        CLEAR("Shipment Method Id");
        EXIT;
      END;

      IF NOT ShipmentMethod.GET("Shipment Method Code") THEN
        EXIT;

      "Shipment Method Id" := ShipmentMethod.Id;
    END;

    LOCAL PROCEDURE UpdateSellToCustomerNo@1();
    VAR
      Customer@1000 : Record 18;
    BEGIN
      IF NOT ISNULLGUID("Customer Id") THEN BEGIN
        Customer.SETRANGE(Id,"Customer Id");
        Customer.FINDFIRST;
      END;

      VALIDATE("Sell-to Customer No.",Customer."No.");
    END;

    LOCAL PROCEDURE UpdateBillToCustomerNo@18();
    VAR
      Customer@1000 : Record 18;
    BEGIN
      IF NOT ISNULLGUID("Bill-to Customer Id") THEN BEGIN
        Customer.SETRANGE(Id,"Bill-to Customer Id");
        Customer.FINDFIRST;
      END;

      VALIDATE("Bill-to Customer No.",Customer."No.");
    END;

    LOCAL PROCEDURE UpdateOrderNo@4();
    VAR
      SalesHeader@1000 : Record 36;
    BEGIN
      IF ISNULLGUID("Order Id") THEN BEGIN
        VALIDATE("Order No.",'');
        EXIT;
      END;

      SalesHeader.SETRANGE(Id,"Order Id");
      SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);

      // Order gets deleted after fullfiled, so do not blank the Order No
      IF NOT SalesHeader.FINDFIRST THEN
        EXIT;

      VALIDATE("Order No.",SalesHeader."No.");
    END;

    LOCAL PROCEDURE UpdateCurrencyCode@10();
    VAR
      Currency@1000 : Record 4;
    BEGIN
      IF NOT ISNULLGUID("Currency Id") THEN BEGIN
        Currency.SETRANGE(Id,"Currency Id");
        Currency.FINDFIRST;
      END;

      VALIDATE("Currency Code",Currency.Code);
    END;

    LOCAL PROCEDURE UpdatePaymentTermsCode@56();
    VAR
      PaymentTerms@1001 : Record 3;
    BEGIN
      IF NOT ISNULLGUID("Payment Terms Id") THEN BEGIN
        PaymentTerms.SETRANGE(Id,"Payment Terms Id");
        PaymentTerms.FINDFIRST;
      END;

      VALIDATE("Payment Terms Code",PaymentTerms.Code);
    END;

    LOCAL PROCEDURE UpdateShipmentMethodCode@58();
    VAR
      ShipmentMethod@1001 : Record 10;
    BEGIN
      IF NOT ISNULLGUID("Shipment Method Id") THEN BEGIN
        ShipmentMethod.SETRANGE(Id,"Shipment Method Id");
        ShipmentMethod.FINDFIRST;
      END;

      VALIDATE("Shipment Method Code",ShipmentMethod.Code);
    END;

    [External]
    PROCEDURE UpdateReferencedRecordIds@5();
    BEGIN
      UpdateSellToCustomerId;
      UpdateBillToCustomerId;
      UpdateCurrencyId;
      UpdatePaymentTermsId;
      UpdateShipmentMethodId;

      IF ("Order No." <> '') AND ISNULLGUID("Order Id") THEN
        UpdateOrderId;

      UpdateGraphContactId;
      UpdateTaxAreaId;
    END;

    [External]
    PROCEDURE UpdateGraphContactId@6();
    VAR
      contactFound@1003 : Boolean;
    BEGIN
      IF "Sell-to Contact No." = '' THEN
        contactFound := UpdateContactIdFromCustomer
      ELSE
        contactFound := UpdateContactIdFromSellToContactNo;

      IF NOT contactFound THEN
        CLEAR("Contact Graph Id");
    END;

    LOCAL PROCEDURE UpdateContactIdFromCustomer@7() : Boolean;
    VAR
      Customer@1001 : Record 18;
      Contact@1002 : Record 5050;
      GraphIntContact@1000 : Codeunit 5461;
      GraphID@1003 : Text[250];
    BEGIN
      IF ISNULLGUID("Customer Id") THEN
        EXIT(FALSE);

      Customer.SETRANGE(Id,"Customer Id");
      IF NOT Customer.FINDFIRST THEN
        EXIT(FALSE);

      IF NOT GraphIntContact.FindGraphContactIdFromCustomer(GraphID,Customer,Contact) THEN
        EXIT(FALSE);

      "Contact Graph Id" := GraphID;

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE UpdateContactIdFromSellToContactNo@8() : Boolean;
    VAR
      Contact@1002 : Record 5050;
      GraphIntegrationRecord@1001 : Record 5451;
      GraphID@1000 : Text[250];
    BEGIN
      IF NOT Contact.GET("Sell-to Contact No.") THEN
        EXIT(FALSE);

      IF NOT GraphIntegrationRecord.FindIDFromRecordID(Contact.RECORDID,GraphID) THEN
        EXIT(FALSE);

      "Contact Graph Id" := GraphID;

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE UpdateTaxAreaId@65();
    VAR
      TaxArea@1000 : Record 318;
      VATBusinessPostingGroup@1001 : Record 323;
    BEGIN
      IF IsUsingVAT THEN BEGIN
        IF "VAT Bus. Posting Group" <> '' THEN BEGIN
          VATBusinessPostingGroup.SETRANGE(Code,"VAT Bus. Posting Group");
          IF VATBusinessPostingGroup.FINDFIRST THEN BEGIN
            "Tax Area ID" := VATBusinessPostingGroup.Id;
            EXIT;
          END;
        END;

        CLEAR("Tax Area ID");
        EXIT;
      END;

      IF "Tax Area Code" <> '' THEN BEGIN
        TaxArea.SETRANGE(Code,"Tax Area Code");
        IF TaxArea.FINDFIRST THEN BEGIN
          "Tax Area ID" := TaxArea.Id;
          EXIT;
        END;
      END;

      CLEAR("Tax Area ID");
    END;

    LOCAL PROCEDURE UpdateTaxAreaCode@66();
    VAR
      TaxArea@1000 : Record 318;
    BEGIN
      IF NOT ISNULLGUID("Tax Area ID") THEN BEGIN
        TaxArea.SETRANGE(Id,"Tax Area ID");
        IF TaxArea.FINDFIRST THEN BEGIN
          VALIDATE("Tax Area Code",TaxArea.Code);
          EXIT;
        END;
      END;

      CLEAR("Tax Area Code");
    END;

    LOCAL PROCEDURE UpdateVATBusinessPostingGroupCode@15();
    VAR
      VATBusinessPostingGroup@1000 : Record 323;
    BEGIN
      IF NOT ISNULLGUID("Tax Area ID") THEN BEGIN
        VATBusinessPostingGroup.SETRANGE(Id,"Tax Area ID");
        IF VATBusinessPostingGroup.FINDFIRST THEN BEGIN
          VALIDATE("VAT Bus. Posting Group",VATBusinessPostingGroup.Code);
          EXIT;
        END;
      END;

      CLEAR("VAT Bus. Posting Group");
    END;

    [External]
    PROCEDURE IsUsingVAT@12() : Boolean;
    VAR
      GeneralLedgerSetup@1000 : Record 98;
    BEGIN
      EXIT(GeneralLedgerSetup.UseVat);
    END;

    [External]
    PROCEDURE GetIsRenameAllowed@13() : Boolean;
    BEGIN
      EXIT(IsRenameAllowed);
    END;

    [External]
    PROCEDURE SetIsRenameAllowed@11(RenameAllowed@1000 : Boolean);
    BEGIN
      IsRenameAllowed := RenameAllowed;
    END;

    [External]
    PROCEDURE GetParentRecordNativeInvoicing@14(VAR SalesHeader@1005 : Record 36;VAR SalesInvoiceHeader@1004 : Record 112) : Boolean;
    BEGIN
      SalesInvoiceHeader.SETAUTOCALCFIELDS("Last Email Sent Time","Last Email Sent Status","Work Description");
      SalesHeader.SETAUTOCALCFIELDS("Last Email Sent Time","Last Email Sent Status","Work Description");

      EXIT(GetParentRecord(SalesHeader,SalesInvoiceHeader));
    END;

    LOCAL PROCEDURE GetParentRecord@27(VAR SalesHeader@1005 : Record 36;VAR SalesInvoiceHeader@1004 : Record 112) : Boolean;
    VAR
      MainRecordFound@1000 : Boolean;
    BEGIN
      IF Posted THEN BEGIN
        MainRecordFound := SalesInvoiceHeader.GET("No.");
        CLEAR(SalesHeader);
      END ELSE BEGIN
        MainRecordFound := SalesHeader.GET(SalesHeader."Document Type"::Invoice,"No.");
        CLEAR(SalesInvoiceHeader);
      END;

      EXIT(MainRecordFound);
    END;

    BEGIN
    END.
  }
}

