OBJECT Page 11012013 Extension Contract
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Extension Contract;
               NOR=ETA;
               SVE=ŽTA];
    SourceTable=Table11012004;
    DataCaptionFields=Project No.,Contract No.;
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Mail Documents,Documents;
                                NOR=0];
    OnInit=BEGIN
             FormExtensionBudgetEditable := TRUE;
             FixedInstallmentAmountEditable := TRUE;
             TextEditable := TRUE;
             "Invoice TextEditable" := TRUE;
             ReferenceDateRevisionEditable := TRUE;
             RevisionEditable := TRUE;
             FinishedEditable := TRUE;
             "Contract TypeEditable" := TRUE;
             "Settlement MethodEditable" := TRUE;
             "Expected Order DateEditable" := TRUE;
             "Contract AmountEditable" := TRUE;
             "Contract DateEditable" := TRUE;
             "Version DateEditable" := TRUE;
             "Estimated AmountEditable" := TRUE;
             "Estimate DateEditable" := TRUE;
             VATProdPostingGroupEditable := TRUE;
             "Due DateEditable" := TRUE;
             "Offered AmountEditable" := TRUE;
             "Offering DateEditable" := TRUE;
             "Include in ExpectationEditable" := TRUE;
             StatusEditable := TRUE;
             "Budget FixedEditable" := TRUE;
             "Your ReferenceEditable" := TRUE;
             "Principal ContactEditable" := TRUE;
             PrincipalEditable := TRUE;
             DescriptionEditable := TRUE;
             "Contract No.Editable" := TRUE;
             "Project No.Editable" := TRUE;
             ReverseButtonVisible := TRUE;
             "Treat like OrderEditable" := TRUE;
             "% to B AccountEditable" := TRUE;
             "% LaborEditable" := TRUE;
             SurchargePercEditable := TRUE;
             SpecificWKAPercentagesEditable := TRUE;
             InvoiceInstalmMotivationasEdit := TRUE;
             "Generate InstallmentsEditable" := TRUE;
             "Installment SchemeEditable" := TRUE;
             "Revision RuleEditable" := TRUE;
             ContractCurrencyCodeEditable := TRUE;
             ExpectedContractAmountEditable := TRUE; //C036112.n
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 FILTERGROUP(2);
                 IF GETFILTER("Project No.") <> '' THEN
                   FixedProjectNo := TRUE;
                 FILTERGROUP(0);

                 CurrPage.FormExtensionBudget.PAGE.SetMainPageID(PAGE::"Extension Contract");
               END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  IF "Contract No." = '' THEN
                    GetDefaultContract;
                END;

    OnDeleteRecord=BEGIN
                     TESTFIELD("Extension Fixed", FALSE);  //*31928
                     TESTFIELD("Budget Fixed", FALSE);
                   END;

    OnAfterGetCurrRecord=VAR
                           RecRef@1100528100 : RecordRef;
                         BEGIN
                           "Installment SchemeEditable" := "Generate Installments" AND (NOT "Installments Generated");
                           "Generate InstallmentsEditable" := ("Settlement Method" = "Settlement Method"::"Fixed Price") AND (NOT "Installments Generated");

                           ProjNr := "Project No.";

                           FixedInstallmentAmountEditable := ("Invoice Installm.Motivation as" = "Invoice Installm.Motivation as"::"Fixed Installment Amounts") AND
                                                             ("Settlement Method" = "Settlement Method"::"Fixed Price");

                           IF "Contract Type" = "Contract Type"::Subcontracting THEN BEGIN
                             "% LaborEditable" := "Specific WKA Percentages";
                             "% to B AccountEditable" := "Specific WKA Percentages";
                           END ELSE BEGIN
                             "% LaborEditable" := FALSE;
                             "% to B AccountEditable" := FALSE;
                           END;

                           UpdateEditable;

                           RecRef.GETTABLE(Rec);
                           CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
                           CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
                           CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode("Department Code");
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100525014;1 ;ActionGroup;
                      CaptionML=[ENU=Invoice;
                                 NOR=Faktura;
                                 SVE=Fakturadetaljer] }
      { 54      ;2   ;Action    ;
                      CaptionML=[ENU=Installments;
                                 NOR=Betalingsplaner;
                                 SVE=Betalplaner];
                      RunObject=Page 11012025;
                      RunPageView=SORTING(Project No.,Principal,Installment No.);
                      RunPageLink=Project No.=FIELD(Project No.),
                                  Principal=FIELD(Principal),
                                  Extension Contract=FIELD(Contract No.);
                      Image=AmountByPeriod }
      { 55      ;2   ;Action    ;
                      CaptionML=[ENU=Project Principals;
                                 NOR=Prosjektoppdragsgivere;
                                 SVE=Projektuppdragsgivare];
                      Image=TeamSales;
                      OnAction=VAR
                                 ProjPrinRec@1210190000 : Record 11012005;
                               BEGIN
                                 ProjPrinRec.SETRANGE("Project No.", "Project No.");
                                 IF NOT ProjPrinRec.GET("Project No.", Principal) THEN
                                   ProjPrinRec.Principal := Principal;
                                 PAGE.RUNMODAL(PAGE::"Project Principal List", ProjPrinRec);
                               END;
                                }
      { 1100485027;2 ;Action    ;
                      CaptionML=[ENU=Tender Paragraphs;
                                 NOR=Tilbudsavsnitt;
                                 SVE=AMA koder];
                      RunObject=Page 11012477;
                      RunPageView=SORTING(Project No.,Principal,Contract No.,No.);
                      RunPageLink=Project No.=FIELD(Project No.),
                                  Contract No.=FIELD(Contract No.),
                                  Principal=FIELD(Principal);
                      Visible=FALSE;
                      Image=Payment }
      { 1100485020;2 ;Action    ;
                      CaptionML=[ENU=Installment &Motivation;
                                 NOR=Betalingsplans&motivasjon;
                                 SVE=Betalplans&motivation];
                      RunObject=Page 11012474;
                      RunPageView=SORTING(Project No.,Principal,Production Date);
                      RunPageLink=Project No.=FIELD(Project No.),
                                  Principal=FIELD(Principal);
                      Visible=FALSE;
                      Image=PaymentPeriod }
      { 1100528900;2 ;Action    ;
                      CaptionML=[ENU=Installment &Overview;
                                 NOR=Avdrag&Oversikt;
                                 SVE=Betalplans&”versikt];
                      Visible=FALSE;
                      Image=AmountByPeriod;
                      OnAction=VAR
                                 InstallmentOverviewList@1100485000 : Page 11020557;
                                 InstallmentOverview@1100485001 : Record 11012265;
                                 Job@1100485003 : Record 11072003;
                               BEGIN
                                 //DP01488
                                 IF Job.GET("Project No.") THEN
                                   Job.TESTFIELD(RAW, TRUE);

                                 InstallmentOverview.SETRANGE("Project No.", "Project No.");
                                 InstallmentOverview.SETRANGE(Principal, Principal);
                                 IF InstallmentOverview.FINDLAST THEN;
                                 InstallmentOverviewList.SETTABLEVIEW(InstallmentOverview);
                                 InstallmentOverviewList.RUNMODAL;
                               END;
                                }
      { 1100529605;2 ;Action    ;
                      CaptionML=[ENU=Surcharges;
                                 NOR=Tilleggsgebyrer;
                                 SVE=Till„ggsavgifter];
                      Visible=FALSE;
                      Image=InsertStartingFee;
                      OnAction=VAR
                                 ProjectCostPlusSurcharge@1100529600 : Record 11020561;
                                 ProjSurchargePage@1100529601 : Page 11072598;
                               BEGIN
                                 ProjectCostPlusSurcharge.FILTERGROUP(10);
                                 ProjectCostPlusSurcharge.SETRANGE(Level, ProjectCostPlusSurcharge.Level::"Project Principal");
                                 ProjectCostPlusSurcharge.SETRANGE("Project No.", "Project No.");
                                 ProjectCostPlusSurcharge.SETRANGE(Principal, Principal);
                                 ProjectCostPlusSurcharge.SETRANGE("Extension Contract", "Contract No.");
                                 ProjectCostPlusSurcharge.FILTERGROUP(0);
                                 ProjectCostPlusSurcharge.Level := ProjectCostPlusSurcharge.Level::"Project Principal";
                                 ProjSurchargePage.SETTABLEVIEW(ProjectCostPlusSurcharge);
                                 ProjSurchargePage.SETRECORD(ProjectCostPlusSurcharge);
                                 ProjSurchargePage.RUNMODAL;
                               END;
                                }
      { 1100525017;1 ;ActionGroup;
                      CaptionML=[ENU=Budget;
                                 NOR=Budsjett;
                                 SVE=Budget] }
      { 1210190004;2 ;Action    ;
                      CaptionML=[ENU=Summary Sheet;
                                 NOR=Sammendragsark;
                                 SVE=Summeringsark];
                      RunObject=Page 11012147;
                      RunPageLink=Project No.=FIELD(Project No.),
                                  Contract No.=FIELD(Contract No.);
                      Promoted=Yes;
                      Image=Worksheet;
                      PromotedCategory=Process }
      { 1210190020;2 ;Action    ;
                      CaptionML=[ENU=Project Cost &Objects;
                                 NOR=Prosjektkost&objekter;
                                 SVE=Projektkostnads&objekt];
                      RunObject=Page 11012128;
                      RunPageLink=Project No.=FIELD(Project No.);
                      Visible=FALSE;
                      Image=ItemTrackingLedger }
      { 1100525019;1 ;ActionGroup;
                      CaptionML=[ENU=Documents;
                                 NOR=Dokument;
                                 SVE=Dokument] }
      { 1210190015;2 ;Action    ;
                      CaptionML=[ENU=&Documents;
                                 NOR=&Dokumenter;
                                 SVE=&Dokument];
                      Image=Documents;
                      OnAction=VAR
                                 RecRef@1210190001 : RecordRef;
                                 DocumentFilters@1100528701 : Codeunit 11012432;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Department Code", FALSE, TRUE);
                               END;
                                }
      { 1100529607;2 ;Action    ;
                      CaptionML=[ENU=Document &Relations;
                                 NOR=Dokument&relasjoner;
                                 SVE=Dokument&relationer];
                      RunObject=Page 11132112;
                      RunPageView=SORTING(Source Type,Project No.,No.,Related Document No.)
                                  WHERE(Source Type=CONST(Extension Contract));
                      RunPageLink=Project No.=FIELD(Project No.),
                                  No.=FIELD(Contract No.);
                      Visible=FALSE;
                      Image=Relationship }
      { 52      ;1   ;ActionGroup;
                      CaptionML=[ENU=Others;
                                 NOR=Andre] }
      { 1100525001;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 NOR=Ko&mmentarer;
                                 SVE=Ko&mmentarer];
                      RunObject=Page 11071831;
                      RunPageLink=Table1 Name=CONST(Job),
                                  Table1 No.=FIELD(Project No.),
                                  Table2 Name=CONST(Extension Contract),
                                  Table2 No.=FIELD(Contract No.);
                      Image=ViewComments }
      { 1100528300;2 ;Action    ;
                      CaptionML=[ENU=Features;
                                 NOR=Funksjoner;
                                 SVE=Funktioner];
                      RunObject=Page 11126660;
                      RunPageLink=Source Table=CONST(11012004),
                                  Source Code=FIELD(Project No.),
                                  Source Code2=FIELD(Contract No.);
                      Visible=FALSE;
                      Image=QualificationOverview }
      { 1100525025;2 ;Action    ;
                      CaptionML=[ENU=Text Lines Installment Invoice;
                                 NOR=0;
                                 SVE=Textrader avbetalningsfaktura];
                      RunObject=Page 11126497;
                      RunPageView=SORTING(Table Name,Field 1,Field 2,Field 3,Invoice Type,Line No.)
                                  WHERE(Table Name=CONST(ExtensionContract),
                                        Invoice Type=CONST(Installment));
                      RunPageLink=Field 1=FIELD(Project No.),
                                  Field 2=FIELD(Contract No.);
                      Visible=FALSE;
                      Image=Text }
      { 1100525024;2 ;Action    ;
                      CaptionML=[ENU=Text Lines Cost Plus Invoice;
                                 NOR=Tekstrader for selvkostfaktura;
                                 SVE=Textrader f”r sj„lvkostnadsfaktura (cost plus)];
                      RunObject=Page 11126497;
                      RunPageView=SORTING(Table Name,Field 1,Field 2,Field 3,Invoice Type,Line No.)
                                  WHERE(Table Name=CONST(ExtensionContract),
                                        Invoice Type=CONST(CostPlus));
                      RunPageLink=Field 1=FIELD(Project No.),
                                  Field 2=FIELD(Contract No.);
                      Visible=FALSE;
                      Image=Text }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528501;1 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Email;
                                 NOR=E-post;
                                 SVE=E-post];
                      Image=Email;
                      OnAction=VAR
                                 DocumentPrint@1100528500 : Codeunit 229;
                               BEGIN
                                 //**4PS
                                 DocumentPrint.EmailExtensionContract(Rec);
                               END;
                                }
      { 63      ;1   ;ActionGroup;
                      CaptionML=[ENU=Invoicing;
                                 NOR=Fakturering;
                                 SVE=Fakturering] }
      { 1100525020;2 ;Action    ;
                      Name=ReleaseExtension;
                      CaptionML=[ENU=Release Extension Contract;
                                 NOR=Frigi ETA-kontrakt;
                                 SVE=Sl„pp ŽTA-kontrakt];
                      Image=Approve;
                      OnAction=BEGIN
                                 //kzwerver, 08-12-2010, FO Vrijgeven meer-/minderwerk
                                 BeforeReleaseExtensionContract;
                                 IF ReleaseExtensionAllowed THEN
                                   StartReleaseExtContract;
                               END;
                                }
      { 1100528002;2 ;Action    ;
                      Name=SalesPriceExtension;
                      CaptionML=[ENU=Sales Price Extension;
                                 NOR=ETA-salgspris;
                                 SVE=ŽTA-f”rs„ljningspris];
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 UpdateSalesPriceBudgetLines;  //DP00789-RFC20
                               END;
                                }
      { 1100528000;2 ;Action    ;
                      Name=CopyBudgetLinesToSettlementSheet;
                      CaptionML=[ENU=Copy Budget Lines to Settlement Sheet;
                                 NOR=Kopier Budsjettrader til oppgj›rsskjema;
                                 SVE=Kopiera budgetrader till avr„kningsark];
                      Promoted=Yes;
                      Visible=FALSE;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopyExtensionToCostPlus;  //DP00789-RFC20
                               END;
                                }
      { 1100528001;2 ;Action    ;
                      Name=SettlementSheet;
                      CaptionML=[ENU=Settlement Sheet;
                                 NOR=Oppgj›rsskjema;
                                 SVE=Avr„kningsark];
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ActivateSettlementSheet;  //C039082
                               END;
                                }
      { 1100528905;2 ;Action    ;
                      CaptionML=ENU=Generate Tender Paragraphs by Principal;
                      Image=Payment;
                      OnAction=BEGIN
                                 GenerateTenderParagraphs;  //C056215
                               END;
                                }
      { 64      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Generate Installments;
                                 NOR=Generer avdrag;
                                 SVE=Generera avbetalningar];
                      Promoted=Yes;
                      Image=AmountByPeriod;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF "Extension Fixed" THEN
                                     ERROR(Text002);

                                 CLEAR(GenerateProjInstallm);
                                 GenerateProjInstallm.FromExtension("Project No.","Contract No.");
                               END;
                                }
      { 1100525026;2 ;Action    ;
                      CaptionML=[ENU=Recalculate Contract Amount (LCY);
                                 NOR=Rekalkulere kontraktsbel›p (NOK);
                                 SVE=Omber„kna kontraktsbelopp (BVA)];
                      Visible=FALSE;
                      Image=Recalculate;
                      OnAction=VAR
                                 ProjInstalmRec@1100525000 : Record 11012018;
                               BEGIN
                                 ProjInstalmRec.RESET;
                                 ProjInstalmRec.SETRANGE("Project No.", "Project No.");
                                 IF ProjInstalmRec.FINDSET THEN BEGIN
                                   REPEAT
                                     ProjInstalmRec.CALCFIELDS("Invoice in Process","Invoiced Price");
                                     IF (ProjInstalmRec."Installment Amount" <> 0) AND (ProjInstalmRec."Invoice in Process" = 0) AND
                                        (ProjInstalmRec."Invoiced Price" = 0) THEN
                                     ProjInstalmRec.VALIDATE("Installment Amount");
                                     ProjInstalmRec.MODIFY;
                                   UNTIL ProjInstalmRec.NEXT = 0;
                                 END;

                                 VALIDATE("Contract Amount");
                                 MODIFY;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100525022;1 ;ActionGroup;
                      CaptionML=[ENU=Processing;
                                 NOR=Behandler;
                                 SVE=Behandla];
                      Visible=FALSE }
      { 1100485010;2 ;Action    ;
                      CaptionML=[ENU=Update Budget Rates;
                                 NOR=Oppdater budsjettsatser;
                                 SVE=Uppdatera budgetavgifter];
                      Promoted=No;
                      Visible=FALSE;
                      Image=UpdateUnitCost;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ActualizeBudgetRpt@1100485000 : Report 11012142;
                               BEGIN
                                 IF "Extension Fixed" THEN
                                     ERROR(Text002);

                                 TESTFIELD("Budget Fixed", FALSE);
                                 BudgetRec.RESET;
                                 BudgetRec.SETRANGE("Project No.", "Project No.");
                                 BudgetRec.SETRANGE(Adjustment, '');
                                 BudgetRec.SETRANGE("Extension Contract", "Contract No.");
                                 BudgetRec.SETRANGE(Option, '');

                                 ActualizeBudgetRpt.SETTABLEVIEW(BudgetRec);
                                 ActualizeBudgetRpt.RUN;
                               END;
                                }
      { 1210190012;2 ;Action    ;
                      CaptionML=[ENU=Generate Material Requirement;
                                 NOR=Generer Materialebehov;
                                 SVE=Generera materialbehov];
                      Visible=FALSE;
                      Image=MakeOrder;
                      OnAction=VAR
                                 BudgetLine@1210190000 : Record 11012001;
                               BEGIN
                                 //Generate Material Requirement
                                 BudgetLine.GenerateBudgetToMatReqLines("Project No.");
                               END;
                                }
      { 1100528500;2 ;Action    ;
                      AccessByPermission=TableData 11012554=I;
                      CaptionML=ENU=Create Plant &Location;
                      Visible=FALSE;
                      Image=CreateSKU;
                      OnAction=BEGIN
                                 TESTFIELD("Contract No.");
                                 TESTFIELD("Project No.");
                                 RunCreatePlantLocation(Rec);
                               END;
                                }
      { 66      ;1   ;ActionGroup;
                      CaptionML=[ENU=Import;
                                 NOR=Importer;
                                 SVE=Importera] }
      { 1100525013;2 ;ActionGroup;
                      CaptionML=[ENU=Import budget;
                                 NOR=Importer Budsjett];
                      Image=Import }
      { 67      ;3   ;Action    ;
                      CaptionML=[ENU=Im/Export Budget;
                                 NOR=Im-/eksporter Budsjett;
                                 SVE=Im-/exportera budget];
                      Image=ImportExport;
                      OnAction=VAR
                                 BudgetRec@11012001 : Record 11012001;
                                 ImportExportBudget@1100528600 : Page 11129715;
                               BEGIN
                                 IF "Extension Fixed" THEN
                                   ERROR(Text002);

                                 BudgetRec.SETRANGE("Project No.","Project No.");
                                 BudgetRec.SETRANGE("Extension Contract","Contract No.");
                                 ImportExportBudget.SETTABLEVIEW(BudgetRec);
                                 ImportExportBudget.RUN;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 68      ;3   ;Action    ;
                      CaptionML=[ENU=Import IBIS-Trad C&SV Estimate;
                                 NOR=Importer IBIS-Trad C&SV-kalkyle];
                      Visible=FALSE;
                      Image=Import;
                      OnAction=VAR
                                 ExImportSelectionFrm@11012001 : Page 11012390;
                               BEGIN
                                 IF "Extension Fixed" THEN
                                   ERROR(Text002);

                                 ExImportSelectionFrm.DetermineDefaults("Project No.",'',"Contract No.",'','TRAD-CSV');
                                 ExImportSelectionFrm.RUN;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 71      ;3   ;Action    ;
                      CaptionML=[ENU=Import IBIS-&Trad TXT Estimate;
                                 NOR=Importer IBIS-&Trad TXT-kalkyle;
                                 SVE=Importera IBIS-&Trad TXT-kalkyl];
                      Visible=FALSE;
                      Image=Import;
                      OnAction=VAR
                                 ExImportSelectionFrm@1210190000 : Page 11012390;
                               BEGIN
                                 IF "Extension Fixed" THEN
                                   ERROR(Text002);

                                 ExImportSelectionFrm.DetermineDefaults("Project No.",'',"Contract No.",'','TRAD-TXT');
                                 ExImportSelectionFrm.RUN;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100525011;3 ;Action    ;
                      CaptionML=[ENU=Import IBIS-Trad X&ML Estimate;
                                 NOR=Importer IBIS-Trad X&ML-kalkyle;
                                 SVE=Importera IBIS-Trad X&ML-kalkyl];
                      Image=Import;
                      OnAction=VAR
                                 ExImportSelectionFrm@1210190000 : Page 11012390;
                               BEGIN
                                 IF "Extension Fixed" THEN
                                   ERROR(Text002);

                                 ExImportSelectionFrm.DetermineDefaults("Project No.",'',"Contract No.",'','TRAD-XML');
                                 ExImportSelectionFrm.RUN;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100485008;3 ;Action    ;
                      CaptionML=[ENU=Import IBIS-&Infra Estimate;
                                 NOR=Importer IBIS-&Infra-kalkyle;
                                 SVE=Importera IBIS-&Infra-kalkyl];
                      Visible=FALSE;
                      Image=Import;
                      OnAction=VAR
                                 ExImportSelectionFrm@1100485000 : Page 11012390;
                               BEGIN
                                 IF "Extension Fixed" THEN
                                   ERROR(Text002);

                                 ExImportSelectionFrm.DetermineDefaults("Project No.",'',"Contract No.",'','IBIS-INFRA');
                                 ExImportSelectionFrm.RUN;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 69      ;3   ;Action    ;
                      CaptionML=[ENU=Import &CUF Estimate;
                                 NOR=Importer &CUF-kalkyle;
                                 SVE=Importera &CUF-kalkyl];
                      Image=Import;
                      OnAction=VAR
                                 ExImportSelectionFrm@11012001 : Page 11012390;
                               BEGIN
                                 IF "Extension Fixed" THEN
                                   ERROR(Text002);

                                 ExImportSelectionFrm.DetermineDefaults("Project No.",'',"Contract No.",'','CUF');
                                 ExImportSelectionFrm.RUN;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100485011;3 ;Action    ;
                      CaptionML=[ENU=Import CUF-&XML Estimate;
                                 NOR=Importer CUF-&XML-kalkyle;
                                 SVE=Importera CUF-&XML-kalkyl];
                      Image=Import;
                      OnAction=VAR
                                 ExImportSelectionFrm@1100485000 : Page 11012390;
                               BEGIN
                                 IF "Extension Fixed" THEN
                                   ERROR(Text002);

                                 ExImportSelectionFrm.DetermineDefaults("Project No.",'',"Contract No.",'','CUF-XML');
                                 ExImportSelectionFrm.RUN;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100525027;3 ;Action    ;
                      CaptionML=ENU=Import CUF-XML Estimate (GWW);
                      Visible=FALSE;
                      Image=Import;
                      OnAction=VAR
                                 ExImportSelectionFrm@1100485000 : Page 11012390;
                               BEGIN
                                 IF "Extension Fixed" THEN
                                   ERROR(Text002);

                                 ExImportSelectionFrm.DetermineDefaults("Project No.",'',"Contract No.",'','CUF-XML-WECAP');
                                 ExImportSelectionFrm.RUN;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1210190009;3 ;Action    ;
                      CaptionML=[ENU=Import &KPD Estimate (Construction);
                                 NOR=Importer &KPD-kalkyle (konstruksjon);
                                 SVE=Importera &KPD-kalkyl (konstruktion)];
                      Visible=FALSE;
                      Image=Import;
                      OnAction=VAR
                                 ExImportSelectionFrm@1210190000 : Page 11012390;
                               BEGIN
                                 IF "Extension Fixed" THEN
                                   ERROR(Text002);

                                 ExImportSelectionFrm.DetermineDefaults("Project No.",'',"Contract No.",'','KPDCONSTRUCT');
                                 ExImportSelectionFrm.RUN;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100525009;3 ;Action    ;
                      CaptionML=[ENU=Import KPD Estimate (G&WW-TXT);
                                 NOR=Importer KPD-kalkyle (G&WW-TXT)];
                      Visible=FALSE;
                      Image=Import;
                      OnAction=VAR
                                 ExImportSelectionFrm@1100525000 : Page 11012390;
                               BEGIN
                                 IF "Extension Fixed" THEN
                                   ERROR(Text002);

                                 ExImportSelectionFrm.DetermineDefaults("Project No.",'',"Contract No.",'','KPDGWW');
                                 ExImportSelectionFrm.RUNMODAL;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100409000;3 ;Action    ;
                      CaptionML=[ENU=Import KPD Estimate (&GWW-XML);
                                 NOR=Importer KPD-kalkyle (&GWW-XML)];
                      Visible=FALSE;
                      Image=Import;
                      OnAction=VAR
                                 ExImportSelectionFrm@1100409000 : Page 11012390;
                               BEGIN
                                 IF "Extension Fixed" THEN
                                   ERROR(Text002);

                                 ExImportSelectionFrm.DetermineDefaults("Project No.",'',"Contract No.",'','KPDGWW-XML');
                                 ExImportSelectionFrm.RUNMODAL;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1210190007;3 ;Action    ;
                      CaptionML=[ENU=Import &Duncan Estimate;
                                 NOR=Importer &Duncan-kalkyle;
                                 SVE=Importera &Duncan-kalkyl];
                      Visible=FALSE;
                      Image=Import;
                      OnAction=VAR
                                 ExImportSelectionFrm@1210190000 : Page 11012390;
                               BEGIN
                                 IF "Extension Fixed" THEN
                                   ERROR(Text002);

                                 ExImportSelectionFrm.DetermineDefaults("Project No.",'',"Contract No.",'','DUNCAN');
                                 ExImportSelectionFrm.RUN;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100525021;1 ;ActionGroup;
                      CaptionML=[ENU=Documents;
                                 NOR=Dokumenter;
                                 SVE=Dokument];
                      Image=Documents }
      { 65      ;2   ;Action    ;
                      CaptionML=[ENU=Edit Word Documents;
                                 NOR=Rediger Word-dokument;
                                 SVE=Redigera Word-dokument];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Word;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 Contact@1100525001 : Record 5050;
                               BEGIN
                                 TESTFIELD(Principal);
                                 IF Contact.GetContactByCustomer(Principal, Contact, TRUE) THEN
                                   EditDocuments(Contact."No.", "Principal Contact", FALSE, '');
                               END;
                                }
      { 1100525008;2 ;ActionGroup;
                      CaptionML=[ENU=Mail Documents;
                                 NOR=Send dokumenter;
                                 SVE=E-postdokument];
                      ActionContainerType=NewDocumentItems;
                      Image=MailAttachment }
      { 1100525010;3 ;Action    ;
                      CaptionML=[ENU=Principal;
                                 NOR=Oppdragsgiver;
                                 SVE=Uppdragsgivare];
                      Promoted=No;
                      Image=MailAttachment;
                      OnAction=VAR
                                 Contact@1100525003 : Record 5050;
                                 Customer@1100525000 : Record 18;
                               BEGIN
                                 TESTFIELD(Principal);
                                 IF Contact.GetContactByCustomer(Principal, Contact, TRUE) THEN BEGIN
                                   Customer.GET(Principal);
                                   EditDocuments(Contact."No.", '', TRUE, Customer."E-Mail");
                                 END;
                               END;
                                }
      { 1100525006;3 ;Action    ;
                      CaptionML=[ENU=Principal Contact;
                                 NOR=Oppdragsgivers kontakt;
                                 SVE=Referens];
                      Promoted=Yes;
                      Image=MailAttachment;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 Contact@1100525003 : Record 5050;
                                 Contact2@1100525002 : Record 5050;
                               BEGIN
                                 TESTFIELD(Principal);
                                 TESTFIELD("Principal Contact");
                                 IF Contact.GetContactByCustomer(Principal, Contact, TRUE) THEN BEGIN
                                   IF Contact2.GET("Principal Contact") THEN
                                     EditDocuments(Contact."No.", Contact2."No.", TRUE, Contact2."E-Mail");
                                 END;
                               END;
                                }
      { 1210190013;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 56      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Print;
                                 NOR=Skriv &ut;
                                 SVE=Skriv &ut] }
      { 61      ;2   ;Action    ;
                      CaptionML=[ENU=Extension Reports;
                                 NOR=ETA-rapporter;
                                 SVE=ŽTA-rapporter];
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 BudgetRec."Project No." := "Project No.";
                                 BudgetRec."Extension Contract" := "Contract No.";
                                 BudgetRec.AskProcessSummarySheet(BudgetRec);  //DP01269
                                 PrintDoc.PrintExtensionContract(Rec);
                               END;
                                }
      { 62      ;2   ;Action    ;
                      CaptionML=[ENU=Budget Reports;
                                 NOR=Budsjettrapporter;
                                 SVE=Budgetrapporter];
                      Visible=FALSE;
                      Image=Print;
                      OnAction=VAR
                                 BudgetRec@11012001 : Record 11012001;
                               BEGIN
                                 BudgetRec."Project No." := "Project No.";
                                 BudgetRec."Extension Contract" := "Contract No.";
                                 BudgetRec.AskProcessSummarySheet(BudgetRec);  //DP01269
                                 PrintDoc.PrintBudget(BudgetRec);
                               END;
                                }
      { 58      ;2   ;Action    ;
                      CaptionML=[ENU=Extension List;
                                 NOR=ETA-liste;
                                 SVE=ŽTA-lista];
                      Visible=FALSE;
                      Image=PrintReport;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 ExtRec@1100529700 : Record 11012004;
                               BEGIN
                                 BudgetRec."Project No." := "Project No.";
                                 BudgetRec."Extension Contract" := "Contract No.";
                                 BudgetRec.AskProcessSummarySheet(BudgetRec);  //DP01269
                                 ExtRec."Project No." := "Project No.";
                                 ExtRec.SETRANGE("Project No.","Project No.");
                                 REPORT.RUN(REPORT::"Extension List",TRUE,FALSE,ExtRec);
                               END;
                                }
      { 1100285011;2 ;Action    ;
                      CaptionML=[ENU=Sales Price Extension;
                                 NOR=ETA-salgspris;
                                 SVE=ŽTA-f”rs„ljningspris];
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 BudgetLine@1100285001 : Record 11012001;
                                 SalesPriceBudgetLines@1100285003 : Record 11229910;
                                 SalesPriceExtensionPage@1100285002 : Page 11128100;
                                 ok@1100285004 : Boolean;
                               BEGIN
                                 //Project No.=FIELD(Project No.),Adjustment=FILTER(''),Extension Contract=FIELD(Contract No.)
                                 //>> 160414 ITERO.AC RFC082 Remove all lines for current extension contract
                                 SalesPriceBudgetLines.SETRANGE("Project No.", "Project No.");
                                 SalesPriceBudgetLines.SETRANGE(Adjustment, '');
                                 SalesPriceBudgetLines.SETRANGE("Extension Contract", "Contract No.");
                                 IF SalesPriceBudgetLines.FINDSET(TRUE) THEN
                                   SalesPriceBudgetLines.DELETEALL;
                                 //<< 160414 ITERO.AC RFC082

                                 BudgetLine.SETRANGE("Project No.", "Project No.");
                                 BudgetLine.SETRANGE("Extension Contract", "Contract No.");
                                 BudgetLine.SETFILTER(Adjustment, '');
                                 IF BudgetLine.FINDSET(FALSE) THEN REPEAT
                                    SalesPriceBudgetLines.INIT();
                                    SalesPriceBudgetLines."Project No." := BudgetLine."Project No.";
                                    SalesPriceBudgetLines.Adjustment := BudgetLine.Adjustment;
                                    SalesPriceBudgetLines."Extension Contract" := BudgetLine."Extension Contract";
                                    SalesPriceBudgetLines.Option := BudgetLine.Option;
                                    SalesPriceBudgetLines."Line No." := BudgetLine."Line No.";

                                    // Calculation of fields done only if insterted,


                                    SalesPriceBudgetLines.VALIDATE(Principal, Principal);
                                    SalesPriceBudgetLines.VALIDATE("Cost Object", BudgetLine."Cost Object");
                                    SalesPriceBudgetLines.VALIDATE(Description, BudgetLine.Description);
                                    SalesPriceBudgetLines.VALIDATE("Description 2", BudgetLine."Description 2");

                                    SalesPriceBudgetLines.VALIDATE("Unit of Measure", BudgetLine."Unit of Measure");
                                    SalesPriceBudgetLines.VALIDATE("VAT Prod. Posting Group", "VAT Prod. Posting Group");
                                    SalesPriceBudgetLines.VALIDATE("Creation Date", TODAY);
                                    SalesPriceBudgetLines.VALIDATE("Item No.", BudgetLine."Item No.");
                                    SalesPriceBudgetLines.VALIDATE("Basic Item", BudgetLine."Basic Item");
                                    SalesPriceBudgetLines.VALIDATE("Vendor (Trade Item)", BudgetLine."Vendor (Trade Item)");
                                    SalesPriceBudgetLines.VALIDATE("Trade Item", BudgetLine."Trade Item");
                                    SalesPriceBudgetLines.VALIDATE(Manufacturer, BudgetLine.Manufacturer);
                                    SalesPriceBudgetLines.VALIDATE(Element, BudgetLine.Element);
                                    //SalesPriceBudgetLines.VALIDATE(Vendor, BudgetLine.Vendor);
                                    IF (BudgetLine."Cost Type" = BudgetLine."Cost Type"::Labor) THEN BEGIN
                                       SalesPriceBudgetLines.VALIDATE(Quantity, BudgetLine.Quantity * BudgetLine.Norm);
                                    END ELSE
                                       SalesPriceBudgetLines.VALIDATE(Quantity, BudgetLine.Quantity);
                                    //>> 160414 ITERO.AC RFC082 same logic as in report 11128101 - Copy Extension to Settlement (IMSE-020 130905)
                                    IF (BudgetLine."Cost Type" = BudgetLine."Cost Type"::Plant)          OR
                                       (BudgetLine."Cost Type" = BudgetLine."Cost Type"::Subcontracting) OR
                                       (BudgetLine."Cost Type" = BudgetLine."Cost Type"::Sundry)         OR
                                       (BudgetLine."Cost Type" = BudgetLine."Cost Type"::Material) THEN BEGIN
                                    //<< 160414 ITERO.AC RFC082
                                      IF (SalesPriceBudgetLines."Cost Price" = 0) THEN BEGIN
                                         SalesPriceBudgetLines.VALIDATE("Cost Price", BudgetLine."Price (LCY)");
                                         SalesPriceBudgetLines.VALIDATE("Basic Price", SalesPriceBudgetLines."Cost Price");
                                      END;
                                    END;  // 160414 ITERO.AC RFC082

                                    IF SalesPriceBudgetLines.INSERT(TRUE) THEN BEGIN
                                    END;
                                    //SalesPriceBudgetLines.GetBasicPrice;
                                 UNTIL BudgetLine.NEXT = 0;


                                 SalesPriceBudgetLines.SETRANGE("Project No.", BudgetLine."Project No.");
                                 SalesPriceBudgetLines.SETFILTER(Principal, '');
                                 SalesPriceBudgetLines.SETRANGE("Extension Contract", BudgetLine."Extension Contract");

                                 IF SalesPriceBudgetLines.FINDSET(FALSE) THEN REPEAT
                                    // KEY: Project No.,Adjustment,Extension Contract,Option,Line No.
                                    IF NOT BudgetLine.GET(SalesPriceBudgetLines."Project No.", SalesPriceBudgetLines.Adjustment,
                                           SalesPriceBudgetLines."Extension Contract", SalesPriceBudgetLines.Option, SalesPriceBudgetLines."Line No.") THEN
                                       SalesPriceBudgetLines.DELETE(FALSE); // Synchronises with Budget Line. Only rows on Budget Line must exist
                                 UNTIL SalesPriceBudgetLines.NEXT = 0;


                                 // Open sales price extension page
                                 SalesPriceExtensionPage.SETTABLEVIEW(SalesPriceBudgetLines);
                                 SalesPriceExtensionPage.RUN;
                               END;
                                }
      { 1100285003;2 ;Action    ;
                      CaptionML=[ENU=Settlement Sheet;
                                 NOR=Oppgj›rsskjema;
                                 SVE=Avr„kningsark];
                      RunObject=Page 11012047;
                      RunPageLink=Project No.=FIELD(Project No.);
                      Promoted=Yes;
                      PromotedCategory=Process }
      { 1100285012;2 ;Action    ;
                      CaptionML=[ENU=Copy Budget Lines to Settlement Sheet;
                                 NOR=Kopier Budsjettrader til oppgj›rsskjema;
                                 SVE=Kopiera budgetrader till avr„kningsark];
                      Promoted=Yes;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CopyExtensionToSettlement@1100285001 : Report 11128101;
                               BEGIN
                                 CopyExtensionToSettlement.SetProjectNo("Project No.", "Contract No.");
                                 CopyExtensionToSettlement.RUN;
                               END;
                                }
      { 1100525035;2 ;Separator  }
      { 1100294003;2 ;Action    ;
                      Name=<Action1100294003>;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Calculate Final Installment;
                                 NOR=Beregn Sluttfaktura;
                                 SVE=Ber„kna slutfaktura];
                      Promoted=Yes;
                      Image=AmountByPeriod;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 // SESB.I022 KD 18.07.2013 >>
                                 CLEAR(GenerateProjInstallm);
                                 GenerateProjInstallm.CalcFinalInstalmentExtension("Project No.","Contract No.");
                                 // SESB.I022 KD 18.07.2013 <<
                               END;
                                }
      { 1100525055;2 ;Separator  }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generell;
                           SVE=Allm„nt] }

    { 2   ;2   ;Field     ;
                SourceExpr="Project No.";
                Editable="Project No.Editable";
                OnValidate=BEGIN
                             //**function activated for mainprocess when project is empty for new records.
                             IF "Contract No." = '' THEN
                               GetDefaultContract;
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Project Description" }

    { 3   ;2   ;Field     ;
                SourceExpr="Contract No.";
                Importance=Promoted;
                Editable="Contract No.Editable";
                OnValidate=BEGIN
                             IF ("Contract No." <> xRec."Contract No.") AND (xRec."Contract No." <> '') THEN
                             //>> 131007 ITERO.LP SYM925
                             CurrPage.UPDATE;
                             //<<
                             //CurrPage.SAVERECORD;
                           END;

                ShowMandatory=TRUE }

    { 5   ;2   ;Field     ;
                Name=Description;
                SourceExpr=Description;
                Editable=DescriptionEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;

                ShowMandatory=TRUE }

    { 6   ;2   ;Field     ;
                SourceExpr=Principal;
                Editable=PrincipalEditable;
                OnValidate=BEGIN
                             PrincipalOnAfterValidate;
                           END;

                ShowMandatory=TRUE }

    { 8   ;2   ;Field     ;
                SourceExpr="Principal Name";
                Importance=Promoted }

    { 1100485029;2;Field  ;
                SourceExpr="Principal Contact";
                Editable="Principal ContactEditable";
                OnValidate=BEGIN
                             PrincipalContactOnAfterValidat;
                           END;
                            }

    { 1100485032;2;Field  ;
                SourceExpr="Principal Contact Name" }

    { 1210190002;2;Field  ;
                SourceExpr="Your Reference";
                Editable="Your ReferenceEditable";
                OnLookup=VAR
                           lvCommissionRec@1210190000 : Record 11012020;
                         BEGIN
                           //It would be better if a field 'Commision No.' should be added
                           lvCommissionRec.FILTERGROUP(6);
                           lvCommissionRec.SETRANGE("Project No.", "Project No.");
                           lvCommissionRec.SETRANGE(Principal, Principal);
                           lvCommissionRec.FILTERGROUP(0);
                           lvCommissionRec."Project No." := "Project No.";
                           lvCommissionRec.Principal := Principal;
                           IF (STRLEN("Your Reference") <= MAXSTRLEN(lvCommissionRec."No.")) THEN
                             lvCommissionRec."No." := "Your Reference";
                           IF PAGE.RUNMODAL(PAGE::"Commission List", lvCommissionRec) = ACTION::LookupOK THEN
                             "Your Reference" := lvCommissionRec."No.";
                         END;
                          }

    { 1100525018;2;Field  ;
                SourceExpr="Extra Throughput (Days)";
                Importance=Additional;
                Visible=FALSE }

    { 1100485000;2;Field  ;
                SourceExpr="Budget Fixed";
                Editable="Budget FixedEditable";
                OnValidate=BEGIN
                             BudgetFixedOnAfterValidate;
                           END;
                            }

    { 1100525016;2;Field  ;
                SourceExpr="Extension Fixed";
                OnValidate=BEGIN
                             ExtensionFixedOnAfterValidate;
                           END;
                            }

    { 1100285300;2;Field  ;
                SourceExpr="Extension Category";
                LookupPageID=Extension Category }

    { 1100285301;2;Field  ;
                SourceExpr="Internal Reference" }

    { 1100285102;2;Field  ;
                SourceExpr="Project Manager" }

    { 1100285100;2;Field  ;
                SourceExpr="Name Project Manager" }

    { 1100285103;2;Field  ;
                SourceExpr="Salesperson Code" }

    { 1100285101;2;Field  ;
                SourceExpr="Salesperson Name" }

    { 47  ;1   ;Part      ;
                Name=FormExtensionBudget;
                SubPageLink=Project No.=FIELD(Project No.),
                            Adjustment=FILTER(''),
                            Adjustment Filter=FILTER(''),
                            Extension Contract=FIELD(Contract No.),
                            Extension Filter=FIELD(Contract No.);
                PagePartID=Page11012004;
                Editable=FormExtensionBudgetEditable }

    { 1900366701;1;Group  ;
                CaptionML=[ENU=Contract Data;
                           NOR=Kontraktsdata;
                           SVE=Kontraktdata] }

    { 13  ;2   ;Field     ;
                SourceExpr=Status;
                Importance=Promoted;
                Editable=StatusEditable;
                OnValidate=BEGIN
                             StatusOnAfterValidate;
                           END;
                            }

    { 1100525002;2;Field  ;
                SourceExpr="Treat like Order";
                Visible=FALSE;
                Editable="Treat like OrderEditable";
                OnValidate=BEGIN
                             TreatlikeOrderOnAfterValidate;
                           END;
                            }

    { 1100525005;2;Field  ;
                ToolTipML=[ENU=Pick up the Extension in the Rough Cost and Revenue Prognosis of the Project.;
                           NOR=Anvend ETA for prosjektets forel›pige kost- og inntektsprognose.;
                           SVE=Anv„nd ŽTA f”r projektets prelimin„ra kostnads- och int„ktsprognos.];
                SourceExpr="Include in Expectation";
                Importance=Additional;
                Visible=FALSE;
                Editable="Include in ExpectationEditable" }

    { 15  ;2   ;Field     ;
                SourceExpr="Offering Date";
                Editable="Offering DateEditable" }

    { 17  ;2   ;Field     ;
                SourceExpr="Offered Amount";
                Editable="Offered AmountEditable" }

    { 1100485033;2;Field  ;
                SourceExpr="Due Date";
                Editable="Due DateEditable" }

    { 1100485040;2;Field  ;
                SourceExpr="Estimate Date";
                Importance=Additional;
                Visible=FALSE;
                Editable="Estimate DateEditable" }

    { 1100485038;2;Field  ;
                SourceExpr="Estimated Amount";
                Importance=Additional;
                Visible=FALSE;
                Editable="Estimated AmountEditable" }

    { 23  ;2   ;Field     ;
                SourceExpr="Version Date";
                Editable="Version DateEditable";
                OnValidate=BEGIN
                             CurrPage.SAVERECORD();
                           END;
                            }

    { 19  ;2   ;Field     ;
                SourceExpr="Contract Date";
                Editable="Contract DateEditable" }

    { 1100525218;2;Field  ;
                SourceExpr="Contract Currency Code";
                Importance=Additional;
                Visible=FALSE;
                Editable=ContractCurrencyCodeEditable }

    { 1100525220;2;Field  ;
                SourceExpr="Contract Amount";
                Importance=Promoted;
                Editable="Contract AmountEditable" }

    { 21  ;2   ;Field     ;
                SourceExpr="Contract Amount (LCY)";
                Editable=FALSE }

    { 1100525007;2;Field  ;
                SourceExpr="Expected Contract Amount";
                Importance=Additional;
                Visible=FALSE;
                Editable=ExpectedContractAmountEditable }

    { 1100525015;2;Field  ;
                SourceExpr="Expected Order Date";
                Importance=Additional;
                Visible=FALSE;
                Editable="Expected Order DateEditable" }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoicing;
                           NOR=Fakturering;
                           SVE=Fakturering] }

    { 1210190001;2;Field  ;
                SourceExpr="Settlement Method";
                Editable="Settlement MethodEditable" }

    { 1100485036;2;Field  ;
                SourceExpr="Contract Type";
                Editable="Contract TypeEditable";
                OnValidate=BEGIN
                             ContractTypeOnAfterValidate;
                           END;
                            }

    { 1100525012;2;Field  ;
                SourceExpr="VAT Prod. Posting Group";
                Editable=VATProdPostingGroupEditable }

    { 32  ;2   ;Field     ;
                SourceExpr="Generate Installments";
                Editable="Generate InstallmentsEditable";
                OnValidate=BEGIN
                             GenerateInstallmentsOnAfterVal;
                           END;
                            }

    { 25  ;2   ;Field     ;
                SourceExpr="Installment Scheme";
                Editable="Installment SchemeEditable";
                OnValidate=BEGIN
                             CALCFIELDS("Installment Scheme Description");
                           END;
                            }

    { 1100294000;2;Field  ;
                OptionCaptionML=[ENU=" ,,,Final Installment";
                                 NOR=" ,,,Innest†ende";
                                 SVE=" ,,,Slutfaktura"];
                SourceExpr="Method Last Installment";
                OnValidate=BEGIN
                             SetWithheldPercEditable; // SESB.I022 KD 17.07.2013
                           END;
                            }

    { 1100294001;2;Field  ;
                SourceExpr="Withheld Perc. Final Installm.";
                Editable=WithheldPercEditable }

    { 1100294002;2;Field  ;
                SourceExpr="Withheld Perc. Contract Amount";
                Editable=WithheldPercEditable }

    { 28  ;2   ;Field     ;
                SourceExpr="Installments Generated" }

    { 30  ;2   ;Field     ;
                SourceExpr="Generation Date";
                Importance=Additional }

    { 34  ;2   ;Field     ;
                SourceExpr=Finished;
                Importance=Additional;
                Visible=FALSE;
                Editable=FinishedEditable }

    { 1100485002;2;Field  ;
                SourceExpr="Specific WKA Percentages";
                Importance=Additional;
                Visible=FALSE;
                Editable=SpecificWKAPercentagesEditable;
                OnValidate=BEGIN
                             SpecificWKAPercentagesOnAfterV;
                           END;
                            }

    { 1100485004;2;Field  ;
                SourceExpr="% Labor";
                Importance=Additional;
                Visible=FALSE;
                Editable="% LaborEditable" }

    { 1100485006;2;Field  ;
                SourceExpr="% to B Account";
                Importance=Additional;
                Visible=FALSE;
                Editable="% to B AccountEditable" }

    { 1100485021;2;Field  ;
                SourceExpr=Revision;
                Importance=Additional;
                Visible=FALSE;
                Editable=RevisionEditable;
                OnValidate=BEGIN
                             ProjRec.GET("Project No.");
                             IF ProjRec.Revision AND NOT Revision THEN
                               MESSAGE(Text001);
                               RevisionOnAfterValidate;
                           END;
                            }

    { 1100485023;2;Field  ;
                SourceExpr="Revision Rule";
                Importance=Additional;
                Visible=FALSE;
                Editable="Revision RuleEditable" }

    { 1100485025;2;Field  ;
                SourceExpr="Reference Date Revision";
                Importance=Additional;
                Visible=FALSE;
                Editable=ReferenceDateRevisionEditable }

    { 1100528901;2;Field  ;
                Name=ContractorFee;
                CaptionML=ENU=Contractor Fee;
                SourceExpr=GetContractorFee;
                Importance=Additional;
                Visible=FALSE }

    { 1100529600;2;Field  ;
                SourceExpr="Surcharge % Labor";
                Importance=Additional;
                Visible=FALSE;
                Editable=SurchargePercEditable }

    { 1100529601;2;Field  ;
                SourceExpr="Surcharge % Material";
                Importance=Additional;
                Visible=FALSE;
                Editable=SurchargePercEditable }

    { 1100529602;2;Field  ;
                SourceExpr="Surcharge % Subcontr.";
                Importance=Additional;
                Visible=FALSE;
                Editable=SurchargePercEditable }

    { 1100529603;2;Field  ;
                SourceExpr="Surcharge % Plant";
                Importance=Additional;
                Visible=FALSE;
                Editable=SurchargePercEditable }

    { 1100529604;2;Field  ;
                SourceExpr="Surcharge % Sundry";
                Importance=Additional;
                Visible=FALSE;
                Editable=SurchargePercEditable }

    { 1902859001;1;Group  ;
                CaptionML=[ENU=Text;
                           NOR=Tekst;
                           SVE=Ben„mning];
                Visible=FALSE;
                GroupType=Group }

    { 36  ;2   ;Field     ;
                SourceExpr=Text;
                Visible=FALSE;
                Editable=TextEditable;
                MultiLine=Yes }

    { 1210190006;2;Field  ;
                SourceExpr="Invoice Text";
                Visible=FALSE;
                Editable="Invoice TextEditable";
                MultiLine=Yes }

    { 1210190018;2;Field  ;
                SourceExpr="Invoice Text Cost Plus";
                Visible=FALSE;
                MultiLine=Yes }

    { 1901994701;1;Group  ;
                CaptionML=[ENU=Log;
                           NOR=Logg;
                           SVE=Logg] }

    { 38  ;2   ;Field     ;
                SourceExpr="Input by" }

    { 40  ;2   ;Field     ;
                SourceExpr="Input Date" }

    { 42  ;2   ;Field     ;
                SourceExpr="Modified by" }

    { 44  ;2   ;Field     ;
                SourceExpr="Last Date Modified" }

    { 1100525028;2;Field  ;
                Name=Estimate;
                CaptionML=[ENU=Estimate;
                           NOR=Kalkyle;
                           SVE=Kalkyl];
                SourceExpr=GetEstimate;
                Visible=FALSE;
                Editable=FALSE;
                OnLookup=BEGIN
                           ShowEstimate;  //DP00260
                         END;
                          }

    { 1100525029;2;Field  ;
                Name=Sub-Estimate;
                CaptionML=[ENU=Sub-Estimate;
                           NOR=Delkalkyle;
                           SVE=Delkalkyl];
                SourceExpr=GetSubEstimate;
                Visible=FALSE;
                Editable=FALSE;
                OnLookup=BEGIN
                           ShowSubEstimate;  //DP00260
                         END;
                          }

    { 1901849101;1;Group  ;
                CaptionML=[ENU=Installment Motivation;
                           NOR=Avdragsmotivasjon;
                           SVE=Upparbetade m„ngder];
                Visible=FALSE;
                GroupType=Group }

    { 1100485015;2;Field  ;
                SourceExpr="Installm.Motivation Method";
                Visible=FALSE;
                Editable=FALSE;
                OnValidate=BEGIN
                             InstalmMotivationMethodOnAfter;
                           END;
                            }

    { 1100485014;2;Field  ;
                SourceExpr="Number of Points";
                Visible=FALSE;
                Editable=FALSE }

    { 1100485013;2;Field  ;
                SourceExpr="Invoice Installm.Motivation as";
                Visible=FALSE;
                Editable=InvoiceInstalmMotivationasEdit;
                OnValidate=BEGIN
                             InvoiceInstalmMotivationasOnAf;
                           END;
                            }

    { 1100485012;2;Field  ;
                SourceExpr="Fixed Installment Amount (LCY)";
                Visible=FALSE;
                Editable=FixedInstallmentAmountEditable }

    { 1100528902;2;Field  ;
                SourceExpr="Tender Paragraph Scheme";
                Importance=Additional }

    { 1100528903;2;Field  ;
                SourceExpr="Quantity (Tender Paragraph)";
                Importance=Additional }

    { 1100528904;2;Field  ;
                SourceExpr="Unit of Measure (Tender Par)";
                Importance=Additional }

    { 1100525000;1;Group  ;
                CaptionML=ENU=Claims;
                Visible=FALSE;
                GroupType=Group }

    { 1100529403;2;Field  ;
                Description=BI033;
                SourceExpr=Claim }

    { 1100529606;2;Field  ;
                Description=C036209;
                SourceExpr=Source }

    { 1100529406;2;Field  ;
                Lookup=No;
                SourceExpr="Currency Code" }

    { 1100525030;2;Field  ;
                Description=BI033;
                SourceExpr="Claim Status";
                OnValidate=BEGIN
                             ClaimStatusOnAfterValidate;
                           END;
                            }

    { 1100529400;2;Field  ;
                Description=BI033;
                SourceExpr="Identification Date" }

    { 1100525031;2;Field  ;
                Description=BI033;
                SourceExpr="Notification Date" }

    { 1100529404;2;Field  ;
                SourceExpr="Submission Date" }

    { 1100529405;2;Field  ;
                SourceExpr="Applied Amount" }

    { 1100529407;2;Field  ;
                SourceExpr="Probability Code" }

    { 1100529408;2;Field  ;
                SourceExpr="Probability %" }

    { 1100529401;2;Field  ;
                Description=BI033;
                SourceExpr="Final Date" }

    { 1100529409;2;Field  ;
                SourceExpr="Agreed Amount" }

    { 1100529402;2;Field  ;
                Description=BI033;
                SourceExpr="Cancelled Date" }

    { 1100525032;2;Field  ;
                Description=BI033;
                SourceExpr="Related Planning Activity" }

    { 1100525033;2;Field  ;
                Description=BI033;
                SourceExpr="Dispute Adjudication Board" }

    { 1100525034;2;Field  ;
                Description=BI033;
                SourceExpr="Dispute Adj. Board Number" }

    { 1100529410;2;Field  ;
                SourceExpr=Remarks }

    { 1100527300;2;Field  ;
                SourceExpr="Target Amount" }

    { 1100525004;0;Container;
                ContainerType=FactBoxArea }

    { 1100529900;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

    { 1210190003;1;Part   ;
                CaptionML=[ENU=Extension Budget;
                           NOR=ETA-budsjett;
                           SVE=ŽTA-budget];
                SubPageLink=Project No.=FIELD(Project No.),
                            Adjustment=FIELD(Adjustment),
                            Adjustment Filter=FILTER(''),
                            Extension Contract=FIELD(Extension Contract),
                            Extension Filter=FIELD(Extension Contract),
                            Option=FIELD(Option),
                            Option Filter=FILTER(''),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11130004;
                ProviderID=47;
                PartType=Page }

    { 1210190005;1;Part   ;
                CaptionML=[ENU=Original Budget;
                           NOR=Opprinnelig budsjett;
                           SVE=Ursprunglig budget];
                SubPageLink=Project No.=FIELD(Project No.),
                            Adjustment Filter=FILTER(''),
                            Extension Filter=FILTER(''),
                            Option Filter=FILTER('');
                PagePartID=Page11130001;
                PartType=Page }

    { 1100409002;1;Part   ;
                CaptionML=[ENU=Total Actual Budget;
                           NOR=Totalt reelt budsjett;
                           SVE=Total faktisk budget];
                SubPageLink=Project No.=FIELD(Project No.),
                            Line No.=FIELD(Line No.),
                            Adjustment=FILTER('');
                PagePartID=Page11130001;
                ProviderID=47;
                PartType=Page }

    { 1100527400;1;Part   ;
                CaptionML=ENU=Extension Contract Comments;
                SubPageLink=Project No.=FIELD(Project No.),
                            Contract No.=FIELD(Contract No.);
                PagePartID=Page11129734;
                PartType=Page }

    { 1100525023;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1100525003;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      BudgetRec@11012001 : Record 11012001;
      GenerateProjInstallm@11012002 : Codeunit 11012007;
      PrintDoc@11012003 : Codeunit 229;
      Text001@1100485000 : TextConst 'ENU=Warning: A Revision Rule is specified for the project!;NOR=Advarsel: En revisjonssregel er spesifisert for prosjektet!;SVE=Varning: En revideringsregel har inte specificerats f”r projektet!';
      ProjNr@1210190000 : Code[20];
      ProjRec@1100485001 : Record 11072003;
      Text002@1100525000 : TextConst 'ENU=Extension is fixed, Changes not allowed.;NOR=ETA er fast, endring ikke tillatt.;SVE=ŽTA „r fast, „ndring inte till†ten.';
      DPA_IsHardFilter@1100000999 : Boolean;
      FixedProjectNo@1100525001 : Boolean;
      "Revision RuleEditable"@19048109 : Boolean INDATASET;
      "Installment SchemeEditable"@19016292 : Boolean INDATASET;
      "Generate InstallmentsEditable"@19053430 : Boolean INDATASET;
      InvoiceInstalmMotivationasEdit@19010898 : Boolean INDATASET;
      SpecificWKAPercentagesEditable@19049375 : Boolean INDATASET;
      "% LaborEditable"@19078728 : Boolean INDATASET;
      "% to B AccountEditable"@19001286 : Boolean INDATASET;
      "Treat like OrderEditable"@19017796 : Boolean INDATASET;
      ReverseButtonVisible@19017415 : Boolean INDATASET;
      "Project No.Editable"@19028701 : Boolean INDATASET;
      "Contract No.Editable"@19070282 : Boolean INDATASET;
      DescriptionEditable@19061412 : Boolean INDATASET;
      PrincipalEditable@19061874 : Boolean INDATASET;
      "Principal ContactEditable"@19050270 : Boolean INDATASET;
      "Your ReferenceEditable"@19021040 : Boolean INDATASET;
      "Budget FixedEditable"@19058142 : Boolean INDATASET;
      StatusEditable@19074876 : Boolean INDATASET;
      "Include in ExpectationEditable"@19030353 : Boolean INDATASET;
      "Offering DateEditable"@19032438 : Boolean INDATASET;
      "Offered AmountEditable"@19066444 : Boolean INDATASET;
      "Due DateEditable"@19054989 : Boolean INDATASET;
      VATProdPostingGroupEditable@19052549 : Boolean INDATASET;
      "Estimate DateEditable"@19030875 : Boolean INDATASET;
      "Estimated AmountEditable"@19035801 : Boolean INDATASET;
      "Version DateEditable"@19008982 : Boolean INDATASET;
      "Contract DateEditable"@19043329 : Boolean INDATASET;
      "Contract AmountEditable"@19002386 : Boolean INDATASET;
      "Expected Order DateEditable"@19024855 : Boolean INDATASET;
      "Settlement MethodEditable"@19035797 : Boolean INDATASET;
      "Contract TypeEditable"@19052009 : Boolean INDATASET;
      FinishedEditable@19037742 : Boolean INDATASET;
      RevisionEditable@19056319 : Boolean INDATASET;
      ReferenceDateRevisionEditable@19050323 : Boolean INDATASET;
      "Invoice TextEditable"@19078721 : Boolean INDATASET;
      TextEditable@19008086 : Boolean INDATASET;
      FixedInstallmentAmountEditable@19012693 : Boolean INDATASET;
      FormExtensionBudgetEditable@19056872 : Boolean INDATASET;
      ContractCurrencyCodeEditable@1100529400 : Boolean INDATASET;
      SurchargePercEditable@1100529600 : Boolean INDATASET;
      ExpectedContractAmountEditable@1100529601 : Boolean INDATASET;
      WithheldPercEditable@1101285000 : Boolean INDATASET;

    PROCEDURE Setfilter@1210190000(lProjCde@1210190000 : Code[20]);
    BEGIN
      FILTERGROUP(2);
      SETRANGE("Project No.",lProjCde);
      FILTERGROUP(0);
    END;

    PROCEDURE UpdateEditable@1100525003();
    BEGIN
      //Tab 1
      "Project No.Editable" := (NOT "Extension Fixed") AND (NOT FixedProjectNo);
      "Contract No.Editable" := NOT "Extension Fixed";
      DescriptionEditable := NOT "Extension Fixed";
      PrincipalEditable := NOT "Extension Fixed";
      "Principal ContactEditable" := NOT "Extension Fixed";
      "Your ReferenceEditable" := NOT "Extension Fixed";
      "Budget FixedEditable" := NOT "Extension Fixed";
      //Tab 2
      StatusEditable := NOT "Extension Fixed";
      "Treat like OrderEditable" := NOT "Extension Fixed";
      "Include in ExpectationEditable" := NOT "Extension Fixed";
      "Offering DateEditable" := NOT "Extension Fixed";
      "Offered AmountEditable" := NOT "Extension Fixed";
      "Due DateEditable" := NOT "Extension Fixed";
      VATProdPostingGroupEditable := NOT "Extension Fixed";
      "Estimate DateEditable" := NOT "Extension Fixed";
      "Estimated AmountEditable" := NOT "Extension Fixed";
      "Version DateEditable" := NOT "Extension Fixed";
      "Contract DateEditable" := NOT "Extension Fixed";
      "Contract AmountEditable" := NOT "Extension Fixed";
      "Expected Order DateEditable" := NOT "Extension Fixed";
      ContractCurrencyCodeEditable := NOT "Extension Fixed";
      ExpectedContractAmountEditable := (NOT "Extension Fixed") AND (Status < Status::Order); //C036112.n
      //Tab 3
      "Settlement MethodEditable" := NOT "Extension Fixed";
      "Contract TypeEditable" := NOT "Extension Fixed";
      "Generate InstallmentsEditable" := NOT "Extension Fixed";
      IF "Generate Installments" AND (NOT "Extension Fixed") THEN
        "Installment SchemeEditable" := NOT "Extension Fixed";

      FinishedEditable := NOT "Extension Fixed";
      SpecificWKAPercentagesEditable := NOT "Extension Fixed";
      IF "Specific WKA Percentages" THEN BEGIN
        "% LaborEditable" := NOT "Extension Fixed";
        "% to B AccountEditable" := NOT "Extension Fixed";
      END;

      RevisionEditable := NOT "Extension Fixed";
      IF Revision THEN BEGIN
        "Revision RuleEditable" := NOT "Extension Fixed";
        ReferenceDateRevisionEditable := NOT "Extension Fixed";
      END;

      SurchargePercEditable := NOT "Extension Fixed";
      SetWithheldPercEditable; // SESB.I022 KD 17.07.2013

      //Tab 4
      "Invoice TextEditable" := NOT "Extension Fixed";
      TextEditable := NOT "Extension Fixed";

      //Tab 5

      //Tab 6
      InvoiceInstalmMotivationasEdit := NOT "Extension Fixed";
      IF "Invoice Installm.Motivation as" = "Invoice Installm.Motivation as"::"Fixed Installment Amounts" THEN
        FixedInstallmentAmountEditable := NOT "Extension Fixed";

      FormExtensionBudgetEditable := NOT "Extension Fixed";
    END;

    PROCEDURE StartReleaseExtContract@1100525006();
    VAR
      ReleaseExtContract@1100525000 : Page 11125023;
    BEGIN
      //kzwerver, 08-12-2010
      TESTFIELD("Extension Fixed", FALSE);
      CheckCostObject("Project No.", "Contract No.");
      ReleaseExtContract.InitExtensionContract(Rec);
      ReleaseExtContract.RUNMODAL;

      SetInstallmentsSelections(ReleaseExtContract.GetInstallmentsSelections);
      SetInstallmentsChargable;
    END;

    LOCAL PROCEDURE PrincipalOnAfterValidate@19057551();
    BEGIN
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE BudgetFixedOnAfterValidate@19049204();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE PrincipalContactOnAfterValidat@19054694();
    BEGIN
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE ExtensionFixedOnAfterValidate@19026059();
    BEGIN
      CurrPage.UPDATE(TRUE);

      UpdateEditable;
    END;

    LOCAL PROCEDURE StatusOnAfterValidate@19072689();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE ClaimStatusOnAfterValidate@1100528101();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE TreatlikeOrderOnAfterValidate@19032187();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE GenerateInstallmentsOnAfterVal@19041574();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE SpecificWKAPercentagesOnAfterV@19002606();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE RevisionOnAfterValidate@19054813();
    BEGIN
      "Revision RuleEditable" := Revision;
    END;

    LOCAL PROCEDURE ContractTypeOnAfterValidate@19077313();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE InvoiceInstalmMotivationasOnAf@19001932();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE InstalmMotivationMethodOnAfter@19079722();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OriginalBudgetOnDeactivate@19001162();
    BEGIN
      ReverseButtonVisible := (TRUE);
    END;

    LOCAL PROCEDURE AdjustmentBudgetOnDeactivate@19023039();
    BEGIN
      ReverseButtonVisible := (TRUE);
    END;

    LOCAL PROCEDURE ProjectNoOnActivate@19059112();
    BEGIN
      ProjNr := "Project No.";
    END;

    LOCAL PROCEDURE GenerateInstallmentsOnActivate@19074589();
    BEGIN
      "Generate InstallmentsEditable" := (
        ("Settlement Method" = "Settlement Method"::"Fixed Price") AND
        ("Installments Generated" = FALSE));
    END;

    LOCAL PROCEDURE OriginalBudgetOnActivate@19056513();
    BEGIN
      ReverseButtonVisible := (FALSE);
    END;

    LOCAL PROCEDURE AdjustmentBudgetOnActivate@19050240();
    BEGIN
      ReverseButtonVisible := (FALSE);
    END;

    LOCAL PROCEDURE SetWithheldPercEditable@1100294000();
    BEGIN
      WithheldPercEditable := "Method Last Installment" = "Method Last Installment"::"Final Installment"; // SESB.I022 KD 22.07.2013
    END;

    LOCAL PROCEDURE UpdateSalesPriceBudgetLines@1100528000();
    VAR
      BudgetLine@1100528003 : Record 11012001;
      SalesPriceBudgetLines@1100528002 : Record 11229910;
      SalesPriceExtensionPage@1100528001 : Page 11072038;
    BEGIN
      //DP00789-RFC20
      BudgetLine.SETRANGE("Project No.", "Project No.");
      BudgetLine.SETRANGE("Extension Contract", "Contract No.");
      BudgetLine.SETFILTER(Adjustment, '');
      IF BudgetLine.FINDSET(FALSE) THEN REPEAT
         SalesPriceBudgetLines.INIT();
         SalesPriceBudgetLines."Project No." := BudgetLine."Project No.";
         SalesPriceBudgetLines.Adjustment := BudgetLine.Adjustment;
         SalesPriceBudgetLines."Extension Contract" := BudgetLine."Extension Contract";
         SalesPriceBudgetLines.Option := BudgetLine.Option;
         SalesPriceBudgetLines."Line No." := BudgetLine."Line No.";

         // Calculation of fields done only if insterted,

         SalesPriceBudgetLines.VALIDATE(Principal, Principal);
         SalesPriceBudgetLines.VALIDATE("Cost Object", BudgetLine."Cost Object");
         IF BudgetLine."Wage Component" <> '' THEN
           SalesPriceBudgetLines.VALIDATE("Wage Component", BudgetLine."Wage Component");  //C032135 (initial value from Cost Object)
         SalesPriceBudgetLines.VALIDATE(Description, BudgetLine.Description);
         SalesPriceBudgetLines.VALIDATE("Description 2", BudgetLine."Description 2");

         SalesPriceBudgetLines.VALIDATE("Unit of Measure", BudgetLine."Unit of Measure");
         SalesPriceBudgetLines.VALIDATE("VAT Prod. Posting Group", "VAT Prod. Posting Group");
         SalesPriceBudgetLines.VALIDATE("Creation Date", TODAY);
         SalesPriceBudgetLines.VALIDATE("Item No.", BudgetLine."Item No.");
         SalesPriceBudgetLines.VALIDATE("Basic Item", BudgetLine."Basic Item");
         SalesPriceBudgetLines.VALIDATE("Vendor (Trade Item)", BudgetLine."Vendor (Trade Item)");
         SalesPriceBudgetLines.VALIDATE("Trade Item", BudgetLine."Trade Item");
         SalesPriceBudgetLines.VALIDATE(Manufacturer, BudgetLine.Manufacturer);
         SalesPriceBudgetLines.VALIDATE(Element, BudgetLine.Element);
         //SalesPriceBudgetLines.VALIDATE(Vendor, BudgetLine.Vendor);
         IF (BudgetLine."Cost Type" = BudgetLine."Cost Type"::Labor) THEN BEGIN
            SalesPriceBudgetLines.VALIDATE("Hour Rate Code", BudgetLine."Rate Code");  //db, 05-06-15: assumed to be same code for Hour Rate as Budget Rate
            SalesPriceBudgetLines.VALIDATE(Quantity, BudgetLine.Quantity * BudgetLine.Norm);
         END ELSE BEGIN
            SalesPriceBudgetLines.VALIDATE(Quantity, BudgetLine.Quantity);
         END;
         IF (SalesPriceBudgetLines."Cost Price" = 0) THEN BEGIN
            SalesPriceBudgetLines.VALIDATE("Cost Price", BudgetLine."Price (LCY)");
            SalesPriceBudgetLines.VALIDATE("Basic Price", SalesPriceBudgetLines."Cost Price");
         END;

         IF SalesPriceBudgetLines.INSERT(TRUE) THEN BEGIN
         END;
         //SalesPriceBudgetLines.GetBasicPrice;
      UNTIL BudgetLine.NEXT = 0;


      SalesPriceBudgetLines.SETRANGE("Project No.", BudgetLine."Project No.");
      SalesPriceBudgetLines.SETFILTER(Principal, '');
      SalesPriceBudgetLines.SETRANGE("Extension Contract", BudgetLine."Extension Contract");

      IF SalesPriceBudgetLines.FINDSET(FALSE) THEN REPEAT
         // KEY: Project No.,Adjustment,Extension Contract,Option,Line No.
         IF NOT BudgetLine.GET(SalesPriceBudgetLines."Project No.", SalesPriceBudgetLines.Adjustment,
                SalesPriceBudgetLines."Extension Contract", SalesPriceBudgetLines.Option, SalesPriceBudgetLines."Line No.") THEN
            SalesPriceBudgetLines.DELETE(FALSE); // Synchronises with Budget Line. Only rows on Budget Line must exist
      UNTIL SalesPriceBudgetLines.NEXT = 0;

      // Open sales price extension page
      SalesPriceExtensionPage.SETTABLEVIEW(SalesPriceBudgetLines);
      SalesPriceExtensionPage.RUN;
    END;

    LOCAL PROCEDURE CopyExtensionToCostPlus@1100525000();
    VAR
      CopyExtensionToSettlement@1100525000 : Report 11020309;
    BEGIN
      //DP00789-RFC20
      CopyExtensionToSettlement.SetProjectNo("Project No.", "Contract No.");
      CopyExtensionToSettlement.RUN;
    END;

    BEGIN
    {
      4PS, 11-11-13, Report "Budget - Element" and "Budget - Cost Object" and "Extensions"no longer supported in NAV2013
      //DP00789-RFC20 Added action SalesPriceExtension and CopyBudgetLinesToSettlementSheet
      4PS 14-06-16 UKR-C24997 KD: Use extensions to record claims (BI033) - Added tab Claims
      SESB.I022 Final Instalment
         KD 17.07.2013 Control "Method Last Installment" added on tab Invoicicng
         KD 17.07.2013 Control "Withheld Perc. Final Instalm." added on tab Invoicicng
         KD 17.07.2013 Control "Withheld Perc. Contract Amount" added on tab Invoicicng
         KD 17.07.2013 Trigger UpdateEditable changed
         KD 18.07.2013 Action "Calculate Final Instalment" added
         KD 22.07.2013 Trigger SetWithheldPercEditable added
      4PSSE.I020 130716 Added action "Sales Price Extension" under Function

      131007 ITERO.LP SYM925. Added CurrPage.UPDATE to "Contract No."-OnValidate. A Factbox was halting otherwise.
      150202 ITERO.WG IME273  extension contract no with 4 numbers if Symbrio is active
      160314 ITERO.SB RAD-201 New fields, "Extension Category" and "Internal Reference"
      160414 ITERO.AC RFC082 Avoid price calculation for hours (same as IMSE-020 130905) and avoid display old calculation of Sales Price Budget Lines
      170705 ITERO.FH PURE#136430 Changed property for <Action1100528002>ŽTA-F”r„ljningspris to Visible = False
      200408 ORANGO.EE - Added Salesperson and Project Manager
    }
    END.
  }
}

