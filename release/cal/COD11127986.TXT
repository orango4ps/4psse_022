OBJECT Codeunit 11127986 ProcessAllInvoices
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    Permissions=TableData 11127980=rm;
    OnRun=VAR
            PurchaseHeader@1100285100 : Record 38;
          BEGIN
            //>>170517
            SymbrioPurchaseInvHeader.SETFILTER("Error Message",STRSUBSTNO(Text001,'*'));
            SymbrioPurchaseInvHeader.SETFILTER(OrderHeadID,'<>%1','');
            IF SymbrioPurchaseInvHeader.FINDSET(FALSE) THEN
            REPEAT
              IF PurchaseHeader.GET(PurchaseHeader."Document Type"::Order, SymbrioPurchaseInvHeader.OrderHeadID) THEN BEGIN
                SymbrioPurchaseInvHeader2.GET(SymbrioPurchaseInvHeader.InvoiceHeadID,SymbrioPurchaseInvHeader.OrderHeadID,
                                              SymbrioPurchaseInvHeader."DateTime Received",SymbrioPurchaseInvHeader."EntryNo in BatchRead",
                                              SymbrioPurchaseInvHeader."Date Received",SymbrioPurchaseInvHeader."Time Received");
                SymbrioPurchaseInvHeader2."Error Message" := '';
                SymbrioPurchaseInvHeader2.MODIFY(FALSE);
              END;
            UNTIL SymbrioPurchaseInvHeader.NEXT = 0;
            COMMIT;
            SymbrioPurchaseInvHeader.SETRANGE(OrderHeadID);
            SymbrioPurchaseInvHeader.RESET;
            //<<170517

            //>>SYM101
            SymbrioPurchaseInvHeader.SETFILTER("Error Message",'%1','');
            SymbrioPurchaseInvHeader.SETRANGE(InvoiceStatus,'SubmittedAwaitingReceipt');
            IF SymbrioPurchaseInvHeader.FINDSET(FALSE) THEN REPEAT
              SymbrioPurchaseInvHeader2.GET(SymbrioPurchaseInvHeader.InvoiceHeadID,SymbrioPurchaseInvHeader.OrderHeadID,
                                            SymbrioPurchaseInvHeader."DateTime Received",SymbrioPurchaseInvHeader."EntryNo in BatchRead",
                                            SymbrioPurchaseInvHeader."Date Received",SymbrioPurchaseInvHeader."Time Received");
              IF NOT ProcessInvoice.RUN(SymbrioPurchaseInvHeader2) THEN BEGIN
                SymbrioErrorLog.InsertNewErrorLine(GETLASTERRORTEXT,GETLASTERRORCODE,'');
                SymbrioPurchaseInvHeader2.VALIDATE("Error Message", GETLASTERRORTEXT);
                SymbrioPurchaseInvHeader2.MODIFY(TRUE);
              END;
              COMMIT;
            UNTIL SymbrioPurchaseInvHeader.NEXT = 0;

            //remove status-filter, process all other
            SymbrioPurchaseInvHeader.SETFILTER(InvoiceStatus,'<>SubmittedAwaitingReceipt');
            //<<SYM101

            // Process all orders in Symbrio Purchase Inv. Header table
            IF SymbrioPurchaseInvHeader.FINDSET(FALSE) THEN REPEAT
              SymbrioPurchaseInvHeader2.GET(SymbrioPurchaseInvHeader.InvoiceHeadID,SymbrioPurchaseInvHeader.OrderHeadID,
                                            SymbrioPurchaseInvHeader."DateTime Received",SymbrioPurchaseInvHeader."EntryNo in BatchRead",
                                            SymbrioPurchaseInvHeader."Date Received",SymbrioPurchaseInvHeader."Time Received");
            //  SymbrioPurchaseInvHeader2:=SymbrioPurchaseInvHeader;
            //  IF SymbrioPurchaseInvHeader2."Error Message" = '' THEN BEGIN
              IF NOT ProcessInvoice.RUN(SymbrioPurchaseInvHeader2) THEN BEGIN
                SymbrioErrorLog.InsertNewErrorLine(GETLASTERRORTEXT,GETLASTERRORCODE,'');
                SymbrioPurchaseInvHeader2.VALIDATE("Error Message", GETLASTERRORTEXT);
                SymbrioPurchaseInvHeader2.MODIFY(TRUE);
              END;
              COMMIT;
            //  END;
            UNTIL SymbrioPurchaseInvHeader.NEXT = 0;
          END;

  }
  CODE
  {
    VAR
      SymbrioPurchaseInvHeader@1100285000 : Record 11127980;
      SymbrioPurchaseInvHeader2@1100285001 : Record 11127980;
      ProcessInvoice@1100285002 : Codeunit 11127987;
      SymbrioErrorLog@1100285003 : Record 11127987;
      Text001@1100285101 : TextConst 'ENU=Order: %1 doesn''t exist;NOR=Ordre: %1 finnes ikke;SVE=Order: %1 finns inte';

    BEGIN
    {
      SYM939 Created
      150518 ITERO.DL Store errormessage instead of codestack
      151215 ITERO.DL SYM101 read and process buffer by <invoicestatus>, no extra key needed due to small table (<2000 rows)
                      code clean-up
    }
    END.
  }
}

