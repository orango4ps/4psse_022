OBJECT Table 11020588 Loan Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD(Date);
               TestDatePos;
             END;

    OnDelete=BEGIN
               TESTFIELD(Realised, FALSE);
               IF Date <= TODAY THEN BEGIN;
                 IF NOT AlreadyConfirmed THEN BEGIN;
                   IF NOT CONFIRM(STRSUBSTNO(Text001, Date)) THEN BEGIN;
                     AlreadyConfirmed := FALSE;
                     ERROR(Text000);
                   END ELSE BEGIN;
                     AlreadyConfirmed := TRUE;
                   END;
                 END;
               END;
             END;

    CaptionML=[ENU=Loan Line;
               NOR=LÜnerad;
               SVE=LÜnerad];
    LookupPageID=Page11124873;
    DrillDownPageID=Page11124873;
  }
  FIELDS
  {
    { 10  ;   ;Loan Header Code    ;Code10        ;TableRelation="Loan Header";
                                                   CaptionML=[ENU=Loan Header Code;
                                                              NOR=Tittelkode for lÜn;
                                                              SVE=Rubrikkod fîr lÜn];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr];
                                                   Editable=No }
    { 30  ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                CheckTotalAmount;
                                                                CheckModify;
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              NOR=Belõp;
                                                              SVE=Belopp] }
    { 40  ;   ;Date                ;Date          ;OnValidate=BEGIN
                                                                CheckModify;
                                                                IF Date <> 0D THEN BEGIN;
                                                                  VALIDATE(Year, DATE2DMY(Date, 3));
                                                                END ELSE BEGIN;
                                                                  VALIDATE(Year, 0);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date;
                                                              NOR=Dato;
                                                              SVE=Datum];
                                                   NotBlank=Yes }
    { 50  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                CheckModify;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=Installment,Interest,Last Installment;
                                                                    NOR=Betalingsplan,Rente,Siste avdrag;
                                                                    SVE=Betalplan,RÑnta,Sista avbetalning];
                                                   OptionString=Installment,Interest,Last Installment }
    { 60  ;   ;Year                ;Integer       ;CaptionML=[ENU=Year;
                                                              NOR=èr;
                                                              SVE=èr];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 70  ;   ;Currency Code       ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Loan Header"."Currency Code" WHERE (Code=FIELD(Loan Header Code)));
                                                   TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod];
                                                   Editable=No }
    { 80  ;   ;Used Amount For Calculation;Decimal;CaptionML=[ENU=Used Amount For Calculation;
                                                              NOR=Brukt belõp for beregning;
                                                              SVE=AnvÑnt belopp fîr berÑkning];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 85  ;   ;Used Amount For Calculation II;Decimal;
                                                   CaptionML=[ENU=Used Amount For Calculation II;
                                                              NOR=Brukt belõp for beregning II;
                                                              SVE=AnvÑnt belopp fîr berÑkning II];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 90  ;   ;Relation            ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Loan Header".Relation WHERE (Code=FIELD(Loan Header Code)));
                                                   CaptionML=[ENU=Relation;
                                                              NOR=Relasjon;
                                                              SVE=Relation];
                                                   Editable=No }
    { 100 ;   ;Interest % Group    ;Text10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Loan Header"."Interest % Group" WHERE (Code=FIELD(Loan Header Code)));
                                                   CaptionML=[ENU=Interest % Group;
                                                              NOR=Rente %, Gruppe;
                                                              SVE=RÑnta %, grupp];
                                                   Editable=No }
    { 110 ;   ;Description         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Loan Header".Description WHERE (Code=FIELD(Loan Header Code)));
                                                   CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning];
                                                   Editable=No }
    { 120 ;   ;Type Loan           ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Loan Header".Type WHERE (Code=FIELD(Loan Header Code)));
                                                   CaptionML=[ENU=Type Loan;
                                                              NOR=LÜnetype;
                                                              SVE=LÜnetyp];
                                                   OptionCaptionML=[ENU=Lent,Borrowed;
                                                                    NOR=UtlÜnt,LÜnt;
                                                                    SVE=UtlÜnat,LÜnat];
                                                   OptionString=Uitgeleend,Opgenomen;
                                                   Editable=No }
    { 130 ;   ;Relation Type       ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Loan Header"."Relation Type" WHERE (Code=FIELD(Loan Header Code)));
                                                   CaptionML=[ENU=Relation Type;
                                                              NOR=Relasjonstype;
                                                              SVE=Relationstyp];
                                                   OptionCaptionML=[ENU=Intern,Extern;
                                                                    NOR=Internt,Eksternt;
                                                                    SVE=Internt,Externt];
                                                   OptionString=Intern,Extern;
                                                   Editable=No }
    { 140 ;   ;Realised            ;Boolean       ;OnValidate=BEGIN
                                                                CheckRealised;
                                                              END;

                                                   CaptionML=[ENU=Realised;
                                                              NOR=Realisert;
                                                              SVE=Realiserad] }
  }
  KEYS
  {
    {    ;Loan Header Code,Line No.               ;Clustered=Yes }
    {    ;Loan Header Code,Type                   ;SumIndexFields=Amount }
    {    ;Type,Loan Header Code,Date              ;SumIndexFields=Amount }
    {    ;Loan Header Code,Type,Realised          ;SumIndexFields=Amount }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100525001 : TextConst 'ENU=Process has been interrupted to respect the warning.;NOR=Prosessen ble avbrutt av hensyn til advarselen.;SVE=Processen har avbrutits med hÑnsyn till varningen.';
      Text001@1100525000 : TextConst 'ENU=The Date (%1) of the Loan Line is before today. Do you want to delete the Loan Line?;NOR=Datoen (%1) for lÜneraden er fõr idag. Vil du fjerne lÜneraden?;SVE=Datumet (%1) fîr lÜneraden Ñr fîre idag. Vill du ta bort lÜneraden?';
      AlreadyConfirmed@1100525002 : Boolean;
      Text002@1100525003 : TextConst 'ENU=The New Date (%1) is before the Date (%2) of the previous line. Insert the Line on the right spot.;NOR=Den nye datoen (%1) er fõr datoen (%2) pÜ den forrige raden. Sett inn raden pÜ riktig sted.;SVE=Det nya datumet (%1) Ñr fîre datumet (%2) pÜ den fîregÜende raden. Infoga raden pÜ rÑtt stÑlle.';
      Text003@1100525004 : TextConst 'ENU=The New Date (%1) is after the Date (%2) of the next line. Insert the Line on the right spot.;NOR=Den nye datoen (%1) er etter datoen (%2) pÜ neste rad. Sett inn raden pÜ riktig sted.;SVE=Det nya datumet (%1) Ñr efter datumet (%2) pÜ nÑsta rad. Infoga raden pÜ rÑtt stÑlle.';
      Text004@1100525005 : TextConst 'ENU=The Total Installment Amount of line (%1) is bigger than the amount of the Loan (%2).;NOR=Det totale avdragsbelõpet pÜ rad (%1) er stõrre enn lÜnebelõpet (%2).;SVE=Det totala avbetalningsbeloppet pÜ rad (%1) Ñr stîrre Ñn lÜnebeloppet (%2).';
      Text005@1100525006 : TextConst 'ENU=Date (%1) is in the future. Do you want to continue?;NOR=Datoen (%1) er i framtiden. Vil du fortsette?;SVE=Datumet (%1) Ñr i framtiden. Vill du fortsÑtta?';
      Text006@1100525007 : TextConst 'ENU=Date (%1) is in the past. Do you want to conntinue?;NOR=Datoen (%1) er i fortiden. Vil du fortsette?;SVE=Datumet (%1) Ñr i det fîrflutna. Vill du fortsÑtta?';
      Text008@1100525009 : TextConst 'ENU=The Total Installment Amount Realised of line (%1) is bigger than the amount of the Loan (%2).;NOR=Det totale avdragsbelõpet som er realisert pÜ rad (%1) er stõrre enn lÜnebelõpet (%2).;SVE=Det totala avbetalningsbeloppet som har realiserats pÜ rad (%1) Ñr stîrre Ñn lÜnebeloppet (%2).';

    PROCEDURE TestDatePos@1100525000();
    VAR
      LoanLine@1100525000 : Record 11020588;
    BEGIN
      IF Date = 0D THEN EXIT;
      LoanLine.RESET;
      LoanLine.SETCURRENTKEY(LoanLine."Loan Header Code", LoanLine."Line No.");
      LoanLine.SETRANGE("Loan Header Code", "Loan Header Code");

      LoanLine.SETFILTER("Line No.", '<%1', "Line No.");
      IF LoanLine.FINDSET THEN BEGIN;
        LoanLine.FINDLAST;
        IF LoanLine.Date > Date THEN ERROR(Text002, Date, LoanLine.Date);
      END;

      LoanLine.SETFILTER("Line No.", '>%1', "Line No.");
      IF LoanLine.FINDSET THEN BEGIN;
        LoanLine.FINDFIRST;
        IF LoanLine.Date < Date THEN ERROR(Text003, Date, LoanLine.Date);
      END;
    END;

    PROCEDURE CheckTotalAmount@1100525001();
    VAR
      LoanLine@1100525000 : Record 11020588;
      LoanHeader@1100525002 : Record 11020587;
      TotalAmount@1100525001 : Decimal;
    BEGIN
      TotalAmount := 0;
      IF (Type <> Type::Installment) AND
         (Type <> Type::"Last Installment") THEN EXIT;
      LoanLine.RESET;
      LoanLine.SETCURRENTKEY("Loan Header Code", Type);
      LoanLine.SETRANGE("Loan Header Code", "Loan Header Code");
      LoanLine.SETFILTER(Type, '%1|%2', Type::Installment, Type::"Last Installment");
      LoanLine.SETFILTER("Line No.", '<>%1', "Line No.");
      IF LoanLine.FINDSET THEN REPEAT;
        TotalAmount += LoanLine.Amount;
      UNTIL LoanLine.NEXT = 0;
      TotalAmount += Amount;
      LoanHeader.GET("Loan Header Code");
      IF TotalAmount > LoanHeader.Amount THEN MESSAGE(Text004, TotalAmount, LoanHeader.Amount);
    END;

    PROCEDURE CheckRealised@1100525002();
    VAR
      LoanLine@1100525002 : Record 11020588;
      LoanHeader@1100525001 : Record 11020587;
      TotalAmount@1100525000 : Decimal;
    BEGIN
      IF Realised THEN BEGIN;
        IF Date > TODAY THEN BEGIN;
          IF NOT CONFIRM(STRSUBSTNO(Text005, Date)) THEN ERROR(Text000);
        END;
      END ELSE BEGIN;
        IF Date < TODAY THEN BEGIN;
          IF NOT CONFIRM(STRSUBSTNO(Text006, Date)) THEN ERROR(Text000);
        END;
      END;

      IF Realised THEN BEGIN;  //M23718 sn
        TotalAmount := 0;
        IF (Type <> Type::Installment) AND
           (Type <> Type::"Last Installment") THEN
          EXIT;
        LoanLine.RESET;
        LoanLine.SETCURRENTKEY("Loan Header Code", Type);
        LoanLine.SETRANGE("Loan Header Code", "Loan Header Code");
        LoanLine.SETFILTER(Type, '%1|%2', Type::Installment, Type::"Last Installment");
        LoanLine.SETFILTER("Line No.", '<>%1', "Line No.");
        LoanLine.SETRANGE(Realised, TRUE);
        IF LoanLine.FINDSET THEN REPEAT;
          TotalAmount += LoanLine.Amount;
        UNTIL LoanLine.NEXT = 0;
        TotalAmount += Amount;
        LoanHeader.GET("Loan Header Code");
        IF TotalAmount > LoanHeader.Amount THEN
          ERROR(Text008, TotalAmount, LoanHeader.Amount);
      END;                    //M23718 en
    END;

    PROCEDURE CheckModify@1100525003();
    BEGIN
      TESTFIELD(Realised, FALSE);
    END;

    BEGIN
    END.
  }
}

