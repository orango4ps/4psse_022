OBJECT Page 11128008 AD memberOf
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Member in AD groups that exits in NAV;
               SVE=Medlem i AD grupper som finns i NAV];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table97;
    PageType=ListPart;
    SourceTableTemporary=Yes;
    RefreshOnActivate=Yes;
    ShowFilter=No;
    OnOpenPage=BEGIN
                 // IF ISEMPTY THEN
                 //  SearchUserbyLDAPDomain('');
               END;

    ActionList=ACTIONS
    {
      { 1100285105;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100285106;1 ;Action    ;
                      Name=UpdateList;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 SearchUserbyLDAPDomain('');
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100285100;0;Container;
                ContainerType=ContentArea }

    { 1100285101;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100285102;2;Field  ;
                CaptionML=[ENU=User Name;
                           SVE=Anv„ndare];
                SourceExpr="Created by" }

    { 1100285103;2;Field  ;
                SourceExpr="Comment Code";
                ShowCaption=No }

    { 1100285104;2;Field  ;
                CaptionML=[ENU=AD Group;
                           SVE=AD Grupp];
                SourceExpr=Comment }

  }
  CODE
  {

    LOCAL PROCEDURE SearchUserbyLDAPDomain@1100285111(loginName@1100285101 : Text) : Text;
    VAR
      DirectoryEntry@1100285110 : DotNet "'System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.DirectoryServices.DirectoryEntry";
      DirectorySearcher@1100285109 : DotNet "'System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.DirectoryServices.DirectorySearcher";
      SearchResultColl@1100285107 : DotNet "'System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.DirectoryServices.SearchResultCollection";
      ADName@1100285102 : Text;
      i@1100285103 : Integer;
      j@1100285105 : Integer;
      _UserID@1100285104 : Text;
      _memberOf@1100285106 : Text;
      _User@1100285108 : Record 2000000120;
      TableID@1100285111 : Integer;
      TableType@1100285112 : Code[10];
    BEGIN
      //https://docs.microsoft.com/en-us/dotnet/api/system.directoryservices.directoryentry
      DirectoryEntry := DirectoryEntry.DirectoryEntry();

      //https://docs.microsoft.com/en-us/dotnet/api/system.directoryservices.directorysearcher
      DirectorySearcher := DirectorySearcher.DirectorySearcher(DirectoryEntry);

      IF STRPOS(DirectoryEntry.Name,'=') <> 0 THEN
        ADName := COPYSTR(DirectoryEntry.Name,STRPOS(DirectoryEntry.Name,'=')+1);
      IF ADName = '' THEN
        ADName := DirectoryEntry.Name;

      // domain\user -> user
      IF (STRPOS(LOWERCASE(loginName),ADName) <> 0) AND (loginName<>'') THEN
        loginName := COPYSTR(loginName,STRPOS(LOWERCASE(loginName),ADName)+STRLEN(ADName)+1);

      DirectorySearcher := DirectorySearcher.DirectorySearcher(DirectoryEntry);
      IF loginName <> '' THEN
        DirectorySearcher.Filter := '(&(objectCategory=person)(objectClass=user)(SAMAccountName='+LOWERCASE(loginName)+'))'
      ELSE
        DirectorySearcher.Filter := '(&(objectCategory=person)(objectClass=user))';
      DirectorySearcher.SizeLimit:= 0;
      DirectorySearcher.PageSize := 250;

      DirectorySearcher.PropertiesToLoad.Add('SAMAccountName');
      DirectorySearcher.PropertiesToLoad.Add('memberOf');
      SearchResultColl := DirectorySearcher.FindAll;

      TableID := 11128008;
      TableType := 'PAGE';
      SETRANGE("Table Name",TableID);
      SETRANGE(Code,TableType);
      IF ISTEMPORARY THEN DELETEALL(FALSE);

      IF ISNULL(SearchResultColl) OR (SearchResultColl.Count = 0) THEN
        EXIT;
      CLEAR(Rec);

      INIT;
      "Table Name" := TableID;
      Code := TableType;
      "No." := '';
      "Line No." := 0;
      Comment := ADName;
      "Comment Code" := 'domain';
      "Created by" := '';
      IF INSERT THEN ;

      FOR i := 0 TO (SearchResultColl.Count-1) DO BEGIN
        IF SearchResultColl.Item(i).Properties.Item('SAMAccountName').Count <> 0 THEN BEGIN
          _UserID := COPYSTR(FORMAT(SearchResultColl.Item(i).Properties.Item('SAMAccountName').Item(0)),1,50);
          FOR j := 0 TO (SearchResultColl.Item(i).Properties.Item('memberOf').Count-1) DO BEGIN
            _memberOf := COPYSTR(FORMAT(SearchResultColl.Item(i).Properties.Item('memberOf').Item(j)),1,80);
            //CN=NAV_4PS_Users(x),OU=NAV Security Groups,OU=Security Groups,OU=Itero,DC=iteroab,DC=local

            IF COPYSTR(_memberOf,1,3) = 'CN=' THEN
              _memberOf := COPYSTR(_memberOf,4);
            //NAV_4PS_Users(x),OU=NAV Security Groups,OU=Security Groups,OU=Itero,DC=iteroab,DC=local

            IF STRPOS(_memberOf,',') <> 0 THEN
              _memberOf := COPYSTR(_memberOf,1,STRPOS(_memberOf,',')-1);
            //NAV_4PS_Users(x)

            _memberOf := DELCHR(_memberOf,'<>=','()*');
            //NAV_4PS_Usersx

            _User.SETRANGE("User Name");
            IF STRLEN(ADName+'\'+_memberOf) <= MAXSTRLEN(_User."User Name") THEN BEGIN
              _User.SETFILTER("User Name",UPPERCASE(ADName+'\'+_memberOf));
              IF _User.FINDFIRST THEN BEGIN
                INIT;
                "Table Name" := TableID;
                Code := TableType;
                "No." := FORMAT(i,0,2);
                "Line No." := j;
                Comment := _memberOf;
                "Comment Code" := 'memberOf';
                "Created by" := _UserID;
                "Time Created" := TIME;
                Date := TODAY;
                IF INSERT THEN ;
              END;//find
            END;//strlen
          END;//for j
        END;//count
      END;//for i

      EXIT(_UserID);
    END;

    PROCEDURE UpdatePageByUserID@1100285100(loginName@1100285100 : Text);
    BEGIN
      SETRANGE("Created by");
      SETFILTER("Created by",SearchUserbyLDAPDomain(loginName));
      CurrPage.UPDATE(FALSE);
    END;

    BEGIN
    END.
  }
}

