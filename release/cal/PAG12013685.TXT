OBJECT Page 12013685 ExFlow A/P Activities
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF406000;
  }
  PROPERTIES
  {
    CaptionML=[ENU=ExFlow Activities;
               SVE=ExFlow Aktiviteter];
    SourceTable=Table12013686;
    PageType=CardPart;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 RESET;
                 IF NOT GET THEN BEGIN
                   INIT;
                   INSERT;
                 END;

                 IF ExFlowSetup.GET THEN BEGIN
                   SETFILTER("Due Date Filter",'<=%1',WORKDATE);
                   IF ExFlowSetup."Purchase Order" THEN
                     SETFILTER("Document Type Filter",'<=%1', 5)
                   ELSE
                     SETFILTER("Document Type Filter",'<>%1&<=%2',1,5);

                   PeriodFormMgt.FindDate('',Calendar,4);
                   SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");

                   NoOfDocuments := 0;
                   ExFlowJnlBatch.RESET;
                   ExFlowJnlBatch.SETRANGE("User ID", USERID);
                   IF ExFlowJnlBatch.FINDSET THEN
                     REPEAT
                       ExFlowJnlBatch.CALCFIELDS("No. of Documents");
                       NoOfDocuments += ExFlowJnlBatch."No. of Documents";
                     UNTIL ExFlowJnlBatch.NEXT = 0;
                 END;
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 6   ;1   ;Group     ;
                CaptionML=[ENU=Payments;
                           SVE=Betalningar];
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 8       ;0   ;Action    ;
                                  CaptionML=[ENU=Edit Payment Journal;
                                             SVE=Redigera utbetalningsjournal];
                                  RunObject=Page 256 }
                  { 12      ;0   ;Action    ;
                                  CaptionML=[ENU=Edit Purchase Journal;
                                             SVE=Redigera ink”psjournal];
                                  RunObject=Page 254 }
                }
                 }

    { 9   ;2   ;Field     ;
                SourceExpr="Purchase Invoices Due Today";
                DrillDownPageID=Vendor Ledger Entries }

    { 1   ;2   ;Field     ;
                SourceExpr="Vendors - Payment on Hold";
                DrillDownPageID=Vendor List }

    { 7   ;1   ;Group     ;
                CaptionML=[ENU=Document Approvals;
                           SVE=Dokumentgodk„nnanden];
                GroupType=CueGroup }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=Pending Approval;
                           SVE=V„ntar p† godk„nnande];
                SourceExpr="Pending Approval";
                DrillDownPageID=Ex Document List }

    { 1100285005;2;Field  ;
                SourceExpr="Pending Requisition" }

    { 13  ;2   ;Field     ;
                CaptionML=[ENU="Approved ";
                           SVE="Godk„nda "];
                SourceExpr="Approved Purchase Documents";
                DrillDownPageID=Ex Document List }

    { 1100285000;2;Field  ;
                SourceExpr="Purchase Doc. Lines on Hold";
                DrillDownPageID=Ex Document List;
                OnDrillDown=BEGIN
                              CLEAR(ExDoc);

                              ExDocLineApp.RESET;
                              ExDocLineApp.SETCURRENTKEY(Flowstatus,"Document Type");
                              ExDocLineApp.SETRANGE(Flowstatus, ExDocLineApp.Flowstatus::"On hold");
                              COPYFILTER("Document Type Filter", ExDocLineApp."Document Type");
                              IF ExDocLineApp.FINDSET THEN
                                REPEAT
                                  IF ExDoc.ID <> ExDocLineApp."Document ID" THEN BEGIN
                                    ExDoc.GET(ExDocLineApp."Document ID");
                                    ExDoc.MARK(TRUE);
                                  END;
                                UNTIL ExDocLineApp.NEXT = 0;

                              ExDoc.MARKEDONLY(TRUE);
                              PAGE.RUN(0,ExDoc);
                            END;
                             }

    { 1100285016;2;Field  ;
                SourceExpr="Rejected Purchase Doc. Lines";
                OnDrillDown=BEGIN
                              CLEAR(ExDoc);

                              ExDocLine.RESET;
                              ExDocLine.SETCURRENTKEY(Flowstatus,"Document Type");
                              ExDocLine.SETRANGE(Flowstatus, ExDocLine.Flowstatus::Rejected);
                              COPYFILTER("Document Type Filter", ExDocLine."Document Type");
                              IF ExDocLine.FINDSET THEN
                                REPEAT
                                  IF ExDoc.ID <> ExDocLine."Document ID" THEN BEGIN
                                    ExDoc.GET(ExDocLine."Document ID");
                                    ExDoc.MARK(TRUE);
                                  END;
                                UNTIL ExDocLine.NEXT = 0;

                              ExDoc.MARKEDONLY(TRUE);
                              PAGE.RUN(0,ExDoc);
                            END;
                             }

    { 1100285002;1;Group  ;
                CaptionML=[ENU=Imported documents;
                           SVE=Importerade dokument];
                GroupType=CueGroup }

    { 1100285001;2;Field  ;
                SourceExpr="Waiting in OCR Import Queue" }

    { 1100285003;2;Field  ;
                SourceExpr="Documents in Import Batches" }

    { 1100285004;2;Field  ;
                CaptionML=[ENU=My Documents in Import Journals;
                           SVE=Mina dokument i import journalerna];
                SourceExpr=NoOfDocuments;
                OnDrillDown=BEGIN
                              ExFlowJnlBatch.RESET;
                              ExFlowJnlBatch.SETRANGE("User ID", USERID);
                              PAGE.RUN(0, ExFlowJnlBatch);
                            END;
                             }

    { 1100285006;1;Group  ;
                CaptionML=[ENU=History;
                           SVE=Historik];
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 1100285009;  ;Action    ;
                                  Name=<Action1100285009>;
                                  CaptionML=[ENU=Open Approval Status History;
                                             SVE=™ppna Atteststatus historik];
                                  RunObject=Page 12013675 }
                  { 1100285012;  ;Action    ;
                                  CaptionML=[ENU=Open Approval Status Follow-up;
                                             SVE=™ppna Atteststatus uppf”ljning];
                                  RunObject=Page 12013674 }
                  { 1100285013;  ;Action    ;
                                  CaptionML=[ENU=Open Order Status;
                                             SVE=™ppna Orderstatus];
                                  RunObject=Page 12013605 }
                  { 1100285014;  ;Action    ;
                                  CaptionML=[ENU=Open Order Status History;
                                             SVE=™ppna Orderstatus historik];
                                  RunObject=Page 12013663 }
                }
                 }

    { 1100285007;2;Field  ;
                SourceExpr="Posted Purchase Invoices" }

    { 1100285008;2;Field  ;
                SourceExpr="Posted Purchase Credit Memos" }

  }
  CODE
  {
    VAR
      ExFlowJnlBatch@1100285001 : Record 12013590;
      ExFlowSetup@1100285002 : Record 12013601;
      Calendar@1100285004 : Record 2000000007;
      ExDoc@1100285007 : Record 12013608;
      ExDocLine@1100285006 : Record 12013609;
      ExDocLineApp@1100285005 : Record 12013610;
      PeriodFormMgt@1100285003 : Codeunit 359;
      NoOfDocuments@1100285000 : Integer;

    BEGIN
    END.
  }
}

