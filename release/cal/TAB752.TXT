OBJECT Table 752 Standard Item Journal
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.01;
  }
  PROPERTIES
  {
    OnInsert=VAR
               StdItemJnlLine@1000 : Record 753;
             BEGIN
               StdItemJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
               StdItemJnlLine.SETRANGE("Standard Journal Code",Code);

               StdItemJnlLine.DELETEALL(TRUE);
             END;

    OnDelete=VAR
               StdItemJnlLine@1000 : Record 753;
             BEGIN
               StdItemJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
               StdItemJnlLine.SETRANGE("Standard Journal Code",Code);

               StdItemJnlLine.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=Standard Item Journal;
               NOR=Standard varekladd;
               SVE=Standardartikeljournal];
    LookupPageID=Page753;
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;TableRelation="Item Journal Template";
                                                   CaptionML=[ENU=Journal Template Name;
                                                              NOR=Kladdemalnavn;
                                                              SVE=Mallnamn f”r journal];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 2   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 3   ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
  }
  KEYS
  {
    {    ;Journal Template Name,Code              ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      LastItemJnlLine@1007 : Record 83;
      ItemJnlLine@1006 : Record 83;
      UOMMgt@1005 : Codeunit 5402;
      Window@1003 : Dialog;
      WindowUpdateDateTime@1002 : DateTime;
      NoOfJournalsToBeCreated@1001 : Integer;
      NoOfJournalsCreated@1000 : Integer;
      Text000@1004 : TextConst 'ENU=Getting Standard Item Journal Lines @1@@@@@@@;NOR=Henter standard varekladdelinjer @1@@@@@@@;SVE=H„mtar rader f”r standardartikeljournal @1@@@@@@@';

    [External]
    PROCEDURE Initialize@2(StdItemJnl@1000 : Record 752;JnlBatchName@1001 : Code[10]);
    BEGIN
      ItemJnlLine."Journal Template Name" := StdItemJnl."Journal Template Name";
      ItemJnlLine."Journal Batch Name" := JnlBatchName;
      ItemJnlLine.SETRANGE("Journal Template Name",StdItemJnl."Journal Template Name");
      ItemJnlLine.SETRANGE("Journal Batch Name",JnlBatchName);

      LastItemJnlLine.SETRANGE("Journal Template Name",StdItemJnl."Journal Template Name");
      LastItemJnlLine.SETRANGE("Journal Batch Name",JnlBatchName);

      IF LastItemJnlLine.FINDLAST THEN;
    END;

    [External]
    PROCEDURE CreateItemJnlFromStdJnl@1(StdItemJnl@1005 : Record 752;JnlBatchName@1003 : Code[10]);
    VAR
      StdItemJnlLine@1002 : Record 753;
    BEGIN
      Initialize(StdItemJnl,JnlBatchName);

      StdItemJnlLine.SETRANGE("Journal Template Name",StdItemJnl."Journal Template Name");
      StdItemJnlLine.SETRANGE("Standard Journal Code",StdItemJnl.Code);
      OpenWindow(Text000,StdItemJnlLine.COUNT);
      IF StdItemJnlLine.FIND('-') THEN
        REPEAT
          UpdateWindow;
          CopyItemJnlFromStdJnl(StdItemJnlLine);
        UNTIL StdItemJnlLine.NEXT = 0;
    END;

    LOCAL PROCEDURE CopyItemJnlFromStdJnl@7(StdItemJnlLine@1000 : Record 753);
    BEGIN
      ItemJnlLine.INIT;
      ItemJnlLine."Line No." := 0;
      ItemJnlLine.SetUpNewLine(LastItemJnlLine);
      IF LastItemJnlLine."Line No." <> 0 THEN
        ItemJnlLine."Line No." := LastItemJnlLine."Line No." + 10000
      ELSE
        ItemJnlLine."Line No." := 10000;

      ItemJnlLine.TRANSFERFIELDS(StdItemJnlLine,FALSE);

      IF (ItemJnlLine."Item No." <> '') AND (ItemJnlLine."Unit Amount" = 0) THEN
        ItemJnlLine.RecalculateUnitAmount;

      IF (ItemJnlLine."Entry Type" = ItemJnlLine."Entry Type"::Output) AND
         (ItemJnlLine."Value Entry Type" <> ItemJnlLine."Value Entry Type"::Revaluation)
      THEN
        ItemJnlLine."Invoiced Quantity" := 0
      ELSE
        ItemJnlLine."Invoiced Quantity" := ItemJnlLine.Quantity;
      ItemJnlLine.TESTFIELD("Qty. per Unit of Measure");
      ItemJnlLine."Invoiced Qty. (Base)" :=
        ROUND(ItemJnlLine."Invoiced Quantity" * ItemJnlLine."Qty. per Unit of Measure",UOMMgt.QtyRndPrecision);

      ItemJnlLine."Dimension Set ID" := StdItemJnlLine."Dimension Set ID";
      ItemJnlLine.INSERT(TRUE);

      OnAfterCopyItemJnlFromStdJnl(ItemJnlLine);

      LastItemJnlLine := ItemJnlLine;
    END;

    LOCAL PROCEDURE OpenWindow@12(DisplayText@1001 : Text[250];NoOfJournalsToBeCreated2@1000 : Integer);
    BEGIN
      NoOfJournalsCreated := 0;
      NoOfJournalsToBeCreated := NoOfJournalsToBeCreated2;
      WindowUpdateDateTime := CURRENTDATETIME;
      Window.OPEN(DisplayText);
    END;

    LOCAL PROCEDURE UpdateWindow@4();
    BEGIN
      NoOfJournalsCreated := NoOfJournalsCreated + 1;
      IF CURRENTDATETIME - WindowUpdateDateTime >= 300 THEN BEGIN
        WindowUpdateDateTime := CURRENTDATETIME;
        Window.UPDATE(1,ROUND(NoOfJournalsCreated / NoOfJournalsToBeCreated * 10000,1));
      END;
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCopyItemJnlFromStdJnl@13(VAR ItemJournalLine@1000 : Record 83);
    BEGIN
    END;

    BEGIN
    END.
  }
}

