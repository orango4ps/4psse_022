OBJECT Table 6086357 Expense Allocation Dimension
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.3.00.02;
  }
  PROPERTIES
  {
    DataCaptionFields=Expense Allocation Entry No.;
    OnInsert=BEGIN
               TestNotPosted;
               UpdateRecordGlobalDimValue("Expense Allocation Entry No.","Dimension Code","Dimension Value Code");
             END;

    OnModify=BEGIN
               TestNotPosted;
               UpdateRecordGlobalDimValue("Expense Allocation Entry No.","Dimension Code","Dimension Value Code");
             END;

    OnDelete=BEGIN
               TestNotPosted;
               UpdateRecordGlobalDimValue("Expense Allocation Entry No.","Dimension Code",'');
             END;

    OnRename=BEGIN
               ERROR(Text002,TABLECAPTION);
             END;

    CaptionML=[DEU=Ausgabenzuordnung Dimensionen;
               ENU=Expense Allocation Dimension;
               NLD=Uitgaveallocatiedimensie];
    LookupPageID=Page6086368;
    DrillDownPageID=Page6086368;
  }
  FIELDS
  {
    { 1   ;   ;Expense Allocation Entry No.;Integer;
                                                   TableRelation="Expense Allocation";
                                                   CaptionML=[DEU=Ausgabenzuordnungspostennr.;
                                                              ENU=Expense Allocation Entry No.;
                                                              NLD=Uitgaveallocatievolgnr.] }
    { 2   ;   ;Dimension Code      ;Code20        ;TableRelation=Dimension;
                                                   CaptionML=[DEU=Dimensionscode;
                                                              ENU=Dimension Code;
                                                              NLD=Dimensiecode;
                                                              NOR=Dimensjonskode;
                                                              SVE=Dimensionskod] }
    { 3   ;   ;Dimension Value Code;Code20        ;TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Dimension Code));
                                                   OnValidate=VAR
                                                                GLSetup@1160040000 : Record 98;
                                                                ExpenseAllocation@1160040002 : Record 6086321;
                                                              BEGIN
                                                                GLSetup.GET;
                                                                ExpenseAllocation.GET("Expense Allocation Entry No.");

                                                                IF "Dimension Code" IN [GLSetup."Global Dimension 1 Code",GLSetup."Global Dimension 2 Code"] THEN BEGIN
                                                                  IF "Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                                                                    ExpenseAllocation."Global Dimension 1 Code" := "Dimension Value Code";

                                                                  IF "Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                                                                    ExpenseAllocation."Global Dimension 2 Code" := "Dimension Value Code";
                                                                END;

                                                                ExpenseAllocation.Modified := TRUE;
                                                                ExpenseAllocation.MODIFY;
                                                              END;

                                                   CaptionML=[DEU=Dimensionswertcode;
                                                              ENU=Dimension Value Code;
                                                              NLD=Dimensiewaardecode;
                                                              NOR=Dimensjonsverdikode;
                                                              SVE=Dimensionsv„rdekod];
                                                   NotBlank=Yes }
    { 4   ;   ;Field Code          ;Code20        ;TableRelation="Field Type";
                                                   ValidateTableRelation=No;
                                                   CaptionML=[DEU=Feldname;
                                                              ENU=Field Name;
                                                              NLD=Veldnaam;
                                                              SVE=F„ltnamn] }
    { 5   ;   ;Field Value         ;Text250       ;TableRelation="Lookup Value".Code WHERE (Field Type Code=FIELD(Field Code));
                                                   OnValidate=VAR
                                                                FieldType@1160040000 : Record 6086345;
                                                                DateParserMgt@1160040005 : Codeunit 6085586;
                                                                DT@1160040003 : DateTime;
                                                                Dec@1160040002 : Decimal;
                                                                Int@1160040001 : Integer;
                                                                Bool@1160040004 : Boolean;
                                                                DateVal@1160040006 : Date;
                                                              BEGIN
                                                                IF "Field Value" = '' THEN
                                                                  EXIT;

                                                                FieldType.GET("Field Code");

                                                                CASE FieldType.Type OF
                                                                  FieldType.Type::Integer:
                                                                    EVALUATE(Int,"Field Value",9);
                                                                  FieldType.Type::Date:
                                                                    BEGIN
                                                                      IF EVALUATE(DateVal,"Field Value") THEN
                                                                        "Field Value" := FORMAT(DateVal,9)
                                                                      ELSE BEGIN
                                                                        DateParserMgt.ParseUTC("Field Value");
                                                                        "Field Value" := FORMAT(DateParserMgt.GetDate,9);
                                                                      END;
                                                                    END;
                                                                  FieldType.Type::Decimal:
                                                                    EVALUATE(Dec,"Field Value",9);
                                                                  FieldType.Type::Address:
                                                                    EVALUATE(DT,"Field Value",9);
                                                                  FieldType.Type::Boolean:
                                                                    EVALUATE(Bool,"Field Value",9);
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[DEU=Feldwert;
                                                              ENU=Field Value;
                                                              NLD=Veldwaarde;
                                                              SVE=F„ltv„rde] }
  }
  KEYS
  {
    {    ;Expense Allocation Entry No.,Dimension Code,Field Code;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text002@1160040002 : TextConst 'DEU=Sie k”nnen eine %1 nicht umbenennen.;ENU=You cannot rename a %1.;NLD=U kunt een %1 niet hernoemen.;NOR=Du kan ikke gi nytt navn til en %1.;SVE=Du kan inte byta namn p† %1.';

    LOCAL PROCEDURE TestNotPosted@37();
    VAR
      Expense@1160040000 : Record 6086320;
      ExpenseAllocation@1160040001 : Record 6086321;
    BEGIN
      ExpenseAllocation.GET("Expense Allocation Entry No.");
      Expense.GET(ExpenseAllocation."Expense Entry No.");
      Expense.TESTFIELD(Posted,FALSE);
    END;

    PROCEDURE GetFieldFromDim@1160040000(Dim@1160040000 : Code[20]) : Code[20];
    VAR
      FieldType@1160040001 : Record 6086345;
    BEGIN
      EXIT(FieldType.GetFieldFromDim(Dim));
    END;

    PROCEDURE EMDimUpdated@1160040002(VAR ExpAllocDim@1160040000 : Record 6086357;AllocationEntryNo@1160040005 : Integer) : Boolean;
    VAR
      xExpAllocDim@1160040001 : Record 6086357;
    BEGIN
      ExpAllocDim.RESET;
      ExpAllocDim.SETRANGE("Expense Allocation Entry No.",AllocationEntryNo);

      xExpAllocDim.RESET;
      xExpAllocDim.SETRANGE("Expense Allocation Entry No.",AllocationEntryNo);

      IF ExpAllocDim.FINDSET THEN
        REPEAT
          IF NOT xExpAllocDim.GET(AllocationEntryNo,ExpAllocDim."Dimension Code",ExpAllocDim."Field Code") THEN
            EXIT(TRUE);

          IF ExpAllocDim."Dimension Value Code" <> xExpAllocDim."Dimension Value Code" THEN
            EXIT(TRUE);

          IF ExpAllocDim."Field Value" <> xExpAllocDim."Field Value" THEN
            EXIT(TRUE);

        UNTIL ExpAllocDim.NEXT = 0;

      IF xExpAllocDim.FINDSET THEN
        REPEAT
          IF NOT ExpAllocDim.GET(AllocationEntryNo,xExpAllocDim."Dimension Code",xExpAllocDim."Field Code") THEN
            EXIT(TRUE);
        UNTIL xExpAllocDim.NEXT = 0;
    END;

    LOCAL PROCEDURE UpdateRecordGlobalDimValue@1160040001(AllocationEntryNo@1160040010 : Integer;DimCode@1160040006 : Code[20];DimValCode@1160040007 : Code[20]);
    VAR
      GLSetup@1160040003 : Record 98;
      ExpAllocation@1160040002 : Record 6086321;
    BEGIN
      GLSetup.GET;
      IF NOT (DimCode IN [GLSetup."Global Dimension 1 Code",GLSetup."Global Dimension 2 Code"]) THEN
        EXIT;

      ExpAllocation.GET(AllocationEntryNo);
      IF DimCode = GLSetup."Global Dimension 1 Code" THEN
        ExpAllocation."Global Dimension 1 Code" := DimValCode;
      IF DimCode = GLSetup."Global Dimension 2 Code" THEN
        ExpAllocation."Global Dimension 2 Code" := DimValCode;
      ExpAllocation.MODIFY;
    END;

    BEGIN
    END.
  }
}

