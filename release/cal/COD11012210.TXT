OBJECT Codeunit 11012210 Purch. Header Functions (DMS)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 122=rimd,
                TableData 124=rimd;
    OnRun=VAR
            PurchaseHeader@1100525000 : Record 38;
          BEGIN
            Post(PurchaseHeader."Document Type"::Invoice, 'IF0600722');
          END;

  }
  CODE
  {
    VAR
      Text000@1100525000 : TextConst 'DEU=Fehlermeldung;ENU="""%1"" is not a valid value for parameter Status.";NLD=Foutboodschap;NOR=''''%1'''' er ikke en gyldig verdi for parameterstatus;SVE="""%1"" „r inte ett giltigt v„rde f”r parameterstatus."';
      Text001@1100528400 : TextConst 'DEU=Nicht zul„ssig mit %1 %2 ''%3''.;ENU=Not allowed with %1 %2 ''%3''.;NLD="Niet toegestaan bij %1 %2 =  ''%3''.";SVE=Ej till†tet med %1 %2 ''%3''.';

    [External]
    PROCEDURE CreatePurchLineRegAcc@1210190000(DocumentType@1210190001 : Integer;No@1210190000 : Code[20]);
    VAR
      PurchaseHeader@1210190002 : Record 38;
    BEGIN
      PurchaseHeader.GET(DocumentType, No);
      PurchaseHeader.CreatePurchLineRegAcc;
      PurchaseHeader.MODIFY;
    END;

    [External]
    PROCEDURE SetStatus@1210190001(DocumentType@1210190000 : Integer;No@1210190001 : Code[20];Status@1210190002 : Integer);
    VAR
      PurchaseHeaderExtension@1210190003 : Record 11020398;
    BEGIN
      IF NOT PurchaseHeaderExtension.GET(DocumentType, No) THEN BEGIN
        PurchaseHeaderExtension.VALIDATE("Document Type", DocumentType);
        PurchaseHeaderExtension.VALIDATE("Document No.", No);
        PurchaseHeaderExtension.INSERT(TRUE);
      END;

      CASE Status OF
        PurchaseHeaderExtension."DMS Status"::" ":
          PurchaseHeaderExtension."DMS Status" := PurchaseHeaderExtension."DMS Status"::" ";
        PurchaseHeaderExtension."DMS Status"::"Awaiting Line Entry":
          PurchaseHeaderExtension."DMS Status" := PurchaseHeaderExtension."DMS Status"::"Awaiting Line Entry";
      ELSE
        ERROR(Text000, Status);
      END;

      PurchaseHeaderExtension.MODIFY;
    END;

    [External]
    PROCEDURE Post@1100525000(DocumentType@1100525002 : Integer;No@1100525005 : Code[20]) : Code[20];
    VAR
      PurchaseHeader@1100525001 : Record 38;
      ApprovalsMgt@1100525003 : Codeunit 1535;
      PurchPost@1100525004 : Codeunit 90;
    BEGIN
      PurchaseHeader.GET(DocumentType, No);
      PurchaseHeader.VALIDATE("Register Invoice", TRUE);

      IF ApprovalsMgt.PrePostApprovalCheckPurch(PurchaseHeader) THEN
        PurchPost.RUN(PurchaseHeader);

      IF PurchaseHeader."Last Posting No." = '' THEN
        PurchaseHeader."Last Posting No." := PurchaseHeader."No.";

      EXIT(PurchaseHeader."Last Posting No.");
    END;

    [External]
    PROCEDURE GetReceiptLines@1100528400(PurchaseInvoiceNo@1100528400 : Code[20];PurchaseOrderNo@1100528401 : Code[20]);
    VAR
      PurchaseHeader@1100528402 : Record 38;
    BEGIN
      GetReceiptLinesForDocument(PurchaseHeader."Document Type"::Invoice, PurchaseInvoiceNo, PurchaseOrderNo, 0, '', 0, FALSE);
    END;

    [External]
    PROCEDURE GetReceiptLine@1100528404(PurchaseInvoiceNo@1100528401 : Code[20];PurchaseOrderNo@1100528400 : Code[20];PurchaseOrderLineNo@1100528402 : Integer;PurchaseReceiptNo@1100528403 : Code[20];PurchaseReceiptLineNo@1100528404 : Integer);
    VAR
      PurchaseHeader@1100528405 : Record 38;
    BEGIN
      GetReceiptLinesForDocument(
        PurchaseHeader."Document Type"::Invoice, PurchaseInvoiceNo, PurchaseOrderNo,
        PurchaseOrderLineNo, PurchaseReceiptNo, PurchaseReceiptLineNo, TRUE);
    END;

    [External]
    PROCEDURE GetReceiptLinesForCreditMemo@1100528401(PurchaseCreditMemoNo@1100528400 : Code[20];PurchaseOrderNo@1100528401 : Code[20]);
    VAR
      PurchaseHeader@1100528402 : Record 38;
    BEGIN
      GetReceiptLinesForDocument(PurchaseHeader."Document Type"::"Credit Memo", PurchaseCreditMemoNo, PurchaseOrderNo, 0, '', 0, FALSE);
    END;

    [External]
    PROCEDURE GetReceiptLineForCreditMemo@1100528403(PurchaseCreditMemoNo@1100528401 : Code[20];PurchaseOrderNo@1100528400 : Code[20];PurchaseOrderLineNo@1100528402 : Integer;PurchaseReceiptNo@1100528404 : Code[20];PurchaseReceiptLineNo@1100528403 : Integer);
    VAR
      PurchaseHeader@1100528405 : Record 38;
    BEGIN
      GetReceiptLinesForDocument(
        PurchaseHeader."Document Type"::"Credit Memo", PurchaseCreditMemoNo, PurchaseOrderNo,
        PurchaseOrderLineNo, PurchaseReceiptNo, PurchaseReceiptLineNo, TRUE);
    END;

    LOCAL PROCEDURE GetReceiptLinesForDocument@1100528402(DocumentType@1100528406 : Integer;DocumentNo@1100528400 : Code[20];PurchaseOrderNo@1100528401 : Code[20];PurchaseOrderLineNo@1100528410 : Integer;PurchaseReceiptNo@1100528409 : Code[20];PurchaseReceiptLineNo@1100528408 : Integer;GetOneReceiptLine@1100528411 : Boolean);
    VAR
      PurchaseHeader@1100528402 : Record 38;
      PurchRcptLine@1100528403 : Record 121;
      PurchasesPayablesSetup@1100528405 : Record 312;
      PurchaseLine@1100528407 : Record 39;
      PurchGetReceipt@1100528404 : Codeunit 74;
    BEGIN
      PurchasesPayablesSetup.GET;
      IF (PurchasesPayablesSetup."Approve Purchase Invoices") AND
         (PurchasesPayablesSetup."VAT Indicator (Purchase)" =
          PurchasesPayablesSetup."VAT Indicator (Purchase)"::"No VAT")
      THEN
        ERROR(
          Text001,
          PurchasesPayablesSetup.TABLECAPTION,
          PurchasesPayablesSetup.FIELDCAPTION("VAT Indicator (Purchase)"),
          PurchasesPayablesSetup."Approve Purchase Invoices");

      PurchaseHeader.GET(DocumentType, DocumentNo);
      PurchGetReceipt.SetPurchHeader(PurchaseHeader);
      PurchRcptLine.SETRANGE("Order No.", PurchaseOrderNo);
      IF GetOneReceiptLine THEN BEGIN
        PurchRcptLine.SETRANGE("Order Line No.", PurchaseOrderLineNo);
        PurchRcptLine.SETRANGE("Document No.", PurchaseReceiptNo);
        PurchRcptLine.SETRANGE("Line No.", PurchaseReceiptLineNo);
      END;
      // Skip receipt lines for which no purchase order line exists.
      IF PurchRcptLine.FINDSET THEN
        REPEAT
          IF PurchaseLine.GET(
            PurchaseLine."Document Type"::Order, PurchRcptLine."Order No.", PurchRcptLine."Order Line No.")
          THEN
            PurchRcptLine.MARK(TRUE);
        UNTIL PurchRcptLine.NEXT = 0;
      PurchRcptLine.MARKEDONLY(TRUE);
      PurchGetReceipt.CreateInvLines(PurchRcptLine);
    END;

    BEGIN
    END.
  }
}

