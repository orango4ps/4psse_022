OBJECT Page 11126087 Object Specification Lines SF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Object Specification Lines;
               NOR=Objekt, spesifikasjonsrader;
               SVE=Objektspecifikationsrader];
    SourceTable=Table11071781;
    PageType=List;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             ValueEditable := TRUE;
           END;

    OnAfterGetRecord=BEGIN
                       Tmpvalue := GetValue(Decoded);
                       OnAfterGetCurrRecord;
                       DescriptionOnFormat;
                     END;

    OnNewRecord=BEGIN
                  Type := LastType;
                  IF Type = Type::Group THEN
                    "Field Type" := "Field Type"::" ";
                  OnAfterGetCurrRecord;
                  DescriptionOnFormat;
                END;

    ActionList=ACTIONS
    {
      { 1100528604;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528605;1 ;Action    ;
                      CaptionML=[ENU=BORG Data;
                                 NOR=BORG-data];
                      Image=Troubleshoot;
                      OnAction=VAR
                                 BORGUserManagement@1100528600 : Codeunit 11012861;
                               BEGIN
                                 IF NOT BORGUserManagement.IsBorgEmplTimedOut THEN
                                   BORGUserManagement.RemoveBorgEmplTimeOut
                                 ELSE
                                   BORGUserManagement.AskBORGPassword;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100527550;1 ;Action    ;
                      CaptionML=ENU=Add to Service Objects;
                      Image=AddAction;
                      OnAction=VAR
                                 ObjectSpecificationLine@1100527550 : Record 11071781;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ObjectSpecificationLine);
                                 AddToServiceObjectsFromMaterialInventory(ObjectSpecificationLine);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100528600;1;Group  ;
                IndentationColumnName=DescriptionIndentationValue;
                IndentationControls=Description;
                GroupType=Repeater }

    { 1100528601;2;Field  ;
                SourceExpr="Specification Type";
                Visible="Specification TypeVisible" }

    { 1100528603;2;Field  ;
                SourceExpr=Code;
                Visible=CodeVisible }

    { 1100528607;2;Field  ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             TypeOnAfterValidate;
                             DescriptionOnFormat;
                           END;
                            }

    { 1100528609;2;Field  ;
                SourceExpr="Specification Code";
                OnLookup=VAR
                           ObjectSpecificationGroup@1100528602 : Record 11071778;
                           BaseObjectSpecificationLine@1100528605 : Record 11071779;
                           BaseObjectSpecificationLineFRM@1100528604 : Page 11126083;
                           ObjSpecificationGroupCode@1100528603 : Code[20];
                         BEGIN
                           CASE Type OF
                             Type::Group:
                               BEGIN
                                 IF ObjectSpecificationGroup.GET("Specification Code") THEN;
                                 IF PAGE.RUNMODAL(0, ObjectSpecificationGroup) = ACTION::LookupOK THEN
                                   VALIDATE("Specification Code", ObjectSpecificationGroup.Code);
                               END;
                             Type::Line:
                               BEGIN
                                 ObjSpecificationGroupCode := GetObjSpecificationGroupCode;

                                 BaseObjectSpecificationLineFRM.LOOKUPMODE(TRUE);
                                 BaseObjectSpecificationLineFRM.DetermineInterface(DATABASE::"Service Order Obj. Spec. Line",
                                   "Specification Type", Code, "Line No.", "Object Line No.");  //DP00118
                                 IF BaseObjectSpecificationLine.GET("Specification Code") THEN
                                   BaseObjectSpecificationLineFRM.SETRECORD(BaseObjectSpecificationLine);
                                 BaseObjectSpecificationLine.SETFILTER("Specification Group Code", '%1|%2', '', ObjSpecificationGroupCode);
                                 BaseObjectSpecificationLineFRM.SETTABLEVIEW(BaseObjectSpecificationLine);
                                 IF BaseObjectSpecificationLineFRM.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                   BaseObjectSpecificationLineFRM.GETRECORD(BaseObjectSpecificationLine);
                                   VALIDATE("Specification Code", BaseObjectSpecificationLine.Code);
                                 END ELSE BEGIN
                                   IF BaseObjectSpecificationLineFRM.CheckMultiCopy THEN
                                     CurrPage.UPDATE;
                                 END;
                                 CALCFIELDS("Visible for Field Service");
                               END;
                           END;
                         END;
                          }

    { 1100528611;2;Field  ;
                SourceExpr=Description;
                Style=Strong;
                StyleExpr=DescriptionEmphasize }

    { 1100528613;2;Field  ;
                SourceExpr="Field Type" }

    { 1100528617;2;Field  ;
                CaptionML=[ENU=Value;
                           NOR=Verdi;
                           SVE=V„rde];
                SourceExpr=Tmpvalue;
                Editable=ValueEditable;
                OnValidate=BEGIN
                             VALIDATE(Value, Tmpvalue);
                           END;
                            }

    { 1100528615;2;Field  ;
                SourceExpr="Unit Of Measure" }

    { 1100528619;2;Field  ;
                SourceExpr="Visible for Field Service" }

    { 1100525001;2;Field  ;
                SourceExpr="Publish on Service Portal" }

    { 1100528602;2;Field  ;
                SourceExpr=BORG;
                HideValue=BORGEditable }

    { 1100527551;2;Field  ;
                SourceExpr="Object Level";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      LastType@1100528600 : Option;
      DescriptionEmphasize@19010547 : Boolean INDATASET;
      "Specification TypeVisible"@19052147 : Boolean INDATASET;
      CodeVisible@19032533 : Boolean INDATASET;
      ValueEditable@19072790 : Boolean INDATASET;
      DescriptionIndentationValue@1100525000 : Integer;
      Tmpvalue@1100528601 : Text[80];
      Decoded@1100528602 : Boolean;
      BORGEditable@1100525001 : Boolean INDATASET;

    PROCEDURE UpdateEditable@1100528600();
    BEGIN
      ValueEditable := (Type = Type::Line) AND Decoded;
      BORGEditable := Type = Type::Line;
    END;

    PROCEDURE MarkObjectSpecs@1100528601(IObjectNo@1100528600 : Code[20]);
    VAR
      ServiceObject@1100528601 : Record 11071691;
      ObjectSpecificationLine@1100528602 : Record 11071781;
      StandardObjectNo@1100528603 : Code[20];
    BEGIN
      IF ServiceObject.GET(IObjectNo) THEN
        StandardObjectNo := ServiceObject."Standard Object No.";
      RESET;
      ObjectSpecificationLine.SETRANGE("Specification Type", "Specification Type"::"Standard Object");
      ObjectSpecificationLine.SETRANGE(Code, StandardObjectNo);
      IF ObjectSpecificationLine.FINDFIRST THEN
        REPEAT
          Rec := ObjectSpecificationLine;
          MARK(TRUE);
        UNTIL ObjectSpecificationLine.NEXT = 0;
      ObjectSpecificationLine.SETRANGE("Specification Type", "Specification Type"::Object);
      ObjectSpecificationLine.SETRANGE(Code, IObjectNo);
      IF ObjectSpecificationLine.FINDFIRST THEN
        REPEAT
          Rec := ObjectSpecificationLine;
          MARK(TRUE);
        UNTIL ObjectSpecificationLine.NEXT = 0;
      MARKEDONLY(TRUE);
      "Specification TypeVisible" := (TRUE);
      CodeVisible := (TRUE);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE TypeOnAfterValidate@19069045();
    BEGIN
      UpdateEditable;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      UpdateEditable;
      LastType := Type;
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      DescriptionIndentationValue := 0;
      DescriptionEmphasize := FALSE;
      IF Type = Type::Group THEN
        DescriptionEmphasize := TRUE
      ELSE
        DescriptionIndentationValue := 2;
    END;

    BEGIN
    END.
  }
}

