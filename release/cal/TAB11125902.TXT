OBJECT Table 11125902 Gen. Checklist Copy
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               GenChecklistSetup@1100528501 : Record 11125905;
               NoSeriesMgt@1100528500 : Codeunit 396;
               LinkedTo@1100528502 : RecordID;
             BEGIN
               IF "No." = '' THEN BEGIN
                 GenChecklistSetup.GET;
                 GenChecklistSetup.TESTFIELD("Checklist Copy Nos.");
                 NoSeriesMgt.InitSeries(GenChecklistSetup."Checklist Copy Nos.", xRec."No. Series", 0D, "No.", "No. Series");
               END;

               TESTFIELD("Checklist Code");
               CopyTemplateVersion();
               CopyTemplateLines();

               IF GetLinkedToFromFilter(LinkedTo) THEN
                 InsertLink(LinkedTo);
             END;

    OnDelete=VAR
               GenChecklistCopyLine@1100528700 : Record 11125903;
               GenChecklistCopyLink@1100526000 : Record 11125904;
             BEGIN
               GenChecklistCopyLine.SETRANGE("Checklist Copy No.", "No.");
               GenChecklistCopyLine.DELETEALL(TRUE);

               GenChecklistCopyLink.SETRANGE("Checklist Copy No.", "No.");
               GenChecklistCopyLink.DELETEALL(TRUE);
             END;

    CaptionML=ENU=Generic Checklist Copy;
    LookupPageID=Page11127288;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=No.;
                                                              SVE=Nr] }
    { 20  ;   ;Checklist Code      ;Code20        ;TableRelation="Gen. Checklist".Code;
                                                   OnValidate=VAR
                                                                GenChecklistCopy@1100526000 : Record 11125902;
                                                              BEGIN
                                                                IF GenChecklistCopy.GET("No.") THEN
                                                                  IF (GenChecklistCopy."Checklist Code" <> "Checklist Code") THEN
                                                                    ERROR(Text002, FIELDCAPTION("Checklist Code"));

                                                                CheckIsChecklistAllowed("Checklist Code");
                                                              END;

                                                   OnLookup=VAR
                                                              AllowedChecklistsOf@1100526000 : RecordID;
                                                              GenChecklist@1100526001 : Record 11125900;
                                                              GenChecklistLink@1100526002 : Record 11125901;
                                                            BEGIN
                                                              IF GetAllowedChecklistsOfFromFilter(AllowedChecklistsOf) THEN BEGIN
                                                                GenChecklistLink.SETRANGE("Linked To", AllowedChecklistsOf);
                                                                IF GenChecklistLink.FINDSET THEN
                                                                  REPEAT
                                                                    IF GenChecklist.GET(GenChecklistLink."Checklist Code") THEN
                                                                      GenChecklist.MARK(TRUE);
                                                                  UNTIL GenChecklistLink.NEXT = 0;
                                                                GenChecklist.MARKEDONLY(TRUE);
                                                              END;

                                                              IF GenChecklist.FINDFIRST THEN;
                                                              IF GenChecklist.GET("Checklist Code") THEN;
                                                              IF PAGE.RUNMODAL(0, GenChecklist) = ACTION::LookupOK THEN
                                                                VALIDATE("Checklist Code", GenChecklist.Code);
                                                            END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Checklist Code;
                                                   NotBlank=Yes }
    { 30  ;   ;Checklist Template Code;Code20     ;TableRelation="Gen. Checklist Templ.".Code;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Checklist Template Code;
                                                   Editable=No }
    { 40  ;   ;Checklist Template Version;Integer ;TableRelation="Gen. Checklist Templ. Version".Version WHERE (Checklist Template Code=FIELD(Checklist Template Code));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Checklist Template Version;
                                                   Editable=No }
    { 50  ;   ;Description         ;Text50        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Description;
                                                              SVE=Beskrivning] }
    { 60  ;   ;Date                ;Date          ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Date;
                                                              SVE=Datum] }
    { 100 ;   ;Linked To Filter    ;RecordID      ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Linked To Filter }
    { 110 ;   ;Linked To Exists    ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Gen. Checklist Copy Link" WHERE (Checklist Copy No.=FIELD(No.),
                                                                                                       Linked To=FIELD(Linked To Filter)));
                                                   CaptionML=;
                                                   Editable=No }
    { 120 ;   ;Allowed Checklists Of Filter;RecordID;
                                                   FieldClass=FlowFilter;
                                                   CaptionML=ENU=Allowed Checklists Of Filter }
    { 200 ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=No. Series;
                                                              SVE=Nr-serier];
                                                   Editable=No }
    { 900 ;   ;Linked To Table No. Filter;Integer ;FieldClass=FlowFilter;
                                                   CaptionML= }
    { 910 ;   ;Linked To Key 1 Filter;Code20      ;FieldClass=FlowFilter;
                                                   CaptionML= }
    { 920 ;   ;Linked To Key 2 Filter;Code20      ;FieldClass=FlowFilter;
                                                   CaptionML= }
    { 930 ;   ;Linked To Key 3 Filter;Code20      ;FieldClass=FlowFilter;
                                                   CaptionML= }
    { 940 ;   ;Linked To Key 4 Filter;Code20      ;FieldClass=FlowFilter;
                                                   CaptionML= }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100526000 : TextConst 'ENU=Checklist %1 is not allowed for %2.';
      Text002@1100526001 : TextConst 'ENU=%1 may not be changed.';

    LOCAL PROCEDURE CopyTemplateVersion@1100526003();
    VAR
      GenChecklist@1100526000 : Record 11125900;
    BEGIN
      GenChecklist.GET("Checklist Code");
      "Checklist Template Code" := GenChecklist."Checklist Template Code";
      "Checklist Template Version" := GenChecklist."Checklist Template Version";
    END;

    LOCAL PROCEDURE CopyTemplateLines@1100528700();
    VAR
      GenChecklistTemplLine@1100528702 : Record 11125895;
      GenChecklistCopyLine@1100528701 : Record 11125903;
      LineNo@1100528700 : Integer;
    BEGIN
      LineNo := 10000;

      GenChecklistTemplLine.SETRANGE("Checklist Template Code", "Checklist Template Code");
      GenChecklistTemplLine.SETRANGE("Checklist Template Version", "Checklist Template Version");
      IF GenChecklistTemplLine.FINDSET THEN
        REPEAT
          GenChecklistCopyLine.INIT;
          GenChecklistCopyLine."Checklist Copy No." := "No.";
          GenChecklistCopyLine."Line No." := LineNo;
          GenChecklistCopyLine."Line Type" := GenChecklistTemplLine."Line Type";
          GenChecklistCopyLine."Line Code" := GenChecklistTemplLine."Line Code";
          GenChecklistCopyLine.Description := GenChecklistTemplLine.Description;
          GenChecklistCopyLine."Field Type" := GenChecklistTemplLine."Field Type";
          GenChecklistCopyLine."Option Set Code" := GenChecklistTemplLine."Option Set Code";
          GenChecklistCopyLine."Desired Value" := GenChecklistTemplLine."Desired Value";
          GenChecklistCopyLine.INSERT;
          LineNo += 10000;
        UNTIL GenChecklistTemplLine.NEXT = 0;
    END;

    LOCAL PROCEDURE InsertLink@1100528500(LinkedTo@1100528504 : RecordID);
    VAR
      GenChecklistCopyLink@1100528500 : Record 11125904;
      LineNo@1100528501 : Integer;
    BEGIN
      LineNo := 10000;
      GenChecklistCopyLink.SETRANGE("Checklist Copy No.", "No.");
      IF GenChecklistCopyLink.FINDLAST THEN
        LineNo += GenChecklistCopyLink."Line No.";
      GenChecklistCopyLink.INIT;
      GenChecklistCopyLink.RESET;
      GenChecklistCopyLink."Checklist Copy No." := "No.";
      GenChecklistCopyLink."Line No." := LineNo;
      GenChecklistCopyLink.VALIDATE("Linked To", LinkedTo);
      GenChecklistCopyLink.INSERT;
    END;

    LOCAL PROCEDURE CheckIsChecklistAllowed@1100526000(ChecklistCode@1100526002 : Code[20]);
    VAR
      AllowedChecklistsOf@1100526000 : RecordID;
      GenChecklistLink@1100526001 : Record 11125901;
    BEGIN
      IF NOT GetAllowedChecklistsOfFromFilter(AllowedChecklistsOf) THEN
        EXIT;

      GenChecklistLink.SETRANGE("Linked To", AllowedChecklistsOf);
      GenChecklistLink.SETRANGE("Checklist Code", ChecklistCode);
      IF GenChecklistLink.ISEMPTY THEN
        ERROR(Text001, ChecklistCode, FORMAT(AllowedChecklistsOf));
    END;

    LOCAL PROCEDURE GetLinkedToFromFilter@1100528502(VAR LinkedTo@1100528501 : RecordID) Ret : Boolean;
    VAR
      CurrentFilterGroup@1100528500 : Integer;
    BEGIN
      CurrentFilterGroup := FILTERGROUP;
      FILTERGROUP(4);
      IF GETFILTER("Linked To Filter") <> '' THEN
        Ret := EVALUATE(LinkedTo, GETFILTER("Linked To Filter"));
      FILTERGROUP(CurrentFilterGroup);
      EXIT(Ret);
    END;

    LOCAL PROCEDURE GetAllowedChecklistsOfFromFilter@1100526001(VAR LinkedTo@1100528501 : RecordID) Ret : Boolean;
    VAR
      CurrentFilterGroup@1100528500 : Integer;
    BEGIN
      CurrentFilterGroup := FILTERGROUP;
      FILTERGROUP(4);
      IF GETFILTER("Allowed Checklists Of Filter") <> '' THEN
        Ret := EVALUATE(LinkedTo, GETFILTER("Allowed Checklists Of Filter"));
      FILTERGROUP(CurrentFilterGroup);
      EXIT(Ret);
    END;

    BEGIN
    END.
  }
}

