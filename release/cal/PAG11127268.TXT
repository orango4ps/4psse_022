OBJECT Page 11127268 Vendor Assessment Matrix
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Matrix Projekt-Endstand;
               ENU=Project Score Matrix;
               NLD=Project score-matrix];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table11012298;
    SourceTableView=SORTING(Date);
    PageType=ListPlus;
    OnOpenPage=BEGIN
                 MATRIX_MaximumSetLength := 12;
                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                 UpdateMatrixSubForm;
                 PrevVendAss := Rec;
               END;

    OnAfterGetRecord=BEGIN
                       IF (Date <> PrevVendAss.Date) THEN BEGIN
                         MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                         UpdateMatrixSubForm;
                         PrevVendAss := Rec;
                       END;
                     END;

    ActionList=ACTIONS
    {
      { 1100528710;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528732;1 ;ActionGroup;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unctions;
                                 NLD=F&uncties] }
      { 1100525001;1 ;Action    ;
                      CaptionML=[DEU=Erster Satz;
                                 ENU=First Set;
                                 NLD=Eerste set];
                      ToolTipML=[DEU=Erster Satz;
                                 ENU=First Set;
                                 NLD=Eerste set];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::FirstRec);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528707;1 ;Action    ;
                      CaptionML=[DEU=Vorheriger Satz;
                                 ENU=Previous Set;
                                 NLD=Vorige set];
                      ToolTipML=[DEU=Vorheriger Satz;
                                 ENU=Previous Set;
                                 NLD=Vorige set];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Previous);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528706;1 ;Action    ;
                      CaptionML=[DEU=Vorherige Spalte;
                                 ENU=Previous Column;
                                 NLD=Vorige kolom];
                      ToolTipML=[DEU=Vorherige Spalte;
                                 ENU=Previous Column;
                                 NLD=Vorige kolom];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::PreviousColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528705;1 ;Action    ;
                      CaptionML=[DEU=N„chste Spalte;
                                 ENU=Next Column;
                                 NLD=Volgende kolom];
                      ToolTipML=[DEU=N„chste Spalte;
                                 ENU=Next Column;
                                 NLD=Volgende kolom];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::NextColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528704;1 ;Action    ;
                      CaptionML=[DEU=N„chster Satz;
                                 ENU=Next Set;
                                 NLD=Volgende set];
                      ToolTipML=[DEU=N„chster Satz;
                                 ENU=Next Set;
                                 NLD=Volgende set];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Next);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100525000;1 ;Action    ;
                      CaptionML=[DEU=Letzter Satz;
                                 ENU=Last Set;
                                 NLD=Laatste set];
                      ToolTipML=[DEU=Letzter Satz;
                                 ENU=Last Set;
                                 NLD=Laatste set];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::LastRec);
                                 UpdateMatrixSubForm;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528703;;Container;
                ContainerType=ContentArea }

    { 1100528729;1;Group  ;
                CaptionML=[DEU=Optionen;
                           ENU=Options;
                           NLD=Opties];
                GroupType=Group }

    { 1100528727;2;Field  ;
                CaptionML=[DEU=Spaltennamen anzeigen;
                           ENU=Show Column Name;
                           NLD=Kolomnaam weergeven];
                SourceExpr=ShowColumnName;
                OnValidate=BEGIN
                             MATRIX_GenerateColumnCaptions(MATRIX_Step::Same);
                             UpdateMatrixSubForm;
                           END;
                            }

    { 1100528700;1;Part   ;
                Name=MATRIX;
                PagePartID=Page11127269;
                PartType=Page }

  }
  CODE
  {
    VAR
      MATRIX_MatrixRecord@1100528708 : Record 11012299;
      MATRIX_MatrixRecords@1100528707 : ARRAY [32] OF Record 11012299;
      MATRIX_MaximumSetLength@1100528706 : Integer;
      MATRIX_PrimKeyRecInCurrSet@1100528705 : Text[1024];
      MATRIX_CaptionSet@1100528704 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1100528703 : Text[250];
      MATRIX_CurrSetLength@1100528702 : Integer;
      MATRIX_Step@1100528701 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec';
      PrevVendAss@1100529000 : Record 11012298;
      ShowColumnName@1100525001 : Boolean;
      SelectVendor@1100528500 : Code[20];

    LOCAL PROCEDURE MATRIX_GenerateColumnCaptions@1152(MATRIX_SetWanted@1000 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn');
    VAR
      MatrixManagement@1002 : Codeunit 9200;
      I@1004 : Integer;
      RecRef@1006 : RecordRef;
      CaptionFieldNo@1100525000 : Integer;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MATRIX_MatrixRecords);

      MATRIX_MatrixRecord.SETRANGE(Date, Date);
      IF SelectVendor <> '' THEN
        MATRIX_MatrixRecord.SETRANGE("Vendor No.", SelectVendor);

      CaptionFieldNo := MATRIX_MatrixRecord.FIELDNO("Vendor No.");

      RecRef.GETTABLE(MATRIX_MatrixRecord);
      RecRef.SETTABLE(MATRIX_MatrixRecord);
      MatrixManagement.GenerateMatrixData(
        RecRef,
        MATRIX_SetWanted,
        MATRIX_MaximumSetLength,
        CaptionFieldNo,
        MATRIX_PrimKeyRecInCurrSet,
        MATRIX_CaptionSet,
        MATRIX_CaptionRange,
        MATRIX_CurrSetLength);

      I := 1;
      IF MATRIX_PrimKeyRecInCurrSet <> '' THEN
        MATRIX_MatrixRecord.SETPOSITION(MATRIX_PrimKeyRecInCurrSet);
      IF MATRIX_MatrixRecord.FIND('=') THEN
        REPEAT
          MATRIX_MatrixRecords[I].COPY(MATRIX_MatrixRecord);
          IF ShowColumnName THEN BEGIN
            MATRIX_MatrixRecord.CALCFIELDS("Vendor Name");
            IF MATRIX_MatrixRecord."Vendor Name" <> '' THEN
              MATRIX_CaptionSet[I] := MATRIX_MatrixRecord."Vendor Name";
          END;
          IF MATRIX_CaptionSet[I] = '' THEN
            MATRIX_CaptionSet[I] := ' ';
          I := I + 1;
        UNTIL (I > MATRIX_CurrSetLength) OR (MATRIX_MatrixRecord.NEXT <> 1);

      FOR I := I TO MATRIX_MaximumSetLength DO
        MATRIX_CaptionSet[I] := ' '; // Fill unused captions with space char, otherwise rubbish is showed in the matrix
    END;

    LOCAL PROCEDURE UpdateMatrixSubForm@7();
    BEGIN
      CurrPage.MATRIX.PAGE.Load(
        MATRIX_CaptionSet,
        MATRIX_MatrixRecords,
        MATRIX_CurrSetLength,
        Date);
    END;

    PROCEDURE SetVendor@1100528500(VendorNo@1100528500 : Code[20]);
    BEGIN
      SelectVendor := VendorNo;
    END;

    BEGIN
    END.
  }
}

