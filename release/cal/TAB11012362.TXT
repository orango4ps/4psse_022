OBJECT Table 11012362 Site Mngmnt. Proj.Hours Header
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Inserted := TODAY;
               "Inserted By" := USERID;

               IF "Project No." = '' THEN
                 ERROR(Text003);

               SiteMgtHrSetup.GET;
               IF SiteMgtHrSetup."Sel. Empl./Codes by Proj./Wk" THEN BEGIN
                 INSERT;
                 CopySelectedForProjOfPrevWeek(Year, Week, "Receiving Company", "Project No.", TRUE);
                 DELETE;
               END;
             END;

    OnModify=BEGIN
               Modified := CURRENTDATETIME;
               "Modified By" := USERID;
             END;

    OnDelete=VAR
               ProjHrEmplSel@1210190000 : Record 11126058;
               ProjHrCostObjSel@1210190001 : Record 11126059;
               ProjHrCostCodeSel@1210190002 : Record 11126060;
               SubContrHrAcc@1210190003 : Record 11020452;
             BEGIN
               ProjHoursLine.RESET;
               ProjHoursLine.SETRANGE(Year,Year);
               ProjHoursLine.SETRANGE(Week,Week);
               ProjHoursLine.SETRANGE("Receiving Company","Receiving Company");
               ProjHoursLine.SETRANGE("Project No.","Project No.");
               ProjHoursLine.DELETEALL(TRUE);

               ProjHrEmplSel.SETRANGE(Year,Year);
               ProjHrEmplSel.SETRANGE(Week,Week);
               ProjHrEmplSel.SETRANGE("Receiving Company","Receiving Company");
               ProjHrEmplSel.SETRANGE("Project No.","Project No.");
               ProjHrEmplSel.DELETEALL;

               ProjHrCostObjSel.SETRANGE(Year,Year);
               ProjHrCostObjSel.SETRANGE(Week,Week);
               ProjHrCostObjSel.SETRANGE("Receiving Company","Receiving Company");
               ProjHrCostObjSel.SETRANGE("Project No.","Project No.");
               ProjHrCostObjSel.DELETEALL;

               ProjHrCostCodeSel.SETRANGE(Year,Year);
               ProjHrCostCodeSel.SETRANGE(Week,Week);
               ProjHrCostCodeSel.SETRANGE("Receiving Company","Receiving Company");
               ProjHrCostCodeSel.SETRANGE("Project No.","Project No.");
               ProjHrCostCodeSel.DELETEALL;

               //*DP00034
               SubContrHrAcc.SETRANGE(Year,Year);
               SubContrHrAcc.SETRANGE(Week,Week);
               SubContrHrAcc.SETRANGE("Receiving Company","Receiving Company");
               SubContrHrAcc.SETRANGE("Project No.","Project No.");
               SubContrHrAcc.DELETEALL;
             END;

    OnRename=VAR
               ProjHrEmplSel@1210190002 : Record 11126058;
               ProjHrCostObjSel@1210190001 : Record 11126059;
               ProjHrCostCodeSel@1210190000 : Record 11126060;
               SubContrHrAcc@1210190003 : Record 11020452;
             BEGIN
               ProjHoursLine.RESET;
               ProjHoursLine.SETRANGE(Year,xRec.Year);
               ProjHoursLine.SETRANGE(Week,xRec.Week);
               ProjHoursLine.SETRANGE("Receiving Company",xRec."Receiving Company");
               ProjHoursLine.SETRANGE("Project No.",xRec."Project No.");
               IF NOT ProjHoursLine.ISEMPTY THEN
                 ERROR(Text001, ProjHoursLine.TABLECAPTION);

               SiteMgtHrSetup.GET;

               ProjHrEmplSel.SETRANGE(Year,xRec.Year);
               ProjHrEmplSel.SETRANGE(Week,xRec.Week);
               ProjHrEmplSel.SETRANGE("Receiving Company",xRec."Receiving Company");
               ProjHrEmplSel.SETRANGE("Project No.",xRec."Project No.");
               IF NOT ProjHrEmplSel.ISEMPTY THEN BEGIN
                 IF SiteMgtHrSetup."Sel. Empl./Codes by Proj./Wk" THEN
                   ERROR(Text001, ProjHrEmplSel.TABLECAPTION);
                 ProjHrEmplSel.DELETEALL;
               END;

               ProjHrCostObjSel.SETRANGE(Year,xRec.Year);
               ProjHrCostObjSel.SETRANGE(Week,xRec.Week);
               ProjHrCostObjSel.SETRANGE("Receiving Company",xRec."Receiving Company");
               ProjHrCostObjSel.SETRANGE("Project No.",xRec."Project No.");
               IF NOT ProjHrCostObjSel.ISEMPTY THEN BEGIN
                 IF SiteMgtHrSetup."Sel. Empl./Codes by Proj./Wk" THEN
                   ERROR(Text001, ProjHrCostObjSel.TABLECAPTION);
                 ProjHrCostObjSel.DELETEALL;
               END;

               ProjHrCostCodeSel.SETRANGE(Year,xRec.Year);
               ProjHrCostCodeSel.SETRANGE(Week ,xRec.Week);
               ProjHrCostCodeSel.SETRANGE("Receiving Company",xRec."Receiving Company");
               ProjHrCostCodeSel.SETRANGE("Project No.",xRec."Project No.");
               IF NOT ProjHrCostCodeSel.ISEMPTY THEN BEGIN
                 IF SiteMgtHrSetup."Sel. Empl./Codes by Proj./Wk" THEN
                   ERROR(Text001, ProjHrCostCodeSel.TABLECAPTION);
                 ProjHrCostCodeSel.DELETEALL;
               END;

               //*DP00034
               SubContrHrAcc.RESET;
               SubContrHrAcc.SETRANGE(Year,xRec.Year);
               SubContrHrAcc.SETRANGE(Week,xRec.Week);
               SubContrHrAcc.SETRANGE("Receiving Company",xRec."Receiving Company");
               SubContrHrAcc.SETRANGE("Project No.",xRec."Project No.");
               IF NOT SubContrHrAcc.ISEMPTY THEN
                 ERROR(Text001, SubContrHrAcc.TABLECAPTION);
             END;

    CaptionML=[ENU=Site Mngmnt. Project Hours Header;
               NOR=Byggeldelse, hode for prosjekttimer;
               SVE=Byggledning Rubrik fîr projekttimmar];
    LookupPageID=Page11072127;
  }
  FIELDS
  {
    { 20  ;   ;Year                ;Integer       ;OnValidate=BEGIN
                                                                ValidateFields(FIELDCAPTION(Year));
                                                              END;

                                                   CaptionML=[ENU=Year;
                                                              NOR=èr;
                                                              SVE=èr];
                                                   MinValue=1 }
    { 30  ;   ;Week                ;Integer       ;OnValidate=BEGIN
                                                                ValidateFields(FIELDCAPTION(Week));
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupWeek(TRUE);
                                                            END;

                                                   CaptionML=[ENU=Week;
                                                              NOR=Uke;
                                                              SVE=Vecka];
                                                   MinValue=1;
                                                   MaxValue=53 }
    { 35  ;   ;Project No.         ;Code20        ;TableRelation="Site Mngmnt. Hours Objects".Code WHERE (Type=FILTER(Project));
                                                   OnValidate=BEGIN
                                                                //SelectProject();  //* Now done on validate in the form, because of problems when called from 'Site Mgt BRW' (F11125526)
                                                                                    //* Then no other project / receiving company may be selected
                                                              END;

                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr] }
    { 39  ;   ;Receiving Company   ;Text50        ;TableRelation="Site Mngmnt. Hours Companies";
                                                   OnValidate=VAR
                                                                ProjectRec@1100485000 : Record 11012359;
                                                              BEGIN
                                                                IF "Project No." <> '' THEN
                                                                  ProjectRec.GET("Receiving Company",ProjectRec.Type::Project,"Project No.");
                                                                "Department Code" := ProjectRec."Department Code";
                                                              END;

                                                   CaptionML=[ENU=Supplying Company;
                                                              NOR=Leverende  selskap;
                                                              SVE=Levererande fîretag] }
    { 41  ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              NOR=Dokumentnr.;
                                                              SVE=Dokumentnr] }
    { 42  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              NOR=Bokfõringsdato;
                                                              SVE=Bokfîringsdatum];
                                                   Editable=No }
    { 50  ;   ;Project Description ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Site Mngmnt. Hours Objects".Description WHERE (Company=FIELD(Receiving Company),
                                                                                                                      Type=CONST(Project),
                                                                                                                      Code=FIELD(Project No.)));
                                                   CaptionML=[ENU=Project Description;
                                                              NOR=Prosjektbeskrivelse;
                                                              SVE=Projektbeskrivning];
                                                   Editable=No }
    { 60  ;   ;Inserted            ;Date          ;CaptionML=[ENU=Inserted on;
                                                              NOR=Satt inn den;
                                                              SVE=Infogad den] }
    { 70  ;   ;Modified            ;DateTime      ;CaptionML=[ENU=Modified;
                                                              NOR=Endret;
                                                              SVE=éndrad] }
    { 80  ;   ;Inserted By         ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Inserted By;
                                                              NOR=Satt inn av;
                                                              SVE=Infogad av] }
    { 90  ;   ;Modified By         ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Modified By;
                                                              NOR=Endret av;
                                                              SVE=éndrad av] }
    { 100 ;   ;Generated           ;Boolean       ;CaptionML=[ENU=Generated;
                                                              NOR=Generert;
                                                              SVE=Genererad] }
    { 110 ;   ;Called From Site Mgt Form;Boolean  ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Called From Site Mgt Form;
                                                   Editable=No }
    { 120 ;   ;Shift Code Filter   ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Shift (SMF)";
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Shift Code Filter;
                                                              NOR=Skiftkodefilter;
                                                              SVE=Skiftkodsfilter];
                                                   Editable=No }
    { 130 ;   ;Work Date Filter    ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Work Date Filter;
                                                   Editable=No }
    { 200 ;   ;Department Code     ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Avdelingskode;
                                                              SVE=Avdelningskod];
                                                   CaptionClass='1,1,1' }
    { 240 ;   ;Released            ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Released;
                                                              SVE=SlÑppt] }
  }
  KEYS
  {
    {    ;Year,Week,Receiving Company,Project No. ;Clustered=Yes }
    {    ;Receiving Company,Project No.,Year,Week  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TmpHourHeader@1100485010 : TEMPORARY Record 11012360;
      TmpHourLine@1100485009 : TEMPORARY Record 11012361;
      ProjHoursLine@1100485011 : Record 11012363;
      Text001@1100525000 : TextConst 'ENU=Rename not allowed. %1 present.;NOR=Gi nytt navn er ikke tillatt. %1 tilstede.;SVE=Det Ñr inte tillÜtet att byta namn. %1 finns.';
      Text003@1100485012 : TextConst 'ENU=Job No. Required;NOR=Jobbnr. PÜkrevd;SVE=Jobbnr krÑvs';
      SiteMgtHrSetup@1210190000 : Record 11012355;
      DPA_Management@1100525001 : Codeunit 11012783;

    PROCEDURE GetPostingDateL@1210190000();
    VAR
      PostingDateRec@1210190000 : Record 11020202;
    BEGIN
      "Posting Date" := DWY2DATE(5,Week,Year);

      IF PostingDateRec.GET(Year, Week) THEN
        IF PostingDateRec."Posting Date" <> 0D THEN
          "Posting Date" := PostingDateRec."Posting Date";
    END;

    PROCEDURE ValidateFields@1210190001(ChangedFieldName@1210190000 : Text[100]);
    BEGIN
      TmpHourHeader.TRANSFERFIELDS(Rec);
      CASE ChangedFieldName OF
        FIELDCAPTION(Year) : TmpHourHeader.VALIDATE(Year,Year);
        FIELDCAPTION(Week) : TmpHourHeader.VALIDATE(Week,Week);
        FIELDCAPTION("Project No.") :
          BEGIN
            TmpHourLine.Type := TmpHourLine.Type::Project;
            TmpHourLine."Receiving Company" := "Receiving Company";
            TmpHourLine."Object No." := "Project No.";
            TmpHourLine.SetProjHrsValidate(0);
            TmpHourLine.VALIDATE("Object No.");
          END;
      END;
      TRANSFERFIELDS(TmpHourHeader);
    END;

    PROCEDURE LookupWeek@1100525000(iEdtitable@1100525000 : Boolean);
    VAR
      DateSelectionManagement@1100525500 : Codeunit 11130005;
    BEGIN
      DateSelectionManagement.GetWeekYear(Week, Year);
      VALIDATE(Week);
    END;

    PROCEDURE SelectProject@1100525001();
    VAR
      lvObjProjRec@1100525001 : Record 11012359;
    BEGIN
      lvObjProjRec.SETCURRENTKEY(Type, Code);
      lvObjProjRec.FILTERGROUP(6);
      lvObjProjRec.SETRANGE(Type, lvObjProjRec.Type::Project);
      lvObjProjRec.FILTERGROUP(0);
      lvObjProjRec.SETRANGE(Code, "Project No.");
      IF lvObjProjRec.COUNT > 1 THEN BEGIN
        lvObjProjRec.Company := "Receiving Company";
        lvObjProjRec.Code := "Project No.";
        IF PAGE.RUNMODAL(0, lvObjProjRec) = ACTION::LookupOK THEN BEGIN
          "Receiving Company" := lvObjProjRec.Company;
          "Project No." := lvObjProjRec.Code;
          "Department Code" := lvObjProjRec."Department Code";
        END;
      END ELSE BEGIN
        IF lvObjProjRec.FINDFIRST THEN BEGIN
          "Receiving Company" := lvObjProjRec.Company;
          "Project No." := lvObjProjRec.Code;
          "Department Code" := lvObjProjRec."Department Code";
        END;
      END;
    END;

    PROCEDURE CopySelectedForProjOfPrevWeek@1210190002(YearNo@1100525001 : Integer;WeekNo@1100525002 : Integer;ReceivingCompany@1210190001 : Text[50];ProjectNo@1100525000 : Code[20];WithInsertHourLines@1210190006 : Boolean);
    VAR
      ProjHrHeadPrev@1210190000 : Record 11012362;
      ProjHrEmplSel@1100525003 : Record 11126058;
      ProjHrEmplSel2@1100525004 : Record 11126058;
      ProjHrCostObjSel@1210190002 : Record 11126059;
      ProjHrCostObjSel2@1210190003 : Record 11126059;
      ProjHrCostCodeSel@1210190004 : Record 11126060;
      ProjHrCostCodeSel2@1210190005 : Record 11126060;
      EmployeesRec@1210190007 : Record 11012357;
    BEGIN
      IF (YearNo = 0) OR (WeekNo = 0) OR (ReceivingCompany = '') OR (ProjectNo = '') THEN
        EXIT;
      SiteMgtHrSetup.GET;
      IF NOT SiteMgtHrSetup."Sel. Empl./Codes by Proj./Wk" THEN
        EXIT;
      IF NOT SiteMgtHrSetup.CheckPostingInWeekAllowed(YearNo, WeekNo, ReceivingCompany, FALSE) THEN
        EXIT;

      //* Determine previous week of project
      ProjHrHeadPrev.SETCURRENTKEY("Receiving Company", "Project No.", Year, Week);
      ProjHrHeadPrev.SETRANGE("Receiving Company", ReceivingCompany);
      ProjHrHeadPrev.SETRANGE("Project No.", ProjectNo);
      ProjHrHeadPrev.SETRANGE(Year, YearNo);
      ProjHrHeadPrev.SETFILTER(Week, '<%1', WeekNo);
      IF NOT ProjHrHeadPrev.FINDLAST THEN BEGIN
        ProjHrHeadPrev.SETFILTER(Year, '<%1', YearNo);
        ProjHrHeadPrev.SETRANGE(Week);  //* Reset filter
        IF NOT ProjHrHeadPrev.FINDLAST THEN
          EXIT;
      END;

      //* Copy only when there are not already selections (empl, costobj, costcode) for year/week/project
      ProjHrEmplSel.SETRANGE(Year, YearNo);
      ProjHrEmplSel.SETRANGE(Week, WeekNo);
      ProjHrEmplSel.SETRANGE("Receiving Company", ReceivingCompany);
      ProjHrEmplSel.SETRANGE("Project No.", ProjectNo);
      ProjHrEmplSel.SETRANGE(Select, TRUE);
      IF NOT ProjHrEmplSel.ISEMPTY THEN
        EXIT;

      ProjHrCostObjSel.SETRANGE(Year, YearNo);
      ProjHrCostObjSel.SETRANGE(Week, WeekNo);
      ProjHrCostObjSel.SETRANGE("Receiving Company", ReceivingCompany);
      ProjHrCostObjSel.SETRANGE("Project No.", ProjectNo);
      ProjHrCostObjSel.SETRANGE(Select, TRUE);
      IF NOT ProjHrCostObjSel.ISEMPTY THEN
        EXIT;

      ProjHrCostCodeSel.SETRANGE(Year, YearNo);
      ProjHrCostCodeSel.SETRANGE(Week, WeekNo);
      ProjHrCostCodeSel.SETRANGE("Receiving Company", ReceivingCompany);
      ProjHrCostCodeSel.SETRANGE("Project No.", ProjectNo);
      ProjHrCostCodeSel.SETRANGE(Select, TRUE);
      IF NOT ProjHrCostCodeSel.ISEMPTY THEN
        EXIT;

      //* Delete records with Select=False (should not be there)
      ProjHrEmplSel.SETRANGE(Select, FALSE);
      ProjHrEmplSel.DELETEALL;
      ProjHrCostObjSel.SETRANGE(Select, FALSE);
      ProjHrCostObjSel.DELETEALL;
      ProjHrCostCodeSel.SETRANGE(Select, FALSE);
      ProjHrCostCodeSel.DELETEALL;

      //* Copy selections of project from a previous week
      ProjHrEmplSel.RESET;
      ProjHrEmplSel.SETRANGE("Receiving Company", ReceivingCompany);
      ProjHrEmplSel.SETRANGE("Project No.", ProjectNo);
      ProjHrEmplSel.SETRANGE(Year, ProjHrHeadPrev.Year);
      ProjHrEmplSel.SETRANGE(Week, ProjHrHeadPrev.Week);
      ProjHrEmplSel.SETRANGE(Select, TRUE);
      IF ProjHrEmplSel.FINDSET THEN BEGIN
        REPEAT
          IF EmployeesRec.GET(ProjHrEmplSel.Company, ProjHrEmplSel."Employee No.") THEN BEGIN
            IF EmployeesRec."Account Hours" <> EmployeesRec."Account Hours"::"Not allowed" THEN BEGIN
              ProjHrEmplSel2 := ProjHrEmplSel;
              ProjHrEmplSel2.Year := YearNo;
              ProjHrEmplSel2.Week := WeekNo;
              ProjHrEmplSel2."Search Name" := EmployeesRec."Search Name";
              ProjHrEmplSel2.INSERT;
            END;
          END;
        UNTIL ProjHrEmplSel.NEXT = 0;
      END;

      ProjHrCostObjSel.RESET;
      ProjHrCostObjSel.SETRANGE("Receiving Company", ReceivingCompany);
      ProjHrCostObjSel.SETRANGE("Project No.", ProjectNo);
      ProjHrCostObjSel.SETRANGE(Year, ProjHrHeadPrev.Year);
      ProjHrCostObjSel.SETRANGE(Week, ProjHrHeadPrev.Week);
      ProjHrCostObjSel.SETRANGE(Select, TRUE);
      IF ProjHrCostObjSel.FINDSET THEN BEGIN
        REPEAT
          ProjHrCostObjSel2 := ProjHrCostObjSel;
          ProjHrCostObjSel2.Year := YearNo;
          ProjHrCostObjSel2.Week := WeekNo;
          ProjHrCostObjSel2.INSERT;
        UNTIL ProjHrCostObjSel.NEXT = 0;
      END;

      ProjHrCostCodeSel.RESET;
      ProjHrCostCodeSel.SETRANGE("Receiving Company", ReceivingCompany);
      ProjHrCostCodeSel.SETRANGE("Project No.", ProjectNo);
      ProjHrCostCodeSel.SETRANGE(Year, ProjHrHeadPrev.Year);
      ProjHrCostCodeSel.SETRANGE(Week, ProjHrHeadPrev.Week);
      ProjHrCostCodeSel.SETRANGE(Select, TRUE);
      IF ProjHrCostCodeSel.FINDSET THEN BEGIN
        REPEAT
          ProjHrCostCodeSel2 := ProjHrCostCodeSel;
          ProjHrCostCodeSel2.Year := YearNo;
          ProjHrCostCodeSel2.Week := WeekNo;
          ProjHrCostCodeSel2.INSERT;
        UNTIL ProjHrCostCodeSel.NEXT = 0;
      END;

      IF WithInsertHourLines THEN
        InsertProjHrLinesSelectedEmpl(YearNo, WeekNo, ReceivingCompany, ProjectNo);
    END;

    PROCEDURE InsertProjHrLinesSelectedEmpl@1210190003(YearNo@1210190003 : Integer;WeekNo@1210190002 : Integer;ReceivingCompany@1210190001 : Text[50];ProjectNo@1210190000 : Code[20]);
    VAR
      ProjHrHead@1210190004 : Record 11012362;
      ProjHrLine@1210190005 : Record 11012363;
      ProjHrLine2@1210190007 : Record 11012363;
      ProjHrEmplSel@1210190006 : Record 11126058;
      NextLineNo@1210190008 : Integer;
    BEGIN
      IF (YearNo = 0) OR (WeekNo = 0) OR (ReceivingCompany = '') OR (ProjectNo = '') THEN
        EXIT;
      SiteMgtHrSetup.GET;
      IF NOT SiteMgtHrSetup."Sel. Empl./Codes by Proj./Wk" THEN
        EXIT;
      IF NOT SiteMgtHrSetup.CheckPostingInWeekAllowed(YearNo, WeekNo, ReceivingCompany, FALSE) THEN
        EXIT;
      IF NOT ProjHrHead.GET(YearNo, WeekNo, ReceivingCompany, ProjectNo) THEN
        EXIT;

      //* Delete hourlines that are not selected employees anymore (only 'empty' lines, no hours/amount)
      ProjHrLine.RESET;
      ProjHrLine.SETRANGE(Year, YearNo);
      ProjHrLine.SETRANGE(Week, WeekNo);
      ProjHrLine.SETRANGE("Receiving Company", ReceivingCompany);
      ProjHrLine.SETRANGE("Project No.", ProjectNo);
      ProjHrLine.SETRANGE("Total Line", 0);
      ProjHrLine.SETRANGE(Amount, 0);
      ProjHrLine.SETFILTER("Employee No.", '<>%1', '');
      IF ProjHrLine.FINDSET(TRUE, FALSE) THEN BEGIN
        REPEAT
          IF NOT ProjHrEmplSel.GET(
            YearNo, WeekNo, ReceivingCompany , ProjectNo, ProjHrLine."Supplying Company", ProjHrLine."Employee No.")
          THEN
            ProjHrLine.DELETE(TRUE);
        UNTIL ProjHrLine.NEXT = 0;
      END;

      //* Insert (empty) hourlines of selected employees (only if not already present)
      ProjHrEmplSel.RESET;
      ProjHrEmplSel.SETRANGE(Year, YearNo);
      ProjHrEmplSel.SETRANGE(Week, WeekNo);
      ProjHrEmplSel.SETRANGE("Receiving Company", ReceivingCompany);
      ProjHrEmplSel.SETRANGE("Project No.", ProjectNo);
      ProjHrEmplSel.SETRANGE(Select, TRUE);
      IF ProjHrEmplSel.FINDSET THEN BEGIN
        ProjHrLine.RESET;
        ProjHrLine.SETRANGE(Year, YearNo);
        ProjHrLine.SETRANGE(Week, WeekNo);
        ProjHrLine.SETRANGE("Receiving Company", ReceivingCompany);
        ProjHrLine.SETRANGE("Project No.", ProjectNo);
        IF ProjHrLine.FINDLAST THEN
          NextLineNo := ProjHrLine."Line No." + 10000
        ELSE
          NextLineNo := 10000;
        REPEAT
          ProjHrLine.SETRANGE("Supplying Company", ProjHrEmplSel.Company);
          ProjHrLine.SETRANGE("Employee No.", ProjHrEmplSel."Employee No.");
          IF ProjHrLine.ISEMPTY THEN BEGIN
            ProjHrLine2.INIT;
            ProjHrLine2.Year := YearNo;
            ProjHrLine2.Week := WeekNo;
            ProjHrLine2."Receiving Company" := ReceivingCompany;
            ProjHrLine2."Project No." := ProjectNo;
            ProjHrLine2."Line No." := NextLineNo;
            ProjHrLine2.Type := ProjHrLine2.Type::Project;
            ProjHrLine2."Supplying Company" := ProjHrEmplSel.Company;
            ProjHrLine2.VALIDATE("Employee No.", ProjHrEmplSel."Employee No.");
            ProjHrLine2.INSERT(TRUE);
            NextLineNo := NextLineNo + 10000;
          END;
        UNTIL ProjHrEmplSel.NEXT = 0;
      END;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11012038) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11012362');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Hour Accounting", "Department Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Department Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Department Code");
    END;

    PROCEDURE ReleaseLines@1100528500();
    VAR
      SiteMngmntHoursLine@1100528500 : Record 11012361;
    BEGIN
      IF Released THEN
        EXIT;

      ProjHoursLine.SETRANGE(Year,Year);
      ProjHoursLine.SETRANGE(Week,Week);
      ProjHoursLine.SETRANGE("Receiving Company","Receiving Company");
      ProjHoursLine.SETRANGE("Project No.","Project No.");
      IF ProjHoursLine.FINDSET THEN
        REPEAT
          SiteMngmntHoursLine.SETRANGE(Year,ProjHoursLine.Year);
          SiteMngmntHoursLine.SETRANGE(Week,ProjHoursLine.Week);
          SiteMngmntHoursLine.SETRANGE("Receiving Company",ProjHoursLine."Receiving Company");
          SiteMngmntHoursLine.SETRANGE("Employee No.",ProjHoursLine."Employee No.");
          SiteMngmntHoursLine.SETRANGE("Connection No.",ProjHoursLine."Connection No.");
          IF SiteMngmntHoursLine.FINDSET THEN
            REPEAT
              IF (SiteMngmntHoursLine.Status <> SiteMngmntHoursLine.Status::Posted) AND
                (SiteMngmntHoursLine.Status <> SiteMngmntHoursLine.Status::"Pending Approval") AND
                (SiteMngmntHoursLine.Status <> SiteMngmntHoursLine.Status::Approved)
              THEN
                SiteMngmntHoursLine.Release;
            UNTIL SiteMngmntHoursLine.NEXT = 0;
        UNTIL ProjHoursLine.NEXT = 0;

      Released := TRUE;
    END;

    PROCEDURE ReopenLines@1100528501();
    VAR
      SiteMngmntHoursLine@1100528500 : Record 11012361;
    BEGIN
      IF NOT Released THEN
        EXIT;

      ProjHoursLine.SETRANGE(Year,Year);
      ProjHoursLine.SETRANGE(Week,Week);
      ProjHoursLine.SETRANGE("Receiving Company","Receiving Company");
      ProjHoursLine.SETRANGE("Project No.","Project No.");
      IF ProjHoursLine.FINDSET THEN
        REPEAT
          SiteMngmntHoursLine.SETRANGE(Year,ProjHoursLine.Year);
          SiteMngmntHoursLine.SETRANGE(Week,ProjHoursLine.Week);
          SiteMngmntHoursLine.SETRANGE("Receiving Company",ProjHoursLine."Receiving Company");
          SiteMngmntHoursLine.SETRANGE("Employee No.",ProjHoursLine."Employee No.");
          SiteMngmntHoursLine.SETRANGE("Connection No.",ProjHoursLine."Connection No.");
          IF SiteMngmntHoursLine.FINDSET THEN
            REPEAT
              SiteMngmntHoursLine.Reopen;
            UNTIL SiteMngmntHoursLine.NEXT = 0;
        UNTIL ProjHoursLine.NEXT = 0;

      Released := FALSE;
    END;

    BEGIN
    END.
  }
}

