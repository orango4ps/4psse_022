OBJECT Page 11230004 FSA User V2 FSA WS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=;
    SourceTable=Table11126698;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             FillSourceTable;
           END;

  }
  CONTROLS
  {
    { 1100526000;;Container;
                ContainerType=ContentArea }

    { 1100526001;1;Group  ;
                GroupType=Repeater }

    { 1100526003;2;Field  ;
                Name=ResourceNo;
                SourceExpr="Resource No." }

    { 1100526004;2;Field  ;
                Name=Active;
                SourceExpr=Active }

    { 1100526005;2;Field  ;
                Name=ResourceCompany;
                SourceExpr="Resource Company" }

    { 1100526006;2;Field  ;
                Name=Name;
                SourceExpr="Resource Name" }

    { 1100526002;2;Field  ;
                Name=SetupCompany;
                SourceExpr=GetPlanGroupSetupCompany }

    { 1100526007;2;Field  ;
                Name=EmployeeNo;
                SourceExpr=GetEmployeeNoFromResource }

    { 1100528700;2;Field  ;
                Name=IsBorgUser;
                SourceExpr=GetIsBorgUser }

  }
  CODE
  {

    LOCAL PROCEDURE GetEmployeeNoFromResource@1100528001() EmployeeNo : Code[20];
    VAR
      ResourceWOP@1100528001 : Record 11229278;
    BEGIN
      EmployeeNo := '';

      IF "Resource No." = '' THEN
        EXIT;

      IF ResourceWOP.GET("Resource No.") THEN
        IF ResourceWOP.Type = ResourceWOP.Type::Employee THEN
          EmployeeNo := ResourceWOP."Source No.";
    END;

    LOCAL PROCEDURE FillSourceTable@1100528700();
    VAR
      FieldServiceAppSetup@1100528703 : Record 11126700;
      FSAUser@1100528702 : Record 11126698;
      FSAUserSetupGAP@1100528701 : Record 11229875;
      AppUserSetupGAP@1100528700 : Record 11124976;
      CompanyPlanGroup@1100528705 : Record 11229300;
      CompanyPlanGroupCode@1100528704 : Code[20];
    BEGIN
      IF NOT FieldServiceAppSetup.GET THEN EXIT;

      CompanyPlanGroupCode := CompanyPlanGroup.GetCurrentCompanyPlanGroupCode;

      IF (CompanyPlanGroupCode <> '') THEN BEGIN
        CompanyPlanGroup.GET(CompanyPlanGroupCode);

        FSAUserSetupGAP.SETRANGE(Active, FSAUserSetupGAP.Active::Yes);
        IF FSAUserSetupGAP.FINDSET THEN
          REPEAT
            AppUserSetupGAP.RESET;
            AppUserSetupGAP.SETFILTER("Resource Company", '<>%1', '');
            AppUserSetupGAP.SETRANGE(Username, FSAUserSetupGAP.Username);

            IF AppUserSetupGAP.FINDFIRST THEN BEGIN
              AppUserSetupGAP.CALCFIELDS("Resource Company", "Resource Name");
              IF CompanyPlanGroup.BelongsCompanyToCurrentCompanyPlanGroup(AppUserSetupGAP."Resource Company") THEN BEGIN
                Rec.INIT;
                Rec.Username := AppUserSetupGAP.Username;
                Rec.Active := TRUE;
                Rec."Resource No." := AppUserSetupGAP."Resource No.";
                Rec."Resource Company" := AppUserSetupGAP."Resource Company";
                Rec."Resource Name" := AppUserSetupGAP."Resource Name";
                Rec.INSERT;
              END;
            END;
          UNTIL FSAUserSetupGAP.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE GetIsBorgUser@1100528000() : Boolean;
    VAR
      BORGManagement@1100528000 : Codeunit 11012859;
      BORGEmployee@1100528001 : Record 11012212;
      ServiceSetup@1100528003 : Record 11012800;
      EmployeeNo@1100528004 : Code[20];
    BEGIN
      IF NOT BORGManagement.HasBorgLicense THEN
        EXIT(FALSE);

      ServiceSetup.GET;
      IF ServiceSetup."BORG Password Time Out" = 0 THEN
        EXIT(FALSE);

      EmployeeNo := GetEmployeeNoFromResource;
      IF EmployeeNo <> '' THEN
        IF BORGEmployee.GET(EmployeeNo) THEN
          EXIT(TRUE);

      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

