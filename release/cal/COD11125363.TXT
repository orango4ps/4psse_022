OBJECT Codeunit 11125363 CFW Web Service Interface
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11229460;
    OnRun=BEGIN
            ProcessConnectorDataLine(Rec);
          END;

  }
  CODE
  {
    VAR
      ConsumedWebService@1100528300 : Record 11229797;
      ConsumedWebServiceLine@1100528301 : Record 11229798;
      CFWConnector@1100528302 : Record 11229353;
      CFWConnectorManagement@1100528303 : Codeunit 11229291;
      Text000@1100528304 : TextConst 'DEU=Prozentsatz @1@@@@@@@@\Startzeit #2###### --> #3###### --> Endzeit #4#####;ENU=Percentage @1@@@@@@@@\Start Time  #2###### --> #3###### --> End Time #4#####;NLD=Percentage @1@@@@@@@@\Starttijd  #2###### --> #3###### --> Eindtijd #4#####';

    LOCAL PROCEDURE ProcessConnectorDataLine@1100528301(CFWConnectorDataLine@1100525000 : Record 11229460);
    VAR
      resultstring@1100525001 : Text;
      primkey@1100525002 : ARRAY [5] OF Text;
    BEGIN
      SetGlobalVars(CFWConnectorDataLine."Service Code", CFWConnectorDataLine."Service Code");

      CASE CFWConnector.Direction OF
        CFWConnector.Direction::Inbound:ProcessConnectorDataLineInbound(CFWConnectorDataLine);
        CFWConnector.Direction::Outbound:ProcessConnectorDataLineOutbound(CFWConnectorDataLine);
      END;
    END;

    LOCAL PROCEDURE ProcessConnectorDataLineInbound@1100528303(CFWConnectorDataLine@1100525005 : Record 11229460) : Boolean;
    VAR
      ChildCFWConnectorDataLine@1100525000 : Record 11229460;
      HasError@1100525001 : Boolean;
      Result@1100525002 : Text;
      MaxCounter@1100525006 : Integer;
      Counter@1100525007 : Integer;
      Percentage@1100525008 : Integer;
      PrevPercentage@1100525009 : Integer;
      Window@1100525010 : Dialog;
      StartTime@1100525012 : Time;
    BEGIN
      IF (CFWConnectorDataLine.Status  = CFWConnectorDataLine.Status::New) THEN BEGIN
        OnNewInbound(CFWConnectorDataLine);
        COMMIT;
        CFWConnectorDataLine.ReRead;
        IF (CFWConnectorDataLine."Single Step") THEN
          EXIT;
      END;

      IF (CFWConnectorDataLine.Status = CFWConnectorDataLine.Status::Available) THEN BEGIN
        OnAvailableInbound(CFWConnectorDataLine);
        COMMIT;
        CFWConnectorDataLine.ReRead;
        IF (CFWConnectorDataLine."Single Step") THEN
          EXIT;
      END;

      IF (CFWConnectorDataLine.Status = CFWConnectorDataLine.Status::Fetched) THEN BEGIN
        OnFetchedInbound(CFWConnectorDataLine);
        COMMIT;
        CFWConnectorDataLine.ReRead;
        IF (CFWConnectorDataLine."Single Step") THEN
          EXIT;
      END;

      IF (CFWConnectorDataLine.Status = CFWConnectorDataLine.Status::Extracted) THEN BEGIN
        ChildCFWConnectorDataLine.RESET;
        ChildCFWConnectorDataLine.SETRANGE("Service Code", CFWConnectorDataLine."Service Code");
        ChildCFWConnectorDataLine.SETRANGE("Service Code", CFWConnectorDataLine."Service Code");
        ChildCFWConnectorDataLine.SETFILTER("Company Name", '<>%1', '');
        ChildCFWConnectorDataLine.SETFILTER(Status, '%1|%2', ChildCFWConnectorDataLine.Status::Fetched,
          ChildCFWConnectorDataLine.Status::Error);
        ChildCFWConnectorDataLine.SETRANGE("Record Guid", CFWConnectorDataLine."Record Guid");
        IF (ChildCFWConnectorDataLine.FINDSET) THEN BEGIN
          MaxCounter := ChildCFWConnectorDataLine.COUNT;
          Window.OPEN(Text000);
          StartTime := TIME;
          PrevPercentage := -1;
          Counter := 0;
          REPEAT
            OnFetchedInbound(ChildCFWConnectorDataLine);
            COMMIT;
            Counter += 1;
            Percentage := ROUND(100*(Counter / MaxCounter), 1, '>');
            IF (Percentage <> PrevPercentage) THEN BEGIN
              Window.UPDATE(1, Percentage * 100);
              Window.UPDATE(2, StartTime);
              Window.UPDATE(3,TIME);
              IF (Percentage > 0) THEN
                Window.UPDATE(4,(StartTime + ROUND((TIME - StartTime) * (100 / Percentage), 1)));
              PrevPercentage := Percentage;
            END;
          UNTIL (ChildCFWConnectorDataLine.NEXT = 0);
          Window.CLOSE;
        END;
        IF (ChildCFWConnectorDataLine.GetNoOfRecordsByStatus2(STRSUBSTNO('%1', ChildCFWConnectorDataLine.Status::Error),
          CFWConnectorDataLine."Record Guid") = 0)
        THEN BEGIN
          CFWConnectorDataLine.ReRead;
          CFWConnectorDataLine.SetStatus(CFWConnectorDataLine.Status::Processed, '');
        END ELSE BEGIN
          ChildCFWConnectorDataLine.FINDFIRST;
          CFWConnectorDataLine.SetStatus(CFWConnectorDataLine.Status::Error, ChildCFWConnectorDataLine."Status Text");
        END;
      END;
    END;

    LOCAL PROCEDURE ProcessConnectorDataLineOutbound@1100528307(CFWConnectorDataLine@1100525005 : Record 11229460) : Boolean;
    BEGIN
    END;

    LOCAL PROCEDURE HandleResponse@1100528304(CFWConnectorDataLine@1100525000 : Record 11229460) : Integer;
    VAR
      RecRef@1100525002 : RecordRef;
    BEGIN
      IF (CFWConnectorDataLine.Status <> CFWConnectorDataLine.Status::Put) THEN
       EXIT(CFWConnectorDataLine.Status);

      CASE TRUE OF
        (CFWConnectorDataLine."Service Code" = '<INBOUND>') AND
        (CFWConnectorDataLine."Service Code" = 'HrCompMut'): BEGIN
          //do someting
        END;
      END;
      CFWConnectorDataLine.SetStatus(CFWConnectorDataLine.Status::Processed, '');
    END;

    LOCAL PROCEDURE OnNewInbound@1100528300(CFWConnectorDataLine@1100528300 : Record 11229460) : Integer;
    BEGIN
      CFWConnectorDataLine.SetStatus(CFWConnectorDataLine.Status::Available, '');
      EXIT(CFWConnectorDataLine.Status);
    END;

    LOCAL PROCEDURE OnAvailableInbound@1100528302(CFWConnectorDataLine@1100528300 : Record 11229460) : Integer;
    BEGIN
      CFWConnectorDataLine.SetStatus(CFWConnectorDataLine.Status::Fetched, '');
      EXIT(CFWConnectorDataLine.Status);
    END;

    LOCAL PROCEDURE OnFetchedInbound@1100525017(CFWConnectorDataLine@1100525013 : Record 11229460) : Integer;
    BEGIN
      //to be implemented
      EXIT(CFWConnectorDataLine.Status);
    END;

    LOCAL PROCEDURE SaveGetDataResponse@1100528306(WebServiceCode@1100525009 : Code[20];ConnectorCode@1100525013 : Text;CompName@1100525012 : Text;PrimKey@1100525011 : ARRAY [10] OF Text;RequestData@1100525010 : Text;ResultString@1100525015 : Text;GuidIn@1100525014 : GUID);
    VAR
      ResponseData@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      CFWConnectorDataLine@1100525016 : Record 11229460;
    BEGIN
      ResponseData := ResponseData.XmlDocument();
      ResponseData.InnerXml(ResultString);

      CFWConnectorDataLine.StoreWebData(WebServiceCode, ConnectorCode, CompName, PrimKey, RequestData, ResponseData,
        GuidIn,TRUE);
    END;

    LOCAL PROCEDURE SetGlobalVars@1100528305(ConsumedWebServiceCode@1100528300 : Code[20];ConnectorCode@1100528301 : Code[20]);
    BEGIN
      ConsumedWebService.GET(ConsumedWebServiceCode);
      ConsumedWebServiceLine.SETRANGE("Web Service Code", ConsumedWebServiceCode);
      ConsumedWebServiceLine.SETFILTER("Method Name", '%1', '@'+ConnectorCode);
      ConsumedWebServiceLine.FINDFIRST;
      CFWConnector.GET(ConsumedWebServiceCode, ConnectorCode);
    END;

    BEGIN
    END.
  }
}

