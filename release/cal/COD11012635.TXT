OBJECT Codeunit 11012635 Mail Template Data Migration
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=VAR
            MailTemplateTable@1100528300 : Record 11229453;
          BEGIN
            MailTemplateTable.SETRANGE("Mail Template No.", 0, 9999);
            IF (NOT MailTemplateTable.ISEMPTY) THEN BEGIN
              IF GUIALLOWED THEN
                MESSAGE(AlreadyMigratedTxt);
              EXIT;
            END;

            DeleteAllTables;
            MigrateEmailBodyToMailTemplate;
          END;

  }
  CODE
  {
    VAR
      AlreadyMigratedTxt@1100528300 : TextConst 'ENU=E-Mail Body Text is already migrated to Mail Template.';
      GenericTempTable@1100528301 : Record 11020579;
      MailTemplateManagement@1100528303 : Codeunit 11012622;
      AreYouSureTxt@1100525000 : TextConst 'ENU=AllMail Templates will be deleted\Are you very sure you want to continue?';
      NoBaseFoundTxt@1100528328 : TextConst 'ENU=No Base %1 found.';
      StringFunctions@1100528307 : Codeunit 11012273;
      CRLF@1100528329 : Text;
      DelCharString@1100528302 : Text;
      TableFunctionArr@1100528334 : ARRAY [100] OF Text;
      Counter@1100528305 : Integer;
      ServiceOrderDebriefTextTXT@1100528306 : TextConst 'ENU=Service Order Debrief Text';
      MailAppointmentConfTXT@1100528327 : TextConst 'ENU=Mail Appointment Confirmation (Call/Direct)';
      PurchaseOrderReceiptTXT@1100528326 : TextConst 'ENU=Purchase Order Receipt;SVE=Ink”psorder, inleverans';
      PurchaseReturnOrderTXT@1100528325 : TextConst 'ENU=Purchase Return Order;SVE=Ink”psreturorder';
      SendMailQuoteUpdateTXT@1100528324 : TextConst 'ENU=DPT Quote Update';
      HPTHRADemoUserTxt@1100528323 : TextConst 'ENU=HPT-HRA Demo User';
      CivilConstructionAppSummaryTxt@1100528322 : TextConst 'ENU=Civil Construction App - Summary';
      ServiceCallCommunicationTxt@1100528321 : TextConst 'ENU=Service Call Communication';
      ChangeRequestCommunicationTxt@1100528320 : TextConst 'ENU=Change Request Communication';
      DocketTxt@1100528319 : TextConst 'ENU=Docket';
      ReminderHoursManagerTxt@1100528318 : TextConst 'ENU=Reminder Hours - Manager';
      ReminderHoursSiteManagerTxt@1100528317 : TextConst 'ENU=Reminder Hours - Site Manager';
      ReminderHoursSiteManagerManagerTxt@1100528316 : TextConst 'ENU=Reminder Hours Site Manager - Manager';
      ReminderHoursEmployeeTxt@1100528315 : TextConst 'ENU=Reminder Hours - Employee';
      ConsentNotificationTxt@1100528314 : TextConst 'ENU=Consent Notification';
      HoursByEmployeeTxt@1100528313 : TextConst 'ENU=Hours by Employee;SVE="Timmar efter anst„lld "';
      WkaDataRequestTxt@1100528312 : TextConst 'ENU=WKA Data Request';
      PlantAppDemoUserTxt@1100528311 : TextConst 'ENU=Plant App Demo User';
      ProjectReportsTxt@1100528310 : TextConst 'ENU=Project Reports';
      OptionQuoteTxt@1100528309 : TextConst 'ENU=Option Quote;SVE=Alternativoffert';
      FieldDemoUserTxt@1100528308 : TextConst 'ENU=Field Service App Demo User';
      ServiceTextCauseTxt@1100528330 : TextConst 'ENU=ServiceTextCause';
      ServiceTextInternalTxt@1100528331 : TextConst 'ENU=ServiceTextInternal';
      ServiceTextProblemTxt@1100528332 : TextConst 'ENU=ServiceTextProblem';
      ServiceTextResolveTxt@1100528333 : TextConst 'ENU=ServiceTextResolve';
      SignHostSignerTxt@1100528304 : TextConst 'ENU=Signhost Sign Request';
      SignHostDocumentTxt@1100528335 : TextConst 'ENU=Signhost Signed Document';
      WarehouseDemoUserTxt@1100528336 : TextConst 'ENU=Warehouse App Demo User';

    PROCEDURE ForceDataMigration@1100525001();
    VAR
      MailTemplateTable@1100525000 : Record 11229453;
    BEGIN
      MailTemplateTable.SETRANGE("Mail Template No.", 0, 9999);
      IF (NOT MailTemplateTable.ISEMPTY) THEN BEGIN
        IF (NOT CONFIRM(STRSUBSTNO('%1\\%2', AlreadyMigratedTxt, AreYouSureTxt), FALSE)) THEN
          EXIT;
      END;

      DeleteAllTables;
      MigrateEmailBodyToMailTemplate;
    END;

    LOCAL PROCEDURE "---Locals---"@1100528300();
    BEGIN
    END;

    LOCAL PROCEDURE AddMailTemplate@1100528320();
    VAR
      EMailSetup@1100528300 : Record 11229911;
      EMailOnBehalf@1100528302 : Record 11012768;
      MailTemplate@1100528303 : Record 11229450;
      NameText@1100528304 : Text;
      SubStrings@1100528301 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.ArrayList";
    BEGIN
      IF (NOT MailTemplate.GET(GenericTempTable.Int1, '')) THEN BEGIN
        MailTemplate.INIT;
        MailTemplate."No." := GenericTempTable.Int1;
        MailTemplate.INSERT;
      END;

      NameText := '';
      StringFunctions.SplitString2(GenericTempTable.Text1, ' ', SubStrings);
      FOR Counter := 0 TO SubStrings.Count - 1 DO BEGIN
        NameText += UPPERCASE(COPYSTR(SubStrings.Item(Counter), 1, 1)) + COPYSTR(SubStrings.Item(Counter), 2);
      END;

      MailTemplate.Name := COPYSTR(DELCHR(NameText, '<=>', DelCharString), 1, MAXSTRLEN(MailTemplate.Name));
      MailTemplate.Description := COPYSTR(GenericTempTable.Text1, 1, MAXSTRLEN(MailTemplate.Description));
      MailTemplate.Type := GenericTempTable.Int2;
      MailTemplate."Source Table No." := GenericTempTable.Int3;
      MailTemplate.MODIFY;
      MailTemplate.UpdateBaseTable;

      IF (EMailSetup.GET(GenericTempTable.Int5, '')) THEN BEGIN
        MailTemplate."Pdf Background File Name" := EMailSetup."PDF Background File Name";
        MailTemplate."Pdf Bckg. File Name First Page" := EMailSetup."PDF Bckg. File Name First Page";
        MailTemplate."Print Pdf without Background" := EMailSetup."Print PDF without Background";
        MailTemplate."Edit in Outlook" := EMailSetup."Edit in Outlook";
        MailTemplate.Cc := EMailSetup.Cc;
        MailTemplate.Bcc := EMailSetup.Bcc;
        MailTemplate.MODIFY;
      END;

      IF (EMailOnBehalf.GET(GenericTempTable.Int4, '')) THEN BEGIN
        MailTemplate.From := EMailOnBehalf."Send On Behalf Of E-mail";
        MailTemplate."From Name" := EMailOnBehalf."Send On Behalf Of Name";
        MailTemplate.MODIFY;
      END;
    END;

    LOCAL PROCEDURE AddMailTemplateAttachments@1100528334();
    VAR
      MailTemplateAttachment@1100528305 : Record 11229452;
      EMailStandardAttachment@1100528306 : Record 11229325;
      MailTemplate@1100528301 : Record 11229450;
    BEGIN
      EMailStandardAttachment.SETRANGE(Usage, GenericTempTable.Int1);
      EMailStandardAttachment.SETRANGE("Shortcut Dimension 1 Code", '');
      IF (NOT EMailStandardAttachment.FINDSET) THEN
        EXIT;

      REPEAT
        IF (MailTemplate.GET(GenericTempTable.Int1, EMailStandardAttachment."Shortcut Dimension 1 Code")) THEN BEGIN
          IF (NOT MailTemplateAttachment.GET(GenericTempTable.Int1, EMailStandardAttachment."Shortcut Dimension 1 Code", EMailStandardAttachment."Line No.")) THEN BEGIN
            MailTemplateAttachment.INIT;
            MailTemplateAttachment."Mail Template No." := GenericTempTable.Int1;
            MailTemplateAttachment."Shortcut Dimension 1 Code" := EMailStandardAttachment."Shortcut Dimension 1 Code";
            MailTemplateAttachment."Line No." := EMailStandardAttachment."Line No.";
            MailTemplateAttachment.INSERT;
          END;
          MailTemplateAttachment.Description := EMailStandardAttachment.Description;
          MailTemplateAttachment."Attachment File Name" := EMailStandardAttachment."Attachment File Name";
          MailTemplateAttachment."Doc Service Att Subdirectory" := EMailStandardAttachment."Doc. Srv. Std. Att. Subdir.";
          MailTemplateAttachment."Document Service URL" := EMailStandardAttachment."Document Service URL";
          MailTemplateAttachment.MODIFY;
        END;
      UNTIL (EMailStandardAttachment.NEXT = 0);
    END;

    LOCAL PROCEDURE AddMailTemplateLayouts@1100528335();
    VAR
      MailTemplate@1100528309 : Record 11229450;
      EMailBodyText@1100528308 : Record 11012769;
      MailTemplateLayout@1100528306 : Record 11229451;
      FirstNo@1100528303 : Boolean;
    BEGIN
      EMailBodyText.SETRANGE(Usage, GenericTempTable.Int1);
      IF (NOT EMailBodyText.FINDSET) THEN
        EXIT;

      REPEAT
        IF (NOT MailTemplateLayout.GET(EMailBodyText.Usage, EMailBodyText."Language Code")) THEN BEGIN
          MailTemplateLayout.INIT;
          MailTemplateLayout."Mail Template No." := EMailBodyText.Usage;
          MailTemplateLayout."Language Code" := EMailBodyText."Language Code";
          MailTemplateLayout.INSERT;
        END;
        MailTemplateLayout.Description := COPYSTR(GenericTempTable.Text1, 1, MAXSTRLEN(MailTemplateLayout.Description));
        MailTemplateLayout.MODIFY;

        MailTemplate.GET(MailTemplateLayout."Mail Template No.", '');
        MailTemplate.CALCFIELDS("Source Table Caption", "Source Table Name");
        CreateLayoutSubjectLine(GenericTempTable.Int1, EMailBodyText."Language Code",
          STRSUBSTNO('%1 %2', MailTemplateManagement.GetSubjectText, MailTemplate.Name));

        AddMailTemplateLayoutLine(EMailBodyText, MailTemplateLayout);

      UNTIL (EMailBodyText.NEXT = 0);
    END;

    LOCAL PROCEDURE AddMailTemplateLayoutLine@1100528339(EMailBodyTextIn@1100528302 : Record 11012769;MailTemplateLayout@1100528300 : Record 11229451);
    VAR
      MailTemplateLayoutLine@1100528307 : Record 11229457;
      EMailBodyText@1100527800 : Record 11012769;
    BEGIN
      EMailBodyText.SETRANGE(Usage, EMailBodyTextIn.Usage);
      EMailBodyText.SETRANGE("Language Code", EMailBodyTextIn."Language Code");
      IF (NOT EMailBodyText.FINDSET) THEN
        EXIT;

      REPEAT
        IF (NOT MailTemplateLayoutLine.GET(MailTemplateLayout."Mail Template No.",MailTemplateLayout."Language Code", 2, EMailBodyTextIn."Line No.")) THEN BEGIN
          MailTemplateLayoutLine.INIT;
          MailTemplateLayoutLine."Mail Template No." := MailTemplateLayout."Mail Template No.";
          MailTemplateLayoutLine."Language Code" := MailTemplateLayout."Language Code";
          MailTemplateLayoutLine."Line No." := EMailBodyTextIn."Line No.";
          MailTemplateLayoutLine."Text Line" := EMailBodyTextIn.Text;
          MailTemplateLayoutLine.INSERT;
          IF (EMailBodyText."Table No." <> 0) THEN
            AddMailTemplateTable(EMailBodyText, MailTemplateLayout);
          SubstituteTextLine(MailTemplateLayoutLine, EMailBodyText);
        END;
      UNTIL (EMailBodyText.NEXT = 0);
    END;

    LOCAL PROCEDURE AddMailTemplateTable@1100528321(EMailBodyText@1100528302 : Record 11012769;MailTemplateLayout@1100528301 : Record 11229451);
    VAR
      MailTemplateTable@1100528303 : Record 11229453;
      MailTemplateTableParent@1100528304 : Record 11229453;
      LevelNo@1100528305 : Integer;
      SeqNo@1100528300 : Integer;
    BEGIN
      LevelNo := GetLevel(EMailBodyText);

      MailTemplateTable.SETRANGE("Mail Template No.", MailTemplateLayout."Mail Template No.");
      MailTemplateTable.SETRANGE(Level, LevelNo);
      MailTemplateTable.SETRANGE("Table No.", GetEmailBodyTextTableNo(EMailBodyText));
      CASE TRUE OF
        EMailBodyText."Table No." = EMailBodyText."Table No."::CauseText:
          MailTemplateTable.SETRANGE("Element Prefix", ServiceTextCauseTxt);
        EMailBodyText."Table No." = EMailBodyText."Table No."::InternalText:
          MailTemplateTable.SETRANGE("Element Prefix", ServiceTextInternalTxt);
        EMailBodyText."Table No." = EMailBodyText."Table No."::ProblemText:
          MailTemplateTable.SETRANGE("Element Prefix", ServiceTextProblemTxt);
        EMailBodyText."Table No." = EMailBodyText."Table No."::ResolveText:
          MailTemplateTable.SETRANGE("Element Prefix", ServiceTextResolveTxt);
        ELSE BEGIN
          MailTemplateTable.SETRANGE("Element Prefix", GetEmailBodyTextTableCaption(EMailBodyText));
          MailTemplateTable.SETRANGE("Seq. No.", 0);
          IF (LevelNo <> 1) THEN
            MailTemplateTable.SETRANGE("Seq. No.", 10000);
        END;
      END;
      IF (NOT MailTemplateTable.FINDFIRST) THEN BEGIN
        CLEAR(MailTemplateTable);

        SeqNo := 0;
        IF (LevelNo <> 1) THEN BEGIN
          CASE TRUE OF
            EMailBodyText."Table No." = EMailBodyText."Table No."::CauseText: SeqNo := 10000;
            EMailBodyText."Table No." = EMailBodyText."Table No."::InternalText: SeqNo := 10001;
            EMailBodyText."Table No." = EMailBodyText."Table No."::ProblemText: SeqNo := 100002;
            EMailBodyText."Table No." = EMailBodyText."Table No."::ResolveText: SeqNo := 10003;
          ELSE
            SeqNo := 10000;
          END;
        END;

        MailTemplateTable.INIT;
        MailTemplateTable."Mail Template No." := MailTemplateLayout."Mail Template No.";
        MailTemplateTable.Level := LevelNo;
        MailTemplateTable."Seq. No." := SeqNo;

        CASE TRUE OF
          (GetEmailBodyTextTableNo(EMailBodyText) <> GenericTempTable.Int3) AND (LevelNo = 1): BEGIN
            MailTemplateTable."Table No." := GetEmailBodyTextTableNo(EMailBodyText);
            MailTemplateTable."Parent Level" := LevelNo;
            MailTemplateTable."Parent Table No." := 0;
            MailTemplateTable."Parent Seq. No." := 0;
          END;
          ELSE BEGIN
            MailTemplateTable."Table No." := GetEmailBodyTextTableNo(EMailBodyText);
            MailTemplateTable."Parent Level" := MailTemplateTable.Level - 1;
            MailTemplateTableParent.COPY(MailTemplateTable);
            MailTemplateTable.GetFirstParentTable(MailTemplateTableParent);
            MailTemplateTable."Parent Table No." := MailTemplateTableParent."Table No.";
            MailTemplateTable."Parent Seq. No." := MailTemplateTableParent."Seq. No.";
          END;
        END;
        MailTemplateTable.CALCFIELDS("Table Caption", "Table Name");

        CASE TRUE OF
          EMailBodyText."Table No." = EMailBodyText."Table No."::CauseText:
            MailTemplateTable.VALIDATE("Element Prefix", ServiceTextCauseTxt);
          EMailBodyText."Table No." = EMailBodyText."Table No."::InternalText:
            MailTemplateTable.VALIDATE("Element Prefix", ServiceTextInternalTxt);
          EMailBodyText."Table No." = EMailBodyText."Table No."::ProblemText:
            MailTemplateTable.VALIDATE("Element Prefix", ServiceTextProblemTxt);
          EMailBodyText."Table No." = EMailBodyText."Table No."::ResolveText:
            MailTemplateTable.VALIDATE("Element Prefix", ServiceTextResolveTxt);
          ELSE
            MailTemplateTable.VALIDATE("Element Prefix", MailTemplateTable."Table Caption");
        END;
        IF (MailTemplateTable.INSERT) THEN;
      END;
      MailTemplateTable.AddTableCaptionElementName;

      IF (EMailBodyText."Field No." <> 0) THEN
        AddMailTemplateTableField(EMailBodyText, MailTemplateTable);
      IF (EMailBodyText."Table Function" <> 0) THEN
        AddMailTemplateTableFieldFunction(EMailBodyText, MailTemplateTable);

      AddMailTemplateTableFilters(MailTemplateTable);
      AddMailTemplateTableLinks(MailTemplateTable, EMailBodyText);
    END;

    LOCAL PROCEDURE AddMailTemplateTableField@1100528325(EMailBodyText@1100528301 : Record 11012769;MailTemplateTable@1100528300 : Record 11229453);
    VAR
      MailTemplateTableField@1100528302 : Record 11229455;
      Field@1100525000 : Record 2000000041;
    BEGIN
      MailTemplateTableField.SETRANGE("Mail Template No.", MailTemplateTable."Mail Template No.");
      MailTemplateTableField.SETRANGE(Level, MailTemplateTable.Level);
      MailTemplateTableField.SETRANGE("Table No.", MailTemplateTable."Table No.");
      MailTemplateTableField.SETRANGE("Table Seq. No.", MailTemplateTable."Seq. No.");
      MailTemplateTableField.SETRANGE("Field No.", EMailBodyText."Field No.");
      MailTemplateTableField.SETRANGE("Function Name", '');
      MailTemplateTableField.SETRANGE(Type, MailTemplateTableField.Type::Value);
      IF (NOT MailTemplateTableField.ISEMPTY) THEN
        EXIT;

      MailTemplateTableField."Mail Template No." := MailTemplateTable."Mail Template No.";
      MailTemplateTableField.Level := MailTemplateTable.Level;
      MailTemplateTableField."Table No." := MailTemplateTable."Table No.";
      MailTemplateTableField."Table Seq. No." := MailTemplateTable."Seq. No.";
      MailTemplateTableField."Seq. No." := MailTemplateTableField.GetLastSeqNo + 10000;
      MailTemplateTableField.INSERT;

      CASE TRUE OF
        EMailBodyText."Table No." = EMailBodyText."Table No."::CauseText: BEGIN
          MailTemplateTableField.VALIDATE("Function Name", DELCHR(TableFunctionArr[8], '<=>', DelCharString));
          MailTemplateTableField.MODIFY;
          MailTemplateTableField.AddOrUpdateFieldCaptionElementName;
        END;
        EMailBodyText."Table No." = EMailBodyText."Table No."::"Change Request Communication": BEGIN
          MailTemplateTableField.VALIDATE("Function Name", DELCHR(TableFunctionArr[6], '<=>', DelCharString));
          MailTemplateTableField.MODIFY;
          MailTemplateTableField.AddOrUpdateFieldCaptionElementName;
        END;
        EMailBodyText."Table No." = EMailBodyText."Table No."::DebriefText: BEGIN
          MailTemplateTableField.VALIDATE("Function Name", DELCHR(TableFunctionArr[9], '<=>', DelCharString));
          MailTemplateTableField.MODIFY;
          MailTemplateTableField.AddOrUpdateFieldCaptionElementName;
        END;
        EMailBodyText."Table No." = EMailBodyText."Table No."::InternalText: BEGIN
          MailTemplateTableField.VALIDATE("Function Name", DELCHR(TableFunctionArr[8], '<=>', DelCharString));
          MailTemplateTableField.MODIFY;
          MailTemplateTableField.AddOrUpdateFieldCaptionElementName;
        END;
        EMailBodyText."Table No." = EMailBodyText."Table No."::ProblemText: BEGIN
          MailTemplateTableField.VALIDATE("Function Name", DELCHR(TableFunctionArr[8], '<=>', DelCharString));
          MailTemplateTableField.MODIFY;
          MailTemplateTableField.AddOrUpdateFieldCaptionElementName;
        END;
        EMailBodyText."Table No." = EMailBodyText."Table No."::ResolveText: BEGIN
          MailTemplateTableField.VALIDATE("Function Name", DELCHR(TableFunctionArr[8], '<=>', DelCharString));
          MailTemplateTableField.MODIFY;
          MailTemplateTableField.AddOrUpdateFieldCaptionElementName;
        END;
        EMailBodyText."Table No." = EMailBodyText."Table No."::"Service Call Communication": BEGIN
          MailTemplateTableField.VALIDATE("Function Name", DELCHR(TableFunctionArr[6], '<=>', DelCharString));
          MailTemplateTableField.MODIFY;
          MailTemplateTableField.AddOrUpdateFieldCaptionElementName;
        END;
        EMailBodyText."Table No." = EMailBodyText."Table No."::"Work Order Text": BEGIN
          MailTemplateTableField.VALIDATE("Function Name", DELCHR(TableFunctionArr[10], '<=>', DelCharString));
          MailTemplateTableField.MODIFY;
          MailTemplateTableField.AddOrUpdateFieldCaptionElementName;
        END;
        ELSE BEGIN
          IF (Field.GET(MailTemplateTableField."Table No.", EMailBodyText."Field No.")) THEN
            MailTemplateTableField.VALIDATE("Field No.", EMailBodyText."Field No.");
          MailTemplateTableField.MODIFY;
          MailTemplateTableField.AddOrUpdateFieldCaptionElementName;
        END;
      END;
    END;

    LOCAL PROCEDURE AddMailTemplateTableFieldFunction@1100528357(EMailBodyText@1100528301 : Record 11012769;MailTemplateTable@1100528300 : Record 11229453);
    VAR
      MailTemplateTableField@1100528302 : Record 11229455;
      TableFunction@1100528303 : Text;
    BEGIN
      TableFunction := GetEmailBodyFunctionName(EMailBodyText);

      MailTemplateTableField.SETRANGE("Mail Template No.", MailTemplateTable."Mail Template No.");
      MailTemplateTableField.SETRANGE(Level, MailTemplateTable.Level);
      MailTemplateTableField.SETRANGE("Table No.", MailTemplateTable."Table No.");
      MailTemplateTableField.SETRANGE("Table Seq. No.", MailTemplateTable."Seq. No.");
      MailTemplateTableField.SETRANGE("Function Name", TableFunction);
      MailTemplateTableField.SETRANGE(Type, MailTemplateTableField.Type::Value);
      IF (NOT MailTemplateTableField.ISEMPTY) THEN
        EXIT;

      MailTemplateTableField."Mail Template No." := MailTemplateTable."Mail Template No.";
      MailTemplateTableField.Level := MailTemplateTable.Level;
      MailTemplateTableField."Table No." := MailTemplateTable."Table No.";
      MailTemplateTableField."Table Seq. No." := MailTemplateTable."Seq. No.";
      MailTemplateTableField."Seq. No." := MailTemplateTableField.GetLastSeqNo + 10000;
      MailTemplateTableField.INSERT;

      MailTemplateTableField.VALIDATE("Function Name", TableFunction);
      MailTemplateTableField.MODIFY;
    END;

    LOCAL PROCEDURE AddMailTemplateTableFilter@1100528363(MailTemplateTable@1100528300 : Record 11229453;FieldNo@1100528302 : Integer;FilterText@1100528303 : Text);
    VAR
      MailTemplateTableFilter@1100528301 : Record 11229456;
    BEGIN
      MailTemplateTableFilter.INIT;
      MailTemplateTableFilter."Mail Template No." := MailTemplateTable."Mail Template No.";
      MailTemplateTableFilter.Level := MailTemplateTable.Level;
      MailTemplateTableFilter."Table No." := MailTemplateTable."Table No.";
      MailTemplateTableFilter."Table Seq. No." := MailTemplateTable."Seq. No.";
      MailTemplateTableFilter."Field No." := FieldNo;
      MailTemplateTableFilter.Filter := COPYSTR(FilterText, 1, MAXSTRLEN(MailTemplateTableFilter.Filter));
      IF (MailTemplateTableFilter.INSERT) THEN;
    END;

    LOCAL PROCEDURE AddMailTemplateTableFilters@1100528323(MailTemplateTable@1100528300 : Record 11229453);
    VAR
      MailTemplateTableFilter@1100528302 : Record 11229456;
      Recref@1100528303 : RecordRef;
      FldRef@1100528304 : FieldRef;
      KeyRef@1100528305 : KeyRef;
    BEGIN
      IF (MailTemplateTable.Level  = 1 ) AND (MailTemplateTable."Parent Table No." = 0) THEN BEGIN
        Recref.OPEN(MailTemplateTable."Table No.");
        KeyRef := Recref.KEYINDEX(1);
        FOR Counter := 1 TO KeyRef.FIELDCOUNT DO BEGIN
          FldRef := KeyRef.FIELDINDEX(Counter);
          MailTemplateTableFilter.INIT;
          MailTemplateTableFilter."Mail Template No." := MailTemplateTable."Mail Template No.";
          MailTemplateTableFilter.Level := MailTemplateTable.Level;
          MailTemplateTableFilter."Table No." := MailTemplateTable."Table No.";
          MailTemplateTableFilter."Table Seq. No." := MailTemplateTable."Seq. No.";
          MailTemplateTableFilter."Field No." := FldRef.NUMBER;
          MailTemplateTableFilter.Filter := '''''';
          IF (MailTemplateTableFilter.INSERT) THEN;
        END;
        Recref.CLOSE;
      END;
    END;

    LOCAL PROCEDURE AddMailTemplateTableLink@1100528362(MailTemplateTable@1100528301 : Record 11229453;FieldNo@1100528302 : Integer;RefFieldNo@1100528303 : Integer;FunctionName@1100528300 : Text);
    VAR
      MailTemplateTableLink@1100528304 : Record 11229454;
    BEGIN
      MailTemplateTableLink.INIT;
      MailTemplateTableLink."Mail Template No." := MailTemplateTable."Mail Template No.";
      MailTemplateTableLink.Level := MailTemplateTable.Level;
      MailTemplateTableLink."Table No." := MailTemplateTable."Table No.";
      MailTemplateTableLink."Table Seq. No." := MailTemplateTable."Seq. No.";
      MailTemplateTableLink."Field No." := FieldNo;
      MailTemplateTableLink."Reference Table No." := MailTemplateTable."Parent Table No.";
      MailTemplateTableLink."Reference Field No." := RefFieldNo;
      IF (FunctionName <> '') THEN BEGIN
        MailTemplateTableLink."Function Name" := COPYSTR(FunctionName, 1, MAXSTRLEN(MailTemplateTableLink."Function Name"));
      END;
      IF (MailTemplateTableLink.INSERT) THEN;
    END;

    LOCAL PROCEDURE AddMailTemplateTableLinks@1100528322(MailTemplateTable@1100528301 : Record 11229453;EMailBodyText@1100528300 : Record 11012769);
    BEGIN
      CASE TRUE OF
        (MailTemplateTable."Table No." = DATABASE::Contact) AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Project Authority"):
          AddMailTemplateTableLink(MailTemplateTable, 1, 0, DELCHR(TableFunctionArr[1], '<=>', DelCharString));
        (MailTemplateTable."Table No." = DATABASE::Contact) AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Vendors by Purchase Action"):
          AddMailTemplateTableLink(MailTemplateTable, 1, 0, DELCHR(TableFunctionArr[2], '<=>', DelCharString));
        (MailTemplateTable."Table No." = DATABASE::Customer) AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Sales Header"):
          AddMailTemplateTableLink(MailTemplateTable, 1, 2, '');
        (MailTemplateTable."Table No." = DATABASE::"Debrief Text") AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Service Order"): BEGIN
          AddMailTemplateTableLink(MailTemplateTable, 2, 10, '');
          AddMailTemplateTableFilter(MailTemplateTable, 1, '0');
        END;
        (MailTemplateTable."Table No." = DATABASE::"Debrief Text") AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Work Order"): BEGIN
          AddMailTemplateTableLink(MailTemplateTable, 2, 10, '');
          AddMailTemplateTableFilter(MailTemplateTable, 1, '0');
        END;
        (MailTemplateTable."Table No." = DATABASE::Employee) AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Project Responsible Person"):
          AddMailTemplateTableLink(MailTemplateTable, 1, 30, '');
        (MailTemplateTable."Table No." = DATABASE::Employee) AND
        (MailTemplateTable."Parent Table No." = DATABASE::"SH Workplan Participant"):
          AddMailTemplateTableLink(MailTemplateTable, 1, 50, '');
        (MailTemplateTable."Table No." = DATABASE::Employee) AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Site Mngmnt. Hours Header"):
          AddMailTemplateTableLink(MailTemplateTable, 1, 40, '');
        (MailTemplateTable."Table No." = DATABASE::"General Advanced Text") AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Change Request"): BEGIN
          AddMailTemplateTableFilter(MailTemplateTable, 25, '%RECID%');
          AddMailTemplateTableFilter(MailTemplateTable, 10, FORMAT(MailTemplateTable."Parent Table No."));
          AddMailTemplateTableFilter(MailTemplateTable, 20, '50');
        END;
        (MailTemplateTable."Table No." = DATABASE::"General Advanced Text") AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Service Call"): BEGIN
          AddMailTemplateTableFilter(MailTemplateTable, 25, '%RECID%');
          AddMailTemplateTableFilter(MailTemplateTable, 10, FORMAT(MailTemplateTable."Parent Table No."));
          AddMailTemplateTableFilter(MailTemplateTable, 20, '50');
        END;
        (MailTemplateTable."Table No." = DATABASE::Job) AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Extension Contract"):
          AddMailTemplateTableLink(MailTemplateTable, 1, 10, '');
        (MailTemplateTable."Table No." = DATABASE::Job) AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Option Quote Header"):
          AddMailTemplateTableLink(MailTemplateTable, 1, 20, '');
        (MailTemplateTable."Table No." = DATABASE::Job) AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Project Authority"):
          AddMailTemplateTableLink(MailTemplateTable, 1, 10, '');
        (MailTemplateTable."Table No." = DATABASE::Job) AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Project Responsible Person"):
          AddMailTemplateTableLink(MailTemplateTable, 1, 10, '');
        (MailTemplateTable."Table No." = DATABASE::Job) AND
        (MailTemplateTable."Parent Table No." = DATABASE::"SH Workplan Participant"):
          AddMailTemplateTableLink(MailTemplateTable, 1, 10, '');
        (MailTemplateTable."Table No." = DATABASE::Job) AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Vendors by Purchase Action"):
          AddMailTemplateTableLink(MailTemplateTable, 1, 10, '');
        (MailTemplateTable."Table No." = DATABASE::"Planning Agreement") AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Service Order"):
          AddMailTemplateTableLink(MailTemplateTable, 10, 0, DELCHR(TableFunctionArr[5], '<=>', DelCharString));
        (MailTemplateTable."Table No." = DATABASE::"Project Portal Login") AND
        (MailTemplateTable."Parent Table No." = DATABASE::Contact) AND
        (MailTemplateTable."Mail Template No." = 47):
          AddMailTemplateTableLink(MailTemplateTable, 40, 5105, '');
        (MailTemplateTable."Table No." = DATABASE::"Project Portal Login") AND
        (MailTemplateTable."Parent Table No." = DATABASE::Contact) AND
        (MailTemplateTable."Mail Template No." = 49):
          AddMailTemplateTableLink(MailTemplateTable, 40, 5050, '');
        (MailTemplateTable."Table No." = DATABASE::"Project Purchase Action") AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Vendors by Purchase Action"): BEGIN
          AddMailTemplateTableLink(MailTemplateTable, 5, 10, '');
          AddMailTemplateTableLink(MailTemplateTable, 10, 11, '');
        END;
        (MailTemplateTable."Table No." = DATABASE::"Salesperson/Purchaser") AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Purchase Header"):
          AddMailTemplateTableLink(MailTemplateTable, 1, 43, '');
        (MailTemplateTable."Table No." = DATABASE::"Service Location") AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Service Authority DPT"):
          AddMailTemplateTableLink(MailTemplateTable, 1, 20, '');
        (MailTemplateTable."Table No." = DATABASE::"Service Location") AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Service Responsible Person DPT"):
          AddMailTemplateTableLink(MailTemplateTable, 1, 20, '');
        (MailTemplateTable."Table No." = DATABASE::"Service Order") AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Work Order"):
          AddMailTemplateTableLink(MailTemplateTable, 10, 10, '');
        (MailTemplateTable."Table No." = DATABASE::"Service Order Extension") AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Service Order"):
          AddMailTemplateTableLink(MailTemplateTable, 10, 10, '');
        (MailTemplateTable."Table No." = DATABASE::"Service Text") AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Service Order") AND
        (EMailBodyText."Table No." = EMailBodyText."Table No."::ProblemText): BEGIN
          AddMailTemplateTableLink(MailTemplateTable, 2, 10, '');
          AddMailTemplateTableFilter(MailTemplateTable, 1, '3');
          AddMailTemplateTableFilter(MailTemplateTable, 7, '90');
        END;
        (MailTemplateTable."Table No." = DATABASE::"Service Text") AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Service Order") AND
        (EMailBodyText."Table No." = EMailBodyText."Table No."::InternalText): BEGIN
          AddMailTemplateTableLink(MailTemplateTable, 2, 10, '');
          AddMailTemplateTableFilter(MailTemplateTable, 1, '3');
          AddMailTemplateTableFilter(MailTemplateTable, 7, '91');
        END;
        (MailTemplateTable."Table No." = DATABASE::"Service Text") AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Service Order") AND
        (EMailBodyText."Table No." = EMailBodyText."Table No."::ResolveText): BEGIN
          AddMailTemplateTableLink(MailTemplateTable, 2, 10, '');
          AddMailTemplateTableFilter(MailTemplateTable, 1, '3');
          AddMailTemplateTableFilter(MailTemplateTable, 7, '92');
        END;
        (MailTemplateTable."Table No." = DATABASE::"Service Text") AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Service Order") AND
        (EMailBodyText."Table No." = EMailBodyText."Table No."::CauseText): BEGIN
          AddMailTemplateTableLink(MailTemplateTable, 2, 10, '');
          AddMailTemplateTableFilter(MailTemplateTable, 1, '3');
          AddMailTemplateTableFilter(MailTemplateTable, 7, '94');
        END;
        (MailTemplateTable."Table No." = DATABASE::"Service Text") AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Work Order") AND
        (EMailBodyText."Table No." = EMailBodyText."Table No."::ProblemText): BEGIN
          AddMailTemplateTableLink(MailTemplateTable, 2, 10, '');
          AddMailTemplateTableFilter(MailTemplateTable, 1, '3');
          AddMailTemplateTableFilter(MailTemplateTable, 7, '90');
        END;
        (MailTemplateTable."Table No." = DATABASE::Vendor) AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Purchase Header"):
          AddMailTemplateTableLink(MailTemplateTable, 1, 2, '');
        (MailTemplateTable."Table No." = DATABASE::"Work Order Text") AND
        (MailTemplateTable."Parent Table No." = DATABASE::"Work Order"): BEGIN
          AddMailTemplateTableLink(MailTemplateTable, 2, 10, '');
          AddMailTemplateTableFilter(MailTemplateTable, 1, '0');
        END;

      //  (MailTemplateTable."Table No." = DATABASE::"") AND
      //  (MailTemplateTable."Parent Table No." = DATABASE::""):
      //    AddMailTemplateTableLink(MailTemplateTable, 0, 0, '');
      END;
    END;

    LOCAL PROCEDURE AddMailTemplatesWithDimensionCodes@1100527802();
    VAR
      EMailSetup@1100527800 : Record 11229911;
      MailTemplate@1100527801 : Record 11229450;
      MailTemplateTo@1100527802 : Record 11229450;
      EMailOnBehalf@1100527803 : Record 11012768;
    BEGIN
      EMailSetup.SETFILTER("Shortcut Dimension 1 Code",'<>%1','');
      IF (EMailSetup.FINDSET) THEN BEGIN
        REPEAT
          GenericTempTable.RESET;
          GenericTempTable.SETRANGE(Int5, EMailSetup.Usage);
          IF GenericTempTable.FINDFIRST THEN BEGIN
            IF NOT (MailTemplate.GET(GenericTempTable.Int1, EMailSetup."Shortcut Dimension 1 Code")) THEN BEGIN
              IF  (MailTemplate.GET(GenericTempTable.Int1)) THEN BEGIN
                  MailTemplateTo.COPY(MailTemplate);
                  MailTemplateTo."Shortcut Dimension 1 Code" := EMailSetup."Shortcut Dimension 1 Code";
                  MailTemplateTo."Pdf Background File Name" := EMailSetup."PDF Background File Name";
                  MailTemplateTo."Pdf Bckg. File Name First Page" := EMailSetup."PDF Bckg. File Name First Page";
                  MailTemplateTo."Print Pdf without Background" := EMailSetup."Print PDF without Background";
                  MailTemplateTo."Edit in Outlook" := EMailSetup."Edit in Outlook";
                  MailTemplateTo.Cc := EMailSetup.Cc;
                  MailTemplateTo.Bcc := EMailSetup.Bcc;
                  MailTemplateTo.INSERT;
              END;
            END;
          END;
        UNTIL (EMailSetup.NEXT = 0);
      END;

      EMailOnBehalf.SETFILTER("Shortcut Dimension 1 Code",'<>%1','');
      IF (EMailOnBehalf.FINDSET) THEN BEGIN
        REPEAT
          GenericTempTable.RESET;
          GenericTempTable.SETRANGE(Int4, EMailOnBehalf.Usage);
          IF GenericTempTable.FINDFIRST THEN BEGIN
            IF NOT (MailTemplate.GET(GenericTempTable.Int1, EMailOnBehalf."Shortcut Dimension 1 Code")) THEN BEGIN
                IF (MailTemplate.GET(GenericTempTable.Int1)) THEN BEGIN
                  MailTemplateTo.COPY(MailTemplate);
                  MailTemplateTo."Shortcut Dimension 1 Code" := EMailOnBehalf."Shortcut Dimension 1 Code";
                  MailTemplateTo.From := EMailOnBehalf."Send On Behalf Of E-mail";
                  MailTemplateTo."From Name" := EMailOnBehalf."Send On Behalf Of Name";
                  MailTemplateTo.INSERT;
                END;
            END ELSE BEGIN
                MailTemplate.From := EMailOnBehalf."Send On Behalf Of E-mail";
                MailTemplate."From Name" := EMailOnBehalf."Send On Behalf Of Name";
                MailTemplate.MODIFY;
            END;
          END;
        UNTIL EMailOnBehalf.NEXT = 0;
      END;
    END;

    PROCEDURE CreateLayoutSubjectLine@1100525000(MailTemplateNo@1100525000 : Integer;LanguageCode@1100525001 : Code[20];SubjectText@1100528301 : Text);
    VAR
      MailTemplateLayoutLine@1100528300 : Record 11229457;
    BEGIN
      MailTemplateLayoutLine.INIT;
      MailTemplateLayoutLine."Mail Template No." := MailTemplateNo;
      MailTemplateLayoutLine."Language Code" := LanguageCode;
      MailTemplateLayoutLine."Layout Type" := MailTemplateLayoutLine."Layout Type"::Subject;
      MailTemplateLayoutLine."Line No." := 10000;
      MailTemplateLayoutLine."Line Break" := TRUE;
      MailTemplateLayoutLine."Text Line" := COPYSTR(SubjectText, 1, MAXSTRLEN(MailTemplateLayoutLine."Text Line"));
      IF (MailTemplateLayoutLine.INSERT) THEN;
    END;

    LOCAL PROCEDURE DeleteAllTables@1100528359();
    VAR
      MailTemplate@1100528300 : Record 11229450;
      MailTemplateAttachment@1100528301 : Record 11229452;
      MailTemplateFunction@1100528308 : Record 11229464;
      MailTemplateLayout@1100528302 : Record 11229451;
      MailTemplateLayoutLine@1100528307 : Record 11229457;
      MailTemplateTable@1100528303 : Record 11229453;
      MailTemplateTableField@1100528304 : Record 11229455;
      MailTemplateTableFilter@1100528305 : Record 11229456;
      MailTemplateTableLink@1100528306 : Record 11229454;
    BEGIN
      MailTemplateAttachment.SETRANGE("Mail Template No.", 0, 9999);
      MailTemplateAttachment.DELETEALL;
      MailTemplateLayoutLine.SETRANGE("Mail Template No.", 0, 9999);
      MailTemplateLayoutLine.DELETEALL;
      MailTemplateLayout.SETRANGE("Mail Template No.", 0, 9999);
      MailTemplateLayout.DELETEALL;
      MailTemplateTableField.SETRANGE("Mail Template No.", 0, 9999);
      MailTemplateTableField.DELETEALL;
      MailTemplateTableFilter.SETRANGE("Mail Template No.", 0, 9999);
      MailTemplateTableFilter.DELETEALL;
      MailTemplateTableLink.SETRANGE("Mail Template No.", 0, 9999);
      MailTemplateTableLink.DELETEALL;
      MailTemplateTable.SETRANGE("Mail Template No.", 0, 9999);
      MailTemplateTable.DELETEALL;
      MailTemplateFunction.SETRANGE("Is Standard", TRUE);
      MailTemplateFunction.DELETEALL;
      MailTemplate.SETRANGE("No.", 0, 9999);
      MailTemplate.DELETEALL;
    END;

    LOCAL PROCEDURE FunctionNames@1100528302();
    BEGIN
      MailTemplateManagement.InitializeFunctionNamesFromDataMigration(TableFunctionArr);
    END;

    LOCAL PROCEDURE GetDataFromGenericTempTableUsage@1100528342(CurrNo@1100528300 : Integer);
    BEGIN
      IF (NOT GenericTempTable.GET(FORMAT(CurrNo), '', '', '', '', '')) THEN
        GenericTempTable.INIT;
    END;

    LOCAL PROCEDURE GetDataFromOldUsageOption@1100528332(UsageIn@1100528301 : Option);
    VAR
      EMailBodyText@1100528300 : Record 11012769;
      EMailOnBehalf@1100528302 : Record 11012768;
      EMailSetup@1100528303 : Record 11229911;
      MailTemplate@1100528306 : Record 11229450;
      Plot@1100528304 : Record 11012500;
      ExtensionContract@1100528305 : Record 11012004;
      Option@1100528307 : Record 11012502;
      FSAUser@1100528308 : Record 11126698;
      PlantTransportRide@1100528309 : Record 11020517;
    BEGIN
      {
      GenericTempTable.Text1 = MailTemplate.Description
      GenericTempTable.Int1  = EMailTemplate.Usage
      GenericTempTable.Int2  = MailTemplate.Type
      GenericTempTable.Int3  = SourceTableNo
      GenericTempTable.Int4  = EMailOnBehalf.Usage (differs from other table usage fields)
      GenericTempTable.Int5  = EmailSetup.Usage (differs from other table usage fields)

      }

      EMailBodyText.Usage := UsageIn;

      CASE EMailBodyText.Usage OF
         1: BEGIN //Sales Invoice
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Sales;
          GenericTempTable.Int3 := DATABASE::"Sales Invoice Header";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Sales Invoice";
          GenericTempTable.Int5 := EMailSetup.Usage::"Sales Invoice";
         END;
         2: BEGIN //Sales Credit Memo
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Sales;
          GenericTempTable.Int3 := DATABASE::"Sales Cr.Memo Header";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Sales Credit Memo";
          GenericTempTable.Int5 := EMailSetup.Usage::"Sales Credit Memo";
         END;
         3: BEGIN //Sales Quote
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Sales;
          GenericTempTable.Int3 := DATABASE::"Sales Header";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Sales Quote";
          GenericTempTable.Int5 := EMailSetup.Usage::"Sales Quote";
         END;
         4: BEGIN //Sales Order
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Sales;
          GenericTempTable.Int3 := DATABASE::"Sales Header";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Sales Order";
          GenericTempTable.Int5 := EMailSetup.Usage::"Sales Order";
        END;
        11: BEGIN //Purchase Quote
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Purchase;
          GenericTempTable.Int3 := DATABASE::"Purchase Header";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Purchase Quote";
          GenericTempTable.Int5 := EMailSetup.Usage::"Purchase Quote";
        END;
        12: BEGIN //Purchase Order
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Purchase;
          GenericTempTable.Int3 := DATABASE::"Purchase Header";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Purchase Order";
          GenericTempTable.Int5 := EMailSetup.Usage::"Purchase Order";
        END;
        13: BEGIN //Purchase Quote Thanks Letter
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Purchase;
          GenericTempTable.Int3 := DATABASE::"Purchase Header";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Purchase Quote";
          GenericTempTable.Int5 := EMailSetup.Usage::"Purchase Quote Thanks Letter";
        END;
        21: BEGIN //Service Order Status
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Service;
          GenericTempTable.Int3 := DATABASE::"Service Order";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Order";
          GenericTempTable.Int5 := EMailSetup.Usage::"Service Order Status";
        END;
        22: BEGIN //Service Order Worksheet
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Service;
          GenericTempTable.Int3 := DATABASE::"Service Order";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Order";
          GenericTempTable.Int5 := EMailSetup.Usage::"Service Order Worksheet";
        END;
        23: BEGIN //Work Order Subcontractor
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Service;
          GenericTempTable.Int3 := DATABASE::"Work Order";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Order";
          GenericTempTable.Int5 := EMailSetup.Usage::"Work Order Subcontractor";
        END;
        24: BEGIN //Subcontractor not Finished
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Service;
          GenericTempTable.Int3 := DATABASE::Vendor;
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Order";
          GenericTempTable.Int5 := EMailSetup.Usage::"Subcontractor not Finished";
          END;
        25: BEGIN //Subcontractor Invoice not Received
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Service;
          GenericTempTable.Int3 := DATABASE::Vendor;
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Order";
          GenericTempTable.Int5 := EMailSetup.Usage::"Subcontractor not Finished";
          END;
        26: BEGIN //Subcontractor shifted Expected Dates
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Service;
          GenericTempTable.Int3 := DATABASE::"Work Order";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Order";
          GenericTempTable.Int5 := EMailSetup.Usage::"Work Order Subcontractor";
        END;
        27: BEGIN //Service Order Debrief Text
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(ServiceOrderDebriefTextTXT);
          GenericTempTable.Int2 := MailTemplate.Type::Service;
          GenericTempTable.Int3 := DATABASE::"Debrief Work Order (Mobile)";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Order";
          GenericTempTable.Int5 := EMailSetup.Usage::"Work Order Subcontractor";
        END;

        31: BEGIN //PlantOrderStatus
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Plant;
          GenericTempTable.Int3 := DATABASE::"Plant Order";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Plant Reports";
          GenericTempTable.Int5 := EMailSetup.Usage::PlantOrderStatus;
        END;
        32: BEGIN //Plant Transport Order
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Plant;
          GenericTempTable.Int3 := DATABASE::"Plant Transport Order";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Plant Reports";
          GenericTempTable.Int5 := EMailSetup.Usage::"Plant Transport Order";
        END;
        33: BEGIN //Plant Exit Order
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Plant;
          GenericTempTable.Int3 := DATABASE::"Exit Order";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Plant Reports";
          GenericTempTable.Int5 := EMailSetup.Usage::"Plant Exit Order";
        END;
        34: BEGIN //Plant Order
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Plant;
          GenericTempTable.Int3 := DATABASE::"Plant Order";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Plant Order";
          GenericTempTable.Int5 := EMailSetup.Usage::"Plant Order";
        END;
        35: BEGIN //Reminder
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Reminder;
          GenericTempTable.Int3 := DATABASE::"Issued Reminder Header";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::Reminder;
          GenericTempTable.Int5 := EMailSetup.Usage::Reminder;
        END;
        36: BEGIN //Sales Shipment
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Sales;
          GenericTempTable.Int3 := DATABASE::"Sales Shipment Header";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Sales Shipment";
          GenericTempTable.Int5 := EMailSetup.Usage::"Sales Shipment";
        END;
        41: BEGIN //Maintenance Appointment Proposal
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Service;
          GenericTempTable.Int3 := DATABASE::"Service Order";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Order";
          GenericTempTable.Int5 := EMailSetup.Usage::"Maintenance Appointment Proposal";
        END;
        42: BEGIN //Maintenance Appointment
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Service;
          GenericTempTable.Int3 := DATABASE::"Service Order";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Order";
          GenericTempTable.Int5 := EMailSetup.Usage::"Maintenance Appointment";
        END;
        43: BEGIN //Work Order Worksheet
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Service;
          GenericTempTable.Int3 := DATABASE::"Work Order";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Order";
          GenericTempTable.Int5 := EMailSetup.Usage::"Work Order Worksheet";
        END;
        47: BEGIN //PPT Login (FBA)
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Portals;
          GenericTempTable.Int3 := DATABASE::"Project Authority";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Project Portal";
          GenericTempTable.Int5 := EMailSetup.Usage::"PPT Login (FBA)";
        END;
        48: BEGIN //PPT Login (AD)
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Portals;
          GenericTempTable.Int3 := DATABASE::"Project Responsible Person";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Project Portal";
          GenericTempTable.Int5 := EMailSetup.Usage::"PPT Login (AD)";
        END;
        49: BEGIN //PPT Login (Quote Request)
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Portals;
          GenericTempTable.Int3 := DATABASE::"Vendors by Purchase Action"; //"Project Purchase Action";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Project Portal";
          GenericTempTable.Int5 := EMailSetup.Usage::"PPT Login (Quote Request)";
        END;
        50: BEGIN //PPT Quote Reminder
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Portals;
          GenericTempTable.Int3 := DATABASE::"Vendors by Purchase Action"; //"Project Purchase Action";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Project Portal";
          GenericTempTable.Int5 := EMailSetup.Usage::"PPT Quote Reminder";
        END;
        51: BEGIN //Confirm Reset SPT Password
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Portals;
          GenericTempTable.Int3 := DATABASE::"Serv.Port. User";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Portal";
          GenericTempTable.Int5 := EMailSetup.Usage::"Confirm Reset SPT Password";
        END;
        52: BEGIN //Receive Temporary SPT Password
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Portals;
          GenericTempTable.Int3 := DATABASE::"Serv.Port. User";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Portal";
          GenericTempTable.Int5 := EMailSetup.Usage::"Receive Temporary SPT Password";
        END;
        53: BEGIN //Receive New SPT Password
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Portals;
          GenericTempTable.Int3 := DATABASE::"Serv.Port. User";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Portal";
          GenericTempTable.Int5 := EMailSetup.Usage::"Receive New SPT Password";
        END;
        54: BEGIN //Confirm Reset SCPT Password
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Portals;
          GenericTempTable.Int3 := DATABASE::"Subcont.Port. User";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Portal";
          GenericTempTable.Int5 := EMailSetup.Usage::"Confirm Reset SCPT Password";
        END;
        55: BEGIN //Receive Temporary SCPT Password
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Portals;
          GenericTempTable.Int3 := DATABASE::"Subcont.Port. User";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Portal";
          GenericTempTable.Int5 := EMailSetup.Usage::"Receive Temporary SCPT Password";
        END;
        56: BEGIN //Receive New SCPT Password
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Portals;
          GenericTempTable.Int3 := DATABASE::"Subcont.Port. User";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Portal";
          GenericTempTable.Int5 := EMailSetup.Usage::"Receive New SCPT Password";
        END;
        59: BEGIN //DPTLoginServiceRespPers
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Portals;
          GenericTempTable.Int3 := DATABASE::"Service Responsible Person DPT";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Project Portal";
          GenericTempTable.Int5 := EMailSetup.Usage::" ";
        END;
        60: BEGIN //DPTLoginServiceAuthority
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Portals;
          GenericTempTable.Int3 := DATABASE::"Service Authority DPT";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Project Portal";
          GenericTempTable.Int5 := EMailSetup.Usage::" ";
        END;
        61: BEGIN //DPTLoginRespPers
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Portals;
          GenericTempTable.Int3 := DATABASE::"Project Responsible Person";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Project Portal";
          GenericTempTable.Int5 := EMailSetup.Usage::" ";
        END;
        62: BEGIN //DPTLoginAuthority
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Portals;
          GenericTempTable.Int3 := DATABASE::"Project Authority";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Project Portal";
          GenericTempTable.Int5 := EMailSetup.Usage::" ";
        END;
        67: BEGIN //PlantAppWelcome
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Apps;
          GenericTempTable.Int3 := DATABASE::"App User";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"PLA User";
          GenericTempTable.Int5 := EMailSetup.Usage::" ";
        END;
        68: BEGIN //FieldServiceAppWelcome
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Apps;
          GenericTempTable.Int3 := DATABASE::"FSA User";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Field Service App User";
          GenericTempTable.Int5 := EMailSetup.Usage::" ";
        END;
        69: BEGIN //SHInvitation
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Other;
          GenericTempTable.Int3 := DATABASE::"SH Workplan Participant";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::SH;
          GenericTempTable.Int5 := EMailSetup.Usage::" ";
        END;
        70: BEGIN//Posted Purchase Receipt
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Purchase;
          GenericTempTable.Int3 := DATABASE::"Purch. Rcpt. Header";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Posted Purchase Receipt";
          GenericTempTable.Int5 := EMailSetup.Usage::"Posted Purchase Receipt";
        END;
        71: BEGIN //FieldServiceAppDemoUser
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(FieldDemoUserTxt);
          GenericTempTable.Int2 := MailTemplate.Type::Apps;
          GenericTempTable.Int3 := DATABASE::"FSA User";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Field Service App User";
          GenericTempTable.Int5 := EMailSetup.Usage::" ";
        END;
        72: BEGIN//CivilConstructionAppWelcome
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Apps;
          GenericTempTable.Int3 := DATABASE::"App User";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"CCA User";
          GenericTempTable.Int5 := EMailSetup.Usage::"Civil Construction App - Welcome Text";
        END;
        73: BEGIN//WarehouseAppWelcome
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Apps;
          GenericTempTable.Int3 := DATABASE::"App User";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"WHA User";
          GenericTempTable.Int5 := EMailSetup.Usage::" ";
        END;
        74: BEGIN //OnSiteAppWelcome
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Apps;
          GenericTempTable.Int3 := DATABASE::"App User GAP";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"WHA User";
          GenericTempTable.Int5 := EMailSetup.Usage::" ";
        END;
        75: BEGIN//CreateServiceCall
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(EMailBodyText.Usage);
          GenericTempTable.Int2 := MailTemplate.Type::Service;
          GenericTempTable.Int3 := DATABASE::"Service Call";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Call Communication";
          GenericTempTable.Int5 := EMailSetup.Usage::" ";
        END;
        80: BEGIN //Extension Contract
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := ExtensionContract.TABLECAPTION;
          GenericTempTable.Int2 := MailTemplate.Type::Project;
          GenericTempTable.Int3 := DATABASE::"Extension Contract";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Extension Contract";
          GenericTempTable.Int5 := 80;
        END;
        81: BEGIN //Option Quote
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(OptionQuoteTxt);
          GenericTempTable.Int2 := MailTemplate.Type::Project;
          GenericTempTable.Int3 := DATABASE::"Option Quote Header";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Option Quote";
          GenericTempTable.Int5 := 81;
        END;
        82: BEGIN //Plot
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := Plot.TABLECAPTION;
          GenericTempTable.Int2 := MailTemplate.Type::Project;
          GenericTempTable.Int3 := DATABASE::Plot;
          GenericTempTable.Int4 := EMailOnBehalf.Usage::Plot;
          GenericTempTable.Int5 := 82;
        END;
        83: BEGIN //Project reports
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(ProjectReportsTxt);
          GenericTempTable.Int2 := MailTemplate.Type::Project;
          GenericTempTable.Int3 := DATABASE::Job;
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Option Quote";
          GenericTempTable.Int5 := 81;
        END;
        84: BEGIN //PlantApp Demo User
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(PlantAppDemoUserTxt);
          GenericTempTable.Int2 := MailTemplate.Type::Apps;
          GenericTempTable.Int3 := DATABASE::"App User";
          GenericTempTable.Int4 := EMailBodyText.Usage;
          GenericTempTable.Int5 := EMailBodyText.Usage;
        END;
        90: BEGIN //WKA Data Request
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(WkaDataRequestTxt);
          GenericTempTable.Int2 := MailTemplate.Type::Financial;
          GenericTempTable.Int3 := DATABASE::Vendor;
          GenericTempTable.Int4 := EMailBodyText.Usage;
          GenericTempTable.Int5 := EMailBodyText.Usage;
        END;
        100: BEGIN //Consent Notification
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(ConsentNotificationTxt);
          GenericTempTable.Int2 := MailTemplate.Type::Financial;
          GenericTempTable.Int3 := DATABASE::Approver;
          GenericTempTable.Int4 := EMailBodyText.Usage;
          GenericTempTable.Int5 := EMailBodyText.Usage;
        END;
        110: BEGIN //Hours by Employee
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(HoursByEmployeeTxt);
          GenericTempTable.Int2 := MailTemplate.Type::Employee;
          GenericTempTable.Int3 := DATABASE::Employee;
          GenericTempTable.Int4 := EMailBodyText.Usage;
          GenericTempTable.Int5 := EMailBodyText.Usage;
        END;
        111: BEGIN //Reminder Hours - Employee
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(ReminderHoursEmployeeTxt);
          GenericTempTable.Int2 := MailTemplate.Type::Employee;
          GenericTempTable.Int3 := DATABASE::Employee;
          GenericTempTable.Int4 := EMailBodyText.Usage;
          GenericTempTable.Int5 := EMailBodyText.Usage;
        END;
        112: BEGIN //Reminder Hours - Manager
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(ReminderHoursManagerTxt);
          GenericTempTable.Int2 := MailTemplate.Type::Employee;
          GenericTempTable.Int3 := DATABASE::"Hour Accounting";
          GenericTempTable.Int4 := EMailBodyText.Usage;
          GenericTempTable.Int5 := EMailBodyText.Usage;
        END;
        113: BEGIN //Reminder Hours - Site Manager
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(ReminderHoursSiteManagerTxt);
          GenericTempTable.Int2 := MailTemplate.Type::Employee;
          GenericTempTable.Int3 := DATABASE::"Site Mngmnt. Hours Header";
          GenericTempTable.Int4 := EMailBodyText.Usage;
          GenericTempTable.Int5 := EMailBodyText.Usage;
        END;
        114: BEGIN //Reminder Hours Site Manager - Manager
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(ReminderHoursSiteManagerManagerTxt);
          GenericTempTable.Int2 := MailTemplate.Type::Employee;
          GenericTempTable.Int3 := DATABASE::"Site Mngmnt. Hours Header";
          GenericTempTable.Int4 := EMailBodyText.Usage;
          GenericTempTable.Int5 := EMailBodyText.Usage;
        END;
        118: BEGIN //Signhost Sign Request
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(SignHostSignerTxt);
          GenericTempTable.Int2 := MailTemplate.Type::Employee;
          GenericTempTable.Int3 := DATABASE::"Signhost Signer";
          GenericTempTable.Int4 := EMailBodyText.Usage;
          GenericTempTable.Int5 := EMailBodyText.Usage;
        END;
        119: BEGIN //Signhost Signed Document
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(SignHostDocumentTxt);
          GenericTempTable.Int2 := MailTemplate.Type::Employee;
          GenericTempTable.Int3 := DATABASE::"Signhost Signer";
          GenericTempTable.Int4 := EMailBodyText.Usage;
          GenericTempTable.Int5 := EMailBodyText.Usage;
        END;
        121: BEGIN //Plant Transport Ride
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := PlantTransportRide.TABLECAPTION;
          GenericTempTable.Int2 := MailTemplate.Type::Plant;
          GenericTempTable.Int3 := DATABASE::"Plant Transport Ride";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Plant Reports";
          GenericTempTable.Int5 := EMailBodyText.Usage;
        END;
      //  130: BEGIN //Docket
      //    GenericTempTable.Int1 := EMailBodyText.Usage;
      //    GenericTempTable.Text1 := FORMAT(DocketTxt);
      //    GenericTempTable.Int2 := MailTemplate.Type::Financial;
      //    GenericTempTable.Int3 := DATABASE::"Payment History Line";
      //    GenericTempTable.Int4 := EMailBodyText.Usage;
      //    GenericTempTable.Int5 := EMailBodyText.Usage;
      //  END;
        140: BEGIN //Change Request Communication
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(ChangeRequestCommunicationTxt);
          GenericTempTable.Int2 := MailTemplate.Type::Service;
          GenericTempTable.Int3 := DATABASE::"Change Request";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Change Request Communication";
          GenericTempTable.Int5 := EMailBodyText.Usage;
        END;
        141: BEGIN //Service Call Communication
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(ServiceCallCommunicationTxt);
          GenericTempTable.Int2 := MailTemplate.Type::Service;
          GenericTempTable.Int3 := DATABASE::"Service Call";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Call Communication";
          GenericTempTable.Int5 := EMailBodyText.Usage;
        END;
        150: BEGIN //Purchase Order Receipt
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(PurchaseOrderReceiptTXT);
          GenericTempTable.Int2 := MailTemplate.Type::Purchase;
          GenericTempTable.Int3 := DATABASE::"Purchase Header";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Purchase Order Receipt";
          GenericTempTable.Int5 := EMailSetup.Usage::" ";
        END;
        151: BEGIN //Purchase Return Order
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(PurchaseReturnOrderTXT);
          GenericTempTable.Int2 := MailTemplate.Type::Purchase;
          GenericTempTable.Int3 := DATABASE::"Purchase Header";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Purchase Order";
          GenericTempTable.Int5 := EMailSetup.Usage::" ";
        END;
        160: BEGIN //Mail Appointment Confirmation (Call/Direct)
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(MailAppointmentConfTXT);
          GenericTempTable.Int2 := MailTemplate.Type::Service;
          GenericTempTable.Int3 := DATABASE::"Service Order";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Service Call Communication";
          GenericTempTable.Int5 := EMailSetup.Usage::"Maintenance Appointment";
        END;
        170: BEGIN //Civil Construction App - Summary
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(CivilConstructionAppSummaryTxt);
          GenericTempTable.Int2 := MailTemplate.Type::Apps;
          GenericTempTable.Int3 := DATABASE::"App User";
          GenericTempTable.Int4 := EMailBodyText.Usage;
          GenericTempTable.Int5 := EMailBodyText.Usage;
        END;
        180: BEGIN //HPT/HRA Demo User
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(HPTHRADemoUserTxt);
          GenericTempTable.Int2 := MailTemplate.Type::Portals;
          GenericTempTable.Int3 := DATABASE::"Hour Portal User";
          GenericTempTable.Int4 := EMailBodyText.Usage;
          GenericTempTable.Int5 := EMailBodyText.Usage;
        END;
        190: BEGIN //Invoice Proposal
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := 'Invoice Proposal';
          GenericTempTable.Int2 := MailTemplate.Type::Sales;
          GenericTempTable.Int3 := DATABASE::"Sales Header";
          GenericTempTable.Int4 := 190;
          GenericTempTable.Int5 := 190;
         END;
        200: BEGIN //PPT SendMail Quote Update
          GenericTempTable.Int1 := EMailBodyText.Usage;
          GenericTempTable.Text1 := FORMAT(SendMailQuoteUpdateTXT);
          GenericTempTable.Int2 := MailTemplate.Type::Portals;
          GenericTempTable.Int3 := DATABASE::"Vendors by Purchase Action"; //"Project Purchase Action";
          GenericTempTable.Int4 := EMailOnBehalf.Usage::"Project Portal";
          GenericTempTable.Int5 := EMailSetup.Usage::" ";
        END;
      END;
    END;

    LOCAL PROCEDURE GetEmailBodyFunctionName@1100528306(EMailBodyText@1100528300 : Record 11012769) : Text;
    BEGIN
      IF (EMailBodyText."Table Function" <> 0) THEN
        EXIT(DELCHR(TableFunctionArr[EMailBodyText."Table Function"], '<=>', DelCharString));
    END;

    LOCAL PROCEDURE GetEmailBodyTextTableCaption@1100528307(EMailBodyText@1100528300 : Record 11012769) TableCaption : Text;
    VAR
      RecRef@1100528301 : RecordRef;
    BEGIN
      RecRef.OPEN(GetEmailBodyTextTableNo(EMailBodyText));
      TableCaption := RecRef.CAPTION;
      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE GetEmailBodyTextTableNo@1100528333(EMailBodyText@1100528300 : Record 11012769) : Integer;
    BEGIN
      IF (EMailBodyText."Table No." = 0) THEN
        EXIT;
      CASE EMailBodyText."Table No." OF
        EMailBodyText."Table No."::CompInfo: EXIT(DATABASE::"Company Information");
        EMailBodyText."Table No."::SalesInvoice: EXIT(DATABASE::"Sales Invoice Header");
        EMailBodyText."Table No."::SalesCreditMemo: EXIT(DATABASE::"Sales Cr.Memo Header");
        EMailBodyText."Table No."::SalesQuote: EXIT(DATABASE::"Sales Header");
        EMailBodyText."Table No."::SalesOrder: EXIT(DATABASE::"Sales Header");
        EMailBodyText."Table No."::"Sales Shipment": EXIT(DATABASE::"Sales Shipment Header");
        EMailBodyText."Table No."::PurchOrder: EXIT(DATABASE::"Purchase Header");
        EMailBodyText."Table No."::PurchQuote: EXIT(DATABASE::"Purchase Header");
        EMailBodyText."Table No."::OptionQuote: EXIT(DATABASE::"Option Quote Header");
        EMailBodyText."Table No."::Plot: EXIT(DATABASE::Plot);
        EMailBodyText."Table No."::ServOrder: EXIT(DATABASE::"Service Order");
        EMailBodyText."Table No."::ServOrderExtension: EXIT(DATABASE::"Service Order Extension");
        EMailBodyText."Table No."::"Planning Agreement": EXIT(DATABASE::"Planning Agreement");
        EMailBodyText."Table No."::PlantTransportOrder: EXIT(DATABASE::"Plant Transport Order");
        EMailBodyText."Table No."::PlantExitOrder: EXIT(DATABASE::"Exit Order");
        EMailBodyText."Table No."::PlantOrder: EXIT(DATABASE::"Plant Order");
        EMailBodyText."Table No."::Reminder: EXIT(DATABASE::"Issued Reminder Header");
        EMailBodyText."Table No."::Vendor: EXIT(DATABASE::Vendor);
        EMailBodyText."Table No."::"SharePoint Setup": EXIT(DATABASE::"SharePoint Setup 4PS");
        EMailBodyText."Table No."::"Project Portal Login": EXIT(DATABASE::"Project Portal Login");
        EMailBodyText."Table No."::Contact: EXIT(DATABASE::Contact);
        EMailBodyText."Table No."::Employee: EXIT(DATABASE::Employee);
        EMailBodyText."Table No."::Project: EXIT(DATABASE::Job);
        EMailBodyText."Table No."::"Project Purchase Action": EXIT(DATABASE::"Project Purchase Action");
        EMailBodyText."Table No."::"Work Order": EXIT(DATABASE::"Work Order");
        EMailBodyText."Table No."::"Service Portal Login": EXIT(DATABASE::"Serv.Port. User");
        EMailBodyText."Table No."::"Subcontrator Portal Login": EXIT(DATABASE::"Subcont.Port. User");
        EMailBodyText."Table No."::"Extension Contract": EXIT(DATABASE::"Extension Contract");
        EMailBodyText."Table No."::Approver: EXIT(DATABASE::Approver);
        EMailBodyText."Table No."::"Salesperson/Purchaser": EXIT(DATABASE::"Salesperson/Purchaser");
        EMailBodyText."Table No."::ProblemText,
        EMailBodyText."Table No."::InternalText,
        EMailBodyText."Table No."::ResolveText,
        EMailBodyText."Table No."::CauseText: EXIT(DATABASE::"Service Text");
        EMailBodyText."Table No."::DebriefText: EXIT(DATABASE::"Debrief Text");
        EMailBodyText."Table No."::"Work Order Text": EXIT(DATABASE::"Work Order Text");
      //  EMailBodyText."Table No."::"Paym. Hist. Line": EXIT(DATABASE::"Payment History Line");
        EMailBodyText."Table No."::"Signhost Signer": EXIT(DATABASE::"Signhost Signer");
        EMailBodyText."Table No."::"Change Request Communication": EXIT(DATABASE::"General Advanced Text");
        EMailBodyText."Table No."::"Service Call Communication": EXIT(DATABASE::"General Advanced Text");
        EMailBodyText."Table No."::"Change Request": EXIT(DATABASE::"Change Request");
        EMailBodyText."Table No."::"Service Call": EXIT(DATABASE::"Service Call");
        EMailBodyText."Table No."::ServiceLocation: EXIT(DATABASE::"Service Location");
        EMailBodyText."Table No."::"FSA User": EXIT(DATABASE::"FSA User");
        EMailBodyText."Table No."::SHParticipant: EXIT(DATABASE::"SH Workplan Participant");
        EMailBodyText."Table No."::"Hour Accounting": EXIT(DATABASE::"Hour Accounting");
        EMailBodyText."Table No."::"Site manager Hour Accounting": EXIT(DATABASE::"Site Mngmnt. Hours Header");
        EMailBodyText."Table No."::"App User": EXIT(DATABASE::"App User");
        EMailBodyText."Table No."::"Reminder Level": EXIT(DATABASE::"Reminder Level");
        EMailBodyText."Table No."::"Posted Purchase Receipt": EXIT(DATABASE::"Purch. Rcpt. Header");
        EMailBodyText."Table No."::"App User GAP": EXIT(DATABASE::"App User GAP");
      END;
      ERROR(NoBaseFoundTxt, EMailBodyText.FIELDCAPTION("Table No."));
    END;

    LOCAL PROCEDURE GetLevel@1100528329(EMailBodyText@1100528300 : Record 11012769) : Integer;
    VAR
      TableNo@1100528301 : Integer;
    BEGIN
      TableNo := GetEmailBodyTextTableNo(EMailBodyText);
      IF (TableNo = GenericTempTable.Int3) THEN
       EXIT(1);

      CASE EMailBodyText."Table No." OF
        EMailBodyText."Table No."::CompInfo,
        EMailBodyText."Table No."::"SharePoint Setup":
          EXIT(1);
        EMailBodyText."Table No."::"Project Portal Login":
          EXIT(3);
      END;
      EXIT(2);
    END;

    PROCEDURE InitializeMailTemplateManagement@1100528365();
    VAR
      MailTemplate@1100528301 : Record 11229450;
      Counter@1100528300 : Integer;
    BEGIN
      FOR Counter := 1 TO 9999 DO BEGIN
        GenericTempTable.INIT;
        GetDataFromOldUsageOption(Counter);
        IF (GenericTempTable.Text1 <> '') THEN BEGIN
          GenericTempTable.UpdateGenericTempTable(FORMAT(Counter), '', '', '', '', '');
        END;
      END;

      IF (NOT GenericTempTable.FINDSET) THEN
        EXIT;

      REPEAT
        IF (NOT MailTemplate.GET(GenericTempTable.Int1, '')) THEN BEGIN
          MailTemplate.INIT;
          MailTemplate."No." := GenericTempTable.Int1;
          MailTemplate.INSERT;
        END;
        MailTemplate.Name := GenericTempTable.Text1;
        MailTemplate.Type := GenericTempTable.Int2;
        MailTemplate."Source Table No." := GenericTempTable.Int3;
        MailTemplate.MODIFY;
        MailTemplate.UpdateBaseTable;
      UNTIL (GenericTempTable.NEXT = 0);
    END;

    LOCAL PROCEDURE MigrateEmailBodyToMailTemplate@1100528305();
    VAR
      MailTemplateTable@1100528302 : Record 11229453;
      EMailBodyText@1100528300 : Record 11012769;
      CurrUsageNo@1100528311 : Integer;
    BEGIN
      SetGlobalVars;
      FunctionNames;
      InitializeMailTemplateManagement;

      IF (GenericTempTable.FINDSET) THEN BEGIN
        REPEAT
          AddMailTemplate;
        UNTIL (GenericTempTable.NEXT = 0);
      END;

      EMailBodyText.SETRANGE(Usage, 1, 999);
      IF (EMailBodyText.FINDSET) THEN BEGIN
        REPEAT
          GetDataFromGenericTempTableUsage(EMailBodyText.Usage);
          IF (CurrUsageNo <> GenericTempTable.Int1) THEN  BEGIN
            IF (GenericTempTable.Int3 <> 0) THEN BEGIN
              MailTemplateTable.INIT;
              MailTemplateTable."Mail Template No." := GenericTempTable.Int1;
              MailTemplateTable.Level := 1;
              MailTemplateTable."Seq. No." := 0;
              MailTemplateTable."Table No." := GenericTempTable.Int3;
              MailTemplateTable."Parent Level" := 1;
              MailTemplateTable."Parent Table No." := GenericTempTable.Int3;
              MailTemplateTable."Parent Seq. No." := 0;
              MailTemplateTable.CALCFIELDS("Table Caption", "Table Name");
              MailTemplateTable.VALIDATE("Element Prefix", MailTemplateTable."Table Caption");
              IF (MailTemplateTable.INSERT) THEN;
              MailTemplateTable.AddTableCaptionElementName;
            END;
            AddMailTemplateAttachments;
            AddMailTemplateLayouts;
          END;
          CurrUsageNo := GenericTempTable.Int1;
        UNTIL (EMailBodyText.NEXT = 0);
      END;

      AddMailTemplatesWithDimensionCodes;
      DoFixesAfterward;
    END;

    LOCAL PROCEDURE SetGlobalVars@1100528308();
    BEGIN
      CRLF[1] := StringFunctions.CarriageReturn;
      CRLF[2] := StringFunctions.LineFeed;
      GenericTempTable.DELETEALL;
      DelCharString := ' -.,()/\%&';
    END;

    LOCAL PROCEDURE SubstituteTextLine@1100528361(MailTemplateLayoutLine@1100528300 : Record 11229457;EMailBodyText@1100528302 : Record 11012769);
    VAR
      MailTemplateTableField@1100528303 : Record 11229455;
      TextLine@1100528304 : Text;
      Pos@1100528301 : Integer;
      TableFunction@1100528306 : Text;
      RecRef@1100528305 : RecordRef;
    BEGIN
      Pos := STRPOS(MailTemplateLayoutLine."Text Line", '%1');
      IF (Pos <= 0) THEN
        EXIT;
      TableFunction := GetEmailBodyFunctionName(EMailBodyText);

      MailTemplateTableField.SETRANGE("Mail Template No.", MailTemplateLayoutLine."Mail Template No.");
      MailTemplateTableField.SETRANGE("Table No.", GetEmailBodyTextTableNo(EMailBodyText));
      CASE TRUE OF
        (EMailBodyText."Table No." <> 0) AND (EMailBodyText."Field No." <> 0): BEGIN
          MailTemplateTableField.SETRANGE("Mail Template No.", MailTemplateLayoutLine."Mail Template No.");
          MailTemplateTableField.SETRANGE("Table No.", GetEmailBodyTextTableNo(EMailBodyText));
          CASE TRUE OF
            EMailBodyText."Table No." = EMailBodyText."Table No."::CauseText: BEGIN
              TableFunction := DELCHR(TableFunctionArr[8], '<=>', DelCharString);
              MailTemplateTableField.SETRANGE("Field No.", 0);
              MailTemplateTableField.SETRANGE("Function Name", TableFunction);
              MailTemplateTableField.SETRANGE("Element Name", STRSUBSTNO('%1_%2', ServiceTextCauseTxt, TableFunction));
            END;
            EMailBodyText."Table No." = EMailBodyText."Table No."::"Change Request Communication": BEGIN
              RecRef.OPEN(DATABASE::"General Advanced Text");
              TableFunction := DELCHR(TableFunctionArr[6], '<=>', DelCharString);
              MailTemplateTableField.SETRANGE("Field No.", 0);
              MailTemplateTableField.SETRANGE("Function Name", TableFunction);
              MailTemplateTableField.SETRANGE("Element Name", STRSUBSTNO('%1_%2',
                DELCHR(RecRef.CAPTION, '<=>', DelCharString), TableFunction));
              RecRef.CLOSE;
            END;
            EMailBodyText."Table No." = EMailBodyText."Table No."::DebriefText: BEGIN
              RecRef.OPEN(DATABASE::"Debrief Text");
              TableFunction := DELCHR(TableFunctionArr[9], '<=>', DelCharString);
              MailTemplateTableField.SETRANGE("Field No.", 0);
              MailTemplateTableField.SETRANGE("Function Name", TableFunction);
              MailTemplateTableField.SETRANGE("Element Name", STRSUBSTNO('%1_%2',
                DELCHR(RecRef.CAPTION, '<=>', DelCharString), TableFunction));
              RecRef.CLOSE;
            END;
            EMailBodyText."Table No." = EMailBodyText."Table No."::InternalText: BEGIN
              TableFunction := DELCHR(TableFunctionArr[8], '<=>', DelCharString);
              MailTemplateTableField.SETRANGE("Field No.", 0);
              MailTemplateTableField.SETRANGE("Function Name", TableFunction);
              MailTemplateTableField.SETRANGE("Element Name", STRSUBSTNO('%1_%2', ServiceTextInternalTxt, TableFunction));
            END;
            EMailBodyText."Table No." = EMailBodyText."Table No."::ProblemText: BEGIN
              TableFunction := DELCHR(TableFunctionArr[8], '<=>', DelCharString);
              MailTemplateTableField.SETRANGE("Field No.", 0);
              MailTemplateTableField.SETRANGE("Function Name", TableFunction);
              MailTemplateTableField.SETRANGE("Element Name", STRSUBSTNO('%1_%2', ServiceTextProblemTxt, TableFunction));
            END;
            EMailBodyText."Table No." = EMailBodyText."Table No."::ResolveText: BEGIN
              TableFunction := DELCHR(TableFunctionArr[8], '<=>', DelCharString);
              MailTemplateTableField.SETRANGE("Field No.", 0);
              MailTemplateTableField.SETRANGE("Function Name", TableFunction);
              MailTemplateTableField.SETRANGE("Element Name", STRSUBSTNO('%1_%2', ServiceTextResolveTxt, TableFunction));
            END;
            EMailBodyText."Table No." = EMailBodyText."Table No."::"Service Call Communication": BEGIN
              RecRef.OPEN(DATABASE::"General Advanced Text");
              TableFunction := DELCHR(TableFunctionArr[6], '<=>', DelCharString);
              MailTemplateTableField.SETRANGE("Field No.", 0);
              MailTemplateTableField.SETRANGE("Function Name", TableFunction);
              MailTemplateTableField.SETRANGE("Element Name", STRSUBSTNO('%1_%2',
                DELCHR(RecRef.CAPTION, '<=>', DelCharString), TableFunction));
              RecRef.CLOSE;
            END;
            EMailBodyText."Table No." = EMailBodyText."Table No."::"Work Order Text": BEGIN
              RecRef.OPEN(DATABASE::"Work Order Text");
              TableFunction := DELCHR(TableFunctionArr[10], '<=>', DelCharString);
              MailTemplateTableField.SETRANGE("Field No.", 0);
              MailTemplateTableField.SETRANGE("Function Name", TableFunction);
              MailTemplateTableField.SETRANGE("Element Name", STRSUBSTNO('%1_%2',
                DELCHR(RecRef.CAPTION, '<=>', DelCharString), TableFunction));
              RecRef.CLOSE;
            END;
            ELSE BEGIN
              MailTemplateTableField.SETRANGE("Field No.", EMailBodyText."Field No.");
              MailTemplateTableField.SETRANGE("Function Name", '');
            END;
          END;
          IF (NOT MailTemplateTableField.FINDFIRST) THEN
            EXIT;
        END;
        (EMailBodyText."Table Function" <> 0): BEGIN
          MailTemplateTableField.SETRANGE("Function Name", TableFunction);
          IF (NOT MailTemplateTableField.FINDFIRST) THEN
            EXIT;
        END;
        ELSE EXIT;
      END;

      TextLine := MailTemplateLayoutLine."Text Line";
      MailTemplateLayoutLine."Text Line" := COPYSTR(TextLine, 1, Pos - 1);
      MailTemplateLayoutLine."Text Line" += MailTemplateManagement.GetElementName(MailTemplateTableField."Element Name");
      MailTemplateLayoutLine."Text Line" += COPYSTR(TextLine, Pos + 2);
      MailTemplateLayoutLine.MODIFY;
    END;

    LOCAL PROCEDURE "---Do Afterwards---"@1100528303();
    BEGIN
    END;

    LOCAL PROCEDURE DoFixesAfterward@1100528355();
    BEGIN
      DoFixesAfterwardServPortUser;
      DoFixesAfterwardSubcontPortUser;
    END;

    LOCAL PROCEDURE DoFixesAfterwardServPortUser@1100528366();
    VAR
      MailTemplateTableField@1100528300 : Record 11229455;
      MailTemplateLayoutLine@1100528301 : Record 11229457;
      OldElementName@1100528302 : Text;
    BEGIN
      MailTemplateTableField.SETRANGE("Table No.", DATABASE::"Serv.Port. User");
      MailTemplateTableField.SETRANGE("Field No.", 30); //Password
      IF (MailTemplateTableField.FINDSET(TRUE, TRUE)) THEN BEGIN
        REPEAT
          IF (MailTemplateTableField.Type <> MailTemplateTableField.Type::Value) THEN BEGIN
            MailTemplateTableField.DELETE;
          END ELSE BEGIN
            OldElementName := MailTemplateTableField."Element Name";
            MailTemplateTableField.VALIDATE("Function Name", DELCHR(TableFunctionArr[3], '<=>', DelCharString));
            MailTemplateTableField.MODIFY;

            MailTemplateLayoutLine.SETRANGE("Mail Template No.", MailTemplateTableField."Mail Template No.");
            MailTemplateLayoutLine.SETFILTER("Text Line", '*'+OldElementName+'*');
            IF (MailTemplateLayoutLine.FINDSET(TRUE)) THEN BEGIN
              REPEAT
                MailTemplateLayoutLine."Text Line" := StringFunctions.ReplaceString(MailTemplateLayoutLine."Text Line", OldElementName, MailTemplateTableField."Element Name");
                MailTemplateLayoutLine.MODIFY;
              UNTIL (MailTemplateLayoutLine.NEXT = 0);
            END;
          END;
        UNTIL (MailTemplateTableField.NEXT = 0);
      END;
    END;

    LOCAL PROCEDURE DoFixesAfterwardSubcontPortUser@1100528367();
    VAR
      MailTemplateTableField@1100528300 : Record 11229455;
      MailTemplateLayoutLine@1100528301 : Record 11229457;
      OldElementName@1100528302 : Text;
    BEGIN
      MailTemplateTableField.SETRANGE("Table No.", DATABASE::"Subcont.Port. User");
      MailTemplateTableField.SETRANGE("Field No.", 30); //Password
      IF (MailTemplateTableField.FINDSET(TRUE, TRUE)) THEN BEGIN
        REPEAT
          IF (MailTemplateTableField.Type <> MailTemplateTableField.Type::Value) THEN BEGIN
            MailTemplateTableField.DELETE;
          END ELSE BEGIN
            OldElementName := MailTemplateTableField."Element Name";
            MailTemplateTableField.VALIDATE("Function Name", DELCHR(TableFunctionArr[4], '<=>', DelCharString));
            MailTemplateTableField.MODIFY;

            MailTemplateLayoutLine.SETRANGE("Mail Template No.", MailTemplateTableField."Mail Template No.");
            MailTemplateLayoutLine.SETFILTER("Text Line", '*'+OldElementName+'*');
            IF (MailTemplateLayoutLine.FINDSET(TRUE)) THEN BEGIN
              REPEAT
                MailTemplateLayoutLine."Text Line" := StringFunctions.ReplaceString(MailTemplateLayoutLine."Text Line", OldElementName, MailTemplateTableField."Element Name");
                MailTemplateLayoutLine.MODIFY;
              UNTIL (MailTemplateLayoutLine.NEXT = 0);
            END;
          END;
        UNTIL (MailTemplateTableField.NEXT = 0);
      END;
    END;

    BEGIN
    END.
  }
}

