OBJECT Report 11020253 Copy Hour Accounting Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Stundenerfassungszeile kopieren;
               ENU=Copy Hour Accounting Line;
               NLD=Kopieer urenverantwoordingsregel;
               NOR=Kopier timerapporteringsrad;
               SVE=Kopiera tidrapporteringsrad];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 7528;    ;DataItem;                    ;
               DataItemTable=Table5200;
               DataItemTableView=SORTING(No.)
                                 ORDER(Ascending);
               OnAfterGetRecord=BEGIN
                                  IF AuthorizationForDepartment(Employee."No.") THEN
                                    CreateHourAccountingLine(Employee."No.");
                                END;

               OnPostDataItem=BEGIN
                                MESSAGE(Text001, Counter);
                              END;

               ReqFilterFields=No.,Global Dimension 1 Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      HourAccountingLine@1100528702 : Record 11012039;
      Counter@1100528700 : Integer;
      Text001@1100528701 : TextConst 'DEU=%1 Zeile(n) erstellt.;ENU=%1 line(s) created.;NLD=%1 regel(s) aangemaakt.;NOR=%1 rad(er) er opprettet.;SVE=%1 rad(er) har skapats.';

    PROCEDURE CreateHourAccountingLine@1100528700(EmployeeNo@1100528702 : Code[20]);
    VAR
      HourAccounting@1100528703 : Record 11012038;
      HourAccountingLine2@1100528704 : Record 11012039;
    BEGIN
      IF NOT HourAccounting.GET(HourAccountingLine.Year, HourAccountingLine.Week, EmployeeNo) THEN
        EXIT;

      IF EmployeeNo = HourAccountingLine."Employee No." THEN
        EXIT;

      HourAccountingLine2.TRANSFERFIELDS(HourAccountingLine);
      HourAccountingLine2.VALIDATE("Employee No.", EmployeeNo);
      HourAccountingLine2.VALIDATE(Element, HourAccountingLine.Element);
      HourAccountingLine2.VALIDATE("Cost Object", HourAccountingLine."Cost Object");
      HourAccountingLine2.VALIDATE("Wage Component", HourAccountingLine."Wage Component");
      HourAccountingLine2.VALIDATE("Cost Component", HourAccountingLine."Cost Component");
      HourAccountingLine2.CalcRateAndAmount;
      HourAccountingLine2."Line No." := HourAccountingLine2.GetNextFreeLineNo;
      HourAccountingLine2.INSERT(TRUE);

      Counter := Counter + 1;
    END;

    PROCEDURE AuthorizationForDepartment@1100528702(EmployeeNo@1100528704 : Code[20]) Result : Boolean;
    VAR
      DepartmentAuthorizObject@1100528701 : Record 11012466;
      DepartmentAuthorizationMgt@1100528702 : Codeunit 11012783;
      Employee2@1100528703 : Record 5200;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      Result := TRUE;
      IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN BEGIN
        IF DepartmentAuthorizationMgt.AuthorizationActive THEN BEGIN
          Employee2.SETRANGE("No.", EmployeeNo);
          Employee2.SETFILTER("Global Dimension 1 Code", DepartmentAuthorizationMgt.GetUserDepartmentFilter);
          Result := Employee2.FINDFIRST;
        END;
      END;
    END;

    PROCEDURE SetHourAccountingLine@1100528703(NewHourAccountingLine@1100528700 : Record 11012039);
    BEGIN
      HourAccountingLine := NewHourAccountingLine;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

