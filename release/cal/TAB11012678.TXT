OBJECT Table 11012678 Debrief Error Message (Mobile)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Debrief Error Message (Mobile);
               NOR=Debrief, feilmelding (mobil);
               SVE=Avrapportera felmeddelande (mobil)];
    DrillDownPageID=Page11072402;
  }
  FIELDS
  {
    { 10  ;   ;Work Order No.      ;Code50        ;TableRelation=IF (Debrief Type=FILTER(<>DecentralWO)) "Work Order";
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Work Order No.;
                                                              SVE=Serviceordernr];
                                                   Editable=No }
    { 20  ;   ;Resource No. (Employee);Code20     ;TableRelation="Resource (WOP)" WHERE (Type=CONST(Employee));
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Resource No. (Employee);
                                                              SVE=Anst„llningsnr];
                                                   Editable=No }
    { 30  ;   ;Debrief Type        ;Option        ;CaptionML=[ENU=Debrief Type;
                                                              NOR=Debrieftype;
                                                              SVE=Avrapporteringstyp];
                                                   OptionCaptionML=ENU=Work Order,Status,Text,Budget,Cost Plus,Advice Order,,InspectionLine,Object Specification,Order Text,Hours,Decentral WO,,Restock Item,Planning,Create Purchase Order,Unit Price Production,Service Order Object,Create Restock Purchase Order,Advice Order Text,Item Journal Line,Purchase Order,Purchase Order Line,Purchase Receipt Line,Condition Measurement Line,Post General,Inventory Mgt.,Maps Item,Related Work Order;
                                                   OptionString=WorkOrder,Status,Text,Budget,CostPlus,AdviceOrder,,InspectionLine,ObjectSpecification,OrderText,Hours,DecentralWO,,RestockItem,Planning,CreatePurchOrder,SUPProduction,ServiceOrderObject,CreateRestockPurchOrder,AdviceOrderText,ItemJnlLine,PurchaseOrder,PurchaseOrderLine,PurchaseReceiptLine,ConditionMeasurementLine,PostGeneral,InventoryMgt,MapsItem,RelatedWorkOrder;
                                                   Description=Options must be the same as in T11012677 (Fld 30);
                                                   Editable=No }
    { 40  ;   ;Debrief Line No.    ;Integer       ;CaptionML=[ENU=Debrief Line No.;
                                                              NOR=Debrief, radnr.;
                                                              SVE=Avrapporteringsradnr];
                                                   Editable=No }
    { 50  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 60  ;   ;Error Message       ;Text250       ;CaptionML=[ENU=Error Message;
                                                              NOR=Feilmelding;
                                                              SVE=Felmeddelande] }
  }
  KEYS
  {
    {    ;Work Order No.,Resource No. (Employee),Debrief Type,Debrief Line No.,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE WriteError@1100485000(IErrorText@1100485001 : Text[250];ILogbookRec@1100485002 : Record 11012677;IDebriefLineNo@1100485003 : Integer) : Integer;
    VAR
      lvErrorRec@1100485000 : Record 11012678;
      lvErrorRec2@1100485004 : Record 11012678;
    BEGIN
      WITH lvErrorRec DO BEGIN
        INIT;
        "Work Order No." := ILogbookRec."Work Order No.";
        "Resource No. (Employee)" := ILogbookRec."Resource No. (Employee)";
        "Debrief Type" := ILogbookRec."Debrief Type";
        "Debrief Line No." := IDebriefLineNo;
        "Error Message" := COPYSTR(IErrorText, 1, MAXSTRLEN("Error Message"));

        lvErrorRec2.SETRANGE("Work Order No.", "Work Order No.");
        lvErrorRec2.SETRANGE("Resource No. (Employee)", "Resource No. (Employee)");
        lvErrorRec2.SETRANGE("Debrief Type", "Debrief Type");
        lvErrorRec2.SETRANGE("Debrief Line No.", "Debrief Line No.");
        IF lvErrorRec2.FINDLAST THEN
          "Line No." := lvErrorRec2."Line No." + 1
        ELSE
          "Line No." := 1;

        lvErrorRec.INSERT;

        EXIT("Line No.");
      END;
    END;

    PROCEDURE DeleteErrors@1100485001(ILogbookRec@1100485002 : Record 11012677;IDebriefLineNo@1100485003 : Integer);
    VAR
      lvErrorRec@1100485000 : Record 11012678;
    BEGIN
      //* Delete errors of a debrief line
      WITH lvErrorRec DO BEGIN
        SETRANGE("Work Order No.", ILogbookRec."Work Order No.");
        SETRANGE("Resource No. (Employee)", ILogbookRec."Resource No. (Employee)");
        SETRANGE("Debrief Type", ILogbookRec."Debrief Type");
        SETRANGE("Debrief Line No.", IDebriefLineNo);
        DELETEALL;
      END;
    END;

    BEGIN
    END.
  }
}

