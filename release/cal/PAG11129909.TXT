OBJECT Page 11129909 Insert New Prognosis Lines
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Neue Prognosezeilen einfÅgen;
               ENU=Insert New  Prognosis Lines;
               NLD=Nieuw prognoseregels];
    DeleteAllowed=No;
    SourceTable=Table11012035;
    DelayedInsert=Yes;
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    OnFindRecord=BEGIN
                   PrognosisLineTMP.COPY(Rec);
                   IF PrognosisLineTMP.FIND(Which) THEN BEGIN
                     Rec.COPY(PrognosisLineTMP);
                     EXIT(TRUE)
                   END ELSE
                     EXIT(FALSE);
                 END;

    OnNextRecord=VAR
                   iStepRes@1100529700 : Integer;
                 BEGIN
                   PrognosisLineTMP.COPY(Rec);
                   iStepRes := PrognosisLineTMP.NEXT(Steps);
                   IF iStepRes <> 0 THEN
                     Rec.COPY(PrognosisLineTMP);
                   EXIT(iStepRes);
                 END;

    OnAfterGetRecord=BEGIN
                       // PrognosisLineTMP.COPY(Rec);
                     END;

    OnNewRecord=BEGIN
                  PrognosisLineTMP."Cost Object" := '';
                  IF PrognosisLineTMP.INSERT THEN BEGIN
                    Rec.COPY(PrognosisLineTMP);
                    Rec.INSERT;
                  END ELSE Rec.COPY(PrognosisLineTMP);

                  CheckDeleteEnabled;
                END;

    OnQueryClosePage=VAR
                       PrognosisLine@1100529700 : Record 11012035;
                     BEGIN
                       IF CloseAction <> ACTION::LookupOK THEN
                         EXIT(TRUE);
                       PrognosisLineTMP.SETFILTER("Cost Object",'<>''''');
                       IF PrognosisLineTMP.FINDFIRST THEN
                         REPEAT
                           PrognosisLineTMP.TESTFIELD("Cost Object");
                           PrognosisLine.INIT;
                           PrognosisLine.VALIDATE("Project No.", PrognosisLineTMP."Project No.");
                           PrognosisLine.VALIDATE("Prognosis Date", PrognosisLineTMP."Prognosis Date");
                           PrognosisLine.VALIDATE(Element, PrognosisLineTMP.Element);
                           PrognosisLine.VALIDATE("Cost Type", PrognosisLineTMP."Cost Type");
                           PrognosisLine.VALIDATE("Cost Object", PrognosisLineTMP."Cost Object");

                           IF NOT PrognosisLine.INSERT(TRUE) THEN BEGIN
                             MESSAGE(STRSUBSTNO(Text001, PrognosisLine.TABLECAPTION, PrognosisLine."Project No.", PrognosisLine."Prognosis Date", PrognosisLine."Cost Type", PrognosisLine.Element, PrognosisLine."Cost Object"));
                             PrognosisLineTMP.SETRANGE("Cost Object");
                             EXIT(FALSE);
                           END
                         UNTIL PrognosisLineTMP.NEXT = 0
                     END;

    ActionList=ACTIONS
    {
      { 1100529709;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100529708;1 ;ActionGroup;
                      CaptionML=[DEU=Zeile;
                                 ENU=Line;
                                 NLD=Regel;
                                 NOR=RAD;
                                 SVE=Rad] }
      { 1100529707;2 ;Action    ;
                      Name=Delete;
                      ShortCutKey=Ctrl+D;
                      CaptionML=[DEU=Lîschen;
                                 ENU=Delete;
                                 NLD=Verwijderen;
                                 NOR=Fjern;
                                 SVE=Ta bort];
                      Promoted=Yes;
                      Enabled=DeleteEnabled;
                      PromotedIsBig=Yes;
                      Image=Delete;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 DeleteRow;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100529700;0;Container;
                ContainerType=ContentArea }

    { 1100529701;1;Group  ;
                GroupType=Repeater }

    { 1100529702;2;Field  ;
                Name=ProjectNo;
                CaptionML=[DEU=Projektnr.;
                           ENU=Project No.;
                           NLD=Projectnr.;
                           NOR=Prosjektnr;
                           SVE=Projektnr];
                SourceExpr=PrognosisLineTMP."Project No.";
                Editable=FALSE }

    { 1100529703;2;Field  ;
                Name=PrognosisDate;
                CaptionML=[DEU=Prognosedatum;
                           ENU=Prognosis Date;
                           NLD=Prognosedatum;
                           NOR=Prognosedato;
                           SVE=Prognosdatum];
                SourceExpr=PrognosisLineTMP."Prognosis Date";
                Editable=FALSE }

    { 1100529706;2;Field  ;
                Name=Element;
                CaptionML=[DEU=Element;
                           ENU=Element;
                           NLD=Element;
                           NOR=Element;
                           SVE=Element];
                SourceExpr=PrognosisLineTMP.Element;
                TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                Visible=ElementVisible;
                Editable=ElementVisible;
                OnValidate=BEGIN
                             PrognosisLineMODIFY;
                           END;
                            }

    { 1100529704;2;Field  ;
                Name=CostType;
                CaptionML=[DEU=Kostenart;
                           ENU=Cost Type;
                           NLD=Kostensoort;
                           NOR=Kostnadstype;
                           SVE=Kostnadstyp];
                OptionCaptionML=[DEU=Arbeit,Material,Subunternehmung,Werkzeug,öbriges,ErtrÑge;
                                 ENU=Labor,Material,Subcontracting,Plant,Sundry,Revenue;
                                 NLD=Arbeid,Materiaal,Onderaanneming,Materieel,Overig,Opbrengsten;
                                 NOR=Arbeidskraft,Materiale,Underentrepenõr,Maskin,Diverse,Inntekt;
                                 SVE=Arbetskraft,Material,Underentreprenad,Maskin,Diverse,IntÑkt];
                SourceExpr=PrognosisLineTMP."Cost Type";
                OnValidate=BEGIN
                             IF PrognosisLineTMP."Cost Type" <> "Cost Type" THEN
                               PrognosisLineTMP."Cost Object" := '';
                             PrognosisLineMODIFY;
                           END;
                            }

    { 1100529705;2;Field  ;
                Name=CostObject;
                CaptionML=[NOR=Kostnadsobjekt;
                           SVE=Kostnadsobjekt];
                SourceExpr=PrognosisLineTMP."Cost Object";
                CaptionClass='1,1,2';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                            Project Filter=FIELD(Project No.),
                                                            Cost Type=FIELD(Cost Type));
                OnValidate=BEGIN
                             PrognosisLineMODIFY;
                           END;
                            }

  }
  CODE
  {
    VAR
      PrognosisLineTMP@1100529700 : TEMPORARY Record 11012035;
      ElementVisible@1100529701 : Boolean INDATASET;
      Text001@1100529702 : TextConst 'DEU="Die %1 ist bereits vorhanden. Identifikationsfelder und Werte: Projektnr. =''%2'', Prognosedatum=''%3'', Kostenart =''%4'', Element =''%5'', KostentrÑger =''%6''";ENU="The %1 already exists. Identification fields and values: Project No.=''%2'',Prognosis Date=''%3'',Cost Type=''%4'',Element=''%5'',Cost Object=''%6''";NLD="%1 is reeds aanwezig. Identificatievelden en -waarden: Projectnr.=''%2'',Prognosedatum=''%3'',Kostensoort=''%4'',Element=''%5'',Kostendrager=''%6''"';
      DeleteEnabled@1100529703 : Boolean INDATASET;

    LOCAL PROCEDURE PrognosisLineMODIFY@1100529701();
    VAR
      PrognosisLineLocal@1100529700 : TEMPORARY Record 11012035;
    BEGIN
      PrognosisLineLocal.COPY(PrognosisLineTMP);

      PrognosisLineTMP.COPY(Rec);
      PrognosisLineTMP.DELETE;

      PrognosisLineTMP.COPY(PrognosisLineLocal);
      PrognosisLineTMP.INSERT;

      Rec.DELETE;
      Rec.COPY(PrognosisLineTMP);
      Rec.INSERT;

      CheckDeleteEnabled;
    END;

    PROCEDURE SetParametr@1100529700(PrognosisLine@1100529700 : Record 11012035;NewElementVisible@1100529701 : Boolean);
    BEGIN
      INIT;
      "Project No." := PrognosisLine."Project No.";
      "Prognosis Date":= PrognosisLine."Prognosis Date";
      Element:= PrognosisLine.Element;
      IF PrognosisLine."Cost Type" >= 0 THEN
        "Cost Type" := PrognosisLine."Cost Type";
      INSERT;
      PrognosisLineTMP.TRANSFERFIELDS(Rec);
      PrognosisLineTMP.INSERT;

      ElementVisible := NewElementVisible;
    END;

    LOCAL PROCEDURE DeleteRow@1100529702();
    BEGIN
      IF PrognosisLineTMP.GET("Project No.", "Prognosis Date", "Cost Type", Element, "Cost Object") THEN
        IF PrognosisLineTMP.DELETE THEN
          Rec.DELETE;
      CheckDeleteEnabled;
    END;

    LOCAL PROCEDURE CheckDeleteEnabled@1100529704();
    BEGIN
      // PrognosisLineLocal.COPY(PrognosisLineTMP);
      // PrognosisLineLocal.RESET;
      DeleteEnabled := (PrognosisLineTMP.COUNT > 1);
      // CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

