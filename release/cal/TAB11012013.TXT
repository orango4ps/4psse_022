OBJECT Table 11012013 Employer
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF NOT InsertFromContact THEN
                 OnInsertRelation(Rec);
             END;

    OnModify=BEGIN
               OnModifyRelation(Rec, xRec);
             END;

    OnDelete=BEGIN
               OnDeleteRelation(Rec);
             END;

    CaptionML=[ENU=Employer;
               NOR=Arbeidsgiver;
               SVE=Arbetsgivare];
    LookupPageID=Page11012064;
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code20        ;OnValidate=VAR
                                                                lvEmplr@1100485000 : Record 11012013;
                                                              BEGIN
                                                                lvEmplr := xRec;
                                                                IF lvEmplr.FIND THEN BEGIN
                                                                  OnDeleteRelation(xRec);
                                                                  OnInsertRelation(Rec);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 20  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 11012000;;Period Type        ;Option        ;CaptionML=[ENU=Period Type;
                                                              NOR=Periodetype;
                                                              SVE=Periodtyp];
                                                   OptionCaptionML=[ENU=Week,4-Weeks,Month,Quarter;
                                                                    NOR=Uke,4-ukers,M†ned,Kvartal;
                                                                    SVE=Vecka,4-veckors,M†nad,Kvartal];
                                                   OptionString=Week,4-Weeks,Month }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      RMSetup@1100485001 : Record 5079;
      ContBusRel@1100485003 : Record 5054;
      Cont@1100485002 : Record 5050;
      RecRef@1100485004 : RecordRef;
      CentralDataMngmnt@1100485005 : Codeunit 11012010;
      NoSeriesMgt@1100485008 : Codeunit 396;
      InsertFromContact@1100485000 : Boolean;
      Text11012001@1100485007 : TextConst 'ENU=Can not add, this should be done in Central Company %1.;NOR=Kan ikke legge til, dette skal gj›res i Sentralt selskap %1.;SVE=Det g†r inte att l„gga till, detta ska g”ras i centralf”retaget %1.';
      Text11012002@1100485006 : TextConst 'ENU=Can not update %1, this should be done in Central Company %2;NOR=Kan ikke oppdatere %1. Dette skal gj›res i Sentralt selskap %2.;SVE=Det g†r inte att uppdatera %1. Detta ska g”ras i centralf”retaget %2.';

    PROCEDURE SetInsertFromContact@3(FromContact@1000 : Boolean);
    BEGIN
      InsertFromContact := FromContact;
    END;

    PROCEDURE OnInsertRelation@11012003(VAR Emplr@1000 : Record 11012013);
    BEGIN
      RMSetup.GET;
      IF (RMSetup."Bus. Rel. Code for Employers" = '') OR (RMSetup."Contact Nos. Employers" = '') THEN
        EXIT;

      InsertNewContactPerson(Emplr, TRUE);
    END;

    PROCEDURE InsertNewContactPerson@4(VAR Emplr@1001 : Record 11012013;LocalCall@1003 : Boolean);
    VAR
      CompRelationRec@1210190001 : Record 11012059;
      LeadingCompany@1210190000 : Text[50];
    BEGIN
      IF NOT LocalCall THEN BEGIN
        RMSetup.GET;
        RMSetup.TESTFIELD("Bus. Rel. Code for Employers");
      END;

      WITH Cont DO BEGIN
        INIT;
        "No." := Emplr.Code;
        VALIDATE(Name, Emplr.Description);

        IF NOT CentralDataMngmnt.InsertingContactIsAllowed(Cont) THEN BEGIN
          LeadingCompany := CompRelationRec.GetLeadingCompany(DATABASE::"Marketing Setup",RMSetup."Central Management");
          ERROR(Text11012001, LeadingCompany);
        END;

        "No." := '';
        "No. Series" := '';

        RMSetup.TESTFIELD("Contact Nos. Employers");
        NoSeriesMgt.InitSeries(RMSetup."Contact Nos. Employers",'',0D,"No.","No. Series");
        Type := Type::Company;
        TypeChange;
        "Relation changed by" := "Relation changed by"::Employee;

        SetSkipDefault;
        INSERT(TRUE);

      END;

      WITH ContBusRel DO BEGIN
        INIT;
        "Contact No." := Cont."No.";
        "Business Relation Code" := RMSetup."Bus. Rel. Code for Employers";
        "Link to Table" := "Link to Table"::Employer;
        "No." := Emplr.Code;
        INSERT(TRUE);
      END;
    END;

    PROCEDURE OnModifyRelation@1210190003(VAR Emplr@1000 : Record 11012013;OldEmplr@1100485002 : Record 11012013);
    VAR
      OldCont@1210190000 : Record 5050;
      CompRelationRec@1210190002 : Record 11012059;
      LeadingCompany@1210190001 : Text[50];
    BEGIN
      RMSetup.GET;
      IF RMSetup."Bus. Rel. Code for Employers" = '' THEN
        EXIT;

      WITH ContBusRel DO BEGIN
        SETCURRENTKEY("Link to Table","No.");
        SETRANGE("Link to Table","Link to Table"::Employer);
        SETRANGE("No.",Emplr.Code);
        IF NOT FINDFIRST THEN BEGIN
          OnInsertRelation(Emplr);
          EXIT;
        END;
        Cont.GET("Contact No.");
        OldCont := Cont;
      END;

      IF OldEmplr.Description <> Emplr.Description THEN  BEGIN
        RecRef.GETTABLE(Cont);
        IF NOT CentralDataMngmnt.DataInputAllowed(RecRef) THEN BEGIN
          LeadingCompany := CompRelationRec.GetLeadingCompany(DATABASE::"Marketing Setup",RMSetup."Central Management");
          ERROR(Text11012002, Emplr.FIELDCAPTION(Description), LeadingCompany);
        END;
        WITH Cont DO BEGIN
          VALIDATE(Name, Emplr.Description);
          OnModifyFunc(OldCont,TRUE);
          "Relation changed by" := "Relation changed by"::Employee;
          MODIFY(TRUE);  //**(includes setting transaction exchange data)
        END;
      END;
    END;

    PROCEDURE OnDeleteRelation@1210190002(VAR Employer@1000 : Record 11012013);
    VAR
      ContactBusinessRelation@1100528700 : Record 5054;
    BEGIN
      ContactBusinessRelation.SETCURRENTKEY("Link to Table","No.");
      ContactBusinessRelation.SETRANGE("Link to Table", ContactBusinessRelation."Link to Table"::Employer);
      ContactBusinessRelation.SETRANGE("No.", Employer.Code);
      ContactBusinessRelation.DELETEALL(TRUE);
    END;

    PROCEDURE ShowContact@1210190011();
    VAR
      ContBusRel@1000 : Record 5054;
      Cont@1001 : Record 5050;
    BEGIN
      IF Code = '' THEN EXIT;

      ContBusRel.SETCURRENTKEY("Link to Table","No.");
      ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Employer);
      ContBusRel.SETRANGE("No.",Code);
      ContBusRel.FINDFIRST;

      Cont.GET(ContBusRel."Contact No.");
      Cont.RunContactForm;
    END;

    PROCEDURE GetEmployerName@1100528500(Employer@1100528500 : Code[20];External@1100525000 : Boolean) : Text[100];
    VAR
      LocEmployer@1100528503 : Record 11012013;
      LocVendor@1100525001 : Record 23;
    BEGIN
      IF Employer = '' THEN
        EXIT('');
      IF NOT External THEN BEGIN
        IF LocEmployer.GET(Employer) THEN
          EXIT(LocEmployer.Description);
      END ELSE BEGIN
        IF LocVendor.GET(Employer) THEN
          EXIT(LocVendor.Name);
      END;
    END;

    BEGIN
    {
      X016: Multiple central management companies for 1 operating company (db, 22-08-11)
    }
    END.
  }
}

