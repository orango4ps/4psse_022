OBJECT Page 11012977 Generate KOMO Word Documents
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Neue KOMO Word-Dokumente erstellen;
               ENU=Generate KOMO Word Documents;
               NLD=Genereren KOMO Word Documenten];
    InsertAllowed=No;
    DeleteAllowed=No;
    PageType=Card;
    OnOpenPage=BEGIN
                 DocTypeSel1 := TRUE;
                 ExecuteAllRelated;
               END;

    ActionList=ACTIONS
    {
      { 1100525016;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525018;1 ;Action    ;
                      CaptionML=[DEU=Erzeugen;
                                 ENU=Generate;
                                 NLD=Genereren;
                                 NOR=Generer;
                                 SVE=Generera];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CreateInteraction;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 GenerateProcess;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100525000;0;Container;
                ContainerType=ContentArea }

    { 1100525001;1;Group  ;
                Name=General;
                CaptionML=[DEU=Allgemein;
                           ENU=General;
                           NLD=Algemeen;
                           NOR=Generell;
                           SVE=AllmÑnt];
                GroupType=Group }

    { 1100525009;2;Group  ;
                CaptionML=[DEU=Belegart;
                           ENU=Document Type;
                           NLD=Documenttype;
                           NOR=Dokumenttype;
                           SVE=Dokumenttyp];
                GroupType=Group }

    { 1100525002;3;Field  ;
                CaptionML=[DEU=Inspektionsseite;
                           ENU=Inspection Page;
                           NLD=Controleverklaring];
                SourceExpr=DocTypeSel1;
                OnValidate=BEGIN
                             IF (DocTypeSel1) THEN
                               DocTypeSel2 := FALSE;
                             ExecuteDocTypeRelated;
                           END;
                            }

    { 1100525008;3;Field  ;
                CaptionML=[DEU=Beendete Seite;
                           ENU=Finished Page;
                           NLD=Gereedmelding];
                SourceExpr=DocTypeSel2;
                OnValidate=BEGIN
                             IF (DocTypeSel2) THEN
                               DocTypeSel1 := FALSE;
                             ExecuteDocTypeRelated;
                           END;
                            }

    { 1100525003;2;Field  ;
                CaptionML=[DEU=Belegvorlage;
                           ENU=Document Template;
                           NLD=Documentsjabloon;
                           NOR=Dokumentmal;
                           SVE=Dokumentmall];
                SourceExpr=DocTemplateSel;
                TableRelation="Document Template"."Template Code";
                Enabled=DocTemplateSelEditable;
                OnValidate=BEGIN
                             ValidateDocTemplate(DocTemplateSel);
                             ExecuteDocTemplateRelated;
                           END;
                            }

    { 1100525015;2;Field  ;
                CaptionML=[DEU=Vorlagenbeschreibung Beleg;
                           ENU=Document Template Description;
                           NLD=Documentsjabloon omschrijving];
                SourceExpr=DocTemplateRec.Description;
                Enabled=false }

    { 1100525004;2;Field  ;
                CaptionML=[DEU=Projekt;
                           ENU=Project;
                           NLD=Project;
                           NOR=Prosjekt;
                           SVE=Projekt];
                SourceExpr=ProjectSel;
                OnValidate=BEGIN
                             ValidateProject(ProjectSel);
                             ExecuteProjectRelated;
                           END;

                OnLookup=BEGIN
                           ProjRec.RESET;
                           ProjRec."No." := ProjectSel;
                           IF (PAGE.RUNMODAL(0, ProjRec) = ACTION::LookupOK) THEN BEGIN
                             IF (ProjRec."No." <> '') THEN BEGIN
                               ValidateProject(ProjRec."No.");
                               ProjectSel := ProjRec."No.";
                               ExecuteProjectRelated();
                             END;
                           END;
                         END;
                          }

    { 1100525014;2;Field  ;
                CaptionML=[DEU=Projektbeschreibung;
                           ENU=Project Description;
                           NLD=Project omschrijving;
                           NOR=Prosjektbeskrivelse;
                           SVE=Projektbeskrivning];
                SourceExpr=ProjRec.Description;
                Enabled=false }

    { 1100525005;2;Field  ;
                CaptionML=[DEU=Baunummernfilter;
                           ENU=Plot No.Filter;
                           NLD=Bouwnummer filter];
                SourceExpr=PlotFilterSel }

    { 1100525006;2;Field  ;
                CaptionML=[DEU=Disziplin;
                           ENU=Discipline;
                           NLD=Discipline;
                           NOR=Disiplin;
                           SVE=Disciplin];
                SourceExpr=DisciplineSel;
                Enabled=DisciplineSelEnabled;
                OnValidate=BEGIN
                             ValidateDiscipline(DisciplineSel);
                             ExecuteDisciplineRelated;
                           END;

                OnLookup=BEGIN
                           DisciplineRec.RESET;
                           IF (PAGE.RUNMODAL(0, DisciplineRec) = ACTION::LookupOK) THEN BEGIN
                             IF (DisciplineRec.Code <> '') THEN BEGIN
                               ValidateDiscipline(DisciplineRec.Code);
                               DisciplineSel := DisciplineRec.Code;
                               ExecuteDisciplineRelated();
                             END;
                           END;
                         END;
                          }

    { 1100525017;2;Field  ;
                CaptionML=[DEU=Beschreibung Disziplin;
                           ENU=Discipline Description;
                           NLD=Discipline omschrijving;
                           NOR=Disiplinbeskrivelse;
                           SVE=Disciplinbeskrivning];
                SourceExpr=DisciplineRec.Description;
                Enabled=false }

    { 1100525007;2;Field  ;
                CaptionML=[DEU=Installation;
                           ENU=Installation;
                           NLD=Installatie;
                           NOR=Installasjon;
                           SVE=Installation];
                SourceExpr=InstallationSel;
                Enabled=InstallationSelEnabled;
                OnValidate=BEGIN
                             ValidateInstallation(InstallationSel);
                             ExecuteInstallationRelated;
                           END;

                OnLookup=BEGIN
                           InstallationRec.RESET;
                           IF (DisciplineSel <> '') THEN
                             InstallationRec.SETRANGE(Discipline, DisciplineSel);
                           IF (PAGE.RUNMODAL(0, InstallationRec) = ACTION::LookupOK) THEN BEGIN
                             IF (InstallationRec.Code <> '') THEN BEGIN
                               ValidateInstallation(InstallationRec.Code);
                               InstallationSel := InstallationRec.Code;
                               ExecuteInstallationRelated();
                             END;
                           END;
                         END;
                          }

    { 1100525019;2;Field  ;
                CaptionML=[DEU=Beschreibung Installation;
                           ENU=Installation Description;
                           NLD=Installatie omschrijving;
                           NOR=Installasjonsbeskrivelse;
                           SVE=Installationsbeskrivning];
                SourceExpr=InstallationRec.Description;
                Enabled=false }

  }
  CODE
  {
    VAR
      Text000@1100525004 : TextConst 'DEU=%1 %2 existiert nicht.;ENU=%1 ''%2'' does not exist.;NLD=%1 ''%2'' is niet aanwezig.;NOR=%1 ''%2'' finnes ikke.;SVE=%1 %2 finns inte.';
      Text001@1100525003 : TextConst 'DEU=Baunummer#1##########;ENU=Plot No.     #1##########;NLD=Bouwnummer  #1##########';
      Text002@1100525002 : TextConst 'DEU=%1 Beleg(e) erstellt.;ENU=%1 document(s) created.;NLD=%1 document(en) aangemaakt.';
      Text003@1100525001 : TextConst 'DEU=%1 ''%2'' der %3 stimmt nicht mit dem gewÑhlten %1 Åberein.;ENU=%1 ''%2'' of the %3 does not match with the selected %1;NLD=%1 ''%2'' van de %3 komt niet overeen met de geselecteerde %1';
      Text004@1100525000 : TextConst 'DEU=Belegvorlage ''%1'' fÅr die gewÑhlte Belegart existiert nicht.;ENU=Document Template ''%1'' does not exist for the selected Document Type.;NLD=Documentsjabloon ''%1'' is niet aanwezig voor het geselecteerde documenttype.';
      DisciplineRec@1100525024 : Record 11012963;
      InstallationRec@1100525023 : Record 11012964;
      ProjRec@1100525022 : Record 11072003;
      PlotRec@1100525021 : Record 11012500;
      PlotInstallationRec@1100525020 : Record 11012968;
      DocTemplateRec@1100525019 : Record 11012401;
      Window@1100525018 : Dialog;
      DocTypeSel1@1100525017 : Boolean;
      DocTypeSel2@1100525025 : Boolean;
      DocTemplateSel@1100525016 : Code[20];
      ProjectSel@1100525014 : Code[20];
      PlotFilterSel@1100525012 : Code[250];
      DisciplineSel@1100525011 : Code[10];
      InstallationSel@1100525009 : Code[10];
      DocType@1100525007 : Option;
      OneDocTemplatePresent@1100525006 : Boolean;
      Counter@1100525005 : Integer;
      Text005@1100525026 : TextConst 'DEU=Seite Inspektion oder Seite Beendet muss TRUE sein.;ENU=Inspection Page or Finished Page must be TRUE.;NLD=Controleverklaring of Gereedmelding moet WAAR zijn.';
      DisciplineSelEnabled@1100525027 : Boolean INDATASET;
      InstallationSelEnabled@1100525028 : Boolean INDATASET;
      DocTemplateSelEditable@1100525029 : Boolean INDATASET;

    PROCEDURE FillDefaults@1(IProject@11012000 : Code[20];IPlotFilter@1210190000 : Code[250]);
    BEGIN
      ProjectSel := IProject;
      PlotFilterSel := IPlotFilter;
    END;

    PROCEDURE ExecuteDocTypeRelated@1210190002();
    BEGIN
      IF DocTypeSel1 THEN BEGIN
        DocType := DocTemplateRec.Type::"KOMO Inspection";
        DisciplineSelEnabled := TRUE;
        InstallationSelEnabled := TRUE;
      END;
      IF DocTypeSel2 THEN BEGIN
        DocType := DocTemplateRec.Type::"KOMO Ready";
        DisciplineSelEnabled := FALSE;
        InstallationSelEnabled := FALSE;
      END;

      DocTemplateRec.RESET;
      DocTemplateRec.SETRANGE(Type, DocType);
      IF DocTemplateRec.FIND('-') THEN BEGIN
        IF DocTemplateRec.NEXT <> 0 THEN BEGIN
          OneDocTemplatePresent := FALSE;
          IF DocTemplateSel <> '' THEN BEGIN
            DocTemplateRec.SETRANGE("Template Code", DocTemplateSel);
            IF NOT DocTemplateRec.FIND('-') THEN
              DocTemplateSel := '';
          END;
        END ELSE BEGIN
          DocTemplateRec.FIND('-');
          OneDocTemplatePresent := TRUE;
          DocTemplateSel := DocTemplateRec."Template Code";
        END;
      END ELSE BEGIN
        OneDocTemplatePresent := FALSE;
        DocTemplateSel := '';
      END;
      DocTemplateSelEditable := (NOT OneDocTemplatePresent);
      ExecuteDocTemplateRelated();
    END;

    PROCEDURE ValidateDocTemplate@1210190000(IDocTemplate@1210190000 : Code[20]);
    BEGIN
      DocTemplateRec.RESET;
      DocTemplateRec.SETRANGE("Template Code", IDocTemplate);
      DocTemplateRec.SETRANGE(Type, DocType);
      IF NOT DocTemplateRec.FIND('-') THEN
        ERROR(Text004, IDocTemplate);
    END;

    PROCEDURE ExecuteDocTemplateRelated@1210190009();
    BEGIN
      DocTemplateRec.RESET;
      DocTemplateRec.SETRANGE("Template Code", DocTemplateSel);
      DocTemplateRec.SETRANGE(Type, DocType);
      IF NOT DocTemplateRec.FINDFIRST THEN
        CLEAR(DocTemplateRec);
    END;

    PROCEDURE ValidateProject@1210190003(IProject@1210190000 : Code[20]);
    BEGIN
      IF NOT ProjRec.GET(IProject) THEN
        ERROR(Text000, PlotInstallationRec.FIELDCAPTION("Project No."), IProject);
    END;

    PROCEDURE ExecuteProjectRelated@1210190006();
    BEGIN
      IF NOT ProjRec.GET(ProjectSel) THEN
        CLEAR(ProjRec);
    END;

    PROCEDURE ValidateDiscipline@1210190010(IDiscipline@1210190000 : Code[10]);
    BEGIN
      IF NOT DisciplineRec.GET(IDiscipline) THEN
        ERROR(Text000, PlotInstallationRec.FIELDCAPTION(Discipline), IDiscipline);
    END;

    PROCEDURE ExecuteDisciplineRelated@1210190014();
    BEGIN
      IF NOT DisciplineRec.GET(DisciplineSel) THEN
        CLEAR(DisciplineRec);
    END;

    PROCEDURE ValidateInstallation@1210190012(IInstallation@1210190000 : Code[10]);
    BEGIN
      IF NOT InstallationRec.GET(IInstallation) THEN
        ERROR(Text000, PlotInstallationRec.FIELDCAPTION(Installation), IInstallation);
      IF (DisciplineSel <> '') THEN BEGIN
        IF InstallationRec.Discipline <> DisciplineSel THEN
          ERROR(Text003, PlotInstallationRec.FIELDCAPTION(Discipline),
                InstallationRec.Discipline, PlotInstallationRec.FIELDCAPTION(Installation));
      END ELSE BEGIN
        DisciplineSel := InstallationRec.Discipline;
        ExecuteDisciplineRelated();
      END;
    END;

    PROCEDURE ExecuteInstallationRelated@1210190016();
    BEGIN
      IF NOT InstallationRec.GET(InstallationSel) THEN
        CLEAR(InstallationRec);
    END;

    PROCEDURE ValidateAll@1210190015();
    BEGIN
      IF ((DocTypeSel1) AND (DocTypeSel2)) OR ((NOT DocTypeSel1) AND (NOT DocTypeSel2)) THEN
        ERROR(Text005);
      ValidateDocTemplate(DocTemplateSel);
      ValidateProject(ProjectSel);
      IF (DocType = DocTemplateRec.Type::"KOMO Inspection") THEN BEGIN
        ValidateDiscipline(DisciplineSel);
        ValidateInstallation(InstallationSel);
      END;
    END;

    PROCEDURE ExecuteAllRelated@1210190008();
    BEGIN
      ExecuteDocTypeRelated();
      ExecuteDocTemplateRelated();
      ExecuteProjectRelated();
      IF (DocType = DocTemplateRec.Type::"KOMO Inspection") THEN BEGIN
        ExecuteDisciplineRelated();
        ExecuteInstallationRelated();
      END;
    END;

    PROCEDURE GenerateProcess@1210190001();
    BEGIN
      ValidateAll();

      Counter := 0;
      Window.OPEN(Text001);

      ReadPlots();

      Window.CLOSE;
      MESSAGE(Text002, Counter);
    END;

    PROCEDURE ReadPlots@1210190005();
    VAR
      lvMakeWordDoc@1210190000 : Boolean;
    BEGIN
      PlotInstallationRec.RESET;
      PlotInstallationRec.SETCURRENTKEY("Project No.","Plot No.",Discipline,Installation,Inspection);
      PlotInstallationRec.SETRANGE("Project No.", ProjectSel);
      PlotInstallationRec.SETRANGE(Discipline, DisciplineSel);
      PlotInstallationRec.SETRANGE(Installation, InstallationSel);

      PlotRec.RESET;
      PlotRec.SETRANGE("Project No.", ProjectSel);
      PlotRec.SETFILTER("Plot No.", PlotFilterSel);
      IF PlotRec.FIND('-') THEN BEGIN
        REPEAT
          Window.UPDATE(1, PlotRec."Plot No.");
          lvMakeWordDoc := TRUE;
          IF DocType = DocTemplateRec.Type::"KOMO Inspection" THEN BEGIN
            PlotInstallationRec.SETRANGE("Plot No.", PlotRec."Plot No.");
            IF NOT PlotInstallationRec.FIND('-') THEN
              lvMakeWordDoc := FALSE;
          END;
          IF lvMakeWordDoc THEN
            WordDoc();
        UNTIL PlotRec.NEXT = 0;
      END;
    END;

    PROCEDURE WordDoc@1210190004();
    VAR
      lContact@11012005 : Record 5050;
      lContBusRel@11012004 : Record 5054;
      lRecDocument@11012002 : Record 11012401;
      lUserRec@1210190000 : Record 91;
      lEditDocFrm@11012003 : Page 11012405;
      lPlotContact@11012001 : Code[20];
      lAct@1210190002 : Code[50];
      lText000@1210190004 : TextConst 'DEU=Es muss zuerst ein Kontakt mit Debitor %1 verknÅpft werden.;ENU=First Associate a Prospect to Customer %1.;NLD=Er moet eerst een relatie worden gekoppeld aan klant %1.;NOR=Tilknytt fõrst et prospekt til kunde %1.;SVE=Associera fîrst en tilltÑnkt kund till kund %1.';
      RecRef@1100525000 : RecordRef;
      DocLinkRID@1100525001 : ARRAY [5] OF RecordID;
    BEGIN
      //Main parts of this function are copied from the form 'KOMO Installations by Plot' (11012970).

      CASE DocType OF
        lRecDocument.Type::"KOMO Inspection":
          lAct := ProjectSel + '-' + PlotRec."Plot No.";
        lRecDocument.Type::"KOMO Ready":
          lAct := PlotRec."Plot No.";
        ELSE
          EXIT;
      END;

      lPlotContact := '';
      IF (PlotRec.Buyer = '') THEN BEGIN
        lPlotContact := PlotRec.Principal;
        lContBusRel.SETCURRENTKEY("Link to Table", "No.");
        lContBusRel.SETRANGE("Link to Table", lContBusRel."Link to Table"::Customer);
        lContBusRel.SETRANGE("No.", lPlotContact);
        IF NOT lContBusRel.FIND('-') THEN
          ERROR(lText000, lPlotContact);
      END ELSE
        lContBusRel."Contact No." := PlotRec.Buyer;

      IF lContBusRel."Contact No." = '' THEN
        EXIT;

      lContact.GET(lContBusRel."Contact No.");
      lContact.TESTFIELD("Document Group");

      IF NOT lUserRec.GET(USERID) THEN
        lUserRec.INIT;

      lRecDocument.FILTERGROUP(10);
      lRecDocument.SETRANGE("Document Group", lContact."Document Group");
      lRecDocument.SETRANGE(Type, DocType);
      lRecDocument.FILTERGROUP(0);
      lRecDocument.SETRANGE("Template Code", DocTemplateSel);
      IF lRecDocument.FIND('-') THEN BEGIN

        CASE DocType OF
          lRecDocument.Type::"KOMO Inspection":
            BEGIN
              // Get Source Document Link
              RecRef.GETTABLE(PlotInstallationRec);
              DocLinkRID[1] := RecRef.RECORDID();
              RecRef.GETTABLE(PlotRec);
              DocLinkRID[3] := RecRef.RECORDID();
            END;
          lRecDocument.Type::"KOMO Ready":
            BEGIN
              RecRef.GETTABLE(PlotRec);
              DocLinkRID[1] := RecRef.RECORDID();
            END;
        END;

        // Get Other Document Links
        RecRef.GETTABLE(ProjRec);
        DocLinkRID[2] := RecRef.RECORDID();

        lEditDocFrm.InitTypeNo(DocType, DocLinkRID, '', lContact."No.", '', lAct);
        IF NOT lEditDocFrm.GetDocumentData(lRecDocument) THEN BEGIN
          lEditDocFrm.CreateWordDoc(lRecDocument, '', FALSE, FALSE, FALSE);

          COMMIT;
          Counter := Counter + 1;
        END;
      END;
    END;

    BEGIN
    END.
  }
}

