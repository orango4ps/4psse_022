OBJECT Page 1140 OAuth 2.0 Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04;
  }
  PROPERTIES
  {
    CaptionML=[ENU=OAuth 2.0 Setup;
               NOR=OAuth 2.0-oppsett;
               SVE=InstÑllningar fîr OAuth 2.0];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table1140;
    ShowFilter=No;
    OnOpenPage=VAR
                 PermissionManager@1000 : Codeunit 9002;
               BEGIN
                 IsSaas := PermissionManager.SoftwareAsAService;
               END;

    ActionList=ACTIONS
    {
      { 7       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 11      ;1   ;Action    ;
                      Name=RequestAuthorizationCode;
                      CaptionML=[ENU=Request Authorization Code;
                                 NOR=Be om autorisasjonskode;
                                 SVE=BegÑr auktoriseringskod];
                      ToolTipML=[ENU=Open the service authorization web page. Login credentials will be prompted. The authorization code must be copied into the Enter Authorization Code field.;
                                 NOR=èpne nettsiden for tjenesteautorisasjon. Du vil bli bedt om Ü logge deg pÜ. Autorisasjonskoden mÜ kopieres til feltet Angi autorisasjonskode.;
                                 SVE=ôppna webbsidan fîr tjÑnstens auktorisering. Du uppmanas att ange inloggningsuppgifter. Auktoriseringskoden mÜste kopieras till fÑltet Ange auktoriseringskod.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=EncryptionKeys;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 RequestAuthorizationCode;
                                 RequestAuthorizationCodeInvoked := TRUE;
                               END;
                                }
      { 17      ;1   ;Action    ;
                      Name=RefreshAccessToken;
                      CaptionML=[ENU=Refresh Access Token;
                                 NOR=Oppdater tilgangstoken;
                                 SVE=Uppdatera Ütkomsttoken];
                      ToolTipML=[ENU=Refresh the access and refresh tokens.;
                                 NOR=Oppdater tilgangs- og oppdateringstokenene.;
                                 SVE=Uppdatera Ütkomst- och uppdateringstoken.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Refresh;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 MessageText@1003 : Text;
                               BEGIN
                                 IF NOT RefreshAccessToken(MessageText) THEN BEGIN
                                   COMMIT; // save new "Status" value
                                   ERROR(MessageText);
                                 END;

                                 MESSAGE(MessageText);
                               END;
                                }
      { 8       ;0   ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 10      ;1   ;Action    ;
                      Name=EncryptionManagement;
                      CaptionML=[ENU=Encryption Management;
                                 NOR=Krypteringsadministrasjon;
                                 SVE=Krypteringshantering];
                      ToolTipML=[ENU=Enable or disable data encryption. Data encryption helps make sure that unauthorized users cannot read business data.;
                                 NOR=Aktiver eller deaktiver datakryptering. Datakryptering sõrger for at uautoriserte brukere ikke kan lese forretningsdata.;
                                 SVE=Aktivera eller inaktivera datakryptering. Om du anvÑnder datakryptering kan obehîriga anvÑndare inte lÑsa fîretagets information.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 9905;
                      Visible=NOT IsSaas;
                      Image=EncryptionKeys;
                      RunPageMode=View }
      { 9       ;1   ;Action    ;
                      Name=HttpLog;
                      CaptionML=[ENU=Http Log;
                                 NOR=HTTP-logg;
                                 SVE=Http-logg];
                      ToolTipML=[ENU=See the http request/response history log entries for the current OAuth endpoint setup.;
                                 NOR=Se de loggfõrte HTTP-forespõrslene/-svarene for gjeldende OAuth-endepunktoppsett.;
                                 SVE=Visa historiska loggposter fîr http-begÑran eller http-svar fîr den aktuella konfigurationen av OAuth-slutpunkt.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Log;
                      OnAction=VAR
                                 ActivityLog@1002 : Record 710;
                               BEGIN
                                 ActivityLog.ShowEntries(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 19  ;1   ;Group     ;
                Name=General;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=AllmÑnt];
                Editable=FALSE;
                GroupType=Group }

    { 23  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the description.;
                           NOR=Angir beskrivelsen.;
                           SVE=Anger beskrivningen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the service URL.;
                           NOR=Angir tjeneste-URL-en.;
                           SVE=Anger tjÑnstens URL.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Service URL" }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the redirect URL.;
                           NOR=Angir omdirigerings-URL-en.;
                           SVE=Anger URL-omdirigering.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Redirect URL" }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the scope.;
                           NOR=Angir omfanget.;
                           SVE=Anger omfattningen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Scope }

    { 20  ;1   ;Group     ;
                Name=Request URL Paths;
                CaptionML=[ENU=Request URL Paths;
                           NOR=Forespõrsels-URL-baner;
                           SVE=BegÑr URL-sîkvÑgar];
                Editable=FALSE;
                GroupType=Group }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the authorization URL path.;
                           NOR=Angir autorisasjons-URL-banen.;
                           SVE=Anger URL-sîkvÑg fîr auktorisering.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Authorization URL Path" }

    { 21  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the access token URL path.;
                           NOR=Angir URL-banen til tilgangstokenet.;
                           SVE=Anger URL-sîkvÑg fîr Ütkomsttoken.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Access Token URL Path" }

    { 25  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the refresh token URL path.;
                           NOR=Angir URL-banen til oppdateringstokenet.;
                           SVE=Anger URL-sîkvÑg fîr uppdateringstoken.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Refresh Token URL Path" }

    { 12  ;1   ;Group     ;
                Name=Request Authorization Code;
                CaptionML=[ENU=Request Authorization Code;
                           NOR=Be om autorisasjonskode;
                           SVE=BegÑr auktoriseringskod];
                Visible=RequestAuthorizationCodeInvoked OR (Status = Status::Disabled) OR (Status = Status::Error);
                GroupType=Group }

    { 14  ;2   ;Field     ;
                Name=Enter Authorization Code;
                CaptionML=[ENU=Enter Authorization Code;
                           NOR=Angi autorisasjonskode;
                           SVE=Ange auktoriseringskod];
                ToolTipML=[ENU=Specifies the received authorization code from the request authorization action.;
                           NOR=Angir den mottatte autorisasjonskoden fra handlingen Be om autorisasjonskode.;
                           SVE=Anger den mottagna auktoriseringskoden frÜn ÜtgÑrden begÑr auktorisering.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ReceivedAuthorizationCode;
                OnValidate=BEGIN
                             ValidateAuthorizationCode;
                           END;
                            }

  }
  CODE
  {
    VAR
      ReceivedAuthorizationCode@1004 : Text;
      RequestAuthorizationCodeInvoked@1000 : Boolean;
      IsSaas@1003 : Boolean;

    [NonDebuggableAttribute]
    LOCAL PROCEDURE ValidateAuthorizationCode@3();
    VAR
      MessageText@1000 : Text;
    BEGIN
      IF ReceivedAuthorizationCode = '' THEN
        EXIT;

      IF NOT RequestAccessToken(MessageText,ReceivedAuthorizationCode) THEN
        ERROR(MessageText);

      ReceivedAuthorizationCode := '';
      RequestAuthorizationCodeInvoked := FALSE;
      IF MessageText <> '' THEN
        MESSAGE(MessageText);

      CurrPage.UPDATE; // force OnAfterGetCurrRecord() to refresh notification
    END;

    BEGIN
    END.
  }
}

