OBJECT Table 6085775 Std. Amount Distribution Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW13.70.00.5.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               StdAmtDistribDim@1160040000 : Record 6085776;
             BEGIN
               StdAmtDistribDim.SETRANGE("Amount Distribution Code","Amount Distribution Code");
               StdAmtDistribDim.SETRANGE("Line No.","Line No.");
               StdAmtDistribDim.DELETEALL;
             END;

    CaptionML=[DEU=Standardbetragsverteilungszeile;
               ENU=Standard Amount Distribution Line;
               NLD=Standaardbedragverdelingsregel];
  }
  FIELDS
  {
    { 1   ;   ;Amount Distribution Code;Code10    ;TableRelation="Std. Amount Distribution Code";
                                                   CaptionML=[DEU=Betragsverteilungscode;
                                                              ENU=Amount Distribution Code;
                                                              NLD=Bedragverdelingscode];
                                                   Editable=No }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[DEU=Zeilennr.;
                                                              ENU=Line No.;
                                                              NLD=Regelnr.;
                                                              SVE=Radnr] }
    { 3   ;   ;Type                ;Option        ;OnValidate=VAR
                                                                StdAmtDistribDim@1160040000 : Record 6085776;
                                                                OldType@1000 : Integer;
                                                              BEGIN
                                                                OldType := Type;
                                                                INIT;
                                                                Type := OldType;

                                                                StdAmtDistribDim.SETRANGE("Amount Distribution Code","Amount Distribution Code");
                                                                StdAmtDistribDim.SETRANGE("Line No.","Line No.");
                                                                StdAmtDistribDim.DELETEALL;
                                                              END;

                                                   CaptionML=[DEU=Art;
                                                              ENU=Type;
                                                              NLD=Soort;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[DEU=" ,Sachkonto,Artikel,,WG/Anlage,Zu-/Abschlag (Artikel)";
                                                                    ENU=" ,G/L Account,Item,,Fixed Asset,Charge (Item)";
                                                                    NLD=" ,Grootboek,Artikel,,Vast activum,Toeslag (Artikel)";
                                                                    SVE=" ,Redov.konto,Artikel,,Anl.tillg†ng,Omkostnad (artikel)"];
                                                   OptionString=[ ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)] }
    { 4   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Type=CONST("Charge (Item)")) "Item Charge";
                                                   OnValidate=VAR
                                                                GLAcc@1001 : Record 15;
                                                                Item@1002 : Record 27;
                                                                ItemCharge@1006 : Record 5800;
                                                                FA@1003 : Record 5600;
                                                                StdTxt@1004 : Record 7;
                                                                StdPurchCode@1000 : Record 173;
                                                              BEGIN
                                                                Quantity := 0;
                                                                "Unit Cost" := 0;
                                                                "Unit of Measure Code" := '';
                                                                Description := '';
                                                                IF "No." = '' THEN
                                                                  EXIT;

                                                                CASE Type OF
                                                                  Type::" ":
                                                                    BEGIN
                                                                      StdTxt.GET("No.");
                                                                      Description := StdTxt.Description;
                                                                      VALIDATE(Quantity,0);
                                                                    END;

                                                                  Type::"G/L Account":
                                                                    BEGIN
                                                                      GLAcc.GET("No.");
                                                                      GLAcc.CheckGLAcc;
                                                                      GLAcc.TESTFIELD("Direct Posting",TRUE);
                                                                      Description := GLAcc.Name;
                                                                      VALIDATE(Quantity,1);
                                                                    END;

                                                                  Type::Item:
                                                                    BEGIN
                                                                      Item.GET("No.");
                                                                      Item.TESTFIELD(Blocked,FALSE);
                                                                      Item.TESTFIELD("Inventory Posting Group");
                                                                      Item.TESTFIELD("Gen. Prod. Posting Group");
                                                                      "Unit of Measure Code" := Item."Purch. Unit of Measure";
                                                                      Description := Item.Description;
                                                                     "Variant Code" := '';
                                                                      VALIDATE(Quantity,1);
                                                                    END;

                                                                  Type::"Fixed Asset":
                                                                    BEGIN
                                                                      FA.GET("No.");
                                                                      FA.TESTFIELD(Inactive,FALSE);
                                                                      FA.TESTFIELD(Blocked,FALSE);
                                                                      Description := FA.Description;
                                                                      VALIDATE(Quantity,1);
                                                                    END;

                                                                  Type::"Charge (Item)":
                                                                    BEGIN
                                                                      ItemCharge.GET("No.");
                                                                      Description := ItemCharge.Description;
                                                                      VALIDATE(Quantity,1);
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[DEU=Nr.;
                                                              ENU=No.;
                                                              NLD=Nr.;
                                                              SVE=Nr] }
    { 5   ;   ;Description         ;Text50        ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description;
                                                              NLD=Omschrijving;
                                                              SVE=Beskrivning] }
    { 6   ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                IF Quantity <> 0 THEN BEGIN
                                                                  TESTFIELD(Type);
                                                                  TESTFIELD("No.");
                                                                END;

                                                                IF ("Distribution %" <> 0) AND (Quantity <> 1) THEN
                                                                  VALIDATE("Distribution %",0);
                                                              END;

                                                   CaptionML=[DEU=Menge;
                                                              ENU=Quantity;
                                                              NLD=Aantal;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 7   ;   ;Unit Cost           ;Decimal       ;OnValidate=BEGIN
                                                                IF Type = Type::" " THEN
                                                                  ERROR(Text002,FIELDCAPTION(Type),Type);

                                                                IF "Unit Cost" <> 0 THEN BEGIN
                                                                  TESTFIELD("No.");
                                                                  "Distribution %" := 0;
                                                                  IF Quantity = 0 THEN
                                                                    VALIDATE(Quantity,1);
                                                                END;
                                                              END;

                                                   CaptionML=[DEU=Einstandspreis;
                                                              ENU=Unit Cost;
                                                              NLD=Eenheidskosten;
                                                              SVE=Styckkostnad];
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 9   ;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Type);
                                                              END;

                                                   CaptionML=[DEU=Einheitencode;
                                                              ENU=Unit of Measure Code;
                                                              NLD=Eenheidscode;
                                                              SVE=Enhetskod] }
    { 10  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[DEU=Shortcutdimensionscode 1;
                                                              ENU=Shortcut Dimension 1 Code;
                                                              NLD=Shortcutdimensie 1;
                                                              SVE=Genv„g dimension 1 kod];
                                                   CaptionClass='1,2,1' }
    { 11  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[DEU=Shortcutdimensionscode 2;
                                                              ENU=Shortcut Dimension 2 Code;
                                                              NLD=Shortcutdimensie 2;
                                                              SVE=Genv„g dimension 2 kod];
                                                   CaptionClass='1,2,2' }
    { 12  ;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   OnValidate=VAR
                                                                Item@1001 : Record 27;
                                                                ItemVariant@1000 : Record 5401;
                                                              BEGIN
                                                                IF "Variant Code" = '' THEN BEGIN
                                                                  IF Type = Type::Item THEN BEGIN
                                                                    Item.GET("No.");
                                                                    Description := Item.Description;
                                                                  END;
                                                                  EXIT;
                                                                END;

                                                                TESTFIELD(Type,Type::Item);
                                                                ItemVariant.GET("No.","Variant Code");
                                                                Description := ItemVariant.Description;
                                                              END;

                                                   CaptionML=[DEU=Variantencode;
                                                              ENU=Variant Code;
                                                              NLD=Variantcode;
                                                              SVE=Variantkod] }
    { 13  ;   ;Distribution %      ;Decimal       ;OnValidate=BEGIN
                                                                IF Type = Type::" " THEN
                                                                  ERROR(Text002,FIELDCAPTION(Type),Type);

                                                                IF "Distribution %" <> 0 THEN BEGIN
                                                                  TESTFIELD("No.");
                                                                  "Unit Cost" := 0;
                                                                  IF Quantity <> 1 THEN
                                                                    VALIDATE(Quantity,1);
                                                                END;
                                                              END;

                                                   CaptionML=[DEU=Verteilungsprozentsatz;
                                                              ENU=Distribution %;
                                                              NLD=Verdelingspercentage];
                                                   DecimalPlaces=2:2;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 14  ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[DEU=Gesch„ftsbuchungsgruppe;
                                                              ENU=Gen. Bus. Posting Group;
                                                              NLD=Bedrijfsboekingsgroep;
                                                              SVE=Gen. r”relsebokf”ringsmall] }
    { 15  ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[DEU=Produktbuchungsgruppe;
                                                              ENU=Gen. Prod. Posting Group;
                                                              NLD=Productboekingsgroep;
                                                              SVE=Produktbokf”ringsmall] }
    { 16  ;   ;VAT Bus. Posting Group;Code20      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[DEU=MwSt.-Gesch„ftsbuchungsgruppe;
                                                              ENU=VAT Bus. Posting Group;
                                                              NLD=Btw-bedrijfsboekingsgroep;
                                                              SVE=Moms r”relsebokf”ringsmall] }
    { 17  ;   ;VAT Prod. Posting Group;Code20     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[DEU=MwSt.-Produktbuchungsgruppe;
                                                              ENU=VAT Prod. Posting Group;
                                                              NLD=Btw-productboekingsgroep;
                                                              SVE=Moms produktbokf”ringsmall] }
  }
  KEYS
  {
    {    ;Amount Distribution Code,Line No.       ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1160040000 : TextConst 'DEU=Sie k”nnen eine %1 nicht umbenennen.;ENU=You cannot rename a %1.;NLD=U kunt een %1 niet hernoemen.;SVE=Du kan inte byta namn p† %1.';
      Text002@1160040001 : TextConst 'DEU=%1 darf nicht %2 sein.;ENU=%1 must not be %2.;NLD=%1 mag niet %2 zijn.;SVE=%1 f†r inte vara %2.';
      GLSetupShortcutDimCode@1160040002 : ARRAY [8] OF Code[20];
      HasGotGLSetup@1160040003 : Boolean;

    PROCEDURE ShowDimensions@25();
    VAR
      StdAmtDistribDim@1160040000 : Record 6085776;
    BEGIN
      TESTFIELD("Amount Distribution Code");
      TESTFIELD("Line No.");
      StdAmtDistribDim.SETRANGE("Amount Distribution Code","Amount Distribution Code");
      StdAmtDistribDim.SETRANGE("Line No.","Line No.");
      PAGE.RUNMODAL(0,StdAmtDistribDim);
    END;

    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    VAR
      StdAmtDistribDim@1160040001 : Record 6085776;
      DimValue@1160040000 : Record 349;
    BEGIN
      TESTFIELD("Line No.");

      GetGLSetup;
      IF GLSetupShortcutDimCode[FieldNumber] = '' THEN
        EXIT;

      IF ShortcutDimCode <> '' THEN BEGIN
        IF NOT DimValue.GET(GLSetupShortcutDimCode[FieldNumber],ShortcutDimCode) THEN BEGIN
          // user may only have typed the beginning of the code, so we try to find the value based on that
          DimValue.SETRANGE("Dimension Code",GLSetupShortcutDimCode[FieldNumber]);
          DimValue.SETFILTER(Code,'@' + ShortcutDimCode + '*');
          IF DimValue.FINDFIRST THEN
            ShortcutDimCode := DimValue.Code
          ELSE
            DimValue.GET(GLSetupShortcutDimCode[FieldNumber],ShortcutDimCode); // throw the standard error message
        END;
      END;

      IF ShortcutDimCode = '' THEN BEGIN
        IF StdAmtDistribDim.GET("Amount Distribution Code","Line No.",GLSetupShortcutDimCode[FieldNumber]) THEN
          StdAmtDistribDim.DELETE;
      END ELSE BEGIN
        IF NOT StdAmtDistribDim.GET("Amount Distribution Code","Line No.",GLSetupShortcutDimCode[FieldNumber]) THEN BEGIN
          StdAmtDistribDim."Amount Distribution Code" := "Amount Distribution Code";
          StdAmtDistribDim."Line No." := "Line No.";
          StdAmtDistribDim."Dimension Code" := GLSetupShortcutDimCode[FieldNumber];
          StdAmtDistribDim.VALIDATE("Dimension Value Code",ShortcutDimCode);
          StdAmtDistribDim.INSERT;
        END ELSE BEGIN
          StdAmtDistribDim.VALIDATE("Dimension Value Code",ShortcutDimCode);
          StdAmtDistribDim.MODIFY;
        END;
      END;
    END;

    PROCEDURE LookupShortcutDimCode@28(FieldNumber@1000 : Integer;VAR Text@1001 : Text[250]) : Boolean;
    VAR
      DimValue@1160040000 : Record 349;
    BEGIN
      GetGLSetup;

      IF GLSetupShortcutDimCode[FieldNumber] = '' THEN
        EXIT(FALSE);

      DimValue.SETRANGE("Dimension Code",GLSetupShortcutDimCode[FieldNumber]);
      IF DimValue.GET(GLSetupShortcutDimCode[FieldNumber],Text) THEN;

      IF PAGE.RUNMODAL(0,DimValue) = ACTION::LookupOK THEN BEGIN
        Text := DimValue.Code;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE ShowShortcutDimCode@27(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    VAR
      StdAmtDistribDim@1160040000 : Record 6085776;
      i@1160040001 : Integer;
    BEGIN
      CLEAR(ShortcutDimCode);

      GetGLSetup;
      FOR i := 1 TO 8 DO
        IF StdAmtDistribDim.GET("Amount Distribution Code","Line No.",GLSetupShortcutDimCode[i]) THEN
          ShortcutDimCode[i] := StdAmtDistribDim."Dimension Value Code";
    END;

    LOCAL PROCEDURE GetGLSetup@52();
    VAR
      GLSetup@1000 : Record 98;
    BEGIN
      IF NOT HasGotGLSetup THEN BEGIN
        GLSetup.GET;
        GLSetupShortcutDimCode[1] := GLSetup."Shortcut Dimension 1 Code";
        GLSetupShortcutDimCode[2] := GLSetup."Shortcut Dimension 2 Code";
        GLSetupShortcutDimCode[3] := GLSetup."Shortcut Dimension 3 Code";
        GLSetupShortcutDimCode[4] := GLSetup."Shortcut Dimension 4 Code";
        GLSetupShortcutDimCode[5] := GLSetup."Shortcut Dimension 5 Code";
        GLSetupShortcutDimCode[6] := GLSetup."Shortcut Dimension 6 Code";
        GLSetupShortcutDimCode[7] := GLSetup."Shortcut Dimension 7 Code";
        GLSetupShortcutDimCode[8] := GLSetup."Shortcut Dimension 8 Code";
        HasGotGLSetup := TRUE;
      END;
    END;

    BEGIN
    END.
  }
}

