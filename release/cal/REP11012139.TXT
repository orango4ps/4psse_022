OBJECT Report 11012139 Import Project Invoices
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Importieren Projektrechnungen;
               ENU=Import Project Invoices;
               NLD=Import projectfacturen;
               NOR=Importer prosjektfakturaer;
               SVE=Importera projektfakturor];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   PurchSetupRec.GET;
                   PurchSetupRec.TESTFIELD("Invoice Nos.");
                   PurchSetupRec.TESTFIELD("Posted Invoice Nos.");
                   PurchSetupRec.TESTFIELD("Credit Memo Nos.");
                   PurchSetupRec.TESTFIELD("Posted Credit Memo Nos.");
                 END;

    OnPreReport=BEGIN
                  LineNo := 0;

                  JobsSetupRec.GET;
                  JobsSetupRec.TESTFIELD("Vendor No. Project Invoices");
                END;

    UsageCategory=Tasks;
  }
  DATASET
  {
    { 6547;    ;DataItem;                    ;
               DataItemTable=Table11020244;
               OnPreDataItem=BEGIN
                               SETRANGE(Company,COMPANYNAME);

                               LineCount := COUNT;

                               Window.OPEN(Text11012000);

                               InvoiceCount := 0;
                               CMCount := 0;
                               RecordCounter := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  RecordCounter := RecordCounter + 1;
                                  Window.UPDATE(1,100 * ROUND(RecordCounter/LineCount * 100,1));

                                  IF "Document No." <> HoldDocumentNo THEN BEGIN
                                    IF HoldDocumentNo <> '' THEN
                                      ReWriteHeader;
                                    HoldDocumentNo := "Document No.";
                                    WriteHeader;
                                    LineNo := 0;
                                    HeaderAmount := 0;
                                  END;

                                  PurchLineRec."Document Type" := PurchHeaderRec."Document Type";
                                  PurchLineRec."Document No." := PurchHeaderRec."No.";
                                  PurchLineRec."Buy-from Vendor No." := PurchHeaderRec."Buy-from Vendor No.";
                                  PurchLineRec."Posting Date" := PurchHeaderRec."Posting Date";
                                  HeaderAmount += "Amount Including VAT";
                                  LineNo += 10000;
                                  PurchLineRec."Line No." := LineNo;
                                  PurchLineRec.Type := PurchLineRec.Type::"G/L Account";
                                  PurchLineRec.Quantity := Quantity;

                                  DimMgt.GetDimValueRec(2,"Cost Object",DimValRec,FALSE,"Project No.");

                                  PurchLineRec.VALIDATE("Job No.","Project No.");
                                  PurchLineRec.Element := Element;
                                  PurchLineRec.VALIDATE("Shortcut Dimension 2 Code","Cost Object");
                                  PurchLineRec.VALIDATE("VAT Bus. Posting Group","VAT Bus. Posting Group");
                                  PurchLineRec.VALIDATE("VAT Prod. Posting Group","VAT Prod. Posting Group");
                                  PurchLineRec.VALIDATE("Line Amount",Amount);
                                  PurchLineRec.VALIDATE(Amount,Amount);
                                  PurchLineRec.VALIDATE("Amount Including VAT","Amount Including VAT");
                                  VALIDATE("VAT Base Amount","VAT Base Amount");
                                  PurchLineRec."Unit of Measure" := DimValRec."Unit of Measure";
                                  PurchLineRec."Unit of Measure Code" := DimValRec."Unit of Measure";
                                  IF (PurchLineRec."Job No." <> '') AND (PurchLineRec.Element = '') THEN
                                    PurchLineRec.Element := GetStandardProjElement();
                                  PurchLineRec.Description := Description;
                                  PurchLineRec."Input by" := USERID; //DP00469
                                  PurchLineRec."Input Date" := TODAY; //DP00469
                                  PurchLineRec.INSERT;

                                  DELETE;

                                  IF PurchLineRec."Document Type" = PurchLineRec."Document Type"::Invoice THEN
                                    InvoiceCount += 1;

                                  IF PurchLineRec."Document Type" = PurchLineRec."Document Type"::"Credit Memo" THEN
                                    CMCount += 1;
                                END;

               OnPostDataItem=BEGIN
                                IF (InvoiceCount = 0) AND (CMCount = 0) THEN
                                  MESSAGE(Text11012002)
                                ELSE BEGIN
                                  ReWriteHeader;
                                  MESSAGE(Text11012001,InvoiceCount,CMCount);
                                END;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      PurchSetupRec@1100485005 : Record 312;
      JobsSetupRec@1100485006 : Record 315;
      PurchHeaderRec@1100485004 : Record 38;
      PurchLineRec@1100485007 : Record 39;
      DimValRec@1100485008 : Record 349;
      DimMgt@1100485009 : Codeunit 408;
      Window@1100485010 : Dialog;
      HoldDocumentNo@1100485001 : Code[20];
      LineNo@1100485002 : Integer;
      RecordCounter@1100485017 : Integer;
      HeaderAmount@1100485003 : Decimal;
      LineCount@1100485011 : Integer;
      Text11012000@1100485012 : TextConst 'DEU=@1@@@@@@@@;ENU=@1@@@@@@@@;NLD=@1@@@@@@@@;NOR=@1@@@@@@@@';
      InvoiceCount@1100485013 : Integer;
      CMCount@1100485014 : Integer;
      Text11012001@1100485015 : TextConst 'DEU=%1 Rechnungszeilen und %2 Gutschriftzeilen erstellt.;ENU="%1 Invoicelines and %2 Credit Invoice Lines created. ";NLD="%1 factuurregels en %2 creditmemoregels aangemaakt. ";NOR=%1 fakturarader og %2 kreditfakturarader er opprettet.;SVE="%1 fakturarader och %2 kreditfakturarader har skapats. "';
      Text11012002@1100485016 : TextConst 'DEU=Nichts erstellt.;ENU="Nothing created. ";NLD="Niets aangemaakt. ";NOR=Ingenting er opprettet.;SVE="Inget har skapats. "';

    PROCEDURE WriteHeader@1210190000();
    BEGIN
      WITH PurchHeaderRec DO BEGIN
        INIT;
        IF "IC Invoice Line Buffer"."Document Type" = "IC Invoice Line Buffer"."Document Type"::Invoice THEN BEGIN
          "Document Type" := "Document Type"::Invoice;
          "No. Series" := PurchSetupRec."Invoice Nos.";
        END ELSE BEGIN
          "Document Type" := "Document Type"::"Credit Memo";
          "No. Series" := PurchSetupRec."Credit Memo Nos.";
        END;
        "No." := '';
        INSERT(TRUE);
        VALIDATE("Buy-from Vendor No.", JobsSetupRec."Vendor No. Project Invoices");
        IF "IC Invoice Line Buffer"."Document Type" = "IC Invoice Line Buffer"."Document Type"::Invoice THEN
          VALIDATE("Vendor Invoice No.",HoldDocumentNo)
        ELSE
          VALIDATE("Vendor Cr. Memo No.",HoldDocumentNo);
        VALIDATE("VAT Prod. Posting Group","IC Invoice Line Buffer"."VAT Prod. Posting Group");
        "Document Date" := "IC Invoice Line Buffer"."Posting Date";
        "Posting Date" := "IC Invoice Line Buffer"."Posting Date";
        VALIDATE("Job No.","IC Invoice Line Buffer"."Project No.");
        "Invoice Lines Input" := TRUE;
        MODIFY;
      END;
    END;

    PROCEDURE ReWriteHeader@1210190001();
    BEGIN
      WITH PurchHeaderRec DO BEGIN
        CALCFIELDS("Amount Including VAT");
        "Amount incl. VAT" := "Amount Including VAT";
        MODIFY;
      END;
    END;

    PROCEDURE GetStandardProjElement@1210190002() RetElement@1210190002 : Code[20];
    VAR
      lvProjElementRec@1210190000 : Record 11012010;
      lvText001@1210190001 : TextConst 'DEU=Standardelement von Projekt %1 nicht vorhanden;ENU=Standard element of project %1 not present;NLD=Standaard element van project %1 niet aanwezig;NOR=Standardelement for prosjektet %1 finnes ikke;SVE=Standardelement f”r projektet %1 finns inte';
      lvProjRec@1100485000 : Record 11072003;
    BEGIN
      RetElement := '';
      lvProjRec.GET(PurchLineRec."Job No.");  //**4PS01.n
      IF NOT lvProjRec."Posting Element Mandatory" THEN   //**4PS01.n
        EXIT;

      lvProjElementRec.SETRANGE("Project No.", PurchLineRec."Job No.");
      lvProjElementRec.SETRANGE(Level, 0);
      IF lvProjElementRec.FIND('-') THEN
        RetElement := lvProjElementRec.Element;

      IF RetElement = '' THEN
        ERROR(lvText001, PurchLineRec."Job No.");
    END;

    BEGIN
    {
      4PS01 JD, 8 aug 2007, Call 5990, "Posting Element Mandatory" also on project card
    }
    END.
  }
  RDLDATA
  {
  }
}

