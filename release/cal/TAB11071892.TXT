OBJECT Table 11071892 Vendor Category
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Contact No." = '' THEN
                 TESTFIELD("Vendor No.");

               CentralDataManagement.EditVendorCategory(Rec,1,xRec);
             END;

    OnModify=BEGIN
               CentralDataManagement.EditVendorCategory(Rec,2,xRec);
             END;

    OnDelete=BEGIN
               CentralDataManagement.EditVendorCategory(Rec,4,xRec);
             END;

    OnRename=BEGIN
               CentralDataManagement.EditVendorCategory(Rec,3,xRec);
             END;

    CaptionML=[ENU=Vendor Category;
               NOR=Leverand›rkategori;
               SVE=Leverant”rskategori];
    LookupPageID=Page11124820;
  }
  FIELDS
  {
    { 10  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor.No.;
                                                   CaptionML=[ENU=Vendor No.;
                                                              NOR=Leverand›rnr.;
                                                              SVE=Leverant”rsnr] }
    { 11  ;   ;Vendor Name         ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=[ENU=Vendor Name;
                                                              NOR=Leverand›rsnavn;
                                                              SVE=Leverant”rsnamn];
                                                   Editable=No }
    { 20  ;   ;Coding System       ;Code10        ;TableRelation="Coding System" WHERE (Apply for Vendor Category=CONST(Yes));
                                                   CaptionML=[ENU=Coding System;
                                                              NOR=Kodingssystem;
                                                              SVE=Kodningssystem] }
    { 30  ;   ;Code                ;Code20        ;TableRelation="Code per Coding System".Code WHERE (Coding System=FIELD(Coding System));
                                                   OnValidate=BEGIN
                                                                IF Code <> '' THEN BEGIN
                                                                  FormatMgt.SetSelection("Coding System");
                                                                  FormatMgt.FormatElem(Code,4,'');
                                                                  CodeRec.GET("Coding System", Code);
                                                                END;
                                                                CALCFIELDS(Description);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod] }
    { 31  ;   ;Description         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Code per Coding System".Description WHERE (Coding System=FIELD(Coding System),
                                                                                                                  Code=FIELD(Code)));
                                                   CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning];
                                                   Editable=No }
    { 40  ;   ;Percentage of Turnover;Decimal     ;CaptionML=[ENU=Percentage of Turnover;
                                                              NOR=Prosent av omsetning] }
    { 50  ;   ;Vendor Qualification Code;Code10   ;TableRelation="Vendor Qualification";
                                                   CaptionML=ENU=Vendor Qualification Code }
    { 60  ;   ;Contact No.         ;Code20        ;TableRelation=Contact;
                                                   CaptionML=[ENU=Contact No.;
                                                              NOR=Kontaktnr;
                                                              SVE=Kontaktnr] }
  }
  KEYS
  {
    {    ;Vendor No.,Contact No.,Coding System,Code;
                                                   Clustered=Yes }
    {    ;Coding System,Code,Vendor No.            }
    {    ;Vendor Qualification Code                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CentralDataManagement@1100528902 : Codeunit 11012010;
      FormatMgt@1100528900 : Codeunit 11012022;
      CodeRec@1100528901 : Record 11012089;

    PROCEDURE UpdateFromContBusRelation@1100529601(UpdateFrom@1100529603 : 'Insert,Modify,Delete';VAR ContBusRelOld@1100529602 : Record 5054;VAR ContBusRelNew@1100529601 : Record 5054);
    VAR
      OldVendorNo@1100529606 : Code[20];
      OldContactNo@1100529605 : Code[20];
      NewVendorNo@1100529604 : Code[20];
      NewContactNo@1100529600 : Code[20];
      CodeLoc@1100529607 : Code[20];
    BEGIN
      IF ContBusRelOld.ISTEMPORARY OR ContBusRelNew.ISTEMPORARY THEN
        EXIT;

      OldContactNo := ContBusRelOld."Contact No.";
      IF ContBusRelOld."Link to Table" = ContBusRelOld."Link to Table"::Vendor THEN
        OldVendorNo := ContBusRelOld."No.";
      NewContactNo := ContBusRelNew."Contact No.";
      IF ContBusRelNew."Link to Table" = ContBusRelNew."Link to Table"::Vendor THEN
        NewVendorNo := ContBusRelNew."No.";

      CASE UpdateFrom OF
        UpdateFrom::Insert:
          BEGIN
            IF NewVendorNo = '' THEN
              EXIT;
            UpdateVendorCategory('', NewContactNo, NewVendorNo, NewContactNo, TRUE);
          END;

        UpdateFrom::Modify:
          CASE TRUE OF
            (OldVendorNo = NewVendorNo) AND (OldContactNo = NewContactNo):
              EXIT;
            (OldContactNo = NewContactNo) AND (OldVendorNo <> NewVendorNo):
              BEGIN
                UpdateVendorCategory(OldVendorNo, OldContactNo, OldVendorNo, '', FALSE);
                CodeLoc := GetRelatedNo(1, NewVendorNo);
                UpdateVendorCategory(NewVendorNo, CodeLoc, '', CodeLoc, TRUE);
                UpdateVendorCategory(OldVendorNo, OldContactNo, NewVendorNo, NewContactNo, TRUE);
              END;
            (OldContactNo <> NewContactNo) AND (OldVendorNo = NewVendorNo):
              BEGIN
                UpdateVendorCategory(OldVendorNo, OldContactNo, '', OldContactNo, TRUE);
                CodeLoc := GetRelatedNo(0, NewContactNo);
                UpdateVendorCategory(CodeLoc, NewContactNo, CodeLoc, '', FALSE);
                UpdateVendorCategory(CodeLoc, NewContactNo, NewVendorNo, NewContactNo, TRUE);
              END;
            (OldContactNo <> NewContactNo) AND (OldVendorNo <> NewVendorNo):
              BEGIN
                UpdateVendorCategory(OldVendorNo, OldContactNo, OldVendorNo, '', FALSE);
                UpdateVendorCategory(OldVendorNo, OldContactNo, '', OldContactNo, TRUE);
                CodeLoc := GetRelatedNo(1, NewVendorNo);
                UpdateVendorCategory(NewVendorNo, CodeLoc, '', CodeLoc, TRUE);
                CodeLoc := GetRelatedNo(0, NewContactNo);
                UpdateVendorCategory(CodeLoc, NewContactNo, CodeLoc, '', FALSE);
                UpdateVendorCategory(CodeLoc, NewContactNo, NewVendorNo, NewContactNo, TRUE);
              END;
           END;

        UpdateFrom::Delete:
          BEGIN
            IF NewVendorNo = '' THEN
              EXIT;
            UpdateVendorCategory(NewVendorNo, NewContactNo, '', NewContactNo, FALSE);
            UpdateVendorCategory(NewVendorNo, NewContactNo, NewVendorNo, '', TRUE);
          END;
      END;
    END;

    LOCAL PROCEDURE UpdateVendorCategory@1100529600(OldVendorNo@1100529604 : Code[20];OldContactNo@1100529606 : Code[20];NewVendorNo@1100529605 : Code[20];NewContactNo@1100529607 : Code[20];DeleteOldRecords@1100529608 : Boolean);
    VAR
      VendorCategory@1100529600 : Record 11071892;
      NewVendorCategory@1100529602 : Record 11071892;
      TmpVendorCategory@1100529603 : TEMPORARY Record 11071892;
    BEGIN
      IF (OldVendorNo = NewVendorNo) AND (OldContactNo = NewContactNo) THEN
        EXIT;
      IF ((NewContactNo = '') AND (NewVendorNo = '')) OR
         ((OldVendorNo = '') AND (OldContactNo = ''))
      THEN
        EXIT;

      VendorCategory.SETRANGE("Vendor No.", OldVendorNo);
      VendorCategory.SETRANGE("Contact No.", OldContactNo);
      IF VendorCategory.FINDSET THEN BEGIN
        REPEAT
          TmpVendorCategory := VendorCategory;
          TmpVendorCategory.INSERT;
        UNTIL VendorCategory.NEXT = 0;
        IF DeleteOldRecords THEN
          VendorCategory.DELETEALL(TRUE);
      END;

      IF DeleteOldRecords THEN BEGIN
        IF NewVendorNo <> '' THEN BEGIN
          VendorCategory.RESET;
          VendorCategory.SETRANGE("Vendor No.", NewVendorNo);
          VendorCategory.DELETEALL(TRUE);
        END;
        IF NewContactNo <> '' THEN BEGIN
          VendorCategory.RESET;
          VendorCategory.SETRANGE("Contact No.", NewContactNo);
          VendorCategory.DELETEALL(TRUE);
        END;
      END;

      IF TmpVendorCategory.ISEMPTY THEN
        EXIT;

      TmpVendorCategory.FINDSET;
      REPEAT
        IF NewVendorCategory.GET(NewVendorNo, NewContactNo, TmpVendorCategory."Coding System", TmpVendorCategory.Code)
        THEN BEGIN
          NewVendorCategory.TRANSFERFIELDS(TmpVendorCategory, FALSE);
          NewVendorCategory.MODIFY(TRUE);
        END ELSE BEGIN
          NewVendorCategory := TmpVendorCategory;
          NewVendorCategory."Vendor No." := NewVendorNo;
          NewVendorCategory."Contact No." := NewContactNo;
          NewVendorCategory.INSERT(TRUE);
        END;
      UNTIL TmpVendorCategory.NEXT = 0;
    END;

    LOCAL PROCEDURE GetRelatedNo@1100529606(SearchFor@1100529601 : 'Vendor,Contact';SearchCode@1100529600 : Code[20]) : Code[20];
    VAR
      VendorCategory@1100529602 : Record 11071892;
    BEGIN
      IF SearchCode = '' THEN
        EXIT('');
      IF SearchFor = SearchFor::Vendor THEN
        VendorCategory.SETRANGE("Contact No.", SearchCode)
      ELSE
        VendorCategory.SETRANGE("Vendor No.", SearchCode);
      IF VendorCategory.ISEMPTY THEN
        EXIT('');
      VendorCategory.FINDFIRST;
      IF SearchFor = SearchFor::Vendor THEN
        EXIT(VendorCategory."Vendor No.")
      ELSE
        EXIT(VendorCategory."Contact No.");
    END;

    PROCEDURE GetContactNo@1100529605() : Code[20];
    VAR
      Contact@1100529601 : Record 5050;
      ContBusRel@1100529600 : Record 5054;
    BEGIN
      IF "Vendor No." = '' THEN
        EXIT('');

      IF CURRENTCOMPANY <> COMPANYNAME THEN BEGIN
        ContBusRel.CHANGECOMPANY(CURRENTCOMPANY);
        Contact.CHANGECOMPANY(CURRENTCOMPANY);
      END;

      ContBusRel.SETCURRENTKEY("Link to Table", "No.");
      ContBusRel.SETRANGE("Link to Table", ContBusRel."Link to Table"::Vendor);
      ContBusRel.SETRANGE("No.", "Vendor No.");
      IF ContBusRel.ISEMPTY THEN
        EXIT('');
      IF ContBusRel.COUNT = 1 THEN BEGIN
        ContBusRel.FINDFIRST;
        EXIT(ContBusRel."Contact No.");
      END;

      ContBusRel.FINDSET;
      REPEAT
        IF Contact.GET(ContBusRel."Contact No.") THEN
          IF Contact.Type = Contact.Type::Company THEN
            EXIT(Contact."No.");
      UNTIL ContBusRel.NEXT = 0;

      ContBusRel.FINDFIRST;
      EXIT(ContBusRel."Contact No.");
    END;

    PROCEDURE GetVendorNo@1100529604() : Code[20];
    VAR
      Contact@1100529601 : Record 5050;
      ContBusRel@1100529600 : Record 5054;
    BEGIN
      IF "Contact No." = '' THEN
        EXIT('');
      IF CURRENTCOMPANY <> COMPANYNAME THEN BEGIN
        ContBusRel.CHANGECOMPANY(CURRENTCOMPANY);
        Contact.CHANGECOMPANY(CURRENTCOMPANY);
      END;
      IF NOT Contact.GET("Contact No.") THEN
        EXIT('');
      IF (Contact.Type = Contact.Type::Person) AND (Contact."Company No." = '') THEN
        ContBusRel.SETRANGE("Contact No.", Contact."No.")
      ELSE
        ContBusRel.SETRANGE("Contact No.", Contact."Company No.");
      ContBusRel.SETRANGE("Link to Table", ContBusRel."Link to Table"::Vendor);
      ContBusRel.SETFILTER("No.", '<>%1', '');
      IF ContBusRel.ISEMPTY THEN
        EXIT('');
      ContBusRel.FINDFIRST;
      EXIT(ContBusRel."No.");
    END;

    PROCEDURE SetContactOrVendor@1100529603(RecType@1100529601 : ' ,Vendor,Contact';GetValue@1100529600 : Boolean);
    BEGIN
      CASE RecType OF
        RecType::" ":
          EXIT;
        RecType::Vendor:
          IF GetValue THEN
            "Vendor No." := GetVendorNo
          ELSE
            "Vendor No." := '';
        RecType::Contact:
          IF GetValue THEN
            "Contact No." := GetContactNo
          ELSE
            "Contact No." := '';
      END;
    END;

    BEGIN
    END.
  }
}

