OBJECT Report 11229281 Reverse Old Proj. Precl. Res.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=ZurÅckdrehen zwischenzeitliches Ergebnis Projekt (alt);
               ENU=Reverse Old Project Preclosure Result;
               NLD=Terugdraaien tussentijds resultaat project (oud)];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF PostingDate = 0D THEN
                    ERROR(Text000);

                  JobsSetup.GET;
                  JobsSetup.TESTFIELD("Old Preclosure Result Present");

                  OldPreclosureResultReversed := ReversePostPreclResults;
                END;

    OnPostReport=VAR
                   ClosingProjPrevGenJnlReport@1100525000 : Report 11020272;
                 BEGIN
                   IF NOT (TempGenJnlLineRec1.ISEMPTY AND TempGenJnlLineRec2.ISEMPTY) AND
                     PreviewGenJournalLines
                   THEN BEGIN
                     CLEAR(ClosingProjPrevGenJnlReport);
                     ClosingProjPrevGenJnlReport.ImportTemp1(TempGenJnlLineRec1);
                     ClosingProjPrevGenJnlReport.ImportTemp2(TempGenJnlLineRec2);
                     ClosingProjPrevGenJnlReport.RUNMODAL;
                   END;

                   IF OldPreclosureResultReversed THEN BEGIN
                     JobsSetup."Old Preclosure Result Present" := FALSE;
                     JobsSetup.MODIFY;
                     COMMIT;
                   END;

                   ClosingProcedure.DisplayError;
                   ClosingProcedure.StartGenJnl;
                   CLEAR(ClosingProcedure);
                 END;

  }
  DATASET
  {
    { 4178;    ;DataItem;Project             ;
               DataItemTable=Table11072003;
               DataItemTableView=SORTING(No.)
                                 WHERE(Project Status=FILTER(<Finished));
               OnAfterGetRecord=VAR
                                  ProjectPreclosureResult@1100529600 : Record 11012093;
                                BEGIN
                                  ProjectPreclosureResult.SETRANGE("Project No.", "No.");
                                  ProjectPreclosureResult.SETRANGE(Posted, TRUE);
                                  ProjectPreclosureResult.SETRANGE("Correction Posted", FALSE);
                                  IF ProjectPreclosureResult.ISEMPTY THEN
                                    CurrReport.SKIP;

                                  ProjectPreclosureResult.SETCURRENTKEY("Posting Date");
                                  ProjectPreclosureResult.FINDLAST;
                                  ClosingProcedure.SetSelection(
                                    gvType::Project, Project."No.", '', '',
                                    PostingDate, TRUE, TRUE, TRUE, FALSE, FALSE, '', FALSE, FALSE, FALSE);
                                  ClosingProcedure.CheckProjectPreclosureResult(PostingDate);
                                  ClosingProcedure.DeleteTempGenJnlLines;
                                  IF ReversePostPreclResults THEN BEGIN
                                    ClosingProcedure.TableLocking;
                                    ClosingProcedure.InitTemplateAndBatch;
                                    IF NOT ClosingProcedure.ErrorsFound THEN
                                      ClosingProcedure.ReversePreclosureResults
                                    ELSE
                                      OldPreclosureResultReversed := FALSE;
                                    COMMIT;
                                  END;

                                  IF PreviewGenJournalLines THEN BEGIN
                                    IF NOT ClosingProcedure.ErrorsFound THEN BEGIN
                                      ClosingProcedure.SetPreview(TRUE);
                                      ClosingProcedure.TableLocking;
                                      ClosingProcedure.InitTemplateAndBatch;
                                      ClosingProcedure.ReversePreclosureResults;
                                      ClosingProcedure.ExportTempGenJnlLine1(TempGenJnlLineRec1);
                                      ClosingProcedure.ExportTempGenJnlLine2(TempGenJnlLineRec2);
                                    END;
                                    COMMIT;
                                  END;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   JobsSetup.GET;
                   PostOldPreclosureResult := JobsSetup."Old Preclosure Result Present";
                   OldPreclosureResultVisible := PostOldPreclosureResult;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             SVE=Alternativ] }

      { 1100529601;2;Field  ;
                  CaptionML=[DEU=Buchungsdatum;
                             ENU=Posting Date;
                             NLD=Boekingsdatum;
                             SVE=Bokfîringsdatum];
                  SourceExpr=PostingDate }

      { 1100528240;2;Field  ;
                  Name=PreviewClosedProjects;
                  CaptionML=[DEU=Gen. Journalzeilen vorab anzeigen;
                             ENU=Preview Gen. Journal Lines;
                             NLD=Overzicht financiele dagboekregels;
                             SVE=Fîrhandsgranska red.journalrader];
                  SourceExpr=PreviewGenJournalLines;
                  OnValidate=BEGIN
                               IF PreviewGenJournalLines THEN
                                 ReversePostPreclResults := FALSE;
                             END;
                              }

      { 1210190002;2;Field  ;
                  Name=ReversePostPreclResults;
                  CaptionML=[DEU=Buchen;
                             ENU=Post;
                             NLD=Boeken;
                             SVE=bokfîr];
                  SourceExpr=ReversePostPreclResults;
                  OnValidate=BEGIN
                               IF ReversePostPreclResults THEN
                                 PreviewGenJournalLines := FALSE;
                             END;
                              }

      { 1100529600;2;Field  ;
                  Name=PostOldPreclosureResult;
                  CaptionML=[DEU=ZurÅckdrehen zwischenzeitliches Ergebnis Service (alt);
                             ENU=Reverse Old Preclosure Result;
                             NLD=Terugdraaien tussentijds resultaat service (oud)];
                  SourceExpr=PostOldPreclosureResult;
                  Visible=OldPreclosureResultVisible;
                  Editable=FALSE }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      JobsSetup@1100529602 : Record 315;
      TempGenJnlLineRec1@1100529605 : TEMPORARY Record 81;
      TempGenJnlLineRec2@1100529604 : TEMPORARY Record 81;
      ClosingProcedure@1210190007 : Codeunit 11012046;
      gvType@1210190000 : 'Project,Service Contract,Service Order';
      ReversePostPreclResults@1210190006 : Boolean;
      PreviewGenJournalLines@1100528240 : Boolean;
      PostOldPreclosureResult@1100529600 : Boolean;
      OldPreclosureResultVisible@1100529601 : Boolean INDATASET;
      OldPreclosureResultReversed@1100529603 : Boolean;
      PostingDate@1100529606 : Date;
      Text000@1100529607 : TextConst 'DEU=AuswÑhlen Buchungsdatum auf Registerblatt ''Optionen'';ENU=Select Posting Date on Option Tab;NLD=Selecteer boekingsdatum op tabblad opties;SVE=VÑlj bokfîringsdatum pÜ alternativfliken';

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

