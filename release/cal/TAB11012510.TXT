OBJECT Table 11012510 Plot Installment
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Project No.,Plot No.;
    OnInsert=BEGIN
               TestSettlMeth();
             END;

    CaptionML=[ENU=Plot Installment;
               NOR=Tegningavdrag;
               SVE=Ritning avbetalning];
    LookupPageID=Page11012025;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr];
                                                   NotBlank=Yes }
    { 20  ;   ;Plot No.            ;Code10        ;TableRelation=Plot."Plot No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=Plot No.;
                                                              NOR=Tegningnr;
                                                              SVE=Ritningnr] }
    { 30  ;   ;Installment No.     ;Code10        ;CaptionML=[ENU=Installment No.;
                                                              NOR=Betalingsplansnummer;
                                                              SVE=Betalplansnummer];
                                                   SQL Data Type=Variant;
                                                   NotBlank=Yes;
                                                   Numeric=Yes }
    { 40  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 70  ;   ;VAT Prod. Posting Group;Code20     ;TableRelation="VAT Product Posting Group".Code;
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              NOR=Mva-bokf›ringsgruppe - vare;
                                                              SVE=Moms produktbokf”ringsmall] }
    { 240 ;   ;Percentage          ;Decimal       ;CaptionML=[ENU=Percentage;
                                                              NOR=Prosent;
                                                              SVE=Procent] }
    { 245 ;   ;Total percentage    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plot Installment".Percentage WHERE (Project No.=FIELD(Project No.),
                                                                                                        Plot No.=FIELD(Plot No.)));
                                                   CaptionML=[ENU=Total percentage;
                                                              NOR=Totalprosent;
                                                              SVE=Totalprocent];
                                                   Editable=No }
    { 250 ;   ;Due Date            ;Date          ;CaptionML=[ENU=Due Date;
                                                              NOR=Forfallsdato;
                                                              SVE=F”rfallodatum] }
    { 260 ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Revenue),
                                                                                               Global Dimension No.=CONST(2));
                                                   OnValidate=VAR
                                                                xDimValRec@1100485000 : Record 349;
                                                              BEGIN
                                                                IF "Cost Object" <> '' THEN BEGIN
                                                                  DimMgt.GetDimValueRec(2, "Cost Object", DimValRec, TRUE, "Project No.");
                                                                  "Cost Component" := DimValRec."Cost Component";

                                                                  IF Description = '' THEN
                                                                    Description := DimValRec.Name
                                                                  ELSE BEGIN
                                                                    IF ("Cost Object" <> xRec."Cost Object") AND (xRec."Cost Object" <> '') THEN BEGIN
                                                                      DimMgt.GetDimValueRec(2, xRec."Cost Object", xDimValRec, FALSE, xRec."Project No.");
                                                                      IF (DimValRec.Name <> '') AND ((Description = xDimValRec.Name) OR (xDimValRec.Name = '')) THEN
                                                                        Description := DimValRec.Name;
                                                                    END;
                                                                  END;

                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostnadsobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   Editable=No;
                                                   CaptionClass='1,1,2' }
    { 270 ;   ;Last Installment    ;Boolean       ;CaptionML=[ENU=Last Installment;
                                                              NOR=Forrige avdrag;
                                                              SVE=Senaste avbetalning];
                                                   Editable=No }
    { 280 ;   ;Project Description ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Project Description;
                                                              NOR=Prosjektbeskrivelse;
                                                              SVE=Projektbeskrivning];
                                                   Editable=No }
    { 290 ;   ;Payment Terms Code  ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job."Payment Terms Code" WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Payment Terms Code;
                                                              NOR=Betalingsbet.kode;
                                                              SVE=Betalningsvillkorskod];
                                                   Editable=No }
    { 300 ;   ;Element             ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                lvInstallNo@1210190006 : Code[10];
                                                                ElementFormat@1210190005 : Codeunit 11012022;
                                                              BEGIN
                                                                ElementFormat.FormatElem(Element,2,'');
                                                                IF Element <> '' THEN BEGIN
                                                                  IF (NOT ElemRec.GET(Element)) AND (NOT ProjElemRec.GET("Project No.", Element)) THEN
                                                                    FIELDERROR(Element, STRSUBSTNO(Text001, Element));
                                                                END;

                                                                IF NOT CheckElementAllowedOnInstall("Project No.", "Plot No.", Element, "Installment No.", lvInstallNo) THEN
                                                                  ERROR(Text000, Element, lvInstallNo, "Project No.", "Plot No.");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 310 ;   ;Cost Component      ;Code20        ;TableRelation="Cost Component".Code;
                                                   CaptionML=[ENU=Cost Component;
                                                              NOR=Kostnadskomponent;
                                                              SVE=Kostnadsdel] }
  }
  KEYS
  {
    {    ;Project No.,Plot No.,Installment No.    ;SumIndexFields=Percentage;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ElemRec@1100485000 : Record 11012060;
      ProjElemRec@1210190002 : Record 11012010;
      Text000@1210190003 : TextConst 'ENU=Element ''%1'' already present on Installment No. ''%2'' van Project ''%3'', Plot No. ''%4''.;NOR=Element ''%1'' finnes allerede p† Avdragsnr. ''%2É, prosjekt ''%3'', tegningnr. ''%4''.;SVE=Element ''%1'' finns redan p† avbetalningsnr ''%2É, projekt ''%3'', Ritningnr ''%4''.';
      Text001@1100485001 : TextConst 'ENU="''%1'' is not present as Standard- and/or Project Element ";NOR=%1'' finnes ikke som Standard- og/eller prosjektelement;SVE="''%1'' finns inte som standard- och/eller projektelement "';
      DimValRec@1100485003 : Record 349;
      DimMgt@1100485002 : Codeunit 408;

    PROCEDURE TestSettlMeth@1();
    VAR
      ProjRec@11012000 : Record 11072003;
    BEGIN
      IF ProjRec.GET("Project No.") THEN
        ProjRec.TESTFIELD(ProjRec."Settlement Method",ProjRec."Settlement Method"::"Fixed Price");
    END;

    PROCEDURE CheckElementAllowedOnInstall@1210190007(IProjectNo@1210190000 : Code[20];IPlotNo@1210190004 : Code[10];IElement@1210190001 : Code[20];ICurrentInstallNo@1210190002 : Code[10];VAR OInstallNo@1210190008 : Code[10]) : Boolean;
    VAR
      lvProjRec@1210190007 : Record 11072003;
      lvPlotInstallRec@1210190005 : Record 11012510;
    BEGIN
      //* An element may only exist once per plot no. at 'Generate Progress from Installment Progress'.
      WITH lvPlotInstallRec DO BEGIN
        OInstallNo := '';
        IF (IElement = '') THEN
          EXIT(TRUE);

        IF NOT lvProjRec.GET(IProjectNo) THEN
          EXIT(TRUE);

        //IF NOT lvProjRec."Progress from Instal. Progress" THEN  //C-019166.o
        IF (NOT lvProjRec."Progress from Instal. Progress") OR (NOT lvProjRec."Element per Installment") THEN  //C-019166.n
          EXIT(TRUE);

        SETRANGE("Project No.", IProjectNo);
        SETRANGE("Plot No.", IPlotNo);
        SETRANGE(Element, IElement);
        IF (ICurrentInstallNo <> '') THEN
          SETFILTER("Installment No.", '<>%1', ICurrentInstallNo);
        IF FIND('-') THEN BEGIN
          OInstallNo := "Installment No.";
          EXIT(FALSE);
        END;

        EXIT(TRUE);
      END;
    END;

    BEGIN
    {
      4PS Jan ter Harmsel, Interest Calculation for Plot Installments
    }
    END.
  }
}

