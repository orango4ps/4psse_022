OBJECT Table 11071711 Service Source E-Mail
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Source E-Mail;
               NOR=Servicekilde E-post;
               SVE=E-post, servicek„lla];
    LookupPageID=Page11125178;
  }
  FIELDS
  {
    { 10  ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract.No.;
                                                   OnValidate=BEGIN
                                                                IF "Service Contract No." <> '' THEN
                                                                  TESTFIELD("Customer No.", '');
                                                              END;

                                                   CaptionML=[ENU=Service Contract;
                                                              NOR=Servicekontrakt;
                                                              SVE=Servicekontrakt] }
    { 11  ;   ;Service Contract Description;Text50;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Service-Contract.Description WHERE (No.=FIELD(Service Contract No.)));
                                                   CaptionML=[ENU=Service Contract Description;
                                                              NOR=Servicekontraktsbeskrivelse;
                                                              SVE=Servicekontraktsbeskrivning];
                                                   Editable=No }
    { 15  ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                IF "Customer No." <> '' THEN
                                                                  TESTFIELD("Service Contract No.", '');
                                                              END;

                                                   CaptionML=[ENU=Customer No.;
                                                              NOR=Kundenr;
                                                              SVE=Kundnr] }
    { 16  ;   ;Customer Name       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=[ENU=Customer Name;
                                                              NOR=Kundnavn;
                                                              SVE=Betalarens namn];
                                                   Editable=No }
    { 20  ;   ;Source Type         ;Option        ;CaptionML=[ENU=Source Type;
                                                              NOR=Kildetype;
                                                              SVE=Ursprungstyp];
                                                   OptionCaptionML=[ENU=Call,Contract,Direct,Estimate,,,Modification,Replacement;
                                                                    NOR=Samtale,Kontrakt,Direkte,Kalkyle,,,Endring,Erstatning;
                                                                    SVE=Samtal,Kontrakt,Direkt,Kalkyl,,,Žndring,Ers„ttning];
                                                   OptionString=Call,Contract,Direct,Estimate,,,Modification,Replacement }
    { 30  ;   ;Source E-Mail       ;Option        ;CaptionML=[ENU=Source E-Mail;
                                                              NOR=E-Mail, kilde;
                                                              SVE=E-post, k„lla];
                                                   OptionCaptionML=[ENU=Service Contract,Contract Manager,,Service Contract Contact 1,Service Contract Contact 2,,,Customer,,,Customer Contact 1,Customer Contact 2,,,Service Location,,,Service Location Contact 1,Service Location Contact 2,,,Service Order,Service Order Signer,Order Manager,,Service Order Bill-to Contact 1,Service Order Bill-to Contact 2,,,Bill-to Customer,,,Bill-to Customer Contact 1,Bill-to Customer Contact 2;
                                                                    SVE=Servicekontrakt,Kontraktsansvarig,,Servicekontraktkontakt 1,Servicekontraktkontakt 2,,,Kund,,,Kundkontakt 1,Kundkontakt 2,,,Serviceplats,,,Serviceplatskontakt 1,Serviceplatskontakt 2,,,Serviceorder,Serviceorderundertecknare,Orderchef,,Serviceorderns fakturera-till-kontakt 1,Serviceorderns fakturera-till-kontakt 2,,Fakturakund-nr,,,Fakturakundkontakt1,Fakturakundkontakt2];
                                                   OptionString=Contract,ContractManager,,ContractContact1,ContractContact2,,,Customer,,,CustomerContact1,CustomerContact2,,,Location,,,LocationContact1,LocationContact2,,,Order,OrderSigner,OrderManager,,OrderContact1,OrderContact2,,,BillToCustomer,,,BillToCustomerContact1,BillToCustomerContact2 }
    { 40  ;   ;Mail Status Update  ;Boolean       ;CaptionML=[ENU=Mail at Status update;
                                                              NOR=Send ved statusoppdatering;
                                                              SVE=Skicka e-post vid statusuppdatering] }
    { 50  ;   ;Mail Work Sheet     ;Boolean       ;CaptionML=[ENU=Mail Work Sheet;
                                                              NOR=Send regneark;
                                                              SVE=E-postkalkylblad] }
    { 60  ;   ;Service Order Filter;Code20        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Service Order Filter;
                                                              NOR=Serviceordrefilter;
                                                              SVE=Serviceorderfilter] }
    { 70  ;   ;Mail to Subcontractor OLD;Boolean  ;CaptionML=ENU=Mail to Subcontractor OLD;
                                                   Description=OBSOLETE }
  }
  KEYS
  {
    {    ;Service Contract No.,Customer No.,Source Type,Source E-Mail;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE GetMailContent@1100526200(iCustomer@1100526204 : Code[20];iContract@1100526205 : Code[20];iLocation@1100526206 : Code[20];iOrder@1100526207 : Code[20]) : Text[250];
    VAR
      CustRec@1100526201 : Record 18;
      ServContrRec@1100526200 : Record 11012812;
      ServLocRec@1100526202 : Record 11012801;
      ServOrderRec@1100526203 : Record 11012823;
      ContactRec@1100526208 : Record 5050;
      SalespersonPurchaser@1100528601 : Record 13;
      BillToCustomer@1100529600 : Code[20];
    BEGIN
      IF iOrder <> '' THEN BEGIN
        IF ServOrderRec.GET(iOrder) THEN BEGIN
          iCustomer := ServOrderRec."Customer No.";
          iContract := ServOrderRec."Service Contract No.";
          iLocation := ServOrderRec."Service Location No.";
          BillToCustomer := ServOrderRec."Bill-to Customer No.";
        END;
      END ELSE BEGIN
        IF ServContrRec.GET(iContract) THEN
          iCustomer := ServContrRec."Customer No.";
      END;

      CASE "Source E-Mail" OF
        "Source E-Mail"::Customer:
          BEGIN
            IF NOT CustRec.GET(iCustomer) THEN CustRec.INIT;
            EXIT(CustRec."E-Mail");
          END;
        "Source E-Mail"::CustomerContact1,
        "Source E-Mail"::CustomerContact2:
          BEGIN
            IF NOT CustRec.GET(iCustomer) THEN CustRec.INIT;
            IF NOT ContactRec.GET(CustRec."Primary Contact No.") THEN ContactRec.INIT;
            IF "Source E-Mail" = "Source E-Mail"::CustomerContact1 THEN
              EXIT(ContactRec."E-Mail");
            IF "Source E-Mail" = "Source E-Mail"::CustomerContact2 THEN
              EXIT(ContactRec."E-Mail 2");
          END;
        "Source E-Mail"::Contract,
        "Source E-Mail"::ContractManager:
          BEGIN
            IF NOT ServContrRec.GET(iContract) THEN ServContrRec.INIT;
            IF "Source E-Mail" = "Source E-Mail"::Contract THEN
              EXIT(ServContrRec."E-Mail");
            IF "Source E-Mail" = "Source E-Mail"::ContractManager THEN BEGIN
              IF NOT SalespersonPurchaser.GET(ServContrRec."Contract Manager") THEN SalespersonPurchaser.INIT;
              EXIT(SalespersonPurchaser."E-Mail");
            END;
          END;
        "Source E-Mail"::ContractContact1,
        "Source E-Mail"::ContractContact2:
          BEGIN
            IF NOT ServContrRec.GET(iContract) THEN ServContrRec.INIT;
            IF NOT ContactRec.GET(ServContrRec."Contact Person") THEN ContactRec.INIT;
            IF "Source E-Mail" = "Source E-Mail"::ContractContact1 THEN
              EXIT(ContactRec."E-Mail");
            IF "Source E-Mail" = "Source E-Mail"::ContractContact2 THEN
              EXIT(ContactRec."E-Mail 2");
          END;
        "Source E-Mail"::Location:
          BEGIN
            IF NOT ServLocRec.GET(iLocation) THEN ServLocRec.INIT;
            EXIT(ServLocRec."E-Mail");
          END;
        "Source E-Mail"::LocationContact1,
        "Source E-Mail"::LocationContact2:
          BEGIN
            IF NOT ServLocRec.GET(iLocation) THEN ServLocRec.INIT;
            IF NOT ContactRec.GET(ServLocRec."Contact Person No.") THEN ContactRec.INIT;
            IF "Source E-Mail" = "Source E-Mail"::LocationContact1 THEN
              EXIT(ContactRec."E-Mail");
            IF "Source E-Mail" = "Source E-Mail"::LocationContact2 THEN
              EXIT(ContactRec."E-Mail 2");
          END;
        "Source E-Mail"::Order,
        "Source E-Mail"::OrderSigner,
        "Source E-Mail"::OrderManager:
          BEGIN
            IF NOT ServOrderRec.GET(iOrder) THEN ServOrderRec.INIT;
            IF "Source E-Mail" = "Source E-Mail"::Order THEN
              EXIT(ServOrderRec."E-Mail");
            IF "Source E-Mail" = "Source E-Mail"::OrderSigner THEN
              EXIT(ServOrderRec."E-Mail Signer");
            IF "Source E-Mail" = "Source E-Mail"::OrderManager THEN BEGIN
              IF NOT SalespersonPurchaser.GET(ServOrderRec."Order Manager") THEN SalespersonPurchaser.INIT;
              EXIT(SalespersonPurchaser."E-Mail");
            END;
          END;
        "Source E-Mail"::OrderContact1,
        "Source E-Mail"::OrderContact2:
          BEGIN
            IF NOT ServOrderRec.GET(iOrder) THEN ServOrderRec.INIT;
            IF NOT ContactRec.GET(ServOrderRec."Bill-to Contact Person") THEN ContactRec.INIT;
            IF "Source E-Mail" = "Source E-Mail"::OrderContact1 THEN
              EXIT(ContactRec."E-Mail");
            IF "Source E-Mail" = "Source E-Mail"::OrderContact2 THEN
              EXIT(ContactRec."E-Mail 2");
          END;
        "Source E-Mail"::BillToCustomer:
          BEGIN
            IF NOT CustRec.GET(BillToCustomer) THEN
              CustRec.INIT;
            EXIT(CustRec."E-Mail");
          END;
        "Source E-Mail"::BillToCustomerContact1,
        "Source E-Mail"::BillToCustomerContact2:
          BEGIN
            IF NOT CustRec.GET(BillToCustomer) THEN
              CustRec.INIT;
            IF NOT ContactRec.GET(CustRec."Primary Contact No.") THEN
              ContactRec.INIT;
            IF "Source E-Mail" = "Source E-Mail"::BillToCustomerContact1 THEN
              EXIT(ContactRec."E-Mail");
            IF "Source E-Mail" = "Source E-Mail"::BillToCustomerContact2 THEN
              EXIT(ContactRec."E-Mail 2");
          END;
      END;

      EXIT('');
    END;

    PROCEDURE CopyToContract@1210190000(iContract@1100526202 : Code[20];iCustomerNo@1210190000 : Code[20]);
    VAR
      BaseMailRec@1100526200 : Record 11071711;
      ContrMailRec@1100526201 : Record 11071711;
    BEGIN
      IF iContract = '' THEN EXIT;

      //mg.sn, 09-01-12: M32065
      ContrMailRec.SETRANGE("Service Contract No.", iContract);
      ContrMailRec.SETRANGE("Customer No.", '');
      ContrMailRec.DELETEALL(TRUE);
      //mg.en, 09-01-12: M32065

      BaseMailRec.SETFILTER("Service Contract No.", '%1', '');
      BaseMailRec.SETRANGE("Customer No.", iCustomerNo);
      IF BaseMailRec.ISEMPTY THEN
        BaseMailRec.SETRANGE("Customer No.", '');
      IF BaseMailRec.FINDSET THEN BEGIN
        REPEAT
          ContrMailRec := BaseMailRec;
          ContrMailRec."Service Contract No." := iContract;
          ContrMailRec."Customer No." := '';
          IF ContrMailRec.INSERT THEN;
        UNTIL BaseMailRec.NEXT = 0;
      END;
    END;

    PROCEDURE CopyToCustomer@1210190001(iCustomerNo@1210190000 : Code[20]);
    VAR
      BaseMailRec@1210190002 : Record 11071711;
      ContrMailRec@1210190001 : Record 11071711;
    BEGIN
      IF iCustomerNo = '' THEN EXIT;

      BaseMailRec.SETFILTER("Service Contract No.", '%1', '');
      BaseMailRec.SETFILTER("Customer No.", '%1', '');
      IF BaseMailRec.FINDSET THEN BEGIN
        REPEAT
          ContrMailRec := BaseMailRec;
          ContrMailRec."Customer No." := iCustomerNo;
          IF ContrMailRec.INSERT THEN;
        UNTIL BaseMailRec.NEXT = 0;
      END;
    END;

    PROCEDURE ConvertMailSetup@1100526201();
    VAR
      BaseMailRec@1100526200 : Record 11071711;
      SourceType@1100526201 : Integer;
      SourceTable@1100526202 : Integer;
    BEGIN
      FOR SourceType := 0 TO 3 DO BEGIN
        BaseMailRec.INIT;
        BaseMailRec."Source Type" := SourceType;
        BaseMailRec."Mail Status Update" := TRUE;
        FOR SourceTable := 0 TO 2 DO BEGIN
          CASE SourceTable OF
            0: BaseMailRec."Source E-Mail" := BaseMailRec."Source E-Mail"::Contract;
            1: BaseMailRec."Source E-Mail" := BaseMailRec."Source E-Mail"::Location;
            2: BaseMailRec."Source E-Mail" := BaseMailRec."Source E-Mail"::Order;
          END;
          IF BaseMailRec.INSERT THEN;
        END;
      END;
    END;

    PROCEDURE SetFiltersServiceOrder@1100525000(ServiceOrder@1100525002 : Record 11012823);
    BEGIN
      // dp00563
      SETRANGE("Service Contract No.", ServiceOrder."Service Contract No.");
      IF ServiceOrder."Service Contract No." = '' THEN
        SETRANGE("Customer No.", ServiceOrder."Customer No.")
      ELSE
        SETRANGE("Customer No.", '');
      SETRANGE("Source Type", ServiceOrder."Source Type");
      SETRANGE("Service Order Filter", ServiceOrder."No.");
    END;

    PROCEDURE ShowSOServiceSourceEmail@1210190004(IServiceOrderNo@1210190000 : Code[20]);
    VAR
      ServiceOrder@1210190001 : Record 11012823;
      ServiceSourceEMail@1210190002 : Record 11071711;
    BEGIN
      //mg, 09-01-12: M32065
      IF NOT ServiceOrder.GET(IServiceOrderNo) THEN
        EXIT;

      ServiceSourceEMail.SetFiltersServiceOrder(ServiceOrder);

      PAGE.RUNMODAL(PAGE::"Service Source E-Mail", ServiceSourceEMail);
    END;

    BEGIN
    END.
  }
}

