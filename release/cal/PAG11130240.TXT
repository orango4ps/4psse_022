OBJECT Page 11130240 _Small Proj. Exec.Appointm. MB
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[DEU=Tarifkomponente Ert„ge;
               ENU=Matrix;
               NLD=Matrix;
               NOR=Maskinordre, kostrad;
               SVE=Maskinorder, kostnadsrad];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table11020264;
    PageType=ListPart;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             //FieldEditable1..12 := TRUE; //Not needed, page not editable
             FieldVisible1 := TRUE;
             FieldVisible2 := TRUE;
             FieldVisible3 := TRUE;
             FieldVisible4 := TRUE;
             FieldVisible5 := TRUE;
             FieldVisible6 := TRUE;
             FieldVisible7 := TRUE;
             FieldVisible8 := TRUE;
             FieldVisible9 := TRUE;
             FieldVisible10 := TRUE;
             FieldVisible11 := TRUE;
             FieldVisible12 := TRUE;

             TableOption := -1;
           END;

    OnAfterGetRecord=VAR
                       I@1100528700 : Integer;
                     BEGIN
                       FOR I := 1 TO MATRIX_CurrSetLength DO
                         MATRIX_OnAfterGetRecord(I);

                       //FOR I := 1 TO ARRAYLEN(MATRIX_MatrixRecords) DO   //Page not editable
                       //  MATRIX_SetFieldEditable(I);
                     END;

    OnNewRecord=BEGIN
                  CLEAR(MATRIX_CellData);
                END;

  }
  CONTROLS
  {
    { 1100528731;0;Container;
                ContainerType=ContentArea }

    { 1100528730;1;Group  ;
                IndentationControls=Description;
                GroupType=Repeater }

    { 1100528712;2;Field  ;
                SourceExpr=Code }

    { 1100528713;2;Field  ;
                SourceExpr=Description }

    { 1100528711;2;Field  ;
                Name=Field1;
                SourceExpr=MATRIX_CellData[1];
                CaptionClass='3,' + MATRIX_CaptionSet[1];
                Visible=FieldVisible1;
                Editable=FieldEditable1;
                OnValidate=BEGIN
                             MATRIX_OnValidate(1);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(1);
                            END;
                             }

    { 1100528710;2;Field  ;
                Name=Field2;
                SourceExpr=MATRIX_CellData[2];
                CaptionClass='3,' + MATRIX_CaptionSet[2];
                Visible=FieldVisible2;
                Editable=FieldEditable2;
                OnValidate=BEGIN
                             MATRIX_OnValidate(2);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(2);
                            END;
                             }

    { 1100528709;2;Field  ;
                Name=Field3;
                SourceExpr=MATRIX_CellData[3];
                CaptionClass='3,' + MATRIX_CaptionSet[3];
                Visible=FieldVisible3;
                Editable=FieldEditable3;
                OnValidate=BEGIN
                             MATRIX_OnValidate(3);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(3);
                            END;
                             }

    { 1100528708;2;Field  ;
                Name=Field4;
                SourceExpr=MATRIX_CellData[4];
                CaptionClass='3,' + MATRIX_CaptionSet[4];
                Visible=FieldVisible4;
                Editable=FieldEditable4;
                OnValidate=BEGIN
                             MATRIX_OnValidate(4);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(4);
                            END;
                             }

    { 1100528707;2;Field  ;
                Name=Field5;
                SourceExpr=MATRIX_CellData[5];
                CaptionClass='3,' + MATRIX_CaptionSet[5];
                Visible=FieldVisible5;
                Editable=FieldEditable5;
                OnValidate=BEGIN
                             MATRIX_OnValidate(5);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(5);
                            END;
                             }

    { 1100528706;2;Field  ;
                Name=Field6;
                SourceExpr=MATRIX_CellData[6];
                CaptionClass='3,' + MATRIX_CaptionSet[6];
                Visible=FieldVisible6;
                Editable=FieldEditable6;
                OnValidate=BEGIN
                             MATRIX_OnValidate(6);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(6);
                            END;
                             }

    { 1100528705;2;Field  ;
                Name=Field7;
                SourceExpr=MATRIX_CellData[7];
                CaptionClass='3,' + MATRIX_CaptionSet[7];
                Visible=FieldVisible7;
                Editable=FieldEditable7;
                OnValidate=BEGIN
                             MATRIX_OnValidate(7);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(7);
                            END;
                             }

    { 1100528704;2;Field  ;
                Name=Field8;
                SourceExpr=MATRIX_CellData[8];
                CaptionClass='3,' + MATRIX_CaptionSet[8];
                Visible=FieldVisible8;
                Editable=FieldEditable8;
                OnValidate=BEGIN
                             MATRIX_OnValidate(8);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(8);
                            END;
                             }

    { 1100528703;2;Field  ;
                Name=Field9;
                SourceExpr=MATRIX_CellData[9];
                CaptionClass='3,' + MATRIX_CaptionSet[9];
                Visible=FieldVisible9;
                Editable=FieldEditable9;
                OnValidate=BEGIN
                             MATRIX_OnValidate(9);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(9);
                            END;
                             }

    { 1100528702;2;Field  ;
                Name=Field10;
                SourceExpr=MATRIX_CellData[10];
                CaptionClass='3,' + MATRIX_CaptionSet[10];
                Visible=FieldVisible10;
                Editable=FieldEditable10;
                OnValidate=BEGIN
                             MATRIX_OnValidate(10);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(10);
                            END;
                             }

    { 1100528701;2;Field  ;
                Name=Field11;
                SourceExpr=MATRIX_CellData[11];
                CaptionClass='3,' + MATRIX_CaptionSet[11];
                Visible=FieldVisible11;
                Editable=FieldEditable11;
                OnValidate=BEGIN
                             MATRIX_OnValidate(11);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(11);
                            END;
                             }

    { 1100528700;2;Field  ;
                Name=Field12;
                SourceExpr=MATRIX_CellData[12];
                CaptionClass='3,' + MATRIX_CaptionSet[12];
                Visible=FieldVisible12;
                Editable=FieldEditable12;
                OnValidate=BEGIN
                             MATRIX_OnValidate(12);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(12);
                            END;
                             }

  }
  CODE
  {
    VAR
      MATRIX_MatrixRecord@1100528723 : Record 2000000007;
      MATRIX_MatrixRecords@1100528722 : ARRAY [32] OF Record 2000000007;
      MATRIX_CaptionSet@1100528718 : ARRAY [32] OF Text[80];
      MATRIX_CurrSetLength@1100528716 : Integer;
      MATRIX_CellData@1100528715 : ARRAY [32] OF Text[30];
      MATRIX_PeriodType@1100528712 : 'Day,Week,Month,Quarter,Year';
      FieldEditable1@1100528711 : Boolean INDATASET;
      FieldEditable2@1100528710 : Boolean INDATASET;
      FieldEditable3@1100528709 : Boolean INDATASET;
      FieldEditable4@1100528708 : Boolean INDATASET;
      FieldEditable5@1100528707 : Boolean INDATASET;
      FieldEditable6@1100528706 : Boolean INDATASET;
      FieldEditable7@1100528705 : Boolean INDATASET;
      FieldEditable8@1100528704 : Boolean INDATASET;
      FieldEditable9@1100528703 : Boolean INDATASET;
      FieldEditable10@1100528702 : Boolean INDATASET;
      FieldEditable11@1100528701 : Boolean INDATASET;
      FieldEditable12@1100528700 : Boolean INDATASET;
      FieldVisible1@1100409007 : Boolean INDATASET;
      FieldVisible2@1100409006 : Boolean INDATASET;
      FieldVisible3@1100409005 : Boolean INDATASET;
      FieldVisible4@1100409004 : Boolean INDATASET;
      FieldVisible5@1100409003 : Boolean INDATASET;
      FieldVisible6@1100409002 : Boolean INDATASET;
      FieldVisible7@1100409001 : Boolean INDATASET;
      FieldVisible8@1100409000 : Boolean INDATASET;
      FieldVisible9@1100409008 : Boolean INDATASET;
      FieldVisible10@1100409009 : Boolean INDATASET;
      FieldVisible11@1100409010 : Boolean INDATASET;
      FieldVisible12@1100409011 : Boolean INDATASET;
      TmpPlanLine@1100525006 : TEMPORARY Record 11020265;
      TableOption@1100525000 : 'Small Project,Action by,Customer';
      OutputOption@1100525005 : 'No. of Appointments,No.';
      StatusFilter@1100525004 : ' ,Not Printed,Printed';
      ProjectFilter@1100525003 : Code[250];
      CustomerFilter@1100525002 : Code[250];
      ActionByFilter@1100525001 : Code[250];

    PROCEDURE Load@1132(VAR CaptionSet@1005 : ARRAY [32] OF Text[80];VAR MatrixRecords@1006 : ARRAY [32] OF Record 2000000007;CurrSetLength@1007 : Integer;PeriodType@1100528700 : 'Day,Week,Month,Quarter,Year';TableOption2@1100525006 : Option;OutputOption2@1100525005 : Option;StatusFilter2@1100525004 : Option;ProjectFilter2@1100525003 : Code[250];CustomerFilter2@1100525002 : Code[250];ActionByFilter2@1100525001 : Code[250]);
    BEGIN
      CLEAR(MATRIX_CellData);
      COPYARRAY(MATRIX_CaptionSet, CaptionSet, 1);
      COPYARRAY(MATRIX_MatrixRecords, MatrixRecords, 1);

      MATRIX_CurrSetLength := CurrSetLength;

      //FOR I := 1 TO ARRAYLEN(MATRIX_MatrixRecords) DO   //Page not editable
      //  MATRIX_SetFieldEditable(I);

      MATRIX_SetFieldVisible;

      MATRIX_PeriodType := PeriodType;

      OutputOption := OutputOption2;
      IF (TableOption2 <> TableOption) OR
         (StatusFilter2 <> StatusFilter) OR
         (ProjectFilter2 <> ProjectFilter) OR
         (CustomerFilter2 <> CustomerFilter) OR
         (ActionByFilter2 <> ActionByFilter)
      THEN BEGIN
        TableOption := TableOption2;
        StatusFilter := StatusFilter2;
        ProjectFilter := ProjectFilter2;
        CustomerFilter := CustomerFilter2;
        ActionByFilter := ActionByFilter2;
        BuildTmpTable();
      END;
    END;

    LOCAL PROCEDURE MATRIX_OnAfterGetRecord@1135(ColumnNo@1010 : Integer);
    BEGIN
      MATRIX_MatrixRecord := MATRIX_MatrixRecords[ColumnNo];

      MATRIX_CellData[ColumnNo] := '';
      SetDateFilter();
      MATRIX_CellData[ColumnNo] := CalculateAppointments();
    END;

    LOCAL PROCEDURE MATRIX_OnValidate@1100525001(ColumnNo@1008 : Integer);
    BEGIN
      IF ColumnNo > MATRIX_CurrSetLength THEN
        EXIT;

      MATRIX_UpdateCell(ColumnNo);
    END;

    LOCAL PROCEDURE MATRIX_OnLookup@1100528701(ColumnNo@1100409000 : Integer);
    BEGIN
      // [Optional. Add function to corresponding trigger of matrix fields. Do not remove the function if you are not using it.]
    END;

    LOCAL PROCEDURE MATRIX_OnDrillDown@1100409000(ColumnNo@1100409000 : Integer);
    BEGIN
      // [Optional. Add function to corresponding trigger of matrix fields. Do not remove the function if you are not using it.]
      MATRIX_MatrixRecord := MATRIX_MatrixRecords[ColumnNo];

      SetDateFilter();
      TmpPlanLine.RESET;
      TmpPlanLine.SETFILTER(Date, GETFILTER("Date Filter"));
      CASE TableOption OF
        TableOption::"Small Project":
          BEGIN
            TmpPlanLine.SETRANGE("Project No.",Code);
          END;
        TableOption::"Action by":
          BEGIN
            TmpPlanLine.SETRANGE("Action By",Code);
          END;
        TableOption::Customer:
          BEGIN
            TmpPlanLine.SETRANGE(Customer,Code);
          END;
      END;

      PAGE.RUN(0,TmpPlanLine);
    END;

    LOCAL PROCEDURE MATRIX_OnAssistEdit@1100409001(ColumnNo@1100409000 : Integer);
    BEGIN
      // [Optional. Add function to corresponding trigger of matrix fields. Do not remove the function if you are not using it.]
    END;

    LOCAL PROCEDURE MATRIX_UpdateCell@1100485007(ColumnNo@1100528701 : Integer);
    BEGIN
      // No update
      //MATRIX_MatrixRecord := MATRIX_MatrixRecords[ColumnNo];
    END;

    LOCAL PROCEDURE MATRIX_SetFieldEditable@1100528700(ColumnNo@1100528700 : Integer);
    BEGIN
      {  //Page not editable
      CASE ColumnNo OF
        1: FieldEditable1 :=
      END;
      }
    END;

    LOCAL PROCEDURE MATRIX_SetFieldVisible@1100409002();
    BEGIN
      // Do not set matrix columns invisible. If the user changes the column width that will be lost when navigating.
    END;

    LOCAL PROCEDURE SetDateFilter@1100525004();
    BEGIN
      IF MATRIX_MatrixRecord."Period Start" = MATRIX_MatrixRecord."Period End" THEN
        SETRANGE("Date Filter",MATRIX_MatrixRecord."Period Start")
      ELSE
        SETRANGE("Date Filter",MATRIX_MatrixRecord."Period Start",MATRIX_MatrixRecord."Period End");
    END;

    LOCAL PROCEDURE BuildTmpTable@1100525000();
    VAR
      Proj@1100525000 : Record 11072003;
      ProjApp@1100525001 : Record 11012081;
      Empl@1100525002 : Record 5200;
      Vend@1100525003 : Record 23;
      CreatePlanLinesCU@1100525004 : Codeunit 11012067;
    BEGIN
      // Property 'SourceTableTemporary' is (must be) Yes!
      RESET;
      DELETEALL;
      TmpPlanLine.RESET;
      TmpPlanLine.DELETEALL;

      Proj.SETRANGE("Small Project",TRUE);
      IF ProjectFilter <> '' THEN
        Proj.SETFILTER("No.", ProjectFilter);
      IF CustomerFilter <> '' THEN
        Proj.SETFILTER("No.", CustomerFilter);
      IF StatusFilter <> 0 THEN
        Proj.SETRANGE("Small Project Status",StatusFilter-1)
      ELSE
        Proj.SETFILTER("Small Project Status",'<%1',Proj."Small Project Status"::Finished);
      IF Proj.FINDSET THEN BEGIN
        REPEAT
          ProjApp.SETRANGE("Project No.", Proj."No.");
          ProjApp.SETRANGE("Appointment Type", ProjApp."Appointment Type"::Execution);
          IF ActionByFilter <> '' THEN
            ProjApp.SETFILTER("Action by", ActionByFilter);
          IF ProjApp.FINDSET THEN BEGIN
            REPEAT
              CASE TableOption OF
                TableOption::"Small Project":
                  BEGIN
                    IF NOT GET(Proj."No.") THEN BEGIN
                      INIT;
                      Code := Proj."No.";
                      Description := Proj.Description;
                      INSERT;
                    END;
                  END;
                TableOption::Customer:
                  BEGIN
                    IF NOT GET(Proj."Bill-to Customer No.") THEN BEGIN
                      Proj.CALCFIELDS("Principal Name");
                      INIT;
                      Code := Proj."Bill-to Customer No.";
                      Description := Proj."Principal Name";
                      INSERT;
                    END;
                  END;
                TableOption::"Action by":
                  BEGIN
                    IF NOT GET(ProjApp."Action by") THEN BEGIN
                      INIT;
                      Code := ProjApp."Action by";
                      IF ProjApp."Internal/External Action" <> ProjApp."Internal/External Action"::External THEN BEGIN
                        IF Empl.GET(ProjApp."Action by") THEN
                          Description := Empl."Full Name";
                      END ELSE BEGIN
                        IF Vend.GET(ProjApp."Action by") THEN
                          Description := Vend.Name;
                      END;
                      INSERT;
                    END;
                  END;
              END;
              CreatePlanLinesCU.CreatePlanLine(TmpPlanLine, ProjApp, Proj);
            UNTIL ProjApp.NEXT = 0;
          END;
        UNTIL Proj.NEXT = 0;
      END;
    END;

    PROCEDURE CalculateAppointments@1100485001() NoAppointments : Text[30];
    VAR
      TmpTable@1100525000 : TEMPORARY Record 11020264;
      AppointmentsCount@1100485000 : Integer;
      NosCount@1100525001 : Integer;
    BEGIN
      TmpPlanLine.RESET;
      TmpPlanLine.SETFILTER(Date,GETFILTER("Date Filter"));
      CASE TableOption OF
        TableOption::"Small Project":
          TmpPlanLine.SETRANGE("Project No.",Code);
        TableOption::"Action by":
          TmpPlanLine.SETRANGE("Action By",Code);
        TableOption::Customer:
          TmpPlanLine.SETRANGE(Customer,Code);
      END;
      AppointmentsCount := TmpPlanLine.COUNT;
      IF AppointmentsCount = 0 THEN
        EXIT('');

      IF OutputOption = OutputOption::"No. of Appointments" THEN
        EXIT(FORMAT(AppointmentsCount))
      ELSE BEGIN
        IF AppointmentsCount = 1 THEN BEGIN
          TmpPlanLine.FINDFIRST;
          CASE TableOption OF
            TableOption::"Small Project":
              EXIT(TmpPlanLine."Action By");
            TableOption::"Action by":
              EXIT(TmpPlanLine."Project No.");
            TableOption::Customer:
              EXIT(TmpPlanLine."Project No.");
          END;
        END ELSE BEGIN
          TmpPlanLine.FINDSET;
          REPEAT
            IF TableOption = TableOption::"Small Project" THEN BEGIN
              IF NOT TmpTable.GET(TmpPlanLine."Action By") THEN BEGIN
                TmpTable.Code := TmpPlanLine."Action By";
                TmpTable.INSERT;
              END;
            END ELSE BEGIN
              IF NOT TmpTable.GET(TmpPlanLine."Project No.") THEN BEGIN
                TmpTable.Code := TmpPlanLine."Project No.";
                TmpTable.INSERT;
              END;
            END;
          UNTIL TmpPlanLine.NEXT = 0;
          NosCount := TmpTable.COUNT;
          IF NosCount = 1 THEN
            EXIT(TmpTable.Code)
          ELSE
            EXIT('[' + FORMAT(NosCount) + ']');
        END;
      END;
    END;

    BEGIN
    END.
  }
}

