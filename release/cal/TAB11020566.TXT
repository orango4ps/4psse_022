OBJECT Table 11020566 Ext. App. Keyword Translation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    CaptionML=[ENU=Ext. App. Keyword Translation;
               NOR=Oversettelse av ekst.progr.-n›kkelord;
               SVE=™vers„ttning av ext.progr.-nyckelord];
  }
  FIELDS
  {
    { 10  ;   ;Application         ;Option        ;CaptionML=[ENU=Application;
                                                              NOR=Utligning;
                                                              SVE=Koppling];
                                                   OptionCaptionML=[ENU=,Excel,Word,Powerpoint;
                                                                    NOR=,Excel,Word,Powerpoint;
                                                                    SVE=,Excel,Word,Powerpoint];
                                                   OptionString=,Excel,Word,Powerpoint }
    { 20  ;   ;Keyword             ;Text80        ;CaptionML=[ENU=Keyword;
                                                              NOR=N›kkelord;
                                                              SVE=Nyckelord] }
    { 30  ;   ;Language Code       ;Integer       ;TableRelation="Windows Language"."Language ID";
                                                   CaptionML=[ENU=Language Code;
                                                              NOR=Spr†kkode;
                                                              SVE=Spr†kkod] }
    { 40  ;   ;Translation         ;Text80        ;OnValidate=BEGIN
                                                                IF (Application IN [Application::Excel]) THEN
                                                                  Translation := UPPERCASE(Translation);
                                                              END;

                                                   CaptionML=[ENU=Translation;
                                                              NOR=Oversettelse;
                                                              SVE=™vers„ttning] }
  }
  KEYS
  {
    {    ;Application,Keyword,Language Code       ;Clustered=Yes }
    {    ;Application,Language Code                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE GetKeywordTranslation@1100526003(Application2@1100526003 : Option;Keyword2@1100526002 : Text[80];LanguageCode2@1100526000 : Integer) : Text[80];
    VAR
      ExtAppKeywordTranslation@1100526001 : Record 11020566;
      LanguageCodeFallBack@1100526004 : Integer;
    BEGIN
      IF ExtAppKeywordTranslation.GET(Application2,Keyword2,LanguageCode2) THEN
        EXIT(ExtAppKeywordTranslation.Translation);

      IF GetLanguageFallBack(LanguageCode2,LanguageCodeFallBack) THEN
        IF ExtAppKeywordTranslation.GET(Application2,Keyword2,LanguageCodeFallBack) THEN
          EXIT(ExtAppKeywordTranslation.Translation);

      EXIT(Keyword2);
    END;

    PROCEDURE CreateKeywords@1100526006(Application2@1100526001 : Option;LanguageCode2@1100526000 : Integer);
    BEGIN
      "Language Code" := LanguageCode2;
      TESTFIELD("Language Code");

      CASE Application2 OF
        Application::Excel: CreateExcelKeywords(LanguageCode2);
        Application::Word: CreateWordKeywords(LanguageCode2);
        Application::Powerpoint: CreatePowerPointKeywords(LanguageCode2);
      END;
    END;

    PROCEDURE CreateExcelKeywords@1100526002(LanguageCode2@1100526000 : Integer);
    BEGIN
      InsertKeyword(Application::Excel,'ABS',LanguageCode2);
      InsertKeyword(Application::Excel,'ADDRESS',LanguageCode2);
      InsertKeyword(Application::Excel,'RAND',LanguageCode2);
      InsertKeyword(Application::Excel,'ROUND',LanguageCode2);
      InsertKeyword(Application::Excel,'TODAY',LanguageCode2);
      InsertKeyword(Application::Excel,'CONCATENATE',LanguageCode2);
      InsertKeyword(Application::Excel,'DATE',LanguageCode2);
      InsertKeyword(Application::Excel,'RIGHT',LanguageCode2);
      InsertKeyword(Application::Excel,'STDEV',LanguageCode2);
      InsertKeyword(Application::Excel,'STDEVP',LanguageCode2);
      InsertKeyword(Application::Excel,'ERROR',LanguageCode2);
      InsertKeyword(Application::Excel,'AND',LanguageCode2);
      InsertKeyword(Application::Excel,'EXP',LanguageCode2);
      InsertKeyword(Application::Excel,'FALSE',LanguageCode2);
      InsertKeyword(Application::Excel,'LEFT',LanguageCode2);
      InsertKeyword(Application::Excel,'GROUP',LanguageCode2);
      InsertKeyword(Application::Excel,'INDEX',LanguageCode2);
      InsertKeyword(Application::Excel,'INDIRECT',LanguageCode2);
      InsertKeyword(Application::Excel,'WEEKDAY',LanguageCode2);
      InsertKeyword(Application::Excel,'MAX',LanguageCode2);
      InsertKeyword(Application::Excel,'MEDIAN',LanguageCode2);
      InsertKeyword(Application::Excel,'MIN',LanguageCode2);
      InsertKeyword(Application::Excel,'MOD',LanguageCode2);
      InsertKeyword(Application::Excel,'AVERAGE',LanguageCode2);
      InsertKeyword(Application::Excel,'COUNT',LanguageCode2);
      InsertKeyword(Application::Excel,'COUNTIF',LanguageCode2);
      InsertKeyword(Application::Excel,'LEN',LanguageCode2);
      InsertKeyword(Application::Excel,'NOT',LanguageCode2);
      InsertKeyword(Application::Excel,'OR',LanguageCode2);
      InsertKeyword(Application::Excel,'PRODUCT',LanguageCode2);
      InsertKeyword(Application::Excel,'POWER',LanguageCode2);
      InsertKeyword(Application::Excel,'SQRT',LanguageCode2);
      InsertKeyword(Application::Excel,'LOOKUP',LanguageCode2);
      InsertKeyword(Application::Excel,'HLOOKUP',LanguageCode2);
      InsertKeyword(Application::Excel,'VLOOKUP',LanguageCode2);
      InsertKeyword(Application::Excel,'IF',LanguageCode2);
      InsertKeyword(Application::Excel,'SUM',LanguageCode2);
      InsertKeyword(Application::Excel,'SUMIF',LanguageCode2);
      InsertKeyword(Application::Excel,'SUMPRODUCT',LanguageCode2);
      InsertKeyword(Application::Excel,'SUBTOTAL',LanguageCode2);
      InsertKeyword(Application::Excel,'MID',LanguageCode2);
      InsertKeyword(Application::Excel,'TRIM',LanguageCode2);
      InsertKeyword(Application::Excel,'TEXT',LanguageCode2);
      InsertKeyword(Application::Excel,'VAR',LanguageCode2);
      InsertKeyword(Application::Excel,'VARP',LanguageCode2);
      InsertKeyword(Application::Excel,'TRUE',LanguageCode2);
    END;

    PROCEDURE CreateWordKeywords@1100526005(LanguageCode2@1100526000 : Integer);
    BEGIN
      //Add Word keywords here
      InsertKeyword(Application::Word,'XXX',LanguageCode2);
    END;

    PROCEDURE CreatePowerPointKeywords@1100526004(LanguageCode2@1100526000 : Integer);
    BEGIN
      //Add PowerPoint keywords here
      InsertKeyword(Application::Powerpoint,'XXX',LanguageCode2);
    END;

    PROCEDURE InsertKeyword@1100526001(Application2@1100526000 : Option;Keyword2@1100526001 : Text[80];LanguageCode2@1100526002 : Integer);
    VAR
      ExtAppKeywordTranslation@1100526003 : Record 11020566;
    BEGIN
      ExtAppKeywordTranslation.Application := Application2;
      ExtAppKeywordTranslation.Keyword := Keyword2;
      ExtAppKeywordTranslation."Language Code" := LanguageCode2;
      IF ExtAppKeywordTranslation.INSERT THEN;
    END;

    PROCEDURE GetDefaultExcelTranslation@1100525000(Function2@1100526000 : Text[80];LanguageID2@1100526001 : Integer) : Text[80];
    VAR
      LanguageNo@1100526002 : Integer;
    BEGIN
      CASE LanguageID2 OF
        1033:
          LanguageNo := 1; //ENU
        1043,2067:
          LanguageNo := 2; //NLD,NLB
        1031:
          LanguageNo := 3; //DEU
        1036,2060:
          LanguageNo := 4; //FRA,FRB
        ELSE
          EXIT('');
      END;

      EXIT(DELCHR(GetEncodedExcelTranslation(Function2,LanguageNo),'=','~#!'));
    END;

    PROCEDURE GetEncodedExcelTranslation@1100526000(Function2@1100526000 : Text[80];LanguageNo@1100526001 : Integer) : Text[80];
    BEGIN
      //~!# characters needed to work around bug in selectstring requiring strings to be unique
      CASE Function2 OF
        'ABS': EXIT(SELECTSTR(LanguageNo,'ABS,~ABS,!ABS,#ABS'));
        'ADDRESS': EXIT(SELECTSTR(LanguageNo,'ADDRESS,~ADRES,!ADRESSE,#ADRESSE'));
        'RAND': EXIT(SELECTSTR(LanguageNo,'RAND,~ASELECT,!ZUFALLSZAHL,#ALEA'));
        'ROUND': EXIT(SELECTSTR(LanguageNo,'ROUND,~AFRONDEN,!RUNDEN,#ARRONDI'));
        'TODAY': EXIT(SELECTSTR(LanguageNo,'TODAY,~VANDAAG,!HEUTE,#AUJOURDHUI'));
        'CONCATENATE': EXIT(SELECTSTR(LanguageNo,'CONCATENATE,~TEKST.SAMENVOEGEN,!VERKETTEN,#CONCATENER'));
        'DATE': EXIT(SELECTSTR(LanguageNo,'DATE,~DATUM,!DATUM,#DATE'));
        'RIGHT': EXIT(SELECTSTR(LanguageNo,'RIGHT,~RECHTS,!RECHTS,#DROITE'));
        'STDEV': EXIT(SELECTSTR(LanguageNo,'STDEV,~STDEV,!STABW,#ECARTYPE'));
        'STDEVP': EXIT(SELECTSTR(LanguageNo,'STDEVP,~STDEVP,!STABWN,#ECARTYPEP'));
        'ERROR': EXIT(SELECTSTR(LanguageNo,'ERROR,~FOUT,!FEHLER,#ERREUR'));
        'AND': EXIT(SELECTSTR(LanguageNo,'AND,~EN,!UND,#ET'));
        'EXP': EXIT(SELECTSTR(LanguageNo,'EXP,~EXP,!EXP,#EXP'));
        'FALSE': EXIT(SELECTSTR(LanguageNo,'FALSE,~ONWAAR,!FALSCH,#FAUX'));
        'LEFT': EXIT(SELECTSTR(LanguageNo,'LEFT,~LINKS,!LINKS,#GAUCHE'));
        'GROUP': EXIT(SELECTSTR(LanguageNo,'GROUP,~GROEPEREN,!GRUPPIEREN,#GROUPER'));
        'INDEX': EXIT(SELECTSTR(LanguageNo,'INDEX,~INDEX,!INDEX,#INDEX'));
        'INDIRECT': EXIT(SELECTSTR(LanguageNo,'INDIRECT,~INDIRECT,!INDIREKT,#INDIRECT'));
        'WEEKDAY': EXIT(SELECTSTR(LanguageNo,'WEEKDAY,~WEEKDAG,!WOCHENTAG,#JOURSEM'));
        'MAX': EXIT(SELECTSTR(LanguageNo,'MAX,~MAX,!MAX,#MAX'));
        'MEDIAN': EXIT(SELECTSTR(LanguageNo,'MEDIAN,~MEDIAAN,!MEDIAN,#MEDIANE'));
        'MIN': EXIT(SELECTSTR(LanguageNo,'MIN,~MIN,!MIN,#MIN'));
        'MOD': EXIT(SELECTSTR(LanguageNo,'MOD,~REST,!REST,#MOD'));
        'AVERAGE': EXIT(SELECTSTR(LanguageNo,'AVERAGE,~GEMIDDELDE,!MITTELWERT,#MOYENNE'));
        'COUNT': EXIT(SELECTSTR(LanguageNo,'COUNT,~AANTAL,!ANZAHL,#NB'));
        'COUNTIF': EXIT(SELECTSTR(LanguageNo,'COUNTIF,~AANTAL.ALS,!ZŽHLENWENN,#NB.SI'));
        'LEN': EXIT(SELECTSTR(LanguageNo,'LEN,~LENGTE,!LŽNGE,#NBCAR'));
        'NOT': EXIT(SELECTSTR(LanguageNo,'NOT,~NIET,!NICHT,#NON'));
        'OR': EXIT(SELECTSTR(LanguageNo,'OR,~OF,!ODER,#OU'));
        'PRODUCT': EXIT(SELECTSTR(LanguageNo,'PRODUCT,~PRODUKT,!PRODUKT,#PRODUIT'));
        'POWER': EXIT(SELECTSTR(LanguageNo,'POWER,~MACHT,!POTENZ,#PUISSANCE'));
        'SQRT': EXIT(SELECTSTR(LanguageNo,'SQRT,~WORTEL,!WURZEL,#RACINE'));
        'LOOKUP': EXIT(SELECTSTR(LanguageNo,'LOOKUP,~ZOEKEN,!VERWEIS,#RECHERCHE'));
        'HLOOKUP': EXIT(SELECTSTR(LanguageNo,'HLOOKUP,~HORIZ.ZOEKEN,!WVERWEIS,#RECHERCHEH'));
        'VLOOKUP': EXIT(SELECTSTR(LanguageNo,'VLOOKUP,~VERT.ZOEKEN,!SVERWEIS,#RECHERCHEV'));
        'IF': EXIT(SELECTSTR(LanguageNo,'IF,~ALS,!WENN,#SI'));
        'SUM': EXIT(SELECTSTR(LanguageNo,'SUM,~SOM,!SUMME,#SOMME'));
        'SUMIF': EXIT(SELECTSTR(LanguageNo,'SUMIF,~SOM.ALS,!SUMMEWENN,#SOMME.SI'));
        'SUMPRODUCT': EXIT(SELECTSTR(LanguageNo,'SUMPRODUCT,~SOMPRODUCT,!SUMMENPRODUKT,#SOMMEPROD'));
        'SUBTOTAL': EXIT(SELECTSTR(LanguageNo,'SUBTOTAL,~SUBTOTAAL,!TEILERGEBNIS,#SOUS.TOTAL'));
        'MID': EXIT(SELECTSTR(LanguageNo,'MID,~DEEL,!TEIL,#STXT'));
        'TRIM': EXIT(SELECTSTR(LanguageNo,'TRIM,~SPATIES.WISSEN,!GLŽTTEN,#SUPPRESPACE'));
        'TEXT': EXIT(SELECTSTR(LanguageNo,'TEXT,~TEKST,!TEXT,#TEXTE'));
        'VAR': EXIT(SELECTSTR(LanguageNo,'VAR,~VAR,!VARIANZ,#VAR'));
        'VARP': EXIT(SELECTSTR(LanguageNo,'VARP,~VARP,!VARIANZEN,#VAR.P'));
        'TRUE': EXIT(SELECTSTR(LanguageNo,'TRUE,~WAAR,!WAHR,#VRAI'));
        ELSE
          EXIT('');
      END;
    END;

    PROCEDURE TranslateDefaults@1100525003();
    VAR
      ExtAppKeywordTranslation@1100526000 : Record 11020566;
      ExtAppKeywordTranslation2@1100526001 : Record 11020566;
    BEGIN
      ExtAppKeywordTranslation.SETFILTER(Translation,'=%1','');
      IF NOT ExtAppKeywordTranslation.FINDSET(TRUE) THEN
        EXIT;

      REPEAT
        ExtAppKeywordTranslation2 := ExtAppKeywordTranslation;
        CASE ExtAppKeywordTranslation2.Application OF
          ExtAppKeywordTranslation2.Application::Excel:
            ExtAppKeywordTranslation2.Translation :=
              GetDefaultExcelTranslation(
                ExtAppKeywordTranslation2.Keyword,
                ExtAppKeywordTranslation2."Language Code");
          ExtAppKeywordTranslation2.Application::Word:;
          ExtAppKeywordTranslation2.Application::Powerpoint:;
        END;
        IF ExtAppKeywordTranslation2.Translation <> '' THEN
          ExtAppKeywordTranslation2.MODIFY;
      UNTIL ExtAppKeywordTranslation.NEXT = 0;
    END;

    PROCEDURE GetLanguageFallBack@1100525001(InitialLanguage@1100526000 : Integer;FallBackLanguage@1100526001 : Integer) : Boolean;
    VAR
      WindowsLanguage@1100526002 : Record 2000000045;
    BEGIN
      IF WindowsLanguage.GET(InitialLanguage) THEN BEGIN
        FallBackLanguage := WindowsLanguage."Primary Language ID";
        EXIT(TRUE)
      END ELSE
        EXIT(FALSE);
    END;

    PROCEDURE InsertDefaults@1100525002();
    BEGIN
      CreateExcelKeywords(1033);
      CreateExcelKeywords(1043);
      CreateExcelKeywords(1031);
      CreateExcelKeywords(1036);

      TranslateDefaults;
    END;

    BEGIN
    END.
  }
}

