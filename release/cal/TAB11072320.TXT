OBJECT Table 11072320 Service Order Plant Part
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ServiceOrderPlantPart@1100529000 : Record 11072320;
             BEGIN
               TESTFIELD("Service Order No.");
               TESTFIELD("Plant Part");
               IF ("Line No." = 0) OR ServiceOrderPlantPart.GET("Service Order No.", "Line No.") THEN BEGIN
                 ServiceOrderPlantPart.SETRANGE("Service Order No.", "Service Order No.");
                 IF NOT ServiceOrderPlantPart.FINDLAST THEN
                   ServiceOrderPlantPart."Line No." := 0;
                 "Line No." := ServiceOrderPlantPart."Line No." + 10000;
               END;
             END;

    OnRename=VAR
               ServiceOrderPlantPartText@1100529000 : Record 11072321;
             BEGIN
               ServiceOrderPlantPartText.SETRANGE("Service Order No.", "Service Order No.");
               ServiceOrderPlantPartText.SETRANGE("Plant Part Line No.", "Line No.");
               ServiceOrderPlantPartText.DELETEALL;
             END;

    CaptionML=ENU=Service Order Plant Part;
  }
  FIELDS
  {
    { 10  ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order";
                                                   CaptionML=[ENU=Service Order No.;
                                                              NOR=Serviceordrenr.;
                                                              SVE=Serviceordernr] }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 30  ;   ;Plant Part          ;Code30        ;TableRelation="Plant Part";
                                                   OnValidate=VAR
                                                                PlantPartPlantLevel@1100529000 : Record 11229932;
                                                              BEGIN
                                                                IF "Plant Part" <> '' THEN BEGIN
                                                                  GetServiceOrder;
                                                                  ServiceOrder.TESTFIELD("Plant Type");
                                                                  ServiceOrder.TESTFIELD("Plant Number");
                                                                  PlantPartPlantLevel.CHANGECOMPANY(ServiceOrder."Plant Company");
                                                                  PlantPartPlantLevel.GET(PlantPartPlantLevel.Level::PlantNumber, ServiceOrder."Plant Type", ServiceOrder."Plant Number", "Plant Part");
                                                                  CheckProblemOfPlantPart;
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupPlantPart(TRUE);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Plant Part;
                                                              NOR=Maskindel;
                                                              SVE=Maskindel];
                                                   NotBlank=Yes }
    { 31  ;   ;Plant Part Description;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Part".Description WHERE (Code=FIELD(Plant Part)));
                                                   OnLookup=BEGIN
                                                              LookupPlantPartDescription;
                                                            END;

                                                   CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning];
                                                   Editable=No }
    { 40  ;   ;Problem             ;Code10        ;TableRelation="Service Analysis".Code WHERE (Analysis Type=CONST(Problem));
                                                   OnValidate=BEGIN
                                                                CheckProblemOfPlantPart;
                                                                CALCFIELDS("Problem Description");
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupProblem(TRUE);
                                                            END;

                                                   CaptionML=[ENU=Problem;
                                                              NOR=Problem;
                                                              SVE=Problem] }
    { 41  ;   ;Problem Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Analysis".Description WHERE (Analysis Type=CONST(Problem),
                                                                                                            Code=FIELD(Problem)));
                                                   CaptionML=[ENU=Problem Description;
                                                              NOR=Problembeskrivelse;
                                                              SVE=Problembeskrivning];
                                                   Editable=No }
    { 50  ;   ;Cause               ;Code10        ;TableRelation="Service Analysis".Code WHERE (Analysis Type=CONST(Cause));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Cause Description");
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupCause(TRUE);
                                                            END;

                                                   CaptionML=[ENU=Cause;
                                                              NOR=èrsak;
                                                              SVE=Orsak] }
    { 51  ;   ;Cause Description   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Analysis".Description WHERE (Analysis Type=CONST(Cause),
                                                                                                            Code=FIELD(Cause)));
                                                   CaptionML=[ENU=Cause Description;
                                                              NOR=èrsaksbeskrivelse;
                                                              SVE=Orsaksbeskrivning];
                                                   Editable=No }
    { 60  ;   ;Solution            ;Code10        ;TableRelation="Service Analysis".Code WHERE (Analysis Type=CONST(Solution));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Solution Description");
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupSolution(TRUE);
                                                            END;

                                                   CaptionML=[ENU=Solution;
                                                              NOR=Lõsning;
                                                              SVE=Lîsning] }
    { 61  ;   ;Solution Description;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Analysis".Description WHERE (Analysis Type=CONST(Solution),
                                                                                                            Code=FIELD(Solution)));
                                                   CaptionML=ENU=Solution Description;
                                                   Editable=No }
    { 70  ;   ;Maintenance Scheme  ;Code20        ;TableRelation="SO Plant Maintenance Scheme"."Maintenance Scheme" WHERE (Service Order No.=FIELD(Service Order No.));
                                                   OnLookup=VAR
                                                              SOPlantMaintenanceScheme@1100529000 : Record 11072210;
                                                            BEGIN
                                                              TESTFIELD("Service Order No.");
                                                              SOPlantMaintenanceScheme.FILTERGROUP(9);
                                                              SOPlantMaintenanceScheme.SETRANGE("Service Order No.", "Service Order No.");
                                                              SOPlantMaintenanceScheme.FILTERGROUP(0);
                                                              SOPlantMaintenanceScheme."Service Order No." := "Service Order No.";
                                                              SOPlantMaintenanceScheme."Maintenance Scheme" := "Maintenance Scheme";
                                                              IF PAGE.RUNMODAL(PAGE::"SO Plant Maint. Schemes", SOPlantMaintenanceScheme) = ACTION::LookupOK THEN
                                                                VALIDATE("Maintenance Scheme", SOPlantMaintenanceScheme."Maintenance Scheme");
                                                            END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Maintenance Scheme;
                                                              SVE=UnderhÜllsschema] }
  }
  KEYS
  {
    {    ;Service Order No.,Line No.              ;Clustered=Yes }
    {    ;Service Order No.,Plant Part             }
    {    ;Service Order No.,Maintenance Scheme,Plant Part }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ServiceOrder@1100529000 : Record 11012823;

    LOCAL PROCEDURE GetServiceOrder@1100529004();
    BEGIN
      ServiceOrder.GET("Service Order No.");
    END;

    PROCEDURE LookupPlantPart@1100529000(EditableMode@1100529000 : Boolean);
    VAR
      PlantPartPlantLevel@1100529001 : Record 11229932;
    BEGIN
      GetServiceOrder;
      PlantPartPlantLevel.CHANGECOMPANY(ServiceOrder."Plant Company");
      PlantPartPlantLevel.FILTERGROUP(4);
      PlantPartPlantLevel.SETRANGE(Level, PlantPartPlantLevel.Level::PlantNumber);
      PlantPartPlantLevel.SETRANGE("Plant Type", ServiceOrder."Plant Type");
      PlantPartPlantLevel.SETRANGE("Plant No.", ServiceOrder."Plant Number");
      PlantPartPlantLevel.FILTERGROUP(0);
      PlantPartPlantLevel.Level := PlantPartPlantLevel.Level::PlantNumber;
      PlantPartPlantLevel."Plant Type" := ServiceOrder."Plant Type";
      PlantPartPlantLevel."Plant No." := ServiceOrder."Plant Number";
      PlantPartPlantLevel."Plant Part" := "Plant Part";
      IF NOT EditableMode THEN
        PAGE.RUNMODAL(PAGE::"Plant Number Part List", PlantPartPlantLevel)
      ELSE BEGIN
        IF PAGE.RUNMODAL(PAGE::"Plant Number Part List", PlantPartPlantLevel) = ACTION::LookupOK THEN BEGIN
          IF (PlantPartPlantLevel."Plant Part" <> '') AND (PlantPartPlantLevel."Plant Part" <> "Plant Part") THEN
            VALIDATE("Plant Part", PlantPartPlantLevel."Plant Part");
        END;
      END;
    END;

    LOCAL PROCEDURE CheckProblemOfPlantPart@1100529001();
    VAR
      PlantPartProblem@1100529001 : Record 11229931;
    BEGIN
      IF Problem = '' THEN
        EXIT;
      GetServiceOrder;
      PlantPartProblem.CHANGECOMPANY(ServiceOrder."Plant Company");
      CASE GetPlantPartProblemLevel OF
        PlantPartProblem.Level::PlantNumber:
          PlantPartProblem.GET(PlantPartProblem.Level::PlantNumber, ServiceOrder."Plant Type", ServiceOrder."Plant Number", "Plant Part", Problem);
        PlantPartProblem.Level::PlantType:
          PlantPartProblem.GET(PlantPartProblem.Level::PlantType, ServiceOrder."Plant Type", '', "Plant Part", Problem);
        PlantPartProblem.Level::General:
          PlantPartProblem.GET(PlantPartProblem.Level::General, '', '', "Plant Part", Problem);
      END;
    END;

    LOCAL PROCEDURE LookupProblem@1100529002(EditableMode@1100529000 : Boolean);
    VAR
      ServiceAnalysis@1100529003 : Record 11012842;
      PlantPartProblem@1100529002 : Record 11229931;
      ProblemLevel@1100529001 : Option;
    BEGIN
      GetServiceOrder;
      PlantPartProblem.CHANGECOMPANY(ServiceOrder."Plant Company");
      ProblemLevel := GetPlantPartProblemLevel;
      IF ProblemLevel < 0 THEN BEGIN
        ServiceAnalysis.Code := Problem;
        IF NOT EditableMode THEN
          PAGE.RUNMODAL(PAGE::"Service Analysis (Problem)", ServiceAnalysis)
        ELSE BEGIN
          IF PAGE.RUNMODAL(PAGE::"Service Analysis (Problem)", ServiceAnalysis) = ACTION::LookupOK THEN BEGIN
            IF (ServiceAnalysis.Code <> '') AND (ServiceAnalysis.Code <> Problem) THEN
              VALIDATE(Problem, ServiceAnalysis.Code);
          END;
        END;
      END ELSE BEGIN
        PlantPartProblem.FILTERGROUP(4);
        PlantPartProblem.SETRANGE(Level, ProblemLevel);
        PlantPartProblem.SETRANGE("Plant Part", "Plant Part");
        CASE ProblemLevel OF
          PlantPartProblem.Level::PlantNumber:
            BEGIN
              PlantPartProblem.SETRANGE("Plant Type", ServiceOrder."Plant Type");
              PlantPartProblem.SETRANGE("Plant No.", ServiceOrder."Plant Number");
            END;
          PlantPartProblem.Level::PlantType:
            BEGIN
              PlantPartProblem.SETRANGE("Plant Type", ServiceOrder."Plant Type");
              PlantPartProblem.SETRANGE("Plant No.", '');
            END;
          PlantPartProblem.Level::General:
            BEGIN
              PlantPartProblem.SETRANGE("Plant Type", '');
              PlantPartProblem.SETRANGE("Plant No.", '');
            END;
        END;
        PlantPartProblem.FILTERGROUP(0);
        PlantPartProblem.Problem := Problem;
        IF NOT EditableMode THEN
          PAGE.RUNMODAL(PAGE::"Plant Part Problem List", PlantPartProblem)
        ELSE BEGIN
          IF PAGE.RUNMODAL(PAGE::"Plant Part Problem List", PlantPartProblem) = ACTION::LookupOK THEN BEGIN
            IF (PlantPartProblem.Problem <> '') AND (PlantPartProblem.Problem <> Problem) THEN
            VALIDATE(Problem, PlantPartProblem.Problem);
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE GetPlantPartProblemLevel@1100529003() : Integer;
    VAR
      PlantPartProblem@1100529000 : Record 11229931;
      Level@1100529001 : Integer;
    BEGIN
      GetServiceOrder;
      PlantPartProblem.CHANGECOMPANY(ServiceOrder."Plant Company");
      IF (ServiceOrder."Plant Type" <> '') AND (ServiceOrder."Plant Number" <> '') AND ("Plant Part" <> '') THEN BEGIN
        PlantPartProblem.SETRANGE(Level, PlantPartProblem.Level::PlantNumber);
        PlantPartProblem.SETRANGE("Plant Type", ServiceOrder."Plant Type");
        PlantPartProblem.SETRANGE("Plant No.", ServiceOrder."Plant Number");
        PlantPartProblem.SETRANGE("Plant Part", "Plant Part");
        PlantPartProblem.SETFILTER(Problem, '<>%1', '');
        FOR Level := 1 TO 3 DO BEGIN
          IF Level = 2 THEN BEGIN
            PlantPartProblem.SETRANGE(Level, PlantPartProblem.Level::PlantType);
            PlantPartProblem.SETRANGE("Plant No.", '');
          END;
          IF Level = 3 THEN BEGIN
            PlantPartProblem.SETRANGE(Level, PlantPartProblem.Level::General);
            PlantPartProblem.SETRANGE("Plant Type", '');
          END;
          IF PlantPartProblem.FINDFIRST THEN
            EXIT(PlantPartProblem.Level);
        END;
      END;
      EXIT(-1);
    END;

    LOCAL PROCEDURE LookupCause@1100529007(EditableMode@1100529000 : Boolean);
    VAR
      ServiceAnalysis@1100529001 : Record 11012842;
    BEGIN
      ServiceOrder.GetFilteredCausesByProblem(Problem, ServiceAnalysis);
      ServiceAnalysis.Code := Cause;
      IF NOT EditableMode THEN
        PAGE.RUNMODAL(PAGE::"Service Analysis (Cause)", ServiceAnalysis)
      ELSE BEGIN
        IF PAGE.RUNMODAL(PAGE::"Service Analysis (Cause)", ServiceAnalysis) = ACTION::LookupOK THEN BEGIN
          IF (ServiceAnalysis.Code <> '') AND (ServiceAnalysis.Code <> Cause) THEN
            VALIDATE(Cause, ServiceAnalysis.Code);
        END;
      END;
    END;

    LOCAL PROCEDURE LookupSolution@1100529008(EditableMode@1100529000 : Boolean);
    VAR
      ServiceAnalysis@1100529001 : Record 11012842;
    BEGIN
      ServiceOrder.GetFilteredSolutionsByProblemCause(Problem, Cause, ServiceAnalysis);
      ServiceAnalysis.Code := Solution;
      IF NOT EditableMode THEN
        PAGE.RUNMODAL(PAGE::"Service Analysis (Solution)", ServiceAnalysis)
      ELSE BEGIN
        IF PAGE.RUNMODAL(PAGE::"Service Analysis (Solution)", ServiceAnalysis) = ACTION::LookupOK THEN BEGIN
          IF (ServiceAnalysis.Code <> '') AND (ServiceAnalysis.Code <> Solution) THEN
            VALIDATE(Solution, ServiceAnalysis.Code);
        END;
      END;
    END;

    PROCEDURE GetPlantPartDescription@1100529600() : Text;
    VAR
      PlantPart@1100529600 : Record 11229930;
    BEGIN
      IF "Plant Part" = '' THEN
        EXIT('');
      GetServiceOrder;
      IF (ServiceOrder."Plant Company" = '') OR (ServiceOrder."Plant Company" = COMPANYNAME) THEN BEGIN
        CALCFIELDS("Plant Part Description");
        EXIT("Plant Part Description");
      END;
      PlantPart.CHANGECOMPANY(ServiceOrder."Plant Company");
      IF PlantPart.GET("Plant Part") THEN
        EXIT(PlantPart.Description);
      EXIT('');
    END;

    LOCAL PROCEDURE LookupPlantPartDescription@1100529606();
    VAR
      PlantPart@1100529600 : Record 11229930;
    BEGIN
      GetServiceOrder;
      PlantPart.CHANGECOMPANY(ServiceOrder."Plant Company");
      PlantPart.SETRANGE(Code, "Plant Part");
      PAGE.RUN(0, PlantPart);
    END;

    BEGIN
    END.
  }
}

