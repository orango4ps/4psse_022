OBJECT Codeunit 431 IC Outbox Export
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.01;
  }
  PROPERTIES
  {
    TableNo=414;
    OnRun=VAR
            ConfirmManagement@1000 : Codeunit 27;
          BEGIN
            IF NOT ConfirmManagement.ConfirmProcess(Text003,TRUE) THEN
              EXIT;
            RunOutboxTransactions(Rec);
          END;

  }
  CODE
  {
    VAR
      Text001@1000 : TextConst 'ENU=Intercompany transactions from %1.;NOR=Konserninterne transaksjoner fra %1.;SVE=Koncerninterna transaktioner fr†n %1.';
      Text002@1001 : TextConst 'ENU=Attached to this mail is an xml file containing one or more intercompany transactions from %1 (%2 %3).;NOR=Vedlagt i denne e-postmeldingen finner du en XML-fil som inneholder ‚n eller flere konserninterne transaksjoner fra %1 (%2 %3).;SVE=Bifogat i det h„r e-postmeddelandet finns en XML-fil som inneh†ller en eller flera koncerninterna transaktioner fr†n %1 (%2 %3).';
      Text003@1002 : TextConst 'ENU=Do you want to complete line actions?;NOR=Vil du fullf›re linjehandlinger?;SVE=Vill du slutf”ra rad†tg„rderna?';
      CompanyInfo@1003 : Record 79;
      ICInboxOutboxMgt@1004 : Codeunit 427;
      FileMgt@1005 : Codeunit 419;
      FolderPathMissingErr@1006 : TextConst '@@@="%1=Intercompany Code";ENU="Folder Path must have a value in IC Partner: Code=%1. It cannot be zero or empty.";NOR="Mappebane m† ha en verdi i KI-partner: Kode=%1. Feltet kan ikke v‘re null eller tomt."';
      EmailAddressMissingErr@1007 : TextConst '@@@="%1=Intercompany Code";ENU="Email Address must have a value in IC Partner: Code=%1. It cannot be zero or empty.";NOR="E-postadresse m† ha en verdi i KI-partner: Kode=%1. Feltet kan ikke v‘re null eller tomt."';

    [Internal]
    PROCEDURE RunOutboxTransactions@6(VAR ICOutboxTransaction@1002 : Record 414);
    VAR
      CopyICOutboxTransaction@1001 : Record 414;
    BEGIN
      CompanyInfo.GET;
      CopyICOutboxTransaction.COPY(ICOutboxTransaction);
      CopyICOutboxTransaction.SETRANGE("Line Action",
        CopyICOutboxTransaction."Line Action"::"Send to IC Partner");
      UpdateICStatus(CopyICOutboxTransaction);
      OnRunOutboxTransactionsOnBeforeSend(CopyICOutboxTransaction);
      SendToExternalPartner(CopyICOutboxTransaction);
      SendToInternalPartner(CopyICOutboxTransaction);
      CopyICOutboxTransaction.SETRANGE("Line Action",
        CopyICOutboxTransaction."Line Action"::"Return to Inbox");
      ReturnToInbox(CopyICOutboxTransaction);
      CancelTrans(CopyICOutboxTransaction);
    END;

    LOCAL PROCEDURE ModifyAndRunOutboxTransactionNo@7(ICOutboxTransactionNo@1002 : Integer);
    VAR
      ICOutboxTransaction@1001 : Record 414;
    BEGIN
      ICOutboxTransaction.SETRANGE("Transaction No.",ICOutboxTransactionNo);
      IF ICOutboxTransaction.FINDFIRST THEN BEGIN
        ICOutboxTransaction."Line Action" := ICOutboxTransaction."Line Action"::"Send to IC Partner";
        ICOutboxTransaction.MODIFY;
        RunOutboxTransactions(ICOutboxTransaction);
      END;
    END;

    [Internal]
    PROCEDURE ProcessAutoSendOutboxTransactionNo@9(ICOutboxTransactionNo@1002 : Integer);
    BEGIN
      CompanyInfo.GET;
      IF CompanyInfo."Auto. Send Transactions" THEN
        ModifyAndRunOutboxTransactionNo(ICOutboxTransactionNo);
    END;

    LOCAL PROCEDURE SendToExternalPartner@1(VAR ICOutboxTrans@1000 : Record 414);
    VAR
      ICPartner@1006 : Record 413;
      EmailItem@1013 : Record 9500;
      MailHandler@1005 : Codeunit 397;
      DocumentMailing@1012 : Codeunit 260;
      PermissionManager@1011 : Codeunit 9002;
      ICOutboxExportXML@1004 : XMLport 12;
      EmailDialog@1014 : Page 9700;
      Ostr@1001 : OutStream;
      OFile@1003 : File;
      FileName@1002 : Text;
      ICPartnerFilter@1007 : Text[1024];
      i@1008 : Integer;
      ToName@1009 : Text[100];
      CcName@1010 : Text[100];
      OutFileName@1015 : Text;
    BEGIN
      ICPartner.SETFILTER("Inbox Type",'<>%1',ICPartner."Inbox Type"::Database);
      ICPartnerFilter := ICOutboxTrans.GETFILTER("IC Partner Code");
      IF ICPartnerFilter <> '' THEN
        ICPartner.SETFILTER(Code,ICPartnerFilter);
      IF ICPartner.FIND('-') THEN
        REPEAT
          ICOutboxTrans.SETRANGE("IC Partner Code",ICPartner.Code);
          IF ICOutboxTrans.FIND('-') THEN BEGIN
            IF (ICPartner."Inbox Type" = ICPartner."Inbox Type"::"File Location") AND
               NOT PermissionManager.SoftwareAsAService
            THEN BEGIN
              ICPartner.TESTFIELD(Blocked,FALSE);
              IF ICPartner."Inbox Details" = '' THEN
                ERROR(FolderPathMissingErr,ICPartner.Code);
              i := 1;
              WHILE i <> 0 DO BEGIN
                FileName :=
                  STRSUBSTNO('%1\%2_%3_%4.xml',ICPartner."Inbox Details",ICPartner.Code,ICOutboxTrans."Transaction No.",i);
                IF EXISTS(FileName) THEN
                  i := i + 1
                ELSE
                  i := 0;
              END;
            END ELSE BEGIN
              OFile.CREATETEMPFILE;
              FileName := STRSUBSTNO('%1.%2.xml',OFile.NAME,ICPartner.Code);
              OFile.CLOSE;
            END;
            OFile.CREATE(FileName);
            OFile.CREATEOUTSTREAM(Ostr);
            ICOutboxExportXML.SetICOutboxTrans(ICOutboxTrans);
            ICOutboxExportXML.SETDESTINATION(Ostr);
            ICOutboxExportXML.EXPORT;
            OFile.CLOSE;
            CLEAR(Ostr);
            CLEAR(ICOutboxExportXML);
            IF PermissionManager.SoftwareAsAService THEN BEGIN
              OutFileName := STRSUBSTNO('%1_%2.xml',ICPartner.Code,ICOutboxTrans."Transaction No.");
              DOWNLOAD(FileName,'','','',OutFileName)
            END ELSE
              FileName := FileMgt.DownloadTempFile(FileName);

            IF ICPartner."Inbox Type" = ICPartner."Inbox Type"::Email THEN BEGIN
              ICPartner.TESTFIELD(Blocked,FALSE);
              IF ICPartner."Inbox Details" = '' THEN
                ERROR(EmailAddressMissingErr,ICPartner.Code);
              ToName := ICPartner."Inbox Details";
              IF STRPOS(ToName,';') > 0 THEN BEGIN
                CcName := COPYSTR(ToName,STRPOS(ToName,';') + 1);
                ToName := COPYSTR(ToName,1,STRPOS(ToName,';') - 1);
                IF STRPOS(CcName,';') > 0 THEN
                  CcName := COPYSTR(CcName,1,STRPOS(CcName,';') - 1);
              END;

              IF PermissionManager.SoftwareAsAService THEN BEGIN
                CreateEmailItem(
                  EmailItem,
                  ICPartner."Inbox Details",
                  STRSUBSTNO('%1 %2',ICOutboxTrans."Document Type",ICOutboxTrans."Document No."),
                  FORMAT(FileName,-MAXSTRLEN(EmailItem."Attachment File Path")),
                  STRSUBSTNO('%1.xml',ICPartner.Code));
                COMMIT;

                EmailDialog.SetValues(EmailItem,FALSE,TRUE);
                IF EmailDialog.RUNMODAL = ACTION::Cancel THEN
                  EXIT;

                EmailDialog.GETRECORD(EmailItem);
                DocumentMailing.EmailFile(
                  EmailItem."Attachment File Path",
                  EmailItem."Attachment Name",
                  '',
                  ICOutboxTrans."Document No.",
                  EmailItem."Send to",
                  EmailItem.Subject,
                  TRUE,
                  5); // S.Test
              END ELSE
                MailHandler.NewMessage(
                  ToName,CcName,'',
                  STRSUBSTNO(Text001,CompanyInfo.Name),
                  STRSUBSTNO(
                    Text002,CompanyInfo.Name,CompanyInfo.FIELDCAPTION("IC Partner Code"),CompanyInfo."IC Partner Code"),
                  FileName,FALSE);
            END;
            ICOutboxTrans.FIND('-');
            REPEAT
              ICInboxOutboxMgt.MoveOutboxTransToHandledOutbox(ICOutboxTrans);
            UNTIL ICOutboxTrans.NEXT = 0;
          END;
        UNTIL ICPartner.NEXT = 0;
      ICOutboxTrans.SETRANGE("IC Partner Code");
      IF ICPartnerFilter <> '' THEN
        ICOutboxTrans.SETFILTER("IC Partner Code",ICPartnerFilter);
    END;

    LOCAL PROCEDURE SendToInternalPartner@2(VAR ICOutboxTrans@1000 : Record 414);
    VAR
      Company@1002 : Record 2000000006;
      ICPartner@1001 : Record 413;
      MoveICTransToPartnerCompany@1014 : Report 513;
    BEGIN
      IF ICOutboxTrans.FIND('-') THEN
        REPEAT
          ICPartner.GET(ICOutboxTrans."IC Partner Code");
          ICPartner.TESTFIELD(Blocked,FALSE);
          IF ICPartner."Inbox Type" = ICPartner."Inbox Type"::Database THEN BEGIN
            ICPartner.TESTFIELD("Inbox Details");
            Company.GET(ICPartner."Inbox Details");
            ICOutboxTrans.SETRANGE("Transaction No.",ICOutboxTrans."Transaction No.");
            MoveICTransToPartnerCompany.SETTABLEVIEW(ICOutboxTrans);
            MoveICTransToPartnerCompany.USEREQUESTPAGE := FALSE;
            MoveICTransToPartnerCompany.RUN;
            ICOutboxTrans.SETRANGE("Transaction No.");
            IF ICOutboxTrans."Line Action" = ICOutboxTrans."Line Action"::"Send to IC Partner" THEN
              ICInboxOutboxMgt.MoveOutboxTransToHandledOutbox(ICOutboxTrans);
          END;
        UNTIL ICOutboxTrans.NEXT = 0;
    END;

    LOCAL PROCEDURE ReturnToInbox@4(VAR ICOutboxTrans@1000 : Record 414);
    VAR
      ICPartner@1001 : Record 413;
      MoveICTransToPartnerCompany@1014 : Report 513;
    BEGIN
      IF ICOutboxTrans.FIND('-') THEN
        REPEAT
          IF ICPartner.GET(ICOutboxTrans."IC Partner Code") THEN
            ICPartner.TESTFIELD(Blocked,FALSE);
          MoveICTransToPartnerCompany.RecreateInboxTrans(ICOutboxTrans);
          ICOutboxTrans.DELETE(TRUE);
        UNTIL ICOutboxTrans.NEXT = 0;
    END;

    LOCAL PROCEDURE CancelTrans@3(VAR ICOutboxTrans@1000 : Record 414);
    BEGIN
      ICOutboxTrans.SETRANGE("Line Action",ICOutboxTrans."Line Action"::Cancel);
      IF ICOutboxTrans.FIND('-') THEN
        REPEAT
          ICInboxOutboxMgt.MoveOutboxTransToHandledOutbox(ICOutboxTrans);
        UNTIL ICOutboxTrans.NEXT = 0;
    END;

    LOCAL PROCEDURE UpdateICStatus@5(VAR ICOutboxTransaction@1000 : Record 414);
    VAR
      PurchHeader@1001 : Record 38;
      SalesHeader@1002 : Record 36;
    BEGIN
      IF ICOutboxTransaction.FINDSET THEN
        REPEAT
          IF ICOutboxTransaction."Source Type" = ICOutboxTransaction."Source Type"::"Purchase Document" THEN
            CASE ICOutboxTransaction."Document Type" OF
              ICOutboxTransaction."Document Type"::Order:
                IF PurchHeader.GET(PurchHeader."Document Type"::Order,ICOutboxTransaction."Document No.") THEN BEGIN
                  PurchHeader.VALIDATE("IC Status",PurchHeader."IC Status"::Sent);
                  PurchHeader.MODIFY;
                END;
              ICOutboxTransaction."Document Type"::"Return Order":
                IF PurchHeader.GET(PurchHeader."Document Type"::"Return Order",ICOutboxTransaction."Document No.") THEN BEGIN
                  PurchHeader.VALIDATE("IC Status",PurchHeader."IC Status"::Sent);
                  PurchHeader.MODIFY;
                END;
            END
          ELSE
            IF ICOutboxTransaction."Source Type" = ICOutboxTransaction."Source Type"::"Sales Document" THEN
              CASE ICOutboxTransaction."Document Type" OF
                ICOutboxTransaction."Document Type"::Order:
                  IF SalesHeader.GET(SalesHeader."Document Type"::Order,ICOutboxTransaction."Document No.") THEN BEGIN
                    SalesHeader.VALIDATE("IC Status",SalesHeader."IC Status"::Sent);
                    SalesHeader.MODIFY;
                  END;
                ICOutboxTransaction."Document Type"::"Return Order":
                  IF SalesHeader.GET(SalesHeader."Document Type"::"Return Order",ICOutboxTransaction."Document No.") THEN BEGIN
                    SalesHeader.VALIDATE("IC Status",SalesHeader."IC Status"::Sent);
                    SalesHeader.MODIFY;
                  END;
              END;
        UNTIL ICOutboxTransaction.NEXT = 0
    END;

    LOCAL PROCEDURE CreateEmailItem@8(VAR EmailItem@1000 : Record 9500;SendTo@1001 : Text[250];Subject@1002 : Text[250];AttachmentFilePath@1003 : Text[250];AttachmentFileName@1004 : Text[250]);
    BEGIN
      EmailItem.Initialize;
      EmailItem.INSERT;
      EmailItem."Send to" := SendTo;
      EmailItem.Subject := Subject;

      IF AttachmentFilePath <> '' THEN BEGIN
        EmailItem."Attachment File Path" := AttachmentFilePath;
        EmailItem."Attachment Name" := AttachmentFileName;
      END;
      EmailItem.MODIFY(TRUE);
    END;

    [Integration]
    LOCAL PROCEDURE OnRunOutboxTransactionsOnBeforeSend@10(VAR ICOutboxTransaction@1000 : Record 414);
    BEGIN
    END;

    BEGIN
    END.
  }
}

