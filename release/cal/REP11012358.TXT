OBJECT Report 11012358 Remove Zero-Lines BOM
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Nullzeilen StÅckliste lîschen?;
               ENU=Remove Zero-Lines BOM;
               NLD=Nulregels stuklijst verwijderen;
               NOR=Vil du fjerne Null-rader i stykkliste?;
               SVE=Vill du ta bort nollrader i strukturen?];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  CASE TableNo OF
                    DATABASE::"Sales Line":
                      BEGIN
                        IF NOT ((SalesLine.Type = SalesLine.Type::" ") AND (SalesLine."BOM Item No." <> '')) THEN
                          ERROR(Text001);
                      END;
                    DATABASE::"Budget Line":
                      BEGIN
                        IF NOT (BudgetLine."Item No." = '') THEN
                          ERROR(Text001);
                      END;
                    DATABASE::"Service Order Budget Line":
                      BEGIN
                        IF NOT (BudgetLine."Item No." = '') THEN
                          ERROR(Text001);
                      END;
                    DATABASE::"Estimate Line":
                      BEGIN
                        IF NOT (EstimateLine."Item No." = '') THEN
                          ERROR(Text001);
                      END;
                    DATABASE::"Base Recipe Line":
                      BEGIN
                        IF NOT (BaseRecipeLine."Item No." = '') THEN
                          ERROR(Text001);
                      END;
                    DATABASE::"Estimate Recipe Line":
                      BEGIN
                        IF NOT (EstimateRecipeLine."Item No." = '') THEN
                          ERROR(Text001);
                      END;
                  END;
                END;

  }
  DATASET
  {
    { 2844;    ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnPreDataItem=BEGIN
                               IF TableNo <> DATABASE::"Sales Line" THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  RemoveZeroLinesSales("Sales Line");
                                END;
                                 }

    { 5115;    ;DataItem;                    ;
               DataItemTable=Table11012001;
               DataItemTableView=SORTING(Project No.);
               OnPreDataItem=BEGIN
                               IF TableNo <> DATABASE::"Budget Line" THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  RemoveZeroLinesBudget("Budget Line");
                                END;
                                 }

    { 3574;    ;DataItem;                    ;
               DataItemTable=Table11012875;
               DataItemTableView=SORTING(Service Order No.);
               OnPreDataItem=BEGIN
                               IF TableNo <> DATABASE::"Service Order Budget Line" THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  RemoveZeroLinesSOBudget("Service Order Budget Line");
                                END;
                                 }

    { 1100528900;;DataItem;                  ;
               DataItemTable=Table11072072;
               DataItemTableView=SORTING(Estimate No.);
               OnPreDataItem=BEGIN
                               IF TableNo <> DATABASE::"Estimate Line" THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  RemoveZeroLinesEstimate("Estimate Line");
                                END;
                                 }

    { 1100528500;;DataItem;                  ;
               DataItemTable=Table11020582;
               DataItemTableView=SORTING(Recipe Group,Recipe,Line No.);
               OnPreDataItem=BEGIN
                               IF TableNo <> DATABASE::"Base Recipe Line" THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  RemoveZeroLinesBaseRecipe("Base Recipe Line");
                                END;
                                 }

    { 1100528501;;DataItem;                  ;
               DataItemTable=Table11072075;
               DataItemTableView=SORTING(Recipe Group,Recipe,Line No.);
               OnPreDataItem=BEGIN
                               IF TableNo <> DATABASE::"Estimate Recipe Line" THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  RemoveZeroLinesEstimateRecipe("Estimate Recipe Line");
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      SalesLine@1100525005 : Record 37;
      BudgetLine@1100525004 : Record 11012001;
      SOBudgetLine@1100525002 : Record 11012875;
      EstimateLine@1100528900 : Record 11072072;
      BaseRecipeLine@1100528500 : Record 11020582;
      EstimateRecipeLine@1100528501 : Record 11072075;
      TableNo@1100525003 : Integer;
      Text001@1100525007 : TextConst 'DEU=Kein StÅcklistenartikel auf dieser Zeile vorhanden;ENU=Not a BOM-Item on this Line;NLD=Geen stuklijstartikel aanwezig op deze regel;NOR=Ingen stykklisteartikkel pÜ denne raden;SVE=Inte en strukturartikel pÜ den hÑr raden';

    PROCEDURE SetSelection@1100525001(TableNumber@1100525000 : Integer);
    BEGIN
      TableNo := TableNumber;
    END;

    PROCEDURE SetSelectionSales@1100525009(SalesLineGet@1100525000 : Record 37);
    BEGIN
      SalesLine := SalesLineGet;
    END;

    PROCEDURE SetSelectionBudget@1100525008(BudgetLineGet@1100525000 : Record 11012001);
    BEGIN
      BudgetLine := BudgetLineGet;
    END;

    PROCEDURE SetSelectionSOBudget@1100525007(SOBudgetLineGet@1100525000 : Record 11012875);
    BEGIN
      SOBudgetLine := SOBudgetLineGet;
    END;

    PROCEDURE SetSelectionEstimate@1100528900(EstimateLineGet@1100525000 : Record 11072072);
    BEGIN
      EstimateLine := EstimateLineGet;
    END;

    PROCEDURE SetSelectionBaseRecipe@1100528500(BaseRecipeLineGet@1100525000 : Record 11020582);
    BEGIN
      BaseRecipeLine := BaseRecipeLineGet;
    END;

    PROCEDURE SetSelectionEstimateRecipe@1100528502(EstimateRecipeLineGet@1100525000 : Record 11072075);
    BEGIN
      EstimateRecipeLine := EstimateRecipeLineGet;
    END;

    PROCEDURE RemoveZeroLinesSales@1100525000(SalesLine@1100525000 : Record 37);
    VAR
      SalesLine2@1100525001 : Record 37;
    BEGIN
      SalesLine2.RESET;
      SalesLine2.SETRANGE("Document Type", SalesLine."Document Type");
      SalesLine2.SETRANGE("Document No.", SalesLine."Document No.");
      SalesLine2.SETRANGE("Part of Line", SalesLine."Line No.");
      SalesLine2.SETFILTER("Line No.", '<>%1', SalesLine."Line No.");
      IF SalesLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((SalesLine2.Type = SalesLine2.Type::" ") AND (SalesLine2."Original Quantity" = 0)) THEN BEGIN
            IF SalesLine2.Type = SalesLine2.Type::" " THEN
              RemoveZeroLinesSales(SalesLine2)
            ELSE
              IF SalesLine2.Quantity = 0 THEN
                SalesLine2.DELETE;
          END;
        UNTIL SalesLine2.NEXT = 0;
    END;

    PROCEDURE RemoveZeroLinesBudget@1100525002(BudgetLine@1100525000 : Record 11012001);
    VAR
      BudgetLine2@1100525001 : Record 11012001;
    BEGIN
      BudgetLine2.RESET;
      BudgetLine2.SETRANGE("Project No.", BudgetLine."Project No.");
      BudgetLine2.SETRANGE("Part of Line", BudgetLine."Line No.");
      BudgetLine2.SETFILTER("Line No.", '<>%1', BudgetLine."Line No.");
      IF BudgetLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((BudgetLine2."Item No." = '') AND (BudgetLine2."Original Quantity" = 0)) THEN BEGIN
            IF BudgetLine2."Item No." = '' THEN
              RemoveZeroLinesBudget(BudgetLine2)
            ELSE
              IF BudgetLine2.Quantity = 0 THEN
                BudgetLine2.DELETE;
          END;
        UNTIL BudgetLine2.NEXT = 0;
    END;

    PROCEDURE RemoveZeroLinesSOBudget@1100525004(SOBudgetLine@1100525000 : Record 11012875);
    VAR
      SOBudgetLine2@1100525001 : Record 11012875;
    BEGIN
      SOBudgetLine2.RESET;
      SOBudgetLine2.SETRANGE("Service Order No.", SOBudgetLine."Service Order No.");
      SOBudgetLine2.SETRANGE("Part of Line", SOBudgetLine."Line No.");
      SOBudgetLine2.SETFILTER("Line No.", '<>%1', SOBudgetLine."Line No.");
      IF SOBudgetLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((SOBudgetLine2."Item No." = '') AND (SOBudgetLine2."Original Quantity" = 0)) THEN BEGIN
            IF SOBudgetLine2."Item No." = '' THEN
              RemoveZeroLinesSOBudget(SOBudgetLine2)
            ELSE
              IF SOBudgetLine2.Quantity = 0 THEN
                SOBudgetLine2.DELETE;
          END;
        UNTIL SOBudgetLine2.NEXT = 0;
    END;

    PROCEDURE RemoveZeroLinesEstimate@1100528901(EstimateLine@1100525000 : Record 11072072);
    VAR
      EstimateLine2@1100525001 : Record 11072072;
    BEGIN
      EstimateLine2.RESET;
      EstimateLine2.SETRANGE("Estimate No.", EstimateLine."Estimate No.");
      EstimateLine2.SETRANGE("Part of Line", EstimateLine."Line No.");
      EstimateLine2.SETFILTER("Line No.", '<>%1', EstimateLine."Line No.");
      IF EstimateLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((EstimateLine2."Item No." = '') AND (EstimateLine2."Original Quantity" = 0)) THEN BEGIN
            IF EstimateLine2."Item No." = '' THEN
              RemoveZeroLinesEstimate(EstimateLine2)
            ELSE
              IF EstimateLine2.Quantity = 0 THEN
                EstimateLine2.DELETE;
          END;
        UNTIL EstimateLine2.NEXT = 0;
    END;

    PROCEDURE RemoveZeroLinesBaseRecipe@1100528501(BaseRecipeLine@1100525000 : Record 11020582);
    VAR
      BaseRecipeLine2@1100525001 : Record 11020582;
    BEGIN
      BaseRecipeLine2.RESET;
      BaseRecipeLine2.SETRANGE("Part of Line", BaseRecipeLine."Line No.");
      BaseRecipeLine2.SETFILTER("Line No.", '<>%1', BaseRecipeLine."Line No.");
      IF BaseRecipeLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((BaseRecipeLine2."Item No." = '') AND (BaseRecipeLine2."Original Quantity" = 0)) THEN BEGIN
            IF BaseRecipeLine2."Item No." = '' THEN
              RemoveZeroLinesBaseRecipe(BaseRecipeLine2)
            ELSE
              IF BaseRecipeLine2.Quantity = 0 THEN
                BaseRecipeLine2.DELETE;
          END;
        UNTIL BaseRecipeLine2.NEXT = 0;
    END;

    PROCEDURE RemoveZeroLinesEstimateRecipe@1100528503(EstimateRecipeLine@1100525000 : Record 11072075);
    VAR
      EstimateRecipeLine2@1100525001 : Record 11072075;
    BEGIN
      EstimateRecipeLine2.RESET;
      EstimateRecipeLine2.SETRANGE("Estimate No.", EstimateRecipeLine."Estimate No.");
      EstimateRecipeLine2.SETRANGE("Part of Line", EstimateRecipeLine."Line No.");
      EstimateRecipeLine2.SETFILTER("Line No.", '<>%1', EstimateRecipeLine."Line No.");
      IF EstimateRecipeLine2.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF NOT ((EstimateRecipeLine2."Item No." = '') AND (EstimateRecipeLine2."Original Quantity" = 0)) THEN BEGIN
            IF EstimateRecipeLine2."Item No." = '' THEN
              RemoveZeroLinesEstimateRecipe(EstimateRecipeLine2)
            ELSE
              IF EstimateRecipeLine2.Quantity = 0 THEN
                EstimateRecipeLine2.DELETE;
          END;
        UNTIL EstimateRecipeLine2.NEXT = 0;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

