OBJECT Table 11020554 Plant Request Cost Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Plant Request Cost Line;
               NOR=Kostrad for maskinforesp›rsel;
               SVE=Kostnadsrad f”r Maskinsf”rfr†gan];
  }
  FIELDS
  {
    { 10  ;   ;Plant Request No.   ;Code20        ;TableRelation="Plant Request";
                                                   CaptionML=[ENU=Plant Request No.;
                                                              NOR=Maskinforesp›rsel Nr.;
                                                              SVE=Maskinf”rfr†gan nr] }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 30  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                TempReqCostLine := Rec;
                                                                INIT;
                                                                Type := TempReqCostLine.Type;
                                                                Element := TempReqCostLine.Element;

                                                                IF Type > Type::Text THEN BEGIN
                                                                  DimValRec.SETFILTER("Global Dimension No.", '2');
                                                                  DimValRec.SETRANGE(Plant, Type);
                                                                  IF DimValRec.COUNT = 1 THEN BEGIN
                                                                    DimValRec.FIND('-');
                                                                    VALIDATE("No.", DimValRec.Code);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=Text,Hours,Transport,Sundry Costs;
                                                                    NOR=Tekst,Timer,Transport,Diversekoster;
                                                                    SVE=Text,Timmar,Transport,Diverse kostnader];
                                                   OptionString=Text,Hours,Transport,Sundry Costs,Damage;
                                                   Description=Same options as in T1102558 (PO-cost), but not 'Damage' because this must always be Plant related (see also C11012553 CheckLineCost) }
    { 40  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Text)) "Standard Text"
                                                                 ELSE IF (Type=CONST(Hours)) "Dimension Value".Code WHERE (Plant=CONST(Hours),
                                                                                                                           Global Dimension No.=CONST(2))
                                                                                                                           ELSE IF (Type=CONST(Transport)) "Dimension Value".Code WHERE (Plant=CONST(Transport),
                                                                                                                                                                                         Global Dimension No.=CONST(2))
                                                                                                                                                                                         ELSE IF (Type=CONST(Sundry Costs)) "Dimension Value".Code WHERE (Plant=CONST(Sundry),
                                                                                                                                                                                                                                                          Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                IF "No." <> '' THEN BEGIN
                                                                  CASE Type OF
                                                                    Type::Text:
                                                                      BEGIN
                                                                        StandardText.GET("No.");
                                                                        Description := StandardText.Description;
                                                                      END;
                                                                    ELSE BEGIN
                                                                      DimMgt.GetDimValueRec(2,"No.",DimValRec,TRUE,'');
                                                                      Description := DimValRec.Name;
                                                                      "Unit of Measure" := DimValRec."Unit of Measure";
                                                                      VALIDATE(Price,DimValRec."Sales Price");
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr;
                                                              SVE=Nr] }
    { 50  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 70  ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   OnValidate=BEGIN
                                                                IF ("Unit of Measure" <> '') AND (Type = Type::Text) THEN
                                                                  FIELDERROR("Unit of Measure");
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=Enhet;
                                                              SVE=M†ttenhet] }
    { 80  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                IF (Quantity <> 0) AND (Type = Type::Text) THEN
                                                                  FIELDERROR(Quantity);

                                                                VALIDATE(Price);
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 90  ;   ;Price               ;Decimal       ;OnValidate=BEGIN
                                                                IF (Price <> 0) AND (Type = Type::Text) THEN
                                                                  FIELDERROR(Price);

                                                                GLSetup.GET;
                                                                Amount := ROUND(Quantity * Price,GLSetup."Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Price;
                                                              NOR=Pris;
                                                              SVE=Pris];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 100 ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                IF (Amount <> 0) THEN BEGIN
                                                                  IF (Type = Type::Text) THEN
                                                                    FIELDERROR(Amount);
                                                                  TESTFIELD(Quantity);
                                                                END;

                                                                IF Quantity <> 0 THEN BEGIN
                                                                  Price := Amount / Quantity
                                                                END ELSE
                                                                  Price := Amount;

                                                                GLSetup.GET;
                                                                Price := ROUND(Price,GLSetup."Unit-Amount Rounding Precision")
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 200 ;   ;Element             ;Code20        ;OnValidate=BEGIN
                                                                IF Element = '' THEN
                                                                  EXIT;
                                                                IF (Type = Type::Text) THEN
                                                                  FIELDERROR(Type);
                                                                ReqRec.GET("Plant Request No.");
                                                                IF NOT (ReqRec.Type IN [ReqRec.Type::Arrival, ReqRec.Type::"Other Transfers"]) THEN
                                                                  ReqRec.FIELDERROR(Type);
                                                                ReqRec.TESTFIELD("To Location");
                                                                PlantElementMgtCU.OnValidateElement(ReqRec."To Location", Element, '', FALSE);
                                                              END;

                                                   OnLookup=VAR
                                                              lvEditable@1100525001 : Boolean;
                                                              lvNewElement@1100525000 : Code[20];
                                                            BEGIN
                                                              ReqRec.GET("Plant Request No.");
                                                              IF (ReqRec.Type IN [ReqRec.Type::Arrival, ReqRec.Type::"Other Transfers"]) AND
                                                                 (NOT ReqRec.Posted) AND (ReqRec.Status < ReqRec.Status::Approved) AND (Type <> Type::Text)
                                                              THEN
                                                                lvEditable := TRUE;
                                                              lvNewElement := PlantElementMgtCU.OnLookupElement(ReqRec."To Location", Element, '', lvEditable);
                                                              IF (lvNewElement <> '') AND (lvNewElement <> Element) THEN
                                                                VALIDATE(Element, lvNewElement);
                                                            END;

                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 800 ;   ;Plant Group         ;Code20        ;TableRelation="Plant Group";
                                                   CaptionML=ENU=Plant Group }
  }
  KEYS
  {
    {    ;Plant Request No.,Line No.              ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GLSetup@11012000 : Record 98;
      ReqRec@11012002 : Record 11020520;
      StandardText@11012003 : Record 7;
      DimValRec@11012004 : Record 349;
      TempReqCostLine@11012005 : TEMPORARY Record 11020554;
      DimMgt@1210190000 : Codeunit 408;
      PlantElementMgtCU@1100525000 : Codeunit 11012582;

    PROCEDURE InitRecord@1100525000();
    BEGIN
      FillDefaultElement;
    END;

    LOCAL PROCEDURE FillDefaultElement@1100525015();
    VAR
      PlantRequest@1100525000 : Record 11020520;
      PlantLocation@1100525001 : Record 11012554;
    BEGIN
      IF NOT PlantRequest.GET("Plant Request No.") THEN
        EXIT;
      IF NOT (PlantRequest.Type IN [PlantRequest.Type::Arrival, PlantRequest.Type::"Other Transfers"]) THEN
        EXIT;
      IF NOT PlantElementMgtCU.CheckElementAllowedForPlantLoc(PlantRequest."To Location", '', PlantLocation, FALSE) THEN
        EXIT;
      IF PlantLocation.Element <> '' THEN
        Element := PlantLocation.Element;
    END;

    BEGIN
    {
      //* Call 22453
      //* Copied from T11012558 (PO-cost line), then modified for Request.
      //* Only for extra cost, so not for plant related cost. So also not the plant standard cost!
      //* Never add plant related cost on requests! See also remark on call 22453.
    }
    END.
  }
}

