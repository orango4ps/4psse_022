OBJECT Report 11020252 Generate Hour Accounting
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Stundenabrechnung generieren;
               ENU=Generate Hour Accounting;
               NLD=Genereer urenverantwoording;
               NOR=Generer timerapportering;
               SVE=Generera tidrapportering];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 7528;    ;DataItem;                    ;
               DataItemTable=Table5200;
               DataItemTableView=SORTING(No.)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               IF PreRegistration THEN BEGIN
                                 SETFILTER("Account Hours", '%1|%2', Employee."Account Hours"::"Required according to Norm", Employee."Account Hours"::Optional);
                                 SETRANGE("Pre-Registration Hours", TRUE);
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF AuthorizationForDepartment(Employee."No.") THEN
                                    CreateHourAccounting(YearNo, WeekNo, Employee."No.");
                                END;

               ReqFilterFields=No.,Global Dimension 1 Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=[DEU=Jahr;
                             ENU=Year;
                             NLD=Jaar;
                             NOR=èr;
                             SVE=èr];
                  SourceExpr=YearNo }

      { 1100525003;2;Field  ;
                  CaptionML=[DEU=Woche;
                             ENU=Week;
                             NLD=Week;
                             NOR=Uke;
                             SVE=Vecka];
                  SourceExpr=WeekNo;
                  OnLookup=BEGIN
                             LookupWeek;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      YearNo@1100528700 : Integer;
      WeekNo@1100528701 : Integer;
      PreRegistration@1100409000 : Boolean;

    PROCEDURE CreateHourAccounting@1100528700(Year@1100528700 : Integer;Week@1100528701 : Integer;EmployeeNo@1100528702 : Code[20]);
    VAR
      HourAccounting@1100528703 : Record 11012038;
    BEGIN
      IF NOT HourAccounting.GET(Year, Week, EmployeeNo) THEN BEGIN
        HourAccounting.VALIDATE(Year, Year);
        HourAccounting.VALIDATE(Week, Week);
        HourAccounting.VALIDATE("Employee No.", EmployeeNo);
        HourAccounting.INSERT(TRUE);
        HourAccounting.VALIDATE(Received, FALSE);
        HourAccounting.MODIFY;
      END;
    END;

    PROCEDURE AuthorizationForDepartment@1100528702(EmployeeNo@1100528704 : Code[20]) Result : Boolean;
    VAR
      DepartmentAuthorizObject@1100528701 : Record 11012466;
      DepartmentAuthorizationMgt@1100528702 : Codeunit 11012783;
      Employee2@1100528703 : Record 5200;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      Result := TRUE;
      IF FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN BEGIN
        IF DepartmentAuthorizationMgt.AuthorizationActive THEN BEGIN
          Employee2.SETRANGE("No.", EmployeeNo);
          Employee2.SETFILTER("Global Dimension 1 Code", DepartmentAuthorizationMgt.GetUserDepartmentFilter);
          Result := Employee2.FINDFIRST;
        END;
      END;
    END;

    PROCEDURE LookupWeek@1100528701();
    VAR
      DateSelectionManagement@1100528701 : Codeunit 11130005;
    BEGIN
      DateSelectionManagement.GetWeekYear(WeekNo, YearNo);
    END;

    PROCEDURE SetDefaults@1100528703(Year@1100528700 : Integer;Week@1100528701 : Integer;PreReg@1100409000 : Boolean);
    BEGIN
      YearNo := Year;
      WeekNo := Week;
      PreRegistration := PreReg;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

