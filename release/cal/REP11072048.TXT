OBJECT Report 11072048 Remove Contacts
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00 (5186);
  }
  PROPERTIES
  {
    CaptionML=[DEU=Kontakte entfernen;
               ENU=Remove Contacts;
               NLD=Contacten verwijderen;
               NOR=Fjern kontakter;
               SVE=Ta bort kontakter];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  ItemFilters := "Value Entry".HASFILTER;
                  CustomerFilters := Customer.HASFILTER;

                  SegCriteriaManagement.InsertCriteriaAction(
                    "Segment Header".GETFILTER("No."),MainReportNo,
                    FALSE,FALSE,FALSE,FALSE,EntireCompanies);
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::Contact,
                    Contact.GETFILTERS,Contact.GETVIEW(FALSE));
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::"Contact Profile Answer",
                    "Contact Profile Answer".GETFILTERS,"Contact Profile Answer".GETVIEW(FALSE));
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::"Contact Mailing Group",
                    "Contact Mailing Group".GETFILTERS,"Contact Mailing Group".GETVIEW(FALSE));
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::"Interaction Log Entry",
                    "Interaction Log Entry".GETFILTERS,"Interaction Log Entry".GETVIEW(FALSE));
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::"Contact Job Responsibility","Contact Job Responsibility".GETFILTERS,
                    "Contact Job Responsibility".GETVIEW(FALSE));
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::"Contact Industry Group",
                    "Contact Industry Group".GETFILTERS,"Contact Industry Group".GETVIEW(FALSE));
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::"Contact Business Relation",
                    "Contact Business Relation".GETFILTERS,"Contact Business Relation".GETVIEW(FALSE));
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::"Value Entry",
                    "Value Entry".GETFILTERS,"Value Entry".GETVIEW(FALSE));

                  //**4PS.sn
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::Plot,
                    Plot.GETFILTERS,Plot.GETVIEW(FALSE));
                  SegCriteriaManagement.InsertCriteriaFilter4PS(
                    "Segment Header".GETFILTER("No."),DATABASE::Plot,
                    PLotBuyer2.GETFILTERS,PLotBuyer2.GETVIEW(FALSE),TRUE);
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::"Project Authority",
                    "Project Authority".GETFILTERS,"Project Authority".GETVIEW(FALSE));
                  //**4PS.en
                END;

    OnPostReport=BEGIN
                   IF EntireCompanies THEN
                     AddPeople;

                   UpdateSegLines;
                 END;

    UseRequestPage=No;
  }
  DATASET
  {
    { 7133;    ;DataItem;                    ;
               DataItemTable=Table11072039;
               DataItemTableView=SORTING(No.) }

    { 5030;1   ;DataItem;                    ;
               DataItemTable=Table11072040;
               DataItemTableView=SORTING(Segment No.,Line No.);
               OnAfterGetRecord=BEGIN
                                  RecordNo := RecordNo + 1;
                                  IF RecordNo = 1 THEN BEGIN
                                    OldDateTime := CURRENTDATETIME;
                                    CASE MainReportNo OF
                                      REPORT::"Remove Contacts - Reduce":
                                        Window.OPEN(Text000);
                                      REPORT::"Remove Contacts - Refine":
                                        Window.OPEN(Text001);
                                    END;
                                    NoOfRecords := COUNT;
                                  END;
                                  NewDateTime := CURRENTDATETIME;
                                  IF (NewDateTime - OldDateTime > 100) OR (NewDateTime < OldDateTime) THEN BEGIN
                                    NewProgress := ROUND(RecordNo / NoOfRecords * 100,1);
                                    IF NewProgress <> OldProgress THEN BEGIN
                                      Window.UPDATE(1,NewProgress * 100);
                                      OldProgress := NewProgress;
                                    END;
                                    OldDateTime := CURRENTDATETIME;
                                  END;
                                END;

               DataItemLink=Segment No.=FIELD(No.) }

    { 6698;2   ;DataItem;                    ;
               DataItemTable=Table5050;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=BEGIN
                               FILTERGROUP(4);
                               SETRANGE("Company No.","Segment Line"."Contact Company No.");
                               IF NOT EntireCompanies THEN
                                 SETRANGE("No.","Segment Line"."Contact No.");
                               FILTERGROUP(0);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF EntireCompanies THEN BEGIN
                                    IF TempCheckCont.GET("No.") THEN
                                      CurrReport.SKIP;
                                    TempCheckCont := Contact;
                                    TempCheckCont.INSERT;
                                  END;

                                  ContactOK := TRUE;
                                END;

               ReqFilterFields=No.,Search Name,Type,Salesperson Code,Post Code,Country/Region Code,Territory Code }

    { 3762;3   ;DataItem;                    ;
               DataItemTable=Table5089;
               ReqFilterHeadingML=[DEU=Profil;
                                   ENU=Profile;
                                   NLD=Profiel;
                                   NOR=Profil;
                                   SVE=Profil];
               OnPreDataItem=BEGIN
                               IF ContactOK AND (GETFILTERS <> '') THEN
                                 ContactOK := FALSE
                               ELSE
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  ContactOK := TRUE;
                                  CurrReport.BREAK;
                                END;

               DataItemLink=Contact No.=FIELD(No.) }

    { 6043;3   ;DataItem;                    ;
               DataItemTable=Table5056;
               DataItemTableView=SORTING(Contact No.,Mailing Group Code);
               ReqFilterHeadingML=[DEU=Verteiler;
                                   ENU=Mailing Group;
                                   NLD=Mailinggroep;
                                   NOR=Postgruppe;
                                   SVE=Utskicksgrupp];
               OnPreDataItem=BEGIN
                               IF ContactOK AND (GETFILTERS <> '') THEN
                                 ContactOK := FALSE
                               ELSE
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  ContactOK := TRUE;
                                  CurrReport.BREAK;
                                END;

               ReqFilterFields=Mailing Group Code;
               DataItemLink=Contact No.=FIELD(No.) }

    { 3056;3   ;DataItem;                    ;
               DataItemTable=Table11072027;
               DataItemTableView=SORTING(Contact Company No.,Contact No.,Date);
               OnPreDataItem=BEGIN
                               IF ContactOK AND (GETFILTERS <> '') THEN
                                 ContactOK := FALSE
                               ELSE
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  ContactOK := TRUE;
                                  CurrReport.BREAK;
                                END;

               ReqFilterFields=Date,Segment No.,Campaign No.,Evaluation,Interaction Template Code,Salesperson Code;
               DataItemLink=Contact Company No.=FIELD(Company No.),
                            Contact No.=FIELD(No.) }

    { 6030;3   ;DataItem;                    ;
               DataItemTable=Table5067;
               DataItemTableView=SORTING(Contact No.,Job Responsibility Code);
               ReqFilterHeadingML=[DEU=Verantwortlichkeit;
                                   ENU=Job Responsibility;
                                   NLD=Functiegroep;
                                   NOR=Ansvarsomr†de;
                                   SVE=Arbetsansvar];
               OnPreDataItem=BEGIN
                               IF ContactOK AND (GETFILTERS <> '') THEN
                                 ContactOK := FALSE
                               ELSE
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  ContactOK := TRUE;
                                  CurrReport.BREAK;
                                END;

               ReqFilterFields=Job Responsibility Code;
               DataItemLink=Contact No.=FIELD(No.) }

    { 4008;3   ;DataItem;                    ;
               DataItemTable=Table5058;
               DataItemTableView=SORTING(Contact No.,Industry Group Code);
               ReqFilterHeadingML=[DEU=Branche;
                                   ENU=Industry Group;
                                   NLD=Sector;
                                   NOR=Bransjegruppe;
                                   SVE=Branschgrupp];
               OnPreDataItem=BEGIN
                               IF ContactOK AND (GETFILTERS <> '') THEN
                                 ContactOK := FALSE
                               ELSE
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  ContactOK := TRUE;
                                  CurrReport.BREAK;
                                END;

               ReqFilterFields=Industry Group Code;
               DataItemLink=Contact No.=FIELD(Company No.) }

    { 8768;3   ;DataItem;                    ;
               DataItemTable=Table5054;
               DataItemTableView=SORTING(Contact No.,Business Relation Code);
               ReqFilterHeadingML=[DEU=Gesch„ftsbeziehung;
                                   ENU=Business Relation;
                                   NLD=Zakenrelatie;
                                   NOR=Forretningsforbindelse;
                                   SVE=Aff„rsrelation];
               OnPreDataItem=BEGIN
                               IF ContactOK AND ((GETFILTERS <> '') OR ItemFilters OR CustomerFilters) THEN
                                 ContactOK := FALSE
                               ELSE
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF NOT (ItemFilters OR CustomerFilters) THEN BEGIN
                                    ContactOK := TRUE;
                                    CurrReport.BREAK;
                                  END;
                                END;

               ReqFilterFields=Business Relation Code;
               DataItemLink=Contact No.=FIELD(Company No.) }

    { 8894;4   ;DataItem;                    ;
               DataItemTable=Table5802;
               DataItemTableView=SORTING(Source Type,Source No.,Item No.,Posting Date);
               OnPreDataItem=BEGIN
                               IF NOT ItemFilters THEN
                                 CurrReport.BREAK;

                               CASE "Contact Business Relation"."Link to Table" OF
                                 "Contact Business Relation"."Link to Table"::Customer:
                                   BEGIN
                                     SETRANGE("Source Type","Source Type"::Customer);
                                     SETRANGE("Source No.","Contact Business Relation"."No.");
                                   END;
                                 "Contact Business Relation"."Link to Table"::Vendor:
                                   BEGIN
                                     SETRANGE("Source Type","Source Type"::Vendor);
                                     SETRANGE("Source No.","Contact Business Relation"."No.");
                                   END
                                 ELSE
                                   CurrReport.BREAK;
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  ContactOK := TRUE;
                                  CurrReport.BREAK;
                                END;

               ReqFilterFields=Item No.,Variant Code,Posting Date,Inventory Posting Group }

    { 1100525003;4;DataItem;                 ;
               DataItemTable=Table18;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=BEGIN
                               //**4PS
                               IF NOT CustomerFilters THEN
                                 CurrReport.BREAK;

                               IF ItemFilters AND NOT ContactOK THEN
                                 CurrReport.BREAK //s al afgekeurd bij de value entries
                               ELSE
                                 ContactOK := FALSE; //Reset, want kan in Value Entry op TRUE zij gezet, maar beide moeten waar zijn.

                               CASE "Contact Business Relation"."Link to Table" OF
                                 "Contact Business Relation"."Link to Table"::Customer:
                                   BEGIN
                                     SETRANGE("No.","Contact Business Relation"."No.");
                                   END;
                                 ELSE
                                   CurrReport.BREAK;
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  //**4PS
                                  ContactOK := TRUE;
                                  CurrReport.BREAK;
                                END;
                                 }

    { 1100525000;3;DataItem;                 ;
               DataItemTable=Table11012500;
               OnPreDataItem=BEGIN
                               //**4PS
                               IF ContactOK AND (GETFILTERS<>'') THEN
                                 ContactOK := FALSE
                               ELSE
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  //**4PS
                                  ContactOK := TRUE;
                                  CurrReport.BREAK;
                                END;

               DataItemLink=Buyer=FIELD(No.) }

    { 1100525001;3;DataItem;PLotBuyer2       ;
               DataItemTable=Table11012500;
               OnPreDataItem=BEGIN
                               //**4PS
                               IF ContactOK AND (GETFILTERS<>'') THEN
                                 ContactOK := FALSE
                               ELSE
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  //**4PS
                                  ContactOK := TRUE;
                                  CurrReport.BREAK;
                                END;

               DataItemLink=Second Buyer=FIELD(No.) }

    { 1100525002;3;DataItem;                 ;
               DataItemTable=Table11020216;
               DataItemTableView=SORTING(Contact No.);
               OnPreDataItem=BEGIN
                               //**4PS
                               FILTERGROUP(4);
                               IF Contact.IsContactPerson THEN BEGIN
                                 SETRANGE("Contact No.");
                                 SETRANGE("Contact Person No.", Contact."No.");
                               END ELSE BEGIN
                                 SETRANGE("Contact No.", Contact."No.");
                                 SETRANGE("Contact Person No.");
                               END;
                               FILTERGROUP(0);

                               IF ContactOK AND (GETFILTERS<>'') THEN
                                 ContactOK := FALSE
                               ELSE
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  //**4PS
                                  ContactOK := TRUE;
                                  CurrReport.BREAK;
                                END;

               ReqFilterFields=Project No. }

    { 5444;3   ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnAfterGetRecord=BEGIN
                                  IF ContactOK THEN
                                    InsertContact(Contact);
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Kontakte werden teilweise entfernt      @1@@@@@@@@@@@@@;ENU=Reducing Contacts @1@@@@@@@@@@@@@;NLD=Verminderen cont.  @1@@@@@@@@@@@@@;NOR=Reduserer kontakter @1@@@@@@@@@@@@@;SVE=Minskar kontakter @1@@@@@@@@@@@@@';
      Text001@1001 : TextConst 'DEU=Kontakte werden neu definiert @1@@@@@@@@@@@@@;ENU=Refining Contacts @1@@@@@@@@@@@@@;NLD=Verfijnen cont.    @1@@@@@@@@@@@@@;NOR=Avgrenser kontakter   @1@@@@@@@@@@@@@;SVE=Just. kontakter   @1@@@@@@@@@@@@@';
      TempCont@1002 : TEMPORARY Record 5050;
      TempCont2@1003 : TEMPORARY Record 5050;
      TempCheckCont@1004 : TEMPORARY Record 5050;
      Cont@1005 : Record 5050;
      SegLine@1006 : Record 11072040;
      SegmentHistoryMgt@1007 : Codeunit 11072024;
      SegCriteriaManagement@1008 : Codeunit 11072025;
      Window@1014 : Dialog;
      MainReportNo@1009 : Integer;
      ItemFilters@1010 : Boolean;
      CustomerFilters@1100525000 : Boolean;
      ContactOK@1011 : Boolean;
      EntireCompanies@1012 : Boolean;
      NoOfRecords@1015 : Integer;
      RecordNo@1016 : Integer;
      OldDateTime@1017 : DateTime;
      NewDateTime@1018 : DateTime;
      OldProgress@1019 : Integer;
      NewProgress@1020 : Integer;

    [External]
    PROCEDURE SetOptions@4(CalledFromReportNo@1000 : Integer;OptionEntireCompanies@1001 : Boolean);
    BEGIN
      MainReportNo := CalledFromReportNo;
      EntireCompanies := OptionEntireCompanies;
    END;

    LOCAL PROCEDURE InsertContact@9(VAR CheckedCont@1000 : Record 5050);
    BEGIN
      TempCont := CheckedCont;
      IF TempCont.INSERT THEN;
    END;

    LOCAL PROCEDURE AddPeople@2();
    BEGIN
      TempCont.RESET;
      IF TempCont.FIND('-') THEN
        REPEAT
          IF TempCont."Company No." <> '' THEN BEGIN
            Cont.SETCURRENTKEY("Company No.");
            Cont.SETRANGE("Company No.",TempCont."Company No.");
            IF Cont.FINDSET(FALSE, FALSE) THEN
              REPEAT
                TempCont2 := Cont;
                IF TempCont2.INSERT THEN;
              UNTIL Cont.NEXT = 0
          END ELSE BEGIN
            TempCont2 := TempCont;
            TempCont2.INSERT;
          END;
        UNTIL TempCont.NEXT = 0;

      TempCont.DELETEALL;
      IF TempCont2.FIND('-') THEN
        REPEAT
          TempCont := TempCont2;
          TempCont.INSERT;
        UNTIL TempCont2.NEXT = 0;
      TempCont2.DELETEALL;
    END;

    LOCAL PROCEDURE UpdateSegLines@1();
    BEGIN
      SegLine.RESET;
      SegLine.SETRANGE("Segment No.","Segment Header"."No.");
      IF SegLine.FINDSET(TRUE, FALSE) THEN
        REPEAT
          CASE MainReportNo OF
            REPORT::"Remove Contacts - Reduce":
              IF TempCont.GET(SegLine."Contact No.") THEN BEGIN
                SegLine.DELETE(TRUE);
                SegmentHistoryMgt.DeleteLine(
                  SegLine."Segment No.",SegLine."Contact No.",SegLine."Line No.");
              END;
            REPORT::"Remove Contacts - Refine":
              IF NOT TempCont.GET(SegLine."Contact No.") THEN BEGIN
                SegLine.DELETE(TRUE);
                SegmentHistoryMgt.DeleteLine(
                  SegLine."Segment No.",SegLine."Contact No.",SegLine."Line No.");
              END;
          END;
        UNTIL SegLine.NEXT = 0;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

