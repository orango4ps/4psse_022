OBJECT Codeunit 7315 Whse. Internal Pick Release
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1005 : TextConst 'ENU=There is nothing to release for %1 %2.;NOR=Det finnes ingenting † frigi for %1 %2.;SVE=Det finns inget att sl„ppa f”r %1 %2.';
      Text001@1000 : TextConst 'ENU=You cannot reopen the whse. internal pick because warehouse worksheet lines exist that must first be handled or deleted.;NOR=Du kan ikke †pne internt plukk p† nytt fordi det finnes lagerforslagslinjer som f›rst m† h†ndteres eller slettes.;SVE=Du kan inte ”ppna den interna plockningen i distributionslagret igen eftersom det finns distributionslagerf”rslagsrader som f”rst m†ste hanteras eller tas bort.';
      Text002@1002 : TextConst 'ENU=You cannot reopen the whse. internal pick because warehouse activity lines exist that must first be handled or deleted.;NOR=Du kan ikke †pne internt plukk p† nytt fordi det finnes lageraktivitetslinjer som f›rst m† h†ndteres eller slettes.;SVE=Du kan inte ”ppna den interna plockningen i distributionslagret igen eftersom det finns distributionslageraktivitetsrader som f”rst m†ste hanteras eller tas bort.';

    [External]
    PROCEDURE Release@1(VAR WhsePickHeader@1000 : Record 7333);
    VAR
      Location@1004 : Record 14;
      WhsePickRqst@1003 : Record 7325;
      WhsePickLine@1001 : Record 7334;
    BEGIN
      WITH WhsePickHeader DO BEGIN
        IF Status = Status::Released THEN
          EXIT;

        WhsePickLine.SETRANGE("No.","No.");
        WhsePickLine.SETFILTER(Quantity,'<>0');
        IF NOT WhsePickLine.FIND('-') THEN
          ERROR(Text000,TABLECAPTION,"No.");

        IF "Location Code" <> '' THEN BEGIN
          Location.GET("Location Code");
          Location.TESTFIELD("Require Pick");
        END ELSE
          CheckPickRequired("Location Code");

        REPEAT
          WhsePickLine.TESTFIELD("Item No.");
          WhsePickLine.TESTFIELD("Unit of Measure Code");
          IF Location."Directed Put-away and Pick" THEN
            WhsePickLine.TESTFIELD("To Zone Code");
          IF Location."Bin Mandatory" THEN
            WhsePickLine.TESTFIELD("To Bin Code");
        UNTIL WhsePickLine.NEXT = 0;

        Status := Status::Released;
        MODIFY;

        CreateWhsePickRqst(WhsePickHeader);

        WhsePickRqst.SETRANGE("Document Type",WhsePickRqst."Document Type"::"Internal Pick");
        WhsePickRqst.SETRANGE("Document No.","No.");
        WhsePickRqst.SETRANGE(Status,Status::Open);
        IF NOT WhsePickRqst.ISEMPTY THEN
          WhsePickRqst.DELETEALL(TRUE);

        COMMIT;
      END;
    END;

    [External]
    PROCEDURE Reopen@2(WhsePickHeader@1000 : Record 7333);
    VAR
      WhsePickRqst@1001 : Record 7325;
      PickWkshLine@1002 : Record 7326;
      WhseActivLine@1003 : Record 5767;
    BEGIN
      WITH WhsePickHeader DO BEGIN
        IF Status = Status::Open THEN
          EXIT;

        PickWkshLine.SETCURRENTKEY("Whse. Document Type","Whse. Document No.");
        PickWkshLine.SETRANGE("Whse. Document Type",PickWkshLine."Whse. Document Type"::"Internal Pick");
        PickWkshLine.SETRANGE("Whse. Document No.","No.");
        IF NOT PickWkshLine.ISEMPTY THEN
          ERROR(Text001);

        WhseActivLine.SETCURRENTKEY("Whse. Document No.","Whse. Document Type","Activity Type");
        WhseActivLine.SETRANGE("Whse. Document No.","No.");
        WhseActivLine.SETRANGE("Whse. Document Type",WhseActivLine."Whse. Document Type"::"Internal Pick");
        WhseActivLine.SETRANGE("Activity Type",WhseActivLine."Activity Type"::Pick);
        IF NOT WhseActivLine.ISEMPTY THEN
          ERROR(Text002);

        WhsePickRqst.SETRANGE("Document Type",WhsePickRqst."Document Type"::"Internal Pick");
        WhsePickRqst.SETRANGE("Document No.","No.");
        WhsePickRqst.SETRANGE(Status,Status::Released);
        IF NOT WhsePickRqst.ISEMPTY THEN
          WhsePickRqst.MODIFYALL(Status,WhsePickRqst.Status::Open);

        Status := Status::Open;
        MODIFY;
      END;
    END;

    LOCAL PROCEDURE CreateWhsePickRqst@3(VAR WhsePickHeader@1000 : Record 7333);
    VAR
      WhsePickRqst@1001 : Record 7325;
      Location@1002 : Record 14;
    BEGIN
      WITH WhsePickHeader DO
        IF Location.RequirePicking("Location Code") THEN BEGIN
          WhsePickRqst."Document Type" := WhsePickRqst."Document Type"::"Internal Pick";
          WhsePickRqst."Document No." := "No.";
          WhsePickRqst.Status := Status;
          WhsePickRqst."Location Code" := "Location Code";
          WhsePickRqst."Zone Code" := "To Zone Code";
          WhsePickRqst."Bin Code" := "To Bin Code";
          "Document Status" := GetDocumentStatus(0);
          WhsePickRqst."Completely Picked" :=
            "Document Status" = "Document Status"::"Completely Picked";
          IF NOT WhsePickRqst.INSERT THEN
            WhsePickRqst.MODIFY;
        END;
    END;

    BEGIN
    END.
  }
}

