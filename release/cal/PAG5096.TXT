OBJECT Page 5096 Task List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Task List;
               NOR=Oppgaveliste;
               SVE=Uppgiftslista];
    SourceTable=Table5080;
    DataCaptionExpr=Caption;
    PageType=List;
    OnInit=BEGIN
             CreateTodoEnable := TRUE; //**4PS.n
           END;

    OnFindRecord=BEGIN
                   RecordsFound := FIND(Which);
                   EXIT(RecordsFound);
                 END;

    OnAfterGetRecord=BEGIN
                       ContactNoOnFormat(FORMAT("Contact No."));
                     END;

    OnAfterGetCurrRecord=BEGIN
                           CALCFIELDS("Contact Name","Contact Company Name");
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 31      ;1   ;ActionGroup;
                      Name=Task;
                      CaptionML=[ENU=Task;
                                 NOR=Oppgave;
                                 SVE=Uppgift];
                      Image=Task }
      { 34      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mment;
                                 NOR=&Merknad;
                                 SVE=&Kommentar];
                      ToolTipML=[ENU=View or add comments.;
                                 NOR=Vis eller legg til merknader.;
                                 SVE=Visa eller l„gg till kommentarer.];
                      ApplicationArea=#Comments;
                      RunObject=Page 5072;
                      RunPageLink=Table Name=CONST(To-do),
                                  No.=FIELD(Organizer To-do No.),
                                  Sub No.=CONST(0);
                      Image=ViewComments }
      { 35      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Interaction Log E&ntries;
                                 NOR=Samhandlingsp&oster;
                                 SVE=&Interaktionslogg];
                      ToolTipML=[ENU=View interaction log entries for the task.;
                                 NOR=Vis samhandlingsposter for oppgaven.;
                                 SVE=Visa loggtransaktioner f”r uppgiften.];
                      ApplicationArea=#RelationshipMgmt;
                      RunObject=Page 11072053;
                      RunPageView=SORTING(To-do No.);
                      RunPageLink=To-do No.=FIELD(Organizer To-do No.);
                      Image=InteractionLog }
      { 50      ;2   ;Action    ;
                      CaptionML=[ENU=Postponed &Interactions;
                                 NOR=&Utsatte samhandlinger;
                                 SVE=Senarelagda &interaktioner];
                      ToolTipML=[ENU=View postponed interactions for the task.;
                                 NOR=Vis utsatte samhandlinger for oppgaven.;
                                 SVE=Visa senarelagda interaktioner f”r uppgiften.];
                      ApplicationArea=#RelationshipMgmt;
                      RunObject=Page 5082;
                      RunPageView=SORTING(To-do No.);
                      RunPageLink=To-do No.=FIELD(Organizer To-do No.);
                      Image=PostponedInteractions }
      { 52      ;2   ;Action    ;
                      CaptionML=[ENU=A&ttendee Scheduling;
                                 NOR=&Tidsplanlegging for deltakere;
                                 SVE=Deltagar&planering];
                      ToolTipML=[ENU=View the status of a scheduled meeting.;
                                 NOR=Vis statusen for et planlagt m›te.;
                                 SVE=Vissa status f”r ett schemalagt m”te.];
                      ApplicationArea=#RelationshipMgmt;
                      Image=ProfileCalender;
                      OnAction=VAR
                                 Task@1001 : Record 5080;
                               BEGIN
                                 Task.GET("Organizer To-do No.");
                                 PAGE.RUNMODAL(PAGE::"Attendee Scheduling",Task);
                               END;
                                }
      { 1100528701;2 ;Action    ;
                      CaptionML=[ENU=&Documents;
                                 SVE=&Dokument];
                      Image=Documents;
                      OnAction=VAR
                                 Todo@1100528703 : Record 5080;
                                 RecRef@1100528701 : RecordRef;
                                 DocumentFilters@1100528700 : Codeunit 11012432;
                               BEGIN
                                 //**4PS
                                 IF Todo.GET("Organizer To-do No.") THEN BEGIN
                                   RecRef.GETTABLE(Todo);
                                   DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, TRUE);
                                 END;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 32      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 NOR=F&unksjoner;
                                 SVE=Fu&nktion];
                      Image=Action }
      { 46      ;2   ;Action    ;
                      CaptionML=[ENU=Assign Activities;
                                 NOR=Tilordne aktiviteter;
                                 SVE=Tilldela aktiviteter];
                      ToolTipML=[ENU=View all the tasks that have been assigned to salespeople and teams. A task can be organizing meetings, making phone calls, and so on.;
                                 NOR=Vis alle oppgavene som er knyttet til selgere og prosjektgrupper. En oppgave kan for eksempel v‘re † arrangere m›ter, foreta telefonsamtaler og s† videre.;
                                 SVE=Visa alla uppgifter som har tilldelats s„ljare och team. En uppgift kan vara att anordna m”ten, ringa telefonsamtal o.s.v.];
                      ApplicationArea=#RelationshipMgmt;
                      Image=Allocate;
                      OnAction=VAR
                                 TempTask@1001 : TEMPORARY Record 5080;
                                 Todo@1100528700 : Record 5080;
                               BEGIN
                                 //**4PS.sn
                                 Todo.COPY(Rec);
                                 IF ContactNoWizard <> '' THEN
                                   Todo.SETRANGE("Contact No.", ContactNoWizard);
                                 IF ContactCompanyNoWizard <> '' THEN
                                   Todo.SETRANGE("Contact Company No.", ContactCompanyNoWizard);
                                 TempTask.AssignActivityFromTask(Todo);
                                 //**4PS.en
                                 //TempTask.AssignActivityFromTask(Rec); //**4PS.o
                               END;
                                }
      { 1100528705;2 ;Action    ;
                      CaptionML=[ENU=Create &Interaction;
                                 SVE=Skapa &interaktion];
                      Image=CreateInteraction;
                      OnAction=BEGIN
                                 //**4PS
                                 CreateInteraction;
                               END;
                                }
      { 42      ;2   ;Action    ;
                      Name=MakePhoneCall;
                      CaptionML=[ENU=Make &Phone Call;
                                 NOR=Sl† &nummeret;
                                 SVE=&Ring upp];
                      ToolTipML=[ENU=Call the selected contact.;
                                 NOR=Ring den valgte kontakten.;
                                 SVE=Ring upp den markerade kontakten.];
                      ApplicationArea=#RelationshipMgmt;
                      Image=Calls;
                      OnAction=VAR
                                 TempSegmentLine@1001 : TEMPORARY Record 11072040;
                                 ContCompanyNo@1003 : Code[10];
                                 ContactNo@1002 : Code[10];
                                 Contact@1100528701 : Record 5050;
                                 SalespersonPurchaser@1100528702 : Record 13;
                                 Campaign@1100528703 : Record 11072034;
                               BEGIN
                                 //**4PS.so
                                 //IF "Contact No." <> '' THEN
                                 //  ContactNo := "Contact No."
                                 //ELSE
                                 //  ContactNo := GETFILTER("Contact No.");
                                 //IF "Contact Company No." <> '' THEN
                                 //  ContCompanyNo := "Contact Company No."
                                 //ELSE
                                 //  ContCompanyNo := GETFILTER("Contact Company No.");
                                 //IF ContactNo = '' THEN BEGIN
                                 //  IF (Type = Type::Meeting) AND ("Team Code" = '') THEN
                                 //    ERROR(Text004);
                                 //  ERROR(Text005);
                                 //END;
                                 //TempSegmentLine."To-do No." := "No.";
                                 //TempSegmentLine."Contact No." := ContactNo;
                                 //TempSegmentLine."Contact Company No." := ContCompanyNo;
                                 //TempSegmentLine."Campaign No." := "Campaign No.";
                                 //TempSegmentLine."Salesperson Code" := "Salesperson Code";
                                 //TempSegmentLine.CreatePhoneCall;
                                 //**4PS.eo
                                 //**4PS.sn
                                 // See also TempSegLine.CreateInteractionFromToDo
                                 TempSegmentLine."To-do No." := "Organizer To-do No.";
                                 IF Contact.GET("Contact No.") THEN
                                   TempSegmentLine.VALIDATE("Contact No.", Contact."No.")
                                 ELSE BEGIN
                                   IF (Type = Type::Meeting) AND ("Team Code" = '') THEN
                                     ERROR(Text004);
                                   ERROR(Text005);
                                 END;
                                 IF SalespersonPurchaser.GET("Salesperson Code") THEN
                                   TempSegmentLine."Salesperson Code" := SalespersonPurchaser.Code;
                                 IF Campaign.GET("Campaign No.") THEN
                                   TempSegmentLine."Campaign No." := Campaign."No.";
                                 TempSegmentLine.CreatePhoneCall;
                                 //**4PS.en
                               END;
                                }
      { 3       ;2   ;Action    ;
                      Name=Delete Canceled Tasks;
                      CaptionML=[ENU=Delete Canceled Tasks;
                                 NOR=Slett annullerte oppgaver;
                                 SVE=Ta bort avbrutna uppgifter];
                      ToolTipML=[ENU=Find and delete canceled tasks.;
                                 NOR=Finn og slett annullerte oppgaver.;
                                 SVE=Hitta och ta bort avbrutna uppgifter.];
                      ApplicationArea=#All;
                      RunObject=Report 5188;
                      Image=Delete }
      { 1100525008;2 ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=ENU=&Call Centre Form;
                      Image=Calls;
                      OnAction=BEGIN
                                 //**4PS
                                 CreateCallInCallCenterPage;
                               END;
                                }
      { 1100525006;2 ;Action    ;
                      CaptionML=ENU=Copy to &Appointment in Outlook;
                      Image=ExportContact;
                      OnAction=VAR
                                 MSOutlookInterface@1100525000 : Codeunit 11012751;
                               BEGIN
                                 //**4PS
                                 MSOutlookInterface.ScheduleAppointment(Rec);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100528702;2 ;Action    ;
                      CaptionML=ENU=Copy to &Task in Outlook;
                      Promoted=Yes;
                      Image=ExportToDo;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MSOutlookInterface@1100528700 : Codeunit 11012751;
                               BEGIN
                                 //**4PS
                                 MSOutlookInterface.ScheduleTask(Rec);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100528704;2 ;Action    ;
                      CaptionML=ENU=My To-dos;
                      Image=BreakpointsList;
                      OnAction=BEGIN
                                 //**4PS
                                 SetFilterMyTasks;
                               END;
                                }
      { 33      ;1   ;Action    ;
                      Name=CreateTodo;
                      CaptionML=[ENU=&Create To-do;
                                 NOR=&Opprett oppgave;
                                 SVE=&Skapa Uppgift];
                      ToolTipML=[ENU=Create a new task.;
                                 NOR=Opprett en ny oppgave.;
                                 SVE=Skapa en ny uppgift.];
                      ApplicationArea=#RelationshipMgmt;
                      Promoted=Yes;
                      Enabled=CreateTodoEnable;
                      PromotedIsBig=Yes;
                      Image=NewToDo;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TempTask@1001 : TEMPORARY Record 5080;
                                 Todo@1100528700 : Record 5080;
                               BEGIN
                                 //**4PS.sn
                                 Todo.COPY(Rec);
                                 IF ContactNoWizard <> '' THEN
                                   Todo.SETRANGE("Contact No.", ContactNoWizard);
                                 IF ContactCompanyNoWizard <> '' THEN
                                   Todo.SETRANGE("Contact Company No.", ContactCompanyNoWizard);
                                 TempTask.CreateTaskFromTask(Todo);
                                 //**4PS.en
                                 //TempTask.CreateTaskFromTask(Rec);; //**4PS.o
                               END;
                                }
      { 1034    ;1   ;Action    ;
                      CaptionML=[ENU=Edit To-Do;
                                 NOR=Rediger arrang›roppgave;
                                 SVE=Redigera organisat”rsuppgift];
                      ToolTipML=[ENU=View general information about the task such as type, description, priority and status of the task, as well as the salesperson or team the task is assigned to.;
                                 NOR=Vis generell informasjon om oppgavene, for eksempel type, beskrivelse, prioritet og status for oppgaven, i tillegg til selgeren eller prosjektgruppen oppgaven er tilordnet til.;
                                 SVE=Visa allm„n information om uppgiften, till exempel typ, beskrivning, prioritet och uppgiftens status, samt vilken s„ljare eller vilket team som tilldelats uppgiften.];
                      ApplicationArea=#RelationshipMgmt;
                      Promoted=Yes;
                      Image=Edit;
                      OnAction=VAR
                                 Todo@1100528701 : Record 5080;
                                 TodoCard@1100528700 : Page 5098;
                               BEGIN
                                 //**4PS (standard action, 4PS code)
                                 Todo.SETRANGE("No.", "Organizer To-do No.");
                                 TodoCard.SETTABLEVIEW(Todo);
                                 TodoCard.SetCreateTodoAllowed(NOT CreateTodoNotAllowed);
                                 TodoCard.SetContactNoWizard(ContactNoWizard);
                                 TodoCard.SetContactCompanyNoWizard(ContactCompanyNoWizard);
                                 TodoCard.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the task is closed.;
                           NOR=Angir at oppgaven er lukket.;
                           SVE=Anger att uppgiften „r avslutad.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Closed }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the task should be started. There are certain rules for how dates should be entered found in How to: Enter Dates and Times.;
                           NOR=Angir datoen da oppgaven skal starte. Det finnes bestemte regler for hvordan datoer skal registreres. Disse finner du under L‘re hvordan du setter inn datoer og klokkeslett.;
                           SVE=Anger datumet d† uppgiften startas. Det finns vissa regler f”r hur datum anges i S† h„r anger du datum och tid.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Date }

    { 11012010;2;Field    ;
                SourceExpr="Start Time" }

    { 1100525009;2;Field  ;
                SourceExpr="System To-do Type" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of the task.;
                           NOR=Angir oppgavetypen.;
                           SVE=Anger uppgiftens typ.];
                OptionCaptionML=[ENU=" ,Meeting,Phone Call";
                                 NOR=" ,M›te,Telefonsamtale";
                                 SVE=" ,M”te,Telefonsamtal"];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Type }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the description of the task.;
                           NOR=Angir beskrivelsen av oppgaven.;
                           SVE=Anger en beskrivning av uppgiften.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Description }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the priority of the task.;
                           NOR=Angir prioriteten for oppgaven.;
                           SVE=Anger uppgiftens prioritet.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Priority }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of the task. There are five options: Not Started, In Progress, Completed, Waiting and Postponed.;
                           NOR=Angir statusen for oppgaven. Det er fem alternativer: Ikke startet, I arbeid, Ferdig, Venter og Utsatt.;
                           SVE=Anger uppgiftens status. Det finns fem alternativ: Ej startad, P† g†ng Avslutad V„ntar och Uppskjuten.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Status }

    { 45  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the organizer's task. The field is not editable.;
                           NOR=Angir nummeret for arrang›roppgaven. Feltet kan ikke redigeres.;
                           SVE=Anger organisat”rens uppgiftsnummer. F„ltet g†r inte att „ndra.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Organizer To-do No." }

    { 1100525012;2;Field  ;
                SourceExpr="Ending Date" }

    { 1100525013;2;Field  ;
                SourceExpr="Ending Time" }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date the task was closed.;
                           NOR=Angir datoen da oppgaven ble lukket.;
                           SVE=Anger datumet d† uppgiften avslutades.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Date Closed" }

    { 43  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the task has been canceled.;
                           NOR=Angir at oppgaven er kansellert.;
                           SVE=Anger att uppgiften har avbrutits.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Canceled }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that a comment has been assigned to the task.;
                           NOR=Angir at en kommentar er tilordnet oppgaven.;
                           SVE=Anger att en kommentar har tilldelats till uppgiften.];
                ApplicationArea=#Comments;
                SourceExpr=Comment }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the contact linked to the task.;
                           NOR=Angir nummeret til kontakten som er knyttet til oppgaven.;
                           SVE=Anger numret f”r kontakten som „r kopplad till uppgiften.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Contact No.";
                OnLookup=VAR
                           Task@1000 : Record 5080;
                           Cont@1004 : Record 5050;
                         BEGIN
                           IF Type = Type::Meeting THEN BEGIN
                             Task.SETRANGE("No.","No.");
                             PAGE.RUNMODAL(PAGE::"Attendee Scheduling",Task);
                           END ELSE BEGIN
                             IF Cont.GET("Contact No.") THEN;
                             IF PAGE.RUNMODAL(0,Cont) = ACTION::LookupOK THEN;
                           END;
                         END;
                          }

    { 1100528700;2;Field  ;
                Name=ContactName;
                SourceExpr="Contact Name" }

    { 47  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the contact number of the company for which the contact involved in the task works.;
                           NOR=Angir kontaktnummeret for det selskapet som kontakten som er involvert i oppgaven, jobber for.;
                           SVE=Anger kontaktnumret till f”retaget d„r kontakten som ber”rs av uppgiften arbetar.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Contact Company No.";
                Visible=FALSE }

    { 1100528706;2;Field  ;
                Name=ContactCompanyName;
                SourceExpr="Contact Company Name" }

    { 24  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the salesperson assigned to the task.;
                           NOR=Angir koden for selgeren som er tilordnet til oppgaven.;
                           SVE=Anger koden f”r s„ljaren som tilldelades uppgiften.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Salesperson Code" }

    { 1100528710;2;Field  ;
                SourceExpr="Name Sales Person" }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the team to which the task is assigned.;
                           NOR=Angir koden for prosjektgruppen som oppgaven er tilordnet til.;
                           SVE=Anger koden f”r teamet som tilldelades uppgiften.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Team Code" }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the campaign to which the task is linked.;
                           NOR=Angir nummeret p† kampanjen som oppgaven er knyttet til.;
                           SVE=Anger kampanjnumret som uppgiften „r kopplad till.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Campaign No." }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the involved entry or record, according to the specified number series.;
                           NOR=Angir nummeret p† den aktuelle oppf›ringen eller posten, i henhold til den angitte nummerserien.;
                           SVE=Anger numret f”r den ber”rda transaktionen eller posten, enligt den angivna nummerserien.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="No." }

    { 11012008;2;Field    ;
                SourceExpr=Location }

    { 11012004;2;Field    ;
                SourceExpr="Responsibility Code" }

    { 11012006;2;Field    ;
                SourceExpr="Responsible Person" }

    { 1100528703;2;Field  ;
                DrillDown=No;
                SourceExpr="Name Employee";
                Importance=Additional }

    { 1100528721;2;Field  ;
                SourceExpr=Rubric;
                Visible=FALSE }

    { 1100409000;2;Field  ;
                SourceExpr="Standard To-do Code" }

    { 1100409001;2;Field  ;
                SourceExpr="Standard To-do Description" }

    { 11012000;2;Field    ;
                SourceExpr="Try-out No." }

    { 1100528712;2;Field  ;
                SourceExpr="Description Try-out" }

    { 11012002;2;Field    ;
                SourceExpr="Try-out Quote No." }

    { 1100528714;2;Field  ;
                SourceExpr="Description Try-out Quote" }

    { 1100525010;2;Field  ;
                SourceExpr="Estimate No." }

    { 1100409002;2;Field  ;
                SourceExpr="Estimate Description" }

    { 1100528707;2;Field  ;
                SourceExpr="Project No." }

    { 1100528716;2;Field  ;
                SourceExpr="Project Description" }

    { 1100525007;2;Field  ;
                SourceExpr="Building Code" }

    { 1100528717;2;Field  ;
                SourceExpr="Service Location No." }

    { 1100528715;2;Field  ;
                SourceExpr="Service Contract No." }

    { 1100528718;2;Field  ;
                SourceExpr="Description Contract" }

    { 1100528711;2;Field  ;
                SourceExpr="Service Call No." }

    { 1100528713;2;Field  ;
                SourceExpr="Service Order No." }

    { 1100525011;2;Field  ;
                SourceExpr="Description Order" }

    { 1100528719;2;Field  ;
                SourceExpr="Parcel No." }

    { 1100525002;2;Field  ;
                SourceExpr="Customer No.";
                Visible=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="Document No.";
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Cust. Ledger Entry No.";
                Visible=FALSE;
                OnLookup=VAR
                           CustLedgerEntry@1100529100 : Record 21;
                         BEGIN
                           //**4PS
                           CustLedgerEntry.SETRANGE("Entry No.", "Cust. Ledger Entry No.");
                           PAGE.RUNMODAL(PAGE::"Customer Ledger Entries", CustLedgerEntry);
                         END;
                          }

    { 11012012;2;Field    ;
                SourceExpr="Planned by";
                Visible=FALSE }

    { 1100528709;2;Field  ;
                SourceExpr="Planned on";
                Visible=FALSE }

    { 1100525005;2;Field  ;
                SourceExpr="Modified by";
                Visible=FALSE }

    { 1100525003;2;Field  ;
                SourceExpr="Last Date Modified";
                Visible=FALSE }

    { 1100525001;2;Field  ;
                SourceExpr="Last Time Modified";
                Visible=FALSE }

    { 1100528500;2;Field  ;
                SourceExpr="Estimate No. RAW";
                Visible=FALSE }

    { 1100528501;2;Field  ;
                SourceExpr="Estimate Description RAW";
                Visible=FALSE }

    { 1100528708;1;Part   ;
                Name=CommentLineSF;
                SubPageLink=Table Name=CONST(To-do),
                            No.=FIELD(Organizer To-do No.),
                            Sub No.=CONST(0);
                PagePartID=Page11126080 }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1100528800;1;Part   ;
                SubPageLink=No.=FIELD(Contact No.);
                PagePartID=Page11130242;
                PartType=Page }

    { 1900383207;1;Part   ;
                ApplicationArea=#RecordLinks;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                ApplicationArea=#Notes;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Cont@1000 : Record 5050;
      Contact1@1009 : Record 5050;
      Salesperson@1001 : Record 13;
      Campaign@1002 : Record 11072034;
      Team@1003 : Record 5083;
      Opp@1004 : Record 5092;
      SegHeader@1005 : Record 11072039;
      RecordsFound@1008 : Boolean;
      Text000@1007 : TextConst 'ENU=(Multiple);NOR=(Flere);SVE=(Flera)';
      Text001@1006 : TextConst 'ENU=untitled;NOR=uten navn;SVE=namnl”s';
      Text004@1010 : TextConst 'ENU=The Make Phone Call function for this task is available only on the Attendee Scheduling window.;NOR=Funksjonen Sl† nummeret for denne oppgaven er bare tilgjengelig fra vinduet Tidsplanlegging for deltakere.;SVE=Funktionen Ring upp f”r den h„r uppgiften „r endast tillg„nglig i f”nstret Deltagarplanering.';
      Text005@1011 : TextConst 'ENU=You must select a task with a contact assigned to it before you can use the Make Phone Call function.;NOR=Du m† velge en oppgave med en tilordnet kontakt f›r du kan bruke funksjonen Sl† nummeret.;SVE=Du m†ste markera en uppgift med en kontakt tilldelad till uppgiften f”re anv„ndning av funktionen Ring upp.';
      CreateTodoNotAllowed@1100528700 : Boolean;
      CreateTodoEnable@19076373 : Boolean INDATASET;
      ContactNoWizard@1100528702 : Code[10];
      ContactCompanyNoWizard@1100528703 : Code[10];
      Contact@1100525000 : Record 5050;

    LOCAL PROCEDURE Caption@1() : Text[260];
    VAR
      CaptionStr@1000 : Text[260];
    BEGIN
      IF Cont.GET(GETFILTER("Contact Company No.")) THEN BEGIN
        Contact1.GET(GETFILTER("Contact Company No."));
        IF Contact1."No." <> Cont."No." THEN
          CaptionStr := COPYSTR(Cont."No." + ' ' + Cont.Name,1,MAXSTRLEN(CaptionStr));
      END;
      IF Cont.GET(GETFILTER("Contact No.")) THEN
        CaptionStr := COPYSTR(CaptionStr + ' ' + Cont."No." + ' ' + Cont.Name,1,MAXSTRLEN(CaptionStr));
      IF Salesperson.GET(GETFILTER("Salesperson Code")) THEN
        CaptionStr := COPYSTR(CaptionStr + ' ' + Salesperson.Code + ' ' + Salesperson.Name,1,MAXSTRLEN(CaptionStr));
      IF Team.GET(GETFILTER("Team Code")) THEN
        CaptionStr := COPYSTR(CaptionStr + ' ' + Team.Code + ' ' + Team.Name,1,MAXSTRLEN(CaptionStr));
      IF Campaign.GET(GETFILTER("Campaign No.")) THEN
        CaptionStr := COPYSTR(CaptionStr + ' ' + Campaign."No." + ' ' + Campaign.Description,1,MAXSTRLEN(CaptionStr));
      IF Opp.GET(GETFILTER("Opportunity No.")) THEN
        CaptionStr := COPYSTR(CaptionStr + ' ' + Opp."No." + ' ' + Opp.Description,1,MAXSTRLEN(CaptionStr));
      IF SegHeader.GET(GETFILTER("Segment No.")) THEN
        CaptionStr := COPYSTR(CaptionStr + ' ' + SegHeader."No." + ' ' + SegHeader.Description,1,MAXSTRLEN(CaptionStr));
      IF CaptionStr = '' THEN
        CaptionStr := Text001;

      EXIT(CaptionStr);
    END;

    LOCAL PROCEDURE ContactNoOnFormat@19025756(Text@19019593 : Text[1024]);
    BEGIN
      IF Type = Type::Meeting THEN
        Text := Text000;
    END;

    PROCEDURE CreateCallInCallCenterPage@1100525000();
    VAR
      SegLine@1100525002 : Record 11072040;
      Contact@1100528700 : Record 5050;
      SalespersonPurchaser@1100528701 : Record 13;
      Campaign@1100528702 : Record 11072034;
    BEGIN
      //**4PS
      SegLine."To-do No." := "Organizer To-do No.";
      IF Contact.GET("Contact No.") THEN
        SegLine.VALIDATE("Contact No.", Contact."No.")
      ELSE BEGIN
        IF (Type = Type::Meeting) AND ("Team Code" = '') THEN
          ERROR(Text004);
        ERROR(Text005);
      END;
      IF SalespersonPurchaser.GET("Salesperson Code") THEN
        SegLine."Salesperson Code" := SalespersonPurchaser.Code;
      IF Campaign.GET("Campaign No.") THEN
        "Campaign No." := Campaign."No.";
      SegLine."Line No." := 777;
      SegLine.CreateCallUsingCallCenterPage;
      CurrPage.UPDATE;
    END;

    PROCEDURE SetCreateTodoAllowed@1100528700(NewValue@1100528700 : Boolean);
    BEGIN
      //**4PS
      CreateTodoNotAllowed := NOT NewValue;
    END;

    PROCEDURE SetContactNoWizard@1100528701(No@1100528700 : Code[10]);
    BEGIN
      //**4PS
      ContactNoWizard := No;
    END;

    PROCEDURE SetContactCompanyNoWizard@1100528703(No@1100528700 : Code[10]);
    BEGIN
      //**4PS
      ContactCompanyNoWizard := No;
    END;

    PROCEDURE EnableFields@1100528702();
    BEGIN
      //**4PS
      CreateTodoEnable := NOT CreateTodoNotAllowed;
    END;

    BEGIN
    END.
  }
}

