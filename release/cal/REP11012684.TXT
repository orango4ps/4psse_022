OBJECT Report 11012684 Export Hours SCAB
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Stunden SCAB exportieren;
               ENU=Export Hours SCAB;
               NLD=Exporteren uren SCAB;
               NOR=Eksporter timer SCAB;
               SVE=Exportera timmar SCAB];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  TempBlob@1100528403 : Record 99008535;
                  ThreeTierAutomationMgt@1100528402 : Codeunit 419;
                  OStream@1100528401 : OutStream;
                  ExportHoursSCAB@1100528400 : XMLport 11012079;
                  InStream@1100529500 : InStream;
                  ToFile@1100529501 : Text;
                  ClientTypeManagement@1100529502 : Codeunit 4030;
                BEGIN
                  TempBlob.Blob.CREATEOUTSTREAM(OStream);
                  ExportHoursSCAB.SETDESTINATION(OStream);
                  ExportHoursSCAB.SetGlobalVars(
                    DocumentFilterCde,
                    EmployerCde,
                    NotExportedLinesOnly,
                    DoNotExportProjectNo,
                    PeriodFilter,
                    DoNotExportCostObject,
                    DoNotExportServiceOrder);
                  ExportHoursSCAB.EXPORT;

                  IF ClientTypeManagement.IsCommonWebClientType THEN BEGIN
                    TempBlob.Blob.CREATEINSTREAM(InStream);
                    ToFile := 'TRUREN.EXP';
                    DOWNLOADFROMSTREAM(InStream, Text000, '', '', ToFile);
                  END ELSE
                    ThreeTierAutomationMgt.BLOBExport4PS(
                      TempBlob, ExportHoursSCAB.FILENAME, FALSE, FALSE);
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100528405;;Container;
                  ContainerType=ContentArea }

      { 1100528404;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100528403;2;Field  ;
                  Name=DocumentFilterCde;
                  CaptionML=[DEU=Belegartenfilter;
                             ENU=Document Filter;
                             NLD=Documentfilter;
                             NOR=Dokumentfilter;
                             SVE=Dokumentfilter];
                  SourceExpr=DocumentFilterCde;
                  OnValidate=VAR
                               lDocNo@1100528400 : Code[20];
                               HoursExportRec@1100528401 : Record 11012041;
                             BEGIN
                               lDocNo := '';
                               HoursExportRec.SETCURRENTKEY("Document No.");
                               HoursExportRec.SETFILTER("Document No.",DocumentFilterCde);
                               IF HoursExportRec.FINDSET THEN
                                 REPEAT
                                   IF HoursExportRec."Document No." <> lDocNo THEN
                                     MESSAGE(Text016, HoursExportRec."Document No.");
                                   lDocNo := HoursExportRec."Document No.";
                                 UNTIL HoursExportRec.NEXT = 0;
                               HoursExportRec.SETRANGE("Document No.");
                             END;
                              }

      { 1100528402;2;Field  ;
                  Name=Employer;
                  CaptionML=[DEU=FÅr Arbeitgeber;
                             ENU=For Employer;
                             NLD=Voor werkgever;
                             NOR=For arbeidsgiver;
                             SVE=Fîr arbetsgivare];
                  SourceExpr=EmployerCde;
                  OnLookup=VAR
                             EmployerPage@1100528401 : Page 11012064;
                             EmployerRec@1100528400 : Record 11012013;
                           BEGIN
                             CLEAR(EmployerPage);
                             EmployerPage.LOOKUPMODE(TRUE);
                             IF EmployerPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               EmployerPage.GETRECORD(EmployerRec);
                               EmployerCde := EmployerRec.Code;
                             END;
                           END;
                            }

      { 1100528401;2;Field  ;
                  Name=NotExportedLinesOnly;
                  CaptionML=[DEU=Ausschliesslich nicht-exportierte Zeilen;
                             ENU=Not Exported Lines only;
                             NLD=Alleen niet geâxporteerde regels;
                             NOR=Kun ikke-eksporterte rader;
                             SVE=Endast icke-exporterade rader];
                  SourceExpr=NotExportedLinesOnly }

      { 1100528400;2;Field  ;
                  Name=DoNotExportProjectNo;
                  CaptionML=[DEU=Kein Export von Projekt Nr.;
                             ENU=Don't export Project No.;
                             NLD=Projectnr. niet exporteren;
                             NOR=Ikke eksporter prosjektnr.;
                             SVE=Exportera inte projektnr];
                  SourceExpr=DoNotExportProjectNo }

      { 1100529500;2;Field  ;
                  Name=DoNotExportCostObject;
                  CaptionML=[DEU=Kein Export von KostentrÑger;
                             ENU=Don't export cost object;
                             NLD=Kostendrager niet exporteren];
                  SourceExpr=DoNotExportCostObject }

      { 1100527650;2;Field  ;
                  Name=DoNotExportServiceOrder;
                  CaptionML=[DEU=Kein Export von Serviceauftragsnr;
                             ENU=Don't export Service Order No.;
                             NLD=Service Order nr. niet exporteren];
                  SourceExpr=DoNotExportServiceOrder }

      { 1100525000;2;Field  ;
                  Name=PeriodFilter;
                  CaptionML=[DEU=Periodenfilter;
                             ENU=PeriodFilter;
                             NLD=Periodefilter];
                  SourceExpr=PeriodFilter;
                  OnLookup=BEGIN
                             DateSelectionManagement.GetPeriod(PeriodFilter);
                             Text := PeriodFilter;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      DocumentFilterCde@1100528406 : Code[100];
      EmployerCde@1100528405 : Code[20];
      NotExportedLinesOnly@1100528402 : Boolean;
      DoNotExportProjectNo@1100528401 : Boolean;
      Text016@1100528400 : TextConst 'DEU=Achtung, Belegnummer %1 ist bereits frÅher exportiert worden.;ENU=Document Number %1 has been exported before.;NLD=Let op, documentnummer %1 is eerder geâxporteerd.;NOR=Dokumentnr %1 har blitt eksportert tidligere.;SVE=Dokumentnr %1 har exporterats tidigare.';
      PeriodFilter@1100525000 : Text[30];
      DateSelectionManagement@1100525002 : Codeunit 11130005;
      DoNotExportCostObject@1100529500 : Boolean;
      Text000@1100529501 : TextConst 'DEU=Export Datei...;ENU=Export File...;NLD=Exporteer bestand...';
      DoNotExportServiceOrder@1100527651 : Boolean;

    PROCEDURE SetSelection@10(DocumentNo@11012000 : Code[20]);
    BEGIN
      DocumentFilterCde := DocumentNo;
    END;

    BEGIN
    {
      This report is only used to run XMLport Export PMK (SCAB) to prevent selection of the
      output file by the user.
    }
    END.
  }
  RDLDATA
  {
  }
}

