OBJECT Page 11126932 DSP Assign Comp Serv Order  SP
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[DEU=DSP Zuteilungsmitteilung SP;
               ENU=DSP Assignm. Communication SP;
               NLD=DSP Assignm. Communication SP];
    SourceTable=Table11012823;
    PageType=ListPart;
    SourceTableTemporary=Yes;
    OnAfterGetRecord=BEGIN
                       StyleTxt := SetStyle;
                     END;

  }
  CONTROLS
  {
    { 1100525000;0;Container;
                ContainerType=ContentArea }

    { 1100525001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100528805;2;Field  ;
                CaptionML=[DEU=Zeilenart;
                           ENU=Line Type;
                           NLD=Regelsoort;
                           NOR=Radtype;
                           SVE=Radtyp];
                SourceExpr=LineType;
                StyleExpr=StyleTxt }

    { 1100528300;2;Field  ;
                SourceExpr=Name }

    { 1100528804;2;Field  ;
                CaptionML=[NOR=Telefonnr.;
                           SVE=Telefonnr];
                SourceExpr="Phone No.";
                Importance=Promoted;
                StyleExpr=StyleTxt }

    { 1100528802;2;Field  ;
                SourceExpr="Mobile Phone No.";
                StyleExpr=StyleTxt }

    { 1100528801;2;Field  ;
                SourceExpr="E-Mail";
                Importance=Promoted;
                StyleExpr=StyleTxt }

  }
  CODE
  {
    VAR
      GenericTempTable@1100528802 : TEMPORARY Record 11020579;
      DSPManagement@1100528800 : Codeunit 11126714;
      StyleTxt@1100528801 : Text;
      SERVICEORDERTXT@1100528803 : TextConst 'ENU=SERVICEORDER';
      CURRENTTXT@1100528302 : TextConst 'DEU=Aktuell;ENU=Current;NLD=Huidige';
      PREVIOUSTXT@1100528301 : TextConst 'DEU=ZurÅck;ENU=Previous;NLD=Voorgaande';
      REVISEDTXT@1100528300 : TextConst 'DEU=öberarbeitete;ENU=Revised;NLD=Herziene';

    PROCEDURE InitializeRec@1100528803(EntryNo@1100528800 : BigInteger);
    VAR
      ServiceOrder@1100528801 : Record 11012823;
      DSPAssignment@1100528803 : Record 11126740;
      OPreviousDSPAssignment@1100528805 : Record 11126740;
      TEMPPreviousServiceOrder@1100528804 : TEMPORARY Record 11012823;
      TEMPRevisedServiceOrder@1100528802 : TEMPORARY Record 11012823;
    BEGIN
      DSPAssignment.GET(EntryNo);
      DSPManagement.GetPreviousProcessedDspAssignment(EntryNo, OPreviousDSPAssignment);

      IF ServiceOrder.GET(DSPAssignment."Service Order No.") THEN BEGIN
        COPY(ServiceOrder);
        INSERT;
        GenericTempTable."Key Code1" := SERVICEORDERTXT;
        GenericTempTable."Key Code2" := CURRENTTXT;
        GenericTempTable."Key Code3" := "No.";
        GenericTempTable.INSERT;
      END;

      IF OPreviousDSPAssignment."Entry No." <> 0 THEN BEGIN
        DSPManagement.CreateTEMPServiceOrder(OPreviousDSPAssignment."Entry No.", TEMPPreviousServiceOrder);

        IF TEMPPreviousServiceOrder.FINDSET THEN BEGIN
          COPY(TEMPPreviousServiceOrder);
          "No." += 'P';
          INSERT;
          GenericTempTable."Key Code1" := SERVICEORDERTXT;
          GenericTempTable."Key Code2" := PREVIOUSTXT;
          GenericTempTable."Key Code3" := "No.";
          GenericTempTable.INSERT;
        END;
      END;

      IF DSPAssignment."No. Of Adjustments" <> 0 THEN BEGIN
        DSPManagement.CreateTEMPServiceOrder(EntryNo, TEMPRevisedServiceOrder);

        IF TEMPRevisedServiceOrder.FINDSET THEN BEGIN
          COPY(TEMPRevisedServiceOrder);
          "No." += 'R';
          INSERT;
          GenericTempTable."Key Code1" := SERVICEORDERTXT;
          GenericTempTable."Key Code2" := REVISEDTXT;
          GenericTempTable."Key Code3" := "No.";
          GenericTempTable.INSERT;
        END;
      END;
    END;

    LOCAL PROCEDURE RevisedDSPOrderLine@1100528800() : Boolean;
    BEGIN
      GenericTempTable.SETRANGE("Key Code1", SERVICEORDERTXT);
      GenericTempTable.SETRANGE("Key Code2", REVISEDTXT);
      GenericTempTable.SETRANGE("Key Code3", "No.");
      IF GenericTempTable.FINDFIRST THEN
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE PreviousDSPOrderLine@1100528807() : Boolean;
    BEGIN
      GenericTempTable.SETRANGE("Key Code1", SERVICEORDERTXT);
      GenericTempTable.SETRANGE("Key Code2", PREVIOUSTXT);
      GenericTempTable.SETRANGE("Key Code3", "No.");
      IF GenericTempTable.FINDFIRST THEN
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE ServiceOrderLine@1100528808() : Boolean;
    BEGIN
      GenericTempTable.SETRANGE("Key Code1", SERVICEORDERTXT);
      GenericTempTable.SETRANGE("Key Code2", CURRENTTXT);
      GenericTempTable.SETRANGE("Key Code3", "No.");
      IF GenericTempTable.FINDFIRST THEN
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE LineType@1100528805() : Text;
    BEGIN
      IF RevisedDSPOrderLine THEN EXIT(REVISEDTXT);
      IF PreviousDSPOrderLine THEN EXIT(PREVIOUSTXT);
      EXIT(CURRENTTXT);
    END;

    LOCAL PROCEDURE SetStyle@1100528806() : Text;
    BEGIN
      IF PreviousDSPOrderLine THEN EXIT('Strong');
      IF RevisedDSPOrderLine THEN EXIT('Favorable');
      EXIT('');
    END;

    BEGIN
    END.
  }
}

