OBJECT Codeunit 11229307 Create Demo Data PLA
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1100525001 : TextConst 'ENU="Dear %1,%4 %4Thank you for creating a demo account.%4Below you can find instructions on how to start using the 4PS Plant App: %4%4 1. Download the app from the store (<a href=""https://play.google.com/store/apps/details?id=com.fps.pla&hl=nl"">Android</a>, <a href=""https://itunes.apple.com/nl/app/4ps-materieel/id1331485602?mt=8"">iOS</a>))%4%4 2. After installation click <a href=""https://pla.4ps.nl/login/?username=%2&proxy=%5"">here (Android)</a> or <a href=""fps.pla://login/?username=%2&proxy=%5"">here (iOS)</a>  to start the app.%4 <i>The app opens and the connection with the back-office will be set.</i>%4You can find a working link on <a href=""%5"">this page</a> of the above link doesn''t work (which is the case in some mail clients).%4%4"';
      Text001@1100525000 : TextConst 'ENU=3. Log in with the following credentials:%4User Name: %2%4Password: %3%4%4 4. Refresh the work order overview to fetch the orders that are prepared for you!%4 <i>You can always get new orders. You can find that possibility on the settings page.</i>%4%4With kind regards,%4 4PS';
      Text002@1100525002 : TextConst 'ENU=Login details for the Plant App';

    PROCEDURE CreateDemoUser@1100525000(Employee@1100525001 : Record 5200) : Boolean;
    VAR
      AppUser@1100528104 : Record 11130031;
      ResourceWOP@1100528105 : Record 11229278;
      Password@1100525000 : Text;
    BEGIN
      IF NOT ResourceWOP.GET(Employee."No.") THEN BEGIN
        ResourceWOP.INIT;
        ResourceWOP."No." := Employee."No.";
        ResourceWOP.VALIDATE(Name, Employee."Last Name");
        ResourceWOP.VALIDATE(Company, COMPANYNAME);
        ResourceWOP.VALIDATE(Type, ResourceWOP.Type::Employee);
        ResourceWOP.VALIDATE("Source No.", Employee."No.");
        ResourceWOP.VALIDATE("Synchronize FSA", ResourceWOP."Synchronize FSA"::"Changes Only");
        ResourceWOP.INSERT(TRUE);
      END;

      ResourceWOP.VALIDATE("Active in PLA" , TRUE);
      ResourceWOP.MODIFY;


      IF NOT AppUser.GET(Employee."No.") THEN BEGIN
        AppUser.INIT;
        AppUser.Username := Employee."No.";
        AppUser.VALIDATE("Resource No.", ResourceWOP."No.");
        AppUser.VALIDATE("Employee No.", Employee."No.");
        AppUser.VALIDATE(Active, TRUE);
        AppUser.INSERT(TRUE);
      END;

      Password := GeneratePassword();
      AppUser.VALIDATE(Password, Password);
      AppUser.MODIFY(TRUE);

      AuthorizeOrderPicker(Employee."No.");
      CreatePlantOrdersForResource(ResourceWOP."No.");
      COMMIT;

      SendEmail(AppUser, Employee, Password);
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE GeneratePassword@1100528302() : Text;
    VAR
      StringFunctions@1100525000 : Codeunit 11012273;
      PasswordPlain@1100525001 : Text;
    BEGIN
      StringFunctions.GeneratePasswordPlainText(PasswordPlain, 8);
      EXIT(PasswordPlain);
    END;

    LOCAL PROCEDURE SendEmail@1100528101(AppUser@1100528300 : Record 11130031;Employee@1100525000 : Record 5200;Password@1100525002 : Text);
    VAR
      MailTemplate@1100528303 : Record 11229450;
      PlantAppSetup@1100528307 : Record 11124924;
      MailTemplateManagement@1100528304 : Codeunit 11012622;
      SMTPMail@1100528301 : Codeunit 400;
      StringFunctions@1100528305 : Codeunit 11012273;
      BodyText@1100528100 : Text;
      SubjectText@1100528302 : Text;
      MailTemplateNo@1100528306 : Integer;
    BEGIN
      MailTemplateNo := 84;
      PlantAppSetup.GET;
      MailTemplateManagement.GetMailTemplate(MailTemplate, MailTemplateNo, '');
      MailTemplateManagement.GetLayoutTextSubstitutedSubjectAndTotalBody(MailTemplateNo, '', AppUser, SubjectText, BodyText);
      IF (NOT MailTemplate."Use Mail Template Subject Text") THEN
        SubjectText := Text002;
      IF (SubjectText = '') THEN
        SubjectText := Text002;
      IF (BodyText = '') THEN BEGIN
        BodyText := STRSUBSTNO(Text000, Employee."First Name", Employee."Company E-Mail", Password, STRSUBSTNO('%1%2', StringFunctions.CarriageReturn, StringFunctions.LineFeed), PlantAppSetup."Proxy URL");
        BodyText += STRSUBSTNO(Text001, Employee."First Name", Employee."Company E-Mail", Password, STRSUBSTNO('%1%2', StringFunctions.CarriageReturn, StringFunctions.LineFeed), PlantAppSetup."Proxy URL");
      END;

      SMTPMail.CreateMessage(MailTemplate."From Name", MailTemplate.From, Employee."Company E-Mail", SubjectText, BodyText, TRUE);
      SMTPMail.Send;
    END;

    PROCEDURE CreatePlantOrdersForResource@1100525001(ResourceNo@1100525000 : Code[20]) : Boolean;
    VAR
      PlantOrder@1100525001 : Record 11012556;
      PlantOrderType@1100525002 : 'Arrival,Removal,Other Transfers,Negative Inventory Correction';
    BEGIN
      IF (ResourceNo = '') THEN
        EXIT(FALSE);

      CreatePlantOrderForResource(ResourceNo, PlantOrderType::Arrival,'4500 WERF', '5000DEPOT KEPLERLAAN');
      CreatePlantOrderForResource(ResourceNo, PlantOrderType::Arrival,'4500 WERF', '5000DEPOT KEPLERLAAN');
      CreatePlantOrderForResource(ResourceNo, PlantOrderType::Arrival,'4500 WERF', '5000DEPOT KEPLERLAAN');

      CreatePlantOrderForResource(ResourceNo, PlantOrderType::Removal,'5000DEPOT KEPLERLAAN', '4500 WERF');
      CreatePlantOrderForResource(ResourceNo, PlantOrderType::Removal,'5000DEPOT KEPLERLAAN', '4500 WERF');
      CreatePlantOrderForResource(ResourceNo, PlantOrderType::Removal,'5000DEPOT KEPLERLAAN', '4500 WERF');
    END;

    LOCAL PROCEDURE CreatePlantOrderForResource@1100525002(ResourceNo@1100525002 : Code[20];Type@1100525000 : 'Arrival,Removal,Other Transfers,Negative Inventory Correction';FromLocation@1100525003 : Code[20];ToLocation@1100525004 : Code[20]);
    VAR
      PlantOrder@1100525001 : Record 11012556;
    BEGIN
      PlantOrder.INIT;
      PlantOrder.INSERT(TRUE);

      PlantOrder.VALIDATE(Type, Type);
      PlantOrder.VALIDATE("Transfer Date", TODAY);
      PlantOrder.VALIDATE("From Location", FromLocation);
      PlantOrder.VALIDATE("To Location", ToLocation);
      PlantOrder.MODIFY(TRUE);

      CreatePlantOrderLines(PlantOrder, ResourceNo);
    END;

    LOCAL PROCEDURE CreatePlantOrderLines@1100525005(PlantOrder@1100525000 : Record 11012556;ResourceNo@1100525002 : Code[20]);
    VAR
      PlantOrderLine@1100525001 : Record 11012557;
    BEGIN
      CreatePlantOrderLine(PlantOrder."No.", PlantOrder.Type, 0, '10101', ResourceNo);
      CreatePlantOrderLine(PlantOrder."No.", PlantOrder.Type, 0, '20101', ResourceNo);
      CreatePlantOrderLine(PlantOrder."No.", PlantOrder.Type, 0, '30101', ResourceNo);
      CreatePlantOrderLine(PlantOrder."No.", PlantOrder.Type, 0, '40101', ResourceNo);
      CreatePlantOrderLine(PlantOrder."No.", PlantOrder.Type, 2, 'AR000002', ResourceNo);
    END;

    LOCAL PROCEDURE CreatePlantOrderLine@1100525007(PlantOrderNo@1100525000 : Code[10];PlantOrderType@1100525006 : 'Arrival,Removal,Other Transfers,Negative Inventory Correction';Type@1100525003 : 'Plant,Text,Item';TypeCode@1100525004 : Code[20];ResourceNo@1100525002 : Code[20]);
    VAR
      PlantOrderLine@1100525001 : Record 11012557;
      PlantType@1100525005 : Record 11012551;
    BEGIN
      PlantOrderLine.INIT;
      PlantOrderLine.VALIDATE("Plant Order No.", PlantOrderNo);
      PlantOrderLine."Line No." := GetPlantOrderLineNo(PlantOrderNo);

      PlantOrderLine.VALIDATE(Type, Type);
      IF Type = Type::Plant THEN BEGIN
        PlantOrderLine.VALIDATE("Plant Type", TypeCode);
        IF PlantType.GET(TypeCode) THEN BEGIN
          IF PlantType.Bulk THEN
            PlantOrderLine.VALIDATE("No.", '0');
        END;
      END;

      IF Type = Type::Item THEN BEGIN
        PlantOrderLine.VALIDATE("Item No.", TypeCode);
        PlantOrderLine.VALIDATE("Location Code", '1');
      END;

      IF PlantOrderType = PlantOrderType::Arrival THEN BEGIN
        PlantOrderLine.VALIDATE("Asked Quantity",1);
        PlantOrderLine.VALIDATE("From Location",'4500 WERF');
      END;

      IF PlantOrderType = PlantOrderType::Removal THEN
        PlantOrderLine.VALIDATE("Qty. to Receive",1);

      PlantOrderLine.VALIDATE("Picker No.",ResourceNo);
      PlantOrderLine.INSERT(TRUE);

      PlantOrderLine.ReleaseForPicking(PlantOrderLine);
    END;

    LOCAL PROCEDURE GetPlantOrderLineNo@1100525003(PlantOrderNo@1100525000 : Code[20]) : Integer;
    VAR
      PlantOrderLine@1100525001 : Record 11012557;
    BEGIN
      PlantOrderLine.SETRANGE("Plant Order No.", PlantOrderNo);
      IF PlantOrderLine.FINDLAST THEN
        EXIT(PlantOrderLine."Line No." + 10000);

      EXIT(10000);
    END;

    LOCAL PROCEDURE AuthorizeOrderPicker@1100525004(EmployeeNo@1100525001 : Code[20]);
    VAR
      PlantDepotbyOrderPicker@1100525000 : Record 11124921;
      PlantOrderPickerAuth@1100525002 : Record 11124923;
    BEGIN
      PlantDepotbyOrderPicker.INIT;
      PlantDepotbyOrderPicker.VALIDATE("Picker No.", EmployeeNo);
      PlantDepotbyOrderPicker.VALIDATE(PlantDepotbyOrderPicker."Plant Depot", '4500 WERF');
      IF PlantDepotbyOrderPicker.INSERT THEN;

      PlantOrderPickerAuth.INIT;
      PlantOrderPickerAuth.VALIDATE(PlantOrderPickerAuth."Picker No.", EmployeeNo);
      PlantOrderPickerAuth.VALIDATE("Plant Depot", '4500 WERF');
      PlantOrderPickerAuth.VALIDATE(PlantOrderPickerAuth."Create Order", TRUE);
      PlantOrderPickerAuth.VALIDATE("Plant Order Type", PlantOrderPickerAuth."Plant Order Type"::Arrival);
      IF PlantOrderPickerAuth.INSERT THEN;

      PlantOrderPickerAuth.VALIDATE("Plant Order Type", PlantOrderPickerAuth."Plant Order Type"::Removal);
      IF PlantOrderPickerAuth.INSERT THEN;

      PlantOrderPickerAuth.VALIDATE("Plant Order Type", PlantOrderPickerAuth."Plant Order Type"::"Other Transfers");
      IF PlantOrderPickerAuth.INSERT THEN;
    END;

    BEGIN
    END.
  }
}

