OBJECT Page 6401 Flow Selector
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Manage Flows;
               NOR=Behandle flyter;
               SVE=Hantera flîden];
    ApplicationArea=#Suite;
    LinksAllowed=No;
    UsageCategory=Lists;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Configuration;
                                NOR=Ny,Prosess,Rapport,Konfigurasjon;
                                SVE=Ny,Process,Rapport,Konfiguration];
    OnOpenPage=BEGIN
                 IsPPE := FlowServiceManagement.IsPPE;
                 IF IsPPE THEN BEGIN
                   ShowErrorMessage(FlowServiceManagement.GetFlowPPEError);
                   EXIT;
                 END;

                 IsErrorMessageVisible := FALSE;
                 IF NOT TryInitialize THEN
                   ShowErrorMessage(GETLASTERRORTEXT);
                 IF NOT FlowServiceManagement.IsUserReadyForFlow THEN
                   ERROR('');
                 IsUserReadyForFlow := TRUE;

                 IF NOT FlowServiceManagement.HasUserSelectedFlowEnvironment THEN
                   FlowServiceManagement.SetSelectedFlowEnvironmentIDToDefault;

                 IsSaaS := AzureAdMgt.IsSaaS;
               END;

    ActionList=ACTIONS
    {
      { 6       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 8       ;1   ;Action    ;
                      Name=FlowEntries;
                      CaptionML=[ENU=Flow Entries;
                                 NOR=Flow-poster;
                                 SVE=Flow-transaktioner];
                      ToolTipML=[ENU=View and configure Flow entries.;
                                 NOR=Vis og konfigurer Flow-poster.;
                                 SVE=Visa och konfigurera Flow-transaktioner.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsSaaS;
                      PromotedIsBig=Yes;
                      Image=Flow;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 WorkflowWebhookEntry@1000 : Record 467;
                               BEGIN
                                 WorkflowWebhookEntry.SetDefaultFilter(WorkflowWebhookEntry);
                                 PAGE.RUN(PAGE::"Workflow Webhook Entries",WorkflowWebhookEntry);
                               END;
                                }
      { 7       ;1   ;Action    ;
                      Name=OpenMyFlows;
                      CaptionML=[ENU=Open Flow;
                                 NOR=èpne Flow;
                                 SVE=ôppna Flow];
                      ToolTipML=[ENU=View and configure Flows on the Flow website.;
                                 NOR=Vis og konfigurer flyter pÜ Flow-nettsted.;
                                 SVE=Visa och konfigurera flîden pÜ Flow-webbplatsen.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=NOT IsPPE;
                      PromotedIsBig=Yes;
                      Image=Flow;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 HYPERLINK(FlowServiceManagement.GetFlowManageUrl);
                               END;
                                }
      { 9       ;1   ;Action    ;
                      Name=SelectFlowUserEnvironment;
                      CaptionML=[ENU=Select Environment;
                                 NOR=Velg miljõ;
                                 SVE=VÑlj miljî];
                      ToolTipML=[ENU=Select your Flow environment.;
                                 NOR=Velg Flow-miljõ.;
                                 SVE=VÑlj Flow-miljî.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=NOT IsPPE;
                      PromotedIsBig=Yes;
                      Image=CheckList;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 FlowUserEnvironmentConfig@1002 : Record 1545;
                                 TempFlowUserEnvironmentBuffer@1000 : TEMPORARY Record 1544;
                                 FlowUserEnvSelection@1001 : Page 6416;
                               BEGIN
                                 TempFlowUserEnvironmentBuffer.RESET;
                                 FlowServiceManagement.GetEnvironments(TempFlowUserEnvironmentBuffer);
                                 FlowUserEnvSelection.SetFlowEnvironmentBuffer(TempFlowUserEnvironmentBuffer);
                                 FlowUserEnvSelection.LOOKUPMODE(TRUE);

                                 IF FlowUserEnvSelection.RUNMODAL <> ACTION::LookupOK THEN
                                   EXIT;

                                 TempFlowUserEnvironmentBuffer.RESET;
                                 TempFlowUserEnvironmentBuffer.SETRANGE(Enabled,TRUE);

                                 // Remove any previous selection since user did not select anything
                                 IF NOT TempFlowUserEnvironmentBuffer.FINDFIRST THEN BEGIN
                                   IF FlowUserEnvironmentConfig.GET(USERSECURITYID) THEN
                                     FlowUserEnvironmentConfig.DELETE;
                                   EXIT;
                                 END;

                                 FlowServiceManagement.SaveFlowUserEnvironmentSelection(TempFlowUserEnvironmentBuffer);
                                 LoadFlows;
                               END;
                                }
      { 13      ;1   ;Action    ;
                      Name=ConnectionInfo;
                      CaptionML=[ENU=Connection Information;
                                 NOR=Tilkoblingsinformasjon;
                                 SVE=Anslutningsinformation];
                      ToolTipML=[ENU=Show information for connecting to Power BI content packs.;
                                 NOR=Vis informasjon for Ü koble til Power BI-innholdspakker.;
                                 SVE=Visa information fîr anslutning till Power BI-innehÜllspaket.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 6316;
                      Promoted=Yes;
                      Visible=NOT IsPPE;
                      PromotedIsBig=Yes;
                      Image=Setup;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=Flow Selector;
                ContainerType=ContentArea }

    { 10  ;1   ;Group     ;
                Visible=IsUserReadyForFlow AND NOT IsErrorMessageVisible;
                GroupType=GridLayout }

    { 11  ;2   ;Field     ;
                Name=EnvironmentNameText;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=EnvironmentNameText;
                ShowCaption=No }

    { 3   ;1   ;Group     ;
                Visible=IsUserReadyForFlow AND NOT IsErrorMessageVisible;
                GroupType=Group }

    { 2   ;2   ;Field     ;
                Name=FlowAddin;
                ApplicationArea=#Basic,#Suite;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.FlowIntegration;PublicKeyToken=31bf3856ad364e35] }

    { 4   ;1   ;Group     ;
                Visible=IsErrorMessageVisible;
                GroupType=Group }

    { 5   ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ErrorMessageText;
                Editable=False;
                ShowCaption=No }

  }
  CODE
  {
    VAR
      AzureAdMgt@1000 : Codeunit 6300;
      FlowServiceManagement@1001 : Codeunit 6400;
      IsErrorMessageVisible@1002 : Boolean;
      ErrorMessageText@1003 : Text;
      IsUserReadyForFlow@1004 : Boolean;
      AddInReady@1005 : Boolean;
      EnvironmentNameText@1006 : Text;
      IsSaaS@1007 : Boolean;
      IsPPE@1008 : Boolean;

    LOCAL PROCEDURE Initialize@1();
    BEGIN
      IsUserReadyForFlow := FlowServiceManagement.IsUserReadyForFlow;

      IF NOT IsUserReadyForFlow THEN BEGIN
        IF AzureAdMgt.IsSaaS THEN
          ERROR(FlowServiceManagement.GetGenericError);
        IF NOT TryAzureAdMgtGetAccessToken THEN
          ShowErrorMessage(GETLASTERRORTEXT);
        CurrPage.UPDATE;
      END;
    END;

    LOCAL PROCEDURE LoadFlows@7();
    BEGIN
      EnvironmentNameText := FlowServiceManagement.GetSelectedFlowEnvironmentName;
      CurrPage.FlowAddin.LoadFlows(FlowServiceManagement.GetFlowEnvironmentID);
      CurrPage.UPDATE;
    END;

    [TryFunction]
    LOCAL PROCEDURE TryInitialize@2();
    BEGIN
      Initialize;
    END;

    [TryFunction]
    LOCAL PROCEDURE TryAzureAdMgtGetAccessToken@3();
    BEGIN
      AzureAdMgt.GetAccessToken(FlowServiceManagement.GetFlowARMResourceUrl,FlowServiceManagement.GetFlowResourceName,TRUE);
    END;

    LOCAL PROCEDURE ShowErrorMessage@6(TextToShow@1000 : Text);
    BEGIN
      IsErrorMessageVisible := TRUE;
      IsUserReadyForFlow := FALSE;
      IF TextToShow = '' THEN
        TextToShow := FlowServiceManagement.GetGenericError;
      ErrorMessageText := TextToShow;
      CurrPage.UPDATE;
    END;

    EVENT FlowAddin@-2::ControlAddInReady@3();
    BEGIN
      CurrPage.FlowAddin.Initialize(
        FlowServiceManagement.GetFlowUrl,FlowServiceManagement.GetLocale,
        AzureAdMgt.GetAccessToken(FlowServiceManagement.GetFlowARMResourceUrl,FlowServiceManagement.GetFlowResourceName,FALSE),
        AzureAdMgt.GetAccessToken(FlowServiceManagement.GetAzureADGraphhResourceUrl,FlowServiceManagement.GetFlowResourceName,FALSE),
        AzureAdMgt.GetAccessToken(FlowServiceManagement.GetMicrosoftGraphhResourceUrl,FlowServiceManagement.GetFlowResourceName,FALSE));

      LoadFlows;

      AddInReady := TRUE;
    END;

    EVENT FlowAddin@-2::ErrorOccurred@4(error@1001 : Text;description@1000 : Text);
    VAR
      Company@1002 : Record 2000000006;
      ActivityLog@1003 : Record 710;
    BEGIN
      Company.GET(COMPANYNAME); // Dummy record to attach to activity log
      ActivityLog.LogActivityForUser(
        Company.RECORDID,ActivityLog.Status::Failed,'Microsoft Flow',description,error,USERID);
      ShowErrorMessage(FlowServiceManagement.GetGenericError);
    END;

    EVENT FlowAddin@-2::Refresh@5();
    BEGIN
      IF AddInReady THEN
        LoadFlows;
    END;

    BEGIN
    END.
  }
}

