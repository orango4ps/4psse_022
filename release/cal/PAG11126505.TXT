OBJECT Page 11126505 Transfer Recipe Estimate-Job
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=ENU=Transfer Estimate Recipes to Assembly Project;
    SourceTable=Table11072072;
    PageType=StandardDialog;
    OnOpenPage=BEGIN
                 CheckSelection;
                 AssemblyProjectNoEditable := TRUE;
               END;

    OnQueryClosePage=BEGIN
                       CloseActionOK := CloseAction IN [ACTION::OK,ACTION::LookupOK];
                     END;

  }
  CONTROLS
  {
    { 1100528400;;Container;
                ContainerType=ContentArea }

    { 1100528401;1;Group  ;
                CaptionML=[ENU=General;
                           NOR=Generell;
                           SVE=Allm„nt];
                GroupType=Group }

    { 1100528403;2;Field  ;
                AssistEdit=Yes;
                CaptionML=ENU=No. Series Code;
                SourceExpr=NoSeriesCode;
                Editable=FALSE;
                OnAssistEdit=VAR
                               Job@1100528400 : Record 11072003;
                             BEGIN
                               IF SelectNoSeries(NoSeriesCode) THEN BEGIN
                                 AssemblyProjectNo := Job.DetermineNewProjectNo(NoSeriesCode, FALSE);
                                 AssemblyProjectNoEditable := NoSeriesIsManualNos(NoSeriesCode);
                               END;
                             END;
                              }

    { 1100528402;2;Field  ;
                CaptionML=ENU=Assembly Project No.;
                SourceExpr=AssemblyProjectNo;
                Editable=AssemblyProjectNoEditable;
                OnValidate=BEGIN
                             ValidateAssemblyProjectNo;
                           END;

                OnLookup=VAR
                           Job@1100528401 : Record 11072003;
                         BEGIN
                           Job.SETRANGE("Assembly Project", TRUE);
                           IF PAGE.RUNMODAL(PAGE::"Job List", Job) = ACTION::LookupOK THEN BEGIN
                             AssemblyProjectNo := Job."No.";
                             ValidateAssemblyProjectNo;
                           END;
                         END;
                          }

  }
  CODE
  {
    VAR
      NoSeriesCode@1100528400 : Code[10];
      AssemblyProjectNo@1100528401 : Code[20];
      AssemblyProjectNoEditable@1100528403 : Boolean INDATASET;
      Text000@1100528408 : TextConst 'ENU=%1 has already been transferred to %2 %3.';
      CloseActionOK@1100528411 : Boolean;
      Text001@1100528412 : TextConst 'ENU=No %1s have been selected.';
      Text002@1100528413 : TextConst 'ENU=%1s from more than one %2 have been selected.';
      Text003@1100528404 : TextConst 'ENU=Select a %1.';
      Text004@1100528402 : TextConst 'ENU=Do you want to transfer Order %1 to Project %2';

    LOCAL PROCEDURE CheckSelection@1100525002();
    VAR
      Estimate@1100528400 : Record 11012151;
      EstimateNo@1100528401 : Code[20];
    BEGIN
      AssemblyProjectNo := '';
      EstimateNo := '';

      IF FINDSET THEN BEGIN
        EstimateNo := "Estimate No.";
        REPEAT
          IF ("Assembly Project No." <> '') AND (AssemblyProjectNo = '') THEN
            AssemblyProjectNo := "Assembly Project No.";
        UNTIL (NEXT = 0) OR (EstimateNo <> "Estimate No.") OR (AssemblyProjectNo <> '');
      END;

      IF AssemblyProjectNo <> '' THEN
        ERROR(Text000, TABLECAPTION, FIELDCAPTION("Assembly Project No."), AssemblyProjectNo);
      IF (EstimateNo = '') THEN
        ERROR(Text001, TABLECAPTION);
      IF (EstimateNo <> "Estimate No.") THEN
        ERROR(Text002, TABLECAPTION, Estimate.TABLECAPTION);
    END;

    LOCAL PROCEDURE SelectNoSeries@1210190005(VAR NoSeriesCode@1100528403 : Code[10]) : Boolean;
    VAR
      JobsSetup@1100528400 : Record 315;
      NoSeriesMgt@1100528402 : Codeunit 396;
      NoSeriesCode2@1100528401 : Code[10];
    BEGIN
      JobsSetup.GET;
      JobsSetup.TESTFIELD("Assembly Project Nos.");
      NoSeriesCode2 := JobsSetup."Assembly Project Nos.";

      IF NoSeriesMgt.SelectSeries(NoSeriesCode2, NoSeriesCode2, NoSeriesCode2) THEN BEGIN
        NoSeriesCode := NoSeriesCode2;
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE NoSeriesIsManualNos@1100485006(NoSeriesCode@1100528400 : Code[10]) : Boolean;
    VAR
      NoSeries@1100485000 : Record 308;
    BEGIN
      IF NOT NoSeries.GET(NoSeriesCode) THEN
        EXIT(TRUE);
      EXIT(NoSeries."Manual Nos.");
    END;

    LOCAL PROCEDURE ValidateAssemblyProjectNo@1100528404();
    VAR
      Job@1100528400 : Record 11072003;
    BEGIN
      IF AssemblyProjectNo <> '' THEN BEGIN
        Job.GET(AssemblyProjectNo);
        Job.TESTFIELD("Assembly Project");
      END;
    END;

    LOCAL PROCEDURE TransferEstimateRecipesToAssemblyProject@1100525001();
    VAR
      Estimate@1100528400 : Record 11012151;
      Job@1100528401 : Record 11072003;
      EstimateTransferMgt@1100525000 : Codeunit 11012228;
    BEGIN
      IF AssemblyProjectNo = '' THEN
        ERROR(Text003, FIELDCAPTION("Assembly Project No."));

      IF CONFIRM(
        Text004, FALSE, FIELDCAPTION("Estimate No."), "Estimate No.",
        FIELDCAPTION("Assembly Project No."), AssemblyProjectNo)
      THEN BEGIN
        Estimate.GET("Estimate No.");
        Job.GenerateAssemblyProject(
          Estimate."Customer No.", Estimate."Customer No.", AssemblyProjectNo,
          NoSeriesCode, "Estimate No.");
        EstimateTransferMgt.SetTransferOptions(
          FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 0, 0, FALSE, 0,
          FALSE, FALSE, FALSE, FALSE);
        EstimateTransferMgt.SetEstimateOptions("Estimate No.", '', '', '', '');
        EstimateTransferMgt.SetProjectOptions(
          AssemblyProjectNo, '', '', '', '', '', '', '', '','');
        EstimateTransferMgt.SetProjectPlanningOptions(FALSE, '');
        EstimateTransferMgt.CopyEstimateRecipesToAssemblyProject(Rec);
      END;
    END;

    LOCAL PROCEDURE StdDialogConfirm@1100528400() : Boolean;
    BEGIN
      CurrPage.RUNMODAL;
      EXIT(CloseActionOK);
    END;

    LOCAL PROCEDURE StdDialogDoAction@1100528401();
    BEGIN
      TransferEstimateRecipesToAssemblyProject;
    END;

    PROCEDURE StdDialogRunModal@1100528402();
    BEGIN
      IF StdDialogConfirm THEN
        StdDialogDoAction;
    END;

    BEGIN
    END.
  }
}

