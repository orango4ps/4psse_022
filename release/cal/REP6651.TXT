OBJECT Report 6651 Delete Invd Sales Ret. Orders
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.01;
  }
  PROPERTIES
  {
    AccessByPermission=TableData 36=RD;
    CaptionML=[DEU=Erledigte Verkaufsreklamationen l”schen;
               ENU=Delete Invoiced Sales Return Orders;
               NLD=Gefactureerde verkoopretourorders verwijderen;
               NOR=Slett fakturerte ordrereturer];
    ApplicationArea=#SalesReturnOrder;
    ProcessingOnly=Yes;
    UsageCategory=Tasks;
  }
  DATASET
  {
    { 6640;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Return Order));
               ReqFilterHeadingML=[DEU=Verkaufsreklamation;
                                   ENU=Sales Return Order;
                                   NLD=Verkoopretourorder;
                                   NOR=Ordreretur;
                                   SVE=F”rs.returorder];
               OnPreDataItem=BEGIN
                               Window.OPEN(Text000);
                             END;

               OnAfterGetRecord=VAR
                                  ApprovalsMgmt@1000 : Codeunit 1535;
                                  PostSalesDelete@1001 : Codeunit 363;
                                  ArchiveManagement@1002 : Codeunit 5063;
                                BEGIN
                                  Window.UPDATE(1,"No.");

                                  AllLinesDeleted := TRUE;
                                  ItemChargeAssgntSales.RESET;
                                  ItemChargeAssgntSales.SETRANGE("Document Type","Document Type");
                                  ItemChargeAssgntSales.SETRANGE("Document No.","No.");
                                  SalesOrderLine.RESET;
                                  SalesOrderLine.SETRANGE("Document Type","Document Type");
                                  SalesOrderLine.SETRANGE("Document No.","No.");
                                  SalesOrderLine.SETFILTER("Quantity Invoiced",'<>0');
                                  IF SalesOrderLine.FIND('-') THEN BEGIN
                                    SalesOrderLine.SETRANGE("Quantity Invoiced");
                                    SalesOrderLine.SETFILTER("Outstanding Quantity",'<>0');
                                    IF NOT SalesOrderLine.FIND('-') THEN BEGIN
                                      SalesOrderLine.SETRANGE("Outstanding Quantity");
                                      SalesOrderLine.SETFILTER("Return Qty. Rcd. Not Invd.",'<>0');
                                      IF NOT SalesOrderLine.FIND('-') THEN BEGIN
                                        SalesOrderLine.LOCKTABLE;
                                        IF NOT SalesOrderLine.FIND('-') THEN BEGIN
                                          SalesOrderLine.SETRANGE("Return Qty. Rcd. Not Invd.");
                                          ArchiveManagement.AutoArchiveSalesDocument("Sales Header");
                                          IF SalesOrderLine.FIND('-') THEN
                                            REPEAT
                                              SalesOrderLine.CALCFIELDS("Qty. Assigned");
                                              IF ((SalesOrderLine."Qty. Assigned" = SalesOrderLine."Quantity Invoiced") AND
                                                  (SalesOrderLine."Qty. Assigned" <> 0)) OR
                                                 (SalesOrderLine.Type <> SalesOrderLine.Type::"Charge (Item)")
                                              THEN BEGIN
                                                IF SalesOrderLine.Type = SalesOrderLine.Type::"Charge (Item)" THEN BEGIN
                                                  ItemChargeAssgntSales.SETRANGE("Document Line No.",SalesOrderLine."Line No.");
                                                  ItemChargeAssgntSales.DELETEALL;
                                                END;
                                                OnBeforeDeleteSalesOrderLine(SalesOrderLine);
                                                IF SalesOrderLine.HASLINKS THEN
                                                  SalesOrderLine.DELETELINKS;
                                                SalesOrderLine.DELETE;
                                              END ELSE
                                                AllLinesDeleted := FALSE;

                                            UNTIL SalesOrderLine.NEXT = 0;

                                          IF AllLinesDeleted THEN BEGIN
                                            PostSalesDelete.DeleteHeader(
                                              "Sales Header",SalesShptHeader,SalesInvHeader,SalesCrMemoHeader,ReturnRcptHeader,
                                              PrepmtSalesInvHeader,PrepmtSalesCrMemoHeader);
                                            ReserveSalesLine.DeleteInvoiceSpecFromHeader("Sales Header");

                                            SalesCommentLine.SETRANGE("Document Type","Document Type");
                                            SalesCommentLine.SETRANGE("No.","No.");
                                            SalesCommentLine.DELETEALL;

                                            WhseRequest.SETRANGE("Source Type",DATABASE::"Sales Line");
                                            WhseRequest.SETRANGE("Source Subtype","Document Type");
                                            WhseRequest.SETRANGE("Source No.","No.");
                                            IF NOT WhseRequest.ISEMPTY THEN
                                              WhseRequest.DELETEALL(TRUE);

                                            ApprovalsMgmt.DeleteApprovalEntries(RECORDID);

                                            OnBeforeDeleteSalesOrderHeader("Sales Header");
                                            DELETE;
                                          END;
                                          COMMIT;
                                        END;
                                      END;
                                    END;
                                  END;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,Bill-to Customer No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Verkaufsreklamationen werden durchgelesen #1##########;ENU=Processing sales return orders #1##########;NLD=Verwerken verkoopretourorders  #1##########;NOR=Behandler ordrereturer         #1##########';
      SalesOrderLine@1001 : Record 37;
      SalesShptHeader@1011 : Record 110;
      SalesInvHeader@1010 : Record 112;
      SalesCrMemoHeader@1009 : Record 114;
      ReturnRcptHeader@1005 : Record 6660;
      PrepmtSalesInvHeader@1015 : Record 112;
      PrepmtSalesCrMemoHeader@1014 : Record 114;
      SalesCommentLine@1002 : Record 44;
      ItemChargeAssgntSales@1007 : Record 5809;
      WhseRequest@1008 : Record 5765;
      ReserveSalesLine@1013 : Codeunit 99000832;
      Window@1004 : Dialog;
      AllLinesDeleted@1006 : Boolean;

    [Integration]
    LOCAL PROCEDURE OnBeforeDeleteSalesOrderHeader@2(VAR SalesHeader@1000 : Record 36);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeDeleteSalesOrderLine@1000(VAR SalesOrderLine@1000 : Record 37);
    BEGIN
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

