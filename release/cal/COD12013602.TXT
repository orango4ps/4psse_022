OBJECT Codeunit 12013602 ExFlow File Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF502000;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      EXF001@1100285002 : TextConst 'ENU=Saving a report to PDF is only available when using the RTC client.;SVE=Skriva en rapport till PDF „r endast tillg„ngligt i RTC klienten.';
      ExFlowFileMgtWindowsClient@1100285004 : Codeunit 12013626;
      ExFlowFileMgtWebClient@1100285006 : Codeunit 12013634;
      NAVClientVersion@1100285003 : Integer;
      EXF002@1100285005 : TextConst 'ENU=Function not supported with this NAV version.;SVE=Funktionen st”ds ej i denna NAV version.';

    PROCEDURE GetNAVVersion@1100285005() : Integer;
    BEGIN
      IF IsRunFromServiceTier THEN BEGIN
        IF SupportsDotNet THEN BEGIN
          IF IsWebClient THEN
            EXIT(4)
          ELSE
            EXIT(3)
        END ELSE
          EXIT(2);
      END ELSE
        EXIT(1);
    END;

    PROCEDURE IsRunFromServiceTier@1100285004() : Boolean;
    BEGIN
      EXIT(TRUE);
    END;

    PROCEDURE SupportsDotNet@1100285011() : Boolean;
    BEGIN
      EXIT(ExFlowFileMgtWindowsClient.SupportsDotNet);
    END;

    PROCEDURE IsWebClient@1100285017() : Boolean;
    BEGIN
      EXIT(ExFlowFileMgtWebClient.IsWebClient);
    END;

    PROCEDURE Move@1100285001(FromFile@1100285000 : Text;ToFile@1100285001 : Text;FromFolder@1100285002 : Text;ToFolder@1100285003 : Text;RootFolder@1100285004 : Text) ReturnTxt : Text;
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : ReturnTxt := ExFlowFileMgtWindowsClient.Move(FromFile,ToFile,FromFolder,ToFolder,RootFolder);
        4 : ReturnTxt := ExFlowFileMgtWebClient.Move(FromFile,ToFile,FromFolder,ToFolder,RootFolder);
      END;
    END;

    PROCEDURE Copy@1100285002(FromFile@1100285003 : Text;ToFile@1100285002 : Text;FromFolder@1100285001 : Text;ToFolder@1100285000 : Text;RootFolder@1100285004 : Text) ReturnTxt : Text;
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : ReturnTxt := ExFlowFileMgtWindowsClient.Copy(FromFile,ToFile,FromFolder,ToFolder,RootFolder);
        4 : ReturnTxt := ExFlowFileMgtWebClient.Copy(FromFile,ToFile,FromFolder,ToFolder,RootFolder);
      END;
    END;

    PROCEDURE Delete@1100285048(Path@1100285000 : Text;FileName@1100285001 : Text);
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : ExFlowFileMgtWindowsClient.Delete(Path,FileName);
        4 : ExFlowFileMgtWebClient.Delete(Path,FileName);
      END;
    END;

    PROCEDURE FolderExist@1100285012(Path@1100285000 : Text) : Boolean;
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : EXIT(ExFlowFileMgtWindowsClient.FolderExist(Path));
        4 : EXIT(ExFlowFileMgtWebClient.FolderExist(Path));
      END;
    END;

    PROCEDURE FileExist@1100285013(Path@1100285000 : Text;FileName@1100285001 : Text) : Boolean;
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : EXIT(ExFlowFileMgtWindowsClient.FileExist(Path,FileName));
        4 : EXIT(ExFlowFileMgtWebClient.FileExist(Path,FileName));
      END;
    END;

    PROCEDURE NewFolder@1100285010(FolderName@1100285000 : Text;RootFolder@1100285001 : Text) : Boolean;
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : EXIT(ExFlowFileMgtWindowsClient.NewFolder(FolderName,RootFolder));
        4 : EXIT(ExFlowFileMgtWebClient.NewFolder(FolderName,RootFolder));
      END;
    END;

    PROCEDURE ShowDoc@1100285020(FileURL@1100285000 : Text);
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : ExFlowFileMgtWindowsClient.ShowDoc(FileURL);
        4 : ExFlowFileMgtWebClient.ShowDoc(FileURL);
      END;
    END;

    PROCEDURE InsertBLOB@14() : Integer;
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : EXIT(ExFlowFileMgtWindowsClient.InsertBLOB);
        4 : EXIT(ExFlowFileMgtWebClient.InsertBLOB);
      END;
    END;

    PROCEDURE ImportBLOB@1100285007(VAR ExflowBLOB@1100285000 : Record 12013591;FileName@1100285001 : Text);
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : ExFlowFileMgtWindowsClient.ImportBLOB(ExflowBLOB,FileName);
        4 : ExFlowFileMgtWebClient.ImportBLOB(ExflowBLOB,FileName);
      END;
    END;

    PROCEDURE SelectFolder@1100285028(VAR FolderTxt@1100285000 : Text);
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : ExFlowFileMgtWindowsClient.SelectFolder(FolderTxt);
        4 : ExFlowFileMgtWebClient.SelectFolder(FolderTxt);
      END;
    END;

    PROCEDURE FileNameFromDialog@1100285014(VAR FileName@1100285005 : Text;WindowTitle@1100285004 : Text[50];DefaultFileType@1100285003 : ' ,Text,Excel,Word,Custom,Xml,Htm,Xsd,Xslt';FilterString@1100285002 : Text[250];Action@1100285000 : 'Open,Save');
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : ExFlowFileMgtWindowsClient.FileNameFromDialog(FileName,WindowTitle,DefaultFileType,FilterString,Action);
        4 : ExFlowFileMgtWebClient.FileNameFromDialog(FileName,WindowTitle,DefaultFileType,FilterString,Action);
      END;
    END;

    PROCEDURE ExportBLOB@1100285008(VAR ExflowBLOB@1100285001 : Record 12013591;FileName@1100285000 : Text);
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : ExFlowFileMgtWindowsClient.ExportBLOB(ExflowBLOB,FileName);
        4 : ExFlowFileMgtWebClient.ExportBLOB(ExflowBLOB,FileName);
      END;
    END;

    PROCEDURE ShowBLOB@1100285006(VAR ExflowBLOB@1100285001 : Record 12013591;FileName@1100285000 : Text);
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : ExFlowFileMgtWindowsClient.ShowBLOB(ExflowBLOB,FileName);
        4 : ExFlowFileMgtWebClient.ShowBLOB(ExflowBLOB,FileName);
      END;
    END;

    PROCEDURE Path@8(Filename@1102601000 : Text) Path : Text;
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : EXIT(ExFlowFileMgtWindowsClient.Path(Filename));
        4 : EXIT(ExFlowFileMgtWebClient.Path(Filename));
      END;
    END;

    PROCEDURE GetFileName@1100285019(Filename@1102601000 : Text) : Text;
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : EXIT(ExFlowFileMgtWindowsClient.GetFileName(Filename));
        4 : EXIT(ExFlowFileMgtWebClient.GetFileName(Filename));
      END;
    END;

    PROCEDURE CreateImportFileTable@1000000000(ImportPath@1100285000 : Text;VAR TempFileMgtBuffer@1100285003 : TEMPORARY Record 12013593);
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : ExFlowFileMgtWindowsClient.CreateImportFileTable(ImportPath,TempFileMgtBuffer);
        4 : ExFlowFileMgtWebClient.CreateImportFileTable(ImportPath,TempFileMgtBuffer);
      END;
    END;

    PROCEDURE ImportXML@1100285015(XMLPortNo@1100285001 : Integer;PathName@1070000 : Text;FileName@1100285000 : Text;ToFolder@1100285002 : Text);
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : ExFlowFileMgtWindowsClient.ImportXML(XMLPortNo,PathName,FileName);
        4 : ExFlowFileMgtWebClient.ImportXML(XMLPortNo,PathName,FileName);
      END;
    END;

    PROCEDURE ClientTempFileName@6(PassedString@1001 : Text[250];FileExtension@1002 : Text[250]) : Text;
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : EXIT(ExFlowFileMgtWindowsClient.ClientTempFileName(PassedString,FileExtension));
        4 : EXIT(ExFlowFileMgtWebClient.ClientTempFileName(PassedString,FileExtension));
      END;
    END;

    PROCEDURE ServerTempFileName@1100285018(PassedString@1001 : Text[250];FileExtension@1002 : Text[250]) : Text;
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        3 : EXIT(ExFlowFileMgtWindowsClient.ServerTempFileName(PassedString,FileExtension));
        4 : EXIT(ExFlowFileMgtWebClient.ServerTempFileName(PassedString,FileExtension));
      END;
    END;

    PROCEDURE SaveReportAsPDF@1100285016(ReportNo@1100285000 : Integer;FileName@1100285001 : Text;VAR PurchHeader@1100285002 : Record 38;RootFolder@1100285003 : Text;UseFileSystem@1100285004 : Boolean;VAR TempBlob@1100285005 : Record 99008535);
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        1 : ERROR(EXF001);
        3 : ExFlowFileMgtWindowsClient.SaveReportAsPDF(ReportNo,FileName,PurchHeader,RootFolder,UseFileSystem,TempBlob);
        4 : ExFlowFileMgtWebClient.SaveReportAsPDF(ReportNo,FileName,PurchHeader,RootFolder,UseFileSystem,TempBlob);
      END;
    END;

    PROCEDURE CreateDotNetADTable@1100285003(VAR Ex2009AdUsers@1100285005 : Record 12013598);
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        1 : ERROR(EXF002);
        2 : ERROR(EXF002);
        3 : ExFlowFileMgtWindowsClient.CreateADTable(Ex2009AdUsers);
        4 : ExFlowFileMgtWebClient.CreateADTable(Ex2009AdUsers);
      END;
    END;

    PROCEDURE PreviewDoc@1100285000(FileURL@1100285000 : Text) : Text;
    BEGIN
      NAVClientVersion := GetNAVVersion;
      CASE NAVClientVersion OF
        1 : ERROR(EXF002);
        2 : EXIT('');
        3 : EXIT(ExFlowFileMgtWindowsClient.PreviewDoc(FileURL));
        4 : EXIT(ExFlowFileMgtWebClient.PreviewDoc(FileURL));
      END;
    END;

    BEGIN
    END.
  }
}

