OBJECT Table 11072297 Service Responsible Person DPT
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               AddDptPermissions;
             END;

    OnDelete=VAR
               DPTRespPersPermServLoc@1100528300 : Record 11072340;
             BEGIN
               IF ("Source Type" = "Source Type"::ServLocation) THEN BEGIN
                 CheckDptPermissions;
                 DPTRespPersPermServLoc.SETRANGE("Service Location No.", "Source Code");
                 DPTRespPersPermServLoc.SETRANGE("Line No.", "Line No.");
                 IF (NOT DPTRespPersPermServLoc.ISEMPTY) THEN
                   DPTRespPersPermServLoc.DELETEALL;
               END;
             END;

    CaptionML=[ENU=Service Responsible Person;
               NOR=Serviceansvarlig;
               SVE=Serviceansvarig];
    LookupPageID=Page11126783;
  }
  FIELDS
  {
    { 10  ;   ;Source Type         ;Option        ;CaptionML=[ENU=Source Type;
                                                              NOR=Kildetype;
                                                              SVE=Ursprungstyp];
                                                   OptionCaptionML=[ENU=" ,Service Location";
                                                                    NOR=" ,Servicelokasjon"];
                                                   OptionString=[ ,ServLocation];
                                                   NotBlank=Yes }
    { 20  ;   ;Source Code         ;Code20        ;TableRelation=IF (Source Type=CONST(ServLocation)) "Service Location".No.;
                                                   CaptionML=[ENU=Source Code;
                                                              NOR=Kildespor;
                                                              SVE=Ursprungskod];
                                                   NotBlank=Yes }
    { 30  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 40  ;   ;Responsibility      ;Code10        ;TableRelation=Responsibility.Code;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Responsibility Description");
                                                              END;

                                                   CaptionML=[ENU=Responsibility;
                                                              NOR=Ansvar;
                                                              SVE=Ansvar];
                                                   NotBlank=Yes }
    { 41  ;   ;Responsibility Description;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Responsibility.Description WHERE (Code=FIELD(Responsibility)));
                                                   CaptionML=[ENU=Responsibility Description;
                                                              NOR=Ansvar, Beskrivelse;
                                                              SVE=Ansvar, beskrivning];
                                                   Editable=No }
    { 50  ;   ;Employee No.        ;Code20        ;TableRelation=Employee.No.;
                                                   OnValidate=VAR
                                                                Purchaser@1100525000 : Record 13;
                                                                ServiceSetup@1100528300 : Record 11012800;
                                                              BEGIN
                                                                IF ("Employee No." <> '') THEN BEGIN
                                                                  ServiceSetup.GET;
                                                                  IF (Responsibility <> '') AND (Responsibility = ServiceSetup."Responsibility Location Man") THEN
                                                                    Purchaser.GET("Employee No.");
                                                                END;
                                                                CALCFIELDS("Name Employee");
                                                              END;

                                                   OnLookup=VAR
                                                              Employee@1100525000 : Record 5200;
                                                              Purchaser@1100525001 : Record 13;
                                                              ServiceSetup@1100528300 : Record 11012800;
                                                            BEGIN
                                                              ServiceSetup.GET;
                                                              IF (Responsibility <> '') AND (Responsibility = ServiceSetup."Responsibility Location Man") THEN BEGIN
                                                                Purchaser.Code := "Employee No.";
                                                                IF (PAGE.RUNMODAL(0, Purchaser) = ACTION::LookupOK) THEN
                                                                  VALIDATE("Employee No.", Purchaser.Code);
                                                              END ELSE BEGIN
                                                                Employee."No." := "Employee No.";
                                                                IF (PAGE.RUNMODAL(0, Employee) = ACTION::LookupOK) THEN
                                                                  VALIDATE("Employee No.", Employee."No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Employee No.;
                                                              NOR=Ansattnr;
                                                              SVE=Anst„llningsnr] }
    { 51  ;   ;Name Employee       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Employee No.)));
                                                   CaptionML=[ENU=Name Employee;
                                                              NOR=Navn p† ansatt.;
                                                              SVE=Namn p† anst„lld.];
                                                   Editable=No }
    { 52  ;   ;Company E-Mail      ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Company E-Mail" WHERE (No.=FIELD(Employee No.)));
                                                   CaptionML=[ENU=Company E-Mail;
                                                              NOR=Selskapets e-post;
                                                              SVE=F”retag e-post];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Source Type,Source Code,Line No.        ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Source Code,Line No.,Employee No.        }
  }
  CODE
  {
    VAR
      DptPermissionsPresentTxt@1100528500 : TextConst 'ENU=There are %1 present. Do you really want to delete this %2?';

    PROCEDURE CheckServicePersons@1100525000();
    VAR
      ServiceLocation@1100528300 : Record 11012801;
      ServiceSetup@1100528301 : Record 11012800;
    BEGIN
      ServiceSetup.GET;

      CASE "Source Type" OF
        "Source Type"::ServLocation: BEGIN
          ServiceSetup.TESTFIELD("Responsibility Location Man");
          IF (NOT ServiceLocation.GET("Source Code")) THEN
            EXIT;
          IF (ServiceLocation."Location Manager" = "Employee No.") THEN BEGIN
            ServiceLocation."Location Manager" := '';
            ServiceLocation.MODIFY;
          END;
        END;
      END;
    END;

    PROCEDURE InsertServicePersons@1100530000();
    VAR
      ServiceLocation@1100525000 : Record 11012801;
      ServiceSetup@1100528300 : Record 11012800;
    BEGIN
      ServiceSetup.GET;

      CASE "Source Type" OF
        "Source Type"::ServLocation: BEGIN
          ServiceSetup.TESTFIELD("Responsibility Location Man");
          ServiceLocation.GET("Source Code");
          IF (ServiceLocation."Location Manager" = '') THEN BEGIN
            ServiceLocation."Location Manager" := "Employee No.";
            ServiceLocation.MODIFY;
          END;
        END;
      END;
    END;

    PROCEDURE ModifyServicePersons@1100530001();
    VAR
      ServiceLocation@1100525000 : Record 11012801;
      ServiceSetup@1100528300 : Record 11012800;
    BEGIN
      ServiceSetup.GET;

      CASE "Source Type" OF
        "Source Type"::ServLocation: BEGIN
          ServiceSetup.TESTFIELD("Responsibility Location Man");
          ServiceLocation.GET("Source Code");
          IF (ServiceLocation."Location Manager" = xRec."Employee No.") THEN BEGIN
            ServiceLocation."Location Manager" := "Employee No.";
            ServiceLocation.MODIFY;
          END;
        END;
      END;
    END;

    PROCEDURE GetLastLineNo@1100528300() : Integer;
    VAR
      ServiceResponsiblePersonDPT@1100528300 : Record 11072297;
    BEGIN
      ServiceResponsiblePersonDPT.SETRANGE("Source Type", "Source Type");
      ServiceResponsiblePersonDPT.SETRANGE("Source Code", "Source Code");
      IF (ServiceResponsiblePersonDPT.FINDLAST) THEN
        EXIT(ServiceResponsiblePersonDPT."Line No.");
      EXIT(0);
    END;

    LOCAL PROCEDURE "---Locals---"@1100528500();
    BEGIN
    END;

    LOCAL PROCEDURE AddDptPermissions@1100528502();
    VAR
      DPTRespPersPermServLoc@1100528500 : Record 11072340;
      ServiceLocation@1100528502 : Record 11012801;
      InstallationManagement@1100528501 : Codeunit 11012268;
    BEGIN
      IF ("Source Type" <> "Source Type"::ServLocation) OR (Responsibility = '') OR ("Employee No." = '') THEN
        EXIT;
      IF (InstallationManagement.NoLicensePermissionForTableData(DATABASE::"DPT Resp Pers Perm ServLoc")) THEN
        EXIT;
      ServiceLocation.GET("Source Code");
      IF (NOT ServiceLocation.IsDocumentPortalServiceLocation) THEN
        EXIT;

      DPTRespPersPermServLoc.AddPortalPermission(Rec, '');
    END;

    LOCAL PROCEDURE CheckDptPermissions@1100528501() : Boolean;
    VAR
      DPTRespPersPermServLoc@1100528502 : Record 11072340;
      ServiceLocation@1100528501 : Record 11012801;
      InstallationManagement@1100528500 : Codeunit 11012268;
    BEGIN
      IF (InstallationManagement.NoLicensePermissionForTableData(DATABASE::"DPT Resp Pers Perm ServLoc")) THEN
        EXIT;
      ServiceLocation.GET("Source Code");
      IF (NOT ServiceLocation.IsDocumentPortalServiceLocation) THEN
        EXIT;
      DPTRespPersPermServLoc.SETRANGE("Service Location No.", "Source Code");
      DPTRespPersPermServLoc.SETRANGE("Line No.", "Line No.");
      DPTRespPersPermServLoc.SETFILTER("Subsite Synced On", '<>%1', 0DT);
      DPTRespPersPermServLoc.SETFILTER("Subsite Doc Type Synced On", '<>%1', 0DT);
      IF (DPTRespPersPermServLoc.ISEMPTY) THEN
        EXIT;

      IF (NOT CONFIRM(DptPermissionsPresentTxt, FALSE, DPTRespPersPermServLoc.TABLECAPTION, TABLECAPTION)) THEN
        ERROR('');
    END;

    BEGIN
    END.
  }
}

