OBJECT XMLport 11012066 Import Employees PIMS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import Employees PIMS;
               SVE=Importera anst„llda, PIMS];
    Direction=Import;
    DefaultFieldsValidation=No;
    PreserveWhiteSpace=Yes;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    HumanResourcesSetup.GET;
                    HumanResourcesSetup.TESTFIELD("Salary Application",HumanResourcesSetup."Salary Application"::Paymaster);
                    HumanResourcesSetup.TESTFIELD("Exchange Salary Application");
                    HumanResourcesSetup.TESTFIELD("Pathname Files from Salary");

                    currXMLport.FILENAME(HumanResourcesSetup."Pathname Files from Salary");
                  END;

    OnPostXMLport=VAR
                    ClientTypeManagement@1100528500 : Codeunit 4;
                  BEGIN
                    IF NOT ClientTypeManagement.IsCommonWebClientType THEN BEGIN
                      OldFile := currXMLport.FILENAME;
                      NewFile := HumanResourcesSetup.DetermineBackupFile(OldFile);
                      IF NewFile <> OldFile THEN
                        FileMgt.RenameClientFile(OldFile, NewFile, TRUE);
                    END;
                  END;

    Format=Variable Text;
    FieldDelimiter=<None>;
    FieldSeparator=[;];
    UseRequestPage=No;
  }
  ELEMENTS
  {
    { [{136D1BC8-CD61-4BA6-A859-04295167885D}];  ;Root                ;Element ;Text     }

    { [{DE5ED65E-FE03-4DAC-B5C7-03848AB6A358}];1 ;Employee            ;Element ;Table   ;
                                                  SourceTable=Table5200;
                                                  SourceTableView=SORTING(Field1);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              Employee.INIT;
                                                                              CLEAR(gvEmployee);
                                                                              CLEAR(gvLastName);
                                                                              CLEAR(gvFirstName);
                                                                              CLEAR(gvAddress);
                                                                              CLEAR(gvPostCode);
                                                                              CLEAR(gvCity);
                                                                              CLEAR(gvPhone);
                                                                              CLEAR(gvMobilePhone);
                                                                              CLEAR(gvEmail);
                                                                              CLEAR(gvGenderText);
                                                                              CLEAR(gvBirthDateText);
                                                                              CLEAR(gvEmployer);
                                                                              CLEAR(gvDimension1);
                                                                              CLEAR(gvCAO);
                                                                              CLEAR(gvEmploymentDateText);
                                                                              CLEAR(gvTerminationDateText);
                                                                              CLEAR(gvMiddleName);
                                                                              CLEAR(gvInitials);
                                                                              CLEAR(gvHouseNumber);
                                                                              CLEAR(gvHouseCharacter);
                                                                              CLEAR(gvHouseRefine);
                                                                              CLEAR(gvJobTitle);
                                                                              CLEAR(gvNormHoursTxt);
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 OldEmplRec@1100528400 : Record 5200;
                                                                                 RecRef@1100528401 : RecordRef;
                                                                               BEGIN
                                                                                 IF (gvEmployee = '') AND
                                                                                    (gvLastName = '') AND
                                                                                    (gvFirstName = '') AND
                                                                                    (gvMiddleName = '') AND
                                                                                    (gvInitials = '')
                                                                                 THEN
                                                                                   currXMLport.SKIP;

                                                                                 gvEmployee := DELCHR(gvEmployee, '<', '0');

                                                                                 IF EmplRec.GET(gvEmployee) THEN BEGIN
                                                                                   OldEmplRec := EmplRec;
                                                                                   FillFields;
                                                                                   EmplRec.OnModifyRelation(EmplRec, OldEmplRec);
                                                                                   EmplRec.MODIFY(TRUE);
                                                                                 END ELSE BEGIN
                                                                                   EmplRec.INIT;
                                                                                   EmplRec."No." := gvEmployee;
                                                                                   FillFields;
                                                                                   EmplRec.Employer := '';
                                                                                   EmplRec.INSERT(TRUE);
                                                                                   EmplRec.Employer := gvEmployer;
                                                                                   EmplRec.MODIFY;
                                                                                 END;
                                                                                 RecRef.GETTABLE(EmplRec);
                                                                                 XMLportStatusDialogMgt.ShowImportStatus(RecRef);
                                                                                 CLEARALL;

                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{3BA565FF-7158-4A6E-95BC-AAC2F79DE72F}];2 ;gvEmployee          ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{CDD1C4BD-758A-478B-B2DA-B7BC6C6BCB1E}];2 ;gvLastName          ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{82258D4C-62C9-4CD6-906A-6E4E6699D626}];2 ;gvFirstName         ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  gvFirstName := COPYSTR(gvFirstName, 1, 30);
                                                                                END;
                                                                                 }

    { [{FF98C95B-94AD-4336-AF64-0FC2594F59D6}];2 ;gvAddress           ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{C952EF91-3C93-40AA-8A6A-3657E4822D8E}];2 ;gvPostCode          ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{225918CD-042C-441F-98AB-B75FA9DCB564}];2 ;gvCity              ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{6E4404A5-54D5-4598-8BB0-2134A799A036}];2 ;gvPhone             ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{F08FB4FA-A29A-48B6-AC03-9F1E1FB8075A}];2 ;gvMobilePhone       ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{B3E557E5-407F-45B4-8416-734C85DFBB50}];2 ;gvEmail             ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{FDDA5347-ED90-456C-B0B4-27D2D5536783}];2 ;gvGenderText        ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{B7DE2727-A91A-42B4-A8E1-4D37D9FD352F}];2 ;gvBirthDateText     ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{ABF5C699-20DF-471E-9740-BBF4735146B7}];2 ;gvEmployer          ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{A7EB190F-F08D-4777-84B7-244272D227F2}];2 ;gvDimension1        ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{B9E040D8-2A1E-458F-9691-32D2F54634B5}];2 ;gvCAO               ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{A9800CA2-600F-4E62-AD38-F67D9E9B3675}];2 ;Dummy1              ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{69373DB4-0AAD-46CD-895F-EB8506B3D67F}];2 ;gvEmploymentDateText;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{ADB2B480-C964-4933-8558-04C4D6B0DED0}];2 ;gvTerminationDateText;Element;Text    ;
                                                  MinOccurs=Zero }

    { [{9F3F3822-B906-4EF1-BAC2-DC92FBF36BDC}];2 ;Dummy2              ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{4CDEC5BE-A2D3-4578-B047-3A76D1F071AC}];2 ;gvMiddleName        ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{17CB5B77-9F8F-45B5-89EE-E5D254449AF9}];2 ;gvInitials          ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{FC5965A8-511B-4AAA-887B-85E86E76203D}];2 ;gvHouseNumber       ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{BFD5EFBF-9576-4490-A1D0-547417EF4F25}];2 ;gvHouseCharacter    ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{8E5D3F73-6EE9-4EAC-82D1-515F857AA170}];2 ;gvHouseRefine       ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{1DBDA072-30C7-4540-AC1C-2E8B62D723DA}];2 ;Dummy3              ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{DCCB2E99-274A-467D-AC80-AA19B030A5EF}];2 ;Dummy4              ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{AEE4BD74-6B44-45AC-972F-D3EA21B428E9}];2 ;Dummy5              ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{899E207A-E22D-463B-A88B-B4982B383EE4}];2 ;Dummy6LastNamePartner;Element;Text    ;
                                                  MinOccurs=Zero }

    { [{DB23C23A-77AA-4785-B07F-2E87D71678A5}];2 ;Dummy7              ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{DBB4D9F1-18A4-4BA6-B4DD-26F008286038}];2 ;Dummy8              ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{690485E3-C77B-4238-9EEE-DC652FAD6A12}];2 ;Dummy9FirstNamePartner;Element;Text   ;
                                                  MinOccurs=Zero }

    { [{47C5CC3B-CF6F-4302-9B5F-E39E14C2734A}];2 ;Dummy10             ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{2B8CDA16-D63B-4B33-B19F-D584CF195905}];2 ;Dummy11             ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{62C51962-3F09-40D1-BDBF-1BB8F2D7A1A9}];2 ;gvJobTitle          ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{BB58541E-D196-4D67-A697-E03F684F9C61}];2 ;Dummy12DepartmentCode;Element;Text    ;
                                                  MinOccurs=Zero }

    { [{C387F4CE-ED56-4267-ADF1-84DB8CE6A1F4}];2 ;gvNormHoursTxt      ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  FillEmptyTextWithZero(gvNormHoursTxt);
                                                                                  gvNormHoursTxt := CONVERTSTR(gvNormHoursTxt, '.', ',');
                                                                                  EVALUATE(gvNormHours, gvNormHoursTxt);
                                                                                END;
                                                                                 }

    { [{FA91C868-ADC7-4FDF-9D84-A2CBFA2044A6}];2 ;Dummy13Chef         ;Element ;Text    ;
                                                  MinOccurs=Zero }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      HumanResourcesSetup@1100528442 : Record 5218;
      EmplRec@1100528441 : Record 5200;
      FileMgt@1100528403 : Codeunit 419;
      XMLportStatusDialogMgt@1100528404 : Codeunit 11130006;
      OldFile@1100528440 : Text[250];
      NewFile@1100528439 : Text[250];
      gvNormHours@1100528419 : Decimal;

    PROCEDURE ConvDate@1210190000(HelpDateText@1210190000 : Text[30]) : Date;
    VAR
      HelpYear@1210190001 : Integer;
      HelpMonth@1210190002 : Integer;
      HelpDay@1210190003 : Integer;
    BEGIN
      EVALUATE(HelpYear,COPYSTR(HelpDateText,7,4));
      EVALUATE(HelpMonth,COPYSTR(HelpDateText,4,2));
      EVALUATE(HelpDay,COPYSTR(HelpDateText,1,2));
      EXIT(DMY2DATE(HelpDay,HelpMonth,HelpYear));
    END;

    PROCEDURE FillFields@1210190009();
    BEGIN
      WITH EmplRec DO BEGIN
        "Last Name" := gvLastName;
        "First Name" := gvFirstName;
        Address := STRSUBSTNO('%1 %2%3%4',gvAddress,gvHouseNumber,gvHouseCharacter,gvHouseRefine);
        "Post Code" := gvPostCode;
        City := gvCity;
        "Phone No." := gvPhone;
        "Mobile Phone No." := gvMobilePhone;
        "E-Mail" := gvEmail;
        Employer := gvEmployer;
        "Global Dimension 1 Code" := gvDimension1;
        "Middle Name" := gvMiddleName;
        Initials := gvInitials;
        "Job Title" := gvJobTitle;
        "Norm Hours" := gvNormHours;

        IF gvGenderText = '1' THEN
          Gender := Gender::Male
        ELSE
          IF gvGenderText = '2' THEN
            Gender := Gender::Female
          ELSE
            Gender := Gender::" ";

        IF gvCAO = '4' THEN
          External := TRUE
        ELSE
          CAO := gvCAO;

        IF (gvBirthDateText <> '') AND (gvBirthDateText <> '0') THEN
          "Birth Date" := ConvDate(gvBirthDateText);

        IF (gvEmploymentDateText <> '') AND (gvEmploymentDateText <> '0') THEN
          "Employment Date" := ConvDate(gvEmploymentDateText)
        ELSE
          "Employment Date" := 0D;

        IF gvTerminationDateText <> '' THEN BEGIN
          "Termination Date" := ConvDate(gvTerminationDateText);
          Status := Status::Terminated;
        END ELSE BEGIN
          "Termination Date" := 0D;
          Status := Status::Active;
        END;

        "Last Date Modified" := TODAY;
        "Search Name" := '';
        VALIDATE("Last Name");

        DetermineAccountHours;

      END;
    END;

    PROCEDURE FillEmptyTextWithZero@1100525013(VAR Text@1100525000 : Text[1024]);
    BEGIN
      IF DELCHR(Text,'<>=',' ') = '' THEN
        Text := '0';
    END;

    BEGIN
    {
      CC: Dataport 11012348
    }
    END.
  }
}

