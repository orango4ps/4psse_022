OBJECT Codeunit 730 Copy Item
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.01,4PS14.00;
  }
  PROPERTIES
  {
    TableNo=27;
    OnRun=VAR
            CopyItem@1003 : Report 730;
            FirstItemNo@1001 : Code[20];
            LastItemNo@1000 : Code[20];
          BEGIN
            CopyItem.SetItem(Rec);
            CopyItem.RUNMODAL;
            IF CopyItem.IsItemCopied(FirstItemNo,LastItemNo) THEN
              ShowNotification(Rec,FirstItemNo,LastItemNo);
          END;

  }
  CODE
  {
    VAR
      ItemCopiedMsg@1000 : TextConst '@@@=%1 - item number;ENU=Item %1 was successfully copied.;NOR=Vare %1 ble kopiert.';
      ShowCreatedItemTxt@1002 : TextConst 'ENU=Show created item.;NOR=Vis opprettet vare.';
      ShowCreatedItemsTxt@1001 : TextConst 'ENU=Show created items.;NOR=Vis opprettede varer.';

    LOCAL PROCEDURE ShowNotification@7(Item@1002 : Record 27;FirstItemNo@1001 : Code[20];LastItemNo@1000 : Code[20]);
    VAR
      NotificationLifecycleMgt@1004 : Codeunit 1511;
      ItemCopiedNotification@1003 : Notification;
      ShowCreatedActionCaption@1007 : Text;
    BEGIN
      ItemCopiedNotification.ID := CREATEGUID;
      ItemCopiedNotification.SCOPE(NOTIFICATIONSCOPE::LocalScope);
      ItemCopiedNotification.SETDATA('FirstItemNo',FirstItemNo);
      ItemCopiedNotification.SETDATA('LastItemNo',LastItemNo);
      ItemCopiedNotification.MESSAGE(STRSUBSTNO(ItemCopiedMsg,Item."No."));
      IF FirstItemNo = LastItemNo THEN
        ShowCreatedActionCaption := ShowCreatedItemTxt
      ELSE
        ShowCreatedActionCaption := ShowCreatedItemsTxt;
      ItemCopiedNotification.ADDACTION(ShowCreatedActionCaption,CODEUNIT::"Copy Item",'ShowCreatedItems');
      NotificationLifecycleMgt.SendNotification(ItemCopiedNotification,Item.RECORDID);
    END;

    [External]
    PROCEDURE ShowCreatedItems@9(VAR ItemCopiedNotification@1000 : Notification);
    VAR
      Item@1001 : Record 27;
    BEGIN
      Item.SETRANGE(
        "No.",
        ItemCopiedNotification.GETDATA('FirstItemNo'),
        ItemCopiedNotification.GETDATA('LastItemNo'));
      IF Item.FINDFIRST THEN
        IF Item.COUNT = 1 THEN
          PAGE.RUNMODAL(PAGE::"Item Card",Item)
        ELSE
          PAGE.RUNMODAL(PAGE::"Item List",Item);
    END;

    PROCEDURE UpdateFromParent@1100485001(ItemNo@1100485001 : Code[20]);
    VAR
      Item@1100485000 : Record 27;
      BOMComp@1100485007 : Record 90;
      BOMComp2@1100485006 : Record 90;
      PurchPrice@1100485005 : Record 7012;
      PurchPrice2@1100485004 : Record 7012;
      PurchDisc@1100485003 : Record 7014;
      PurchDisc2@1100485002 : Record 7014;
      SalesPrice@1100485014 : Record 7002;
      SalesPrice2@1100485015 : Record 7002;
      SalesDisc@1100485013 : Record 7004;
      SalesDisc2@1100485016 : Record 7004;
      ItemVendor@1100485009 : Record 99;
      ItemVendor2@1100485008 : Record 99;
      Status@1100485012 : Dialog;
      currec@1100485011 : Integer;
      maxrec@1100485010 : Integer;
      FPSLicenseManagement@1100528900 : Codeunit 11229289;
      Text11012000@1100528901 : TextConst 'ENU=Item        #1################# @2@@@@@@@@@@@@@;SVE=Artikel     #1################# @2@@@@@@@@@@@@@';
    BEGIN
      //**4PS
      Status.OPEN(Text11012000);
      currec := 0;

      Item.SETRANGE("Parent Item", ItemNo);
      IF Item.FINDSET(FALSE, FALSE) THEN BEGIN
        maxrec := Item.COUNT;
        REPEAT
          BOMComp2.SETRANGE("Parent Item No.", Item."No.");
          BOMComp2.DELETEALL;

          BOMComp.SETRANGE("Parent Item No.", ItemNo);
          IF BOMComp.FINDSET(FALSE, FALSE) THEN BEGIN
            REPEAT
              BOMComp2.COPY(BOMComp);
              BOMComp2."Parent Item No." := Item."No.";
              BOMComp2.INSERT;
            UNTIL BOMComp.NEXT = 0;
          END;

          ItemVendor.SETRANGE("Item No.", Item."No.");
          ItemVendor.DELETEALL;

          ItemVendor.SETRANGE("Item No.", ItemNo);
          IF ItemVendor.FINDSET(FALSE, FALSE) THEN BEGIN
            REPEAT
              ItemVendor2.COPY(ItemVendor);
              ItemVendor2."Item No." := Item."No.";
              ItemVendor2.INSERT;
            UNTIL ItemVendor.NEXT = 0;
          END;

          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(PurchPrice) THEN BEGIN
            PurchPrice2.SETRANGE("Item No.", Item."No.");
            PurchPrice2.DELETEALL;

            PurchPrice.SETRANGE("Item No.", ItemNo);
            IF PurchPrice.FINDSET(FALSE, FALSE) THEN BEGIN
              REPEAT
                PurchPrice2.COPY(PurchPrice);
                PurchPrice2."Item No." := Item."No.";
                PurchPrice2.INSERT;
              UNTIL PurchPrice.NEXT = 0;
            END;
          END;

          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(PurchDisc) THEN BEGIN
            PurchDisc2.SETRANGE("Item No.", Item."No.");
            PurchDisc2.DELETEALL;

            PurchDisc.SETRANGE("Item No.", ItemNo);
            IF PurchDisc.FINDSET(FALSE, FALSE) THEN BEGIN
              REPEAT
                PurchDisc2.COPY(PurchDisc);
                PurchDisc2."Item No." := Item."No.";
                PurchDisc2.INSERT;
              UNTIL PurchDisc.NEXT = 0;
            END;
          END;

          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(SalesPrice) THEN BEGIN
            SalesPrice2.SETRANGE("Item No.", Item."No.");
            SalesPrice2.DELETEALL;

            SalesPrice.SETRANGE("Item No.", ItemNo);
            IF SalesPrice.FINDSET(FALSE, FALSE) THEN BEGIN
              REPEAT
                SalesPrice2.COPY(SalesPrice);
                SalesPrice2."Item No." := Item."No.";
                SalesPrice2.INSERT;
              UNTIL SalesPrice.NEXT = 0;
            END;
          END;

          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(SalesDisc) THEN BEGIN
            SalesDisc2.SETRANGE(Type, SalesDisc2.Type::Item);
            SalesDisc2.SETRANGE(Code, Item."No.");
            SalesDisc2.DELETEALL;

            SalesDisc.SETRANGE(Type, SalesDisc.Type::Item);
            SalesDisc.SETRANGE(Code, ItemNo);
            IF SalesDisc.FINDSET(FALSE, FALSE) THEN BEGIN
              REPEAT
                SalesDisc2.COPY(SalesDisc);
                SalesDisc2.Code := Item."No.";
                SalesDisc2.INSERT;
              UNTIL SalesDisc.NEXT = 0;
            END;
          END;

          currec := currec + 1;
          Status.UPDATE(1, Item."No.");
          Status.UPDATE(2,ROUND(currec / maxrec * 10000,1));
        UNTIL Item.NEXT = 0;
      END;

      Status.CLOSE;
    END;

    BEGIN
    END.
  }
}

