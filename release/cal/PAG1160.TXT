OBJECT Page 1160 Sales Documents
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Sales Documents;
               NOR=Forfalt salgsfakturabel›p;
               SVE=Belopp f”r f”rfallna f”rs.fakturor];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table21;
    SourceTableView=SORTING(Entry No.)
                    ORDER(Descending);
    PageType=ListPart;
    OnOpenPage=BEGIN
                 SETRANGE("Document Type","Document Type"::Invoice);
                 SETRANGE(Open,TRUE);
                 SETFILTER("Due Date",'<%1',WORKDATE);
                 SETFILTER("Remaining Amt. (LCY)",'<>0');
                 SETCURRENTKEY("Remaining Amt. (LCY)");
                 ASCENDING := FALSE;
               END;

    OnAfterGetRecord=VAR
                       Customer@1000 : Record 18;
                     BEGIN
                       Customer.GET("Customer No.");
                       CustomerName := Customer.Name;
                       StyleTxt := SetStyle;
                     END;

    ActionList=ACTIONS
    {
      { 7       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=Due Date;
                ToolTipML=[ENU=Specifies when the sales documents are due.;
                           NOR=Angir n†r salgsdokumentene forfaller.;
                           SVE=Anger n„r f”rs„ljningsdokumentet f”rfaller.];
                ApplicationArea=#All;
                SourceExpr="Due Date";
                StyleExpr=StyleTxt }

    { 8   ;2   ;Field     ;
                Name=Document Type;
                ToolTipML=[ENU=Specifies the type of sales document.;
                           NOR=Angir salgsdokumenttypen.;
                           SVE=Anger typen av f”rs„ljningsdokument.];
                ApplicationArea=#All;
                SourceExpr="Document Type" }

    { 4   ;2   ;Field     ;
                Name=Document No.;
                ToolTipML=[ENU=Specifies the sales document number.;
                           NOR=Angir salgsdokumentnummeret.;
                           SVE=Anger numret p† f”rs„ljningsdokumentet.];
                ApplicationArea=#All;
                SourceExpr="Document No.";
                StyleExpr=StyleTxt }

    { 5   ;2   ;Field     ;
                Name=Customer Name;
                CaptionML=[ENU=Customer Name;
                           NOR=Kundens navn;
                           SVE=Kundens namn];
                ToolTipML=[ENU=Specifies customer name.;
                           NOR=Angir navnet p† kunden.;
                           SVE=Anger kundens namn.];
                ApplicationArea=#All;
                SourceExpr=CustomerName }

    { 6   ;2   ;Field     ;
                Name=Remaining Amount;
                ToolTipML=[ENU=Specifies the amount that remains to be paid on the sales documents.;
                           NOR=Angir bel›pet som gjenst†r † bli betalt i salgsdokumentene.;
                           SVE=Anger beloppet som †terst†r att betala i f”rs„ljningsdokument.];
                ApplicationArea=#All;
                SourceExpr="Remaining Amount";
                OnDrillDown=VAR
                              Company@2000 : Record 2000000006;
                              HyperLinkUrl@1000 : Text[500];
                            BEGIN
                              Company.GET(COMPANYNAME);
                              IF Company."Evaluation Company" THEN
                                HyperLinkUrl := GETURL(CLIENTTYPE::Web,COMPANYNAME,OBJECTTYPE::Page,573) +
                                  '&profile=BUSINESS%20MANAGER' + STRSUBSTNO(FilterForRemAmtDrillDwnTxt,"Entry No.")
                              ELSE
                                HyperLinkUrl := GETURL(CLIENTTYPE::Web,COMPANYNAME,OBJECTTYPE::Page,573) + STRSUBSTNO(FilterForRemAmtDrillDwnTxt,"Entry No.");
                              HYPERLINK(HyperLinkUrl);
                            END;
                             }

  }
  CODE
  {
    VAR
      StyleTxt@1000 : Text;
      CustomerName@1001 : Text[100];
      FilterForRemAmtDrillDwnTxt@1002 : TextConst '@@@="%1 - Entry No. for Vendor ledger entry. ";ENU="&filter=''Detailed Cust. Ledg. Entry''.''Cust. Ledger Entry No.'' IS ''%1''";NOR="&filter=''Detailed Cust. Ledg. Entry''.''Cust. Ledger Entry No.'' IS ''%1''";SVE="&filter=''Detailed Cust. Ledg. Entry''.''Cust. Ledger Entry No.'' IS ''%1''"';

    [External]
    PROCEDURE SetFilterForOverdueSalesInvoiceAmount@1();
    BEGIN
      RESET;
      SETRANGE("Document Type","Document Type"::Invoice);
      SETRANGE(Open,TRUE);
      SETFILTER("Due Date",'<%1',WORKDATE);
      SETFILTER("Remaining Amt. (LCY)",'<>0');
      SETCURRENTKEY("Remaining Amt. (LCY)");
      ASCENDING := FALSE;
      CurrPage.UPDATE;
    END;

    [External]
    PROCEDURE SetFilterForSalesDocsDueToday@2();
    BEGIN
      RESET;
      SETFILTER("Document Type",'Invoice|Credit Memo');
      SETFILTER("Due Date",'<=%1',WORKDATE);
      SETRANGE(Open,TRUE);
      ASCENDING := FALSE;
      CurrPage.UPDATE;
    END;

    [External]
    PROCEDURE SetFilterForSalesDocsDueNextWeek@3();
    BEGIN
      RESET;
      SETFILTER("Document Type",'Invoice|Credit Memo');
      SETFILTER("Due Date",'%1..%2',CALCDATE('<1D>',WORKDATE),CALCDATE('<1W>',WORKDATE));
      SETRANGE(Open,TRUE);
      ASCENDING := FALSE;
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

