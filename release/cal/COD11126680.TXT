OBJECT Codeunit 11126680 Central Enter Src. Create Call
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1100409000 : TextConst 'DEU=Marke ''%1'' erwartet in XML-Datei ''%2''.;ENU=Tag ''%1'' expected in XML file ''%2''.;NLD=Tag ''%1'' verwacht in XML bestand ''%2''.;NOR=Tag ''%1'' forventet i XML-filen ''%2''.;SVE=Taggen ''%1'' f”rv„ntades i XML-filen ''%2''.';
      FileMgt@1100409001 : Codeunit 419;

    PROCEDURE OpenNewCallInPage@1100409000();
    VAR
      ServiceCall@1100525000 : Record 11012822;
      ServiceSetup@1100525002 : Record 11012800;
      ServiceCallPage@1100409000 : Page 11125208;
      ServiceCallWizard@1100525001 : Page 11125198;
      ServiceLocation@1100528600 : Record 11012801;
    BEGIN
      ServiceSetup.GET();
      CASE ServiceSetup."CES Creates Call in" OF
        ServiceSetup."CES Creates Call in"::Card : BEGIN
          CreateCallFromXMLFile(ServiceCall, TRUE);
          ServiceCallPage.SETRECORD(ServiceCall);
          ServiceCallPage.RUN;
        END;
        ServiceSetup."CES Creates Call in"::Wizard : BEGIN
          CreateCallFromXMLFile(ServiceCall, FALSE);
          ServiceCallWizard.SetInitialCall(ServiceCall);
          ServiceCallWizard.RUN;
        END;
        ServiceSetup."CES Creates Call in"::Cockpit : BEGIN
          CreateCallFromXMLFile(ServiceCall, FALSE);
          IF ServiceCall."Service Location No." <> '' THEN BEGIN
            ServiceLocation.GET(ServiceCall."Service Location No.");
            PAGE.RUN(PAGE::"Service Location Cockpit", ServiceLocation);
          END ELSE BEGIN
              IF ServiceSetup."CES Creates Call Without SL" = ServiceSetup."CES Creates Call Without SL"::Card THEN BEGIN
                CreateCallFromXMLFile(ServiceCall, TRUE);
                ServiceCallPage.SETRECORD(ServiceCall);
                ServiceCallPage.RUN;
              END ELSE BEGIN
                CreateCallFromXMLFile(ServiceCall, FALSE);
                ServiceCallWizard.SetInitialCall(ServiceCall);
                ServiceCallWizard.RUN;
              END;
          END;
        END;
      END;
    END;

    PROCEDURE OpenNewCallInForm@1100409001();
    VAR
      ServiceCall@1100525002 : Record 11012822;
      ServiceSetup@1100525001 : Record 11012800;
      ServiceCallPage@1100409000 : Page 11125208;
      ServiceCallWizard@1100525000 : Page 11125198;
    BEGIN
      ServiceSetup.GET();
      IF (ServiceSetup."CES Creates Call in" = ServiceSetup."CES Creates Call in"::Card) THEN BEGIN
        CreateCallFromXMLFile(ServiceCall, TRUE);
        ServiceCallPage.SETRECORD(ServiceCall);
        ServiceCallPage.RUN;
      END ELSE BEGIN
        CreateCallFromXMLFile(ServiceCall, FALSE);
        ServiceCallWizard.SetInitialCall(ServiceCall);
        ServiceCallWizard.RUN;
      END;
    END;

    PROCEDURE CreateCallFromXMLFile@1100409002(VAR ServiceCall@1100409001 : Record 11012822;InsertInDatabase@1100525000 : Boolean);
    BEGIN
      IF (InsertInDatabase) THEN BEGIN
        ServiceCall.INSERT(TRUE);
      END;
      ReadCreateCallXml(ServiceCall);
      IF (InsertInDatabase) THEN BEGIN
        ServiceCall.MODIFY(TRUE);
        COMMIT;
      END;
    END;

    PROCEDURE ReadCreateCallXml@1100525001(VAR ServiceCall@1100525006 : Record 11012822);
    VAR
      XMLDoc@1100525001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XMLNodeServiceCall@1100525003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLDOMMgt@1100525000 : Codeunit 11020220;
    BEGIN
      IF NOT FileMgt.ClientFileExists(createCallXMLFilePath()) THEN
        EXIT;

      IF ISNULL(XMLDoc) THEN
        XMLDoc := XMLDoc.XmlDocument;

      XMLDOMMgt.LoadXMLFromClientFile(XMLDoc, createCallXMLFilePath, TRUE);
      XMLNodeServiceCall := XMLDoc.DocumentElement;
      IF NOT (XMLNodeServiceCall.Name = SERVICECALLTAG) THEN
        ERROR(Text001, SERVICECALLTAG, createCallXMLFilePath());
      ReadCall(XMLNodeServiceCall, ServiceCall);

      //delete the file
      FileMgt.DeleteClientFile(createCallXMLFilePath);
    END;

    LOCAL PROCEDURE ReadCall@1100525011(XMLNode@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";VAR ServiceCall@1100409000 : Record 11012822);
    VAR
      XMLDOMMgt@1100525003 : Codeunit 11020220;
      XMLNodeReturn@1100525002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ServiceLocationValidated@1100409001 : Boolean;
      Address@1100409002 : Text[100];
    BEGIN
      IF XMLDOMMgt.FindNode(XMLNode, SERVICELOCATIONNOTAG ,XMLNodeReturn) THEN BEGIN
        IF  XMLNodeReturn.InnerText <> '' THEN BEGIN
          ServiceCall.VALIDATE("Service Location No.", XMLNodeReturn.InnerText);
          ServiceLocationValidated := TRUE;
        END;
      END;
      IF NOT ServiceLocationValidated THEN BEGIN
        IF XMLDOMMgt.FindNode(XMLNode, POSTCODETAG ,XMLNodeReturn) THEN
          IF  XMLNodeReturn.InnerText <> '' THEN ServiceCall."Post Code" := XMLNodeReturn.InnerText;
        IF XMLDOMMgt.FindNode(XMLNode, HOUSENOTAG ,XMLNodeReturn) THEN
          IF  XMLNodeReturn.InnerText <> '' THEN ServiceCall."House No." := XMLNodeReturn.InnerText;
        IF XMLDOMMgt.FindNode(XMLNode, HOUSENOEXTTAG ,XMLNodeReturn) THEN
          IF  XMLNodeReturn.InnerText <> '' THEN ServiceCall."House No. Ext." := XMLNodeReturn.InnerText;
        ServiceCall.VALIDATE("Post Code");
        ServiceCall.VALIDATE("House No.");
        ServiceCall.VALIDATE("House No. Ext.");
        IF (ServiceCall."Post Code" <> '') AND (ServiceCall."House No." <> '') THEN BEGIN
          Address := STRSUBSTNO('%1%2%3', ServiceCall."Post Code",ServiceCall."House No.",ServiceCall."House No. Ext.");
          ServiceCall.VALIDATE(Address, Address);  //this gets the street
          IF ServiceCall.Address = Address THEN  //getting the street failed
            ServiceCall.Address := '';
        END;
      END;
    END;

    PROCEDURE createCallXMLFilePath@1100525005() : Text[1024];
    VAR
      FileRegistrationTools@1100409000 : Codeunit 11012249;
      FilePath@1100525000 : Text[1024];
    BEGIN
      FilePath := FileRegistrationTools.TempPath + '\' + 'createCall.xml';
      IF NOT FileMgt.ClientFileExists(FilePath) THEN
        EXIT('');

      EXIT(FilePath);
    END;

    PROCEDURE SERVICECALLTAG@1100409003() : Text[30];
    BEGIN
      EXIT('servicecall');
    END;

    PROCEDURE HOUSENOTAG@1100409004() : Text[30];
    BEGIN
      EXIT('houseno');
    END;

    PROCEDURE HOUSENOEXTTAG@1100409005() : Text[30];
    BEGIN
      EXIT('housenoext');
    END;

    PROCEDURE SERVICELOCATIONNOTAG@1100409006() : Text[30];
    BEGIN
      EXIT('servicelocationno');
    END;

    PROCEDURE POSTCODETAG@1100409007() : Text[30];
    BEGIN
      EXIT('postcode');
    END;

    BEGIN
    END.
  }
}

