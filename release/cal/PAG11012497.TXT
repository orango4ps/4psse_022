OBJECT Page 11012497 Copy Plot
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Baunummer kopieren;
               ENU=Copy Plot;
               NLD=Bouwnummer kopi‰ren;
               NOR=Kopier tegning;
               SVE=Kopiera Ritning];
    PageType=StandardDialog;
    OnQueryClosePage=BEGIN
                       CloseActionOK := CloseAction IN [ACTION::OK,ACTION::LookupOK];
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190008;1;Group  ;
                CaptionML=[DEU=Kopieren von;
                           ENU=Copy from;
                           NLD=Kopi‰ren van;
                           NOR=Kopier fra;
                           SVE=Kopiera fr†n];
                GroupType=Group }

    { 1210190004;2;Field  ;
                Name=ProjectFrom;
                CaptionML=[DEU=Bis;
                           ENU=Project No.;
                           NLD=Projectnr.;
                           NOR=Prosjektnr;
                           SVE=Projektnr];
                SourceExpr=ProjectFrom;
                OnValidate=BEGIN
                             IF ProjectFrom = '' THEN
                               ERROR('');

                             ProjectRec.GET(ProjectFrom);

                             ProjectTo := ProjectFrom;
                             PlotFrom := '';
                             PlotTo := '';
                             Copies := 1;
                           END;

                OnLookup=BEGIN
                           SaveProjectSel := ProjectFrom;
                           LookupProject(ProjectFrom);
                           IF ProjectFrom <> SaveProjectSel THEN BEGIN
                             ProjectTo := ProjectFrom;
                             PlotFrom := '';
                             PlotTo := '';
                             Copies := 1;
                           END;
                         END;
                          }

    { 1210190022;2;Field  ;
                Name=PlotFrom;
                CaptionML=[DEU=Baunr. in;
                           ENU=Plot No.;
                           NLD=Bouwnr.;
                           NOR=Tegningnr;
                           SVE=Ritningnr];
                SourceExpr=PlotFrom;
                OnValidate=BEGIN
                             IF PlotFrom = '' THEN
                               ERROR('');

                             PlotRec.GET(ProjectFrom, PlotFrom);

                             PlotTo := FirstFreePlot(ProjectFrom, PlotFrom);
                           END;

                OnLookup=BEGIN
                           LookupPlot(ProjectFrom, PlotFrom);
                           PlotTo := FirstFreePlot(ProjectFrom, PlotFrom);
                         END;
                          }

    { 1100528400;1;Group  ;
                CaptionML=[DEU=Kopieren in;
                           ENU=Copy to;
                           NLD=Kopi‰ren naar;
                           NOR=Kopier til;
                           SVE=Kopiera till];
                GroupType=Group }

    { 1210190007;2;Field  ;
                Name=ProjectTo;
                CaptionML=[DEU=Bis;
                           ENU=Project No.;
                           NLD=Projectnr.;
                           NOR=Prosjektnr.;
                           SVE=Projektnr];
                SourceExpr=ProjectTo;
                OnValidate=BEGIN
                             ProjectToOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           SaveProjectSel := ProjectTo;
                           LookupProject(ProjectTo);
                           IF ProjectTo <> SaveProjectSel THEN BEGIN
                             PlotTo := FirstFreePlot(ProjectTo, '1');
                           END;
                         END;
                          }

    { 1210190016;2;Field  ;
                Name=PlotTo;
                CaptionML=[DEU=Bis;
                           ENU=First Plot No.;
                           NLD=Eerste bouwnr.;
                           NOR=F›rste tegningnr;
                           SVE=F”rsta Ritningnr];
                SourceExpr=PlotTo;
                OnValidate=BEGIN
                             IF PlotTo = '' THEN
                               ERROR('');

                             IF PlotRec.GET(ProjectTo, PlotTo) THEN
                               ERROR(Text001);
                           END;
                            }

    { 1100528401;1;Group  ;
                CaptionML=[DEU=Ausgleichen;
                           ENU=Apply;
                           NLD=Toepassen;
                           NOR=Koble;
                           SVE=Verkst„ll];
                GroupType=Group }

    { 1100485001;2;Field  ;
                CaptionML=[DEU=Menge;
                           ENU=Quantity;
                           NLD=Aantal;
                           NOR=Antall;
                           SVE=Antal];
                SourceExpr=Copies }

  }
  CODE
  {
    VAR
      ProjectRec@1210190004 : Record 11072003;
      PlotRec@1210190016 : Record 11012500;
      ProjectFrom@1210190000 : Code[20];
      ProjectTo@1210190002 : Code[20];
      PlotFrom@1210190015 : Code[10];
      PlotTo@1210190014 : Code[10];
      Copies@1100485000 : Integer;
      SaveProjectSel@1100485002 : Code[20];
      Text001@1100485003 : TextConst 'DEU=Baunummer bereits vorhanden;ENU=Existing Plot No.;NLD=Bouwnummer bestaat al;NOR=Eksisterende tegningnr;SVE=Befintligt Ritningnr';
      Text002@1100485001 : TextConst 'DEU=Tragen Sie zuerst alle Felder ein;ENU=Please, fill all fields first;NLD=Vul eerst alle velden;NOR=Fyll ut alle felt f›rst;SVE=Fyll i alla f„lt f”rst';
      Text003@1100485004 : TextConst 'DEU=''Baunummer nach'' kann nicht automatisch numeriert werden;ENU=Plot No. To can not be increased automatically;NLD="Bouwnummer naar kan niet automatisch worden opgenummerd ";NOR=Tegningnr til kan ikke ›kes automatisk;SVE=Ritningnr till kan inte ”kas automatiskt';
      Text004@1100485005 : TextConst 'DEU=Projekt: %1 Baunummer: %1 bereits vorhanden;ENU=Project %1 Plot %1 already present;NLD=Project: %1 Bouwnummer: %1 bestaat al;NOR=Prosjekt %1 tegning %1 finnes allerede;SVE=Projektet %1 Ritningen %1 finns redan';
      CloseActionOK@1100528400 : Boolean;
      MRProject@1100525000 : Boolean;

    PROCEDURE SetDefaults@1210190001(IProject@1210190005 : Code[20];IPlot@1210190007 : Code[10]);
    BEGIN
      ProjectFrom := IProject;
      PlotFrom := IPlot;
      ProjectTo := IProject;
      PlotTo := FirstFreePlot(IProject, IPlot);
      Copies := 1;
    END;

    PROCEDURE SetDefaultMRP@1100525000();
    BEGIN
      MRProject := TRUE;
    END;

    PROCEDURE LookupProject@1210190009(VAR IOProjectNo@1210190000 : Code[20]);
    BEGIN
      WITH ProjectRec DO BEGIN
        RESET;
        IF MRProject THEN
          SETRANGE("Maintenance And Renovation", TRUE)
        ELSE
          SETRANGE("Housebuilding Project", TRUE);

        "No." := IOProjectNo;
        IF PAGE.RUNMODAL(PAGE::"Job List",ProjectRec) = ACTION::LookupOK THEN
          IOProjectNo := "No.";
      END;
    END;

    PROCEDURE LookupPlot@1210190011(IProjectNo@1210190000 : Code[20];VAR IOPlotNo@1210190001 : Code[10]);
    BEGIN
      WITH PlotRec DO BEGIN
        RESET;
        SETRANGE("Project No.", IProjectNo);
        "Plot No." := IOPlotNo;
        IF PAGE.RUNMODAL(PAGE::"Plot Number List",PlotRec) = ACTION::LookupOK THEN
          IOPlotNo := "Plot No.";
      END;
    END;

    PROCEDURE FirstFreePlot@1100485000(IProject@1100485001 : Code[20];IPlot@1100485000 : Code[10]) OPlot : Code[20];
    VAR
      lPlotRec@1100485002 : Record 11012500;
    BEGIN
      OPlot := IPlot;

      IF Copies = 1 THEN BEGIN
        IF NOT lPlotRec.GET(IProject, OPlot) THEN   //Incstr is niet mogelijk en maar 1 copie gevraagd
           EXIT;
      END;

      IF (NOT lPlotRec.GET(IProject, OPlot)) AND (INCSTR(OPlot) <> '') THEN   //incstr is mogelijk en doel bestaat nog niet
        EXIT;

      REPEAT
        OPlot := INCSTR(OPlot);
      UNTIL (OPlot = '') OR (NOT lPlotRec.GET(IProject, OPlot))
    END;

    LOCAL PROCEDURE ProjectToOnAfterValidate@19025678();
    BEGIN
      PlotTo := FirstFreePlot(ProjectTo, '1');
    END;

    LOCAL PROCEDURE CopyPlot@1100528402();
    VAR
      lJobRec@1100528405 : Record 11072003;
      lPlotRec@1100528404 : Record 11012500;
      lHouseModelRec@1100528403 : Record 11012501;
      LoopCount@1100528402 : Integer;
      lCopies@1100528401 : Integer;
      TestPlotNo@1100528400 : Code[20];
    BEGIN
      IF (ProjectFrom = '') OR (PlotFrom = '') OR (ProjectTo = '') OR (PlotTo = '') OR (Copies = 0) THEN
        ERROR(Text002);

      IF Copies > 1 THEN BEGIN
        IF INCSTR(PlotTo) = '' THEN
          ERROR(Text003);

        TestPlotNo := PlotTo;
        FOR LoopCount := 2 TO Copies DO
          BEGIN
            TestPlotNo := INCSTR(TestPlotNo);
            IF lPlotRec.GET(ProjectTo, TestPlotNo) THEN
              ERROR(Text004, ProjectTo, TestPlotNo);
          END;
      END;

      IF lPlotRec.GET(ProjectFrom, PlotFrom) THEN BEGIN
        IF ProjectTo <> ProjectFrom THEN BEGIN
          lJobRec.GET(ProjectTo);
          lHouseModelRec.GET(ProjectTo, lPlotRec."House Model");
        END;
        lPlotRec.VALIDATE("Project No.", ProjectTo);
        lCopies := 0;
        REPEAT
          lPlotRec.VALIDATE("Plot No.", PlotTo);
          lPlotRec.VALIDATE(Principal);
          lPlotRec.VALIDATE("Principal Options");
          lPlotRec.INSERT(TRUE);
          PlotTo := INCSTR(PlotTo);
          lCopies += 1;
        UNTIL Copies = lCopies;

        lPlotRec.UpdateContractAmount(lPlotRec);
      END;
    END;

    LOCAL PROCEDURE StdDialogConfirm@1100528400() : Boolean;
    BEGIN
      CurrPage.RUNMODAL;
      EXIT(CloseActionOK);
    END;

    LOCAL PROCEDURE StdDialogDoAction@1100528401();
    BEGIN
      CopyPlot;
    END;

    PROCEDURE StdDialogRunModal@1100528404();
    BEGIN
      IF StdDialogConfirm THEN
        StdDialogDoAction;
    END;

    BEGIN
    END.
  }
}

