OBJECT Page 11012757 Filter on Contact Feature
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Filtern nach Kontaktmerkmal;
               ENU=Filter on Contact Feature;
               NLD=Op relatiekenmerk filteren;
               NOR=Filter p† kontaktfunksjon;
               SVE=Filtrera p† kontaktfunktion];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11012752;
    PageType=List;
    UsageCategory=Tasks;
    OnInit=BEGIN
             IF Rec.GETFILTERS = '' THEN
               SetGeneralFilter;
           END;

    OnOpenPage=BEGIN
                 CommentOpt := CommentOpt::Last;

                 FILTERGROUP(9);
                 SETRANGE("User ID Filter", USERID);
                 SETRANGE("Object ID Filter", PAGE::"Filter on Contact Feature");
                 FILTERGROUP(0);
               END;

    OnAfterGetRecord=BEGIN
                       GetFilterOn();
                     END;

    OnAfterGetCurrRecord=BEGIN
                           GetFilterOn();
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190002;1 ;Action    ;
                      CaptionML=[DEU=Au&fheben Filter;
                                 ENU=&Cancel Filter;
                                 NLD=O&pheffen filter;
                                 NOR=&Avbryt filter;
                                 SVE=&Avbryt filter];
                      Promoted=Yes;
                      Image=ClearFilter;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lvUserFilterRec@1100525001 : Record 11012766;
                               BEGIN
                                 lvUserFilterRec.SETRANGE("User ID", USERID);
                                 lvUserFilterRec.SETRANGE("Object ID", PAGE::"Filter on Contact Feature");
                                 lvUserFilterRec.DELETEALL;
                               END;
                                }
      { 1100525002;1 ;Action    ;
                      CaptionML=[DEU=Kopieren;
                                 ENU=Copy;
                                 NLD=Kopi‰ren;
                                 NOR=KOPIER;
                                 SVE=Kopiera];
                      Promoted=Yes;
                      Visible=ShowCopy;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 UseCopyBtn := TRUE;
                                 EvaluateFilter;
                                 IF (GUIALLOWED AND ShowMessage) THEN BEGIN
                                   IF (HelpRec.COUNT > 0) THEN BEGIN
                                     MESSAGE(Text003, HelpRec.COUNT);
                                   END ELSE
                                     MESSAGE(Text000);
                                 END;
                                 IF (HelpRec.COUNT <= 0) THEN
                                   UseCopyBtn := FALSE;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 13      ;1   ;Action    ;
                      CaptionML=[DEU=An&zeigen;
                                 ENU=&Display;
                                 NLD=&Weergeven;
                                 NOR=&Vis;
                                 SVE=&Visa];
                      Promoted=Yes;
                      Image=ViewPage;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 EvaluateFilter;

                                 IF HelpRec.FIND('-') THEN BEGIN
                                   COMMIT;
                                   FilteredDataPage.SETTABLEVIEW(HelpRec);
                                   FilteredDataPage.RUNMODAL;
                                   CLEAR(FilteredDataPage);
                                 END ELSE
                                   MESSAGE(Text000);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Feature Group";
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr=Code;
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr=Description;
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                CaptionML=[DEU=Filter;
                           ENU=Filter;
                           NLD=Filter;
                           NOR=Filter;
                           SVE=Filtrera];
                SourceExpr=FilterOn;
                OnValidate=BEGIN
                             FilterOnOnPush;
                           END;
                            }

    { 1100525001;1;Group  ;
                CaptionML=[DEU=Optionen;
                           ENU=Options;
                           NLD=Opties;
                           NOR=Alternativer;
                           SVE=Alternativ];
                GroupType=Group }

    { 1100525000;2;Field  ;
                CaptionML=[DEU=šbereinstimmendes Merkmal;
                           ENU=Match Feature;
                           NLD=Voldoet aan kenmerk;
                           NOR=Match-funksjon;
                           SVE=Match-funktionen];
                OptionCaptionML=[DEU=Alle,Beliebig;
                                 ENU=All,Any;
                                 NLD=Alle,Enkele;
                                 NOR=Alle,enhver;
                                 SVE=Alla,N†gon];
                SourceExpr=MatchFeatures;
                Importance=Promoted }

  }
  CODE
  {
    VAR
      Text000@11012009 : TextConst 'DEU=Keine Daten in Auswahl;ENU=No data in selection;NLD=Geen gegevens in selectie;NOR=Det finnes ingen data i markeringen;SVE=Det finns inga data i markerIngen';
      ContFeatType@11012000 : Record 11012753;
      ContactFeature@11012001 : Record 11012752;
      HelpRec@11012002 : Record 11012754;
      SalespersonRec@1100525007 : Record 13;
      TempCombHelpRec@1100525003 : TEMPORARY Record 11012754;
      TryRec@11012004 : Record 11012750;
      ContRec@11012006 : Record 5050;
      QuoteRec@11012008 : Record 11012758;
      JobRec@1100525000 : Record 11072003;
      FilteredDataPage@1100525004 : Page 11012758;
      RelTypeOpt@1100525006 : 'Company,Contact,Try-out,Try-out Quote,Parcel,Job,ServiceContract,Vessel,Person,General';
      CommentOpt@1100525005 : 'First,Last';
      FilterOn@1100525001 : Boolean;
      MatchFeatures@1100525009 : 'All,Any';
      Window@1210190004 : Dialog;
      Text001@1210190005 : TextConst 'DEU=Stufe 1 #1###### @2@@@@@@@@@@@@@\;ENU=Phase 1  #1###### @2@@@@@@@@@@@@@\;NLD=Fase 1  #1###### @2@@@@@@@@@@@@@\;NOR=Fase 1  #1###### @2@@@@@@@@@@@@@\;SVE=Fas 1  #1###### @2@@@@@@@@@@@@@\';
      Text002@1210190006 : TextConst 'DEU=Stufe 2 #3###### @4@@@@@@@@@@@@@\;ENU=Phase 2  #3###### @4@@@@@@@@@@@@@\;NLD=Fase 2  #3###### @4@@@@@@@@@@@@@\;NOR=Fase 2  #3###### @4@@@@@@@@@@@@@\;SVE=Fas 2  #3###### @4@@@@@@@@@@@@@\';
      Counter1@1210190008 : Integer;
      Counter2@1210190009 : Integer;
      NoOfRec1@1210190011 : Integer;
      NoOfRec2@1210190012 : Integer;
      NoOfSelectedFeatures@1100525002 : Integer;
      ShowMessage@1100525008 : Boolean;
      UseCopyBtn@1100525010 : Boolean;
      Text003@1100525011 : TextConst 'DEU=%1 Datens„tze in ³Ausgew„hltÊ;ENU=%1 Records in Selected;NLD=%1 regels geselecteerd';
      ShowCopy@1100525012 : Boolean;

    PROCEDURE SetTryoutFilter@1(VAR lTryRec@11012000 : Record 11012750);
    BEGIN
      TryRec.COPYFILTERS(lTryRec);
      RelTypeOpt := RelTypeOpt::"Try-out";
    END;

    PROCEDURE SetProspectFilter@2(VAR lContRec@11012000 : Record 5050);
    BEGIN
      ContRec.COPYFILTERS(lContRec);
      RelTypeOpt := RelTypeOpt::Company;
    END;

    PROCEDURE SetContactFilter@3(VAR lContRec@11012000 : Record 5050);
    BEGIN
      ContRec.COPYFILTERS(lContRec);
      RelTypeOpt := RelTypeOpt::Contact;
    END;

    PROCEDURE SetPersonFilter@1100528701(VAR lContRec@11012000 : Record 5050);
    BEGIN
      ContRec.COPYFILTERS(lContRec);
      RelTypeOpt := RelTypeOpt::Person;
    END;

    PROCEDURE SetQuoteFilter@4(VAR lQuoteRec@11012000 : Record 11012758);
    BEGIN
      QuoteRec.COPYFILTERS(lQuoteRec);
      RelTypeOpt := RelTypeOpt::"Try-out Quote";
    END;

    PROCEDURE SetJobFilter@1100525001(VAR lJobRec@11012000 : Record 11072003);
    BEGIN
      JobRec.COPYFILTERS(lJobRec);
      RelTypeOpt := RelTypeOpt::Job;
    END;

    PROCEDURE SetGeneralFilter@8();
    BEGIN
      RelTypeOpt := RelTypeOpt::General;
    END;

    PROCEDURE EvaluateFilter@1210190000();
    BEGIN
      Window.OPEN(Text001 + Text002);

      TempCombHelpRec.RESET;
      HelpRec.RESET;
      HelpRec.SETRANGE("User ID",USERID);
      IF NOT (RelTypeOpt = RelTypeOpt::General) THEN BEGIN
        HelpRec.SETRANGE(Type,RelTypeOpt);
        TempCombHelpRec.SETRANGE(Type,RelTypeOpt);
      END;
      HelpRec.DELETEALL;
      TempCombHelpRec.DELETEALL;
      CLEAR(TempCombHelpRec);
      CLEAR(ContFeatType);
      COMMIT;

      ContactFeature.RESET;
      ContactFeature.SETRANGE("User ID Filter", USERID);
      ContactFeature.SETRANGE("Object ID Filter", PAGE::"Filter on Contact Feature");
      CASE RelTypeOpt OF
        RelTypeOpt::Company:
          ContactFeature.SETRANGE(Companies, TRUE);
        RelTypeOpt::Contact:
          ContactFeature.SETRANGE(Contacts, TRUE);
        RelTypeOpt::Person:
          ContactFeature.SETRANGE(Persons, TRUE);
        RelTypeOpt::"Try-out":
          ContactFeature.SETRANGE("Try-outs", TRUE);
        RelTypeOpt::"Try-out Quote":
          ContactFeature.SETRANGE("Try-out Quotes", TRUE);
        RelTypeOpt::Job:
          ContactFeature.SETRANGE(Jobs, TRUE);
        RelTypeOpt::Parcel:
          ContactFeature.SETRANGE(Parcels, TRUE);
        RelTypeOpt::Vessel:
          ContactFeature.SETRANGE(Vessels, TRUE);
      END;
      ContactFeature.SETRANGE("Filter on",TRUE);
      NoOfSelectedFeatures := ContactFeature.COUNT;
      IF NoOfSelectedFeatures = 0 THEN BEGIN
        Window.CLOSE;
        EXIT;
      END;

      IF NOT (RelTypeOpt = RelTypeOpt::General) THEN
        ContFeatType.SETRANGE("Relation Type",RelTypeOpt);

      IF MatchFeatures = MatchFeatures::Any THEN BEGIN
        IF ContactFeature.FINDSET(FALSE, FALSE) THEN BEGIN
          Counter1 := 0;
          NoOfRec1 := ContactFeature.COUNT;
          REPEAT
            Counter1 := Counter1 + 1;
            Window.UPDATE(1, Counter1);
            Window.UPDATE(2, ROUND(Counter1 / NoOfRec1 * 10000,1));
            ContFeatType.SETCURRENTKEY("Relation Type", "Feature Group", Feature, Code);
            ContFeatType.SETRANGE("Feature Group",ContactFeature."Feature Group");
            ContFeatType.SETRANGE(Feature,ContactFeature.Code);
            IF ContFeatType.FINDSET(FALSE, FALSE) THEN BEGIN
              Counter2 := 0;
              NoOfRec2 := ContFeatType.COUNT;
              REPEAT
                Counter2 := Counter2 + 1;
                Window.UPDATE(3, Counter2);
                Window.UPDATE(4, ROUND(Counter2 / NoOfRec2 * 10000,1));

                IF NOT HelpRec.GET(USERID,ContFeatType."Relation Type",ContFeatType.Code) THEN BEGIN
                  CASE ContFeatType."Relation Type" OF
                    ContFeatType."Relation Type"::Company:
                      FilterProspect;
                    ContFeatType."Relation Type"::Contact:
                      FilterContact;
                    ContFeatType."Relation Type"::Person:
                      FilterPerson;
                    ContFeatType."Relation Type"::"Try-out":
                      FilterTryOut;
                    ContFeatType."Relation Type"::"Try-out Quote":
                      FilterQuote;
                    ContFeatType."Relation Type"::Job:
                      FilterJob;
                  END;
                END ELSE BEGIN
                  IF (HelpRec.Comment <> ContFeatType.Comments) THEN
                    IF (CommentOpt = CommentOpt::Last) OR (HelpRec.Comment = '') THEN BEGIN
                      HelpRec.Comment := ContFeatType.Comments;
                      HelpRec.MODIFY();
                    END;
                END;
              UNTIL ContFeatType.NEXT = 0;
            END;
          UNTIL ContactFeature.NEXT = 0;
        END;
      END ELSE BEGIN
        CASE RelTypeOpt OF
          RelTypeOpt::Company:
            BEGIN
              ContFeatType.SETRANGE("Relation Type",ContFeatType."Relation Type"::Company);
              FillHelpTable;
              ContactFeature.SETRANGE(Companies,TRUE);
              CombineFeatures;
            END;
          RelTypeOpt::Contact:
            BEGIN
              ContFeatType.SETRANGE("Relation Type",ContFeatType."Relation Type"::Contact);
              FillHelpTable;
              ContactFeature.SETRANGE(Contacts,TRUE);
              CombineFeatures;
            END;
          RelTypeOpt::Person:
            BEGIN
              ContFeatType.SETRANGE("Relation Type",ContFeatType."Relation Type"::Person);
              FillHelpTable;
              ContactFeature.SETRANGE(Persons,TRUE);
              CombineFeatures;
            END;
          RelTypeOpt::"Try-out":
            BEGIN
              ContFeatType.SETRANGE("Relation Type",ContFeatType."Relation Type"::"Try-out");
              FillHelpTable;
              ContactFeature.SETRANGE("Try-outs",TRUE);
              CombineFeatures;
            END;
          RelTypeOpt::"Try-out Quote":
            BEGIN
              ContFeatType.SETRANGE("Relation Type",ContFeatType."Relation Type"::"Try-out Quote");
              FillHelpTable;
              ContactFeature.SETRANGE("Try-out Quotes",TRUE);
              CombineFeatures;
            END;
          RelTypeOpt::Job:
            BEGIN
              ContFeatType.SETRANGE("Relation Type",ContFeatType."Relation Type"::Job);
              FillHelpTable;
              ContactFeature.SETRANGE(Jobs,TRUE);
              CombineFeatures;
            END;
          RelTypeOpt::Parcel:
            BEGIN
              ContFeatType.SETRANGE("Relation Type", ContFeatType."Relation Type"::Parcel);
              FillHelpTable;
              ContactFeature.SETRANGE(Parcels, TRUE);
              CombineFeatures;
            END;
          RelTypeOpt::Vessel:
            BEGIN
              ContFeatType.SETRANGE("Relation Type", ContFeatType."Relation Type"::Vessel);
              FillHelpTable;
              ContactFeature.SETRANGE(Vessels, TRUE);
              CombineFeatures;
            END;
          RelTypeOpt::General:
            BEGIN
              FillHelpTable;
              CombineFeatures;
            END;
        END;
      END;

      Window.CLOSE;
    END;

    PROCEDURE FilterProspect@1210190012();
    BEGIN
      ContRec.SETRANGE("No.",ContFeatType.Code);
      ContRec.SETRANGE(Type,ContRec.Type::Company);
      ContRec.SETRANGE(Blocked, FALSE);
      ContRec.SETRANGE("Exclude from Segment", FALSE);
      IF ContRec.FINDFIRST THEN BEGIN
        //kzwerver.sn 20101116: C-019208
        ContRec.CALCFIELDS("Name Salesperson");
        InsertHelpRec(
          HelpRec.Type::Company,ContFeatType.Code,ContRec.Name,ContFeatType.Comments,ContRec."Phone No.",ContRec.City,
          ContRec."Post Code", ContRec.Address, ContRec."Address 2", ContRec."Fax No.", ContRec."E-Mail",
          ContRec."E-Mail 2", ContRec."Mobile Phone No.", ContRec."Phone No. 2", ContRec."Visit Address Post Code",
          ContRec."Visit Address City", ContRec."Name Salesperson");
        //kzwerver.en
      END;
    END;

    PROCEDURE FilterContact@1210190013();
    BEGIN
      ContRec.SETRANGE("No.",ContFeatType.Code);
      ContRec.SETRANGE(Type,ContRec.Type::Person);
      ContRec.SETRANGE(Blocked, FALSE);
      ContRec.SETRANGE("Exclude from Segment", FALSE);
      IF ContRec.FINDFIRST THEN BEGIN
        //kzwerver.sn 20101116: C-019208
        ContRec.CALCFIELDS("Name Salesperson");
        InsertHelpRec(
          HelpRec.Type::Contact,ContFeatType.Code,ContRec.Name,ContFeatType.Comments,ContRec."Phone No.",ContRec.City,
          ContRec."Post Code", ContRec.Address, ContRec."Address 2", ContRec."Fax No.", ContRec."E-Mail",
          ContRec."E-Mail 2", ContRec."Mobile Phone No.", ContRec."Phone No. 2", ContRec."Visit Address Post Code",
          ContRec."Visit Address City", ContRec."Name Salesperson");
        //kzwerver.en
      END;
    END;

    PROCEDURE FilterPerson@1100528700();
    BEGIN
      ContRec.SETRANGE("No.",ContFeatType.Code);
      ContRec.SETRANGE(Type,ContRec.Type::Person);
      ContRec.SETRANGE(Blocked, FALSE);
      ContRec.SETRANGE("Exclude from Segment", FALSE);
      IF ContRec.FINDFIRST THEN BEGIN
        ContRec.CALCFIELDS("Name Salesperson");
        InsertHelpRec(
          HelpRec.Type::Person,ContFeatType.Code,ContRec.Name,ContFeatType.Comments,ContRec."Phone No.",ContRec.City,
          ContRec."Post Code", ContRec.Address, ContRec."Address 2", ContRec."Fax No.", ContRec."E-Mail",
          ContRec."E-Mail 2", ContRec."Mobile Phone No.", ContRec."Phone No. 2", ContRec."Visit Address Post Code",
          ContRec."Visit Address City", ContRec."Name Salesperson");
      END;
    END;

    PROCEDURE FilterTryOut@1210190014();
    BEGIN
      IF TryRec.GET(ContFeatType.Code) THEN BEGIN
        //kzwerver.sn 20101116: C-019208
        IF (NOT SalespersonRec.GET(TryRec."Salesperson Code")) THEN
          SalespersonRec.Name := '';
        InsertHelpRec(
          HelpRec.Type::"Try-out",ContFeatType.Code,TryRec.Description,ContFeatType.Comments,'',TryRec.City,
          TryRec."Post Code", TryRec.Address, TryRec."Address 2", '', '',
          '', '', '', '', '', SalespersonRec.Name);
        //kzwerver.en
      END;
    END;

    PROCEDURE FilterQuote@1210190015();
    BEGIN
      IF QuoteRec.GET(ContFeatType.Code) THEN BEGIN
        //kzwerver.sn 20101116: C-019208
        QuoteRec.CALCFIELDS("Salesperson Name");
        InsertHelpRec(
          HelpRec.Type::"Try-out Quote",ContFeatType.Code,QuoteRec.Description,ContFeatType.Comments,'',QuoteRec.City,
          QuoteRec."Post Code", QuoteRec.Address, QuoteRec."Address 2", '', '',
          '', '', '', '', '', QuoteRec."Salesperson Name");
        //kzwerver.en
      END;
    END;

    PROCEDURE FilterJob@1100525000();
    BEGIN
      IF JobRec.GET(ContFeatType.Code) THEN BEGIN
        //kzwerver.sn 20101116: C-019208
        JobRec.CALCFIELDS("Salesperson Name");
        InsertHelpRec(
          HelpRec.Type::Job,ContFeatType.Code,JobRec.Description,ContFeatType.Comments,'',JobRec.City,
          JobRec."Post Code", JobRec.Address, JobRec."Address 2", '', '',
          '', '', '', '', '', JobRec."Salesperson Name");
        //kzwerver.en
      END;
    END;

    LOCAL PROCEDURE InsertHelpRec@1210190004(lType@1210190000 : 'Company,Contact,Try-out,Try-out Quote,Parcel,Job,ServiceContract,Vessel,Person';lCde@1210190001 : Code[20];lDescrTxt@1210190003 : Text[100];lCommentTxt@1210190002 : Text[100];lPhoneTxt@1210190004 : Text[50];lCityTxt@1100485000 : Text[50];lPostCodeTxt@1100485001 : Code[20];lAddressTxt@1100485002 : Text[100];lAddressTxt2@1100485003 : Text[50];lFaxTxt@1100485005 : Text[30];lEmailTxt@1100485004 : Text[80];lEmailTxt2@1100525000 : Text[80];lMobPhoneTxt@1100525001 : Text[30];lPhoneTxt2@1100525002 : Text[30];lPostCodeTxt2@1100525003 : Text[20];lCityTxt2@1100525004 : Text[30];lSalespersonTxt@1100525005 : Text[50]);
    BEGIN
      HelpRec.INIT;
      HelpRec."User ID" := USERID;
      HelpRec.Type := lType;
      HelpRec.Code := lCde;
      HelpRec.Description := lDescrTxt;
      HelpRec.Comment := lCommentTxt;
      HelpRec."Contact Phone No." := lPhoneTxt;
      HelpRec.City := lCityTxt;
      HelpRec."Post Code" := lPostCodeTxt;
      HelpRec.Address := lAddressTxt;
      HelpRec."Address 2" := lAddressTxt2;
      HelpRec."Fax No." := lFaxTxt;
      HelpRec."E-Mail" := lEmailTxt;
      HelpRec."E-Mail 2" := lEmailTxt2;
      HelpRec."Mobile Phone No." := lMobPhoneTxt;
      HelpRec."Phone No. 2" := lPhoneTxt2;
      HelpRec."Visit Address Post Code" := lPostCodeTxt2;
      HelpRec."Visit Address City" := lCityTxt2;
      HelpRec."Name Salesperson" := lSalespersonTxt;
      HelpRec.INSERT;
    END;

    PROCEDURE FillHelpTable@1210190027();
    VAR
      ContFeatType2@1100525000 : Record 11012753;
    BEGIN
      IF ContactFeature.FINDSET(FALSE, FALSE) THEN BEGIN
        Counter1 := 0;
        NoOfRec1 := ContactFeature.COUNT;
        REPEAT
          Counter1 := Counter1 + 1;
          Window.UPDATE(1, Counter1);
          Window.UPDATE(2, ROUND(Counter1 / NoOfRec1 * 10000,1));

          ContFeatType.SETCURRENTKEY("Relation Type", "Feature Group", Feature, Code);
          ContFeatType.SETRANGE("Feature Group", ContactFeature."Feature Group");
          ContFeatType.SETRANGE(Feature, ContactFeature.Code);
          IF ContFeatType.FINDSET(FALSE, FALSE) THEN BEGIN
            REPEAT
              IF TempCombHelpRec.GET(USERID,ContFeatType."Relation Type",ContFeatType.Code) THEN BEGIN
                IF (TempCombHelpRec.Comment <> ContFeatType.Comments) THEN
                  IF (CommentOpt = CommentOpt::Last) OR (TempCombHelpRec.Comment = '') THEN
                    TempCombHelpRec.Comment := ContFeatType.Comments;
                IF (ContFeatType2."Relation Type" <> ContFeatType."Relation Type") OR
                   (ContFeatType2."Feature Group" <> ContFeatType."Feature Group") OR
                   (ContFeatType2.Feature <> ContFeatType.Feature) OR
                   (ContFeatType2.Code <> ContFeatType.Code) THEN
                BEGIN
                  //ContFeatType2 is used to skip double features
                  TempCombHelpRec."No. of Features Filtered" := TempCombHelpRec."No. of Features Filtered" + 1;
                END;
                TempCombHelpRec.MODIFY;
              END ELSE BEGIN
                TempCombHelpRec.INIT;
                TempCombHelpRec."User ID" := USERID;
                TempCombHelpRec.Type := ContFeatType."Relation Type";
                TempCombHelpRec.Code := ContFeatType.Code;
                TempCombHelpRec.Comment := ContFeatType.Comments;
                TempCombHelpRec."No. of Features Filtered" := 1;
                TempCombHelpRec.INSERT;
              END;
              ContFeatType2 := ContFeatType;
            UNTIL ContFeatType.NEXT = 0;
          END;
        UNTIL ContactFeature.NEXT = 0;
      END;
    END;

    PROCEDURE CombineFeatures@1210190029();
    BEGIN
      TempCombHelpRec.SETRANGE("No. of Features Filtered", NoOfSelectedFeatures);
      IF TempCombHelpRec.FINDSET(FALSE, FALSE) THEN BEGIN
        Counter2 := 0;
        NoOfRec2 := TempCombHelpRec.COUNT;
        REPEAT
          Counter2 := Counter2 + 1;
          Window.UPDATE(3, Counter2);
          Window.UPDATE(4, ROUND(Counter2 / NoOfRec2 * 10000,1));

          CLEAR(ContFeatType); //ContFeatType is used for InsertHelp function
          ContFeatType.Comments := TempCombHelpRec.Comment;
          ContFeatType.Code := TempCombHelpRec.Code;

          CASE TempCombHelpRec.Type OF
            TempCombHelpRec.Type::Company:
              FilterProspect;
            TempCombHelpRec.Type::Contact:
              FilterContact;
            TempCombHelpRec.Type::Person:
              FilterPerson;
            TempCombHelpRec.Type::"Try-out":
              FilterTryOut;
            TempCombHelpRec.Type::"Try-out Quote":
              FilterQuote;
            TempCombHelpRec.Type::Job:
              FilterJob;
          END;
        UNTIL TempCombHelpRec.NEXT = 0;
      END;
    END;

    PROCEDURE GetFilterOn@1100525002();
    BEGIN
      //* Filters on UserID and ObjectID may not be set by the user, so then reset these filters.
      //* These filters are set in OpenPage in filtergroup 9.
      IF GETFILTER("User ID Filter") <> '' THEN
        SETRANGE("User ID Filter");
      IF GETFILTER("Object ID Filter") <> '' THEN
        SETRANGE("Object ID Filter");

      CALCFIELDS("Filter on");
      FilterOn := "Filter on";
    END;

    LOCAL PROCEDURE FilterOnOnPush@19053130();
    VAR
      lvUserFilterRec@1100525001 : Record 11012766;
    BEGIN
      IF lvUserFilterRec.GET(USERID,PAGE::"Filter on Contact Feature", "Feature Group", Code) THEN BEGIN
        IF NOT FilterOn THEN
          lvUserFilterRec.DELETE;
      END ELSE BEGIN
        IF FilterOn THEN BEGIN
          lvUserFilterRec."User ID" := USERID;
          lvUserFilterRec."Object ID" := PAGE::"Filter on Contact Feature";
          lvUserFilterRec."Feature Cluster" := "Feature Group";
          lvUserFilterRec."Feature Code" := Code;
          lvUserFilterRec.INSERT;
        END;
      END;
      CurrPage.UPDATE;
    END;

    PROCEDURE GetSelectedData@1100525003(VAR ContactMgtHelpTableOut@1100525000 : Record 11012754);
    BEGIN
      ContactMgtHelpTableOut.COPY(HelpRec);
    END;

    PROCEDURE SetShowMessage@1100525004(NewValue@1100525000 : Boolean);
    BEGIN
      ShowMessage := NewValue;
    END;

    PROCEDURE GetUseCopyBtn@1100525005() : Boolean;
    BEGIN
      EXIT(UseCopyBtn);
    END;

    PROCEDURE SetShowCopy@1100525006(VisibleCopy@1100525000 : Boolean);
    BEGIN
      ShowCopy := VisibleCopy;
    END;

    BEGIN
    END.
  }
}

