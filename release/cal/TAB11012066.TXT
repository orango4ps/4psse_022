OBJECT Table 11012066 Blanket Scheme
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lvBlanketSchemeRec@1210190000 : Record 11012066;
             BEGIN
               lvBlanketSchemeRec.SETRANGE("Document No.", "Document No.");
               lvBlanketSchemeRec.SETRANGE("Document Line No.", "Document Line No.");
               IF lvBlanketSchemeRec.FINDLAST THEN
                 "Line No." := lvBlanketSchemeRec."Line No." + 10000
               ELSE
                 "Line No." := 10000;
               "Receipts Created" := FALSE;

               ProjectSiteMgt.LogBlanketScheme(1, Rec); //**4PS.n
             END;

    OnModify=BEGIN
               TESTFIELD("Receipts Created", FALSE);

               ProjectSiteMgt.LogBlanketScheme(2, Rec); //**4PS.n
             END;

    OnDelete=BEGIN
               TESTFIELD("Receipts Created", FALSE);  // If receipts create then delete only alowed when Order (Line) is deleted

               ProjectSiteMgt.LogBlanketScheme(3, Rec); //**4PS.n
             END;

    OnRename=BEGIN
               ProjectSiteMgt.LogBlanketScheme(3, xRec); //**4PS.n
               ProjectSiteMgt.LogBlanketScheme(1, Rec); //**4PS.n
             END;

    CaptionML=[ENU=Blanket Scheme;
               NOR=Blankettskjema;
               SVE=Avropsschema];
  }
  FIELDS
  {
    { 1   ;   ;Document No.        ;Code20        ;TableRelation="Purchase Header".No. WHERE (Document Type=FILTER(Order),
                                                                                              Purchase Order Type=FILTER(Blanket Order));
                                                   CaptionML=[ENU=Document No.;
                                                              NOR=Dokumentnr.;
                                                              SVE=Verifikationsnr];
                                                   NotBlank=Yes }
    { 2   ;   ;Document Line No.   ;Integer       ;TableRelation="Purchase Line"."Line No." WHERE (Document Type=FILTER(Order),
                                                                                                   Document No.=FIELD(Document No.));
                                                   CaptionML=[ENU=Order Line No.;
                                                              NOR=Ordrelinjenr.;
                                                              SVE=Orderradnr];
                                                   NotBlank=Yes }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 5   ;   ;Blanket Date        ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD("Receipts Created", FALSE);
                                                              END;

                                                   CaptionML=[ENU=Blanket Date;
                                                              NOR=Blankettdato;
                                                              SVE=Avropsdatum];
                                                   NotBlank=Yes }
    { 10  ;   ;Quantity            ;Decimal       ;OnValidate=VAR
                                                                xQuantity@1100525001 : Decimal;
                                                                xTotalQty@1100525000 : Decimal;
                                                              BEGIN
                                                                TESTFIELD("Receipts Created", FALSE);
                                                                xRecGetQuantities("Document No.", "Document Line No.", "Line No.", xQuantity, xTotalQty);
                                                                GetPurchLineData(PurchLineRec);
                                                                IF ((xTotalQty - xQuantity + Quantity) > PurchLineRec.Quantity) THEN
                                                                  FIELDERROR("Total Quantity", STRSUBSTNO(Text000, (xTotalQty - xQuantity + Quantity), PurchLineRec.Quantity));
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 15  ;   ;Total Quantity      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Blanket Scheme".Quantity WHERE (Document No.=FIELD(Document No.),
                                                                                                    Document Line No.=FIELD(Document Line No.),
                                                                                                    Blanket Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Total Quantity;
                                                              NOR=Totalt antall;
                                                              SVE=Totalt antal];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 20  ;   ;Deliver             ;Option        ;OnValidate=BEGIN
                                                                TESTFIELD("Receipts Created", FALSE);
                                                                IF (Deliver = Deliver::"Project Location") THEN BEGIN
                                                                  GetPurchLineData(PurchLineRec);
                                                                  IF (PurchLineRec."Job No." = '') THEN
                                                                    FIELDERROR(Deliver, STRSUBSTNO(Text001, Deliver));
                                                                END;

                                                                IF Deliver <> xRec.Deliver THEN
                                                                  "Ship To Location" := '';
                                                              END;

                                                   CaptionML=[ENU=Deliver;
                                                              NOR=Lever;
                                                              SVE=Leverera];
                                                   OptionCaptionML=[ENU=" ,Location,Project Location";
                                                                    NOR=" ,Plassering,Prosjektplassering";
                                                                    SVE=" ,Lagerst„lle,Etablering"];
                                                   OptionString=[ ,Location,Project Location,Service Location] }
    { 30  ;   ;Ship To Location    ;Code20        ;TableRelation=IF (Deliver=CONST(Location)) Location.Code
                                                                 ELSE IF (Deliver=CONST(Service Location)) "Service Location".No.;
                                                   OnValidate=BEGIN
                                                                // Validate for "Location" and "Service Location" is done by 'TableRelation', not possible for "Project Location' because of
                                                                // the Project No. is not a field of this table (Job No. of the order line).
                                                                TESTFIELD("Receipts Created", FALSE);
                                                                IF (Deliver = Deliver::"Project Location") THEN BEGIN
                                                                  GetPurchLineData(PurchLineRec);
                                                                  ProjLocRec.GET(PurchLineRec."Job No.", "Ship To Location");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Ship To Location;
                                                              NOR=Lever til lokasjon;
                                                              SVE=Leverera till lagerst„lle] }
    { 40  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   OnValidate=BEGIN
                                                                //DP00416
                                                                GetPurchLineData(PurchLineRec);
                                                                TESTFIELD("Project No.", PurchLineRec."Job No.");
                                                              END;

                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr] }
    { 45  ;   ;Plot No.            ;Code10        ;TableRelation=Plot."Plot No." WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                //DP00416
                                                                GetPurchLineData(PurchLineRec);
                                                                IF PurchLineRec."Plot No." <> '' THEN
                                                                  TESTFIELD("Plot No.", PurchLineRec."Plot No.");
                                                              END;

                                                   CaptionML=[ENU=Plot No.;
                                                              NOR=Tegningnr;
                                                              SVE=Ritningnr] }
    { 100 ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              NOR=Dato filter;
                                                              SVE=Datumfilter] }
    { 110 ;   ;Receipts Created    ;Boolean       ;CaptionML=[ENU=Receipts Created;
                                                              NOR=Kvitteringer er opprettet;
                                                              SVE=Inleveranser har skapats];
                                                   Editable=No }
    { 120 ;   ;Comment             ;Text80        ;CaptionML=[ENU=Comment;
                                                              NOR=Kommentar;
                                                              SVE=Kommentar] }
  }
  KEYS
  {
    {    ;Document No.,Document Line No.,Line No. ;Clustered=Yes }
    {    ;Document No.,Document Line No.,Blanket Date;
                                                   SumIndexFields=Quantity }
    {    ;Document No.,Deliver,Ship To Location,Document Line No.,Blanket Date }
    {    ;Document No.,Deliver,Ship To Location,Document Line No.,Plot No.,Blanket Date }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PurchHeadRec@1210190006 : Record 38;
      PurchLineRec@1210190000 : Record 39;
      Text000@1210190001 : TextConst 'ENU="(%1) is greater than quantity (%2) of the order line ";NOR=(%1) er st›rre enn antallet (%2) p† ordreraden;SVE="(%1) „r st”rre „n antalet (%2) p† orderraden "';
      LocRec@1210190004 : Record 14;
      ProjLocRec@1210190003 : Record 11012011;
      ServLocRec@1210190002 : Record 11012801;
      Text001@1210190005 : TextConst 'ENU=is %1 not allowed becauar there is no project entered on the order line;NOR=%1 er ikke tillatt siden det mangler det ikke er angitt et prosjekt p† ordreraden;SVE=%1 „r inte till†tet efter som det saknas angivet projekt p† orderraden';
      ProjectSiteMgt@1100525000 : Codeunit 11012282;

    PROCEDURE GetPurchLineData@1210190000(VAR OPurchLineRec@1210190000 : Record 39);
    BEGIN
      OPurchLineRec.RESET;
      IF NOT OPurchLineRec.GET(PurchLineRec."Document Type"::Order, "Document No.", "Document Line No.") THEN
        OPurchLineRec.INIT;
    END;

    PROCEDURE InitShipToData@1210190001();
    BEGIN
      IF PurchHeadRec.GET(PurchLineRec."Document Type"::Order, "Document No.") THEN BEGIN
        CASE PurchHeadRec.Deliver OF
          PurchHeadRec.Deliver::Location:
            BEGIN
              Deliver := PurchHeadRec.Deliver;
              "Ship To Location" := PurchHeadRec."Ship-to Location";
            END;
          PurchHeadRec.Deliver::"Project Location":
            BEGIN
              GetPurchLineData(PurchLineRec);
              IF ProjLocRec.GET(PurchLineRec."Job No.", PurchHeadRec."Ship-to Location") THEN BEGIN
                Deliver := PurchHeadRec.Deliver;
                "Ship To Location" := PurchHeadRec."Ship-to Location"
              END;
            END;
          //TODO In Order Header the Service Order Location, in Blanket Scheme still Service Location (must also be SO-Loc DB)
          //PurchHeadRec.Deliver::"Service Location":
          //  BEGIN
          //    Deliver := PurchHeadRec.Deliver;
          //    "Ship To Location" := PurchHeadRec."Ship To Location";
          //  END;
        END;
      END;
    END;

    PROCEDURE LookupShipToLocation@1210190002();
    BEGIN
      CASE Deliver OF
        Deliver::Location:
          BEGIN
            IF PAGE.RUNMODAL(0, LocRec) = ACTION::LookupOK THEN BEGIN
              IF (LocRec.Code <> '') AND (NOT "Receipts Created") THEN
                "Ship To Location" := LocRec.Code;
            END;
          END;
        Deliver::"Project Location":
          BEGIN
            GetPurchLineData(PurchLineRec);
            IF (PurchLineRec."Job No." <> '') THEN BEGIN
              ProjLocRec.SETRANGE("Project No.", PurchLineRec."Job No.");
              ProjLocRec."Project No." := PurchLineRec."Job No.";
              ProjLocRec.Code := "Ship To Location";
              IF PAGE.RUNMODAL(0, ProjLocRec) = ACTION::LookupOK THEN BEGIN
                IF (ProjLocRec.Code <> '') AND (NOT "Receipts Created") THEN
                  "Ship To Location" := ProjLocRec.Code;
              END;
            END;
          END;
        Deliver::"Service Location":
          BEGIN
            IF NOT ServLocRec.GET("Ship To Location") THEN ServLocRec.INIT;
            ServLocRec."No." := "Ship To Location";
            IF PAGE.RUNMODAL(0, ServLocRec) = ACTION::LookupOK THEN BEGIN
              IF (ServLocRec."No." <> '') AND (NOT "Receipts Created") THEN
                "Ship To Location" := ServLocRec."No.";
            END;
          END;
      END;
    END;

    PROCEDURE FillProjAndPlotFromOrderLine@1100525000();
    BEGIN
      //DP00416
      GetPurchLineData(PurchLineRec);
      "Project No." := PurchLineRec."Job No.";
      IF ("Project No." <> '') AND (PurchLineRec."Plot No." <> '') THEN
        "Plot No." := PurchLineRec."Plot No.";
    END;

    PROCEDURE xRecGetQuantities@1100525001(DocumentNo@1100525002 : Code[20];DocLineNo@1100525003 : Integer;LineNo@1100525005 : Integer;VAR xQuantity@1100525000 : Decimal;VAR xTotalQty@1100525001 : Decimal);
    VAR
      BlanketScheme@1100525004 : Record 11012066;
    BEGIN
      xQuantity := 0;
      xTotalQty := 0;
      IF BlanketScheme.GET(DocumentNo, DocLineNo, LineNo) THEN
        xQuantity := BlanketScheme.Quantity
      ELSE BEGIN
        BlanketScheme.SETRANGE("Document No.", DocumentNo);
        BlanketScheme.SETRANGE("Document Line No.", DocLineNo);
        IF NOT BlanketScheme.FINDFIRST THEN
          EXIT;
      END;
      BlanketScheme.CALCFIELDS("Total Quantity");  // No (flow)filter on DateFilter, must be total of order line
      xTotalQty := BlanketScheme."Total Quantity";
    END;

    BEGIN
    END.
  }
}

