OBJECT Page 11071940 Parcel
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=GrundstÅckstelle;
               ENU=Parcel;
               NLD=Grondpositie;
               NOR=Pakke;
               SVE=Paket];
    SourceTable=Table11012240;
    PageType=Card;
    RefreshOnActivate=Yes;
    OnInit=BEGIN
             Priceperm2GrossFloorSpaceEnabl := TRUE;
             "Gross Floor Space (m2)Enable" := TRUE;
             CurrAllocPercEnable := TRUE;
             ExpectedRevenueperUnitEnable := TRUE;
             "No. of UnitsEnable" := TRUE;
             CurrPriceEnable := TRUE;
             CurrSizeEnable := TRUE;
             DropZoneContainerVisible := TRUE;
           END;

    OnClosePage=BEGIN
                  CheckDataPresent; // Call 23611
                END;

    OnAfterGetRecord=BEGIN
                       CalculateFields();

                       IF (xRec."No." <> '') AND ("No." <> xRec."No.") THEN
                         CheckDataPresent;

                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  // jhoek.070910.begin
                  PurchasePrice := 0;
                  CurrPhase := '';
                  CurrPhaseDesc := '';
                  CurrType := '';
                  CurrTypeDesc := '';
                  // jhoek.070910.end
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100485055;1 ;ActionGroup;
                      CaptionML=[DEU=GrundstÅck&Position;
                                 ENU=P&arcel;
                                 NLD=Grond&positie;
                                 SVE=P&aket] }
      { 1100525023;2 ;Action    ;
                      CaptionML=[DEU=Bemerkungen;
                                 ENU=Comments;
                                 NLD=Opmerkingen;
                                 NOR=Merknader;
                                 SVE=Kommentarer];
                      RunObject=Page 124;
                      RunPageView=SORTING(Table Name,No.,Line No.);
                      RunPageLink=Table Name=CONST(Parcel),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1100485062;2 ;Action    ;
                      CaptionML=[DEU=Einkaufspreis;
                                 ENU=Purchase Price;
                                 NLD=Aankoopbedrag;
                                 NOR=Kjõpspris;
                                 SVE=Inkîpspris];
                      RunObject=Page 11071948;
                      RunPageLink=Parcel No.=FIELD(No.);
                      Image=Payment }
      { 1100485076;2 ;Action    ;
                      CaptionML=[DEU=Verpflichtungen;
                                 ENU=Commitments;
                                 NLD=Verplichtingen;
                                 NOR=Forpliktelser;
                                 SVE=ètaganden];
                      RunObject=Page 11071949;
                      RunPageLink=Parcel No.=FIELD(No.);
                      Image=Agreement }
      { 1100485086;2 ;Action    ;
                      CaptionML=[DEU=Prognose anderer GebÅhren;
                                 ENU=Cost Prognosis;
                                 NLD=Prognose kosten;
                                 SVE=Kostnadsprognos];
                      RunObject=Page 11071955;
                      RunPageLink=Parcel No.=FIELD(No.);
                      Image=CalculateRemainingUsage }
      { 1100485063;2 ;Action    ;
                      CaptionML=[DEU=Benutzer;
                                 ENU=Users;
                                 NLD=Gebruikers;
                                 NOR=Brukere;
                                 SVE=AnvÑndare];
                      RunObject=Page 11071947;
                      RunPageLink=Parcel No.=FIELD(No.);
                      Image=Users }
      { 1100485068;2 ;Action    ;
                      CaptionML=[DEU=VerkÑufer;
                                 ENU=Sellers;
                                 NLD=Verkopers;
                                 SVE=SÑljare];
                      RunObject=Page 11071946;
                      RunPageLink=Parcel No.=FIELD(No.),
                                  Type=CONST(seller);
                      Image=SalesPerson }
      { 1100485069;2 ;Action    ;
                      CaptionML=[DEU=Teilnehmer;
                                 ENU=Participants;
                                 NLD=Participanten;
                                 NOR=Deltagere;
                                 SVE=Deltagare];
                      RunObject=Page 11071946;
                      RunPageLink=Parcel No.=FIELD(No.),
                                  Type=CONST(participant);
                      Image=ICPartner }
      { 1100485070;2 ;Action    ;
                      CaptionML=[DEU=ReziprozitÑten;
                                 ENU=Reciprocities;
                                 NLD=Reciprociteiten;
                                 SVE=ômsesidigheter];
                      RunObject=Page 11071946;
                      RunPageLink=Parcel No.=FIELD(No.),
                                  Type=CONST(reciprocity) }
      { 1100485015;2 ;Action    ;
                      CaptionML=[DEU=Grundbuchnummern;
                                 ENU=Land Register Numbers;
                                 NLD=Kadastralenummers;
                                 SVE=Landregisternummer];
                      RunObject=Page 11071957;
                      RunPageLink=Parcel No.=FIELD(No.) }
      { 1100485089;2 ;Action    ;
                      CaptionML=[DEU=Wert pro Datum;
                                 ENU=Value per Date;
                                 NLD=Waarde per datum;
                                 SVE=VÑrde per datum] }
      { 1100485088;2 ;Action    ;
                      CaptionML=[DEU=Ergebnis pro Datum;
                                 ENU=Result per Date;
                                 NLD=Resultaat per datum;
                                 SVE=Resultat per datum];
                      OnAction=VAR
                                 lvParcelRec@1100485001 : Record 11012240;
                               BEGIN
                                 TESTFIELD(Freehold);
                                 lvParcelRec.SETRANGE("No.", "No.");
                                 PAGE.RUNMODAL(PAGE::"Parcel Result per Date", lvParcelRec);
                               END;
                                }
      { 1100485080;2 ;Action    ;
                      CaptionML=[DEU=&Belege;
                                 ENU=&Documents;
                                 NLD=&Documenten;
                                 NOR=&Dokumenter;
                                 SVE=&Dokument];
                      OnAction=VAR
                                 RecRef@1100525001 : RecordRef;
                                 DocumentFilters@1100525002 : Codeunit 11012432;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, TRUE);
                               END;
                                }
      { 1100485081;2 ;Action    ;
                      CaptionML=[DEU=Merkmale;
                                 ENU=Features;
                                 NLD=Kenmerken;
                                 NOR=Funksjoner;
                                 SVE=Funktioner];
                      OnAction=BEGIN
                                 ShowFeatures;
                               END;
                                }
      { 1100525022;2 ;Action    ;
                      CaptionML=[DEU=Aufgaben;
                                 ENU=To-dos;
                                 NLD=Taken;
                                 NOR=Oppgaver;
                                 SVE=Uppgifter];
                      OnAction=BEGIN
                                 ShowTodos();
                               END;
                                }
      { 1100485093;2 ;Action    ;
                      CaptionML=[DEU=Drucken Ergebnis pro Datum;
                                 ENU=Print Result per Date;
                                 NLD=Afdrukken resultaat per datum;
                                 SVE=Skriv ut resultat per datum];
                      OnAction=VAR
                                 lvParcelRec@1100485001 : Record 11012240;
                               BEGIN
                                 lvParcelRec.SETRANGE("No.","No.");
                                 REPORT.RUNMODAL(11012240, TRUE, FALSE, lvParcelRec);
                               END;
                                }
      { 1100485095;2 ;Action    ;
                      CaptionML=[DEU=Auf Karte anzeigen;
                                 ENU=Show on Map;
                                 NLD=Tonen op kaart;
                                 NOR=Vis pÜ kart;
                                 SVE=Visa pÜ karta];
                      OnAction=VAR
                                 ServerFile@1100485003 : File;
                                 OSTREAM@1100485002 : OutStream;
                                 OperatingSystemMgt@1100525003 : Codeunit 11012364;
                                 FileMgt@1100525002 : Codeunit 419;
                                 ServerFilePath@1100485001 : Text;
                                 ClientFilePath@1100525001 : Text;
                                 Command@1100525007 : Text;
                               BEGIN
                                 ServerFilePath := FileMgt.ServerTempFileName('TXT');
                                 ServerFile.CREATE(ServerFilePath);
                                 ServerFile.CREATEOUTSTREAM(OSTREAM);
                                 XMLPORT.EXPORT(11012041, OSTREAM);
                                 ServerFile.CLOSE;

                                 ClientFilePath := OperatingSystemMgt.ClientEnviron('TEMP') + '\' + Text002;
                                 FileMgt.DownloadToFile(ServerFilePath, ClientFilePath);
                                 ERASE(ServerFilePath);

                                 Command := STRSUBSTNO('"%1"', ClientFilePath);
                                 OperatingSystemMgt.ClientShell(Command, '', FALSE, FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                CaptionML=[DEU=Allgemein;
                           ENU=General;
                           NLD=Algemeen;
                           NOR=Generell;
                           SVE=AllmÑnt] }

    { 1100485001;2;Field  ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               // 31617.n
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1100485003;2;Field  ;
                SourceExpr=Description;
                Importance=Additional }

    { 1100485071;2;Field  ;
                SourceExpr="Related Project No.";
                OnValidate=BEGIN
                             RelatedProjectNoOnAfterValidat;
                           END;
                            }

    { 1100485073;2;Field  ;
                SourceExpr="Related Project Description";
                Importance=Additional }

    { 1100485090;2;Field  ;
                SourceExpr="Parcel Project" }

    { 1100485005;2;Field  ;
                SourceExpr=Location }

    { 1100485007;2;Field  ;
                SourceExpr=City }

    { 1100485009;2;Field  ;
                SourceExpr=Date }

    { 1100485045;2;Field  ;
                Name=Phase;
                CaptionML=[DEU=Stufe;
                           ENU=Phase;
                           NLD=Fase;
                           NOR=Fase;
                           SVE=Fas];
                SourceExpr=CurrPhase;
                Editable=FALSE;
                OnDrillDown=VAR
                              lvPhaseHistRec@1100485000 : Record 11012242;
                            BEGIN
                              lvPhaseHistRec.SETRANGE("Parcel No.", "No.");
                              PAGE.RUNMODAL(PAGE::"Parcel Phase History", lvPhaseHistRec);
                              CalculateFields();
                            END;
                             }

    { 1100485096;2;Field  ;
                Name=CurrPhaseDesc;
                SourceExpr=CurrPhaseDesc;
                Importance=Additional }

    { 1100485046;2;Field  ;
                Name=Type;
                CaptionML=[DEU=Art;
                           ENU=Type;
                           NLD=Type;
                           NOR=Radtype;
                           SVE=Radtyp];
                SourceExpr=CurrType;
                Editable=FALSE;
                OnDrillDown=VAR
                              lvTypeHistRec@1100485000 : Record 11012244;
                            BEGIN
                              lvTypeHistRec.SETRANGE("Parcel No.", "No.");
                              PAGE.RUNMODAL(PAGE::"Parcel Type History", lvTypeHistRec);
                              CalculateFields();
                            END;
                             }

    { 1100485097;2;Field  ;
                Name=CurrTypeDesc;
                SourceExpr=CurrTypeDesc;
                Importance=Additional }

    { 1100485025;2;Field  ;
                SourceExpr="Expected Realisation Date" }

    { 1100525024;2;Field  ;
                CaptionML=[DEU=Erwartete Realisierung in Phase;
                           ENU=Expected Realisation in Phase;
                           NLD=Verwachte realisatie in fase];
                SourceExpr=GetPhase("Expected Realisation Date") }

    { 1100525006;2;Field  ;
                SourceExpr="Split Results" }

    { 1100485064;2;Field  ;
                CaptionML=[DEU=Einkaufspreis;
                           ENU=Purchase Price;
                           NLD=Aankoopprijs;
                           NOR=Innkjõpspris;
                           SVE=Inkîpspris];
                SourceExpr=PurchasePrice;
                Editable=FALSE;
                OnValidate=BEGIN
                             PurchasePriceOnAfterValidate;
                           END;
                            }

    { 1100485074;2;Field  ;
                Name=DefPayment;
                CaptionML=[DEU=Verpflichtungen;
                           ENU=Commitments;
                           NLD=Verplichtingen;
                           NOR=Forpliktelser;
                           SVE=ètaganden];
                SourceExpr=CurrDefPayment;
                Editable=FALSE;
                OnDrillDown=VAR
                              lvDefPayRec@1100485000 : Record 11012248;
                            BEGIN
                              lvDefPayRec.SETRANGE("Parcel No.", "No.");
                              lvDefPayRec.SETCURRENTKEY("Parcel No.","Payment Date");
                              lvDefPayRec.SETFILTER("Payment Date", '%1..', TODAY);
                              PAGE.RUNMODAL(PAGE::"Parcel Commitments", lvDefPayRec);
                              CalculateFields();
                            END;
                             }

    { 1100485066;2;Field  ;
                Name=PurchPricePM2;
                CaptionML=[DEU=Einkaufspreis pro M2;
                           ENU=Purchase Price per m2;
                           NLD=Aankoopprijs per m2;
                           SVE=Inkîpspris per m2];
                SourceExpr=PurchPricePM2;
                Editable=FALSE }

    { 1100485050;2;Field  ;
                SourceExpr=Seller;
                OnValidate=BEGIN
                             SellerOnAfterValidate;
                           END;
                            }

    { 1100485054;2;Field  ;
                SourceExpr="Seller Name";
                Importance=Additional }

    { 1100485028;2;Field  ;
                SourceExpr=User;
                OnValidate=BEGIN
                             UserOnAfterValidate;
                           END;
                            }

    { 1100485057;2;Field  ;
                SourceExpr="User Name";
                Importance=Additional }

    { 1100485052;2;Field  ;
                SourceExpr=Reciprocity;
                OnValidate=BEGIN
                             ReciprocityOnAfterValidate;
                           END;
                            }

    { 1100485056;2;Field  ;
                SourceExpr="Reciprocity Name";
                Importance=Additional }

    { 1100485060;2;Field  ;
                SourceExpr=Participant;
                OnValidate=BEGIN
                             ParticipantOnAfterValidate;
                           END;
                            }

    { 1100485059;2;Field  ;
                SourceExpr="Participant Name";
                Importance=Additional }

    { 1100485105;2;Field  ;
                SourceExpr=Freehold }

    { 1210190000;2;Field  ;
                SourceExpr="Creation Date";
                Editable=FALSE }

    { 1210190002;2;Field  ;
                SourceExpr="Last Date Modified";
                Editable=FALSE }

    { 1210190004;2;Field  ;
                SourceExpr="Modified by" }

    { 1100485085;1;Part   ;
                Name=FeatureSF;
                SubPageLink=Relation Type=CONST(Parcel),
                            Code=FIELD(No.);
                PagePartID=Page11012138 }

    { 1901202501;1;Group  ;
                CaptionML=[DEU=Wert;
                           ENU=Value;
                           NLD=Waarde;
                           NOR=Verdi;
                           SVE=VÑrde] }

    { 1100525008;2;Field  ;
                SourceExpr="Value Calculation Method";
                OnValidate=BEGIN
                             ValueCalculationMethodOnAfterV;
                           END;
                            }

    { 1100485013;2;Field  ;
                Name=CurrSize;
                CaptionML=[DEU=Volumen (in M2);
                           ENU=Size (in square meters);
                           NLD=Afmetingen (in m2);
                           NOR=Stõrrelse (i kvadratmeter);
                           SVE=Storlek (i kvadratmeter)];
                SourceExpr=GetSize;
                Enabled=CurrSizeEnable }

    { 1100525018;2;Field  ;
                Name=CurrPrice;
                CaptionML=[DEU=Preis (pro m2);
                           ENU=Price per m2;
                           NLD=Prijs per m2;
                           SVE=Pris (per m2)];
                SourceExpr=GetPrice(WORKDATE);
                Enabled=CurrPriceEnable }

    { 1100525010;2;Field  ;
                SourceExpr="No. of Units";
                Enabled="No. of UnitsEnable" }

    { 1100525012;2;Field  ;
                SourceExpr="Expected Revenue per Unit";
                Enabled=ExpectedRevenueperUnitEnable }

    { 1100525016;2;Field  ;
                Name=CurrAllocPerc;
                CaptionML=[DEU=GrundstÅckquote %;
                           ENU=Unit Revenue Allocation %;
                           NLD=Grondquote %;
                           NOR=Allokering (%) av enhetsinntekter;
                           SVE=Fîrdelning % av enhetsintÑkter];
                SourceExpr=GetAllocPerc(WORKDATE);
                Enabled=CurrAllocPercEnable }

    { 1100525014;2;Field  ;
                SourceExpr="Gross Floor Space (m2)";
                Enabled="Gross Floor Space (m2)Enable" }

    { 1100525020;2;Field  ;
                SourceExpr="Price per m2 Gross Floor Space";
                Enabled=Priceperm2GrossFloorSpaceEnabl }

    { 1100485011;2;Field  ;
                Name=Value;
                CaptionML=[DEU=Wert;
                           ENU=Value;
                           NLD=Waarde;
                           NOR=Verdi;
                           SVE=VÑrde];
                SourceExpr=GetValue(WORKDATE);
                Editable=FALSE }

    { 1100485029;2;Field  ;
                SourceExpr=Participation;
                OnValidate=BEGIN
                             ParticipationOnAfterValidate;
                           END;
                            }

    { 1100525005;2;Field  ;
                Name=ParticipationValue;
                CaptionML=[DEU=Beteiligungswert;
                           ENU=Participation Value;
                           NLD=Participatiewaarde;
                           SVE=DeltagningsvÑrde];
                SourceExpr=GetParticipationValue(WORKDATE);
                Editable=FALSE }

    { 1905638701;1;Group  ;
                CaptionML=[DEU=Bankgarantie;
                           ENU=Bank Guarantee;
                           NLD=Bankgarantie;
                           SVE=Bankgaranti] }

    { 1100485033;2;Field  ;
                SourceExpr="Bank Guarantee No." }

    { 1100485035;2;Field  ;
                CaptionML=[DEU=Betrag;
                           ENU=Amount.;
                           NLD=Bedrag;
                           SVE=Belopp];
                SourceExpr="Bank Guarantee Amnt." }

    { 1100485037;2;Field  ;
                CaptionML=[DEU=Startdatum;
                           ENU=Start Date;
                           NLD=Ingangsdatum;
                           NOR=Startdato;
                           SVE=Startdatum];
                SourceExpr="Bank Guarantee Start";
                OnValidate=BEGIN
                             BankGuaranteeStartOnAfterValid;
                           END;
                            }

    { 1100485039;2;Field  ;
                CaptionML=[DEU=Enddatum;
                           ENU=End Date;
                           NLD=Einddatum;
                           NOR=Sluttdato;
                           SVE=Slutdatum];
                SourceExpr="Bank Guarantee End";
                OnValidate=BEGIN
                             BankGuaranteeEndOnAfterValidat;
                           END;
                            }

    { 1100525002;2;Field  ;
                CaptionML=[DEU=Enddatumbeschreibung;
                           ENU=Ending Date Desc.;
                           NLD=Einddatumomschrijving;
                           SVE=Beskrivning fîr slutdatum];
                SourceExpr="Bank Guaran. Ending Date Desc." }

    { 1100485048;2;Field  ;
                Name=BankGuarDuration;
                CaptionML=[DEU=Dauer;
                           ENU=Duration;
                           NLD=Looptijd;
                           NOR=Varighet;
                           SVE=Duration];
                SourceExpr=BankGuarDuration;
                Editable=FALSE }

    { 1100409000;0;Container;
                ContainerType=FactBoxArea }

    { 1100409001;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

  }
  CODE
  {
    VAR
      CurrPhase@1100485000 : Code[10];
      CurrType@1100485001 : Code[10];
      CurrDefPayment@1100485006 : Decimal;
      BankGuarDuration@1100485002 : Text[50];
      Text001@1100485003 : TextConst 'DEU=%1 Jahr(e), %2 Monat(e), %3 Tag(e);ENU=%1 year(s), %2 month(s), %3 day(s);NLD=%1 jaar, %2 maand(en), %3 dag(en);SVE=%1 Ür, %2 mÜnad(er), %3 dag(ar)';
      PurchasePrice@1100485010 : Decimal;
      PurchPricePM2@1100485004 : Decimal;
      Text002@1100485007 : TextConst 'DEU=GrundstÅckadministration.kml;ENU=Parcel Management.kml;NLD=Grondadministratie.kml;SVE=Pakethantering.kml';
      CurrPhaseDesc@1100485008 : Text[30];
      CurrTypeDesc@1100485009 : Text[30];
      Text11012000@1100525000 : TextConst 'DEU=Nicht alle %1e wurden fÅr %2 %3 %4 eingegeben;ENU=Not all %1s selected for %2 %3 %4;NLD=Niet alle %1en ingevuld voor %2 %3 %4;NOR=Ikke alle %1 er valgt for %2 %3 %4;SVE=Inte alla %1 har valts fîr %2 %3 %4';
      Text11012001@1100525001 : TextConst 'DEU=Nicht alle %1e wurden fÅr %2 %3 %4 eingegeben;ENU=Not all %1s selected for %2 %3 %4;NLD=Niet alle %1n ingevuld voor %2 %3 %4;NOR=Ikke alle %1 er valgt for %2 %3 %4;SVE=Inte alla %1 har valts fîr %2 %3 %4';
      DropZoneContainerVisible@19006404 : Boolean INDATASET;
      CurrSizeEnable@19028931 : Boolean INDATASET;
      CurrPriceEnable@19038848 : Boolean INDATASET;
      "No. of UnitsEnable"@19005886 : Boolean INDATASET;
      ExpectedRevenueperUnitEnable@19048372 : Boolean INDATASET;
      CurrAllocPercEnable@19047449 : Boolean INDATASET;
      "Gross Floor Space (m2)Enable"@19057652 : Boolean INDATASET;
      Priceperm2GrossFloorSpaceEnabl@19023592 : Boolean INDATASET;

    PROCEDURE CalculateFields@1100485000();
    VAR
      lvPhaseRec@1100485000 : Record 11012241;
      lvTypeRec@1100485001 : Record 11012243;
      RecDate@1100485009 : Record 2000000007;
      TempDate@1100485008 : Date;
      LastFoundDate@1100485007 : Date;
      TotalDays@1100485006 : Integer;
      CountYears@1100485005 : Integer;
      CountMonths@1100485004 : Integer;
      CountDays@1100485003 : Integer;
      Found@1100485002 : Boolean;
    BEGIN
      //** Postponed payment
      CurrDefPayment := GetDeferredPayment(WORKDATE);

      //** Purchase price incl. posted entries
      CALCFIELDS("Purchase Price");
      PurchasePrice := "Purchase Price" + GetPurchaseCosts(WORKDATE);

      //** Purchase price with m2
      CALCFIELDS(Size);
      IF Size <> 0 THEN
        PurchPricePM2 := (PurchasePrice + CurrDefPayment) / Size
      ELSE
       PurchPricePM2 := 0;

      //** Fase
      CurrPhase := GetPhase(WORKDATE);
      IF lvPhaseRec.GET(CurrPhase) THEN
        CurrPhaseDesc := lvPhaseRec.Description
      ELSE
        CurrPhaseDesc := '';

      //** Type
      CurrType := GetType(WORKDATE);
      IF lvTypeRec.GET(CurrType) THEN
        CurrTypeDesc := lvTypeRec.Description
      ELSE
        CurrTypeDesc := '';

      //** Bank Guarantee period
      RecDate.RESET;
      RecDate.SETRANGE("Period Type",RecDate."Period Type"::Date);
      RecDate.SETRANGE("Period Start","Bank Guarantee Start","Bank Guarantee End");

      TotalDays := RecDate.COUNT;          // only for information

      IF RecDate.FINDSET THEN BEGIN

        LastFoundDate := "Bank Guarantee Start";

        // *** find count of years ***
        TempDate := CALCDATE('<+1Y>',"Bank Guarantee Start");
        Found := TRUE;

        REPEAT
          IF (TempDate <= "Bank Guarantee End") AND (RecDate.GET(RecDate."Period Type"::Date,TempDate)) THEN BEGIN
            CountYears += 1;
            LastFoundDate := TempDate;
            TempDate := CALCDATE('<+1Y>',TempDate);
          END ELSE
            Found := FALSE;
        UNTIL NOT Found;

        // *** find count of months ***
        TempDate := CALCDATE('<+1M>',LastFoundDate);
        Found := TRUE;

        REPEAT
          IF (TempDate <= "Bank Guarantee End") AND (RecDate.GET(RecDate."Period Type"::Date,TempDate)) THEN BEGIN
            CountMonths += 1;
            LastFoundDate := TempDate;
            TempDate := CALCDATE('<+1M>',TempDate);
          END ELSE
            Found := FALSE;
        UNTIL NOT Found;

        // *** find count of days ***
        TempDate := CALCDATE('<+1D>',LastFoundDate);
        Found := TRUE;

        REPEAT
          IF (TempDate <= "Bank Guarantee End") AND (RecDate.GET(RecDate."Period Type"::Date,TempDate)) THEN BEGIN
            CountDays += 1;
            LastFoundDate := TempDate;
            TempDate := CALCDATE('<+1D>',TempDate);
          END ELSE
            Found := FALSE;
        UNTIL NOT Found;
      END;

      BankGuarDuration := STRSUBSTNO(Text001, CountYears, CountMonths, CountDays);
    END;

    PROCEDURE EnableFields@1100525003();
    BEGIN
      CurrSizeEnable := ("Value Calculation Method" = "Value Calculation Method"::"Land-bound");
      CurrPriceEnable := ("Value Calculation Method" = "Value Calculation Method"::"Land-bound");

      "No. of UnitsEnable" := ("Value Calculation Method" = "Value Calculation Method"::"Not Land-bound");
      ExpectedRevenueperUnitEnable := ("Value Calculation Method" = "Value Calculation Method"::"Not Land-bound");
      CurrAllocPercEnable := ("Value Calculation Method" = "Value Calculation Method"::"Not Land-bound");
      "Gross Floor Space (m2)Enable" := ("Value Calculation Method" = "Value Calculation Method"::"Not Land-bound");
      Priceperm2GrossFloorSpaceEnabl := ("Value Calculation Method" = "Value Calculation Method"::"Not Land-bound");
    END;

    PROCEDURE CheckDataPresent@1100525000();
    VAR
      lFeatGroupRec@1100525001 : Record 11012751;
      lFeatTypeRec@1100525000 : Record 11012753;
    BEGIN
      lFeatTypeRec.SETRANGE("Relation Type", lFeatTypeRec."Relation Type"::Parcel);
      lFeatTypeRec.SETRANGE(Code, xRec."No.");
      IF lFeatTypeRec.FINDSET(FALSE, FALSE) THEN
        REPEAT
          IF lFeatGroupRec.GET(lFeatTypeRec."Feature Group") THEN BEGIN
            IF (lFeatTypeRec.Feature = '') AND (lFeatGroupRec."Obligatory for Parcels") THEN BEGIN
              MESSAGE(Text11012000, lFeatTypeRec.FIELDCAPTION(Feature), TABLECAPTION, xRec."No.",xRec.Description);
              EXIT; //!
            END;
            IF (lFeatTypeRec.Value = 0) AND (lFeatGroupRec."Value Obligatory for Parcels") THEN BEGIN
              MESSAGE(Text11012001, lFeatTypeRec.FIELDCAPTION(Value), TABLECAPTION, xRec."No.",xRec.Description);
              EXIT; //!
            END;

          END;
        UNTIL
         lFeatTypeRec.NEXT = 0;
    END;

    LOCAL PROCEDURE SellerOnAfterValidate@19071457();
    BEGIN
      CALCFIELDS("Seller Name");
    END;

    LOCAL PROCEDURE ReciprocityOnAfterValidate@19009251();
    BEGIN
      CALCFIELDS("Reciprocity Name");
    END;

    LOCAL PROCEDURE PurchasePriceOnAfterValidate@19077905();
    BEGIN
      CALCFIELDS("Purchase Price");
    END;

    LOCAL PROCEDURE RelatedProjectNoOnAfterValidat@19054573();
    BEGIN
      CALCFIELDS("Related Project Description");
    END;

    LOCAL PROCEDURE ParticipantOnAfterValidate@19020731();
    BEGIN
      CALCFIELDS("Participant Name");
    END;

    LOCAL PROCEDURE UserOnAfterValidate@19014329();
    BEGIN
      CALCFIELDS("User Name");
    END;

    LOCAL PROCEDURE ParticipationOnAfterValidate@19032726();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ValueCalculationMethodOnAfterV@19019622();
    BEGIN
      EnableFields;
    END;

    LOCAL PROCEDURE BankGuaranteeEndOnAfterValidat@19066172();
    BEGIN
      CalculateFields();
    END;

    LOCAL PROCEDURE BankGuaranteeStartOnAfterValid@19044345();
    BEGIN
      CalculateFields();
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    VAR
      RecRef@1100528700 : RecordRef;
    BEGIN
      xRec := Rec;
      EnableFields;

      RecRef.GETTABLE(Rec);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode('');
    END;

    BEGIN
    END.
  }
}

