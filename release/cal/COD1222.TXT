OBJECT Codeunit 1222 SEPA CT-Prepare Source
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03,NAVFI;
  }
  PROPERTIES
  {
    TableNo=81;
    OnRun=VAR
            GenJnlLine@1000 : Record 81;
          BEGIN
            GenJnlLine.COPYFILTERS(Rec);
            CopyJnlLines(GenJnlLine,Rec);
          END;

  }
  CODE
  {

    LOCAL PROCEDURE CopyJnlLines@4(VAR FromGenJnlLine@1000 : Record 81;VAR TempGenJnlLine@1001 : TEMPORARY Record 81);
    VAR
      GenJnlBatch@1003 : Record 232;
    BEGIN
      IF FromGenJnlLine.FINDSET THEN BEGIN
        GenJnlBatch.GET(FromGenJnlLine."Journal Template Name",FromGenJnlLine."Journal Batch Name");

        REPEAT
          TempGenJnlLine := FromGenJnlLine;
          TempGenJnlLine.INSERT;
        UNTIL FromGenJnlLine.NEXT = 0
      END ELSE
        CreateTempJnlLines(FromGenJnlLine,TempGenJnlLine);
    END;

    LOCAL PROCEDURE CreateTempJnlLines@5(VAR FromGenJnlLine@1000 : Record 81;VAR TempGenJnlLine@1001 : TEMPORARY Record 81);
    BEGIN
      //
      TempGenJnlLine := FromGenJnlLine;

      CreateTempJnlLinesRefPmtExp(FromGenJnlLine,TempGenJnlLine);//4PSSE

      OnAfterCreateTempJnlLines(FromGenJnlLine,TempGenJnlLine);
    END;

    LOCAL PROCEDURE CreateTempJnlLinesRefPmtExp@1100583002(VAR FromGenJnlLine@1100583001 : Record 81;VAR TempGenJnlLine@1100583000 : TEMPORARY Record 81);
    VAR
      RefPmtExp@1100583004 : Record 11126182;
      BankAccount@1100583003 : Record 270;
      GeneralLedgerSetup@1100583002 : Record 98;
    BEGIN
      //>>4PSSE
      GeneralLedgerSetup.GET;
      IF NOT GeneralLedgerSetup."Finnish localization active" THEN EXIT;
      //<<4PSSE

      //>>NAVFI
      RefPmtExp.SETRANGE(Transferred,FALSE);
      RefPmtExp.SETRANGE("Applied Payments",FALSE);
      RefPmtExp.SETRANGE("SEPA Payment",TRUE);

      IF RefPmtExp.FINDSET THEN
        REPEAT
          WITH TempGenJnlLine DO BEGIN
            INIT;
            "Journal Template Name" := '';
            "Journal Batch Name" := '';
            CASE RefPmtExp."Document Type" OF
              RefPmtExp."Document Type"::Invoice:
                "Document Type" := "Document Type"::Payment;
              ELSE
                "Document Type" := "Document Type"::" ";
            END;
            "Document No." := RefPmtExp."Document No.";
            "Line No." := RefPmtExp."No.";
            "Account No." := RefPmtExp."Vendor No.";
            "Account Type" := TempGenJnlLine."Account Type"::Vendor;
            "Bal. Account Type" := TempGenJnlLine."Bal. Account Type"::"Bank Account";
            "Bal. Account No." := RefPmtExp."Payment Account";
            "External Document No." := RefPmtExp."External Document No.";
            Amount := RefPmtExp.Amount;
            "Applies-to Doc. Type" := RefPmtExp."Document Type";
            "Applies-to Doc. No." := RefPmtExp."Document No.";
            "Currency Code" := RefPmtExp."Currency Code";
            "Due Date" := RefPmtExp."Due Date";
            "Posting Date" := RefPmtExp."Payment Date";
            "Recipient Bank Account" := RefPmtExp."Vendor Account";
            Description := RefPmtExp.Description;
            "Message to Recipient" := RefPmtExp."External Document No.";

            INSERT;
          END;
        UNTIL RefPmtExp.NEXT = 0;
      //<<NAVFI
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCreateTempJnlLines@1(VAR FromGenJnlLine@1001 : Record 81;VAR TempGenJnlLine@1000 : TEMPORARY Record 81);
    BEGIN
    END;

    BEGIN
    END.
  }
}

