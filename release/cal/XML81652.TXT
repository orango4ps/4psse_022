OBJECT XMLport 81652 Imp. Extension Contract
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS7.00Toolsv1.MC;
  }
  PROPERTIES
  {
    DefaultFieldsValidation=No;
    Format/Evaluate=C/SIDE Format/Evaluate;
    PreserveWhiteSpace=Yes;
    OnInitXMLport=BEGIN
                    XMLNo := 81652;
                    MainTableID := 11012004;
                  END;

    OnPreXMLport=VAR
                   FileManagement@1100525001 : Codeunit 419;
                 BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   ConversionXMLPort.GET(XMLNo);

                   //ConvMgt.CheckComCde(LookupJobNo,11072003,JobCommentCde);
                   //ConvMgt.CheckComCde(LookupJobNo,18,CustCommentCde);

                   ConvMgt.DeleteConComment(XMLNo);
                   ConvMgt.CreateConComment(XMLNo,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XMLNo,'Start');
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XMLNo,'Stop');
                    ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{7B539476-C20A-46BC-A552-62FED55766AD}];  ;Root                ;Element ;Text     }

    { [{A667E51D-CE85-4A0D-946E-DE2CCC52ED51}];1 ;ExtensionContract   ;Element ;Table   ;
                                                  SourceTable=Table11012004;
                                                  SourceTableView=SORTING(Field10,Field20);
                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 lvFADeprBookRec@1100525001 : Record 5612;
                                                                                 lvGenJnlLineRec@1100525000 : Record 81;
                                                                                 lvDec@1100285000 : Decimal;
                                                                                 lvLineNo@1100285001 : Integer;
                                                                               BEGIN
                                                                                 IF A = '' THEN
                                                                                   currXMLport.SKIP;

                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Extension Contract");


                                                                                 WITH "Extension Contract" DO BEGIN
                                                                                   VALIDATE("Project No.",A);
                                                                                   VALIDATE("Contract No.",B);
                                                                                   INSERT(TRUE);

                                                                                   IF C <> '' THEN
                                                                                     VALIDATE(Principal,C)
                                                                                   ELSE BEGIN
                                                                                     ProjPrincRec.RESET;
                                                                                     ProjPrincRec.SETRANGE("Project No.", "Project No.");
                                                                                     IF ProjPrincRec.COUNT = 1 THEN BEGIN
                                                                                       ProjPrincRec.FINDFIRST;
                                                                                       VALIDATE(Principal, ProjPrincRec.Principal);
                                                                                     END;
                                                                                   END;

                                                                                   VALIDATE(Description,D);

                                                                                   IF EInt = 1 THEN
                                                                                     "Settlement Method" := "Settlement Method"::"Cost Plus"
                                                                                   ELSE
                                                                                     "Extension Contract".VALIDATE("Contract Amount (LCY)",FDec);

                                                                                   "Extension Contract".VALIDATE(Status,"Extension Contract".Status::"Invoicing Allowed");

                                                                                   MODIFY(TRUE);
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{3AC77EC7-9326-4B76-BA5F-EA1F70D4DA67}];2 ;A                   ;Element ;Text    ;
                                                  Width=20 }

    { [{1B889F9B-B9E2-4749-96B0-D22BA1117049}];2 ;B                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  //>> 150205 ITERO.SB Kod m†ste vara 4 tecken f”r export till Symbrio
                                                                                  IF STRLEN(B)<>4 THEN
                                                                                    ERROR('Kod m†ste vara 4 tecken %1',B);
                                                                                  //<<
                                                                                END;

                                                  Width=50 }

    { [{CE22C59B-1AB0-479B-983C-0592AB64AF92}];2 ;C                   ;Element ;Text     }

    { [{423A2C00-9578-4A65-9C21-36A1F87BE85F}];2 ;D                   ;Element ;Text     }

    { [{C4F263E2-0BC8-45A9-A6B5-029954C95BB7}];2 ;E                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF E<>'' THEN
                                                                                    EVALUATE(EInt,E);
                                                                                END;
                                                                                 }

    { [{3A8CEDB5-4616-435D-8447-B6A7E591AC44}];2 ;F                   ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF F <> '' THEN
                                                                                    EVALUATE(FDec,F);
                                                                                END;
                                                                                 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                   CreateNewNosBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100409000;;Container;
                  Name=Imp. Project Cost Plus Entries;
                  ContainerType=ContentArea }

      { 1100409001;1;Group  ;
                  CaptionML=[ENU=Options;
                             NLD=Opties;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100285001;2;Field  ;
                  Name=LookupJobNo;
                  CaptionML=ENU=Find Job by Old Job No;
                  SourceExpr=LookupJobNo;
                  OnValidate=BEGIN
                               IF NOT LookupJobNo THEN
                                 JobCommentCde := '';
                             END;
                              }

      { 1100285000;2;Field  ;
                  Name=JobCommentCde;
                  CaptionML=ENU=Comment Code old Job;
                  SourceExpr=JobCommentCde;
                  TableRelation="Comment Code" }

      { 1100285003;2;Field  ;
                  Name=LookupCustomerNo;
                  CaptionML=ENU=Find Customer by Old Customer No;
                  SourceExpr=LookupCustomerNo;
                  OnValidate=BEGIN
                               IF NOT LookupCustomerNo THEN
                                 CustCommentCde := '';
                             END;
                              }

      { 1100285002;2;Field  ;
                  Name=CustCommentCde;
                  CaptionML=ENU=Comment Code old Customer;
                  SourceExpr=CustCommentCde;
                  TableRelation="Comment Code" }

    }
  }
  CODE
  {
    VAR
      "// GENERAL"@1100525034 : Integer;
      CommentRec@1100525033 : Record 97;
      ConvMgt@1100525032 : Codeunit 11020212;
      NoSerieMgt@1100525031 : Codeunit 396;
      XMLNo@1100525028 : Integer;
      MainTableID@1100525027 : Integer;
      CreateNewNosBln@1100525026 : Boolean;
      ImpLineCounter@1100525025 : Integer;
      CommentCde@1100525024 : Code[10];
      ConversionFileFormat@1100525023 : Record 11020691;
      RunIsImportRunBln@1100525022 : Boolean;
      ConversionXMLPort@1100525002 : Record 11020640;
      PostingDateFromImportFile@1100525001 : Boolean;
      "//"@1100525020 : Integer;
      "// THIS DATAPORT"@1100525019 : Integer;
      Text001@1100525036 : TextConst 'ENU=OPENING;NLD=BEGINSTAND;SVE=™PPNAR';
      Text002@1100525035 : TextConst 'ENU=Acquisition Cost;NLD=Aanschafwaarde;SVE=Redov.integration-anskaff.kost';
      Text003@1100525030 : TextConst 'ENU=Cumulative Depreciation;NLD=Cumulatieve afschrijving;SVE=Ackumulerad avskrivning';
      LookupJobNo@1100285001 : Boolean;
      JobCommentCde@1100285000 : Code[20];
      LookupCustomerNo@1100285005 : Boolean;
      CustCommentCde@1100285004 : Code[20];
      ProjCde@1100285002 : Code[20];
      SettlementSheet@1100285003 : Record 11012021;
      CustCde@1100285006 : Code[20];
      CommissionRec@1100285007 : Record 11012020;
      EInt@1100285500 : Integer;
      FDec@1100285501 : Decimal;
      ProjPrincRec@1100285502 : Record 11012005;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    VAR
      FADepriationBook@1100529900 : Record 5612;
      GenJnlLine@1100529901 : Record 81;
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,"Extension Contract".FIELDNAME("Project No."),'Code20','');
        InsertColumnLine(XMLNo,'B',MainTableID,"Extension Contract".FIELDNAME("Contract No."),'Code10','');
        InsertColumnLine(XMLNo,'C',MainTableID,"Extension Contract".FIELDNAME(Principal),'Code20','');
        InsertColumnLine(XMLNo,'D',MainTableID,"Extension Contract".FIELDNAME(Description),'Text50','');
        InsertColumnLine(XMLNo,'E',MainTableID,"Extension Contract".FIELDNAME("Settlement Method"),'Integer','<empty>=Fixed Price, [1]=Cost Plus');
        InsertColumnLine(XMLNo,'F',MainTableID,"Extension Contract".FIELDNAME("Contract Amount (LCY)"),'Decimal','');

      END;
    END;

    PROCEDURE ClearFields@1100529902();
    BEGIN
      CLEAR("Extension Contract");
      A := '';
      B := '';
      C := '';
      D := '';
      E := '';
      F:='';
      EInt:=0;
      FDec:=0;
    END;

    PROCEDURE FillConversionXMLPortFields@1100409004();
    VAR
      ConversionXMLPort@1100409000 : Record 11020640;
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      ConversionXMLPort."Main Table ID" := MainTableID;
      ConversionXMLPort.MODIFY;
    END;

    BEGIN
    {
      150205 ITERO.SB Kod m†ste vara 4 tecken f”r export till Symbrio
    }
    END.
  }
}

