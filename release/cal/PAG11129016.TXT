OBJECT Page 11129016 Items FSA WS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=;
    SourceTable=Table27;
    PageType=List;
    SourceTableTemporary=Yes;
  }
  CONTROLS
  {
    { 1100528000;0;Container;
                ContainerType=ContentArea }

    { 1100528009;1;Field  ;
                Name=ResourceNo;
                SourceExpr=ResourceNo }

    { 1100526001;1;Field  ;
                Name=FromDate;
                SourceExpr=FromDate;
                OnValidate=BEGIN
                             FillSourceTable();
                           END;
                            }

    { 1100528001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100528002;2;Field  ;
                Name=No;
                SourceExpr="No." }

    { 1100528003;2;Field  ;
                Name=Description;
                SourceExpr=Description }

    { 1100528005;2;Field  ;
                Name=Description2;
                SourceExpr="Description 2" }

    { 1100528004;2;Field  ;
                Name=UnitOfMeasure;
                SourceExpr="Base Unit of Measure" }

    { 1100528006;2;Field  ;
                Name=VendorTradeItem;
                SourceExpr="Vendor (Trade Item)" }

    { 1100528007;2;Field  ;
                Name=ItemVendor;
                SourceExpr="Item Vendor" }

    { 1100528008;2;Field  ;
                Name=Manufacturer;
                SourceExpr=Manufacturer }

    { 1100528010;2;Field  ;
                Name=CostObjectNo;
                SourceExpr="Global Dimension 2 Code" }

    { 1100527000;2;Field  ;
                Name=GtinCode;
                SourceExpr="GTIN Code" }

    { 1100526000;2;Field  ;
                Name=Deleted;
                SourceExpr=GetDeleted }

    { 1100526002;2;Field  ;
                Name=ItemsVendors;
                SourceExpr=GetItemsVendors }

  }
  CODE
  {
    VAR
      ResourceNo@1100527000 : Code[20];
      FromDate@1100526000 : DateTime;
      GetAll@1100528700 : Boolean;
      GuidDeleted@1100528701 : GUID;

    LOCAL PROCEDURE FillSourceTable@1100527003();
    VAR
      Resource@1100527002 : Record 11229278;
      Item@1100527000 : Record 27;
      ItemVendor@1100526001 : Record 99;
      ItemRelation@1100526002 : Record 11012319;
      StockkeepingUnit@1100527006 : Record 5700;
      DeletedData@1100526000 : Record 11229871;
      ExportFilterSetMgt@1100527003 : Codeunit 11012200;
      FilterSetCode@1100527004 : Code[20];
    BEGIN
      Rec.RESET;
      Rec.DELETEALL;

      GetAll := DATE2DMY(DT2DATE(FromDate), 3) <= 1950;

      IF ResourceNo <> '' THEN BEGIN
        IF Resource.GET(ResourceNo) THEN BEGIN
          FilterSetCode := Resource."Filter Set (Mobile)";
          IF FilterSetCode <> '' THEN BEGIN
            ExportFilterSetMgt.SetExportFiltersOnItem(FilterSetCode, COMPANYNAME, Item);
            ExportFilterSetMgt.SetExportFiltersOnStockkeepingUnit(FilterSetCode, COMPANYNAME, StockkeepingUnit);
          END;
        END;
      END;

      Item.FILTERGROUP(8);
      Item.SETRANGE("Active in FSA", TRUE);
      Item.FILTERGROUP(0);

      IF NOT GetAll THEN
        Item.SETFILTER("Last Date Modified", '%1..', DT2DATE(FromDate) - 1);

      IF Item.FINDSET THEN
        REPEAT
          TryInsertItem(Item, StockkeepingUnit);
        UNTIL Item.NEXT = 0;

      IF GetAll THEN
        EXIT;

      Item.SETRANGE("Last Date Modified");

      ItemVendor.SETFILTER("Last Date Modified", '%1..', DT2DATE(FromDate) - 1);
      IF ItemVendor.FINDSET THEN
        REPEAT
          Item.SETRANGE("No.", ItemVendor."Item No."); // use all filters set before
          IF Item.FINDFIRST THEN
            TryInsertItem(Item, StockkeepingUnit);
        UNTIL ItemVendor.NEXT = 0;

      ItemRelation.SETFILTER("Last Date Modified", '%1..', DT2DATE(FromDate) - 1);
      IF ItemRelation.FINDSET THEN
        REPEAT
          Item.SETRANGE("No.", ItemRelation."Navision Item");
          IF Item.FINDFIRST THEN
            TryInsertItem(Item, StockkeepingUnit);
        UNTIL ItemRelation.NEXT = 0;

      DeletedData.SETRANGE("Table ID", DATABASE::"Item Vendor");
      DeletedData.SETFILTER(Date, '%1..', DT2DATE(FromDate) - 1);
      IF DeletedData.FINDSET THEN
        REPEAT
          Item.SETRANGE("No.", DeletedData."Code 2");
          IF Item.FINDFIRST THEN
            TryInsertItem(Item, StockkeepingUnit);
        UNTIL DeletedData.NEXT = 0;

      DeletedData.SETRANGE("Table ID", DATABASE::"Item Relation");
      DeletedData.SETFILTER(Date, '%1..', DT2DATE(FromDate) - 1);
      IF DeletedData.FINDSET THEN
        REPEAT
          Item.SETRANGE("No.", DeletedData."Code 1");
          IF Item.FINDFIRST THEN
            TryInsertItem(Item, StockkeepingUnit);
        UNTIL DeletedData.NEXT = 0;

      GuidDeleted := CREATEGUID;

      DeletedData.SETRANGE("Table ID", DATABASE::Item);
      DeletedData.SETFILTER(Date, '%1..', DT2DATE(FromDate) - 1);
      IF DeletedData.FINDSET THEN
        REPEAT
          IF NOT Item.GET(DeletedData."Code 1") THEN BEGIN
            Rec.INIT;
            Rec."No." := DeletedData."Code 1";
            Rec.Description := FORMAT(GuidDeleted);
            IF Rec.INSERT THEN;
          END;
        UNTIL DeletedData.NEXT = 0;
    END;

    LOCAL PROCEDURE TryInsertItem@1100526002(VAR Item@1100526000 : Record 27;VAR StockkeepingUnit@1100526001 : Record 5700);
    BEGIN
      IF StockkeepingUnit.GETFILTERS <> '' THEN BEGIN
        StockkeepingUnit.FILTERGROUP(8);
        StockkeepingUnit.SETRANGE("Item No.", Item."No.");
        StockkeepingUnit.FILTERGROUP(0);
        IF StockkeepingUnit.ISEMPTY THEN
          EXIT;
      END;

      Rec.INIT;
      Rec.TRANSFERFIELDS(Item);
      IF Rec.INSERT THEN;
    END;

    LOCAL PROCEDURE GetDeleted@1100526001() : Boolean;
    BEGIN
      EXIT(Description = FORMAT(GuidDeleted));
    END;

    LOCAL PROCEDURE GetItemsVendors@1100526000() Result : Text;
    VAR
      ItemVendor@1100526000 : Record 99;
      ItemRelation@1100526001 : Record 11012319;
    BEGIN
      IF GetDeleted THEN
        EXIT('');

      ItemVendor.SETRANGE("Item No.", "No.");
      ItemVendor.SETRANGE("Source Type", ItemVendor."Source Type"::"Trade Item");
      IF ItemVendor.FINDSET THEN
        REPEAT
          IF Result <> '' THEN
            Result += ' ';
          Result += ItemVendor."Vendor Item No."
        UNTIL ItemVendor.NEXT = 0;

      ItemRelation.SETRANGE("Navision Item", "No.");
      ItemRelation.SETRANGE("Source Type", ItemRelation."Source Type"::"Trade Item");
      IF ItemRelation.FINDFIRST THEN BEGIN
        IF Result <> '' THEN
          Result += ' ';
        Result += ItemRelation."Trade Item";
      END;
    END;

    BEGIN
    END.
  }
}

