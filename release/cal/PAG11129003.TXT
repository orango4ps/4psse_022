OBJECT Page 11129003 Service Orders FSA WS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    SourceTable=Table11012823;
    PageType=List;
    OnInit=BEGIN
             MobileSetup.GET;
           END;

    OnAfterGetRecord=VAR
                       MobileSetup@1100527000 : Record 11012676;
                     BEGIN
                       IF NOT ServiceOrderExtension.GET("No.") THEN
                         ServiceOrderExtension.INIT;

                       IF ServiceCall.GET("Call No.") THEN;

                       MobileSetup.DetermineHourCalcSettings(Rec, InitialMinutesWorkingHours, RoundWorkingHoursOnMinutes, RoundTravelHoursOnMinutes);

                       CALCFIELDS("Name Assigned To");
                       CustomerContactType := '';
                       IF Customer.GET("Customer No.") THEN
                         CustomerContactType := FORMAT(Customer."Contact Type");
                     END;

  }
  CONTROLS
  {
    { 1100528000;;Container;
                ContainerType=ContentArea }

    { 1100528001;1;Group  ;
                GroupType=Repeater }

    { 1100528002;2;Field  ;
                Name=No;
                SourceExpr="No." }

    { 1100528003;2;Field  ;
                Name=Address;
                SourceExpr=Address }

    { 1100528004;2;Field  ;
                Name=Address2;
                SourceExpr="Address 2" }

    { 1100528005;2;Field  ;
                Name=City;
                SourceExpr=City }

    { 1100528006;2;Field  ;
                Name=PostCode;
                SourceExpr="Post Code" }

    { 1100528009;2;Field  ;
                Name=Priority;
                SourceExpr=Priority }

    { 1100528010;2;Field  ;
                Name=OriginalProblemText;
                SourceExpr=GetProblemText }

    { 1100528100;2;Field  ;
                Name=InternalText;
                SourceExpr=GetInternalText }

    { 1100528013;2;Field  ;
                Name=ServiceLocation;
                SourceExpr="Service Location No." }

    { 1100528014;2;Field  ;
                Name=ServiceLocationDescription;
                SourceExpr="Service Location Description" }

    { 1100528015;2;Field  ;
                Name=CustomerNo;
                SourceExpr="Customer No." }

    { 1100528016;2;Field  ;
                Name=CustomerName;
                SourceExpr="Customer Name" }

    { 1100528101;2;Field  ;
                Name=ServiceContractNo;
                SourceExpr="Service Contract No." }

    { 1100528012;2;Field  ;
                Name=ContactName;
                SourceExpr="Contact Name" }

    { 1100528011;2;Field  ;
                Name=PhoneNo;
                SourceExpr="Phone No." }

    { 1100528007;2;Field  ;
                Name=PhoneNo2;
                SourceExpr="Phone No. 2" }

    { 1100528018;2;Field  ;
                Name=MobilePhoneNo;
                SourceExpr="Mobile Phone No." }

    { 1100528017;2;Field  ;
                Name=EMail;
                SourceExpr="E-Mail" }

    { 1100528008;2;Field  ;
                Name=PriceBookType;
                SourceExpr="Price Book Type" }

    { 1100528021;2;Field  ;
                Name=UnitPriceStatus;
                SourceExpr="Unit Price Status" }

    { 1100528022;2;Field  ;
                Name=RecordingUnitPricesBy;
                SourceExpr="Recording Unit Prices by" }

    { 1100528019;2;Field  ;
                Name=PriceBookCode;
                SourceExpr=ServiceOrderExtension."Price Book Code" }

    { 1100528020;2;Field  ;
                Name=PriceBookIndexDate;
                SourceExpr=ServiceOrderExtension."Price Book Index Date" }

    { 1100528023;2;Field  ;
                Name=Country;
                SourceExpr=GetCountryName }

    { 1100528024;2;Field  ;
                Name=IsCalculateTravelHoursInFSA;
                SourceExpr=GetIsCalculateTravelHoursInFSA }

    { 1100528025;2;Field  ;
                Name=ServiceLocationType;
                SourceExpr="Service Location Type" }

    { 1100528026;2;Field  ;
                Name=OrderKind;
                SourceExpr="Order Kind" }

    { 1100528027;2;Field  ;
                Name=OrderType;
                SourceExpr="Order Type" }

    { 1100528028;2;Field  ;
                Name=SourceType;
                SourceExpr=FORMAT("Source Type",0,9) }

    { 1100528029;2;Field  ;
                Name=RecordingWorkOrderNo;
                SourceExpr="Recording Work Order No." }

    { 1100528030;2;Field  ;
                Name=OrderManager;
                SourceExpr="Order Manager Name" }

    { 1100528031;2;Field  ;
                Name=CallerName;
                SourceExpr=ServiceCall."Calling Contact" }

    { 1100528032;2;Field  ;
                Name=CallerPhoneNo;
                SourceExpr=ServiceCall."Calling Phone No." }

    { 1100527000;2;Field  ;
                Name=InitialMinutesWorkingHours;
                SourceExpr=InitialMinutesWorkingHours }

    { 1100527001;2;Field  ;
                Name=RoundWorkingHoursOnMinutes;
                SourceExpr=RoundWorkingHoursOnMinutes }

    { 1100527002;2;Field  ;
                Name=RoundTravelHoursOnMinutes;
                SourceExpr=RoundTravelHoursOnMinutes }

    { 1100526000;2;Field  ;
                Name=AssignedToName;
                SourceExpr="Name Assigned To" }

    { 1100526001;2;Field  ;
                Name=Discipline;
                SourceExpr=Discipline }

    { 1100526002;2;Field  ;
                Name=DebriefText;
                SourceExpr=GetDebriefText }

    { 1100526003;2;Field  ;
                Name=Commission;
                SourceExpr="Order No. Customer" }

    { 1100526005;2;Field  ;
                Name=ResponseDeadline;
                SourceExpr=GetResponseDeadlineDateTime }

    { 1100526004;2;Field  ;
                Name=RepairDeadline;
                SourceExpr=GetRepairDeadlineDateTime }

    { 1100526006;2;Field  ;
                Name=CustomerTerms;
                SourceExpr=GetCustomerTerms }

    { 1100526007;2;Field  ;
                Name=OriginalCauseText;
                SourceExpr=GetCauseText }

    { 1100526008;2;Field  ;
                Name=OriginalSolutionText;
                SourceExpr=GetSolutionText }

    { 1100528700;2;Field  ;
                Name=CustomerContactType;
                SourceExpr=CustomerContactType }

    { 1100528701;2;Field  ;
                Name=OriginalProblemCode;
                SourceExpr=Problem }

    { 1100528702;2;Field  ;
                Name=OriginalCauseCode;
                SourceExpr=Cause }

    { 1100528703;2;Field  ;
                Name=OriginalSolutionCode;
                SourceExpr=Solution }

  }
  CODE
  {
    VAR
      MobileSetup@1100526000 : Record 11012676;
      ServiceOrderExtension@1100528000 : Record 11071727;
      CountryRegion@1100528001 : Record 9;
      ServiceCall@1100528002 : Record 11012822;
      Customer@1100528700 : Record 18;
      InitialMinutesWorkingHours@1100527000 : Integer;
      RoundWorkingHoursOnMinutes@1100527001 : Integer;
      RoundTravelHoursOnMinutes@1100527002 : Integer;
      CustomerContactType@1100528701 : Text;

    LOCAL PROCEDURE GetProblemText@1100525002() : Text;
    VAR
      ServiceText@1100525000 : Record 11012882;
    BEGIN
      EXIT(ServiceText.GetServiceOrderText(90, "No.", TRUE));
    END;

    LOCAL PROCEDURE GetCauseText@1100526004() : Text;
    VAR
      ServiceText@1100526000 : Record 11012882;
    BEGIN
      EXIT(ServiceText.GetServiceOrderText(94, "No.", TRUE));
    END;

    LOCAL PROCEDURE GetSolutionText@1100526005() : Text;
    VAR
      ServiceText@1100526000 : Record 11012882;
    BEGIN
      EXIT(ServiceText.GetServiceOrderText(92, "No.", TRUE));
    END;

    LOCAL PROCEDURE GetInternalText@1100528100() : Text;
    VAR
      ServiceText@1100525000 : Record 11012882;
      internalText@1101285002 : Text;
      internalTextExtra@1101285000 : Text;
    BEGIN
      //>>190128 ORANGO.DL #21180 Show entered ROT-information in FSA and able to correct them if nessesary
      internalText := ServiceText.GetServiceOrderText(91,"No.",TRUE);
      GetExtraInternalText(Rec,internalTextExtra);
      IF (internalText<>'') AND (internalTextExtra<>'') THEN
        internalText += LineBreak ;//+ LineBreak;
      // EXIT(ServiceText.GetServiceOrderText(91,"No.",TRUE));
      EXIT(internalText+internalTextExtra);
      //<<
    END;

    LOCAL PROCEDURE GetDebriefText@1100526000() : Text;
    VAR
      DebriefText@1100526000 : Record 11012886;
    BEGIN
      IF NOT MobileSetup."Send Debrief Texts with Order" THEN EXIT;
      EXIT(DebriefText.GetServiceOrderDebriefText("No."));
    END;

    LOCAL PROCEDURE GetCountryName@1100528000() : Text;
    VAR
      CountryCode@1100528001 : Code[10];
      CompanyInformation@1100528000 : Record 79;
    BEGIN
      CountryCode := "Country/Region Code";

      IF (CountryCode = '') THEN BEGIN
        IF (CompanyInformation.GET) THEN
          CountryCode := CompanyInformation."Country/Region Code";
      END;

      IF (CountryRegion.GET(CountryCode)) THEN
        EXIT(CountryRegion.Name);
    END;

    LOCAL PROCEDURE GetIsCalculateTravelHoursInFSA@1100528001() : Boolean;
    BEGIN
      EXIT(IsCalculateTravelHoursInFSA(Rec, COMPANYNAME));
    END;

    LOCAL PROCEDURE GetResponseDeadlineDateTime@1100526002() : DateTime;
    BEGIN
      EXIT(GetDeadlineDateTime(0));
    END;

    LOCAL PROCEDURE GetRepairDeadlineDateTime@1100526001() : DateTime;
    BEGIN
      EXIT(GetDeadlineDateTime(1));
    END;

    LOCAL PROCEDURE GetDeadlineDateTime@1100529000(Type@1100529005 : 'Response,Repair') : DateTime;
    VAR
      MobileSetup@1100529000 : Record 11012676;
      ReferencePeriod@1100529001 : Record 11020272;
      ReferencePeriodCode@1100529006 : Code[20];
      DeadLineDate@1100526001 : Date;
      DeadLineTime@1100526000 : Time;
    BEGIN
      DeadLineDate := 0D;
      DeadLineTime := 0T;

      MobileSetup.GET;

      CASE Type OF
        Type::Response: ReferencePeriodCode := MobileSetup."Reference Period Response";
        Type::Repair: ReferencePeriodCode := MobileSetup."Reference Period Repair";
      END;
      IF ReferencePeriodCode = '' THEN
        EXIT;

      ReferencePeriod.GetDeadlineDateAndTime(1, ReferencePeriod.Type::ServOrder, Rec."No.", ReferencePeriodCode, 0, DeadLineDate, DeadLineTime);
      EXIT(CREATEDATETIME(DeadLineDate, DeadLineTime));
    END;

    LOCAL PROCEDURE GetCustomerTerms@1100526003() : Text;
    VAR
      GeneralText@1100526000 : Record 11020260;
    BEGIN
      EXIT(GeneralText.GetCustomerText("Customer No.", TRUE));
    END;

    LOCAL PROCEDURE LineBreak@1100525000() : Text;
    VAR
      CRLF@1100525000 : Text[2];
    BEGIN
      CRLF[1] := 13;
      CRLF[2] := 10;
      EXIT(CRLF);
    END;

    [Integration(DEFAULT,TRUE)]
    PROCEDURE GetExtraInternalText@1101285000(Rec@1101285000 : Record 11012823;VAR Text@1101285002 : Text);
    BEGIN
    END;

    BEGIN
    {
      190128 ORANGO.DL #21180 Show entered ROT-information in FSA and able to correct them if nessesary
    }
    END.
  }
}

