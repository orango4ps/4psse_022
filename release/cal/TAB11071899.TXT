OBJECT Table 11071899 Invalid XML Character
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 17=rm;
    CaptionML=[ENU=Invalid XML Character;
               NOR=Ugyldig XML-tegn];
    LookupPageID=Page11125098;
    DrillDownPageID=Page11125098;
  }
  FIELDS
  {
    { 10  ;   ;Table ID            ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Table));
                                                   CaptionML=[ENU=Table ID;
                                                              NOR=Tabell-ID;
                                                              SVE=Tabell-ID] }
    { 15  ;   ;Table Name          ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Table),
                                                                                         ID=FIELD(Table ID)));
                                                   CaptionML=[ENU=Table Name;
                                                              NOR=Tabellnavn;
                                                              SVE=Tabellnamn];
                                                   Editable=No }
    { 20  ;   ;Field No.           ;Integer       ;TableRelation=Field.No. WHERE (TableNo=FIELD(Table ID));
                                                   CaptionML=[ENU=Field No.;
                                                              NOR=Feltnr.;
                                                              SVE=F„ltnr] }
    { 25  ;   ;Field Name          ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field.FieldName WHERE (TableNo=FIELD(Table ID),
                                                                                             No.=FIELD(Field No.)));
                                                   CaptionML=[ENU=Field Name;
                                                              NOR=Feltnavn;
                                                              SVE=F„ltnamn];
                                                   Editable=No }
    { 30  ;   ;Record ID           ;RecordID      ;CaptionML=[ENU=Record ID;
                                                              NOR=Post-ID;
                                                              SVE=Post-ID] }
    { 40  ;   ;ASCII               ;Integer       ;CaptionML=[ENU=ASCII;
                                                              NOR=ASCII;
                                                              SVE=ASCII] }
    { 50  ;   ;Value               ;Text250       ;CaptionML=[ENU=Value;
                                                              NOR=Verdi;
                                                              SVE=V„rde] }
    { 60  ;   ;Primary Key Field   ;Boolean       ;CaptionML=[ENU=Primary Key Field;
                                                              NOR=Felt for prim‘rn›kkel] }
    { 70  ;   ;Processed           ;Boolean       ;CaptionML=[ENU=Processed;
                                                              NOR=Behandlede;
                                                              SVE=Bearbetat] }
  }
  KEYS
  {
    {    ;Table ID,Field No.,Record ID,ASCII      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528400 : TextConst 'ENU=Searching invalid XML characters in table %1  @2@@@@@@@@@@@@@;NOR=S›ker etter ugyldige XML-tegn i tabell %1  @2@@@@@@@@@@@@@';

    PROCEDURE SearchInvalidCharacters@1100528402(VAR RecordID@1100528400 : Integer;SearchFieldType@1100528405 : 'Text,Code,Both');
    VAR
      Field@1100528404 : Record 2000000041;
      RecRef@1100528401 : RecordRef;
      FldRef@1100528403 : FieldRef;
      I@1100528402 : Integer;
      TotalNumberOfRecords@1100528407 : Integer;
      CurrentRecordNumber@1100528408 : Integer;
      Window@1100528406 : Dialog;
    BEGIN
      RecRef.OPEN(RecordID);
      IF RecRef.FINDSET THEN BEGIN
        Window.OPEN(STRSUBSTNO(Text000, RecRef.NAME, 0));
        TotalNumberOfRecords := RecRef.COUNT;
        REPEAT
          CurrentRecordNumber := CurrentRecordNumber + 1;
          IF (CurrentRecordNumber MOD 50 = 0) THEN
            Window.UPDATE(2,ROUND(CurrentRecordNumber / TotalNumberOfRecords * 10000,1));
          FOR I := 1 TO RecRef.FIELDCOUNT DO BEGIN
            FldRef := RecRef.FIELDINDEX(I);
            IF EVALUATE(Field.Class, FORMAT(FldRef.CLASS)) AND
               EVALUATE(Field.Type, FORMAT(FldRef.TYPE))
            THEN BEGIN
              IF FieldMustBeSearched(Field, SearchFieldType) THEN
                SearchInvalidCharactersOfField(RecRef, FldRef);
            END
          END;
        UNTIL RecRef.NEXT = 0;
        Window.CLOSE;
      END;
      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE FieldMustBeSearched@1100528401(Field@1100528400 : Record 2000000041;SearchFieldType@1100528401 : 'Text,Code,Both') : Boolean;
    BEGIN
      IF Field.Class <> Field.Class::Normal THEN
        EXIT(FALSE);

      IF Field.Type = Field.Type::Text THEN
        EXIT((SearchFieldType = SearchFieldType::Text) OR (SearchFieldType = SearchFieldType::Both));

      IF Field.Type = Field.Type::Code THEN
        EXIT((SearchFieldType = SearchFieldType::Code) OR (SearchFieldType = SearchFieldType::Both));
    END;

    LOCAL PROCEDURE SearchInvalidCharactersOfField@1100528404(RecRef@1100528400 : RecordRef;FldRef@1100528401 : FieldRef);
    VAR
      I@1100528402 : Integer;
      Value@1100528403 : Text[1024];
    BEGIN
      Value := FORMAT(FldRef.VALUE);
      IF STRLEN(Value) > 0 THEN
        FOR I := 1 TO STRLEN(Value) DO BEGIN
          IF NOT CharIsValid(Value[I]) THEN
            LogInvalidCharacter(Value[I], RecRef, FldRef);
        END;
    END;

    PROCEDURE CharIsValid@1100528403(Character@1100528400 : Char) : Boolean;
    BEGIN
      CASE Character OF
        9:
          EXIT(TRUE);
        10:
          EXIT(TRUE);
        13:
          EXIT(TRUE);
        ELSE
          IF Character >= 32 THEN
            EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE LogInvalidCharacter@1100528405(Character@1100528400 : Char;RecRef@1100528401 : RecordRef;FldRef@1100528402 : FieldRef);
    VAR
      InvalidXMLCharacter@1100528403 : Record 11071899;
      TableID@1100528404 : Integer;
      FieldNo@1100528405 : Integer;
      RecID@1100528406 : RecordID;
      ASCII@1100528407 : Integer;
    BEGIN
      TableID := RecRef.NUMBER;
      FieldNo := FldRef.NUMBER;
      RecID := RecRef.RECORDID;
      ASCII := Character;

      IF InvalidXMLCharacter.GET(TableID, FieldNo, RecID, ASCII) THEN BEGIN
        InvalidXMLCharacter.Value := FORMAT(FldRef.VALUE);
        InvalidXMLCharacter."Primary Key Field" := FieldIsPrimaryKeyField(RecRef, FldRef);
        InvalidXMLCharacter.Processed := FALSE;
        InvalidXMLCharacter.MODIFY;
      END ELSE BEGIN
        InvalidXMLCharacter."Table ID" := TableID;
        InvalidXMLCharacter."Field No." := FieldNo;
        InvalidXMLCharacter."Record ID" := RecID;
        InvalidXMLCharacter.ASCII := ASCII;
        InvalidXMLCharacter.Value := FORMAT(FldRef.VALUE);
        InvalidXMLCharacter."Primary Key Field" := FieldIsPrimaryKeyField(RecRef, FldRef);
        InvalidXMLCharacter.INSERT;
      END;
    END;

    PROCEDURE RemoveInvalidCharacters@1100528400();
    VAR
      RecRef@1100528400 : RecordRef;
      FldRef@1100528401 : FieldRef;
      Value@1100528402 : Text[1024];
      InvalidChar@1100528403 : Char;
    BEGIN
      IF FINDSET THEN
        REPEAT
          CheckIfTableExists("Table ID");
          RecRef.OPEN("Table ID");
          InvalidChar := ASCII;
          IF RecRef.GET("Record ID") THEN BEGIN
            FldRef := RecRef.FIELD("Field No.");
            IF NOT FieldIsPrimaryKeyField(RecRef, FldRef) AND //Too dangerous to change primary key fields.
               AllowedToChangeTableData("Table ID")
            THEN BEGIN
              Value := FORMAT(FldRef.VALUE);
              Value := DELCHR(Value, '=', FORMAT(InvalidChar));
              FldRef.VALUE(Value);
              RecRef.MODIFY;
              Processed := TRUE;
            END;
          END ELSE
            Processed := TRUE;
          MODIFY;
          RecRef.CLOSE;
        UNTIL NEXT = 0;
    END;

    LOCAL PROCEDURE FieldIsPrimaryKeyField@1100528408(RecRef@1100528400 : RecordRef;FldRef@1100528401 : FieldRef) : Boolean;
    VAR
      KeyRef@1100528402 : KeyRef;
      FldRef2@1100528404 : FieldRef;
      I@1100528403 : Integer;
    BEGIN
      KeyRef := RecRef.KEYINDEX(1);
      FOR I := 1 TO KeyRef.FIELDCOUNT DO BEGIN
        FldRef2 := KeyRef.FIELDINDEX(I);
        IF FldRef.NUMBER = FldRef2.NUMBER THEN
          EXIT(TRUE);
      END;
    END;

    PROCEDURE GetRecordIDTxt@1100528406() : Text[1024];
    BEGIN
      EXIT(STRSUBSTNO('%1', "Record ID"));
    END;

    LOCAL PROCEDURE AllowedToChangeTableData@1100528407(TableID@1100528400 : Integer) : Boolean;
    VAR
      Object@1100528401 : Record 2000000001;
      TableIDFilterTxt@1100528402 : Text[1024];
    BEGIN
      TableIDFilterTxt :=
        '..49999' +
        '|11012000..11012999' +
        '|11020200..11020699' +
        '|11071685..11072684' +
        '|11124752..11132751' +
        '|11229162..11230161';

      Object.SETRANGE(Type, Object.Type::Table);
      Object.SETFILTER(ID, STRSUBSTNO('(%1)&%2', TableIDFilterTxt, TableID));
      EXIT(NOT Object.ISEMPTY);
    END;

    PROCEDURE CheckIfTableExists@1100528419(TableID@1100528400 : Integer);
    VAR
      Object@1100528401 : Record 2000000001;
    BEGIN
      Object.SETRANGE(Type, Object.Type::Table);
      Object.SETRANGE(ID, TableID);
      Object.FINDFIRST;
    END;

    BEGIN
    END.
  }
}

