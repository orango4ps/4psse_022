OBJECT Table 11012559 Exit Order
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               PlantSetup.GET;
               IF "No." = '' THEN BEGIN
                 PlantSetup.TESTFIELD("Exit-Order Nos.");
                 NoSeriesMgt.InitSeries(PlantSetup."Exit-Order Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               "Exit-date" := WORKDATE;
               Posted := FALSE;
               "Created by" := USERID;
               "Created on" := CURRENTDATETIME;
               IF "Block Code" = '' THEN
                 "Block Code" := PlantSetup."Default Block Code Exit Order";

               //**4PS Generated Code. Do Not Change.sn05
               DPA_OnInsert;
               //**4PS Generated Code.en05
             END;

    OnModify=BEGIN
               TESTFIELD(Posted,FALSE);

               "Changed by" := USERID;
               "Changed on" := CURRENTDATETIME;
             END;

    OnDelete=VAR
               lvExitBulkPlantRec@1100485000 : Record 11012592;
               lvRentalRemovalLineRec@1100485001 : Record 11012789;
               lvSalesPlantOrderRelRec@1100485002 : Record 11012787;
               OrderCont@1100409000 : Record 11012536;
             BEGIN
               IF NOT DeleteAllowed THEN
                 ERROR(Text000,TABLECAPTION,"No.");

               OrderLineRec.RESET;
               OrderLineRec.SETRANGE("Exit-order No.","No.");
               //OrderLineRec.DELETEALL;  //DP00183.o
               //DP00183.sn
               IF OrderLineRec.FINDSET(TRUE,FALSE) THEN BEGIN
                 REPEAT
                   OrderLineRec.DeleteLinkWithPlantOrderLine();
                   OrderLineRec.DeleteDocumentLinks();
                   OrderLineRec.DeleteCommentLines();
                   OrderLineRec.DELETE;
                 UNTIL OrderLineRec.NEXT = 0;
               END;
               DeleteDocumentLinks();
               DeleteCommentLines();
               //DP00183.en

               OrderCostLineRec.RESET;
               OrderCostLineRec.SETRANGE("Exit-order No.","No.");
               OrderCostLineRec.DELETEALL;

               lvExitBulkPlantRec.RESET;
               lvExitBulkPlantRec.SETRANGE("Exit-order No.","No.");
               lvExitBulkPlantRec.DELETEALL;

               //*C020580
               OrderCont.SETRANGE(Type, OrderCont.Type::ExitOrder);
               OrderCont.SETRANGE("Order No.", "No.");
               OrderCont.DELETEALL;

               lvSalesPlantOrderRelRec.SETCURRENTKEY(Level,"Plant Document No.");
               lvSalesPlantOrderRelRec.SETRANGE(Level, lvSalesPlantOrderRelRec.Level::ExitOrder);
               lvSalesPlantOrderRelRec.SETRANGE("Plant Document No.", "No.");
               IF lvSalesPlantOrderRelRec.FINDFIRST THEN BEGIN
                 IF (NOT Posted) AND (Type = Type::Sales) THEN BEGIN
                   lvRentalRemovalLineRec.RESET;
                   lvRentalRemovalLineRec.CHANGECOMPANY(lvSalesPlantOrderRelRec."Sales Company Name");
                   lvRentalRemovalLineRec.SETRANGE("Removal Order No.", "No.");
                   lvRentalRemovalLineRec.SETRANGE("Removal Order Type", lvRentalRemovalLineRec."Removal Order Type"::"Exit-order");
                   IF lvRentalRemovalLineRec.FINDSET(TRUE,FALSE) THEN
                     REPEAT
                       lvRentalRemovalLineRec.Status := lvRentalRemovalLineRec.Status::Open;
                       lvRentalRemovalLineRec."Removal Order No." := '';
                       lvRentalRemovalLineRec.MODIFY;
                     UNTIL lvRentalRemovalLineRec.NEXT = 0;
                 END;
                 lvSalesPlantOrderRelRec.DELETEALL;
               END;
             END;

    OnRename=VAR
               OrderLine@1100529000 : Record 11012560;
               OrderLine2@1100529001 : Record 11012560;
             BEGIN
               //DP00183.sn
               MoveDocumentLinks(xRec, Rec, FALSE);
               OrderLine.SETRANGE("Exit-order No.", xRec."No.");
               IF OrderLine.FINDSET THEN BEGIN
                 REPEAT
                   OrderLine2 := OrderLine;
                   OrderLine2."Exit-order No." := "No.";
                   OrderLine.ChangeLinkWithPlantOrderLine(OrderLine, OrderLine2);
                   OrderLine.MoveDocumentLinks(OrderLine, OrderLine2, FALSE);
                 UNTIL OrderLine.NEXT = 0;
               END;
               //DP00183.en
             END;

    CaptionML=[ENU=Exit Order;
               NOR=Sluttordre;
               SVE=Slutorder];
    PasteIsValid=No;
    LookupPageID=Page11012567;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  PlantSetup.GET;
                                                                  NoSeriesMgt.TestManual(PlantSetup."Exit-Order Nos.");
                                                                  "Ship-to Post Code" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 20  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF ((Type = Type::External) AND (xRec.Type <> Type::External)) OR
                                                                   ((Type <> Type::External) AND (xRec.Type = Type::External))
                                                                THEN
                                                                  VALIDATE("Ship-to Code",'');
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[ENU=Sales,Missing,Scrap,External;
                                                                    NOR=Salg,Mangler,Utrangeres,Eksternt;
                                                                    SVE=F”rs„ljning,Saknas,Skrot,Externt];
                                                   OptionString=Sales,Missing,Scrap,External }
    { 30  ;   ;Location            ;Code20        ;TableRelation="Plant Location";
                                                   OnValidate=BEGIN
                                                                IF Location <> '' THEN BEGIN
                                                                  CheckBlock(FALSE);
                                                                  "Customer No." := PlantLocRec."Customer No.";
                                                                  IF PlantLocRec."Customer No." = '' THEN BEGIN
                                                                    Name := PlantLocRec.Description;
                                                                    "Name 2" := PlantLocRec."Description 2";
                                                                    Address := PlantLocRec.Address;
                                                                    "Address 2" := PlantLocRec."Address 2";
                                                                    City := PlantLocRec.City;
                                                                    "Post Code" := PlantLocRec."Post Code";
                                                                    County := PlantLocRec.County;
                                                                    "Country/Region Code" := PlantLocRec."Country/Region Code";
                                                                    Contact := PlantLocRec.Contact;
                                                                  END;
                                                                END;
                                                                VALIDATE("Customer No.");
                                                              END;

                                                   CaptionML=[ENU=Location;
                                                              NOR=Plassering;
                                                              SVE=Lagerst„lle] }
    { 40  ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                IF "Customer No." <> '' THEN BEGIN
                                                                  CheckBlock(FALSE);
                                                                  Name := Customer.Name;
                                                                  "Name 2" := Customer."Name 2";
                                                                  Address := Customer.Address;
                                                                  "Address 2" := Customer."Address 2";
                                                                  City := Customer.City;
                                                                  "Post Code" := Customer."Post Code";
                                                                  County := Customer.County;
                                                                  "Country/Region Code" := Customer."Country/Region Code";
                                                                  Contact := Customer.Contact;
                                                                END ELSE
                                                                  Customer.INIT;

                                                                IF Customer."Bill-to Customer No." <> '' THEN
                                                                  VALIDATE("Bill-to Customer No.",Customer."Bill-to Customer No.")
                                                                ELSE
                                                                  VALIDATE("Bill-to Customer No.","Customer No.");

                                                                VALIDATE("Ship-to Code",'');
                                                              END;

                                                   CaptionML=[ENU=Customer No.;
                                                              NOR=Kundenr.;
                                                              SVE=Kundnr] }
    { 50  ;   ;Name                ;Text100       ;CaptionML=[ENU=Name;
                                                              NOR=Navn;
                                                              SVE=Namn] }
    { 60  ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              NOR=Navn 2;
                                                              SVE=Namn 2] }
    { 70  ;   ;Address             ;Text100       ;OnValidate=VAR
                                                                lDummy@1210190000 : Text[30];
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Address;
                                                              NOR=Adresse;
                                                              SVE=Adress] }
    { 80  ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              NOR=Adresse 2;
                                                              SVE=Adress 2] }
    { 90  ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              NOR=Poststed;
                                                              SVE=Ort] }
    { 100 ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              NOR=Postnr;
                                                              SVE=Postnr] }
    { 110 ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              NOR=Delstat;
                                                              SVE=Delstat] }
    { 120 ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              NOR=Lands-/regionkode;
                                                              SVE=Lands-/regionkod] }
    { 125 ;   ;Department Code     ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1, "Department Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Avdelingskode;
                                                              SVE=Mottagande avdelningskod];
                                                   CaptionClass='1,1,1' }
    { 130 ;   ;Contact             ;Text100       ;CaptionML=[ENU=Contact;
                                                              NOR=Kontaktperson;
                                                              SVE=Kontaktperson] }
    { 140 ;   ;Ship-to Code        ;Code10        ;TableRelation=IF (Type=FILTER(<>External)) "Ship-to Address".Code WHERE (Customer No.=FIELD(Customer No.),
                                                                                                                            Shipping Address=CONST(Yes))
                                                                                                                            ELSE IF (Type=CONST(External)) "Order Address".Code WHERE (Vendor No.=FIELD(Vendor No.));
                                                   OnValidate=BEGIN
                                                                IF (Type = Type::External) THEN BEGIN
                                                                  IF "Ship-to Code" <> '' THEN BEGIN
                                                                    VendAddrRec.GET("Vendor No.","Ship-to Code");
                                                                    "Ship-to Name" := VendAddrRec.Name;
                                                                    "Ship-to Name 2" := VendAddrRec."Name 2";
                                                                    "Ship-to Address" := VendAddrRec.Address;
                                                                    "Ship-to Address 2" := VendAddrRec."Address 2";
                                                                    "Ship-to City" := VendAddrRec.City;
                                                                    "Ship-to Post Code" := VendAddrRec."Post Code";
                                                                    "Ship-to County" := VendAddrRec.County;
                                                                    "Ship-to Country/Region Code" := VendAddrRec."Country/Region Code";
                                                                    "Ship-to Contact" := VendAddrRec.Contact;
                                                                  END ELSE BEGIN
                                                                    IF "Vendor No." <> '' THEN BEGIN
                                                                      VendRec.GET("Vendor No.");
                                                                      "Ship-to Name" := VendRec.Name;
                                                                      "Ship-to Name 2" := VendRec."Name 2";
                                                                      "Ship-to Address" := VendRec.Address;
                                                                      "Ship-to Address 2" := VendRec."Address 2";
                                                                      "Ship-to City" := VendRec.City;
                                                                      "Ship-to Post Code" := VendRec."Post Code";
                                                                      "Ship-to County" := VendRec.County;
                                                                      "Ship-to Country/Region Code" := VendRec."Country/Region Code";
                                                                      "Ship-to Contact" := VendRec.Contact;
                                                                    END;
                                                                  END;
                                                                END ELSE BEGIN
                                                                  IF "Ship-to Code" <> '' THEN BEGIN
                                                                    ShipToAddr.GET("Customer No.","Ship-to Code");
                                                                    "Ship-to Name" := ShipToAddr.Name;
                                                                    "Ship-to Name 2" := ShipToAddr."Name 2";
                                                                    "Ship-to Address" := ShipToAddr.Address;
                                                                    "Ship-to Address 2" := ShipToAddr."Address 2";
                                                                    "Ship-to City" := ShipToAddr.City;
                                                                    "Ship-to Post Code" := ShipToAddr."Post Code";
                                                                    "Ship-to County" := ShipToAddr.County;
                                                                    "Ship-to Country/Region Code" := ShipToAddr."Country/Region Code";
                                                                    "Ship-to Contact" := ShipToAddr.Contact;
                                                                  END ELSE BEGIN
                                                                    IF Location <> '' THEN BEGIN
                                                                      PlantLocRec.GET(Location);
                                                                      "Ship-to Name" := PlantLocRec.Description;
                                                                      "Ship-to Name 2" := PlantLocRec."Description 2";
                                                                      "Ship-to Address" := PlantLocRec.Address;
                                                                      "Ship-to Address 2" := PlantLocRec."Address 2";
                                                                      "Ship-to City" := PlantLocRec.City;
                                                                      "Ship-to Post Code" := PlantLocRec."Post Code";
                                                                      "Ship-to County" := PlantLocRec.County;
                                                                      "Ship-to Country/Region Code" := PlantLocRec."Country/Region Code";
                                                                      "Ship-to Contact" := PlantLocRec.Contact;
                                                                    END ELSE BEGIN
                                                                      IF "Customer No." <> '' THEN BEGIN
                                                                        Customer.GET("Customer No.");
                                                                        "Ship-to Name" := Customer.Name;
                                                                        "Ship-to Name 2" := Customer."Name 2";
                                                                        "Ship-to Address" := Customer.Address;
                                                                        "Ship-to Address 2" := Customer."Address 2";
                                                                        "Ship-to City" := Customer.City;
                                                                        "Ship-to Post Code" := Customer."Post Code";
                                                                        "Ship-to County" := Customer.County;
                                                                        "Ship-to Country/Region Code" := Customer."Country/Region Code";
                                                                        "Ship-to Contact" := Customer.Contact;
                                                                      END;
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Ship-to Code;
                                                              NOR=Lever til-kode;
                                                              SVE=Leveransadresskod] }
    { 150 ;   ;Ship-to Name        ;Text100       ;CaptionML=[ENU=Ship-to Name;
                                                              NOR=Lever til-navn;
                                                              SVE=Leveransnamn] }
    { 160 ;   ;Ship-to Name 2      ;Text50        ;CaptionML=[ENU=Ship-to Name 2;
                                                              NOR=Lever til-navn 2;
                                                              SVE=Leveransnamn 2] }
    { 170 ;   ;Ship-to Address     ;Text100       ;OnValidate=VAR
                                                                lDummy@1210190000 : Text[30];
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Ship-to Address;
                                                              NOR=Lever til-adresse;
                                                              SVE=Leveransadress] }
    { 180 ;   ;Ship-to Address 2   ;Text50        ;CaptionML=[ENU=Ship-to Address 2;
                                                              NOR=Lever til-adresse 2;
                                                              SVE=Leveransadress 2] }
    { 190 ;   ;Ship-to City        ;Text30        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(
                                                                  "Ship-to City",
                                                                  "Ship-to Post Code",
                                                                  "Ship-to County",
                                                                  "Ship-to Country/Region Code",
                                                                  (CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Ship-to City;
                                                              NOR=Lever til-by;
                                                              SVE=Leveransort] }
    { 200 ;   ;Ship-to Post Code   ;Code20        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(
                                                                  "Ship-to City",
                                                                  "Ship-to Post Code",
                                                                  "Ship-to County",
                                                                  "Ship-to Country/Region Code",
                                                                  (CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Ship-to Post Code;
                                                              NOR=Lever til-postnr.;
                                                              SVE=Leveranspostnrkod] }
    { 210 ;   ;Ship-to County      ;Text30        ;CaptionML=[ENU=Ship-to County;
                                                              NOR=Lever til-fylke/delstat;
                                                              SVE=Leveransdelstat] }
    { 220 ;   ;Ship-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Ship-to Country/Region Code;
                                                              NOR=Lands-/regionkode for Lever til;
                                                              SVE=Kod f”r leveransland/-region] }
    { 230 ;   ;Ship-to Contact     ;Text100       ;CaptionML=[ENU=Ship-to Contact;
                                                              NOR=Leveransekontaktperson;
                                                              SVE=Leveranskontaktperson] }
    { 240 ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                IF "Bill-to Customer No." <> '' THEN BEGIN
                                                                  Customer.GET("Bill-to Customer No.");
                                                                  Customer.CheckBlockedCustOnDocs(Customer,1,FALSE,FALSE);
                                                                  Customer.TESTFIELD("Customer Posting Group");
                                                                  "Bill-to Name" := Customer.Name;
                                                                  "Bill-to Name 2" := Customer."Name 2";
                                                                  "Bill-to Address" := Customer.Address;
                                                                  "Bill-to Address 2" := Customer."Address 2";
                                                                  "Bill-to City" := Customer.City;
                                                                  "Bill-to Post Code" := Customer."Post Code";
                                                                  "Bill-to County" := Customer.County;
                                                                  "Bill-to Country/Region Code" := Customer."Country/Region Code";
                                                                  "Bill-to Contact" := Customer.Contact;
                                                                END ELSE
                                                                  IF "Customer No." <> '' THEN BEGIN
                                                                    Customer.GET("Customer No.");
                                                                    "Bill-to Name" := Customer.Name;
                                                                    "Bill-to Name 2" := Customer."Name 2";
                                                                    "Bill-to Address" := Customer.Address;
                                                                    "Bill-to Address 2" := Customer."Address 2";
                                                                    "Bill-to City" := Customer.City;
                                                                    "Bill-to Post Code" := Customer."Post Code";
                                                                    "Bill-to County" := Customer.County;
                                                                    "Bill-to Country/Region Code" := Customer."Country/Region Code";
                                                                    "Bill-to Contact" := Customer.Contact;
                                                                  END ELSE
                                                                    IF Location <> '' THEN BEGIN
                                                                      PlantLocRec.GET(Location);
                                                                      "Bill-to Name" := PlantLocRec.Description;
                                                                      "Bill-to Name 2" := PlantLocRec."Description 2";
                                                                      "Bill-to Address" := PlantLocRec.Address;
                                                                      "Bill-to Address 2" := PlantLocRec."Address 2";
                                                                      "Bill-to City" := PlantLocRec.City;
                                                                      "Bill-to Post Code" := PlantLocRec."Post Code";
                                                                      "Bill-to County" := PlantLocRec.County;
                                                                      "Bill-to Country/Region Code" := PlantLocRec."Country/Region Code";
                                                                      "Bill-to Contact" := PlantLocRec.Contact;
                                                                    END;
                                                              END;

                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              NOR=Faktura til-kundenr.;
                                                              SVE=Faktureringskundnr];
                                                   NotBlank=Yes }
    { 250 ;   ;Bill-to Name        ;Text100       ;CaptionML=[ENU=Bill-to Name;
                                                              NOR=Faktura til-navn;
                                                              SVE=Faktureringsnamn] }
    { 260 ;   ;Bill-to Name 2      ;Text50        ;CaptionML=[ENU=Bill-to Name 2;
                                                              NOR=Faktura til-navn 2;
                                                              SVE=Faktureringsnamn 2] }
    { 270 ;   ;Bill-to Address     ;Text100       ;OnValidate=VAR
                                                                lDummy@1210190000 : Text[30];
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Bill-to Address;
                                                              NOR=Faktureringsadresse;
                                                              SVE=Faktureringsadress] }
    { 280 ;   ;Bill-to Address 2   ;Text50        ;CaptionML=[ENU=Bill-to Address 2;
                                                              NOR=Faktura til-adresse 2;
                                                              SVE=Faktureringsadress 2] }
    { 290 ;   ;Bill-to City        ;Text30        ;TableRelation=IF (Bill-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Bill-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Bill-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(
                                                                  "Bill-to City",
                                                                  "Bill-to Post Code",
                                                                  "Bill-to County",
                                                                  "Bill-to Country/Region Code",
                                                                  (CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Bill-to City;
                                                              NOR=Faktureringsby;
                                                              SVE=Faktureras ort] }
    { 300 ;   ;Bill-to Contact     ;Text100       ;CaptionML=[ENU=Bill-to Contact;
                                                              NOR=Faktura til-kontakt;
                                                              SVE=Faktureringskontakt] }
    { 310 ;   ;Bill-to Post Code   ;Code20        ;TableRelation=IF (Bill-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Bill-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Bill-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(
                                                                  "Bill-to City",
                                                                  "Bill-to Post Code",
                                                                  "Bill-to County",
                                                                  "Bill-to Country/Region Code",
                                                                  (CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Bill-to Post Code;
                                                              NOR=Faktura til-postnr.;
                                                              SVE=Faktureras postnr] }
    { 320 ;   ;Bill-to County      ;Text30        ;CaptionML=[ENU=Bill-to County;
                                                              NOR=Faktureres Fylke;
                                                              SVE=Faktureras delstat] }
    { 330 ;   ;Bill-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Bill-to Country/Region Code;
                                                              NOR=Lands-/regionkode for Faktura til;
                                                              SVE=Faktureringsland/-region] }
    { 340 ;   ;Exit-date           ;Date          ;OnValidate=BEGIN
                                                                CheckOrderDateAllowed();

                                                                MODIFY;

                                                                OrderLineRec.RESET;
                                                                OrderLineRec.SETRANGE("Exit-order No.","No.");
                                                                OrderLineRec.SETRANGE("Exit-date",xRec."Exit-date");
                                                                OrderLineRec.MODIFYALL("Exit-date","Exit-date");

                                                                OrderCostLineRec.RESET;
                                                                OrderCostLineRec.SETRANGE("Exit-order No.","No.");
                                                                OrderCostLineRec.SETRANGE("Exit-date",xRec."Exit-date");
                                                                OrderCostLineRec.MODIFYALL("Exit-date","Exit-date");
                                                              END;

                                                   CaptionML=[ENU=Exit-date;
                                                              NOR=Sluttdato;
                                                              SVE=Avsluta-datum] }
    { 350 ;   ;Posted              ;Boolean       ;CaptionML=[ENU=Posted;
                                                              NOR=Bokf›rt;
                                                              SVE=Bokf”rd];
                                                   Editable=No }
    { 355 ;   ;Posted by           ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Posted;
                                                              NOR=Bokf›rt;
                                                              SVE=Bokf”rd];
                                                   Editable=No }
    { 356 ;   ;Posted on           ;DateTime      ;CaptionML=[ENU=Posted on;
                                                              NOR=Bokf›rt den;
                                                              SVE=Bokf”rt den];
                                                   Editable=No }
    { 360 ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              NOR=Bokf›ringsdato;
                                                              SVE=Bokf”ringsdatum];
                                                   Editable=No }
    { 370 ;   ;No. Printed         ;Integer       ;CaptionML=[ENU=No. Printed;
                                                              NOR=Antall skrevet ut;
                                                              SVE=Utskriven];
                                                   Editable=No }
    { 380 ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                IF Type = Type::External THEN
                                                                  TESTFIELD("Vendor No.");
                                                                VALIDATE("Ship-to Code",'');
                                                              END;

                                                   CaptionML=[ENU=Vendor No.;
                                                              NOR=Leverand›rnr.;
                                                              SVE=Leverant”rsnr] }
    { 390 ;   ;Created by          ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Created by;
                                                              NOR=Opprettet av;
                                                              SVE=Skapad av];
                                                   Editable=No }
    { 391 ;   ;Created on          ;DateTime      ;CaptionML=[ENU=Created on;
                                                              NOR=Opprettet den;
                                                              SVE=Skapades];
                                                   Editable=No }
    { 395 ;   ;Plant Quote No.     ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Quote".No. WHERE (Order Type=CONST(ExitOrder),
                                                                                               Order No.=FIELD(No.)));
                                                   CaptionML=[ENU=Plant Quote No.;
                                                              SVE=Maskinoffertnr];
                                                   Editable=No }
    { 400 ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              NOR=Nr-serie;
                                                              SVE=Nr-serie];
                                                   Editable=No }
    { 410 ;   ;Invoiced            ;Boolean       ;CaptionML=[ENU=Invoiced;
                                                              NOR=Fakturert;
                                                              SVE=Fakturerat] }
    { 420 ;   ;Invoice No.         ;Code20        ;TableRelation=IF (Invoice Status=CONST(Proposal)) "Sales Header".No. WHERE (Document Type=CONST(Invoice Proposal))
                                                                 ELSE IF (Invoice Status=CONST(Temporary)) "Sales Header".No. WHERE (Document Type=CONST(Invoice))
                                                                 ELSE IF (Invoice Status=CONST(Posted)) "Sales Invoice Header".No.;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Invoice No.;
                                                              NOR=Fakturanr.;
                                                              SVE=Fakturanummer];
                                                   Editable=No }
    { 430 ;   ;Invoice Status      ;Option        ;CaptionML=[ENU=Invoice Status;
                                                              NOR=Fakturastatus;
                                                              SVE=Invoice Status];
                                                   OptionCaptionML=[ENU=,Proposal,Temporary,Posted;
                                                                    NOR=,Forslag,Midlertidig,Bokf›rt;
                                                                    SVE=,F”rslag,Tillf„lligt,Bokf”rt];
                                                   OptionString=,Proposal,Temporary,Posted;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 460 ;   ;Order Plant Amount  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Exit Order Line".Amount WHERE (Exit-order No.=FIELD(No.)));
                                                   CaptionML=[ENU=Plant Amount;
                                                              NOR=Maskinbel›p;
                                                              SVE=Maskin belopp];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 470 ;   ;Order Cost Amount   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Exit Order Cost Line".Amount WHERE (Exit-order No.=FIELD(No.)));
                                                   CaptionML=[ENU=Cost Amount;
                                                              NOR=Kostbel›p;
                                                              SVE=Kostnadsbelopp];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 480 ;   ;Changed by          ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Changed by;
                                                              NOR=Endret av;
                                                              SVE=Žndrat av];
                                                   Editable=No }
    { 490 ;   ;Changed on          ;DateTime      ;CaptionML=[ENU=Changed on;
                                                              NOR=Endret den;
                                                              SVE=Žndrat den];
                                                   Editable=No }
    { 500 ;   ;Reference           ;Text50        ;CaptionML=[ENU=Reference;
                                                              SVE=Referens] }
    { 510 ;   ;Requested by (Contact);Text50      ;TableRelation=Contact;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Name Requested by (Contact)", "Phone No. Requested by (Cont.)", "Mob. Phone No. Req. by (Cont.)", "E-Mail Requested by (Contact)");
                                                              END;

                                                   CaptionML=ENU=Requested by (Contact) }
    { 520 ;   ;Name Requested by (Contact);Text100;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD("Requested by (Contact)")));
                                                   CaptionML=ENU=Name Requested by (Contact);
                                                   Editable=No }
    { 530 ;   ;Phone No. Requested by (Cont.);Text30;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."Phone No." WHERE (No.=FIELD("Requested by (Contact)")));
                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Phone No. Requested by (Contact);
                                                   Editable=No }
    { 540 ;   ;Mob. Phone No. Req. by (Cont.);Text30;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."Mobile Phone No." WHERE (No.=FIELD("Requested by (Contact)")));
                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Mobile Phone No. Requested by (Contact);
                                                   Editable=No }
    { 550 ;   ;E-Mail Requested by (Contact);Text80;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.E-Mail WHERE (No.=FIELD("Requested by (Contact)")));
                                                   CaptionML=ENU=Email Requested by (Contact);
                                                   Editable=No }
    { 560 ;   ;Block Code          ;Code10        ;TableRelation="Plant Block Code";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Block Code;
                                                              SVE=Sp„rrkod] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Invoice Status,Invoice No.               }
    {    ;Posted,Location,Invoiced,Exit-date       }
    {    ;Location                                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@11012009 : TextConst 'ENU=%1 %2 is not deleted.;NOR=%1 %2 er ikke fjernet.;SVE=%1 %2 „r inte borttaget.';
      Text001@11012010 : TextConst 'ENU=%1 is not invoiced yet. Do you still want to delete the %1?;NOR=%1 er enda ikke fakturert. Vil du fortsatt fjerne %1?;SVE=%1 „r „nnu inte fakturerad. Vill du fortfarande ta bort %1?';
      Text002@11012011 : TextConst 'ENU=%1 is not invoiced completely. Do you still want to delete the %1?;NOR=%1 er enda ikke fullstendig fakturert. Vil du fortsatt fjerne %1?;SVE=%1 „r „nnu inte helt fakturerad. Vill du fortfarande ta bort %1?';
      PlantSetup@11012000 : Record 11012550;
      PlantLocRec@11012001 : Record 11012554;
      ExitOrderRec@11012002 : Record 11012559;
      PostCode@11012003 : Record 225;
      ShipToAddr@11012004 : Record 222;
      Customer@11012005 : Record 18;
      VendRec@1100485000 : Record 23;
      VendAddrRec@1100485001 : Record 224;
      OrderLineRec@11012006 : Record 11012560;
      OrderCostLineRec@11012007 : Record 11012561;
      NoSeriesMgt@11012008 : Codeunit 396;
      DimMgt@1100525008 : Codeunit 408;
      DPA_Management@1100000999 : Codeunit 11012783;
      SkipModify@1100528400 : Boolean;
      Text003@1100529400 : TextConst 'ENU=%1 is not defined for %2 %3.';

    PROCEDURE AssistEdit@2(OldExitOrderRec@11012000 : Record 11012559) : Boolean;
    BEGIN
      WITH ExitOrderRec DO BEGIN
        ExitOrderRec := Rec;
        PlantSetup.GET;
        PlantSetup.TESTFIELD("Exit-Order Nos.");
        IF NoSeriesMgt.SelectSeries(PlantSetup."Exit-Order Nos.",OldExitOrderRec."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := ExitOrderRec;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE CheckBlock@1(Transaction@1210190000 : Boolean);
    BEGIN
      IF Location <> '' THEN BEGIN
        PlantLocRec.GET(Location);
        PlantLocRec.CheckBlock(101,FALSE,Transaction);  //C029731.c (1->101)
      END;

      IF "Customer No." <> '' THEN BEGIN
        Customer.GET("Customer No.");
        Customer.CheckBlockedCustOnDocs(Customer,1,FALSE,Transaction);
      END;
    END;

    PROCEDURE DeleteAllowed@5() : Boolean;
    BEGIN
      IF NOT Posted THEN
        EXIT(TRUE);

      IF Location <> '' THEN BEGIN
        IF NOT PlantLocRec.GET(Location) THEN
          EXIT(TRUE);

        IF PlantLocRec.Depot THEN
          EXIT(TRUE);
      END;

      IF NOT Invoiced THEN BEGIN
        IF NOT CONFIRM(STRSUBSTNO(
          Text001,
          TABLECAPTION))
        THEN
          EXIT(FALSE);
      END ELSE
        IF "Invoice Status" IN ["Invoice Status"::Proposal,"Invoice Status"::"Temporary"] THEN
          IF NOT CONFIRM(STRSUBSTNO(
            Text002,TABLECAPTION))
          THEN
            EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE CheckOrderDateAllowed@1100525000();
    VAR
      lvLowerLimitDate@1100525000 : Date;
      lvUpperLimitDate@1100525001 : Date;
      lvText001@1100525002 : TextConst 'ENU=must be within the range %1..%2;NOR=m† v‘re innenfor intervallet %1..%2;SVE=m†ste vara inom intervallet %1..%2';
    BEGIN
      IF "Exit-date" = 0D THEN
        EXIT;

      PlantSetup.GET;
      lvLowerLimitDate := PlantSetup.GetOrderDateLowerLimit(PlantSetup);
      lvUpperLimitDate := PlantSetup.GetOrderDateUpperLimit(PlantSetup);
      IF ("Exit-date" < lvLowerLimitDate) OR ("Exit-date" > lvUpperLimitDate) THEN
        FIELDERROR("Exit-date", STRSUBSTNO(lvText001, lvLowerLimitDate, lvUpperLimitDate));
    END;

    LOCAL PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      IF NOT SkipModify THEN
        MODIFY;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_SetDefaultDpmtFromNoSeries@1100000995(xRecRef@1100525002 : RecordRef);
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      xRecRef.SETTABLE(xRec);
      DPA_Management.SetDepartmentCodeNoSeries(
        TABLENAME,
        "Department Code",
        "No. Series",
        xRec."No. Series" );
    END;

    LOCAL PROCEDURE DPA_OnInsert@1100000991();
    VAR
      Dimension1Code@1100528400 : Code[20];
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      Dimension1Code :=
        DPA_Management.GetNoSeriesDepartmentCode(
          "No. Series",
          xRec."No. Series",
          DATABASE::"Exit Order");
      IF Dimension1Code <> '' THEN
        "Department Code" := Dimension1Code;

      IF "Department Code" <> '' THEN BEGIN
        SkipModify := TRUE;
        VALIDATE("Department Code");
        SkipModify := FALSE;
      END;
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11012559) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11012559');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Exit Order", "Department Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Department Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Department Code");
    END;

    PROCEDURE ShowDocuments@1100529006();
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentFilters@1100525001 : Codeunit 11012432;
    BEGIN
      //DP00183
      TESTFIELD("No.");
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Department Code", FALSE, TRUE);
    END;

    PROCEDURE HasDocumentLinks@1100525006() : Boolean;
    VAR
      DocumentLinkMgt@1100525000 : Codeunit 11012401;
      RecRef@1100525001 : RecordRef;
    BEGIN
      //DP00183
      RecRef.GETTABLE(Rec);
      EXIT(DocumentLinkMgt.EntityHasDocumentLinks(RecRef));
    END;

    PROCEDURE DeleteDocumentLinks@1100529004();
    VAR
      DocumentLinkMgt@1100525000 : Codeunit 11012401;
      RecRef@1100525001 : RecordRef;
    BEGIN
      //DP00183
      RecRef.GETTABLE(Rec);
      DocumentLinkMgt.DeleteDocumentLinksFromObject(RecRef);
    END;

    PROCEDURE MoveDocumentLinks@1100529005(SourceRec@1100529001 : Record 11012559;VAR TargetRec@1100529000 : Record 11012559;CopyMode@1100529003 : Boolean);
    VAR
      DocumentLinkMgt@1100525000 : Codeunit 11012401;
      SourceRecRef@1100525001 : RecordRef;
      TargetRecRef@1100529002 : RecordRef;
    BEGIN
      //DP00183
      SourceRecRef.GETTABLE(SourceRec);
      TargetRecRef.GETTABLE(TargetRec);
      IF NOT CopyMode THEN
        DocumentLinkMgt.ReplaceDocLink(SourceRecRef, TargetRecRef)
      ELSE
        DocumentLinkMgt.CopyDocLinks(SourceRecRef, TargetRecRef);
    END;

    PROCEDURE CommentSheet@1100529002(EditableMode@1100529002 : Boolean);
    VAR
      PlantCommentLine@1100529000 : Record 11072666;
    BEGIN
      //DP00183
      TESTFIELD("No.");
      PlantCommentLine.EditCommentLines(DATABASE::"Exit Order", "No.", '', 0, EditableMode);  //C005461.c
    END;

    PROCEDURE HasCommentLines@1100529001() : Boolean;
    VAR
      PlantCommentLine@1100529000 : Record 11072666;
    BEGIN
      //DP00183
      EXIT(PlantCommentLine.HasCommentLines(DATABASE::"Exit Order","No.", '', 0));  //C005461.c
    END;

    PROCEDURE DeleteCommentLines@1100529003();
    VAR
      PlantCommentLine@1100529000 : Record 11072666;
    BEGIN
      //DP00183
      PlantCommentLine.DeleteComments(DATABASE::"Exit Order", "No.", '', 0);  //C005461.c
    END;

    PROCEDURE PrintRecords@1100528400() : Boolean;
    VAR
      ReportSelections@1100528401 : Record 77;
      ExitOrder@1100528400 : Record 11012559;
    BEGIN
      ExitOrder.COPY(Rec);
      IF ExitOrder.ISEMPTY THEN
        EXIT(FALSE);

      ReportSelections.SETRANGE(Usage, 1558);
      ReportSelections.SETRANGE("Default Selection", TRUE);
      ReportSelections.FINDSET;

      REPEAT
        REPORT.RUNMODAL(ReportSelections."Report ID", FALSE, TRUE, ExitOrder);
      UNTIL ReportSelections.NEXT = 0;

      EXIT(TRUE);
    END;

    PROCEDURE SaveRecordsAsPDFFiles@1100528401(VAR TempEmailAttachment@1100528400 : TEMPORARY Record 11229294) : Boolean;
    VAR
      ReportSelections@1100528402 : Record 77;
      ExitOrder@1100528401 : Record 11012559;
      ExitOrder2@1100528405 : Record 11012559;
      DocumentMailing@1100528407 : Codeunit 260;
      I@1100528404 : Integer;
      LanguageCode@1100528500 : Code[10];
      Customer@1100528501 : Record 18;
      MailBodyNo@1100528300 : Integer;
    BEGIN
      ExitOrder.COPY(Rec);
      IF ExitOrder.ISEMPTY THEN
        EXIT(FALSE);

      ExitOrder.FINDSET;
      MailBodyNo := 33;

      ReportSelections.SETRANGE(Usage, 1558);
      ReportSelections.SETRANGE("Use for Email Attachment", TRUE);
      ReportSelections.SETRANGE("Default Selection", TRUE);

      REPEAT
        ReportSelections.FINDSET;
        I := 0;
        LanguageCode := '';
        REPEAT
          ExitOrder2 := ExitOrder;
          ExitOrder2.SETRECFILTER;
          ReportSelections.SaveAnyRecordReportAsPdf(
            ExitOrder2, MailBodyNo, ExitOrder2."Department Code",
            ReportSelections."Report ID", TRUE, FALSE, ExitOrder2.TABLECAPTION, ExitOrder2."No.", TempEmailAttachment);
          TempEmailAttachment."Attachment Name" := DocumentMailing.ComposePDFFileName(
            ExitOrder2.TABLECAPTION, ExitOrder2."No.", I);
          TempEmailAttachment.MODIFY;
          I := I + 1;
        UNTIL ReportSelections.NEXT = 0;

        IF Customer.GET(ExitOrder2."Customer No.") THEN
          LanguageCode := Customer."Language Code";

        ReportSelections.AddStandardAttachments(TempEmailAttachment, MailBodyNo, ExitOrder2."Department Code",
          LanguageCode);
      UNTIL ExitOrder.NEXT = 0;

      EXIT(TRUE);
    END;

    PROCEDURE EditWordDocuments@1100528702();
    VAR
      Customer@1100529400 : Record 18;
      Contact@1100528701 : Record 5050;
      DocumentTemplate@1100529001 : Record 11012401;
      DocumentMailing@1210190000 : Codeunit 11012278;
      DocumentLinkRIDs@1100525001 : ARRAY [5] OF RecordID;
    BEGIN
      //**4PS.sn BI036 KD 11-08-16
      TESTFIELD("No.");
      TESTFIELD("Customer No.");
      Customer.GET("Customer No.");
      Customer.CALCFIELDS("Contact No.");
      IF Customer."Contact No." = '' THEN
        ERROR(Text003,Contact.TABLECAPTION,Customer.TABLECAPTION,"Customer No.");
      Contact.GET(Customer."Contact No.");
      DocumentLinkRIDs[1] := RECORDID;
      DocumentMailing.EditDocuments(
        STRSUBSTNO('%1', DocumentTemplate.Type::"Exit Order"), DocumentLinkRIDs,
        "Department Code", Customer."Contact No.", '', FALSE, '');
      //**4PS.en BI036 KD 11-08-16
    END;

    BEGIN
    {
      4PS 11-08-16 UKR-C25590 KD: Disinvestment of plant (BI036) - Added trigger EditWordDocuments
    }
    END.
  }
}

