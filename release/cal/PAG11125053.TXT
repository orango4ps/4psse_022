OBJECT Page 11125053 Register External Document FB
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Externe Belege;
               ENU=External Documents;
               NLD=Externe documenten;
               NOR=Eksterne dokumenter;
               SVE=Externa dokument];
    PageType=CardPart;
    OnInit=VAR
             FileMgt@1100528700 : Codeunit 419;
           BEGIN
             DropZoneWindowsVisible := FileMgt.IsWindowsClient;
             DropZoneNotWindowsVisible := NOT FileMgt.IsWindowsClient;
           END;

    OnOpenPage=BEGIN
                 AddinValueManagement.AddLabel('RegDocsLabel', Text002);
                 DropZone := AddinValueManagement.GetInnerXml;
                 PageIsOpen := TRUE;
               END;

  }
  CONTROLS
  {
    { 1100528701;0;Container;
                ContainerType=ContentArea }

    { 1100528700;1;Field  ;
                Name=DropZoneWindows;
                CaptionML=[DEU=Externe Belege;
                           ENU=External Documents;
                           NLD=Externe documenten;
                           NOR=Eksterne dokumenter;
                           SVE=Externa dokument];
                SourceExpr=DropZone;
                Visible=DropZoneWindowsVisible;
                ControlAddIn=[Fps.Nav.Windows.Addin.DropZone;PublicKeyToken=024bd013665211e9];
                OnControlAddIn=BEGIN
                                 HandleControlEvent(Index, Data);
                                 CurrPage.UPDATE();
                               END;
                                }

    { 1100529900;1;Field  ;
                Name=DropZoneNotWindows;
                CaptionML=[DEU=Externe Belege;
                           ENU=External Documents;
                           NLD=Externe documenten;
                           NOR=Eksterne dokumenter;
                           SVE=Externa dokument];
                SourceExpr=DropZone;
                Visible=DropZoneNotWindowsVisible;
                ControlAddIn=[Fps.Nav.Addin.DropZone;PublicKeyToken=024bd013665211e9];
                OnControlAddIn=BEGIN
                                 HandleControlEvent(Index, Data);
                                 CurrPage.UPDATE();
                               END;
                                }

    { 1100409001;1;Field  ;
                CaptionML=[DEU=Belege;
                           ENU=Documents;
                           NLD=Documenten;
                           NOR=Dokumenter;
                           SVE=Dokument];
                SourceExpr=NumberOfDocuments;
                OnDrillDown=VAR
                              DocumentFilters@1100525000 : Codeunit 11012432;
                            BEGIN
                              IF UseAdditionalRecordReference THEN
                                DocumentFilters.CreateTempFilterAndExecute5(RecReference, AdditionalRecReference, DepartmentCode, CanCopy, ByCompany)
                              ELSE
                                DocumentFilters.CreateTempFilterAndExecute1(RecReference, DepartmentCode, CanCopy, ByCompany);
                              NumberOfDocuments := DocumentLinkMgt.EntityNumberOfDocumentLinks(RecReference); //C027371
                              CountNumberOfDocsAdditionalRecRef;
                              CurrPage.UPDATE();
                            END;
                             }

  }
  CODE
  {
    VAR
      Text001@1100528712 : TextConst 'DEU=Beschreibung hier eingeben...;ENU=Enter the description here...;NLD=Toets hier de omschrijving in...;NOR=Angi Beskrivelse her...;SVE=Ange beskrivning hÑr...';
      DropZone@1100528701 : Text;
      DropZoneManagement@1100528702 : Codeunit 11012281;
      AddinValueManagement@1100528001 : Codeunit 11130008;
      DocumentLinkMgt@1100409001 : Codeunit 11012401;
      DocumentFileName@1100528711 : Text[1024];
      NumberOfDocuments@1100409002 : Integer;
      DocumentYear@1100528703 : Integer;
      DocumentMonth@1100528704 : Integer;
      DocumentDay@1100528705 : Integer;
      DocumentHour@1100528706 : Integer;
      DocumentMinute@1100528707 : Integer;
      DocumentSenderEMail@1100528708 : Text;
      DocumentReceipientEMail@1100528709 : Text;
      DocumentSubject@1100528710 : Text[1024];
      MailAttachments@1100529900 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.IEnumerator" RUNONCLIENT;
      RecReference@1100409000 : RecordRef;
      AdditionalRecReference@1100529601 : RecordRef;
      FileDirectory@1100528601 : Text[250];
      ShortFileName@1100528600 : Text[250];
      Text002@1100528000 : TextConst 'DEU=Belege registrieren;ENU=Register documents;NLD=Registreer documenten';
      PageIsOpen@1100528500 : Boolean;
      RecReferenceIsOpen@1100525000 : Boolean;
      DropZoneNotWindowsVisible@1100528700 : Boolean INDATASET;
      DropZoneWindowsVisible@1100528713 : Boolean INDATASET;
      Text003@1100528714 : TextConst 'DEU=<b>Dateien einfÅgen</b> zum Hochladen <br/>(oder klicken);ENU=<b>Drop files</b> to upload <br/>(or click);NLD=<b>Sleep hier</b> de bestanden naar toe <br/>(of klik hier)';
      ReadAsDataUrlHeader@1100528715 : TextConst 'DEU=Daten:;ENU=data:;NLD=data:';
      TempEmailAttachment@1100529901 : TEMPORARY Record 11229294;
      TempEmailAttachment2@1100529902 : TEMPORARY Record 11229294;
      UseAdditionalRecordReference@1100529600 : Boolean;
      DepartmentCode@1100528002 : Code[20];
      CanCopy@1100528003 : Boolean;
      ByCompany@1100528004 : Boolean;

    PROCEDURE SetRecordReference@1100528105(RecRef@1100528100 : RecordRef);
    VAR
      UpdatePage@1100525000 : Boolean;
    BEGIN
      UseAdditionalRecordReference := FALSE;
      IF RecReferenceIsOpen THEN //C027371
        UpdatePage := RecRef.RECORDID <> RecReference.RECORDID; //C027371
      RecReference := RecRef;
      RecReferenceIsOpen := TRUE; //C027371
      DropZoneManagement.SetRecordReference(RecRef);
      IF RecReference.FIND THEN
        NumberOfDocuments := DocumentLinkMgt.EntityNumberOfDocumentLinks(RecReference);
      IF (DropZoneNotWindowsVisible) AND PageIsOpen THEN
        IF (CURRENTCLIENTTYPE <> CLIENTTYPE::OData) AND (CURRENTCLIENTTYPE <> CLIENTTYPE::Tablet) THEN
          CurrPage.DropZoneNotWindows.DropZoneReset();

      IF UpdatePage THEN //C027371
        CurrPage.UPDATE;
    END;

    PROCEDURE SetDepartmentCode@1100525000(NewValue@1100525000 : Code[20]);
    BEGIN
      DepartmentCode := NewValue;
      DropZoneManagement.SetDepartmentCode(NewValue);
    END;

    PROCEDURE SetCanCopy@1100525001(NewValue@1100525000 : Boolean);
    BEGIN
      CanCopy := NewValue;
      DropZoneManagement.SetCanCopy(NewValue);
    END;

    PROCEDURE SetByCompany@1100525002(NewValue@1100525000 : Boolean);
    BEGIN
      ByCompany := NewValue;
      DropZoneManagement.SetByCompany(NewValue);
    END;

    PROCEDURE SetAdditionalRecordReference@1100529600(AdditionalRecRef@1100529600 : RecordRef);
    BEGIN
      IF AdditionalRecRef.ISEMPTY THEN
        EXIT;
      UseAdditionalRecordReference := TRUE;
      AdditionalRecReference := AdditionalRecRef;
      CountNumberOfDocsAdditionalRecRef;
    END;

    PROCEDURE "-"@1100528700();
    BEGIN
    END;

    LOCAL PROCEDURE HandleControlEvent@1100529900(Index@1100529900 : Integer;Data@1100529901 : Text);
    VAR
      UserSetup@1100529911 : Record 91;
      Employee@1100529910 : Record 5200;
      Contact@1100529909 : Record 5050;
      Customer@1100529906 : Record 18;
      FileMgt@1100529905 : Codeunit 419;
      OutlookAutomation@1100529904 : Codeunit 11012030;
      ContactNo@1100529903 : Code[20];
      DocumentDate@1100529902 : Date;
      Attachment@1100529913 : DotNet "'Microsoft.Office.Interop.Outlook, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Outlook.Attachment" RUNONCLIENT;
      ShortFileNameAttachment@1100529914 : Text;
      SkipEmail@1100528400 : Boolean;
      ServerFile@1100527800 : Text;
      FileContent@1100527801 : Text;
    BEGIN
      CASE Index OF
        EventBeginDrop :
          BEGIN
            DropZoneManagement.InitQueue;
            TempEmailAttachment.RESET;
            TempEmailAttachment.DELETEALL;
          END;
        EventEndDrop :
          BEGIN
            DropZoneManagement.RegisterQueuedDocuments;
            IF TempEmailAttachment.FINDFIRST THEN
              TempEmailAttachment.DeleteTempEmailAttachmentFiles(TempEmailAttachment);
          END;
        EventDoubleClick : DropZoneManagement.ShowDocuments;
        BeginArgs :
          BEGIN
            DocumentYear := 0;
            DocumentMonth := 0;
            DocumentDay := 0;
            DocumentHour := 0;
            DocumentMinute := 0;
            DocumentSenderEMail := '';
            DocumentReceipientEMail := '';
            DocumentSubject := '';
            CLEAR(MailAttachments);
          END;
        EndArgs : BEGIN
          IF DocumentSenderEMail <> '' THEN
            IF DropZoneManagement.GetContactFromEMail(DocumentSenderEMail, ContactNo) THEN;

          Employee.INIT;
          IF DocumentReceipientEMail <> '' THEN BEGIN
            Employee.SETRANGE("E-Mail", COPYSTR(DocumentReceipientEMail, 1, 80));
            IF NOT Employee.FINDFIRST THEN
              IF UserSetup.GET(USERID) THEN
                IF Employee.GET(UserSetup."Employee No.") THEN;
          END;

          IF ContactNo <> '' THEN BEGIN
            Contact.GET(ContactNo);
            Contact.GetCustomerByContact(Contact, Customer);
          END;

          IF (ContactNo = '') AND (RecReference.NUMBER = DATABASE::"Purchase Header") THEN
            ContactNo := GetContactNoOfPurchaseHeader;

          IF DocumentSubject = '' THEN
            DocumentSubject := Text001;

          IF (DocumentDay <> 0) AND (DocumentMonth <> 0) AND (DocumentYear <> 0) THEN
            DocumentDate := DMY2DATE(DocumentDay, DocumentMonth, DocumentYear);

          SelectAttachments(SkipEmail);

          IF NOT SkipEmail THEN
          BEGIN
              ServerFile := FileMgt.UploadFileSilentToServerPath(DocumentFileName,'');
              FileMgt.SplitFileAbsPathName(COPYSTR(DocumentFileName, 1, 500), FileDirectory, ShortFileNameAttachment);
              FileMgt.ReadFileContentToBase64(ServerFile,FileContent);
              FileMgt.DeleteServerFile(ServerFile);
              DropZoneManagement.CreateContentInQueue(FileContent, ShortFileNameAttachment,ContactNo, Employee."No.", DocumentDate);
          END;

          IF TempEmailAttachment2.FINDFIRST THEN BEGIN
            REPEAT
              ServerFile := FileMgt.UploadFileSilentToServerPath(TempEmailAttachment2."Attachment Client File Path",'');
              FileMgt.SplitFileAbsPathName(COPYSTR(TempEmailAttachment2."Attachment Client File Path", 1, 500), FileDirectory, ShortFileNameAttachment);
              FileMgt.ReadFileContentToBase64(ServerFile,FileContent);
              FileMgt.DeleteServerFile(ServerFile);

              DropZoneManagement.CreateContentInQueue(FileContent, ShortFileNameAttachment,ContactNo, Employee."No.", DocumentDate);

            UNTIL TempEmailAttachment2.NEXT = 0;
          END;
      //  ModifyServiceCallOrOrder(Contact, Customer); //C039264.o
        END;
        ArgFileName :
          BEGIN
            DocumentFileName := Data;
            FileMgt.SplitFileAbsPathName(COPYSTR(DocumentFileName, 1, 500), FileDirectory, ShortFileName);
            IF (LOWERCASE(FileMgt.GetExtension(ShortFileName)) = 'msg') AND FileMgt.IsWindowsClient THEN BEGIN
              IF NOT OutlookAutomation.StartOutlookIfNotRunning THEN
                EXIT;
              OutlookAutomation.InitOutlook;
              OutlookAutomation.LoadMailFromFile(DocumentFileName);
              DocumentYear := OutlookAutomation.GetMailRecievalYear;
              DocumentMonth := OutlookAutomation.GetMailRecievalMonth;
              DocumentDay := OutlookAutomation.GetMailRecievalDay;
              DocumentHour := OutlookAutomation.GetMailRecievalHour;
              DocumentMinute := OutlookAutomation.GetMailRecievalMinute;
              DocumentSubject := OutlookAutomation.GetMailSubject;
              OutlookAutomation.GetMailSenderEMail(DocumentSenderEMail);
              OutlookAutomation.GetMailReciptientsEMail(DocumentReceipientEMail);
              OutlookAutomation.GetMailAttachments(MailAttachments);
            END;
          END;
      END;
      NumberOfDocuments := DocumentLinkMgt.EntityNumberOfDocumentLinks(RecReference);
      CountNumberOfDocsAdditionalRecRef;
    END;

    LOCAL PROCEDURE SelectAttachments@1100529902(VAR SkipEmail@1100528400 : Boolean);
    VAR
      FileMgt@1100529902 : Codeunit 419;
      Attachment@1100529901 : DotNet "'Microsoft.Office.Interop.Outlook, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Outlook.Attachment" RUNONCLIENT;
      FolderName@1100529900 : Text;
      TempEMailAttachmentList@1100529903 : Page 11130274;
    BEGIN
      IF NOT ISNULL(MailAttachments) THEN BEGIN
        FolderName := FileMgt.ClientTempFolderName();
        WHILE MailAttachments.MoveNext DO BEGIN
          Attachment := MailAttachments.Current;
          TempEmailAttachment.INIT;
          TempEmailAttachment."Attachment Name" := Attachment.FileName;
          TempEmailAttachment."Attachment Client File Path" := FileMgt.GetUniqueClientFileName(FolderName + Attachment.FileName);
          TempEmailAttachment."Delete Client File" := TRUE;
          TempEmailAttachment.INSERT(TRUE);
          Attachment.SaveAsFile(TempEmailAttachment."Attachment Client File Path");
        END;
        TempEMailAttachmentList.SetTempEmailAttachments(TempEmailAttachment);
        TempEMailAttachmentList.SetEmailFileName(FileMgt.GetFileName(DocumentFileName));
        TempEMailAttachmentList.RUNMODAL;
        TempEMailAttachmentList.GetTempEmailAttachments(TempEmailAttachment2);
        SkipEmail := NOT TempEMailAttachmentList.GetEmailSelected;
      END;
    END;

    PROCEDURE EventBeginDrop@1100528701() : Integer;
    BEGIN
      EXIT(10);
    END;

    PROCEDURE EventEndDrop@1100528703() : Integer;
    BEGIN
      EXIT(20);
    END;

    PROCEDURE EventDoubleClick@1100528713() : Integer;
    BEGIN
      EXIT(30);
    END;

    PROCEDURE BeginArgs@1100528702() : Integer;
    BEGIN
      EXIT(100);
    END;

    PROCEDURE EndArgs@1100528704() : Integer;
    BEGIN
      EXIT(200);
    END;

    PROCEDURE ArgFileName@1100528715() : Integer;
    BEGIN
      EXIT(1000);
    END;

    PROCEDURE ArgYear@1100528705() : Integer;
    BEGIN
      EXIT(1010);
    END;

    PROCEDURE ArgMonth@1100528706() : Integer;
    BEGIN
      EXIT(1020);
    END;

    PROCEDURE ArgDay@1100528707() : Integer;
    BEGIN
      EXIT(1030);
    END;

    PROCEDURE ArgHour@1100528708() : Integer;
    BEGIN
      EXIT(1040);
    END;

    PROCEDURE ArgMinute@1100528709() : Integer;
    BEGIN
      EXIT(1050);
    END;

    PROCEDURE ArgSenderEMail@1100528710() : Integer;
    BEGIN
      EXIT(1060);
    END;

    PROCEDURE ArgReceipientEMail@1100528711() : Integer;
    BEGIN
      EXIT(1070);
    END;

    PROCEDURE ArgSubject@1100528712() : Integer;
    BEGIN
      EXIT(1080);
    END;

    PROCEDURE Strings@1100528000() : Integer;
    BEGIN
      EXIT(300);
    END;

    LOCAL PROCEDURE CountNumberOfDocsAdditionalRecRef@1100529603();
    BEGIN
      IF NOT UseAdditionalRecordReference THEN
        EXIT;

      IF AdditionalRecReference.FINDSET THEN
        REPEAT
          NumberOfDocuments += DocumentLinkMgt.EntityNumberOfDocumentLinks(AdditionalRecReference);
        UNTIL AdditionalRecReference.NEXT = 0;
    END;

    LOCAL PROCEDURE GetContactNoOfPurchaseHeader@1100528400() ContactNo : Code[20];
    VAR
      Contact@1100528401 : Record 5050;
      PurchaseHeader@1100528400 : Record 38;
    BEGIN
      IF RecReference.NUMBER = DATABASE::"Purchase Header" THEN BEGIN
        RecReference.SETTABLE(PurchaseHeader);
        IF Contact.GetContactByVendor(PurchaseHeader."Buy-from Vendor No.", Contact, FALSE) THEN
          ContactNo := Contact."No.";
      END;
    END;

    EVENT DropZoneNotWindows@-1100529900::ControlAddInReady@2();
    BEGIN
      IF GUIALLOWED THEN
        CurrPage.DropZoneNotWindows.DropZoneInitialize(Text003);
    END;

    EVENT DropZoneNotWindows@-1100529900::DropZoneOnAddFileStart@3();
    BEGIN
      DropZoneManagement.InitQueue;
    END;

    EVENT DropZoneNotWindows@-1100529900::DropZoneOnAddFile@4(fileName@1100529901 : Text;content@1100529900 : Text);
    VAR
      ContactNo@1100528400 : Code[20];
    BEGIN
      IF (STRPOS(content, ReadAsDataUrlHeader) <> 0) THEN
        content := COPYSTR(content, STRPOS(content, ',') + 1);
      IF RecReference.NUMBER = DATABASE::"Purchase Header" THEN
        ContactNo := GetContactNoOfPurchaseHeader;
      DropZoneManagement.CreateContentInQueue(content, fileName,ContactNo,'', TODAY);
    END;

    EVENT DropZoneNotWindows@-1100529900::DropZoneOnAddFileReady@5();
    BEGIN
      DropZoneManagement.RegisterQueuedDocuments;
      NumberOfDocuments := DocumentLinkMgt.EntityNumberOfDocumentLinks(RecReference);
      CountNumberOfDocsAdditionalRecRef;
    END;

    BEGIN
    END.
  }
}

