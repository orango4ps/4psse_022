OBJECT Table 11012843 Preferred Employee
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF GETFILTER("Object No.") <> '' THEN
                 Level := 10
               ELSE
                 IF GETFILTER("Service Location No.") <> '' THEN
                   Level := 30
                 ELSE
                   IF GETFILTER("Complex Code") <> '' THEN
                     Level := 35
                   ELSE
                     IF GETFILTER("Service Contract No.") <> '' THEN
                       Level := 40
                     ELSE
                       IF GETFILTER("Maintenance Scheme") <> '' THEN
                         Level := 55;

               MARK(TRUE);
             END;

    CaptionML=[ENU=Preferred Employee;
               NOR=Foretrukket Ansatt;
               SVE=F”rvald &anst„lld];
    LookupPageID=Page11012885;
    DrillDownPageID=Page11012885;
  }
  FIELDS
  {
    { 10  ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract;
                                                   CaptionML=[ENU=Service Contract No.;
                                                              NOR=Servicekontraktnr;
                                                              SVE=Servicekontraktnr] }
    { 15  ;   ;Complex Code        ;Code20        ;TableRelation=Complex;
                                                   CaptionML=[ENU=Complex Code;
                                                              NOR=Komplekskode;
                                                              SVE=Servicekomplexkod] }
    { 20  ;   ;Service Location No.;Code20        ;TableRelation="Service Location";
                                                   OnValidate=BEGIN
                                                                 IF "Service Location No." <> '' THEN BEGIN
                                                                  TESTFIELD("Service Contract No.", '');
                                                                  TESTFIELD("Object No.", '');
                                                                  TESTFIELD("Maintenance Scheme", '');
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Service Location No.;
                                                              NOR=Servicelokasjon Nr.;
                                                              SVE=Serviceplatsnr] }
    { 45  ;   ;Object No.          ;Code20        ;TableRelation="Standard Object".No.;
                                                   OnValidate=BEGIN
                                                                IF "Object No." <> '' THEN
                                                                  TESTFIELD("Service Location No.", '');
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Object No.;
                                                              NOR=Objektnr.;
                                                              SVE=Objektnr];
                                                   Description=SERV_CONS }
    { 46  ;   ;Maintenance Scheme  ;Code20        ;TableRelation="Maintenance Scheme";
                                                   OnValidate=BEGIN
                                                                IF "Maintenance Scheme" <> '' THEN BEGIN
                                                                  TESTFIELD("Service Location No.", '');
                                                                  TESTFIELD("Service Contract No.");
                                                                  TESTFIELD("Object No.");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Maintenance Scheme;
                                                              NOR=Vedlikeholdsskjema;
                                                              SVE=Underh†llsschema] }
    { 50  ;   ;Preferred Employee Code;Code20     ;TableRelation="Resource (WOP)" WHERE (Type=CONST(Employee));
                                                   OnValidate=VAR
                                                                ResourceMgtWorkOrderPlan@1100528600 : Codeunit 11229277;
                                                              BEGIN
                                                                UpdateResponsibility(xRec."Preferred Employee Code", "Preferred Employee Code");
                                                                ResourceMgtWorkOrderPlan.TestResourceWithinCompanyPlanGroup("Preferred Employee Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              HandlePreferredEmployeeLookup;
                                                            END;

                                                   CaptionML=ENU=Preferred Employee Code;
                                                   NotBlank=Yes;
                                                   Description=DP00465, based on Resource }
    { 55  ;   ;Preferred Employee Name;Text100    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Resource (WOP)".Name WHERE (No.=FIELD(Preferred Employee Code)));
                                                   CaptionML=[ENU=Preferred Employee Name;
                                                              NOR=Foretrukket ansatt, navn;
                                                              SVE=Namn p† f”rvald anst„lld];
                                                   Editable=No }
    { 60  ;   ;Priority            ;Integer       ;InitValue=1;
                                                   CaptionML=[ENU=Priority;
                                                              NOR=Prioritet;
                                                              SVE=Prioritet] }
    { 70  ;   ;Level               ;Integer       ;CaptionML=[ENU=Level;
                                                              NOR=Niv†;
                                                              SVE=Niv†] }
    { 80  ;   ;Apply To            ;Option        ;OnValidate=BEGIN
                                                                IF "Apply To" IN ["Apply To"::Call, "Apply To"::Both] THEN
                                                                  TESTFIELD("Maintenance Scheme", '');
                                                              END;

                                                   CaptionML=[ENU=Apply To;
                                                              NOR=Gjelder];
                                                   OptionCaptionML=ENU=" ,Maintenance,Call,,,,Both";
                                                   OptionString=[ ,Maintenance,Call,,,,Both] }
    { 90  ;   ;Discipline          ;Code10        ;TableRelation=Discipline;
                                                   OnValidate=BEGIN
                                                                IF xRec.Discipline <> Discipline THEN
                                                                  VALIDATE("Trade Speciality", '');
                                                              END;

                                                   CaptionML=[ENU=Discipline;
                                                              NOR=Disiplin;
                                                              SVE=Disciplin] }
    { 100 ;   ;Trade Speciality    ;Code10        ;TableRelation="Trade Speciality".Code WHERE (Discipline=FIELD(Discipline));
                                                   CaptionML=[ENU=Trade Speciality;
                                                              NOR=SNI-nummer;
                                                              SVE=SNI-nummer] }
  }
  KEYS
  {
    {    ;Service Contract No.,Complex Code,Service Location No.,Object No.,Maintenance Scheme,Discipline,Trade Speciality,Preferred Employee Code;
                                                   Clustered=Yes }
    {    ;Service Contract No.,Complex Code,Service Location No.,Object No.,Maintenance Scheme,Priority }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE CheckPreferredEmployee@1210190003(Contr@1210190001 : Code[20];ComplexCode@1100528600 : Code[20];Loc@1210190002 : Code[20];ObjectNo@1100526200 : Code[20];EmplNew@1210190006 : Code[20];EmplOld@1210190007 : Code[20];Levl@1210190005 : Integer);
    VAR
      PrefEmplRec@1210190000 : Record 11012843;
    BEGIN
      PrefEmplRec.RESET;
      PrefEmplRec.SETRANGE("Service Contract No.", Contr);
      PrefEmplRec.SETRANGE("Complex Code", ComplexCode);
      PrefEmplRec.SETRANGE("Service Location No.", Loc);
      PrefEmplRec.SETRANGE("Object No.", ObjectNo);
      IF EmplNew = '' THEN BEGIN
        PrefEmplRec.SETRANGE("Preferred Employee Code", EmplOld);
        PrefEmplRec.DELETEALL;
      END ELSE BEGIN
        PrefEmplRec.SETRANGE("Preferred Employee Code", EmplOld);
        IF PrefEmplRec.FIND('-') THEN BEGIN
          PrefEmplRec.Priority := 1;
          PrefEmplRec.MODIFY;
        END;
        PrefEmplRec.SETRANGE("Preferred Employee Code", EmplNew);
        IF PrefEmplRec.FIND('-') THEN BEGIN
          PrefEmplRec.Priority := 0;
          PrefEmplRec.MODIFY;
        END ELSE BEGIN
          PrefEmplRec.INIT;
          PrefEmplRec."Service Contract No." := Contr;
          PrefEmplRec."Complex Code" := ComplexCode;
          PrefEmplRec."Service Location No." := Loc;
          PrefEmplRec."Object No." := ObjectNo;
          PrefEmplRec."Preferred Employee Code" := EmplNew;
          PrefEmplRec.Priority := 0;
          PrefEmplRec.Level := Levl;
          PrefEmplRec.INSERT;
        END;
      END;
    END;

    LOCAL PROCEDURE HandleLookupOLD@1100485001(lvServContr@1100485001 : Code[20];lvComplex@1100528600 : Code[20];lvServLoc@1100485000 : Code[20];lvObjectNo@1100528601 : Code[20];VAR lvEmployee@1100485002 : Code[20]);
    VAR
      Resource@1100485004 : Record 11229278;
      PrefEmplRec@1100485003 : Record 11012843;
    BEGIN
      PrefEmplRec.RESET;

      IF lvServContr <> '' THEN BEGIN
        PrefEmplRec.SETRANGE("Service Contract No.", lvServContr);
        IF PrefEmplRec.FIND('-') THEN BEGIN
          REPEAT
            IF Resource.GET(PrefEmplRec."Preferred Employee Code") THEN  //DP00465.c
              Resource.MARK := TRUE;  //DP00465.c
          UNTIL PrefEmplRec.NEXT = 0;
        END;
        PrefEmplRec.SETRANGE("Service Contract No.");
      END;

      IF lvComplex <> '' THEN BEGIN
        PrefEmplRec.SETRANGE("Complex Code", lvComplex);
        IF PrefEmplRec.FIND('-') THEN BEGIN
          REPEAT
            IF Resource.GET(PrefEmplRec."Preferred Employee Code") THEN  //DP00465.c
              Resource.MARK := TRUE;  //DP00465.c
          UNTIL PrefEmplRec.NEXT = 0;
        END;
        PrefEmplRec.SETRANGE("Complex Code");
      END;

      IF lvServLoc <> '' THEN BEGIN
        PrefEmplRec.SETRANGE("Service Location No.", lvServLoc);
        IF PrefEmplRec.FIND('-') THEN BEGIN
          REPEAT
            IF Resource.GET(PrefEmplRec."Preferred Employee Code") THEN  //DP00465.c
              Resource.MARK := TRUE;  //DP00465.c
          UNTIL PrefEmplRec.NEXT = 0;
        END;
        PrefEmplRec.SETRANGE("Service Location No.");
      END;

      IF lvObjectNo <> '' THEN BEGIN
        PrefEmplRec.SETRANGE("Object No.", lvObjectNo);
        IF PrefEmplRec.FIND('-') THEN BEGIN
          REPEAT
            IF Resource.GET(PrefEmplRec."Preferred Employee Code") THEN  //DP00465.c
              Resource.MARK := TRUE;  //DP00465.c
          UNTIL PrefEmplRec.NEXT = 0;
        END;
        PrefEmplRec.SETRANGE("Object No.");
      END;

      Resource.FILTERGROUP(9);
      Resource.SETRANGE(Type, Resource.Type::Employee);
      Resource.FILTERGROUP(0);
      Resource.MARKEDONLY(TRUE);
      IF NOT Resource.FIND('-') THEN
        Resource.MARKEDONLY(FALSE);
      IF PAGE.RUNMODAL(PAGE::"Resource List (WOP)", Resource) = ACTION::LookupOK THEN
        lvEmployee := Resource."No.";
    END;

    PROCEDURE GetPreferredEmployee@1100528800(IServiceContractNo@1100528800 : Code[20];IServiceLocationNo@1100528801 : Code[20];IObjectNo@1100528802 : Code[20];IMaintenanceSchemeCode@1100528803 : Code[20];IServiceOrderNo@1100528604 : Code[20];IDiscipline@1100528601 : Code[10];ITradeSpeciality@1100528602 : Code[10];ISeekDate@1100528606 : Date;VAR OPreferredEmployeeLevel@1100528804 : ' ,Service Contract,Service Location,Object,Contract Object Maintenance,Complex';Origin@1100528805 : ' ,Call,Service Order') : Code[20];
    VAR
      PreferredEmployee@1100528806 : Record 11012843;
      ServiceLocation@1100528807 : Record 11012801;
      StartLevel@1100528600 : Integer;
      Level@1100528808 : Integer;
      LevelName@1100528809 : ' '' ,Service Contract,Service Location,Object,Contract Object Maintenance,Complex';
      StopLooking@1100528603 : Boolean;
      Discipline@1100528608 : Code[10];
      TradeSpeciality@1100528607 : Code[10];
    BEGIN
      Discipline := IDiscipline;
      TradeSpeciality := ITradeSpeciality;
      IF IServiceContractNo <> '' THEN
        StartLevel := 1;
      IF IServiceLocationNo <> '' THEN
        StartLevel := 3;
      IF IObjectNo <> '' THEN
        StartLevel := 4;
      IF (IServiceContractNo <> '') AND (IObjectNo <> '') AND (IMaintenanceSchemeCode <> '') THEN
        StartLevel := 5;
      IF StartLevel = 0 THEN
        EXIT;

      CASE Origin OF
        Origin::Call:
          BEGIN
            PreferredEmployee.SETFILTER("Apply To", '%1|%2',
              PreferredEmployee."Apply To"::Call, PreferredEmployee."Apply To"::Both);
          END;
        Origin::"Service Order":
          BEGIN
            PreferredEmployee.SETFILTER("Apply To", '%1|%2',
              PreferredEmployee."Apply To"::Maintenance, PreferredEmployee."Apply To"::Both);
          END;
        Origin::" ":
          BEGIN
            IF IMaintenanceSchemeCode <> '' THEN
              PreferredEmployee.SETFILTER("Apply To", '%1|%2',
                PreferredEmployee."Apply To"::Maintenance, PreferredEmployee."Apply To"::Both)
            ELSE
              PreferredEmployee.SETRANGE("Apply To", PreferredEmployee."Apply To"::" ");
          END;
      END;

      PreferredEmployee.SETFILTER(PreferredEmployee."Preferred Employee Code", '<>%1', '');
      REPEAT
        Level := StartLevel;
        REPEAT
          PreferredEmployee.SETRANGE(Discipline, Discipline);
          PreferredEmployee.SETRANGE("Trade Speciality", TradeSpeciality);

          CASE Level OF
            1: //ServiceContract
              BEGIN
                PreferredEmployee.SETRANGE("Service Contract No.", IServiceContractNo);
                PreferredEmployee.SETRANGE("Complex Code", '');
                PreferredEmployee.SETRANGE("Service Location No.", '');
                PreferredEmployee.SETRANGE("Object No.", '');
                PreferredEmployee.SETRANGE("Maintenance Scheme", '');
                LevelName := LevelName::"Service Contract";
              END;
            2: //ServiceComplex
              BEGIN
                IF NOT ServiceLocation.GET(IServiceLocationNo) THEN
                  ServiceLocation.INIT;
                PreferredEmployee.SETRANGE("Service Contract No.", '');
                PreferredEmployee.SETRANGE("Complex Code", ServiceLocation.GetComplexCode);
                PreferredEmployee.SETRANGE("Service Location No.", '');
                PreferredEmployee.SETRANGE("Object No.", '');
                PreferredEmployee.SETRANGE("Maintenance Scheme", '');
                LevelName := LevelName::Complex;
              END;
            3: //ServiceLocation
              BEGIN
                PreferredEmployee.SETRANGE("Service Contract No.", '');
                PreferredEmployee.SETRANGE("Complex Code", '');
                PreferredEmployee.SETRANGE("Service Location No.", IServiceLocationNo);
                PreferredEmployee.SETRANGE("Object No.", '');
                PreferredEmployee.SETRANGE("Maintenance Scheme", '');
                LevelName := LevelName::"Service Location";
              END;
            4: //Object
              BEGIN
                PreferredEmployee.SETRANGE("Service Contract No.", ''); //mg.c, 12-02-13: C005789
                PreferredEmployee.SETRANGE("Complex Code", '');
                PreferredEmployee.SETRANGE("Service Location No.", '');
                PreferredEmployee.SETRANGE("Object No.", IObjectNo);
                PreferredEmployee.SETRANGE("Maintenance Scheme", '');
                LevelName := LevelName::Object;
              END;
            5:  //Contract Object Maintenance
              BEGIN
                PreferredEmployee.SETRANGE("Service Contract No.", IServiceContractNo); //mg.c, 12-02-13: C005789
                PreferredEmployee.SETRANGE("Complex Code", '');
                PreferredEmployee.SETRANGE("Service Location No.", '');
                PreferredEmployee.SETRANGE("Object No.", IObjectNo);
                PreferredEmployee.SETRANGE("Maintenance Scheme", IMaintenanceSchemeCode);
                LevelName := LevelName::"Contract Object Maintenance";
              END;
          END;

          IF PreferredEmployee.FINDFIRST THEN
            REPEAT
              IF (PreferredEmployee.Discipline <> '') OR PrefEmployeeHasSkills(PreferredEmployee, IServiceOrderNo, IDiscipline, ITradeSpeciality, ISeekDate) THEN BEGIN
                OPreferredEmployeeLevel := LevelName;
                EXIT(PreferredEmployee."Preferred Employee Code");
              END;
            UNTIL PreferredEmployee.NEXT = 0;
          Level -= 1;
        UNTIL Level = 0;
        IF Discipline = '' THEN
          StopLooking := TRUE;
        IF TradeSpeciality = '' THEN
          Discipline := '';
        IF TradeSpeciality <> '' THEN
          TradeSpeciality := '';
      UNTIL StopLooking;
    END;

    PROCEDURE GetPreferredEmployeeForDisplay@1100528802(IServiceContractNo@1100528800 : Code[20];IServiceLocationNo@1100528801 : Code[20];IObjectNo@1100528802 : Code[20];IMaintenanceSchemeCode@1100528803 : Code[20];IComplexCode@1100525000 : Code[20];IDiscipline@1100528603 : Code[10];ITradeSpeciality@1100528602 : Code[10];ISeekDate@1100528601 : Date;VAR OPreferredEmployeeName@1100528804 : Text[100]) : Code[20];
    VAR
      PreferredEmployee@1100528805 : Record 11012843;
      ServiceLocation@1100528806 : Record 11012801;
      Level@1100528807 : Integer;
      NoOfPreferredEmployees@1100528808 : Integer;
    BEGIN
      OPreferredEmployeeName := '';

      IF IServiceContractNo <> '' THEN
        Level := 1;
      IF IComplexCode <> '' THEN
        Level := 2;
      IF IServiceLocationNo <> '' THEN
        Level := 3;
      IF IObjectNo <> '' THEN
        Level := 4;
      IF (IServiceContractNo <> '') AND (IObjectNo <> '') AND (IMaintenanceSchemeCode <> '') THEN
        Level := 5;
      IF IMaintenanceSchemeCode <> '' THEN
        PreferredEmployee.SETRANGE("Apply To", PreferredEmployee."Apply To"::Maintenance);
      IF Level = 0 THEN
        EXIT('');

      CASE Level OF
        1:
          BEGIN
            PreferredEmployee.SETRANGE("Service Contract No.", IServiceContractNo);
            PreferredEmployee.SETRANGE("Complex Code", '');
            PreferredEmployee.SETRANGE("Service Location No.", '');
            PreferredEmployee.SETRANGE("Object No.", '');
            PreferredEmployee.SETRANGE("Maintenance Scheme", '');
          END;
        2:
          BEGIN
            IF NOT ServiceLocation.GET(IServiceLocationNo) THEN
              ServiceLocation.INIT;
            PreferredEmployee.SETRANGE("Service Contract No.", '');
            PreferredEmployee.SETRANGE("Complex Code", IComplexCode);
            PreferredEmployee.SETRANGE("Service Location No.", '');
            PreferredEmployee.SETRANGE("Object No.", '');
            PreferredEmployee.SETRANGE("Maintenance Scheme", '');
          END;
        3:
          BEGIN
            PreferredEmployee.SETRANGE("Service Contract No.", '');
            PreferredEmployee.SETRANGE("Complex Code", '');
            PreferredEmployee.SETRANGE("Service Location No.", IServiceLocationNo);
            PreferredEmployee.SETRANGE("Object No.", '');
            PreferredEmployee.SETRANGE("Maintenance Scheme", '');
          END;
        4:
          BEGIN
            PreferredEmployee.SETRANGE("Service Contract No.", '');
            PreferredEmployee.SETRANGE("Complex Code", '');
            PreferredEmployee.SETRANGE("Service Location No.", '');
            PreferredEmployee.SETRANGE("Object No.", IObjectNo);
            PreferredEmployee.SETRANGE("Maintenance Scheme", '');
          END;
        5:
          BEGIN
            PreferredEmployee.SETRANGE("Service Contract No.", IServiceContractNo);
            PreferredEmployee.SETRANGE("Complex Code", '');
            PreferredEmployee.SETRANGE("Service Location No.", '');
            PreferredEmployee.SETRANGE("Object No.", IObjectNo);
            PreferredEmployee.SETRANGE("Maintenance Scheme", IMaintenanceSchemeCode);
          END;
      END;

      NoOfPreferredEmployees := PreferredEmployee.COUNT;
      CASE NoOfPreferredEmployees OF
        0: EXIT;
        1:
          BEGIN
            PreferredEmployee.FINDFIRST;
            PreferredEmployee.CALCFIELDS("Preferred Employee Name");
            OPreferredEmployeeName := PreferredEmployee."Preferred Employee Name";
            EXIT(PreferredEmployee."Preferred Employee Code");
          END;
      ELSE
        EXIT(STRSUBSTNO('[%1]', NoOfPreferredEmployees));
      END;
    END;

    PROCEDURE AssistEditPreferredEmployee@1100528806(IServiceContractNo@1100528800 : Code[20];IServiceLocationNo@1100528801 : Code[20];IObjectNo@1100528802 : Code[20];IMaintenanceSchemeCode@1100528803 : Code[20];IComplexCode@1100525000 : Code[20]);
    VAR
      PreferredEmployee@1100528804 : Record 11012843;
      ServiceLocation@1100528805 : Record 11012801;
      Level@1100528806 : Integer;
    BEGIN
      IF IServiceContractNo <> '' THEN
        Level := 1;
      IF IComplexCode <> '' THEN
        Level := 2;
      IF IServiceLocationNo <> '' THEN
        Level := 3;
      IF IObjectNo <> '' THEN
        Level := 4;
      IF (IServiceContractNo <> '') AND (IObjectNo <> '') AND (IMaintenanceSchemeCode <> '') THEN
        Level := 5;
      IF IMaintenanceSchemeCode <> '' THEN
        PreferredEmployee.SETRANGE("Apply To", PreferredEmployee."Apply To"::Maintenance);

      CASE Level OF
        1:
          BEGIN
            PreferredEmployee.SETRANGE("Service Contract No.", IServiceContractNo);
            PreferredEmployee.SETRANGE("Complex Code", '');
            PreferredEmployee.SETRANGE("Service Location No.", '');
            PreferredEmployee.SETRANGE("Object No.", '');
            PreferredEmployee.SETRANGE("Maintenance Scheme", '');
          END;
        2:
          BEGIN
            IF NOT ServiceLocation.GET(IServiceLocationNo) THEN
              ServiceLocation.INIT;
            PreferredEmployee.SETRANGE("Service Contract No.", '');
            PreferredEmployee.SETRANGE("Complex Code", IComplexCode);
            PreferredEmployee.SETRANGE("Service Location No.", '');
            PreferredEmployee.SETRANGE("Object No.", '');
            PreferredEmployee.SETRANGE("Maintenance Scheme", '');
          END;
        3:
          BEGIN
            PreferredEmployee.SETRANGE("Service Contract No.", '');
            PreferredEmployee.SETRANGE("Complex Code", '');
            PreferredEmployee.SETRANGE("Service Location No.", IServiceLocationNo);
            PreferredEmployee.SETRANGE("Object No.", '');
            PreferredEmployee.SETRANGE("Maintenance Scheme", '');
          END;
        4:
          BEGIN
            PreferredEmployee.SETRANGE("Service Contract No.", '');
            PreferredEmployee.SETRANGE("Complex Code", '');
            PreferredEmployee.SETRANGE("Service Location No.", '');
            PreferredEmployee.SETRANGE("Object No.", IObjectNo);
            PreferredEmployee.SETRANGE("Maintenance Scheme", '');
          END;
        5:
          BEGIN
            PreferredEmployee.SETRANGE("Service Contract No.", IServiceContractNo);
            PreferredEmployee.SETRANGE("Complex Code", '');
            PreferredEmployee.SETRANGE("Service Location No.", '');
            PreferredEmployee.SETRANGE("Object No.", IObjectNo);
            PreferredEmployee.SETRANGE("Maintenance Scheme", IMaintenanceSchemeCode);
          END;
      END;

      PAGE.RUNMODAL(0, PreferredEmployee);
    END;

    LOCAL PROCEDURE HandlePreferredEmployeeLookup@1100528600();
    VAR
      ResourceWOP@1100528600 : Record 11229278;
      ServiceOrder@1100528603 : Record 11012823;
      ServiceOrderPlanManagement@1100528602 : Codeunit 11012868;
      CurrentYear@1100528604 : Integer;
    BEGIN
      CurrentYear := DATE2DMY(TODAY, 3);
      ResourceWOP.SETRANGE(Type, ResourceWOP.Type::Employee);
      IF (Discipline <> '') OR ("Trade Speciality" <> '') THEN BEGIN
        IF ResourceWOP.FINDSET THEN
          REPEAT
            ServiceOrder.Discipline := Discipline;
            ServiceOrder."Trade Speciality" := "Trade Speciality";
            IF ServiceOrderPlanManagement.ServiceOrderMeetsPlanData(ServiceOrder, ResourceWOP."No.", DMY2DATE(1, 1, CurrentYear), DMY2DATE(31, 12, CurrentYear), 1) THEN
              ResourceWOP.MARK(TRUE);
          UNTIL ResourceWOP.NEXT = 0;
        ResourceWOP.MARKEDONLY(TRUE);
      END;
      IF PAGE.RUNMODAL(0, ResourceWOP) = ACTION::LookupOK THEN
        VALIDATE("Preferred Employee Code", ResourceWOP."No.");
    END;

    LOCAL PROCEDURE PrefEmployeeHasSkills@1100528602(IPreferredEmployee@1100528603 : Record 11012843;IServiceOrderNo@1100528602 : Code[20];IDiscipline@1100528601 : Code[10];ITradeSpeciality@1100528600 : Code[10];ISeekDate@1100528604 : Date) : Boolean;
    VAR
      ServiceOrder@1100528606 : Record 11012823;
      ServiceOrderPlanManagement@1100528605 : Codeunit 11012868;
      PlanDateFrom@1100528607 : Date;
      PlanDateTo@1100528608 : Date;
      CurrentYear@1100528609 : Integer;
    BEGIN
      IF ISeekDate = 0D THEN BEGIN
        CurrentYear := DATE2DMY(TODAY, 3);
        PlanDateFrom := DMY2DATE(1, 1, CurrentYear);
        PlanDateTo := DMY2DATE(31, 12, CurrentYear);
      END ELSE BEGIN
        PlanDateFrom := ISeekDate;
        PlanDateTo := ISeekDate;
      END;
      IF NOT ServiceOrder.GET(IServiceOrderNo) THEN
        ServiceOrder.INIT;
      IF ServiceOrder."No." = '' THEN BEGIN
        ServiceOrder.Discipline := IDiscipline;
        ServiceOrder."Trade Speciality" := ITradeSpeciality;
      END;
      IF ServiceOrderPlanManagement.ServiceOrderMeetsPlanData(
        ServiceOrder, IPreferredEmployee."Preferred Employee Code", PlanDateFrom, PlanDateTo, 1)
      THEN
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE UpdateResponsibility@1100529500(ResourceNoOld@1100529503 : Code[20];ResourceNoNew@1100529505 : Code[20]);
    VAR
      ServiceSetup@1100529504 : Record 11012800;
      ServiceResponsiblePersonDPT@1100529501 : Record 11072297;
      ResourceWOPOld@1100529500 : Record 11229278;
      ResourceWOPNew@1100529502 : Record 11229278;
    BEGIN
      ServiceSetup.GET;
      IF (ServiceSetup."Responsibility Preferred Empl" = '') THEN
        EXIT;
      IF ("Service Location No." = '') THEN
        EXIT;
      IF (NOT ResourceWOPOld.GET(xRec."Preferred Employee Code")) THEN
        ResourceWOPOld.INIT;
      IF (NOT ResourceWOPNew.GET("Preferred Employee Code")) THEN
        ResourceWOPNew.INIT;
      IF (ResourceWOPOld."Source No." = ResourceWOPNew."Source No.") THEN
        EXIT;
      IF (ResourceWOPNew."Source No." = '') THEN
        EXIT;

      ServiceResponsiblePersonDPT.SETRANGE("Source Type", ServiceResponsiblePersonDPT."Source Type"::ServLocation);
      ServiceResponsiblePersonDPT.SETRANGE("Source Code", "Service Location No.");
      ServiceResponsiblePersonDPT.SETRANGE("Employee No.", ResourceWOPNew."Source No.");
      ServiceResponsiblePersonDPT.SETRANGE(Responsibility, ServiceSetup."Responsibility Preferred Empl");
      IF (NOT ServiceResponsiblePersonDPT.FINDFIRST) THEN BEGIN
        ServiceResponsiblePersonDPT.INIT;
        ServiceResponsiblePersonDPT."Source Type" := ServiceResponsiblePersonDPT."Source Type"::ServLocation;
        ServiceResponsiblePersonDPT."Source Code" := "Service Location No.";
        ServiceResponsiblePersonDPT."Line No." := ServiceResponsiblePersonDPT.GetLastLineNo + 10000;
        ServiceResponsiblePersonDPT.Responsibility := ServiceSetup."Responsibility Preferred Empl";
        ServiceResponsiblePersonDPT."Employee No." := ResourceWOPNew."Source No.";
        ServiceResponsiblePersonDPT.INSERT;
      END;
    END;

    BEGIN
    END.
  }
}

