OBJECT Page 11012072 Purchase Order Line List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[DEU=BestellungszeilenÅbersicht;
               ENU=Purchase Order Line List;
               NLD=Inkooporderregel overzicht;
               NOR=Liste over innkjõpsordrerader;
               SVE=Lista îver inkîpsorderrader];
    SourceTable=Table39;
    SourceTableView=WHERE(Document Type=CONST(Order));
    PageType=List;
    OnInit=BEGIN
             //"Balance Excl. VATVisible","Balance Incl. VATVisible",ExpectedBackOrderDateVisible,"Quantity ReceivedVisible"
             //"Outstanding QuantityVisible","Unit of MeasureVisible",QuantityVisible,DescriptionVisible,ShortcutDimension2CodeVisible
             //"Cost TypeVisible"
             FieldsVisible := TRUE;

             "Vendor (Trade Item)Visible" := TRUE;
             ManufacturerVisible := TRUE;
             "Trade ItemVisible" := TRUE;
             "Basic ItemVisible" := TRUE;

             //db.sn, 12-03-15
             "Quantity InvoicedVisible" := TRUE;
             "Expected Receipt DateVisible" := TRUE;
             "Purchase ActionVisible" := TRUE;
             "Purchase PhaseVisible" := TRUE;
             "Location CodeVisible" := TRUE;
             "Line AmountVisible" := TRUE;
             "Amount (LCY)Visible" := TRUE;
             "Balance Incl. VATVisible" := TRUE;
             "Balance Excl. VATVisible" := TRUE;
             //db.en, 12-03-15
           END;

    OnOpenPage=VAR
                 FPSLicenseManagement@1100527400 : Codeunit 11229289;
               BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(ItemSetup) THEN BEGIN
                   "Basic ItemVisible" := (FALSE);
                   "Trade ItemVisible" := (FALSE);
                   ManufacturerVisible := (FALSE);
                   "Vendor (Trade Item)Visible" := (FALSE);
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       CalculateBalances;
                       DetermineBackOrderQuantity;
                       PurchaseLineExtension.GetPurchLineExtension("Document Type", "Document No.", "Line No.");
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    ActionList=ACTIONS
    {
      { 1210190007;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525005;1 ;ActionGroup;
                      CaptionML=[DEU=Einkaufsbestellung;
                                 ENU=Purchase Order;
                                 NLD=Inkooporder;
                                 NOR=Bestilling;
                                 SVE=Inkîpsorder] }
      { 1210190005;1 ;Action    ;
                      CaptionML=[DEU=Einkaufs&bestellung;
                                 ENU=&Purchase Order;
                                 NLD=&Inkooporder;
                                 NOR=&Innkjõpsordre;
                                 SVE=Inkî&psorder];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Document;
                      OnAction=VAR
                                 PurchLine@1100485001 : Record 39;
                               BEGIN
                                 PurchLine.SETCURRENTKEY("Document Type", "Job No.");
                                 PurchLine.SETRANGE("Document Type", PurchLine."Document Type"::Order);
                                 PurchLine.SETRANGE("Document No.", "Document No.");
                                 PurchLine.FINDFIRST; //Error if no purchase lines present
                                 ShowPurchaseOrder;
                               END;
                                }
      { 1210190001;1 ;Action    ;
                      CaptionML=[DEU=&EingÑnge;
                                 ENU=&Receipts;
                                 NLD=&Ontvangsten;
                                 NOR=&Kvitteringer;
                                 SVE=&Inleveranser];
                      Image=PostedReceipts;
                      OnAction=BEGIN
                                 ShowReceipt;
                               END;
                                }
      { 1100525003;1 ;Action    ;
                      CaptionML=[DEU=Einkaufszeilend&etails;
                                 ENU=Purchase Line D&etails;
                                 NLD=Inkoopregeld&etails;
                                 NOR=Innkjõpsradd&etaljer;
                                 SVE=Inkîpsradsd&etaljer];
                      Image=ViewCheck;
                      OnAction=BEGIN
                                 EditLineDetails;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Document No." }

    { 4   ;2   ;Field     ;
                SourceExpr="Buy-from Vendor No." }

    { 6   ;2   ;Field     ;
                Name=Name;
                CaptionML=[DEU=Name;
                           ENU=Name;
                           NLD=Naam;
                           NOR=Navn;
                           SVE=Namn];
                SourceExpr="Vendor Name" }

    { 1210190000;2;Field  ;
                SourceExpr="Service Order No.";
                Visible=FALSE }

    { 1210190002;2;Field  ;
                SourceExpr="Service Location No.";
                Visible=FALSE }

    { 1210190008;2;Field  ;
                SourceExpr="Service Contract No.";
                Visible=FALSE }

    { 1210190010;2;Field  ;
                SourceExpr="Job No.";
                Visible=FALSE }

    { 1100526104;2;Field  ;
                CaptionML=[DEU=Speicherznr.;
                           ENU=Yard No.;
                           NLD=Werfnr.;
                           NOR=Plassnr;
                           SVE=Platsnr];
                SourceExpr=PurchaseLineExtension."Yard No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100526102;2;Field  ;
                CaptionML=[DEU=Systemnr.;
                           ENU=System No.;
                           NLD=Systeemnr.;
                           NOR=Systemnr;
                           SVE=Systemnr];
                SourceExpr=PurchaseLineExtension."System No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100526100;2;Field  ;
                CaptionML=[DEU=EntitÑtstyp;
                           ENU=Entity Type;
                           NLD=Entiteit type;
                           NOR=Enhetstype;
                           SVE=Enhetstyp];
                SourceExpr="Entity Type";
                Visible=FALSE;
                Editable=FALSE }

    { 1100526106;2;Field  ;
                CaptionML=[DEU=Einheitsnr.;
                           ENU=Entity No.;
                           NLD=Entiteitnr.;
                           NOR=Enhetsnr;
                           SVE=Enhetsnr];
                SourceExpr=PurchaseLineExtension."Entity No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100485006;2;Field  ;
                SourceExpr="Plot No.";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr=Element;
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="Extension Contract";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr="Cost Type";
                Visible=FieldsVisible }

    { 1100485010;2;Field  ;
                SourceExpr="Item No." }

    { 1210190030;2;Field  ;
                SourceExpr="Item Category Code";
                Visible=FALSE }

    { 1210190024;2;Field  ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 1100485012;2;Field  ;
                SourceExpr=Manufacturer;
                Visible=ManufacturerVisible }

    { 1100485014;2;Field  ;
                SourceExpr="Basic Item";
                Visible="Basic ItemVisible" }

    { 1100485016;2;Field  ;
                SourceExpr="Vendor (Trade Item)";
                Visible="Vendor (Trade Item)Visible" }

    { 1100485018;2;Field  ;
                SourceExpr="Trade Item";
                Visible="Trade ItemVisible" }

    { 1210190018;2;Field  ;
                SourceExpr=Type;
                Visible=FALSE }

    { 1210190020;2;Field  ;
                SourceExpr="No.";
                Visible=FALSE }

    { 1210190016;2;Field  ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FieldsVisible;
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 14  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FieldsVisible }

    { 16  ;2   ;Field     ;
                SourceExpr=Description;
                Visible=FieldsVisible }

    { 1100525000;2;Field  ;
                SourceExpr="Description 2" }

    { 18  ;2   ;Field     ;
                SourceExpr=Quantity;
                Visible=FieldsVisible }

    { 20  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FieldsVisible }

    { 1210190022;2;Field  ;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 1210190012;2;Field  ;
                SourceExpr="Line Amount";
                Visible="Line AmountVisible" }

    { 1210190014;2;Field  ;
                SourceExpr="Amount (LCY)";
                Visible="Amount (LCY)Visible" }

    { 22  ;2   ;Field     ;
                SourceExpr="Outstanding Quantity";
                Visible=FieldsVisible }

    { 1210190026;2;Field  ;
                SourceExpr="Outst. Amount exc. VAT (LCY)";
                Visible=FALSE }

    { 1100525002;2;Field  ;
                SourceExpr="Outstanding Amount";
                Visible=FALSE }

    { 24  ;2   ;Field     ;
                SourceExpr="Quantity Received";
                Visible=FieldsVisible }

    { 1210190028;2;Field  ;
                SourceExpr="Rec./Not Inv. exc.VAT (LCY)";
                Visible=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="Amt. Rcd. Not Invoiced";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Quantity Invoiced";
                Visible="Quantity InvoicedVisible" }

    { 1210190032;2;Field  ;
                SourceExpr="Order Date";
                Visible=FALSE }

    { 1100525001;2;Field  ;
                SourceExpr="Requested Receipt Date" }

    { 1210190034;2;Field  ;
                SourceExpr="Promised Receipt Date";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr="Expected Receipt Date";
                Visible="Expected Receipt DateVisible" }

    { 1100485008;2;Field  ;
                CaptionML=[DEU=Nachlieferung;
                           ENU=Backorder Qty.;
                           NLD=Nalevering;
                           NOR=Backordreantall;
                           SVE=Backorderantal];
                BlankZero=Yes;
                SourceExpr=BackOrderQuantity;
                Visible=FALSE;
                Editable=FALSE }

    { 1100485004;2;Field  ;
                SourceExpr="Expected Back Order Date";
                Visible=FieldsVisible }

    { 1100528901;2;Field  ;
                SourceExpr="Purchase Requisition No." }

    { 30  ;2   ;Field     ;
                SourceExpr="Purchase Action";
                Visible="Purchase ActionVisible" }

    { 32  ;2   ;Field     ;
                SourceExpr="Purchase Phase";
                Visible="Purchase PhaseVisible" }

    { 1100485002;2;Field  ;
                SourceExpr="Balance Excl. VAT";
                Visible="Balance Excl. VATVisible";
                OnDrillDown=BEGIN
                              DrilldownBalances();
                            END;
                             }

    { 1100485000;2;Field  ;
                SourceExpr="Balance Incl. VAT";
                Visible="Balance Incl. VATVisible";
                OnDrillDown=BEGIN
                              DrilldownBalances();
                            END;
                             }

    { 34  ;2   ;Field     ;
                SourceExpr="Location Code";
                Visible="Location CodeVisible" }

  }
  CODE
  {
    VAR
      PurchaseLineExtension@1100526100 : Record 11020644;
      ItemSetup@1100525000 : Record 11012300;
      CopyMgt@1100485003 : Codeunit 11012068;
      g_table@1100485004 : Integer;
      gProj@1100485002 : Code[20];
      gServOrder@1100485001 : Code[20];
      gServContr@1100485000 : Code[20];
      g_code1@1100485005 : Code[20];
      g_code2@1100485006 : Code[20];
      g_code3@1100485007 : Code[20];
      g_code4@1100485008 : Code[20];
      BackOrderQuantity@1100485009 : Decimal;
      DPA_IsHardFilter@1100000999 : Boolean;
      "Basic ItemVisible"@19042756 : Boolean INDATASET;
      "Trade ItemVisible"@19042429 : Boolean INDATASET;
      ManufacturerVisible@19015155 : Boolean INDATASET;
      "Vendor (Trade Item)Visible"@19043796 : Boolean INDATASET;
      "Quantity InvoicedVisible"@19074051 : Boolean INDATASET;
      "Expected Receipt DateVisible"@19074269 : Boolean INDATASET;
      "Purchase ActionVisible"@19039042 : Boolean INDATASET;
      "Purchase PhaseVisible"@19057610 : Boolean INDATASET;
      "Location CodeVisible"@19020483 : Boolean INDATASET;
      "Line AmountVisible"@19001985 : Boolean INDATASET;
      "Amount (LCY)Visible"@19065844 : Boolean INDATASET;
      "Balance Incl. VATVisible"@1210190001 : Boolean INDATASET;
      "Balance Excl. VATVisible"@1210190002 : Boolean INDATASET;
      FieldsVisible@1210190000 : Boolean INDATASET;

    PROCEDURE "Vendor Name"@1() : Text[30];
    VAR
      VendorRec@11012000 : Record 23;
    BEGIN
      IF VendorRec.GET("Buy-from Vendor No.") THEN
        EXIT(VendorRec.Name)
      ELSE
        EXIT('');
    END;

    PROCEDURE ShowReceipt@2();
    VAR
      RcptLineRec@1100485000 : Record 121;
    BEGIN
      RcptLineRec.RESET;
      RcptLineRec.SETCURRENTKEY("Order No.","Order Line No.");
      RcptLineRec.SETRANGE("Order No.","Document No.");
      IF NOT MARKEDONLY THEN
        RcptLineRec.SETRANGE("Order Line No.","Line No.");
      PAGE.RUNMODAL(PAGE::"Receipt Line List",RcptLineRec);
    END;

    PROCEDURE ShowPurchaseOrder@1210190001();
    VAR
      PurchOrder@1210190000 : Record 38;
    BEGIN
      PurchOrder.SETRANGE("Document Type","Document Type");
      PurchOrder.SETRANGE("No.","Document No.");
      IF PurchOrder.FINDFIRST THEN
        PurchOrder.SETRECFILTER;
      IF "Document Type" = "Document Type"::Quote THEN
        PAGE.RUNMODAL(PAGE::"Purchase Quote", PurchOrder);
      IF "Document Type" = "Document Type"::Order THEN
        PAGE.RUNMODAL(PAGE::"Purchase Order", PurchOrder);
      IF "Document Type" = "Document Type"::"Blanket Order" THEN
        PAGE.RUNMODAL(PAGE::"Blanket Purchase Order", PurchOrder);
      IF "Document Type" = "Document Type"::Invoice THEN
        PAGE.RUNMODAL(PAGE::"Purchase Invoice", PurchOrder);
      IF "Document Type" = "Document Type"::"Credit Memo" THEN
        PAGE.RUNMODAL(PAGE::"Purchase Credit Memo", PurchOrder);
    END;

    PROCEDURE ReceiptInvoiced@1210190002() : Boolean;
    VAR
      PurchRcptLine@1210190000 : Record 121;
      PurchInvLine@1210190001 : Record 123;
    BEGIN
      PurchRcptLine.SETCURRENTKEY("Order No.", "Order Line No.");
      PurchRcptLine.SETRANGE("Order No.", "Document No.");
      PurchRcptLine.SETRANGE("Order Line No.", "Line No.");
      IF PurchRcptLine.FINDFIRST THEN BEGIN
        PurchInvLine.SETCURRENTKEY("Receipt No.", "Receipt Line No.");
        PurchInvLine.SETRANGE("Receipt No.", PurchRcptLine."Document No.");
        PurchInvLine.SETRANGE("Receipt Line No.", PurchRcptLine."Line No.");
        IF PurchInvLine.FINDFIRST THEN
          IF Quantity <= "Quantity Invoiced" THEN
            EXIT(TRUE);
      END;

      EXIT(FALSE);
    END;

    PROCEDURE CheckCompress@1210190000(lvProj@1210190001 : Code[20];lvServOrder@1210190003 : Code[20];lvServContr@1210190004 : Code[20];lvMark@1210190000 : Boolean;g_table@1100485001 : Integer;OnlyNotCreatedAsCostPlusEntry@1210190002 : Boolean);
    VAR
      lvTmpPurchOrderRec@1100485000 : TEMPORARY Record 38;
    BEGIN
      //RESET;  //db, 27-07-04: undo filter on document type=order on head/subform
      gProj := lvProj;
      gServOrder := lvServOrder;
      gServContr := lvServContr;

      CLEARMARKS;
      IF lvMark THEN BEGIN
        lvTmpPurchOrderRec.DELETEALL;
        IF lvProj <> '' THEN
          SETRANGE("Job No.", lvProj);
        IF lvServContr <> '' THEN
          SETRANGE("Service Contract No.", lvServContr);
        IF lvServOrder <> '' THEN
          SETRANGE("Service Order No.", lvServOrder);
        IF FINDSET THEN BEGIN
          REPEAT
            IF NOT lvTmpPurchOrderRec.GET("Document Type", "Document No.") THEN BEGIN
              lvTmpPurchOrderRec."Document Type" := "Document Type";
              lvTmpPurchOrderRec."No." := "Document No.";
              lvTmpPurchOrderRec.INSERT;
              MARK := TRUE;
            END;
          UNTIL NEXT = 0;
          Rec := xRec;
        END;
      END;
      //SETCURRENTKEY("Document Type","Document No.","Line No.");  //db, 27-07-04
      MARKEDONLY(lvMark);

      IF g_table <> 0 THEN BEGIN  //db, 29-08-07 (call 10172)
        SETRANGE("Outstanding-Rcd/Not Invoiced", TRUE);
        SETRANGE("Removal Contribution", FALSE);
        //mg.sn, 11-10-11: M29565
        IF OnlyNotCreatedAsCostPlusEntry THEN
          SETRANGE("Cost Plus Entry Created", FALSE)
        ELSE
          SETRANGE("Cost Plus Entry Created");
        //mg.en, 11-10-11: M29565
      END;

      //db, 04-10-04: hide not relevant columns
      FieldsVisible := NOT lvMark; //**4PS.djnieuwenhuizen.n RTC 05-07-2011

      "Quantity InvoicedVisible" := (NOT lvMark);
      "Expected Receipt DateVisible" := (NOT lvMark);
      "Purchase ActionVisible" := (NOT lvMark);
      "Purchase PhaseVisible" := (NOT lvMark);
      "Location CodeVisible" := (NOT lvMark);
      "Line AmountVisible" := (NOT lvMark);
      "Amount (LCY)Visible" := (NOT lvMark);
      "Balance Incl. VATVisible" := lvMark;
      "Balance Excl. VATVisible" := lvMark;

      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE CopyLines@1210190004();
    VAR
      PurchaseLine@1100525000 : Record 39;
    BEGIN
      //PurchaseLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(PurchaseLine);
      CopyMgt.SetSelectionObligation(g_table, g_code1, g_code2, g_code3, g_code4);
      CopyMgt.CopyPurchObligations(PurchaseLine);
      CurrPage.CLOSE;
    END;

    PROCEDURE SetSelection@1100485000(l_table@1100485003 : Integer;l_code1@1100485004 : Code[20];l_code2@1100485000 : Code[20];l_code3@1100485001 : Code[20];l_code4@1100485002 : Code[20]);
    BEGIN
      g_table := l_table;
      g_code1 := l_code1;
      g_code2 := l_code2;
      g_code3 := l_code3;
      g_code4 := l_code4;
    END;

    PROCEDURE CalculateBalances@1100485090();
    VAR
      lvPurchLineRec@1100485000 : Record 39;
      lvProj@1100485003 : Code[20];
      lvServOrder@1100485002 : Code[20];
      lvServContr@1100485001 : Code[20];
    BEGIN
      IF (NOT "Balance Incl. VATVisible") AND NOT (NOT "Balance Excl. VATVisible") THEN
        EXIT;

      lvProj := gProj;
      lvServOrder := gServOrder;
      lvServContr := gServContr;

      lvPurchLineRec.SETRANGE("Document Type", "Document Type");
      lvPurchLineRec.SETRANGE("Document No.", "Document No.");
      IF (lvProj <> '') THEN BEGIN
        lvPurchLineRec.SETFILTER("Job No.", '<>%1', lvProj);
        IF NOT lvPurchLineRec.FINDFIRST THEN
          lvProj := '';
        lvPurchLineRec.SETRANGE("Job No.");  //* Reset filter
      END;
      IF (lvServOrder <> '') THEN BEGIN
        lvPurchLineRec.SETFILTER("Service Order No.", '<>%1', lvServOrder);
        IF NOT lvPurchLineRec.FINDFIRST THEN
          lvServOrder := '';
        lvPurchLineRec.SETRANGE("Service Order No.");  //* Reset filter
      END;
      IF (lvServContr <> '') THEN BEGIN
        lvPurchLineRec.SETFILTER("Service Contract No.", lvServContr);
        IF NOT lvPurchLineRec.FINDFIRST THEN
          lvServContr := '';
        lvPurchLineRec.SETRANGE("Service Contract No.");  //* Reset filter
      END;

      IF (lvProj = '') AND (lvServOrder = '') AND (lvServContr = '') THEN
        CALCFIELDS("Balance Incl. VAT", "Balance Excl. VAT")
      ELSE BEGIN
        "Balance Incl. VAT" := 0;
        "Balance Excl. VAT" := 0;
        lvPurchLineRec.RESET;
        lvPurchLineRec.SETRANGE("Document Type", "Document Type");
        lvPurchLineRec.SETRANGE("Document No.", "Document No.");
        IF lvProj <> '' THEN
          lvPurchLineRec.SETRANGE("Job No.", lvProj);
        IF lvServContr <> '' THEN
          lvPurchLineRec.SETRANGE("Service Contract No.", lvServContr);
        IF lvServOrder <> '' THEN
          lvPurchLineRec.SETRANGE("Service Order No.", lvServOrder);
        IF lvPurchLineRec.FINDSET THEN BEGIN
          REPEAT
            "Balance Incl. VAT" := "Balance Incl. VAT" + lvPurchLineRec."Amount Including VAT";
            "Balance Excl. VAT" := "Balance Excl. VAT" + lvPurchLineRec.Amount;
          UNTIL lvPurchLineRec.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE DrilldownBalances@1100485001();
    VAR
      lvPurchLineRec@1100485000 : Record 39;
    BEGIN
      lvPurchLineRec.SETRANGE("Document Type", "Document Type");
      lvPurchLineRec.SETRANGE("Document No.", "Document No.");
      IF gProj <> '' THEN
        lvPurchLineRec.SETRANGE("Job No.", gProj);
      IF gServContr <> '' THEN
        lvPurchLineRec.SETRANGE("Service Contract No.", gServContr);
      IF gServOrder <> '' THEN
        lvPurchLineRec.SETRANGE("Service Order No.", gServOrder);
      PAGE.RUNMODAL(0, lvPurchLineRec);
    END;

    PROCEDURE DetermineBackOrderQuantity@1100485002();
    BEGIN
      BackOrderQuantity := Quantity - "Qty. to Receive" - "Quantity Received";
      IF BackOrderQuantity < 0 THEN
        BackOrderQuantity := 0;
      IF BackOrderQuantity = 0 THEN
        "Expected Back Order Date" := 0D;
    END;

    PROCEDURE EditLineDetails@1210190008();
    VAR
      PurchaseLineDetail@1210190000 : Record 11020660;
    BEGIN
      //**4PS  //kzwerver, 110606, n, #27784

      PurchaseLineDetail.ShowCard(PurchaseLineDetail."Line Type"::"Purchase Order",
        PurchaseLineDetail."Record Type"::Project, "Job No.", PurchaseLineExtension."Yard No.",
        PurchaseLineExtension."System No.", "Entity Type", PurchaseLineExtension."Entity No.", '', "Document No.", "Line No.",
        TRUE);
    END;

    BEGIN
    END.
  }
}

