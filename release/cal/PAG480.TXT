OBJECT Page 480 Edit Dimension Set Entries
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00,4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Edit Dimension Set Entries;
               NOR=Rediger dimensjonssettposter;
               SVE=Redigera dimensionsupps„ttningstrans.];
    LinksAllowed=No;
    SourceTable=Table480;
    PageType=List;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 DimSetID := GETRANGEMIN("Dimension Set ID");
                 DimMgt.GetDimensionSet(Rec,DimSetID);
                 IF FormCaption <> '' THEN
                   CurrPage.CAPTION := FormCaption;
               END;

    OnClosePage=VAR
                  DimensionSetEntry@1100285500 : TEMPORARY Record 480;
                BEGIN
                  //>>IME171
                  DimensionSetEntry.RESET;
                  DimensionSetEntry.DELETEALL;
                  IF FINDSET THEN
                  REPEAT
                    DimensionSetEntry := Rec;
                    DimensionSetEntry.INSERT;
                  UNTIL NEXT=0;

                  IF DimensionSetEntry.FINDSET THEN
                  REPEAT
                    Rec.GET(DimensionSetEntry."Dimension Set ID",DimensionSetEntry."Dimension Code");
                    AddExtendDimSetEntry(Rec,ReceivingCompany);
                  UNTIL DimensionSetEntry.NEXT=0;
                  //<<IME171
                  DimSetID := DimMgt.GetDimensionSetID(Rec);
                END;

    OnAfterGetRecord=BEGIN
                       SetCompany(ReceivingCompany); //**4PS n RC2013
                     END;

    OnNewRecord=BEGIN
                  "Company Filter" := ReceivingCompany; //**4PS n RC2013
                END;

    OnInsertRecord=BEGIN
                     SetCompany(ReceivingCompany); //**4PS n RC2013
                   END;

    OnModifyRecord=BEGIN
                     //>>IME171
                     MODIFY;
                     AddExtendDimSetEntry(Rec,ReceivingCompany);
                     //<<IME171
                   END;

    OnAfterGetCurrRecord=BEGIN
                           SetCompany(ReceivingCompany); //**4PS n RC2013
                         END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension.;
                           NOR=Angir dimensjonen.;
                           SVE=Anger dimensionen.];
                ApplicationArea=#Dimensions;
                SourceExpr="Dimension Code";
                Editable="Dimension Value Code" = '' }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the descriptive name of the Dimension Code field.;
                           NOR=Angir det beskrivende navnet for feltet Dimensjonskode.;
                           SVE=Anger det beskrivande namnet p† f„ltet Dimensionskod.];
                ApplicationArea=#Dimensions;
                SourceExpr="Dimension Name";
                Visible=FALSE }

    { 9   ;2   ;Field     ;
                Name=DimensionValueCode;
                ToolTipML=[ENU=Specifies the dimension value.;
                           NOR=Angir dimensjonsverdien.;
                           SVE=Anger dimensionsv„rdet.];
                ApplicationArea=#Dimensions;
                SourceExpr="Dimension Value Code";
                OnValidate=BEGIN
                             CheckDimensionAuthorisation(TableID); //**4PS.n
                           END;

                OnLookup=BEGIN
                           LookupDimensionValueCode; //**4PS.n
                           CheckDimensionAuthorisation(TableID); //**4PS.n
                         END;
                          }

    { 11  ;2   ;Field     ;
                CaptionML=[ENU=Dimension Value Name;
                           SVE=Dimensionsv„rdesnamn];
                ToolTipML=[ENU=Specifies the descriptive name of the Dimension Value Code field.;
                           NOR=Angir det beskrivende navnet for feltet Dimensjonsverdikode.;
                           SVE=Anger det beskrivande namnet p† f„ltet Dimensionsv„rdekod.];
                ApplicationArea=#Dimensions;
                SourceExpr=GetDimensionValueName;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      DimMgt@1004 : Codeunit 408;
      DimSetID@1000 : Integer;
      FormCaption@1005 : Text[250];
      ReceivingCompany@1100525000 : Text[80];
      TableID@1100525001 : Integer;

    [External]
    PROCEDURE GetDimensionID@2() : Integer;
    BEGIN
      EXIT(DimSetID);
    END;

    [External]
    PROCEDURE SetFormCaption@3(NewFormCaption@1000 : Text[250]);
    BEGIN
      FormCaption := COPYSTR(NewFormCaption + ' - ' + CurrPage.CAPTION,1,MAXSTRLEN(FormCaption));
    END;

    PROCEDURE SetCompany@1100525000(Company@1100525000 : Text[80]);
    BEGIN
      //**4PS
      ReceivingCompany := Company;
      Rec.SetCompany(ReceivingCompany); //C019894
      DimMgt.SetCompany(ReceivingCompany);
    END;

    PROCEDURE SetTableID@1100525001(NewTableID@1100525000 : Integer);
    BEGIN
      //**4PS
      TableID := NewTableID;
    END;

    PROCEDURE GetDimensionValueName@1100525002() DimensionValueName : Text[50];
    VAR
      DimVal@1100525000 : Record 349;
    BEGIN
      //**4PS n RC2013
      IF "Company Filter" = '' THEN BEGIN
        CALCFIELDS("Dimension Value Name");
        DimensionValueName := "Dimension Value Name";
      END ELSE BEGIN
        DimVal.CHANGECOMPANY( "Company Filter");
        IF NOT DimVal.GET("Dimension Code","Dimension Value Code") THEN
          CLEAR(DimVal);
        DimensionValueName := DimVal.Name;
      END;
    END;

    LOCAL PROCEDURE AddExtendDimSetEntry@1100285006(VAR DimSetEntry@1100285000 : Record 480;ReceivingCompany@1100285004 : Text[80]);
    VAR
      DimValChain@1100285003 : Record 11128020;
      TargetDimCode@1100285002 : Code[20];
      TargetDimValue@1100285001 : Code[20];
    BEGIN
      //>>IME171
      IF ReceivingCompany <> '' THEN
        DimValChain.CHANGECOMPANY(ReceivingCompany);

      IF NOT DimValChain.GET(DimSetEntry."Dimension Code",DimSetEntry."Dimension Value Code") THEN
        EXIT;
      TargetDimCode  := DimValChain."Next Dimension Code";
      TargetDimValue := DimValChain."Next Dimension Value Code";
      IF TargetDimCode = '' THEN EXIT;

      DimSetEntry."Dimension Code" := TargetDimCode;
      DimSetEntry."Dimension Value Code" := TargetDimValue;
        IF NOT DimSetEntry.INSERT THEN BEGIN
          IF DimSetEntry.GET(DimSetEntry."Dimension Set ID",TargetDimCode) THEN BEGIN
            DimSetEntry."Dimension Value Code" := TargetDimValue;
            DimSetEntry.MODIFY;
          END;
        END;

      WHILE DimValChain.GET(TargetDimCode,TargetDimValue) DO BEGIN
        TargetDimCode  := DimValChain."Next Dimension Code";
        TargetDimValue := DimValChain."Next Dimension Value Code";
        IF TargetDimCode = '' THEN EXIT;

        DimSetEntry."Dimension Code" := TargetDimCode;
        DimSetEntry."Dimension Value Code" := TargetDimValue;
        IF NOT DimSetEntry.INSERT THEN BEGIN
          IF DimSetEntry.GET(DimSetEntry."Dimension Set ID",TargetDimCode) THEN BEGIN
            DimSetEntry."Dimension Value Code" := TargetDimValue;
            DimSetEntry.MODIFY;
          END;
        END;

      END;
      //<<IME171
    END;

    BEGIN
    {
      140702 ITERO.DL IME171 Dimension set entries not complete
    }
    END.
  }
}

