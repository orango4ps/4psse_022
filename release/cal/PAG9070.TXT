OBJECT Page 9070 Accounting Services Activities
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Accounting Services;
               NOR=Regnskapstjenester;
               SVE=Redovisningstj„nster];
    SourceTable=Table9070;
    PageType=CardPart;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 RESET;
                 IF NOT GET THEN BEGIN
                   INIT;
                   INSERT;
                 END;

                 SETRANGE("User ID Filter",USERID);

                 HasCamera := CameraProvider.IsAvailable;
                 IF HasCamera THEN
                   CameraProvider := CameraProvider.Create;
               END;

  }
  CONTROLS
  {
    { 7   ;    ;Container ;
                ContainerType=ContentArea }

    { 4   ;1   ;Group     ;
                CaptionML=[ENU=Documents;
                           NOR=Dokumenter;
                           SVE=Dokument];
                GroupType=CueGroup }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies incoming documents that are assigned to you.;
                           NOR=Angir innkommende dokumenter som er tilordnet til deg.;
                           SVE=Anger inkommande dokument tilldelade till dig.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="My Incoming Documents" }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies sales invoices that are not posted or only partially posted.;
                           NOR=Angir salgsfakturaer som ikke har blitt bokf›rt eller bare delvis bokf›rt.;
                           SVE=Anger f”rs„ljningsfakturor som „nnu inte har bokf”rts eller bara delvis bokf”rts.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ongoing Sales Invoices";
                DrillDownPageID=Sales Invoice List }

    { 8   ;1   ;Group     ;
                CaptionML=[ENU=Camera;
                           NOR=Kamera;
                           SVE=Kamera];
                Visible=HasCamera;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 6       ;    ;Action    ;
                                  Name=CreateIncomingDocumentFromCamera;
                                  CaptionML=[ENU=Create Incoming Doc. from Camera;
                                             NOR=Opprett inng†ende dokument fra kamera;
                                             SVE=Skapa inkommande dokument fr†n kamera];
                                  ToolTipML=[ENU=Specifies if you want to create an incoming document, by taking a photo of the document with your mobile device camera. The photo will be attached to the new document.;
                                             NOR=Angir om du vil opprette et innkommende dokument ved † ta et bilde av dokumentet med mobilkameraet. Bildet blir lagt ved i det nye dokumentet.;
                                             SVE=Anger att du vill skapa ett inkommande dokument genom att ta ett foto av dokumentet med din mobilkamera. Fotot bifogas till det nya dokumentet.];
                                  ApplicationArea=#Basic,#Suite;
                                  Image=TileCamera;
                                  OnAction=VAR
                                             CameraOptions@1000 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraOptions";
                                           BEGIN
                                             IF NOT HasCamera THEN
                                               EXIT;

                                             CameraOptions := CameraOptions.CameraOptions;
                                             CameraOptions.Quality := 100; // 100%
                                             CameraProvider.RequestPictureAsync(CameraOptions);
                                           END;
                                            }
                }
                 }

    { 2   ;1   ;Group     ;
                CaptionML=[ENU=Approvals;
                           NOR=Godkjenninger;
                           SVE=Godk„nnanden];
                GroupType=CueGroup }

    { 1   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies requests for certain accounting activities that you must approve for other users before they can proceed.;
                           NOR=Angir foresp›rsler for bestemte regnskapsoppgaver som du m† godkjenne for andre brukere f›r de kan fortsette.;
                           SVE=Anger beg„randen om vissa redovisningsaktiviteter som du m†ste godk„nna f”r andra anv„ndare innan de kan forts„tta.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Requests to Approve" }

    { 10  ;1   ;Group     ;
                CaptionML=[ENU=My User Tasks;
                           NOR=Mine brukeroppgaver;
                           SVE=Mina anv„ndaruppgifter];
                GroupType=CueGroup }

    { 9   ;2   ;Field     ;
                CaptionML=[ENU=Pending User Tasks;
                           NOR=Ventende brukeroppgaver;
                           SVE=V„ntande anv„ndaruppgifter];
                ToolTipML=[ENU=Specifies the number of pending tasks that are assigned to you or to a group that you are a member of.;
                           NOR=Angir antall ventende oppgaver som er tilordnet til deg eller til en gruppe du er medlem av.;
                           SVE=Anger antalet v„ntande uppgifter som har tilldelats dig eller till en grupp som du tillh”r.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=UserTaskManagement.GetMyPendingUserTasksCount;
                OnDrillDown=VAR
                              UserTaskList@1000 : Page 1170;
                            BEGIN
                              UserTaskList.SetPageToShowMyPendingUserTasks;
                              UserTaskList.RUN;
                            END;

                Image=Checklist }

  }
  CODE
  {
    VAR
      UserTaskManagement@1910 : Codeunit 1174;
      CameraProvider@1001 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraProvider" WITHEVENTS RUNONCLIENT;
      HasCamera@1000 : Boolean;

    EVENT CameraProvider@1001::PictureAvailable@10(PictureName@1001 : Text;PictureFilePath@1000 : Text);
    VAR
      IncomingDocument@1002 : Record 130;
    BEGIN
      IncomingDocument.CreateIncomingDocumentFromServerFile(PictureName,PictureFilePath);
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

