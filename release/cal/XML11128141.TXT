OBJECT XMLport 11128141 Imp. Vendor -> Contact SE
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Imp. Vendor -> Contact;
               SVE=Imp. leverant”r -> Kontakt];
    DefaultFieldsValidation=No;
    Format/Evaluate=C/SIDE Format/Evaluate;
    PreserveWhiteSpace=Yes;
    OnInitXMLport=VAR
                    lvVendorTemplateRec@1100525000 : Record 11020240;
                  BEGIN
                    XMLNo := 11128141;
                    MainTableID := 23;

                    IF lvVendorTemplateRec.FIND('-') THEN
                      IF lvVendorTemplateRec.COUNT = 1 THEN
                        VendorTemplateCde := lvVendorTemplateRec.Code;
                  END;

    OnPreXMLport=VAR
                   FileManagement@1100525001 : Codeunit 419;
                 BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   IF VendorTemplateCde = '' THEN
                     ERROR(Text1000,VendorTemplateRec.TABLECAPTION);

                   ConvMgt.CheckComCde(CreateNewNosBln,MainTableID,CommentCde);

                   VendorSetUpRec.GET;
                   VendorSetUpRec.TESTFIELD("Vendor Nos.");
                   ContactSetupRec.GET;
                   ContactSetupRec.TESTFIELD("Contact Nos.");
                   ContactSetupRec.TESTFIELD("Bus. Rel. Code for Vendors");

                   ConvMgt.DeleteConComment(XMLNo);
                   ConvMgt.CreateConComment(XMLNo,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XMLNo,'Start');
                 END;

    OnPostXMLport=BEGIN
                    IF NOT RunIsImportRunBln THEN
                      currXMLport.BREAK;

                    ConvMgt.CreateConComment(XMLNo,'Stop');
                    ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldDelimiter=<">;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{7B539476-C20A-46BC-A552-62FED55766AD}];  ;Root                ;Element ;Text     }

    { [{A667E51D-CE85-4A0D-946E-DE2CCC52ED51}];1 ;Vendor              ;Element ;Table   ;
                                                  SourceTable=Table23;
                                                  SourceTableView=SORTING(Field1);
                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 lvInteger@1100285000 : Integer;
                                                                               BEGIN
                                                                                 StripData;
                                                                                 IF A = '' THEN
                                                                                   currXMLport.SKIP;

                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR(Vendor);

                                                                                 WITH Vendor DO BEGIN
                                                                                   // INSERT(TRUE) not possible, due to 'Use Template' Question.
                                                                                   IF CreateNewNosBln THEN
                                                                                     NoSerieMgt.InitSeries(VendorSetUpRec."Vendor Nos.",VendorSetUpRec."Vendor Nos.",0D,"No.","No. Series")
                                                                                   ELSE
                                                                                     "No." := A;

                                                                                   IF Z <> '' THEN
                                                                                     "No." := Z;

                                                                                   INSERT;
                                                                                   IF CreateNewNosBln THEN
                                                                                     ConvMgt.FillComment(CommentRec."Table Name"::Vendor,"No.",CommentCde,A);

                                                                                   VendorTemplateRec.GET(VendorTemplateCde);                          // Copy from Template
                                                                                   CreateVendorFromTemplate(VendorTemplateRec);

                                                                                   VALIDATE("Telex No.",A);

                                                                                   IF B <> '' THEN BEGIN
                                                                                     VALIDATE(Name,B);
                                                                                     VALIDATE("Name 2",C);
                                                                                   END ELSE
                                                                                     VALIDATE(Name,C);

                                                                                   IF X <> '' THEN
                                                                                     VALIDATE("Search Name",X);

                                                                                   IF O <> D THEN BEGIN
                                                                                     Address := O;
                                                                                     "Address 2" := W;
                                                                                     "Post Code" := P;
                                                                                     City := ConvMgt.PostCodePresent(P);
                                                                                     IF City = '' THEN
                                                                                       City := Q;
                                                                                     IF R <> '' THEN
                                                                                       VALIDATE("Country/Region Code",R);
                                                                                   END ELSE BEGIN
                                                                                     Address := D;
                                                                                     "Address 2" := V;
                                                                                     "Post Code" := E;
                                                                                     City := ConvMgt.PostCodePresent(E);
                                                                                     IF City = '' THEN
                                                                                       City := F;
                                                                                     IF G <> '' THEN
                                                                                       VALIDATE("Country/Region Code",G);
                                                                                   END;

                                                                                   "Phone No." := H;

                                                                                   "Fax No." := I;
                                                                                   "E-Mail" := S;
                                                                                   "Home Page" := N;
                                                                                   "Language Code" := Y;

                                                                                   IF L <> '' THEN
                                                                                     VALIDATE("Payment Terms Code",L);
                                                                                   "VAT Registration No." := M;

                                                                                   MODIFY(TRUE);

                                                                                   // Add Bank Accounts

                                                                                   IF (J <> '') OR (T <>'') OR (K<>'') THEN BEGIN
                                                                                     ConvMgt.AddVendorBankAccount("No.",'1',T,FALSE,'','','',J,K);
                                                                                   END;

                                                                                   {
                                                                                   IF (T <> '') THEN BEGIN
                                                                                     ConvMgt.AddVendorBankAccount("No.",'G','',FALSE,'','','',T,AA);
                                                                                     VALIDATE("Bank Account Code B Payments",'G');
                                                                                     VALIDATE(Subcontractor,TRUE);
                                                                                   END;
                                                                                   }
                                                                                   IF AB <> '' THEN
                                                                                     VALIDATE("VAT Prod. Posting Group", AB);

                                                                                   IF AC <> '' THEN
                                                                                     VALIDATE("Vendor Posting Group", AC);

                                                                                   IF AJ <> '' THEN
                                                                                     VALIDATE("VAT Bus. Posting Group", AJ);

                                                                                   IF AK <> '' THEN
                                                                                     VALIDATE("Gen. Bus. Posting Group", AK);


                                                                                   IF AD <> '' THEN
                                                                                     VALIDATE("Currency Code", AD);

                                                                                   lvInteger := 0;
                                                                                   IF AE <> '' THEN BEGIN
                                                                                     EVALUATE(lvInteger, AE);
                                                                                     VALIDATE(Priority, lvInteger);
                                                                                   END;

                                                                                   lvInteger := 0;
                                                                                   IF AG <> '' THEN BEGIN
                                                                                     EVALUATE(lvInteger, AG);
                                                                                     IF lvInteger = 1 THEN
                                                                                       VALIDATE("Not Check Bankgiro",TRUE);
                                                                                   END;

                                                                                   VALIDATE("COC Registration No.",U);
                                                                                 //  VALIDATE("Code for Bank of Sweden",AL);
                                                                                 //  IF AF <> '' THEN BEGIN
                                                                                 //    CASE AF OF
                                                                                 //      '1' : VALIDATE("LB Giro Type", "LB Giro Type"::"1");
                                                                                 //      '2' : VALIDATE("LB Giro Type", "LB Giro Type"::"2");
                                                                                 //      '3' : VALIDATE("LB Giro Type", "LB Giro Type"::"3");
                                                                                 //      '4' : VALIDATE("LB Giro Type", "LB Giro Type"::"4");
                                                                                 //      '5' : VALIDATE("LB Giro Type", "LB Giro Type"::"5");
                                                                                 //    END;
                                                                                 //  END;

                                                                                 //  IF AH <> '' THEN
                                                                                 //    VALIDATE("Bank Giro No.", AH);
                                                                                 //
                                                                                 //  IF AI <> '' THEN
                                                                                 //    VALIDATE("Plus Giro No.", AI);

                                                                                   MODIFY(TRUE);

                                                                                   UpdateContFromVend.OnInsert(Vendor);

                                                                                   IF O <> D THEN
                                                                                     ConvMgt.AddContactVisitAdres(ConvMgt.GetContactNoFromVendNo(Vendor."No."),D,V,E,F,G);
                                                                                 END;
                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{3AC77EC7-9326-4B76-BA5F-EA1F70D4DA67}];2 ;A                   ;Element ;Text    ;
                                                  Width=20 }

    { [{1B889F9B-B9E2-4749-96B0-D22BA1117049}];2 ;B                   ;Element ;Text    ;
                                                  Width=50 }

    { [{D76B46B3-243B-4FF7-8D1D-C7B64CCFA492}];2 ;C                   ;Element ;Text    ;
                                                  Width=50 }

    { [{11AAC24C-6612-4FE6-9973-FE5EF2EF2C43}];2 ;D                   ;Element ;Text    ;
                                                  Width=50 }

    { [{F0633544-507F-4C5E-A35B-A0DD95F11E63}];2 ;E                   ;Element ;Text    ;
                                                  Width=50 }

    { [{98E7308F-19D5-4AF6-89FB-48DB78E52124}];2 ;F                   ;Element ;Text    ;
                                                  Width=50 }

    { [{23B2F6EB-78F9-48FB-BC70-858F6A53A74C}];2 ;G                   ;Element ;Text    ;
                                                  Width=50 }

    { [{007CC416-7129-43EA-90B0-193FFE5FCA68}];2 ;H                   ;Element ;Text    ;
                                                  Width=50 }

    { [{8F9BF873-E7E2-450A-B9C5-33703DAFE6BE}];2 ;I                   ;Element ;Text    ;
                                                  Width=50 }

    { [{F0890EEC-4257-4AFD-B88A-7442730D3214}];2 ;J                   ;Element ;Text    ;
                                                  Width=50 }

    { [{659442CF-3753-4298-9149-BE36CD412787}];2 ;K                   ;Element ;Text    ;
                                                  Width=50 }

    { [{575C2CA6-4C40-4A7F-A50C-2A6AD26B4DC0}];2 ;L                   ;Element ;Text    ;
                                                  Width=50 }

    { [{C820A9D4-97D5-4DE5-B9B8-37016A0E8AD8}];2 ;M                   ;Element ;Text    ;
                                                  Width=50 }

    { [{71D99CDA-4BD2-4C4F-864A-4C58FF70202A}];2 ;N                   ;Element ;Text    ;
                                                  Width=50 }

    { [{2B61BAAC-2E0C-4942-8622-A3E310053AB1}];2 ;O                   ;Element ;Text    ;
                                                  Width=50 }

    { [{3777C5E2-F12B-426C-AF23-B2EB58C9D28C}];2 ;P                   ;Element ;Text    ;
                                                  Width=50 }

    { [{C31814CC-4F91-40D0-8202-7EA73300B7CA}];2 ;Q                   ;Element ;Text    ;
                                                  Width=50 }

    { [{54BB1E52-B53E-46D1-AC10-187FE5FC9413}];2 ;R                   ;Element ;Text    ;
                                                  Width=50 }

    { [{559F7890-98B5-44AC-B8D0-4225985414EE}];2 ;S                   ;Element ;Text    ;
                                                  Width=50 }

    { [{52F80224-8385-4275-9252-089504C757C6}];2 ;T                   ;Element ;Text    ;
                                                  Width=50 }

    { [{7D5AB79B-1354-42F5-B0BF-EA78828242A4}];2 ;U                   ;Element ;Text    ;
                                                  Width=50 }

    { [{3A8572F2-F29E-4E8B-8D81-33FF6EC48E73}];2 ;V                   ;Element ;Text    ;
                                                  Width=50 }

    { [{96433DC6-587A-4B40-B669-D8B5D9DA5DD2}];2 ;W                   ;Element ;Text    ;
                                                  Width=50 }

    { [{6ECE75FC-21B3-43EC-BC39-188C11254530}];2 ;X                   ;Element ;Text    ;
                                                  Width=50 }

    { [{824BD878-9CED-4104-9B3C-D99F7D421EC4}];2 ;Y                   ;Element ;Text    ;
                                                  Width=50 }

    { [{DC612DD2-1120-4363-9BFD-3068054040DF}];2 ;Z                   ;Element ;Text    ;
                                                  Width=50 }

    { [{BDB5EE7E-DDBD-4EC8-8477-78465967AA66}];2 ;AA                  ;Element ;Text     }

    { [{EFFE672B-65B3-4E15-AF4C-C159B60E6716}];2 ;AB                  ;Element ;Text     }

    { [{FA5D4627-7927-4173-8A16-26F0A2664BC6}];2 ;AC                  ;Element ;Text     }

    { [{17F6E1E8-E3CE-4469-B844-D20B756BE828}];2 ;AD                  ;Element ;Text     }

    { [{DCB1D7A9-45CC-4926-8BD5-982ACBA3AAC9}];2 ;AE                  ;Element ;Text     }

    { [{07965C2D-734A-48DC-8601-E5176A46D069}];2 ;AF                  ;Element ;Text     }

    { [{5FADC354-55D9-439B-84F1-FED4900A2FD4}];2 ;AG                  ;Element ;Text     }

    { [{92FB19D1-4777-4CA7-8215-4E385AE77D02}];2 ;AH                  ;Element ;Text     }

    { [{0424F2B4-1E15-4620-91E1-78952320541A}];2 ;AI                  ;Element ;Text     }

    { [{744A4783-11BA-48E6-83C5-A66E9C993130}];2 ;AJ                  ;Element ;Text     }

    { [{0C9C9E35-809A-499D-B5AD-56FD3C85DCC9}];2 ;AK                  ;Element ;Text     }

    { [{88F27A7F-2243-4C6D-A529-760A37697B6A}];2 ;AL                  ;Element ;Text     }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                   CreateNewNosBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100409000;;Container;
                  Name=Imp. Vendor -> Contact;
                  ContainerType=ContentArea }

      { 1100409001;1;Group  ;
                  CaptionML=[ENU=Options;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525000;2;Field  ;
                  CaptionML=[ENU=Create new Vendor codes;
                             SVE=Skapa nya leverant”rskoder];
                  SourceExpr=CreateNewNosBln;
                  OnValidate=BEGIN
                               IF NOT CreateNewNosBln THEN
                                 CommentCde := '';
                             END;
                              }

      { 1100525001;2;Field  ;
                  CaptionML=[ENU=Comment Code for storing old Vendor No.;
                             SVE=Kommentarskod f”r lagring av gammalt leverant”rsnr];
                  SourceExpr=CommentCde;
                  TableRelation="Comment Code" }

      { 1100525002;2;Field  ;
                  CaptionML=[ENU=Vendor Template;
                             SVE=Leverant”rsmall];
                  SourceExpr=VendorTemplateCde;
                  TableRelation="Vendor Template" }

    }
  }
  CODE
  {
    VAR
      "// GENERAL"@1100525047 : Integer;
      CommentRec@1100525046 : Record 97;
      ConvMgt@1100525045 : Codeunit 11020212;
      NoSerieMgt@1100525044 : Codeunit 396;
      XMLNo@1100525042 : Integer;
      MainTableID@1100525041 : Integer;
      CreateNewNosBln@1100525040 : Boolean;
      ImpLineCounter@1100525039 : Integer;
      CommentCde@1100525038 : Code[10];
      ConversionFileFormat@1100525037 : Record 11020691;
      RunIsImportRunBln@1100525036 : Boolean;
      "//"@1100525035 : Integer;
      "// THIS DATAPORT"@1100525034 : Integer;
      VendorSetUpRec@1100525033 : Record 312;
      ContactSetupRec@1100525032 : Record 5079;
      BankAccountRec@1100525031 : Record 288;
      VendorTemplateRec@1100525003 : Record 11020240;
      VendorTemplateCde@1100525002 : Code[20];
      UpdateContFromVend@1100525001 : Codeunit 5057;
      Text1000@1100525005 : TextConst 'ENU=Fill %1;SVE=Fyll i %1';
      Text001@1100525004 : TextConst 'ENU=Blocked Account;SVE=Sp„rrat konto';

    PROCEDURE FillConversionXMLPortFields@1100409004();
    VAR
      ConversionXMLPort@1100409000 : Record 11020640;
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      ConversionXMLPort."Main Table ID" := MainTableID;
      ConversionXMLPort."Page ID" := 27;
      ConversionXMLPort.MODIFY;
    END;

    PROCEDURE StripData@1100485001();
    BEGIN
      A := DELCHR(A,'<>',' ');
      B := DELCHR(B,'<>',' ');
      C := DELCHR(C,'<>',' ');
      D := DELCHR(D,'<>',' ');
      E := DELCHR(E,'<>',' ');
      F := DELCHR(F,'<>',' ');
      G := DELCHR(G,'<>',' ');
      H := DELCHR(H,'<>',' ');
      I := DELCHR(I,'<>',' ');
      J := DELCHR(J,'<>',' ');
      M := DELCHR(M,'<>',' ');
      Z := DELCHR(Z,'<>',' ');
      AA := DELCHR(AA,'<>',' ');
      AB := DELCHR(AB,'<>',' ');
      AC := DELCHR(AC,'<>',' ');
      AD := DELCHR(AD,'<>',' ');
      AE := DELCHR(AE,'<>',' ');
      AF := DELCHR(AF,'<>',' ');
      AG := DELCHR(AG,'<>',' ');
      AH := DELCHR(AH,'<>',' ');
      AG := DELCHR(AG,'<>',' ');
      AJ := DELCHR(AJ,'<>',' ');
      AK := DELCHR(AK,'<>',' ');
      AL := DELCHR(AL,'<>',' ');
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    VAR
      VendorBankAccount@1100529900 : Record 288;
      Contact@1100529901 : Record 5050;
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,Vendor.FIELDNAME("No."),'Code20','OldOrNewTxt');
        InsertColumnLine(XMLNo,'B',MainTableID,Vendor.FIELDNAME(Name),'Text50','');
        InsertColumnLine(XMLNo,'C',MainTableID,Vendor.FIELDNAME("Name 2"),'Text50','');
        InsertColumnLine(XMLNo,'D',5050,Contact.FIELDNAME("Visit Address"),'Text50','');
        InsertColumnLine(XMLNo,'E',5050,Contact.FIELDNAME("Visit Address Post Code"),'Code20','');
        InsertColumnLine(XMLNo,'F',5050,Contact.FIELDNAME("Visit Address City"),'Text30','');
        InsertColumnLine(XMLNo,'G',5050,Contact.FIELDNAME("Visit Address Country/Region"),'Code10','');
        InsertColumnLine(XMLNo,'H',MainTableID,Vendor.FIELDNAME("Phone No."),'Text30','');
        InsertColumnLine(XMLNo,'I',MainTableID,Vendor.FIELDNAME("Fax No."),'Text30','');
        InsertColumnLine(XMLNo,'J',288,VendorBankAccount.FIELDNAME(VendorBankAccount.IBAN),'Text50','');
        InsertColumnLine(XMLNo,'K',288,VendorBankAccount.FIELDNAME(VendorBankAccount."SWIFT Code"),'Text50','');
        InsertColumnLine(XMLNo,'L',MainTableID,Vendor.FIELDNAME("Payment Terms Code"),'Code10','');
        InsertColumnLine(XMLNo,'M',MainTableID,Vendor.FIELDNAME("VAT Registration No."),'Text20','');
        InsertColumnLine(XMLNo,'N',MainTableID,Vendor.FIELDNAME("Home Page"),'Text80','');
        InsertColumnLine(XMLNo,'O',MainTableID,Vendor.FIELDNAME(Address),'Text50','');
        InsertColumnLine(XMLNo,'P',MainTableID,Vendor.FIELDNAME("Post Code"),'Code20','');
        InsertColumnLine(XMLNo,'Q',MainTableID,Vendor.FIELDNAME(City),'Text30','');
        InsertColumnLine(XMLNo,'R',MainTableID,Vendor.FIELDNAME("Country/Region Code"),'Code10','');
        InsertColumnLine(XMLNo,'S',MainTableID,Vendor.FIELDNAME("E-Mail"),'Text80','');
        InsertColumnLine(XMLNo,'T',288,VendorBankAccount.FIELDNAME(VendorBankAccount."Bank Account No."),'Text50','');
        InsertColumnLine(XMLNo,'U',MainTableID,Vendor.FIELDNAME("COC Registration No."),'Text20','');
        InsertColumnLine(XMLNo,'V',5050,Contact.FIELDNAME("Visit Address 2"),'Text50','');
        InsertColumnLine(XMLNo,'W',MainTableID,Vendor.FIELDNAME("Address 2"),'Text50','');
        InsertColumnLine(XMLNo,'X',MainTableID,Vendor.FIELDNAME("Search Name"),'Text50','');
        InsertColumnLine(XMLNo,'Y',MainTableID,Vendor.FIELDNAME("Language Code"),'Code10','');
        InsertColumnLine(XMLNo,'Z',MainTableID,Vendor.FIELDNAME("No."),'Code20','NewTxt');
        InsertColumnLine(XMLNo,'AA',288,VendorBankAccount.FIELDNAME(VendorBankAccount."SWIFT Code"),'Text50','Not in use');
        InsertColumnLine(XMLNo,'AB',MainTableID,Vendor.FIELDNAME("VAT Prod. Posting Group"),'Code10','');
        InsertColumnLine(XMLNo,'AC',MainTableID,Vendor.FIELDNAME("Vendor Posting Group"),'Code10','');
        InsertColumnLine(XMLNo,'AD',MainTableID,Vendor.FIELDNAME("Currency Code"),'Code10','');
        InsertColumnLine(XMLNo,'AE',MainTableID,Vendor.FIELDNAME(Priority),'Integer','');
      //  InsertColumnLine(XMLNo,'AF',MainTableID,Vendor.FIELDNAME("LB Giro Type"),'Option','1=BG Sweden,2=PG Sweden,3=BG Foreign,4=PG Foreign,5=SEPA');
      //  InsertColumnLine(XMLNo,'AG',MainTableID,Vendor.FIELDNAME("obsolete field"),'Integer','<emty>=No, [1]=Yes');
      //  InsertColumnLine(XMLNo,'AH',MainTableID,Vendor.FIELDNAME("Bank Giro No."),'Text30','');
      //  InsertColumnLine(XMLNo,'AI',MainTableID,Vendor.FIELDNAME("Plus Giro No."),'Text20','');
        InsertColumnLine(XMLNo,'AJ',MainTableID,Vendor.FIELDNAME("VAT Bus. Posting Group"),'Code10','');
        InsertColumnLine(XMLNo,'AK',MainTableID,Vendor.FIELDNAME("Gen. Bus. Posting Group"),'Code10','');
      //  InsertColumnLine(XMLNo,'AL',MainTableID,Vendor.FIELDNAME("Code for Bank of Sweden"),'Code3','');


      END;
    END;

    PROCEDURE ClearFields@1100529911();
    BEGIN
      CLEAR(BankAccountRec);
      CLEAR(Vendor);

      A := '';
      B := '';
      C := '';
      D := '';
      E := '';
      F := '';
      G := '';
      H := '';
      I := '';
      J := '';
      K := '';
      L := '';
      M := '';
      N := '';
      O := '';
      P := '';
      Q := '';
      R := '';
      S := '';
      T := '';
      U := '';
      V := '';
      W := '';
      X := '';
      Y := '';
      Z := '';
      AA := '';
      AB := '';
      AC := '';
      AD := '';
      AE := '';
      AF := '';
      AG := '';
      AH := '';
      AG := '';
      AJ := '';
      AK := '';
      AL := '';
    END;

    BEGIN
    {
      140415 ITERO.SB Added fields (AJ+AK)
    }
    END.
  }
}

