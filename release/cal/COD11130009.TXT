OBJECT Codeunit 11130009 Project Forecast Auto. Mgt
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE GetProjectForecastAutomationList@1100528800(IDateTo@1100528800 : Date;IDateFrom@1100528801 : Date;VAR TempProjectForecastListDS@1100528802 : TEMPORARY Record 11020579);
    VAR
      TempProjectForecastAutomationDS@1100528803 : TEMPORARY Record 11229896;
    BEGIN
      GetProjectForecastAutomationDS(IDateTo, IDateFrom, TempProjectForecastAutomationDS);

      IF TempProjectForecastAutomationDS.FINDSET THEN
        REPEAT
          GenerateProjectForcastAutomationLines(TempProjectForecastAutomationDS,TempProjectForecastListDS, IDateFrom, IDateTo);
        UNTIL TempProjectForecastAutomationDS.NEXT = 0;
    END;

    PROCEDURE GetProjectForecastAutomationDS@1100528801(IDateTo@1100528800 : Date;IDateFrom@1100528801 : Date;VAR TempProjectForecastAutomationDS@1100528802 : TEMPORARY Record 11229896);
    VAR
      ProjectForecastAutomation@1100528803 : Record 11229896;
    BEGIN
      ProjectForecastAutomation.SETRANGE(Enabled, TRUE);
      ProjectForecastAutomation.SETFILTER("First Forecast Date", '<=%1', IDateTo);
      ProjectForecastAutomation.SETFILTER("Last Forecast Date", '>=%1|%2', IDateFrom, 0D);
      IF ProjectForecastAutomation.FINDSET THEN
        REPEAT
          TempProjectForecastAutomationDS.INIT;
          TempProjectForecastAutomationDS.TRANSFERFIELDS(ProjectForecastAutomation);
          TempProjectForecastAutomationDS.INSERT;
        UNTIL ProjectForecastAutomation.NEXT = 0;
    END;

    PROCEDURE GenerateProjectForcastAutomationLines@1100528808(IProjectForecastAutomationDS@1100528800 : Record 11229896;VAR ProjectForecastListDS@1100528801 : Record 11020579;IDateFrom@1100528802 : Date;IDateTo@1100528803 : Date);
    VAR
      ForecastDate@1100528805 : Date;
      LastForecastDate@1100528804 : Date;
    BEGIN
      IF IProjectForecastAutomationDS."Last Forecast Date" = 0D THEN
        LastForecastDate := IDateTo
      ELSE
        LastForecastDate := IProjectForecastAutomationDS."Last Forecast Date";

      ForecastDate := 0D;
      ForecastDate := DetermineForecastDate(
                        IProjectForecastAutomationDS."First Forecast Date",
                        IDateFrom,
                        IProjectForecastAutomationDS.Frequency);
      REPEAT
        IF NOT ProjectForecastExists(IProjectForecastAutomationDS."Project No.",
                                ForecastDate) THEN BEGIN
          ProjectForecastListDS.INIT;
          ProjectForecastListDS."Key Code1" := IProjectForecastAutomationDS."Project No.";
          ProjectForecastListDS."Key Code2" := FORMAT(ForecastDate,0,9);
          ProjectForecastListDS.Date1 := ForecastDate;
          ProjectForecastListDS.INSERT;
        END;
          ForecastDate := CalculateNextForecastDate(ForecastDate, IProjectForecastAutomationDS.Frequency);
      UNTIL (ForecastDate >= LastForecastDate) OR
              (ForecastDate >= IDateTo);
    END;

    PROCEDURE DetermineForecastDate@1100528804(IFirstForecastDate@1100528801 : Date;IDateFrom@1100528800 : Date;IFrequency@1100528802 : DateFormula) : Date;
    BEGIN
      IF IDateFrom <= IFirstForecastDate THEN
        EXIT(IFirstForecastDate)
      ELSE
        EXIT(GetFirstForecastDateToGenerate(IDateFrom, IFirstForecastDate, IFrequency));
    END;

    PROCEDURE ProjectForecastExists@1100528803(IProject@1100528803 : Code[20];IForecastDate@1100528801 : Date) : Boolean;
    VAR
      ProjectForecastHeader@1100528802 : Record 11020630;
    BEGIN
      EXIT(ProjectForecastHeader.GET(IProject, IForecastDate));
    END;

    PROCEDURE CalculateNextForecastDate@1100528811(IForecastDate@1100528800 : Date;IFrequency@1100528801 : DateFormula) : Date;
    VAR
      DatetimeMgt@1100528802 : Codeunit 11020218;
      OFrequency@1100528803 : Text;
    BEGIN
      DatetimeMgt.TranslateDateFormula(IFrequency,OFrequency);
      EXIT(CALCDATE('+' + OFrequency, IForecastDate));
    END;

    PROCEDURE GetFirstForecastDateToGenerate@1100528812(IDateFrom@1100528800 : Date;IFirstForecastDate@1100528801 : Date;IFrequency@1100528802 : DateFormula) : Date;
    VAR
      ForecastDate@1100528803 : Date;
    BEGIN
      ForecastDate := IFirstForecastDate;
      REPEAT
        ForecastDate := CalculateNextForecastDate(ForecastDate, IFrequency);
      UNTIL ForecastDate >= IDateFrom;

      EXIT(ForecastDate);
    END;

    PROCEDURE CreateProjectForecast@1100528802(IProject@1100528801 : Code[20];IForecastDate@1100528802 : Date;VAR OProjectForecastHeader@1100528804 : Record 11020630);
    VAR
      ProjectForecastHeader@1100528803 : Record 11020630;
    BEGIN
      IF NOT ProjectForecastExists(IProject, IForecastDate) THEN BEGIN
        ProjectForecastHeader.INIT;
        ProjectForecastHeader."Project No." := IProject;
        ProjectForecastHeader."Forecast Date" := IForecastDate;
        ProjectForecastHeader.INSERT;
        OProjectForecastHeader := ProjectForecastHeader;
      END;
    END;

    BEGIN
    END.
  }
}

