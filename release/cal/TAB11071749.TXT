OBJECT Table 11071749 Base Service Inspection Option
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Base Inspection Line Code");
               TESTFIELD(Code);

               "Last Date Modified" := TODAY;

               ExchangeMOB('I', COMPANYNAME);

               CentralDataManagement.EditBaseServiceInspOption(Rec, 1, xRec);
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;

               ExchangeMOB('M', COMPANYNAME);

               CentralDataManagement.EditBaseServiceInspOption(Rec, 2, xRec);
             END;

    OnDelete=VAR
               BaseServiceInspectionOption@1100528600 : Record 11071749;
             BEGIN
               BaseServiceInspectionOption.SETRANGE("Base Inspection Line Code", "Base Inspection Line Code");
               BaseServiceInspectionOption.SETFILTER(Code, '<>%1', Code);
               IF BaseServiceInspectionOption.ISEMPTY THEN
                 IF IsInspectionLineMandatory THEN
                   ERROR(Text000);

               ExchangeMOB('D', COMPANYNAME);

               CentralDataManagement.EditBaseServiceInspOption(Rec, 4, xRec);
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;

               IF NOT SkipCentralDataMgtInOnRename THEN BEGIN
                 ExchangeMOB('R', COMPANYNAME);
                 CentralDataManagement.EditBaseServiceInspOption(Rec, 3, xRec);
               END;
             END;

    CaptionML=[ENU=Base Service Inspection Option;
               NOR=Alternativ for basisserviceinspeksjon;
               SVE=Basserviceinspektionsalternativ];
    LookupPageID=Page11125256;
    DrillDownPageID=Page11125256;
  }
  FIELDS
  {
    { 10  ;   ;Base Inspection Line Code;Code10   ;TableRelation="Base Service Inspection Line";
                                                   CaptionML=[ENU=Base Inspection Line Code;
                                                              NOR=Radkode for basisinspeksjon;
                                                              SVE=Basinspektionsradskod] }
    { 20  ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod] }
    { 30  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 40  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              NOR=Endret den;
                                                              SVE=Uppdateringsdatum] }
  }
  KEYS
  {
    {    ;Base Inspection Line Code,Code          ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CentralDataManagement@1100525000 : Codeunit 11012010;
      Text000@1100528600 : TextConst 'ENU=Inspection Line is mandatory, removing not allowed';
      SkipCentralDataMgtInOnRename@1100528700 : Boolean;

    PROCEDURE IsInspectionLineMandatory@1100528600() : Boolean;
    VAR
      BaseServiceInspectionLine@1100528603 : Record 11071748;
      ServiceInspectionLine@1100528600 : Record 11071751;
      ServiceOrderInspectionLine@1100528601 : Record 11071753;
    BEGIN
      IF BaseServiceInspectionLine.GET("Base Inspection Line Code") THEN
        IF BaseServiceInspectionLine.Mandatory THEN
          EXIT(TRUE);
      ServiceInspectionLine.SETRANGE(Type, ServiceInspectionLine.Type::Line);
      ServiceInspectionLine.SETRANGE("Inspection Code", "Base Inspection Line Code");
      ServiceInspectionLine.SETRANGE(Mandatory, TRUE);
      IF NOT ServiceInspectionLine.ISEMPTY THEN
        EXIT(TRUE);
      ServiceOrderInspectionLine.SETRANGE(Type, ServiceOrderInspectionLine.Type::Line);
      ServiceOrderInspectionLine.SETRANGE("Inspection Code", "Base Inspection Line Code");
      ServiceOrderInspectionLine.SETRANGE(Mandatory, TRUE);
      IF NOT ServiceOrderInspectionLine.ISEMPTY THEN
        EXIT(TRUE);
    END;

    PROCEDURE ExchangeMOB@1100528703(Mode@1100528702 : Code[1];Company@1100528703 : Text[50]);
    VAR
      JobsSetup@1100528700 : Record 315;
      DeletedDataMgtMobile@1100528701 : Codeunit 11012440;
    BEGIN
      IF NOT JobsSetup.IsFSAActiveInCompany(Company) THEN
        EXIT;

      IF (Mode = 'D') THEN
        DeletedDataMgtMobile.StoreDeletedBaseServiceInspectionOption(Rec, Company);

      IF (Mode = 'R') THEN
        IF (xRec."Base Inspection Line Code" = '') AND (xRec.Code = '') THEN
          DeletedDataMgtMobile.StoreDeletedBaseServiceInspectionOption(Rec, Company)
        ELSE
          DeletedDataMgtMobile.StoreDeletedBaseServiceInspectionOption(xRec, Company);
    END;

    PROCEDURE SetSkipCentralDataMgtInOnRename@1100528700(Value@1100528700 : Boolean);
    BEGIN
      SkipCentralDataMgtInOnRename := Value;
    END;

    BEGIN
    END.
  }
}

