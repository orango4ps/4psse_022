OBJECT Table 5600 Fixed Asset
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 11072088=r;
    DataCaptionFields=No.,Description;
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 FASetup.GET;
                 FASetup.TESTFIELD("Fixed Asset Nos.");
                 NoSeriesMgt.InitSeries(FASetup."Fixed Asset Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               "Main Asset/Component" := "Main Asset/Component"::" ";
               "Component of Main Asset" := '';

               DimMgt.UpdateDefaultDim(
                 DATABASE::"Fixed Asset","No.",
                 "Global Dimension 1 Code","Global Dimension 2 Code");
               //**4PS Generated Code. Do Not Change.sn05
               DPA_OnInsert;
               //**4PS Generated Code.en05
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
               //**4PS.sn
               IF ("Plant Type" <> '') OR ("Plant No." <> '') THEN
                 PlantNoRec.GET("Plant Type","Plant No.");
               UpdatePlantVehicleAndLeaseCntr();  //DP00331
               //**4PS.en
             END;

    OnDelete=VAR
               FADeprBook@1000 : Record 5612;
             BEGIN
               LOCKTABLE;
               MainAssetComp.LOCKTABLE;
               InsCoverageLedgEntry.LOCKTABLE;
               IF "Main Asset/Component" = "Main Asset/Component"::"Main Asset" THEN
                 ERROR(Text000);
               FAMoveEntries.MoveFAInsuranceEntries("No.");
               FADeprBook.SETRANGE("FA No.","No.");
               FADeprBook.SETRANGE("Main Depr. Book", FALSE);  //**4PS.n  Main must be deleted last, so first other depr. books
               FADeprBook.DELETEALL(TRUE);
               //**4PS.sn
               IF FADeprBook.ISEMPTY THEN BEGIN
                 FADeprBook.SETRANGE("Main Depr. Book", TRUE);  //* Main must be deleted last, so if other depr. books are deleted
                 FADeprBook.DELETEALL(TRUE);
               END;
               FADeprBook.RESET;  // Reset filter
               FADeprBook.SETRANGE("FA No.","No.");
               //**4PS.en
               IF NOT FADeprBook.ISEMPTY THEN
                 ERROR(Text001,TABLECAPTION,"No.");

               MainAssetComp.SETCURRENTKEY("FA No.");
               MainAssetComp.SETRANGE("FA No.","No.");
               MainAssetComp.DELETEALL;
               IF "Main Asset/Component" = "Main Asset/Component"::Component THEN BEGIN
                 MainAssetComp.RESET;
                 MainAssetComp.SETRANGE("Main Asset No.","Component of Main Asset");
                 MainAssetComp.SETRANGE("FA No.",'');
                 MainAssetComp.DELETEALL;
                 MainAssetComp.SETRANGE("FA No.");
                 IF NOT MainAssetComp.FINDFIRST THEN BEGIN
                   FA.GET("Component of Main Asset");
                   FA."Main Asset/Component" := FA."Main Asset/Component"::" ";
                   FA."Component of Main Asset" := '';
                   FA.MODIFY;
                 END;
               END;

               MaintenanceRegistration.SETRANGE("FA No.","No.");
               MaintenanceRegistration.DELETEALL;

               CommentLine.SETRANGE("Table Name",CommentLine."Table Name"::"Fixed Asset");
               CommentLine.SETRANGE("No.","No.");
               CommentLine.DELETEALL;

               DimMgt.DeleteDefaultDim(DATABASE::"Fixed Asset","No.");
             END;

    OnRename=VAR
               SalesLine@1000 : Record 37;
               PurchaseLine@1001 : Record 39;
             BEGIN
               SalesLine.RenameNo(SalesLine.Type::"Fixed Asset",xRec."No.","No.");
               PurchaseLine.RenameNo(PurchaseLine.Type::"Fixed Asset",xRec."No.","No.");
               DimMgt.RenameDefaultDim(DATABASE::"Fixed Asset",xRec."No.","No.");

               "Last Date Modified" := TODAY;
             END;

    CaptionML=[ENU=Fixed Asset;
               NOR=Aktiva;
               SVE=Anl„ggningstillg†ngar];
    LookupPageID=Page5601;
    DrillDownPageID=Page5601;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Description;
                                                   OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  FASetup.GET;
                                                                  NoSeriesMgt.TestManual(FASetup."Fixed Asset Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 2   ;   ;Description         ;Text100       ;OnValidate=VAR
                                                                FADeprBook@1000 : Record 5612;
                                                              BEGIN
                                                                IF ("Search Description" = UPPERCASE(xRec.Description)) OR ("Search Description" = '') THEN
                                                                  "Search Description" := Description;
                                                                IF Description <> xRec.Description THEN BEGIN
                                                                  FADeprBook.SETCURRENTKEY("FA No.");
                                                                  FADeprBook.SETRANGE("FA No.","No.");
                                                                  FADeprBook.MODIFYALL(Description,Description);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 3   ;   ;Search Description  ;Code100       ;CaptionML=[ENU=Search Description;
                                                              NOR=S›kebeskrivelse;
                                                              SVE=S”kbeskrivning] }
    { 4   ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2] }
    { 5   ;   ;FA Class Code       ;Code10        ;TableRelation="FA Class";
                                                   OnValidate=VAR
                                                                FASubclass@1000 : Record 5608;
                                                              BEGIN
                                                                IF "FA Subclass Code" = '' THEN
                                                                  EXIT;

                                                                FASubclass.GET("FA Subclass Code");
                                                                IF NOT (FASubclass."FA Class Code" IN ['',"FA Class Code"]) THEN
                                                                  "FA Subclass Code" := '';
                                                              END;

                                                   CaptionML=[ENU=FA Class Code;
                                                              NOR=Aktivaklassekode;
                                                              SVE=Anl. indelningskod] }
    { 6   ;   ;FA Subclass Code    ;Code10        ;TableRelation="FA Subclass";
                                                   OnValidate=VAR
                                                                FASubclass@1000 : Record 5608;
                                                              BEGIN
                                                                IF "FA Subclass Code" = '' THEN
                                                                  EXIT;

                                                                FASubclass.GET("FA Subclass Code");
                                                                IF "FA Class Code" <> '' THEN BEGIN
                                                                  IF FASubclass."FA Class Code" IN ['',"FA Class Code"] THEN
                                                                    EXIT;

                                                                  ERROR(UnexpctedSubclassErr);
                                                                END;

                                                                VALIDATE("FA Class Code",FASubclass."FA Class Code");
                                                              END;

                                                   CaptionML=[ENU=FA Subclass Code;
                                                              NOR=Aktivaunderklassekode;
                                                              SVE=Anl. underindelningskod] }
    { 7   ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Global dimensjon 1 - kode;
                                                              SVE=Global dimension 1 kod];
                                                   CaptionClass='1,1,1' }
    { 8   ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Global dimensjon 2 - kode;
                                                              SVE=Global dimension 2 kod];
                                                   CaptionClass='1,1,2' }
    { 9   ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              NOR=Lokasjonskode;
                                                              SVE=Lagerst„llekod] }
    { 10  ;   ;FA Location Code    ;Code10        ;TableRelation="FA Location";
                                                   CaptionML=[ENU=FA Location Code;
                                                              NOR=Aktivalokasjonskode;
                                                              SVE=Anl. lagerst„llekod] }
    { 11  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Vendor No.;
                                                              NOR=Leverand›rnr.;
                                                              SVE=Leverant”rsnr] }
    { 12  ;   ;Main Asset/Component;Option        ;CaptionML=[ENU=Main Asset/Component;
                                                              NOR=Hovedaktiva/komponent];
                                                   OptionCaptionML=[ENU=" ,Main Asset,Component";
                                                                    NOR=" ,Hovedaktiva,Komponent"];
                                                   OptionString=[ ,Main Asset,Component];
                                                   Editable=No }
    { 13  ;   ;Component of Main Asset;Code20     ;TableRelation="Fixed Asset";
                                                   CaptionML=[ENU=Component of Main Asset;
                                                              NOR=Komponent til hovedaktiva];
                                                   Editable=No }
    { 14  ;   ;Budgeted Asset      ;Boolean       ;OnValidate=BEGIN
                                                                FAMoveEntries.ChangeBudget(Rec);
                                                              END;

                                                   CaptionML=[ENU=Budgeted Asset;
                                                              NOR=Budsjettert aktiva] }
    { 15  ;   ;Warranty Date       ;Date          ;CaptionML=[ENU=Warranty Date;
                                                              NOR=Garantidato;
                                                              SVE=Garantidatum] }
    { 16  ;   ;Responsible Employee;Code20        ;TableRelation=Employee;
                                                   CaptionML=[ENU=Responsible Employee;
                                                              NOR=Ansvarlig ansatt;
                                                              SVE=Ansvarig] }
    { 17  ;   ;Serial No.          ;Text50        ;CaptionML=[ENU=Serial No.;
                                                              NOR=Serienr.;
                                                              SVE=Serienr] }
    { 18  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              NOR=Endret den;
                                                              SVE=Uppdateringsdatum];
                                                   Editable=No }
    { 19  ;   ;Insured             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Ins. Coverage Ledger Entry" WHERE (FA No.=FIELD(No.),
                                                                                                         Disposed FA=CONST(No)));
                                                   CaptionML=[ENU=Insured;
                                                              NOR=Forsikret];
                                                   Editable=No }
    { 20  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE (Table Name=CONST(Fixed Asset),
                                                                                           No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              NOR=Merknad;
                                                              SVE=Kommentar];
                                                   Editable=No }
    { 21  ;   ;Blocked             ;Boolean       ;CaptionML=[ENU=Blocked;
                                                              NOR=Sperret;
                                                              SVE=Sp„rrad] }
    { 22  ;   ;Picture             ;BLOB          ;ObsoleteState=Pending;
                                                   ObsoleteReason=Replaced by Image field;
                                                   CaptionML=[ENU=Picture;
                                                              NOR=Foto;
                                                              SVE=Bild];
                                                   SubType=Bitmap }
    { 23  ;   ;Maintenance Vendor No.;Code20      ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Maintenance Vendor No.;
                                                              NOR=Vedlikeholdsleverand›rnr.;
                                                              SVE=Underh†ll leverant”rsnr] }
    { 24  ;   ;Under Maintenance   ;Boolean       ;CaptionML=[ENU=Under Maintenance;
                                                              NOR=Under vedlikehold] }
    { 25  ;   ;Next Service Date   ;Date          ;CaptionML=[ENU=Next Service Date;
                                                              NOR=Neste servicedato;
                                                              SVE=N„sta servicedatum] }
    { 26  ;   ;Inactive            ;Boolean       ;CaptionML=[ENU=Inactive;
                                                              NOR=Inaktiv;
                                                              SVE=Inaktiv] }
    { 27  ;   ;FA Posting Date Filter;Date        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=FA Posting Date Filter;
                                                              NOR=Datofilter for aktivabokf.] }
    { 28  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              NOR=Nr.serie;
                                                              SVE=Nr-serie];
                                                   Editable=No }
    { 29  ;   ;FA Posting Group    ;Code20        ;TableRelation="FA Posting Group";
                                                   CaptionML=[ENU=FA Posting Group;
                                                              NOR=Bokf›ringsgruppe - aktiva;
                                                              SVE=Anl. bokf”ringsmall] }
    { 30  ;   ;Acquired            ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("FA Depreciation Book" WHERE (FA No.=FIELD(No.),
                                                                                                   Acquisition Date=FILTER(<>'')));
                                                   CaptionML=[ENU=Acquired;
                                                              NOR=Anskaffet] }
    { 140 ;   ;Image               ;Media         ;CaptionML=[ENU=Image;
                                                              NOR=Bilde;
                                                              SVE=Bild] }
    { 11012550;;Plant Type         ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number"."Plant Type" WHERE (Fixed Asset=FIELD(No.)));
                                                   CaptionML=[ENU=Plant Type;
                                                              SVE=Maskintyp];
                                                   Description=4PS FA;
                                                   Editable=No }
    { 11012560;;Plant No.          ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".No. WHERE (Fixed Asset=FIELD(No.)));
                                                   CaptionML=[ENU=Plant No.;
                                                              SVE=Maskinnr];
                                                   Description=4PS FA;
                                                   Editable=No }
    { 11012565;;Plant No. Description;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".Description WHERE (Plant Type=FIELD(Plant Type),
                                                                                                        No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Plant No. Description;
                                                              SVE=Maskinnr, beskrivning];
                                                   Description=4PS FA;
                                                   Editable=No }
    { 11012570;;Original Asset     ;Code20        ;TableRelation="Fixed Asset";
                                                   CaptionML=ENU=Original Asset;
                                                   Description=4PS FA;
                                                   Editable=No }
    { 11012571;;Plant Type (Org. Asset);Code20    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number"."Plant Type" WHERE (Fixed Asset=FIELD(Original Asset),
                                                                                                         Fixed Asset Created=CONST(Yes)));
                                                   CaptionML=ENU=Plant Type (Org. Asset);
                                                   Description=4PS FA Note: Only relevant if Original Asset is filled (use function voor indirect CALCFIELDS);
                                                   Editable=No }
    { 11012572;;Plant No. (Org. Asset);Code10     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".No. WHERE (Fixed Asset=FIELD(Original Asset),
                                                                                                Fixed Asset Created=CONST(Yes)));
                                                   CaptionML=ENU=Plant No. (Org. Asset);
                                                   Description=4PS FA Idem;
                                                   Editable=No }
    { 11012573;;Plant Type (Main Asset);Code20    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number"."Plant Type" WHERE (Fixed Asset=FIELD(Component of Main Asset),
                                                                                                         Fixed Asset Created=CONST(Yes)));
                                                   CaptionML=ENU=Plant Type (Main Asset);
                                                   Description=4PS Note: Only relevant if Component of Main Asset (use function voor indirect CALCFIELDS);
                                                   Editable=No }
    { 11012574;;Plant No. (Main Asset);Code10     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".No. WHERE (Fixed Asset=FIELD(Component of Main Asset),
                                                                                                Fixed Asset Created=CONST(Yes)));
                                                   CaptionML=ENU=Plant No. (Main Asset);
                                                   Description=4PS Idem;
                                                   Editable=No }
    { 11012575;;Date part 1        ;Date          ;CaptionML=ENU=Date part 1;
                                                   Description=4PS FA }
    { 11012800;;Service Object No. ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Service-Object.No. WHERE (Fixed Asset No.=FIELD(No.)));
                                                   CaptionML=[ENU=Service Object No.;
                                                              SVE=Serviceobjektnr];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Search Description                       }
    {    ;FA Class Code                            }
    {    ;FA Subclass Code                         }
    {    ;Component of Main Asset,Main Asset/Component }
    {    ;FA Location Code                         }
    {    ;Global Dimension 1 Code                  }
    {    ;Global Dimension 2 Code                  }
    {    ;FA Posting Group                         }
    {    ;Description                              }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Description,FA Class Code            }
    { 2   ;Brick               ;No.,Description,FA Class Code,Image      }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=A main asset cannot be deleted.;NOR=Kan ikke slette et hovedaktiva.';
      Text001@1001 : TextConst 'ENU=You cannot delete %1 %2 because it has associated depreciation books.;NOR=Du kan ikke slette %1 %2 fordi den har tilknyttede avskrivningstabl†er.';
      CommentLine@1002 : Record 97;
      FA@1003 : Record 5600;
      FASetup@1004 : Record 5603;
      MaintenanceRegistration@1005 : Record 11072081;
      MainAssetComp@1007 : Record 5640;
      InsCoverageLedgEntry@1008 : Record 11072088;
      PlantNoRec@1210190000 : Record 11012552;
      FAMoveEntries@1009 : Codeunit 5623;
      NoSeriesMgt@1010 : Codeunit 396;
      DimMgt@1011 : Codeunit 408;
      UnexpctedSubclassErr@1006 : TextConst 'ENU=This fixed asset subclass belongs to a different fixed asset class.;NOR=Underklassen for aktivaet tilh›rer en annen aktivaklasse.';
      DontAskAgainActionTxt@1018 : TextConst 'ENU=Don''t ask again;NOR=Ikke sp›r meg igjen;SVE=Fr†ga inte igen';
      NotificationNameTxt@1016 : TextConst 'ENU=Fixed Asset Acquisition Wizard;NOR=Veiviser for anskaffelse av aktivum';
      NotificationDescriptionTxt@1015 : TextConst 'ENU=Notify when ready to acquire the fixed asset.;NOR=Gi beskjed n†r du er klar til † anskaffe aktivumet.';
      ReadyToAcquireMsg@1014 : TextConst 'ENU=You are ready to acquire the fixed asset.;NOR=Du kan n† anskaffe aktivaet.';
      AcquireActionTxt@1013 : TextConst 'ENU=Acquire;NOR=Anskaff;SVE=Anskaffa';
      Text11012000@1210190003 : TextConst 'ENU=Generated FA No. becomes too long. Adjust the Plant Code.';
      Text11012001@1210190004 : TextConst 'ENU=Can not generate a FA No.';
      SkipCreateDefFADeprBooks@1100530000 : Boolean;
      DPA_Management@1100000999 : Codeunit 11012783;
      Text11012002@1100530001 : TextConst 'ENU=%1 can not be determined, %2 ''%3'' has no %4.';
      Text11012003@1100530002 : TextConst 'ENU=No %1 setup for %2 ''%3''.';
      Text11012004@1210190001 : TextConst 'ENU="Note: \%1 ''%2'' of %3 ''%4'' is unequal to %1 ''%5'' of linked %6 ''%7-%8''.\ \If desired, you should also adjust this on  the %6. "';
      SkipModify@1100528400 : Boolean;
      Text11012005@1100529000 : TextConst 'ENU=%1 ''%2'' is already linked to %3 ''%4''';
      SpecialFAPostingGroup@1100409000 : Code[10];

    [External]
    PROCEDURE AssistEdit@2(OldFA@1000 : Record 5600) : Boolean;
    BEGIN
      WITH FA DO BEGIN
        FA := Rec;
        FASetup.GET;
        FASetup.TESTFIELD("Fixed Asset Nos.");
        IF NoSeriesMgt.SelectSeries(FASetup."Fixed Asset Nos.",OldFA."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := FA;
          EXIT(TRUE);
        END;
      END;
    END;

    [External]
    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::"Fixed Asset","No.",FieldNumber,ShortcutDimCode);
      IF NOT SkipModify THEN //**4PS.n
        MODIFY(TRUE);
    END;

    [External]
    PROCEDURE FieldsForAcquitionInGeneralGroupAreCompleted@30() : Boolean;
    BEGIN
      EXIT(("No." <> '') AND (Description <> '') AND ("FA Subclass Code" <> ''));
    END;

    [External]
    PROCEDURE ShowAcquireWizardNotification@3();
    VAR
      NotificationLifecycleMgt@1002 : Codeunit 1511;
      FixedAssetAcquisitionWizard@1001 : Codeunit 5550;
      FAAcquireWizardNotification@1000 : Notification;
    BEGIN
      IF IsNotificationEnabledForCurrentUser THEN BEGIN
        FAAcquireWizardNotification.ID(GetNotificationID);
        FAAcquireWizardNotification.MESSAGE(ReadyToAcquireMsg);
        FAAcquireWizardNotification.SCOPE(NOTIFICATIONSCOPE::LocalScope);
        FAAcquireWizardNotification.ADDACTION(
          AcquireActionTxt,CODEUNIT::"Fixed Asset Acquisition Wizard",'RunAcquisitionWizardFromNotification');
        FAAcquireWizardNotification.ADDACTION(
          DontAskAgainActionTxt,CODEUNIT::"Fixed Asset Acquisition Wizard",'HideNotificationForCurrentUser');
        FAAcquireWizardNotification.SETDATA(FixedAssetAcquisitionWizard.GetNotificationFANoDataItemID,"No.");
        NotificationLifecycleMgt.SendNotification(FAAcquireWizardNotification,RECORDID);
      END
    END;

    [External]
    PROCEDURE GetNotificationID@4() : GUID;
    BEGIN
      EXIT('3d5c2f86-cfb9-4407-97c3-9df74c7696c9');
    END;

    [External]
    PROCEDURE SetNotificationDefaultState@10();
    VAR
      MyNotifications@1000 : Record 1518;
    BEGIN
      MyNotifications.InsertDefault(GetNotificationID,NotificationNameTxt,NotificationDescriptionTxt,TRUE);
    END;

    LOCAL PROCEDURE IsNotificationEnabledForCurrentUser@1() : Boolean;
    VAR
      MyNotifications@1000 : Record 1518;
    BEGIN
      EXIT(MyNotifications.IsEnabled(GetNotificationID));
    END;

    [External]
    PROCEDURE DontNotifyCurrentUserAgain@6();
    VAR
      MyNotifications@1000 : Record 1518;
    BEGIN
      IF NOT MyNotifications.Disable(GetNotificationID) THEN
        MyNotifications.InsertDefault(GetNotificationID,NotificationNameTxt,NotificationDescriptionTxt,FALSE);
    END;

    [External]
    PROCEDURE RecallNotificationForCurrentUser@9();
    VAR
      NotificationLifecycleMgt@1000 : Codeunit 1511;
    BEGIN
      NotificationLifecycleMgt.RecallNotificationsForRecord(RECORDID,FALSE);
    END;

    PROCEDURE GetQuantity@1210190000(iCodDepreciationBook@1210190001 : Code[10];iBlnAcquisitionOnly@1210190002 : Boolean) : Decimal;
    VAR
      lRecFA_LedgerEntry@1210190004 : Record 5601;
      lRecFA_DeprBook@1100485006 : Record 5612;
      lDecQuantity@1210190005 : Decimal;
    BEGIN
      //**4PS
      // Calculate quantity in stock as the sum of acquisition-quantities (+/-), always zero in case of disposal
      // Only fill iCodDepreciationBook before calling if a quanty for a special depr. book is needed. In all
      // other cases this field must be empty, then the main depr. book will be determined here, and the
      // quantity of thie main depr. book will be returned.

      IF iCodDepreciationBook = '' THEN
        iCodDepreciationBook := GetFA_MainDeprBook("No.",FALSE);
      IF iCodDepreciationBook = '' THEN
        EXIT(0.0);
      lRecFA_LedgerEntry.SETCURRENTKEY("FA No.","Depreciation Book Code","FA Posting Category","FA Posting Type");
      lRecFA_LedgerEntry.SETRANGE("FA No.", "No.");
      //IF (iCodDepreciationBook = '') THEN BEGIN
      //  lRecFA_Setup.GET;
      //  iCodDepreciationBook := lRecFA_Setup."Default Depr. Book";
      //END;
      lRecFA_LedgerEntry.SETRANGE("Depreciation Book Code", iCodDepreciationBook);

      // Quantity is zero in case of disposal
      lRecFA_LedgerEntry.SETRANGE("FA Posting Category", lRecFA_LedgerEntry."FA Posting Category"::Disposal);
      //IF (lRecFA_LedgerEntry.COUNT > 0) THEN
      IF lRecFA_LedgerEntry.FIND('-') THEN
        EXIT(0.0);
      IF lRecFA_DeprBook.GET("No.",iCodDepreciationBook) THEN
        IF lRecFA_DeprBook."Disposal Date" > 0D THEN
          EXIT(0.0);

      lRecFA_LedgerEntry.SETRANGE("FA Posting Category");  //* Reset filter
      lRecFA_LedgerEntry.SETRANGE("FA Posting Type", lRecFA_LedgerEntry."FA Posting Type"::"Acquisition Cost");
      lRecFA_LedgerEntry.SETFILTER(Quantity, '<>%1', 0.0);
      IF (iBlnAcquisitionOnly) THEN
        lRecFA_LedgerEntry.SETRANGE(lRecFA_LedgerEntry."Reclassification Entry", FALSE);
      IF (lRecFA_LedgerEntry.FIND('-')) THEN
        REPEAT
          lDecQuantity += lRecFA_LedgerEntry.Quantity;
        UNTIL (lRecFA_LedgerEntry.NEXT = 0);
      EXIT(lDecQuantity);
    END;

    PROCEDURE GetFA_MainDeprBook@1100530002(FA_No@1100530001 : Code[20];ErrorMode@1100530002 : Boolean) : Code[10];
    VAR
      FA_DeprBook@1100530000 : Record 5612;
    BEGIN
      //**4PS
      IF FA_No <> '' THEN BEGIN
        FA_DeprBook.SETRANGE("FA No.", FA_No);
        FA_DeprBook.SETRANGE("Main Depr. Book", TRUE);
        IF FA_DeprBook.FINDFIRST THEN
          EXIT(FA_DeprBook."Depreciation Book Code");
        FA_DeprBook.SETRANGE("Main Depr. Book");  // Reset filter
        IF FA_DeprBook.FINDFIRST THEN BEGIN
          IF FA_DeprBook.NEXT = 0 THEN  // If there is only one
            EXIT(FA_DeprBook."Depreciation Book Code");
        END;

        IF ErrorMode THEN BEGIN
          FA_DeprBook.RESET;
          FA_DeprBook.SETRANGE("FA No.", FA_No);
          IF FA_DeprBook.ISEMPTY THEN
            ERROR(Text11012002, FA_DeprBook.FIELDCAPTION("Main Depr. Book"),
              FA_DeprBook.FIELDCAPTION("FA No."), FA_No, FA_DeprBook.TABLECAPTION)
          ELSE
            ERROR(Text11012003, FA_DeprBook.FIELDCAPTION("Main Depr. Book"), FA_DeprBook.FIELDCAPTION("FA No."), FA_No);
        END;
      END;
      EXIT('');
    END;

    PROCEDURE GetFA_Number@1210190001(iCodPlantType@1210190004 : Code[20];iCodPlantNo@1210190005 : Code[20]) : Code[20];
    VAR
      lRecFixedAsset@1210190000 : Record 5600;
      lIntNo@1210190002 : Integer;
      lCodFixedAsset@1210190001 : Code[30];
      lBlnDone@1210190003 : Boolean;
    BEGIN
      //**4PS
      // Create FA code based on plant type and plant number.

      IF ((iCodPlantType = '') OR (iCodPlantNo = '')) THEN
        ERROR(Text11012001);
      IF (STRLEN(STRSUBSTNO('%1-%2-%3', iCodPlantType, iCodPlantNo, 1)) > MAXSTRLEN(lRecFixedAsset."No.")) THEN
        ERROR(Text11012000);

      lIntNo := 0;
      REPEAT
        lIntNo += 1;
        lBlnDone := TRUE;
        lCodFixedAsset := STRSUBSTNO('%1-%2-%3', iCodPlantType, iCodPlantNo, lIntNo);
        IF (STRLEN(lCodFixedAsset) <= MAXSTRLEN(lRecFixedAsset."No.")) THEN
          lBlnDone := NOT(lRecFixedAsset.GET(lCodFixedAsset));
      UNTIL (lBlnDone);

      IF (STRLEN(lCodFixedAsset) > MAXSTRLEN(lRecFixedAsset."No.")) THEN
        ERROR(Text11012001);
      EXIT(lCodFixedAsset);
    END;

    PROCEDURE CreateDefaultFADeprBooks@1100530000();
    VAR
      DeprBook@1100530001 : Record 5611;
      FADeprBook@1100530002 : Record 5612;
      PlantDeprBook@1100530003 : Record 11012658;
      PlantTypeRec@1100530000 : Record 11012551;
      PlantNoRec@1100530004 : Record 11012552;
      DeprStartingDate@1100530006 : Date;
      NoOfDeprYears@1100530005 : Decimal;
      DefMainDeprBook@1100530007 : Code[10];
    BEGIN
      //**4PS
      //* Insert default 'FA Depreciation Books' for a new FA.
      IF "No." = '' THEN
        EXIT;
      FADeprBook.SETRANGE("FA No.", "No.");
      IF NOT FADeprBook.ISEMPTY THEN  //* Only if no Depr. Books present for FA
        EXIT;
      DeprStartingDate := 0D;
      NoOfDeprYears := 0;
      DefMainDeprBook := '';

      //* Prio 1: FA is linked to Plant and the Plant Type has default depreciation book(s).
      CALCFIELDS("Plant Type");
      IF "Plant Type" <> '' THEN BEGIN
        IF PlantTypeRec.GET("Plant Type") THEN
          NoOfDeprYears := PlantTypeRec."No. of Depreciation Years";
        CALCFIELDS("Plant No.");
        IF PlantNoRec.GET("Plant Type", "Plant No.") THEN BEGIN
          DeprStartingDate := PlantNoRec."Receipt Date";
          IF PlantNoRec."Values on Plant No. Level" THEN
            NoOfDeprYears := PlantNoRec."No. of Depreciation Years";
        END;
        //
        PlantDeprBook.SETRANGE("Plant Type", "Plant Type");
        IF PlantDeprBook.FINDFIRST THEN BEGIN
          PlantDeprBook.SETRANGE("Main Depr. Book", TRUE);
          PlantDeprBook.FINDFIRST;  //* Must exist, there must be a main depr. book
          DefMainDeprBook := PlantDeprBook."Depreciation Book Code";
          PlantDeprBook.SETRANGE("Main Depr. Book");  //* Reset filter
          IF PlantDeprBook.FINDSET THEN BEGIN
            REPEAT
              DeprBook.GET(PlantDeprBook."Depreciation Book Code");
              InsertFADeprBook(Rec, DeprBook, DeprStartingDate, NoOfDeprYears, DefMainDeprBook);
            UNTIL PlantDeprBook.NEXT = 0;
          END;
          EXIT;
        END;
      END;

      //* Prio 2: Standard Depreciation Books with 'Autom. Insert'.
      DefMainDeprBook := '';
      FASetup.GET;
      IF (FASetup."Default Depr. Book" <> '') THEN BEGIN
        DeprBook.RESET;
        DeprBook.SETRANGE("Autom. Insert for New FA", TRUE);
        DeprBook.SETRANGE(Code, FASetup."Default Depr. Book");
        IF DeprBook.FINDFIRST THEN
          DefMainDeprBook := FASetup."Default Depr. Book";
      END;
      IF DefMainDeprBook = '' THEN BEGIN
        DeprBook.RESET;
        DeprBook.SETRANGE("Autom. Insert for New FA", TRUE);
        IF DeprBook.FINDFIRST THEN BEGIN
          IF DeprBook.NEXT = 0 THEN  // If there is only one
            DefMainDeprBook := DeprBook.Code;
        END;
      END;
      DeprBook.RESET;
      DeprBook.SETRANGE("Autom. Insert for New FA", TRUE);
      IF DeprBook.FINDSET THEN BEGIN
        REPEAT
          InsertFADeprBook(Rec, DeprBook, DeprStartingDate, NoOfDeprYears, DefMainDeprBook);
        UNTIL DeprBook.NEXT = 0;
        EXIT;
      END;
    END;

    PROCEDURE CreateServObjectFADeprBook@1100529001(FA@1100529000 : Record 5600;DeprBookCode@1100529001 : Code[10];FAPostingGroup@1100409000 : Code[10];DeprStartingDate@1100529002 : Date;NoOfDeprYears@1100529003 : Decimal);
    VAR
      DeprBook@1100530001 : Record 5611;
      FADeprBook@1100529004 : Record 5612;
      DefMainDeprBook@1100530007 : Code[10];
    BEGIN
      //**4PS  DP00640
      IF (FA."No." = '') OR (DeprBookCode = '') THEN
        EXIT;
      FADeprBook.SETRANGE("FA No.", FA."No.");
      FADeprBook.SETRANGE("Depreciation Book Code", DeprBookCode);
      IF NOT FADeprBook.ISEMPTY THEN
        EXIT;
      DefMainDeprBook := '';
      FADeprBook.SETRANGE("Main Depr. Book", TRUE);
      IF FADeprBook.ISEMPTY THEN
      DefMainDeprBook := DeprBookCode;

      DeprBook.GET(DeprBookCode);
      SpecialFAPostingGroup := FAPostingGroup;
      InsertFADeprBook(FA, DeprBook, DeprStartingDate, NoOfDeprYears, DefMainDeprBook);
    END;

    LOCAL PROCEDURE InsertFADeprBook@1100530001(FA2@1100530000 : Record 5600;DeprBook@1100530001 : Record 5611;DeprStartingDate@1100530002 : Date;NoOfDeprYears@1100530003 : Decimal;DefMainDeprBook@1100530005 : Code[10]);
    VAR
      FADeprBook@1100530004 : Record 5612;
    BEGIN
      //**4PS
      FADeprBook.INIT;
      FADeprBook."FA No." := FA2."No.";
      IF SpecialFAPostingGroup <> '' THEN BEGIN
        FADeprBook.SetSpecialFAPostingGroup(SpecialFAPostingGroup);
        SpecialFAPostingGroup := '';
      END;
      FADeprBook.VALIDATE("Depreciation Book Code", DeprBook.Code);
      FADeprBook.INSERT(TRUE);
      FADeprBook."Main Depr. Book" := (DeprBook.Code = DefMainDeprBook);
      FADeprBook.VALIDATE("Depreciation Starting Date", DeprStartingDate);
      IF (NoOfDeprYears <> 0) AND (FADeprBook."Depreciation Starting Date" <> 0D) AND
         (NOT DeprBook."Fiscal Year 365 Days") AND FADeprBook.LinearMethod
      THEN
        FADeprBook.VALIDATE("No. of Depreciation Years", NoOfDeprYears);
      IF FADeprBook.UserDefinedMethod AND (FADeprBook."Depreciation Starting Date" <> 0D) THEN
        FADeprBook."First User-Defined Depr. Date" := FADeprBook."Depreciation Starting Date";
      FADeprBook.MODIFY(TRUE);
    END;

    PROCEDURE SetSkipCreateDefFADeprBooks@1100530003(SkipCreate@1100530000 : Boolean);
    BEGIN
      //**4PS
      SkipCreateDefFADeprBooks := SkipCreate;
    END;

    PROCEDURE GetSkipCreateDefFADeprBooks@1100529004() : Boolean;
    BEGIN
      //**4PS
      EXIT(SkipCreateDefFADeprBooks);
    END;

    PROCEDURE WarningDepartmentLinkedPlantNo@1210190004();
    VAR
      PlantNumber@1210190000 : Record 11012552;
    BEGIN
      //**4PS 19584
      CALCFIELDS("Plant Type", "Plant No.");
      IF ("Plant Type" = '') OR ("Plant No." = '') THEN
        EXIT;
      IF NOT PlantNumber.GET("Plant Type", "Plant No.") THEN
        EXIT;
      IF "Global Dimension 1 Code" <> PlantNumber."Department Code"THEN
        MESSAGE(Text11012004,
          PlantNumber.FIELDCAPTION("Department Code"), "Global Dimension 1 Code",
          PlantNumber.FIELDCAPTION("Fixed Asset"), "No.",
          PlantNumber."Department Code",
          FIELDCAPTION("Plant No."), "Plant Type", "Plant No.");
    END;

    PROCEDURE DPA_SetDefaultDpmtFromNoSeries@1100000995(xRecRef@1100525002 : RecordRef);
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      xRecRef.SETTABLE(xRec);
      DPA_Management.SetDepartmentCodeNoSeries(
        TABLENAME,
        "Global Dimension 1 Code",
        "No. Series",
        xRec."No. Series" );
    END;

    LOCAL PROCEDURE DPA_OnInsert@1100000991();
    VAR
      Dimension1Code@1100528400 : Code[20];
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      Dimension1Code :=
        DPA_Management.GetNoSeriesDepartmentCode(
          "No. Series",
          xRec."No. Series",
          DATABASE::"Fixed Asset");
      IF Dimension1Code <> '' THEN
        "Global Dimension 1 Code" := Dimension1Code;

      IF "Global Dimension 1 Code" <> '' THEN BEGIN
        SkipModify := TRUE;
        VALIDATE("Global Dimension 1 Code");
        SkipModify := FALSE;
      END;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100528500 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(5600) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 5600');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Fixed Asset", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    PROCEDURE UpdatePlantVehicleAndLeaseCntr@1100529000();
    VAR
      Vehicle@1100529000 : Record 11072667;
      LeaseContract@1100529001 : Record 11012540;
      ConstrType@1100529003 : Option;
    BEGIN
      //DP00331
      {
      CALCFIELDS("Plant Type", "Plant No.");
      IF ("Plant Type" = '') OR ("Plant No." = '') THEN
        EXIT;

      IF Vehicle.GET("Plant Type", "Plant No.") THEN BEGIN
        Vehicle."Licence Number" := "Registration No.";
        Vehicle.VIN := "Chassis No.";
        Vehicle.Brand := Brand;
        Vehicle.Model := "Type (MPB)";
        Vehicle.Color := Colour;
        Vehicle."Bodywork Type" := "Type of Vehicle";
        Vehicle."Fuel Type":= Fuel;
        CASE Construction OF
          Construction::Owned:
            ConstrType := Vehicle.Type::Ownership;
          Construction::Leased:
            ConstrType := Vehicle.Type::Lease;
          Construction::Hired:
            ConstrType := Vehicle.Type::Rent;
          ELSE
            ConstrType := -1;
        END;
        IF (ConstrType >= 0) AND (ConstrType <> Vehicle.Type) THEN
          Vehicle.VALIDATE(Type, ConstrType);
        Vehicle.Weight:= "Gross Vehicle Weight";
        Vehicle."Admission Date" := "Date part 1";
        Vehicle."Consumer Price (incl. VAT)" := "Catalog Value";
        Vehicle."BPM Amount" := "Gross Vehicle Tax";
        Vehicle.MODIFY(FALSE);  // False!

        LeaseContract.SETRANGE("Plant Type", "Plant Type");
        LeaseContract.SETRANGE("Plant No.", "Plant No.");
        IF LeaseContract.FINDLAST THEN BEGIN  //Only in last contract of vehicle
          LeaseContract."Lease Company" := "Lease Company";
          LeaseContract."Monthly Amount" := "Lease Amount";
          LeaseContract."Contract Start" := "Effective Date";
          LeaseContract."Contract End" := "Ending Date";
          LeaseContract.Duration := "Duration of Lease 2";
          LeaseContract."Kilometers per Year" := "Annual Kilometers";
          LeaseContract."Excess Kilometer" := "Charge per Excess Km";
          LeaseContract.MODIFY(FALSE);  // False!
        END;
      END;
      }
    END;

    PROCEDURE ServiceObjectDescription@1100529002() : Text[100];
    VAR
      ServObject@1100529000 : Record 11071691;
    BEGIN
      //DP00640
      CALCFIELDS("Service Object No.");
      IF "Service Object No." <> '' THEN BEGIN
        IF ServObject.GET("Service Object No.") THEN
          EXIT(ServObject.Description);
      END;
      EXIT('');
    END;

    PROCEDURE CheckLinkServObjectAllowed@1100529003(FixedAssetNo@1100529000 : Code[20];CurrServObjectNo@1100529001 : Code[20]);
    VAR
      FA@1100529002 : Record 5600;
    BEGIN
      //DP00640
      FA.GET(FixedAssetNo);
      FA.CALCFIELDS("Service Object No.");
      IF (FA."Service Object No." <> '') AND (FA."Service Object No." <> CurrServObjectNo) THEN
        ERROR(Text11012005, TABLECAPTION, FA."No.", FIELDCAPTION("Service Object No."), FA."Service Object No.");

      FA.CALCFIELDS("Plant Type", "Plant No.");
      IF FA."Plant No." <> '' THEN
        ERROR(Text11012005, TABLECAPTION, FA."No.", FIELDCAPTION("Plant No."), FA."Plant Type" + '-' + FA."Plant No.")
      ELSE BEGIN
        IF FA.CalcFields_PlantOrgAsset(FA, FA.FIELDNO("Plant No. (Org. Asset)")) <> '' THEN
          ERROR(Text11012005,
            TABLECAPTION, FA."No.", FIELDCAPTION("Plant No."), FA."Plant Type (Org. Asset)" + '-' + FA."Plant No. (Org. Asset)");
      END;
    END;

    PROCEDURE DrillDown_PlantOrgAsset@1100525006();
    VAR
      PlantNumber@1100525000 : Record 11012552;
    BEGIN
      //**4PS
      IF "Original Asset" = '' THEN
        EXIT;
      PlantNumber.SETCURRENTKEY("Fixed Asset");
      PlantNumber.SETRANGE("Fixed Asset", "Original Asset");
      PAGE.RUNMODAL(0, PlantNumber);
    END;

    PROCEDURE CalcFields_PlantOrgAsset@1100525002(VAR FA@1100525000 : Record 5600;RetFieldNo@1100525001 : Integer) : Code[20];
    BEGIN
      //**4PS
      // These flowfield must be determined (indirect) via this function.
      // Only relevant if Original Asset is filled (should not find Plant with Fixed Asset empty!).
      FA."Plant Type (Org. Asset)" := '';
      FA."Plant No. (Org. Asset)" := '';
      IF FA."Original Asset" <> '' THEN
        FA.CALCFIELDS("Plant Type (Org. Asset)", "Plant No. (Org. Asset)");

      CASE RetFieldNo OF
         FA.FIELDNO("Plant Type (Org. Asset)"):
           EXIT(FA."Plant Type (Org. Asset)");
         FA.FIELDNO("Plant No. (Org. Asset)"):
           EXIT(FA."Plant No. (Org. Asset)");
      END;
      EXIT('');
    END;

    PROCEDURE DrillDown_PlantMainAsset@1100525001();
    VAR
      PlantNumber@1100525000 : Record 11012552;
    BEGIN
      //**4PS (C018452)
      IF ("Main Asset/Component" <> "Main Asset/Component"::Component) OR ("Component of Main Asset" = '') THEN
        EXIT;
      PlantNumber.SETCURRENTKEY("Fixed Asset");
      PlantNumber.SETRANGE("Fixed Asset", "Component of Main Asset");
      PAGE.RUNMODAL(0, PlantNumber);
    END;

    PROCEDURE CalcFields_PlantMainAsset@1100525000(VAR FA@1100525000 : Record 5600;RetFieldNo@1100525001 : Integer) : Code[20];
    BEGIN
      //**4PS (C018452)
      // These flowfield must be determined (indirect) via this function.
      // Only relevant for components with Main Asset filled (should not find Plant with Fixed Asset empty!).
      FA."Plant Type (Main Asset)" := '';
      FA."Plant No. (Main Asset)" := '';
      IF (FA."Main Asset/Component" = FA."Main Asset/Component"::Component) AND (FA."Component of Main Asset" <> '') THEN
        FA.CALCFIELDS("Plant Type (Main Asset)", "Plant No. (Main Asset)");

      CASE RetFieldNo OF
         FA.FIELDNO("Plant Type (Main Asset)"):
           EXIT(FA."Plant Type (Main Asset)");
         FA.FIELDNO("Plant No. (Main Asset)"):
           EXIT(FA."Plant No. (Main Asset)");
      END;
      EXIT('');
    END;

    BEGIN
    END.
  }
}

