OBJECT Table 174 Standard Purchase Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               DPA_OnInsert; //**4PS.n
               LOCKTABLE;
               StdPurchCode.GET("Standard Purchase Code");
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=[ENU=Standard Purchase Line;
               NOR=Standard kj›pslinje;
               SVE=Standardink”psrad];
  }
  FIELDS
  {
    { 1   ;   ;Standard Purchase Code;Code10      ;TableRelation="Standard Purchase Code";
                                                   CaptionML=[ENU=Standard Purchase Code;
                                                              NOR=Standard kj›pskode;
                                                              SVE=Standard ink”pskod];
                                                   Editable=No }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr];
                                                   Editable=No }
    { 3   ;   ;Type                ;Option        ;OnValidate=VAR
                                                                OldType@1000 : Integer;
                                                              BEGIN
                                                                OldType := Type;
                                                                INIT;
                                                                Type := OldType;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,,Fixed Asset,Charge (Item)";
                                                                    NOR=" ,Finanskonto,Vare,,Aktiva,Gebyr (vare)";
                                                                    SVE=" ,Redov.konto,Artikel,,Anl.tillg†ng,Omkostnad (artikel)"];
                                                   OptionString=[ ,G/L Account,Item,,Fixed Asset,Charge (Item)] }
    { 4   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item WHERE (Blocked=CONST(No))
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Type=CONST("Charge (Item)")) "Item Charge";
                                                   OnValidate=VAR
                                                                GLAcc@1001 : Record 15;
                                                                Item@1002 : Record 27;
                                                                ItemCharge@1006 : Record 5800;
                                                                FA@1003 : Record 5600;
                                                                StdTxt@1004 : Record 7;
                                                                StdPurchCode@1000 : Record 173;
                                                              BEGIN
                                                                IF NOT ((Type = Type::"G/L Account") AND (("Basic Item" <> '') OR ("Trade Item" <> ''))) THEN BEGIN //**4PS.n
                                                                  Quantity := 0;
                                                                  "Amount Excl. VAT" := 0;
                                                                  "Unit of Measure Code" := '';
                                                                  Description := '';
                                                                END; //**4PS.n
                                                                IF "No." = '' THEN
                                                                  EXIT;
                                                                StdPurchCode.GET("Standard Purchase Code");
                                                                CASE Type OF
                                                                  Type::" ":
                                                                    BEGIN
                                                                      StdTxt.GET("No.");
                                                                      Description := StdTxt.Description;
                                                                    END;
                                                                  Type::"G/L Account":
                                                                    BEGIN
                                                                      GLAcc.GET("No.");
                                                                      GLAcc.CheckGLAcc;
                                                                      GLAcc.TESTFIELD("Direct Posting",TRUE);
                                                                      IF ("Basic Item" = '') AND ("Trade Item" = '') THEN  //**4PS.n
                                                                        Description := GLAcc.Name;
                                                                      OnAfterValidateGLAccountNo(Rec,GLAcc);
                                                                    END;
                                                                  Type::Item:
                                                                    BEGIN
                                                                      Item.GET("No.");
                                                                      Item.TESTFIELD("Purchasing Blocked",FALSE);  //**4PS.n
                                                                      Item.TESTFIELD(Blocked,FALSE);
                                                                      Item.TESTFIELD("Gen. Prod. Posting Group");
                                                                      IF Item.Type = Item.Type::Inventory THEN
                                                                        Item.TESTFIELD("Inventory Posting Group");
                                                                      "Unit of Measure Code" := Item."Purch. Unit of Measure";
                                                                      Description := Item.Description;
                                                                      "Variant Code" := '';
                                                                    END;
                                                                  3:
                                                                    ERROR(Text001);
                                                                  Type::"Fixed Asset":
                                                                    BEGIN
                                                                      FA.GET("No.");
                                                                      FA.TESTFIELD(Inactive,FALSE);
                                                                      FA.TESTFIELD(Blocked,FALSE);
                                                                      Description := FA.Description;
                                                                    END;
                                                                  Type::"Charge (Item)":
                                                                    BEGIN
                                                                      ItemCharge.GET("No.");
                                                                      Description := ItemCharge.Description;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 5   ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 6   ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Type);
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 7   ;   ;Amount Excl. VAT    ;Decimal       ;OnValidate=BEGIN
                                                                IF (Type <> Type::"G/L Account") AND (Type <> Type::"Charge (Item)") THEN
                                                                 IF "Amount Excl. VAT" <> 0 THEN  //**4PS.n
                                                                  ERROR(Text002,FIELDCAPTION(Type),Type);
                                                              END;

                                                   CaptionML=[ENU=Amount Excl. VAT;
                                                              NOR=Bel›p eks. mva;
                                                              SVE=Belopp exklusive moms];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrency }
    { 8   ;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   OnValidate=BEGIN
                                                                IF "Unit of Measure Code" <> '' THEN  //**4PS.n
                                                                TESTFIELD(Type);
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              NOR=Enhetskode;
                                                              SVE=Enhetskod] }
    { 9   ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              NOR=Snarveisdimensjon 1 - kode;
                                                              SVE=Genv„g dimension 1 kod];
                                                   CaptionClass='1,2,1' }
    { 10  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              NOR=Snarveisdimensjon 2 - kode;
                                                              SVE=Genv„g dimension 2 kod];
                                                   CaptionClass='1,2,2' }
    { 11  ;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   OnValidate=VAR
                                                                Item@1001 : Record 27;
                                                                ItemVariant@1000 : Record 5401;
                                                              BEGIN
                                                                IF "Variant Code" = '' THEN BEGIN
                                                                  IF Type = Type::Item THEN BEGIN
                                                                    Item.GET("No.");
                                                                    Description := Item.Description;
                                                                  END;
                                                                  EXIT;
                                                                END;

                                                                TESTFIELD(Type,Type::Item);
                                                                ItemVariant.GET("No.","Variant Code");
                                                                Description := ItemVariant.Description;
                                                              END;

                                                   CaptionML=[ENU=Variant Code;
                                                              NOR=Variantkode;
                                                              SVE=Variantkod] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnValidate=BEGIN
                                                                DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              NOR=Dimensjonssett-ID;
                                                              SVE=Dimensionsupps„ttnings-ID];
                                                   Editable=No }
    { 11012000;;Basic Item         ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                IF (Type <> Type::Item) AND (Type <> Type::"G/L Account") AND ("Basic Item" <> '') THEN
                                                                  ERROR(Text002,FIELDCAPTION(Type),Type);
                                                                IF ("Basic Item" <> xRec."Basic Item") AND ("Basic Item" <> '') THEN
                                                                  ValidateItem(ItemTypeOpt::"Basic Item");
                                                              END;

                                                   CaptionML=[ENU=Basic Item;
                                                              NOR=Fabrikantartikkel;
                                                              SVE=Basartikel] }
    { 11012010;;Trade Item         ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                IF (Type <> Type::Item) AND (Type <> Type::"G/L Account") AND ("Trade Item" <> '') THEN
                                                                  ERROR(Text002,FIELDCAPTION(Type),Type);
                                                                IF ("Trade Item" <> xRec."Trade Item") AND ("Trade Item" <> '') THEN
                                                                  ValidateItem(ItemTypeOpt::"Trade Item");
                                                              END;

                                                   CaptionML=[ENU=Trade Item;
                                                              NOR=Katalogartikkel;
                                                              SVE=Anskaffningsartikel] }
    { 11012020;;Vendor (Trade Item);Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   OnValidate=BEGIN
                                                                IF (Type <> Type::Item) AND (Type <> Type::"G/L Account") AND ("Vendor (Trade Item)" <> '') THEN
                                                                  ERROR(Text002,FIELDCAPTION(Type),Type);
                                                              END;

                                                   CaptionML=[ENU=Vendor (Trade Item);
                                                              NOR=Leverand›r (katalogartikkel);
                                                              SVE=Leverant”r (skaffningsartikel)] }
    { 11012030;;Manufacturer       ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   OnValidate=BEGIN
                                                                IF (Type <> Type::Item) AND (Type <> Type::"G/L Account") AND (Manufacturer <> '') THEN
                                                                  ERROR(Text002,FIELDCAPTION(Type),Type);
                                                              END;

                                                   CaptionML=[ENU=Manufacturer;
                                                              NOR=Fabrikant;
                                                              SVE=Tillverkare] }
  }
  KEYS
  {
    {    ;Standard Purchase Code,Line No.         ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      StdPurchCode@1001 : Record 173;
      DimMgt@1000 : Codeunit 408;
      Text000@1003 : TextConst 'ENU=You cannot rename a %1.;NOR=Du kan ikke gi nytt navn til en %1.;SVE=Du kan inte byta namn p† %1.';
      Text001@1004 : TextConst 'ENU=You cannot purchase resources.;NOR=Du kan ikke kj›pe ressurser.;SVE=Du kan inte k”pa in resurser.';
      Text002@1005 : TextConst 'ENU=%1 must not be %2.;NOR=%1 kan ikke v‘re %2.;SVE=%1 f†r inte vara %2.';
      CommentLbl@1002 : TextConst 'ENU=Comment;NOR=Merknad;SVE=Kommentar';
      ItemTypeOpt@1100485000 : 'Item,Basic Item,Trade Item,Trade Vendor';
      DPA_Management@1100000999 : Codeunit 11012783;

    [External]
    PROCEDURE EmptyLine@5() : Boolean;
    BEGIN
      //EXIT(("No." = '') AND (Quantity = 0)) //**4PS.o
      EXIT(("No." = '') AND ("Basic Item" = '') AND ("Trade Item" = '') AND (Quantity = 0)); //**4PS.n
    END;

    [External]
    PROCEDURE InsertLine@1() : Boolean;
    BEGIN
      EXIT((Type = Type::" ") OR (NOT EmptyLine));
    END;

    LOCAL PROCEDURE GetCurrency@2() : Code[10];
    VAR
      StdPurchCode@1000 : Record 173;
    BEGIN
      IF StdPurchCode.GET("Standard Purchase Code") THEN
        EXIT(StdPurchCode."Currency Code");

      EXIT('');
    END;

    [External]
    PROCEDURE ShowDimensions@3();
    BEGIN
      DimMgt.SetTableID(DATABASE::"Standard Purchase Line"); //**4PS.n
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',"Standard Purchase Code","Line No."));
      DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    [External]
    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    [External]
    PROCEDURE LookupShortcutDimCode@28(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    [External]
    PROCEDURE ShowShortcutDimCode@27(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    [External]
    PROCEDURE FormatType@149() : Text[20];
    BEGIN
      IF Type = Type::" " THEN
        EXIT(CommentLbl);

      EXIT(FORMAT(Type));
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterValidateGLAccountNo@4(VAR StandardPurchaseLine@1000 : Record 174;GLAccount@1001 : Record 15);
    BEGIN
    END;

    PROCEDURE ValidateItem@31(LTypeArtOpt@11012000 : 'Item,Basic Item,Trade Item');
    VAR
      lvItemRec@1100485005 : Record 27;
      DummyDat@11012001 : Date;
      DummyCode@1100485001 : Code[20];
      DummyDec@1100485002 : Decimal;
      DummyTxt@1100485003 : Text[50];
      ValidateCu@1100485000 : Codeunit 11012033;
      lvItemNo@1100485004 : Code[20];
      lvRefDate@1100485010 : Date;
    BEGIN
      //**4PS
      IF Type = Type::Item THEN
        lvItemNo := "No.";

      lvRefDate := ValidateCu.CheckRefDateLevel('');

      ValidateCu.ValidateItem(LTypeArtOpt,"Trade Item",lvItemNo,Manufacturer,"Vendor (Trade Item)",
                              "Basic Item",DummyCode,Description,"Unit of Measure Code",DummyDec,
                              DummyDec,DummyDat,DummyDec,DummyTxt,DummyCode,
                              DummyCode,DummyCode,lvRefDate,'');

      IF (lvItemNo <> '') AND lvItemRec.GET(lvItemNo) THEN BEGIN
        lvItemRec.TESTFIELD("Purchasing Blocked",FALSE);
        lvItemRec.TESTFIELD(Blocked,FALSE);
      END;
      IF Type = Type::Item THEN
        "No." := lvItemNo;
    END;

    LOCAL PROCEDURE DPA_OnInsert@1100000991();
    BEGIN
      //**4PS
      IF NOT DPA_IsActive THEN
        EXIT;

      IF "Shortcut Dimension 1 Code" <> '' THEN
        VALIDATE("Shortcut Dimension 1 Code");
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100528500 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(174) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 174');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Standard Purchase Line", "Shortcut Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Shortcut Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Shortcut Dimension 1 Code");
    END;

    BEGIN
    END.
  }
}

