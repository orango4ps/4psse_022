OBJECT Table 6086362 EM Dimension Inbox
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.3.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TestStatusOpen;
               ClearError;
               UpdateRecordGlobalDimValue("Table ID","Document Type","Document No.","Doc. Ref. No.","Dimension Code","Dimension Value Code");
             END;

    OnModify=BEGIN
               TestStatusOpen;
               ClearError;
               UpdateRecordGlobalDimValue("Table ID","Document Type","Document No.","Doc. Ref. No.","Dimension Code","Dimension Value Code");
             END;

    OnDelete=BEGIN
               TestStatusOpen;
               ClearError;
               UpdateRecordGlobalDimValue("Table ID","Document Type","Document No.","Doc. Ref. No.","Dimension Code",'');
             END;

    CaptionML=[DEU=EM Dimensionseingangsfach;
               ENU=EM Dimension Inbox;
               NLD=EM dimensie inbox];
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;CaptionML=[DEU=Tabellen-ID;
                                                              ENU=Table ID;
                                                              NLD=Tabel-id;
                                                              NOR=Tabell-ID;
                                                              SVE=Tabell-ID] }
    { 2   ;   ;Document Type       ;Option        ;CaptionML=[DEU=Belegart;
                                                              ENU=Document Type;
                                                              NLD=Documenttype;
                                                              SVE=Dokumenttyp];
                                                   OptionCaptionML=[DEU=Budget,Verrechnung;
                                                                    ENU=Budget,Settlement;
                                                                    NLD=Budget,Afboeking];
                                                   OptionString=Budget,Settlement }
    { 3   ;   ;Document No.        ;Code20        ;CaptionML=[DEU=Belegnr.;
                                                              ENU=Document No.;
                                                              NLD=Documentnr.;
                                                              NOR=Bilagsnr.;
                                                              SVE=Dokumentnr] }
    { 4   ;   ;Doc. Ref. No.       ;Integer       ;TableRelation=IF (Table ID=CONST(6086323)) "Expense Inbox"
                                                                 ELSE IF (Table ID=CONST(6086353)) "Mileage Inbox";
                                                   CaptionML=[DEU=Bel. Referenznr.;
                                                              ENU=Doc. Ref. No.;
                                                              NLD=Doc. Ref. nr.] }
    { 10  ;   ;Dimension Code      ;Code20        ;TableRelation=Dimension;
                                                   ValidateTableRelation=No;
                                                   CaptionML=[DEU=Dimensionscode;
                                                              ENU=Dimension Code;
                                                              NLD=Dimensiecode;
                                                              NOR=Dimensjonskode;
                                                              SVE=Dimensionskod] }
    { 11  ;   ;Dimension Value Code;Code20        ;TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Dimension Code));
                                                   ValidateTableRelation=No;
                                                   CaptionML=[DEU=Dimensionswertcode;
                                                              ENU=Dimension Value Code;
                                                              NLD=Dimensiewaardecode;
                                                              NOR=Dimensjonsverdikode;
                                                              SVE=Dimensionsv„rdekod];
                                                   NotBlank=Yes }
    { 12  ;   ;Field Code          ;Code20        ;TableRelation="Field Type";
                                                   ValidateTableRelation=No;
                                                   CaptionML=[DEU=Feldname;
                                                              ENU=Field Name;
                                                              NLD=Veldnaam;
                                                              NOR=Feltnavn;
                                                              SVE=F„ltnamn] }
    { 13  ;   ;Field Value         ;Text250       ;TableRelation="Lookup Value".Code WHERE (Field Type Code=FIELD(Field Code));
                                                   ValidateTableRelation=No;
                                                   CaptionML=[DEU=Feldwert;
                                                              ENU=Field Value;
                                                              NLD=Veldwaarde;
                                                              NOR=Feltverdi;
                                                              SVE=F„ltv„rde] }
  }
  KEYS
  {
    {    ;Table ID,Document Type,Document No.,Doc. Ref. No.,Dimension Code,Field Code;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1160040001 : TextConst 'DEU=%1 %2 bereits %3.;ENU=%1 %2 already %3.;NLD=%1 %2 reeds %3.';

    LOCAL PROCEDURE TestStatusOpen@37();
    VAR
      ExpenseInbox@1160040000 : Record 6086323;
      ExpHeaderInbox@1160040002 : Record 6086341;
      MileageInbox@1160040001 : Record 6086353;
    BEGIN
      CASE "Table ID" OF
        DATABASE::"Expense Inbox":
          BEGIN
            ExpenseInbox.GET("Doc. Ref. No.");
            IF ExpenseInbox.Status = ExpenseInbox.Status::Accepted THEN
              ERROR(Text001,ExpenseInbox.TABLECAPTION,ExpenseInbox."Entry No.",ExpenseInbox.Status);
          END;
        DATABASE::"Mileage Inbox":
          BEGIN
            MileageInbox.GET("Doc. Ref. No.");
            IF MileageInbox.Status = MileageInbox.Status::Accepted THEN
              ERROR(Text001,MileageInbox.TABLECAPTION,MileageInbox."Entry No.",MileageInbox.Status);
          END;
        DATABASE::"Expense Header Inbox":
          BEGIN
            ExpHeaderInbox.GET("Doc. Ref. No.");
            IF ExpHeaderInbox.Status = ExpHeaderInbox.Status::Accepted THEN
              ERROR(Text001,ExpHeaderInbox.TABLECAPTION,ExpHeaderInbox."Entry No.",ExpHeaderInbox.Status);
          END;
      END;
    END;

    LOCAL PROCEDURE ClearError@1160040000();
    VAR
      ExpenseInbox@1160040000 : Record 6086323;
      ExpHeaderInbox@1160040002 : Record 6086341;
      MileageInbox@1160040001 : Record 6086353;
    BEGIN
      CASE "Table ID" OF
        DATABASE::"Expense Inbox":
          BEGIN
            ExpenseInbox.GET("Doc. Ref. No.");
            IF ExpenseInbox.Status = ExpenseInbox.Status::Error THEN BEGIN
              ExpenseInbox.Status := ExpenseInbox.Status::Pending;
              ExpenseInbox.MODIFY;
            END;
          END;
        DATABASE::"Mileage Inbox":
          BEGIN
            MileageInbox.GET("Doc. Ref. No.");
            IF MileageInbox.Status = MileageInbox.Status::Error THEN BEGIN
              MileageInbox.Status := MileageInbox.Status::Pending;
              MileageInbox.MODIFY;
            END;
          END;
        DATABASE::"Expense Header Inbox":
          BEGIN
            ExpHeaderInbox.GET("Doc. Ref. No.");
            IF ExpHeaderInbox.Status = ExpHeaderInbox.Status::Error THEN BEGIN
              ExpHeaderInbox.Status := ExpHeaderInbox.Status::Pending;
              ExpHeaderInbox.MODIFY;
            END;
          END;
      END;
    END;

    PROCEDURE EMDimInboxUpdated@1160040002(VAR EMDimInbox@1160040000 : Record 6086362;TableID@1160040005 : Integer;DocType@1160040004 : Integer;DocNo@1160040003 : Code[20];DocRefNo@1160040002 : Integer) : Boolean;
    VAR
      xEMDimInbox@1160040001 : Record 6086362;
    BEGIN
      EMDimInbox.RESET;
      EMDimInbox.SETRANGE("Table ID",TableID);
      EMDimInbox.SETRANGE("Document Type",DocType);
      EMDimInbox.SETRANGE("Document No.",DocNo);
      EMDimInbox.SETRANGE("Doc. Ref. No.",DocRefNo);

      xEMDimInbox.RESET;
      xEMDimInbox.SETRANGE("Table ID",TableID);
      xEMDimInbox.SETRANGE("Document Type",DocType);
      xEMDimInbox.SETRANGE("Document No.",DocNo);
      xEMDimInbox.SETRANGE("Doc. Ref. No.",DocRefNo);

      IF EMDimInbox.FINDSET THEN
        REPEAT
          IF NOT xEMDimInbox.GET(TableID,DocType,DocNo,DocRefNo,EMDimInbox."Dimension Code",EMDimInbox."Field Code") THEN
            EXIT(TRUE);

          IF (EMDimInbox."Dimension Value Code" <> xEMDimInbox."Dimension Value Code") OR
             (EMDimInbox."Field Value" <> xEMDimInbox."Field Value")
          THEN
            EXIT(TRUE);
        UNTIL EMDimInbox.NEXT = 0;

      IF xEMDimInbox.FINDSET THEN
        REPEAT
          IF NOT EMDimInbox.GET(TableID,DocType,DocNo,DocRefNo,xEMDimInbox."Dimension Code",xEMDimInbox."Field Code") THEN
            EXIT(TRUE);
        UNTIL xEMDimInbox.NEXT = 0;
    END;

    LOCAL PROCEDURE UpdateRecordGlobalDimValue@1160040001(TableID@1160040011 : Integer;DocumentType@1160040010 : Integer;DocumentNo@1160040009 : Code[20];DocRefNo@1160040005 : Integer;DimCode@1160040006 : Code[20];DimValCode@1160040007 : Code[20]);
    VAR
      GLSetup@1160040003 : Record 98;
      ExpAllocInbox@1160040004 : Record 6086322;
      ExpInbox@1160040002 : Record 6086323;
      ExpHeaderInbox@1160040008 : Record 6086341;
      MilInbox@1160040001 : Record 6086353;
    BEGIN
      GLSetup.GET;
      IF NOT (DimCode IN [GLSetup."Global Dimension 1 Code",GLSetup."Global Dimension 2 Code"]) THEN
        EXIT;

      CASE TableID OF
        DATABASE::"Expense Inbox":
          BEGIN
            ExpInbox.GET(DocRefNo);
            IF DimCode = GLSetup."Global Dimension 1 Code" THEN
              ExpInbox."Global Dimension 1 Code" := DimValCode;
            IF DimCode = GLSetup."Global Dimension 2 Code" THEN
              ExpInbox."Global Dimension 2 Code" := DimValCode;
            ExpInbox.MODIFY;
          END;

        DATABASE::"Mileage Inbox":
          BEGIN
            MilInbox.GET(DocRefNo);
            IF DimCode = GLSetup."Global Dimension 1 Code" THEN
              MilInbox."Global Dimension 1 Code" := DimValCode;
            IF DimCode = GLSetup."Global Dimension 2 Code" THEN
              MilInbox."Global Dimension 2 Code" := DimValCode;
            MilInbox.MODIFY;
          END;

        DATABASE::"Expense Header Inbox":
          BEGIN
            ExpHeaderInbox.GET(DocRefNo);
            IF DimCode = GLSetup."Global Dimension 1 Code" THEN
              ExpHeaderInbox."Global Dimension 1 Code" := DimValCode;
            IF DimCode = GLSetup."Global Dimension 2 Code" THEN
              ExpHeaderInbox."Global Dimension 2 Code" := DimValCode;
            ExpHeaderInbox.MODIFY;
          END;

        DATABASE::"Expense Allocation Inbox":
          BEGIN
            ExpAllocInbox.GET(DocRefNo);
            IF DimCode = GLSetup."Global Dimension 1 Code" THEN
              ExpAllocInbox."Global Dimension 1 Code" := DimValCode;
            IF DimCode = GLSetup."Global Dimension 2 Code" THEN
              ExpAllocInbox."Global Dimension 2 Code" := DimValCode;
            ExpAllocInbox.MODIFY;
          END;
      END;
    END;

    BEGIN
    END.
  }
}

