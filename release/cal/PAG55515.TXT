OBJECT Page 55515 dOM Object Manipulation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=t.om,t.scm1.22;
  }
  PROPERTIES
  {
    CaptionML=ENU=Object Manipulation Worksheet;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=Yes;
    LinksAllowed=No;
    SourceTable=Table2000000001;
    SourceTableView=SORTING(Type,Company Name,ID)
                    WHERE(Type=FILTER(Table..));
    PageType=Worksheet;
    ShowFilter=Yes;
    OnOpenPage=BEGIN
                 IF ProjectSettings.GET(ProjectSettings.Setting::"Version addition",USERID,'') THEN;
               END;

    OnAfterGetRecord=BEGIN
                       is4PSSE := (STRPOS("Version List",ProjectSettings.Value) <> 0);
                       isToday := Date = WORKDATE;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           // is4PSSE := (STRPOS('4PSSE',"Version List") <> 0);
                         END;

    ActionList=ACTIONS
    {
      { 1100409012;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100409013;1 ;ActionGroup;
                      Name=Object Properties }
      { 1100409014;2 ;Action    ;
                      Name=Mark from File;
                      Image=SelectEntries;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MarkObjectsFromFile;
                               END;
                                }
      { 2       ;2   ;Action    ;
                      Name=Mark Changed Objects;
                      Image=SelectEntries;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MarkFromChangedObjectsFile;
                               END;
                                }
      { 1100409024;2 ;Action    ;
                      Name=Mark Selected;
                      Image=GetLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MarkSelectedObj;
                               END;
                                }
      { 1100409023;2 ;Action    ;
                      Name=Unmark Selected;
                      Image=CollapseDepositLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 UnmarkSelectedObj;
                               END;
                                }
      { 1100409025;2 ;Action    ;
                      Name=Clear Marks;
                      Image=CancelAllLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ClearAllMarks;
                               END;
                                }
      { 1100409015;2 ;Action    ;
                      Name=Show All;
                      CaptionML=SVE=Visa alla;
                      Image=RemoveFilterLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowAllObj
                               END;
                                }
      { 1100409016;2 ;Action    ;
                      Name=Marked Only;
                      Promoted=Yes;
                      Image=Filter;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowMarkedOnly;
                               END;
                                }
      { 1100409017;2 ;Action    ;
                      Name=Export Object List;
                      Promoted=Yes;
                      Image=PutawayLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ExportObjectListToFile;
                               END;
                                }
      { 1100409020;2 ;Action    ;
                      Name=Export Obj. Properties;
                      Promoted=Yes;
                      Image=ExportFile;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ExportObjProperties;
                               END;
                                }
      { 1100409022;2 ;Action    ;
                      Name=Import Obj. Properties;
                      Promoted=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ImportObjProperties;
                               END;
                                }
      { 1       ;2   ;Action    ;
                      Name=Set Object Properties;
                      Promoted=Yes;
                      Image=EditLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetObjectProperties;
                               END;
                                }
      { 1100409018;2 ;Action    ;
                      Name=Lock Filtered;
                      Enabled=false;
                      Image=Lock;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 LockFilteredObjects;
                               END;
                                }
      { 1100409019;2 ;Action    ;
                      Name=Unlock Filtered;
                      Enabled=false;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 UnLockFilteredObjects;
                               END;
                                }
      { 1100525000;2 ;Action    ;
                      Name=Set Modified Now;
                      Promoted=Yes;
                      Image=EditLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetModifiedNow;
                               END;
                                }
      { 1100525001;2 ;Action    ;
                      Name=Add 4PS to Version List;
                      Image=EditLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Add4PSToVersionList;
                               END;
                                }
      { 1100409021;2 ;Action    ;
                      Name=Strip Trailing Chars from Version List;
                      Visible=false;
                      Image=EditLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 StripCharactersFromVersionList(8);
                               END;
                                }
      { 1101285007;1 ;Action    ;
                      CaptionML=[ENU=Table;
                                 SVE=Tabell];
                      Promoted=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ApplyFilterObjType(Type::Table);
                               END;
                                }
      { 1101285006;1 ;Action    ;
                      CaptionML=[ENU=Page;
                                 SVE=Sida];
                      Promoted=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ApplyFilterObjType(Type::Page);
                               END;
                                }
      { 1101285005;1 ;Action    ;
                      CaptionML=[ENU=Report;
                                 SVE=Rapport];
                      Promoted=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ApplyFilterObjType(Type::Report);
                               END;
                                }
      { 1101285004;1 ;Action    ;
                      CaptionML=[ENU=Codeunit;
                                 SVE=Codeunit];
                      Promoted=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ApplyFilterObjType(Type::Codeunit);
                               END;
                                }
      { 1101285003;1 ;Action    ;
                      CaptionML=[ENU=Query;
                                 SVE=Fr†ga];
                      Promoted=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ApplyFilterObjType(Type::Query);
                               END;
                                }
      { 1101285002;1 ;Action    ;
                      CaptionML=ENU=XMLport;
                      Promoted=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ApplyFilterObjType(Type::XMLport);
                               END;
                                }
      { 1101285001;1 ;Action    ;
                      CaptionML=ENU=MenuSuite;
                      Promoted=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ApplyFilterObjType(Type::MenuSuite);
                               END;
                                }
      { 1101285000;1 ;Action    ;
                      Name=ButtonShowAll;
                      CaptionML=[ENU=All;
                                 SVE=Alla];
                      Promoted=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 SETRANGE(Type);
                                 FILTERGROUP(2);
                                 SETFILTER(Type,'<>%1',Type::TableData);
                                 FILTERGROUP(0);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1101285014;1 ;Action    ;
                      CaptionML=ENU=Apply Cmd;
                      Promoted=Yes;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 Command@1100485000 : Text[100];
                                 CommandBuffer@1100485001 : Text[100];
                               BEGIN
                                 CommandBuffer := ChangeCommand;
                                 WHILE GetCommand(Command,CommandBuffer) DO
                                   ApplyCommand(Command);
                               END;
                                }
      { 1101285013;1 ;Action    ;
                      ShortCutKey=Ctrl+e;
                      CaptionML=ENU=Compare and Merge;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Export;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 CompareandMerge;
                               END;
                                }
      { 1101285012;1 ;Action    ;
                      ShortCutKey=Shift+Ctrl+e;
                      CaptionML=ENU=Export for edit;
                      Promoted=Yes;
                      PromotedIsBig=No;
                      Image=Export;
                      PromotedCategory=New;
                      OnAction=VAR
                                 ProjectSettings@1100285500 : Record 77780;
                                 Folder1@1100285501 : Text;
                                 tempvar@1100285506 : Integer;
                                 tempbool@1100285505 : Boolean;
                                 WSHshel@1100285502 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
                                 wsCommand@1100285503 : Text;
                               BEGIN
                                 ProjectSettings.GET(ProjectSettings.Setting::Folder1,USERID);
                                 Folder1 := ProjectSettings.Value;

                                 ExportForEdit('"' + Folder1 + '\pag55515in','','',TRUE);

                                 ProjectSettings.GET(ProjectSettings.Setting::TextEditorPath,USERID);
                                 wsCommand := '"' + ProjectSettings.Value + '" ' +
                                 //wsCommand := '"C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\Uedit32" '+
                                              '"' + Folder1 + '\pag55515in.txt" ';
                                 CREATE(WSHshel,TRUE,TRUE);
                                 WSHshel.Run(wsCommand,tempvar,tempbool);
                               END;
                                }
      { 1101285011;1 ;Action    ;
                      ShortCutKey=Ctrl+r;
                      CaptionML=ENU=Import Merged;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 ImportMerged;
                               END;
                                }
      { 1101285021;1 ;Action    ;
                      ShortCutKey=F11;
                      CaptionML=ENU=Compile;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 ImportMergedCompile;
                               END;
                                }
      { 1101285010;1 ;Action    ;
                      CaptionML=ENU=Import New (folder3);
                      Image=Import;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 ImportNew3;
                               END;
                                }
      { 1101285009;1 ;Action    ;
                      CaptionML=ENU=Export all ID-based Objects;
                      Promoted=Yes;
                      Image=Export;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ExportObjects4;
                               END;
                                }
      { 1101285020;1 ;Action    ;
                      Name=ToggleEdt;
                      Promoted=Yes;
                      Image=Edit;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 ToggleEditable := NOT ToggleEditable;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100583001;1 ;Action    ;
                      Name=Add 4PSSE;
                      ShortCutKey=Ctrl+Alt+a;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=AddWatch;
                      PromotedCategory=New;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 versionAdd@1101285000 : Text;
                                 Obj2@1101285001 : Record 2000000001;
                               BEGIN
                                 ProjectSettings.GET(ProjectSettings.Setting::"Version addition",USERID);
                                 versionAdd := ProjectSettings.Value;
                                 IF versionAdd = '' THEN versionAdd := '4PSSE';

                                 Obj2.GET(Type,"Company Name",ID);

                                 IF (versionAdd<>'') AND (STRPOS(Obj2."Version List",versionAdd)=0) THEN BEGIN
                                   IF Obj2."Version List" = '' THEN
                                     Obj2."Version List" := versionAdd
                                   ELSE
                                     Obj2."Version List" += ','+versionAdd;
                                   IF Obj2.MODIFY(FALSE) THEN;
                                 END;
                               END;
                                }
      { 1100583000;1 ;Action    ;
                      Name=Add NAVDK.NO;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=AddWatch;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 versionAdd@1101285000 : Text;
                                 Obj2@1101285001 : Record 2000000001;
                               BEGIN
                                 versionAdd := 'NAVDK.NO';

                                 Obj2.GET(Type,"Company Name",ID);

                                 IF (versionAdd<>'') AND (STRPOS(Obj2."Version List",versionAdd)=0) THEN BEGIN
                                   IF Obj2."Version List" = '' THEN
                                     Obj2."Version List" := versionAdd
                                   ELSE
                                     Obj2."Version List" += ','+versionAdd;
                                   IF Obj2.MODIFY(FALSE) THEN;
                                 END;
                               END;
                                }
      { 1101285024;1 ;ActionGroup }
      { 1101285023;2 ;Action    ;
                      Name=spara objektDatumTid;
                      Image=Save;
                      OnAction=VAR
                                 TTNAVDLTools@1101285000 : Codeunit 77799;
                               BEGIN
                                 TTNAVDLTools.sparaObjektDatumTid;
                               END;
                                }
      { 1101285022;2 ;Action    ;
                      Name=†terst„ll objektDatumTid;
                      Image=Restore;
                      OnAction=VAR
                                 TTNAVDLTools@1101285000 : Codeunit 77799;
                               BEGIN
                                 TTNAVDLTools.†terst„llObjektDatumTid;
                               END;
                                }
      { 111280000;2  ;Action    ;
                      Name=flagga object med fil;
                      Promoted=Yes;
                      OnAction=VAR
                                 obj2@111280000 : Record 2000000001;
                                 FileName@111280001 : Text;
                               BEGIN
                                 IF NOT ProjectSettings.GET(ProjectSettings.Setting::Folder2,USERID,'') THEN EXIT;
                                 //CurrPage.SETSELECTIONFILTER(Obj2);
                                 CLEARMARKS;
                                 obj2.COPYFILTERS(Rec);
                                 IF obj2.FINDSET THEN REPEAT
                                   FileName := ProjectSettings.Value+'\'+COPYSTR(FORMAT(obj2.Type),1,3)+FORMAT(obj2.ID,0,'<Integer>')+'.txt';
                                   IF EXISTS(FileName) THEN
                                     IF GET(obj2.Type,obj2."Company Name",obj2.ID) THEN
                                       MARK(TRUE);

                                 UNTIL obj2.NEXT=0;

                                 MARKEDONLY(TRUE);
                                 CurrPage.UPDATE(FALSE);
                                 FINDFIRST;
                                 //MARKEDONLY(TRUE);
                               END;
                                }
      { 1100583003;2 ;Action    ;
                      Name=remove VersionTagg;
                      OnAction=VAR
                                 versionAdd@1100583001 : Text;
                                 Obj2@1100583000 : Record 2000000001;
                               BEGIN

                                 ProjectSettings.GET(ProjectSettings.Setting::"Version addition",USERID);
                                 versionAdd := ProjectSettings.Value;
                                 IF versionAdd = '' THEN
                                   EXIT;

                                 versionAdd := ','+versionAdd;

                                 Obj2.GET(Type,"Company Name",ID);

                                 IF (versionAdd<>'') AND (STRPOS("Version List",versionAdd)<>0) THEN BEGIN
                                   Obj2."Version List" := DELSTR("Version List",STRPOS("Version List",versionAdd),STRLEN(versionAdd));
                                   IF Obj2.MODIFY(FALSE) THEN;
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100409000;0;Container;
                ContainerType=ContentArea }

    { 1100409001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100409002;2;Field  ;
                SourceExpr=Type;
                Editable=false }

    { 1100409003;2;Field  ;
                SourceExpr=ID;
                Editable=false }

    { 1100409004;2;Field  ;
                SourceExpr=Name;
                Editable=false }

    { 1100409005;2;Field  ;
                SourceExpr="Version List";
                Editable=ToggleEditable;
                Style=Favorable;
                StyleExpr=is4PSSE }

    { 1100409006;2;Field  ;
                SourceExpr=Modified;
                Editable=ToggleEditable }

    { 1100409007;2;Field  ;
                SourceExpr=Compiled;
                Editable=false }

    { 1100409008;2;Field  ;
                SourceExpr=Date;
                Editable=ToggleEditable;
                Style=Favorable;
                StyleExpr=isToday }

    { 1100409009;2;Field  ;
                SourceExpr=Time;
                Editable=ToggleEditable }

    { 1100409010;2;Field  ;
                SourceExpr=Locked;
                Editable=false }

    { 1100409011;2;Field  ;
                SourceExpr="Locked By";
                Editable=false }

    { 1101285019;1;Group  ;
                GroupType=Group }

    { 1101285018;2;Field  ;
                CaptionML=[ENU=No. of Records;
                           SVE=Antal poster];
                SourceExpr=COUNT;
                Importance=Promoted }

    { 1101285017;2;Field  ;
                AssistEdit=Yes;
                SourceExpr=ChangeCommand;
                OnAssistEdit=BEGIN
                               ChangeCommand := SELECTSTR(STRMENU(Text014 + Text015 + Text016),Text004 + Text005 + Text006);
                             END;
                              }

    { 1101285015;1;Group   }

    { 1101285008;2;Part   ;
                Name=SettingsSF;
                PagePartID=Page77778 }

  }
  CODE
  {
    VAR
      OM@1100409000 : Record 2000000058;
      Text000@1100525000 : TextConst 'ENU=Are you sure you want to set the Object properties (Date/Time/Modified) for %1 objects to appear to be modified now?';
      ChangeCommand@1101285000 : Text;
      Text001@1101285013 : TextConst 'ENU=Object filepath is empty.';
      Text004@1101285012 : TextConst 'ENU="$D=[/t];$T=[/t];$M=[/t],$X=[/xp];$V=[/=];$D=[/0];$T=[/0];$M=[/f],$D=[/=111111],$T=[/=111111],$M=[/t]"';
      Text005@1101285011 : TextConst 'ENU=",$X=[/fM],$X=[/ip],$X=[/iN],$X=[/xp],$X=[/pM],$X=[/pM];$V=[/=!~%1]"';
      Text006@1101285010 : TextConst 'ENU=",$V=[/=!~%1],$V=[/r!~/],$V=[/i]"';
      Text008@1101285008 : TextConst 'ENU=Are you absolutely sure you want to delete the selected objects?';
      Text014@1101285007 : TextConst 'ENU=Set Modified NOW,Clear All,Set Date,Set Time,Set Modified';
      Text015@1101285006 : TextConst 'ENU=,Mark Filtered,Imp Obj Prop,Imp Obj Prop (incl. Name),Exp Obj Prop,Mark Obj from Prop File,Mark and Chg Vers. from File';
      Text016@1101285005 : TextConst 'ENU=,Expand Version,Change Version,Incr. Version';
      Text020@1101285004 : TextConst 'ENU=Export %1 objects to %2?';
      Text021@1101285003 : TextConst 'ENU=This format is no longer supported. Pls. use an older version of this tool.';
      Text022@1101285002 : TextConst 'ENU=The filename should contain a numeric part.';
      BackupMode@1101285014 : Boolean;
      ToggleEditable@1101285015 : Boolean INDATASET;
      is4PSSE@1101285016 : Boolean INDATASET;
      ProjectSettings@1101285017 : Record 77780;
      isToday@1101285018 : Boolean;
      ClientFileHelper@1101285019 : DotNet "'mscorlib'.System.IO.File" RUNONCLIENT;

    PROCEDURE CurrPageSetSelectionFilter@1100409019(VAR Rec2@1100409000 : Record 2000000001);
    VAR
      Obj@1100409001 : Record 2000000001;
      Obj2@1100409002 : Record 2000000001;
    BEGIN
      //SETSELECTIONFILTER works a bit weird. MARKONLY(FALSE) resets, if all records are selected nothing is selected, but not under all circumstances
      CurrPage.SETSELECTIONFILTER(Obj);

      Obj.MARKEDONLY(TRUE);
      IF Obj.COUNT = 0 THEN
        Obj.COPY(Rec);

      IF Obj.FINDSET THEN
        REPEAT
          Obj.MARK(TRUE);
        UNTIL Obj.NEXT = 0;

      MESSAGE('%1 objects selected.', Obj.COUNT);

      Rec2.COPY(Obj);
    END;

    PROCEDURE MarkObjectsFromFile@1100409000();
    VAR
      ObjectListXml@1100525000 : XMLport 55590;
    BEGIN
      ObjectListXml.IMPORTFILE(TRUE);
      ObjectListXml.RUN;
      ObjectListXml.CopyObjectTableMarks(Rec);
      MARKEDONLY(TRUE);
    END;

    PROCEDURE MarkFromChangedObjectsFile@3();
    VAR
      ChangedObjectListXml@1000 : XMLport 55591;
    BEGIN
      ChangedObjectListXml.IMPORTFILE(TRUE);
      ChangedObjectListXml.RUN;
      ChangedObjectListXml.CopyObjectTableMarks(Rec);
      MARKEDONLY(TRUE);
    END;

    PROCEDURE MarkSelectedObj@1100409006();
    VAR
      OldSelection@1100409001 : Record 2000000001;
      Object@1100409000 : Record 2000000001;
    BEGIN
      CurrPageSetSelectionFilter(Object);

      Object.MARKEDONLY(TRUE);
      IF Object.FINDSET THEN
        REPEAT
          GET(Object.Type ,'' ,Object.ID);
          MARK(TRUE);
        UNTIL Object.NEXT = 0;

      MARKEDONLY(TRUE);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE UnmarkSelectedObj@1100409007();
    VAR
      OldSelection@1100409001 : Record 2000000001;
      Object@1100409000 : Record 2000000001;
    BEGIN
      CurrPageSetSelectionFilter(Object);
      IF Object.FINDSET THEN
        REPEAT
          GET(Object.Type ,'' ,Object.ID);
          MARK(FALSE);
        UNTIL Object.NEXT = 0;

      MARKEDONLY(TRUE);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE ClearAllMarks@1100409008();
    BEGIN
      CLEARMARKS;

      MARKEDONLY(FALSE);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE ShowAllObj@1100409009();
    BEGIN
      MARKEDONLY(FALSE);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE ShowMarkedOnly@1100409010();
    VAR
      OldSelection@1100409001 : Record 2000000001;
      Object@1100409000 : Record 2000000001;
    BEGIN
      MARKEDONLY(NOT MARKEDONLY);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE ExportObjectListToFile@1100409001();
    VAR
      ObjectListXml@1100409000 : XMLport 55590;
      Object@1100409001 : Record 2000000001;
    BEGIN
      CurrPageSetSelectionFilter(Object);
      ObjectListXml.IMPORTFILE(FALSE);

      Object.MARKEDONLY(TRUE);

      ObjectListXml.SETTABLEVIEW(Object);
      ObjectListXml.RUN;
    END;

    PROCEDURE ExportObjProperties@1100409012();
    VAR
      ObjectPropertiesXml@1100409001 : XMLport 55595;
      FilteredObject@1100409000 : Record 2000000001;
    BEGIN
      CurrPageSetSelectionFilter(FilteredObject);
      ObjectPropertiesXml.SETTABLEVIEW(FilteredObject);
      ObjectPropertiesXml.IMPORTFILE(FALSE);
      ObjectPropertiesXml.RUN;
    END;

    PROCEDURE ImportObjProperties@1100409013();
    VAR
      ObjectPropertiesXml@1100409000 : XMLport 55595;
    BEGIN
      ObjectPropertiesXml.IMPORTFILE(TRUE);
      ObjectPropertiesXml.RUN;
    END;

    PROCEDURE LockFilteredObjects@1100409004();
    BEGIN
      FINDFIRST;
      REPEAT
        "Version List" := STRSUBSTNO('!~%1',"Version List");
        //"Version List" := STRSUBSTNO('%1,FIXME',"Version List");
        MODIFY;
      UNTIL NEXT = 0;

      //MODIFYALL(Locked, TRUE);
      //MODIFYALL("Locked By", USERID);
    END;

    PROCEDURE UnLockFilteredObjects@1100409005();
    BEGIN
      SETFILTER("Version List", '!~*');
      FINDFIRST;
      REPEAT
        "Version List" := COPYSTR("Version List", 3);
        MODIFY;
      UNTIL NEXT = 0;

      //MODIFYALL(Locked, FALSE);
      //MODIFYALL("Locked By", '');
    END;

    PROCEDURE SetModifiedNow@1100409011();
    VAR
      OldSelection@1100409001 : Record 2000000001;
      Object@1100409000 : Record 2000000001;
    BEGIN
      // When selecting all records via click on left-top side of header will select ALL objects in table
      // By setselectionfilter on rec this is no longer the case
      OldSelection.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(Rec);
      Object.COPY(Rec);
      SetModifiedNowForObjects(Object, TRUE);
      COPY(OldSelection);
    END;

    PROCEDURE SetModifiedNowForObjects@1100525000(VAR Object2@1100528000 : Record 2000000001;AskForConfirmation@1100528001 : Boolean);
    VAR
      NewTime@1100528003 : Time;
      NewDate@1100528002 : Date;
    BEGIN
      IF AskForConfirmation THEN
        IF NOT CONFIRM(Text000, FALSE, Object2.COUNT) THEN
          ERROR('');

      NewTime := DT2TIME(ROUNDDATETIME(CURRENTDATETIME));
      NewDate := TODAY;

      IF Object2.FINDSET THEN
        REPEAT
          Object2.Date := NewDate;
          Object2.Time := NewTime;
          Object2.Modified := TRUE;
          Object2.MODIFY;
        UNTIL Object2.NEXT = 0;
    END;

    PROCEDURE ExpandVersionListFilteredObjects@1100525001();
    BEGIN
      FINDFIRST;
      REPEAT
        "Version List" := STRSUBSTNO('!~%1',"Version List");
        MODIFY;
      UNTIL NEXT = 0;
    END;

    PROCEDURE Add4PSToVersionList@1100525002();
    BEGIN
      FINDFIRST;
      REPEAT
        "Version List" := STRSUBSTNO('%1,4PS7.10',"Version List"); //mg.c, 06-03-2014
        MODIFY;
      UNTIL NEXT = 0;
    END;

    PROCEDURE StripCharactersFromVersionList@1100409002(NoOfCharsToBeDropped@1100409000 : Integer);
    BEGIN
      FINDFIRST;
      REPEAT
        "Version List" := PADSTR("Version List", STRLEN("Version List") - NoOfCharsToBeDropped); //mg.c, 06-03-2014
        MODIFY;
      UNTIL NEXT = 0;
    END;

    PROCEDURE SetObjectProperties@1();
    VAR
      SetObjectProperties@1001 : Report 55590;
      FilteredObject@1000 : Record 2000000001;
    BEGIN
      CurrPageSetSelectionFilter(FilteredObject);
      SetObjectProperties.SETTABLEVIEW(FilteredObject);
      SetObjectProperties.RUNMODAL;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE "**from old version"@1101285002();
    BEGIN
    END;

    PROCEDURE ApplyFilterObjType@1100485000(ObjectType@1100485000 : Integer);
    BEGIN
      SETRANGE(Type,ObjectType);
      CurrPage.UPDATE;
    END;

    PROCEDURE GetCommand@1100485002(VAR Command@1100485000 : Text[100];VAR CommandBuffer@1100485001 : Text[100]) : Boolean;
    VAR
      CmdStart@1100485002 : Integer;
      CmdEnd@1100485003 : Integer;
    BEGIN
      //FIXME ;$;

      CmdStart := STRPOS(CommandBuffer,'$');
      IF CmdStart = 0 THEN
        EXIT(FALSE);
      CmdEnd := STRPOS(CommandBuffer,';');
      IF CmdEnd = 0 THEN BEGIN
        Command := COPYSTR(CommandBuffer,CmdStart);
        CommandBuffer := '';
      END ELSE BEGIN
        Command := COPYSTR(CommandBuffer,CmdStart,CmdEnd-CmdStart);
        CommandBuffer := COPYSTR(CommandBuffer,CmdEnd+1);
      END;
      IF TRUE THEN;
      EXIT(TRUE);
    END;

    PROCEDURE ApplyCommand@1100485003(Command@1100485000 : Text[100]);
    BEGIN
      CASE COPYSTR(Command,2,1) OF
        'V' : ModifyVersion(Command);
        'M' : ModifyModified(Command);
        'D' : ModifyDate(Command);
        'T' : ModifyTime(Command);
        'X' : ExecuteCmd(Command);
        'L' : ModifyLocked(Command);//4PSSE
      END;
    END;

    PROCEDURE ModifyLocked@1101285003(Command@1100485000 : Text[100]);
    VAR
      CmdStart@1100485001 : Integer;
      FindStr@1100485002 : Text[30];
      ReplStr@1100485003 : Text[30];
      i@1100485004 : Integer;
      CmdCommand@1100485005 : Text[10];
      CmdArguments@1100485006 : Text[100];
    BEGIN
      //4PSSE
      CmdStart := STRPOS(Command,'=');
      IF CmdStart = 0 THEN
        EXIT;

      Command := COPYSTR(Command,CmdStart + 1);
      CmdCommand := COPYSTR(Command,3,1);

      IF FINDSET(TRUE) THEN
        CASE CmdCommand OF
          't' :  //set true    $M=[/t]
            BEGIN
              MODIFYALL(Locked,TRUE);
              EXIT;
            END;
          'f' :  //set false
            BEGIN
              MODIFYALL(Locked,FALSE);
              EXIT;
            END;
          'x' :  //toggle
            REPEAT
              Locked := NOT Locked;
              MODIFY;
            UNTIL NEXT = 0;
        END;
    END;

    PROCEDURE ModifyVersion@1100485006(Command@1100485000 : Text[100]);
    VAR
      CmdStart@1100485001 : Integer;
      FindStr@1100485002 : Text[30];
      ReplStr@1100485003 : Text[30];
      i@1100485004 : Integer;
      CmdCommand@1100485005 : Text[10];
      CmdArguments@1100485006 : Text[100];
    BEGIN
      CmdStart := STRPOS(Command,'=');
      IF CmdStart = 0 THEN
        EXIT;

      Command := COPYSTR(Command,CmdStart + 1);
      CmdCommand := COPYSTR(Command,3,1);
      CmdArguments := COPYSTR(Command,4,STRPOS(Command,']') - 4);

      IF FINDSET(TRUE) THEN
        CASE CmdCommand OF
          'r' :   //string replace, example: $V=[/rNAVW1/NAVNL]
            BEGIN
              FindStr := COPYSTR(CmdArguments,1,STRPOS(CmdArguments,'/') - 1);
              ReplStr := COPYSTR(CmdArguments,STRPOS(CmdArguments,'/') + 1);
              REPEAT
                i := STRPOS("Version List",FindStr);
                IF i <> 0 THEN BEGIN
                  "Version List" := DELSTR("Version List",i,STRLEN(FindStr));
                  "Version List" := INSSTR("Version List",ReplStr,i);
                  MODIFY;
                END;
              UNTIL NEXT = 0;
            END;
          '=' :   //string substitute, example: $V=[/=pre-%1-post], %1 is current versionstring
              BEGIN
                i := STRPOS(CmdArguments,'%1');
                REPEAT
                  IF i = 0 THEN
                    "Version List" := CmdArguments
                  ELSE IF
                    (i + 2) > STRLEN(CmdArguments) THEN
                      "Version List" := COPYSTR(CmdArguments,1,i-1) + "Version List"
                    ELSE
                      "Version List" := COPYSTR(CmdArguments,1,i-1) + "Version List" + COPYSTR(CmdArguments,i + 2);
                  MODIFY;
                UNTIL NEXT = 0;
              END;
          'i' :   //string increment, example: $V=[/i]
              REPEAT
                "Version List" := INCSTR("Version List");
                 MODIFY;
              UNTIL NEXT = 0;
        END;
    END;

    PROCEDURE ModifyModified@1100485001(Command@1100485000 : Text[100]);
    VAR
      CmdStart@1100485001 : Integer;
      FindStr@1100485002 : Text[30];
      ReplStr@1100485003 : Text[30];
      i@1100485004 : Integer;
      CmdCommand@1100485005 : Text[10];
      CmdArguments@1100485006 : Text[100];
    BEGIN
      CmdStart := STRPOS(Command,'=');
      IF CmdStart = 0 THEN
        EXIT;

      Command := COPYSTR(Command,CmdStart + 1);
      CmdCommand := COPYSTR(Command,3,1);

      IF FINDSET(TRUE) THEN
        CASE CmdCommand OF
          't' :  //set true    $M=[/t]
            BEGIN
              MODIFYALL(Modified,TRUE);
              EXIT;
            END;
          'f' :  //set false
            BEGIN
              MODIFYALL(Modified,FALSE);
              EXIT;
            END;
          'x' :  //toggle
            REPEAT
              Modified := NOT Modified;
              MODIFY;
            UNTIL NEXT = 0;
        END;
    END;

    PROCEDURE ModifyDate@1100485004(Command@1100485000 : Text[100]);
    VAR
      CmdStart@1100485001 : Integer;
      FindStr@1100485002 : Text[30];
      ReplStr@1100485003 : Text[30];
      i@1100485004 : Integer;
      CmdCommand@1100485005 : Text[10];
      CmdArguments@1100485006 : Text[100];
    BEGIN
      CmdStart := STRPOS(Command,'=');
      IF CmdStart = 0 THEN
        EXIT;

      Command := COPYSTR(Command,CmdStart + 1);
      CmdCommand := COPYSTR(Command,3,1);

      IF FINDSET(TRUE) THEN
        CASE CmdCommand OF
          't' :  //set current TODAY    $D=[/t]
            BEGIN
              MODIFYALL(Date,TODAY);
              EXIT;
            END;
          '0' :  //clear
            BEGIN
              MODIFYALL(Date,0D);
              EXIT;
            END;
          '=' :  //fixed date
            BEGIN
              EVALUATE(Date,COPYSTR(Command,4,STRLEN(Command)-4));
              MODIFYALL(Date,Date);
            EXIT;
          END;
        END;
    END;

    PROCEDURE ModifyTime@1100485008(Command@1100485000 : Text[100]);
    VAR
      CmdStart@1100485001 : Integer;
      FindStr@1100485002 : Text[30];
      ReplStr@1100485003 : Text[30];
      i@1100485004 : Integer;
      CmdCommand@1100485005 : Text[10];
      CmdArguments@1100485006 : Text[100];
    BEGIN
      CmdStart := STRPOS(Command,'=');
      IF CmdStart = 0 THEN
        EXIT;

      Command := COPYSTR(Command,CmdStart + 1);
      CmdCommand := COPYSTR(Command,3,1);

      IF FINDSET(TRUE) THEN
        CASE CmdCommand OF
          't' :  //set current time    $D=[/t]
            BEGIN
              MODIFYALL(Time,SYSTEM.TIME);
              EXIT;
            END;
          '0' :  //clear
            BEGIN
              MODIFYALL(Time,0T);
              EXIT;
            END;
          '=' :  //fixed time
            BEGIN
              EVALUATE(Time,COPYSTR(Command,4,STRLEN(Command)-4));
              MODIFYALL(Time,Time);
            EXIT;
          END;
        END;
    END;

    PROCEDURE ExecuteCmd@1100485007(Command@1100485000 : Text[100]);
    VAR
      CmdStart@1100485001 : Integer;
      FindStr@1100485002 : Text[30];
      ReplStr@1100485003 : Text[30];
      i@1100485004 : Integer;
      CmdCommand@1100485005 : Text[10];
      CmdArguments@1100485006 : Text[100];
      Object2@1100485007 : Record 2000000001;
    BEGIN
      CmdStart := STRPOS(Command,'=');
      IF CmdStart = 0 THEN
        EXIT;

      Command := COPYSTR(Command,CmdStart + 1);
      CmdCommand := COPYSTR(Command,3,2);

      CASE CmdCommand OF
        '--' :
          BEGIN
            RESET;
            RemoveObjTypeFilter(Rec);
          END;
        '-F' : RemoveObjTypeFilter(Rec);
        '-M' : MARKEDONLY(FALSE);
        ELSE
          IF FINDSET(TRUE) THEN
            CASE CmdCommand OF
              'fM' :  //mark selected, change filter to marked only
                BEGIN
                  REPEAT
                    MARK(TRUE);
                  UNTIL NEXT = 0;
                  RemoveObjTypeFilter(Rec);
                  MARKEDONLY(TRUE);
                END;
              '-~' :  //remove ~
                ModifyVersion('$V=[/r~/]');
              'xo' :  //export objects
                ExportObjects2;

              'ip' :  //import objectproperties
                HandleObjProp(0);
              'iN' :  //import objectproperties, overwrite Name
                HandleObjProp(3);
              'xp' :  //export objectproperties
                HandleObjProp(1);
              'pM' :  //mark records based on import objectproperties
                BEGIN
                  HandleObjProp(2);
                  MARKEDONLY(TRUE);
                END;
              'Do' :  //delete Objects
                DeleteObjects;
            END;
      END;
    END;

    PROCEDURE RemoveObjTypeFilter@1100485024(VAR Object@1100485000 : Record 2000000001);
    VAR
      Object2@1100485001 : Record 2000000001;
    BEGIN
      Object2.RESET;
      Object.FILTERGROUP(2);
      Object.SETFILTER(Type,'<>%1',Type::TableData);
      Object.FILTERGROUP(0);
      Object.COPYFILTERS(Object2);
    END;

    PROCEDURE RemoveAllFilters2@1100525004(VAR Object@1100525000 : Record 2000000001);
    BEGIN
      Object.SETRANGE(ID);
      Object.SETRANGE(Name);
      Object.SETRANGE(Compiled);
      Object.SETRANGE(Date);
      Object.SETRANGE(Time);
      Object.SETRANGE(Modified);
      Object.SETRANGE("Version List");
      Object.MARKEDONLY(FALSE);

      RemoveObjTypeFilter(Object);
    END;

    PROCEDURE ExportObjects2@1100525003();
    VAR
      ProjectSettings@1100525002 : Record 77780;
      WSHfile@1100525000 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      FileName@1100525001 : Text[101];
      FilePath@1100525004 : Text[151];
      FullFileName@1100525003 : Text[251];
    BEGIN
      CREATE(WSHfile,TRUE,TRUE);

      ProjectSettings.GET(1,USERID);
      FilePath := ProjectSettings.Value;
      IF FilePath = '' THEN
        ERROR(Text001);

      ProjectSettings.GET(2,USERID);
      FileName := STRSUBSTNO(ProjectSettings.Value,FORMAT(WORKDATE,6,6),'1');

      FileName := WSHfile.GetFileName(FileName);
      FullFileName := FilePath + '\' + FileName;

      IF (WSHfile.FileExists(FullFileName) OR WSHfile.FileExists(FullFileName+'.p4c')) THEN
        IF (FileName = INCSTR(FileName)) THEN
          ERROR(Text022);

      WHILE (WSHfile.FileExists(FullFileName) OR WSHfile.FileExists(FullFileName+'.p4c')) DO BEGIN
        FileName := INCSTR(FileName);
        FullFileName := FilePath + '\' + FileName;
      END;

      CLEAR(WSHfile);

      IF NOT CONFIRM(Text020,TRUE,COUNT,FullFileName) THEN
        ERROR('');

      IF FINDSET THEN
        EXPORTOBJECTS(FullFileName,Rec,0);
    END;

    PROCEDURE HandleObjProp@1100485009(Action@1100485000 : 'Read,Write,Mark,Read_ChgName');
    VAR
      f@1100485005 : File;
      ProjectSettings@1100525002 : Record 77780;
      Object2@1100485004 : Record 2000000001;
      Object3@1100485003 : Record 2000000001;
      Object4@1100485006 : Record 2000000001;
      Txt@1100485001 : Text[1024];
      TxtEmbraced@1100485002 : Boolean;
      SepString@1100485007 : Text[5];
      TypeTxt@1100525000 : Text[30];
      IDTxt@1100525001 : Text[30];
      OverwriteName@1100525003 : Boolean;
    BEGIN
      ProjectSettings.GET(ProjectSettings.Setting::"Object Properties File",USERID);

      IF COPYSTR(ProjectSettings.Value,STRLEN(ProjectSettings.Value) - 4,4) = '.txt' THEN
        ERROR(Text021);

      IF Action = Action::Read_ChgName THEN BEGIN
        Action := Action::Read;
        OverwriteName := TRUE;
      END;

      IF Action = Action::Read THEN BEGIN
        BackupMode := TRUE;
        ExecuteCmd('$X=[/xp]');
        BackupMode := FALSE;
      END;

      f.TEXTMODE(TRUE);
      IF Action = Action::Write THEN BEGIN
        IF FINDSET THEN BEGIN
          Object2.COPY(Rec);
          //f.QUERYREPLACE(TRUE);
          IF BackupMode THEN
            f.CREATE(ProjectSettings.Value + '.bak')
          ELSE
            f.CREATE(ProjectSettings.Value);

          REPEAT
            Txt := STRSUBSTNO('"%1"',Type);
            Txt := Txt + STRSUBSTNO(';"%1"',ID);
            Txt := Txt + STRSUBSTNO(';"%1"',Name);
            Txt := Txt + STRSUBSTNO(';"%1"',Modified);
            Txt := Txt + STRSUBSTNO(';"%1"',"Version List");
            Txt := Txt + STRSUBSTNO(';"%1"',Date);
            Txt := Txt + STRSUBSTNO(';"%1"',Time);
            Txt := Txt + STRSUBSTNO(';"%1"',"BLOB Size");
            Txt := Txt + STRSUBSTNO(';"%1"',Compiled);
            f.WRITE(Txt);
          UNTIL NEXT = 0;
          f.CLOSE;
          COPY(Object2);
        END;
      END ELSE BEGIN
        f.OPEN(ProjectSettings.Value);
        f.READ(Txt);
        TxtEmbraced := (COPYSTR(Txt,1,1) = '"');
        IF TxtEmbraced THEN
          SepString := '";"'
        ELSE
          SepString := ';';
        f.SEEK(0);
        REPEAT
          f.READ(Txt);
          IF Txt <> '' THEN BEGIN
            Object2.COPYFILTERS(Rec);
            Object2."Company Name" := '';
            WITH Object2 DO BEGIN
              IF TxtEmbraced THEN
                Txt := COPYSTR(Txt,2,STRLEN(Txt) - 2);

              IF STRPOS(Txt,SepString) <> 0 THEN BEGIN
                EVALUATE(Type,CutHeadFromTail(Txt,SepString));
                EVALUATE(ID,CutHeadFromTail(Txt,SepString));
                IF Action = Action::Read THEN BEGIN
                  EVALUATE(Name,CutHeadFromTail(Txt,SepString));
                  EVALUATE(Modified,CutHeadFromTail(Txt,SepString));
                  EVALUATE("Version List",CutHeadFromTail(Txt,SepString));
                  EVALUATE(Date,CutHeadFromTail(Txt,SepString));
                  EVALUATE(Time,CutHeadFromTail(Txt,SepString));
                  EVALUATE("BLOB Size",CutHeadFromTail(Txt,SepString));
                  EVALUATE(Compiled,CutHeadFromTail(Txt,SepString));
                END;
              END ELSE
                IF Action = Action::Mark THEN
                  IF CutTypeAndID(TypeTxt,IDTxt,Txt) THEN BEGIN
                    IF UPPERCASE(TypeTxt) = 'TAB' THEN
                      Type := Type::Table
                    ELSE
                      EVALUATE(Type,TypeTxt);
                    EVALUATE(ID,IDTxt);
                  END;
            END;
            Object3.COPY(Object2);
            IF Object3.FIND('=') THEN BEGIN
              IF Action = Action::Mark THEN BEGIN
                Rec := Object3;
                MARK(TRUE);
              END ELSE BEGIN
                IF NOT OverwriteName THEN
                  Object2.Name := Object3.Name; //avoid overwriting name
                Object2.MODIFY;
              END;
            END;
          END;
        UNTIL f.POS >= f.LEN;
        f.CLOSE;
      END;
    END;

    PROCEDURE DeleteObjects@1100485005();
    VAR
      Object@1100485000 : Record 2000000001;
    BEGIN
      IF CONFIRM(Text008,FALSE) THEN BEGIN
        IF FINDSET(TRUE,TRUE) THEN
          REPEAT
            IF STRPOS("Version List",'!D~') = 1 THEN
              DELETE;
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE CutHeadFromTail@1100485014(VAR Tail@1100485001 : Text[1024];Separator@1100485002 : Text[5]) Head : Text[1024];
    BEGIN
      IF STRPOS(Tail,Separator) <> 0 THEN BEGIN
        Head := COPYSTR(Tail,1,STRPOS(Tail,Separator) - 1);
        Tail := COPYSTR(Tail,STRPOS(Tail,Separator) + STRLEN(Separator));
      END ELSE BEGIN
        Head := Tail;
        Tail := '';
      END;
    END;

    PROCEDURE CutTypeAndID@1101285000(VAR Type2@1100525000 : Text[30];VAR ID2@1100525001 : Text[30];Txt@1100525002 : Text[1024]) : Boolean;
    VAR
      LastSlashPos@1100525003 : Integer;
      LastDotPos@1100525004 : Integer;
      hTxt@1100525005 : Text[1024];
    BEGIN
      hTxt := Txt;
      Txt := COPYSTR(Txt,LastStrPos(Txt,'\') + 1);
      IF (hTxt = Txt) THEN
        Txt := COPYSTR(Txt,LastStrPos(Txt,'/') + 1);
      IF STRPOS(Txt,'.') <> 0 THEN
        Txt := COPYSTR(Txt,1,LastStrPos(Txt,'.') - 1);
      IF STRLEN(Txt) < 4 THEN
        EXIT(FALSE);

      Type2 := COPYSTR(Txt,1,3);
      ID2 := COPYSTR(Txt,4);

      EXIT(TRUE);
    END;

    PROCEDURE LastStrPos@1101285001(Str2@1100525000 : Text[1024];SubStr2@1100525001 : Text[30]) Pos2 : Integer;
    VAR
      Pos3@1100525002 : Integer;
    BEGIN
      Pos3 := STRPOS(Str2,SubStr2);
      IF Pos3 <> 0 THEN
        EXIT(Pos3 + LastStrPos(COPYSTR(Str2,Pos3 + 1),SubStr2))
      ELSE
        EXIT(Pos3);
    END;

    PROCEDURE CompareandMerge@1100285513();
    VAR
      ProjectSettings@1100285500 : Record 77780;
      Folder1@1100285503 : Text;
      Folder2@1100285502 : Text;
      Folder3@1100285501 : Text;
      FileName@1100285504 : Text[101];
      wsCommand@1100285506 : Text[1024];
      wsCommand2@1100285505 : Text[1024];
      WSHshel@1100285507 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      tempvar@1100285509 : Integer;
      tempbool@1100285508 : Boolean;
      BCompare@1000 : Text;
      addVersion@1100285510 : Text[50];
      tempFileName@1101285000 : Text;
      FileName2@1101285001 : Text;
      FileName3@1101285002 : Text;
    BEGIN
      ProjectSettings.GET(ProjectSettings.Setting::Folder2,USERID);
      Folder2 := ProjectSettings.Value;

      ProjectSettings.GET(ProjectSettings.Setting::Folder3,USERID);
      Folder3 := ProjectSettings.Value;

      FileName := COPYSTR(FORMAT(Type),1,3)+FORMAT(ID,0,'<Integer>')+'.txt';
      //IF ID < 100000 THEN  FileName := COPYSTR(FORMAT(Type),1,3)+FORMAT(ID,0,'<Integer,6><Filler Character,0>')+'.txt';

      ProjectSettings.GET(ProjectSettings.Setting::Folder1,USERID);
      Folder1 := ProjectSettings.Value;

      ProjectSettings.GET(ProjectSettings.Setting::"Version addition",USERID);
      addVersion := ProjectSettings.Value;

      tempFileName := '"' + Folder1 + '\pag55515.txt", logfile="' + Folder1 + '\pag55515.log" ';
      tempFileName := '"' + Folder1 + '\pag55515';
      ExportForEdit(tempFileName,FileName,addVersion,FALSE);
      ProjectSettings.GET(ProjectSettings.Setting::CompareToolPath,USERID);
      BCompare := ProjectSettings.Value;

      wsCommand := '"'+BCompare+'" /favorleft /solo '+
                   '"' + Folder1 + '\pag55515.txt" ';

      FileName2 := Folder2 + '\'+ FileName;
      FileName3 := Folder3 + '\'+ FileName;
      IF Folder2 <> '' THEN
        IF NOT ClientFileHelper.Exists(FileName2) THEN BEGIN
          FileName2 := FileName3;
          Folder3 := '';
        END;

      IF Folder3 <> '' THEN
        IF NOT ClientFileHelper.Exists(FileName3) THEN BEGIN
          FileName3 := FileName2;
          Folder2 := '';
        END;

      IF Folder2 <> '' THEN
        wsCommand += '"' + FileName2 + '" ';
      IF Folder3 <> '' THEN
        wsCommand += '"' + FileName3 + '" ';

      wsCommand += ' /mergeoutput="' + Folder1 + '\pag55515in.txt" ';

      CLEAR(ProjectSettings);
      IF NOT ProjectSettings.GET(ProjectSettings.Setting::cmd3,USERID) THEN BEGIN
        ProjectSettings.INIT;
        ProjectSettings.UserName := USERID;
        ProjectSettings.Setting := ProjectSettings.Setting::cmd3;
        ProjectSettings.INSERT;
      END;
      ProjectSettings.Value := COPYSTR(wsCommand,1,MAXSTRLEN(ProjectSettings.Value));
      ProjectSettings.MODIFY;

      CREATE(WSHshel,TRUE,TRUE);
      WSHshel.Run(wsCommand,tempvar,tempbool);

      IF ProjectSettings.GET(ProjectSettings.Setting::cmd3,USERID) THEN
        ProjectSettings.DELETE;
    END;

    PROCEDURE ExportForEdit@1100285502(_filename@1100285500 : Text[250];FileName@1100285521 : Text[101];versionAdd@1001 : Text[50];keepDates@1002 : Boolean);
    VAR
      WSHfile@1100285522 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      FilePath@1100285520 : Text[151];
      FullFileName@1100285519 : Text[251];
      Obj@1100285518 : Record 2000000001;
      dial@1100285517 : Dialog;
      ddate@1100285516 : Date;
      ttime@1100285515 : Time;
      Obj2@1100285514 : Record 2000000001;
      Folder1@1100285513 : Text;
      Folder2@1100285512 : Text;
      Folder3@1100285511 : Text;
      wsCommand@1100285510 : Text[1024];
      wsCommand2@1100285509 : Text[1024];
      tempvar@1100285508 : Integer;
      tempbool@1100285507 : Boolean;
      Sess@1100285506 : Record 2000000110;
      WSHshel@1100285505 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      ObjectManagement@1101285000 : Codeunit 55310;
      OperatingSystemMgt@1100285100 : Codeunit 11012364;
    BEGIN
      Obj.SETRANGE(Type,Type);
      Obj.SETRANGE(ID,ID);

      IF Sess.FIND THEN;
      Sess.SETRANGE("Session ID",SESSIONID);
      Sess.SETRANGE("Server Instance ID",SERVICEINSTANCEID);
      IF Sess.FIND THEN;
      Sess.GET(SERVICEINSTANCEID,SESSIONID);

      CREATE(WSHshel,TRUE,TRUE);
      ProjectSettings.GET(ProjectSettings.Setting::"Path to finsql",USERID);
      // ProjectSettings.Value := GetClientPath;
      wsCommand := '"' + ProjectSettings.Value + '\finsql" ';
      wsCommand2 := 'command=exportobjects, ';

      wsCommand2 += 'servername='+
        FindDatabaseServerName+
        ', database='+Sess."Database Name"+
        ', ntauthentication=1, ';

      dial.OPEN('Exporting...\'+
                '#1######################',FileName);
      dial.UPDATE(1);

      Obj2.GET(Type,"Company Name",ID);
      ddate := Obj2.Date;
      ttime := Obj2.Time;
      IF NOT keepDates THEN BEGIN
        Obj2.Date := TODAY;
        Obj2.Time := 100000T;
        IF (versionAdd<>'') AND (STRPOS(Obj2."Version List",versionAdd)=0) THEN
          Obj2."Version List" += ','+versionAdd;
        IF Obj2.MODIFY(FALSE) THEN;
      END;
      Obj2.SETRECFILTER;

      wsCommand2 += 'file=' + _filename +'.txt", ';
      wsCommand2 += 'logfile=' + _filename +'.log" , ';
      wsCommand2 += 'filter="ID='+FORMAT(Obj2.ID,0,2) + ';Type='+FORMAT(Obj2.Type)+'"';
      tempvar := 0;
      tempbool := TRUE;

      CLEAR(ProjectSettings);
      ProjectSettings.INIT;
      ProjectSettings.UserName := USERID;
      ProjectSettings.Setting := ProjectSettings.Setting::cmd1;
      ProjectSettings.Value := COPYSTR(wsCommand,1,MAXSTRLEN(ProjectSettings.Value));
      IF NOT ProjectSettings.INSERT THEN ProjectSettings.MODIFY;
      ProjectSettings.Setting := ProjectSettings.Setting::cmd2;
      ProjectSettings.Value := COPYSTR(wsCommand,MAXSTRLEN(ProjectSettings.Value)+1,MAXSTRLEN(ProjectSettings.Value));
      IF NOT ProjectSettings.INSERT THEN ProjectSettings.MODIFY;

      ProjectSettings.Setting := ProjectSettings.Setting::cmd5;
      ProjectSettings.Value := COPYSTR(wsCommand2,1,MAXSTRLEN(ProjectSettings.Value));
      IF NOT ProjectSettings.INSERT THEN ProjectSettings.MODIFY;
      ProjectSettings.Setting := ProjectSettings.Setting::cmd6;
      ProjectSettings.Value := COPYSTR(wsCommand,MAXSTRLEN(ProjectSettings.Value)+1,MAXSTRLEN(ProjectSettings.Value));
      IF NOT ProjectSettings.INSERT THEN ProjectSettings.MODIFY;

      // ObjectManagement.ExecuteShellCommand(wsCommand,wsCommand2,'');
      CLEAR(OperatingSystemMgt);
      // tempvar :=
      OperatingSystemMgt.ClientShell(wsCommand,wsCommand2,TRUE,FALSE);

      Obj2.Date := ddate;
      Obj2.Time := ttime;
      IF Obj2.MODIFY(FALSE) THEN;
      CLEAR(Obj2);

      dial.CLOSE;
    END;

    PROCEDURE ImportMerged@1100285522();
    VAR
      WSHfile@1100285519 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      FileName@1100285518 : Text[101];
      FilePath@1100285517 : Text[151];
      FullFileName@1100285516 : Text[251];
      Obj@1100285515 : Record 2000000001;
      dial@1100285514 : Dialog;
      ddate@1100285513 : Date;
      ttime@1100285512 : Time;
      Obj2@1100285511 : Record 2000000001;
      Folder1@1100285510 : Text;
      Folder2@1100285509 : Text;
      Folder3@1100285508 : Text;
      wsCommand@1100285507 : Text[1024];
      wsCommand2@1100285506 : Text[1024];
      tempvar@1100285505 : Integer;
      tempbool@1100285504 : Boolean;
      Sess@1100285503 : Record 2000000110;
      WSHshel@1100285502 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      ProjectSettings@1100285500 : Record 77780;
      OperatingSystemMgt@1100285100 : Codeunit 11012364;
    BEGIN
      dial.OPEN('import');
      ProjectSettings.GET(ProjectSettings.Setting::Folder1,USERID);
      Folder1 := ProjectSettings.Value;
      Sess.GET(SERVICEINSTANCEID,SESSIONID);

      CREATE(WSHshel,TRUE,TRUE);
      ProjectSettings.GET(ProjectSettings.Setting::"Path to finsql",USERID);
      wsCommand := '"' + ProjectSettings.Value + '\finsql" ';
      wsCommand2 := 'command=importobjects, ';

      wsCommand2 += 'servername='+
        FindDatabaseServerName+
        ', database='+Sess."Database Name"+
        ', ntauthentication=1, ';

      wsCommand2 += 'file="' + Folder1 + '\pag55515in.txt", logfile="'+ Folder1 + '\pag55515in.log"';
      tempvar := 0;
      tempbool := TRUE;
      // WSHshel.Run(wsCommand+wsCommand2,tempvar,tempbool);

      CLEAR(OperatingSystemMgt);
      tempvar := OperatingSystemMgt.ClientShell(wsCommand,wsCommand2,TRUE,FALSE);

      dial.CLOSE;

      IF ProjectSettings.GET(ProjectSettings.Setting::cmd2,USERID) THEN ProjectSettings.DELETE;
      IF ProjectSettings.GET(ProjectSettings.Setting::cmd1,USERID) THEN ProjectSettings.DELETE;
      IF ProjectSettings.GET(ProjectSettings.Setting::cmd5,USERID) THEN ProjectSettings.DELETE;
      IF ProjectSettings.GET(ProjectSettings.Setting::cmd6,USERID) THEN ProjectSettings.DELETE;
    END;

    PROCEDURE ImportNew3@1100285500();
    VAR
      WSHfile@1100285519 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      FileName@1100285518 : Text[101];
      FilePath@1100285517 : Text[151];
      FullFileName@1100285516 : Text[251];
      Obj@1100285515 : Record 2000000001;
      dial@1100285514 : Dialog;
      ddate@1100285513 : Date;
      ttime@1100285512 : Time;
      Obj2@1100285511 : Record 2000000001;
      Folder@1100285510 : Text;
      wsCommand@1100285507 : Text[1024];
      wsCommand2@1100285506 : Text[1024];
      tempvar@1100285505 : Integer;
      tempbool@1100285504 : Boolean;
      Sess@1100285503 : Record 2000000110;
      WSHshel@1100285502 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      ProjectSettings@1100285500 : Record 77780;
      OperatingSystemMgt@1100285100 : Codeunit 11012364;
    BEGIN
      IF STRPOS("Version List",'SE') <> 0 THEN EXIT;

      ProjectSettings.GET(ProjectSettings.Setting::Folder3,USERID);
      Folder := ProjectSettings.Value;

      FileName := COPYSTR(FORMAT(Type),1,3)+FORMAT(ID,0,'<Integer>')+'.txt';
      //IF ID < 100000 THEN
      //  FileName := COPYSTR(FORMAT(Type),1,3)+FORMAT(ID,0,'<Integer,6><Filler Character,0>')+'.txt';

      Sess.GET(SERVICEINSTANCEID,SESSIONID);

      CREATE(WSHshel,TRUE,TRUE);
      ProjectSettings.GET(ProjectSettings.Setting::"Path to finsql",USERID);
      wsCommand := '"' + ProjectSettings.Value + '\finsql" ';
      wsCommand2 := 'command=importobjects, ';

      // ProjectSettings.GET(ProjectSettings.Setting::"SQL-server",USERID);
      wsCommand2 += 'servername='+
        FindDatabaseServerName+
        ', database='+Sess."Database Name"+
        ', ntauthentication=1, ';

      wsCommand2 += 'file="' + Folder + '\' + FileName + '" ';
      tempvar := 1;
      tempbool := TRUE;
      // WSHshel.Run(wsCommand+wsCommand2,tempvar,tempbool);
      CLEAR(OperatingSystemMgt);
      tempvar := OperatingSystemMgt.ClientShell(wsCommand,wsCommand2,TRUE,FALSE);
    END;

    LOCAL PROCEDURE FindDatabaseServerName@1100285501() DatabaseServerName : Text[1024];
    VAR
      ActiveSession@1100285500 : Record 2000000110;
      ServerFile@1100285501 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.File";
      XMLDoc@1100285502 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XMLNode@1100285503 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DatabaseServer@1100285504 : Text;
      DatabaseInstance@1100285505 : Text;
    BEGIN
      ActiveSession.SETRANGE("Session ID",SESSIONID);
      ActiveSession.FINDFIRST;

      XMLDoc := XMLDoc.XmlDocument;
      IF ServerFile.Exists(APPLICATIONPATH + 'Instances\' + ActiveSession."Server Instance Name" + '\CustomSettings.config') THEN
        XMLDoc.Load(APPLICATIONPATH + 'Instances\' + ActiveSession."Server Instance Name" + '\CustomSettings.config')
      ELSE
        XMLDoc.Load(APPLICATIONPATH + 'CustomSettings.config');

      XMLNode := XMLDoc.SelectSingleNode('//appSettings/add[@key=''DatabaseServer'']');
      IF NOT ISNULL(XMLNode) THEN
        DatabaseServer := XMLNode.Attributes.Item(1).InnerText ;
      //  DatabaseServer := XMLNode.Attributes.Item(1).InnerText + '.iteroab.local';

      XMLNode := XMLDoc.SelectSingleNode('//appSettings/add[@key=''DatabaseInstance'']');
      IF NOT ISNULL(XMLNode) THEN
        DatabaseInstance := XMLNode.Attributes.Item(1).InnerText;

      CLEAR(XMLDoc);

      IF DatabaseInstance = '' THEN
        DatabaseServerName := DatabaseServer
      ELSE
        DatabaseServerName := DatabaseServer + '\' + DatabaseInstance;
    END;

    PROCEDURE ExportObjects4@1100285505();
    VAR
      ProjectSettings@1100525002 : Record 77780;
      WSHfile@1100525000 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      FileName@1100525001 : Text[101];
      FilePath@1100525004 : Text[151];
      FullFileName@1100525003 : Text[251];
      Obj@1100285000 : Record 2000000001;
      dial@1100285001 : Dialog;
      ddate@1100290000 : Date;
      ttime@1100290001 : Time;
      Obj2@1100290002 : Record 2000000001;
      wsCommand@1100285506 : Text[1024];
      wsCommand2@1100285505 : Text[1024];
      tempvar@1100285504 : Integer;
      tempbool@1100285503 : Boolean;
      Sess@1100285502 : Record 2000000110;
      modif@1100285501 : Boolean;
      WSHshel@1100285500 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      filemgnt@1100285507 : Codeunit 419;
      LicensePermission@1100285508 : Record 2000000043;
      objFilterStr@1100285509 : Text;
    BEGIN
      //150424
      CREATE(WSHfile,TRUE,TRUE);

      ProjectSettings.GET(1,USERID);
      FilePath := ProjectSettings.Value;
      IF FilePath = '' THEN
        ERROR(Text001);

      FullFileName := filemgnt.SaveFileDialog('','','Text File *.txt| *.txt');
      IF FullFileName = '' THEN
        EXIT;
      FilePath := filemgnt.GetDirectoryName(FullFileName);

      ProjectSettings.GET(ProjectSettings.Setting::"ID filter product",USERID);
      Obj.SETRANGE(Type,Obj.Type::Table,Obj.Type::Query);
      Obj.SETFILTER(ID,ProjectSettings.Value);

      objFilterStr := Obj.GETFILTER(ID);
      IF Obj.FINDSET(FALSE) THEN
      REPEAT
        LicensePermission.GET(Obj.Type,Obj.ID);
        IF LicensePermission."Read Permission" = LicensePermission."Read Permission"::" " THEN
          objFilterStr += '&<>' + FORMAT(Obj.ID,0,2);
      UNTIL Obj.NEXT=0;

      Obj.SETFILTER(ID,objFilterStr);

      CLEAR(WSHfile);

      IF NOT CONFIRM(Text020,TRUE,Obj.COUNT,FilePath) THEN
        ERROR('');

      Sess.GET(SERVICEINSTANCEID,SESSIONID);

      CREATE(WSHshel,TRUE,TRUE);

      ProjectSettings.GET(ProjectSettings.Setting::"Path to finsql",USERID);
      wsCommand := '"' + ProjectSettings.Value + '\finsql" ';
      wsCommand += 'command=exportobjects, ';

      // ProjectSettings.GET(ProjectSettings.Setting::"SQL-server",USERID);
      wsCommand += 'servername='+
        FindDatabaseServerName+
        ', database='+Sess."Database Name"+
        ', ntauthentication=1, ';

      dial.OPEN('Exporting...\'+
                '#1######################',FileName);


      dial.UPDATE(1);
      IF EXISTS(FullFileName) THEN
        ERASE(FullFileName);

      wsCommand2 := 'file="' + FullFileName + '", ';
      wsCommand2 := 'logfile="' + FullFileName + '.log", ';
      wsCommand2 += 'filter=ID='+ Obj.GETFILTER(ID) + ';Type=' + Obj.GETFILTER(Type);
      tempvar := 0;
      tempbool := TRUE;
      WSHshel.Run(wsCommand+wsCommand2,tempvar,tempbool);


      dial.CLOSE;
    END;

    PROCEDURE ImportMergedCompile@1101285006();
    VAR
      WSHfile@1100285519 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      FileName@1100285518 : Text[101];
      FilePath@1100285517 : Text[151];
      FullFileName@1100285516 : Text[251];
      Obj@1100285515 : Record 2000000001;
      dial@1100285514 : Dialog;
      ddate@1100285513 : Date;
      ttime@1100285512 : Time;
      Obj2@1100285511 : Record 2000000001;
      Folder1@1100285510 : Text;
      Folder2@1100285509 : Text;
      Folder3@1100285508 : Text;
      wsCommand@1100285507 : Text[1024];
      wsCommand2@1100285506 : Text[1024];
      tempvar@1100285505 : Integer;
      tempbool@1100285504 : Boolean;
      Sess@1100285503 : Record 2000000110;
      WSHshel@1100285502 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      ProjectSettings@1100285500 : Record 77780;
    BEGIN
      Sess.GET(SERVICEINSTANCEID,SESSIONID);

      CREATE(WSHshel,TRUE,TRUE);

      dial.OPEN('compile\#1####### #2###########');
      dial.UPDATE(1,FORMAT(Type));
      dial.UPDATE(2,FORMAT(ID));

      ProjectSettings.GET(ProjectSettings.Setting::"Path to finsql",USERID);
      wsCommand := '"' + ProjectSettings.Value + '\finsql" ';
      wsCommand += 'command=CompileObjects, ';

      wsCommand += 'servername='+
        FindDatabaseServerName+
        ', database='+Sess."Database Name"+
        ', ntauthentication=1, ';

      wsCommand2 := 'filter="ID='+FORMAT(ID,0,2) + ';Type='+FORMAT(Type)+'"';

      tempvar := 0;
      tempbool := TRUE;
      WSHshel.Run(wsCommand+wsCommand2,tempvar,tempbool);
      dial.CLOSE;

      IF ProjectSettings.GET(ProjectSettings.Setting::cmd2,USERID) THEN ProjectSettings.DELETE;
      IF ProjectSettings.GET(ProjectSettings.Setting::cmd1,USERID) THEN ProjectSettings.DELETE;
      IF ProjectSettings.GET(ProjectSettings.Setting::cmd5,USERID) THEN ProjectSettings.DELETE;
      IF ProjectSettings.GET(ProjectSettings.Setting::cmd6,USERID) THEN ProjectSettings.DELETE;
    END;

    LOCAL PROCEDURE GetClientPath@1101285007() : Text;
    VAR
      Path@1101285000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path";
      Assembly@1101285001 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Reflection.Assembly" RUNONCLIENT;
    BEGIN
      EXIT(Path.GetDirectoryName(
        Assembly.GetExecutingAssembly().GetName().CodeBase
      ));
    END;

    BEGIN
    END.
  }
}

