OBJECT Report 11125669 Replace Estimate Data RAW
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Ersetzen Kalkulationsdaten;
               ENU=Replace Estimate Data;
               NLD=Vervangen calculatiegegevens;
               NOR=Erstatt kalkyledata;
               SVE=Ers„tt kalkyldata];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 1356;    ;DataItem;                    ;
               DataItemTable=Table11125698;
               DataItemTableView=SORTING(Estimate No.,Tender Paragraph No.,Line No.);
               OnPreDataItem=BEGIN
                               StartUpdate;
                               CurrReport.BREAK;
                             END;

               ReqFilterFields=Estimate No.,Tender Paragraph No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnInit=BEGIN
               InitPageRequestOptions;
             END;

      OnOpenPage=BEGIN
                   InitRequestOptions;
                 END;

    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group;
                  Layout=Columns }

      { 1100528500;2;Group  ;
                  CaptionML=[DEU=Alt;
                             ENU=Old;
                             NLD=Oud;
                             SVE=Gammal];
                  GroupType=Group }

      { 1100525003;3;Field  ;
                  CaptionML=[DEU=Tarifcode;
                             ENU=Rate Code;
                             NLD=Tariefcode;
                             NOR=Gammel;
                             SVE=Gammal];
                  SourceExpr=OldRate;
                  Visible=OldRateEDITABLE;
                  Editable=OldRateEDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(0);
                             END;

                  OnLookup=BEGIN
                             EstRateRec.SETRANGE("Estimate No.", gvEst);
                             IF PAGE.RUNMODAL(0,EstRateRec) = ACTION::LookupOK THEN BEGIN  //db, 04-03-09
                               IF gvAction <> 1 THEN EXIT;
                               OldRate := EstRateRec."Rate Code";
                               OldRateTxt := EstRateRec.Description;
                               CheckRequestOptions(0);
                             END;
                           END;
                            }

      { 1100525004;3;Field  ;
                  CaptionML=[DEU=Normensatz;
                             ENU=Norm Group;
                             NLD=Normenset;
                             SVE=Normgrupp];
                  SourceExpr=OldNormGroup;
                  TableRelation="Norm Group";
                  Visible=OldNormGroupEDITABLE;
                  Editable=OldNormGroupEDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(0);
                             END;
                              }

      { 1100525005;3;Field  ;
                  CaptionML=[DEU=Bedingung;
                             ENU=Condition;
                             NLD=Conditie;
                             SVE=Villkor];
                  SourceExpr=OldCondition;
                  TableRelation=Condition;
                  Visible=OldConditionEDITABLE;
                  Editable=OldConditionEDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(0);
                             END;
                              }

      { 1100525006;3;Field  ;
                  CaptionML=[DEU=Rabattbedingungssatz (Debitor);
                             ENU=Discount Term Group (Customer);
                             NLD=Kortingsconditieset (klant);
                             SVE=Rabattvillkorsgrupp (kund)];
                  SourceExpr=OldDiscGroup1;
                  Visible=OldDiscGroup1EDITABLE;
                  Editable=OldDiscGroup1EDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(0);
                             END;

                  OnLookup=BEGIN
                             DiscGrpRec.SETRANGE(Level, DiscGrpRec.Level::Customer);
                             PAGE.RUNMODAL(0, DiscGrpRec);
                           END;
                            }

      { 1100525007;3;Field  ;
                  CaptionML=[DEU=Rabattbedingungssatz (Auftrag);
                             ENU=Discount Term Group (Job);
                             NLD=Kortingsconditieset (opdracht);
                             SVE=Rabattvillkorsgrupp (jobb)];
                  SourceExpr=OldDiscGroup2;
                  Visible=OldDiscGroup2EDITABLE;
                  Editable=OldDiscGroup2EDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(0);
                             END;

                  OnLookup=BEGIN
                             DiscGrpRec.SETRANGE(Level, DiscGrpRec.Level::Job);
                             PAGE.RUNMODAL(0, DiscGrpRec);
                           END;
                            }

      { 1100525008;3;Field  ;
                  CaptionML=[DEU=Stichtag Artikelpreise;
                             ENU=Reference Date Item Prices;
                             NLD=Peildatum artikelprijzen;
                             SVE=Referensdatum f”r artikelpriser];
                  SourceExpr=OldRefDateItem;
                  Visible=OldRefDateItemEDITABLE;
                  Editable=OldRefDateItemEDITABLE }

      { 1100525009;3;Field  ;
                  CaptionML=[DEU=Artikelnr.;
                             ENU=Item No.;
                             NLD=Artikel;
                             SVE=Artikelnr];
                  SourceExpr=OldItem;
                  TableRelation=Item;
                  Visible=OldItemEDITABLE;
                  Editable=OldItemEDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(0);
                             END;
                              }

      { 1100525010;3;Field  ;
                  CaptionML=[DEU=Hersteller;
                             ENU=Manufacturer;
                             NLD=Fabrikant;
                             SVE=Tillverkare];
                  SourceExpr=OldManufacturer;
                  TableRelation="ETIM Vendor - Central Mgt";
                  Visible=OldManufacturerEDITABLE;
                  Editable=OldManufacturerEDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(0);
                             END;
                              }

      { 1100525011;3;Field  ;
                  CaptionML=[DEU=Basisartikel;
                             ENU=Basic Item;
                             NLD=Basisartikel;
                             SVE=Basartikel];
                  SourceExpr=OldBasicItem;
                  Visible=OldBasicItemEDITABLE;
                  Editable=OldBasicItemEDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(0);
                             END;

                  OnLookup=BEGIN
                             BasicItemRec.SETRANGE(Manufacturer, OldManufacturer);
                             IF PAGE.RUNMODAL(0,BasicItemRec) = ACTION::LookupOK THEN BEGIN
                               IF gvAction <> 6 THEN EXIT;
                               OldManufacturer := BasicItemRec.Manufacturer;
                               OldBasicItem := BasicItemRec."Product Code";
                               CheckRequestOptions(0);
                             END;
                           END;
                            }

      { 1100525012;3;Field  ;
                  CaptionML=[DEU=Kreditor;
                             ENU=Vendor;
                             NLD=Leverancier;
                             SVE=Leverant”r];
                  SourceExpr=OldVendor;
                  TableRelation="ETIM Vendor - Central Mgt";
                  Visible=OldVendorEDITABLE;
                  Editable=OldVendorEDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(0);
                             END;
                              }

      { 1100525013;3;Field  ;
                  CaptionML=[DEU=Handelsartikel;
                             ENU=Trade Item;
                             NLD=Handelsartikel;
                             SVE=Anskaffningsartikel];
                  SourceExpr=OldTradeItem;
                  Visible=OldTradeItemEDITABLE;
                  Editable=OldTradeItemEDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(0);
                             END;

                  OnLookup=BEGIN
                             TradeItemRec.SETRANGE(Vendor, OldVendor);
                             IF PAGE.RUNMODAL(0,TradeItemRec) = ACTION::LookupOK THEN BEGIN
                               IF gvAction <> 6 THEN EXIT;
                               OldVendor := TradeItemRec.Vendor;
                               OldTradeItem := TradeItemRec."Item Code";
                               CheckRequestOptions(0);
                             END;
                           END;
                            }

      { 1100528501;2;Group  ;
                  CaptionML=[DEU=Neu;
                             ENU=New;
                             NLD=Nieuw;
                             SVE="Ny "];
                  GroupType=Group }

      { 1100525027;3;Field  ;
                  CaptionML=[DEU=Tarifcode;
                             ENU=Rate Code;
                             NLD=Tariefcode;
                             NOR=Ny;
                             SVE=Nytt];
                  SourceExpr=NewRate;
                  Visible=NewRateEDITABLE;
                  Editable=NewRateEDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(1);
                             END;

                  OnLookup=BEGIN
                             EstRateRec.SETRANGE("Estimate No.", gvEst);
                             IF PAGE.RUNMODAL(0,EstRateRec) = ACTION::LookupOK THEN BEGIN
                               IF gvAction <> 1 THEN EXIT;
                               NewRate := EstRateRec."Rate Code";
                               NewRateTxt := EstRateRec.Description;
                               CheckRequestOptions(1);
                             END;
                           END;
                            }

      { 1100525024;3;Field  ;
                  CaptionML=[DEU=Normensatz;
                             ENU=Norm Group;
                             NLD=Normenset;
                             SVE=Normgrupp];
                  SourceExpr=NewNormGroup;
                  TableRelation="Norm Group";
                  Visible=NewNormGroupEDITABLE;
                  Editable=NewNormGroupEDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(1);
                             END;
                              }

      { 1100525028;3;Field  ;
                  CaptionML=[DEU=Bedingung;
                             ENU=Condition;
                             NLD=Conditie;
                             SVE=Villkor];
                  SourceExpr=NewCondition;
                  TableRelation=Condition;
                  Visible=NewConditionEDITABLE;
                  Editable=NewConditionEDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(1);
                             END;
                              }

      { 1100525030;3;Field  ;
                  CaptionML=[DEU=Rabattbedingungssatz (Debitor);
                             ENU=Discount Term Group (Customer);
                             NLD=Kortingsconditieset (klant);
                             SVE=Rabattvillkorsgrupp (kund)];
                  SourceExpr=NewDiscGroup1;
                  Visible=NewDiscGroup1EDITABLE;
                  Editable=NewDiscGroup1EDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(1);
                             END;

                  OnLookup=BEGIN
                             DiscGrpRec.SETRANGE(Level, DiscGrpRec.Level::Customer);
                             IF PAGE.RUNMODAL(0, DiscGrpRec) = ACTION::LookupOK THEN BEGIN
                               IF gvAction <> 5 THEN EXIT;
                               NewDiscGroup1 := DiscGrpRec.Code;
                               NewDiscGroup1Txt := DiscGrpRec.Description;
                               CheckRequestOptions(1);
                             END;
                           END;
                            }

      { 1100525031;3;Field  ;
                  CaptionML=[DEU=Rabattbedingungssatz (Auftrag);
                             ENU=Discount Term Group (Job);
                             NLD=Kortingsconditieset (opdracht);
                             SVE=Rabattvillkorsgrupp (jobb)];
                  SourceExpr=NewDiscGroup2;
                  Visible=NewDiscGroup2EDITABLE;
                  Editable=NewDiscGroup2EDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(1);
                             END;

                  OnLookup=BEGIN
                             DiscGrpRec.SETRANGE(Level, DiscGrpRec.Level::Job);
                             IF PAGE.RUNMODAL(0, DiscGrpRec) = ACTION::LookupOK THEN BEGIN
                               IF gvAction <> 5 THEN EXIT;
                               NewDiscGroup2 := DiscGrpRec.Code;
                               NewDiscGroup2Txt := DiscGrpRec.Description;
                               CheckRequestOptions(1);
                             END;
                           END;
                            }

      { 1100525020;3;Field  ;
                  CaptionML=[DEU=Stichtag Artikelpreise;
                             ENU=Reference Date Item Prices;
                             NLD=Peildatum artikelprijzen;
                             SVE=Referensdatum f”r artikelpriser];
                  SourceExpr=NewRefDateItem;
                  Visible=NewRefDateItemEDITABLE;
                  Editable=NewRefDateItemEDITABLE }

      { 1100525019;3;Field  ;
                  CaptionML=[DEU=Artikelnr.;
                             ENU=Item No.;
                             NLD=Artikel;
                             SVE=Artikelnr];
                  SourceExpr=NewItem;
                  TableRelation=Item;
                  Visible=NewItemEDITABLE;
                  Editable=NewItemEDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(1);
                             END;
                              }

      { 1100525018;3;Field  ;
                  CaptionML=[DEU=Hersteller;
                             ENU=Manufacturer;
                             NLD=Fabrikant;
                             SVE=Tillverkare];
                  SourceExpr=NewManufacturer;
                  TableRelation="ETIM Vendor - Central Mgt";
                  Visible=NewManufacturerEDITABLE;
                  Editable=NewManufacturerEDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(1);
                             END;
                              }

      { 1100525017;3;Field  ;
                  CaptionML=[DEU=Basisartikel;
                             ENU=Basic Item;
                             NLD=Basisartikel;
                             SVE=Basartikel];
                  SourceExpr=NewBasicItem;
                  Visible=NewBasicItemEDITABLE;
                  Editable=NewBasicItemEDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(1);
                             END;

                  OnLookup=BEGIN
                             BasicItemRec.SETRANGE(Manufacturer, NewManufacturer);
                             IF PAGE.RUNMODAL(0,BasicItemRec) = ACTION::LookupOK THEN BEGIN
                               IF gvAction <> 6 THEN EXIT;
                               NewManufacturer := BasicItemRec.Manufacturer;
                               NewBasicItem := BasicItemRec."Product Code";
                               CheckRequestOptions(1);
                             END;
                           END;
                            }

      { 1100525016;3;Field  ;
                  CaptionML=[DEU=Kreditor;
                             ENU=Vendor;
                             NLD=Leverancier;
                             SVE=Leverant”r];
                  SourceExpr=NewVendor;
                  TableRelation="ETIM Vendor - Central Mgt";
                  Visible=NewVendorEDITABLE;
                  Editable=NewVendorEDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(1);
                             END;
                              }

      { 1100525015;3;Field  ;
                  CaptionML=[DEU=Handelsartikel;
                             ENU=Trade Item;
                             NLD=Handelsartikel;
                             SVE=Anskaffningsartikel];
                  SourceExpr=NewTradeItem;
                  Visible=NewTradeItemEDITABLE;
                  Editable=NewTradeItemEDITABLE;
                  OnValidate=BEGIN
                               CheckRequestOptions(1);
                             END;

                  OnLookup=BEGIN
                             TradeItemRec.SETRANGE(Vendor, NewVendor);
                             IF PAGE.RUNMODAL(0,TradeItemRec) = ACTION::LookupOK THEN BEGIN
                               IF gvAction <> 6 THEN EXIT;
                               NewVendor := TradeItemRec.Vendor;
                               NewTradeItem := TradeItemRec."Item Code";
                               CheckRequestOptions(1);
                             END;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      gvEst@1100485054 : Code[20];
      gvAction@1100485050 : Integer;
      EstRec@1100485045 : Record 11012151;
      EstRateRec@1100485040 : Record 11012160;
      GroupRec@1100485039 : Record 11012164;
      ConditionRec@1100485038 : Record 11020220;
      VendorRec@1100485037 : Record 11012304;
      DiscGrpRec@1100525004 : Record 11012338;
      ItemRec@1100525019 : Record 27;
      BasicItemRec@1100525028 : Record 11012316;
      TradeItemRec@1100525029 : Record 11012317;
      UpdateEst@1100485033 : Codeunit 11125671;
      UseLock@1100485027 : Boolean;
      OldRate@1100485019 : Code[20];
      NewRate@1100485018 : Code[20];
      OldRateTxt@1100485017 : Text[50];
      NewRateTxt@1100485016 : Text[50];
      OldNormGroup@1100485015 : Code[20];
      NewNormGroup@1100485014 : Code[20];
      OldNormGroupTxt@1100485013 : Text[100];
      NewNormGroupTxt@1100485012 : Text[100];
      OldCondition@1100485011 : Code[20];
      NewCondition@1100485010 : Code[20];
      OldConditionTxt@1100485009 : Text[50];
      NewConditionTxt@1100485008 : Text[50];
      OldVendor@1100485007 : Code[20];
      NewVendor@1100485006 : Code[20];
      OldVendorTxt@1100485005 : Text[50];
      NewVendorTxt@1100485004 : Text[50];
      OldDiscGroup1@1100525003 : Code[20];
      NewDiscGroup1@1100525002 : Code[20];
      OldDiscGroup1Txt@1100525001 : Text[50];
      NewDiscGroup1Txt@1100525000 : Text[50];
      OldDiscGroup2@1100525008 : Code[20];
      NewDiscGroup2@1100525007 : Code[20];
      OldDiscGroup2Txt@1100525006 : Text[50];
      NewDiscGroup2Txt@1100525005 : Text[50];
      OldRefDateItem@1100525009 : Date;
      NewRefDateItem@1100525010 : Date;
      OldItem@1100525011 : Code[20];
      NewItem@1100525012 : Code[20];
      OldItemTxt@1100525017 : Text[100];
      NewItemTxt@1100525018 : Text[100];
      OldManufacturer@1100525020 : Code[20];
      NewManufacturer@1100525021 : Code[20];
      OldManufacturerTxt@1100525023 : Text[50];
      NewManufacturerTxt@1100525022 : Text[50];
      OldBasicItem@1100525013 : Code[20];
      NewBasicItem@1100525014 : Code[20];
      OldBasicItemTxt@1100525025 : Text[50];
      NewBasicItemTxt@1100525024 : Text[50];
      OldTradeItem@1100525015 : Code[20];
      NewTradeItem@1100525016 : Code[20];
      OldTradeItemTxt@1100525027 : Text[50];
      NewTradeItemTxt@1100525026 : Text[50];
      Text000@1100525030 : TextConst 'DEU=Ersetzen Sie den Artikel durch gleichartige Art;ENU=Replace Item by same Type;NLD=Vervang artikel door eenzelfde soort;NOR=Erstatt artikkel med samme type;SVE=Ers„tt artikel med samma typ';
      Text001@1100525031 : TextConst 'DEU=W„hlen Sie 1 Artikelart aus;ENU=Please select 1 itemtype;NLD=Selecteer 1 artikelsoort;NOR=Velg 1 artikkeltype;SVE=V„lj 1 artikeltyp';
      CheckValidate@1100525032 : Boolean;
      OldRateEDITABLE@1100528600 : Boolean INDATASET;
      NewRateEDITABLE@1100528601 : Boolean INDATASET;
      OldNormGroupEDITABLE@1100528602 : Boolean INDATASET;
      NewNormGroupEDITABLE@1100528603 : Boolean INDATASET;
      OldConditionEDITABLE@1100528604 : Boolean INDATASET;
      NewConditionEDITABLE@1100528605 : Boolean INDATASET;
      OldDiscGroup1EDITABLE@1100528606 : Boolean INDATASET;
      NewDiscGroup1EDITABLE@1100528607 : Boolean INDATASET;
      OldDiscGroup2EDITABLE@1100528608 : Boolean INDATASET;
      NewDiscGroup2EDITABLE@1100528609 : Boolean INDATASET;
      OldRefDateItemEDITABLE@1100528610 : Boolean INDATASET;
      NewRefDateItemEDITABLE@1100528611 : Boolean INDATASET;
      OldItemEDITABLE@1100528612 : Boolean INDATASET;
      NewItemEDITABLE@1100528613 : Boolean INDATASET;
      OldManufacturerEDITABLE@1100528614 : Boolean INDATASET;
      NewManufacturerEDITABLE@1100528615 : Boolean INDATASET;
      OldBasicItemEDITABLE@1100528616 : Boolean INDATASET;
      NewBasicItemEDITABLE@1100528617 : Boolean INDATASET;
      OldVendorEDITABLE@1100528618 : Boolean INDATASET;
      NewVendorEDITABLE@1100528619 : Boolean INDATASET;
      OldTradeItemEDITABLE@1100528620 : Boolean INDATASET;
      NewTradeItemEDITABLE@1100528621 : Boolean INDATASET;

    PROCEDURE FillDefaults@1(lvEst@11012000 : Code[20];lvAction@1210190000 : Integer);
    BEGIN
      gvEst  := lvEst;
      gvAction := lvAction;

      IF EstRec.GET(gvEst) THEN BEGIN
        IF gvAction = 1 THEN BEGIN
          OldRate := EstRec."Rate Code";
          NewRate := EstRec."Rate Code";
        END;
        IF gvAction = 2 THEN BEGIN
          OldNormGroup := EstRec."Norm Group";
          NewNormGroup := EstRec."Norm Group";
        END;
        //IF gvAction = 3 THEN BEGIN  //RAW
        //  OldCondition := EstRec.Condition;
        //  NewCondition := EstRec.Condition;
        //END;
        IF gvAction = 5 THEN BEGIN
          OldDiscGroup1 := EstRec."Purch Discount Term Group 1";
          OldDiscGroup2 := EstRec."Purch Discount Term Group 2";
          OldRefDateItem := EstRec."Reference Date (Item)";
          NewDiscGroup1 := EstRec."Purch Discount Term Group 1";
          NewDiscGroup2 := EstRec."Purch Discount Term Group 2";
          NewRefDateItem := EstRec."Reference Date (Item)";
        END;
      END;

      CheckValidate := FALSE;  //db, 17-08-09: T3807
      CheckRequestOptions(0);
      CheckRequestOptions(1);
      CheckValidate := TRUE;  //db, 17-08-09: T3807
    END;

    PROCEDURE InitRequestOptions@1100485000();
    BEGIN
      OldRateEDITABLE := gvAction = 1;
      NewRateEDITABLE := gvAction = 1;

      OldNormGroupEDITABLE := gvAction = 2;
      NewNormGroupEDITABLE := gvAction = 2;

      OldConditionEDITABLE := gvAction = 3;
      NewConditionEDITABLE := gvAction = 3;

      OldDiscGroup1EDITABLE := gvAction = 5;
      NewDiscGroup1EDITABLE := gvAction = 5;
      OldDiscGroup2EDITABLE := gvAction = 5;
      NewDiscGroup2EDITABLE := gvAction = 5;
      OldRefDateItemEDITABLE := gvAction = 5;
      NewRefDateItemEDITABLE := gvAction = 5;

      OldItemEDITABLE := gvAction = 6;
      NewItemEDITABLE := gvAction = 6;
      OldManufacturerEDITABLE := gvAction = 6;
      NewManufacturerEDITABLE := gvAction = 6;
      OldBasicItemEDITABLE := gvAction = 6;
      NewBasicItemEDITABLE := gvAction = 6;
      OldVendorEDITABLE := (gvAction = 4) OR (gvAction = 6);
      NewVendorEDITABLE := (gvAction = 4) OR (gvAction = 6);
      OldTradeItemEDITABLE := gvAction = 6;
      NewTradeItemEDITABLE := gvAction = 6;
    END;

    PROCEDURE CheckRequestOptions@1100485002(lvField@1100485000 : Integer);
    BEGIN
      CASE gvAction OF
        1:
          BEGIN
           IF lvField = 0 THEN BEGIN
             IF OldRate = '' THEN
               EstRateRec.INIT
             ELSE
               EstRateRec.GET(gvEst, OldRate);
             OldRateTxt := EstRateRec.Description;
           END;
           IF lvField = 1 THEN BEGIN
             IF CheckValidate = FALSE THEN BEGIN  //db, 17-08-09: T3807
               IF NOT EstRateRec.GET(gvEst, NewRate) THEN
                 EstRateRec.INIT;
             END ELSE BEGIN
             //IF NewRate = '' THEN  //db, 04-03-09: M14651; empty code clears data for cost type labor
             //  EstRateRec.INIT
             //ELSE
               EstRateRec.GET(gvEst, NewRate);
             END;
             NewRateTxt := EstRateRec.Description;
           END;
         END;
        2:
          BEGIN
            IF lvField = 0 THEN BEGIN
              IF OldNormGroup = '' THEN
                GroupRec.INIT
              ELSE
                GroupRec.GET(OldNormGroup);
              OldNormGroupTxt := GroupRec.Description;
            END;
            IF lvField = 1 THEN BEGIN
              IF NewNormGroup = '' THEN
                GroupRec.INIT
              ELSE
                GroupRec.GET(NewNormGroup);
              NewNormGroupTxt := GroupRec.Description;
            END;
          END;
        3:
          BEGIN
            IF lvField = 0 THEN BEGIN
              IF OldCondition = '' THEN
                ConditionRec.INIT
              ELSE
                ConditionRec.GET(OldCondition);
              OldConditionTxt := ConditionRec.Description;
            END;
            IF lvField = 1 THEN BEGIN
              IF NewCondition = '' THEN
                ConditionRec.INIT
              ELSE
                ConditionRec.GET(NewCondition);
              NewConditionTxt := ConditionRec.Description;
            END;
          END;
        4:
          BEGIN
            IF lvField = 0 THEN BEGIN
              IF OldVendor = '' THEN
                VendorRec.INIT
              ELSE
                VendorRec.GET(OldVendor);
              OldVendorTxt := VendorRec.Name;
            END;
            IF lvField = 1 THEN BEGIN
              IF NewVendor = '' THEN
                VendorRec.INIT
              ELSE
                VendorRec.GET(NewVendor);
              NewVendorTxt := VendorRec.Name;
            END;
          END;
        5:
          BEGIN
            IF lvField = 0 THEN BEGIN
              IF OldDiscGroup1 = '' THEN
                DiscGrpRec.INIT
              ELSE
                DiscGrpRec.GET(DiscGrpRec.Level::Customer, OldDiscGroup1);
              OldDiscGroup1Txt := DiscGrpRec.Description;

              IF OldDiscGroup2 = '' THEN
                DiscGrpRec.INIT
              ELSE
                DiscGrpRec.GET(DiscGrpRec.Level::Job, OldDiscGroup2);
              OldDiscGroup2Txt := DiscGrpRec.Description;
            END;
            IF lvField = 1 THEN BEGIN
              IF NewDiscGroup1 = '' THEN
                DiscGrpRec.INIT
              ELSE
                DiscGrpRec.GET(DiscGrpRec.Level::Customer, NewDiscGroup1);
              NewDiscGroup1Txt := DiscGrpRec.Description;

              IF NewDiscGroup2 = '' THEN
                DiscGrpRec.INIT
              ELSE
                DiscGrpRec.GET(DiscGrpRec.Level::Job, NewDiscGroup2);
              NewDiscGroup2Txt := DiscGrpRec.Description;
            END;
          END;
        6:
          BEGIN
            IF lvField = 0 THEN BEGIN
              IF OldItem = '' THEN
                ItemRec.INIT
              ELSE
                ItemRec.GET(OldItem);
              OldItemTxt := ItemRec.Description;

              IF OldManufacturer = '' THEN
                VendorRec.INIT
              ELSE
                VendorRec.GET(OldManufacturer);
              OldManufacturerTxt := VendorRec.Name;

              IF OldBasicItem = '' THEN
                BasicItemRec.INIT
              ELSE
                BasicItemRec.GET(OldManufacturer, OldBasicItem);
              OldBasicItemTxt := BasicItemRec."Product Description";

              IF OldVendor = '' THEN
                VendorRec.INIT
              ELSE
                VendorRec.GET(OldVendor);
              OldVendorTxt := VendorRec.Name;

              IF OldTradeItem = '' THEN
                TradeItemRec.INIT
              ELSE
                TradeItemRec.GET(OldVendor, OldTradeItem);
              OldTradeItemTxt := TradeItemRec."Item Description";
            END;
            IF lvField = 1 THEN BEGIN
              IF NewItem = '' THEN
                ItemRec.INIT
              ELSE
                ItemRec.GET(NewItem);
              NewItemTxt := ItemRec.Description;

              IF NewManufacturer = '' THEN
                VendorRec.INIT
              ELSE
                VendorRec.GET(NewManufacturer);
              NewManufacturerTxt := VendorRec.Name;

              IF NewBasicItem = '' THEN
                BasicItemRec.INIT
              ELSE
                BasicItemRec.GET(NewManufacturer, NewBasicItem);
              NewBasicItemTxt := BasicItemRec."Product Description";

              IF NewVendor = '' THEN
                VendorRec.INIT
              ELSE
                VendorRec.GET(NewVendor);
              NewVendorTxt := VendorRec.Name;

              IF NewTradeItem = '' THEN
                TradeItemRec.INIT
              ELSE
                TradeItemRec.GET(NewVendor, NewTradeItem);
              NewTradeItemTxt := TradeItemRec."Item Description";
            END;
          END;
      END;
    END;

    PROCEDURE CheckItemOptions@1100525000();
    BEGIN
      IF (((OldItem <> '') AND (NewItem = '')) OR
          ((OldItem = '') AND (NewItem <> '')) OR
          ((OldBasicItem <> '') AND (NewBasicItem = '')) OR
          ((OldBasicItem = '') AND (NewBasicItem <> '')) OR
          ((OldTradeItem <> '') AND (NewTradeItem = '')) OR
          ((OldTradeItem = '') AND (NewTradeItem <> ''))) THEN
        ERROR(Text000);

      IF (((OldItem <> '') AND (OldBasicItem + OldTradeItem <> '')) OR
          ((OldBasicItem <> '') AND (OldItem + OldTradeItem <> '')) OR
          ((OldTradeItem <> '') AND (OldItem + OldBasicItem <> '')) OR
          ((NewItem <> '') AND (NewBasicItem + NewTradeItem <> ''))) OR
          ((NewBasicItem <> '') AND (NewItem + NewTradeItem <> '')) OR
          ((NewTradeItem <> '') AND (NewItem + NewBasicItem <> '')) THEN
        ERROR(Text001);
    END;

    PROCEDURE StartUpdate@1100485001();
    VAR
      EstLineRec@1100525005 : Record 11125698;
      TmpConvRec@1100525001 : TEMPORARY Record 11012322;
      ItemRec@1100525000 : Record 27;
      BasicItemRec@1100525002 : Record 11012316;
      TradeItemRec@1100525003 : Record 11012317;
    BEGIN
      EstLineRec.COPY("Estimate Line RAW");  //RAW
      CheckRequestOptions(1);
      CheckItemOptions;

      CASE gvAction OF
        1: UpdateEst.ReplaceRateCode(EstLineRec, OldRate, NewRate, UseLock);
        2: UpdateEst.ReplaceNormGroup(EstLineRec, OldNormGroup, NewNormGroup, UseLock);
        5:
          BEGIN
            EstRec.SETFILTER("No.", EstLineRec.GETFILTER("Estimate No."));
            IF EstRec.FINDSET(TRUE,FALSE) THEN BEGIN
              REPEAT
                EstRec.TESTFIELD(Fixed, FALSE);  //db, 20-09-16: C033132
                EstRec."Purch Discount Term Group 1" := NewDiscGroup1;
                EstRec."Purch Discount Term Group 2" := NewDiscGroup2;
                EstRec."Reference Date (Item)" := NewRefDateItem;
                EstRec.MODIFY;
              UNTIL EstRec.NEXT = 0;
            END;
            COMMIT;
            UpdateEst.UpdateActualPrice(EstLineRec,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,0,UseLock);
          END;
        6:
          BEGIN
            IF OldItem <> '' THEN BEGIN
              ItemRec.SETFILTER("No.", OldItem);
              IF ItemRec.FINDSET THEN BEGIN
                REPEAT
                  TmpConvRec.INIT;
                  TmpConvRec."Item No. (Old)" := ItemRec."No.";
                  TmpConvRec."Item No. (New)" := NewItem;
                  TmpConvRec.MARK := TRUE;
                  IF TmpConvRec.INSERT THEN;
                UNTIL ItemRec.NEXT = 0;
              END;
            END;
            IF OldBasicItem <> '' THEN BEGIN
              IF OldManufacturer <> '' THEN
                BasicItemRec.SETFILTER(Manufacturer, OldManufacturer);
              IF OldBasicItem <> '' THEN
                BasicItemRec.SETFILTER("Product Code", OldBasicItem);
              IF BasicItemRec.FINDSET THEN BEGIN
                REPEAT
                  TmpConvRec.INIT;
                  TmpConvRec."Manufacturer (Old)" := BasicItemRec.Manufacturer;
                  TmpConvRec."Basic Item (Old)" := BasicItemRec."Product Code";
                  TmpConvRec."Manufacturer (New)" := NewManufacturer;
                  TmpConvRec."Basic Item (New)" := NewBasicItem;
                  TmpConvRec.MARK := TRUE;
                  IF TmpConvRec.INSERT THEN;
                UNTIL BasicItemRec.NEXT = 0;
              END;
            END;
            IF OldTradeItem <> '' THEN BEGIN
              IF OldVendor <> '' THEN
                TradeItemRec.SETFILTER(Vendor, OldVendor);
              IF OldTradeItem <> '' THEN
                TradeItemRec.SETFILTER("Item Code", OldTradeItem);
              IF TradeItemRec.FINDSET THEN BEGIN
                REPEAT
                  TmpConvRec.INIT;
                  TmpConvRec."Vendor (Old)" := TradeItemRec.Vendor;
                  TmpConvRec."Trade Item (Old)" := TradeItemRec."Item Code";
                  TmpConvRec."Vendor (New)" := NewVendor;
                  TmpConvRec."Trade Item (New)" := NewTradeItem;
                  TmpConvRec.MARK := TRUE;
                  IF TmpConvRec.INSERT THEN;
                UNTIL TradeItemRec.NEXT = 0;
              END;
            END;
            TmpConvRec.MARKEDONLY(TRUE);
            UpdateEst.ReplaceItem(TmpConvRec, EstLineRec, TRUE, TRUE, TRUE, TRUE, UseLock);
          END;
      END;
    END;

    PROCEDURE InitPageRequestOptions@1100528900();
    BEGIN
      NewTradeItemEDITABLE := TRUE;
      OldTradeItemEDITABLE := TRUE;
      NewBasicItemEDITABLE := TRUE;
      OldBasicItemEDITABLE := TRUE;
      NewManufacturerEDITABLE := TRUE;
      OldManufacturerEDITABLE := TRUE;
      NewItemEDITABLE := TRUE;
      OldItemEDITABLE := TRUE;
      NewRefDateItemEDITABLE := TRUE;
      OldRefDateItemEDITABLE := TRUE;
      NewDiscGroup2EDITABLE := TRUE;
      OldDiscGroup2EDITABLE := TRUE;
      NewDiscGroup1EDITABLE := TRUE;
      OldDiscGroup1EDITABLE := TRUE;
      NewConditionEDITABLE := TRUE;
      OldConditionEDITABLE := TRUE;
      NewNormGroupEDITABLE := TRUE;
      OldNormGroupEDITABLE := TRUE;
      NewRateEDITABLE := TRUE;
      OldRateEDITABLE := TRUE;
    END;

    LOCAL PROCEDURE CheckEstimateFixed@1100529401(CurrEst@1100529400 : Code[20]);
    BEGIN
      //db, 20-09-16: C033132
      EstRec.GET(CurrEst);
      EstRec.TESTFIELD(Fixed, FALSE);
    END;

    BEGIN
    {
      RAW:
      - Copy of 11012166
      - table relation changed: EstRec, EstLineRec (RAW);
    }
    END.
  }
  RDLDATA
  {
  }
}

