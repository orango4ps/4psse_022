OBJECT Codeunit 11229298 BioPDF Printer Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      PDFSettingsClient@1100528400 : DotNet "'bioPDF.PdfWriter, Version=4.0.0.0, Culture=neutral, PublicKeyToken=041d71cacb6e853c'.bioPDF.PdfWriter.PdfSettings" RUNONCLIENT;
      PDFSettingsServer@1100528401 : DotNet "'bioPDF.PdfWriter, Version=4.0.0.0, Culture=neutral, PublicKeyToken=041d71cacb6e853c'.bioPDF.PdfWriter.PdfSettings";
      PDFUtilClient@1100528402 : DotNet "'bioPDF.PdfWriter, Version=4.0.0.0, Culture=neutral, PublicKeyToken=041d71cacb6e853c'.bioPDF.PdfWriter.PdfUtil" RUNONCLIENT;
      PDFUtilServer@1100528403 : DotNet "'bioPDF.PdfWriter, Version=4.0.0.0, Culture=neutral, PublicKeyToken=041d71cacb6e853c'.bioPDF.PdfWriter.PdfUtil";
      OnClient@1100528404 : Boolean;
      Text001@1100528406 : TextConst 'DEU=Initialisierung von bioPDF nicht m”glich.;ENU=Unable to initialize bioPDF.;NLD=Kon bioPDF niet initialiseren.';
      Text002@1100528405 : TextConst 'DEU=Stellen Sie sicher, dass es auf diesem Computer installiert ist.;ENU=Please make sure it is installed on this computer.;NLD=Zorg a.u.b. dat het ge‹nstalleerd is op deze computer.';
      Text003@1100528407 : TextConst 'DEU=Stellen Sie sicher, dass es auf dem Server installiert ist.;ENU=Please make sure it is installed on the server.;NLD=Zorg a.u.b. dat het ge‹nstalleerd is op de server.';

    PROCEDURE SetOnClient@1100528400(OnClient2@1100528400 : Boolean);
    BEGIN
      OnClient := OnClient2;
    END;

    PROCEDURE InstantiatePDFSettings@1100528401();
    BEGIN
      IF OnClient THEN BEGIN
        PDFSettingsClient := PDFSettingsClient.PdfSettings;
        IF ISNULL(PDFSettingsClient) THEN
          ERROR(Text001 + '\' + Text002);
      END ELSE BEGIN
        PDFSettingsServer := PDFSettingsServer.PdfSettings;
        IF ISNULL(PDFSettingsServer) THEN
            ERROR(Text001 + '\' + Text003);
      END;
    END;

    PROCEDURE InitPDFSettings@1100528403();
    BEGIN
      IF OnClient THEN
        PDFSettingsClient.Init
      ELSE
        PDFSettingsServer.Init;
    END;

    PROCEDURE SetPDFSettingsPrinterName@1100528402(PrinterName@1100528400 : Text);
    BEGIN
      IF OnClient THEN
        PDFSettingsClient.PrinterName := PrinterName
      ELSE
        PDFSettingsServer.PrinterName := PrinterName;
    END;

    PROCEDURE SetPDFSettingsOutput@1100528404(Output@1100528400 : Text);
    BEGIN
      SetPDFSettingsValue('Output', Output);
    END;

    PROCEDURE SetPDFSettingsStatusFile@1100528405(StatusFile@1100528400 : Text);
    BEGIN
      SetPDFSettingsValue('StatusFile', StatusFile);
    END;

    PROCEDURE SetPDFSettingsConfirmOverWrite@1100528406(ConfirmOverWrite@1100528400 : Text);
    BEGIN
      SetPDFSettingsValue('ConfirmOverwrite', ConfirmOverWrite);
    END;

    PROCEDURE SetPDFSettingsShowSettings@1100528407(ShowSettings@1100528400 : Text);
    BEGIN
      SetPDFSettingsValue('ShowSettings', ShowSettings);
    END;

    PROCEDURE SetPDFSettingsShowSaveAs@1100528420(ShowSaveAs@1100528400 : Text);
    BEGIN
      SetPDFSettingsValue('ShowSaveAs', ShowSaveAs);
    END;

    PROCEDURE SetPDFSettingsShowPDF@1100528418(ShowPDF@1100528400 : Text);
    BEGIN
      SetPDFSettingsValue('ShowPDF', ShowPDF);
    END;

    PROCEDURE SetPDFSettingsShowProgress@1100528408(ShowProgress@1100528400 : Text);
    BEGIN
      SetPDFSettingsValue('ShowProgress', ShowProgress);
    END;

    PROCEDURE SetPDFSettingsShowProgressFinished@1100528409(ShowProgressFinished@1100528400 : Text);
    BEGIN
      SetPDFSettingsValue('ShowProgressFinished', ShowProgressFinished);
    END;

    PROCEDURE SetPDFSettingsSupressErrors@1100528410(SupressErrors@1100528400 : Text);
    BEGIN
      SetPDFSettingsValue('SupressErrors', SupressErrors);
    END;

    PROCEDURE SetPDFSetttingsAuthor@1100528411(Author@1100528400 : Text);
    BEGIN
      SetPDFSettingsValue('Author', Author);
    END;

    PROCEDURE SetPDFSettingsTitle@1100528412(Title@1100528400 : Text);
    BEGIN
      SetPDFSettingsValue('Title', Title);
    END;

    PROCEDURE SetPDFSettingsLicenseData@1100528413();
    VAR
      LicensePermission@1100528401 : Record 2000000043;
      BioPDFLicenseManagement@1100528400 : Codeunit 11125985;
    BEGIN
      IF NOT LicensePermission.GET(LicensePermission."Object Type"::Codeunit, CODEUNIT::"BioPDF License Management") THEN
        EXIT;
      IF NOT (LicensePermission."Execute Permission" = LicensePermission."Execute Permission"::Yes) THEN
        EXIT;
      SetPDFSettingsValue('LicenseData', BioPDFLicenseManagement.GetLicenseKey);
    END;

    LOCAL PROCEDURE SetPDFSettingsValue@1100528429(Name@1100528402 : Text;Value@1100528403 : Text);
    BEGIN
      IF OnClient THEN
        PDFSettingsClient.SetValue(Name, Value)
      ELSE
        PDFSettingsServer.SetValue(Name, Value);
    END;

    PROCEDURE DeletePDFSettingsFile@1100528414();
    VAR
      FileManagement@1100528401 : Codeunit 419;
      BioPDFSettingsFilePath@1100528400 : Text;
    BEGIN
      IF OnClient THEN BEGIN
        BioPDFSettingsFilePath := PDFSettingsClient.GetSettingsFilePath(TRUE);
        IF BioPDFSettingsFilePath <> '' THEN
          IF FileManagement.ClientFileExists(BioPDFSettingsFilePath) THEN
            FileManagement.DeleteClientFile(BioPDFSettingsFilePath);
      END ELSE BEGIN
        BioPDFSettingsFilePath := PDFSettingsServer.GetSettingsFilePath(TRUE);
        IF BioPDFSettingsFilePath <> '' THEN
          IF FileManagement.ServerFileExists(BioPDFSettingsFilePath) THEN
            FileManagement.DeleteServerFile(BioPDFSettingsFilePath);
      END;
    END;

    PROCEDURE WritePDFSettingsFile@1100528417();
    BEGIN
      IF OnClient THEN
        PDFSettingsClient.WriteSettings(TRUE)
      ELSE
        PDFSettingsServer.WriteSettings(TRUE);
    END;

    PROCEDURE InstantiatePDFUtil@1100528415();
    BEGIN
      IF OnClient THEN BEGIN
        PDFUtilClient := PDFUtilClient.PdfUtil;
        IF ISNULL(PDFSettingsClient) THEN
          ERROR(Text001 + '\' + Text002);
      END ELSE BEGIN
        PDFUtilServer := PDFUtilServer.PdfUtil;
        IF ISNULL(PDFSettingsServer) THEN
          ERROR(Text001 + '\' + Text003);
      END;
    END;

    PROCEDURE PrintFile@1100528416(FullFileName@1100528400 : Text;PrinterName@1100528401 : Text);
    BEGIN
      IF OnClient THEN
        PDFUtilClient.PrintFile(FullFileName, PrinterName)
      ELSE
        PDFUtilServer.PrintFile(FullFileName, PrinterName);
    END;

    PROCEDURE WaitForFile@1100528419(FullStatusFileName@1100528400 : Text;TimeOutMilliseconds@1100528401 : Integer);
    BEGIN
      IF OnClient THEN
        PDFUtilClient.WaitForFile(FullStatusFileName, TimeOutMilliseconds)
      ELSE
        PDFUtilServer.WaitForFile(FullStatusFileName, TimeOutMilliseconds);
    END;

    PROCEDURE Merge@1100528423(FileArray@1100528400 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array";FullFileName@1100528402 : Text;PrinterName@1100528401 : Text;TimeOutMilliseconds@1100528403 : Integer);
    BEGIN
      IF OnClient THEN
        PDFUtilClient.Merge(FileArray, FullFileName, PrinterName, TimeOutMilliseconds)
      ELSE
        PDFUtilServer.Merge(FileArray, FullFileName, PrinterName, TimeOutMilliseconds);
    END;

    BEGIN
    END.
  }
}

