OBJECT Codeunit 11229285 Create Setup Document to Excel
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ExcelAutomation@1100528627 : Codeunit 11012402;
      ExcelEnumeration@1100528601 : Codeunit 11012375;
      PossibleWebServiceMgt@1100528626 : Codeunit 11125354;
      RowNo@1100528600 : Integer;
      Text000@1100528625 : TextConst 'DEU=Dokument einrichten;ENU=Setup Document;NLD=Inrichtingsdocument';
      Text001@1100528624 : TextConst 'DEU=Unternehmensplangruppe;ENU=Company Plan Group;NLD=Bedrijfsplangroep';
      Text002@1100528623 : TextConst 'DEU=4PS-Mobile;ENU=4PS-Mobile;NLD=4PS-mobile';
      Text003@1100528622 : TextConst 'DEU=Service Portal;ENU=Service Portal;NLD=Serviceportaal;NOR=Serviceportal;SVE=Serviceportal';
      Text004@1100528621 : TextConst 'DEU=Subunternehmer-Portal;ENU=Subcontractor Portal;NLD=Onderaannemersportaal;NOR=Underleverand›rsportal;SVE=Underentrepren”rsportal';
      Text005@1100528620 : TextConst 'DEU=CRM-Portal;ENU=CRM-Portal;NLD=CRM portaal';
      Text006@1100528619 : TextConst 'DEU=Dokument-Portal;ENU=Document Portal;NLD=Documentenportaal;SVE=Dokumentportal';
      Text007@1100528618 : TextConst 'DEU=Stundenerfassung-Portal;ENU=Time Sheet Portal;NLD=Urenportaal';
      Text008@1100528617 : TextConst 'DEU=Zentraler Eingabebildschirm;ENU=Central Enter Screen;NLD=Centraal aanmeldscherm';
      Text011@1100528614 : TextConst 'DEU=Service-Portal ver”ffentlicht;ENU=Service Portal published;NLD=Serviceportaal gepubliceerd';
      Text012@1100528613 : TextConst 'DEU=CRM-Portal ver”ffentlicht;ENU=CRM Portal Published;NLD=CRM portaal gepubliceerd';
      Text014@1100528611 : TextConst 'DEU=Stundenerfassung-Portal ver”ffentlicht;ENU=Time Sheet Portal Published;NLD=Urenportaal gepubliceerd';
      Text015@1100528610 : TextConst 'DEU=CES ver”ffentlicht;ENU=CES Published;NLD=CAS gepubliceerd';
      Text016@1100528609 : TextConst 'DEU=Anzahl der Unternehmen;ENU=No. of Companies;NLD=Aantal bedrijven';
      FPSLicenseManagement@1100527400 : Codeunit 11229289;

    PROCEDURE GenerateDoc@1100409245();
    BEGIN
      RowNo := 1;
      ExcelAutomation.InitExcel;
      ExcelAutomation.InitWorkbook(Text000);
      ExcelAutomation.SetSettingBold(TRUE);
      ExcelAutomation.WriteCell(1, RowNo, Text000);
      ExcelAutomation.SetSettingBold(FALSE);
      RowNo += 1;

      InsertCompanyPlanGroup;
      InsertMobileSetup;
      InsertServicePortalSetup;
      InsertSubcontractingPortalSetup;
      InsertCRMPortalSetup;
      InsertSharepointSetup;
      InsertHourPortalSetup;
      InsertCESSetup;

      FixLayout;

      ExcelAutomation.SetHorzAlignmentInRange('B', ExcelEnumeration.XlHAlign_xlHAlignRight);
      ExcelAutomation.SetHorzAlignmentInRange('E', ExcelEnumeration.XlHAlign_xlHAlignRight);

      ExcelAutomation.AutoFitAll;
      ExcelAutomation.GiveUserControl;
    END;

    LOCAL PROCEDURE InsertCompanyPlanGroup@1100409013();
    VAR
      CompanyPlanGroup@1100528600 : Record 11229300;
      CurrentCompanyPlanGroupCode@1100525000 : Code[10];
    BEGIN
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(CompanyPlanGroup) THEN
        EXIT;
      CurrentCompanyPlanGroupCode := CompanyPlanGroup.GetCurrentCompanyPlanGroupCode;
      IF CurrentCompanyPlanGroupCode = '' THEN
        EXIT;
      IF CompanyPlanGroup.GET(CurrentCompanyPlanGroupCode) THEN;

      RowNo += 1;
      ExcelAutomation.SetSettingBold(TRUE);
      ExcelAutomation.WriteCell(1, RowNo, Text001);
      ExcelAutomation.SetSettingBold(FALSE);

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, CompanyPlanGroup.FIELDCAPTION("Window (Days)"));
      ExcelAutomation.WriteCell(2, RowNo, FORMAT(CompanyPlanGroup."Window (Days)"));
      ExcelAutomation.WriteCell(4, RowNo, CompanyPlanGroup.FIELDCAPTION("Start Window (Days b. WorkDat)"));
      ExcelAutomation.WriteCell(5, RowNo, FORMAT(CompanyPlanGroup."Start Window (Days b. WorkDat)"));

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, CompanyPlanGroup.FIELDCAPTION("Show in Planning until Status"));
      ExcelAutomation.WriteCell(2, RowNo, FORMAT(CompanyPlanGroup."Show in Planning until Status"));
      ExcelAutomation.WriteCell(4, RowNo, CompanyPlanGroup.FIELDCAPTION("Update Planning Automatically"));
      ExcelAutomation.WriteCell(5, RowNo, FORMAT(CompanyPlanGroup."Update Planning Automatically"));

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, CompanyPlanGroup.FIELDCAPTION("Update Planning Interval (Sec)"));
      ExcelAutomation.WriteCell(2, RowNo, FORMAT(CompanyPlanGroup."Update Planning Interval (Sec)"));
      ExcelAutomation.WriteCell(4, RowNo, CompanyPlanGroup.FIELDCAPTION("Automatic Scheduling"));
      ExcelAutomation.WriteCell(5, RowNo, FORMAT(CompanyPlanGroup."Automatic Scheduling"));

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, CompanyPlanGroup.FIELDCAPTION(CompanyPlanGroup."Setup Company"));
      ExcelAutomation.WriteCell(2, RowNo, FORMAT(CompanyPlanGroup."Setup Company"));
      ExcelAutomation.WriteCell(4, RowNo, CompanyPlanGroup.FIELDCAPTION("Server Address"));
      ExcelAutomation.WriteCell(5, RowNo, CompanyPlanGroup."Server Address");

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, CompanyPlanGroup.FIELDCAPTION("OData Service Port"));
      ExcelAutomation.WriteCell(2, RowNo, FORMAT(CompanyPlanGroup."OData Service Port"));
      ExcelAutomation.WriteCell(4, RowNo, CompanyPlanGroup.FIELDCAPTION("SOAP Service Port"));
      ExcelAutomation.WriteCell(5, RowNo, FORMAT(CompanyPlanGroup."SOAP Service Port"));

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, CompanyPlanGroup.FIELDCAPTION("Instance Name"));
      ExcelAutomation.WriteCell(2, RowNo, CompanyPlanGroup."Instance Name");

      RowNo += 1;
    END;

    LOCAL PROCEDURE InsertMobileSetup@1100409031();
    VAR
      MobileSetup@1100528600 : Record 11012676;
    BEGIN
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(MobileSetup) THEN
        EXIT;
      IF MobileSetup.GET THEN;

      RowNo += 1;
      ExcelAutomation.SetSettingBold(TRUE);
      ExcelAutomation.WriteCell(1, RowNo, Text002);
      ExcelAutomation.SetSettingBold(FALSE);

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, MobileSetup.FIELDCAPTION("4PS-Mobile Active"));
      ExcelAutomation.WriteCell(2, RowNo, FORMAT(MobileSetup."4PS-Mobile Active"));
      ExcelAutomation.WriteCell(4, RowNo, MobileSetup.FIELDCAPTION("Receive Message Queue"));
      ExcelAutomation.WriteCell(5, RowNo, MobileSetup."Receive Message Queue");

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, MobileSetup.FIELDCAPTION("Reply Message Queue"));
      ExcelAutomation.WriteCell(2, RowNo, MobileSetup."Reply Message Queue");
      ExcelAutomation.WriteCell(4, RowNo, MobileSetup.FIELDCAPTION("Service Locs. Online Avail."));
      ExcelAutomation.WriteCell(5, RowNo, FORMAT(MobileSetup."Service Locs. Online Avail."));

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, MobileSetup.FIELDCAPTION("Add Existing Objects Allowed"));
      ExcelAutomation.WriteCell(2, RowNo, FORMAT(MobileSetup."Add Existing Objects Allowed"));
      ExcelAutomation.WriteCell(4, RowNo, MobileSetup.FIELDCAPTION("Items Online Available"));
      ExcelAutomation.WriteCell(5, RowNo, FORMAT(MobileSetup."Items Online Available"));

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, MobileSetup.FIELDCAPTION("Document Mgmt. Max. File Size"));
      ExcelAutomation.WriteCell(2, RowNo, FORMAT(MobileSetup."Document Mgmt. Max. File Size"));

      RowNo += 1;
    END;

    LOCAL PROCEDURE InsertServicePortalSetup@1100409041();
    VAR
      ServPortSetup@1100528600 : Record 11126065;
    BEGIN
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(ServPortSetup) THEN
        EXIT;
      IF ServPortSetup.GET(1) THEN;

      RowNo += 1;
      ExcelAutomation.SetSettingBold(TRUE);
      ExcelAutomation.WriteCell(1, RowNo, Text003);
      ExcelAutomation.SetSettingBold(FALSE);

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, Text011);
      ExcelAutomation.WriteCell(2, RowNo, FORMAT(PossibleWebServiceMgt.IsPublishedSPT));
      ExcelAutomation.WriteCell(4, RowNo, ServPortSetup.FIELDCAPTION("Copyright Notice"));
      ExcelAutomation.WriteCell(5, RowNo, ServPortSetup."Copyright Notice");

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, ServPortSetup.FIELDCAPTION("URL Site Root"));
      ExcelAutomation.WriteCell(2, RowNo, ServPortSetup."URL Site Root");

      RowNo += 1;
    END;

    LOCAL PROCEDURE InsertSubcontractingPortalSetup@1100409050();
    VAR
      SubcontPortSetup@1100528600 : Record 11126402;
    BEGIN
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(SubcontPortSetup) THEN
        EXIT;
      IF SubcontPortSetup.GET(1) THEN;

      RowNo += 1;
      ExcelAutomation.SetSettingBold(TRUE);
      ExcelAutomation.WriteCell(1, RowNo, Text004);
      ExcelAutomation.SetSettingBold(FALSE);

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, SubcontPortSetup.FIELDCAPTION("Subcontracting Portal Active"));
      ExcelAutomation.WriteCell(2, RowNo, FORMAT(SubcontPortSetup."Subcontracting Portal Active"));
      ExcelAutomation.WriteCell(4, RowNo, SubcontPortSetup.FIELDCAPTION("Copyright Notice"));
      ExcelAutomation.WriteCell(5, RowNo, SubcontPortSetup."Copyright Notice");

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, SubcontPortSetup.FIELDCAPTION("URL Site Root"));
      ExcelAutomation.WriteCell(2, RowNo, SubcontPortSetup."URL Site Root");

      RowNo += 1;
    END;

    LOCAL PROCEDURE InsertCRMPortalSetup@1100409055();
    VAR
      CRMPortalSetup@1100528600 : Record 11128541;
    BEGIN
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(CRMPortalSetup) THEN
        EXIT;
      IF CRMPortalSetup.GET THEN;

      RowNo += 1;
      ExcelAutomation.SetSettingBold(TRUE);
      ExcelAutomation.WriteCell(1, RowNo, Text005);
      ExcelAutomation.SetSettingBold(FALSE);

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, Text012);
      ExcelAutomation.WriteCell(2, RowNo, FORMAT(PossibleWebServiceMgt.IsPublishedCPT));
      ExcelAutomation.WriteCell(4, RowNo, CRMPortalSetup.FIELDCAPTION("Copyright Notice"));
      ExcelAutomation.WriteCell(5, RowNo, CRMPortalSetup."Copyright Notice");

      RowNo += 1;
    END;

    LOCAL PROCEDURE InsertSharepointSetup@1100409003();
    VAR
      SharePointSetup4PS@1100528600 : Record 11012730;
    BEGIN
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(SharePointSetup4PS) THEN
        EXIT;
      IF SharePointSetup4PS.GET THEN;

      RowNo += 1;
      ExcelAutomation.SetSettingBold(TRUE);
      ExcelAutomation.WriteCell(1, RowNo, Text006);
      ExcelAutomation.SetSettingBold(FALSE);

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, SharePointSetup4PS.FIELDCAPTION("Use Project Portal"));
      ExcelAutomation.WriteCell(2, RowNo, FORMAT(SharePointSetup4PS."Use Project Portal"));
      ExcelAutomation.WriteCell(4, RowNo, SharePointSetup4PS.FIELDCAPTION("SharePoint Version"));
      ExcelAutomation.WriteCell(5, RowNo, FORMAT(SharePointSetup4PS."SharePoint Version"));

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, SharePointSetup4PS.FIELDCAPTION("Webservice URL"));
      ExcelAutomation.WriteCell(2, RowNo, SharePointSetup4PS."Webservice URL");
      ExcelAutomation.WriteCell(4, RowNo, SharePointSetup4PS.FIELDCAPTION("Portal URL"));
      ExcelAutomation.WriteCell(5, RowNo, SharePointSetup4PS."Portal URL");

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, SharePointSetup4PS.FIELDCAPTION("Portal URL Suffix"));
      ExcelAutomation.WriteCell(2, RowNo, SharePointSetup4PS."Portal URL Suffix");
      ExcelAutomation.WriteCell(4, RowNo, SharePointSetup4PS.FIELDCAPTION("Language ID"));
      ExcelAutomation.WriteCell(5, RowNo, FORMAT(SharePointSetup4PS."Language ID"));

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, SharePointSetup4PS.FIELDCAPTION("Path Sitecollection SharePoint"));
      ExcelAutomation.WriteCell(2, RowNo, SharePointSetup4PS."Path Sitecollection SharePoint");
      ExcelAutomation.WriteCell(4, RowNo, SharePointSetup4PS.FIELDCAPTION("SharePoint Template"));
      ExcelAutomation.WriteCell(5, RowNo, SharePointSetup4PS."SharePoint Template");

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, SharePointSetup4PS.FIELDCAPTION("Owner Domain"));
      ExcelAutomation.WriteCell(2, RowNo, SharePointSetup4PS."Owner Domain");
      ExcelAutomation.WriteCell(4, RowNo, SharePointSetup4PS.FIELDCAPTION("Owner ID"));
      ExcelAutomation.WriteCell(5, RowNo, SharePointSetup4PS."Owner ID");

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, SharePointSetup4PS.FIELDCAPTION("Owner Password"));
      ExcelAutomation.WriteCell(2, RowNo, SharePointSetup4PS."Owner Password");
      ExcelAutomation.WriteCell(4, RowNo, SharePointSetup4PS.FIELDCAPTION("Owner E-mail"));
      ExcelAutomation.WriteCell(5, RowNo, SharePointSetup4PS."Owner E-mail");

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, SharePointSetup4PS.FIELDCAPTION("Changing Site URL Allowed"));
      ExcelAutomation.WriteCell(2, RowNo, FORMAT(SharePointSetup4PS."Changing Site URL Allowed"));

      RowNo += 1;
    END;

    LOCAL PROCEDURE InsertHourPortalSetup@1100409004();
    VAR
      HourPortalSetup@1100528600 : Record 11020454;
    BEGIN
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(HourPortalSetup) THEN
        EXIT;
      IF HourPortalSetup.GET THEN;

      RowNo += 1;
      ExcelAutomation.SetSettingBold(TRUE);
      ExcelAutomation.WriteCell(1, RowNo, Text007);
      ExcelAutomation.SetSettingBold(FALSE);

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, Text014);
      ExcelAutomation.WriteCell(2, RowNo, FORMAT(PossibleWebServiceMgt.IsPublishedHPT));
      ExcelAutomation.WriteCell(4, RowNo, HourPortalSetup.FIELDCAPTION("Hour Portal Active"));
      ExcelAutomation.WriteCell(5, RowNo, FORMAT(HourPortalSetup."Hour Portal Active"));

      RowNo += 1;
    END;

    LOCAL PROCEDURE InsertCESSetup@1100409007();
    VAR
      CentralEnterScreenCompany@1100528600 : Record 11126680;
    BEGIN
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(CentralEnterScreenCompany) THEN
        EXIT;

      RowNo += 1;
      ExcelAutomation.SetSettingBold(TRUE);
      ExcelAutomation.WriteCell(1, RowNo, Text008);
      ExcelAutomation.SetSettingBold(FALSE);

      RowNo += 1;
      ExcelAutomation.WriteCell(1, RowNo, Text015);
      ExcelAutomation.WriteCell(2, RowNo, FORMAT(PossibleWebServiceMgt.IsPublishedCES));
      ExcelAutomation.WriteCell(4, RowNo, Text016);
      ExcelAutomation.WriteCell(5, RowNo, FORMAT(CentralEnterScreenCompany.COUNT));

      RowNo += 1;
    END;

    LOCAL PROCEDURE FixLayout@1100409002();
    BEGIN
      ExcelAutomation.PageSetup(9, 2, 1, 0, 70, FALSE, FALSE);
      ExcelAutomation.SetHeader(FORMAT(TODAY,0,0) + ' | ' + FORMAT(TIME) + ' | ' + USERID, '', '', 'http://www.4ps.nl/images/logo.png');
    END;

    BEGIN
    END.
  }
}

