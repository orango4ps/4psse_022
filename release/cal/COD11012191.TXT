OBJECT Codeunit 11012191 Copy Act. Prgr. to Prgr. Level
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11072003;
    OnRun=BEGIN
            ProjRec := Rec;

            InsertWhenEmpty := FALSE;
            CopyActProgressToProgress;
          END;

  }
  CODE
  {
    VAR
      ProjRec@1210190002 : Record 11072003;
      BudgetLine@1100525003 : Record 11012001;
      ProgressLine@1100525004 : Record 11012037;
      ProgressLevel@1100525000 : Record 11012036;
      Text000@1100525001 : TextConst 'DEU=Bitte, erstellen Sie zuerst ein %1.;ENU=Please create %1 first.;NLD=Maak a.u.b. eerst een %1.;NOR=Vennligs opprett %1 f›rst;SVE=Skapa %1 f”rst.';
      ProjectPlanningActivity@1100525002 : Record 11012431;
      Text001@1100525005 : TextConst 'DEU=Fortschritt erfolgreich kopiert.\\;ENU=Progress copied successfully.\\;NLD=Voortgang succesvol gekopieerd.\\;NOR=Kopiering av fremdrift var vellykket.\\;SVE=F”rloppet har kopierats.\\';
      Text002@1100525006 : TextConst 'DEU=%1 Zeilen wurden aktualisiert.;ENU=%1 lines were updated.;NLD=%1 regels zijn bijgewerkt.;NOR=%1 rader ble oppdatert;SVE=%1 rader har uppdaterats.';
      LinesUpdated@1100525007 : Integer;
      ProgressDate@1210190000 : Date;
      InsertWhenEmpty@1210190001 : Boolean;
      CreateNewProgress@1210190003 : Boolean;

    PROCEDURE CopyActProgressToProgress@1210190000();
    BEGIN
      LinesUpdated := 0;
      ProjRec.TESTFIELD("Progress Method", ProjRec."Progress Method"::"Budget Line");
      ProjRec.TESTFIELD("Progress Registry", ProjRec."Progress Registry"::Percentages);

      CreateNewProgress := FALSE;
      IF ProgressDate = 0D THEN BEGIN
        ProjRec.TESTFIELD("Modified after Scheduling", FALSE);
        ProgressLevel.RESET;
        ProgressLevel.SETRANGE("Project No.", ProjRec."No.");
        IF NOT ProgressLevel.FINDLAST THEN
          ERROR(Text000, ProgressLevel.TABLECAPTION);
        ProgressLevel.TESTFIELD("Progress Date");
        ProgressLevel.TESTFIELD("Progress Fixed", FALSE);
      END ELSE BEGIN
        ProgressLevel.RESET;
        ProgressLevel.SETRANGE("Project No.", ProjRec."No.");
        ProgressLevel.SETRANGE("Progress Date", ProgressDate);
        IF ProgressLevel.FINDFIRST THEN BEGIN
          ProjRec.TESTFIELD("Modified after Scheduling", FALSE);
          ProgressLevel.TESTFIELD("Progress Fixed", FALSE);
        END ELSE BEGIN
          CreateNewProgress := TRUE;
        END;
      END;

      ProjectPlanningActivity.RESET;
      ProjectPlanningActivity.SETCURRENTKEY(Type, "Project No.");
      ProjectPlanningActivity.SETRANGE(Type,0);
      ProjectPlanningActivity.SETRANGE("Project No.",ProjRec."No.");

      IF ProjectPlanningActivity.FINDSET THEN BEGIN
        IF CreateNewProgress THEN BEGIN
          ProgressLevel.INIT;
          ProgressLevel."Project No." := ProjRec."No.";
          ProgressLevel."Progress Date" := ProgressDate;
          ProgressLevel.INSERT(TRUE);
          ProgressLevel.SETRANGE("Progress Date", ProgressDate);
          CODEUNIT.RUN(CODEUNIT::"Create Progress Lines",ProgressLevel);
        END;
        REPEAT
          BudgetLine.RESET;
          BudgetLine.SETCURRENTKEY("Project Planning Activity No.");
          BudgetLine.SETRANGE("Project Planning Activity No.",ProjectPlanningActivity."No.");

          IF BudgetLine.FINDSET THEN BEGIN
            REPEAT
              ProgressLine.RESET;
              ProgressLine.SETRANGE("Project No.", ProjRec."No.");
              ProgressLine.SETRANGE("Progress Date",ProgressLevel."Progress Date");
              ProgressLine.SETRANGE("Line No.",BudgetLine."Line No.");
              IF ProgressLine.FINDFIRST THEN BEGIN
                ProgressLine.VALIDATE("Cumulative Progress %",ProjectPlanningActivity."Completed Perc.");
                ProgressLine.MODIFY;
                LinesUpdated += 1;
              END;
            UNTIL BudgetLine.NEXT = 0;
          END;
        UNTIL ProjectPlanningActivity.NEXT = 0;
      END;

      MESSAGE(Text001 + Text002, LinesUpdated);
    END;

    PROCEDURE SetSelection@1210190001(lProjRec@1210190001 : Record 11072003;lProgressDate@1210190000 : Date);
    BEGIN
      ProjRec := lProjRec;
      ProgressDate := lProgressDate;
      InsertWhenEmpty := TRUE;
    END;

    BEGIN
    END.
  }
}

