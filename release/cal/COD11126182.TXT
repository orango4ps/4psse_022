OBJECT Codeunit 11126182 Bank Nos Check
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVFI7.10 (32000002),4PSSE.FI;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      SalesSetup@1090000 : Record 311;
      Vend@1090024 : Record 23;
      NoSeriesMgt@1090001 : Codeunit 396;
      LinePos@1090002 : Integer;
      OrigCheckValue@1090003 : Text[30];
      CheckValueChar@1090004 : Text[2];
      ReferenceNumber@1090006 : Code[40];
      Multiplicand@1090008 : Integer;
      CheckValue@1090009 : Integer;
      RoundNumber@1090010 : Integer;
      NumberLen@1090011 : Integer;
      Counter@1090012 : Integer;
      Length@1090013 : Integer;
      NoSeriesRefNo@1090019 : Code[10];
      WeightStr@1090020 : Text[20];
      Text1090000@1090021 : TextConst 'ENU=Type account number in correct format with hyphen.\If the account is in a foreign bank select correct Country Code.';
      Text1090001@1090022 : TextConst 'ENU=Error in Bank Account number, check the number.';
      Text1090002@1090023 : TextConst 'ENU=Reference number cannot be over 20 character long.\Change the setting in Sales & Receivables Setup.';
      Text1090003@1090029 : TextConst 'ENU=Enter %1 for vendor %2.';
      Text1090004@1090028 : TextConst 'ENU=%1 missing for vendor %2.';
      Text1090005@1090027 : TextConst 'ENU=Minimum length for a Reference is 2 characters.';
      Text1090006@1090026 : TextConst 'ENU=Incorrect reference number.';
      Text1090007@1090032 : TextConst 'ENU=Check account number for bank account %1.';
      RefStartPos@1090031 : Integer;

    PROCEDURE ConvertBankAcc@1090000(VAR BankAccNro@1090000 : Text[15];BankAccCode@1090001 : Code[20]);
    BEGIN
      IF BankAccNro = '' THEN
        ERROR(Text1090007,BankAccCode);
      Length := STRLEN(BankAccNro);
      LinePos := STRPOS(BankAccNro,'-');
      BankAccNro := COPYSTR(BankAccNro,1,LinePos - 1) + COPYSTR(BankAccNro,LinePos + 1);
      Length := STRLEN(BankAccNro);

      IF Length < 14 THEN
        REPEAT
          IF (COPYSTR(BankAccNro,1,1) = '4') OR (COPYSTR(BankAccNro,1,1) = '5') THEN
            BankAccNro := COPYSTR(BankAccNro,1,7) + '0' + COPYSTR(BankAccNro,7 + 1)
          ELSE
            BankAccNro := COPYSTR(BankAccNro,1,6) + '0' + COPYSTR(BankAccNro,6 + 1);
          Length := Length + 1;
        UNTIL Length = 14;
    END;

    PROCEDURE CheckBankAccount@1(BankAccNro@1090001 : Text[15];BankAccCode@1090002 : Code[20]) FormatOK@1090000 : Boolean;
    BEGIN
      Length := STRLEN(BankAccNro);
      LinePos := STRPOS(BankAccNro,'-');
      IF LinePos < 1 THEN
        ERROR(Text1090000);

      ConvertBankAcc(BankAccNro,BankAccCode);

      Length := STRLEN(BankAccNro);
      OrigCheckValue := COPYSTR(BankAccNro,Length,1);
      BankAccNro := COPYSTR(BankAccNro,1,Length - 1);
      NumberLen := STRLEN(BankAccNro);

      FOR Counter := 1 TO NumberLen DO
        CASE Counter OF
          1,3,5,7,9,11,13,15:
            BEGIN
              EVALUATE(Multiplicand,COPYSTR(BankAccNro,NumberLen + 1 - Counter,1));
              Multiplicand := Multiplicand * 2;
              CASE Multiplicand OF
                10:
                  Multiplicand := 1;
                11:
                  Multiplicand := 2;
                12:
                  Multiplicand := 3;
                13:
                  Multiplicand := 4;
                14:
                  Multiplicand := 5;
                15:
                  Multiplicand := 6;
                16:
                  Multiplicand := 7;
                17:
                  Multiplicand := 8;
                18:
                  Multiplicand := 9;
              END;
              CheckValue := CheckValue + Multiplicand;
            END;
          2,4,6,8,10,12,14:
            BEGIN
              EVALUATE(Multiplicand,COPYSTR(BankAccNro,NumberLen + 1 - Counter,1));
              CheckValue := CheckValue + Multiplicand * 1;
            END;
        END;
      RoundNumber := ROUND(CheckValue,10,'>');
      CheckValue := RoundNumber - CheckValue;
      CheckValueChar := FORMAT(CheckValue,1);
      FormatOK := TRUE;
      IF CheckValueChar <> OrigCheckValue THEN
        ERROR(Text1090001);

      CLEARALL;
    END;

    PROCEDURE InvReferenceCheck@2(PurchInvReference@1090001 : Text[70]);
    BEGIN
      Length := STRLEN(PurchInvReference);
      IF Length < 2 THEN
        ERROR(Text1090005);

      OrigCheckValue := COPYSTR(PurchInvReference,Length);
      PurchInvReference := COPYSTR(PurchInvReference,1,Length - 1);
      NumberLen := STRLEN(PurchInvReference);

      CLEAR(Multiplicand);
      CLEAR(CheckValue);

      FOR Counter := 1 TO NumberLen DO
        CASE Counter OF
          1,4,7,10,13,16,19:
            BEGIN
              EVALUATE(Multiplicand,COPYSTR(PurchInvReference,NumberLen + 1 - Counter,1));
              CheckValue := CheckValue + Multiplicand * 7;
            END;
          2,5,8,11,14,17,20:
            BEGIN
              EVALUATE(Multiplicand,COPYSTR(PurchInvReference,NumberLen + 1 - Counter,1));
              CheckValue := CheckValue + Multiplicand * 3;
            END;
          3,6,9,12,15,18:
            BEGIN
              EVALUATE(Multiplicand,COPYSTR(PurchInvReference,NumberLen + 1 - Counter,1));
              CheckValue := CheckValue + Multiplicand * 1;
            END;
        END;

      RoundNumber := ROUND(CheckValue,10,'>');
      CheckValue := RoundNumber - CheckValue;
      CheckValueChar := FORMAT(CheckValue,1);

      IF NOT (CheckValueChar = OrigCheckValue) THEN
        ERROR(Text1090006);
    END;

    PROCEDURE CreateSalesInvReference@25(PostingNo@1090001 : Code[20];BillToCustomer@1090002 : Code[20]) NewRefNo@1090000 : Code[20];
    BEGIN
      SalesSetup.GET;
      CLEAR(ReferenceNumber);
      IF NOT SalesSetup."Invoice No." THEN
        SalesSetup.TESTFIELD("Reference Nos.");
      IF SalesSetup."Reference Nos." = '' THEN
        SalesSetup.TESTFIELD("Invoice No.",TRUE);
      WeightStr := '7137137137137137137';
      IF SalesSetup."Reference Nos." <> '' THEN
        NoSeriesMgt.InitSeries(SalesSetup."Reference Nos.",'',0D,
          NoSeriesRefNo,SalesSetup."Reference Nos.");

      IF SalesSetup."Invoice No." THEN
        ReferenceNumber := PostingNo;
      IF NoSeriesRefNo <> '' THEN
        ReferenceNumber := NoSeriesRefNo + ReferenceNumber;
      IF SalesSetup."Customer No." THEN
        ReferenceNumber := BillToCustomer + ReferenceNumber ;
      IF SalesSetup.Date THEN
        ReferenceNumber := FORMAT(WORKDATE,0,'<day,2><Month,2><year,2>') + ReferenceNumber;
      IF SalesSetup."Default Number" <> '' THEN
        ReferenceNumber := SalesSetup."Default Number" + ReferenceNumber;

      NumberLen := STRLEN(ReferenceNumber);
      IF NumberLen > 19 THEN
        ERROR(Text1090002);

      CheckValue := STRCHECKSUM(ReferenceNumber,COPYSTR(WeightStr,20 - NumberLen));
      NewRefNo := COPYSTR(ReferenceNumber + FORMAT(CheckValue),1,MAXSTRLEN(NewRefNo));

      Counter := 1;
      REPEAT
        IF COPYSTR(NewRefNo,Counter,1) <> '0' THEN BEGIN
          RefStartPos := Counter;
          Counter := 19;
        END;
        Counter := Counter + 1;
      UNTIL Counter = 20;
      NewRefNo := COPYSTR(NewRefNo,RefStartPos);
    END;

    PROCEDURE PurchMessageCheck@1090001(VAR Rec@1090003 : Record 11020398);
    VAR
      MsgText1@1090008 : Text[10];
      MsgText2@1090007 : Text[15];
      MsgText3@1090006 : Text[6];
      MsgLen@1090005 : Integer;
      PurchaseHeader@1100285500 : Record 38;
    BEGIN
      PurchaseHeader.GET(Rec."Document Type",Rec."Document No.");
      Vend.GET(PurchaseHeader."Pay-to Vendor No.");
      //Vend.GET(Rec."Pay-to Vendor No.");
      CASE Rec."Message Type" OF
        0:
          Rec."Invoice Message" := '';
        1:
          IF Vend."Our Account No." <> '' THEN BEGIN
            //IF Rec."Vendor Invoice No." = '' THEN BEGIN
            IF PurchaseHeader."Vendor Invoice No." = '' THEN BEGIN
              //MESSAGE(Text1090003,Rec.FIELDCAPTION("Vendor Invoice No."),Vend."No.");
              MESSAGE(Text1090003,PurchaseHeader.FIELDCAPTION("Vendor Invoice No."),Vend."No.");
              Rec."Invoice Message" := '';
              Rec."Message Type" := 0;
              EXIT;
            END;

            MsgText1 := COPYSTR(Vend."Our Account No.",1,10);
            MsgLen := STRLEN(MsgText1);
            IF MsgLen < 10 THEN
              REPEAT
                MsgText1 := MsgText1 + ' ';
                MsgLen := MsgLen + 1
              UNTIL MsgLen = 10;

            //MsgText2 := COPYSTR(Rec."Vendor Invoice No.",1,15);
            MsgText2 := COPYSTR(PurchaseHeader."Vendor Invoice No.",1,15);
            MsgLen := STRLEN(MsgText2);
            IF MsgLen < 15 THEN
              REPEAT
                MsgText2 := MsgText2 + ' ';
                MsgLen := MsgLen + 1
              UNTIL MsgLen = 15;

            //MsgText3 := FORMAT(Rec."Document Date",0,'<Year,2><Month,2><Day,2>');
            MsgText3 := FORMAT(PurchaseHeader."Document Date",0,'<Year,2><Month,2><Day,2>');
            Rec."Invoice Message" := MsgText1 + MsgText2 + MsgText3;
          END ELSE BEGIN
            MESSAGE(Text1090004,Vend.FIELDCAPTION("Our Account No."),Vend."No.");
            Rec."Invoice Message" := '';
            EXIT;
          END;
        2:
          Rec."Invoice Message" := '';
      END;
    END;

    BEGIN
    {
      NAVFI: removed field "Invoice Message 2", reduced size of "Invoice Message" from 250 -> 128, due to full table-definition
    }
    END.
  }
}

