OBJECT Page 759 Job Profitability Chart
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Job Profitability Chart;
               NOR=L›nnsomhetsdiagram for prosjekt;
               SVE=L”nsamhetsdiagram f”r projekt];
    SourceTable=Table11072003;
    PageType=CardPart;
    ActionList=ACTIONS
    {
      { 3       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 4       ;1   ;ActionGroup;
                      CaptionML=[ENU=Options;
                                 NOR=Alternativer;
                                 SVE=Alternativ] }
      { 5       ;2   ;ActionGroup;
                      CaptionML=[ENU=Chart Type;
                                 NOR=Diagramtype;
                                 SVE=Diagramtyp] }
      { 10      ;3   ;Action    ;
                      CaptionML=[ENU=Default;
                                 NOR=Standard;
                                 SVE=Standard];
                      ToolTipML=[ENU=Select the default graphing option for this chart.;
                                 NOR=Velg standard grafalternativ for dette diagrammet.;
                                 SVE=V„lj standarddiagramalternativet f”r det h„r diagrammet.];
                      ApplicationArea=#Jobs;
                      OnAction=BEGIN
                                 UpdateChart(DefaultChartType);
                               END;
                                }
      { 9       ;3   ;Action    ;
                      CaptionML=[ENU=Column;
                                 NOR=Kolonne;
                                 SVE=Kolumn];
                      ToolTipML=[ENU=Select the column graphing option for this chart.;
                                 NOR=Velg standard kolonnegrafalternativ for dette diagrammet.;
                                 SVE=V„lj stapeldiagramalternativet f”r det h„r diagrammet.];
                      ApplicationArea=#Jobs;
                      OnAction=BEGIN
                                 UpdateChart(ChartType::Column);
                               END;
                                }
      { 8       ;3   ;Action    ;
                      CaptionML=[ENU=Line;
                                 NOR=Linje;
                                 SVE=Rad];
                      ToolTipML=[ENU=Select the line graphing option for this chart.;
                                 NOR=Velg standard linjegrafalternativ for dette diagrammet.;
                                 SVE=V„lj linjediagramalternativet f”r det h„r diagrammet.];
                      ApplicationArea=#Jobs;
                      OnAction=BEGIN
                                 UpdateChart(ChartType::Line);
                               END;
                                }
      { 7       ;3   ;Action    ;
                      CaptionML=[ENU=Stacked Column;
                                 NOR=Stablet kolonne;
                                 SVE=Staplad stapel];
                      ToolTipML=[ENU=Select the stacked column graphing option for this chart.;
                                 NOR=Velg standard stablet kolonnegrafalternativ for dette diagrammet.;
                                 SVE=V„lj alternativet f”r staplad stapel f”r det h„r diagrammet.];
                      ApplicationArea=#Jobs;
                      OnAction=BEGIN
                                 UpdateChart(ChartType::StackedColumn);
                               END;
                                }
      { 6       ;3   ;Action    ;
                      CaptionML=[ENU=Stacked Area;
                                 NOR=Stablet omr†de;
                                 SVE=Staplad yta];
                      ToolTipML=[ENU=Select the stacked area graphing option for this chart.;
                                 NOR=Velg standard stablet omr†degrafalternativ for dette diagrammet.;
                                 SVE=V„lj alternativet f”r staplad yta f”r det h„r diagrammet.];
                      ApplicationArea=#Jobs;
                      OnAction=BEGIN
                                 UpdateChart(ChartType::StackedArea);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=<Control1>;
                ContainerType=ContentArea }

    { 2   ;1   ;Field     ;
                Name=Chart;
                ToolTipML=[ENU=Specifies the Job Profitability chart.;
                           NOR=Angir diagrammet Prosjektl›nnsomhet.;
                           SVE=Anger diagrammet L”nsamhet f”r projekt.];
                ApplicationArea=#Jobs;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.BusinessChart;PublicKeyToken=31bf3856ad364e35] }

  }
  CODE
  {
    VAR
      BusChartBuf@1002 : Record 485;
      TempJob@1008 : TEMPORARY Record 11072003;
      JobChartMgt@1001 : Codeunit 759;
      ChartIsReady@1000 : Boolean;
      ChartType@1009 : 'Point,,Bubble,Line,,StepLine,,,,,Column,StackedColumn,StackedColumn100,Area,,StackedArea,StackedArea100,Pie,Doughnut,,,Range,,,,Radar,,,,,,,,Funnel';
      JobChartType@1003 : 'Profitability,Actual to Budget Cost,Actual to Budget Price';
      CurrentChartType@1004 : Option;

    LOCAL PROCEDURE UpdateChart@1(NewChartType@1000 : 'Point,,Bubble,Line,,StepLine,,,,,Column,StackedColumn,StackedColumn100,Area,,StackedArea,StackedArea100,Pie,Doughnut,,,Range,,,,Radar,,,,,,,,Funnel');
    BEGIN
      IF NOT ChartIsReady THEN
        EXIT;

      JobChartMgt.CreateJobChart(BusChartBuf,TempJob,NewChartType,JobChartType::Profitability);
      BusChartBuf.Update(CurrPage.Chart);
      CurrentChartType := NewChartType;
    END;

    LOCAL PROCEDURE DefaultChartType@3() : Integer;
    BEGIN
      EXIT(ChartType::Column);
    END;

    EVENT Chart@-2::DataPointClicked@1(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
      BusChartBuf.SetDrillDownIndexes(point);
      JobChartMgt.DataPointClicked(BusChartBuf,TempJob);
    END;

    EVENT Chart@-2::DataPointDoubleClicked@2(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
    END;

    EVENT Chart@-2::AddInReady@3();
    BEGIN
      ChartIsReady := TRUE;
      UpdateChart(DefaultChartType);
    END;

    EVENT Chart@-2::Refresh@4();
    BEGIN
      IF ChartIsReady THEN
        UpdateChart(CurrentChartType);
    END;

    BEGIN
    END.
  }
}

