OBJECT Page 11072217 Site Mngmnt. Project Hour Acc.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Stundenerfassung BaufÅhrer pro Projekt;
               ENU=Site Management Hour Accounting by Project;
               NLD=Urenverantwoording uitvoerder per project;
               NOR=Timerapportering for prosjektledelse etter prosjekt;
               SVE=Tidrapportering fîr byggledning efter projekt];
    SaveValues=Yes;
    SourceTable=Table11012362;
    PopulateAllFields=Yes;
    PageType=ListPlus;
    OnInit=BEGIN
             ProjectNoEditable := TRUE;
             WeekEditable := TRUE;
             YearEditable := TRUE;
             ShiftCodeFldVisible := TRUE;
             ReceivingCompanyEditable := TRUE;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 HoursSetup.GET;

                 FILTERGROUP(2);
                 IF EVALUATE(gCalledFromSiteMgtForm, GETFILTER("Called From Site Mgt Form")) THEN;
                 IF EVALUATE(gWorkDate, GETFILTER("Work Date Filter")) THEN;
                 IF GETFILTER("Shift Code Filter") <> '''''' THEN //kkleermaker.n, C012168, 140110
                   gShiftCode := GETFILTER("Shift Code Filter");
                 IF gCalledFromSiteMgtForm THEN
                   gOnlyForCurrProject := TRUE;
                 FILTERGROUP(0);

                 IF gCalledFromSiteMgtForm THEN BEGIN
                   YearEditable := FALSE;
                   WeekEditable := FALSE;
                   CurrPage.SUB.PAGE.SetSelections(gWorkDate, gShiftCode);  //*DP00033.c  also Shift
                 END;
                 IF gOnlyForCurrProject THEN BEGIN
                   ReceivingCompanyEditable := FALSE;
                   ProjectNoEditable := FALSE;
                 END;

                 ShiftCodeFld := gShiftCode;  //*DP00033.n (33273) gShiftCode can not be used on form, because of 'SaveValues' property is Yes
                 ShiftCodeFldVisible := (gCalledFromSiteMgtForm AND (gShiftCode <> '') );  //*DP00033.n (33273)
               END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  IF NOT gCalledFromSiteMgtForm THEN BEGIN
                    IF xRec.Year <> 0 THEN
                      Year := xRec.Year
                    ELSE BEGIN
                      IF Year = 0 THEN
                        Year := DATE2DMY(TODAY,3);
                    END;
                    IF xRec.Week <> 0 THEN
                      VALIDATE(Week,xRec.Week)
                    ELSE BEGIN
                      IF Week = 0 THEN
                        VALIDATE(Week,DATE2DWY(TODAY,2));
                    END;
                  END;
                  IF NOT gOnlyForCurrProject THEN BEGIN
                    IF "Receiving Company" ='' THEN
                      "Receiving Company" := COMPANYNAME;
                  END;
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100485027;1 ;ActionGroup;
                      CaptionML=[DEU=&Stundenerfassung;
                                 ENU=&Hoursaccounting;
                                 NLD=U&renverantwoording;
                                 SVE=&Timbokfîring] }
      { 1210190002;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=[DEU=Stunden Subunternehmen;
                                 ENU=Subcontractor Hours;
                                 NLD=Onderaannemer uren;
                                 SVE=Underentreprenîrstimmar];
                      Image=CalculateWIP;
                      OnAction=VAR
                                 SubcHrAcc@1210190000 : Record 11020452;
                               BEGIN
                                 //*DP00034
                                 TESTFIELD(Year);
                                 TESTFIELD(Week);
                                 TESTFIELD("Receiving Company");
                                 TESTFIELD("Project No.");

                                 SubcHrAcc.FILTERGROUP(9);
                                 SubcHrAcc.SETRANGE(Year, Year);
                                 SubcHrAcc.SETRANGE(Week, Week);
                                 SubcHrAcc.SETRANGE("Receiving Company", "Receiving Company");
                                 SubcHrAcc.SETRANGE("Project No.", "Project No.");
                                 SubcHrAcc.FILTERGROUP(0);
                                 PAGE.RUNMODAL(PAGE::"Subcontractor Proj. Hour Acc.", SubcHrAcc);
                               END;
                                }
      { 1210190001;2 ;Action    ;
                      CaptionML=[DEU=Auswahl;
                                 ENU=Selections;
                                 NLD=Selecties;
                                 NOR=Utvalg;
                                 SVE=Val];
                      Image=SelectEntries;
                      OnAction=VAR
                                 SiteMgtProjHrHead@1210190001 : Record 11012362;
                                 ProjHrSelFrm@1210190002 : Page 11126057;
                               BEGIN
                                 HoursSetup.TESTFIELD("Sel. Empl./Codes by Proj./Wk", TRUE);
                                 TESTFIELD(Year);
                                 TESTFIELD(Week);
                                 TESTFIELD("Receiving Company");
                                 TESTFIELD("Project No.");

                                 IF NOT SiteMgtProjHrHead.GET(Year, Week, "Receiving Company", "Project No.") THEN BEGIN //*Keyfields filled but not inserted yet
                                   INSERT(TRUE);
                                   COMMIT;
                                 END;

                                 ProjHrSelFrm.SetSelection(Rec);
                                 ProjHrSelFrm.RUNMODAL;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525003;1 ;ActionGroup;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unctions;
                                 NLD=F&uncties;
                                 NOR=Fu&nksjon;
                                 SVE=Fu&nktion] }
      { 1100525006;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Stundenerfassung Projekt voriger Woche kopieren;
                                 ENU=Copy project hour accounting previous week;
                                 NLD=Urenverantwoording project vorige week kopiâren;
                                 SVE=Kopiera bokfîring av projekttimmar fîr fîregÜende vecka];
                      Promoted=Yes;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 DateRec@1100525000 : Record 2000000007;
                                 ProjHourHeadRec@1100525001 : Record 11012362;
                                 CopyProjHoursRpt@1100525002 : Report 11012251;
                               BEGIN
                                 TESTFIELD(Year);
                                 TESTFIELD(Week);
                                 TESTFIELD("Project No.");
                                 TESTFIELD("Receiving Company");

                                 DateRec.SETRANGE("Period Type", DateRec."Period Type"::Week);
                                 DateRec.SETFILTER("Period Start", '<%1',  DWY2DATE(1, Week, Year));
                                 IF DateRec.FINDLAST THEN BEGIN
                                   ProjHourHeadRec.SETRANGE(Year, DATE2DWY(DateRec."Period Start", 3));
                                   ProjHourHeadRec.SETRANGE(Week, DATE2DWY(DateRec."Period Start", 2));
                                 END;
                                 CopyProjHoursRpt.SETTABLEVIEW(ProjHourHeadRec);
                                 CopyProjHoursRpt.SetSelection(Rec);  //* Current Header
                                 CopyProjHoursRpt.RUNMODAL;
                               END;
                                }
      { 1100485016;1 ;ActionGroup;
                      CaptionML=[DEU=Bu&chung;
                                 ENU=P&osting;
                                 NLD=B&oeken;
                                 NOR=B&okfõring;
                                 SVE=B&okfîring] }
      { 1100528500;2 ;Action    ;
                      CaptionML=[DEU=Zeilen fr&eigeben;
                                 ENU=Re&lease Lines;
                                 NLD=Regels &vrijgeven];
                      Promoted=Yes;
                      Image=ReleaseDoc;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ReleaseLines;
                               END;
                                }
      { 1100528501;2 ;Action    ;
                      CaptionML=[DEU=Zeilen er&neut îffnen;
                                 ENU=Re&open Lines;
                                 NLD=Regels opnieu&w openen];
                      Promoted=Yes;
                      Image=ReOpen;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ReopenLines;
                               END;
                                }
      { 1100525002;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=[DEU=Buchen;
                                 ENU=Post;
                                 NLD=Boeken;
                                 NOR=Bokfõr;
                                 SVE=Bokfîr];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CurrPage.UPDATE;  //18428
                                 GenerateHours;
                               END;
                                }
      { 1100525001;  ;ActionContainer;
                      ActionContainerType=Reports }
      { 1100525000;1 ;Action    ;
                      CaptionML=[DEU=Stundenerfassung pro Projekt;
                                 ENU=Hour Accounting by Project;
                                 NLD=Urenverantwoording per project;
                                 SVE=Tidrapportering efter projekt];
                      Image=CalculateWIP;
                      OnAction=VAR
                                 PrintDocument@1100530001 : Codeunit 229;
                               BEGIN
                                 PrintDocument.PrintSiteManHrAccProject(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                CaptionML=[DEU=Allgemein;
                           ENU=Main;
                           NLD=Algemeen;
                           NOR=Primër;
                           SVE=PrimÑr] }

    { 1100485001;2;Field  ;
                SourceExpr=Year;
                Importance=Promoted;
                Editable=WeekEditable }

    { 1100485003;2;Field  ;
                SourceExpr=Week;
                Importance=Promoted;
                Editable=WeekEditable;
                OnLookup=BEGIN
                           LookupWeek(WeekEditable);
                         END;
                          }

    { 1100485005;2;Field  ;
                SourceExpr="Receiving Company";
                Editable=ReceivingCompanyEditable;
                OnValidate=BEGIN
                             IF "Receiving Company" ='' THEN
                               "Receiving Company" := COMPANYNAME;
                           END;
                            }

    { 1100485007;2;Field  ;
                SourceExpr="Project No.";
                Editable=ProjectNoEditable;
                OnValidate=BEGIN
                             Rec.SelectProject();
                             ProjectNoOnAfterValidate;
                           END;

                OnLookup=VAR
                           ProjRec@1100485000 : Record 11012359;
                           ProjFrm@1100485001 : Page 11072214;
                         BEGIN
                           CLEAR(ProjFrm);
                           ProjFrm.LOOKUPMODE(TRUE);
                           IF "Receiving Company" <> '' THEN
                             ProjRec.SETRANGE(Company,"Receiving Company");
                           ProjRec.SETRANGE(Type,ProjRec.Type::Project);
                           ProjFrm.SETTABLEVIEW(ProjRec);
                           IF ProjRec.GET("Receiving Company",ProjRec.Type::Project,"Project No.") THEN
                             ProjFrm.SETRECORD(ProjRec);
                           IF gOnlyForCurrProject THEN
                             ProjFrm.RUNMODAL
                           ELSE BEGIN
                             IF ProjFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               ProjFrm.GETRECORD(ProjRec);
                               "Receiving Company" := ProjRec.Company;
                               "Project No." := ProjRec.Code;
                               "Department Code" := ProjRec."Department Code";  //C042604
                             END;
                             CurrPage.UPDATE;
                           END;
                         END;
                          }

    { 1100485015;2;Field  ;
                DrillDown=No;
                SourceExpr="Project Description" }

    { 1100485009;2;Field  ;
                SourceExpr="Document No.";
                Editable=FALSE }

    { 1100485029;2;Field  ;
                SourceExpr=Generated;
                Editable=FALSE }

    { 1100528502;2;Field  ;
                SourceExpr=Released;
                Editable=False }

    { 1210190005;2;Field  ;
                Name=ShiftCodeFld;
                CaptionML=[DEU=Schichtdienst;
                           ENU=Shift Code;
                           NLD=Ploegendienst;
                           NOR=Skiftkode;
                           SVE=Skiftkod];
                SourceExpr=ShiftCodeFld;
                Visible=ShiftCodeFldVisible;
                Editable=FALSE;
                OnLookup=VAR
                           ProjHourLine@1210190000 : Record 11012363;
                         BEGIN
                           ProjHourLine."Receiving Company" := "Receiving Company";
                           ProjHourLine."Project No." := "Project No.";
                           ProjHourLine."Shift Code" := ShiftCodeFld;
                           ProjHourLine.LookupShiftCode(FALSE);
                         END;
                          }

    { 1100485014;1;Part   ;
                Name=SUB;
                SubPageLink=Year=FIELD(Year),
                            Week=FIELD(Week),
                            Project No.=FIELD(Project No.),
                            Receiving Company=FIELD(Receiving Company);
                PagePartID=Page11072218 }

    { 1905289801;1;Group  ;
                CaptionML=[DEU=Daten;
                           ENU=Data;
                           NLD=Data;
                           NOR=Data;
                           SVE=Data] }

    { 1100485011;2;Field  ;
                SourceExpr=Inserted;
                Importance=Promoted;
                Editable=FALSE }

    { 1100485022;2;Field  ;
                SourceExpr="Inserted By";
                Editable=FALSE }

    { 1100485020;2;Field  ;
                SourceExpr=Modified;
                Editable=FALSE }

    { 1100485024;2;Field  ;
                SourceExpr="Modified By";
                Importance=Promoted;
                Editable=FALSE }

    { 1100525009;0;Container;
                ContainerType=FactBoxArea }

    { 1100525011;1;Part   ;
                SubPageLink=Line No.=FIELD(Line No.),
                            Year=FIELD(Year),
                            Week=FIELD(Week),
                            Employee No.=FIELD(Employee No.);
                PagePartID=Page11130444;
                ProviderID=1100485014;
                PartType=Page }

    { 1100525010;1;Part   ;
                SubPageLink=Line No.=FIELD(Line No.),
                            Year=FIELD(Year),
                            Week=FIELD(Week),
                            Employee No.=FIELD(Employee No.);
                PagePartID=Page11130445;
                ProviderID=1100485014;
                PartType=Page }

    { 1100525008;1;Part   ;
                SubPageLink=Year=FIELD(Year),
                            Week=FIELD(Week),
                            Employee No.=FIELD(Employee No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11130440;
                ProviderID=1100485014;
                PartType=Page }

    { 1100525007;1;Part   ;
                SubPageLink=Year=FIELD(Year),
                            Week=FIELD(Week),
                            Employee No.=FIELD(Employee No.);
                PagePartID=Page11130441;
                ProviderID=1100485014;
                PartType=Page }

    { 1100525005;1;Part   ;
                SubPageLink=Year=FIELD(Year),
                            Week=FIELD(Week),
                            Employee No.=FIELD(Employee No.);
                PagePartID=Page11130442;
                ProviderID=1100485014;
                PartType=Page }

    { 1100525004;1;Part   ;
                SubPageLink=Year=FIELD(Year),
                            Week=FIELD(Week),
                            Employee No.=FIELD(Employee No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11130643;
                ProviderID=1100485014;
                PartType=Page }

  }
  CODE
  {
    VAR
      HoursSetup@1100525000 : Record 11012355;
      Text001@1100525001 : TextConst 'DEU=Erstellung vom Projekt her nicht aktiviert;ENU=Generate by Project not activated;NLD=Aanmaken vanuit project niet geactiveerd;SVE=Generera efter projekt som inte Ñr aktiverade';
      SiteMngmntHoursCU@1100525003 : Codeunit 11012178;
      Text006@1100525008 : TextConst 'DEU=Stundenerfassung wurde bereits erstellt;ENU=Hoursaccounting Already Posted;NLD=Urenverantwoording is reeds aangemaakt;NOR=Timerapportering allerede bokfõrt;SVE=Timbokfîring redan bokfîrt';
      Text007@1100525009 : TextConst 'DEU=%1 Stundenerfassung erstellt;ENU="%1 hoursaccounting Generated ";NLD=%1 urenverantwoording aangemaakt;SVE="%1 timbokfîring har genererats "';
      gWorkDate@1210190000 : Date;
      gOnlyForCurrProject@1100525004 : Boolean;
      gCalledFromSiteMgtForm@1100525010 : Boolean;
      Text007a@1100525013 : TextConst 'DEU=%1 Stundenerfassungen erstellt;ENU="%1 Houraccountings Generated ";NLD=%1 urenverantwoordingen aangemaakt;SVE="%1 timbokfîringar har genererats "';
      Text008a@1100525012 : TextConst 'DEU=%1 Stundenerfassungen neu erstellt;ENU=%1 Houraccountings Generated Again;NLD=%1 urenverantwoordingen opnieuw aangemaakt;SVE=%1 timbokfîringar har genererats igen';
      Text008@1100525015 : TextConst 'DEU=%1 Stundenerfassung neu erstellt;ENU=%1 Houraccounting Generated Again;NLD=%1 urenverantwoording opnieuw aangemaakt;SVE=%1 timbokfîring har genererats igen';
      Text009@1100525014 : TextConst 'DEU=%1 Stundenerfassung(en) erstellt\ %2 Stundenerfassung(en) neu erstellt;ENU=%1 Houraccounting(s) Generated\ %2 Houraccounting(s) Generated Again;NLD=%1 urenverantwoording(en) aangemaakt\ %2 urenverantwoording(en) opnieuw aangemaakt;SVE=%1 timbokfîring(ar) har genererats\ %2 timbokfîring(ar) har genererats igen';
      Text010@1100525016 : TextConst 'DEU=%1 Werkzeugstundenzeilen fÅr unbemanntes Werkzeug erstellt;ENU=%1 Plant Hours Lines created for unmanned Plant;NLD=%1 materieelurenregels aangemaakt voor onbemand materieel;NOR=%1 maskintimer opprettet for ubemannet maskin;SVE=%1 Maskinstimmar har skapats fîr obemannad Maskin';
      gShiftCode@1210190001 : Code[10];
      ShiftCodeFld@1210190003 : Code[10];
      ShiftCodeFldVisible@19004976 : Boolean INDATASET;
      YearEditable@19059786 : Boolean INDATASET;
      WeekEditable@19075403 : Boolean INDATASET;
      ReceivingCompanyEditable@19010655 : Boolean INDATASET;
      ProjectNoEditable@19028701 : Boolean INDATASET;
      DPA_IsHardFilter@1100525005 : Boolean;

    PROCEDURE SetOnlyForCurrentProject@1100525003();
    BEGIN
      //* Only for the current project and company (receiving/project company).
      //* The filter on project and company must be set before calling this form (in a filtergroup unequal to 0 !).
      gOnlyForCurrProject := TRUE;
    END;

    PROCEDURE GenerateHours@1100525000();
    VAR
      lvHourHeader@1100525000 : Record 11012360;
      lvProjHourLines@1100525001 : Record 11012363;
      lvProjHourHeader@1100525007 : Record 11012362;
      TmpHourHeader@1100525009 : TEMPORARY Record 11012360;
      MakeCounter@1100525005 : Integer;
      ReMakeCounter@1100525006 : Integer;
      lvUnmannedPlantLinesCounter@1100525002 : Integer;
      lvCreatedUnmannedPlantLines@1100525008 : Integer;
    BEGIN
      HoursSetup.GET;
      IF NOT HoursSetup."Generate Hours By Project" THEN
        ERROR(Text001);
      lvProjHourLines.SETCURRENTKEY(Year,Week,"Project No.","Employee No.");
      lvProjHourLines.SETRANGE(Year,Year);
      lvProjHourLines.SETRANGE(Week,Week);
      lvProjHourLines.SETRANGE("Receiving Company","Receiving Company");
      lvProjHourLines.SETRANGE("Project No.","Project No.");
      IF lvProjHourLines.FINDSET THEN BEGIN
        REPEAT
          IF ((lvProjHourLines.Type <> lvProjHourLines.Type::UnmannedPlant) AND (lvProjHourLines."Employee No." <> '')) OR
             ((lvProjHourLines.Type = lvProjHourLines.Type::UnmannedPlant) AND (lvProjHourLines."Employee No." = ''))
          THEN BEGIN
            IF NOT TmpHourHeader.GET(Year, Week, lvProjHourLines."Supplying Company", lvProjHourLines."Employee No.") THEN BEGIN
              TmpHourHeader.Year := Year;
              TmpHourHeader.Week := Week;
              TmpHourHeader."Supplying Company" := lvProjHourLines."Supplying Company";
              TmpHourHeader."Employee No." := lvProjHourLines."Employee No.";
              TmpHourHeader.INSERT;
            END;
          END;
        UNTIL lvProjHourLines.NEXT = 0;
      END;

      IF TmpHourHeader.FINDSET(FALSE,FALSE) THEN BEGIN
        REPEAT
          IF lvHourHeader.GET(Year, Week, TmpHourHeader."Supplying Company", TmpHourHeader."Employee No.") THEN BEGIN
            IF lvHourHeader."Employee No." <> '' THEN BEGIN
              IF HoursSetup."Overrule Created" THEN BEGIN
                IF lvHourHeader.Generated = FALSE THEN BEGIN
                  IF SiteMngmntHoursCU.CreateLines(lvHourHeader,FALSE,FALSE,'',FALSE,TRUE) THEN BEGIN
                    COMMIT;
                    lvHourHeader.Generated := TRUE;
                    lvHourHeader.MODIFY(TRUE);
                    MakeCounter += 1;
                  END;
                END ELSE BEGIN
                  IF SiteMngmntHoursCU.CreateLines(lvHourHeader,FALSE,FALSE,'',FALSE,TRUE) THEN BEGIN
                    COMMIT;
                    lvHourHeader.Generated := TRUE;
                    lvHourHeader.MODIFY(TRUE);
                    ReMakeCounter += 1;
                  END;
                END;
              END ELSE BEGIN
                IF lvHourHeader.Generated = FALSE THEN BEGIN
                  IF SiteMngmntHoursCU.CreateLines(lvHourHeader,FALSE,FALSE,'',FALSE,TRUE) THEN BEGIN
                    COMMIT;
                    lvHourHeader.Generated := TRUE;
                    lvHourHeader.MODIFY(TRUE);
                    MakeCounter += 1;
                  END;
                END ELSE
                  MESSAGE(Text006);
              END;
            END ELSE BEGIN
              SiteMngmntHoursCU.CreateUnmannedPlantLines(lvHourHeader, "Project No.", lvUnmannedPlantLinesCounter);
              lvHourHeader.Generated := TRUE;
              lvHourHeader.MODIFY(TRUE);
              lvCreatedUnmannedPlantLines := lvCreatedUnmannedPlantLines + lvUnmannedPlantLinesCounter;
            END;
          END;
        UNTIL TmpHourHeader.NEXT = 0;

        IF (MakeCounter <> 0) OR (ReMakeCounter <> 0) THEN BEGIN
          IF (MakeCounter <> 0) AND (ReMakeCounter = 0) THEN
            IF MakeCounter = 1 THEN
              MESSAGE(Text007,MakeCounter)
            ELSE
              MESSAGE(Text007a,MakeCounter);
          IF (MakeCounter = 0) OR (ReMakeCounter <> 0) THEN
            IF ReMakeCounter = 1 THEN
              MESSAGE(Text008,ReMakeCounter)
            ELSE
              MESSAGE(Text008a,ReMakeCounter);
          IF (MakeCounter <> 0) AND (ReMakeCounter <> 0) THEN
            MESSAGE(Text009,MakeCounter, ReMakeCounter);
        END;
        IF lvCreatedUnmannedPlantLines > 0 THEN
          MESSAGE(Text010 , lvCreatedUnmannedPlantLines);
      END;

      lvProjHourHeader.GET(Year,Week,"Receiving Company","Project No.");
      lvProjHourHeader.Generated := TRUE;
      lvProjHourHeader.MODIFY;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ProjectNoOnAfterValidate@19041008();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      IF NOT gOnlyForCurrProject THEN BEGIN
        IF "Project No." <> '' THEN
          ReceivingCompanyEditable := FALSE
        ELSE
          ReceivingCompanyEditable := TRUE;
      END;
    END;

    LOCAL PROCEDURE ReceivingCompanyOnActivate@19079283();
    BEGIN
      IF "Receiving Company" ='' THEN
        "Receiving Company" := COMPANYNAME;
    END;

    BEGIN
    END.
  }
}

