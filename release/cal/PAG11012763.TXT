OBJECT Page 11012763 Try-out Quote
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Try-out Quote;
               NOR=Tilbudsforesp›rsel;
               SVE=Anbudsf”rfr†gan];
    SourceTable=Table11012758;
    PopulateAllFields=Yes;
    DataCaptionFields=Code,Description;
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Mail Documents;
                                NOR=Ny,Behandle,Rapport,Send dokument;
                                SVE=Ny,Behandla,Rapport,Maila dokument];
    OnInit=BEGIN
             "Alternative AddressEditable" := TRUE;
             "Service LocationEditable" := TRUE;
             SETRANGE("Try-Out Quote Not Active");
             FillShowMandatoryVariables;
           END;

    OnOpenPage=VAR
                 PermissionManager@1100527700 : Codeunit 9002;
               BEGIN
                 SETRANGE("Try-Out Quote Not Active");
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 IsSaaS := PermissionManager.SoftwareAsAService;
               END;

    OnClosePage=BEGIN
                  CheckDataPresent;
                END;

    OnAfterGetRecord=BEGIN
                       CALCFIELDS("Try-Out Quote Not Active");

                       IF "Contact Person No." <> '' THEN
                         "Contact Filter" := "Contact Person No."
                       ELSE
                         "Contact Filter" := "Contact No.";


                       CALCFIELDS("Contact Phone", "Contact Phone 2", "Contact Mobile Phone", "Contact Fax", "Contact E-Mail");
                       CALCFIELDS("Bill-to Contact No."); //call 26135

                       "Alternative AddressEditable" := (
                                             ("Copy Address from" = "Copy Address from"::CompanyAlternative) OR
                                             ("Copy Address from" = "Copy Address from"::PersonAlternative));
                       "Service LocationEditable" := ("Copy Address from" = "Copy Address from"::"Service Location");

                       IF (xRec.Code <> '') AND (Code <> xRec.Code) THEN
                         CheckDataPresent;

                       PublishCRMPort := GetPublishCRMPort();
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    OnAfterGetCurrRecord=VAR
                           RecRef@1100529700 : RecordRef;
                         BEGIN
                           RecRef.GETTABLE(Rec);
                           CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
                           CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
                           CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode("Global Dimension 1 Code");
                           PublishCRMPort := GetPublishCRMPort; //PS, 16-10-2013
                           SetEstPartOfferAmntTotalsFilter;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190052;1 ;Action    ;
                      CaptionML=[ENU=Competitors;
                                 NOR=Konkurrenter;
                                 SVE=Konkurrenter];
                      RunObject=Page 11012771;
                      RunPageLink=Try-out Quote=FIELD(Code);
                      Image=SalesPurchaseTeam }
      { 1210190082;1 ;Action    ;
                      CaptionML=[ENU=Version Management;
                                 NOR=Versjonsh†ndtering;
                                 SVE=Versionshantering];
                      RunObject=Page 11012772;
                      RunPageLink=Try-out Quote=FIELD(Code);
                      Image=Versions }
      { 1100525015;1 ;Action    ;
                      CaptionML=[ENU=Responsible Persons;
                                 NOR=Ansvarlige personer;
                                 SVE=Ansvariga personer];
                      RunObject=Page 11125867;
                      RunPageLink=Try-out Quote No.=FIELD(Code);
                      Image=PersonInCharge }
      { 39      ;1   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 NOR=Ko&mmentarer;
                                 SVE=Ko&mmentarer];
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Try-out Quote),
                                  No.=FIELD(Code);
                      Image=ViewComments }
      { 40      ;1   ;Action    ;
                      CaptionML=[ENU=&Features;
                                 NOR=&Funksjoner;
                                 SVE=&Funktioner];
                      RunObject=Page 11012754;
                      RunPageLink=Relation Type=CONST(Try-out Quote),
                                  Code=FIELD(Code);
                      Image=BulletList }
      { 1210190007;1 ;Action    ;
                      CaptionML=[ENU=History;
                                 NOR=Historikk;
                                 SVE=Historik];
                      RunObject=Page 11126075;
                      RunPageLink=Try-out Quote No.=FIELD(Code);
                      Image=History }
      { 43      ;1   ;Action    ;
                      CaptionML=[ENU=To-dos;
                                 NOR=Gj›rem†l;
                                 SVE=Uppgifter];
                      Image=BreakPointsList;
                      OnAction=BEGIN
                                 ShowTodos;
                               END;
                                }
      { 1100285000;1 ;Action    ;
                      CaptionML=[ENU=ROT/RUT Reduction;
                                 SVE=ROT/RUT avdrag];
                      Promoted=Yes;
                      Image=AmountByPeriod;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ROTInformation@1100285000 : Record 11128101;
                                 ROTInformationPage@1100285001 : Page 11128101;
                               BEGIN
                                 // Check if there is any ROT related to the current record
                                 ROTInformation.RESET();
                                 ROTInformation.SETRANGE(Type, ROTInformation.Type::"Try-Out Quote");
                                 ROTInformation.SETRANGE("Document No.", Code);


                                 // Set the page view and open ROT Information page.
                                 ROTInformationPage.SETTABLEVIEW(ROTInformation);
                                 ROTInformationPage.RUN;
                               END;
                                }
      { 1210190122;1 ;Action    ;
                      CaptionML=[ENU=Successors;
                                 NOR=Etterf›lgere;
                                 SVE=Efterf”ljare];
                      RunObject=Page 11012770;
                      RunPageLink=Try-out Quote=FIELD(Code);
                      Promoted=Yes;
                      Image=Splitlines;
                      PromotedCategory=Process;
                      RunPageMode=Edit }
      { 1210190128;1 ;Action    ;
                      CaptionML=[ENU=Documents;
                                 NOR=Dokumenter;
                                 SVE=Dokument];
                      Promoted=Yes;
                      Image=Documents;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 RecRef@1199198001 : RecordRef;
                                 DocumentFilters@1199198002 : Codeunit 11012432;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Global Dimension 1 Code", FALSE, TRUE);
                               END;
                                }
      { 1210190129;1 ;Action    ;
                      CaptionML=[ENU=Document &Relations;
                                 NOR=Dokument&relasjoner;
                                 SVE=Dokument&relationer];
                      RunObject=Page 11012413;
                      RunPageView=WHERE(Document Type=CONST(Try-out Quote));
                      RunPageLink=No.=FIELD(Code);
                      Promoted=No;
                      Image=Relationship;
                      PromotedCategory=Process }
      { 1100485017;1 ;Action    ;
                      CaptionML=[ENU=Capacity Need;
                                 NOR=Prognose;
                                 SVE=Prognos];
                      RunObject=Page 11012777;
                      RunPageLink=Code=FIELD(Code);
                      Image=CalculateRemainingUsage }
      { 1100528501;1 ;Action    ;
                      CaptionML=ENU=Defects;
                      RunObject=Page 11128796;
                      RunPageLink=Try-out Quote=FIELD(Code);
                      Image=ErrorLog;
                      RunPageMode=View }
      { 1100529001;1 ;Action    ;
                      AccessByPermission=Page 11125906=X;
                      CaptionML=ENU=Plant Locations;
                      Visible=FALSE;
                      Image=MachineCenter;
                      OnAction=VAR
                                 TmpLinkedPlantLoc@1100530000 : TEMPORARY Record 11012657;
                               BEGIN
                                 TESTFIELD(Code);
                                 TmpLinkedPlantLoc.SETRANGE("Link Type", TmpLinkedPlantLoc."Link Type"::TryOutQuote);
                                 TmpLinkedPlantLoc."Link Type" := TmpLinkedPlantLoc."Link Type"::TryOutQuote;
                                 TmpLinkedPlantLoc."Try-out Quote No." := Code;
                                 PAGE.RUNMODAL(PAGE::"Linked Plant Location List", TmpLinkedPlantLoc);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 44      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 NOR=Fu&nksjon;
                                 SVE=F&unktioner] }
      { 45      ;2   ;Action    ;
                      CaptionML=[ENU=Edit Word Documents;
                                 NOR=Rediger Word-dokument;
                                 SVE=Redigera Word-dokument];
                      Promoted=Yes;
                      Image=Word;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TESTFIELD("Contact No.");
                                 EditDocuments("Contact No.", "Contact Person No.", FALSE, '');
                               END;
                                }
      { 1210190003;2 ;Action    ;
                      CaptionML=[ENU=&Filter on Feature;
                                 NOR="&Filter p† funksjon ";
                                 SVE=&Filter p† funktion];
                      Image=FilterLines;
                      OnAction=BEGIN
                                 FeatureFilterFrm.SetQuoteFilter(Rec);
                                 FeatureRec.SETRANGE("Try-out Quotes",TRUE);
                                 FeatureFilterFrm.SETTABLEVIEW(FeatureRec);
                                 FeatureFilterFrm.RUNMODAL;
                                 CLEAR(FeatureFilterFrm);
                               END;
                                }
      { 1100485008;2 ;Action    ;
                      CaptionML=[ENU=Copy;
                                 NOR=KOPIER;
                                 SVE=Kopiera];
                      Image=Copy;
                      OnAction=VAR
                                 CopyRep@1100485000 : Report 11012752;
                               BEGIN
                                 CopyRep.SetSelection(Code);
                                 CopyRep.RUNMODAL;
                                 CLEAR(CopyRep);
                               END;
                                }
      { 1100525031;2 ;Action    ;
                      ShortCutKey=Ctrl+K;
                      CaptionML=[ENU=Completeness Check;
                                 NOR=Fullstendighetskontroll;
                                 SVE=Fullst„ndighetskontroll];
                      Image=CheckList;
                      OnAction=VAR
                                 CheckRecordCompletion@1100525000 : Codeunit 11012252;
                                 RecRef@1100525001 : RecordRef;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 CheckRecordCompletion.ShowIncompleteFields(RecRef);
                               END;
                                }
      { 1100529000;2 ;Action    ;
                      AccessByPermission=TableData 11012554=I;
                      CaptionML=ENU=Create Plant Location;
                      Visible=FALSE;
                      Image=CreateSKU;
                      OnAction=BEGIN
                                 TESTFIELD(Code);
                                 Rec.RunCreatePlantLocation(Rec);
                               END;
                                }
      { 1100525005;1 ;ActionGroup;
                      CaptionML=[ENU=Mail Documents;
                                 NOR=Send dokumenter;
                                 SVE=E-postdokument];
                      ActionContainerType=NewDocumentItems }
      { 1100525003;2 ;Action    ;
                      CaptionML=[ENU=Contact;
                                 NOR=Kontaktperson;
                                 SVE=Kontakt];
                      Promoted=Yes;
                      Image=MailAttachment;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 Contact@1100525000 : Record 5050;
                               BEGIN
                                 TESTFIELD("Contact No.");
                                 IF Contact.GET("Contact No.") THEN
                                   EditDocuments("Contact No.", '', TRUE, Contact."E-Mail");
                               END;
                                }
      { 1100525001;2 ;Action    ;
                      CaptionML=[ENU=Contact Person;
                                 NOR=Kontaktperson;
                                 SVE=Kontaktperson];
                      Promoted=Yes;
                      Image=MailAttachment;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 Contact@1100525000 : Record 5050;
                               BEGIN
                                 TESTFIELD("Contact No.");
                                 TESTFIELD("Contact Person No.");
                                 IF Contact.GET("Contact Person No.") THEN
                                   EditDocuments("Contact No.", "Contact Person No.", TRUE, Contact."E-Mail");
                               END;
                                }
      { 1199197400;1 ;Action    ;
                      CaptionML=[ENU=&Print;
                                 NOR=Skriv &ut;
                                 SVE=Skriv &ut];
                      Image=Print;
                      OnAction=VAR
                                 DocPrint@1199197400 : Codeunit 229;
                                 TryOutQoute@1199197402 : Record 11012758;
                               BEGIN
                                 TryOutQoute := Rec;
                                 TryOutQoute.SETRECFILTER;
                                 DocPrint.PrintTryoutQuote(TryOutQoute);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generell;
                           SVE=Allm„nt] }

    { 2   ;2   ;Field     ;
                SourceExpr=Code;
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;  //db, 06-07-05
                             END;
                              }

    { 8   ;2   ;Field     ;
                SourceExpr=Description;
                Importance=Promoted;
                ShowMandatory=DescriptionMandatory }

    { 1210190088;2;Field  ;
                SourceExpr="Description 2";
                Importance=Promoted;
                ShowMandatory=Description2Mandatory }

    { 23  ;2   ;Field     ;
                SourceExpr="Try-out No.";
                OnValidate=BEGIN
                             TryoutNoOnAfterValidate;
                           END;

                ShowMandatory=TryoutNoMandatory }

    { 1210190002;2;Field  ;
                SourceExpr="Try-out Description" }

    { 1210190108;2;Field  ;
                SourceExpr="Try Out City" }

    { 4   ;2   ;Field     ;
                SourceExpr="Contact No.";
                OnValidate=BEGIN
                             ContactNoOnAfterValidate;
                           END;

                OnLookup=VAR
                           lvContactRec@1210190000 : Record 5050;
                           lvTryoutLineRec@1210190001 : Record 11012755;
                           CurrMarked@1210190004 : Boolean;
                         BEGIN
                           lvContactRec.RESET;
                           lvTryoutLineRec.RESET;
                           IF "Try-out No." <> '' THEN BEGIN
                             lvTryoutLineRec.SETRANGE("Try-out No.", "Try-out No.");
                             lvTryoutLineRec.SETFILTER("Contact No.", '<>%1', '');
                             IF lvTryoutLineRec.FIND('-') THEN BEGIN
                               REPEAT
                                 lvContactRec.GET(lvTryoutLineRec."Contact No.");
                                 lvContactRec.MARK(TRUE);
                                 IF lvContactRec."No." = "Contact No." THEN
                                   CurrMarked := TRUE;
                               UNTIL lvTryoutLineRec.NEXT = 0;
                               lvContactRec.MARKEDONLY(TRUE);
                               IF CurrMarked THEN
                                 lvContactRec.GET("Contact No.")
                               ELSE
                                 lvContactRec.FINDFIRST;
                             END;
                           END;
                           //lvContactRec.SETFILTER(Type,'%1',lvContactRec.Type::Company);
                           IF (NOT lvContactRec.MARKEDONLY) THEN BEGIN
                             IF NOT lvContactRec.GET("Contact No.") THEN BEGIN
                               lvContactRec."No." := "Contact No.";
                               lvContactRec."Company Name" := "Contact Name";
                             END;
                           END;
                           IF PAGE.RUNMODAL(PAGE::"Contact List", lvContactRec) = ACTION::LookupOK THEN BEGIN
                             IF (lvContactRec.Type = lvContactRec.Type::Person) AND (lvContactRec."Company No." = '') THEN BEGIN
                               VALIDATE("Contact No.", lvContactRec."No.");
                             END ELSE BEGIN
                               VALIDATE("Contact No.", lvContactRec."Company No.");
                               IF lvContactRec.Type = lvContactRec.Type::Person THEN
                                 VALIDATE("Contact Person No.", lvContactRec."No.");
                             END;
                             ContactNoOnAfterValidate;
                           END;
                         END;

                ShowMandatory=ContactNoMandatory }

    { 1210190004;2;Field  ;
                SourceExpr="Contact Name" }

    { 1210190125;2;Field  ;
                SourceExpr="Contact Name 2" }

    { 6   ;2   ;Field     ;
                SourceExpr="Contact Person No.";
                OnValidate=BEGIN
                             ContactPersonNoOnAfterValidate;
                           END;

                ShowMandatory=ContactPersonNoMandatory }

    { 1210190006;2;Field  ;
                SourceExpr="Contact Person Name" }

    { 1100527100;2;Field  ;
                SourceExpr="Contact Person Gender" }

    { 1210190134;2;Field  ;
                SourceExpr=Estimator;
                OnValidate=BEGIN
                             EstimatorOnAfterValidate;
                           END;

                ShowMandatory=EstimatorMandatory }

    { 1210190136;2;Field  ;
                SourceExpr="Name Estimator" }

    { 1100485000;2;Field  ;
                SourceExpr="Your reference";
                ShowMandatory=YourReferenceMandatory }

    { 1210190106;2;Field  ;
                SourceExpr=Discipline;
                Importance=Standard;
                OnValidate=BEGIN
                             DisciplineOnAfterValidate;
                           END;

                ShowMandatory=DisciplineMandatory }

    { 1100485002;2;Field  ;
                SourceExpr="Discipline Description";
                Importance=Additional }

    { 10  ;2   ;Field     ;
                SourceExpr="Salesperson Code";
                OnValidate=BEGIN
                             SalespersonCodeOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           LookupSalesPerson;  //db, 12-03-13: C006126
                         END;

                ShowMandatory=SalespersonCodeMandatory }

    { 1210190008;2;Field  ;
                SourceExpr="Salesperson Name" }

    { 1210190123;2;Field  ;
                SourceExpr="Tender No.";
                ShowMandatory=TenderNoMandatory }

    { 1210190084;2;Field  ;
                SourceExpr="Global Dimension 1 Code";
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                             CALCFIELDS("Global Dimension 1 Name");
                           END;

                ShowMandatory=GlobalDimension1CodeMandatory }

    { 1100525013;2;Field  ;
                SourceExpr="Global Dimension 1 Name" }

    { 1100528700;2;Field  ;
                SourceExpr="Lost To";
                Importance=Additional;
                ShowMandatory=LostToMandatory }

    { 1100528702;2;Field  ;
                SourceExpr="Reason Code";
                Importance=Additional;
                ShowMandatory=ReasonCodeMandatory }

    { 1210190104;2;Field  ;
                SourceExpr=Status;
                ShowMandatory=StatusMandatory }

    { 1210190132;2;Field  ;
                SourceExpr="Status changed on";
                Importance=Additional }

    { 1210190005;2;Field  ;
                SourceExpr="SharePoint Site URL";
                Importance=Additional;
                ShowMandatory=SharePointSiteURLMandatory }

    { 1100527000;2;Field  ;
                SourceExpr="Try-out Quote Folder";
                Enabled=NOT IsSaaS;
                OnAssistEdit=VAR
                               DocumentMgtSetup@1100527001 : Record 11071831;
                               OperatingSystemMgt@1100527000 : Codeunit 11012364;
                               FileMgt@1100527003 : Codeunit 419;
                               ExplorerPath@1100527002 : Text[50];
                             BEGIN
                               CheckFolder;

                               DocumentMgtSetup.GET;
                               IF NOT DocumentMgtSetup."Use Citrix Client" THEN
                                 ExplorerPath := OperatingSystemMgt.ClientEnviron('SYSTEMROOT') + '\Explorer.exe'
                               ELSE
                                 ExplorerPath := OperatingSystemMgt.ClientEnviron('SYSTEMROOT') + '\Pexplorer.exe';

                               IF "Try-out Quote Folder" = '' THEN
                                 FileMgt.SelectDirectoryNameWithBackSlash("Try-out Quote Folder")
                               ELSE BEGIN
                                 OperatingSystemMgt.ClientShell(
                                   STRSUBSTNO('"%1"', ExplorerPath),
                                   STRSUBSTNO('"%1"', "Try-out Quote Folder"),
                                   FALSE, FALSE);
                               END;
                             END;

                ShowMandatory=TryoutQuoteFolderMandatory }

    { 1100528500;2;Field  ;
                SourceExpr="Service Warranty Code";
                Importance=Additional;
                ShowMandatory=ServiceWarrantyCodeMandatory }

    { 1100525011;2;Field  ;
                CaptionML=[ENU=Publish on CRM Portal;
                           NOR=Publiser p† CRM-portal;
                           SVE=Publisera p† CRM-portal];
                SourceExpr=PublishCRMPort;
                Importance=Additional;
                OnValidate=BEGIN
                             TogglePublishCRMPort();
                           END;
                            }

    { 1100285100;2;Field  ;
                SourceExpr="Order Reviewed" }

    { 1210190010;1;Part   ;
                Name=ContactsSF;
                SubPageLink=Try-out Quote=FIELD(Code);
                PagePartID=Page11126073 }

    { 1905289801;1;Group  ;
                CaptionML=[ENU=Data;
                           NOR=Data;
                           SVE=Data] }

    { 1210190074;2;Field  ;
                SourceExpr="Apply Date";
                ShowMandatory=ApplyDateMandatory }

    { 1210190078;2;Field  ;
                SourceExpr="Assign Date";
                ShowMandatory=AssignDateMandatory }

    { 1210190096;2;Field  ;
                SourceExpr="Assign Time";
                ShowMandatory=AssignTimeMandatory }

    { 1210190098;2;Field  ;
                SourceExpr="Register Date";
                Importance=Promoted;
                ShowMandatory=RegisterDateMandatory }

    { 1210190091;2;Field  ;
                SourceExpr="Tender Date";
                ShowMandatory=TenderDateMandatory }

    { 1210190094;2;Field  ;
                SourceExpr="Tender Time";
                ShowMandatory=TenderTimeMandatory }

    { 1100529901;2;Field  ;
                SourceExpr="Information Note Date" }

    { 1100529902;2;Field  ;
                SourceExpr="Information Note Time" }

    { 1210190056;2;Field  ;
                SourceExpr="Send Date";
                Importance=Additional;
                ShowMandatory=SendDateMandatory }

    { 1100525000;2;Field  ;
                SourceExpr="Valid Until";
                Importance=Additional;
                ShowMandatory=ValidUntilMandatory }

    { 1100528201;2;Field  ;
                SourceExpr="Currency Code";
                Importance=Additional;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;

                ShowMandatory=CurrencyCodeMandatory }

    { 1100528200;2;Field  ;
                SourceExpr="Offered Amount (FCY)";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210190054;2;Field  ;
                SourceExpr="Offered Amount (LCY)";
                Importance=Additional;
                Editable=FALSE;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100528705;2;Field  ;
                SourceExpr="Cost Price";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100528709;2;Field  ;
                CaptionML=[ENU=Margin;
                           NOR=Marginal;
                           SVE=Marginal];
                SourceExpr=TryOutQuoteMargin }

    { 1100528701;2;Field  ;
                CaptionML=[ENU=Margin %;
                           NOR=Marginal %;
                           SVE=Marginalprocent];
                SourceExpr=TryOutQuoteMarginPerc }

    { 1100525027;2;Field  ;
                SourceExpr="Scoring Percentage";
                Importance=Promoted }

    { 1100525019;2;Field  ;
                SourceExpr=Leading }

    { 1100525025;2;Field  ;
                CaptionML=[ENU=Leading Estimate;
                           NOR=Innledende kalkyle;
                           SVE=Inledande kalkyl];
                SourceExpr=ShowEstimates(0);
                Editable=FALSE;
                OnLookup=BEGIN
                           ShowEstimates(1);
                         END;
                          }

    { 1100525021;2;Field  ;
                SourceExpr="Planning Informed";
                Importance=Additional;
                ShowMandatory=PlanningInformedMandatory }

    { 1100485014;2;Field  ;
                SourceExpr="Order Date";
                ShowMandatory=OrderDateMandatory }

    { 1210190070;2;Field  ;
                SourceExpr="Creation Date";
                Editable=FALSE }

    { 1100485010;2;Field  ;
                SourceExpr="Inserted By";
                Importance=Additional }

    { 1100485006;2;Field  ;
                CaptionML=[ENU=Last Changed;
                           NOR=Sist endret;
                           SVE=Senaste „ndring];
                SourceExpr="Change Date";
                Importance=Additional;
                Editable=FALSE }

    { 1100485007;2;Field  ;
                CaptionML=[ENU=Changed By;
                           NOR=Endret av;
                           SVE=Žndrad av];
                SourceExpr="Changed By";
                Importance=Additional;
                Editable=FALSE }

    { 1210190066;2;Field  ;
                SourceExpr="Expected Starting Date";
                ShowMandatory=ExpectedStartingDateMandatory }

    { 1210190062;2;Field  ;
                SourceExpr="Expected End Date";
                ShowMandatory=ExpectedEndDateMandatory }

    { 1100409000;2;Field  ;
                SourceExpr="Expected Order Date";
                ShowMandatory=ExpectedOrderDateMandatory }

    { 1100527300;2;Field  ;
                SourceExpr="Register place";
                Visible=FALSE }

    { 1100527301;2;Field  ;
                SourceExpr="Register Time";
                Visible=FALSE }

    { 1100527302;2;Field  ;
                SourceExpr="Tender Costs";
                Visible=FALSE }

    { 1100528502;2;Field  ;
                SourceExpr="Lost To Name" }

    { 1903073101;1;Group  ;
                CaptionML=[ENU=Address;
                           NOR=Adresse;
                           SVE=Adress] }

    { 1210190110;2;Field  ;
                SourceExpr="Copy Address from";
                OnValidate=BEGIN
                             CopyAddressfromOnAfterValidate;
                           END;
                            }

    { 1100485009;2;Field  ;
                SourceExpr="Alternative Address";
                Importance=Additional;
                Editable="Alternative AddressEditable";
                ShowMandatory=AlternativeAddressMandatory }

    { 1100525022;2;Field  ;
                SourceExpr="Service Location";
                Importance=Additional;
                Editable="Service LocationEditable";
                ShowMandatory=ServiceLocationMandatory }

    { 1210190038;2;Field  ;
                SourceExpr=Address;
                Importance=Promoted;
                ShowMandatory=AddressMandatory }

    { 1210190030;2;Field  ;
                SourceExpr="Address 2";
                Importance=Additional;
                ShowMandatory=Address2Mandatory }

    { 1210190025;2;Field  ;
                SourceExpr="Post Code";
                Importance=Promoted;
                ShowMandatory=PostCodeMandatory }

    { 1210190022;2;Field  ;
                SourceExpr=City;
                Importance=Promoted;
                ShowMandatory=CityMandatory }

    { 1210190126;2;Field  ;
                SourceExpr="Territory Code";
                ShowMandatory=TerritoryCodeMandatory }

    { 1210190018;2;Field  ;
                SourceExpr=County;
                ShowMandatory=CountyMandatory }

    { 1210190130;2;Field  ;
                SourceExpr="Country/Region Code";
                ShowMandatory=CountryRegionCodeMandatory }

    { 1100527003;2;Field  ;
                SourceExpr="Phone No." }

    { 1210190112;2;Field  ;
                SourceExpr="Contact Phone";
                Importance=Additional }

    { 1210190114;2;Field  ;
                SourceExpr="Contact Phone 2";
                Importance=Additional }

    { 1210190116;2;Field  ;
                SourceExpr="Contact Mobile Phone";
                Importance=Additional }

    { 1210190118;2;Field  ;
                SourceExpr="Contact Fax";
                Importance=Additional }

    { 1210190120;2;Field  ;
                SourceExpr="Contact E-Mail";
                Importance=Additional }

    { 1901577701;1;Group  ;
                CaptionML=[ENU=Quote Text;
                           NOR=Tilbudstekst;
                           SVE=Offerttext] }

    { 1100485003;2;Field  ;
                SourceExpr="Quote Text";
                MultiLine=Yes }

    { 1905058401;1;Group  ;
                CaptionML=[ENU=Invoice-to;
                           NOR=Faktura til;
                           SVE=Faktura till] }

    { 1100525002;2;Field  ;
                SourceExpr="Bill-to Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             CALCFIELDS("Bill-to Contact No."); //call 26135
                           END;

                ShowMandatory=BilltoCustomerNoMandatory }

    { 1100525004;2;Field  ;
                DrillDown=No;
                SourceExpr="Bill-to Name";
                Importance=Additional }

    { 1100525006;2;Field  ;
                DrillDown=No;
                SourceExpr="Bill-to Name 2";
                Importance=Additional }

    { 1100525008;2;Field  ;
                DrillDown=No;
                SourceExpr="Bill-to Address";
                Importance=Additional }

    { 1100525010;2;Field  ;
                DrillDown=No;
                SourceExpr="Bill-to Address 2";
                Importance=Additional }

    { 1100525012;2;Field  ;
                DrillDown=No;
                SourceExpr="Bill-to Post Code";
                Importance=Additional }

    { 1100525014;2;Field  ;
                DrillDown=No;
                SourceExpr="Bill-to City";
                Importance=Additional }

    { 1100525036;2;Field  ;
                SourceExpr="Bill-to Contact No (Person)";
                ShowMandatory=BilltoContactNoMandatory }

    { 1100525038;2;Field  ;
                DrillDown=No;
                SourceExpr="Bill-to Contact Name";
                Importance=Additional }

    { 1100525017;2;Field  ;
                SourceExpr="Installment Scheme Project";
                ShowMandatory=InstallmentSchemeProjectMandatory }

    { 1100525032;2;Field  ;
                SourceExpr="Installment Scheme Service";
                ShowMandatory=InstallmentSchemeServiceMandatory }

    { 1210190001;0;Container;
                ContainerType=FactBoxArea }

    { 1100529900;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page;
                UpdatePropagation=Both }

    { 1210190000;1;Part   ;
                SubPageLink=Code=FIELD(Code);
                PagePartID=Page11130311;
                PartType=Page }

    { 1100529600;1;Part   ;
                Name=EstPartOfferAmntTotalsFB;
                CaptionML=ENU=Offer Amount Totals;
                PagePartID=Page11229317;
                PartType=Page }

    { 1100527001;1;Part   ;
                CaptionML=[ENU=Comments;
                           NOR=Kommentarer;
                           SVE=Kommentar];
                SubPageLink=Table Name=CONST(Try-out Quote),
                            No.=FIELD(Code);
                PagePartID=Page11072482;
                Editable=FALSE;
                PartType=Page }

    { 1100525009;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1100525007;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      FeatureFilterFrm@1210190002 : Page 11012757;
      FeatureRec@1210190001 : Record 11012752;
      Text001@1100525000 : TextConst 'ENU=Not all %1s selected for %2 %3 %4;NOR=Ikke alle %1 er valgt for %2 %3 %4;SVE=Inte alla %1 har valts f”r %2 %3 %4';
      Text002@1100525001 : TextConst 'ENU=Not all %1s selected for %2 %3 %4;NOR=Ikke alle %1 er valgt for %2 %3 %4;SVE=Inte alla %1 har valts f”r %2 %3 %4';
      DPA_IsHardFilter@1100000999 : Boolean;
      "Alternative AddressEditable"@19027558 : Boolean INDATASET;
      "Service LocationEditable"@19055487 : Boolean INDATASET;
      PublishCRMPort@1100525002 : Boolean;
      TenderDateMandatory@1100529100 : Boolean;
      ApplyDateMandatory@1100529101 : Boolean;
      AssignDateMandatory@1100529102 : Boolean;
      EstimatorMandatory@1100529103 : Boolean;
      ContactPersonNoMandatory@1100529104 : Boolean;
      DisciplineMandatory@1100529105 : Boolean;
      ValidUntilMandatory@1100529106 : Boolean;
      RegisterDateMandatory@1100529107 : Boolean;
      GlobalDimension1CodeMandatory@1100529108 : Boolean;
      StatusMandatory@1100529109 : Boolean;
      SalespersonCodeMandatory@1100529110 : Boolean;
      ExpectedStartingDateMandatory@1100529111 : Boolean;
      ExpectedEndDateMandatory@1100529112 : Boolean;
      ExpectedOrderDateMandatory@1100529113 : Boolean;
      DescriptionMandatory@1100529114 : Boolean;
      Description2Mandatory@1100529115 : Boolean;
      TryoutNoMandatory@1100529116 : Boolean;
      ContactNoMandatory@1100529117 : Boolean;
      YourReferenceMandatory@1100529118 : Boolean;
      TenderNoMandatory@1100529119 : Boolean;
      LostToMandatory@1100529120 : Boolean;
      ReasonCodeMandatory@1100529121 : Boolean;
      SharePointSiteURLMandatory@1100529122 : Boolean;
      ServiceWarrantyCodeMandatory@1100529123 : Boolean;
      AssignTimeMandatory@1100529124 : Boolean;
      TenderTimeMandatory@1100529125 : Boolean;
      SendDateMandatory@1100529126 : Boolean;
      CurrencyCodeMandatory@1100529127 : Boolean;
      PlanningInformedMandatory@1100529128 : Boolean;
      OrderDateMandatory@1100529129 : Boolean;
      AlternativeAddressMandatory@1100529130 : Boolean;
      ServiceLocationMandatory@1100529131 : Boolean;
      AddressMandatory@1100529132 : Boolean;
      Address2Mandatory@1100529133 : Boolean;
      PostCodeMandatory@1100529134 : Boolean;
      CityMandatory@1100529135 : Boolean;
      TerritoryCodeMandatory@1100529136 : Boolean;
      CountyMandatory@1100529137 : Boolean;
      CountryRegionCodeMandatory@1100529138 : Boolean;
      BilltoCustomerNoMandatory@1100529139 : Boolean;
      BilltoContactNoMandatory@1100529140 : Boolean;
      InstallmentSchemeProjectMandatory@1100529141 : Boolean;
      InstallmentSchemeServiceMandatory@1100529142 : Boolean;
      TryoutQuoteFolderMandatory@1100527000 : Boolean;
      IsSaaS@1100527700 : Boolean;

    PROCEDURE CheckDataPresent@11012000();
    VAR
      ContactSetup@1210190016 : Record 5079;
      lFeatGroupRec@1100485001 : Record 11012751;
      lFeatTypeRec@1100485000 : Record 11012753;
      lTryOutQuoteRec@1100525000 : Record 11012758;
    BEGIN
      IF NOT lTryOutQuoteRec.GET(xRec.Code) THEN
        EXIT;

      ContactSetup.GET;

      IF ContactSetup."Required Features Alert" THEN BEGIN
        lFeatTypeRec.SETRANGE("Relation Type", lFeatTypeRec."Relation Type"::"Try-out Quote");
        lFeatTypeRec.SETRANGE(Code, xRec.Code);
        IF lFeatTypeRec.FINDSET(FALSE, FALSE) THEN
          REPEAT
            IF lFeatGroupRec.GET(lFeatTypeRec."Feature Group") THEN BEGIN
              IF (lFeatTypeRec.Feature = '') AND lFeatGroupRec."Obligatory for Try-out Quotes" THEN BEGIN
                  MESSAGE(Text001, lFeatTypeRec.FIELDCAPTION(Feature), TABLECAPTION, xRec.Code,xRec.Description);
                  EXIT; //!
              END;

              IF (lFeatTypeRec.Value = 0) AND lFeatGroupRec."Value Oblig for Try-out Quotes" THEN BEGIN
                  MESSAGE(Text002, lFeatTypeRec.FIELDCAPTION(Value), TABLECAPTION, xRec.Code,xRec.Description);
                  EXIT; //!
              END;
            END;
          UNTIL lFeatTypeRec.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE ContactNoOnAfterValidate@19009577();
    BEGIN
      CurrPage.UPDATE;
      CurrPage.ContactsSF.PAGE.UpdateForm;
    END;

    LOCAL PROCEDURE ContactPersonNoOnAfterValidate@19021883();
    BEGIN
      CurrPage.UPDATE;
      CurrPage.ContactsSF.PAGE.UpdateForm;
    END;

    LOCAL PROCEDURE SalespersonCodeOnAfterValidate@19011896();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE TryoutNoOnAfterValidate@19057940();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DisciplineOnAfterValidate@19013243();
    BEGIN
      CALCFIELDS("Discipline Description");
    END;

    LOCAL PROCEDURE EstimatorOnAfterValidate@19077849();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CopyAddressfromOnAfterValidate@19032562();
    BEGIN
      "Alternative AddressEditable" := (
                            ("Copy Address from" = "Copy Address from"::CompanyAlternative) OR
                            ("Copy Address from" = "Copy Address from"::PersonAlternative));
      "Service LocationEditable" := ("Copy Address from" = "Copy Address from"::"Service Location");
    END;

    LOCAL PROCEDURE FillShowMandatoryVariables@1100529100();
    BEGIN
      TenderDateMandatory := FieldInCompletionControl(FIELDNO("Tender Date"));
      ApplyDateMandatory := FieldInCompletionControl(FIELDNO("Apply Date"));
      AssignDateMandatory := FieldInCompletionControl(FIELDNO("Assign Date"));
      EstimatorMandatory := FieldInCompletionControl(FIELDNO(Estimator));
      ContactPersonNoMandatory := FieldInCompletionControl(FIELDNO("Contact Person No."));
      DisciplineMandatory := FieldInCompletionControl(FIELDNO(Discipline));
      ValidUntilMandatory := FieldInCompletionControl(FIELDNO("Valid Until"));
      RegisterDateMandatory := FieldInCompletionControl(FIELDNO("Register Date"));
      GlobalDimension1CodeMandatory := FieldInCompletionControl(FIELDNO("Global Dimension 1 Code"));
      StatusMandatory := FieldInCompletionControl(FIELDNO(Status));
      SalespersonCodeMandatory := FieldInCompletionControl(FIELDNO("Salesperson Code"));
      ExpectedStartingDateMandatory := FieldInCompletionControl(FIELDNO("Expected Starting Date"));
      ExpectedEndDateMandatory := FieldInCompletionControl(FIELDNO("Expected End Date"));
      ExpectedOrderDateMandatory := FieldInCompletionControl(FIELDNO("Expected Order Date"));
      DescriptionMandatory := FieldInCompletionControl(FIELDNO(Description));
      Description2Mandatory := FieldInCompletionControl(FIELDNO("Description 2"));
      TryoutNoMandatory := FieldInCompletionControl(FIELDNO("Try-out No."));
      ContactNoMandatory := FieldInCompletionControl(FIELDNO("Contact No."));
      YourReferenceMandatory := FieldInCompletionControl(FIELDNO("Your reference"));
      TenderNoMandatory := FieldInCompletionControl(FIELDNO("Tender No."));
      LostToMandatory := FieldInCompletionControl(FIELDNO("Lost To"));
      ReasonCodeMandatory := FieldInCompletionControl(FIELDNO("Reason Code"));
      SharePointSiteURLMandatory := FieldInCompletionControl(FIELDNO("SharePoint Site URL"));
      ServiceWarrantyCodeMandatory := FieldInCompletionControl(FIELDNO("Service Warranty Code"));
      AssignTimeMandatory := FieldInCompletionControl(FIELDNO("Assign Time"));
      TenderTimeMandatory := FieldInCompletionControl(FIELDNO("Tender Time"));
      SendDateMandatory := FieldInCompletionControl(FIELDNO("Send Date"));
      CurrencyCodeMandatory := FieldInCompletionControl(FIELDNO("Currency Code"));
      PlanningInformedMandatory := FieldInCompletionControl(FIELDNO("Planning Informed"));
      OrderDateMandatory := FieldInCompletionControl(FIELDNO("Order Date"));
      AlternativeAddressMandatory := FieldInCompletionControl(FIELDNO("Alternative Address"));
      ServiceLocationMandatory := FieldInCompletionControl(FIELDNO("Service Location"));
      AddressMandatory := FieldInCompletionControl(FIELDNO(Address));
      Address2Mandatory := FieldInCompletionControl(FIELDNO("Address 2"));
      PostCodeMandatory := FieldInCompletionControl(FIELDNO("Post Code"));
      CityMandatory := FieldInCompletionControl(FIELDNO(City));
      TerritoryCodeMandatory := FieldInCompletionControl(FIELDNO("Territory Code"));
      CountyMandatory := FieldInCompletionControl(FIELDNO(County));
      CountryRegionCodeMandatory := FieldInCompletionControl(FIELDNO("Country/Region Code"));
      BilltoCustomerNoMandatory := FieldInCompletionControl(FIELDNO("Bill-to Customer No."));
      BilltoContactNoMandatory := FieldInCompletionControl(FIELDNO("Bill-to Contact No (Person)"));
      InstallmentSchemeProjectMandatory := FieldInCompletionControl(FIELDNO("Installment Scheme Project"));
      InstallmentSchemeServiceMandatory := FieldInCompletionControl(FIELDNO("Installment Scheme Service"));
      TryoutQuoteFolderMandatory := FieldInCompletionControl(FIELDNO("Try-out Quote Folder"));
    END;

    LOCAL PROCEDURE FieldInCompletionControl@1100529101(FieldNo@1100529100 : Integer) : Boolean;
    VAR
      ExtendedfieldProperty@1100529101 : Record 11020567;
      TableNo@1100529102 : Integer;
    BEGIN
      TableNo := DATABASE::"Try-out Quote";
      EXIT(ExtendedfieldProperty.FieldInCompletionControl(TableNo, FieldNo));
    END;

    LOCAL PROCEDURE SetEstPartOfferAmntTotalsFilter@1100529600();
    VAR
      TryOutSuccessor@1100529600 : Record 11012761;
      ObjectPermissionMgt@1100528200 : Codeunit 11020223;
      ObjectType@1100528201 : 'Table Data,Table,Form,Report,Dataport,Codeunit,XMLport,MenuSuite,Page,,System';
    BEGIN
      IF ObjectPermissionMgt.CheckLicenseExecutePermission(ObjectType::Page,PAGE::"Est Part Offer Amnt Totals FB") THEN BEGIN
        IF Code <> '' THEN BEGIN
          TryOutSuccessor.SETRANGE("Try-out Quote", Code);
          TryOutSuccessor.SETRANGE("Leading Estimate", TRUE);
          IF TryOutSuccessor.COUNT = 1 THEN BEGIN
            TryOutSuccessor.FINDFIRST;
            CurrPage.EstPartOfferAmntTotalsFB.PAGE.SetEstimateFilter(TryOutSuccessor."Estimate No.");
            EXIT;
          END;
        END;
        CurrPage.EstPartOfferAmntTotalsFB.PAGE.SetEstimateFilter('');
      END;
    END;

    BEGIN
    {
      *** 4PSSE.I012 ***
      130710 Added ROT Information action
      140410 Updated ROT Information action with image
      170512 ITERO.DL RFC188 caption change ROT -> ROT/RUT

      200609 Added field "Order Reviewed"
    }
    END.
  }
}

