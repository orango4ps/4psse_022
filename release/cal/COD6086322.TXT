OBJECT Codeunit 6086322 Navigate Expense - Find
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.3.00.01;
  }
  PROPERTIES
  {
    TableNo=6086014;
    Permissions=TableData 122=r;
    OnRun=VAR
            DocEntryTemp@1160040000 : TEMPORARY Record 265;
          BEGIN
            FindRecords(DocEntryTemp,"Doc. No. Filter","Posting Date Filter");
            Rec.TRANSFERFIELDS(DocEntryTemp);
          END;

  }
  CODE
  {
    VAR
      Text001@1160040001 : TextConst 'DEU=Kann keine EintrÑge oder BuchungsvorschlÑge fÅr %1 finden.;ENU=Unable to find any entries or posting suggestion for this %1.;NLD=Niet mogelijk om posten of boekingssuggesties voor deze %1 te vinden.';
      Text002@1160040000 : TextConst 'DEU=Der Buchungsvorschlag fÅr diesen %1 wurde nicht gebucht.;ENU=The posting suggestion for this %1 has not been posted.;NLD=De boekingssuggestie voor deze %1 is niet geboekt.';

    LOCAL PROCEDURE FindRecords@1160040002(VAR DocEntry@161024014 : Record 265;DocNoFilter@161024013 : Code[250];PostingDateFilter@161024012 : Text[250]);
    VAR
      TempExpense@161024017 : TEMPORARY Record 6086320;
      Expense@1160040000 : Record 6086320;
    BEGIN
      IF Expense.READPERMISSION THEN BEGIN
        FilterExpenses(TempExpense,DocNoFilter,PostingDateFilter);

        InsertIntoDocEntry(DocEntry,DATABASE::Expense,0,TempExpense.TABLECAPTION,TempExpense.COUNT);
      END;
    END;

    LOCAL PROCEDURE InsertIntoDocEntry@1160040001(VAR DocEntry@161024012 : Record 265;DocTableID@1000 : Integer;DocType@1003 : Option;DocTableName@1001 : Text[1024];DocNoOfRecords@1002 : Integer);
    BEGIN
      WITH DocEntry DO BEGIN
        IF DocNoOfRecords = 0 THEN
          EXIT;
        INIT;
        "Entry No." := "Entry No." + 1;
        "Table ID" := DocTableID;
        "Document Type" := DocType;
        "Table Name" := COPYSTR(DocTableName,1,MAXSTRLEN("Table Name"));
        "No. of Records" := DocNoOfRecords;
        INSERT;
      END;
    END;

    PROCEDURE FilterExpenses@161024014(VAR Expense2@161024014 : TEMPORARY Record 6086320;DocNoFilter@161024013 : Code[250];PostingDateFilter@161024012 : Text[250]);
    VAR
      GLEntry@1160040002 : Record 17;
      PurchHLine@1160040001 : Record 39;
      GenJnlLine@1160040005 : Record 81;
      PurchInvHeader@1160040000 : Record 122;
      Expense@1160040010 : Record 6086320;
    BEGIN
      Expense.SETCURRENTKEY("Created Doc. Type","Created Doc. Subtype","Created Doc. ID","Created Doc. Ref. No.");

      IF PurchInvHeader.READPERMISSION THEN BEGIN
        PurchInvHeader.SETFILTER("No.",DocNoFilter);
        PurchInvHeader.SETFILTER("Posting Date",PostingDateFilter);
        IF PurchInvHeader.FINDFIRST THEN
          REPEAT
            Expense.SETRANGE("Created Doc. Type",DATABASE::"Purchase Line");
            Expense.SETRANGE("Created Doc. Subtype",PurchHLine."Document Type"::Invoice);
            Expense.SETRANGE("Created Doc. ID",PurchInvHeader."Pre-Assigned No.");
            Expense.SETRANGE("Settlement No.",'');
            IF Expense.FINDFIRST THEN
              REPEAT
                IF NOT Expense2.GET(Expense."Entry No.") THEN BEGIN
                  Expense2 := Expense;
                  Expense2.INSERT;
                END;
              UNTIL Expense.NEXT = 0;
          UNTIL PurchInvHeader.NEXT = 0;
      END;

      IF GLEntry.READPERMISSION THEN BEGIN
        GLEntry.SETCURRENTKEY("Document No.","Posting Date");
        GLEntry.SETFILTER("Document No.",DocNoFilter);
        GLEntry.SETFILTER("Posting Date",PostingDateFilter);
        IF GLEntry.FINDFIRST THEN
          REPEAT
            Expense.SETRANGE("Created Doc. Type",DATABASE::"Gen. Journal Line");
            Expense.SETRANGE("Created Doc. Subtype",GenJnlLine."Document Type"::" ");
            Expense.SETRANGE("Created Doc. ID",GLEntry."Document No.");
            Expense.SETRANGE("Settlement No.",'');
            IF Expense.FINDFIRST THEN
              REPEAT
                IF NOT Expense2.GET(Expense."Entry No.") THEN BEGIN
                  Expense2 := Expense;
                  Expense2.INSERT;
                END;
              UNTIL Expense.NEXT = 0;
          UNTIL GLEntry.NEXT = 0;
      END;
    END;

    PROCEDURE NavigateExpense@1160040004(Expense@1160040000 : Record 6086320);
    VAR
      GLEntry@1160040002 : Record 17;
      PurchHeader@1160040003 : Record 38;
      GenJnlLine@1160040005 : Record 81;
      PurchInvHeader@1160040004 : Record 122;
      PurchCrMemoHeader@1160040008 : Record 124;
      GenJnlBatch@1160040010 : Record 232;
      EMSetup@1160040006 : Record 6086300;
      NavigateForm@1160040001 : Page 344;
      GenJnlManagement@1160040009 : Codeunit 230;
    BEGIN
      CASE Expense."Created Doc. Type" OF
        DATABASE::"Purchase Line":
          CASE Expense."Created Doc. Subtype" OF
            PurchHeader."Document Type"::Invoice:
              BEGIN
                IF PurchInvHeader.READPERMISSION THEN BEGIN
                  PurchInvHeader.SETCURRENTKEY("Pre-Assigned No.");
                  PurchInvHeader.SETRANGE("Pre-Assigned No.",Expense."Created Doc. ID");
                  IF PurchInvHeader.FINDFIRST THEN BEGIN
                    NavigateForm.SetDoc(PurchInvHeader."Posting Date",PurchInvHeader."No.");
                    NavigateForm.RUN;
                    EXIT;
                  END;
                END;

                IF PurchHeader.READPERMISSION THEN
                  IF PurchHeader.GET(Expense."Created Doc. Subtype",Expense."Created Doc. ID") THEN BEGIN
                    PAGE.RUN(PAGE::"Purchase Invoice",PurchHeader);
                    MESSAGE(Text002,Expense.TABLECAPTION);
                    EXIT;
                  END;
              END;
            PurchHeader."Document Type"::"Credit Memo":
              BEGIN
                IF PurchCrMemoHeader.READPERMISSION THEN BEGIN
                  PurchCrMemoHeader.SETCURRENTKEY("Pre-Assigned No.");
                  PurchCrMemoHeader.SETRANGE("Pre-Assigned No.",Expense."Created Doc. ID");
                  IF PurchCrMemoHeader.FINDFIRST THEN BEGIN
                    NavigateForm.SetDoc(PurchCrMemoHeader."Posting Date",PurchCrMemoHeader."No.");
                    NavigateForm.RUN;
                    EXIT;
                  END;
                END;

                IF PurchHeader.READPERMISSION THEN
                  IF PurchHeader.GET(Expense."Created Doc. Subtype",Expense."Created Doc. ID") THEN BEGIN
                    PAGE.RUN(PAGE::"Purchase Credit Memo",PurchHeader);
                    MESSAGE(Text002,Expense.TABLECAPTION);
                    EXIT;
                  END;
              END;
          END;

        DATABASE::"Gen. Journal Line":
          BEGIN
            IF GLEntry.READPERMISSION THEN BEGIN
              GLEntry.SETCURRENTKEY("Document No.","Posting Date");
              GLEntry.SETFILTER("Document No.",Expense."Created Doc. ID");
              IF GLEntry.FINDFIRST THEN BEGIN
                NavigateForm.SetDoc(GLEntry."Posting Date",Expense."Created Doc. ID");
                NavigateForm.RUN;
                EXIT;
              END;
            END;

            IF GenJnlLine.READPERMISSION THEN BEGIN
              EMSetup.GET;
              GenJnlLine.SETRANGE("Journal Template Name",EMSetup."Expense Template Name");
              GenJnlLine.SETRANGE("Journal Batch Name",EMSetup."Expense Batch Name");
              GenJnlLine.SETRANGE("Document No.",Expense."Created Doc. ID");
              IF GenJnlLine.FINDFIRST THEN BEGIN
                GenJnlBatch.SETRANGE("Journal Template Name",EMSetup."Expense Template Name");
                GenJnlBatch.SETRANGE(Name,EMSetup."Expense Batch Name");
                GenJnlBatch.FINDFIRST;
                GenJnlManagement.TemplateSelectionFromBatch(GenJnlBatch);

                MESSAGE(STRSUBSTNO(Text002,Expense.TABLECAPTION));
                EXIT;
              END;
            END;
          END;
      END;

      MESSAGE(STRSUBSTNO(Text001,Expense.TABLECAPTION));
    END;

    BEGIN
    END.
  }
}

