OBJECT Page 11125772 Edit Glaz. Call Line Values
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Verglasungsservice Werte Meldungsservice bearbeiten;
               ENU=Edit Glazing Srv. Call Line Values;
               NLD=Glasmeldingsregelwaarden wijzigen];
    PageType=StandardDialog;
    OnQueryClosePage=BEGIN
                       CloseActionOK := CloseAction IN [ACTION::OK,ACTION::LookupOK];
                     END;

  }
  CONTROLS
  {
    { 1100528600;;Container;
                ContainerType=ContentArea }

    { 1100528601;1;Group  ;
                CaptionML=[DEU=Allgemein;
                           ENU=General;
                           NLD=Algemeen;
                           NOR=Generell;
                           SVE=Allm„nt];
                GroupType=Group }

    { 1100528602;2;Field  ;
                CaptionML=[DEU=Einstandspreis Baugruppe;
                           ENU=Cost Price Assembly;
                           NLD=Kostprijs samenstelling];
                SourceExpr=CostPriceAssembly }

    { 1100528603;2;Field  ;
                CaptionML=[DEU=VK-Preis Zusammenstellung;
                           ENU=Sales Price Assembly;
                           NLD=Verkoopprijs samenstelling;
                           NOR=Salgspris montering;
                           SVE=F”rs„ljningspris, kapsling];
                SourceExpr=SalesPriceAssembly }

    { 1100528604;2;Field  ;
                CaptionML=[DEU=Einstandspreis Montage;
                           ENU=Cost Price Mounting;
                           NLD=Kostprijs plaatsen];
                SourceExpr=CostPriceMounting }

    { 1100528605;2;Field  ;
                CaptionML=[DEU=VK-Preis glasen;
                           ENU=Sales Price Mounting;
                           NLD=Verkoopprijs plaatsen;
                           NOR=Salgspris montering;
                           SVE=F”rs„ljningspris, montering];
                SourceExpr=SalesPriceMounting }

  }
  CODE
  {
    VAR
      GlazingServiceCallLine@1100528605 : Record 11125778;
      CostPriceAssembly@1100528600 : Decimal;
      SalesPriceAssembly@1100528601 : Decimal;
      CostPriceMounting@1100528602 : Decimal;
      SalesPriceMounting@1100528603 : Decimal;
      CloseActionOK@1100528604 : Boolean;

    PROCEDURE SetValues@1100528600(IGlazingServiceCallLine@1100528604 : Record 11125778);
    BEGIN
      GlazingServiceCallLine := IGlazingServiceCallLine;
      GlazingServiceCallLine.CALCFIELDS("Standard Cost Assembly", "Sales Price Assembly", "Unit Cost Mounting", "Sales Price Mounting");
      CostPriceAssembly := GlazingServiceCallLine."Standard Cost Assembly";
      SalesPriceAssembly := GlazingServiceCallLine."Sales Price Assembly";
      CostPriceMounting := GlazingServiceCallLine."Unit Cost Mounting";
      SalesPriceMounting := GlazingServiceCallLine."Sales Price Mounting";
    END;

    LOCAL PROCEDURE ApplyNewValues@1100528603();
    VAR
      GlazingServiceCallAssembly@1100528601 : Record 11125779;
      GlazingServiceCallActivity@1100528602 : Record 11125781;
      CorrectionFactorCost@1100528600 : Decimal;
      CorrectionFactorSales@1100528603 : Decimal;
    BEGIN
      GlazingServiceCallLine.ResetCorrectionFactors;
      GlazingServiceCallLine.CALCFIELDS("Standard Cost Assembly", "Sales Price Assembly", "Unit Cost Mounting", "Sales Price Mounting");

      CorrectionFactorCost := 1;
      CorrectionFactorSales := 1;
      IF GlazingServiceCallLine."Standard Cost Assembly" <> CostPriceAssembly THEN
        IF GlazingServiceCallLine."Standard Cost Assembly" <> 0 THEN
          CorrectionFactorCost := CostPriceAssembly / GlazingServiceCallLine."Standard Cost Assembly";
      GlazingServiceCallAssembly.SETRANGE("Glazing Service Call No.", GlazingServiceCallLine."Glazing Service Call No.");
      GlazingServiceCallAssembly.SETRANGE("Glazing Service Call Line No.", GlazingServiceCallLine."Line No.");
      IF GlazingServiceCallAssembly.FINDSET(TRUE) THEN
        REPEAT
          IF GlazingServiceCallAssembly."Correction Factor (Cost)" <> CorrectionFactorCost THEN
            GlazingServiceCallAssembly.VALIDATE("Correction Factor (Cost)", CorrectionFactorCost);
          GlazingServiceCallAssembly.MODIFY(TRUE);
        UNTIL GlazingServiceCallAssembly.NEXT = 0;

      GlazingServiceCallLine.CALCFIELDS("Sales Price Assembly");
      IF GlazingServiceCallLine."Sales Price Assembly" <> SalesPriceAssembly THEN
        IF GlazingServiceCallLine."Sales Price Assembly" <> 0 THEN
          CorrectionFactorSales := SalesPriceAssembly / GlazingServiceCallLine."Sales Price Assembly";
      IF GlazingServiceCallAssembly.FINDSET(TRUE) THEN
        REPEAT
          IF GlazingServiceCallAssembly."Correction Factor (Sales)" <> CorrectionFactorSales THEN
            GlazingServiceCallAssembly.VALIDATE("Correction Factor (Sales)", CorrectionFactorSales);
          GlazingServiceCallAssembly.MODIFY(TRUE);
        UNTIL GlazingServiceCallAssembly.NEXT = 0;

      CorrectionFactorCost := 1;
      CorrectionFactorSales := 1;
      IF GlazingServiceCallLine."Unit Cost Mounting" <> CostPriceMounting THEN
        IF GlazingServiceCallLine."Unit Cost Mounting" <> 0 THEN
          CorrectionFactorCost := CostPriceMounting / GlazingServiceCallLine."Unit Cost Mounting";
      GlazingServiceCallActivity.SETRANGE("Glazing Service Call No.", GlazingServiceCallLine."Glazing Service Call No.");
      GlazingServiceCallActivity.SETRANGE("Glazing Service Call Line No.", GlazingServiceCallLine."Line No.");
      GlazingServiceCallActivity.SETRANGE(Type, GlazingServiceCallActivity.Type::Mounting);
      IF GlazingServiceCallActivity.FINDSET(TRUE) THEN
        REPEAT
          IF GlazingServiceCallActivity."Correction Factor (Cost)" <> CorrectionFactorCost THEN
            GlazingServiceCallActivity.VALIDATE("Correction Factor (Cost)", CorrectionFactorCost);
          GlazingServiceCallActivity.MODIFY(TRUE);
        UNTIL GlazingServiceCallActivity.NEXT = 0;

      GlazingServiceCallLine.CALCFIELDS("Sales Price Mounting");
      IF GlazingServiceCallLine."Sales Price Mounting" <> SalesPriceMounting THEN
        IF GlazingServiceCallLine."Sales Price Mounting" <> 0 THEN
          CorrectionFactorSales := SalesPriceMounting / GlazingServiceCallLine."Sales Price Mounting";
      IF GlazingServiceCallActivity.FINDSET(TRUE) THEN
        REPEAT
          IF GlazingServiceCallActivity."Correction Factor (Sales)" <> CorrectionFactorSales THEN
            GlazingServiceCallActivity.VALIDATE("Correction Factor (Sales)", CorrectionFactorSales);
          GlazingServiceCallActivity.MODIFY(TRUE);
        UNTIL GlazingServiceCallActivity.NEXT = 0;
    END;

    LOCAL PROCEDURE "----"@1100528602();
    BEGIN
    END;

    LOCAL PROCEDURE StdDialogConfirm@1100528402() : Boolean;
    BEGIN
      COMMIT;
      CurrPage.RUNMODAL;
      EXIT(CloseActionOK);
    END;

    LOCAL PROCEDURE StdDialogDoAction@1100528401();
    BEGIN
      ApplyNewValues;
    END;

    PROCEDURE StdDialogRunModal@1100528404();
    BEGIN
      IF StdDialogConfirm THEN
        StdDialogDoAction;
    END;

    BEGIN
    END.
  }
}

