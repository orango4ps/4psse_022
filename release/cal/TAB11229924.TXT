OBJECT Table 11229924 Plant Warranty
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               PlantWarrantyTextLine@1100529000 : Record 11229925;
             BEGIN
               PlantWarrantyTextLine.SETRANGE("Plant Type", "Plant Type");
               PlantWarrantyTextLine.SETRANGE("Plant No.", "Plant No.");
               PlantWarrantyTextLine.SETRANGE("Warranty Type", "Warranty Type");
               PlantWarrantyTextLine.DELETEALL;
             END;

    OnRename=BEGIN
               TESTFIELD("Plant Type");
               TESTFIELD("Plant No.");
               TESTFIELD("Warranty Type");
             END;

    CaptionML=ENU=Plant Warranty;
  }
  FIELDS
  {
    { 10  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp];
                                                   NotBlank=Yes }
    { 20  ;   ;Plant No.           ;Code10        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   OnValidate=BEGIN
                                                                IF "Plant No." <> xRec."Plant No." THEN
                                                                  VALIDATE(Meter, '');
                                                                CALCFIELDS("Plant Description");
                                                              END;

                                                   CaptionML=[ENU=Plant No.;
                                                              NOR=Maskinnr.;
                                                              SVE=Maskinnr];
                                                   NotBlank=Yes }
    { 21  ;   ;Plant Description   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".Description WHERE (Plant Type=FIELD(Plant Type),
                                                                                                        No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Plant Description;
                                                              NOR=Maskinbeskrivelse;
                                                              SVE=Maskinbeskrivning];
                                                   Editable=No }
    { 30  ;   ;Warranty Type       ;Code10        ;TableRelation="Plant Warranty Type";
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Warranty Type Description");
                                                              END;

                                                   CaptionML=ENU=Warranty Type;
                                                   NotBlank=Yes }
    { 31  ;   ;Warranty Type Description;Text50   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Warranty Type".Description WHERE (Code=FIELD(Warranty Type)));
                                                   CaptionML=ENU=Warranty Type Description;
                                                   Editable=No }
    { 50  ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                CalculateDueDate;
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum] }
    { 60  ;   ;Lead Time           ;DateFormula   ;OnValidate=BEGIN
                                                                CalculateDueDate;
                                                              END;

                                                   CaptionML=ENU=Lead Time }
    { 65  ;   ;Due Date            ;Date          ;CaptionML=[ENU=Due Date;
                                                              NOR=Forfallsdato;
                                                              SVE=F”rfallodatum];
                                                   Editable=No }
    { 70  ;   ;Meter               ;Code10        ;TableRelation="Plant Meter Type"."Plant Meter" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                         Plant No.=FIELD(Plant No.));
                                                   OnValidate=BEGIN
                                                                IF Meter <> xRec.Meter THEN
                                                                  VALIDATE("Meter Reading Type", GetDefaultMeterReadingType);
                                                              END;

                                                   CaptionML=ENU=Meter }
    { 80  ;   ;Meter Reading Type  ;Code10        ;TableRelation="Plant Meter Type"."Plant Meter Type" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                              Plant No.=FIELD(Plant No.),
                                                                                                              Plant Meter=FIELD(Meter));
                                                   OnValidate=BEGIN
                                                                IF "Meter Reading Type" = '' THEN
                                                                  "Meter Reading to (Total)" := 0;
                                                                CALCFIELDS("Meter Unit of Measure");
                                                              END;

                                                   CaptionML=ENU=Meter Reading Type }
    { 81  ;   ;Meter Unit of Measure;Code10       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Meter Reading Type"."Unit of Measure" WHERE (Code=FIELD(Meter Reading Type)));
                                                   CaptionML=ENU=Meter Unit of Measure;
                                                   Editable=No }
    { 90  ;   ;Meter Reading to (Total);Decimal   ;OnValidate=BEGIN
                                                                IF "Meter Reading to (Total)" <> 0 THEN
                                                                  TESTFIELD("Meter Reading Type");
                                                              END;

                                                   CaptionML=ENU=Meter Reading to (Total);
                                                   DecimalPlaces=0:0;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 100 ;   ;Comment             ;Text80        ;CaptionML=[ENU=Comment;
                                                              NOR=Kommentar;
                                                              SVE=Kommentar] }
  }
  KEYS
  {
    {    ;Plant Type,Plant No.,Warranty Type      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE CalculateDueDate@1100529000();
    BEGIN
      IF ("Starting Date" = 0D) OR (FORMAT("Lead Time") = '') THEN
        "Due Date" := 0D
      ELSE
        "Due Date" := CALCDATE("Lead Time", "Starting Date");
    END;

    LOCAL PROCEDURE GetDefaultMeterReadingType@1100529001() : Code[20];
    VAR
      PlantMeterType@1100529000 : Record 11229921;
    BEGIN
      IF Meter <> '' THEN BEGIN
        PlantMeterType.SETRANGE("Plant Type","Plant Type");
        PlantMeterType.SETRANGE("Plant No.","Plant No.");
        PlantMeterType.SETRANGE("Plant Meter",Meter);
        IF PlantMeterType.FINDFIRST THEN BEGIN
          IF PlantMeterType.NEXT = 0 THEN
            EXIT(PlantMeterType."Plant Meter Type");
        END;
      END;
      EXIT('');
    END;

    PROCEDURE IsActiveWarranty@1100529002() : Boolean;
    VAR
      WarrantyFound@1100529000 : Boolean;
    BEGIN
      IF ("Warranty Type" = '') OR ("Starting Date" > TODAY) THEN
        EXIT(FALSE);
      IF (FORMAT("Lead Time") <> '') AND ("Due Date" <> 0D) THEN BEGIN
        IF "Due Date" <= TODAY THEN
          EXIT(FALSE);
        WarrantyFound := TRUE;
      END;
      IF ("Meter Reading to (Total)" > 0) AND ("Plant Type" <> '') AND ("Plant No." <> '') AND (Meter <> '') AND ("Meter Reading Type" <> '') THEN BEGIN
        IF TotalMeterReading > "Meter Reading to (Total)" THEN
          EXIT(FALSE);
        WarrantyFound := TRUE;
      END;
      EXIT(WarrantyFound);
    END;

    PROCEDURE ActualMeterReading@1100529003() : Decimal;
    VAR
      PlantMeterType@1100529001 : Record 11229921;
    BEGIN
      IF ("Plant Type" <> '') AND ("Plant No." <> '') AND (Meter <> '') AND ("Meter Reading Type" <> '') THEN
        EXIT(PlantMeterType.ActualMeterReading("Plant Type", "Plant No.", Meter, "Meter Reading Type"));
      EXIT(0);
    END;

    PROCEDURE TotalMeterReading@1100529005() : Decimal;
    VAR
      PlantMeterType@1100529001 : Record 11229921;
    BEGIN
      IF ("Plant Type" <> '') AND ("Plant No." <> '') AND (Meter <> '') AND ("Meter Reading Type" <> '') THEN
        EXIT(PlantMeterType.TotalMeterReading("Plant Type", "Plant No.", Meter, "Meter Reading Type", 0D, 0D));
      EXIT(0);
    END;

    BEGIN
    END.
  }
}

