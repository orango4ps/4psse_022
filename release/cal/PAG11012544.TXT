OBJECT Page 11012544 Copy Project Options
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Projektoptionen kopieren;
               ENU=Copy Project Options;
               NLD=Project meerwerkopties kopi‰ren;
               NOR=Kopier prosjektalternativer;
               SVE=Kopiera projektalternativ];
    PageType=StandardDialog;
    OnInit=BEGIN
             ProjectFromEditable := TRUE;
             OptionSubGroupToVisible := TRUE;
             OptionGroupToVisible := TRUE;
             OptionMainGrouptoVisible := TRUE;
             HouseModelFromVisible := TRUE;
             HouseModelToEditable := TRUE;
             PlotToVisible := TRUE;
             PlotFromVisible := TRUE;
           END;

    OnOpenPage=BEGIN
                 ProjectFromEditable := (NOT gCopyToCrossList);
                 PlotFromVisible := (((PlotTo <> '') OR (PlotToStandard)) AND (NOT gCopyToCrossList));
                 PlotToVisible := ((PlotTo <> '') AND (NOT gCopyToCrossList));
                 HouseModelToEditable := ((HouseModelTo <> '') AND (NOT gCopyToCrossList));
                 HouseModelFromVisible := (NOT PlotToStandard);
                 OptionMainGrouptoVisible := (NOT gCopyToCrossList);
                 OptionGroupToVisible := (NOT gCopyToCrossList);
                 OptionSubGroupToVisible := (NOT gCopyToCrossList);
               END;

    OnQueryClosePage=BEGIN
                       CloseActionOK := CloseAction IN [ACTION::OK,ACTION::LookupOK];
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190006;1;Group  ;
                CaptionML=[DEU=Kopieren von;
                           ENU=Copy from;
                           NLD=Kopi‰ren van;
                           NOR=Kopier fra;
                           SVE=Kopiera fr†n];
                GroupType=Group }

    { 1210190004;2;Field  ;
                Name=ProjectFrom;
                CaptionML=[DEU=Projekt in;
                           ENU=Project No.;
                           NLD=Projectnr.;
                           NOR=Prosjektnr;
                           SVE=Projektnr];
                SourceExpr=ProjectFrom;
                Editable=ProjectFromEditable;
                OnValidate=BEGIN
                             IF ProjectFrom <> '' THEN
                               ProjectRec.GET(ProjectFrom)
                             ELSE
                               PlotFrom := '';
                           END;

                OnLookup=BEGIN
                           LookupProject(ProjectFrom);
                         END;
                          }

    { 1210190022;2;Field  ;
                Name=PlotFrom;
                CaptionML=[DEU=Baunr.;
                           ENU=Plot No.;
                           NLD=Bouwnr.;
                           NOR=Tegningnr;
                           SVE=Ritningnr];
                SourceExpr=PlotFrom;
                Visible=PlotFromVisible;
                OnValidate=BEGIN
                             IF PlotFrom <> '' THEN
                               PlotRec.GET(ProjectFrom, PlotFrom);
                           END;

                OnLookup=BEGIN
                           LookupPlot(ProjectFrom, PlotFrom);
                         END;
                          }

    { 1210190000;2;Field  ;
                Name=HouseModelFrom;
                CaptionML=[DEU=Wohnungsmodell in;
                           ENU=House Model;
                           NLD=Woningmodel;
                           NOR=Husmodell;
                           SVE=Husmodell];
                SourceExpr=HouseModelFromFilter;
                Visible=HouseModelFromVisible;
                OnLookup=BEGIN
                           LookupHouseModelFilter(ProjectFrom, HouseModelFromFilter);
                         END;
                          }

    { 1210190012;2;Field  ;
                CaptionML=[DEU=Sonderleistung Hauptgruppe;
                           ENU=Option Main Group;
                           NLD=Optiehoofdgroep;
                           NOR=Alternativhovedgruppe;
                           SVE=Alternativhuvudgrupp];
                SourceExpr=OptionMainGroupFromFilter;
                OnLookup=BEGIN
                           LookupMainGroupFilter(ProjectFrom, OptionMainGroupFromFilter);
                         END;
                          }

    { 1210190015;2;Field  ;
                CaptionML=[DEU=Optionsgruppe;
                           ENU=Option Group;
                           NLD=Optiegroep;
                           NOR=Alternativgruppe;
                           SVE=Alternativgrupp];
                SourceExpr=OptionGroupFromFilter;
                OnLookup=BEGIN
                           LookupGroupFilter(ProjectFrom, OptionGroupFromFilter);
                         END;
                          }

    { 1210190018;2;Field  ;
                CaptionML=[DEU=Optionsuntergruppe;
                           ENU=Option Sub Group;
                           NLD=Optiesubgroep;
                           NOR=Alternativundergrupp;
                           SVE=Alternativundergrupp];
                SourceExpr=OptionSubGroupFromFilter;
                OnLookup=BEGIN
                           LookupSubgroupFilter(ProjectFrom, OptionSubGroupFromFilter);
                         END;
                          }

    { 1210190021;2;Field  ;
                CaptionML=[DEU=Option;
                           ENU=Option;
                           NLD=Optie;
                           NOR=Alternativ;
                           SVE=Alternativ];
                SourceExpr=OptionFromFilter;
                OnLookup=BEGIN
                           LookupOptionFilter(ProjectFrom,
                             HouseModelFromFilter, OptionMainGroupFromFilter, OptionGroupFromFilter, OptionSubGroupFromFilter, OptionFromFilter);
                         END;
                          }

    { 1100527800;2;Field  ;
                Name=CopyDocuments;
                CaptionML=[DEU=Belege;
                           ENU=Documents;
                           NLD=Documenten];
                SourceExpr=CopyDocuments }

    { 1210190009;1;Group  ;
                CaptionML=[DEU=Kopieren in;
                           ENU=Copy to;
                           NLD=Kopi‰ren naar;
                           NOR=Kopier til;
                           SVE=Kopiera till];
                GroupType=Group }

    { 1210190007;2;Field  ;
                CaptionML=[DEU=Projekt in;
                           ENU=Project No.;
                           NLD=Projectnr.;
                           NOR=Prosjektnr;
                           SVE=Projektnr];
                SourceExpr=ProjectTo;
                Editable=FALSE }

    { 1210190016;2;Field  ;
                Name=PlotTo;
                CaptionML=[DEU=Baunr.;
                           ENU=Plot No.;
                           NLD=Bouwnr.;
                           NOR=Tegningnr;
                           SVE=Ritningnr];
                SourceExpr=PlotTo;
                Visible=PlotToVisible;
                Editable=FALSE }

    { 1210190010;2;Field  ;
                Name=HouseModelTo;
                CaptionML=[DEU=Wohnungsmodell in;
                           ENU=House Model;
                           NLD=Woningmodel;
                           NOR=Husmodell;
                           SVE=Husmodell];
                SourceExpr=HouseModelTo;
                Editable=HouseModelToEditable }

    { 1100485001;2;Field  ;
                Name=OptionMainGroupto;
                CaptionML=[DEU=Sonderleistung Hauptgruppe;
                           ENU=Option Main Group;
                           NLD=Optiehoofdgroep;
                           NOR=Alternativhovedgruppe;
                           SVE=Alternativhuvudgrupp];
                SourceExpr=OptionMainGroupTo;
                Visible=OptionMainGrouptoVisible;
                OnLookup=BEGIN
                           OptionMainGroupTo := '';
                           LookupMainGroupFilter(ProjectTo, OptionMainGroupTo);
                         END;
                          }

    { 1100485002;2;Field  ;
                Name=OptionGroupTo;
                CaptionML=[DEU=Optionsgruppe;
                           ENU=Option Group;
                           NLD=Optiegroep;
                           NOR=Alternativgruppe;
                           SVE=Alternativgrupp];
                SourceExpr=OptionGroupTo;
                Visible=OptionGroupToVisible;
                OnLookup=BEGIN
                           OptionGroupTo := '';
                           LookupGroupFilter(ProjectTo, OptionGroupTo);
                         END;
                          }

    { 1100485003;2;Field  ;
                Name=OptionSubGroupTo;
                CaptionML=[DEU=Optionsuntergruppe;
                           ENU=Option Sub Group;
                           NLD=Optiesubgroep;
                           NOR=Alternativundergrupp;
                           SVE=Alternativundergrupp];
                SourceExpr=OptionSubGroupTo;
                Visible=OptionSubGroupToVisible;
                OnLookup=BEGIN
                           OptionSubGroupTo := '';
                           LookupSubgroupFilter(ProjectTo, OptionSubGroupTo);
                         END;
                          }

  }
  CODE
  {
    VAR
      HouseModelRec@1210190012 : Record 11012501;
      MainGroupRec@1210190011 : Record 11012509;
      GroupRec@1210190010 : Record 11012504;
      SubGroupRec@1210190008 : Record 11012505;
      OptionRec@1210190006 : Record 11012502;
      ProjectRec@1210190004 : Record 11072003;
      PlotRec@1210190016 : Record 11012500;
      gCopyToCrossList@1210190017 : Boolean;
      ProjectFrom@1210190000 : Code[20];
      ProjectTo@1210190002 : Code[20];
      PlotFrom@1210190015 : Code[10];
      PlotTo@1210190014 : Code[10];
      HouseModelTo@1210190013 : Code[20];
      HouseModelFromFilter@1210190009 : Code[250];
      OptionMainGroupFromFilter@1210190007 : Code[250];
      OptionGroupFromFilter@1210190005 : Code[250];
      OptionSubGroupFromFilter@1210190003 : Code[250];
      OptionFromFilter@1210190001 : Code[250];
      PlotToStandard@1100485000 : Boolean;
      OptionMainGroupTo@1100485004 : Code[20];
      OptionGroupTo@1100485003 : Code[20];
      OptionSubGroupTo@1100485002 : Code[20];
      PlotFromVisible@19020789 : Boolean INDATASET;
      PlotToVisible@19055262 : Boolean INDATASET;
      HouseModelToEditable@19044251 : Boolean INDATASET;
      HouseModelFromVisible@19050165 : Boolean INDATASET;
      OptionMainGrouptoVisible@19066183 : Boolean INDATASET;
      OptionGroupToVisible@19049774 : Boolean INDATASET;
      OptionSubGroupToVisible@19040194 : Boolean INDATASET;
      ProjectFromEditable@19049011 : Boolean INDATASET;
      CloseActionOK@1100528400 : Boolean;
      CopyDocuments@1100527800 : Boolean;

    PROCEDURE SetDefaults@1210190001(IProjectTo@1210190005 : Code[20];IPlotTo@1210190007 : Code[10];IHouseModelTo@1210190006 : Code[20];IHouseModelFrom@1210190004 : Code[20];IOptionMainGroupFrom@1210190003 : Code[20];IOptionGroupFrom@1210190002 : Code[20];IOptionSubGroupFrom@1210190001 : Code[20];IOptionFrom@1210190000 : Code[20]);
    BEGIN
      ProjectFrom := '';
      PlotFrom := '';
      ProjectTo := IProjectTo;
      PlotTo := IPlotTo;
      IF PlotTo <> '' THEN
        ProjectFrom := IProjectTo;
      HouseModelTo := IHouseModelTo;
      HouseModelFromFilter := IHouseModelFrom;
      OptionMainGroupFromFilter := IOptionMainGroupFrom;
      OptionGroupFromFilter := IOptionGroupFrom;
      OptionSubGroupFromFilter := IOptionSubGroupFrom;
      OptionFromFilter := IOptionFrom;
    END;

    PROCEDURE SetDefaultsCrossList@1210190000(IProjectTo@1210190005 : Code[20]);
    BEGIN
      gCopyToCrossList := TRUE;
      ProjectFrom := IProjectTo;
      ProjectTo := IProjectTo;
      PlotFrom := '';
      PlotTo := '';
      HouseModelTo := '';
      HouseModelFromFilter := '';
      OptionMainGroupFromFilter := '';
      OptionGroupFromFilter := '';
      OptionSubGroupFromFilter := '';
      OptionFromFilter := '';
    END;

    PROCEDURE LookupProject@1210190009(VAR IOProjectNo@1210190000 : Code[20]);
    BEGIN
      WITH ProjectRec DO BEGIN
        RESET;
        SETRANGE("Housebuilding Project", TRUE);
        "No." := IOProjectNo;
        IF PAGE.RUNMODAL(PAGE::"Job List",ProjectRec) = ACTION::LookupOK THEN BEGIN
          IF NOT gCopyToCrossList THEN
            IOProjectNo := "No.";
        END;
      END;
    END;

    PROCEDURE LookupPlot@1210190011(IProjectNo@1210190000 : Code[20];VAR IOPlotNo@1210190001 : Code[10]);
    BEGIN
      WITH PlotRec DO BEGIN
        RESET;
        SETRANGE("Project No.", IProjectNo);
        "Plot No." := IOPlotNo;
        IF PAGE.RUNMODAL(PAGE::"Plot Number List",PlotRec) = ACTION::LookupOK THEN
          IOPlotNo := "Plot No.";
      END;
    END;

    PROCEDURE LookupHouseModelFilter@1210190010(IProjectNo@1210190001 : Code[20];VAR IOHouseModelFilter@1210190000 : Code[250]);
    BEGIN
      WITH HouseModelRec DO BEGIN
        RESET;
        IF IProjectNo <> '' THEN
          SETRANGE("Project No.", IProjectNo)
         ELSE
          SETRANGE("Project No.", '');
        IF IOHouseModelFilter <> '' THEN BEGIN
          SETFILTER(Model, IOHouseModelFilter);
          IF FIND('-') THEN;
          SETRANGE(Model);
        END;
        IF IProjectNo <> '' THEN BEGIN
          IF PAGE.RUNMODAL(PAGE::"House Models by Project List", HouseModelRec) = ACTION::LookupOK THEN
            IOHouseModelFilter := Model;
        END ELSE
          IF PAGE.RUNMODAL(PAGE::"House Model List", HouseModelRec) = ACTION::LookupOK THEN
            IOHouseModelFilter := Model;
      END;
    END;

    PROCEDURE LookupMainGroupFilter@1210190008(IProjectNo@1210190001 : Code[20];VAR IOMainGroupFilter@1210190000 : Code[250]);
    BEGIN
      WITH MainGroupRec DO BEGIN
        RESET;
        IF ProjectFrom <> '' THEN
          SETRANGE("Project No.", IProjectNo)
        ELSE
          SETRANGE("Project No.", '');

        IF (ProjectFrom <> '') AND (PlotFrom <> '') THEN
          SETRANGE("Plot No.", PlotFrom)
        ELSE
          SETRANGE("Plot No.", '');

        IF IOMainGroupFilter <> '' THEN BEGIN
          SETFILTER(Code, IOMainGroupFilter);
          IF FIND('-') THEN;
          SETRANGE(Code);
        END;
        IF IProjectNo <> '' THEN BEGIN
          IF PAGE.RUNMODAL(PAGE::"Project Option Main Group List", MainGroupRec) = ACTION::LookupOK THEN
            IOMainGroupFilter := Code;
        END ELSE BEGIN
          IF PAGE.RUNMODAL(PAGE::"Option Main Group List", MainGroupRec) = ACTION::LookupOK THEN
            IOMainGroupFilter := Code;
        END;
      END;
    END;

    PROCEDURE LookupGroupFilter@1210190007(IProjectNo@1210190001 : Code[20];VAR IOGroupFilter@1210190000 : Code[250]);
    BEGIN
      WITH GroupRec DO BEGIN
        RESET;
        IF ProjectFrom <> '' THEN
          SETRANGE("Project No.", IProjectNo)
         ELSE
          SETRANGE("Project No.", '');

        IF (ProjectFrom <> '') AND (PlotFrom <> '') THEN
          SETRANGE("Plot No.", PlotFrom)
        ELSE
          SETRANGE("Plot No.", '');

        IF IOGroupFilter <> '' THEN BEGIN
          SETFILTER(Code, IOGroupFilter);
          IF FIND('-') THEN;
          SETRANGE(Code);
        END;
        IF IProjectNo <> '' THEN BEGIN
          IF PAGE.RUNMODAL(PAGE::"Project Option Groups", GroupRec) = ACTION::LookupOK THEN
            IOGroupFilter := Code;
        END ELSE BEGIN
          IF PAGE.RUNMODAL(PAGE::"Option Groups", GroupRec) = ACTION::LookupOK THEN
            IOGroupFilter := Code;
        END;
      END;
    END;

    PROCEDURE LookupSubgroupFilter@1210190006(IProjectNo@1210190001 : Code[20];VAR IOSubGroupFilter@1210190000 : Code[250]);
    BEGIN
      WITH SubGroupRec DO BEGIN
        RESET;
        IF ProjectFrom <> '' THEN
          SETRANGE("Project No.", IProjectNo)
         ELSE
          SETRANGE("Project No.", '');

        IF (ProjectFrom <> '') AND (PlotFrom <> '') THEN
          SETRANGE("Plot No.", PlotFrom)
        ELSE
          SETRANGE("Plot No.", '');

        IF IOSubGroupFilter <> '' THEN BEGIN
          SETFILTER(Code, IOSubGroupFilter);
          IF FIND('-') THEN;
          SETRANGE(Code);
        END;
        IF IProjectNo <> '' THEN BEGIN
          IF PAGE.RUNMODAL(PAGE::"Project Option Sub Groups", SubGroupRec) = ACTION::LookupOK THEN
            IOSubGroupFilter := Code;
        END ELSE BEGIN
          IF PAGE.RUNMODAL(PAGE::"Option Sub Groups", SubGroupRec) = ACTION::LookupOK THEN
            IOSubGroupFilter := Code;
        END;
      END;
    END;

    PROCEDURE LookupOptionFilter@1210190005(IProjectNo@1210190000 : Code[20];IHouseModelFilter@1210190001 : Code[250];IMainGroupFilter@1210190002 : Code[250];IGroupFilter@1210190003 : Code[250];ISubGroupFilter@1210190004 : Code[250];VAR IOOptionFilter@1210190005 : Code[250]);
    BEGIN
      WITH OptionRec DO BEGIN
        RESET;
        IF ProjectFrom <> '' THEN
          SETRANGE("Project No.", IProjectNo)
         ELSE
          SETRANGE("Project No.", '');

        IF (ProjectFrom <> '') AND (PlotFrom <> '') THEN
          SETRANGE("Plot No.", PlotFrom)
        ELSE
          SETRANGE("Plot No.", '');

        IF IHouseModelFilter <> '' THEN
          SETFILTER("House Model", IHouseModelFilter);
        IF IMainGroupFilter <> '' THEN
          SETFILTER("Main Group", IMainGroupFilter);
        IF IGroupFilter <> '' THEN
          SETFILTER(Group, IGroupFilter);
        IF ISubGroupFilter <> '' THEN
          SETFILTER("Sub Group", ISubGroupFilter);
        IF IOOptionFilter <> '' THEN BEGIN
          SETFILTER(Option, IOOptionFilter);
          IF FINDSET(FALSE, FALSE) THEN;
          SETRANGE(Option);
        END;
        IF PAGE.RUNMODAL(PAGE::"Option List",OptionRec) = ACTION::LookupOK THEN
          IOOptionFilter := Option;
      END;
    END;

    PROCEDURE SetPlotToStandard@1100485000(iPlotToStandard@1100485000 : Boolean);
    BEGIN
      PlotToStandard := iPlotToStandard;
    END;

    LOCAL PROCEDURE CopyProjectOptions@1100528404();
    VAR
      lvBuyerMgtCU@1100528402 : Codeunit 11012500;
      lvLevelFrom@1100528401 : 'Standard,Project,Plot';
      lvLevelTo@1100528400 : 'Standard,Project,Plot';
    BEGIN
      IF NOT gCopyToCrossList THEN BEGIN
        IF (ProjectFrom = '') THEN
          lvLevelFrom := lvLevelFrom::Standard
        ELSE BEGIN
          IF (PlotFrom = '') THEN
            lvLevelFrom := lvLevelFrom::Project
          ELSE
            lvLevelFrom := lvLevelFrom::Plot;
        END;
        IF (ProjectTo = '') THEN
          lvLevelTo := lvLevelTo::Standard
        ELSE BEGIN
          IF (PlotTo = '') THEN
            lvLevelTo := lvLevelTo::Project
          ELSE
            lvLevelTo := lvLevelTo::Plot;
        END;

        lvBuyerMgtCU.BmCopyOptions(
          lvLevelFrom, lvLevelTo,
          ProjectFrom, ProjectTo,
          PlotFrom, PlotTo,
          HouseModelFromFilter, HouseModelTo,
          OptionMainGroupFromFilter, OptionMainGroupTo,
          OptionGroupFromFilter, OptionGroupTo,
          OptionSubGroupFromFilter, OptionSubGroupTo,
          OptionFromFilter, '',CopyDocuments);
      END ELSE BEGIN
        lvBuyerMgtCU.BmCopyOptionsToCrossList(
          ProjectTo,
          HouseModelFromFilter,
          OptionMainGroupFromFilter,
          OptionGroupFromFilter,
          OptionSubGroupFromFilter,
          OptionFromFilter);
      END;
    END;

    LOCAL PROCEDURE StdDialogConfirm@1100528400() : Boolean;
    BEGIN
      CurrPage.RUNMODAL;
      EXIT(CloseActionOK);
    END;

    LOCAL PROCEDURE StdDialogDoAction@1100528401();
    BEGIN
      CopyProjectOptions;
    END;

    PROCEDURE StdDialogRunModal@1100528402();
    BEGIN
      IF StdDialogConfirm THEN
        StdDialogDoAction;
    END;

    BEGIN
    END.
  }
}

