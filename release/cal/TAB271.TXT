OBJECT Table 271 Bank Account Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Bank Account Ledger Entry;
               NOR=Bankkontopost;
               SVE=Bankkontotransaktion];
    LookupPageID=Page372;
    DrillDownPageID=Page372;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              NOR=Lõpenr.;
                                                              SVE=Lîpnr] }
    { 3   ;   ;Bank Account No.    ;Code20        ;TableRelation="Bank Account";
                                                   CaptionML=[ENU=Bank Account No.;
                                                              NOR=Bankkontonr.;
                                                              SVE=Bankkontonr] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              NOR=Bokfõringsdato;
                                                              SVE=Bokfîringsdatum] }
    { 5   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              NOR=Bilagstype;
                                                              SVE=Dokumenttyp];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    NOR=" ,Betaling,Faktura,Kreditnota,Rentenota,Purring,Refusjon";
                                                                    SVE=" ,Betalning,Faktura,Kreditnota,RÑntefaktura,BetalningspÜminnelse,èterbetalning"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 6   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              NOR=Bilagsnr.;
                                                              SVE=Dokumentnr] }
    { 7   ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 11  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod] }
    { 13  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              NOR=Belõp;
                                                              SVE=Belopp];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 14  ;   ;Remaining Amount    ;Decimal       ;CaptionML=[ENU=Remaining Amount;
                                                              NOR=Restbelõp;
                                                              SVE=èterstÜende belopp];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 17  ;   ;Amount (LCY)        ;Decimal       ;CaptionML=[ENU=Amount (LCY);
                                                              NOR=Belõp (NOK);
                                                              SVE=Belopp (BVA)];
                                                   AutoFormatType=1 }
    { 22  ;   ;Bank Acc. Posting Group;Code20     ;TableRelation="Bank Account Posting Group";
                                                   CaptionML=[ENU=Bank Acc. Posting Group;
                                                              NOR=Bokfõringsgruppe - bank;
                                                              SVE=Bankkontobokf.mall] }
    { 23  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Global dimensjon 1 - kode;
                                                              SVE=Global dimension 1 kod];
                                                   CaptionClass='1,1,1' }
    { 24  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Global dimensjon 2 - kode;
                                                              SVE=Global dimension 2 kod];
                                                   CaptionClass='1,1,2' }
    { 25  ;   ;Our Contact Code    ;Code20        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Our Contact Code;
                                                              NOR=VÜr kontaktkode;
                                                              SVE=Kontaktpersonskod] }
    { 27  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=[ENU=User ID;
                                                              NOR=Bruker-ID;
                                                              SVE=AnvÑndar-ID] }
    { 28  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              NOR=Kildespor;
                                                              SVE=Ursprungskod] }
    { 36  ;   ;Open                ;Boolean       ;CaptionML=[ENU=Open;
                                                              NOR=èpne;
                                                              SVE=ôppen] }
    { 43  ;   ;Positive            ;Boolean       ;CaptionML=[ENU=Positive;
                                                              NOR=Positiv;
                                                              SVE=Positiv] }
    { 44  ;   ;Closed by Entry No. ;Integer       ;TableRelation="Bank Account Ledger Entry";
                                                   CaptionML=[ENU=Closed by Entry No.;
                                                              NOR=Lukket av lõpenr.;
                                                              SVE=Avslutat med lîpnr] }
    { 45  ;   ;Closed at Date      ;Date          ;CaptionML=[ENU=Closed at Date;
                                                              NOR=Lukket per dato;
                                                              SVE=Avslutat med datum] }
    { 49  ;   ;Journal Batch Name  ;Code10        ;CaptionML=[ENU=Journal Batch Name;
                                                              NOR=Kladdenavn;
                                                              SVE=Journalnamn] }
    { 50  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              NOR=èrsaksspor;
                                                              SVE=Uppfîljningskod] }
    { 51  ;   ;Bal. Account Type   ;Option        ;CaptionML=[ENU=Bal. Account Type;
                                                              NOR=Motkontotype;
                                                              SVE=Motkontotyp];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,,Employee;
                                                                    NOR=Finanskonto,Kunde,Leverandõr,Bankkonto,Aktiva,,Ansatt;
                                                                    SVE=Redov.konto,Kund,Leverantîr,Bankkonto,AnlÑggningstillgÜng,,AnstÑlld];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,,Employee }
    { 52  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Bal. Account Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Bal. Account Type=CONST(Employee)) Employee;
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              NOR=Motkontonr.;
                                                              SVE=Motkonto] }
    { 53  ;   ;Transaction No.     ;Integer       ;CaptionML=[ENU=Transaction No.;
                                                              NOR=Transaksjonsnr.;
                                                              SVE=Verifikationslîpnr] }
    { 55  ;   ;Statement Status    ;Option        ;CaptionML=[ENU=Statement Status;
                                                              NOR=Utdragsstatus;
                                                              SVE=Bankkontoutdragsstatus];
                                                   OptionCaptionML=[ENU=Open,Bank Acc. Entry Applied,Check Entry Applied,Closed;
                                                                    NOR=èpen,Utlignet bankkontolõpenr.,Utlignet sjekklõpenr.,Lukket;
                                                                    SVE=ôppen,Bankkontotrans. kopplad,Checktrans. kopplad,Avslutad];
                                                   OptionString=Open,Bank Acc. Entry Applied,Check Entry Applied,Closed }
    { 56  ;   ;Statement No.       ;Code20        ;TableRelation="Bank Acc. Reconciliation Line"."Statement No." WHERE (Bank Account No.=FIELD(Bank Account No.));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Statement No.;
                                                              NOR=Utdragsnr.;
                                                              SVE=Kontoutdragsnr] }
    { 57  ;   ;Statement Line No.  ;Integer       ;TableRelation="Bank Acc. Reconciliation Line"."Statement Line No." WHERE (Bank Account No.=FIELD(Bank Account No.),
                                                                                                                             Statement No.=FIELD(Statement No.));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Statement Line No.;
                                                              NOR=Utdragslinjenr.;
                                                              SVE=Kontoutdragsradnr] }
    { 58  ;   ;Debit Amount        ;Decimal       ;CaptionML=[ENU=Debit Amount;
                                                              NOR=Debetbelõp;
                                                              SVE=Debetbelopp];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 59  ;   ;Credit Amount       ;Decimal       ;CaptionML=[ENU=Credit Amount;
                                                              NOR=Kreditbelõp;
                                                              SVE=Kreditbelopp];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 60  ;   ;Debit Amount (LCY)  ;Decimal       ;CaptionML=[ENU=Debit Amount (LCY);
                                                              NOR=Debetbelõp (NOK);
                                                              SVE=Debetbelopp (BVA)];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 61  ;   ;Credit Amount (LCY) ;Decimal       ;CaptionML=[ENU=Credit Amount (LCY);
                                                              NOR=Kreditbelõp (NOK);
                                                              SVE=Kreditbelopp (BVA)];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 62  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              NOR=Bilagsdato;
                                                              SVE=Dokumentdatum];
                                                   ClosingDates=Yes }
    { 63  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              NOR=Eksterndokumentnr.;
                                                              SVE=Externt dokumentnr] }
    { 64  ;   ;Reversed            ;Boolean       ;CaptionML=[ENU=Reversed;
                                                              NOR=Tilbakefõrt;
                                                              SVE=èterfîrd] }
    { 65  ;   ;Reversed by Entry No.;Integer      ;TableRelation="Bank Account Ledger Entry";
                                                   CaptionML=[ENU=Reversed by Entry No.;
                                                              NOR=Tilbakefõrt ved lõpenr.;
                                                              SVE=èterfîrd per lîpnr];
                                                   BlankZero=Yes }
    { 66  ;   ;Reversed Entry No.  ;Integer       ;TableRelation="Bank Account Ledger Entry";
                                                   CaptionML=[ENU=Reversed Entry No.;
                                                              NOR=Tilbakefõrt lõpenr.;
                                                              SVE=èterfîrt lîpnr];
                                                   BlankZero=Yes }
    { 70  ;   ;Check Ledger Entries;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Check Ledger Entry" WHERE (Bank Account Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Check Ledger Entries;
                                                              NOR=Sjekkposter;
                                                              SVE=Checktransaktioner] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              NOR=Dimensjonssett-ID;
                                                              SVE=DimensionsuppsÑttnings-ID];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Bank Account No.,Posting Date           ;SumIndexFields=Amount,Amount (LCY),Debit Amount,Credit Amount,Debit Amount (LCY),Credit Amount (LCY) }
    {    ;Bank Account No.,Open                    }
    {    ;Document Type,Bank Account No.,Posting Date;
                                                   SumIndexFields=Amount;
                                                   MaintainSQLIndex=No }
    {    ;Document No.,Posting Date                }
    {    ;Transaction No.                          }
    {    ;Bank Account No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date;
                                                   SumIndexFields=Amount,Amount (LCY),Debit Amount,Credit Amount,Debit Amount (LCY),Credit Amount (LCY) }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Description,Bank Account No.,Posting Date,Document Type,Document No. }
  }
  CODE
  {
    VAR
      DimMgt@1000 : Codeunit 408;
      DPA_Management@1100000999 : Codeunit 11012783;

    [External]
    PROCEDURE ShowDimensions@1();
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"Entry No."));
    END;

    [External]
    PROCEDURE CopyFromGenJnlLine@3(GenJnlLine@1000 : Record 81);
    BEGIN
      "Bank Account No." := GenJnlLine."Account No.";
      "Posting Date" := GenJnlLine."Posting Date";
      "Document Date" := GenJnlLine."Document Date";
      "Document Type" := GenJnlLine."Document Type";
      "Document No." := GenJnlLine."Document No.";
      "External Document No." := GenJnlLine."External Document No.";
      Description := GenJnlLine.Description;
      "Global Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
      "Global Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";
      "Dimension Set ID" := GenJnlLine."Dimension Set ID";
      "Our Contact Code" := GenJnlLine."Salespers./Purch. Code";
      "Source Code" := GenJnlLine."Source Code";
      "Journal Batch Name" := GenJnlLine."Journal Batch Name";
      "Reason Code" := GenJnlLine."Reason Code";
      "Currency Code" := GenJnlLine."Currency Code";
      "User ID" := USERID;
      "Bal. Account Type" := GenJnlLine."Bal. Account Type";
      "Bal. Account No." := GenJnlLine."Bal. Account No.";

      OnAfterCopyFromGenJnlLine(Rec,GenJnlLine);
    END;

    [External]
    PROCEDURE UpdateDebitCredit@2(Correction@1000 : Boolean);
    BEGIN
      IF (Amount > 0) AND (NOT Correction) OR
         (Amount < 0) AND Correction
      THEN BEGIN
        "Debit Amount" := Amount;
        "Credit Amount" := 0;
        "Debit Amount (LCY)" := "Amount (LCY)";
        "Credit Amount (LCY)" := 0;
      END ELSE BEGIN
        "Debit Amount" := 0;
        "Credit Amount" := -Amount;
        "Debit Amount (LCY)" := 0;
        "Credit Amount (LCY)" := -"Amount (LCY)";
      END;
    END;

    [External]
    PROCEDURE IsApplied@4() IsApplied : Boolean;
    VAR
      CheckLedgerEntry@1000 : Record 272;
    BEGIN
      CheckLedgerEntry.SETRANGE("Bank Account No.","Bank Account No.");
      CheckLedgerEntry.SETRANGE("Bank Account Ledger Entry No.","Entry No.");
      CheckLedgerEntry.SETRANGE(Open,TRUE);
      CheckLedgerEntry.SETRANGE("Statement Status",CheckLedgerEntry."Statement Status"::"Check Entry Applied");
      CheckLedgerEntry.SETFILTER("Statement No.",'<>%1','');
      CheckLedgerEntry.SETFILTER("Statement Line No.",'<>%1',0);
      IsApplied := NOT CheckLedgerEntry.ISEMPTY;

      IsApplied := IsApplied OR
        (("Statement Status" = "Statement Status"::"Bank Acc. Entry Applied") AND
         ("Statement No." <> '') AND ("Statement Line No." <> 0));

      EXIT(IsApplied);
    END;

    [External]
    PROCEDURE SetStyle@5() : Text;
    BEGIN
      IF IsApplied THEN
        EXIT('Favorable');

      EXIT('');
    END;

    [External]
    PROCEDURE SetFilterBankAccNoOpen@6(BankAccNo@1000 : Code[20]);
    BEGIN
      RESET;
      SETCURRENTKEY("Bank Account No.",Open);
      SETRANGE("Bank Account No.",BankAccNo);
      SETRANGE(Open,TRUE);
    END;

    [Integration]
    [External]
    PROCEDURE OnAfterCopyFromGenJnlLine@7(VAR BankAccountLedgerEntry@1000 : Record 271;GenJournalLine@1001 : Record 81);
    BEGIN
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100528500 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(271) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 271');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Bank Account Ledger Entry", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    PROCEDURE FilterGLEntries@1100525003();
    VAR
      UserSetup@1100409000 : Record 91;
      ApplyFilter@1100525001 : Boolean;
      GLSetup@1100525000 : Record 98;
    BEGIN
      //**4PS DP01877
      GLSetup.GET;
      IF GLSetup."Source Code Filter G/L Entries" = '' THEN
        EXIT;

      IF UserSetup.GET(USERID) THEN
        ApplyFilter := NOT UserSetup."Ignore Source Code Filter"
      ELSE
        ApplyFilter := TRUE;

      IF ApplyFilter THEN BEGIN
        FILTERGROUP(11);
        SETFILTER("Source Code", GLSetup."Source Code Filter G/L Entries");
        FILTERGROUP(0);
      END;
    END;

    BEGIN
    {
      4PS - Key "Bank Account No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date" activated
            Key is needed for Department Authorization in Telebanking
    }
    END.
  }
}

