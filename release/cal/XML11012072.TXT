OBJECT XMLport 11012072 Import GL Entries SCAB
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import GL Entries SCAB;
               SVE=Importera redovisningstransaktioner SCAB];
    Direction=Import;
    DefaultFieldsValidation=No;
    PreserveWhiteSpace=Yes;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    HumanResourcesSetup.GET;
                    GLSetup.GET;

                    //HumanResourcesSetup.TESTFIELD("Salary Application",HumanResourcesSetup."Salary Application"::SCAB);

                    //IF ProjSetUp."Salary Application" <> ProjSetUp."Salary Application"::SCAB THEN
                    IF (HumanResourcesSetup."Salary Application" <> HumanResourcesSetup."Salary Application"::SCAB)
                        AND (HumanResourcesSetup."Salary Application" <> HumanResourcesSetup."Salary Application"::"AGDA/Hogia") THEN
                    HumanResourcesSetup.TESTFIELD("Pathname Files from Salary");
                    HumanResourcesSetup.TESTFIELD("GL Entry Journal Template");
                    HumanResourcesSetup.TESTFIELD("GL Entry Journal Batch");

                    currXMLport.FILENAME(HumanResourcesSetup."Pathname Files from Salary");
                  END;

    Format=Variable Text;
    FieldDelimiter=<None>;
    FieldSeparator=<None>;
    UseRequestPage=No;
  }
  ELEMENTS
  {
    { [{01DC7ED2-6B9D-40B1-8380-91DC96C9C7A2}];  ;Root                ;Element ;Text     }

    { [{3ED078EB-6BF8-48D9-AF57-7E92548ACB50}];1 ;GenJournalLine      ;Element ;Table   ;
                                                  SourceTable=Table81;
                                                  SourceTableView=SORTING(Field1,Field51,Field2);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              "Gen. Journal Line".INIT;
                                                                              CLEAR(ImportLine);
                                                                            END;

                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 IF ImportLine = '' THEN
                                                                                   currXMLport.SKIP;

                                                                                 CompanyNoSCAB := DELCHR(COPYSTR(ImportLine, 1, 5), '<', '0');
                                                                                 IF CompanyNoSCAB <> '99999' THEN BEGIN
                                                                                   IF SCABCompany.GET(CompanyNoSCAB) THEN
                                                                                     IF NOT SCABCompany."Delivery Company" THEN BEGIN
                                                                                       DetermineCompany();
                                                                                       "Gen. Journal Line".CHANGECOMPANY(CompanyRec.Name);
                                                                                       "Gen. Journal Line".LOCKTABLE;
                                                                                       "Gen. Journal Line".SETRANGE("Journal Template Name",HumanResourcesSetup."GL Entry Journal Template");
                                                                                       "Gen. Journal Line".SETRANGE("Journal Batch Name",HumanResourcesSetup."GL Entry Journal Batch");
                                                                                       IF "Gen. Journal Line".FIND('+') THEN
                                                                                         LineCounter := "Gen. Journal Line"."Line No."
                                                                                       ELSE
                                                                                         LineCounter := 0;

                                                                                       JnlTemplRec.CHANGECOMPANY(CompanyRec.Name);
                                                                                       JnlBatchRec.CHANGECOMPANY(CompanyRec.Name);
                                                                                       ProjRec.CHANGECOMPANY(CompanyRec.Name);
                                                                                       GLSetup.CHANGECOMPANY(CompanyRec.Name);
                                                                                       GLSetup.GET;
                                                                                       GlAccountRec.CHANGECOMPANY(CompanyRec.Name);
                                                                                     END;

                                                                                   ImportDataLine;

                                                                                 END;

                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{10D8D3A1-06D5-4498-8261-4117527EBB48}];2 ;ImportLine          ;Element ;Text    ;
                                                  MinOccurs=Zero }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      GLSetup@1100528418 : Record 98;
      HumanResourcesSetup@1100528417 : Record 5218;
      JnlTemplRec@1100528416 : Record 80;
      JnlBatchRec@1100528415 : Record 232;
      ProjRec@1100528414 : Record 11072003;
      GlAccountRec@1100528413 : Record 15;
      NoSeriesMgt@1100528412 : Codeunit 396;
      XMLportStatusDialogMgt@1100528421 : Codeunit 11130006;
      LineCounter@1100528411 : Integer;
      PostingDate@1100528410 : Date;
      BookYear@1100528409 : Integer;
      BookMonth@1100528408 : Integer;
      BookDay@1100528407 : Integer;
      Value@1100528406 : Decimal;
      GLAccountNo@1100528405 : Code[20];
      DocNo@1100528404 : Code[20];
      CompanyNoSCAB@1100528401 : Code[5];
      CompanyRec@1100528400 : Record 2000000006;
      Text002@1100528419 : TextConst 'ENU=Company number %1 in import file is not related to any Navision company.;SVE=F”retagsnummer %1 i importfilen „r inte relaterad till n†got Navision-f”retag.';
      Text004@1100528402 : TextConst 'ENU=The type %1 is not supported.;SVE=Typen %1 st”ds inte.';
      SCABCompany@1100530700 : Record 11012383;

    PROCEDURE ImportDataLine@1100485007();
    VAR
      ExternalJob@1210190000 : Record 11012387;
      RecRef@1100528400 : RecordRef;
      TempJobNo@1100525000 : Code[20];
      Counter@1100525001 : Integer;
      lvProjRec@1100525002 : Record 11072003;
    BEGIN
      WITH "Gen. Journal Line" DO BEGIN
        "Journal Template Name" := HumanResourcesSetup."GL Entry Journal Template";
        "Journal Batch Name"    := HumanResourcesSetup."GL Entry Journal Batch";
        "Line No." := LineCounter + 10000;
        LineCounter := "Line No.";
        "Account Type" := "Account Type"::"G/L Account";

        IF NOT JnlTemplRec.GET(HumanResourcesSetup."GL Entry Journal Template") THEN
          JnlTemplRec.INIT;
        IF NOT JnlBatchRec.GET(HumanResourcesSetup."GL Entry Journal Template", HumanResourcesSetup."GL Entry Journal Batch") THEN
          JnlBatchRec.INIT;

        IF DocNo = '' THEN BEGIN
          NoSeriesMgt.SetFromOtherCompany(CompanyRec.Name);
          IF JnlBatchRec."No. Series" <> '' THEN
            DocNo := NoSeriesMgt.GetNextNo(JnlBatchRec."No. Series",0D,FALSE)
          ELSE
            IF JnlTemplRec."No. Series" <> '' THEN
              DocNo := NoSeriesMgt.GetNextNo(JnlTemplRec."No. Series",0D,FALSE);
        END;

        "Document No." := DocNo;

        EVALUATE(BookDay, COPYSTR(ImportLine, 135, 2));
        EVALUATE(BookMonth, COPYSTR(ImportLine, 137, 2));
        EVALUATE(BookYear, COPYSTR(ImportLine, 139, 4));
        PostingDate := DMY2DATE(BookDay, BookMonth, BookYear);

        "Shortcut Dimension 2 Code" := COPYSTR(ImportLine, 22, 6);

        CASE COPYSTR(ImportLine, 144, 1) OF
          'P':
            BEGIN
              ExternalJob.SETFILTER("External Job No.", DELCHR(COPYSTR(ImportLine, 117, 6)));
              IF ExternalJob.FINDFIRST THEN BEGIN //mc, 22-03-10, call 25067
                "Job No." := ExternalJob."4PS Job No.";
                VALIDATE("Job No.");
                "System-Created Entry" := TRUE;
              END ELSE BEGIN
                TempJobNo := DELCHR(COPYSTR(ImportLine, 117, 6), '<', '0');
                IF NOT lvProjRec.GET(TempJobNo) THEN BEGIN
                  TempJobNo := DELCHR(TempJobNo, '<', '0');
                  Counter := 0;
                  REPEAT
                    Counter += 1;
                    TempJobNo := '0' + TempJobNo;
                  UNTIL lvProjRec.GET(TempJobNo) OR (Counter = 10);
                END;

                "Job No." := TempJobNo;
                VALIDATE("Job No.");
                IF NOT ProjRec.GET("Job No.") THEN
                  ProjRec.INIT
                ELSE
                  "System-Created Entry" := TRUE; //mc, 01-12-09, call 17328
              END;
            END;
          'K',' ','':;
          ELSE
            ERROR(Text004, COPYSTR(ImportLine, 144, 1));
        END;

        "Shortcut Dimension 1 Code" := DELCHR(COPYSTR(ImportLine, 115, 2), '<', '0'); //leading zeros will be deleted.

        GLAccountNo := DELCHR(COPYSTR(ImportLine, 6, 6), '<', '0');
        "Account No." := GLAccountNo;

      //db.sn, 16-05-06: solution used for Paymaster and Payroll
        IF NOT GlAccountRec.GET("Account No.") THEN GlAccountRec.INIT;
        IF GlAccountRec."Import Posting Information" = FALSE THEN GlAccountRec.INIT;
        "Gen. Posting Type" := GlAccountRec."Gen. Posting Type";
        "Gen. Bus. Posting Group" := GlAccountRec."Gen. Bus. Posting Group";
        "Gen. Prod. Posting Group" := GlAccountRec."Gen. Prod. Posting Group";
        "VAT Bus. Posting Group" := GlAccountRec."VAT Bus. Posting Group";
        "VAT Prod. Posting Group" := GlAccountRec."VAT Prod. Posting Group";
        "Tax Area Code" := GlAccountRec."Tax Area Code";
        "Tax Liable" := GlAccountRec."Tax Liable";
        "Tax Group Code" := GlAccountRec."Tax Group Code";
      //db.en, 16-05-06

        EVALUATE(Value, COPYSTR(ImportLine, 38, 11));
        Value := Value / 100;
        IF COPYSTR(ImportLine, 49, 1) = 'C' THEN
          Value := -Value;

        Amount := Value;
        "Amount (LCY)" := Value;
        "Balance (LCY)" := "Amount (LCY)";

        IF ((Amount > 0) AND (NOT Correction)) OR
           ((Amount < 0) AND Correction)
        THEN BEGIN
          "Debit Amount" := Amount;
          "Credit Amount" := 0
        END ELSE BEGIN
          "Debit Amount" := 0;
          "Credit Amount" := -Amount;
        END;

        Description := COPYSTR(ImportLine, 60, 30);

        EVALUATE(Value, COPYSTR(ImportLine, 90, 9));
        Value := Value / 100;
        IF COPYSTR(ImportLine, 99, 1) = 'C' THEN
          Value := -Value;
        Quantity := Value;

        VALIDATE("VAT Prod. Posting Group");  //db, 16-05-06: for the purose of determing "Vat Base Amount (LCY)" for a project entry

        "Posting Date"  := PostingDate;
        "Document Date" := PostingDate;
        "Source Code"   := JnlTemplRec."Source Code";
        IF JnlBatchRec."Reason Code" <> '' THEN
          "Reason Code" := JnlBatchRec."Reason Code"
        ELSE
          "Reason Code" := JnlTemplRec."Reason Code";
        "Origin Salary Application" := TRUE;

        RecRef.GETTABLE("Gen. Journal Line");
        XMLportStatusDialogMgt.ShowImportStatus(RecRef);

        INSERT(FALSE);
      END;
    END;

    PROCEDURE DetermineCompany@1100485001();
    BEGIN
      IF CompanyRec.FIND('-') THEN
        REPEAT
          SCABCompany.CHANGECOMPANY(CompanyRec.Name);
          SCABCompany.SETRANGE("Company No.", CompanyNoSCAB);
          SCABCompany.SETRANGE("Delivery Company", TRUE);
        UNTIL (CompanyRec.NEXT = 0) OR NOT SCABCompany.ISEMPTY;

      IF SCABCompany.ISEMPTY THEN
        ERROR(Text002, CompanyNoSCAB);
    END;

    BEGIN
    {
      CC: Dataport 11012338

      4PS - 21-02-08, call 11240, Cost center will be always filled from position 115 and 116 (Cost center/department).
      4PS02 - 29-09-08, call 12494-II, Add leading zeros till project number can be validated.

      INF002 130821 Added possibility to execute dataport if salary = AGDA
    }
    END.
  }
}

