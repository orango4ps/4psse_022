OBJECT Codeunit 11012751 MS Outlook Interface
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      OutlookEnumeration@1100528702 : Codeunit 11012376;
      OutlookAutomation@11012000 : Codeunit 11012030;
      Text008@1100485000 : TextConst 'DEU=%1 ist nicht fÅr diese Verabredung eingegeben worden. Mîchten Sie diese zuerst eingeben?;ENU=%1 is not filled for this Appointment. Do you want fill this first?;NLD=%1 is niet gevuld voor deze afspraak. Wilt u deze eerst vullen?;NOR=%1 er ikke fylt ut for dette mîtet. Vil du fylla ut fõrst?;SVE=%1 har inte fyllts i fîr det hÑr mîtet. Vill du fylla i det hÑr fîrst?';
      Text009@1100528700 : TextConst 'DEU=Besucheranschrift:;ENU=Visit Address:;NLD=Bezoekadres:;NOR=Besõksadresse:;SVE=Besîksadress:';
      Text010@1100528701 : TextConst 'DEU=Bemerkungen:;ENU=Comments:;NLD=Opmerkingen:;NOR=Kommentarer:;SVE=Kommentarer:';

    PROCEDURE ScheduleAppointment@2(ActRec@11012000 : Record 5080);
    VAR
      lvRequiredAttendees@1100485000 : Text[250];
      EmployeeRec@1100528701 : Record 5200;
      PurchSalesRec@1100528700 : Record 13;
      StartDateTime@1100525001 : DateTime;
      EndDateTime@1100525000 : DateTime;
    BEGIN
      ActRec.TESTFIELD(Description);
      IF ActRec.Type = ActRec.Type::Meeting THEN
        IF ActRec.Location = '' THEN
          IF CONFIRM(Text008, FALSE, ActRec.FIELDCAPTION(Location)) THEN
            EXIT;

      OutlookAutomation.InitOutlook();
      OutlookAutomation.InitNewAppointment();

      OutlookAutomation.SetAppointmentSubject(ActRec.Description);
      OutlookAutomation.SetAppointmentLocation(ActRec.Location);

      lvRequiredAttendees := '';
      IF EmployeeRec.GET(ActRec."Responsible Person") THEN
        lvRequiredAttendees := EmployeeRec."E-Mail" + ';';
      IF PurchSalesRec.GET(ActRec."Salesperson Code") THEN
        lvRequiredAttendees := lvRequiredAttendees + PurchSalesRec."E-Mail";
      OutlookAutomation.SetAppointmentReqAttendees(lvRequiredAttendees);

      IF ((ActRec.Date <> 0D) AND (ActRec."Start Time" <> 0T)) THEN BEGIN
        StartDateTime := CREATEDATETIME(ActRec.Date, ActRec."Start Time");
        OutlookAutomation.SetAppointmentStartDateTime(StartDateTime);
      END ELSE
        IF ActRec.Date <> 0D THEN
          OutlookAutomation.SetAppointmentStartDate(ActRec.Date);

      IF ((ActRec."Ending Date" <> 0D) AND (ActRec."Ending Time" <> 0T)) THEN BEGIN
        EndDateTime := CREATEDATETIME(ActRec."Ending Date", ActRec."Ending Time");
        OutlookAutomation.SetAppointmentEndDateTime(EndDateTime);
      END ELSE
        IF ActRec."Ending Date" <> 0D THEN
          OutlookAutomation.SetAppointmentEndDate(ActRec."Ending Date");

      FillBodyText(ActRec);

      OutlookAutomation.SetAppointmentBody();
      OutlookAutomation.DisplayAppointment();

      ActRec."Planned in Outlook" := TRUE;
      OutlookAutomation.SaveAppointment;
      ActRec.MODIFY;
      OutlookAutomation.TermOutlook();
      CLEAR(OutlookAutomation);
    END;

    PROCEDURE ScheduleTask@1000000000(ActRec@11012000 : Record 5080);
    BEGIN
      ActRec.TESTFIELD(Description);

      OutlookAutomation.InitOutlook();
      OutlookAutomation.InitNewTask();

      OutlookAutomation.SetTaskSubject(ActRec.Description);
      IF ActRec.Date <> 0D THEN
        OutlookAutomation.SetTaskStartDate(ActRec.Date);

      IF ActRec."Ending Date" <> 0D THEN
        OutlookAutomation.SetTaskDueDate(ActRec."Ending Date");

      CASE ActRec.Priority OF
        ActRec.Priority::Normal : OutlookAutomation.SetTaskPriority(OutlookEnumeration.OlImportance_olImportanceNormal);
        ActRec.Priority::Low : OutlookAutomation.SetTaskPriority(OutlookEnumeration.OlImportance_olImportanceLow);
        ActRec.Priority::High : OutlookAutomation.SetTaskPriority(OutlookEnumeration.OlImportance_olImportanceHigh);
      END;

      FillBodyText(ActRec);

      OutlookAutomation.SetTaskBody();
      OutlookAutomation.DisplayTask();

      ActRec."Planned in Outlook" := TRUE;
      OutlookAutomation.SaveTask;
      ActRec.MODIFY;
      OutlookAutomation.TermOutlook();
      CLEAR(OutlookAutomation);
    END;

    PROCEDURE CreateProspect@3(ContRec@11012000 : Record 5050);
    BEGIN
      OutlookAutomation.InitOutlook();
      OutlookAutomation.InitNewContact;

      OutlookAutomation.FillContact(ContRec);
      OutlookAutomation.DisplayContact;
      OutlookAutomation.SaveContact;
      ContRec."Created in Outlook" := TRUE;
      ContRec."Created on" := TODAY;
      ContRec.MODIFY;

      OutlookAutomation.TermOutlook();
      CLEAR(OutlookAutomation);
    END;

    LOCAL PROCEDURE FillBodyText@1100528703(Todo@1100528700 : Record 5080);
    VAR
      RlshpMgtCommentLine@1100528701 : Record 5061;
      Tryout@1100528707 : Record 11012750;
      TryoutQuote@1100528706 : Record 11012758;
      Campaign@1100528705 : Record 11072034;
      Contact@1100528702 : Record 5050;
      FormatAddress@1100528710 : Codeunit 365;
      AddrArray@1100528709 : ARRAY [8] OF Text[100];
      I@1100528708 : Integer;
      J@1100528703 : Integer;
      Next@1100528704 : Boolean;
    BEGIN
      IF Todo.Description <> '' THEN
        OutlookAutomation.AddLine(Todo.FIELDCAPTION(Description) + ': ' + Todo.Description);

      OutlookAutomation.AddLine(Todo.FIELDCAPTION(Status) + ': ' + FORMAT(Todo.Status));

      IF Contact.GET(Todo."Contact No.") THEN BEGIN
        OutlookAutomation.AddLine('');
        OutlookAutomation.AddLine(Todo.FIELDCAPTION("Contact No.") + ': ' + Contact."No." + ', ' + Contact.Name);
      END;
      IF (Todo."Contact No.") <> (Todo."Contact Company No.") THEN
        IF Contact.GET(Todo."Contact Company No.") THEN
          OutlookAutomation.AddLine(Todo.FIELDCAPTION("Contact Company No.") + ': ' + Contact."No." + ', ' + Contact.Name);

      CLEAR(Contact);
      IF NOT Contact.GET(Todo."Contact No.") THEN
        IF Contact.GET(Todo."Contact Company No.") THEN;

      IF Contact."No." <> '' THEN BEGIN
        OutlookAutomation.AddLine('');
        OutlookAutomation.AddLine(Text009);
        FormatAddress.ContactVisitAddr(AddrArray, Contact);
        FOR I := 1 TO ARRAYLEN(AddrArray) DO BEGIN
          IF AddrArray[I] <> '' THEN
            OutlookAutomation.AddLine(AddrArray[I])
          ELSE BEGIN
            Next := FALSE;
            FOR J := I + 1 TO ARRAYLEN(AddrArray) DO
              IF AddrArray[J] <> '' THEN
                Next := TRUE;
            IF Next THEN
              OutlookAutomation.AddLine(AddrArray[I])
          END;
        END;
        OutlookAutomation.AddLine('');
        OutlookAutomation.AddLine(Contact.FIELDCAPTION("Phone No.") + ': ' + Contact."Phone No.");
      END;

      RlshpMgtCommentLine.SETRANGE("Table Name", RlshpMgtCommentLine."Table Name"::"To-do");
      RlshpMgtCommentLine.SETRANGE("No.", Todo."Organizer To-do No.");
      RlshpMgtCommentLine.SETRANGE("Sub No.", 0);
      IF RlshpMgtCommentLine.FINDSET THEN BEGIN
        OutlookAutomation.AddLine('');
        OutlookAutomation.AddLine(Text010);
        REPEAT
          OutlookAutomation.AddLine(STRSUBSTNO('%1 %2', RlshpMgtCommentLine.Date, RlshpMgtCommentLine.Comment));
        UNTIL RlshpMgtCommentLine.NEXT = 0;
      END;

      IF Tryout.GET(Todo."Try-out No.") THEN
        OutlookAutomation.AddLine(STRSUBSTNO('%1: %2 %3', Tryout.TABLECAPTION, Tryout.Code, Tryout.Description));

      IF TryoutQuote.GET(Todo."Try-out Quote No.") THEN
        OutlookAutomation.AddLine(STRSUBSTNO('%1: %2 %3', TryoutQuote.TABLECAPTION, TryoutQuote.Code, TryoutQuote.Description));

      IF Campaign.GET(Todo."Campaign No.") THEN
        OutlookAutomation.AddLine(STRSUBSTNO('%1: %2 %3', Campaign.TABLECAPTION, Campaign."No.", Campaign.Description));

      IF Todo."Service Location No." <> '' THEN BEGIN
        Todo.CALCFIELDS("Description Service Location");
        OutlookAutomation.AddLine(
          Todo.FIELDCAPTION("Service Location No.") + ': ' +
          Todo."Service Location No." + ' ' +
          Todo."Description Service Location");
      END;

      IF Todo."Service Contract No." <> '' THEN BEGIN
        Todo.CALCFIELDS("Description Contract");
        OutlookAutomation.AddLine(
          Todo.FIELDCAPTION("Service Contract No.") + ': ' +
          Todo."Service Contract No." + ' ' +
          Todo."Description Contract");
      END;

      IF Todo."Service Call No." <> '' THEN BEGIN
        Todo.CALCFIELDS("Description Call");
        OutlookAutomation.AddLine(
          Todo.FIELDCAPTION("Service Call No.") + ': ' +
          Todo."Service Call No." + ' ' +
          Todo."Description Call");
      END;

      IF Todo."Service Order No." <> '' THEN BEGIN
        Todo.CALCFIELDS("Description Order");
        OutlookAutomation.AddLine(
          Todo.FIELDCAPTION("Service Order No.") + ': ' +
          Todo."Service Order No." + ' ' +
          Todo."Description Order");
      END;
    END;

    BEGIN
    END.
  }
}

