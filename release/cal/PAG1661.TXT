OBJECT Page 1661 Payroll Import Transactions
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import Payroll Transactions;
               NOR=Importer l›nnstransaksjoner;
               SVE=Importera l”netransaktioner];
    InsertAllowed=No;
    SourceTable=Table1661;
    PageType=NavigatePage;
    SourceTableTemporary=Yes;
    OnInit=VAR
             CompanyInformation@1000 : Record 79;
           BEGIN
             CompanyInformation.GET;
             IsDemoCompany := CompanyInformation."Demo Company";
             LoadTopBanners;
           END;

    OnOpenPage=BEGIN
                 Step := Step::Start;
                 EnableControls;
                 SETCURRENTKEY("Entry No.");
               END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::OK THEN
                         IF AssistedSetup.Status = AssistedSetup.Status::"Not Completed" THEN
                           IF NOT CONFIRM(NAVNotSetUpQst,FALSE) THEN
                             ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 15      ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=[ENU=Back;
                                 NOR=Tilbake;
                                 SVE=Bak†t];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=BackActionEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(TRUE);
                                 IF Step = 0 THEN
                                   DELETEALL;
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=[ENU=Next;
                                 NOR=Neste;
                                 SVE=N„sta];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NextActionEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 CASE Step OF
                                   0:
                                     BEGIN
                                       OnImportPayrollTransactions(TempServiceConnection,TempImportGLTransaction);
                                       IF TempImportGLTransaction.FINDSET THEN
                                         REPEAT
                                           Rec := TempImportGLTransaction;
                                           INSERT;
                                         UNTIL TempImportGLTransaction.NEXT = 0;
                                       IF FINDFIRST THEN BEGIN
                                         SETCURRENTKEY("Entry No.");
                                         NextStep(FALSE);
                                       END;
                                     END;
                                   ELSE
                                     NextStep(FALSE);
                                 END;
                               END;
                                }
      { 16      ;1   ;Action    ;
                      Name=ActionCreateSampleFile;
                      CaptionML=[ENU=Get Sample File;
                                 NOR=Hent eksempelfil;
                                 SVE=H„mta exempelfil];
                      ApplicationArea=#Basic,#Suite;
                      Visible=ShowGetSampleFile;
                      InFooterBar=Yes;
                      Image=Import;
                      OnAction=BEGIN
                                 OnCreateSampleFile(TempServiceConnection);
                               END;
                                }
      { 30      ;1   ;Action    ;
                      Name=ActionResetLinkto;
                      CaptionML=[ENU=Remove Mapping;
                                 NOR=Fjern tilordning;
                                 SVE=Ta bort mappning];
                      ApplicationArea=#Basic,#Suite;
                      Visible=ShowResetLinks;
                      InFooterBar=Yes;
                      Image=Reuse;
                      OnAction=BEGIN
                                 ResetLinks
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=[ENU=Finish;
                                 NOR=Fullf›r;
                                 SVE=Slutf”r];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FinishActionEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 98  ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 20  ;1   ;Group     ;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 13  ;2   ;Group     ;
                CaptionML=[ENU=Welcome to Import Payroll Transactions;
                           NOR=Velkommen til Importere l›nnstransaksjoner;
                           SVE=V„lkommen till Importera L”netransaktioner];
                Visible=FirstStepVisible;
                GroupType=Group }

    { 18  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=To import payroll transactions, you first select the file from the payroll provider and then you map external accounts in the file to the relevant G/L accounts.;
                                     NOR=Hvis du vil importere l›nnstransaksjoner, velger du f›rst filen fra l›nnssystemet og deretter tilordner du eksterne kontoer i filen til relevante finanskontoer.;
                                     SVE=F”r att importera l”nelisttransaktioner v„ljer du f”rts listan fr†n l”nelistleverant”ren innan du mappar externa konton i filen till relevanta redovisningskonton.] }

    { 21  ;2   ;Group     ;
                CaptionML=[ENU=Let's go!;
                           NOR=La oss sette i gang!;
                           SVE=S„tt ig†ng!];
                Visible=FirstStepVisible;
                GroupType=Group }

    { 22  ;3   ;Group     ;
                Visible=FirstStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Choose Next to start importing payroll transactions.;
                                     NOR=Velg Neste for † starte import av l›nnstransaksjoner.;
                                     SVE=V„lj N„sta f”r att b”rja importera l”nelistetransaktioner.] }

    { 2   ;1   ;Group     ;
                Visible=ProviderStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Map the external accounts to the relevant G/L accounts.;
                                     NOR=Tilordne de eksterne kontoene til de relevante finanskontiene.;
                                     SVE=Mappa de externa kontona till relevanta redovisningskonton.] }

    { 7   ;2   ;Group     ;
                GroupType=Repeater }

    { 5   ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Entry No.";
                Visible=False }

    { 3   ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="External Account";
                Editable=False }

    { 28  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="G/L Account";
                OnValidate=VAR
                             TempImportGLTransaction@1000 : TEMPORARY Record 1661;
                             ImportGLTransaction@1001 : Record 1661;
                           BEGIN
                             IF "G/L Account" <> '' THEN BEGIN
                               ImportGLTransaction.SETRANGE("App ID","App ID");
                               ImportGLTransaction.SETRANGE("External Account","External Account");
                               ImportGLTransaction.SETRANGE("G/L Account","G/L Account");
                               IF ImportGLTransaction.ISEMPTY THEN BEGIN
                                 ImportGLTransaction."App ID" := "App ID";
                                 ImportGLTransaction."G/L Account" := "G/L Account";
                                 ImportGLTransaction."External Account" := "External Account";
                                 ImportGLTransaction.INSERT;
                               END
                             END ELSE
                               IF xRec."G/L Account" <> '' THEN BEGIN
                                 ImportGLTransaction.SETRANGE("App ID","App ID");
                                 ImportGLTransaction.SETRANGE("External Account","External Account");
                                 ImportGLTransaction.SETRANGE("G/L Account",xRec."G/L Account");
                                 ImportGLTransaction.DELETEALL;
                               END;
                             TempImportGLTransaction := Rec;
                             SETRANGE("External Account","External Account");
                             MODIFYALL("G/L Account","G/L Account");
                             SETRANGE("External Account");
                             Rec := TempImportGLTransaction;
                             FIND;
                           END;
                            }

    { 29  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="G/L Account Name" }

    { 8   ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Transaction Date";
                Editable=False }

    { 9   ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Amount;
                Editable=False }

    { 19  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Editable=False }

    { 4   ;3   ;Field     ;
                Name=Map to;
                CaptionML=[ENU=Map to;
                           NOR=Tilordne til;
                           SVE=Mappa till];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=LinktoLbl;
                Visible=False;
                Editable=false }

    { 12  ;1   ;Group     ;
                Visible=SettingsStepVisible;
                GroupType=Group }

    { 17  ;1   ;Group     ;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 24  ;2   ;Group     ;
                CaptionML=[ENU=That's it!;
                           NOR=Det er alt!;
                           SVE=Klart!];
                GroupType=Group }

    { 25  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=To finalize the import of payroll transactions, choose Finish.;
                                     NOR=Velg Fullf›r for † fullf›re importen av l›nnstransaksjoner.;
                                     SVE=V„lj Slutf”r f”r att slutf”ra importen av l”nelistetransaktioner.] }

  }
  CODE
  {
    VAR
      TempServiceConnection@1016 : TEMPORARY Record 1400;
      GenJournalLine@1022 : Record 81;
      TempImportGLTransaction@1021 : TEMPORARY Record 1661;
      AssistedSetup@1005 : Record 1803;
      MediaRepositoryStandard@1040 : Record 9400;
      MediaRepositoryDone@1041 : Record 9400;
      MediaResourcesStandard@1018 : Record 2000000182;
      MediaResourcesDone@1003 : Record 2000000182;
      ClientTypeManagement@1019 : Codeunit 4030;
      Step@1012 : 'Start,LinkAccounts,Finish';
      TopBannerVisible@1042 : Boolean;
      FirstStepVisible@1000 : Boolean;
      ProviderStepVisible@1010 : Boolean;
      SettingsStepVisible@1011 : Boolean;
      FinalStepVisible@1015 : Boolean;
      FinishActionEnabled@1009 : Boolean;
      BackActionEnabled@1013 : Boolean;
      NextActionEnabled@1014 : Boolean;
      NAVNotSetUpQst@1004 : TextConst 'ENU=No payroll transactions have been imported.\\Are you sure you want to exit?;NOR=Ingen l›nnstransaksjonene er importert.\\Er du sikker p† at du vil avslutte?;SVE=Inga l”nelistetransaktioner har importerats.\\Žr du s„ker p† att du vill avsluta?';
      LinktoLbl@1007 : TextConst 'ENU=Map to;NOR=Tilordne til;SVE=Mappa till';
      PayrollImportedMsg@1002 : TextConst 'ENU=The payroll transactions are imported.;NOR=L›nnstransaksjonene er importert.;SVE=L”nelistetransaktionerna har importerats.';
      ShowGetSampleFile@1006 : Boolean;
      ShowResetLinks@1008 : Boolean;
      ResetLinksQst@1017 : TextConst 'ENU=Do you want to reset all existing mapping suggestions?;NOR=Vil du tilbakestille alle eksisterende tilordningsforslag?;SVE=Vill du †terst„lla alla befintliga mappningsf”rslag?';
      IsDemoCompany@1001 : Boolean;

    LOCAL PROCEDURE EnableControls@2();
    BEGIN
      ResetControls;

      CASE Step OF
        Step::Start:
          ShowStartStep;
        Step::LinkAccounts:
          ShowProviderStep;
        Step::Finish:
          ShowFinishStep;
      END;
    END;

    LOCAL PROCEDURE FinishAction@12();
    VAR
      NewGenJournalLine@1001 : Record 81;
      NextLinieNo@1000 : Integer;
    BEGIN
      NextLinieNo := 0;
      NewGenJournalLine.SETRANGE("Journal Template Name",GenJournalLine."Journal Template Name");
      NewGenJournalLine.SETRANGE("Journal Batch Name",GenJournalLine."Journal Batch Name");
      IF NewGenJournalLine.FINDLAST THEN
        NextLinieNo := NewGenJournalLine."Line No.";

      IF FINDSET THEN BEGIN
        REPEAT
          NewGenJournalLine.INIT;
          NewGenJournalLine."Journal Template Name" := GenJournalLine."Journal Template Name";
          NewGenJournalLine."Journal Batch Name" := GenJournalLine."Journal Batch Name";
          NextLinieNo += 10000;
          NewGenJournalLine."Line No." := NextLinieNo;
          NewGenJournalLine.INSERT;
          NewGenJournalLine.SetUpNewLine(GenJournalLine,0,FALSE);
          NewGenJournalLine.VALIDATE("Account Type" ,NewGenJournalLine."Account Type"::"G/L Account");
          NewGenJournalLine.VALIDATE("Account No.","G/L Account");
          NewGenJournalLine.VALIDATE("Posting Date","Transaction Date");
          NewGenJournalLine.VALIDATE(Amount,Amount);
          NewGenJournalLine.VALIDATE(Description,Description);
          NewGenJournalLine.MODIFY;
        UNTIL NEXT = 0;

        GenJournalLine := NewGenJournalLine;
        AssistedSetup.Status := AssistedSetup.Status::Completed;

        MESSAGE(PayrollImportedMsg);
      END;

      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE NextStep@41(Backwards@1000 : Boolean);
    BEGIN
      IF Backwards THEN
        Step := Step - 1
      ELSE
        Step := Step + 1;

      EnableControls;
    END;

    LOCAL PROCEDURE ShowStartStep@24();
    BEGIN
      FirstStepVisible := TRUE;
      FinishActionEnabled := TRUE;
      BackActionEnabled := FALSE;
      ShowGetSampleFile := IsDemoCompany AND FirstStepVisible;
    END;

    LOCAL PROCEDURE ShowProviderStep@33();
    BEGIN
      ProviderStepVisible := TRUE;
      ShowResetLinks := TRUE;
    END;

    LOCAL PROCEDURE ShowFinishStep@35();
    BEGIN
      FinalStepVisible := TRUE;
      NextActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ResetControls@1();
    BEGIN
      BackActionEnabled := TRUE;
      NextActionEnabled := TRUE;

      FirstStepVisible := FALSE;
      ProviderStepVisible := FALSE;
      SettingsStepVisible := FALSE;
      FinalStepVisible := FALSE;
      ShowGetSampleFile := FALSE;
      ShowResetLinks := FALSE;
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      IF MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType)) AND
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType))
      THEN
        IF MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") AND
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        THEN
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    [Integration]
    LOCAL PROCEDURE OnImportPayrollTransactions@4(VAR TempServiceConnection@1001 : TEMPORARY Record 1400;VAR TempImportGLTransaction@1000 : TEMPORARY Record 1661);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnCreateSampleFile@3(TempServiceConnection@1000 : TEMPORARY Record 1400);
    BEGIN
    END;

    [External]
    PROCEDURE Set@5(VAR SetServiceConnection@1000 : Record 1400;SetGenJournalLine@1001 : Record 81);
    BEGIN
      TempServiceConnection := SetServiceConnection;
      GenJournalLine := SetGenJournalLine;
    END;

    LOCAL PROCEDURE ResetLinks@6();
    VAR
      ImportGLTransaction@1000 : Record 1661;
      TempImportGLTransaction@1001 : TEMPORARY Record 1661;
    BEGIN
      ImportGLTransaction.SETRANGE("App ID","App ID");
      IF ImportGLTransaction.FINDFIRST THEN
        IF CONFIRM(ResetLinksQst) THEN BEGIN
          ImportGLTransaction.DELETEALL;
          TempImportGLTransaction := Rec;
          IF FINDSET THEN
            REPEAT
              "G/L Account" := '';
              MODIFY;
            UNTIL NEXT = 0;
          Rec := TempImportGLTransaction;
          CurrPage.UPDATE;
        END;
    END;

    BEGIN
    END.
  }
}

