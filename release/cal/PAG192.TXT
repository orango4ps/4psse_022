OBJECT Page 192 Incoming Document Approvers
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Incoming Document Approvers;
               NOR=Godkjennere for inng†ende dokumenter;
               SVE=Godk„nnare f”r inkommande dokument];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table2000000120;
    SourceTableView=SORTING(User Name)
                    WHERE(State=CONST(Enabled));
    DataCaptionFields=User Name;
    PageType=List;
    OnOpenPage=BEGIN
                 HideExternalUsers;
               END;

    OnAfterGetRecord=BEGIN
                       IsApprover := IncomingDocumentApprover.GET("User Security ID");
                     END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the user's name. If the user is required to present credentials when starting the client, this is the name that the user must present.;
                           NOR=Angir brukerens navn. Hvis brukeren m† angi legitimasjon n†r vedkommende starter klienten, er dette navnet som brukeren m† angi.;
                           SVE=Anger anv„ndarens namn. Det h„r „r namnet som anv„ndaren m†ste ange bland autentiseringsuppgifterna n„r klienten startas.];
                ApplicationArea=#Suite;
                SourceExpr="User Name" }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the full name of the user.;
                           NOR=Angir hele navnet til brukeren.;
                           SVE=Anger anv„ndarens fullst„ndiga namn.];
                ApplicationArea=#Suite;
                SourceExpr="Full Name" }

    { 5   ;2   ;Field     ;
                Name=IsApprover;
                CaptionML=[ENU=Approver;
                           NOR=Godkjenner;
                           SVE=Godk„nnare];
                ToolTipML=[ENU=Specifies the incoming document approver. Note that this approver is not related to approval workflows.;
                           NOR=Angir godkjenner for det innkommende dokumentet. Legg merke til at denne godkjenneren ikke er knyttet til arbeidsflyter for godkjenning.;
                           SVE=Anger godk„nnare av det inkommande dokumentet. Observera att den h„r godk„nnaren inte „r relaterad till arbetsfl”den f”r godk„nnande.];
                ApplicationArea=#Suite;
                SourceExpr=IsApprover;
                OnValidate=BEGIN
                             IncomingDocumentApprover.SetIsApprover(Rec,IsApprover);
                           END;
                            }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of license that applies to the user. For more information, see License Types.;
                           NOR=Angir hvilken type lisens som gjelder for brukeren. Hvis du vil ha mer informasjon, kan du se Lisenstyper.;
                           SVE=Anger licenstypen som g„ller f”r anv„ndaren. Se Licenstyper f”r mer information.];
                ApplicationArea=#Suite;
                SourceExpr="License Type" }

  }
  CODE
  {
    VAR
      IncomingDocumentApprover@1001 : Record 132;
      IsApprover@1000 : Boolean;

    LOCAL PROCEDURE HideExternalUsers@5();
    VAR
      PermissionManager@1001 : Codeunit 9002;
      OriginalFilterGroup@1000 : Integer;
    BEGIN
      IF NOT PermissionManager.SoftwareAsAService THEN
        EXIT;

      OriginalFilterGroup := FILTERGROUP;
      FILTERGROUP := 2;
      SETFILTER("License Type",'<>%1',"License Type"::"External User");
      FILTERGROUP := OriginalFilterGroup;
    END;

    BEGIN
    END.
  }
}

