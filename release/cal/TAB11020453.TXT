OBJECT Table 11020453 Hour Portal User
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnInsert=BEGIN
               CheckPortalLicense(TRUE);
             END;

    OnModify=BEGIN
               CheckPortalLicense(FALSE);
             END;

    CaptionML=ENU=Hour Portal User;
  }
  FIELDS
  {
    { 10  ;   ;Login               ;Text100       ;OnValidate=VAR
                                                                HourPortalUser@1100528300 : Record 11020453;
                                                              BEGIN
                                                                HourPortalUser.SETFILTER(Login, '%1', '@'+Login);
                                                                IF (HourPortalUser.COUNT > 0) THEN
                                                                  ERROR(Text002, FIELDCAPTION(Login), Login);
                                                              END;

                                                   CaptionML=[ENU=Login;
                                                              NOR=Innlogging;
                                                              SVE=Inloggning];
                                                   NotBlank=Yes }
    { 20  ;   ;Company             ;Text30        ;TableRelation="Site Mngmnt. Hours Companies";
                                                   CaptionML=[ENU=Company;
                                                              NOR=Selskap;
                                                              SVE=F”retag];
                                                   NotBlank=Yes }
    { 30  ;   ;User ID             ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Company);
                                                                ICchange;
                                                                "Employee No" := '';
                                                                IF (UserSetup.GET("User ID")) THEN BEGIN
                                                                  UserSetup.TESTFIELD("Employee No.");
                                                                  "Employee No" := UserSetup."Employee No.";
                                                                END;
                                                                CALCFIELDS("Employee Name", "Employee CAO");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              NOR=Bruker-ID;
                                                              SVE=Anv„ndar-ID] }
    { 40  ;   ;Employee No         ;Code20        ;TableRelation="Site Mngmnt. Hours Employee".No. WHERE (Company=FIELD(Company));
                                                   CaptionML=ENU=Employee No;
                                                   Editable=No }
    { 41  ;   ;Employee Name       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Site Mngmnt. Hours Employee"."Full Name" WHERE (Company=FIELD(Company),
                                                                                                                       No.=FIELD(Employee No)));
                                                   CaptionML=[ENU=Employee Name;
                                                              NOR=Navn p† ansatt;
                                                              SVE=Namn p† anst„lld];
                                                   Editable=No }
    { 42  ;   ;Employee CAO        ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Site Mngmnt. Hours Employee".CAO WHERE (Company=FIELD(Company),
                                                                                                               No.=FIELD(Employee No)));
                                                   CaptionML=ENU=Employee CAO;
                                                   Editable=No }
    { 43  ;   ;Permissions of a    ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Permissions of a" WHERE (No.=FIELD(Employee No)));
                                                   CaptionML=[ENU=Permissions of a;
                                                              NOR=Tillatelser tilh›rende;
                                                              SVE=Beh”righeter som tillh”r];
                                                   OptionCaptionML=[ENU=" ,Project Manager,Site Manager,Project Engineer,Estimator,Supervisor,Buyercontact,Purchaser";
                                                                    NOR=" ,Prosjektleder,Byggeleder,Prosjektingeni›r,Kalkulat›r,Arbeidsleder,Kundeansvarlig,Innkj›pare";
                                                                    SVE=" ,Projektledare,Arbetsledaren,Projekttekniker,Kalkylansvarig,Arbetsledare,Kundansvarig,Ink”pare"];
                                                   OptionString=[ ,Project Manager,Site Manager,Project Engineer,Estimator,Supervisor,Buyercontact,Purchaser];
                                                   Editable=No }
    { 50  ;   ;Password            ;Text250       ;OnValidate=VAR
                                                                EncryptionMgt@1100528302 : Codeunit 11012367;
                                                              BEGIN
                                                                IF (Password = '') THEN
                                                                  EXIT;
                                                                Password := EncryptionMgt.CalculateStringMD5(Password);
                                                              END;

                                                   ExtendedDatatype=Masked;
                                                   CaptionML=[ENU=Password;
                                                              NOR=Passord;
                                                              SVE=L”senord] }
    { 80  ;   ;Authentication Email O365;Text250  ;CaptionML=ENU=Authentication Email O365 }
    { 90  ;   ;License Type        ;Option        ;InitValue=None;
                                                   OnValidate=BEGIN
                                                                CheckPortalLicense(FALSE);
                                                              END;

                                                   CaptionML=[ENU=License Type;
                                                              NOR=Lisenstype;
                                                              SVE=License Type];
                                                   OptionCaptionML=ENU=Both,Portal,App,,,,,,None;
                                                   OptionString=Both,Portal,App,,,,,,None }
  }
  KEYS
  {
    {    ;Login                                   ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Employee@1100528300 : Record 5200;
      UserSetup@1100528301 : Record 91;
      Text000@1100528302 : TextConst 'ENU=Your new password for the Hour Portal is: %2. You can login with your account (%1) and this new password.';
      Text001@1100528303 : TextConst 'ENU=Your new password for the Hour Portal';
      Text002@1100528304 : TextConst 'ENU=%1 %2 is already in use.';

    LOCAL PROCEDURE ICchange@1100528301();
    BEGIN
      Employee.CHANGECOMPANY(Company);
      UserSetup.CHANGECOMPANY(Company);
    END;

    PROCEDURE GenerateAllUsers@1100528304();
    VAR
      SiteMngmntHoursCompanies@1100528300 : Record 11012356;
      SiteMngmntHoursEmployee@1100528301 : Record 11012357;
      StringFunctions@1100528302 : Codeunit 11012273;
      ReadablePassword@1100528303 : Text;
    BEGIN
      IF (NOT SiteMngmntHoursCompanies.FINDSET) THEN
        EXIT;
      REPEAT
        SiteMngmntHoursEmployee.SETRANGE(Company, SiteMngmntHoursCompanies.Company);
        IF (SiteMngmntHoursEmployee.FINDSET) THEN BEGIN
          REPEAT
            INIT;
            Company := SiteMngmntHoursEmployee.Company;

            ICchange;
            Employee.GET(SiteMngmntHoursEmployee."No.");
            IF (NOT SiteMngmntHoursEmployee.External) THEN BEGIN
              UserSetup.SETRANGE("Employee No.", SiteMngmntHoursEmployee."No.");
              IF (UserSetup.FINDFIRST) THEN BEGIN
                Login := LOWERCASE(COPYSTR(UserSetup."User ID", StringFunctions.RSTRPOS(UserSetup."User ID", '\')+1));
                VALIDATE("User ID", UserSetup."User ID");
              END;
            END ELSE BEGIN
              Login := LOWERCASE(Employee.Initials+Employee."Middle Name"+Employee."Last Name");
              VALIDATE("Employee No", Employee."No.");
            END;

            IF (Login <> '') AND (Employee."Company E-Mail" <> '') AND
               (Employee."Show in Hours Portal")
            THEN BEGIN
              ReadablePassword := GeneratePassword;
              VALIDATE(Password, ReadablePassword);
              IF (INSERT(TRUE)) THEN
                MailPassword(ReadablePassword, Employee."Company E-Mail");
            END;
          UNTIL (SiteMngmntHoursEmployee.NEXT = 0);
        END;
      UNTIL (SiteMngmntHoursCompanies.NEXT = 0);
    END;

    LOCAL PROCEDURE "---Locals---"@1100528306();
    BEGIN
    END;

    LOCAL PROCEDURE CheckPortalLicense@1100528305(CheckForInsertOrNew@1100528304 : Boolean);
    VAR
      CustomLicense@1100528303 : Record 11012449;
      HourPortalUser@1100528305 : Record 11020453;
      TmpHourPortalUser@1100528302 : TEMPORARY Record 11020453;
      LicenseManagement@1100528301 : Codeunit 11229289;
      ValidationMode@1100528300 : ',WebService,UserInput,NoError';
    BEGIN
      TmpHourPortalUser.DELETEALL;
      TmpHourPortalUser.COPY(Rec);
      TmpHourPortalUser.INSERT;
      HourPortalUser.SETFILTER(Login, '<>%1', Login);
      IF (HourPortalUser.FINDSET) THEN
        REPEAT
          TmpHourPortalUser.COPY(HourPortalUser);
          TmpHourPortalUser.INSERT;
        UNTIL (HourPortalUser.NEXT = 0);

      IF ("License Type" = "License Type"::App) OR ("License Type" = "License Type"::Both) THEN  BEGIN
        CustomLicense.GET(CustomLicense."Licence Type"::"4PS HRA");
        LicenseManagement.CheckIfLicenseValid(CustomLicense);
        LicenseManagement.CheckHraLicenseExpired(ValidationMode::UserInput);
        LicenseManagement.ValidateUserCountHRA(TmpHourPortalUser, ValidationMode::UserInput);
      END;
      IF ("License Type" = "License Type"::Portal) OR ("License Type" = "License Type"::Both) THEN BEGIN
        CustomLicense.GET(CustomLicense."Licence Type"::"4PS HPT");
        LicenseManagement.CheckIfLicenseValid(CustomLicense);
        LicenseManagement.CheckHPTLicenseExpired(ValidationMode::UserInput);
        LicenseManagement.ValidateUserCountHPT(TmpHourPortalUser, ValidationMode::UserInput);
      END;
    END;

    LOCAL PROCEDURE MailPassword@1100528309(ReadablePassword@1100528303 : Text;EmailURL@1100528304 : Text);
    VAR
      MailCu@1100528302 : Codeunit 397;
      MailBody@1100528301 : Text[260];
    BEGIN
      MailBody := STRSUBSTNO(Text000, Login, ReadablePassword);
      MailCu.NewMessage(EmailURL,'','',Text001, MailBody, '', FALSE);
    END;

    LOCAL PROCEDURE GeneratePassword@1100528302() : Text;
    VAR
      StringFunctions@1100525000 : Codeunit 11012273;
      PasswordPlain@1100525001 : Text;
    BEGIN
      StringFunctions.GeneratePasswordPlainText(PasswordPlain, 10); //#kz, 20150114
      EXIT(PasswordPlain);
    END;

    BEGIN
    END.
  }
}

