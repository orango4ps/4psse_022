OBJECT Report 9200 Void/Transmit Elec. Pmnts
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Elektronische Zahlungen stornieren/Åbertragen;
               ENU=Void/Transmit Electronic Payments;
               NLD=Elektronische betalingen nietig verklaren/verzenden;
               NOR=Kanseller/overfõr elektroniske betalinger];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  BankAccount.GET(BankAccount."No.");
                  BankAccount.TESTFIELD(Blocked,FALSE);

                  IF UsageType <> UsageType::Transmit THEN
                    IF NOT CONFIRM(ActionConfirmQst,
                         FALSE,
                         UsageType,
                         BankAccount.TABLECAPTION,
                         BankAccount."No.")
                    THEN
                      CurrReport.QUIT;
                END;

  }
  DATASET
  {
    { 7024;    ;DataItem;                    ;
               DataItemTable=Table81;
               DataItemTableView=SORTING(Journal Template Name,Journal Batch Name,Line No.)
                                 WHERE(Document Type=FILTER(Payment|Refund),
                                       Bank Payment Type=FILTER(Electronic Payment|Electronic Payment-IAT),
                                       Exported to Payment File=CONST(Yes),
                                       Check Transmitted=CONST(No));
               OnPreDataItem=BEGIN
                               FirstTime := TRUE;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF SkipReport("Account Type","Bal. Account Type","Account No.","Bal. Account No.",BankAccount."No.") THEN
                                    CurrReport.SKIP;

                                  IF FirstTime THEN BEGIN
                                    CASE UsageType OF
                                      UsageType::Void:
                                        IF "Check Transmitted" THEN
                                          ERROR(AlreadyTransmittedNoVoidErr);
                                      UsageType::Transmit:
                                        BEGIN
                                          IF "Check Transmitted" THEN
                                            ERROR(AlreadyTransmittedErr);
                                          IF "Document No." = '' THEN
                                            ERROR(VoidedOrNoDocNoErr);
                                          IF NOT RTCConfirmTransmit THEN
                                            EXIT;
                                        END;
                                    END;
                                    FirstTime := FALSE;
                                  END;
                                  CheckManagement.ProcessElectronicPayment("Gen. Journal Line",UsageType);

                                  IF UsageType = UsageType::Void THEN BEGIN
                                    "Exported to Payment File" := FALSE;
                                    "Check Exported" := FALSE;
                                    "Check Printed" := FALSE;
                                    "Document No." := '';
                                  END ELSE
                                    "Check Transmitted" := TRUE;

                                  MODIFY;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=No;
      OnOpenPage=BEGIN
                   DisplayUsageType := UsageType;
                   IF DisplayUsageType = 0 THEN
                     ERROR(OnlyRunFromPaymentJournalErr);
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1   ;2   ;Field     ;
                  CaptionML=[DEU=Bankkontonr.;
                             ENU=Bank Account No.;
                             NLD=Bankrekeningnr.;
                             NOR=Bankkontonr.;
                             SVE=Bankkontonr];
                  ToolTipML=[DEU=Gibt das Bankkonto an, auf das die Zahlung getÑtigt wird.;
                             ENU=Specifies the bank account that the payment is transmitted to.;
                             NLD=Hiermee wordt de bankrekening opgegeven waarnaar de betaling wordt verzonden.;
                             NOR=Angir bankkontoen som betalingen overfõres til.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=BankAccount."No.";
                  TableRelation="Bank Account" }

      { 3   ;2   ;Field     ;
                  CaptionML=[DEU=Arbeitsgang;
                             ENU=Operation;
                             NLD=Bewerking;
                             NOR=Operasjon;
                             SVE=Operation];
                  ToolTipML=[DEU=Legt fest, ob Sie die elektronische Zahlungsdatei Åbertragen oder stornieren mîchten. Bei der Option "öbertragen" wird eine elektronische Zahlungsdatei erstellt, die zur Verarbeitung an Ihre Bank Åbermittelt wird. Die Option "Stornieren" storniert die exportierte Datei. BestÑtigen Sie, dass die Auswahl korrekt ist, bevor Sie die elektronische Zahlungsdatei verarbeiten.;
                             ENU=Specifies if you want to transmit or void the electronic payment file. The Transmit option produces an electronic payment file to be transmitted to your bank for processing. The Void option voids the exported file. Confirm that the correct selection has been made before you process the electronic payment file.;
                             NLD=Hiermee wordt opgegeven of u het bestand voor elektronische betaling wilt verzenden of nietig verklaren. Met de optie Verzenden krijgt u een bestand voor elektronische betaling dat voor verwerking naar uw bank kan worden verzonden. Met de optie Nietig verklaren wordt het geâxporteerde bestand nietig verklaard. Controleer of de juiste selectie is gemaakt voordat u het bestand voor elektronische betaling verwerkt.;
                             NOR=Angir om du vil overfõre eller kansellere filen for elektronisk betaling. Overfõr-alternativet oppretter en fil for elektronisk betaling som skal overfõres til banken for behandling. Kanseller-alternativet kansellerer den eksporterte filen. Bekreft at du har valgt riktig fõr du behandler filen for elektronisk betaling.];
                  OptionCaptionML=[DEU=,Stornieren,öbertragen;
                                   ENU=,Void,Transmit;
                                   NLD=,Nietig verklaren,Verzenden;
                                   NOR=,Kanseller,Overfõr];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DisplayUsageType;
                  Editable=FALSE }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      BankAccount@1000 : Record 270;
      CheckManagement@1001 : Codeunit 367;
      FirstTime@1004 : Boolean;
      UsageType@1005 : ',Void,Transmit';
      DisplayUsageType@1006 : ',Void,Transmit';
      ActionConfirmQst@1007 : TextConst '@@@="%1=Action taken., %2=Name of the Bank Account table., %3=Bank Account Number.";DEU=Mîchten Sie wirklich alle fÅr %2 %3 erstellten elektronischen Zahlungen %1?;ENU=Are you SURE you want to %1 all of the Electronic Payments written against %2 %3?;NLD=Weet u ZEKER dat u alle elektronische betalingen wilt %1 die zijn uitgeschreven tegen %2 %3?;NOR=Er du SIKKER pÜ at du vil %1 alle elektroniske betalinger skrevet mot %2 %3?';
      AlreadyTransmittedNoVoidErr@1008 : TextConst 'DEU=Die Exportdatei wurde bereits Åbertragen. Sie kînnen diese Posten nicht mehr stornieren.;ENU=The export file has already been transmitted. You can no longer void these entries.;NLD=Het exportbestand is al verzonden. U kunt deze posten niet meer nietig verklaren.;NOR=Eksportfilen er allerede overfõrt. Du kan ikke lenger kansellere disse postene.';
      AlreadyTransmittedErr@1010 : TextConst 'DEU=Die Exportdatei wurde bereits Åbertragen.;ENU=The export file has already been transmitted.;NLD=Het exportbestand is al verzonden.;NOR=Eksportfilen er allerede overfõrt.';
      OnlyRunFromPaymentJournalErr@1003 : TextConst 'DEU=Dieser Vorgang kann nur aus dem Zahlungsausgangs Buch.-Blatt ausgefÅhrt werden.;ENU=This process can only be run from the Payment Journal.;NLD=Dit proces kan alleen worden uitgevoerd vanuit het betalingsdagboek.;NOR=Denne prosessen kan bare kjõre fra utbetalingskladden.';
      TransmittedQst@1009 : TextConst 'DEU=Wurde die Exportdatei erfolgreich Åbertragen?;ENU=Has export file been successfully transmitted?;NLD=Is het exportbestand al verzonden?;NOR=Er eksportfilen overfõrt?';
      VoidedOrNoDocNoErr@1002 : TextConst 'DEU=Die Exportdatei kann nicht Åbertragen werden, wenn die Zahlung storniert wurde oder eine Belegnr. fehlt.;ENU=The export file cannot be transmitted if the payment has been voided or is missing a Document No.;NLD=Het exportbestand kan niet worden verzonden als de betaling nietig is verklaard of als een documentnummer ontbreekt.;NOR=Eksportfilen kan ikke overfõres hvis betalingen er kansellert eller mangler et dokumentnummer.';

    [External]
    PROCEDURE SetUsageType@2(NewUsageType@1000 : ',Void,Transmit');
    BEGIN
      UsageType := NewUsageType;
    END;

    [External]
    PROCEDURE RTCConfirmTransmit@3() : Boolean;
    BEGIN
      IF NOT CONFIRM(TransmittedQst,FALSE) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    [External]
    PROCEDURE SetBankAccountNo@1(AccountNumber@1000 : Code[20]);
    BEGIN
      BankAccount.GET(AccountNumber);
    END;

    LOCAL PROCEDURE SkipReport@4(AccountType@1000 : 'G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner';BalAccountType@1001 : 'G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner';AccountNo@1002 : Code[20];BalAccountNo@1003 : Code[20];BankAccountNo@1004 : Code[20]) : Boolean;
    BEGIN
      IF AccountType = AccountType::"Bank Account" THEN
        IF AccountNo <> BankAccountNo THEN
          EXIT(TRUE);

      IF BalAccountType = BalAccountType::"Bank Account" THEN
        IF BalAccountNo <> BankAccountNo THEN
          EXIT(TRUE);

      IF (AccountType <> AccountType::"Bank Account") AND (BalAccountType <> BalAccountType::"Bank Account") THEN
        EXIT(TRUE);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

