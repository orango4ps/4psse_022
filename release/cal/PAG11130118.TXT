OBJECT Page 11130118 LinkedIn Profile FB
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=LinkedIn-Profil;
               ENU=LinkedIn Profile;
               NLD=LinkedIn Profiel;
               NOR=LinkedIn-profil];
    SourceTable=Table5050;
    PageType=CardPart;
    OnInit=BEGIN
             LinkContactEnabled := FALSE;
             UnlinkContactEnabled := FALSE;
           END;

    OnOpenPage=BEGIN
                 IF LinkedInManagement.AutoConnect() THEN BEGIN
                   LinkedInManagement.GetLinkedInConnection(LinkedInConnection, TRUE, FALSE);
                   IF NOT LinkedInManagement.IsConnected(LinkedInConnection) THEN
                     SetVarsInValidToken();
                 END ELSE
                   SetVarsInValidToken();
               END;

    OnAfterGetRecord=BEGIN
                       ContactEditable := ChangingPersonIsAllowed;
                       UpdateHeadline;
                     END;

    ActionList=ACTIONS
    {
      { 1100409002;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100409001;1 ;Action    ;
                      CaptionML=[DEU=Kontakt verknÅpfen;
                                 ENU=Link Contact;
                                 NLD=Relatie koppelen];
                      Enabled=LinkContactEnabled;
                      Image=LinkAccount;
                      OnAction=BEGIN
                                 LinkedInManagement.LinkContact(LinkedInConnection, "No.");
                               END;
                                }
      { 1100525001;1 ;Action    ;
                      CaptionML=[DEU=VerknÅpfung von Kontakt aufheben;
                                 ENU=Unlink Contact;
                                 NLD=Relatie ontkoppelen];
                      Enabled=UnlinkContactEnabled;
                      Image=UnLinkAccount;
                      OnAction=BEGIN
                                 LinkedInManagement.UnlinkContact("No.");
                               END;
                                }
      { 1100525000;1 ;Action    ;
                      CaptionML=[DEU=LinkedIn-Verbindung;
                                 ENU=LinkedIn Connection;
                                 NLD=LinkedIn verbinding];
                      OnAction=VAR
                                 LinkedInToken@1100525000 : Record 11071909;
                               BEGIN
                                 IF NOT LinkedInToken.GET(USERID) THEN BEGIN
                                   LinkedInToken."User ID" := USERID;
                                   LinkedInToken.INSERT(TRUE);
                                 END;
                                 PAGE.RUN(PAGE::"LinkedIn Connection");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1210190005;0;Container;
                ContainerType=ContentArea }

    { 1100409004;1;Field  ;
                Name=PictureControlAddin;
                SourceExpr=PictureURL;
                ControlAddIn=[Fps.Nav.Windows.Addin.LinkedInPictureViewer;PublicKeyToken=024bd013665211e9] }

    { 1210190003;1;Field  ;
                SourceExpr=Headline;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              CASE HeadlineAction OF
                                HeadlineAction::Connect :
                                  BEGIN
                                    LinkedInManagement.GetLinkedInConnection(LinkedInConnection, TRUE, TRUE);
                                    UpdateHeadline();
                                  END;
                              //  HeadlineAction::"Link Contact" :
                              //    BEGIN
                              //      LinkedInManagement.LinkContact(LinkedInConnection, "No.");
                              //      UpdateHeadline();
                              //    END;
                                HeadlineAction::"Hyperlink URL":
                                  HYPERLINK(ProfileURL);
                              END;
                            END;
                             }

    { 1100409005;1;Field  ;
                SourceExpr=CurrentPositionCompany }

  }
  CODE
  {
    VAR
      LinkedInManagement@1100525003 : Codeunit 11130004;
      LinkedInConnection@1100525000 : DotNet "'FourPS.LinkedInConnection, Version=1.101.0.0, Culture=neutral, PublicKeyToken=48f3911b65e24838'.LinkedInConnection.LinkedInConnection" RUNONCLIENT;
      Headline@1100409000 : Text[1024];
      ProfileURL@1100409001 : Text[1024];
      PictureURL@1100409002 : Text[1024];
      CurrentPositionCompany@1100409003 : Text[1024];
      Text002@1100525004 : TextConst 'DEU=Zur Verbindung hier klicken;ENU=Click here to connect;NLD=Klik hier om te verbinden';
      Text003@1100525005 : TextConst 'DEU=LinkedIn-API-Drosselungslimit erreicht. Versuchen Sie es morgen erneut.;ENU=LinkedIn API throttle limit reached. Try again tomorrow.;NLD=LinkedIn API gebruiksgrens bereikt. Probeer het morgen opnieuw.';
      HeadlineAction@1100525001 : 'Connect,Link Contact,Hyperlink URL';
      LinkContactEnabled@1100525007 : Boolean INDATASET;
      UnlinkContactEnabled@1100525006 : Boolean INDATASET;
      ContactEditable@1100525008 : Boolean;

    PROCEDURE SetVarsLinked@1100525004(LinkedInProfile@1100525000 : DotNet "'FourPS.LinkedInConnection, Version=1.101.0.0, Culture=neutral, PublicKeyToken=48f3911b65e24838'.LinkedInConnection.LinkedInProfile" RUNONCLIENT);
    BEGIN
      HeadlineAction := HeadlineAction::"Hyperlink URL";
      Headline := LinkedInProfile.Headline;
      IF Headline = '' THEN
        Headline := '----';
      ProfileURL := LinkedInProfile.PublicProfileUrl;
      PictureURL := LinkedInProfile.PictureUrl;
      CurrentPositionCompany := LinkedInProfile.Company;
      LinkContactEnabled := ContactEditable;
      UnlinkContactEnabled := ContactEditable;
    END;

    PROCEDURE SetVarsNotLinked@1100525001();
    BEGIN
      HeadlineAction := HeadlineAction::"Link Contact";
      Headline := ''; //Text001;
      ProfileURL := '';
      PictureURL := '';
      CurrentPositionCompany := '';
      LinkContactEnabled := LinkedInManagement.IsConnected(LinkedInConnection) AND ContactEditable;
      UnlinkContactEnabled := FALSE;
    END;

    PROCEDURE SetVarsInValidToken@1100525002();
    BEGIN
      HeadlineAction := HeadlineAction::Connect;
      Headline := Text002;
      ProfileURL := '';
      PictureURL := '';
      CurrentPositionCompany := '';
      LinkContactEnabled := FALSE;
      UnlinkContactEnabled := FALSE;
    END;

    PROCEDURE SetVarsThrottleLimitExceeded@1100525003();
    BEGIN
      HeadlineAction := HeadlineAction::Connect;
      Headline := Text003;
      ProfileURL := '';
      PictureURL := '';
      CurrentPositionCompany := '';
      LinkContactEnabled := FALSE;
      UnlinkContactEnabled := FALSE;
    END;

    PROCEDURE UpdateHeadline@1100525005();
    VAR
      LinkedInProfile@1100525001 : DotNet "'FourPS.LinkedInConnection, Version=1.101.0.0, Culture=neutral, PublicKeyToken=48f3911b65e24838'.LinkedInConnection.LinkedInProfile" RUNONCLIENT;
      LinkedInManagement@1100525000 : Codeunit 11130004;
      LinkedInProfileRec@1100525002 : Record 11071908;
    BEGIN
      IF NOT LinkedInManagement.IsConnected(LinkedInConnection) THEN BEGIN
        SetVarsInValidToken();
        EXIT;
      END;

      IF LinkedInProfileRec.GET("No.", 0) THEN BEGIN
        IF LinkedInProfileRec."Profile ID" <> '' THEN BEGIN
          LinkedInProfile := LinkedInConnection.GetProfile(LinkedInProfileRec."Profile ID");
          CASE TRUE OF
            (LinkedInConnection.Error = 401) : SetVarsInValidToken();
            (LinkedInConnection.Error = 403) : SetVarsThrottleLimitExceeded();
            (LinkedInConnection.Error <> 0) : SetVarsNotLinked();
            ELSE
              SetVarsLinked(LinkedInProfile);
          END;
        END ELSE
          SetVarsNotLinked();
      END ELSE
        SetVarsNotLinked();
    END;

    BEGIN
    END.
  }
}

