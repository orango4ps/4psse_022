OBJECT Codeunit 11012609 Release UAR Hour Accounting
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1100529602 : TextConst 'DEU=öberprÅfung Zeilen #1######;ENU=Checking lines        #1######;NLD=Controleren regels #1######';
      Text002@1100529600 : TextConst 'DEU=Keine Stundenzeile von Mitarbeiter ''%1'' in Woche %2-%3 vorhanden.;ENU=No hour lines present of emplyee ''%1'' in week %2-%3.;NLD=Geen urenregel aanwezig van werknemer ''%1'' in week %2-%3.;SVE=Inga tidsrader fîr anstÑlld ''%1'' fîr vecka %2-%3';

    PROCEDURE Release@1100529600(VAR UARHourAccounting@1100529600 : Record 11012609);
    VAR
      UARHourAccountingLine@1100529601 : Record 11012610;
      UARHourAccountingSetup@1100529603 : Record 11012600;
      GLSetup@1100529604 : Record 98;
      Employee@1100529605 : Record 5200;
      UARHourAccCheckLine@1100529602 : Codeunit 11012601;
      Window@1100529606 : Dialog;
      LineCount@1100529607 : Integer;
    BEGIN
      IF UARHourAccounting.Status = UARHourAccounting.Status::Released THEN
        EXIT;

      UARHourAccountingSetup.GET;
      UARHourAccountingSetup.TESTFIELD("Hour Acc. Rail CLA", TRUE);
      UARHourAccountingSetup.TESTFIELD("Journal Template");
      UARHourAccountingSetup.TESTFIELD("Journal Batch");

      GLSetup.GET;
      GLSetup.TESTFIELD("Global Dimension 1 Code");
      GLSetup.TESTFIELD("Global Dimension 2 Code");

      Employee.GET(UARHourAccounting."Employee No.");
      Employee.TESTFIELD("Global Dimension 1 Code");

      Window.OPEN(Text001);

      UARHourAccountingLine.SETRANGE(Year, UARHourAccounting.Year);
      UARHourAccountingLine.SETRANGE(Week, UARHourAccounting.Week);
      UARHourAccountingLine.SETRANGE("Employee No.", UARHourAccounting."Employee No.");
      IF UARHourAccountingLine.FINDSET THEN BEGIN
        REPEAT
          IF NOT UARHourAccountingLine.EmptyLine THEN BEGIN
            LineCount += 1;
            Window.UPDATE(1, LineCount);
            UARHourAccCheckLine.RunCheck(UARHourAccounting, UARHourAccountingLine);
          END;
        UNTIL UARHourAccountingLine.NEXT = 0
      END;

      Window.CLOSE;
      IF LineCount = 0 THEN
        ERROR(Text002, UARHourAccounting."Employee No.", UARHourAccounting.Year, UARHourAccounting.Week);

      UARHourAccounting.Status := UARHourAccounting.Status::Released;
      UARHourAccounting."Released By" := USERID;
      UARHourAccounting.MODIFY;
    END;

    PROCEDURE Reopen@1100529601(VAR UARHourAccounting@1100529600 : Record 11012609);
    BEGIN
      IF UARHourAccounting.Status = UARHourAccounting.Status::Open THEN
        EXIT;
      UARHourAccounting.Status := UARHourAccounting.Status::Open;
      UARHourAccounting."Released By" := '';
      UARHourAccounting.MODIFY;
    END;

    BEGIN
    END.
  }
}

