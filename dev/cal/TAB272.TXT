OBJECT Table 272 Check Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Check Ledger Entry;
               NOR=Sjekkpost;
               SVE=Checktransaktion];
    LookupPageID=Page374;
    DrillDownPageID=Page374;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              NOR=Lõpenr.;
                                                              SVE=Lîpnr] }
    { 2   ;   ;Bank Account No.    ;Code20        ;TableRelation="Bank Account";
                                                   CaptionML=[ENU=Bank Account No.;
                                                              NOR=Bankkontonr.;
                                                              SVE=Bankkontonr] }
    { 3   ;   ;Bank Account Ledger Entry No.;Integer;
                                                   TableRelation="Bank Account Ledger Entry";
                                                   CaptionML=[ENU=Bank Account Ledger Entry No.;
                                                              NOR=Bankpostnr.;
                                                              SVE=Bankkontotrans. lîpnr] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              NOR=Bokfõringsdato;
                                                              SVE=Bokfîringsdatum] }
    { 5   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              NOR=Bilagstype;
                                                              SVE=Dokumenttyp];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    NOR=" ,Betaling,Faktura,Kreditnota,Rentenota,Purring,Refusjon";
                                                                    SVE=" ,Betalning,Faktura,Kreditnota,RÑntefaktura,BetalningspÜminnelse,èterbetalning"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 6   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              NOR=Bilagsnr.;
                                                              SVE=Dokumentnr] }
    { 7   ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 8   ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              NOR=Belõp;
                                                              SVE=Belopp];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCodeFromBank }
    { 9   ;   ;Check Date          ;Date          ;CaptionML=[ENU=Check Date;
                                                              NOR=Sjekkdato;
                                                              SVE=Checkdatum] }
    { 10  ;   ;Check No.           ;Code20        ;CaptionML=[ENU=Check No.;
                                                              NOR=Sjekknr.;
                                                              SVE=Checknr] }
    { 11  ;   ;Check Type          ;Option        ;CaptionML=[ENU=Check Type;
                                                              NOR=Sjekktype;
                                                              SVE=Checktyp];
                                                   OptionCaptionML=[ENU=Total Check,Partial Check;
                                                                    NOR=Total sjekk,A konto-sjekk;
                                                                    SVE=Total check,Partiell check];
                                                   OptionString=Total Check,Partial Check }
    { 12  ;   ;Bank Payment Type   ;Option        ;CaptionML=[ENU=Bank Payment Type;
                                                              NOR=Bankbetalingstype;
                                                              SVE=Bankbetalningstyp];
                                                   OptionCaptionML=[ENU=" ,Computer Check,Manual Check,Electronic Payment";
                                                                    NOR=" ,Maskinell sjekk,Manuell sjekk,Elektronisk betaling";
                                                                    SVE=" ,Datorcheck,Handskriven check,Elektronisk betalning"];
                                                   OptionString=[ ,Computer Check,Manual Check,Electronic Payment] }
    { 13  ;   ;Entry Status        ;Option        ;CaptionML=[ENU=Entry Status;
                                                              NOR=Poststatus;
                                                              SVE=Transaktionsstatus];
                                                   OptionCaptionML=[ENU=,Printed,Voided,Posted,Financially Voided,Test Print,Exported,Transmitted;
                                                                    NOR=,Skrevet ut,Kansellert,Bokfõrt,Finansielt kansellert,Kontrollutskrift,Eksportert,Sendt;
                                                                    SVE=,Utskriven,Makulerad,Bokfîrd,Annullerad,Testutskrift,Exporterad,ôversÑnd];
                                                   OptionString=,Printed,Voided,Posted,Financially Voided,Test Print,Exported,Transmitted }
    { 14  ;   ;Original Entry Status;Option       ;CaptionML=[ENU=Original Entry Status;
                                                              NOR=Opprinnelig poststatus;
                                                              SVE=Ursprungligt trans.status];
                                                   OptionCaptionML=[ENU=" ,Printed,Voided,Posted,Financially Voided";
                                                                    NOR=" ,Skrevet ut,Kansellert,Bokfõrt,Finansielt kansellert";
                                                                    SVE=" ,Utskriven,Makulerad,Bokfîrd,Annullerad"];
                                                   OptionString=[ ,Printed,Voided,Posted,Financially Voided] }
    { 15  ;   ;Bal. Account Type   ;Option        ;CaptionML=[ENU=Bal. Account Type;
                                                              NOR=Motkontotype;
                                                              SVE=Motkontotyp];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner,Employee;
                                                                    NOR=Finanskonto,Kunde,Leverandõr,Bankkonto,Aktivum,KI-partner,Ansatt;
                                                                    SVE=Redov.konto,Kund,Leverantîr,Bankkonto,AnlÑggningstillgÜng,Konc.int. partner,AnstÑlld];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner,Employee }
    { 16  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Bal. Account Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Fixed Asset)) "Fixed Asset";
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              NOR=Motkontonr.;
                                                              SVE=Motkonto] }
    { 17  ;   ;Open                ;Boolean       ;CaptionML=[ENU=Open;
                                                              NOR=èpne;
                                                              SVE=ôppen] }
    { 18  ;   ;Statement Status    ;Option        ;CaptionML=[ENU=Statement Status;
                                                              NOR=Utdragsstatus;
                                                              SVE=Bankkontoutdragsstatus];
                                                   OptionCaptionML=[ENU=Open,Bank Acc. Entry Applied,Check Entry Applied,Closed;
                                                                    NOR=èpen,Utlignet bankkontolõpenr.,Utlignet sjekklõpenr.,Lukket;
                                                                    SVE=ôppen,Bankkontotrans. kopplad,Checktrans. kopplad,Avslutad];
                                                   OptionString=Open,Bank Acc. Entry Applied,Check Entry Applied,Closed }
    { 19  ;   ;Statement No.       ;Code20        ;TableRelation="Bank Acc. Reconciliation Line"."Statement No." WHERE (Bank Account No.=FIELD(Bank Account No.));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Statement No.;
                                                              NOR=Utdragsnr.;
                                                              SVE=Kontoutdragsnr] }
    { 20  ;   ;Statement Line No.  ;Integer       ;TableRelation="Bank Acc. Reconciliation Line"."Statement Line No." WHERE (Bank Account No.=FIELD(Bank Account No.),
                                                                                                                             Statement No.=FIELD(Statement No.));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Statement Line No.;
                                                              NOR=Utdragslinjenr.;
                                                              SVE=Kontoutdragsradnr] }
    { 21  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=[ENU=User ID;
                                                              NOR=Bruker-ID;
                                                              SVE=AnvÑndar-ID] }
    { 22  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              NOR=Eksterndokumentnr.;
                                                              SVE=Externt dokumentnr] }
    { 23  ;   ;Data Exch. Entry No.;Integer       ;TableRelation="Data Exch.";
                                                   CaptionML=[ENU=Data Exch. Entry No.;
                                                              NOR=Lõpenummer for datautveksl.;
                                                              SVE=Trans.nr pÜ dataintegration];
                                                   Editable=No }
    { 24  ;   ;Data Exch. Voided Entry No.;Integer;TableRelation="Data Exch.";
                                                   CaptionML=[ENU=Data Exch. Voided Entry No.;
                                                              NOR=Kansellert lõpenummer for datautveksling;
                                                              SVE=Makulerat trans.nr pÜ dataintegration];
                                                   Editable=No }
    { 25  ;   ;Positive Pay Exported;Boolean      ;CaptionML=[ENU=Positive Pay Exported;
                                                              NOR=Positive Pay eksportert;
                                                              SVE=Positive Pay har exporterats] }
    { 26  ;   ;Record ID to Print  ;RecordID      ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Record ID to Print;
                                                              NOR=Post-ID som skal skrives ut;
                                                              SVE=Post-ID att skriva ut] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Bank Account No.,Check Date              }
    {    ;Bank Account No.,Entry Status,Check No.,Statement Status }
    {    ;Bank Account Ledger Entry No.            }
    {    ;Bank Account No.,Open                    }
    {    ;Document No.,Posting Date                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NothingToExportErr@1000 : TextConst 'ENU=There is nothing to export.;NOR=Det finnes ingenting Ü eksportere.;SVE=Det finns inget att exportera.';

    [External]
    PROCEDURE GetCurrencyCodeFromBank@1() : Code[10];
    VAR
      BankAcc@1000 : Record 270;
    BEGIN
      IF "Bank Account No." = BankAcc."No." THEN
        EXIT(BankAcc."Currency Code");

      IF BankAcc.GET("Bank Account No.") THEN
        EXIT(BankAcc."Currency Code");

      EXIT('');
    END;

    [External]
    PROCEDURE CopyFromBankAccLedgEntry@2(BankAccLedgEntry@1000 : Record 271);
    BEGIN
      "Bank Account No." := BankAccLedgEntry."Bank Account No.";
      "Bank Account Ledger Entry No." := BankAccLedgEntry."Entry No.";
      "Posting Date" := BankAccLedgEntry."Posting Date";
      "Document Type" := BankAccLedgEntry."Document Type";
      "Document No." := BankAccLedgEntry."Document No.";
      "External Document No." := BankAccLedgEntry."External Document No.";
      Description := BankAccLedgEntry.Description;
      "Bank Payment Type" := "Bank Payment Type";
      "Bal. Account Type" := BankAccLedgEntry."Bal. Account Type";
      "Bal. Account No." := BankAccLedgEntry."Bal. Account No.";
      "Entry Status" := "Entry Status"::Posted;
      Open := TRUE;
      "User ID" := USERID;
      "Check Date" := BankAccLedgEntry."Posting Date";
      "Check No." := BankAccLedgEntry."Document No.";

      OnAfterCopyFromBankAccLedgEntry(Rec,BankAccLedgEntry);
    END;

    [External]
    PROCEDURE ExportCheckFile@3();
    VAR
      BankAcc@1000 : Record 270;
    BEGIN
      IF NOT FINDSET THEN
        ERROR(NothingToExportErr);

      IF NOT BankAcc.GET("Bank Account No.") THEN
        ERROR(NothingToExportErr);

      IF BankAcc.GetPosPayExportCodeunitID > 0 THEN
        CODEUNIT.RUN(BankAcc.GetPosPayExportCodeunitID,Rec)
      ELSE
        CODEUNIT.RUN(CODEUNIT::"Exp. Launcher Pos. Pay",Rec);
    END;

    [External]
    PROCEDURE GetPayee@4() Payee : Text[100];
    VAR
      Vendor@1003 : Record 23;
      Customer@1002 : Record 18;
      GLAccount@1001 : Record 15;
      BankAccount@1000 : Record 270;
    BEGIN
      CASE "Bal. Account Type" OF
        "Bal. Account Type"::"G/L Account":
          IF "Bal. Account No." <> '' THEN BEGIN
            GLAccount.GET("Bal. Account No.");
            Payee := GLAccount.Name;
          END;
        "Bal. Account Type"::Customer:
          IF "Bal. Account No." <> '' THEN BEGIN
            Customer.GET("Bal. Account No.");
            Payee := Customer.Name;
          END;
        "Bal. Account Type"::Vendor:
          IF "Bal. Account No." <> '' THEN BEGIN
            Vendor.GET("Bal. Account No.");
            Payee := Vendor.Name;
          END;
        "Bal. Account Type"::"Bank Account":
          IF "Bal. Account No." <> '' THEN BEGIN
            BankAccount.GET("Bal. Account No.");
            Payee := BankAccount.Name;
          END;
        "Bal. Account Type"::"Fixed Asset":
          Payee := "Bal. Account No.";
      END;
    END;

    [External]
    PROCEDURE SetFilterBankAccNoOpen@6(BankAccNo@1000 : Code[20]);
    BEGIN
      RESET;
      SETCURRENTKEY("Bank Account No.",Open);
      SETRANGE("Bank Account No.",BankAccNo);
      SETRANGE(Open,TRUE);
    END;

    [Integration]
    [External]
    PROCEDURE OnAfterCopyFromBankAccLedgEntry@7(VAR CheckLedgerEntry@1000 : Record 272;BankAccountLedgerEntry@1001 : Record 271);
    BEGIN
    END;

    BEGIN
    END.
  }
}

