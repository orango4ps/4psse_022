OBJECT Table 11071708 Contract Amounts by Date
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ContractInstallment@1100528600 : Record 11071707;
             BEGIN
               TESTFIELD("Index Date");

               IF Type = Type::Installment THEN
                 IF ContractInstallment.GET("Service Contract No.", "Installment Line No.") THEN
                   IF (ContractInstallment."Ending Date" <> 0D) AND ("Index Date" > ContractInstallment."Ending Date") THEN
                     ERROR(Text000, FIELDCAPTION("Index Date"), ContractInstallment.FIELDCAPTION("Ending Date"),
                       ContractInstallment."Ending Date", ContractInstallment.TABLECAPTION);
             END;

    CaptionML=[ENU=Contract Amounts by Date;
               NOR=Kontraktsbel›p etter dato;
               SVE=Kontraktsavbetalningsbelopp efter datum];
    LookupPageID=Page11125153;
    DrillDownPageID=Page11125153;
  }
  FIELDS
  {
    { 5   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=Service Contract,Installment,Price Agreement;
                                                                    NOR=Servicekontrakt,Avdrag,Prisavtale;
                                                                    SVE=Servicekontrakt,Betalplan,Prisavtal];
                                                   OptionString=Service Contract,Installment,Price Agreement;
                                                   Editable=No }
    { 10  ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract.No.;
                                                   CaptionML=[ENU=Service Contract No.;
                                                              NOR=Servicekontraktnr;
                                                              SVE=Servicekontraktnr];
                                                   Editable=No }
    { 15  ;   ;Service Object No.  ;Code20        ;TableRelation=IF (Type=CONST(Price Agreement)) "Contract Object"."Service Object No." WHERE (Service Contract No.=FIELD(Service Contract No.));
                                                   CaptionML=[ENU=Service Object No.;
                                                              NOR=Serviceobjektnr;
                                                              SVE=Serviceobjektnr];
                                                   Editable=No }
    { 20  ;   ;Installment Line No.;Integer       ;TableRelation=IF (Type=CONST(Installment)) "Contract Installment"."Line No." WHERE (Service Contract No.=FIELD(Service Contract No.));
                                                   CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr];
                                                   Editable=No }
    { 30  ;   ;Index Date          ;Date          ;CaptionML=[ENU=Index Date;
                                                              NOR=Indeksdato;
                                                              SVE=Indexdatum] }
    { 40  ;   ;Amount (LCY)        ;Decimal       ;OnValidate=VAR
                                                                CurrencyDate@1100528802 : Date;
                                                                CurrencyExchangeRate@1100528801 : Record 330;
                                                                Currency2@1100528800 : Record 4;
                                                              BEGIN
                                                                // dp00116.n
                                                                CALCFIELDS("Currency Code");
                                                                Currency2.InitRoundingPrecision;
                                                                IF "Currency Code" <> '' THEN BEGIN
                                                                  CurrencyDate := "Index Date";
                                                                  Amount :=
                                                                  ROUND(
                                                                    CurrencyExchangeRate.ExchangeAmtLCYToFCY(
                                                                      0, '', CurrencyDate, "Currency Code", "Amount (LCY)",
                                                                       CurrencyExchangeRate.ExchangeRate(0, '', CurrencyDate, "Currency Code",TRUE),TRUE),
                                                                       Currency2."Amount Rounding Precision");
                                                                END ELSE BEGIN
                                                                  Amount := ROUND("Amount (LCY)",Currency2."Amount Rounding Precision");
                                                                END;
                                                                IF CurrFieldNo = FIELDNO("Amount (LCY)") THEN
                                                                  UpdatePrice;
                                                              END;

                                                   CaptionML=[ENU=Amount (LCY);
                                                              NOR=Bel›p (NOK);
                                                              SVE=Belopp (BVA)] }
    { 41  ;   ;Amount              ;Decimal       ;OnValidate=VAR
                                                                CurrencyDate@1100528802 : Date;
                                                                CurrencyExchangeRate@1100528801 : Record 330;
                                                                Currency2@1100528800 : Record 4;
                                                              BEGIN
                                                                // dp00116.n
                                                                CALCFIELDS("Currency Code");
                                                                Currency2.InitRoundingPrecision;
                                                                IF "Currency Code" <> '' THEN BEGIN
                                                                  CurrencyDate := "Index Date";
                                                                  "Amount (LCY)" :=
                                                                  ROUND(
                                                                    CurrencyExchangeRate.ExchangeAmtFCYToLCY(
                                                                      0, '', CurrencyDate, "Currency Code", Amount,
                                                                       CurrencyExchangeRate.ExchangeRate(0, '', CurrencyDate, "Currency Code",TRUE),TRUE),
                                                                       Currency2."Amount Rounding Precision");
                                                                END ELSE BEGIN
                                                                  "Amount (LCY)" := ROUND(Amount,Currency2."Amount Rounding Precision");
                                                                END;
                                                                IF CurrFieldNo = FIELDNO(Amount) THEN
                                                                  UpdatePrice;
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              NOR=Amount;
                                                              SVE=Belopp] }
    { 42  ;   ;Currency Code       ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Service-Contract."Currency Code" WHERE (No.=FIELD(Service Contract No.)));
                                                   TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod] }
    { 50  ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                IF "Ending Date" <> 0D THEN BEGIN
                                                                  TESTFIELD(Type, Type::"Price Agreement");
                                                                  IF "Ending Date" < "Index Date" THEN
                                                                    ERROR(Text001, FIELDCAPTION("Index Date"), FIELDCAPTION("Ending Date"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              NOR=Sluttdato;
                                                              SVE=Slutdatum] }
    { 60  ;   ;Quantity            ;Integer       ;OnValidate=BEGIN
                                                                IF Quantity <> 0 THEN BEGIN
                                                                  TESTFIELD(Type, Type::"Price Agreement");
                                                                  TestQuantityBasedOnContractObject;
                                                                  TestMaintenanceExists;
                                                                END;
                                                                UpdateAmount;
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   BlankZero=Yes }
    { 70  ;   ;Period              ;DateFormula   ;OnValidate=BEGIN
                                                                IF FORMAT(Period) <> '' THEN BEGIN
                                                                  TESTFIELD(Type, Type::"Price Agreement");
                                                                  TestQuantityBasedOnContractObject;
                                                                  TestMaintenanceExists;
                                                                END;
                                                                UpdateAmount;
                                                              END;

                                                   CaptionML=[ENU=Period;
                                                              NOR=Periode;
                                                              SVE=Period] }
    { 80  ;   ;Price               ;Decimal       ;OnValidate=BEGIN
                                                                IF Price <> 0 THEN BEGIN
                                                                  TESTFIELD(Type, Type::"Price Agreement");
                                                                  TestQuantityBasedOnContractObject;
                                                                  TestMaintenanceExists;
                                                                END;
                                                                UpdateAmount;
                                                              END;

                                                   CaptionML=[ENU=Price;
                                                              NOR=Pris;
                                                              SVE=Pris];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 90  ;   ;Index Percentage    ;Decimal       ;CaptionML=ENU=Index Percentage;
                                                   DecimalPlaces=0:5 }
    { 100 ;   ;Round Amount        ;Decimal       ;CaptionML=[ENU=Round Amount;
                                                              NOR=Avrundet bel›p;
                                                              SVE=Avrundat belopp];
                                                   DecimalPlaces=0:5 }
  }
  KEYS
  {
    {    ;Type,Service Contract No.,Service Object No.,Installment Line No.,Index Date;
                                                   Clustered=Yes }
    {    ;Service Contract No.                     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=%1 is after the %2 (%3) of %4;NOR=%1 er etter %2 (%3) av %4;SVE=%1 „r efter %2 (%3) av %4';
      Text001@1100528601 : TextConst 'ENU=must occur before %1;NOR=m† inntreffe f›r %1;SVE=m†ste intr„ffa f”re %1';
      Text002@1100528602 : TextConst 'ENU=There are %1 lines present';

    LOCAL PROCEDURE UpdateAmount@1100528601();
    VAR
      MaintenanceManagement@1100528601 : Codeunit 11012829;
      Factor@1100528600 : Decimal;
    BEGIN
      Factor := MaintenanceManagement.ConvPeriodToTimesPerYear(Period);
      IF (FORMAT(Period) <> '') AND (Factor <> 0) THEN
        VALIDATE(Amount, Price * Factor)
      ELSE
        VALIDATE(Amount, 0);
    END;

    PROCEDURE UpdatePrice@1100528603();
    VAR
      Currency@1100528602 : Record 4;
      MaintenanceManagement@1100528601 : Codeunit 11012829;
      Factor@1100528600 : Decimal;
    BEGIN
      IF Type <> Type::"Price Agreement" THEN
        EXIT;
      IF NOT IsQuantityBasedOnContractObject THEN
        EXIT;
      Factor := MaintenanceManagement.ConvPeriodToTimesPerYear(Period);
      IF (FORMAT(Period) <> '') AND (Factor <> 0) THEN BEGIN
        Currency.InitRoundingPrecision;
        Price := ROUND(Amount / Factor, Currency."Unit-Amount Rounding Precision");
      END ELSE
        Price := 0;
    END;

    LOCAL PROCEDURE TestMaintenanceExists@1100528600();
    VAR
      ContractObjectMaintenance@1100528600 : Record 11071692;
    BEGIN
      ContractObjectMaintenance.SETRANGE("Service Contract No.", "Service Contract No.");
      ContractObjectMaintenance.SETRANGE("Object No.", "Service Object No.");

      IF NOT ContractObjectMaintenance.ISEMPTY THEN
        ERROR(Text002, ContractObjectMaintenance.TABLECAPTION);
    END;

    PROCEDURE IsQuantityBasedOnContractObject@1100528905() : Boolean;
    VAR
      ServiceObject@1100528900 : Record 11071691;
    BEGIN
      IF NOT ServiceObject.GET("Service Object No.") THEN
        ServiceObject.INIT;
      EXIT(ServiceObject."Quantity Based on" = ServiceObject."Quantity Based on"::"Contract Object");
    END;

    LOCAL PROCEDURE TestQuantityBasedOnContractObject@1100528602();
    VAR
      ServiceObject@1100528900 : Record 11071691;
    BEGIN
      IF NOT ServiceObject.GET("Service Object No.") THEN
        ServiceObject.INIT;
      ServiceObject.TESTFIELD("Quantity Based on", ServiceObject."Quantity Based on"::"Contract Object");
    END;

    BEGIN
    END.
  }
}

