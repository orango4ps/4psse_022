OBJECT Table 11020517 Plant Transport Ride
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 PlantSetupRec.GET;
                 PlantSetupRec.TESTFIELD("Transport Ride Nos.");
                 NoSeriesMgt.InitSeries(PlantSetupRec."Transport Ride Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               Posted := FALSE;
               Status := Status::Open;
               "Created by" := USERID;
               "Created on" := CURRENTDATETIME;

               //**4PS Generated Code. Do Not Change.sn05
               DPA_OnInsert;
               //**4PS Generated Code.en05
             END;

    OnModify=BEGIN
               "Changed by" := USERID;
               "Changed on" := CURRENTDATETIME;
             END;

    OnDelete=VAR
               lvRideLineRec@1100485000 : Record 11020518;
               lvRidePlantOrderLineRec@1100525000 : Record 11020550;
             BEGIN
               IF NOT Posted THEN BEGIN
                 PlantSetupRec.GET;
                 IF PlantSetupRec."Reset Transport Order" = PlantSetupRec."Reset Transport Order"::Interactive THEN BEGIN
                   lvRideLineRec.SETRANGE("Ride No.", "No.");
                   IF lvRideLineRec.FINDFIRST THEN
                     ERROR(Text002,PlantSetupRec.FIELDCAPTION("Reset Transport Order"));
                 END;
               END;

               DeleteCommentLines; //C034604.n

               lvRideLineRec.SETRANGE("Ride No.", "No.");
               lvRideLineRec.DELETEALL(TRUE);

               lvRidePlantOrderLineRec.SETRANGE("Ride No.", "No.");
               lvRidePlantOrderLineRec.DELETEALL;
             END;

    CaptionML=[ENU=Transport Ride;
               NOR=Transporttur;
               SVE=Transportkîrning];
    LookupPageID=Page11071760;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  PlantSetupRec.GET;
                                                                  NoSeriesMgt.TestManual(PlantSetupRec."Transport Ride Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr;
                                                              SVE=Nr] }
    { 20  ;   ;Date                ;Date          ;CaptionML=[ENU=Date;
                                                              NOR=Dato;
                                                              SVE=Datum] }
    { 30  ;   ;Shipping Agent      ;Code10        ;TableRelation="Shipping Agent";
                                                   OnValidate=BEGIN
                                                                VALIDATE("Means of Transport");
                                                                CALCFIELDS("Shipping Agent Name", "External Transport");
                                                              END;

                                                   CaptionML=[ENU=Shipping Agent;
                                                              NOR=Transportõr;
                                                              SVE=Speditîr] }
    { 31  ;   ;Shipping Agent Name ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Shipping Agent".Name WHERE (Code=FIELD(Shipping Agent)));
                                                   CaptionML=[ENU=Shipping Agent Name;
                                                              NOR=Transportõrsnavn;
                                                              SVE=Speditîrsnamn];
                                                   Editable=No }
    { 32  ;   ;External Transport  ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Shipping Agent".External WHERE (Code=FIELD(Shipping Agent)));
                                                   CaptionML=[ENU=External Transport;
                                                              NOR=Ekstern Transport;
                                                              SVE=Extern transport];
                                                   Editable=No }
    { 40  ;   ;Means of Transport  ;Code20        ;TableRelation="Means of Transport".Code WHERE (Shipping Agent=FIELD(Shipping Agent));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Means of Transport Description");
                                                                ModifyTransportOrders;

                                                                GetDefaultPurchasePrice();
                                                              END;

                                                   CaptionML=[ENU=Means of Transport;
                                                              NOR=Transportmidler;
                                                              SVE=TransportsÑtt] }
    { 41  ;   ;Means of Transport Description;Text30;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Means of Transport".Description WHERE (Shipping Agent=FIELD(Shipping Agent),
                                                                                                              Code=FIELD(Means of Transport)));
                                                   CaptionML=[ENU=Means of Transport Description;
                                                              NOR=Beskrivelse av Transportmiddel;
                                                              SVE=Beskrivning av transportmedel];
                                                   Editable=No }
    { 50  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              NOR=Nr-serie;
                                                              SVE=Nr-serie];
                                                   Editable=No }
    { 55  ;   ;Department Code     ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1, "Department Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Avdelingskode;
                                                              SVE=Mottagande avdelningskod];
                                                   CaptionClass='1,1,1' }
    { 60  ;   ;Posted              ;Boolean       ;CaptionML=[ENU=Posted;
                                                              NOR=Bokfõrt;
                                                              SVE=Bokfîrd];
                                                   Editable=No }
    { 61  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=[ENU=Open,Released,Posted;
                                                                    NOR=èpen,Frigitt,Bokfõrt;
                                                                    SVE=ôppen,SlÑppt,Bokfîrd];
                                                   OptionString=Open,Released,Posted;
                                                   Editable=No }
    { 62  ;   ;Printed             ;Integer       ;CaptionML=[ENU=Printed;
                                                              NOR=Skrevet ut;
                                                              SVE=Utskrivet];
                                                   Editable=No }
    { 70  ;   ;Transport Cost      ;Decimal       ;CaptionML=[ENU=Transport Amount,Text;
                                                              NOR=Transportbelõp,Tekst;
                                                              SVE=Transportbelopp,Text];
                                                   MinValue=0 }
    { 75  ;   ;Load/Unload Cost    ;Decimal       ;CaptionML=[ENU=Load/Unload Amount,Text;
                                                              NOR=Lastings-/avlastingsbelõp,Tekst;
                                                              SVE=Lastnings-/avlastningsbelopp,Text];
                                                   MinValue=0 }
    { 80  ;   ;Driver              ;Text50        ;CaptionML=[ENU=Driver;
                                                              NOR=SjÜfõr;
                                                              SVE=Fîrare] }
    { 90  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                "Purchase Amount" := Quantity * "Purchase Price";
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   Description=Purchase Quantity }
    { 95  ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=Enhet;
                                                              SVE=MÜttenhet];
                                                   Description=Purchase Unit }
    { 100 ;   ;Purchase Price      ;Decimal       ;OnValidate=BEGIN
                                                                "Purchase Amount" := Quantity * "Purchase Price";
                                                              END;

                                                   CaptionML=[ENU=Purchase Price;
                                                              NOR=Innkjõpspris;
                                                              SVE=Inkîpspris];
                                                   AutoFormatType=2 }
    { 105 ;   ;Purchase Amount     ;Decimal       ;OnValidate=BEGIN
                                                                IF "Purchase Amount" <> 0 THEN
                                                                  TESTFIELD(Quantity);
                                                                IF Quantity <> 0 THEN
                                                                  "Purchase Price" := "Purchase Amount" / Quantity;
                                                              END;

                                                   CaptionML=[ENU=Purchase Amount;
                                                              NOR=Innkjõpsbelõp;
                                                              SVE=Inkîpsbelopp] }
    { 110 ;   ;Purchase Order      ;Code20        ;TableRelation="Purchase Header".No. WHERE (Document Type=CONST(Order));
                                                   CaptionML=[ENU=Purchase Order;
                                                              NOR=Bestilling;
                                                              SVE=Inkîpsorder];
                                                   Editable=No }
    { 120 ;   ;Created by          ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Created by;
                                                              NOR=Opprettet av;
                                                              SVE=Skapades av];
                                                   Editable=No }
    { 130 ;   ;Created on          ;DateTime      ;CaptionML=[ENU=Created on;
                                                              NOR=Opprettet den;
                                                              SVE=Skapades];
                                                   Editable=No }
    { 140 ;   ;Changed by          ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Changed by;
                                                              NOR=Endret av;
                                                              SVE=éndrat av];
                                                   Editable=No }
    { 150 ;   ;Changed on          ;DateTime      ;CaptionML=[ENU=Changed on;
                                                              NOR=Endret den;
                                                              SVE=éndrat den];
                                                   Editable=No }
    { 160 ;   ;Posted by           ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Posted by;
                                                              NOR=Bokfõrt av;
                                                              SVE=Bokfîrt av];
                                                   Editable=No }
    { 170 ;   ;Posted on           ;DateTime      ;CaptionML=[ENU=Posted on;
                                                              NOR=Bokfõrt den;
                                                              SVE=Bokfîrt den];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PlantSetupRec@1100485000 : Record 11012550;
      NoSeriesMgt@1100485001 : Codeunit 396;
      Text001@1100485003 : TextConst 'ENU=Modify Means of Transport on TO,Modify Shipping Agent and Means of Transport on TO,No modify on TO;NOR=Endre Transportmiddel pÜ TO,endre Transportõr og Transportmiddel pÜ TO,ikke endre pÜ TO;SVE=éndra transportmedel pÜ TILL,éndra speditîr och transportmedel pÜ TILL,éndra inte pÜ TILL';
      Text002@1100485004 : TextConst 'ENU="""%1"" is ''Interactive'' (in Plant Setup), therefore the lines must be deleted first.";NOR="""%1"" er …Interaktiv'' (i maskinoppsett), radene mÜ derfor fjernes fõrst.";SVE="""%1"" Ñr …Interaktiv'' (i MaskininstÑllning), raderna mÜste dÑrfîr fîrst tas bort."';
      Text003@1100485002 : TextConst 'ENU=Delete Lines first before changing Shipping Agent or Means of Transport .;NOR=Fjern rader fõrst fõr du endrer Transportõr eller Transportmiddel.;SVE=Ta bort rader fîrst innan du Ñndrar speditîr eller transportmedel.';
      DimMgt@1100525008 : Codeunit 408;
      DPA_Management@1100000999 : Codeunit 11012783;
      SkipModify@1100528400 : Boolean;

    PROCEDURE AssistEdit@2(IRideOrderXRec@11012000 : Record 11020517) : Boolean;
    VAR
      lvRideOrderRec@1100485000 : Record 11020517;
    BEGIN
      WITH lvRideOrderRec DO BEGIN
        lvRideOrderRec := Rec;
        PlantSetupRec.GET;
        PlantSetupRec.TESTFIELD("Transport Ride Nos.");
        IF NoSeriesMgt.SelectSeries(PlantSetupRec."Transport Ride Nos.",IRideOrderXRec."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := lvRideOrderRec;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE GetDefaultPurchasePrice@1100525000();
    VAR
      lvMeansOFTransRec@1100525000 : Record 11020503;
    BEGIN
      IF ("Shipping Agent" = '') OR ("Means of Transport" = '') OR
         (("Shipping Agent" = xRec."Shipping Agent") AND ("Means of Transport" = xRec."Means of Transport"))
      THEN
        EXIT;

      IF NOT lvMeansOFTransRec.GET("Shipping Agent", "Means of Transport") THEN
        EXIT;

      VALIDATE("Purchase Price", lvMeansOFTransRec."Purchase Price");
      "Unit of Measure" := lvMeansOFTransRec."Unit of Measure";
    END;

    PROCEDURE ModifyTransportOrders@1100485000();
    VAR
      lvRideOrderLine@1100485000 : Record 11020518;
      lvTransOrderRec@1100485001 : Record 11020505;
      TransFuncMgt@1210190000 : Codeunit 11020504;
      lvResetTypeTO@1100485003 : Option;
    BEGIN
      IF Posted THEN
        EXIT;

      IF (CurrFieldNo = 0) OR
        ("Shipping Agent" = xRec."Shipping Agent") AND
        ("Means of Transport" = xRec."Means of Transport")
      THEN
        EXIT;

      PlantSetupRec.GET;
      WITH lvRideOrderLine DO BEGIN
        SETRANGE("Ride No.", "No.");
        SETFILTER("Transport Order No.", '<>%1', '');
        IF FINDSET THEN BEGIN
          CASE PlantSetupRec."Reset Transport Order" OF
            PlantSetupRec."Reset Transport Order"::Interactive:
              CASE STRMENU(Text001) OF
                1: lvResetTypeTO := PlantSetupRec."Reset Transport Order"::MeansOfTrans;
                2: lvResetTypeTO := PlantSetupRec."Reset Transport Order"::ShippingAgent;
                3: lvResetTypeTO := PlantSetupRec."Reset Transport Order"::None;
              END;
            ELSE
              lvResetTypeTO := PlantSetupRec."Reset Transport Order";
          END;

          REPEAT
            lvRideOrderLine.TESTFIELD("Posted (TO)", FALSE);
            lvTransOrderRec.GET("Transport Order No.");
            CASE lvResetTypeTO OF
              PlantSetupRec."Reset Transport Order"::MeansOfTrans:
                BEGIN
                  IF "Shipping Agent" <> xRec."Shipping Agent" THEN
                    ERROR(Text003);
                  lvTransOrderRec."Means of Transport" := "Means of Transport";
                  //lvTransOrderRec.FillMeansTranDefaultCostObject();  //22057.o
                  //lvTransOrderRec.RecalcTransOrderLines(TRUE);       //22057.o
                  lvTransOrderRec.MODIFY;
                  TransFuncMgt.RunCreateTransportCost(lvTransOrderRec, '', TRUE, TRUE, FALSE);  //22057.n
                END;
              PlantSetupRec."Reset Transport Order"::ShippingAgent:
                BEGIN
                  lvTransOrderRec."Shipping Agent" := "Shipping Agent";
                  lvTransOrderRec."Means of Transport" := "Means of Transport";  //* This one too because means of transport is per shipping agent
                  //lvTransOrderRec.FillMeansTranDefaultCostObject();  //22057.o
                  //lvTransOrderRec.RecalcTransOrderLines(TRUE);       //22057.o
                  lvTransOrderRec.MODIFY;
                  TransFuncMgt.RunCreateTransportCost(lvTransOrderRec, '', TRUE, TRUE, FALSE);  //22057.n
                END;
              PlantSetupRec."Reset Transport Order"::None:
                BEGIN
                  ERROR(Text003);
                END;
            END;
          UNTIL NEXT = 0;

        END;
      END;
    END;

    LOCAL PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      IF NOT SkipModify THEN
        MODIFY;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_SetDefaultDpmtFromNoSeries@1100000995(xRecRef@1100525002 : RecordRef);
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      xRecRef.SETTABLE(xRec);
      DPA_Management.SetDepartmentCodeNoSeries(
        TABLENAME,
        "Department Code",
        "No. Series",
        xRec."No. Series" );
    END;

    LOCAL PROCEDURE DPA_OnInsert@1100000991();
    VAR
      Dimension1Code@1100528400 : Code[20];
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      Dimension1Code :=
        DPA_Management.GetNoSeriesDepartmentCode(
          "No. Series",
          xRec."No. Series",
          DATABASE::"Plant Transport Ride");
      IF Dimension1Code <> '' THEN
        "Department Code" := Dimension1Code;

      IF "Department Code" <> '' THEN BEGIN
        SkipModify := TRUE;
        VALIDATE("Department Code");
        SkipModify := FALSE;
      END;
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11020517) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11020517');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Plant Transport Ride", "Department Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Department Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Department Code");
    END;

    PROCEDURE PrintRecords@1100528400() : Boolean;
    VAR
      ReportSelections@1100528401 : Record 77;
      PlantTransportRide@1100528400 : Record 11020517;
    BEGIN
      PlantTransportRide.COPY(Rec);
      IF PlantTransportRide.ISEMPTY THEN
        EXIT(FALSE);

      ReportSelections.SETRANGE(Usage, 1553);
      ReportSelections.SETRANGE("Default Selection", TRUE);
      ReportSelections.FINDSET;

      REPEAT
        REPORT.RUNMODAL(ReportSelections."Report ID", FALSE, TRUE, PlantTransportRide);
      UNTIL ReportSelections.NEXT = 0;

      EXIT(TRUE);
    END;

    PROCEDURE SaveRecordsAsPDFFiles@1100528401(VAR TempEmailAttachment@1100528400 : TEMPORARY Record 11229294) : Boolean;
    VAR
      ReportSelections@1100528402 : Record 77;
      PlantTransportRide@1100528401 : Record 11020517;
      PlantTransportRide2@1100528405 : Record 11020517;
      DocumentMailing@1100528407 : Codeunit 260;
      I@1100528404 : Integer;
      MailBodyNo@1100528300 : Integer;
    BEGIN
      PlantTransportRide.COPY(Rec);
      IF PlantTransportRide.ISEMPTY THEN
        EXIT(FALSE);

      PlantTransportRide.FINDSET;
      MailBodyNo := 121;

      ReportSelections.SETRANGE(Usage, 1553);
      ReportSelections.SETRANGE("Use for Email Attachment", TRUE);
      ReportSelections.SETRANGE("Default Selection", TRUE);

      REPEAT
        ReportSelections.FINDSET;
        I := 0;
        REPEAT
          PlantTransportRide2 := PlantTransportRide;
          PlantTransportRide2.SETRECFILTER;
          ReportSelections.SaveAnyRecordReportAsPdf(PlantTransportRide2, MailBodyNo, PlantTransportRide2."Department Code",
            ReportSelections."Report ID", TRUE, FALSE, PlantTransportRide2.TABLECAPTION, PlantTransportRide2."No.", TempEmailAttachment);
          TempEmailAttachment."Attachment Name" := DocumentMailing.ComposePDFFileName(PlantTransportRide2.TABLECAPTION,
            PlantTransportRide2."No.", I);
          TempEmailAttachment.MODIFY;
          I := I + 1;
        UNTIL ReportSelections.NEXT = 0;

        ReportSelections.AddStandardAttachments(TempEmailAttachment, MailBodyNo, PlantTransportRide2."Department Code", '');
      UNTIL PlantTransportRide.NEXT = 0;

      EXIT(TRUE);
    END;

    PROCEDURE CommentSheet@1100527000(EditableMode@1100529002 : Boolean);
    VAR
      PlantCommentLine@1100529000 : Record 11072666;
    BEGIN
      //C034604
      TESTFIELD("No.");
      PlantCommentLine.EditCommentLines(DATABASE::"Plant Transport Ride", "No.", '', 0, EditableMode);
    END;

    PROCEDURE HasCommentLines@1100527001() : Boolean;
    VAR
      PlantCommentLine@1100529000 : Record 11072666;
    BEGIN
      //C034604
      EXIT(PlantCommentLine.HasCommentLines(DATABASE::"Plant Transport Ride", "No.", '', 0));
    END;

    PROCEDURE DeleteCommentLines@1100527002();
    VAR
      PlantCommentLine@1100529000 : Record 11072666;
    BEGIN
      //C034604
      PlantCommentLine.DeleteComments(DATABASE::"Plant Transport Ride", "No.", '', 0);
    END;

    BEGIN
    END.
  }
}

