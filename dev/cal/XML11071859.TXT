OBJECT XMLport 11071859 Imp. E-Plan Items Adv.OrderTXT
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Import E-Plan material list Advice Order TXT;
    Direction=Import;
    DefaultFieldsValidation=No;
    PreserveWhiteSpace=Yes;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    //Field expired in NAV2015, older version (<8) not supported anymore
                    //EplanSetup.GET;
                    //ApplVersion := EplanSetup.CheckApplVersion(EplanSetup."Item Application Version OLD");
                  END;

    OnPreXMLport=VAR
                   Projrec@1100525004 : Record 11072003;
                   ProjElemRec@1100525003 : Record 11012010;
                   AdviceOrderRec@1100525002 : Record 11012055;
                   LocRec@1100525001 : Record 14;
                   ProjLocRec@1100525000 : Record 11012011;
                 BEGIN
                   ProjCde := "Advice Order Line".GETFILTER("Project No.");
                   IF ProjCde = '' THEN
                     ERROR(Text000);
                   IF NOT Projrec.GET(ProjCde) THEN
                     ERROR(STRSUBSTNO(Text002,ProjCde));

                   ElementMandatoryBln := Projrec."Posting Element Mandatory";

                   ElemCde := "Advice Order Line".GETFILTER(Element);
                   IF (ElemCde = '') AND (ElementMandatoryBln) THEN
                     ERROR(Text001);
                   IF ElemCde <> '' THEN BEGIN
                     IF NOT ProjElemRec.GET(ProjCde,ElemCde) THEN
                       ERROR(STRSUBSTNO(Text003,ElemCde,ProjCde));
                   END;

                   IF NOT EVALUATE(DeliverDate,"Advice Order Line".GETFILTER("Receipt Date")) THEN
                     ERROR(Text004);
                   IF DeliverDate = 0D THEN
                     ERROR(Text004);

                   IF ("Advice Order Line".GETFILTER(Deliver) = '') THEN
                     ERROR(Text005)
                   ELSE
                     DelOpt := "Advice Order Line".GETRANGEMAX(Deliver);

                   DelLocCode := "Advice Order Line".GETFILTER("Ship To Location");
                   IF DelLocCode = '' THEN
                     ERROR(Text006);

                   CASE DelOpt OF
                     DelOpt::Location:
                       IF NOT LocRec.GET(DelLocCode) THEN
                         ERROR(Text006);
                     DelOpt::"Project Location":
                       IF NOT ProjLocRec.GET(ProjCde,DelLocCode) THEN
                         ERROR(Text006);
                   ELSE
                     ERROR(Text005);
                   END;

                   AdviceOrderRec.SETRANGE("Record Type",AdviceOrderRec."Record Type"::Project);
                   AdviceOrderRec.SETRANGE("Project No.",ProjCde);
                   IF AdviceOrderRec.FINDLAST THEN
                     LineNo := AdviceOrderRec."Line No." + 10000
                   ELSE
                     LineNo := 10000;

                   RecordsInserted := 0;
                   RecordsSkipped  := 0;
                   RecordsError    := 0;
                 END;

    OnPostXMLport=BEGIN
                    COMMIT;
                    ErrorRec.SETRANGE("User ID", USERID);
                    ErrorRec.SETRANGE("Source Type", ErrorRec."Source Type"::"E-Plan");
                    IF ErrorRec.FINDFIRST THEN
                      PAGE.RUNMODAL(PAGE::Errors, ErrorRec);

                    MESSAGE(Text010,RecordsInserted,RecordsError,RecordsSkipped);
                  END;

    Format=Fixed Text;
  }
  ELEMENTS
  {
    { [{A509E64C-4880-4263-8D87-12A83014FA63}];  ;Root                ;Element ;Text     }

    { [{4ABB3EE4-12D1-4E7C-9157-1BF5E3FB8F21}];1 ;AdviceOrderLine     ;Element ;Table   ;
                                                  ReqFilterFields=Field1,Field2,Field40,Field31,Field55;
                                                  SourceTable=Table11012055;
                                                  AutoSave=No;
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              "Advice Order Line".INIT;
                                                                              CLEAR(LineTxt);
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 VendorRelationRec@1100525000 : Record 11012313;
                                                                               BEGIN
                                                                                 WITH "Advice Order Line" DO BEGIN

                                                                                 "Scheme Code" := COPYSTR(LineTxt, 1, 14);
                                                                                 IF NOT EVALUATE(QuanDec, COPYSTR(LineTxt, 15, 9)) THEN QuanDec := 0;
                                                                                 "Quantity (Advice)" := QuanDec;
                                                                                 "E-Plan Item" := COPYSTR(LineTxt, 41, 50);
                                                                                 Description := COPYSTR(LineTxt, 95, 50);

                                                                                 IF "Quantity (Advice)" <> 0 THEN BEGIN
                                                                                   AdviceOrderRec.SETRANGE("Record Type", "Record Type"::Project);
                                                                                   AdviceOrderRec.SETRANGE("Project No.", ProjCde);
                                                                                   AdviceOrderRec.SETRANGE("Scheme Code", "Scheme Code");
                                                                                   IF "E-Plan Item" <> '' THEN
                                                                                     AdviceOrderRec.SETRANGE("E-Plan Item", "E-Plan Item")
                                                                                   ELSE
                                                                                     AdviceOrderRec.SETRANGE(Description, Description);
                                                                                   IF (NOT AdviceOrderRec.FINDFIRST) THEN BEGIN
                                                                                     "Record Type" := "Record Type"::Project;
                                                                                     "Project No." := ProjCde;
                                                                                     "Line No." := LineNo;
                                                                                     LineNo := LineNo + 10000;
                                                                                     Element := ElemCde;
                                                                                     IF EplanItemRec.GET("E-Plan Item") THEN BEGIN
                                                                                       IF (EplanItemRec.Vendor <> '') AND (EplanItemRec."Trade Item" <> '') THEN BEGIN
                                                                                         VALIDATE("Vendor (Trade Item)",EplanItemRec.Vendor);
                                                                                         VALIDATE("Trade Item",EplanItemRec."Trade Item");
                                                                                       END ELSE BEGIN
                                                                                         IF (EplanItemRec.Manufacturer <> '') AND (EplanItemRec."Basic Item" <> '') THEN BEGIN
                                                                                           VALIDATE(Manufacturer,EplanItemRec.Manufacturer);
                                                                                           VALIDATE("Basic Item",EplanItemRec."Basic Item");
                                                                                         END ELSE BEGIN
                                                                                           IF EplanItemRec."Navision Item" <> '' THEN
                                                                                             VALIDATE("Item No.",EplanItemRec."Navision Item")
                                                                                           ELSE BEGIN
                                                                                             Description := EplanItemRec.Description;
                                                                                             IF EplanItemRec."Cost Object" <> '' THEN
                                                                                               VALIDATE("Cost Object",EplanItemRec."Cost Object");
                                                                                             VALIDATE("Gross Price (LCY)",EplanItemRec."Gross Purchase Price");
                                                                                             VALIDATE("Discount %",EplanItemRec."Purchase Discount %");
                                                                                             IF VendorRelationRec.GET(EplanItemRec.Vendor) THEN
                                                                                               IF VendorRelationRec."Vendor (Purchase)" <> '' THEN
                                                                                                 VALIDATE(Vendor,VendorRelationRec."Vendor (Purchase)");
                                                                                           END;
                                                                                         END;
                                                                                       END;
                                                                                     END ELSE BEGIN
                                                                                       IF "E-Plan Item" <> '' THEN BEGIN
                                                                                         StoreMessage(STRSUBSTNO(Text009,"Scheme Code","E-Plan Item"));
                                                                                         RecordsError := RecordsError + 1;
                                                                                         currXMLport.SKIP;
                                                                                       END;
                                                                                     END;
                                                                                     CASE DelOpt OF
                                                                                       DelOpt::Location:
                                                                                         VALIDATE(Deliver,Deliver::Location);
                                                                                       DelOpt::"Project Location":
                                                                                         VALIDATE(Deliver,Deliver::"Project Location");
                                                                                     END;
                                                                                     VALIDATE("Ship To Location",DelLocCode);
                                                                                     VALIDATE("Receipt Date",DeliverDate);
                                                                                     INSERT;
                                                                                     RecordsInserted := RecordsInserted + 1;
                                                                                   END ELSE BEGIN
                                                                                     StoreMessage(STRSUBSTNO(Text008,"Scheme Code","E-Plan Item"));
                                                                                     RecordsSkipped := RecordsSkipped + 1;
                                                                                     currXMLport.SKIP;
                                                                                   END;
                                                                                 END ELSE BEGIN
                                                                                   IF (COPYSTR("Scheme Code",1,5) = 'PROJE') OR (COPYSTR("Scheme Code",1,5) = 'GROEP') THEN
                                                                                     currXMLport.SKIP;
                                                                                   StoreMessage(STRSUBSTNO(Text007,"Scheme Code","E-Plan Item"));
                                                                                   RecordsError := RecordsError + 1;
                                                                                   currXMLport.SKIP;
                                                                                 END;

                                                                                 currXMLport.SKIP;

                                                                                 END;
                                                                               END;
                                                                                }

    { [{5A4A62E4-AFB1-4111-B0AF-AEA023FAC542}];2 ;LineTxt             ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=144 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1100525010 : TextConst 'ENU=Enter Projectno. on selectionscreen';
      Text001@1100525009 : TextConst 'ENU=Enter element in selectionscreen';
      Text002@1100525008 : TextConst 'ENU=Projectno %1 does not exist.';
      Text003@1100525007 : TextConst 'ENU=Element %1 does not exist for project %2';
      Text004@1100525006 : TextConst 'ENU=Insert Valid Delivery Date';
      Text005@1100525005 : TextConst 'ENU=Enter delivery on selectionscreen';
      Text006@1100525004 : TextConst 'ENU=Enter valid delivery location on selectionscreen';
      Text007@1100525003 : TextConst 'ENU=Schema %1 E-Plan art. %2 number is 0';
      Text008@1100525002 : TextConst 'ENU=Schema %1 E-Plan art. %2 already exist.';
      Text009@1100525001 : TextConst 'ENU=Schema %1 E-Plan art. %2 does not exist';
      Text010@1100525000 : TextConst 'ENU=%1 lines imported\%2 broken lines\%3 lines skipped';
      EplanItemRec@1100525026 : Record 11012221;
      AdviceOrderRec@1100525025 : Record 11012055;
      ErrorRec@1100525024 : Record 11012051;
      ProjCde@1100525023 : Code[20];
      ElemCde@1100525022 : Code[20];
      DeliverDate@1100525021 : Date;
      DelLocCode@1100525020 : Code[20];
      DelOpt@1100525019 : ' ,Location,Project Location,Service Location';
      LineNo@1100525018 : Integer;
      RecordsInserted@1100525017 : Integer;
      RecordsSkipped@1100525016 : Integer;
      RecordsError@1100525015 : Integer;
      ElementMandatoryBln@1100525014 : Boolean;
      QuanDec@1100525011 : Decimal;

    PROCEDURE StoreMessage@7(lvMess@11012001 : Text[80]);
    VAR
      lvError@11012002 : Integer;
    BEGIN
      WITH ErrorRec DO BEGIN
        SETRANGE("User ID", USERID);
        SETRANGE("Source Type", "Source Type"::"E-Plan");
        IF FINDLAST THEN
          lvError := "Line No." + 1
        ELSE
          lvError := 1;

        INIT;
        "User ID" := USERID;
        "Source Type" := "Source Type"::"E-Plan";
        "Line No." := lvError;
        "Error message" := lvMess;
        "Project No." := ProjCde;
        INSERT;
      END;
    END;

    BEGIN
    {
      CC: Dataport 11012029
    }
    END.
  }
}

