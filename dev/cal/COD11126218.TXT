OBJECT Codeunit 11126218 DSP GMF Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11126715;
    OnRun=VAR
            DSPRequestManagement@1100528300 : Codeunit 11126222;
          BEGIN
            DSPSetup.GET;
            GenericWebServiceSetup.GET;
            GenericWebServiceQueue := Rec;

            CASE "Method Name" OF
              DSPManagement.GetTcGmfWorkOrder: ProcessOutboundWorkOrder;
              ELSE
                ERROR(Text000, FIELDCAPTION("Method Name"), "Method Name");
            END;
          END;

  }
  CODE
  {
    VAR
      DSPSetup@1100528312 : Record 11126726;
      GenericWebServiceQueue@1100528300 : Record 11126715;
      GenericWebServiceSetup@1100528318 : Record 11126728;
      TempBlob@1100528303 : TEMPORARY Record 99008535;
      DSPManagement@1100528301 : Codeunit 11126714;
      DifferentVersionsTxt@1100528317 : TextConst 'ENU=The Disciplines don''t  have the same DSP Version.';
      GmfWorkOrdersSentTxt@1100528316 : TextConst 'ENU=%1 Workorder(s) sent to Go MapForms.';
      NoGmfFormDefinedTxt@1100528305 : TextConst 'ENU=There is no %1 defined for %2 ''%3'' and %4 ''%5'' (%6: %7).';
      Text000@1100528331 : TextConst 'ENU=%1 %2 unknown.';
      DotnetFunctions@1100528302 : Codeunit 11126712;
      FormatAddress@1100528314 : Codeunit 365;
      ObjectImpWorkSheetMgt@1100528322 : Codeunit 11012839;
      GenericWebServiceFunctions@1100528330 : Codeunit 11126711;
      XMLDOMManagement@1100528310 : Codeunit 6224;
      DebugTxt@1100528315 : Text;
      PrefCom@1100528311 : Text;
      PrefCon@1100528308 : Text;
      PrefObj@1100528313 : Text;
      PrefWork@1100528309 : Text;
      DnXmlDocument@1100528307 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      DnXmlNamespaceManager@1100528306 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNamespaceManager";
      DnXmlDisciplinesNode@1100528304 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DnXmlChildNode@1100528321 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DnXmlRootNode@1100528320 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      DnXmlNode@1100528319 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DnBasicHttpBinding@1100528328 : DotNet "'System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.ServiceModel.BasicHttpBinding";
      DnBasicHttpSecurityMode@1100528327 : DotNet "'System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.ServiceModel.BasicHttpSecurityMode";
      DnEndPointAddress@1100528326 : DotNet "'System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.ServiceModel.EndpointAddress";
      DnHttpClientCredentialType@1100528325 : DotNet "'System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.ServiceModel.HttpClientCredentialType";
      DnNetworkCredential@1100528324 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.NetworkCredential";
      DnWSMessageEncoding@1100528323 : DotNet "'System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.ServiceModel.WSMessageEncoding";
      Text001@1100528329 : TextConst 'ENU=Error while sending object %1 to the Web Service.\\Error Code %2';

    PROCEDURE ProcessWorkOrder@1100528309(VAR ServiceOrderObject@1100528301 : Record 11071724;VAR GenericTempTable@1100528304 : TEMPORARY Record 11020579;SelectedLayout@1100528300 : Option);
    VAR
      GenericWebServiceQueue@1100528302 : Record 11126715;
      ServiceOrder@1100528306 : Record 11012823;
      ServiceObject@1100528303 : Record 11071691;
      Counter@1100528305 : Integer;
      VersionNo@1100528308 : Text;
      WorkOrderCount@1100528309 : Integer;
    BEGIN
      GetGlobalVars;
      WorkOrderCount := 0;

      IF (NOT GenericTempTable.FINDSET) THEN
        EXIT;

      REPEAT
        FOR Counter := 1 TO 10 DO BEGIN
          ServiceOrderObject.SETRANGE("Service Order No.", GenericTempTable."Key Code1");
          ServiceOrderObject.SETRANGE("Dsp Seq. No. Gmf", Counter);
          IF (ServiceOrderObject.FINDSET(TRUE)) THEN BEGIN
            ServiceOrder.GET(ServiceOrderObject."Service Order No.");
            ServiceOrder.TESTFIELD("Starting Date");
            DnXmlDocument := DnXmlDocument.XmlDocument();
            XMLDOMManagement.AddRootElementWithPrefix(DnXmlDocument, 'WorkOrderType', '', '', DnXmlRootNode);
            SetXmlMessageTop(ServiceOrder, SelectedLayout, ServiceOrderObject."Dsp Seq. No. Gmf");
            XMLDOMManagement.AddElement(DnXmlRootNode, 'Disciplines', '', DSPManagement.GetNsGmfWorkOrder(DSPManagement.GetTcDsp),
              DnXmlDisciplinesNode);

            SetXmlMessageDiscipline(ServiceOrderObject."Service Order No.", '');
            WorkOrderCount += 1;
            REPEAT
              IF (NOT ServiceObject.GET(ServiceOrderObject."Object No.")) THEN
                ServiceObject.INIT;
              SetXmlMessageDiscipline(ServiceOrderObject."Service Order No.", ServiceOrderObject."Object No.");
              ServiceOrderObject."Dsp Work Order Sent to Gmf" := CURRENTDATETIME;
              ServiceOrderObject.MODIFY;

             IF (DSPSetup."Reference Point Send to GMF" <> 0) THEN
               DSPManagement.UpdateReferencePoint(ServiceOrderObject."Object No.",
                 DSPSetup."Reference Point Send to GMF");
            UNTIL(ServiceOrderObject.NEXT = 0);
            SetXmlMessageEnd(ServiceOrder);

            DotnetFunctions.SerializeToBlob(TempBlob, DnXmlDocument);
            GenericWebServiceQueue.CreateNewQueueEntry(DSPManagement.GetTcGmfWorkOrder, ServiceOrder.RECORDID, 2,
              COMPANYNAME);
            GenericWebServiceQueue."Xml Message" := TempBlob.Blob;
            GenericWebServiceQueue."Related Record ID" := ServiceOrder.RECORDID;
            GenericWebServiceQueue.MODIFY(TRUE);
            GenericWebServiceQueue.AddParameter(0, 0, ServiceObject."Dsp Version No.",
              ServiceObject.FIELDCAPTION("Dsp Version No."));
            GenericWebServiceQueue.AddParameter(0, 1, FORMAT(Counter),
              ServiceOrderObject.FIELDCAPTION("Dsp Seq. No. Gmf"));
          END;
        END;
      UNTIL (GenericTempTable.NEXT = 0);

      IF (GUIALLOWED) THEN MESSAGE(GmfWorkOrdersSentTxt, WorkOrderCount);
    END;

    PROCEDURE SendForms@1100528303(ServiceOrder@1100528300 : Record 11012823);
    VAR
      ServiceOrderObject@1100528301 : Record 11071724;
      DSPGMFWorkOrderSelector@1100528302 : Page 11126976;
    BEGIN
      ServiceOrderObject.SETRANGE("Service Order No.", ServiceOrder."No.");
      DSPGMFWorkOrderSelector.SETTABLEVIEW(ServiceOrderObject);
      DSPGMFWorkOrderSelector.RUNMODAL;
    END;

    LOCAL PROCEDURE "---Locals---"@1100528302();
    BEGIN
    END;

    LOCAL PROCEDURE AddGmfSetToTempTable@1100528314(VAR GenericTempTable@1100528302 : TEMPORARY Record 11020579;ServiceOrder@1100528306 : Record 11012823;ServiceObject@1100528305 : Record 11071691);
    VAR
      DSPGMFSet@1100528303 : Record 11126758;
      DSPGMFSetLine@1100528304 : Record 11126759;
    BEGIN
      DSPGMFSet.SETRANGE(Discipline, ServiceObject."Dsp Discipline");
      DSPGMFSet.SETRANGE(Operator, ServiceObject."Dsp Operator");
      DSPGMFSet.SETRANGE("Version No.", ServiceObject."Dsp Version No.");
      DSPGMFSet.SETFILTER("Starting Date", '<=%1', TODAY);
      IF (NOT DSPGMFSet.FINDSET) THEN BEGIN
        IF (ServiceObject."No." = '') THEN
          EXIT;
        ERROR(NoGmfFormDefinedTxt, DSPGMFSet.TABLECAPTION,
          DSPGMFSet.FIELDCAPTION(Operator), ServiceObject."Dsp Operator",
          DSPGMFSet.FIELDCAPTION(Discipline), ServiceObject."Dsp Discipline",
          DSPGMFSet.FIELDCAPTION("Version No."), ServiceObject."Dsp Version No.");
      END;

      DSPGMFSetLine.SETRANGE(Discipline, DSPGMFSet.Discipline);
      DSPGMFSetLine.SETRANGE(Operator, DSPGMFSet.Operator);
      DSPGMFSetLine.SETRANGE("Version No.", DSPGMFSet."Version No.");
      DSPGMFSetLine.SETRANGE("Starting Date", DSPGMFSet."Starting Date");
      IF (NOT DSPGMFSetLine.FINDSET) THEN
        ERROR(NoGmfFormDefinedTxt, DSPGMFSetLine.TABLECAPTION,
          DSPGMFSet.FIELDCAPTION(Operator), ServiceObject."Dsp Operator",
          DSPGMFSet.FIELDCAPTION(Discipline), ServiceObject."Dsp Discipline",
          DSPGMFSet.FIELDCAPTION("Version No."), ServiceObject."Dsp Version No.");

      REPEAT
        GenericTempTable.INIT;
        GenericTempTable."Key Code1" := ServiceOrder."No.";
        GenericTempTable."Key Code2" := ServiceObject."No.";
        GenericTempTable."Key Code3" := '';
        GenericTempTable."Key Code4" := DSPGMFSetLine."GMF Form Code";
        GenericTempTable.Text1 := DSPGMFSetLine."GMF Form Code";
        GenericTempTable.INSERT;
      UNTIL (DSPGMFSetLine.NEXT = 0);
    END;

    LOCAL PROCEDURE CheckResponse@1100528336(DnXmlRequest@1100528303 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";DnXmlResponse@1100528301 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      ResponseCode@1100528300 : Text;
      Text001@1100528302 : TextConst 'ENU=Error in Object:%1';
    BEGIN
      ResponseCode := DSPManagement.FindNodeResponseCode(DnXmlResponse);
      IF (ResponseCode <> 'OK') THEN
        ERROR(Text001, DnXmlResponse.OuterXml);
    END;

    LOCAL PROCEDURE GetGmfSets@1100528312(VAR GenericTempTable@1100528304 : TEMPORARY Record 11020579;ServiceOderNo@1100528301 : Code[20];ObjectNo@1100528306 : Code[20]);
    VAR
      ServiceOrder@1100528303 : Record 11012823;
      ServiceObject@1100528300 : Record 11071691;
    BEGIN
      GenericTempTable.DELETEALL;
      ServiceOrder.GET(ServiceOderNo);
      IF (NOT ServiceObject.GET(ObjectNo)) THEN
        ServiceObject.INIT;

      AddGmfSetToTempTable(GenericTempTable, ServiceOrder, ServiceObject);
    END;

    LOCAL PROCEDURE GetGlobalVars@1100528300();
    BEGIN
      DSPSetup.GET;
      DSPSetup.TESTFIELD("Dsp Active", TRUE);

      DSPManagement.CreateXmlNamespaceManager(DnXmlNamespaceManager);
      PrefCom := DSPManagement.GetTcPrefixGmfAlgemeen;
      PrefCon := DSPManagement.GetTcPrefixGmfAansluiting;
      PrefObj := DSPManagement.GetTcPrefixGmfObject;
      PrefWork := DSPManagement.GetTcPrefixGmfWorkOrder;
    END;

    LOCAL PROCEDURE GetRegionCode@1100528305(GlobalDimensionCode1@1100528301 : Code[20]) : Text;
    VAR
      DSPGMFRegionDimension@1100528300 : Record 11126761;
    BEGIN
      DSPGMFRegionDimension.SETRANGE("Global Dimension 1 Code", GlobalDimensionCode1);
      IF DSPGMFRegionDimension.FINDFIRST THEN
        EXIT(DSPGMFRegionDimension."GMF Region Code");
      EXIT('');
    END;

    LOCAL PROCEDURE GetServiceOrderObjectDiscipline@1100528313(ServiceOrderObject@1100528300 : Record 11071724) : Integer;
    VAR
      DSPAssignment@1100528301 : Record 11126740;
      ServiceOrder@1100528302 : Record 11012823;
    BEGIN
      ServiceOrder.GET(ServiceOrderObject."Service Order No.");
      DSPAssignment.SETRANGE("Company Name", COMPANYNAME);
      DSPAssignment.SETRANGE("Cluster Id", ServiceOrder."Dsp Cluster Id");
      DSPAssignment.SETRANGE("Connection Object Id", ServiceOrder."Dsp Connection Object Id");
      DSPAssignment.SETRANGE("Service Order No.", ServiceOrderObject."Service Order No.");
      DSPAssignment.SETRANGE("Object No.", ServiceOrderObject."Object No.");
      IF (DSPAssignment.FINDFIRST) THEN
        EXIT(DSPAssignment.Discipline);
      EXIT(0);
    END;

    LOCAL PROCEDURE ProcessOutboundWorkOrder@1100528301();
    VAR
      DSPAssignment@1100528305 : Record 11126740;
      ServiceOrder@1100528300 : Record 11012823;
      ServiceOrderObject@1100528301 : Record 11071724;
      VersionNo@1100528302 : Text;
      SeqNo@1100528303 : Integer;
    BEGIN
      GetGlobalVars;
      VersionNo := GenericWebServiceQueue.GetParameter(0, 0);
      IF (VersionNo = '') THEN //in case the workorder is created based on only a Request
        VersionNo := DSPManagement.GetDspVersionSecond(TRUE);
      ServiceOrder.GET(GenericWebServiceQueue."Related Record ID");

      CASE TRUE OF
        (DSPSetup."Dsp Partner" = DSPManagement.GetTcDspPartnerM10) AND (DSPManagement.GetDspVersionFirst(TRUE)  = VersionNo):
          ProcessOutboundWorkOrderM10V1(VersionNo);
        (DSPSetup."Dsp Partner" = DSPManagement.GetTcDspPartnerM10) AND (DSPManagement.GetDspVersionSecond(TRUE)  = VersionNo):
          ProcessOutboundWorkOrderM10V2(VersionNo);
        (DSPSetup."Dsp Partner" = DSPManagement.GetTcDspPartnerOther) AND (DSPManagement.GetDspVersionFirst(TRUE)  = VersionNo):
          ProcessOutboundWorkOrderV1(VersionNo, ServiceOrder.RECORDID);
        (DSPSetup."Dsp Partner" = DSPManagement.GetTcDspPartnerOther) AND (DSPManagement.GetDspVersionSecond(TRUE)  = VersionNo):
          ProcessOutboundWorkOrderV2(VersionNo, ServiceOrder.RECORDID);
        ELSE ERROR(Text000, DSPAssignment.FIELDCAPTION("Version No."), VersionNo);
      END;

      EVALUATE(SeqNo, GenericWebServiceQueue.GetParameter(0, 1));
      ServiceOrderObject.SETRANGE("Service Order No.", ServiceOrder."No.");
      ServiceOrderObject.SETRANGE("Dsp Seq. No. Gmf", SeqNo);
      ServiceOrderObject.SETFILTER("Dsp Work Order Sent to Gmf", '<>%1', 0DT);
      ServiceOrderObject.SETRANGE("Dsp WorkOrder Processed By Gmf", 0DT);
      IF (ServiceOrderObject.FINDSET(TRUE)) THEN BEGIN
        REPEAT
          ServiceOrderObject."Dsp WorkOrder Processed By Gmf" := CURRENTDATETIME;
          ServiceOrderObject.MODIFY;
          DSPManagement.UpdateReferencePoint(ServiceOrderObject."Object No.", DSPSetup."Reference Point Send to GMF");
        UNTIL (ServiceOrderObject.NEXT = 0);
      END;
    END;

    LOCAL PROCEDURE ProcessOutboundWorkOrderM10V1@1100528315(VersionNo@1100528305 : Text);
    VAR
      ConsumedWebService@1100528300 : Record 11229797;
      ConsumedWebServiceLine@1100528301 : Record 11229798;
      ResponseRec@1100528313 : TEMPORARY Record 99008535;
      RequestRec@1100528312 : TEMPORARY Record 99008535;
      ConsumedWebServiceMgt@1100528304 : Codeunit 11229310;
      LineNo@1100528307 : Integer;
      ServiceName@1100528306 : Code[20];
      VersionTxt@1100528308 : Text;
      DnXmlRequest@1100528303 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      DnXmlResponse@1100528302 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      M10WebClient@1100528309 : DotNet "'Motion10.Dsp.Nav4PSGatewayService, Version=1.33.0.0, Culture=neutral, PublicKeyToken=024bd013665211e9'.Motion10.Dsp.Nav4PSGatewayService.Nav4PSServiceClient";
      M10DspResponseType@1100528311 : DotNet "'Motion10.Dsp.Nav4PSGatewayService, Version=1.33.0.0, Culture=neutral, PublicKeyToken=024bd013665211e9'.Motion10.Dsp.Nav4PSGatewayService.CommonResponseType";
      M10WOrkOrderType@1100528314 : DotNet "'Motion10.Dsp.Nav4PSGatewayService, Version=1.33.0.0, Culture=neutral, PublicKeyToken=024bd013665211e9'.Motion10.Dsp.Nav4PSGatewayService.WorkOrderType";
      Adrestype@1100528310 : DotNet "'Motion10.Dsp.Nav4PSGatewayService, Version=1.33.0.0, Culture=neutral, PublicKeyToken=024bd013665211e9'.Motion10.Dsp.Nav4PSGatewayService.AdresType";
    BEGIN
      VersionTxt := DSPManagement.GetDspVersionAsText(VersionNo);
      ServiceName := DSPManagement.GetDspPartnerServiceName(VersionTxt);
      LineNo := DSPManagement.GetSeqNoAddWorkOrder;
      ConsumedWebService.GET(ServiceName);
      ConsumedWebServiceLine.GET(ServiceName, LineNo);

      M10WOrkOrderType := M10WOrkOrderType.WorkOrderType();
      IF (DSPSetup.Debug) THEN DotnetFunctions.SerializeToFile(M10WOrkOrderType, 'C:\Users\Public\Documents\M10WorkOrder1Empty.xml');
      GenericWebServiceQueue.CALCFIELDS("Xml Message");
      TempBlob.Blob := GenericWebServiceQueue."Xml Message";
      DotnetFunctions.DeSerializeFromBlob(TempBlob, M10WOrkOrderType);
      IF (DSPSetup.Debug) THEN DotnetFunctions.SerializeToFile(M10WOrkOrderType, 'C:\Users\Public\Documents\M10WorkOrder1.xml');

      DnBasicHttpBinding := DnBasicHttpBinding.BasicHttpBinding();
      DnBasicHttpBinding.Name := ConsumedWebService.Code;
      DnBasicHttpBinding.MaxReceivedMessageSize := 2147483647;
      DnBasicHttpBinding.MessageEncoding := DnWSMessageEncoding.Mtom;
      DnBasicHttpBinding.Security.Mode := DnBasicHttpSecurityMode.Transport;
      DnBasicHttpBinding.Security.Transport.ClientCredentialType := DnHttpClientCredentialType.Basic;
      DnEndPointAddress := DnEndPointAddress.EndpointAddress(ConsumedWebService."Web Service URL");

      M10WebClient := M10WebClient.Nav4PSServiceClient(DnBasicHttpBinding, DnEndPointAddress);
      M10WebClient.ClientCredentials.UserName.UserName := ConsumedWebService.Login;
      M10WebClient.ClientCredentials.UserName.Password := ConsumedWebService.Password;
      IF (DSPSetup.Debug) THEN DotnetFunctions.SerializeToFile(M10WOrkOrderType, 'C:\Users\Public\Documents\M10WorkOrder1Request.xml');
      M10DspResponseType := M10WebClient.AddWorkOrder(M10WOrkOrderType);
      IF (DSPSetup.Debug) THEN DotnetFunctions.SerializeToFile(M10DspResponseType, 'C:\Users\Public\Documents\M10WorkOrder1Response.xml');

      DotnetFunctions.SerializeToBlob(RequestRec, M10WOrkOrderType);
      DotnetFunctions.SerializeToBlob(ResponseRec, M10DspResponseType);
      ConsumedWebServiceLine.AddCwsLogLine(RequestRec, ResponseRec, GenericWebServiceQueue."Related Record ID", DSPManagement.GetTcDsp);

      IF (M10DspResponseType.ResponseCode <> 'OK') THEN
        ERROR(Text001, M10WOrkOrderType.ToString, M10DspResponseType.ResponseCode);
    END;

    LOCAL PROCEDURE ProcessOutboundWorkOrderM10V2@1100528311(VersionNo@1100528305 : Text);
    VAR
      ConsumedWebService@1100528313 : Record 11229797;
      ConsumedWebServiceLine@1100528312 : Record 11229798;
      ResponseRec@1100528311 : TEMPORARY Record 99008535;
      RequestRec@1100528310 : TEMPORARY Record 99008535;
      ConsumedWebServiceMgt@1100528309 : Codeunit 11229310;
      LineNo@1100528308 : Integer;
      ServiceName@1100528307 : Code[20];
      VersionTxt@1100528306 : Text;
      DnXmlRequest@1100528301 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      DnXmlResponse@1100528300 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      M10WebClient@1100528304 : DotNet "'Motion10.Dsp.Nav4PSGatewayService134, Version=1.34.0.0, Culture=neutral, PublicKeyToken=024bd013665211e9'.Motion10.Dsp.Nav4PSGatewayService134.Nav4PSServiceClient";
      M10WorkOrderType@1100528303 : DotNet "'Motion10.Dsp.Nav4PSGatewayService134, Version=1.34.0.0, Culture=neutral, PublicKeyToken=024bd013665211e9'.Motion10.Dsp.Nav4PSGatewayService134.WorkOrderType";
      M10DspResponseType@1100528302 : DotNet "'Motion10.Dsp.Nav4PSGatewayService134, Version=1.34.0.0, Culture=neutral, PublicKeyToken=024bd013665211e9'.Motion10.Dsp.Nav4PSGatewayService134.CommonResponseType";
    BEGIN
      VersionTxt := DSPManagement.GetDspVersionAsText(VersionNo);
      ServiceName := DSPManagement.GetDspPartnerServiceName(VersionTxt);
      LineNo := DSPManagement.GetSeqNoAddWorkOrder;
      ConsumedWebService.GET(ServiceName);
      ConsumedWebServiceLine.GET(ServiceName, LineNo);

      M10WorkOrderType := M10WorkOrderType.WorkOrderType();
      IF (DSPSetup.Debug) THEN DotnetFunctions.SerializeToFile(M10WorkOrderType, 'C:\Users\Public\Documents\M10WorkOrder2Empty.xml');
      GenericWebServiceQueue.CALCFIELDS("Xml Message");
      TempBlob.Blob := GenericWebServiceQueue."Xml Message";
      DotnetFunctions.DeSerializeFromBlob(TempBlob, M10WorkOrderType);
      IF (DSPSetup.Debug) THEN DotnetFunctions.SerializeToFile(M10WorkOrderType, 'C:\Users\Public\Documents\M10WorkOrder2.xml');

      DnBasicHttpBinding := DnBasicHttpBinding.BasicHttpBinding();
      DnBasicHttpBinding.Name := ConsumedWebService.Code;
      DnBasicHttpBinding.MaxReceivedMessageSize := 2147483647;
      DnBasicHttpBinding.MessageEncoding := DnWSMessageEncoding.Mtom;
      DnBasicHttpBinding.Security.Mode := DnBasicHttpSecurityMode.Transport;
      DnBasicHttpBinding.Security.Transport.ClientCredentialType := DnHttpClientCredentialType.Basic;
      DnEndPointAddress := DnEndPointAddress.EndpointAddress(ConsumedWebService."Web Service URL");

      M10WebClient := M10WebClient.Nav4PSServiceClient(DnBasicHttpBinding, DnEndPointAddress);
      M10WebClient.ClientCredentials.UserName.UserName := ConsumedWebService.Login;
      M10WebClient.ClientCredentials.UserName.Password := ConsumedWebService.Password;
      IF (DSPSetup.Debug) THEN DotnetFunctions.SerializeToFile(M10WorkOrderType, 'C:\Users\Public\Documents\M10WorkOrder2Request.xml');
      M10DspResponseType := M10WebClient.AddWorkOrder(M10WorkOrderType);
      IF (DSPSetup.Debug) THEN DotnetFunctions.SerializeToFile(M10DspResponseType, 'C:\Users\Public\Documents\M10WorkOrder2Response.xml');

      DotnetFunctions.SerializeToBlob(RequestRec, M10WorkOrderType);
      DotnetFunctions.SerializeToBlob(ResponseRec, M10DspResponseType);
      ConsumedWebServiceLine.AddCwsLogLine(RequestRec, ResponseRec, GenericWebServiceQueue."Related Record ID", DSPManagement.GetTcDsp);

      IF (M10DspResponseType.ResponseCode <> 'OK') THEN
        ERROR(Text001, M10WorkOrderType.ToString, M10DspResponseType.ResponseCode);
    END;

    LOCAL PROCEDURE ProcessOutboundWorkOrderV1@1100528337(DspVersion@1100528300 : Text;RecID@1100528306 : RecordID);
    VAR
      ConsumedWebServiceLine@1100528301 : Record 11229798;
      ResponseRec@1100528313 : TEMPORARY Record 99008535;
      RequestRec@1100528312 : TEMPORARY Record 99008535;
      MessageId@1100528305 : Text;
      DnXmlRequestM10@1100528304 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      DnXmlRequestSoap@1100528303 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      DnXmlResponse@1100528302 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      TargetNode@1100528307 : Text;
    BEGIN
      ConsumedWebServiceLine.GET(DSPManagement.GetTcGmf, DSPManagement.GetSeqNoAddWorkOrder);
      GenericWebServiceQueue.CALCFIELDS("Xml Message");
      RequestRec.Blob := GenericWebServiceQueue."Xml Message";
      DSPManagement.GetXmlDocument(RequestRec, DnXmlRequestM10);
      TargetNode := STRSUBSTNO('//%1:%2', ConsumedWebServiceLine."Prefix Method Namespace", ConsumedWebServiceLine."Request Root Tag");
      DSPManagement.TransformM10toSoap(ConsumedWebServiceLine, '/WorkOrderType', TargetNode, DnXmlRequestM10, DnXmlRequestSoap);
      MessageId := STRSUBSTNO('%1 %2: %3', DSPManagement.GetTcDsp, ConsumedWebServiceLine."Method Name", GenericWebServiceQueue."Entry No.");

      DSPManagement.DebugSaveXml(DSPSetup, DnXmlRequestSoap, ConsumedWebServiceLine."Method Name"+'Request.xml');
      DSPManagement.SendCws(ConsumedWebServiceLine, DnXmlRequestSoap, DnXmlResponse, MessageId);
      DSPManagement.DebugSaveXml(DSPSetup, DnXmlResponse, ConsumedWebServiceLine."Method Name"+'Response.xml');

      DSPManagement.SerializeToBlob(ResponseRec, DnXmlResponse);
      ConsumedWebServiceLine.AddCwsLogLine(RequestRec,ResponseRec,RecID,DSPManagement.GetTcDsp);
      CheckResponse(DnXmlRequestSoap,DnXmlResponse);
    END;

    LOCAL PROCEDURE ProcessOutboundWorkOrderV2@1100528339(DspVersion@1100528301 : Text;RecID@1100528300 : RecordID);
    BEGIN
      ProcessOutboundWorkOrderV1(DspVersion, RecID);
    END;

    LOCAL PROCEDURE SetXmlMessageEnd@1100528307(ServiceOrder@1100528300 : Record 11012823);
    VAR
      DnXmlPlanningNode@1100528307 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      XMLDOMManagement.AddElement(DnXmlRootNode, 'Planning', '', DSPManagement.GetNsGmfWorkOrder(DSPManagement.GetTcDsp), DnXmlPlanningNode);
      XMLDOMManagement.AddElement(DnXmlPlanningNode, 'Medewerker', '', DSPManagement.GetNsGmfWorkOrder(DSPManagement.GetTcDsp), DnXmlNode);
      XMLDOMManagement.AddElement(DnXmlPlanningNode, 'PlanDatum',
        FORMAT(CREATEDATETIME(ServiceOrder."Starting Date", ServiceOrder."Starting Time"), 0, 9),  DSPManagement.GetNsGmfWorkOrder(DSPManagement.GetTcDsp), DnXmlNode);
    END;

    LOCAL PROCEDURE SetXmlMessageTop@1100528304(ServiceOrder@1100528300 : Record 11012823;SelectedLayoutOption@1100528302 : Integer;SeqNo@1100528304 : Integer);
    VAR
      Addition@1100528303 : Text;
      AdditionAsCode@1100528305 : Code[10];
      HouseNo@1100528306 : Text;
      Street@1100528301 : Text;
      DnXmlAddressNode@1100528307 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF (SeqNo = 1) THEN
        XMLDOMManagement.AddElement(DnXmlRootNode, 'ProjectNummer', ServiceOrder."No.",
           DSPManagement.GetNsGmfWorkOrder(DSPManagement.GetTcDsp), DnXmlNode)
      ELSE
        XMLDOMManagement.AddElement(DnXmlRootNode, 'ProjectNummer', STRSUBSTNO('%1--%2', ServiceOrder."No.", SeqNo),
           DSPManagement.GetNsGmfWorkOrder(DSPManagement.GetTcDsp), DnXmlNode);
      IF (SelectedLayoutOption = 2) THEN
        XMLDOMManagement.AddElement(DnXmlRootNode, 'KlicReferentie', ServiceOrder."Dsp Cluster Id",
           DSPManagement.GetNsGmfWorkOrder(DSPManagement.GetTcDsp), DnXmlNode)
      ELSE
        XMLDOMManagement.AddElement(DnXmlRootNode, 'KlicReferentie', '',  DSPManagement.GetNsGmfWorkOrder(DSPManagement.GetTcDsp), DnXmlNode);
      XMLDOMManagement.AddElement(DnXmlRootNode, 'IntegrationId', ServiceOrder."Dsp Connection Object Id",
        DSPManagement.GetNsGmfWorkOrder(DSPManagement.GetTcDsp), DnXmlNode);
      XMLDOMManagement.AddElement(DnXmlRootNode, 'RegionCode', GetRegionCode(ServiceOrder."Global Dimension 1 Code"),
        DSPManagement.GetNsGmfWorkOrder(DSPManagement.GetTcDsp), DnXmlNode);

      FormatAddress.SplitAddress(ServiceOrder.Address, Street, HouseNo, Addition);
      HouseNo := ObjectImpWorkSheetMgt.DetermineHouseNo(ServiceOrder.Address, AdditionAsCode);

      XMLDOMManagement.AddElement(DnXmlRootNode, 'Adres', '',  DSPManagement.GetNsGmfWorkOrder(DSPManagement.GetTcDsp), DnXmlAddressNode);
      XMLDOMManagement.AddElement(DnXmlAddressNode, 'Straat', Street, DSPManagement.GetNsGmfObject, DnXmlNode);
      XMLDOMManagement.AddElement(DnXmlAddressNode, 'HuisNummer', HouseNo, DSPManagement.GetNsGmfObject, DnXmlNode);
      XMLDOMManagement.AddElement(DnXmlAddressNode, 'Toevoeging', AdditionAsCode, DSPManagement.GetNsGmfObject, DnXmlNode);
      XMLDOMManagement.AddElement(DnXmlAddressNode, 'PostCode', ServiceOrder."Post Code", DSPManagement.GetNsGmfObject,
        DnXmlNode);
      XMLDOMManagement.AddElement(DnXmlAddressNode, 'Plaats', ServiceOrder.City, DSPManagement.GetNsGmfObject, DnXmlNode);
    END;

    LOCAL PROCEDURE SetXmlMessageDiscipline@1100528306(ServiceOderNo@1100528300 : Code[20];ObjectNo@1100528301 : Code[20]);
    VAR
      DSPGMFField@1100528309 : Record 11126757;
      GenericTempTable@1100528304 : TEMPORARY Record 11020579;
      SpecLineValue@1100528310 : Text;
      DnXmlDisciplineNode@1100528306 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DnXmlFieldNode@1100528307 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DnXmlFieldsNode@1100528308 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      GetGmfSets(GenericTempTable, ServiceOderNo, ObjectNo);

      GenericTempTable.RESET;
      IF (NOT GenericTempTable.FINDSET) THEN
        EXIT;

      REPEAT
        XMLDOMManagement.AddElement(DnXmlDisciplinesNode, 'Discipline', '',  DSPManagement.GetNsGmfWorkOrder(DSPManagement.GetTcDsp), DnXmlDisciplineNode);
        XMLDOMManagement.AddElement(DnXmlDisciplineNode, 'FormulierCode', GenericTempTable.Text1, DSPManagement.GetNsGmfAansluiting, DnXmlNode);

        DSPGMFField.SETRANGE("Form Code", GenericTempTable.Text1);
        IF (DSPGMFField.FINDSET) THEN BEGIN
          XMLDOMManagement.AddElement(DnXmlDisciplineNode, 'Velden', '', DSPManagement.GetNsGmfAansluiting, DnXmlFieldsNode);
          REPEAT
            XMLDOMManagement.AddElement(DnXmlFieldsNode, 'Veld', '', DSPManagement.GetNsGmfAansluiting, DnXmlFieldNode);
            XMLDOMManagement.AddElement(DnXmlFieldNode, 'Naam', DSPGMFField."Form Field", DSPManagement.GetNsGmfAlgemeen, DnXmlNode);
            SpecLineValue := '';
            IF (DSPGMFField."Fixed Value" <> '') THEN
              SpecLineValue := DSPGMFField."Fixed Value"
            ELSE
              SpecLineValue := DSPManagement.GetServiceOrderSpecLineValue(GenericTempTable."Key Code1", GenericTempTable."Key Code2", DSPGMFField."Base Object Specification");
            IF (SpecLineValue <> '') THEN
              XMLDOMManagement.AddElement(DnXmlFieldNode, 'Waarde', SpecLineValue, DSPManagement.GetNsGmfAlgemeen, DnXmlNode);
          UNTIL (DSPGMFField.NEXT = 0);
        END;
      UNTIL (GenericTempTable.NEXT = 0);
    END;

    EVENT DnXmlDocument@1100528307::NodeInserting@94(sender@1100528301 : Variant;e@1100528300 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT DnXmlDocument@1100528307::NodeInserted@95(sender@1100528301 : Variant;e@1100528300 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT DnXmlDocument@1100528307::NodeRemoving@96(sender@1100528301 : Variant;e@1100528300 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT DnXmlDocument@1100528307::NodeRemoved@97(sender@1100528301 : Variant;e@1100528300 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT DnXmlDocument@1100528307::NodeChanging@98(sender@1100528301 : Variant;e@1100528300 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT DnXmlDocument@1100528307::NodeChanged@99(sender@1100528301 : Variant;e@1100528300 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT DnXmlRootNode@1100528320::NodeInserting@94(sender@1100528301 : Variant;e@1100528300 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT DnXmlRootNode@1100528320::NodeInserted@95(sender@1100528301 : Variant;e@1100528300 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT DnXmlRootNode@1100528320::NodeRemoving@96(sender@1100528301 : Variant;e@1100528300 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT DnXmlRootNode@1100528320::NodeRemoved@97(sender@1100528301 : Variant;e@1100528300 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT DnXmlRootNode@1100528320::NodeChanging@98(sender@1100528301 : Variant;e@1100528300 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT DnXmlRootNode@1100528320::NodeChanged@99(sender@1100528301 : Variant;e@1100528300 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    BEGIN
    END.
  }
}

