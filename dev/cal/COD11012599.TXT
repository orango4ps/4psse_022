OBJECT Codeunit 11012599 Plant-Service Maintenance WS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1100529000 : TextConst 'DEU=Unbekannter Fehler;ENU=Unknown error;NLD=Onbekende fout';
      XMLFormat4PS@1100529001 : Codeunit 11020221;

    [External]
    PROCEDURE CreatePlantServiceOrder@1100528303(noSeries@1100529006 : Code[20];sourceType@1100529007 : Option;startingDate@1100409003 : Text;startingTime@1100528301 : Text;endingDate@1100528201 : Text;endingTime@1100528202 : Text;plantCompany@1100528203 : Text;plantLocation@1100528302 : Code[20];plantType@1100528204 : Code[20];plantNumber@1100528205 : Code[10];orderKind@1100528206 : Code[20];orderType@1100528207 : Code[20];costComponentPlant@1100528208 : Code[20];employeeNo@1100528209 : Code[20];subcontractor@1100529000 : Code[20];description@1100529001 : Text;description2@1100529002 : Text;maintSchemeCodes@1100529003 : Text) processResult : Text;
    VAR
      ServiceOrder@1100529004 : Record 11012823;
      CreateServiceOrdersPlant@1100529005 : Codeunit 11012597;
    BEGIN
      ServiceOrder.INIT;
      ServiceOrder."No." := '';
      ServiceOrder."No. Series" := noSeries;
      ServiceOrder."Source Type" := sourceType;
      XMLFormat4PS.EvaluateDate(startingDate, ServiceOrder."Starting Date");
      XMLFormat4PS.EvaluateTime(startingTime, ServiceOrder."Starting Time");
      XMLFormat4PS.EvaluateDate(endingDate, ServiceOrder."Ending Date");
      XMLFormat4PS.EvaluateTime(endingTime, ServiceOrder."Ending Time");
      ServiceOrder."Plant Company" := plantCompany;
      ServiceOrder."Plant Location" := plantLocation;
      ServiceOrder."Plant Type" := plantType;
      ServiceOrder."Plant Number" := plantNumber;
      ServiceOrder."Order Kind" := orderKind;
      ServiceOrder."Order Type" := orderType;
      ServiceOrder."Cost Component Plant" := costComponentPlant;
      ServiceOrder."Employee No." := employeeNo;
      ServiceOrder.Subcontractor := subcontractor;
      ServiceOrder.Description := description;
      ServiceOrder."Description 2" := description2;

      CLEARLASTERROR;
      CreateServiceOrdersPlant.SetSelectionMaintenanceSchemesFromWS(maintSchemeCodes);
      IF CreateServiceOrdersPlant.RUN(ServiceOrder) THEN BEGIN
        processResult := ServiceOrder."No.";
      END ELSE BEGIN
        processResult := GETLASTERRORTEXT;
        IF processResult = '' THEN
          processResult := Text001;
        processResult := 'ERROR;' + processResult;
      END;
    END;

    [External]
    PROCEDURE AddServiceOrderPlantMaintenanceScheme@1100529001(serviceOrderNo@1100529006 : Code[20];maintSchemeCodes@1100529003 : Text) processResult : Text;
    VAR
      ServiceOrder@1100529004 : Record 11012823;
      CreateServiceOrdersPlant@1100529005 : Codeunit 11012597;
    BEGIN
      CLEARLASTERROR;
      ServiceOrder.GET(serviceOrderNo);
      ServiceOrder."Remote Control" := TRUE;  // Flowfield used for indication 'Only Add Maint Scheme On SO'
      CreateServiceOrdersPlant.SetSelectionMaintenanceSchemesFromWS(maintSchemeCodes);
      IF CreateServiceOrdersPlant.RUN(ServiceOrder) THEN BEGIN
        processResult := ServiceOrder."No.";
      END ELSE BEGIN
        processResult := GETLASTERRORTEXT;
        IF processResult = '' THEN
          processResult := Text001;
        processResult := 'ERROR;' + processResult;
      END;
    END;

    [External]
    PROCEDURE UpdatePlantInspection@1100529003(serviceOrderNo@1100529006 : Code[20];plantType@1100529001 : Code[20];plantNumber@1100529000 : Code[10];maintenanceScheme@1100529003 : Code[20];inspectionType@1100529002 : Code[20];certificateNo@1100529007 : Code[20];certificateDate@1100529008 : Text;inspectedBy@1100529009 : Code[20];inspectedOn@1100529010 : Text;inspectionLocation@1100529011 : Code[20];reportNo@1100529012 : Code[20];inspectionResult@1100529013 : Option) processResult : Text;
    VAR
      GenericTempTable@1100529014 : Record 11020579;
      ProcessImportInspections@1100529015 : Codeunit 11012580;
    BEGIN
      GenericTempTable."Key Code1" := serviceOrderNo;
      GenericTempTable."Key Code2" := plantType;
      GenericTempTable."Key Code3" := plantNumber;
      GenericTempTable."Key Code4" := maintenanceScheme;
      GenericTempTable."Key Code5" := inspectionType;
      GenericTempTable.Code1 := certificateNo;
      GenericTempTable.Code2 := inspectedBy;
      GenericTempTable.Code3 := inspectionLocation;
      GenericTempTable.Code4 := reportNo;
      XMLFormat4PS.EvaluateDate(certificateDate, GenericTempTable.Date1);
      XMLFormat4PS.EvaluateDate(inspectedOn, GenericTempTable.Date2);
      GenericTempTable.Int1 := DATABASE::"SO Plant Maintenance Scheme";
      GenericTempTable.Int2 := inspectionResult;

      CLEARLASTERROR;
      IF ProcessImportInspections.RUN(GenericTempTable) THEN BEGIN
        processResult := serviceOrderNo;
      END ELSE BEGIN
        processResult := GETLASTERRORTEXT;
        IF processResult = '' THEN
          processResult := Text001;
        processResult := 'ERROR;' + processResult;
      END;
    END;

    BEGIN
    END.
  }
}

