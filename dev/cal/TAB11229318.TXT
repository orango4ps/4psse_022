OBJECT Table 11229318 Forecast S-Curve Header
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Forecast S-Curve;
    Description=BI019 UKR C21180;
    LookupPageID=Page11126643;
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod] }
    { 20  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 30  ;   ;Total Percentage    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Forecast S-Curve Lines".Percentage WHERE (Forecast S-Curve Code=FIELD(Code)));
                                                   CaptionML=[ENU=Total Percentage;
                                                              NOR=Totalprosent;
                                                              SVE=Totalprocent];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE GetDistributionBySCurve@1100525000(VAR TempForecastSCurveLines@1100525001 : TEMPORARY Record 11229319;TotalNumberOfPeriods@1100525000 : Integer) : Boolean;
    VAR
      ForecastSCurveLines@1100525003 : Record 11229319;
      TotalNumberOfPoints@1100525002 : Integer;
      PeriodNumber@1100525008 : Integer;
      PointNumber@1100525004 : Integer;
      PeriodStep@1100525005 : Decimal;
      TotalPeriodsPercentage@1100525009 : Decimal;
      WeightCoef@1100525007 : Decimal;
    BEGIN
      IF TotalNumberOfPeriods = 0 THEN
        EXIT(FALSE);
      TempForecastSCurveLines.RESET;
      TempForecastSCurveLines.DELETEALL;

      ForecastSCurveLines.SETRANGE("Forecast S-Curve Code",Code);
      ForecastSCurveLines.FINDSET;
      TotalNumberOfPoints := ForecastSCurveLines.COUNT;
      PeriodStep := TotalNumberOfPoints / TotalNumberOfPeriods;

      //equals
      IF TotalNumberOfPoints = TotalNumberOfPeriods THEN BEGIN
        FOR PeriodNumber := 1 TO TotalNumberOfPeriods DO BEGIN
          TempForecastSCurveLines.INIT;
          TempForecastSCurveLines."Line No." := PeriodNumber;
          TempForecastSCurveLines.Percentage := ForecastSCurveLines.Percentage;
          TempForecastSCurveLines.INSERT;
        END;
      END;

      //less
      IF TotalNumberOfPoints < TotalNumberOfPeriods THEN BEGIN
        PointNumber := 1;  //  percentage point
        FOR PeriodNumber := 1 TO TotalNumberOfPeriods DO BEGIN
          IF PointNumber < PeriodNumber * PeriodStep THEN BEGIN
            PointNumber += 1;
            ForecastSCurveLines.NEXT;
          END;
          TempForecastSCurveLines.INIT;
          TempForecastSCurveLines."Line No." := PeriodNumber;
          TempForecastSCurveLines.Percentage := ForecastSCurveLines.Percentage;
          TempForecastSCurveLines.INSERT;
          TotalPeriodsPercentage +=  TempForecastSCurveLines.Percentage;
        END;
        //calc Weight Coefecient
        CALCFIELDS("Total Percentage");
        WeightCoef := "Total Percentage" / TotalPeriodsPercentage;
        //WeightCoef := ROUND(WightCoef);
        TempForecastSCurveLines.FINDSET;
        REPEAT
          TempForecastSCurveLines.Percentage *= WeightCoef;
          TempForecastSCurveLines.MODIFY;
        UNTIL TempForecastSCurveLines.NEXT=0;
      END;

      //more
      IF TotalNumberOfPoints > TotalNumberOfPeriods THEN BEGIN
        FOR PointNumber := 1 TO TotalNumberOfPoints DO BEGIN
          IF PointNumber >= PeriodNumber * PeriodStep THEN BEGIN
            PeriodNumber += 1;
            TempForecastSCurveLines.INIT;
            TempForecastSCurveLines."Line No." := PeriodNumber;
            TempForecastSCurveLines.Percentage := ForecastSCurveLines.Percentage;
            TempForecastSCurveLines.INSERT;
          END ELSE BEGIN
            TempForecastSCurveLines.Percentage += ForecastSCurveLines.Percentage;
            TempForecastSCurveLines.MODIFY;
          END;
          ForecastSCurveLines.NEXT;
        END;
      END;
      TempForecastSCurveLines.RESET;
      TempForecastSCurveLines.FINDSET;
    END;

    BEGIN
    {
      4PS 27-07-2016 UKR-C21180 OTRO: added distribution by S-Curve (BI019)
    }
    END.
  }
}

