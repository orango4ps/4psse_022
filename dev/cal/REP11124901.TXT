OBJECT Report 11124901 Create Request Invoices
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Rechnungen erstellen (Anfrage);
               ENU=Create Invoices (Request);
               NLD=Facturen (aanvraag) aanmaken];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   ResourcePlanningSetup.GET;
                 END;

    OnPreReport=BEGIN
                  CheckSelections;
                  Counter := 0;
                  IF GUIALLOWED THEN
                    Window.OPEN(Text001 + '\\' + "Resource Req. Collective-List".TABLECAPTION + ' #1##########');
                END;

    OnPostReport=BEGIN
                   IF GUIALLOWED THEN BEGIN
                     Window.CLOSE;
                     MESSAGE(Text002, Counter);
                   END;
                 END;

    UsageCategory=Tasks;
  }
  DATASET
  {
    { 1100529001;0;DataItem;                 ;
               DataItemTable=Table11124904;
               DataItemTableView=SORTING(No.)
                                 WHERE(Status=CONST(Released));
               OnAfterGetRecord=VAR
                                  ResourceReqCollListLine@1100529000 : Record 11124905;
                                  Resource@1100529001 : Record 11229278;
                                  ResourceRequest@1100529002 : Record 11124901;
                                  PrevRequestNo@1100529003 : Code[20];
                                BEGIN
                                  IF GUIALLOWED THEN
                                    Window.UPDATE(1, "No.");
                                  TESTFIELD("Customer No.");
                                  Customer.GET("Customer No.");

                                  ResourceReqCollListLine.SETCURRENTKEY("Collective List No.", "Request No.");
                                  ResourceReqCollListLine.SETRANGE("Collective List No.", "No.");
                                  IF ResourceReqCollListLine.FINDSET THEN BEGIN
                                    InsertSalesHeader("Resource Req. Collective-List");
                                    Counter := Counter + 1;
                                    REPEAT
                                      IF ResourceReqCollListLine."Line Type" = ResourceReqCollListLine."Line Type"::Resource THEN
                                        ResourceReqCollListLine.TESTFIELD("Resource No.");
                                      ResourceReqCollListLine.TESTFIELD(Description);
                                      ResourceReqCollListLine.TESTFIELD("Global Dimension 2 Code");
                                      ResourceReqCollListLine.TESTFIELD(Quantity);
                                      IF ResourceReqCollListLine."Discount %" <> 100 THEN
                                        ResourceReqCollListLine.TESTFIELD(Amount);
                                      IF ResourceReqCollListLine."Line Type" = ResourceReqCollListLine."Line Type"::Resource THEN BEGIN
                                        Resource.GET(ResourceReqCollListLine."Resource No.");
                                        Resource.TESTFIELD("Source No.");
                                        IF Resource.Type = Resource.Type::Plant THEN
                                          Resource.TESTFIELD("Source No. 2");
                                      END;
                                      IF ResourceReqCollListLine."Request No." <> PrevRequestNo THEN BEGIN
                                        ResourceRequest.GET(ResourceReqCollListLine."Request No.");
                                        PrevRequestNo := ResourceReqCollListLine."Request No.";
                                        InsertSalesTextLines(ResourceRequest);
                                      END;
                                      InsertSalesLine(ResourceReqCollListLine, Resource, ResourceRequest."Request Type");
                                    UNTIL ResourceReqCollListLine.NEXT = 0;
                                    IF SalesHeader."Document Type" = SalesHeader."Document Type"::"Credit Memo" THEN
                                      "Invoice Type" := "Invoice Type"::CreditMemo
                                    ELSE
                                      "Invoice Type" := "Invoice Type"::Invoice;
                                    "Invoice Status" := "Invoice Status"::"Temporary";
                                    "Invoice No." := SalesHeader."No.";
                                    Status := Status::Processed;  //Invoiced
                                    MODIFY;
                                    COMMIT;
                                  END;
                                END;

               ReqFilterFields=No.,Customer No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   PostingDate := 0D;
                   DocumentDate := TODAY;
                 END;

      OnQueryClosePage=BEGIN
                         IF CloseAction = ACTION::OK THEN
                           CheckSelections;
                       END;

    }
    CONTROLS
    {
      { 1100529003;0;Container;
                  ContainerType=ContentArea }

      { 1100529002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1100529001;2;Field  ;
                  CaptionML=[DEU=Buchungsdatum;
                             ENU=Posting Date;
                             NLD=Boekingsdatum;
                             NOR=Bokf›ringsdato;
                             SVE=Bokf”ringsdatum];
                  NotBlank=Yes;
                  SourceExpr=PostingDate }

      { 1100529000;2;Field  ;
                  CaptionML=[DEU=Belegdatum;
                             ENU=Document Date;
                             NLD=Documentdatum;
                             NOR=Bilagsdato;
                             SVE=Dokumentdatum];
                  NotBlank=Yes;
                  SourceExpr=DocumentDate }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ResourcePlanningSetup@1100529002 : Record 11124900;
      SalesHeader@1100529003 : Record 36;
      Customer@1100525000 : Record 18;
      Window@1100529006 : Dialog;
      PostingDate@1100529001 : Date;
      DocumentDate@1100529000 : Date;
      Counter@1100529005 : Integer;
      NextSalesLineNo@1100529004 : Integer;
      Text001@1100529008 : TextConst 'DEU=Rechnungen erstellen;ENU=Create Invoices;NLD=Facturen aanmaken;NOR=Opprette fakturaer;SVE=Skapa fakturor';
      Text002@1100529007 : TextConst 'DEU=Erstellte Rechnungen: %1;ENU=Created invoices: %1;NLD=Aangemaakte facturen: %1';
      Text003@1100529009 : TextConst 'DEU=''%1'' muss in Registerkarte ''Optionen'' eingegeben werden.;ENU=%1 must be filled;NLD=%1 moet gevuld worden;NOR=%1 m† fylles ut;SVE=%1 m†ste fyllas';
      AccountNo@1100529010 : Code[20];
      GenProdPostingGroup@1100529011 : Code[10];
      VatProdPostingGroup@1100529012 : Code[10];

    LOCAL PROCEDURE CheckSelections@1100529001();
    BEGIN
      IF PostingDate = 0D THEN
        ERROR(Text003, SalesHeader.FIELDCAPTION("Posting Date"));
      IF DocumentDate = 0D THEN
        ERROR(Text003, SalesHeader.FIELDCAPTION("Document Date"));
    END;

    LOCAL PROCEDURE InsertSalesHeader@1100529000(ResourceReqCollectiveList@1100529004 : Record 11124904);
    BEGIN
      SalesHeader.INIT;
      ResourceReqCollectiveList.CALCFIELDS("Total Amount");
      IF ResourceReqCollectiveList."Total Amount" >= 0 THEN
        SalesHeader."Document Type" := SalesHeader."Document Type"::Invoice
      ELSE
        SalesHeader."Document Type" := SalesHeader."Document Type"::"Credit Memo";
      SalesHeader."No." := '';
      SalesHeader.INSERT(TRUE);
      SalesHeader.TESTFIELD("No.");
      SalesHeader.VALIDATE("Sell-to Customer No.", ResourceReqCollectiveList."Customer No.");
      SalesHeader."Posting Date" := PostingDate;
      SalesHeader.VALIDATE("Document Date", DocumentDate);
      SalesHeader."Collective List No. (Res.Req.)" := ResourceReqCollectiveList."No.";
      IF (Customer."% Labor" > 0) OR (Customer."% to B Account" > 0) THEN BEGIN  //C041307
        SalesHeader."Specific WKA Percentages" := TRUE;
        SalesHeader."% Labor" := Customer."% Labor";
        SalesHeader."% to B Account" := Customer."% to B Account";
      END;
      SalesHeader.MODIFY(TRUE);
      NextSalesLineNo := 10000;
    END;

    LOCAL PROCEDURE InsertSalesLine@1100529002(ResourceReqCollListLine@1100529004 : Record 11124905;Resource@1100529000 : Record 11229278;RequestType@1100529001 : Code[20]);
    VAR
      SalesLine@1100529003 : Record 37;
    BEGIN
      SalesLine.INIT;
      SalesLine."Document Type" := SalesHeader."Document Type";
      SalesLine."Document No." := SalesHeader."No.";
      SalesLine."Line No." := NextSalesLineNo;
      SalesLine."System-Created Entry" := TRUE;
      SalesLine.VALIDATE("Sell-to Customer No.",SalesHeader."Sell-to Customer No.");
      DeterminePostingSetup(RequestType, Resource, ResourceReqCollListLine."Line Type", ResourceReqCollListLine."Item No.");
      IF ResourceReqCollListLine."VAT Prod. Posting Group" <> '' THEN
        VatProdPostingGroup := ResourceReqCollListLine."VAT Prod. Posting Group";
      IF ResourceReqCollListLine."Line Type" = ResourceReqCollListLine."Line Type"::Item THEN
        SalesLine."Item No." := ResourceReqCollListLine."Item No.";
      SalesLine.Type := SalesLine.Type::"G/L Account";
      SalesLine.VALIDATE("No.", AccountNo);
      SalesLine.TESTFIELD("No.");
      IF (Resource.Type = Resource.Type::Plant) AND (Resource.Company = COMPANYNAME) AND
         (ResourceReqCollListLine."Line Type" = ResourceReqCollListLine."Line Type"::Resource)
      THEN BEGIN
        SalesLine.VALIDATE("Plant Type", Resource."Source No.");
        SalesLine.VALIDATE("Plant No.", Resource."Source No. 2");
        SalesLine."Relate to" := SalesLine."Relate to"::"Plant Hours";
      END;
      IF (GenProdPostingGroup <> '') AND (SalesLine."Gen. Prod. Posting Group" <> GenProdPostingGroup) THEN
        SalesLine.VALIDATE("Gen. Prod. Posting Group", GenProdPostingGroup);
      IF (VatProdPostingGroup <> '') AND (SalesLine."VAT Prod. Posting Group" <> VatProdPostingGroup) THEN
        SalesLine.VALIDATE("VAT Prod. Posting Group", VatProdPostingGroup);
      IF (ResourceReqCollListLine."VAT Prod. Posting Group" = '') AND (SalesLine."VAT Prod. Posting Group" = '') THEN
        ResourceReqCollListLine.TESTFIELD("VAT Prod. Posting Group");
      SalesLine.TESTFIELD("VAT Prod. Posting Group");
      SalesLine.VALIDATE("Shortcut Dimension 2 Code", ResourceReqCollListLine."Global Dimension 2 Code");
      SalesLine."Work Order No." := ResourceReqCollListLine."Work Order No.";
      SalesLine.Description := COPYSTR(ResourceReqCollListLine.Description, 1, MAXSTRLEN(SalesLine.Description));
      SalesLine."Description 2" := COPYSTR(ResourceReqCollListLine."Description 2", 1, MAXSTRLEN(SalesLine."Description 2"));
      ResourceReqCollListLine.CALCFIELDS("Starting Date/Time");
      IF ResourceReqCollListLine."Starting Date/Time" <> 0DT THEN
        SalesLine."Execution Date" := DT2DATE(ResourceReqCollListLine."Starting Date/Time");  //C041299
      SalesLine.VALIDATE("Unit of Measure Code", ResourceReqCollListLine."Unit of Measure");
      IF SalesLine."Document Type" = SalesLine."Document Type"::"Credit Memo" THEN
        SalesLine.VALIDATE(Quantity, -ResourceReqCollListLine.Quantity)
      ELSE
        SalesLine.VALIDATE(Quantity, ResourceReqCollListLine.Quantity);
      SalesLine.VALIDATE("Unit Price", ResourceReqCollListLine.Rate);
      SalesLine.VALIDATE("Line Discount %", ResourceReqCollListLine."Discount %");
      SalesLine."Amount (LCY)" := SalesLine.Amount;
      SalesLine.INSERT;
      NextSalesLineNo := NextSalesLineNo + 10000;
    END;

    LOCAL PROCEDURE InsertSalesTextLines@1100529003(ResourceRequest@1100529000 : Record 11124901);
    VAR
      SalesLine@1100529001 : Record 37;
      ResourceReqCollListLine@1100529002 : Record 11124905;
    BEGIN
      SalesLine.INIT;
      SalesLine."Document Type" := SalesHeader."Document Type";
      SalesLine."Document No." := SalesHeader."No.";
      SalesLine."Line No." := NextSalesLineNo;
      SalesLine."System-Created Entry" := TRUE;
      SalesLine.VALIDATE("Sell-to Customer No.",SalesHeader."Sell-to Customer No.");
      SalesLine.Type := SalesLine.Type::" ";
      //
      SalesLine.Description :=
        COPYSTR(ResourceReqCollListLine.FIELDCAPTION("Request No.") + ': ' + ResourceRequest."No.", 1, MAXSTRLEN(SalesLine.Description));
      SalesLine.INSERT;
      NextSalesLineNo := NextSalesLineNo + 10000;
      IF ResourceRequest.Reference <> '' THEN BEGIN
        SalesLine."Line No." := NextSalesLineNo;
        SalesLine.Description :=
          COPYSTR(ResourceRequest.FIELDCAPTION(Reference)  + ': ' + ResourceRequest.Reference, 1, MAXSTRLEN(SalesLine.Description));
        SalesLine.INSERT;
        NextSalesLineNo := NextSalesLineNo + 10000;
      END;
      //
      SalesLine."Line No." := NextSalesLineNo;
      SalesLine.Description := COPYSTR(ResourceRequest.Description, 1, MAXSTRLEN(SalesLine.Description));
      SalesLine.INSERT;
      NextSalesLineNo := NextSalesLineNo + 10000;
    END;

    LOCAL PROCEDURE DeterminePostingSetup@18(RequestType@1100529002 : Code[20];Resource@1100529000 : Record 11229278;LineType@1100528300 : Option;ItemNo@1100528301 : Code[20]);
    VAR
      ResourceReqCollListLine@1100529004 : Record 11124905;
      ResourceRequestType@1100529003 : Record 11124907;
      PlantType@1100529001 : Record 11012551;
      Item@1100528302 : Record 27;
      GenProductPostingGroup@1100529005 : Record 251;
      VATProductPostingGroup@1100529006 : Record 324;
    BEGIN
      AccountNo := '';
      GenProdPostingGroup := '';
      VatProdPostingGroup := '';
      ResourceRequestType.GET(RequestType);

      CASE LineType OF
        ResourceReqCollListLine."Line Type"::Resource:
          BEGIN
            CASE Resource.Type OF
              Resource.Type::Plant:
                BEGIN
                  ResourceRequestType.TESTFIELD("Revenues Account Plant");
                  AccountNo := ResourceRequestType."Revenues Account Plant";
                  IF Resource.Company <> COMPANYNAME THEN
                    PlantType.CHANGECOMPANY(Resource.Company);
                  PlantType.GET(Resource."Source No.");
                  IF GenProductPostingGroup.GET(PlantType."Gen. Prod. Posting Group") THEN
                    GenProdPostingGroup := PlantType."Gen. Prod. Posting Group";
                  IF GenProdPostingGroup = '' THEN
                    GenProdPostingGroup := ResourceRequestType."Gen. Prod. Posting Group Plant";
                  IF VATProductPostingGroup.GET(PlantType."VAT Prod. Posting Group") THEN
                    VatProdPostingGroup := PlantType."VAT Prod. Posting Group";
                  IF VatProdPostingGroup = '' THEN
                    VatProdPostingGroup := ResourceRequestType."VAT Prod. Posting Group Plant"
                END;
              Resource.Type::Employee:
                BEGIN
                  ResourceRequestType.TESTFIELD("Revenues Account Labor");
                  AccountNo := ResourceRequestType."Revenues Account Labor";
                  GenProdPostingGroup := ResourceRequestType."Gen. Prod. Posting Group Labor";
                  VatProdPostingGroup := ResourceRequestType."VAT Prod. Posting Group Labor";
                END;
              Resource.Type::Subcontractor:
                BEGIN
                  ResourceRequestType.TESTFIELD("Revenues Account Subcontract.");
                  AccountNo := ResourceRequestType."Revenues Account Subcontract.";
                  GenProdPostingGroup := ResourceRequestType."Gen. Prod. Posting Group Labor";
                  VatProdPostingGroup := ResourceRequestType."VAT Prod. Posting Group Labor";
                END;
            END;
          END;
        ResourceReqCollListLine."Line Type"::Item:
          BEGIN
            ResourceRequestType.TESTFIELD("Revenues Account Item");
            AccountNo := ResourceRequestType."Revenues Account Item";
            IF ItemNo <> '' THEN BEGIN
              Item.GET(ItemNo);
              GenProdPostingGroup := Item."Gen. Prod. Posting Group";
              VatProdPostingGroup := Item."VAT Prod. Posting Group"
            END;
            IF GenProdPostingGroup = '' THEN
              GenProdPostingGroup := ResourceRequestType."Gen. Prod. Posting Group Item";
            IF VatProdPostingGroup = '' THEN
              VatProdPostingGroup := ResourceRequestType."VAT Prod. Posting Group Item";
          END;
        ResourceReqCollListLine."Line Type"::Transport:
          BEGIN
            ResourceRequestType.TESTFIELD("Revenues Account Transport");
            AccountNo := ResourceRequestType."Revenues Account Transport";
            GenProdPostingGroup := ResourceRequestType."Gen. Prod. Posting Group Trans";
            VatProdPostingGroup := ResourceRequestType."VAT Prod. Posting Group Trans.";
          END;
      END;

      IF VatProdPostingGroup = '' THEN
        VatProdPostingGroup := Customer."VAT Prod. Posting Group";
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

