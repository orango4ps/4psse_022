OBJECT Page 11126876 Estimate Line RAW SF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Estimate Lines;
    SourceTable=Table11125698;
    DelayedInsert=Yes;
    DataCaptionFields=Estimate No.,Estimate Description;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             InitEditable;  //DP01676
           END;

    OnAfterGetRecord=BEGIN
                       GetFilterZeroLines(FALSE);
                       IF NOT EstRec.GET("Estimate No.") THEN
                         EstRec.INIT;
                       //DP01676.sn
                       CostTypeStyleExpr := ("Cost Type"= "Cost Type"::" ") AND (("Production Rate" <> 0) OR ("Net Cost Price" <> 0));  //C060821
                       DescriptionStyleExpr := ("Attached to Line No." <> 0) OR ("Attached to Recipe Line" <> 0);
                       HeaderStyleExpr := ("Recipe Type" = "Recipe Type"::"Recipe Header") OR ("Appliance Type" = "Appliance Type"::EstimateRecipe);
                       GetLineAmounts;
                       //DP01676.en
                     END;

    OnNewRecord=BEGIN
                  InitRecord;  //C041773
                  //DP01676.sn
                  CalculatedUnitPrice := 0;
                  CalculatedCostAmount := 0;
                  ActualUnitPrice := 0;
                  ActualCostAmount := 0;
                  PriceDec := 0;
                  DescriptionStyleExpr := FALSE;
                  HeaderStyleExpr := FALSE;
                  //DP01676.en
                END;

    OnInsertRecord=BEGIN
                     CheckEstEditable;
                     IF NOT FixedOff THEN  //C043451
                       ERROR(Text000);
                     CheckHideZeroLines;  //C025240
                   END;

    OnModifyRecord=BEGIN
                     CheckEstEditable;
                     IF NOT FixedOff THEN  //C043451
                       ERROR(Text001);
                   END;

    OnDeleteRecord=BEGIN
                     CheckEstEditable;
                     IF NOT FixedOff THEN  //C043451
                       ERROR(Text002);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           SetEditable;  //DP01676
                         END;

    ActionList=ACTIONS
    {
      { 1100525016;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525022;1 ;ActionGroup;
                      CaptionML=ENU=Line }
      { 1100525020;2 ;Action    ;
                      CaptionML=ENU=Comments;
                      Image=ViewComments;
                      OnAction=BEGIN
                                 EditCommentRAW;
                               END;
                                }
      { 1100528912;2 ;Action    ;
                      Name=Internal Text;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=&Internal Text;
                      Image=SNInfo;
                      OnAction=BEGIN
                                 EditText(0);
                               END;
                                }
      { 1100528911;2 ;Action    ;
                      Name=External Text;
                      ShortCutKey=Shift+Ctrl+E;
                      CaptionML=ENU=&External Text;
                      Image=SNInfo;
                      OnAction=BEGIN
                                 EditText(1);
                               END;
                                }
      { 1100525014;1 ;ActionGroup;
                      CaptionML=ENU=Functions }
      { 1100525004;2 ;Action    ;
                      Name=Zero Lines;
                      ShortCutKey=F11;
                      CaptionML=ENU=Zero Lines;
                      Image=GetLines;
                      OnAction=BEGIN
                                 HandleZeroLines();
                               END;
                                }
      { 1100525002;2 ;Action    ;
                      Name=Select Recipes;
                      CaptionML=ENU=Select Recipes;
                      Image=GetLines;
                      OnAction=BEGIN
                                 SelectRecipe;
                               END;
                                }
      { 1100529402;2 ;Action    ;
                      Name=ExplodeSet;
                      CaptionML=ENU=&Explode Sets;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeSetLines;  //DP01208
                               END;
                                }
      { 1100529401;2 ;Action    ;
                      CaptionML=ENU=Add Std. P&lant Costs and Items;
                      Image=Costs;
                      OnAction=BEGIN
                                 InsertPlantCostLines;  //DP01208
                               END;
                                }
      { 1100525018;2 ;Action    ;
                      Name=CreateApplianceCode;
                      CaptionML=ENU=Create Appliance Code;
                      OnAction=BEGIN
                                 CreateApplianceCode;  //DP01619
                               END;
                                }
      { 1100528907;2 ;Action    ;
                      Name=Collapse/Expand Recipe;
                      ShortCutKey=Shift+Ctrl+X;
                      CaptionML=ENU=Collapse/Expand Recipe;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 HandleRecipeLevel;  //DP01676
                               END;
                                }
      { 1100528906;2 ;Action    ;
                      Name=AssignToRecipe;
                      ShortCutKey=Shift+Ctrl+R;
                      CaptionML=ENU=Add Line To Recipe;
                      OnAction=BEGIN
                                 AddLineToHeader;  //DP01676
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100528915;2 ;Action    ;
                      Name=Buffer Procedure;
                      ShortCutKey=Shift+Ctrl+B;
                      CaptionML=ENU=Buffer Procedure;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 EstLineFrm@1100409000 : Page 11126877;
                               BEGIN
                                 //DP01676
                                 EstLineFrm.SetSelection("Estimate No.", "Tender Paragraph No.", "Line No.");
                                 EstLineFrm.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100525000;0;Container;
                ContainerType=ContentArea }

    { 1100525007;1;Group  ;
                GroupType=Repeater }

    { 1100525012;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE }

    { 1100528900;2;Field  ;
                SourceExpr="Appliance Type";
                Editable=FixedOff;
                Style=AttentionAccent;
                StyleExpr=DescriptionStyleExpr;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;  //DP01619: generate LineNo before exploding Recipe
                             SetEditable;  //DP01676
                           END;
                            }

    { 1100528901;2;Field  ;
                SourceExpr="Appliance Code";
                Editable=FixedOff;
                OnValidate=BEGIN
                             //DP01676
                             CASE "Appliance Type" OF
                               "Appliance Type"::PlantType:
                                 OnValidatePlantType;
                               "Appliance Type"::PlantSet:
                                 OnValidateSetCode;
                             ELSE
                               CurrPage.UPDATE;
                             END;
                           END;

                OnLookup=BEGIN
                           LookupAppliance;
                           CurrPage.UPDATE;
                         END;
                          }

    { 1210190001;2;Field  ;
                SourceExpr="Recipe Group";
                Visible=FALSE;
                Editable=FALSE }

    { 1210190003;2;Field  ;
                SourceExpr="Recipe No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525101;2;Field  ;
                SourceExpr="Item No.";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525115;2;Field  ;
                SourceExpr=Manufacturer;
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525103;2;Field  ;
                SourceExpr="Basic Item";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525113;2;Field  ;
                SourceExpr="Vendor (Trade Item)";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525111;2;Field  ;
                SourceExpr="Trade Item";
                Visible=FALSE;
                Editable=FixedOff;
                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Trade Item")) THEN
                             CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 1100529900;2;Field  ;
                SourceExpr="Subcontracting Activity";
                Visible=FALSE;
                Editable=FixedOff;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525261;2;Field  ;
                SourceExpr="Plant Type";
                Visible=FALSE;
                Editable=FixedOff;
                OnValidate=BEGIN
                             OnValidatePlantType;  //DP01619
                           END;

                OnLookup=BEGIN
                           LookupPlantType;  //DP01208
                         END;
                          }

    { 1100529400;2;Field  ;
                SourceExpr="Set Code";
                Visible=FALSE;
                Editable=FixedOff;
                OnValidate=BEGIN
                             OnValidateSetCode;  //DP01619
                           END;

                OnLookup=BEGIN
                           LookupSetCode;  //DP01208
                           IF "Set Code" <> xRec."Set Code" THEN BEGIN
                             IF Quantity = 0 THEN Quantity := 1;
                             CurrPage.SAVERECORD;
                             ExplodeSetLines;
                           END;
                         END;
                          }

    { 1100528908;2;Field  ;
                SourceExpr="Cost Object";
                Editable=FixedOff }

    { 1100528909;2;Field  ;
                SourceExpr="Cost Type";
                Editable=FixedOff }

    { 1100528913;2;Field  ;
                SourceExpr=Code;
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525017;2;Field  ;
                SourceExpr=Description;
                Editable=FixedOff;
                Style=AttentionAccent;
                StyleExpr=DescriptionStyleExpr }

    { 1100528919;2;Field  ;
                SourceExpr="Apply Obligation";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525131;2;Field  ;
                SourceExpr="Part Quantity";
                Visible=FALSE }

    { 1100525311;2;Field  ;
                SourceExpr="Ignore Paragraph Quantity";
                Visible=FALSE;
                Editable=FixedOff;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100528500;2;Field  ;
                SourceExpr="Ignore Recipe Quantity";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525019;2;Field  ;
                SourceExpr="Time Quantity";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525021;2;Field  ;
                SourceExpr="Unit of Time";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525006;2;Field  ;
                SourceExpr=Length;
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525008;2;Field  ;
                SourceExpr=Width;
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525010;2;Field  ;
                SourceExpr=Height;
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525023;2;Field  ;
                SourceExpr=Quantity;
                Editable=FixedOff;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525015;2;Field  ;
                SourceExpr="Cumulative Quantity";
                Visible=FALSE }

    { 1100525025;2;Field  ;
                SourceExpr="Unit of Measure";
                Editable=FixedOff }

    { 1100525151;2;Field  ;
                SourceExpr="Line Status";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525035;2;Field  ;
                SourceExpr="Rate Code";
                Visible=FALSE;
                Editable=RateCodeEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           LookupRateCode;
                         END;
                          }

    { 1100529901;2;Field  ;
                SourceExpr="Plant Rates in Hours";
                Visible=FALSE;
                Editable=FixedOff;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100528501;2;Field  ;
                SourceExpr="Subcontracting in Hours";
                Visible=FALSE;
                Editable=FixedOff;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100528914;2;Field  ;
                SourceExpr="Wage Component";
                Visible=FALSE;
                Editable=WageComponentEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525037;2;Field  ;
                SourceExpr=Rate;
                Visible=FALSE }

    { 1100525031;2;Field  ;
                SourceExpr=Norm;
                Visible=FALSE;
                Editable=NormEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525033;2;Field  ;
                SourceExpr="Production Rate";
                Editable=NormEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210190005;2;Field  ;
                SourceExpr="Gross Price";
                Visible=FALSE;
                Editable=GrossPriceEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210190007;2;Field  ;
                SourceExpr="Purchase Discount %";
                Visible=FALSE;
                Editable=PurchaseDiscountEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100528910;2;Field  ;
                SourceExpr="Net Cost Price";
                Visible=FALSE;
                Editable=CostPriceEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100528917;2;Field  ;
                Name=PriceDec;
                CaptionML=ENU=Price;
                SourceExpr=PriceDec;
                Style=Attention;
                StyleExpr=CostTypeStyleExpr;
                OnValidate=BEGIN
                             //DP01676
                             TESTFIELD("Cost Type");  //C060821
                             IF ("Cost Type" = "Cost Type"::Labor) THEN BEGIN
                               TESTFIELD("Rate Code", '');
                               Rate := PriceDec;
                               CalculateTotals;
                             END ELSE BEGIN
                               VALIDATE("Net Cost Price", PriceDec);
                             END;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525263;2;Field  ;
                SourceExpr="Plant Price Type";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525045;2;Field  ;
                SourceExpr="Buy Back Price";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525047;2;Field  ;
                SourceExpr="Buy Back %";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525013;2;Field  ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525005;2;Field  ;
                SourceExpr="VAT %";
                Visible=FALSE }

    { 1100525319;2;Field  ;
                SourceExpr="Service Order No.";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525065;2;Field  ;
                SourceExpr="Project No.";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525067;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525055;2;Field  ;
                SourceExpr="Project Planning Activity Code";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525217;2;Field  ;
                SourceExpr=Vendor;
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525219;2;Field  ;
                SourceExpr="Vendor Name";
                Visible=FALSE }

    { 1100525237;2;Field  ;
                SourceExpr=Subcontractor;
                Visible=FALSE;
                Editable=FixedOff;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525239;2;Field  ;
                SourceExpr="Subcontractor Name";
                Visible=FALSE }

    { 1100525157;2;Field  ;
                SourceExpr="Rate Type";
                Visible=FALSE }

    { 1100525159;2;Field  ;
                SourceExpr="Team Size";
                Visible=FALSE }

    { 1100525155;2;Field  ;
                SourceExpr="Internal Text Block";
                Visible=FALSE }

    { 1100525153;2;Field  ;
                SourceExpr="External Text Block";
                Visible=FALSE }

    { 1100525173;2;Field  ;
                SourceExpr=Weight;
                Visible=FALSE }

    { 1100525185;2;Field  ;
                SourceExpr="Adjustment Factor";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525205;2;Field  ;
                SourceExpr="Document No.";
                Visible=FALSE }

    { 1100525209;2;Field  ;
                SourceExpr="Price Agreement";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525211;2;Field  ;
                SourceExpr="Norm Agreement";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525223;2;Field  ;
                SourceExpr="Removal Contribution";
                Visible=FALSE }

    { 1100525225;2;Field  ;
                SourceExpr="Cost Component";
                Visible=FALSE }

    { 1100525241;2;Field  ;
                SourceExpr="Scheme Code";
                Visible=FALSE }

    { 1100525243;2;Field  ;
                SourceExpr=Comments;
                Visible=FALSE }

    { 1100525245;2;Field  ;
                SourceExpr=Supply;
                Visible=FALSE }

    { 1100525247;2;Field  ;
                SourceExpr="Comments for Logistics";
                Visible=FALSE }

    { 1100525249;2;Field  ;
                SourceExpr="Material Sheet";
                Visible=FALSE }

    { 1100525251;2;Field  ;
                SourceExpr="E-Plan Item";
                Visible=FALSE }

    { 1100525265;2;Field  ;
                SourceExpr="Start Rental Period";
                Visible=FALSE }

    { 1100525267;2;Field  ;
                SourceExpr="End Rental Period";
                Visible=FALSE }

    { 1100525269;2;Field  ;
                SourceExpr="Rental Period Formula";
                Visible=FALSE }

    { 1100525271;2;Field  ;
                SourceExpr="Rental Time Units";
                Visible=FALSE }

    { 1100525074;2;Field  ;
                SourceExpr="Ask for Quote";
                Visible=FALSE }

    { 1100525203;2;Field  ;
                SourceExpr="Purchase Route Reference";
                Visible=FALSE }

    { 1100525273;2;Field  ;
                SourceExpr=Admicode;
                Visible=FALSE }

    { 1100525275;2;Field  ;
                SourceExpr="Purchase Action";
                Visible=FALSE }

    { 1100525279;2;Field  ;
                SourceExpr="Purchase Phase";
                Visible=FALSE }

    { 1100525281;2;Field  ;
                SourceExpr="Purchase Action Status";
                Visible=FALSE }

    { 1100525283;2;Field  ;
                SourceExpr="Purch. Action Appr. Date";
                Visible=FALSE }

    { 1100525285;2;Field  ;
                SourceExpr=Advised;
                Visible=FALSE }

    { 1100525009;2;Field  ;
                SourceExpr="Surcharge % Labor";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525027;2;Field  ;
                SourceExpr="Surcharge % Material";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525029;2;Field  ;
                SourceExpr="Surcharge % Subcontracting";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525069;2;Field  ;
                SourceExpr="Surcharge % Plant";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525076;2;Field  ;
                SourceExpr="Surcharge Amount Labor";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525082;2;Field  ;
                SourceExpr="Surcharge Amount Material";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525084;2;Field  ;
                SourceExpr="Surcharge Amount Subcontr.";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100525088;2;Field  ;
                SourceExpr="Surcharge Amount Plant";
                Visible=FALSE;
                Editable=FixedOff }

    { 1100528920;2;Field  ;
                CaptionML=ENU=Hours;
                SourceExpr=GetCalculatedHours;
                Editable=FALSE }

    { 1100528902;2;Field  ;
                CaptionML=ENU=Calculated Unit Price;
                SourceExpr=CalculatedUnitPrice;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=HeaderStyleExpr }

    { 1100528903;2;Field  ;
                CaptionML=ENU=Calculated Amount;
                SourceExpr=CalculatedCostAmount;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=HeaderStyleExpr }

    { 1100528904;2;Field  ;
                CaptionML=ENU=Actual Unit Price;
                SourceExpr=ActualUnitPrice;
                Editable=HeaderStyleExpr;
                Style=Strong;
                StyleExpr=HeaderStyleExpr;
                OnValidate=BEGIN
                             OnValidateActualPrice;
                           END;
                            }

    { 1100528905;2;Field  ;
                CaptionML=ENU=Actual Amount;
                SourceExpr=ActualCostAmount;
                Editable=HeaderStyleExpr;
                Style=Strong;
                StyleExpr=HeaderStyleExpr;
                OnValidate=BEGIN
                             OnValidateActualAmount;
                           END;
                            }

  }
  CODE
  {
    VAR
      EstRec@1100525000 : Record 11012151;
      DescriptionStyleExpr@1100525001 : Boolean INDATASET;
      FixedOff@1100528901 : Boolean;
      RecipeExpanded@1100528902 : Boolean;
      Text000@1100528906 : TextConst 'ENU=Adding not allowed, Estimate is fixed.';
      Text001@1100528905 : TextConst 'ENU=Changing not allowed, Estimate is fixed.';
      Text002@1100528904 : TextConst 'ENU=Deleting not allowed, Estimate is fixed.';
      Text009@1100528903 : TextConst 'ENU=Add Line first.';
      HeaderStyleExpr@1100528900 : Boolean INDATASET;
      CalculatedUnitPrice@1100528907 : Decimal;
      CalculatedCostAmount@1100528908 : Decimal;
      ActualUnitPrice@1100528909 : Decimal;
      ActualCostAmount@1100528910 : Decimal;
      RateCodeEditable@1100528916 : Boolean INDATASET;
      WageComponentEditable@1100528915 : Boolean INDATASET;
      NormEditable@1100528914 : Boolean INDATASET;
      GrossPriceEditable@1100528913 : Boolean INDATASET;
      PurchaseDiscountEditable@1100528912 : Boolean INDATASET;
      CostPriceEditable@1100528911 : Boolean INDATASET;
      PriceDec@1100528917 : Decimal;
      CostTypeStyleExpr@1100528918 : Boolean INDATASET;

    PROCEDURE HandleZeroLines@1210190002();
    BEGIN
      SetFilterZeroLinesByUser(Rec);  //C025240
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE GetFilterZeroLines@1210190003(lvRefresh@1210190000 : Boolean);
    BEGIN
      GetFilterZeroLinesByUser(Rec);  //C025240
      IF lvRefresh = TRUE THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE SelectRecipe@1100485005();
    BEGIN
      SelectBaseRecipe;  //DP01619
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE EditCommentRAW@1100525007();
    VAR
      CommentLineRAW@1100525000 : Record 11125684;
    BEGIN
      //DP01086
      TESTFIELD("Estimate No.");
      TESTFIELD("Tender Paragraph No.");
      TESTFIELD("Line No.");
      CommentLineRAW."Table No." := DATABASE::"Estimate Line RAW";
      CommentLineRAW."Estimate No." := "Estimate No.";
      CommentLineRAW."Tender Paragraph No." := "Tender Paragraph No.";
      CommentLineRAW."Estimate Line No." := "Line No.";
      CommentLineRAW.EditCommentLines(TRUE);
    END;

    PROCEDURE ExplodeSetLines@1100409001();
    VAR
      Rec2@1100525000 : Record 11125698;
      EstimatePlantMgt@1100409000 : Codeunit 11012232;
    BEGIN
      //DP01208
      Rec2.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(Rec2);
      Rec2.SETFILTER(Rec2."Set Code",'<>%1','');

      EstimatePlantMgt.SkipQuestion;  //db, 04-02-19
      IF EstimatePlantMgt.ExplodeSetLinesToEstLineRAW(Rec2) THEN
        CurrPage.UPDATE(TRUE)
      ELSE
        CurrPage.UPDATE(FALSE);  //DP01958a: show price
    END;

    PROCEDURE InsertPlantCostLines@1100409002();
    VAR
      Rec2@1100525000 : Record 11125698;
      EstimatePlantMgt@1100409000 : Codeunit 11012232;
    BEGIN
      //DP01208
      Rec2.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(Rec2);
      Rec2.SETFILTER(Rec2."Plant Type",'<>%1','');

      EstimatePlantMgt.SkipQuestion;  //db, 04-02-19
      IF EstimatePlantMgt.InsPltCostItmLinesToEstLineRAW(Rec2) THEN
        CurrPage.UPDATE(TRUE)
      ELSE
        CurrPage.UPDATE(FALSE);  //DP01958a: show price
    END;

    LOCAL PROCEDURE LookupRateCode@1100525000();
    VAR
      EstimateRate@1100525000 : Record 11012160;
    BEGIN
      EstimateRate.SETRANGE("Estimate No.", "Estimate No.");
      EstimateRate."Rate Code" := "Rate Code";
      IF PAGE.RUNMODAL(PAGE::"Estimate Rate List RAW", EstimateRate) = ACTION::LookupOK THEN
        VALIDATE("Rate Code",EstimateRate."Rate Code");
    END;

    LOCAL PROCEDURE CreateApplianceCode@1100525003();
    VAR
      EstimateLineRAW@1100525002 : Record 11125698;
    BEGIN
      //DP01676
      EstimateLineRAW.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(EstimateLineRAW);
      IF EstimateLineRAW.FINDSET THEN BEGIN
        REPEAT
          IF EstimateLineRAW."Appliance Type" = EstimateLineRAW."Appliance Type"::Recipe THEN
            CreateApplianceType(1, EstimateLineRAW."Appliance Code", TRUE)
          ELSE
            CreateApplianceType(0, EstimateLineRAW."Appliance Code", TRUE);
        UNTIL EstimateLineRAW.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE OnValidatePlantType@1100525002();
    BEGIN
      //DP01619
      CurrPage.SAVERECORD;
      InsertPlantCostLines;  //DP01208
    END;

    LOCAL PROCEDURE OnValidateSetCode@1100525004();
    BEGIN
      //DP01619
      IF Quantity = 0 THEN Quantity := 1;  //init quantity before explode to fill cumulative quantity on related lines
      CurrPage.SAVERECORD;
      ExplodeSetLines;  //DP01208
    END;

    PROCEDURE CheckEstEditable@3();
    VAR
      EstRec@11012000 : Record 11012151;
    BEGIN
      //C043451
      IF EstRec.GET("Estimate No.") THEN
        FixedOff := NOT EstRec.Fixed;
    END;

    PROCEDURE HandleRecipeLevel@1100528902();
    BEGIN
      //DP01676
      IF RecipeExpanded THEN BEGIN
        SETRANGE("Attached to Recipe Line");
        RecipeExpanded := FALSE;
      END ELSE BEGIN
        SETRANGE("Attached to Recipe Line", 0);
        RecipeExpanded := TRUE;
      END;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE EditText@8(lvType@1210190000 : 'intern,extern');
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      //DP01676
      IF "Line No." = 0 THEN
        ERROR(Text009);
      TextFrm.TextType(lvType);
      TextFrm.SetSelection(DATABASE::"Estimate Line RAW","Estimate No.","Tender Paragraph No.",
        '','','','',"Line No.",0);

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    LOCAL PROCEDURE GetLineAmounts@1100528900();
    BEGIN
      //DP01676
      CalculatedUnitPrice := GetCalculatedUnitPrice;
      CalculatedCostAmount := GetCalculatedCostAmount;
      ActualUnitPrice := GetActualUnitPrice;
      ActualCostAmount := GetActualCostAmount;
      IF (Rate <> 0) OR ("Rate Code" <> '') THEN
        PriceDec := Rate
      ELSE
        PriceDec := "Net Cost Price";
    END;

    LOCAL PROCEDURE OnValidateActualPrice@1100528903();
    VAR
      OldSubTotal@1100528902 : Decimal;
      NewSubTotal@1100528900 : Decimal;
    BEGIN
      //DP01676
      OldSubTotal := GetActualUnitPrice;
      NewSubTotal := ActualUnitPrice;
      IF NOT "Ignore Paragraph Quantity" THEN BEGIN
        OldSubTotal := OldSubTotal * "Part Quantity";
        NewSubTotal := NewSubTotal * "Part Quantity";
      END;
      IF (OldSubTotal <> 0) AND (NewSubTotal <> 0) THEN
        UpdateSurchargeAmountAttachedLines(OldSubTotal, NewSubTotal);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OnValidateActualAmount@1100528901();
    VAR
      OldSubTotal@1100528902 : Decimal;
      NewSubTotal@1100528900 : Decimal;
    BEGIN
      //DP01676
      OldSubTotal := GetActualCostAmount;
      NewSubTotal := ActualCostAmount;
      IF (OldSubTotal <> 0) AND (NewSubTotal <> 0) THEN
        UpdateSurchargeAmountAttachedLines(OldSubTotal, NewSubTotal);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE InitEditable@1100528906();
    BEGIN
      //DP01676
      NormEditable := TRUE;
      RateCodeEditable := TRUE;
      WageComponentEditable := TRUE;
      GrossPriceEditable := TRUE;
      PurchaseDiscountEditable := TRUE;
      CostPriceEditable := TRUE;
    END;

    LOCAL PROCEDURE SetEditable@1100528904();
    BEGIN
      //DP01676
      CheckEstEditable;
      //
      NormEditable := FixedOff;
      RateCodeEditable := FixedOff;
      WageComponentEditable := FixedOff;
      GrossPriceEditable := FixedOff;
      PurchaseDiscountEditable := FixedOff;
      CostPriceEditable := FixedOff;
      //
      IF FixedOff THEN BEGIN
        RateCodeEditable := ("Recipe Type" <> "Recipe Type"::"Recipe Header") AND ("Cost Type" = "Cost Type"::Labor);
        WageComponentEditable := (("Recipe Type" <> "Recipe Type"::"Recipe Header") AND ("Rate Code" <> ''));
        GrossPriceEditable := (("Recipe Type" <> "Recipe Type"::"Recipe Header") AND ("Cost Type" <> "Cost Type"::Labor));
        PurchaseDiscountEditable := (("Recipe Type" <> "Recipe Type"::"Recipe Header") AND ("Cost Type" <> "Cost Type"::Labor));
        CostPriceEditable := (("Recipe Type" <> "Recipe Type"::"Recipe Header") AND ("Cost Type" <> "Cost Type"::Labor));
        //C060821.sn
        IF ("Recipe No." <> '') AND ("Attached to Recipe Line" = 0) THEN  //db, 06-02-20: allow change production rate on recipe header
          NormEditable := TRUE
        ELSE
          NormEditable := FALSE;
        CASE "Cost Type" OF
          "Cost Type"::Subcontracting:
            NormEditable := "Subcontracting in Hours";
          "Cost Type"::Plant:
            NormEditable := "Plant Rates in Hours";
          "Cost Type"::Labor:
            NormEditable := (Rate <> 0);
        END;
        //C060821.en
      END;
    END;

    LOCAL PROCEDURE GetCalculatedHours@1100528905() : Decimal;
    BEGIN
      //C063015
      EXIT("Cumulative Hours");
    END;

    BEGIN
    {
      db, 07-01-17: next property removed (Copy/Paste allowed):
      - IndentationColumnName=RecipeLineIndent
      - IndentationControls=Description
    }
    END.
  }
}

