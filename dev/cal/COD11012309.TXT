OBJECT Codeunit 11012309 Update Alternative Trade Item
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11012744;
    OnRun=VAR
            SourceRecRef@1100528400 : RecordRef;
          BEGIN
            SourceRecRef.GET("Source Record ID");
            CASE SourceRecRef.NUMBER OF
              DATABASE::"Advice Order Line":
                HandleAdviceOrderLine(SourceRecRef, Rec);
              DATABASE::"Estimate Line":
                HandleEstimateLine(SourceRecRef, Rec);
              DATABASE::"Estimate Composition":
                HandleEstimateComposition(SourceRecRef, Rec);
            END;
          END;

  }
  CODE
  {
    VAR
      TradeItem@1100528400 : Record 11012317;
      UpdateAction@1100528401 : 'Fill Alternative with Lowest Price,Fill Alternative with Lowest Price of Vendor,Fill Alternative,Fill Actual';

    LOCAL PROCEDURE HandleAdviceOrderLine@1100528409(SourceRecRef@1100528401 : RecordRef;VAR AlternativeTradeItem@1100528400 : Record 11012744);
    VAR
      AdviceOrderLine@1100528402 : Record 11012055;
    BEGIN
      SourceRecRef.SETTABLE(AdviceOrderLine);
      AdviceOrderLine.VALIDATE("Trade Item", '');
      AdviceOrderLine.VALIDATE("Vendor (Trade Item)", TradeItem.Vendor);
      AdviceOrderLine.VALIDATE("Trade Item", TradeItem."Item Code");
      AdviceOrderLine.TESTFIELD("Unit of Measure", AlternativeTradeItem."Original Unit of Measure Code");
      CASE UpdateAction OF
        UpdateAction::"Fill Alternative with Lowest Price":
          FillAlternativeWithLowestPrice(
            TradeItem.Vendor, TradeItem."Item Code", AdviceOrderLine."Price (LCY)", AdviceOrderLine."Price (FCY)",
            AdviceOrderLine."Amount (LCY)", AdviceOrderLine."Amount (FCY)", AlternativeTradeItem);
        UpdateAction::"Fill Alternative with Lowest Price of Vendor":
          FillAlternativeWithLowestPriceOfVendor(
            TradeItem.Vendor, TradeItem."Item Code", AdviceOrderLine."Price (LCY)", AdviceOrderLine."Price (FCY)",
            AdviceOrderLine."Amount (LCY)", AdviceOrderLine."Amount (FCY)", AlternativeTradeItem);
        UpdateAction::"Fill Alternative":
          FillAlternative(
            TradeItem.Vendor, TradeItem."Item Code", AdviceOrderLine."Price (LCY)", AdviceOrderLine."Price (FCY)",
            AdviceOrderLine."Amount (LCY)", AdviceOrderLine."Amount (FCY)", AlternativeTradeItem);
        UpdateAction::"Fill Actual":
          FillActual(
            TradeItem.Vendor, TradeItem."Item Code", AdviceOrderLine."Price (LCY)", AdviceOrderLine."Price (FCY)",
            AdviceOrderLine."Amount (LCY)", AdviceOrderLine."Amount (FCY)", AlternativeTradeItem);
      END;
    END;

    LOCAL PROCEDURE HandleEstimateLine@1100528412(SourceRecRef@1100528401 : RecordRef;VAR AlternativeTradeItem@1100528400 : Record 11012744);
    VAR
      EstimateLine@1100528402 : Record 11072072;
    BEGIN
      SourceRecRef.SETTABLE(EstimateLine);
      EstimateLine.VALIDATE("Trade Item", '');
      EstimateLine.VALIDATE("Vendor (Trade Item)", TradeItem.Vendor);
      EstimateLine.VALIDATE("Trade Item", TradeItem."Item Code");
      EstimateLine.TESTFIELD("Unit of Measure", AlternativeTradeItem."Original Unit of Measure Code");
      CASE UpdateAction OF
        UpdateAction::"Fill Alternative with Lowest Price":
          FillAlternativeWithLowestPrice(
            TradeItem.Vendor, TradeItem."Item Code", EstimateLine."Net Cost Price", EstimateLine."Net Cost Price (FCY)",
            EstimateLine."Material Cost Amount", EstimateLine."Material Cost Amount (FCY)", AlternativeTradeItem);
        UpdateAction::"Fill Alternative with Lowest Price of Vendor":
          FillAlternativeWithLowestPriceOfVendor(
            TradeItem.Vendor, TradeItem."Item Code", EstimateLine."Net Cost Price", EstimateLine."Net Cost Price (FCY)",
            EstimateLine."Material Cost Amount", EstimateLine."Material Cost Amount (FCY)", AlternativeTradeItem);
        UpdateAction::"Fill Alternative":
          FillAlternative(
            TradeItem.Vendor, TradeItem."Item Code", EstimateLine."Net Cost Price", EstimateLine."Net Cost Price (FCY)",
            EstimateLine."Material Cost Amount", EstimateLine."Material Cost Amount (FCY)", AlternativeTradeItem);
        UpdateAction::"Fill Actual":
          FillActual(
            TradeItem.Vendor, TradeItem."Item Code", EstimateLine."Net Cost Price", EstimateLine."Net Cost Price (FCY)",
            EstimateLine."Material Cost Amount", EstimateLine."Material Cost Amount (FCY)", AlternativeTradeItem);
      END;
    END;

    LOCAL PROCEDURE HandleEstimateComposition@1100528413(SourceRecRef@1100528401 : RecordRef;VAR AlternativeTradeItem@1100528400 : Record 11012744);
    VAR
      EstimateComposition@1100528402 : Record 11020458;
      EstimateComposition2@1100528405 : Record 11020458;
      NewPrice@1100528403 : Decimal;
      NewAmount@1100528404 : Integer;
    BEGIN
      SourceRecRef.SETTABLE(EstimateComposition);
      IF AlternativeTradeItem."Source Record is Compressed" THEN BEGIN
        EstimateComposition2.SETCURRENTKEY("Estimate No.", "Compress No.");
        EstimateComposition2.SETRANGE("Estimate No.", EstimateComposition."Estimate No.");
        EstimateComposition2.SETRANGE("Compress No.", EstimateComposition."Compress No.");
        IF EstimateComposition2.FINDSET THEN
          REPEAT
            EstimateComposition2.VALIDATE("Trade Item", '');
            EstimateComposition2.VALIDATE("Vendor (Trade Item)", TradeItem.Vendor);
            EstimateComposition2.VALIDATE("Trade Item", TradeItem."Item Code");
            EstimateComposition2.TESTFIELD("Unit of Measure", AlternativeTradeItem."Original Unit of Measure Code");
            IF NewPrice = 0 THEN
              NewPrice := EstimateComposition2."Net Cost Price"
            ELSE
              EstimateComposition2.TESTFIELD("Net Cost Price", NewPrice);
            NewAmount += EstimateComposition2."Material Cost Amount";
          UNTIL EstimateComposition2.NEXT = 0;
      END ELSE BEGIN
        EstimateComposition.VALIDATE("Trade Item", '');
        EstimateComposition.VALIDATE("Vendor (Trade Item)", TradeItem.Vendor);
        EstimateComposition.VALIDATE("Trade Item", TradeItem."Item Code");
        EstimateComposition.TESTFIELD("Unit of Measure", AlternativeTradeItem."Original Unit of Measure Code");
        NewPrice := EstimateComposition."Net Cost Price";
        NewAmount := EstimateComposition."Material Cost Amount";
      END;
      CASE UpdateAction OF
        UpdateAction::"Fill Alternative with Lowest Price":
          FillAlternativeWithLowestPrice(
            TradeItem.Vendor, TradeItem."Item Code", NewPrice, 0,
            NewAmount, 0, AlternativeTradeItem);
        UpdateAction::"Fill Alternative with Lowest Price of Vendor":
          FillAlternativeWithLowestPriceOfVendor(
            TradeItem.Vendor, TradeItem."Item Code", NewPrice, 0,
            NewAmount, 0, AlternativeTradeItem);
        UpdateAction::"Fill Alternative":
          FillAlternative(
            TradeItem.Vendor, TradeItem."Item Code", NewPrice, 0,
            NewAmount, 0, AlternativeTradeItem);
        UpdateAction::"Fill Actual":
          FillActual(
            TradeItem.Vendor, TradeItem."Item Code", NewPrice, 0,
            NewAmount, 0, AlternativeTradeItem);
      END;
    END;

    LOCAL PROCEDURE FillAlternativeWithLowestPrice@1100528404(NewVendor@1100528400 : Code[15];NewItemCode@1100528401 : Code[20];NewPrice@1100528402 : Decimal;NewPriceFCY@1100528405 : Decimal;NewAmount@1100528403 : Decimal;NewAmountFCY@1100528406 : Decimal;VAR AlternativeTradeItem@1100528404 : Record 11012744);
    BEGIN
      IF (NewPrice < AlternativeTradeItem."Alternative Price") THEN BEGIN
        AlternativeTradeItem."Alternative Vendor" := NewVendor;
        AlternativeTradeItem."Alternative Item Code" := NewItemCode;
        AlternativeTradeItem."Alternative Price" := NewPrice;
        AlternativeTradeItem."Alternative Price (FCY)" := NewPriceFCY;
        AlternativeTradeItem."Alternative Amount" := NewAmount;
        AlternativeTradeItem."Alternative Amount (FCY)" := NewAmountFCY;
        AlternativeTradeItem.MODIFY;
      END;
    END;

    LOCAL PROCEDURE FillAlternativeWithLowestPriceOfVendor@1100528401(NewVendor@1100528400 : Code[15];NewItemCode@1100528401 : Code[20];NewPrice@1100528402 : Decimal;NewPriceFCY@1100528405 : Decimal;NewAmount@1100528403 : Decimal;NewAmountFCY@1100528406 : Decimal;VAR AlternativeTradeItem@1100528404 : Record 11012744);
    BEGIN
      IF (NewVendor <> AlternativeTradeItem."Alternative Vendor") OR
         (NewPrice < AlternativeTradeItem."Alternative Price")
      THEN BEGIN
        AlternativeTradeItem."Alternative Vendor" := NewVendor;
        AlternativeTradeItem."Alternative Item Code" := NewItemCode;
        AlternativeTradeItem."Alternative Price" := NewPrice;
        AlternativeTradeItem."Alternative Price (FCY)" := NewPriceFCY;
        AlternativeTradeItem."Alternative Amount" := NewAmount;
        AlternativeTradeItem."Alternative Amount (FCY)" := NewAmountFCY;
        AlternativeTradeItem.MODIFY;
      END;
    END;

    LOCAL PROCEDURE FillAlternative@1100528403(NewVendor@1100528400 : Code[15];NewItemCode@1100528401 : Code[20];NewPrice@1100528402 : Decimal;NewPriceFCY@1100528405 : Decimal;NewAmount@1100528403 : Decimal;NewAmountFCY@1100528406 : Decimal;VAR AlternativeTradeItem@1100528404 : Record 11012744);
    BEGIN
      AlternativeTradeItem."Alternative Vendor" := NewVendor;
      AlternativeTradeItem."Alternative Item Code" := NewItemCode;
      AlternativeTradeItem."Alternative Price" := NewPrice;
      AlternativeTradeItem."Alternative Price (FCY)" := NewPriceFCY;
      AlternativeTradeItem."Alternative Amount" := NewAmount;
      AlternativeTradeItem."Alternative Amount (FCY)" := NewAmountFCY;
      AlternativeTradeItem.MODIFY;
    END;

    LOCAL PROCEDURE FillActual@1100528402(NewVendor@1100528400 : Code[15];NewItemCode@1100528401 : Code[20];NewPrice@1100528402 : Decimal;NewPriceFCY@1100528405 : Decimal;NewAmount@1100528403 : Decimal;NewAmountFCY@1100528406 : Decimal;VAR AlternativeTradeItem@1100528404 : Record 11012744);
    BEGIN
      AlternativeTradeItem.Vendor := NewVendor;
      AlternativeTradeItem."Item Code" := NewItemCode;
      AlternativeTradeItem.Price := NewPrice;
      AlternativeTradeItem."Price (FCY)" := NewPriceFCY;
      AlternativeTradeItem.Amount := NewAmount;
      AlternativeTradeItem."Amount (FCY)" := NewAmountFCY;
      AlternativeTradeItem.MODIFY;
    END;

    PROCEDURE SetVariables@1100528400(UpdateAction2@1100528401 : Integer;TradeItem2@1100528400 : Record 11012317);
    BEGIN
      UpdateAction := UpdateAction2;
      TradeItem := TradeItem2;
    END;

    BEGIN
    END.
  }
}

