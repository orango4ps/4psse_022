OBJECT Page 11020327 Plots SF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=&Baunummer;
               ENU=Plots;
               NLD=Bouwnummers;
               NOR=Tegningnr;
               SVE=Ritningar];
    SourceTable=Table11012500;
    PageType=ListPart;
    OnAfterGetRecord=VAR
                       PlotActRec@1100485000 : Record 11020274;
                     BEGIN
                       GetTypeDesc;
                       PlotActRec.SETRANGE("Project No.","Project No.");
                       PlotActRec.SETRANGE("Plot No.","Plot No.");
                       IF PlotActRec.FINDSET THEN BEGIN
                         PlotActRec.CALCSUMS("Planned Hours");
                         PlanHours := PlotActRec."Planned Hours";
                       END ELSE
                         PlanHours := 0;
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  TypeDesc := '';
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=VAR
                     StPlotAct@1100485000 : Record 11020281;
                     PlotAct@1100485001 : Record 11020274;
                   BEGIN
                     IF StPlotAct.FIND('-') THEN BEGIN
                       REPEAT
                         IF (StPlotAct."In total planning" = TRUE) OR (StPlotAct."In drawing planning" = TRUE) THEN BEGIN
                           PlotAct.INIT;
                           PlotAct."Project No."  := "Project No.";
                           PlotAct."Plot No." := "Plot No.";
                           PlotAct."Activity Code" := StPlotAct."Activity Code";
                           PlotAct.Description :=  StPlotAct.Description;
                           PlotAct."Interval in rel  to Reference" := StPlotAct.Interval;
                           PlotAct."In total planning" := StPlotAct."In total planning";
                           PlotAct."In drawing planning" := StPlotAct."In drawing planning";
                           PlotAct."Reference Activity" := StPlotAct."Reference Activity";
                           PlotAct."Average Capacity per Day" := StPlotAct."Average Capacity per Day";
                           PlotAct."Cost Object Filter" := StPlotAct."Cost Object Filter";
                           PlotAct."Production quantity" := StPlotAct."Default Production Quantity";
                           PlotAct."Start/Enddate" := StPlotAct."Start/Enddate";
                           PlotAct.INSERT;
                         END;
                       UNTIL StPlotAct.NEXT = 0;
                     END;
                   END;

    OnDeleteRecord=VAR
                     PlotAct@1100485000 : Record 11020274;
                     PlotEstData@1100485001 : Record 11020273;
                     PlanLinesRec@1100525000 : Record 11020282;
                   BEGIN
                     PlotAct.SETRANGE("Project No.","Project No.");
                     PlotAct.SETRANGE("Plot No.","Plot No.");
                     PlotAct.DELETEALL;

                     PlanLinesRec.SETRANGE("Project No.","Project No.");
                     PlanLinesRec.SETRANGE("Plot No.","Plot No.");
                     PlanLinesRec.DELETEALL;

                     PlotEstData.SETRANGE("Project No.","Project No.");
                     PlotEstData.SETRANGE("Plot No.","Plot No.");
                     PlotEstData.DELETEALL;
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1905562604;1 ;ActionGroup;
                      CaptionML=[DEU=&Baunummer;
                                 ENU=&Plot No.;
                                 NLD=&Bouwnummer;
                                 NOR=&Tegningnr;
                                 SVE=&Ritning nr] }
      { 1902986904;2 ;Action    ;
                      Name=Plot no. comment;
                      CaptionML=[DEU=Bemerkungen Baunummer;
                                 ENU=Plot no. comment;
                                 NLD=Opmerkingen bouwnummer;
                                 NOR=Tegningsnr, kommentar;
                                 SVE=Ritningsnr, kommentar];
                      Image=ViewComments;
                      OnAction=BEGIN
                                 //This functionality was copied from page #11020326. Unsupported part was commented. Please check it.
                                 {CurrPage.SF.PAGE.}
                                 StartComment;
                               END;
                                }
      { 1900772504;2 ;Action    ;
                      Name=Plot No. Estimate Data;
                      CaptionML=[DEU=Kalkulationsdaten pro Baunummer;
                                 ENU=Plot No. Estimate Data;
                                 NLD=Calculatiegegevens per bouwnummer;
                                 NOR=Kalkyledata for tegningsnr.;
                                 SVE=Data f”r ritningsnummerkalkyl];
                      Image=Calculate;
                      OnAction=BEGIN
                                 //This functionality was copied from page #11020326. Unsupported part was commented. Please check it.
                                 {CurrPage.SF.PAGE.}
                                 StartEstimateData;
                               END;
                                }
      { 1902558004;2 ;Action    ;
                      Name=Estimate Data all Plot No.;
                      CaptionML=[DEU=Kalkulationsdaten aller Baunummern;
                                 ENU=Estimate Data all Plot No.;
                                 NLD=Calculatiegegevens alle bouwnummers;
                                 NOR=Kalkyledata for alle tegningsnr.;
                                 SVE=Kalkyldata f”r alla rintningsnr];
                      Image=Calculate;
                      OnAction=BEGIN
                                 //This functionality was copied from page #11020326. Unsupported part was commented. Please check it.
                                 {CurrPage.SF.PAGE.}
                                 StartEstimateDataForAllPlots;
                               END;
                                }
      { 1902218904;2 ;Action    ;
                      Name=Activities;
                      CaptionML=[DEU=Aktivit„ten;
                                 ENU=Activities;
                                 NLD=Activiteiten;
                                 NOR=Aktiviteter;
                                 SVE=Aktiviteter];
                      Image=TaskList;
                      OnAction=BEGIN
                                 //This functionality was copied from page #11020326. Unsupported part was commented. Please check it.
                                 {CurrPage.SF.PAGE.}
                                 StartActivities;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                GroupType=Repeater }

    { 1100485001;2;Field  ;
                SourceExpr="Plot No." }

    { 1100485013;2;Field  ;
                CaptionML=[DEU=Bemerkungen;
                           ENU=Comments present;
                           NLD=Opmerkingen;
                           NOR=Kommentarer finnes;
                           SVE=Kommentarer finns];
                SourceExpr=PlotActMAn.CheckCommentsPresent("Project No.","Plot No.");
                Editable=FALSE }

    { 1100485003;2;Field  ;
                SourceExpr="House Model";
                OnValidate=BEGIN
                             HouseModelOnAfterValidate;
                           END;

                OnLookup=VAR
                           HouseModelFrm@1100485000 : Page 11020337;
                           HouseModelRec@1100485001 : Record 11012501;
                         BEGIN
                           CLEAR(HouseModelFrm);
                           HouseModelRec.SETRANGE("Project No.","Project No.");
                           HouseModelFrm.LOOKUPMODE(TRUE);
                           HouseModelFrm.SETTABLEVIEW(HouseModelRec);
                           IF HouseModelFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             HouseModelFrm.GETRECORD(HouseModelRec);
                             VALIDATE("House Model",HouseModelRec.Model);
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 1100485011;2;Field  ;
                CaptionML=[DEU=Beschreibung;
                           ENU=Description;
                           NLD=Omschrijving;
                           NOR=Beskrivelse;
                           SVE=Beskrivning];
                SourceExpr=TypeDesc;
                Editable=FALSE }

    { 1100525000;2;Field  ;
                CaptionML=[DEU=Zu verwendende Nagel;
                           ENU=Nail Street;
                           NLD=Spijkerstraat;
                           NOR=Nail Street;
                           SVE=Nail Street];
                SourceExpr="Warrenty Certificate No." }

    { 1100485029;2;Field  ;
                CaptionML=[DEU=Geplante Stunden;
                           ENU=Planned Hours;
                           NLD=Geplande Uren;
                           NOR=Planlagte timer;
                           SVE=Planerade timmar];
                SourceExpr=PlanHours;
                Editable=FALSE }

    { 1100485027;2;Field  ;
                SourceExpr="Floor No." }

    { 1100485021;2;Field  ;
                SourceExpr=Principal }

    { 1100485023;2;Field  ;
                SourceExpr="Principal Name" }

    { 1100485025;2;Field  ;
                SourceExpr="Building Price" }

    { 1100485005;2;Field  ;
                SourceExpr="Block No." }

    { 1100485019;2;Field  ;
                SourceExpr="Building Seq." }

    { 1100485009;2;Field  ;
                CaptionML=[DEU=Anzahl pro Block;
                           ENU=No. in Block;
                           NLD=Aantal per blok;
                           NOR=Antall Sperrede;
                           SVE=Antal i sp„rr];
                BlankZero=Yes;
                SourceExpr="Seq. No. in Block" }

    { 1100485007;2;Field  ;
                SourceExpr="Installment Scheme" }

    { 1100485015;2;Field  ;
                SourceExpr="Generate Installments";
                Visible=FALSE }

    { 1100485017;2;Field  ;
                SourceExpr="Installments Generated";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      TypeDesc@1100485000 : Text[30];
      PlotActMAn@1100485002 : Codeunit 11020202;
      PlanHours@1100485001 : Decimal;

    PROCEDURE GetTypeDesc@1100485000();
    VAR
      HouseModelRec@1100485000 : Record 11012501;
    BEGIN
      IF HouseModelRec.GET("Project No.","House Model") THEN
        TypeDesc := HouseModelRec.Description
      ELSE
        TypeDesc := '';
    END;

    PROCEDURE StartEstimateData@1100485001();
    VAR
      EstDataByPlotFrm@1100485000 : Page 11020328;
      EstDataByPlotRec@1100485001 : Record 11020273;
    BEGIN
      EstDataByPlotRec.SETRANGE("Project No.","Project No.");
      EstDataByPlotRec.SETRANGE("Plot No.","Plot No.");
      EstDataByPlotFrm.SETTABLEVIEW(EstDataByPlotRec);
      EstDataByPlotFrm.RUNMODAL;
    END;

    PROCEDURE StartActivities@1100485004();
    VAR
      ActRec@1100485000 : Record 11020274;
      ActFrm@1100485001 : Page 11020333;
    BEGIN
      ActRec.SETRANGE("Project No.","Project No.");
      ActRec.SETRANGE("Plot No.","Plot No.");
      ActFrm.SETTABLEVIEW(ActRec);
      ActFrm.RUNMODAL;
    END;

    PROCEDURE GenerateInstallments@1100485003();
    VAR
      GenerateProjInstallm@1100485000 : Codeunit 11012007;
    BEGIN
      CLEAR(GenerateProjInstallm);
      GenerateProjInstallm.FromPlotNumber("Project No.",Principal,"Plot No.");
    END;

    PROCEDURE StartEstimateDataForAllPlots@1100485005();
    VAR
      EstDataByPlotFrm@1100485000 : Page 11020328;
      EstDataByPlotRec@1100485001 : Record 11020273;
    BEGIN
      EstDataByPlotRec.SETRANGE("Project No.","Project No.");
      EstDataByPlotFrm.SETTABLEVIEW(EstDataByPlotRec);
      EstDataByPlotFrm.RUNMODAL;
    END;

    PROCEDURE StartComment@1100485002();
    BEGIN
      PlotActMAn.StartComment("Project No.","Plot No.");
    END;

    LOCAL PROCEDURE HouseModelOnAfterValidate@19046091();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      GetTypeDesc;
    END;

    BEGIN
    END.
  }
}

