OBJECT Table 11125859 Reference Tool Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Reference Tool Line;
               NOR=Referanseverkt›yrad;
               SVE=Referensverktygsrad];
  }
  FIELDS
  {
    { 10  ;   ;Reference No.       ;Code20        ;TableRelation="Reference Tool Header";
                                                   CaptionML=[ENU=Reference No.;
                                                              NOR=Referansenr;
                                                              SVE=Referensnummer] }
    { 20  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF (Type <> xRec.Type) AND ("No." <> '') THEN
                                                                  VALIDATE("No.", '');
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=Project,,,,,,,,,,,Service Contract;
                                                                    NOR=Prosjekt,,,,,,,,,,,Servicekontrakt;
                                                                    SVE=Projekt,,,,,,,,,,,Servicekontrakt];
                                                   OptionString=Project,,,,,,,,,,,ServiceContract }
    { 30  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Project)) Job WHERE (Available as Reference=FILTER(<>Never))
                                                                 ELSE IF (Type=CONST(ServiceContract)) Service-Contract WHERE (Available as Reference=FILTER(<>Never));
                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr;
                                                              SVE=Nr];
                                                   NotBlank=Yes }
  }
  KEYS
  {
    {    ;Reference No.,Type,No.                  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Proj@1210190002 : Record 11072003;
      ServContr@1210190001 : Record 11012812;

    PROCEDURE GetAvailableAsReferenceText@1210190003() : Text[50];
    BEGIN
      IF "No." <> '' THEN BEGIN
        CASE Type OF
          Type::Project:
            BEGIN
              ReadProject();
              EXIT(FORMAT(Proj."Available as Reference"));
            END;
          Type::ServiceContract:
            BEGIN
              ReadServContract();
              EXIT(FORMAT(ServContr."Available as Reference"));
            END;
        END;
      END;
      EXIT('');
    END;

    PROCEDURE GetDescription@1210190001() : Text[100];
    BEGIN
      IF "No." <> '' THEN BEGIN
        CASE Type OF
          Type::Project:
            BEGIN
              ReadProject();
              EXIT(Proj.Description);
            END;
          Type::ServiceContract:
            BEGIN
              ReadServContract();
              EXIT(ServContr.Description);
            END;
        END;
      END;
      EXIT('');
    END;

    PROCEDURE GetCity@1210190007() : Text[50];
    BEGIN
      IF "No." <> '' THEN BEGIN
        CASE Type OF
          Type::Project:
            BEGIN
              ReadProject();
              EXIT(Proj.City);
            END;
          Type::ServiceContract:
            BEGIN
              ReadServContract();
              EXIT(ServContr.City);
            END;
        END;
      END;
      EXIT('');
    END;

    PROCEDURE GetCustomerNo@1210190008() : Code[20];
    BEGIN
      IF "No." <> '' THEN BEGIN
        CASE Type OF
          Type::Project:
            BEGIN
              ReadProject();
              EXIT(Proj."Bill-to Customer No.");
            END;
          Type::ServiceContract:
            BEGIN
              ReadServContract();
              EXIT(ServContr."Customer No.");
            END;
        END;
      END;
      EXIT('');
    END;

    PROCEDURE GetCustomerName@1210190009() : Text[100];
    BEGIN
      IF "No." <> '' THEN BEGIN
        CASE Type OF
          Type::Project:
            BEGIN
              ReadProject();
              EXIT(Proj."Principal Name");
            END;
          Type::ServiceContract:
            BEGIN
              ReadServContract();
              EXIT(ServContr.Name);
            END;
        END;
      END;
      EXIT('');
    END;

    PROCEDURE GetStartingDate@1210190010() : Date;
    BEGIN
      IF "No." <> '' THEN BEGIN
        CASE Type OF
          Type::Project:
            BEGIN
              ReadProject();
              EXIT(Proj."Starting Date");
            END;
          Type::ServiceContract:
            BEGIN
              ReadServContract();
              EXIT(ServContr."Starting Date");
            END;
        END;
      END;
      EXIT(0D);
    END;

    PROCEDURE GetContractAmount@1210190011() : Decimal;
    BEGIN
      IF "No." <> '' THEN BEGIN
        CASE Type OF
          Type::Project:
            BEGIN
              ReadProject();
              EXIT(Proj."Contract Amount");
            END;
          Type::ServiceContract:
            BEGIN
              ReadServContract();
              EXIT(ServContr."Contract Amount OLD");
            END;
        END;
      END;
      EXIT(0);
    END;

    PROCEDURE ReadProject@1210190004();
    BEGIN
      IF "No." <> Proj."No." THEN BEGIN
        IF NOT Proj.GET("No.") THEN
          Proj.INIT
        ELSE
          Proj.CALCFIELDS("Principal Name", "Contract Amount");
      END;
    END;

    PROCEDURE ReadServContract@1210190005();
    BEGIN
      IF "No." <> ServContr."No." THEN BEGIN
        IF NOT ServContr.GET("No.") THEN
          ServContr.INIT
        ELSE
          ServContr.CALCFIELDS(City, Name);
      END;
    END;

    PROCEDURE ConvertTypeToRefCritLinRefType@1210190002(LineType@1210190001 : Option) : Integer;
    VAR
      RefCritLine@1210190000 : Record 11125860;
    BEGIN
      CASE LineType OF
        Type::Project:
          EXIT(RefCritLine."Reference Type"::Project);
        Type::ServiceContract:
          EXIT(RefCritLine."Reference Type"::ServiceContract);
      END;
    END;

    BEGIN
    END.
  }
}

