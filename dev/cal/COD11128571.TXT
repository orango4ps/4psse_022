OBJECT Codeunit 11128571 OIOUBL DOM Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVDK8.00 (13601);
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      NormalCaseMode@1060000 : Boolean;
      Text000@1101100000 : TextConst 'ENU=Could not create element %1.;NOR=Kan ikke opprette element %1.;SVE=Kan inte skapa element %1.';
      Text001@1101100001 : TextConst 'ENU=Could not create attribute %1.;NOR=Kan ikke opprette attributt %1.;SVE=Kan inte skapa attribut %1.';

    PROCEDURE AddElement@1060001(VAR XMLNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodeName@1060002 : Text;NodeText@1060003 : Text;NameSpace@1060004 : Text;VAR CreatedXMLNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";prefix@1060006 : Text);
    VAR
      NewChildNode@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF NOT NormalCaseMode THEN
        IF prefix <> '' THEN
          NodeName := prefix + ':' + NodeName;

      NewChildNode := XMLNode.OwnerDocument.CreateNode('element',NodeName,NameSpace);

      IF ISNULL(NewChildNode) THEN
        ERROR(Text000,NodeName);

      IF NodeText <> '' THEN
        NewChildNode.InnerText := NodeText;

      XMLNode.AppendChild(NewChildNode);
      CreatedXMLNode := NewChildNode;
    END;

    PROCEDURE AddAttribute@1060002(VAR XMLNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";Name@1060003 : Text;NodeValue@1060004 : Text);
    VAR
      XMLNewAttributeNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      XMLNewAttributeNode := XMLNode.OwnerDocument.CreateAttribute(Name);

      IF ISNULL(XMLNewAttributeNode) THEN
        ERROR(Text001, Name);

      IF NodeValue <> '' THEN
        XMLNewAttributeNode.Value := NodeValue;

      XMLNode.Attributes.SetNamedItem(XMLNewAttributeNode);
    END;

    PROCEDURE FindNode@1060003(XMLRootNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodePath@1060004 : Text;VAR FoundXMLNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode") : Boolean;
    BEGIN
      IF ISNULL(XMLRootNode) THEN
        EXIT(FALSE);

      IF NOT NormalCaseMode THEN
        NodePath := NodePath;
      FoundXMLNode := XMLRootNode.SelectSingleNode(NodePath);

      IF ISNULL(FoundXMLNode) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE FindNodeText@1060004(XMLRootNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodePath@1060005 : Text) : Text;
    VAR
      FoundXMLNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XMLRootNode) THEN
        EXIT('');

      IF NOT NormalCaseMode THEN
        NodePath := NodePath;
      FoundXMLNode := XMLRootNode.SelectSingleNode(NodePath);

      IF ISNULL(FoundXMLNode) THEN
        EXIT('');

      EXIT(FoundXMLNode.InnerText);
    END;

    PROCEDURE FindNodes@1060005(XMLRootNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodePath@1060007 : Text;VAR ReturnedXMLNodeList@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList") : Boolean;
    BEGIN
      IF NOT NormalCaseMode THEN
        NodePath := NodePath;
      ReturnedXMLNodeList := XMLRootNode.SelectNodes(NodePath);

      IF ISNULL(ReturnedXMLNodeList) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE SetNormalCase@1060006();
    BEGIN
      NormalCaseMode := TRUE;
    END;

    BEGIN
    END.
  }
}

