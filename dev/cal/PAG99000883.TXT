OBJECT Page 99000883 Sales Order Planning
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[DEU=Verkaufsauftragsplanung;
               ENU=Sales Order Planning;
               NLD=Verkooporderplanning;
               NOR=Ordreplanlegging;
               SVE=Fîrs.orderplanering];
    SourceTable=Table99000800;
    DataCaptionExpr=Caption;
    DataCaptionFields=Sales Order No.;
    PageType=List;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 BuildForm;
               END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 4       ;1   ;ActionGroup;
                      CaptionML=[DEU=Arti&kel;
                                 ENU=&Item;
                                 NLD=Artike&l;
                                 NOR=V&are;
                                 SVE=Art&ikel];
                      Image=Item }
      { 23      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[DEU=Karte;
                                 ENU=Card;
                                 NLD=Kaart;
                                 NOR=Kort;
                                 SVE=Kort];
                      ToolTipML=[DEU=Zeigt detaillierte Informationen Åber den in der Belegzeile oder Buchungsblattzeile befindlichen Datensatz an oder Ñndert diese.;
                                 ENU=View or change detailed information about the record on the document or journal line.;
                                 NLD=Gedetailleerde informatie weergeven of wijzigen over de record voor de document- of dagboekregel.;
                                 NOR=Vis eller endre detaljert informasjon om posten i dokumentet eller pÜ kladdelinjen.;
                                 SVE=Visa eller Ñndra detaljerad information om posten pÜ dokument- eller journalraden.];
                      ApplicationArea=#Planning;
                      RunObject=Page 30;
                      RunPageLink=No.=FIELD(Item No.);
                      Image=EditLines }
      { 27      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[DEU=&Posten;
                                 ENU=Ledger E&ntries;
                                 NLD=Poste&n;
                                 NOR=Post&er;
                                 SVE=Tra&nsaktioner];
                      ToolTipML=[DEU=Zeigt die Historie der Transaktionen an, die fÅr den ausgewÑhlten Datensatz gebucht wurden.;
                                 ENU=View the history of transactions that have been posted for the selected record.;
                                 NLD=De historie weergeven van transacties die zijn geboekt voor de geselecteerde record.;
                                 NOR=Vis transaksjonshistorikken som har blitt bokfõrt for den valgte posten.;
                                 SVE=Visa transaktionshistoriken som har bokfîrts fîr den valda posten.];
                      ApplicationArea=#Planning;
                      RunObject=Page 38;
                      RunPageView=SORTING(Item No.,Open,Variant Code);
                      RunPageLink=Item No.=FIELD(Item No.),
                                  Variant Code=FIELD(Variant Code);
                      PromotedIsBig=Yes;
                      Image=CustomerLedger }
      { 6       ;2   ;ActionGroup;
                      Name=<Action8>;
                      CaptionML=[DEU=ArtikelverfÅ&gbarkeit nach;
                                 ENU=&Item Availability by;
                                 NLD=Artikel&beschikbaarheid per;
                                 NOR=Varet&ilgjengelighet per;
                                 SVE=Artikel&disp. per];
                      Image=ItemAvailability }
      { 8       ;3   ;Action    ;
                      Name=<Action6>;
                      CaptionML=[DEU=Ereignis;
                                 ENU=Event;
                                 NLD=Evenement;
                                 NOR=Hendelse;
                                 SVE=UtstÑllning];
                      ToolTipML=[DEU=Zeigt an, wie sich die tatsÑchliche und voraussichtliche verfÅgbare Menge eines Artikels im Laufe der Zeit gemÑ· den Angebots- und Nachfrageereignissen entwickelt.;
                                 ENU=View how the actual and the projected available balance of an item will develop over time according to supply and demand events.;
                                 NLD=Weergeven hoe de werkelijke en verwachte beschikbare voorraad van een artikel zich in de loop van de tijd zal ontwikkelen op basis van vraag- en aanbodgebeurtenissen.;
                                 NOR=Vis hvordan den aktuelle og forventede disponible beholdningen for en vare vil utvikle seg over tid i henhold til tilbud og etterspõrselshendelser.;
                                 SVE=Visa hur aktuell och planerad lagerutveckling îver tiden fîr en artikel utvecklas med tiden enligt tillgÜngs- och efterfrÜgehÑndelser.];
                      ApplicationArea=#Planning;
                      Promoted=Yes;
                      Image=Event;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Item@1001 : Record 27;
                               BEGIN
                                 IF Item.GET("Item No.") THEN
                                   ItemAvailFormsMgt.ShowItemAvailFromItem(Item,ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 31      ;3   ;Action    ;
                      Name=<Action31>;
                      CaptionML=[DEU=Periode;
                                 ENU=Period;
                                 NLD=Periode;
                                 NOR=Periode;
                                 SVE=Period];
                      ToolTipML=[DEU=Zeigt die voraussichtliche Menge des Artikels im Lauf der Zeit fÅr ZeitrÑume an, wie etwa nach Tag, Woche oder Monat.;
                                 ENU=View the projected quantity of the item over time according to time periods, such as day, week, or month.;
                                 NLD=Het verwachte aantal van het artikel weergeven aan de hand van perioden, zoals per dag, week of maand.;
                                 NOR=Vis beregnet antall av varen over tid i henhold til tidsperioder, for eksempel dag, uke eller mÜned.;
                                 SVE=Visa planerat antal fîr artikeln îver tiden enligt tidsperioder, sÜsom dag, vecka eller mÜnad.];
                      ApplicationArea=#Planning;
                      RunObject=Page 157;
                      RunPageLink=No.=FIELD(Item No.);
                      Image=Period }
      { 10      ;3   ;Action    ;
                      CaptionML=[DEU=StÅcklistenebene;
                                 ENU=BOM Level;
                                 NLD=Stuklijstniveau;
                                 NOR=StykklistenivÜ;
                                 SVE=StrukturnivÜ];
                      ToolTipML=[DEU=Zeigt die VerfÅgbarkeitszahlen fÅr StÅcklistenartikel an, die angeben, wie viele Einheiten eines Åbergeordneten Elements Sie auf Basis der VerfÅgbarkeit von untergeordneten Elementen erstellen kînnen.;
                                 ENU=View availability figures for items on bills of materials that show how many units of a parent item you can make based on the availability of child items.;
                                 NLD=Beschikbaarheidscijfers weergeven voor artikelen in stuklijsten, die aangeven hoeveel eenheden van een hoofdartikel u kunt maken op basis van de beschikbaarheid van onderliggende artikelen.;
                                 NOR=Vis tilgjengelighetstall for stykklistevarer som angir hvor mange enheter av en overordnet vare du kan lage basert pÜ tilgjengeligheten av underordnede varer.;
                                 SVE=Visa tillgÑnglighetssiffror fîr artiklar i strukturer som visar hur mÜnga enheter av en îverordnad artikel som gÜr att tillverka baserat pÜ underartiklarnas tillgÑnglighet.];
                      ApplicationArea=#Planning;
                      Image=BOMLevel;
                      OnAction=VAR
                                 Item@1001 : Record 27;
                               BEGIN
                                 IF Item.GET("Item No.") THEN
                                   ItemAvailFormsMgt.ShowItemAvailFromItem(Item,ItemAvailFormsMgt.ByBOM);
                               END;
                                }
      { 30      ;2   ;Separator  }
      { 3       ;2   ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[DEU=Statistik;
                                 ENU=Statistics;
                                 NLD=Statistiek;
                                 NOR=Statistikk;
                                 SVE=Statistik];
                      ToolTipML=[DEU=Zeigt statistische Informationen fÅr den Datensatz an, wie etwa den Wert der gebuchten Posten.;
                                 ENU=View statistical information, such as the value of posted entries, for the record.;
                                 NLD=Statistische informatie, zoals de waarde van geboekte posten, voor de record weergeven.;
                                 NOR=Vis statistikkinformasjon, for eksempel verdien for bokfõrte poster, for posten.;
                                 SVE=Visa statistisk information fîr posten, till exempel vÑrdet pÜ bokfîrda transaktioner.];
                      ApplicationArea=#Planning;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Item@1001 : Record 27;
                                 ItemStatistics@1002 : Page 5827;
                               BEGIN
                                 IF Item.GET("Item No.") THEN;
                                 ItemStatistics.SetItem(Item);
                                 ItemStatistics.RUNMODAL;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 19      ;1   ;ActionGroup;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unctions;
                                 NLD=F&uncties;
                                 NOR=F&unksjoner;
                                 SVE=F&unktion];
                      Image=Action }
      { 24      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=&Warenausgangsdatum aktualisieren;
                                 ENU=Update &Shipment Dates;
                                 NLD=&Verzenddatums bijwerken;
                                 NOR=Oppdater &forsendelsesdatoer;
                                 SVE=Uppdatera &utleveransdatum];
                      ToolTipML=[DEU=Aktualisieren Sie das Feld Lieferdatum auf den Zeilen mit énderungen, die seit dem ôffnen des Fensters Verkaufsauftragsplanung vorgenommen wurden.;
                                 ENU=Update the Shipment Date field on lines with any changes that were made since you opened the Sales Order Planning window.;
                                 NLD=Het veld Verzenddatum bijwerken op regels met wijzigingen die zijn aangebracht sinds u het venster Verkooporderplanning hebt geopend.;
                                 NOR=Oppdater feltet Forsendelsesdato pÜ linjer med eventuelle endringer som ble gjort siden du Üpnet vinduet Ordreplanlegging.;
                                 SVE=Uppdatera fÑltet Utleveransdatum pÜ raderna med de Ñndringar som gjorts sedan du îppnade fînstret Fîrs.orderplanering.];
                      ApplicationArea=#Planning;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=UpdateShipment;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SalesLine@1001 : Record 37;
                                 Choice@1002 : Integer;
                                 LastShipmentDate@1003 : Date;
                               BEGIN
                                 Choice := STRMENU(Text000);

                                 IF Choice = 0 THEN
                                   EXIT;

                                 LastShipmentDate := WORKDATE;

                                 SalesHeader.LOCKTABLE;
                                 SalesHeader.GET(SalesHeader."Document Type"::Order,SalesHeader."No.");

                                 IF Choice = 1 THEN BEGIN
                                   IF FIND('-') THEN
                                     REPEAT
                                       IF "Expected Delivery Date" > LastShipmentDate THEN
                                         LastShipmentDate := "Expected Delivery Date";
                                     UNTIL NEXT = 0;
                                   SalesHeader.VALIDATE("Shipment Date",LastShipmentDate);
                                   SalesHeader.MODIFY;
                                 END
                                 ELSE BEGIN
                                   SalesLine.LOCKTABLE;
                                   IF FIND('-') THEN
                                     REPEAT
                                       SalesLine.GET(
                                         SalesLine."Document Type"::Order,
                                         "Sales Order No.",
                                         "Sales Order Line No.");
                                       SalesLine."Shipment Date" := "Expected Delivery Date";
                                       SalesLine.MODIFY;
                                     UNTIL NEXT = 0;
                                 END;
                                 BuildForm;
                               END;
                                }
      { 25      ;2   ;Action    ;
                      AccessByPermission=TableData 5405=R;
                      CaptionML=[DEU=&FA erstellen;
                                 ENU=&Create Prod. Order;
                                 NLD=&Prod.-order maken;
                                 NOR=&Opprett prod.ordre;
                                 SVE=Skapa &prod.order];
                      ToolTipML=[DEU=Vorbereitung zur Erstellung eines Fertigungsauftrags, um dem Verkaufsbedarf zu entsprechen.;
                                 ENU=Prepare to create a production order to fulfill the sales demand.;
                                 NLD=Voorbereiden om een productieorder te maken om te voldoen aan de verkoopvraag.;
                                 NOR=Klargjõr for Ü opprette en produksjonsordre for Ü dekke salgsbehovet.;
                                 SVE=Fîrbered att skapa en produktionsorder fîr att uppfylla fîrsÑljningsbehovet.];
                      ApplicationArea=#Manufacturing;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CreateDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CreateProdOrder;
                               END;
                                }
      { 32      ;2   ;Separator  }
      { 20      ;2   ;Action    ;
                      CaptionML=[DEU=&Bedarfsverursacher;
                                 ENU=Order &Tracking;
                                 NLD=Ordertra&cering;
                                 NOR=&Sporing;
                                 SVE=Order&spÜrning];
                      ToolTipML=[DEU=Verfolgt die Verbindung eines Vorrats zum entsprechenden Bedarf. So kînnen Sie den ursprÅnglichen Bedarf finden, anhand dessen ein spezifischer Fertigungsauftrag oder eine Bestellung erstellt wurde.;
                                 ENU=Tracks the connection of a supply to its corresponding demand. This can help you find the original demand that created a specific production order or purchase order.;
                                 NLD=Hiermee wordt de relatie tussen een levering en de bijbehorende vraag getraceerd. Dit biedt u de mogelijkheid de oorspronkelijke vraag te zoeken op basis waarvan een specifieke productie- of inkooporder is gemaakt.;
                                 NOR=Sporer forbindelsen mellom en forsyning og tilhõrende behov. Dette bidrar til Ü finne det opprinnelige behovet som opprettet en bestemt produksjonsordre eller bestilling.;
                                 SVE=SpÜrar anslutningen fîr en tillgÜng till dess motsvarande efterfrÜgan. Det hÑr hjÑlper dig att hitta den ursprungliga tillgÜngen som skapade en viss produktionsorder eller inkîpsorder.];
                      ApplicationArea=#Planning;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=OrderTracking;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SalesOrderLine@1001 : Record 37;
                                 TrackingForm@1002 : Page 99000822;
                               BEGIN
                                 SalesOrderLine.GET(
                                   SalesOrderLine."Document Type"::Order,
                                   "Sales Order No.",
                                   "Sales Order Line No.");

                                 TrackingForm.SetSalesLine(SalesOrderLine);
                                 TrackingForm.RUNMODAL;
                                 BuildForm;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                GroupType=Repeater }

    { 5   ;2   ;Field     ;
                ToolTipML=[DEU=Gibt die Artikelnummer in der Verkaufszeile an.;
                           ENU=Specifies the item number of the sales order line.;
                           NLD=Hiermee wordt het artikelnummer opgegeven van de verkooporderregel.;
                           NOR=Angir varenummeret for ordrelinjen.;
                           SVE=Anger artikelnumret pÜ fîrsÑljningsorderraden.];
                ApplicationArea=#Planning;
                SourceExpr="Item No." }

    { 21  ;2   ;Field     ;
                ToolTipML=[DEU=Gibt die Variante des Artikels in der Zeile an.;
                           ENU=Specifies the variant of the item on the line.;
                           NLD=Hiermee wordt de variant opgegeven van het artikel op de regel.;
                           NOR=Angir varianten for varen pÜ linjen.;
                           SVE=Anger variantkoden fîr den faktiska artikeln.];
                ApplicationArea=#Planning;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 1   ;2   ;Field     ;
                ToolTipML=[DEU=Gibt den Status der Planung des Fertigungsauftrags, der zu diesem Verkaufsauftrag erstellt wurde.;
                           ENU=Specifies the planning status of the production order, depending on the actual sales order.;
                           NLD=Hiermee wordt de planningsstatus van de productieorder opgegeven, afhankelijk van de werkelijke verkooporder.;
                           NOR=Angir produksjonsordrens planleggingsstatus, avhengig av den faktiske ordren.;
                           SVE=Anger planeringsstatusen fîr produktionsordern, som beror pÜ den faktiska fîrsÑljningsordern.];
                ApplicationArea=#Planning;
                SourceExpr="Planning Status" }

    { 7   ;2   ;Field     ;
                ToolTipML=[DEU=Gibt die Beschreibung des Artikels in der Verkaufszeile an.;
                           ENU=Specifies the description of the item in the sales order line.;
                           NLD=Hiermee wordt de omschrijving van het artikel op de verkooporderregel opgegeven.;
                           NOR=Angir beskrivelsen av varen pÜ ordrelinjen.;
                           SVE=Anger en beskrivning av artikeln pÜ fîrsÑljningsorderraden.];
                ApplicationArea=#Planning;
                SourceExpr=Description }

    { 9   ;2   ;Field     ;
                ToolTipML=[DEU=Gibt an, wann die Artikel auf dem Beleg geliefert werden oder geliefert wurden. Ein Lieferdatum wird normalerweise Åber das gewÅnschte Datum plus der Beschaffungszeit berechnet.;
                           ENU=Specifies when items on the document are shipped or were shipped. A shipment date is usually calculated from a requested delivery date plus lead time.;
                           NLD=Hiermee wordt opgegeven wanneer artikelen in het document worden of zijn verzonden. Een verzenddatum wordt gewoonlijk berekend op basis van een aangevraagde leverdatum plus doorlooptijd.;
                           NOR=Angir om varer i dokumentet skal leveres eller er levert. En leveringsdato beregnes vanligvis fra en õnsket leveringsdato pluss leveringstid.;
                           SVE=Anger utleveransdatum.];
                ApplicationArea=#Planning;
                SourceExpr="Shipment Date" }

    { 26  ;2   ;Field     ;
                ToolTipML=[DEU=Gibt die geplante Menge in dieser Zeile an.;
                           ENU=Specifies the quantity planned in this line.;
                           NLD=Hiermee wordt het aantal opgegeven dat op deze regel wordt gepland.;
                           NOR=Angir det planlagte antallet pÜ denne linjen.;
                           SVE=Anger det antal som har planerats pÜ raden.];
                ApplicationArea=#Planning;
                SourceExpr="Planned Quantity";
                Visible=FALSE;
                OnLookup=VAR
                           SalesLine@1002 : Record 37;
                         BEGIN
                           SalesLine.GET(
                             SalesLine."Document Type"::Order,
                             "Sales Order No.","Sales Order Line No.");
                           SalesLine.ShowReservationEntries(TRUE);
                         END;
                          }

    { 11  ;2   ;Field     ;
                ToolTipML=[DEU=Gibt an, wie viele tatsÑchliche Artikel verfÅgbar sind.;
                           ENU=Specifies how many of the actual items are available.;
                           NLD=Hiermee wordt opgegeven hoeveel van de werkelijke artikelen beschikbaar zijn.;
                           NOR=Angir hvor mye av de faktiske varene som er tilgjengelige.;
                           SVE=Anger hur mÜnga av de aktuella artiklarna som Ñr tillgÑngliga.];
                ApplicationArea=#Planning;
                DecimalPlaces=0:5;
                SourceExpr=Available }

    { 13  ;2   ;Field     ;
                ToolTipML=[DEU=Gibt das nÑchste Planungsdatum an.;
                           ENU=Specifies the next planning date.;
                           NLD=Hiermee wordt de volgende planningsdatum opgegeven.;
                           NOR=Angir den neste planleggingsdatoen.;
                           SVE=Anger nÑsta planeringsdatum.];
                ApplicationArea=#Planning;
                SourceExpr="Next Planning Date" }

    { 15  ;2   ;Field     ;
                ToolTipML=[DEU=Gibt das erwartete Warenausgangsdatum an.;
                           ENU=Specifies the expected delivery date.;
                           NLD=Hiermee wordt de verwachte leverdatum opgegeven.;
                           NOR=Angir forventet leveringsdato.;
                           SVE=Anger det fîrvÑntade leveransdatumet.];
                ApplicationArea=#Planning;
                SourceExpr="Expected Delivery Date" }

    { 28  ;2   ;Field     ;
                ToolTipML=[DEU=Gibt an, ob es notwendig ist, eine Neuplanung fÅr diese Zeile durchzufÅhren.;
                           ENU=Specifies if it is necessary or not to reschedule this line.;
                           NLD=Hiermee wordt opgegeven of het noodzakelijk is om deze regel opnieuw te plannen.;
                           NOR=Angir om det er nõdvendig Ü planlegge linjen pÜ nytt.;
                           SVE=Anger om raden ska planeras om eller inte.];
                ApplicationArea=#Planning;
                SourceExpr="Needs Replanning";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Alle Zeilen zum letzten Ausgangsdatum,FÅr jede Zeile eigenes Ausgangsdatum;ENU=All Lines to last Shipment Date,Each line own Shipment Date;NLD=Alle regels op laatste verzenddatum,Iedere regel eigen verzenddatum;NOR=Alle linjer til siste forsendelsesdato,Hver linjes egen forsendelsesdato;SVE=Alla rader till senaste utleveransdatum,Varje rad med eget utleveransdatum';
      Text001@1001 : TextConst 'DEU=Es gibt nichts zu planen.;ENU=There is nothing to plan.;NLD=Niets te plannen.;NOR=Det finnes ingenting Ü planlegge.;SVE=Det finns ingenting att planera.';
      SalesHeader@1002 : Record 36;
      ReservEntry@1004 : Record 337;
      ReservEngineMgt@1005 : Codeunit 99000831;
      ReserveSalesline@1006 : Codeunit 99000832;
      ItemAvailFormsMgt@1003 : Codeunit 353;
      NewStatus@1007 : 'Simulated,Planned,Firm Planned,Released,Finished';
      NewOrderType@1008 : 'ItemOrder,ProjectOrder';

    [External]
    PROCEDURE SetSalesOrder@2(SalesOrderNo@1000 : Code[20]);
    BEGIN
      SalesHeader.GET(SalesHeader."Document Type"::Order,SalesOrderNo);
    END;

    [External]
    PROCEDURE BuildForm@3();
    BEGIN
      RESET;
      DELETEALL;
      MakeLines;
      SETRANGE("Sales Order No.",SalesHeader."No.");
    END;

    LOCAL PROCEDURE MakeLines@1();
    VAR
      SalesLine@1000 : Record 37;
      ProdOrderLine@1001 : Record 5406;
      PurchLine@1002 : Record 39;
      ReqLine@1003 : Record 246;
      ReservEntry2@1004 : Record 337;
    BEGIN
      SalesLine.SETRANGE("Document Type",SalesLine."Document Type"::Order);
      SalesLine.SETRANGE("Document No.",SalesHeader."No.");
      SalesLine.SETRANGE(Type,SalesLine.Type::Item);
      OnMakeLinesSetOnAfterSetFilters(SalesLine);
      IF SalesLine.FIND('-') THEN
        REPEAT
          INIT;
          "Sales Order No." := SalesLine."Document No.";
          "Sales Order Line No." := SalesLine."Line No.";
          "Item No." := SalesLine."No.";

          "Variant Code" := SalesLine."Variant Code";
          Description := SalesLine.Description;
          "Shipment Date" := SalesLine."Shipment Date";
          "Planning Status" := "Planning Status"::None;
          SalesLine.CALCFIELDS("Reserved Qty. (Base)");
          "Planned Quantity" := SalesLine."Reserved Qty. (Base)";
          ReservEngineMgt.InitFilterAndSortingLookupFor(ReservEntry,FALSE);
          ReserveSalesline.FilterReservFor(ReservEntry,SalesLine);
          ReservEntry.SETRANGE("Reservation Status",ReservEntry."Reservation Status"::Reservation);
          IF ReservEntry.FIND('-') THEN
            REPEAT
              IF ReservEntry2.GET(ReservEntry."Entry No.",NOT ReservEntry.Positive) THEN
                CASE ReservEntry2."Source Type" OF
                  DATABASE::"Item Ledger Entry":
                    BEGIN
                      "Planning Status" := "Planning Status"::Inventory;
                      "Expected Delivery Date" := SalesLine."Shipment Date";
                    END;
                  DATABASE::"Requisition Line":
                    BEGIN
                      ReqLine.GET(
                        ReservEntry2."Source ID",ReservEntry2."Source Batch Name",ReservEntry2."Source Ref. No.");
                      "Planning Status" := "Planning Status"::Planned;
                      "Expected Delivery Date" := ReqLine."Due Date";
                    END;
                  DATABASE::"Purchase Line":
                    BEGIN
                      PurchLine.GET(
                        ReservEntry2."Source Subtype",ReservEntry2."Source ID",ReservEntry2."Source Ref. No.");
                      "Planning Status" := "Planning Status"::"Firm Planned";
                      "Expected Delivery Date" := PurchLine."Expected Receipt Date";
                    END;
                  DATABASE::"Prod. Order Line":
                    BEGIN
                      ProdOrderLine.GET(
                        ReservEntry2."Source Subtype",ReservEntry2."Source ID",ReservEntry2."Source Prod. Order Line");
                      IF ProdOrderLine."Due Date" > "Expected Delivery Date" THEN
                        "Expected Delivery Date" := ProdOrderLine."Ending Date";
                      IF ((ProdOrderLine.Status + 1) < "Planning Status") OR
                         ("Planning Status" = "Planning Status"::None)
                      THEN
                        "Planning Status" := ProdOrderLine.Status + 1;
                    END;
                END;
            UNTIL ReservEntry.NEXT = 0;
          "Needs Replanning" :=
            ("Planned Quantity" <> SalesLine."Outstanding Qty. (Base)") OR
            ("Expected Delivery Date" > "Shipment Date");
          CalculateDisposalPlan(SalesLine."Variant Code",SalesLine."Location Code");
          INSERT;
        UNTIL SalesLine.NEXT = 0;
    END;

    LOCAL PROCEDURE CalculateDisposalPlan@4(VariantCode@1000 : Code[20];LocationCode@1001 : Code[10]);
    VAR
      Item@1003 : Record 27;
    BEGIN
      IF NOT "Needs Replanning" THEN
        EXIT;

      Item.GET("Item No.");
      Item.SETRANGE("Variant Filter",VariantCode);
      Item.SETRANGE("Location Filter",LocationCode);
      Item.CALCFIELDS(
        Inventory,
        "Qty. on Purch. Order",
        "Qty. on Sales Order",
        "Scheduled Receipt (Qty.)",
        "Planned Order Receipt (Qty.)",
        "Scheduled Need (Qty.)");

      Available :=
        Item.Inventory -
        Item."Qty. on Sales Order" +
        Item."Qty. on Purch. Order" -
        Item."Scheduled Need (Qty.)" +
        Item."Scheduled Receipt (Qty.)" +
        Item."Planned Order Receipt (Qty.)";

      "Next Planning Date" := WORKDATE;

      CalculatePlanAndDelivDates(Item,"Next Planning Date","Expected Delivery Date");
    END;

    LOCAL PROCEDURE CalculatePlanAndDelivDates@6(Item@1000 : Record 27;VAR NextPlanningDate@1001 : Date;VAR ExpectedDeliveryDate@1002 : Date);
    BEGIN
      NextPlanningDate := CALCDATE(Item."Lot Accumulation Period",NextPlanningDate);

      IF (Available > 0) OR ("Planning Status" <> "Planning Status"::None) THEN
        ExpectedDeliveryDate := CALCDATE(Item."Safety Lead Time",WORKDATE)
      ELSE
        ExpectedDeliveryDate :=
          CALCDATE(Item."Safety Lead Time",
            CALCDATE(Item."Lead Time Calculation",NextPlanningDate))
    END;

    LOCAL PROCEDURE CreateOrders@7() OrdersCreated@1000 : Boolean;
    VAR
      xSalesPlanLine@1005 : Record 99000800;
      Item@1001 : Record 27;
      SalesLine@1002 : Record 37;
      SKU@1006 : Record 5700;
      ProdOrderFromSale@1003 : Codeunit 99000792;
      CreateProdOrder@1007 : Boolean;
      EndLoop@1004 : Boolean;
    BEGIN
      xSalesPlanLine := Rec;

      IF NOT FINDSET THEN
        EXIT;

      REPEAT
        SalesLine.GET(SalesLine."Document Type"::Order,"Sales Order No.","Sales Order Line No.");
        SalesLine.TESTFIELD("Shipment Date");
        SalesLine.CALCFIELDS("Reserved Qty. (Base)");
        IF SalesLine."Outstanding Qty. (Base)" > SalesLine."Reserved Qty. (Base)" THEN BEGIN
          IF SKU.GET(SalesLine."Location Code",SalesLine."No.",SalesLine."Variant Code") THEN
            CreateProdOrder := SKU."Replenishment System" = SKU."Replenishment System"::"Prod. Order"
          ELSE BEGIN
            Item.GET(SalesLine."No.");
            CreateProdOrder := Item."Replenishment System" = Item."Replenishment System"::"Prod. Order";
          END;

          IF CreateProdOrder THEN BEGIN
            OrdersCreated := TRUE;
            ProdOrderFromSale.CreateProdOrder(SalesLine,NewStatus,NewOrderType);
            IF NewOrderType = NewOrderType::ProjectOrder THEN
              EndLoop := TRUE;
          END;
        END;
      UNTIL (NEXT = 0) OR EndLoop;

      Rec := xSalesPlanLine;
    END;

    LOCAL PROCEDURE Caption@5() : Text[250];
    BEGIN
      EXIT(STRSUBSTNO('%1 %2',SalesHeader."No.",SalesHeader."Bill-to Name"));
    END;

    [External]
    PROCEDURE CreateProdOrder@8();
    VAR
      CreateOrderFromSales@1000 : Page 99000884;
      ShowCreateOrderForm@1002 : Boolean;
      IsHandled@1001 : Boolean;
    BEGIN
      ShowCreateOrderForm := TRUE;
      IsHandled := FALSE;
      OnBeforeCreateProdOrder(Rec,NewStatus,NewOrderType,ShowCreateOrderForm,IsHandled);
      IF IsHandled THEN
        EXIT;

      IF ShowCreateOrderForm THEN BEGIN
        IF CreateOrderFromSales.RUNMODAL <> ACTION::Yes THEN
          EXIT;

        CreateOrderFromSales.ReturnPostingInfo(NewStatus,NewOrderType);
        CLEAR(CreateOrderFromSales);
      END;

      IF NOT CreateOrders THEN
        MESSAGE(Text001);

      SETRANGE("Planning Status");

      BuildForm;

      CurrPage.UPDATE(FALSE);
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCreateProdOrder@10(VAR SalesPlanningLine@1000 : Record 99000800;VAR NewStatus@1002 : 'Simulated,Planned,Firm Planned,Released,Finished';VAR NewOrderType@1001 : 'ItemOrder,ProjectOrder';VAR ShowCreateOrderForm@1003 : Boolean;VAR IsHandled@1004 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnMakeLinesSetOnAfterSetFilters@9(VAR SalesLine@1000 : Record 37);
    BEGIN
    END;

    BEGIN
    END.
  }
}

