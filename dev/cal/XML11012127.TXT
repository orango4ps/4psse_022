OBJECT XMLport 11012127 Imp. Old Codes
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Imp. Old Codes;
               SVE=Imp. gamla koder];
    DefaultFieldsValidation=No;
    PreserveWhiteSpace=Yes;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    XmlPortID := 11012127;
                    MainTableID := 97;
                    MainTableLookupPageID := 11125739;
                    XMLPortRequestPageID := 11230038;
                  END;

    OnPreXMLport=VAR
                   ConversionXMLPort4PS@1100527700 : Record 11020640;
                 BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     ConversionXMLPort4PS.UpdateFromXMLPort(XmlPortID,MainTableID,MainTableLookupPageID,XMLPortRequestPageID,FALSE,0);
                     COMMIT;
                     ERROR('');
                   END;

                   ConvMgt.CheckComCde(LookupNewNoBln,MainTableID,CommentCde);

                   ConvMgt.DeleteConComment(XmlPortID);
                   ConvMgt.CreateConComment(XmlPortID,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XmlPortID,'Start');
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XmlPortID,'Stop');
                    ConvMgt.CreateConComment(XmlPortID,STRSUBSTNO(ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter)));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{7B539476-C20A-46BC-A552-62FED55766AD}];  ;Root                ;Element ;Text     }

    { [{A667E51D-CE85-4A0D-946E-DE2CCC52ED51}];1 ;CommentLine         ;Element ;Table   ;
                                                  SourceTable=Table97;
                                                  SourceTableView=SORTING(Field1,Field2,Field3);
                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 StripData;
                                                                                 IF A = '' THEN
                                                                                   currXMLport.SKIP;

                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Comment Line");

                                                                                 WITH "Comment Line" DO BEGIN
                                                                                   CASE TableNameOpt OF
                                                                                     TableNameOpt::Contact:
                                                                                       BEGIN
                                                                                         "4PSCode" := ConvMgt.DetermineNewMRKCode(LookupNewNoBln,MRKCommentRec."Table Name"::Contact,CommentCde,A);
                                                                                         IF ConvMgt.IsContactPresent("4PSCode") THEN BEGIN
                                                                                           ConvMgt.FillMRKComment(MRKCommentRec."Table Name"::Contact,"4PSCode",B,C);
                                                                                           ImpLineCounter := ImpLineCounter + 1;
                                                                                         END ELSE
                                                                                           ConvMgt.CreateConComment(XmlPortID,
                                                                                             ConvMgt.CreateNoRecAddedCommentTxt(
                                                                                               5050,
                                                                                               A,
                                                                                               5061,
                                                                                               STRSUBSTNO('%1-%2',B,C)));
                                                                                       END;
                                                                                     TableNameOpt::Customer:
                                                                                       BEGIN
                                                                                         "4PSCode" := ConvMgt.DetermineNewCode(LookupNewNoBln,CommentRec."Table Name"::Customer,CommentCde,A);
                                                                                         IF ConvMgt.IsCustomerPresent("4PSCode") THEN BEGIN
                                                                                           ConvMgt.FillComment(CommentRec."Table Name"::Customer,"4PSCode",B,C);
                                                                                           ImpLineCounter := ImpLineCounter + 1;
                                                                                         END ELSE
                                                                                           ConvMgt.CreateConComment(XmlPortID,
                                                                                             ConvMgt.CreateNoRecAddedCommentTxt(18,A,MainTableID,STRSUBSTNO('%1-%2',B,C)));
                                                                                       END;
                                                                                     TableNameOpt::Vendor:
                                                                                       BEGIN
                                                                                         "4PSCode" := ConvMgt.DetermineNewCode(LookupNewNoBln,CommentRec."Table Name"::Vendor,CommentCde,A);
                                                                                         IF ConvMgt.IsVendorPresent("4PSCode") THEN BEGIN
                                                                                           ConvMgt.FillComment(CommentRec."Table Name"::Vendor,"4PSCode",B,C);
                                                                                           ImpLineCounter := ImpLineCounter + 1;
                                                                                         END ELSE
                                                                                           ConvMgt.CreateConComment(XmlPortID,
                                                                                             ConvMgt.CreateNoRecAddedCommentTxt(23,A,MainTableID,STRSUBSTNO('%1-%2',B,C)));
                                                                                       END;
                                                                                   END;
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{3AC77EC7-9326-4B76-BA5F-EA1F70D4DA67}];2 ;A                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=20 }

    { [{1B889F9B-B9E2-4749-96B0-D22BA1117049}];2 ;B                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{D76B46B3-243B-4FF7-8D1D-C7B64CCFA492}];2 ;C                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                   LookupNewNoBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100409000;;Container;
                  Name=Imp. Old Codes;
                  ContainerType=ContentArea }

      { 1100409001;1;Group  ;
                  CaptionML=[ENU=Options;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525000;2;Field  ;
                  CaptionML=ENU=Old Codes for Tables;
                  OptionCaptionML=[ENU=Contact,Customer,Vendor;
                                   SVE=Kontakt,Kund,Leverant”r];
                  SourceExpr=TableNameOpt }

      { 1100525001;2;Field  ;
                  CaptionML=[ENU=Lookup Base Record based on old Code.;
                             SVE=Val av baspost baserad p† gammal kod.];
                  SourceExpr=LookupNewNoBln;
                  OnValidate=BEGIN
                               IF NOT LookupNewNoBln THEN
                                 CommentCde := '';
                             END;
                              }

      { 1100525002;2;Field  ;
                  Name=ComCde;
                  CaptionML=[ENU=Comment Code for searching Base code;
                             SVE=Kommentarskod f”r s”kning efter baskod];
                  SourceExpr=CommentCde;
                  TableRelation="Comment Code" }

    }
  }
  CODE
  {
    VAR
      CommentRec@1100525020 : Record 97;
      MRKCommentRec@1100525019 : Record 5061;
      ConvMgt@1100525018 : Codeunit 11020212;
      XmlPortID@1100525015 : Integer;
      MainTableID@1100525014 : Integer;
      MainTableLookupPageID@1100527701 : Integer;
      XMLPortRequestPageID@1100527700 : Integer;
      ImpLineCounter@1100525012 : Integer;
      CommentCde@1100525011 : Code[10];
      ConversionFileFormat@1100525010 : Record 11020691;
      RunIsImportRunBln@1100525009 : Boolean;
      LookupNewNoBln@1100525006 : Boolean;
      TableNameOpt@1100525001 : 'Contact,Customer,Vendor';
      "4PSCode"@1100525000 : Code[20];

    PROCEDURE StripData@1100485000();
    BEGIN
      A := DELCHR(A,'<>',' ');
      B := DELCHR(B,'<>',' ');
      C := DELCHR(C,'<>',' ');
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XmlPortID);
        InsertColumnLine(XmlPortID,'A',MainTableID,"Comment Line".FIELDNAME("No."),'Code20','OldOrNewTxt');
        InsertColumnLine(XmlPortID,'B',MainTableID,"Comment Line".FIELDNAME("Comment Code"),'Code10','');
        InsertColumnLine(XmlPortID,'C',MainTableID,"Comment Line".FIELDNAME(Comment),'Text80','');
      END;
    END;

    PROCEDURE ClearFields@1100529900();
    BEGIN
      CLEAR("Comment Line");
      "4PSCode" := '';

      A := '';
      B := '';
      C := '';
    END;

    PROCEDURE InitXMLport@1100529500(iCommentCde@1100529502 : Code[10];iLookupNewNoBln@1100529501 : Boolean;iTableNameOpt@1100529500 : 'Contact,Customer,Vendor');
    BEGIN
      CommentCde := iCommentCde;
      LookupNewNoBln := iLookupNewNoBln;
      TableNameOpt := iTableNameOpt;
    END;

    BEGIN
    END.
  }
}

