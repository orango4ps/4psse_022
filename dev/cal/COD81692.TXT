OBJECT Codeunit 81692 Assemblin Dep Auth MetaData
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [EventSubscriber(Table,2000000075,OnAfterInsertEvent)]
    LOCAL PROCEDURE UserMetaData_OnAfterInsert@1000000000(VAR Rec@1000000000 : Record 2000000075;RunTrigger@1000000001 : Boolean);
    BEGIN
      IF (Rec."Personalization ID" <> FORMAT(Rec."Page ID")) THEN
        EXIT;

      RemoveDepartmentAuthorizationFilterIfActivated(Rec);
    END;

    [EventSubscriber(Table,2000000075,OnAfterModifyEvent)]
    LOCAL PROCEDURE UserMetaData_OnAfterModifyEvent@1000000003(VAR Rec@1000000000 : Record 2000000075;VAR xRec@1000000001 : Record 2000000075;RunTrigger@1000000002 : Boolean);
    BEGIN

      IF (Rec."Personalization ID" <> FORMAT(Rec."Page ID")) THEN
        EXIT;

      RemoveDepartmentAuthorizationFilterIfActivated(Rec);
    END;

    LOCAL PROCEDURE RemoveDepartmentAuthorizationFilterIfActivated@1000000001(VAR UserMetadata@1000000004 : Record 2000000075);
    VAR
      UserSetup@1000000009 : Record 91;
    BEGIN
      IF NOT UserSetup.GET(USERID) THEN
        EXIT;
      IF NOT UserSetup."Department Authoriz. Active" THEN
        EXIT;
      IF (UserSetup."Department Code Filter" = '') THEN
        EXIT;

      UserMetadata.CALCFIELDS("Page Metadata Delta");
      IF NOT UserMetadata."Page Metadata Delta".HASVALUE THEN
        EXIT;

      RemoveNodesBasedOnDepartmentCodeFilterInXML(UserMetadata, UserSetup."Department Code Filter");
    END;

    LOCAL PROCEDURE RemoveNodesBasedOnDepartmentCodeFilterInXML@1000000002(VAR UserMetadata@1000000002 : Record 2000000075;DepartmentFilter@1000000001 : Text);
    VAR
      xmldoc@1000000010 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      node@1000000009 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      Parentnode@1000000008 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      nodeList@1000000007 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList";
      i@1000000006 : Integer;
      inStr@1000000005 : InStream;
      OutStr@1000000004 : OutStream;
      CorrectionDone@1000000003 : Boolean;
      FieldNoXPath@1000000000 : Text;
    BEGIN
      UserMetadata."Page Metadata Delta".CREATEINSTREAM(inStr);

      xmldoc := xmldoc.XmlDocument;
      xmldoc.Load(inStr);
      IF ISNULL(xmldoc) THEN
        EXIT;

      CorrectionDone := FALSE;

      // Look for the Department Filter value on a specific element and remove element above this!
      // In the attribute value the Field No is stored. Needs to check all field no. that are Dim 1 (Department Code) for all tables.
      // Identified so far:
      // 14 - Handyman Import Buffer
      // 21 - Job List
      // 23 - G/L Entry
      // 29 - Sales Invoice Header
      // 36 - Employee
      // 100 - Hour Accounting / Posted Hour Header
      FieldNoXPath := 'Attributes/Attribute[1]/@value="14" or Attributes/Attribute[1]/@value="21" or Attributes/Attribute[1]/@value="23" or ';
      FieldNoXPath += 'Attributes/Attribute[1]/@value="29" or Attributes/Attribute[1]/@value="36" or Attributes/Attribute[1]/@value="100"';

      nodeList := xmldoc.SelectNodes('/delta/changes/add/Node/Nodes/Node/Nodes/Node[Attributes/Attribute[2]/@value="' + DepartmentFilter + '" and @name="UserFilter" and (' + FieldNoXPath + ')]');
      FOR i := 1 TO nodeList.Count DO BEGIN
        CorrectionDone := TRUE;
        node := nodeList.ItemOf(i-1);
        Parentnode := node.ParentNode;
        Parentnode.RemoveChild(node);
      END;

      IF NOT CorrectionDone THEN
        EXIT;

      CLEAR(UserMetadata."Page Metadata Delta");
      UserMetadata."Page Metadata Delta".CREATEOUTSTREAM(OutStr);
      xmldoc.Save(OutStr);
      UserMetadata.MODIFY;
    END;

    BEGIN
    END.
  }
}

