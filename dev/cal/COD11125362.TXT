OBJECT Codeunit 11125362 Web Service Tools WS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      NOK@1100525001 : TextConst 'ENU=NOT OK';
      OK@1100528302 : TextConst 'ENU=OK;SVE=OK';
      ServerSettingUnknownTxt@1100528303 : TextConst 'ENU=ServerUserSetting %1 is unknown.';

    [External]
    PROCEDURE AddPortalBackgroundJob@1100525001(ID@1100525000 : Text[50];CompanyName@1100525005 : Text[50];Status@1100525001 : Text[50];Message@1100525002 : Text[250];LinkURL@1100525003 : Text[250]) : Text;
    VAR
      PortalBackgroundProcess@1100525004 : Record 11229347;
    BEGIN
      PortalBackgroundProcess.INIT;
      PortalBackgroundProcess.ID := ID;
      PortalBackgroundProcess.Status := Status;
      PortalBackgroundProcess.Description := Message;
      PortalBackgroundProcess."Link URL" := LinkURL;
      PortalBackgroundProcess."Company Name" := CompanyName;
      PortalBackgroundProcess.INSERT(TRUE);
      EXIT(FORMAT(PortalBackgroundProcess."Seq. No."));
    END;

    [External]
    PROCEDURE AreAllWebServicesPublished@1100528300(WebServiceSetCode@1100526000 : Code[20]) : Boolean;
    VAR
      WebServiceSet@1100526001 : Record 11229298;
    BEGIN
      WebServiceSet.GET(WebServiceSetCode);
      WebServiceSet.CALCFIELDS("Not Published Lines");
      EXIT(WebServiceSet."Not Published Lines" = 0);
    END;

    [External]
    PROCEDURE GetApplicationBuild@1100525000() : Text;
    VAR
      ApplicationSystemConstants@1100525000 : Codeunit 9015;
    BEGIN
      EXIT(ApplicationSystemConstants.ApplicationBuild);
    END;

    [External]
    PROCEDURE GetApplicationVersion@1100525002() : Text;
    VAR
      ApplicationSystemConstants@1100525000 : Codeunit 9015;
    BEGIN
      EXIT(ApplicationSystemConstants.ApplicationVersion);
    END;

    [External]
    PROCEDURE GetNstProperty@1100528302(PropertyName@1100528300 : Text) : Text;
    VAR
      ServerUserSettings@1100528302 : DotNet "'Microsoft.Dynamics.Nav.Types, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Types.ServerUserSettings";
    BEGIN
      ServerUserSettings := ServerUserSettings.Instance();
      CASE PropertyName OF
        'BufferedInsertEnabled': EXIT(FORMAT(ServerUserSettings.BufferedInsertEnabled));
        'ClientServicesChunkSize': EXIT(FORMAT(ServerUserSettings.ClientServicesChunkSize));
        'ClientServicesCompressionThreshold': EXIT(FORMAT(ServerUserSettings.ClientServicesCompressionThreshold));
        'ClientServicesCredentialType': EXIT(FORMAT(ServerUserSettings.ClientServicesCredentialType));
        'ClientServicesEnabled': EXIT(FORMAT(ServerUserSettings.ClientServicesEnabled));
        'ClientServicesKeepAliveInterval': EXIT(FORMAT(ServerUserSettings.ClientServicesKeepAliveInterval));
        'ClientServicesMaxConcurrentConnections': EXIT(FORMAT(ServerUserSettings.ClientServicesMaxConcurrentConnections));
        'ClientServicesMaxItemsInObjectGraph': EXIT(FORMAT(ServerUserSettings.ClientServicesMaxItemsInObjectGraph));
        'ClientServicesMaxNumberOfOrphanedConnections': EXIT(FORMAT(ServerUserSettings.ClientServicesMaxNumberOfOrphanedConnections));
        'ClientServicesMaxUploadSize': EXIT(FORMAT(ServerUserSettings.ClientServicesMaxUploadSize));
        'ClientServicesOperationTimeout': EXIT(FORMAT(ServerUserSettings.ClientServicesOperationTimeout));
        'ClientServicesPort': EXIT(FORMAT(ServerUserSettings.ClientServicesPort));
        'ClientServicesProhibitedFileTypes': EXIT(FORMAT(ServerUserSettings.ClientServicesProhibitedFileTypes));
        'ClientServicesProtectionLevel': EXIT(FORMAT(ServerUserSettings.ClientServicesProtectionLevel));
        'ClientServicesReconnectPeriod': EXIT(FORMAT(ServerUserSettings.ClientServicesReconnectPeriod));
        'CompileBusinessApplicationAtStartup': EXIT(FORMAT(ServerUserSettings.CompileBusinessApplicationAtStartup));
        'DataCacheSize': EXIT(FORMAT(ServerUserSettings.DataCacheSize));
        'DatabaseName': EXIT(FORMAT(ServerUserSettings.DatabaseName));
        'DatabaseServer': EXIT(FORMAT(ServerUserSettings.DatabaseServer));
        'DebuggingAllowed': EXIT(FORMAT(ServerUserSettings.DebuggingAllowed));
        'DefaultClient': EXIT(FORMAT(ServerUserSettings.DefaultClient));
        'DisableSmartSql': EXIT(FORMAT(ServerUserSettings.DisableSmartSql));
        'DisableWriteInsideTryFunctions': EXIT(FORMAT(ServerUserSettings.DisableWriteInsideTryFunctions));
        'DocumentServicesProvider': EXIT(FORMAT(ServerUserSettings.DocumentServicesProvider));
        'EnableALServerFileAccess': EXIT(FORMAT(ServerUserSettings.EnableALServerFileAccess));
        'EnableApplicationChannelLog': EXIT(FORMAT(ServerUserSettings.EnableApplicationChannelLog));
        'EnableDataExportImport': EXIT(FORMAT(ServerUserSettings.EnableDataExportImport));
        'EnableDeadlockMonitoring': EXIT(FORMAT(ServerUserSettings.EnableDeadlockMonitoring));
        'EnableDebugging': EXIT(FORMAT(ServerUserSettings.EnableDebugging));
        'EnableFullALFunctionTracing': EXIT(FORMAT(ServerUserSettings.EnableFullALFunctionTracing));
        'EnableMembershipEntitlement': EXIT(FORMAT(ServerUserSettings.EnableMembershipEntitlement));
        'EnableSaveFromReportPreview': EXIT(FORMAT(ServerUserSettings.EnableSaveFromReportPreview));
        'EnableSaveToExcelForRdlcReports': EXIT(FORMAT(ServerUserSettings.EnableSaveToExcelForRdlcReports));
        'EnableSaveToWordForRdlcReports': EXIT(FORMAT(ServerUserSettings.EnableSaveToWordForRdlcReports));
        'EnableSqlConnectionEncryption': EXIT(FORMAT(ServerUserSettings.EnableSqlConnectionEncryption));
        'EnableTaskScheduler': EXIT(FORMAT(ServerUserSettings.EnableTaskScheduler));
        'EncryptionProvider': EXIT(FORMAT(ServerUserSettings.EncryptionProvider));
        'ExtendedSecurityTokenLifetime': EXIT(FORMAT(ServerUserSettings.ExtendedSecurityTokenLifetime));
        'ManagementServicesEnabled': EXIT(FORMAT(ServerUserSettings.ManagementServicesEnabled));
        'ManagementServicesPort': EXIT(FORMAT(ServerUserSettings.ManagementServicesPort));
        'MaxConcurrentCalls': EXIT(FORMAT(ServerUserSettings.MaxConcurrentCalls));
        'MaxRowsToExportToExcel': EXIT(FORMAT(ServerUserSettings.MaxRowsToExportToExcel));
        'MaxStreamReadSize': EXIT(FORMAT(ServerUserSettings.MaxStreamReadSize));
        'Multitenant': EXIT(FORMAT(ServerUserSettings.Multitenant));
        'NASServicesEnableDebugging': EXIT(FORMAT(ServerUserSettings.NASServicesEnableDebugging));
        'NASServicesRunWithAdminRights': EXIT(FORMAT(ServerUserSettings.NASServicesRunWithAdminRights));
        'NASServicesStartupArgument': EXIT(FORMAT(ServerUserSettings.NASServicesStartupArgument));
        'NASServicesStartupCodeunit': EXIT(FORMAT(ServerUserSettings.NASServicesStartupCodeunit));
        'NASServicesStartupMethod': EXIT(FORMAT(ServerUserSettings.NASServicesStartupMethod));
        'NetworkProtocol': EXIT(FORMAT(ServerUserSettings.NetworkProtocol));
        'ODataEnableExcelAddInAnnotations': EXIT(FORMAT(ServerUserSettings.ODataEnableExcelAddInAnnotations));
        'ODataServicesEnabled': EXIT(FORMAT(ServerUserSettings.ODataServicesEnabled));
        'ODataServicesMaxPageSize': EXIT(FORMAT(ServerUserSettings.ODataServicesMaxPageSize));
        'ODataServicesPort': EXIT(FORMAT(ServerUserSettings.ODataServicesPort));
        'ODataServicesSSLEnabled': EXIT(FORMAT(ServerUserSettings.ODataServicesSSLEnabled));
        'ODataServicesV3EndpointEnabled': EXIT(FORMAT(ServerUserSettings.ODataServicesV3EndpointEnabled));
        'ODataServicesV4EndpointEnabled': EXIT(FORMAT(ServerUserSettings.ODataServicesV4EndpointEnabled));
        'SOAPServicesEnabled': EXIT(FORMAT(ServerUserSettings.SOAPServicesEnabled));
        'SOAPServicesMaxMsgSize': EXIT(FORMAT(ServerUserSettings.SOAPServicesMaxMsgSize));
        'SOAPServicesPort': EXIT(FORMAT(ServerUserSettings.SOAPServicesPort));
        'SOAPServicesSSLEnabled': EXIT(FORMAT(ServerUserSettings.SOAPServicesSSLEnabled));
        'ServerInstance': EXIT(FORMAT(ServerUserSettings.ServerInstance));
        'ServicesCertificateValidationEnabled': EXIT(FORMAT(ServerUserSettings.ServicesCertificateValidationEnabled));
        'ServicesDefaultTimeZone': EXIT(FORMAT(ServerUserSettings.ServicesDefaultTimeZone));
        'ServicesLanguage': EXIT(FORMAT(ServerUserSettings.ServicesLanguage));
        'ServicesOptionFormat': EXIT(FORMAT(ServerUserSettings.ServicesOptionFormat));
        'ServicesUseNTLMAuthentication': EXIT(FORMAT(ServerUserSettings.ServicesUseNTLMAuthentication));
        'SessionEventTableRetainPeriod': EXIT(FORMAT(ServerUserSettings.SessionEventTableRetainPeriod));
        'SqlCommandTimeout': EXIT(FORMAT(ServerUserSettings.SqlCommandTimeout));
        'SqlParametersByOrdinal': EXIT(FORMAT(ServerUserSettings.SqlParametersByOrdinal));
        'UIElementRemovalOption': EXIT(FORMAT(ServerUserSettings.UIElementRemovalOption));
        'UseSimplifiedFilters': EXIT(FORMAT(ServerUserSettings.UseSimplifiedFilters));
      END;
      ERROR(ServerSettingUnknownTxt, PropertyName);
    END;

    LOCAL PROCEDURE "---Locals---"@1100528301();
    BEGIN
    END;

    BEGIN
    END.
  }
}

