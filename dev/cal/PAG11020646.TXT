OBJECT Page 11020646 Filter Contacts Prov. Work
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Filter Kontakte zugeordn. Arbeit;
               ENU=Filter Contacts Provisional Work;
               NLD=Filter relaties voorlopig werk;
               NOR=Filtrer kontakter, provisorisk arbeid;
               SVE=Filtrera kontakter fîr provisoriskt arbete];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11012752;
    PageType=NavigatePage;
    OnOpenPage=BEGIN
                 MatchFeatures := MatchFeatures::Any;
                 CombineFeatures := MatchFeatures = MatchFeatures::All;

                 FillFeaturesTempRec;

                 Step1Visible := TRUE;
               END;

    OnFindRecord=VAR
                   Found@1100485000 : Boolean;
                 BEGIN
                   ContactFeatureTempRec.COPY(Rec);
                   Found := ContactFeatureTempRec.FIND(Which);
                   Rec := ContactFeatureTempRec;
                   EXIT(Found);
                 END;

    OnNextRecord=VAR
                   ResultSteps@1100485000 : Integer;
                 BEGIN
                   ContactFeatureTempRec.COPY(Rec);
                   ResultSteps := ContactFeatureTempRec.NEXT(Steps);
                   Rec := ContactFeatureTempRec;
                   EXIT(ResultSteps);
                 END;

    OnAfterGetRecord=BEGIN
                       ContactFeatureTempRec.COPY(Rec);
                       ContactFeatureTempRec.FIND('=');
                     END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::LookupOK THEN
                         LookupOKOnPush;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485012;1 ;Action    ;
                      CaptionML=[DEU=An&zeigen;
                                 ENU=&Display;
                                 NLD=&Weergeven;
                                 NOR=&Vis;
                                 SVE=&Visa];
                      InFooterBar=Yes;
                      Image=ShowMatrix;
                      OnAction=VAR
                                 ResultForm@1100485000 : Page 11020647;
                                 ReturnAction@1100528701 : Action;
                               BEGIN
                                 FilterContacts();
                                 ResultForm.SetContactTempRec(ContactTempRec);
                                 ResultForm.SetParameters(FilterTenderApplicationCode, FilterFeatureGroup, FilterFeatureCode);
                                 ResultForm.RUNMODAL;
                                 ResultForm.GetReturnAction(ReturnAction);
                                 IF ReturnAction = ACTION::Yes THEN
                                   CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100528700;1;Group  ;
                Name=Step1;
                Visible=Step1Visible;
                GroupType=Group }

    { 1100485000;2;Group  ;
                GroupType=Repeater }

    { 1100485001;3;Field  ;
                SourceExpr="Feature Group";
                Editable=FALSE }

    { 1100485003;3;Field  ;
                SourceExpr=Code;
                Editable=FALSE }

    { 1100485005;3;Field  ;
                SourceExpr=Description;
                Editable=FALSE }

    { 1100485010;3;Field  ;
                Name=Filter;
                CaptionML=[DEU=Filter;
                           ENU=Filter;
                           NLD=Filter;
                           NOR=Filter;
                           SVE=Filtrera];
                SourceExpr=ContactFeatureTempRec.Filter;
                OnValidate=BEGIN
                             ContactFeatureTempRecFilterOn1;
                           END;
                            }

    { 1210190001;2;Group  ;
                CaptionML=[DEU=Optionen;
                           ENU=Options;
                           NLD=Opties;
                           NOR=Alternativer;
                           SVE=Alternativ];
                GroupType=Group }

    { 1210190000;3;Field  ;
                CaptionML=[DEU=öbereinstimmendes Merkmal;
                           ENU=Match Feature;
                           NLD=Voldoet aan kenmerk;
                           NOR=Match-funksjon;
                           SVE=Match-funktionen];
                OptionCaptionML=[DEU=Alle,Beliebig;
                                 ENU=All,Any;
                                 NLD=Alle,Enkele;
                                 NOR=Alle,enhver;
                                 SVE=Alla,NÜgon];
                SourceExpr=MatchFeatures;
                Importance=Promoted;
                OnValidate=BEGIN
                             CombineFeatures := MatchFeatures = MatchFeatures::All;
                           END;
                            }

  }
  CODE
  {
    VAR
      FilterTenderApplicationCode@1100485003 : Code[20];
      FilterFeatureGroup@1100485005 : Text[50];
      FilterFeatureCode@1100485006 : Code[20];
      TenderApplFeatureRec@1100485002 : Record 11012777;
      ContactFeatureRec@1100485004 : Record 11012752;
      ContactFeatureTempRec@1100485000 : TEMPORARY Record 11012752;
      ContactTempRec@1100485007 : TEMPORARY Record 5050;
      MatchFeatures@1210190003 : 'All,Any';
      CombineFeatures@1210190002 : Boolean;
      Step1Visible@1100528700 : Boolean INDATASET;

    PROCEDURE SetParameters@1100485000(TenderApplCodeParam@1100485000 : Code[20];FeatureGroupParam@1100485001 : Text[50];FeatureCodeParam@1100485002 : Code[20]);
    BEGIN
      FilterTenderApplicationCode := TenderApplCodeParam;
      FilterFeatureGroup := FeatureGroupParam;
      FilterFeatureCode := FeatureCodeParam;
    END;

    LOCAL PROCEDURE FillFeaturesTempRec@1100485002();
    VAR
      FeatureGroupRec@1100485000 : Record 11012751;
    BEGIN
      FeatureGroupRec.SETRANGE("Provisional Works", TRUE);
      IF FeatureGroupRec.FINDFIRST THEN
        REPEAT
          ContactFeatureRec.SETRANGE("Feature Group", FeatureGroupRec.Description);
          IF ContactFeatureRec.FINDFIRST THEN
            REPEAT
              ContactFeatureTempRec := ContactFeatureRec;
              ContactFeatureTempRec.Filter :=
                ((ContactFeatureRec."Feature Group" = FilterFeatureGroup) AND
                 (ContactFeatureRec.Code = FilterFeatureCode) AND
                 (TenderApplFeatureRec.GET(FilterTenderApplicationCode, ContactFeatureRec."Feature Group", ContactFeatureRec.Code)));
              ContactFeatureTempRec.INSERT;
            UNTIL ContactFeatureRec.NEXT = 0;
        UNTIL FeatureGroupRec.NEXT = 0;
    END;

    LOCAL PROCEDURE FilterContacts@1100485001();
    VAR
      ContactFeatureTypeRec@1100485000 : Record 11012753;
      TempContactFeatureTypeRec@1100409001 : TEMPORARY Record 11012753;
      ContactRec@1100485001 : Record 5050;
      NoOfSelectedContactFeatures@1100409000 : Integer;
    BEGIN
      ContactTempRec.RESET;
      ContactTempRec.DELETEALL(FALSE);
      ContactFeatureTempRec.SETRANGE(Filter, TRUE);
      NoOfSelectedContactFeatures := ContactFeatureTempRec.COUNT; //C013681
      IF ContactFeatureTempRec.FINDSET THEN
        REPEAT
          ContactFeatureTypeRec.SETRANGE("Feature Group", ContactFeatureTempRec."Feature Group");
          ContactFeatureTypeRec.SETRANGE(Feature, ContactFeatureTempRec.Code);
          IF ContactFeatureTypeRec.FINDFIRST THEN
            REPEAT
              IF ContactRec.GET(ContactFeatureTypeRec.Code) THEN BEGIN
                IF NOT ContactRec.Blocked THEN BEGIN
                  ContactTempRec := ContactRec;
                  IF ContactTempRec.INSERT THEN;
                  //C013681.sn
                  IF CombineFeatures THEN BEGIN
                    TempContactFeatureTypeRec := ContactFeatureTypeRec;
                    TempContactFeatureTypeRec.INSERT;
                  END;
                  //C013681.en
                END;
              END;
            UNTIL ContactFeatureTypeRec.NEXT = 0;
        UNTIL ContactFeatureTempRec.NEXT = 0;

      //C013681 next part totally reconstructed
      IF CombineFeatures THEN
        IF ContactTempRec.FINDSET THEN
          REPEAT
            TempContactFeatureTypeRec.SETRANGE(Code, ContactTempRec."No.");
            IF TempContactFeatureTypeRec.COUNT <> NoOfSelectedContactFeatures THEN
              ContactTempRec.DELETE;
          UNTIL ContactTempRec.NEXT = 0;
    END;

    PROCEDURE GetFilteredVendors@1100485003(VAR ContactTempRecParam@1100485000 : TEMPORARY Record 5050);
    BEGIN
      ContactTempRecParam := ContactTempRec;
    END;

    LOCAL PROCEDURE ContactFeatureTempRecFilterOn1@19061202();
    BEGIN
      ContactFeatureTempRec.MODIFY;
    END;

    LOCAL PROCEDURE ContactFeatureTempRecFilterOn2@19016079();
    BEGIN
      ContactFeatureTempRec.COPY(Rec);
      ContactFeatureTempRec.FIND('=');
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    VAR
      TenderApplFeatureVendor@1100485001 : Record 11012779;
      Count@1100485002 : Integer;
      Text001@1100485003 : TextConst 'DEU=Anzahl hinzugfÅgte Kreditoren: %1;ENU=Number of added Vendors: %1;NLD=Aantal toegevoegde Leveranciers: %1;NOR=Antall leverandõrer lagt til: %1;SVE=Antal leverantîrer som har lagts till: %1';
    BEGIN
      FilterContacts();
      IF ContactTempRec.FINDFIRST THEN
        REPEAT
          TenderApplFeatureVendor.INIT;
          TenderApplFeatureVendor."Provisional Work No." := FilterTenderApplicationCode;
          TenderApplFeatureVendor."Feature Group" := FilterFeatureGroup;
          TenderApplFeatureVendor.Feature := FilterFeatureCode;
          IF ContactTempRec.IsContactPerson THEN BEGIN
            TenderApplFeatureVendor."Contact No." := ContactTempRec."Company No.";
            TenderApplFeatureVendor."Contact Person No." := ContactTempRec."No.";
          END ELSE
            TenderApplFeatureVendor."Contact No." := ContactTempRec."No.";
          IF TenderApplFeatureVendor.INSERT THEN
            Count += 1;
        UNTIL ContactTempRec.NEXT = 0;
      MESSAGE(Text001, Count);
    END;

    BEGIN
    END.
  }
}

