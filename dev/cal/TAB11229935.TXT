OBJECT Table 11229935 Plant Rental Agreement
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckRequiredFieldsFilled;
               CheckOverlap;
               IF "Agreement No." = 0 THEN
                 "Agreement No." := FirstFreeAgreementNo;
               "Created on" := CURRENTDATETIME;
               InsertRateOnStartingDate;
               WarningZeroRatePresent;
             END;

    OnModify=BEGIN
               CheckModifyAllowed(0);
               CheckRequiredFieldsFilled;
               CheckOverlap;
               UpdateRateLines;
               WarningZeroRatePresent;
             END;

    OnDelete=VAR
               PlantRentalAgreementRate@1100525000 : Record 11229936;
               PlantRentalAgrInvPeriod@1100529000 : Record 11229937;
             BEGIN
               CALCFIELDS("Invoiced until");
               IF "Invoiced until" <> 0D THEN BEGIN
                 IF NOT RentalAgreementCompletelyInvoiced('') THEN
                 FIELDERROR("Agreement No.", STRSUBSTNO(Text006, PlantRentalAgrInvPeriod.FIELDCAPTION("Completely Invoiced")));
               END;

               PlantRentalAgreementRate.SETRANGE("Plant Type", "Plant Type");
               PlantRentalAgreementRate.SETRANGE("Plant No.", "Plant No.");
               PlantRentalAgreementRate.SETRANGE("Agreement No.", "Agreement No.");
               PlantRentalAgreementRate.DELETEALL(FALSE);

               PlantRentalAgrInvPeriod.SETRANGE("Plant Type", "Plant Type");
               PlantRentalAgrInvPeriod.SETRANGE("Plant No.", "Plant No.");
               PlantRentalAgrInvPeriod.SETRANGE("Agreement No.", "Agreement No.");
               PlantRentalAgrInvPeriod.DELETEALL;
             END;

    CaptionML=ENU=Plant Rental Agreement;
  }
  FIELDS
  {
    { 10  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   OnValidate=VAR
                                                                PlantType@1100525000 : Record 11012551;
                                                              BEGIN
                                                                CheckModifyAllowed(FIELDNO("Plant Type"));
                                                                IF "Plant Type" <> '' THEN BEGIN
                                                                  PlantType.GET("Plant Type");
                                                                  PlantType.TESTFIELD(Bulk, FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp];
                                                   NotBlank=Yes }
    { 20  ;   ;Plant No.           ;Code10        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   OnValidate=BEGIN
                                                                CheckModifyAllowed(FIELDNO("Plant No."));
                                                                CALCFIELDS("Plant Description");
                                                              END;

                                                   CaptionML=[ENU=Plant No.;
                                                              NOR=Maskinnr.;
                                                              SVE=Maskinnr];
                                                   NotBlank=Yes }
    { 21  ;   ;Plant Description   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".Description WHERE (Plant Type=FIELD(Plant Type),
                                                                                                        No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Plant Description;
                                                              NOR=Maskinbeskrivelse;
                                                              SVE=Maskinbeskrivning];
                                                   Editable=No }
    { 22  ;   ;Plant No. Posted    ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".Posted WHERE (Plant Type=FIELD(Plant Type),
                                                                                                   No.=FIELD(Plant No.)));
                                                   CaptionML=ENU=Plant No. Posted;
                                                   Editable=No }
    { 30  ;   ;Agreement No.       ;Integer       ;CaptionML=ENU=Agreement No.;
                                                   MinValue=0;
                                                   Editable=No }
    { 40  ;   ;Plant Location      ;Code20        ;TableRelation="Plant Location";
                                                   OnValidate=VAR
                                                                PlantLocation@1100525000 : Record 11012554;
                                                              BEGIN
                                                                CheckModifyAllowed(FIELDNO("Plant Location"));
                                                                IF "Plant Location" <> '' THEN BEGIN
                                                                  PlantLocation.GET("Plant Location");
                                                                  PlantLocation.TESTFIELD(Depot, FALSE);
                                                                  PlantLocation.CheckBlock(1, FALSE, FALSE);
                                                                  PlantLocation.TESTFIELD("Rate Type", PlantLocation."Rate Type"::Day);
                                                                END;
                                                                IF "Plant Location" <> xRec."Plant Location" THEN
                                                                  Element := '';
                                                                CALCFIELDS("Plant Location Description", "Customer No.");
                                                              END;

                                                   CaptionML=[ENU=Plant Location;
                                                              NOR=Maskinplassering;
                                                              SVE=Maskinutplacering];
                                                   NotBlank=Yes }
    { 41  ;   ;Plant Location Description;Text100 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Location".Description WHERE (Code=FIELD(Plant Location)));
                                                   CaptionML=[ENU=Plant Location Description;
                                                              NOR=Beskrivelse av maskinplassering;
                                                              SVE=Beskrivning av Maskinsplats];
                                                   Editable=No }
    { 42  ;   ;Customer No.        ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Location"."Customer No." WHERE (Code=FIELD(Plant Location)));
                                                   CaptionML=[ENU=Customer No.;
                                                              NOR=Kundenr;
                                                              SVE=Kundnr];
                                                   Editable=No }
    { 50  ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                CheckModifyAllowed(FIELDNO("Starting Date"));
                                                                IF ("Starting Date" > "Ending Date") AND ("Ending Date" <> 0D) THEN
                                                                  FIELDERROR("Starting Date", STRSUBSTNO(Text001, FIELDCAPTION("Ending Date"), "Ending Date"));
                                                                CheckOverlap;
                                                                CheckPlantInventoryInvoicedUntil(FIELDNO("Starting Date"));
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum];
                                                   NotBlank=Yes }
    { 60  ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                CheckModifyAllowed(FIELDNO("Ending Date"));
                                                                IF "Ending Date" <> 0D THEN
                                                                  TESTFIELD("Starting Date");
                                                                IF "Ending Date" < "Starting Date" THEN
                                                                  FIELDERROR("Ending Date", STRSUBSTNO(Text002, FIELDCAPTION("Starting Date"), "Starting Date"));
                                                                CALCFIELDS("Invoiced until");
                                                                IF "Ending Date" < "Invoiced until" THEN
                                                                  FIELDERROR("Ending Date", STRSUBSTNO(Text002, FIELDCAPTION("Invoiced until"), "Invoiced until"));
                                                                CheckOverlap;
                                                                CheckPlantInventoryInvoicedUntil(FIELDNO("Ending Date"));
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              NOR=Sluttdato;
                                                              SVE=Slutdatum];
                                                   NotBlank=Yes }
    { 70  ;   ;Agreement Type      ;Code10        ;TableRelation="Rental Agreement Type";
                                                   OnValidate=VAR
                                                                RentalAgreementType@1100529000 : Record 11229934;
                                                              BEGIN
                                                                CALCFIELDS("Agreement Type Description", "Invoiced until");
                                                                IF ("Agreement Type" <> '') AND ("Agreement Type" <> xRec."Agreement Type") AND ("Invoiced until" = 0D) THEN BEGIN
                                                                  RentalAgreementType.GET("Agreement Type");
                                                                  IF RentalAgreementType."Default Invoice Agreement Loc." <> 0 THEN
                                                                    VALIDATE("Invoice Agreement Location", RentalAgreementType."Default Invoice Agreement Loc.");
                                                                  IF RentalAgreementType."Default Plant Calendar" <> '' THEN
                                                                    VALIDATE("Plant Calendar", RentalAgreementType."Default Plant Calendar");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Agreement Type }
    { 71  ;   ;Agreement Type Description;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Rental Agreement Type".Description WHERE (Code=FIELD(Agreement Type)));
                                                   CaptionML=ENU=Agreement Type Description;
                                                   Editable=No }
    { 80  ;   ;Invoice Agreement Location;Option  ;OnValidate=BEGIN
                                                                CheckModifyAllowed(FIELDNO("Invoice Agreement Location"));
                                                              END;

                                                   CaptionML=ENU=Invoice Agreement Location;
                                                   OptionCaptionML=ENU=" ,Always,Location Dependent";
                                                   OptionString=[ ,Always,Location Dependent];
                                                   NotBlank=Yes }
    { 90  ;   ;Plant Calendar      ;Code10        ;TableRelation="Plant Calendar";
                                                   CaptionML=[ENU=Plant Calendar;
                                                              NOR=Maskinkalender;
                                                              SVE=Maskinkalender] }
    { 100 ;   ;Element             ;Code20        ;OnValidate=VAR
                                                                PlantElementMgt@1100529000 : Codeunit 11012582;
                                                              BEGIN
                                                                IF Element <> '' THEN BEGIN
                                                                  TESTFIELD("Plant Location");
                                                                  PlantElementMgt.OnValidateElement("Plant Location", Element, '', TRUE);
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              PlantElementMgt@1100529000 : Codeunit 11012582;
                                                              NewElement@1100525000 : Code[20];
                                                            BEGIN
                                                              NewElement := PlantElementMgt.OnLookupElement("Plant Location", Element, '', TRUE);
                                                              IF (NewElement <> '') AND (NewElement <> Element) THEN
                                                                VALIDATE(Element, NewElement);
                                                            END;

                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 110 ;   ;Your Reference      ;Text30        ;CaptionML=[ENU=Your Reference;
                                                              NOR=Deres referanse;
                                                              SVE=Er referens] }
    { 120 ;   ;Order No.           ;Text30        ;CaptionML=[ENU=Order No. Customer;
                                                              NOR=Ordrenr, (Kunde);
                                                              SVE=Ordernr, (kund)] }
    { 130 ;   ;Created on          ;DateTime      ;CaptionML=[ENU=Created on;
                                                              NOR=Opprettet den;
                                                              SVE=Skapades];
                                                   Editable=No }
    { 200 ;   ;Invoiced until      ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Max("Plant Rental Agr. Inv. Period"."Invoiced until" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                                           Plant No.=FIELD(Plant No.),
                                                                                                                           Agreement No.=FIELD(Agreement No.)));
                                                   CaptionML=[ENU=Invoiced until;
                                                              NOR=Fakturert frem til;
                                                              SVE=Fakturerad till];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Plant Type,Plant No.,Agreement No.      ;Clustered=Yes }
    {    ;Plant Location,Plant Type,Plant No.,Agreement No. }
    {    ;Plant Type,Plant No.,Starting Date       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100525000 : TextConst 'ENU=may not be greater than %1 (%2)';
      Text002@1100525001 : TextConst 'ENU=may not be less than %1 (%2)';
      Text003@1100525003 : TextConst 'ENU=Agreement periode (%1..%2) is (partly) in period of %3 ''%4'' (%5..%6), %7 ''%8-%9''';
      Text004@1100525002 : TextConst 'ENU=may not be modified (already invoiced)';
      Text005@1100529001 : TextConst 'ENU=may not be modified (already invoiced completely)';
      Text006@1100529000 : TextConst 'ENU=must be %1';
      Text007@1100529002 : TextConst 'ENU=Warning: Zero Rate present on %1 (%2 ''%3-%4'', %5 ''%6'')';
      Text008@1100529003 : TextConst 'ENU=%1 of %2 ''%3-%4'' is already %5 ''%6''. Determine whether you need to make Rental Corrections. \ \New %7, are you sure?';

    LOCAL PROCEDURE FirstFreeAgreementNo@1100525000() : Integer;
    VAR
      PlantRentalAgreement@1100525000 : Record 11229935;
    BEGIN
      PlantRentalAgreement.SETRANGE("Plant Type", "Plant Type");
      PlantRentalAgreement.SETRANGE("Plant No.", "Plant No.");
      IF PlantRentalAgreement.FINDLAST THEN
        EXIT(PlantRentalAgreement."Agreement No." + 1);
      EXIT(1);
    END;

    LOCAL PROCEDURE CheckRequiredFieldsFilled@1100525001();
    BEGIN
      TESTFIELD("Plant Type");
      TESTFIELD("Plant No.");
      TESTFIELD("Plant Location");
      TESTFIELD("Starting Date");
      TESTFIELD("Ending Date");
      TESTFIELD("Invoice Agreement Location");
    END;

    LOCAL PROCEDURE CheckModifyAllowed@1100525004(FieldNumber@1100525000 : Integer);
    BEGIN
      CALCFIELDS("Invoiced until");
      IF "Invoiced until" = 0D THEN
        EXIT;
      IF ((FieldNumber = 0) OR (FieldNumber = FIELDNO("Plant Type"))) AND ("Plant Type" <> xRec."Plant Type") THEN
        FIELDERROR("Plant Type", Text004);
      IF ((FieldNumber = 0) OR (FieldNumber = FIELDNO("Plant No."))) AND ("Plant No." <> xRec."Plant No.") THEN
        FIELDERROR("Plant No.", Text004);
      IF ((FieldNumber = 0) OR (FieldNumber = FIELDNO("Plant Location"))) AND ("Plant Location" <> xRec."Plant Location") THEN
        FIELDERROR("Plant Location", Text004);
      IF ((FieldNumber = 0) OR (FieldNumber = FIELDNO("Starting Date"))) AND ("Starting Date" <> xRec."Starting Date") THEN
        FIELDERROR("Starting Date", Text004);
      IF ((FieldNumber = 0) OR (FieldNumber = FIELDNO("Ending Date"))) AND ("Ending Date" <> xRec."Ending Date") THEN BEGIN
        IF RentalAgreementCompletelyInvoiced('') THEN
          FIELDERROR("Ending Date", Text005);
      END;
      IF ((FieldNumber = 0) OR (FieldNumber = FIELDNO("Invoice Agreement Location"))) AND
         ("Invoice Agreement Location" <> xRec."Invoice Agreement Location")
      THEN
        FIELDERROR("Invoice Agreement Location", Text004);
    END;

    LOCAL PROCEDURE CheckOverlap@1100525003();
    VAR
      PlantRentalAgreement@1100525000 : Record 11229935;
    BEGIN
      PlantRentalAgreement.SETRANGE("Plant Type", "Plant Type");
      PlantRentalAgreement.SETRANGE("Plant No.", "Plant No.");
      PlantRentalAgreement.SETFILTER("Agreement No.", '<>%1', "Agreement No.");
      PlantRentalAgreement.SETFILTER("Starting Date", '<=%1', "Ending Date");
      PlantRentalAgreement.SETFILTER("Ending Date", '>=%1', "Starting Date");
      IF PlantRentalAgreement.FINDFIRST THEN BEGIN
        ERROR(Text003, "Starting Date", "Ending Date", FIELDCAPTION("Agreement No."),
          PlantRentalAgreement."Agreement No.", PlantRentalAgreement."Starting Date", PlantRentalAgreement."Ending Date",
          FIELDCAPTION("Plant No."), "Plant Type", "Plant No.");
      END;
    END;

    LOCAL PROCEDURE CheckPlantInventoryInvoicedUntil@1100529006(FieldNumber@1100529000 : Integer);
    VAR
      PlantInventory@1100529002 : Record 11012555;
      PlantInventoryInvoicedUntil@1100529001 : Date;
      NewAgreement@1100529003 : Boolean;
      ConfirmDateText@1100529004 : Text;
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT;
      IF "Agreement No." = 0 THEN
        NewAgreement := TRUE
      ELSE BEGIN
        IF "Created on" <> 0DT THEN
          NewAgreement := ((CURRENTDATETIME - "Created on") < 600000);
      END;
      CASE FieldNumber OF
        FIELDNO("Starting Date"):
          BEGIN
            IF "Starting Date" <> xRec."Starting Date" THEN BEGIN
              PlantInventoryInvoicedUntil := GetPlantInventoryMaxInvoicedUntil;
              IF (PlantInventoryInvoicedUntil >= "Starting Date") OR
                 ((PlantInventoryInvoicedUntil >= xRec."Starting Date") AND (NOT NewAgreement))
              THEN
                ConfirmDateText := STRSUBSTNO('%1 ''%2''', FIELDCAPTION("Starting Date"), "Starting Date");
            END;
          END;
        FIELDNO("Ending Date"):
          BEGIN
            IF ("Ending Date" <> xRec."Ending Date") AND (NOT NewAgreement) THEN BEGIN
              PlantInventoryInvoicedUntil := GetPlantInventoryMaxInvoicedUntil;
              IF (PlantInventoryInvoicedUntil >= "Ending Date") OR (PlantInventoryInvoicedUntil >= xRec."Ending Date") THEN
                ConfirmDateText := STRSUBSTNO('%1 ''%2''', FIELDCAPTION("Ending Date"), "Ending Date");
            END;
          END;
      END;
      IF ConfirmDateText <> '' THEN BEGIN
        IF NOT CONFIRM(Text008, TRUE,
          PlantInventory.TABLECAPTION, FIELDCAPTION("Plant No."), "Plant Type", "Plant No.",
          PlantInventory.FIELDCAPTION("Invoiced until"), PlantInventoryInvoicedUntil, ConfirmDateText)
        THEN
          ERROR('');
      END;
    END;

    PROCEDURE GetPlantLocationCustomerName@1100529005() : Text;
    VAR
      Customer@1100529000 : Record 18;
    BEGIN
      CALCFIELDS("Customer No.");
      IF "Customer No." = '' THEN
        EXIT('');
      IF Customer.GET("Customer No.") THEN
        EXIT(Customer.Name);
      EXIT('');
    END;

    LOCAL PROCEDURE GetPlantInventoryMaxInvoicedUntil@1100529004() MaxInvoicedUntil : Date;
    VAR
      PlantInventory@1100529000 : Record 11012555;
    BEGIN
      PlantInventory.SETCURRENTKEY("Plant Type","Plant No.","Present from");
      PlantInventory.SETRANGE("Plant Type", "Plant Type");
      PlantInventory.SETRANGE("Plant No.", "Plant No.");
      PlantInventory.SETRANGE(Depot, FALSE);
      PlantInventory.SETFILTER("Invoiced until", '<>%1', 0D);
      WHILE PlantInventory.FINDLAST DO BEGIN
        MaxInvoicedUntil := PlantInventory."Invoiced until";
        PlantInventory.SETFILTER("Invoiced until", '>%1', MaxInvoicedUntil);
      END;
    END;

    LOCAL PROCEDURE InsertRateOnStartingDate@1100525002();
    VAR
      PlantRentalAgreementRate@1100525000 : Record 11229936;
    BEGIN
      PlantRentalAgreementRate.INIT;
      PlantRentalAgreementRate."Plant Type" := "Plant Type";
      PlantRentalAgreementRate."Plant No.":= "Plant No.";
      PlantRentalAgreementRate."Agreement No." := "Agreement No.";
      PlantRentalAgreementRate."Starting Date" := "Starting Date";
      PlantRentalAgreementRate.INSERT;
    END;

    LOCAL PROCEDURE UpdateRateLines@1100525008();
    VAR
      PlantRentalAgreementRate@1100525000 : Record 11229936;
    BEGIN
      IF "Starting Date" < xRec."Starting Date" THEN BEGIN
        PlantRentalAgreementRate.SETRANGE("Plant Type", "Plant Type");
        PlantRentalAgreementRate.SETRANGE("Plant No.", "Plant No.");
        PlantRentalAgreementRate.SETRANGE("Agreement No.", "Agreement No.");
        IF PlantRentalAgreementRate.FINDFIRST THEN BEGIN
          IF PlantRentalAgreementRate."Starting Date" > "Starting Date" THEN BEGIN
            PlantRentalAgreementRate.DELETE;
            PlantRentalAgreementRate."Starting Date" := "Starting Date";
            PlantRentalAgreementRate.INSERT;
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE WarningZeroRatePresent@1100529003();
    VAR
      PlantRentalAgreementRate@1100529001 : Record 11229936;
    BEGIN
      PlantRentalAgreementRate.SETRANGE("Plant Type", "Plant Type");
      PlantRentalAgreementRate.SETRANGE("Plant No.", "Plant No.");
      PlantRentalAgreementRate.SETRANGE("Agreement No.", "Agreement No.");
      PlantRentalAgreementRate.SETRANGE("Rental Rate (Days)", 0);
      IF PlantRentalAgreementRate.FINDFIRST THEN
        MESSAGE(Text007, TABLECAPTION, FIELDCAPTION("Plant No."), "Plant Type", "Plant No.", FIELDCAPTION("Agreement No."), "Agreement No.");
    END;

    PROCEDURE RentalAgreementCompletelyInvoiced@1100529002(Company@1100529001 : Text) : Boolean;
    VAR
      PlantRentalAgrInvPeriod@1100529000 : Record 11229937;
    BEGIN
      IF (Company <> '') AND (Company <> COMPANYNAME) THEN
        PlantRentalAgrInvPeriod.CHANGECOMPANY(Company);
      PlantRentalAgrInvPeriod.SETRANGE("Plant Type", "Plant Type");
      PlantRentalAgrInvPeriod.SETRANGE("Plant No.", "Plant No.");
      PlantRentalAgrInvPeriod.SETRANGE("Agreement No.", "Agreement No.");
      PlantRentalAgrInvPeriod.SETRANGE("Completely Invoiced", FALSE);
      IF NOT PlantRentalAgrInvPeriod.ISEMPTY THEN
        EXIT(FALSE);

      PlantRentalAgrInvPeriod.SETRANGE("Completely Invoiced", TRUE);
      PlantRentalAgrInvPeriod.SETRANGE("Ending Date", "Ending Date");
      IF PlantRentalAgrInvPeriod.ISEMPTY THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE NumberOfInvoicePeriods@1100529001() : Integer;
    VAR
      PlantRentalAgrInvPeriod@1100529000 : Record 11229937;
    BEGIN
      PlantRentalAgrInvPeriod.SETRANGE("Plant Type", "Plant Type");
      PlantRentalAgrInvPeriod.SETRANGE("Plant No.", "Plant No.");
      PlantRentalAgrInvPeriod.SETRANGE("Agreement No.", "Agreement No.");
      EXIT(PlantRentalAgrInvPeriod.COUNT);
    END;

    PROCEDURE ShowInvoicePeriods@1100529000();
    VAR
      PlantRentalAgrInvPeriod@1100529000 : Record 11229937;
    BEGIN
      PlantRentalAgrInvPeriod.FILTERGROUP(2);
      PlantRentalAgrInvPeriod.SETRANGE("Plant Type", "Plant Type");
      PlantRentalAgrInvPeriod.SETRANGE("Plant No.", "Plant No.");
      PlantRentalAgrInvPeriod.SETRANGE("Agreement No.", "Agreement No.");
      PlantRentalAgrInvPeriod.FILTERGROUP(0);
      PAGE.RUNMODAL(PAGE::"Plant Rental Agr. Inv. Periods", PlantRentalAgrInvPeriod);
    END;

    BEGIN
    END.
  }
}

