OBJECT Table 77791 TT DotNet Product
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=TTool;
  }
  PROPERTIES
  {
    OnInsert=VAR
               TTNetProduct@1000 : Record 77791;
             BEGIN
               IF TTNetProduct.COUNT = 0 THEN
                 Active := TRUE;
             END;

    OnDelete=VAR
               TTNETCaption@1100525000 : Record 77793;
               TTNetFile@1000 : Record 77794;
               TTNetDataName@1001 : Record 77792;
             BEGIN
               IF NOT CONFIRM(Text000, FALSE, TABLECAPTION) THEN
                 ERROR('');

               TTNETCaption.SETRANGE("Product Code",Code);
               TTNETCaption.DELETEALL;

               TTNetDataName.SETRANGE("Product Code",Code);
               TTNetDataName.DELETEALL;

               TTNetFile.SETRANGE("Product Code", Code);
               TTNetFile.DELETEALL;
             END;

    CaptionML=ENU=TT DotNet  Product;
    LookupPageID=Page77791;
    DrillDownPageID=Page77791;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              SVE=Kod] }
    { 10  ;   ;Description         ;Text80        ;CaptionML=[ENU=Description;
                                                              SVE=Beskrivning] }
    { 20  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=ENU=,Not Started,In Progress,On Hold,Completed,Frozen,N/A;
                                                   OptionString=,Not Started,In Progress,On Hold,Completed,Frozen,N/A }
    { 30  ;   ;No. of Captions     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("TT DotNet Caption" WHERE (Product Code=FIELD(Code)));
                                                   CaptionML=ENU=No. of Captions;
                                                   Editable=No }
    { 35  ;   ;Source Language ID  ;Code10        ;TableRelation="TT Language";
                                                   OnValidate=VAR
                                                                TTNetCaptions@1000 : Record 77793;
                                                              BEGIN
                                                                TTNetCaptions.SETRANGE("Product Code",Code);
                                                                IF TTNetCaptions.COUNT > 0 THEN
                                                                  ERROR(Text001);
                                                              END;

                                                   CaptionML=ENU=Source Language ID }
    { 36  ;   ;Target Language ID  ;Code10        ;TableRelation="TT Language";
                                                   OnValidate=VAR
                                                                TTNetCaptions@1000 : Record 77793;
                                                              BEGIN
                                                                TTNetCaptions.SETRANGE("Product Code",Code);
                                                                IF TTNetCaptions.COUNT > 0 THEN
                                                                  ERROR(Text001);
                                                              END;

                                                   CaptionML=ENU=Target Language ID }
    { 37  ;   ;Active              ;Boolean       ;OnValidate=VAR
                                                                TTProduct@1100525000 : Record 77791;
                                                              BEGIN
                                                                IF Active THEN BEGIN
                                                                  SetActive(Rec, Code);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Active;
                                                              SVE=Aktiv] }
    { 40  ;   ;File Name Addition  ;Text5         ;CaptionML=ENU=File Name Addition }
    { 45  ;   ;Import Directory    ;Text250       ;OnValidate=BEGIN
                                                                IF ("Import Directory" <> '') THEN BEGIN
                                                                  FileMgt.AddBackSlashToDirectoryName("Import Directory");
                                                                  CheckDirectory(FIELDCAPTION("Import Directory"), "Import Directory");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Import Directory;
                                                              SVE=Import katalog] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Status                                   }
  }
  FIELDGROUPS
  {
    { 1   ;Dropdown            ;Code,Description                         }
  }
  CODE
  {
    VAR
      Text000@1100525000 : TextConst 'ENU=Are you sure you want to delete this %1?';
      Text001@1000 : TextConst 'ENU=You can''t change language ID of a product when the product already contains captions.';
      Text002@1001 : TextConst 'ENU=%1 ''%2'' not present or no permission for this directory.;SVE=%1 ''%2'' finns inte eller s† finns det ingen beh”righet f”r den h„r katalogen.';
      FileMgt@1002 : Codeunit 419;

    PROCEDURE SetActive@1100525000(TTNetProduct@1100525000 : Record 77791;NetProductCode@1100525001 : Code[20]);
    BEGIN
      TTNetProduct.RESET;
      TTNetProduct.SETRANGE(Active,TRUE);
      TTNetProduct.SETFILTER(Code,'<>%1',NetProductCode);
      IF TTNetProduct.FIND('-') THEN BEGIN
        TTNetProduct.Active := FALSE;
        TTNetProduct.MODIFY;
      END;
    END;

    PROCEDURE CheckDirectory@1(IDirCaption@1001 : Text[100];IDirectory@1000 : Text[250]);
    BEGIN
      IF NOT FileMgt.ClientDirectoryExists(IDirectory) THEN
        ERROR(Text002, IDirCaption, CONVERTSTR(IDirectory, '\', '/'));
    END;

    BEGIN
    END.
  }
}

