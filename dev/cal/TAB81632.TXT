OBJECT Table 81632 Handyman Salarycodes
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE.HM;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Last Modified Date/Time" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               IF ((xRec.Description <> Rec.Description)      OR
                  (xRec.Unit <> Rec.Unit)                     OR
                  (xRec.SumOnTimesheet <> Rec.SumOnTimesheet) OR
                  (xRec.InfoMandatory <> Rec.InfoMandatory)   OR
                  (xRec.Price <> Rec.Price)                   OR
                  (xRec.VATRate <> Rec.VATRate)               OR
                  (xRec.AvailableForCategory <> Rec.AvailableForCategory) OR
                  (xRec."In Handyman" <> Rec."In Handyman")   // 140812
                  ) THEN
                  "Last Modified Date/Time" := CURRENTDATETIME;
               IF (Modified) THEN BEGIN
                  Modified := FALSE;
                  "Last Modified Date/Time" := CURRENTDATETIME;
               END;
             END;

  }
  FIELDS
  {
    { 1   ;   ;Salary Code         ;Code20        ;CaptionML=[ENU=HM Salary Code;
                                                              SVE=Handyman l”neart] }
    { 2   ;   ;Description         ;Text250       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 3   ;   ;Unit                ;Option        ;OnValidate=BEGIN
                                                                IF (Unit <> Unit::Hours) THEN "Hours Type" := 0;
                                                              END;

                                                   CaptionML=[ENU=Unit;
                                                              NOR=Enhet;
                                                              SVE=Enhet];
                                                   OptionCaptionML=[ENU=Hours,Amount, ,Kilometers;
                                                                    SVE=Tid/™vrigt,Belopp, ,Kilometer];
                                                   OptionString=Hours,Amount, ,Kilometers }
    { 4   ;   ;SumOnTimesheet      ;Integer       ;CaptionML=[ENU=Sum on Timesheet;
                                                              SVE=Summeras p† tidrapport] }
    { 5   ;   ;InfoMandatory       ;Boolean       ;CaptionML=[ENU=Info Mandatory;
                                                              SVE=Info obligatorisk] }
    { 6   ;   ;Price               ;Decimal       ;CaptionML=[ENU=Price;
                                                              NOR=Pris;
                                                              SVE=Pris] }
    { 7   ;   ;VATRate             ;Decimal       ;CaptionML=[ENU=VAT Rate;
                                                              NOR=Mva.;
                                                              SVE=Momssats] }
    { 8   ;   ;AvailableForCategory;Integer       ;CaptionML=[ENU=Available for Category;
                                                              SVE=Kan anv„ndas p†] }
    { 9   ;   ;Modified            ;Boolean       ;CaptionML=[ENU=Modified;
                                                              NOR=Endret;
                                                              SVE=Žndrad] }
    { 10  ;   ;Hours Type          ;Option        ;OnValidate=BEGIN
                                                                IF ("Hours Type" <> 0) THEN TESTFIELD(Unit, Unit::Hours);
                                                              END;

                                                   CaptionML=[ENU=Hours Type;
                                                              NOR=Type timer;
                                                              SVE=Typ av timmar];
                                                   OptionCaptionML=[ENU=Normal time,Overtime,Holiday,Sick Time,Extra Pay,Quantity;
                                                                    SVE=Normaltid,™vertid,Semester,Sjukfr†nvaro,Till„gg,Antal];
                                                   OptionString=Normal time,Overtime,Holiday,Sick Time,Extra Pay,Quantity }
    { 11  ;   ;In Handyman         ;Boolean       ;CaptionML=[ENU=In Handyman;
                                                              SVE=I Handyman] }
    { 20  ;   ;Last Modified Date/Time;DateTime   ;CaptionML=SVE=Žndrades senast (datum/tid) }
    { 22  ;   ;NAV Cost Code       ;Code30        ;TableRelation="Cost Code";
                                                   CaptionML=[ENU=Nav Cost Code;
                                                              NOR=NAV Kostnadskode;
                                                              SVE=NAV Kostnadskod] }
    { 23  ;   ;NAV Wage Component  ;Code30        ;TableRelation="Wage Component";
                                                   CaptionML=[ENU=NAV Wage Component;
                                                              SVE=NAV L”neart] }
    { 24  ;   ;NAV Cost Object     ;Code30        ;TableRelation="Dimension Value".Code WHERE (Dimension Code=CONST(KOSTNADSOBJEKT));
                                                   CaptionML=[ENU=NAV Cost Object;
                                                              NOR=NAV Kostnadsobjekt;
                                                              SVE=NAV Kostnadsobjekt] }
  }
  KEYS
  {
    {    ;Salary Code                             ;Clustered=Yes }
    {    ;Last Modified Date/Time                  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    {
      140812 ITERO.MH Updated trigger to account for "In Handyman"-checkbox
    }
    END.
  }
}

