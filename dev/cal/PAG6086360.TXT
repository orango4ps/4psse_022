OBJECT Page 6086360 Continia Config. Subpage EM
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW17.00.00.3.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Continia-Konfiguration Unterseite;
               ENU=Continia Configuration Subpage;
               NLD=Continia config. subf.];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table6085612;
    PageType=ListPart;
    SourceTableTemporary=Yes;
  }
  CONTROLS
  {
    { 1160040000;;Container;
                Name=ContentArea;
                ContainerType=ContentArea }

    { 1160040001;1;Group  ;
                Name=Group;
                IndentationColumnName=Indentation;
                IndentationControls=Table Name;
                ShowAsTree=Yes;
                GroupType=Repeater }

    { 1160040002;2;Field  ;
                Name=Table Name;
                SourceExpr="Table Name";
                Editable=FALSE }

    { 1160040003;2;Field  ;
                Name=Record Name;
                SourceExpr="Record Name";
                Editable=FALSE }

    { 1160040004;2;Field  ;
                Name=Include;
                SourceExpr=Include;
                OnValidate=BEGIN
                             IF Direction = Direction::Import THEN
                               IF (NOT xRec.Include) AND Include THEN
                                 IF NOT CONFIRM(IncludeConfirm,TRUE) THEN
                                   ERROR('');

                             ModifyTempTable("Entry No.",Include);
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

  }
  CODE
  {
    VAR
      GlobalTempConfigLine@1160040002 : TEMPORARY Record 6085612;
      ConfigMgt@1160040001 : Codeunit 6086354;
      ActualExpansionStatus@1160040000 : 'Has Children,Expanded,No Children';
      Direction@1000 : 'Import,Export';
      IncludeConfirm@1001 : TextConst 'DEU=Dadurch werden alle Daten in dieser Tabelle und ihren Untertabellen Åberschrieben. Mîchten Sie fortfahren?;ENU=This will overwrite any existing data in this table and its subtables. Do you want to continue?;NLD=De gegevens in de tabel en alle subtabellen zullen worden overschreven. Wilt u doorgaan?';

    PROCEDURE CreateTempTable@1160040000();
    BEGIN
      ConfigMgt.ShowTree(GlobalTempConfigLine);
      UpdateTables;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE PerformAction@1160040001();
    BEGIN
      ConfigMgt.PerfomAction(GlobalTempConfigLine);
      UpdateTables;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE IsExpanded@20() Found : Boolean;
    VAR
      TempConfigLine@1160040000 : TEMPORARY Record 6085612;
    BEGIN
      TempConfigLine := Rec;

      SETRANGE("Source Entry No.","Entry No.");
      Found := NOT ISEMPTY;

      RESET;
      Rec := TempConfigLine;
      EXIT;
    END;

    PROCEDURE HasChildren@1160040016(EntryNo@1160040001 : Integer) Found : Boolean;
    BEGIN
      GlobalTempConfigLine.RESET;
      GlobalTempConfigLine.SETRANGE("Source Entry No.",EntryNo);
      Found := NOT GlobalTempConfigLine.ISEMPTY;
      EXIT;
    END;

    PROCEDURE UpdateTables@1160040005();
    BEGIN
      RESET;
      DELETEALL;

      GlobalTempConfigLine.RESET;
      IF GlobalTempConfigLine.FINDSET THEN
        REPEAT
          Rec := GlobalTempConfigLine;
          INSERT;
        UNTIL GlobalTempConfigLine.NEXT = 0;

      IF FINDSET THEN;
    END;

    PROCEDURE ModifyTempTable@1160040002(EntryNo@1160040002 : Integer;IsInclude@1160040001 : Boolean);
    VAR
      SourceEntryNo@1000 : Integer;
      SelectedChildExists@1001 : Boolean;
    BEGIN
      GlobalTempConfigLine.GET(EntryNo);
      GlobalTempConfigLine.Include := IsInclude;
      GlobalTempConfigLine.MODIFY;
      SourceEntryNo := GlobalTempConfigLine."Source Entry No.";

      GlobalTempConfigLine.RESET;
      GlobalTempConfigLine.SETRANGE("Source Entry No.",EntryNo);
      IF GlobalTempConfigLine.FINDSET THEN
        REPEAT
          GlobalTempConfigLine.Include := IsInclude;
          GlobalTempConfigLine.MODIFY;

          IF GET(GlobalTempConfigLine."Entry No.") THEN BEGIN
            Include := IsInclude;
            MODIFY;
          END;
        UNTIL GlobalTempConfigLine.NEXT = 0;

      IF SourceEntryNo <> 0 THEN BEGIN
        GlobalTempConfigLine.RESET;
        GlobalTempConfigLine.SETRANGE("Source Entry No.",SourceEntryNo);
        GlobalTempConfigLine.SETRANGE(Include,TRUE);
        SelectedChildExists := NOT GlobalTempConfigLine.ISEMPTY;

        GlobalTempConfigLine.GET(SourceEntryNo);
        GlobalTempConfigLine.Include := SelectedChildExists;
        GlobalTempConfigLine.MODIFY;

        IF GET(GlobalTempConfigLine."Entry No.") THEN BEGIN
          Include := SelectedChildExists;
          MODIFY;
        END;
      END;

      GET(EntryNo);
      Include := IsInclude;
      MODIFY;
      RESET;
    END;

    PROCEDURE ClearTempTable@1160040003();
    BEGIN
      GlobalTempConfigLine.RESET;
      GlobalTempConfigLine.DELETEALL;
      RESET;
      DELETEALL;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetParam@1160040004(NewDirection@1160040001 : 'Import,Export';VAR NewTempFile@1001 : TEMPORARY Record 6085608;NewCompany@1000 : Boolean);
    BEGIN
      Direction := NewDirection;
      ConfigMgt.SetParam(NewDirection,NewTempFile,NewCompany);
    END;

    PROCEDURE GetXmlFile@1(VAR TempXmlFile@1000 : TEMPORARY Record 6085608);
    BEGIN
      ConfigMgt.GetXmlFile(TempXmlFile);
    END;

    BEGIN
    END.
  }
}

