OBJECT Codeunit 81657 Close Projects
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=RFC1136;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            TestProjects;

            MarkErrorLines;

            CheckIfProjectHasErrors('');

            CloseProjects;
          END;

  }
  CODE
  {

    PROCEDURE TestProjects@1100285106();
    VAR
      Error@1100285102 : Record 11012051;
      Job@1100285101 : Record 11072003;
      RepCloseProjects@1100285100 : Report 11012038;
      Projectsforclosing@1100285103 : Record 81657;
      CloseProjectService@1100285104 : Codeunit 11012046;
      lvType@1100285116 : 'Project,Service Contract,Service Order';
      lvProj@1100285115 : Code[20];
      lvContr@1100285114 : Code[20];
      lvOrder@1100285113 : Code[20];
      lvPostingDate@1100285112 : Date;
      lvIgnorePurchase@1100285111 : Boolean;
      lvIgnoreSales@1100285110 : Boolean;
      lvIgnoreFuturePostings@1100285109 : Boolean;
      lvIgnoreServiceOrders@1100285108 : Boolean;
      lvIgnoreWorkOrders@1100285107 : Boolean;
      lvPeriod@1100285106 : Text[30];
      lvExtraTest@1100285105 : Boolean;
      lvProjectClosed@1100583000 : Boolean;
    BEGIN
      Projectsforclosing.SETRANGE(Released, TRUE);
      IF Projectsforclosing.FINDSET(FALSE) THEN REPEAT
        Job.SETFILTER("Main Project", Projectsforclosing."Project No.");
        IF Job.FINDSET(FALSE) THEN BEGIN
          Error.SETRANGE("Source Type", Error."Source Type"::"Finish Service-Project");
          Error.SETFILTER("Service Contract No.", Job."Main Project");
          IF Error.FINDSET(TRUE,TRUE) THEN BEGIN
            Error.DELETEALL;
          END;
          CLEAR(Error);
          Projectsforclosing.Errors := FALSE;
          Projectsforclosing.MODIFY;
          RepCloseProjects.FillSelection(
                                        Projectsforclosing."Posting Date",
                                        FALSE,
                                        Projectsforclosing.IgnorePurchase,
                                        Projectsforclosing.IgnorePlant,
                                        Projectsforclosing.IgnoreSales,
                                        Projectsforclosing.IgnoreFuturePostings,
                                        Projectsforclosing.IgnoreProjectInventory,
                                        Projectsforclosing.IgnoreServiceOrders,
                                        Projectsforclosing.BuildSnapshot,
                                        Projectsforclosing.ProvisionsRevenues,
                                        Projectsforclosing.ProvisionsCosts,
                                        Projectsforclosing.PreviewClosedProjects,
                                        TRUE);

          RepCloseProjects.SETTABLEVIEW(Job);
          RepCloseProjects.USEREQUESTPAGE(FALSE);
          COMMIT;
          RepCloseProjects.RUN;
          CLEAR(RepCloseProjects);
        END;

      UNTIL Projectsforclosing.NEXT = 0;
    END;

    PROCEDURE CheckIfProjectHasErrors@1100583013(ProjectNo@1101285001 : Code[20]);
    VAR
      Projectsforclosing@1100583000 : Record 81657;
      Error@1100583001 : Record 11012051;
    BEGIN
      CLEAR(Error);
      CLEAR(Projectsforclosing);

      IF ProjectNo <> '' THEN
        Projectsforclosing.SETFILTER("Project No.", ProjectNo);

      IF Projectsforclosing.FINDSET(TRUE) THEN REPEAT
          Error.SETRANGE("Source Type", Error."Source Type"::"Finish Service-Project");
          Error.SETFILTER("Service Contract No.", Projectsforclosing."Project No.");
          IF Error.ISEMPTY THEN
            Projectsforclosing.Errors   := FALSE
          ELSE BEGIN
            Projectsforclosing.Errors   := TRUE;
            Projectsforclosing.Released := FALSE;
          END;

          Projectsforclosing.MODIFY
      UNTIL Projectsforclosing.NEXT = 0;
    END;

    PROCEDURE CloseProjects@1100583001();
    VAR
      Error@1100285102 : Record 11012051;
      Job@1100285101 : Record 11072003;
      RepCloseProjects@1100285100 : Report 11012038;
      Projectsforclosing@1100285103 : Record 81657;
      CloseProjectService@1100285104 : Codeunit 11012046;
      lvType@1100285116 : 'Project,Service Contract,Service Order';
      lvProj@1100285115 : Code[20];
      lvContr@1100285114 : Code[20];
      lvOrder@1100285113 : Code[20];
      lvPostingDate@1100285112 : Date;
      lvIgnorePurchase@1100285111 : Boolean;
      lvIgnoreSales@1100285110 : Boolean;
      lvIgnoreFuturePostings@1100285109 : Boolean;
      lvIgnoreServiceOrders@1100285108 : Boolean;
      lvIgnoreWorkOrders@1100285107 : Boolean;
      lvPeriod@1100285106 : Text[30];
      lvExtraTest@1100285105 : Boolean;
      lvProjectClosed@1100583000 : Boolean;
    BEGIN
      CLEAR(Error);
      CLEAR(Projectsforclosing);
      CLEAR(Job);


      Projectsforclosing.SETRANGE("Test run complete", TRUE);
      Projectsforclosing.SETRANGE(Errors, FALSE);
      Projectsforclosing.SETRANGE(Released, TRUE);
      IF Projectsforclosing.FINDSET(TRUE,TRUE) THEN REPEAT
        Job.SETFILTER("Main Project", Projectsforclosing."Project No.");
        IF Job.FINDFIRST THEN BEGIN
          RepCloseProjects.FillSelection(
                                      Projectsforclosing."Posting Date",
                                      TRUE,
                                      FALSE,
                                      FALSE,
                                      FALSE,
                                      FALSE,
                                      FALSE,
                                      FALSE,
                                      FALSE,
                                      Projectsforclosing.ProvisionsRevenues,
                                      Projectsforclosing.ProvisionsCosts,
                                      FALSE,
                                      FALSE);
            RepCloseProjects.SETTABLEVIEW(Job);
            RepCloseProjects.USEREQUESTPAGE(FALSE);
            COMMIT;
            RepCloseProjects.RUN;
            CLEAR(RepCloseProjects);
        END;

        IF CheckIfAllSubProjectsIsClosed(Projectsforclosing."Project No.") THEN
          Projectsforclosing.DELETE;

      UNTIL Projectsforclosing.NEXT = 0;
    END;

    PROCEDURE ReleaseAllProjects@1100583000();
    VAR
      Projectsforclosing@1100583000 : Record 81657;
      Error@1101285000 : Record 11012051;
    BEGIN
      Projectsforclosing.SETFILTER("User ID", USERID);
      Projectsforclosing.SETRANGE(Released, FALSE);
      IF Projectsforclosing.FINDSET(TRUE) THEN REPEAT
        Error.SETRANGE("Service Contract No.", Projectsforclosing."Project No.");
        IF NOT Error.FINDFIRST THEN BEGIN
          Projectsforclosing.Errors := FALSE;
          Projectsforclosing.Released := TRUE;
          Projectsforclosing.MODIFY(FALSE);
        END;
      UNTIL Projectsforclosing.NEXT = 0;
    END;

    LOCAL PROCEDURE MarkErrorLines@1101285001();
    VAR
      Error@1101285001 : Record 11012051;
      Job@1101285000 : Record 11072003;
    BEGIN
      CLEAR(Error);
      CLEAR(Job);

      Error.SETRANGE("Source Type", Error."Source Type"::"Finish Service-Project");
      IF Error.FINDSET THEN REPEAT
        Job.SETFILTER("No.", Error."Project No.");
        IF Job.FINDFIRST THEN BEGIN
          Error."Service Contract No." := Job."Main Project";
          Error.MODIFY(FALSE);
        END;
      UNTIL Error.NEXT =0;
    END;

    LOCAL PROCEDURE CheckIfAllSubProjectsIsClosed@1101285005(MainProjNo@1101285000 : Code[20]) AllIsClosed : Boolean;
    VAR
      Job@1101285001 : Record 11072003;
    BEGIN
      Job.SETRANGE("Main Project", MainProjNo);
      IF Job.FINDSET(FALSE) THEN REPEAT
        IF Job."Project Status" <> Job."Project Status"::Finished THEN
          EXIT(FALSE);
      UNTIL Job.NEXT = 0;

      EXIT(TRUE);
    END;

    BEGIN
    {
      190219 ORANGO.FH RFC1136
    }
    END.
  }
}

