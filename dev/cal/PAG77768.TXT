OBJECT Page 77768 Fields to transform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table77769;
    PageType=List;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 // SETAUTOCALCFIELDS;
                 AddInReady := FALSE;
               END;

    OnQueryClosePage=BEGIN
                       IF AddInReady THEN
                         CurrPage.PingPong.Stop;
                       EXIT(TRUE);
                     END;

    ActionList=ACTIONS
    {
      { 1000000011;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000012;1 ;Action    ;
                      Name=update UPGTK Table ID;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 Fieldstotransform@1000000000 : Record 77769;
                                 _Object@1000000001 : Record 2000000001;
                               BEGIN
                                 // _Object.SETFILTER("Version List",'UPG*');
                                 _Object.SETRANGE(Type,_Object.Type::Table);
                                 _Object.SETRANGE("Company Name",'');

                                 Fieldstotransform.FINDSET;
                                 REPEAT
                                   _Object.SETRANGE(Name,'UPGTK Table '+FORMAT(Fieldstotransform."From Table",0,2));
                                   IF _Object.FINDFIRST THEN BEGIN
                                     Fieldstotransform."UPGTK Table ID" := _Object.ID;
                                     Fieldstotransform.MODIFY;
                                   END;
                                 UNTIL Fieldstotransform.NEXT=0;
                               END;
                                }
      { 1000000013;1 ;Action    ;
                      Name=starta timed update;
                      OnAction=BEGIN
                                 AddInReady := NOT AddInReady;

                                 IF NOT AddInReady THEN
                                   CurrPage.PingPong.Stop;

                                 IF AddInReady THEN
                                  CurrPage.PingPong.Ping(5000);
                               END;
                                }
      { 1000000014;1 ;Action    ;
                      Name=skapa tabellpar;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 Fieldstotransform@1000000000 : Record 77769;
                                 Fieldstotransform2@1000000001 : Record 77769;
                               BEGIN
                                 Fieldstotransform2.SETRANGE("To Table",0);
                                 // Fieldstotransform2.DELETEALL;

                                 Fieldstotransform.RESET;
                                 Fieldstotransform.SETFILTER("To Table",'1..');
                                 IF Fieldstotransform.FINDSET THEN REPEAT
                                   IF Fieldstotransform."From Field" = Fieldstotransform."To Field" THEN
                                     IF NOT Fieldstotransform2.GET(Fieldstotransform."From Table",Fieldstotransform."To Table") THEN BEGIN
                                       Fieldstotransform2.INIT;
                                       Fieldstotransform2."From Table" := Fieldstotransform."From Table";
                                       Fieldstotransform2."From Field" := Fieldstotransform."To Table";
                                       Fieldstotransform2."To Table" := 0;
                                       Fieldstotransform2."To Field" := 1;
                                       Fieldstotransform2.INSERT;
                                     END;

                                   IF Fieldstotransform."From Field" <> Fieldstotransform."To Field" THEN
                                   IF NOT Fieldstotransform2.GET(Fieldstotransform."From Table",Fieldstotransform."UPGTK Table ID") THEN BEGIN
                                     Fieldstotransform2.INIT;
                                     Fieldstotransform2."From Table" := Fieldstotransform."From Table";
                                     Fieldstotransform2."From Field" := Fieldstotransform."UPGTK Table ID";
                                     Fieldstotransform2."To Table" := 0;
                                     Fieldstotransform2."To Field" := 2;
                                     Fieldstotransform2.INSERT;
                                   END;

                                 UNTIL Fieldstotransform.NEXT=0;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1000000002;2;Field  ;
                SourceExpr="From Table" }

    { 1000000003;2;Field  ;
                SourceExpr="From Field" }

    { 1000000004;2;Field  ;
                SourceExpr="To Table" }

    { 1000000005;2;Field  ;
                SourceExpr="To Field" }

    { 1000000006;2;Field  ;
                SourceExpr="UPGTK Table ID" }

    { 1000000007;2;Field  ;
                SourceExpr=FromTableExists }

    { 1000000008;2;Field  ;
                SourceExpr=FromFieldExists }

    { 1000000009;2;Field  ;
                SourceExpr=ToTableExists }

    { 1000000010;2;Field  ;
                SourceExpr=ToFieldExists }

    { 1000000015;2;Field  ;
                SourceExpr=eqFldID }

    { 18  ;1   ;Group     ;
                GroupType=Group }

    { 17  ;2   ;Field     ;
                Name=PingPong;
                ApplicationArea=#Basic,#Suite;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.PingPong;PublicKeyToken=31bf3856ad364e35] }

  }
  CODE
  {
    VAR
      AddInReady@1002 : Boolean;
      PrevNumberOfRecords@1000000000 : Integer;

    EVENT PingPong@-17::AddInReady@2();
    BEGIN
      IF NOT AddInReady THEN
        EXIT;

      AddInReady := TRUE;
      PrevNumberOfRecords := COUNT;
      CurrPage.PingPong.Ping(5000);
    END;

    EVENT PingPong@-17::Pong@3();
    VAR
      CurrNumberOfRecords@1000 : Integer;
    BEGIN
      CurrNumberOfRecords := COUNT;
      IF PrevNumberOfRecords <> CurrNumberOfRecords THEN
        CurrPage.UPDATE(FALSE);
      PrevNumberOfRecords := CurrNumberOfRecords;
      CurrPage.PingPong.Ping(5000);
    END;

    BEGIN
    END.
  }
}

