OBJECT Table 11012743 Product Discount
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckDiscountType;
             END;

    OnModify=BEGIN
               CheckDiscountType;
             END;

    OnRename=BEGIN
               CheckDiscountType;
             END;

    CaptionML=[ENU=Product Discount;
               SVE=Produktrabatt];
  }
  FIELDS
  {
    { 5   ;   ;Discount Type       ;Option        ;CaptionML=[ENU=Discount Type;
                                                              NOR=Discount Type;
                                                              SVE=Discount Type];
                                                   OptionCaptionML=ENU=Basic Item,Product Group,Manufacturer;
                                                   OptionString=BasicItem,ProductGroup,Manufacturer }
    { 10  ;   ;Code                ;Code20        ;TableRelation=IF (Discount Type=CONST(ProductGroup)) "ETIM Product Group".Code WHERE (Code=FIELD(Code))
                                                                 ELSE IF (Discount Type=CONST(BasicItem)) "Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer),
                                                                                                                                             Product Code=FIELD(Code));
                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod] }
    { 15  ;   ;Manufacturer        ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   CaptionML=[ENU=Manufacturer;
                                                              NOR=Fabrikant;
                                                              SVE=Tillverkare] }
    { 20  ;   ;Discount Amount     ;Decimal       ;CaptionML=[ENU=Discount Amount;
                                                              NOR=Rabattbel›p;
                                                              SVE=Rabattbelopp];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 30  ;   ;Discount %          ;Decimal       ;CaptionML=[ENU=Discount %;
                                                              NOR=Rabatt-%;
                                                              SVE=Rabatt %];
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   BlankZero=Yes }
    { 40  ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                IF ("Starting Date" > "Ending Date") AND ("Ending Date" <> 0D) THEN
                                                                  ERROR(Text000,FIELDCAPTION("Starting Date"),FIELDCAPTION("Ending Date"));
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum] }
    { 50  ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                VALIDATE("Starting Date");
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              NOR=Sluttdato;
                                                              SVE=Slutdatum] }
  }
  KEYS
  {
    {    ;Discount Type,Manufacturer,Code,Starting Date;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100525000 : TextConst 'ENU=%1 cannot be after %2;NOR=%1 kan ikke v‘re etter %2;SVE=%1 kan inte vara efter %2';
      BasicItem@1100525003 : Record 11012316;
      ETIMProductGroup@1100525002 : Record 11012302;
      ETIMVendorCentralMgt@1100525001 : Record 11012304;

    PROCEDURE CheckDiscountType@1100525002();
    BEGIN
      IF "Discount Type" = "Discount Type"::BasicItem THEN BEGIN
        BasicItem.GET(Manufacturer, Code);
        IF "Discount %" <> 0 THEN
          TESTFIELD("Discount Amount", 0);
        IF "Discount Amount" <> 0 THEN
          TESTFIELD("Discount %", 0);
      END ELSE BEGIN
        IF "Discount Type" = "Discount Type"::ProductGroup THEN BEGIN
          ETIMProductGroup.GET(Code);
          TESTFIELD(Manufacturer);
        END;
        IF "Discount Type" = "Discount Type"::Manufacturer THEN BEGIN
          ETIMVendorCentralMgt.GET(Manufacturer);
          TESTFIELD(Code, '');
        END;
        TESTFIELD("Discount Amount", 0);
      END;
    END;

    PROCEDURE GetDescriptionDiscountType@1100525000() : Text;
    BEGIN
      CASE "Discount Type" OF
        "Discount Type"::BasicItem:
           BEGIN
             IF BasicItem.GET(Manufacturer, Code) THEN
               EXIT(BasicItem."Product Description");
           END;
        "Discount Type"::ProductGroup:
           BEGIN
             IF ETIMProductGroup.GET(Code) THEN
               EXIT(ETIMProductGroup.Description);
           END;
        "Discount Type"::Manufacturer:
           BEGIN
             IF ETIMVendorCentralMgt.GET(Manufacturer) THEN
               EXIT(ETIMVendorCentralMgt.Name);
           END;
      END;
      EXIT('');
    END;

    PROCEDURE GetDiscountPercentage@1100525001(iManufacturer@1100525000 : Code[20];iProductCode@1100525001 : Code[20];iRefDate@1100525003 : Date) : Decimal;
    VAR
      ProductDiscount@1100525002 : Record 11012743;
    BEGIN
      IF NOT BasicItem.GET(iManufacturer, iProductCode) THEN EXIT(0);

      WITH ProductDiscount DO BEGIN
        SETRANGE("Discount Type", "Discount Type"::BasicItem);
        SETRANGE(Manufacturer, BasicItem.Manufacturer);
        SETRANGE(Code, BasicItem."Product Code");
        SETRANGE("Starting Date", 0D, iRefDate);
        SETFILTER("Ending Date", '%1|>=%2', 0D, iRefDate);
        IF FINDLAST THEN BEGIN
          IF "Discount %" <> 0 THEN
            EXIT("Discount %");
          IF "Discount Amount" <> 0 THEN
            EXIT(0);
        END;
        //
        SETRANGE("Discount Type", "Discount Type"::ProductGroup);
        SETRANGE(Manufacturer, BasicItem.Manufacturer);
        SETRANGE(Code, BasicItem."Product Group");
        IF FINDLAST THEN
          EXIT("Discount %");
        //
        SETRANGE("Discount Type", "Discount Type"::Manufacturer);
        SETRANGE(Manufacturer, BasicItem.Manufacturer);
        SETRANGE(Code);
        IF FINDLAST THEN
          EXIT("Discount %");
      END;
      EXIT(0);
    END;

    PROCEDURE GetDiscountAmount@1100528900(iManufacturer@1100525000 : Code[20];iProductCode@1100525001 : Code[20];iRefDate@1100525003 : Date) : Decimal;
    VAR
      ProductDiscount@1100525002 : Record 11012743;
    BEGIN
      IF NOT BasicItem.GET(iManufacturer, iProductCode) THEN EXIT(0);

      WITH ProductDiscount DO BEGIN
        SETRANGE("Discount Type", "Discount Type"::BasicItem);
        SETRANGE(Manufacturer, BasicItem.Manufacturer);
        SETRANGE(Code, BasicItem."Product Code");
        SETRANGE("Starting Date", 0D, iRefDate);
        SETFILTER("Ending Date", '%1|>=%2', 0D, iRefDate);
        IF FINDLAST THEN
          EXIT("Discount Amount");
      END;
      EXIT(0);
    END;

    BEGIN
    END.
  }
}

