OBJECT Report 11125666 Imp. Construction Spec. (RAW)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Importieren Baubeschreibung (RAW);
               ENU=Imp. Construction Spec. (RAW);
               NLD=Importeer bestek (RAW);
               NOR=Importer Konstruksjonsspesifikasjoner (RAW);
               SVE=Imp. Konstruktionsspec. (RAW)];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 2643;    ;DataItem;                    ;
               DataItemTable=Table11125666;
               DataItemTableView=SORTING(No.);
               OnAfterGetRecord=VAR
                                  ConstrSpecElemLineRAW@1100525001 : Record 11125670;
                                  EstimateRAWUnitMapping@1100525003 : Record 11125675;
                                  ImpConstructionSpecRSX@1100528300 : Codeunit 11125675;
                                  TempBlob@1100528900 : TEMPORARY Record 99008535;
                                BEGIN
                                  IF "Import File Name" <> '' THEN
                                    IF NOT CONFIRM(Text002, FALSE, TABLECAPTION, "No.") THEN
                                      CurrReport.SKIP;

                                  //DP02188.sn
                                  FileName := HandleImportFile(TempBlob);
                                  IF FileName = '' THEN EXIT;
                                  ImpConstructionSpecRSX.ImportConstructionSpecRSX("No.", FileName, TempBlob);
                                  //DP02188.en

                                  //C026969.sn
                                  IF EstimateRAWUnitMapping.WRITEPERMISSION THEN BEGIN
                                    ConstrSpecElemLineRAW.SETRANGE("Specification No.", "No.");
                                    ConstrSpecElemLineRAW.SETRANGE("Internal Unit of Measure Code", '');
                                    ConstrSpecElemLineRAW.SETFILTER("External Unit of Measure Code", '<>%1', '');
                                    IF NOT ConstrSpecElemLineRAW.ISEMPTY THEN BEGIN
                                      IF CONFIRM(Text005, TRUE, ConstrSpecElemLineRAW.FIELDCAPTION("External Unit of Measure Code"),
                                        ConstrSpecElemLineRAW.FIELDCAPTION("Internal Unit of Measure Code"), EstimateRAWUnitMapping.TABLECAPTION)
                                      THEN BEGIN
                                        COMMIT;
                                        ConstrSpecElemLineRAW.FillEmptyInternalUnitsBasedOnExternalUnits("No.");
                                      END;
                                    END;
                                  END;
                                  //C026969.en
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   FileType := FileType::RSX;  //db, 18-04-17: FileType RSU no longer supported in CROW2015 (use RSX).
                 END;

    }
    CONTROLS
    {
      { 1100525003;;Container;
                  ContainerType=ContentArea }

      { 1100525002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525000;2;Field  ;
                  CaptionML=[DEU=Dateityp;
                             ENU=File Type;
                             NLD=Bestandstype;
                             NOR=Filtype;
                             SVE=Filtyp];
                  OptionCaptionML=[NOR=RSX,RSU;
                                   SVE=RSX,RSU];
                  SourceExpr=FileType }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FileName@1100525000 : Text[260];
      Text002@1100525003 : TextConst 'DEU=%1 %2 wird mit Informationen aus der Importdatei Åberschrieben.\\Mîchten Sie trotzdem fortfahren?;ENU=%1 %2 will be overwritten with information from the import file.\\Do you want to continue?;NLD=%1 %2 zal worden overschreven met informatie uit het importbestand.\\Wilt u toch doorgaan?;NOR=%1 %2 vil overskrives med informasjon fra importfilen.\\Vil du fortsette?;SVE=%1 %2 skrivs îver med information frÜn importfilen.\\Vill du fortsÑtta?';
      Text004@1100528301 : TextConst 'DEU=RSX-Datei îffnen;ENU=Open RSX File;NLD=Open RSX-bestand;NOR=èpne RSX-Fil';
      FileType@1100528302 : 'RSX,NSX';
      Text005@1100525005 : TextConst 'DEU=Zeilen vorhanden mit ''%1'' ausgefÅllt und ''%2'' leer. Nicht in ''%3'' gefunden, diese jetzt einfÅgen und ''%2'' auf den Zeilen ausfÅllen?;ENU="Lines present with ''%1'' filled and ''%2'' empty. Not found in ''%3'', insert these now and fill ''%2'' on lines? ";NLD="Regels met ''%1'' gevuld en ''%2'' leeg aanwezig. Niet gevonden in ''%3, deze nu toevoegen en ''%2'' op regels vullen? "';
      Text006@1100528901 : TextConst 'DEU=AuswÑhlen Datei...;ENU=Select file...;NLD=Selecteer bestand...;SVE=VÑlj filˇ...';

    LOCAL PROCEDURE HandleImportFile@1100528900(VAR TempBlob@1100528907 : TEMPORARY Record 99008535) : Text;
    VAR
      EstimateSetupRAW@1100528908 : Record 11125673;
      FileName@1100528906 : Text[250];
      StartFileName@1100528905 : Text[250];
      FileManagement@1100528904 : Codeunit 419;
      ClientTypeManagement@1100528903 : Codeunit 4;
      OutStream@1100528902 : OutStream;
      InStream@1100528901 : InStream;
      FromFile@1100528900 : Text;
      XmlFileFilter@1100528909 : TextConst 'DEU=XML-Dateien (*.rsx)|*.rsx;ENU=XML Files (*.rsx)|*.rsx;NLD=XML bestanden (*.rsx)|*.rsx';
      XmlFileFilter2@1100528910 : TextConst 'DEU=XML-Dateien (*.rsx)|*.rsx;ENU=XML Files (*.rsx)|*.rsx;NLD=XML bestanden (*.nsx)|*.nsx';
    BEGIN
      //DP02188
      IF NOT ClientTypeManagement.IsCommonWebClientType THEN BEGIN
        EstimateSetupRAW.GET;
        StartFileName := EstimateSetupRAW."Default Estimate Export Folder";
        IF StartFileName <> '' THEN BEGIN
          IF StartFileName[STRLEN(StartFileName)] <> '\' THEN
            StartFileName := StartFileName + '\';
          IF FileType = FileType::RSX THEN
            StartFileName := StartFileName + '*.rsx';
          IF FileType = FileType::NSX THEN
            StartFileName := StartFileName + '*.nsx';
        END;
        FileName := FileManagement.OpenFileDialog(Text004, StartFileName, SetFileType);
        IF FileName = '' THEN
          EXIT;
        FileManagement.BLOBImport4PS(TempBlob, FileName, FALSE);
      END ELSE BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        IF FileType = FileType::RSX THEN
          IF NOT UPLOADINTOSTREAM(Text006, '', XmlFileFilter, FileName, InStream) THEN
            EXIT;
        IF FileType = FileType::NSX THEN
          IF NOT UPLOADINTOSTREAM(Text006, '', XmlFileFilter2, FileName, InStream) THEN
            EXIT;
        COPYSTREAM(OutStream, InStream);
      END;
      EXIT(FileName);
    END;

    LOCAL PROCEDURE SetFileType@1100528901() FilterString : Text;
    VAR
      FileManagement@1100528900 : Codeunit 419;
    BEGIN
      //DP02188
      IF FileType = FileType::NSX THEN
        FilterString := FileManagement.GetToFilterText('', '.nsx');
      IF FileType = FileType::RSX THEN
        FilterString := FileManagement.GetToFilterText('', '.rsx');
      EXIT(FilterString);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

