OBJECT Page 157 Item Availability by Periods
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Item Availability by Periods;
               NOR=Varetilgjengelighet per periode;
               SVE=Artikeldisp. per perioder];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table27;
    PageType=ListPlus;
    RefreshOnActivate=Yes;
    OnInit=BEGIN
             ItemBtnEnable := TRUE;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 //**4PS.sn
                 IF (gCompany <> '') THEN BEGIN
                   ItemBtnEnable := FALSE;
                   CurrPage.ItemAvailLines.PAGE.SetCompany(gCompany);
                 END;
                 UpdateDimCtrls;  //db, 02-04-13: DP00120
                 //**4PS.en
               END;

    OnAfterGetRecord=BEGIN
                       SETRANGE("Drop Shipment Filter",FALSE);
                       UpdateSubForm;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::LookupOK THEN
                         LookupOKOnPush;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 20      ;1   ;ActionGroup;
                      Name=ItemBtn;
                      CaptionML=[ENU=&Item;
                                 NOR=V&are;
                                 SVE=Art&ikel];
                      Image=Item }
      { 21      ;2   ;ActionGroup;
                      CaptionML=[ENU=&Item Availability by;
                                 NOR=Varet&ilgjengelighet per;
                                 SVE=Artikel&disp. per];
                      Image=ItemAvailability }
      { 2       ;3   ;Action    ;
                      CaptionML=[ENU=Event;
                                 NOR=Hendelse;
                                 SVE=UtstÑllning];
                      ToolTipML=[ENU=View how the actual and the projected available balance of an item will develop over time according to supply and demand events.;
                                 NOR=Vis hvordan den aktuelle og forventede disponible beholdningen for en vare vil utvikle seg over tid i henhold til tilbud og etterspõrselhendelser.;
                                 SVE=Visa hur aktuell och planerad lagerutveckling fîr en artikel utvecklas med tiden enligt tillgÜngs- och efterfrÜgehÑndelser.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItem(Rec,ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 23      ;3   ;Action    ;
                      CaptionML=[ENU=Variant;
                                 NOR=Variant;
                                 SVE=Variant];
                      ToolTipML=[ENU=View or edit the item's variants. Instead of setting up each color of an item as a separate item, you can set up the various colors as variants of the item.;
                                 NOR=Vis eller rediger varens varianter. Du kan definere de ulike fargene som varianter av varen i stedet for Ü definere hver variant som en egen vare.;
                                 SVE=Visa eller redigera artikelns varianter. I stÑllet fîr att registrera varje fÑrg pÜ en artikel som en separat artikel, kan du registrera de olika fÑrgerna som varianter av artikeln.];
                      ApplicationArea=#Planning;
                      RunObject=Page 5414;
                      RunPageLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Location Filter=FIELD(Location Filter),
                                  Drop Shipment Filter=FIELD(Drop Shipment Filter),
                                  Variant Filter=FIELD(Variant Filter);
                      Image=ItemVariant }
      { 24      ;3   ;Action    ;
                      CaptionML=[ENU=Location;
                                 NOR=Lokasjon;
                                 SVE=LagerstÑlle];
                      ToolTipML=[ENU=View the actual and projected quantity of the item per location.;
                                 NOR=Vis faktisk og beregnet antall av varen per lokasjon.;
                                 SVE=Visa aktuellt och planerat antal artiklar per lagerstÑlle.];
                      ApplicationArea=#Location;
                      RunObject=Page 492;
                      RunPageLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Location Filter=FIELD(Location Filter),
                                  Drop Shipment Filter=FIELD(Drop Shipment Filter),
                                  Variant Filter=FIELD(Variant Filter);
                      Image=Warehouse }
      { 3       ;3   ;Action    ;
                      CaptionML=[ENU=BOM Level;
                                 NOR=StykklistenivÜ;
                                 SVE=StrukturnivÜ];
                      ToolTipML=[ENU=View availability figures for items on bills of materials that show how many units of a parent item you can make based on the availability of child items.;
                                 NOR=Vis tilgjengelighetstall for stykklistevarer som angir hvor mange enheter av en overordnet vare du kan lage basert pÜ tilgjengeligheten av underordnede varer.;
                                 SVE=Visa tillgÑnglighetssiffror fîr artiklar i strukturer som visar hur mÜnga enheter av en îverordnad artikel som gÜr att tillverka baserat pÜ underartiklarnas tillgÑnglighet.];
                      ApplicationArea=#Assembly;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItem(Rec,ItemAvailFormsMgt.ByBOM);
                               END;
                                }
      { 1100528903;2 ;Action    ;
                      ShortCutKey=F11;
                      CaptionML=ENU=Create Purchase Proposal;
                      Image=CreateDocument;
                      OnAction=BEGIN
                                 //**4PS
                                 CurrPage.ItemAvailLines.PAGE.CreatePurchaseProposal;  //DP00120
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=Options;
                           NOR=Alternativer;
                           SVE=Alternativ] }

    { 1100525001;2;Field  ;
                SourceExpr="Project Filter" }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           NOR=Vis etter;
                           SVE=Visa per];
                ToolTipML=[ENU=Specifies by which period amounts are displayed.;
                           NOR=Angir hvilken periode belõp vises basert pÜ.;
                           SVE=Anger efter vilken period belopp visas.];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Period;
                                 NOR=Dag,Uke,MÜned,Kvartal,èr,Periode;
                                 SVE=Dag,Vecka,MÜnad,Kvartal,èr,Period];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             IF PeriodType = PeriodType::Period THEN
                               PeriodPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Year THEN
                               YearPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Quarter THEN
                               QuarterPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Month THEN
                               MonthPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Week THEN
                               WeekPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Day THEN
                               DayPeriodTypeOnValidate;
                           END;
                            }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=View as;
                           NOR=Vis som;
                           SVE=Visa som];
                ToolTipML=[ENU=Specifies how amounts are displayed. Net Change: The net change in the balance for the selected period. Balance at Date: The balance as of the last day in the selected period.;
                           NOR=Angir hvordan belõp skal vises. Bevegelse: Bevegelsen i balansen for den valgte perioden. Saldo per dato: Saldoen per siste dag i den valgte perioden.;
                           SVE=Anger hur belopp visas. NettofîrÑndring: NettofîrÑndringen i saldot fîr den valda perioden. Saldo t.o.m. datum: Saldot per den sista dagen i den valda perioden.];
                OptionCaptionML=[ENU=Net Change,Balance at Date;
                                 NOR=Bevegelse,Saldo per dato;
                                 SVE=NettofîrÑndring,Saldo t.o.m. datum];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AmountType;
                OnValidate=BEGIN
                             IF AmountType = AmountType::"Balance at Date" THEN
                               BalanceatDateAmountTypeOnValid;
                             IF AmountType = AmountType::"Net Change" THEN
                               NetChangeAmountTypeOnValidate;
                           END;
                            }

    { 1100528900;2;Field  ;
                SourceExpr="Budget Name Filter";
                OnValidate=BEGIN
                             //**4PS (DP00120)
                             ValidateBudgetName;
                           END;

                OnLookup=BEGIN
                           //**4PS (DP00120)
                           ItemBudgetName.SETRANGE("Analysis Area", ItemBudgetName."Analysis Area"::Sales);
                           IF PAGE.RUNMODAL(0, ItemBudgetName) = ACTION::LookupOK THEN BEGIN
                             SETFILTER("Budget Name Filter", ItemBudgetName.Name);
                             ValidateBudgetName;
                           END;
                         END;
                          }

    { 1100528901;2;Field  ;
                Name=BudgetDim1Filter;
                SourceExpr="Budget Dimension 1 Filter";
                CaptionClass=GetCaptionClass(1);
                Enabled=BudgetDim1FilterEnable;
                OnLookup=BEGIN
                           //**4PS (DP00120)
                           CheckItemBudgetName;
                           EXIT(LookUpDimFilter(ItemBudgetName."Budget Dimension 1 Code",Text));
                         END;
                          }

    { 1100528902;2;Field  ;
                SourceExpr="Global Dimension 1 Filter";
                OnLookup=VAR
                           GLSetup@1100528900 : Record 98;
                         BEGIN
                           //**4PS (DP00120)
                           GLSetup.GET;
                           EXIT(LookUpDimFilter(GLSetup."Global Dimension 1 Code",Text));
                         END;
                          }

    { 5   ;1   ;Part      ;
                Name=ItemAvailLines;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page353 }

  }
  CODE
  {
    VAR
      ItemAvailFormsMgt@1003 : Codeunit 353;
      PeriodType@1000 : 'Day,Week,Month,Quarter,Year,Period';
      AmountType@1001 : 'Net Change,Balance at Date';
      LastDate@1002 : Date;
      gCompany@1100485000 : Text[30];
      DPA_IsHardFilter@1100000999 : Boolean;
      ItemBtnEnable@19025265 : Boolean INDATASET;
      ItemBudgetName@1100528901 : Record 7132;
      BudgetDim1Filter@1100528900 : Text[30];
      BudgetDim1FilterEnable@1100528902 : Boolean INDATASET;

    LOCAL PROCEDURE UpdateSubForm@1();
    BEGIN
      CurrPage.ItemAvailLines.PAGE.Set(Rec,PeriodType,AmountType);
    END;

    [External]
    PROCEDURE GetLastDate@2() : Date;
    BEGIN
      EXIT(LastDate);
    END;

    PROCEDURE SetCompany@1100485001(ICompany@1100485000 : Text[30]);
    BEGIN
      //**4PS
      IF (ICompany = '') OR (ICompany = COMPANYNAME) THEN
        gCompany := ''
      ELSE BEGIN
        gCompany := ICompany;
        Rec.CHANGECOMPANY(gCompany);
      END;
    END;

    LOCAL PROCEDURE DayPeriodTypeOnPush@19008851();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnPush@19046063();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnPush@19047374();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnPush@19018850();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnPush@19051042();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE PeriodPeriodTypeOnPush@19032639();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnPush@19049003();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnPush@19074855();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    VAR
      Date@1001 : Record 2000000007;
    BEGIN
      CurrPage.ItemAvailLines.PAGE.GETRECORD(Date);
      LastDate := Date."Period Start";
    END;

    LOCAL PROCEDURE DayPeriodTypeOnValidate@19012979();
    BEGIN
      DayPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnValidate@19058475();
    BEGIN
      WeekPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnValidate@19021027();
    BEGIN
      MonthPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnValidate@19015346();
    BEGIN
      QuarterPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnValidate@19064743();
    BEGIN
      YearPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE PeriodPeriodTypeOnValidate@19066307();
    BEGIN
      PeriodPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnValidate@19062218();
    BEGIN
      NetChangeAmountTypeOnPush;
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnValid@19007073();
    BEGIN
      BalanceatDateAmountTypeOnPush;
    END;

    PROCEDURE ValidateBudgetName@1100528902();
    BEGIN
      //**4PS (DP00120)
      CheckItemBudgetName;
      SETRANGE("Budget Dimension 1 Filter");
      UpdateDimCtrls;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE CheckItemBudgetName@1100528901();
    BEGIN
      //**4PS (DP00120)
      IF NOT ItemBudgetName.GET(ItemBudgetName."Analysis Area"::Sales, GETFILTER("Budget Name Filter")) THEN ItemBudgetName.INIT;
    END;

    LOCAL PROCEDURE GetCaptionClass@13(BudgetDimType@1000 : Integer) : Text[250];
    VAR
      Text11012001@1100528903 : TextConst 'ENU=1,6,,Budget Dimension 1 Filter;SVE=1,6,,Budgetdimension 1 filter';
      Text11012002@1100528902 : TextConst 'ENU=1,6,,Budget Dimension 2 Filter;SVE=1,6,,Budgetdimension 2 filter';
      Text11012003@1100528901 : TextConst 'ENU=1,6,,Budget Dimension 3 Filter;SVE=1,6,,Budgetdimension 3 filter';
    BEGIN
      //**4PS (DP00120)
      CheckItemBudgetName;
      CASE BudgetDimType OF
        1:
          BEGIN
            IF ItemBudgetName."Budget Dimension 1 Code" <> '' THEN
              EXIT('1,6,' + ItemBudgetName."Budget Dimension 1 Code");
            EXIT(Text11012001);
          END;
        2:
          BEGIN
            IF ItemBudgetName."Budget Dimension 2 Code" <> '' THEN
              EXIT('1,6,' + ItemBudgetName."Budget Dimension 2 Code");
            EXIT(Text11012002);
          END;
        3:
          BEGIN
            IF ItemBudgetName."Budget Dimension 3 Code" <> '' THEN
              EXIT('1,6,' + ItemBudgetName."Budget Dimension 3 Code");
            EXIT(Text11012003);
          END;
      END;
    END;

    LOCAL PROCEDURE UpdateDimCtrls@1100528900();
    BEGIN
      //**4PS (DP00120)
      BudgetDim1FilterEnable := ItemBudgetName."Budget Dimension 1 Code" <> '';
      //BudgetDim2FilterEnable := ItemBudgetName."Budget Dimension 2 Code" <> '';
      //BudgetDim3FilterEnable := ItemBudgetName."Budget Dimension 3 Code" <> '';
    END;

    LOCAL PROCEDURE LookUpDimFilter@57(Dim@1000 : Code[20];VAR Text@1001 : Text[250]) : Boolean;
    VAR
      DimVal@1002 : Record 349;
      DimValList@1003 : Page 560;
    BEGIN
      //**4PS (DP00120)
      IF Dim = '' THEN
        EXIT(FALSE);
      DimVal.SETRANGE("Dimension Code",Dim);
      DimValList.SETTABLEVIEW(DimVal);
      DimValList.LOOKUPMODE(TRUE);
      IF DimValList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        DimValList.GETRECORD(DimVal);
        Text := DimValList.GetSelectionFilter;
        EXIT(TRUE);
      END;
    END;

    BEGIN
    {
      4PS HBK 07-05-2010 Added Project Filter
      4PS (DPO0120): activating Global Dimension 1 Filter (for Sales Budget) gives error SumIndexField for standard Nav-tables (246+5406)
    }
    END.
  }
}

