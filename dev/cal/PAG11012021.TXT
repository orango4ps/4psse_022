OBJECT Page 11012021 Cost Object List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Cost Object List;
               NOR=Liste over kostobjekter;
               SVE=Lista ”ver kostnadsobjekt];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table349;
    SourceTableView=SORTING(Code,Global Dimension No.)
                    WHERE(Global Dimension No.=CONST(2));
    PageType=List;
    OnOpenPage=VAR
                 Company@1100525000 : Record 2000000006;
               BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 GLSetup.GET;
                 //SETRANGE(Blocked, FALSE)

                 CompanySourceTable := GETFILTER("Company Filter");
                 IF CompanySourceTable <> '' THEN BEGIN
                   IF (CompanySourceTable = COMPANYNAME) OR (STRLEN(CompanySourceTable) > MAXSTRLEN(Company.Name)) THEN
                     CompanySourceTable := ''
                   ELSE BEGIN
                     IF NOT Company.GET(CompanySourceTable) THEN
                       CompanySourceTable := '';
                   END;
                 END;
                 ExtendedTextEnabled := (CompanySourceTable = '');

                 ShowOnlyActiveCostObjects := TRUE;
                 CtrlProjectCostObjectEnabled := TRUE;
                 IF (GETFILTER("Project Filter") <> '') AND
                    (GETFILTER("Project Filter") <> '''''')
                 THEN
                   FilterProjectCostObjects()
                 ELSE
                   CtrlProjectCostObjectEnabled := FALSE;

                 //IF Project Status is set in calling object than do not activate ShowTable
                 IF GETFILTER(Blocked) = '' THEN
                   ShowTable;
               END;

    OnNextRecord=VAR
                   EOF@1100525001 : Boolean;
                   CurrentSteps@1100525002 : Integer;
                   Step@1100525003 : Integer;
                   NumberOfSteps@1100525004 : Integer;
                 BEGIN
                   Rec2.COPY(Rec);

                   IF GETFILTER("Project Filter") = '' THEN
                     IF Rec2.SETAUTOCALCFIELDS() THEN;

                   IF CompanySourceTable <> '' THEN
                     Rec2.CHANGECOMPANY(CompanySourceTable);

                   IF (NOT ShowOnlyActiveCostObjects) OR (GETFILTER("Project Filter") = '') THEN BEGIN
                     CurrentSteps := Rec2.NEXT(Steps);
                     IF CurrentSteps <> 0 THEN
                       Rec := Rec2;
                     EXIT(CurrentSteps);
                   END;

                   IF Steps < 0 THEN
                     Step := -1
                   ELSE
                     Step := 1;
                   CurrentSteps := 0;
                   EOF := Rec2.NEXT(Step) = 0;
                   IF NOT EOF THEN BEGIN
                     FOR NumberOfSteps := 1 TO ABS(Steps) DO BEGIN
                       WHILE SkipProjectRelatedBlocked(Rec2) AND NOT EOF DO
                         EOF := Rec2.NEXT(Step) = 0;
                       IF NOT EOF THEN BEGIN
                         Rec := Rec2;
                         CurrentSteps := CurrentSteps + Step;
                       END;
                     END;
                   END;
                   EXIT(CurrentSteps);
                 END;

    OnAfterGetRecord=BEGIN
                       NameIndent := 0;
                       IF ("Global Dimension No." = 2) AND
                          (GETFILTER("Project Filter") <> '') AND
                          (GETFILTER("Project Filter") <> '''''')
                       THEN BEGIN
                         CALCFIELDS("Project Related Name", "Cost Object Project Related", "Proj. Rel. Cost Object Blocked");
                         IF "Cost Object Project Related" THEN BEGIN
                           IF "Project Related Name" <> '' THEN
                             Name := "Project Related Name";
                           IF (NOT Blocked) AND "Proj. Rel. Cost Object Blocked" THEN
                             Blocked := "Proj. Rel. Cost Object Blocked";
                         END;
                         CALCFIELDS("Cost Object In Budget");
                       END;
                       CodeOnFormat;
                       NameOnFormat;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190000;1 ;Action    ;
                      CaptionML=[ENU=E&xtended Texts;
                                 NOR=&Utvidete tekster;
                                 SVE=E&xtratexter];
                      RunObject=Page 391;
                      RunPageLink=Table Name=CONST(Cost Object),
                                  No.=FIELD(Code);
                      Promoted=Yes;
                      Enabled=ExtendedTextEnabled;
                      Image=SNInfo;
                      PromotedCategory=Process }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                IndentationColumnName=NameIndent;
                IndentationControls=Name;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr=Code }

    { 4   ;2   ;Field     ;
                SourceExpr=Name }

    { 6   ;2   ;Field     ;
                SourceExpr="Cost Type" }

    { 8   ;2   ;Field     ;
                SourceExpr="Rate Code";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr=Norm;
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr=Price;
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="Sales Price";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Unit of Time";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Record Progress";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Wage Component" }

    { 24  ;2   ;Field     ;
                SourceExpr="Cost Component" }

    { 26  ;2   ;Field     ;
                SourceExpr="Purchase Action";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr=Plant;
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                SourceExpr="Dimension Value Type";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr=Totaling;
                Visible=FALSE }

    { 1100485000;2;Field  ;
                SourceExpr="Automatic Ext. Texts";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                SourceExpr=Blocked;
                Visible=False }

    { 36  ;2   ;Field     ;
                SourceExpr="Consolidation Code";
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="FSC Applicable";
                Visible=FALSE }

    { 1100409004;2;Field  ;
                Name=CostObjectInBudget;
                CaptionML=ENU=Cost Object In Budget;
                SourceExpr=CostObjectInBudget;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              //**4PS
                              DrillDownOnCostObjectInBudget;
                            END;
                             }

    { 1100285500;2;Field  ;
                SourceExpr="ROT-reduction" }

    { 1100285501;2;Field  ;
                SourceExpr="Used for surcharge" }

    { 1100409000;1;Group  ;
                GroupType=Group }

    { 1100409001;2;Field  ;
                CaptionML=[ENU=Show only Budget Cost Objects;
                           NOR=Vis kun budsjettkostobjekter;
                           SVE=Visa endast budgetkostnadsobjekt];
                SourceExpr=ShowOnlyProjectCostObjects;
                Enabled=CtrlProjectCostObjectEnabled;
                OnValidate=BEGIN
                             FilterProjectCostObjects();
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 1100409002;2;Field  ;
                CaptionML=[ENU=Show only Active Cost Objects;
                           NOR=Vis kun aktive kostobjekter;
                           SVE=Visa endast aktiva kostnadsobjekt];
                SourceExpr=ShowOnlyActiveCostObjects;
                OnValidate=BEGIN
                             //**4PS
                             ShowTable;
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

  }
  CODE
  {
    VAR
      GLSetup@1000 : Record 98;
      Rec2@1100528400 : Record 349;
      CodeEmphasize@19004235 : Boolean INDATASET;
      NameEmphasize@19018670 : Boolean INDATASET;
      NameIndent@19079073 : Integer INDATASET;
      ShowOnlyProjectCostObjects@1100409001 : Boolean INDATASET;
      ShowOnlyActiveCostObjects@1100409000 : Boolean INDATASET;
      DPA_IsHardFilter@1100000999 : Boolean;
      CtrlProjectCostObjectEnabled@1100409002 : Boolean INDATASET;
      ExtendedTextEnabled@1100525001 : Boolean INDATASET;
      CompanySourceTable@1100525000 : Text;

    PROCEDURE GetSelectionFilter@2() : Code[80];
    VAR
      DimVal@1000 : Record 349;
      FirstDimVal@1001 : Code[20];
      LastDimVal@1002 : Code[20];
      SelectionFilter@1003 : Code[250];
      DimValCount@1004 : Integer;
      More@1005 : Boolean;
    BEGIN
      CurrPage.SETSELECTIONFILTER(DimVal);
      DimValCount := DimVal.COUNT;
      IF DimValCount > 0 THEN BEGIN
        DimVal.FIND('-');
        WHILE DimValCount > 0 DO BEGIN
          DimValCount := DimValCount - 1;
          DimVal.MARKEDONLY(FALSE);
          FirstDimVal := DimVal.Code;
          LastDimVal := FirstDimVal;
          More := (DimValCount > 0);
          WHILE More DO
            IF DimVal.NEXT = 0 THEN
              More := FALSE
            ELSE
              IF NOT DimVal.MARK THEN
                More := FALSE
              ELSE BEGIN
                LastDimVal := DimVal.Code;
                DimValCount := DimValCount - 1;
                IF DimValCount = 0 THEN
                  More := FALSE;
              END;
          IF SelectionFilter <> '' THEN
            SelectionFilter := SelectionFilter + '|';
          IF FirstDimVal = LastDimVal THEN
            SelectionFilter := SelectionFilter + FirstDimVal
          ELSE
            SelectionFilter := SelectionFilter + FirstDimVal + '..' + LastDimVal;
          IF DimValCount > 0 THEN BEGIN
            DimVal.MARKEDONLY(TRUE);
            DimVal.NEXT;
          END;
        END;
      END;
      EXIT(SelectionFilter);
    END;

    PROCEDURE GetSelectionFilter2@1100525000(VAR DimValFilters@1100525000 : Record 349);
    BEGIN
      CurrPage.SETSELECTIONFILTER(DimValFilters);
    END;

    LOCAL PROCEDURE CodeOnFormat@19037745();
    BEGIN
      CodeEmphasize := "Dimension Value Type" <> "Dimension Value Type"::Standard;
    END;

    LOCAL PROCEDURE NameOnFormat@19039177();
    BEGIN
      NameEmphasize := "Dimension Value Type" <> "Dimension Value Type"::Standard;
      NameIndent := Indentation;
    END;

    PROCEDURE FilterProjectCostObjects@1100485000();
    BEGIN
      IF ShowOnlyProjectCostObjects THEN
        SETRANGE("Cost Object In Budget", TRUE)
      ELSE
        SETRANGE("Cost Object In Budget");
    END;

    PROCEDURE ShowTable@1210190000();
    BEGIN
      //**4PS
      IF ShowOnlyActiveCostObjects THEN
        SETRANGE(Blocked, FALSE)
      ELSE
        SETRANGE(Blocked);
    END;

    LOCAL PROCEDURE SkipProjectRelatedBlocked@1100525001(VAR Rec2@1100525000 : Record 349) : Boolean;
    BEGIN
      Rec2.CALCFIELDS("Cost Object Project Related", "Proj. Rel. Cost Object Blocked");
      IF NOT Rec2."Cost Object Project Related" THEN
        EXIT(FALSE);
      EXIT(Rec2."Proj. Rel. Cost Object Blocked");
    END;

    BEGIN
    {
      140204 ITERO.MH 4PSSE.I012 Added one field: "ROT-reduction"
      150127 ITERO.DL IME272 added "Used for surcharge"
    }
    END.
  }
}

