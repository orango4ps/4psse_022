OBJECT Codeunit 11020204 Mathematical Functions
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Math@1100528400 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Math";

    PROCEDURE Log@1100485000(Arg@1100485000 : Decimal) : Decimal;
    BEGIN
      EXIT(Math.Log10(Arg));
    END;

    PROCEDURE Ln@1100485002(Arg@1100485000 : Decimal) : Decimal;
    BEGIN
      EXIT(Math.Log(Arg));
    END;

    PROCEDURE Sin@1100485007(Arg@1100485000 : Decimal) : Decimal;
    BEGIN
      EXIT(Math.Sin(Deg2Rad(Arg)));
    END;

    PROCEDURE Cos@1100485008(Arg@1100485000 : Decimal) : Decimal;
    BEGIN
      EXIT(Math.Cos(Deg2Rad(Arg)));
    END;

    PROCEDURE Tan@1100485009(Arg@1100485000 : Decimal) : Decimal;
    BEGIN
      EXIT(Math.Tan(Deg2Rad(Arg)));
    END;

    PROCEDURE Deg2Rad@1100485004(Deg@1100485000 : Decimal) : Decimal;
    BEGIN
      EXIT(Deg * 3.14159265358979323 / 180);
    END;

    PROCEDURE FormatDec@1100485001(Arg@1100485000 : Decimal) : Text[250];
    BEGIN
      EXIT(FORMAT(Arg,0,1));  //* Format '1': Geen duizendtalteken
    END;

    PROCEDURE EvaluateFormula@1100485005(Formula@1100485000 : Text[1024]) Result : Decimal;
    VAR
      DataTable@1100528400 : DotNet "'System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Data.DataTable";
      DataColumn@1100528401 : DotNet "'System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Data.DataColumn";
      DataRow@1100528404 : DotNet "'System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Data.DataRow";
      DataRowVersion@1100528405 : DotNet "'System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Data.DataRowVersion";
      Type@1100528402 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Type";
    BEGIN
      DataTable := DataTable.DataTable;
      DataColumn := DataColumn.DataColumn('Formula', Type.GetType('System.Double'), CONVERTSTR(Formula, ',', '.'));
      DataTable.Columns.Add(DataColumn);
      DataRow := DataTable.NewRow;
      DataTable.Rows.Add(DataRow);
      Result := DataRow.Item(0, DataRowVersion.Current);
    END;

    PROCEDURE ReverseDateFormula@1100528600(IDateFormula@1100528600 : DateFormula;VAR ODateFormula@1100528601 : DateFormula);
    VAR
      DateFormulaText@1100528602 : Text;
    BEGIN
      DateFormulaText := FORMAT(IDateFormula);
      IF DateFormulaText = '' THEN
        EXIT;
      DateFormulaText := CONVERTSTR(DateFormulaText, '+-', '-+');
      IF NOT (DateFormulaText[1] IN ['-', '+']) THEN
        DateFormulaText := '-' + DateFormulaText;
      EVALUATE(ODateFormula, DateFormulaText);
    END;

    BEGIN
    END.
  }
}

