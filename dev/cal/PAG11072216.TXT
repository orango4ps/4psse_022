OBJECT Page 11072216 Site Mngmnt Hour Accounting SF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               NOR=Rader;
               SVE=Rader];
    SourceTable=Table11012361;
    DelayedInsert=Yes;
    PopulateAllFields=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 LineEditable := TRUE;

                 ElementEditable := TRUE;
                 ExtensionContractEditable := TRUE;
                 PlantCompanyEditable := TRUE;
                 PlantLocationEditable := TRUE;
                 PlantTypeNoEditable := TRUE;
                 CostComponentPlantEditable := TRUE;
                 NotUnmannedPlant := TRUE;
                 ResourceRequestEditable := TRUE;
                 ObjectNoEditable := TRUE;

                 SiteMngmntHoursSetup.GET;
               END;

    OnAfterGetRecord=BEGIN
                       CALCFIELDS("Total Hours","Norm Hours");
                       OvertimeFormat;
                       SetEditable;
                       SetControlAppearance;
                     END;

    OnNewRecord=VAR
                  EmplRec@1101285001 : Record 5200;
                BEGIN
                  IF "Receiving Company" ='' THEN
                    "Receiving Company" := COMPANYNAME;


                  IF "Employee No." = '' THEN
                    "Employee No." := GETFILTER("Employee No.");

                  //4PSSE.so 180522
                  //IF "Employee No." <> '' THEN
                  //  VALIDATE(Type, xRec.Type);
                  // IF "Employee No." <> '' THEN
                  //   IF xRec.Type = Type::UnmannedPlant THEN
                  //     VALIDATE(Type, Type::Project)
                  //   ELSE
                  //     VALIDATE(Type, xRec.Type);
                  //4PSSE.eo 180522
                  //4PSSE.sn 180522

                  IF "Employee No." = '' THEN
                    "Employee No." := GETFILTER("Employee No.");

                  IF ("Employee No." <> '') THEN
                    IF EmplRec.GET("Employee No.") THEN
                      CASE EmplRec."Default Line Type" OF
                        EmplRec."Default Line Type"::Indirect:
                          Type := Type::Indirect;
                        EmplRec."Default Line Type"::Project:
                          Type := Type::Project;
                        EmplRec."Default Line Type"::Service:
                          Type := Type::Service;
                        EmplRec."Default Line Type"::Plant:
                          Type := Type::Plant;
                      END
                    ELSE
                     IF xRec.Type = Type::UnmannedPlant THEN
                       VALIDATE(Type, Type::Project)
                     ELSE
                       VALIDATE(Type, xRec.Type);
                  //4PSSE.en 180522


                  SetEditable;
                  GetCostObjectDescription;
                END;

    OnDeleteRecord=VAR
                     lvText001@1100525000 : TextConst 'ENU=Plant hours of the unmanned plant are already posted, these can not be deleted.\Are you sure that you want to delete this hour accounting line?;NOR=Maskintimer for ubemannet maskin er allerede bokfõrt, disse kan ikke slettes.\Er du sikker pÜ at du vil slette denne timerapporteringsraden?;SVE=Maskintimmar har redan bokfîrts fîr den obemannade Maskinen, de kan inte tas bort.\Vill du ta bort den hÑr tidrapporteringsraden?';
                   BEGIN
                     IF NOT Rec.CheckUnmannedPlantHourLineOpen() THEN BEGIN
                       IF NOT CONFIRM(lvText001, FALSE) THEN
                         EXIT(FALSE);
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 1100528400;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528406;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 NOR=&Linje;
                                 SVE=Ra&d];
                      Image=Line }
      { 1100529900;2 ;Action    ;
                      CaptionML=ENU=Add Related Template Lines;
                      Image=LinesFromTimesheet;
                      OnAction=BEGIN
                                 AddRelatedTemplateLines;
                               END;
                                }
      { 1100528210;2 ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Approval Comments;
                                 NOR=Godkjenningsmerknader;
                                 SVE=GodkÑnnandekommentarer];
                      Promoted=Yes;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalComments@1100528400 : Page 660;
                                 SiteMngmntHoursHeader@1100528200 : Record 11012360;
                                 ApprovalsMgmt@1100525000 : Codeunit 1535;
                                 ApprovalEntry@1100525001 : Record 454;
                               BEGIN
                                 SiteMngmntHoursHeader.GET(Year,Week,"Supplying Company","Employee No.");

                                 IF NOT ApprovalsMgmt.LineFindOpenApprovalEntryForCurrUser(ApprovalEntry,SiteMngmntHoursHeader.RECORDID,"Line No.") THEN BEGIN
                                   ApprovalEntry.RESET;
                                   ApprovalEntry.SETRANGE("Table ID", 11012360);
                                   ApprovalEntry.SETRANGE("Record ID to Approve", SiteMngmntHoursHeader.RECORDID);
                                   ApprovalEntry.SETRANGE("Document Line No.","Line No.");
                                   IF NOT ApprovalEntry.FINDFIRST THEN
                                     EXIT;
                                   ApprovalComments.EDITABLE(FALSE);
                                 END;

                                 ApprovalComments.SetfilterRecordIDAndLineNo(SiteMngmntHoursHeader.RECORDID, 11012360, ApprovalEntry."Document Type"::"Site Mgt HourAccounting", '',"Line No.");
                                 ApprovalComments.SetUpLine(ApprovalEntry);
                                 ApprovalComments.SetWorkflowStepInstanceID(ApprovalEntry."Workflow Step Instance ID");
                                 ApprovalComments.RUNMODAL;
                               END;
                                }
      { 1100528206;2 ;Action    ;
                      CaptionML=[ENU=Approval Entries;
                                 NOR=Godkjenningstransaksjoner;
                                 SVE=GodkÑnnandetransaktioner];
                      Image=Confirm;
                      RunPageMode=View;
                      OnAction=VAR
                                 ApprovalEntry@1100525000 : Record 454;
                                 ApprovalEntries@1100525001 : Page 658;
                                 SiteMngmntHoursHeader@1100525002 : Record 11012360;
                               BEGIN
                                 SiteMngmntHoursHeader.GET(Year,Week,"Supplying Company","Employee No.");
                                 ApprovalEntry.FILTERGROUP(2);
                                 ApprovalEntry.SETRANGE("Table ID", 11012360);
                                 ApprovalEntry.SETRANGE("Record ID to Approve", SiteMngmntHoursHeader.RECORDID);
                                 ApprovalEntry.SETRANGE("Document Line No.","Line No.");
                                 ApprovalEntries.SETTABLEVIEW(ApprovalEntry);
                                 ApprovalEntry.FILTERGROUP(0);
                                 ApprovalEntries.RUNMODAL;
                               END;
                                }
      { 1100528401;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 NOR=Fu&nksjon;
                                 SVE=Fu&nktion];
                      Image=Action }
      { 1100528402;2 ;Action    ;
                      Name=Release;
                      CaptionML=[ENU=Re&lease;
                                 NOR=&Frigi;
                                 SVE=&SlÑpp];
                      Image=ReleaseDoc;
                      OnAction=VAR
                                 SiteMngmntHoursLine@1100528300 : Record 11012361;
                               BEGIN
                                 SiteMngmntHoursLine.COPY(Rec);
                                 CurrPage.SETSELECTIONFILTER(SiteMngmntHoursLine);
                                 SiteMngmntHoursLine.Release;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100528404;2 ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Re&open;
                                 NOR=&èpne pÜ nytt;
                                 SVE=&ôppna igen];
                      Image=ReOpen;
                      OnAction=VAR
                                 SiteMngmntHoursLine@1100528300 : Record 11012361;
                               BEGIN
                                 SiteMngmntHoursLine.COPY(Rec);
                                 CurrPage.SETSELECTIONFILTER(SiteMngmntHoursLine);
                                 SiteMngmntHoursLine.Reopen;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100528205;1 ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 NOR=Godkjenning;
                                 SVE=GodkÑnnande] }
      { 1100528204;2 ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 NOR=Godkjenn;
                                 SVE=GodkÑnn];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                                 ApprovalEntry@1100528400 : Record 454;
                                 SiteMngmntHoursLine@1100528200 : Record 11012361;
                               BEGIN
                                 SiteMngmntHoursHeader.GET(Year,Week,"Supplying Company", "Employee No.");
                                 CurrPage.SETSELECTIONFILTER(SiteMngmntHoursLine);
                                 IF SiteMngmntHoursLine.FINDSET THEN BEGIN
                                   REPEAT
                                     IF ApprovalsMgmt.LineFindOpenApprovalEntryForCurrUser(ApprovalEntry,SiteMngmntHoursHeader.RECORDID,SiteMngmntHoursLine."Line No.") THEN
                                       ApprovalsMgmt.ApproveApprovalRequests(ApprovalEntry);
                                   UNTIL SiteMngmntHoursLine.NEXT = 0;
                                 END;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100528203;2 ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 NOR=Avvis;
                                 SVE=Avvisa];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                                 ApprovalEntry@1100528400 : Record 454;
                                 SiteMngmntHoursLine@1100528200 : Record 11012361;
                               BEGIN
                                 SiteMngmntHoursHeader.GET(Year,Week,"Supplying Company", "Employee No.");
                                 CurrPage.SETSELECTIONFILTER(SiteMngmntHoursLine);
                                 IF SiteMngmntHoursLine.FINDSET THEN BEGIN
                                   REPEAT
                                     IF ApprovalsMgmt.LineFindOpenApprovalEntryForCurrUser(ApprovalEntry,SiteMngmntHoursHeader.RECORDID,SiteMngmntHoursLine."Line No.") THEN
                                       ApprovalsMgmt.RejectApprovalRequests(ApprovalEntry);
                                   UNTIL SiteMngmntHoursLine.NEXT = 0;
                                 END;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100528202;2 ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 NOR=Deleger;
                                 SVE=Delegera];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                                 ApprovalEntry@1100528400 : Record 454;
                                 SiteMngmntHoursLine@1100528200 : Record 11012361;
                               BEGIN
                                 SiteMngmntHoursHeader.GET(Year,Week,"Supplying Company", "Employee No.");
                                 CurrPage.SETSELECTIONFILTER(SiteMngmntHoursLine);
                                 IF SiteMngmntHoursLine.FINDSET THEN BEGIN
                                   REPEAT
                                     IF ApprovalsMgmt.LineFindOpenApprovalEntryForCurrUser(ApprovalEntry,SiteMngmntHoursHeader.RECORDID,SiteMngmntHoursLine."Line No.") THEN
                                       ApprovalsMgmt.DelegateApprovalRequests(ApprovalEntry);
                                   UNTIL SiteMngmntHoursLine.NEXT = 0;
                                 END;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100525005;2 ;Action    ;
                      CaptionML=[ENU=Approval Entries;
                                 NOR=Godkjenningstransaksjoner;
                                 SVE=GodkÑnnandetransaktioner];
                      Image=Confirm;
                      RunPageMode=View;
                      OnAction=VAR
                                 ApprovalEntry@1100525000 : Record 454;
                                 ApprovalEntries@1100525001 : Page 658;
                                 SiteMngmntHoursHeader@1100525002 : Record 11012360;
                               BEGIN
                                 SiteMngmntHoursHeader.GET(Year,Week,"Supplying Company","Employee No.");
                                 ApprovalEntry.FILTERGROUP(2);
                                 ApprovalEntry.SETRANGE("Table ID", 11012360);
                                 ApprovalEntry.SETRANGE("Record ID to Approve", SiteMngmntHoursHeader.RECORDID);
                                 ApprovalEntry.SETRANGE("Document Line No.","Line No.");
                                 ApprovalEntries.SETTABLEVIEW(ApprovalEntry);
                                 ApprovalEntry.FILTERGROUP(0);
                                 ApprovalEntries.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                GroupType=Repeater }

    { 1100485001;2;Field  ;
                SourceExpr="Receiving Company";
                Visible=FALSE;
                Editable=LineEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100528211;2;Field  ;
                SourceExpr="Reason Code" }

    { 1100485003;2;Field  ;
                SourceExpr=Type;
                Editable=LineEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100528201;2;Field  ;
                CaptionML=[ENU=Approval by;
                           SVE=GodkÑnnande av];
                SourceExpr=ApprovalManagement4PSConstr.GetNextApproverNameSiteMngmntHourLine(Rec) }

    { 1100528200;2;Field  ;
                CaptionML=[ENU=Approved by;
                           NOR=Godkjent av;
                           SVE=GodkÑnt av];
                SourceExpr=ApprovalManagement4PSConstr.GetLastApproverNameSiteMngmntHourLine(Rec) }

    { 1100528300;2;Field  ;
                SourceExpr="Line Template Code" }

    { 1100485005;2;Field  ;
                SourceExpr="Object No.";
                Enabled=ObjectNoEditable;
                Editable=ObjectNoEditable;
                OnValidate=BEGIN
                             //VALIDATE("Object No.","Object No.");  //*27119.o;
                             ObjectNoOnAfterValidate;
                           END;
                            }

    { 1100485076;2;Field  ;
                SourceExpr="Object Name";
                Visible=FALSE;
                Editable=FALSE }

    { 1210190002;2;Field  ;
                SourceExpr="Shift Code";
                Visible=FALSE }

    { 1100485009;2;Field  ;
                SourceExpr=Element;
                Editable=ElementEditable }

    { 1100525012;2;Field  ;
                DrillDown=No;
                SourceExpr="Element Description";
                Visible=FALSE }

    { 1100525016;2;Field  ;
                SourceExpr="Extension Contract";
                Editable=ExtensionContractEditable }

    { 1100528208;2;Field  ;
                SourceExpr="Service Location No." }

    { 1100528209;2;Field  ;
                SourceExpr="Additional Cost (Service)" }

    { 1100525018;2;Field  ;
                SourceExpr="Plant Company";
                Editable=PlantCompanyEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100525014;2;Field  ;
                SourceExpr="Plant Location";
                Editable=PlantLocationEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100525004;2;Field  ;
                SourceExpr="Plant Type";
                Editable=PlantTypeNoEditable }

    { 1100525006;2;Field  ;
                SourceExpr="Plant No.";
                Editable=PlantTypeNoEditable }

    { 1100525010;2;Field  ;
                CaptionML=[ENU=Plant Description;
                           NOR=Maskinbeskrivelse;
                           SVE=Maskinbeskrivning];
                SourceExpr=GetPlantDescription();
                Visible=FALSE }

    { 1100525008;2;Field  ;
                SourceExpr="Cost Component Plant";
                Editable=CostComponentPlantEditable }

    { 1100409000;2;Field  ;
                SourceExpr="Department Code" }

    { 1100525000;2;Field  ;
                SourceExpr="Cost Object";
                Editable=NotUnmannedPlant;
                OnValidate=BEGIN
                             CostObjectOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           GetCostObjectWithLookup;
                           CurrPage.UPDATE;
                         END;
                          }

    { 1100485074;2;Field  ;
                SourceExpr="Cost Object Description";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528212;2;Field  ;
                SourceExpr="Cost Component" }

    { 1100485030;2;Field  ;
                SourceExpr="Wage Component";
                Editable=NotUnmannedPlant;
                OnValidate=BEGIN
                             WageComponentOnAfterValidate;
                           END;
                            }

    { 1100528207;2;Field  ;
                SourceExpr=Chargeable }

    { 1100529901;2;Field  ;
                SourceExpr=Vehicle;
                Editable=KMEditable }

    { 1100525002;2;Field  ;
                SourceExpr="Start Kilometer";
                Editable=KMEditable;
                OnValidate=BEGIN
                             ValidateKilometers;
                           END;
                            }

    { 1100525001;2;Field  ;
                SourceExpr="End Kilometer";
                Editable=KMEditable;
                OnValidate=BEGIN
                             ValidateKilometers;
                           END;
                            }

    { 1100485011;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Monday;
                Enabled=LineEditable;
                Style=Strong;
                StyleExpr=OvertimeComponentMonday;
                OnValidate=BEGIN
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Monday := ROUND(Monday,1);
                               MondayOnAfterValidate;
                           END;

                OnAssistEdit=VAR
                               OldTravelHoursMonday@1210190001 : Option;
                             BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;
                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND
                                  (NOT ("Component Type" = "Component Type"::Expenses))
                               THEN BEGIN
                                 OldTravelHoursMonday := "Travel Hours Monday";
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                   "Component Type",
                                                                   Overtime,
                                                                   "Overtime Comp. Monday",
                                                                   "Overtime Hours Monday",
                                                                   Monday,
                                                                   "Travel Hours Monday");
                                 VALIDATE(Monday);
                                 IF ("Travel Hours Monday" <> OldTravelHoursMonday) AND
                                    ("Travel Hours Monday" <> "Travel Hours Monday"::"Work to Work")
                                 THEN BEGIN
                                   IF "Travel Hours Tuesday" = OldTravelHoursMonday THEN
                                     "Travel Hours Tuesday" := "Travel Hours Monday";
                                   IF "Travel Hours Wednesday" = OldTravelHoursMonday THEN
                                     "Travel Hours Wednesday" := "Travel Hours Monday";
                                   IF "Travel Hours Thursday" = OldTravelHoursMonday THEN
                                     "Travel Hours Thursday" := "Travel Hours Monday";
                                   IF "Travel Hours Friday" = OldTravelHoursMonday THEN
                                     "Travel Hours Friday" := "Travel Hours Monday";
                                   IF "Travel Hours Saturday" = OldTravelHoursMonday THEN
                                     "Travel Hours Saturday" := "Travel Hours Monday";
                                   IF "Travel Hours Sunday" = OldTravelHoursMonday THEN
                                     "Travel Hours Sunday" := "Travel Hours Monday";
                                 END;
                                 CurrPage.UPDATE(TRUE);
                               END;
                             END;
                              }

    { 1100485013;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Tuesday;
                Editable=LineEditable;
                Style=Strong;
                StyleExpr=OvertimeComponentTuesday;
                OnValidate=BEGIN
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Tuesday := ROUND(Tuesday,1);
                               TuesdayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;

                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND NOT
                               ("Component Type" = "Component Type"::Expenses) THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp.Tuesday",
                                                                 "Overtime Hours Tuesday",
                                                                 Tuesday,
                                                                 "Travel Hours Tuesday");
                                 VALIDATE(Tuesday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100485015;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Wednesday;
                Editable=LineEditable;
                Style=Strong;
                StyleExpr=OvertimeComponentWednesday;
                OnValidate=BEGIN
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Wednesday := ROUND(Wednesday,1);
                               WednesdayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;

                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND NOT
                               ("Component Type" = "Component Type"::Expenses) THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp.Wednesday",
                                                                 "Overtime Hours Wednesday",
                                                                 Wednesday,
                                                                 "Travel Hours Wednesday");
                                 VALIDATE(Wednesday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100485017;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Thursday;
                Editable=LineEditable;
                Style=Strong;
                StyleExpr=OvertimeComponentThursday;
                OnValidate=BEGIN
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Thursday := ROUND(Thursday,1);
                               ThursdayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;

                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND NOT
                               ("Component Type" = "Component Type"::Expenses) THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp.Thursday",
                                                                 "Overtime Hours Thursday",
                                                                 Thursday,
                                                                 "Travel Hours Thursday");
                                 VALIDATE(Thursday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100485019;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Friday;
                Editable=LineEditable;
                Style=Strong;
                StyleExpr=OvertimeComponentFriday;
                OnValidate=BEGIN
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Friday := ROUND(Friday,1);
                               FridayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;

                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND NOT
                               ("Component Type" = "Component Type"::Expenses) THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp.Friday",
                                                                 "Overtime Hours Friday",
                                                                 Friday,
                                                                 "Travel Hours Friday");
                                 VALIDATE(Friday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100485021;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Saturday;
                Editable=LineEditable;
                Style=Strong;
                StyleExpr=OvertimeComponentSaturday;
                OnValidate=BEGIN
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Saturday := ROUND(Saturday,1);
                               SaturdayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;

                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND NOT
                               ("Component Type" = "Component Type"::Expenses) THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp.Saturday",
                                                                 "Overtime Hours Saturday",
                                                                 Saturday,
                                                                 "Travel Hours Saturday");
                                 VALIDATE(Saturday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100485023;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Sunday;
                Editable=LineEditable;
                Style=Strong;
                StyleExpr=OvertimeComponentSunday;
                OnValidate=BEGIN
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Sunday := ROUND(Sunday,1);
                               SundayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;

                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND NOT
                               ("Component Type" = "Component Type"::Expenses) THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp.Sunday",
                                                                 "Overtime Hours Sunday",
                                                                 Sunday,
                                                                 "Travel Hours Sunday");
                                 VALIDATE(Sunday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100528301;2;Field  ;
                SourceExpr="Start Time";
                Visible=false }

    { 1100528302;2;Field  ;
                SourceExpr="End Time";
                Visible=false }

    { 1100485025;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr="Total Line";
                Editable=FALSE }

    { 1210190000;2;Field  ;
                SourceExpr=Quantity }

    { 1100485080;2;Field  ;
                SourceExpr=Amount;
                Editable=NotUnmannedPlant }

    { 1210190004;2;Field  ;
                SourceExpr="Posting Date" }

    { 1100485072;2;Field  ;
                SourceExpr=Comment;
                Editable=LineEditable }

    { 1100528403;2;Field  ;
                SourceExpr=Status }

    { 1100525003;2;Field  ;
                SourceExpr=Address;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528303;2;Field  ;
                SourceExpr="Address From";
                Visible=false }

    { 1100528304;2;Field  ;
                SourceExpr="Address To";
                Visible=false }

    { 1100528305;2;Field  ;
                SourceExpr="Post Code From";
                Visible=false }

    { 1100528306;2;Field  ;
                SourceExpr="Post Code To";
                Visible=false }

    { 1100528307;2;Field  ;
                SourceExpr="City From";
                Visible=false }

    { 1100528308;2;Field  ;
                SourceExpr="City To";
                Visible=false }

    { 1100528309;2;Field  ;
                SourceExpr="Country/Region Code From";
                Visible=false }

    { 1100528310;2;Field  ;
                SourceExpr="Country/Region Code To";
                Visible=false }

    { 1100528311;2;Field  ;
                SourceExpr="Departure Date";
                Visible=false }

    { 1100528312;2;Field  ;
                SourceExpr="Departure Time";
                Visible=false }

    { 1100528313;2;Field  ;
                SourceExpr="Arrival Date";
                Visible=false }

    { 1100528314;2;Field  ;
                SourceExpr="Arrival Time";
                Visible=false }

    { 1100529600;2;Field  ;
                SourceExpr="Resource Req. Receiv. Company";
                Visible=FALSE;
                Editable=ResourceRequestEditable }

    { 1100527300;2;Field  ;
                SourceExpr="Resource Request No.";
                Visible=FALSE;
                Editable=ResourceRequestEditable }

    { 1100527301;2;Field  ;
                DrillDown=No;
                CaptionML=ENU=Resource Request Description;
                SourceExpr=ResourceRequestDescription();
                Visible=FALSE }

    { 1100527350;2;Field  ;
                SourceExpr="Try-out No.";
                Visible=FALSE }

    { 1100527351;2;Field  ;
                SourceExpr="Estimate No.";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      SiteMngmntHoursSetup@1100485010 : Record 11012355;
      SiteManHoursManCU@1100485001 : Codeunit 11012178;
      OvertimeComponentMonday@1100525006 : Boolean INDATASET;
      OvertimeComponentTuesday@1100525007 : Boolean INDATASET;
      OvertimeComponentWednesday@1100525008 : Boolean INDATASET;
      OvertimeComponentThursday@1100525009 : Boolean INDATASET;
      OvertimeComponentFriday@1100525010 : Boolean INDATASET;
      OvertimeComponentSaturday@1100525011 : Boolean INDATASET;
      OvertimeComponentSunday@1100525012 : Boolean INDATASET;
      LineEditable@1100525013 : Boolean INDATASET;
      ElementEditable@1100525000 : Boolean INDATASET;
      ExtensionContractEditable@1100525001 : Boolean INDATASET;
      PlantCompanyEditable@1100525014 : Boolean INDATASET;
      PlantLocationEditable@1100525015 : Boolean INDATASET;
      PlantTypeNoEditable@1100525016 : Boolean INDATASET;
      CostComponentPlantEditable@1100525017 : Boolean INDATASET;
      NotUnmannedPlant@1100525018 : Boolean INDATASET;
      KMEditable@1100525002 : Boolean INDATASET;
      ApprovalManagement4PSConstr@1100528200 : Codeunit 11125349;
      SiteMngmntHoursHeader@1100528203 : Record 11012360;
      OpenApprovalEntriesExistForCurrUser@1100528202 : Boolean INDATASET;
      OpenApprovalEntriesExist@1100528201 : Boolean;
      ResourceRequestEditable@1100527300 : Boolean INDATASET;
      ObjectNoEditable@1100527350 : Boolean INDATASET;

    PROCEDURE CheckLineEditable@1100525003() : Boolean;
    BEGIN
      IF NOT Rec.CheckUnmannedPlantHourLineOpen() THEN
        EXIT(FALSE);
      IF (Status <> Status::Open) AND (Status <> Status::Rejected) THEN
        EXIT(FALSE);
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE ObjectNoOnAfterValidate@19042349();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CostObjectOnAfterValidate@19061648();
    VAR
      lvEmployeeRec@1100525001 : Record 5200;
    BEGIN
      IF "Component Type" = "Component Type"::Kilometers THEN BEGIN
        IF "Supplying Company" <> COMPANYNAME THEN
          lvEmployeeRec.CHANGECOMPANY("Supplying Company");
        lvEmployeeRec.GET("Employee No.");
        SetDefaultDriverType(lvEmployeeRec."Driver Type");
      END;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE WageComponentOnAfterValidate@19034041();
    VAR
      lvEmployeeRec@1100525001 : Record 5200;
    BEGIN
      IF "Component Type" = "Component Type"::Kilometers THEN BEGIN
        IF "Supplying Company" <> COMPANYNAME THEN
          lvEmployeeRec.CHANGECOMPANY("Supplying Company");
        lvEmployeeRec.GET("Employee No.");
        SetDefaultDriverType(lvEmployeeRec."Driver Type");
      END;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE MondayOnAfterValidate@19007363();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE TuesdayOnAfterValidate@19056583();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE WednesdayOnAfterValidate@19034974();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ThursdayOnAfterValidate@19015500();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE FridayOnAfterValidate@19048746();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SaturdayOnAfterValidate@19044351();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SundayOnAfterValidate@19007756();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OvertimeFormat@19016860();
    BEGIN
      OvertimeComponentMonday := ("Overtime Comp. Monday" <> '');
      OvertimeComponentTuesday := ("Overtime Comp.Tuesday" <> '');
      OvertimeComponentWednesday := ("Overtime Comp.Wednesday" <> '');
      OvertimeComponentThursday := ("Overtime Comp.Thursday" <> '');
      OvertimeComponentFriday := ("Overtime Comp.Friday" <> '');
      OvertimeComponentSaturday := ("Overtime Comp.Saturday" <> '');
      OvertimeComponentSunday := ("Overtime Comp.Sunday" <> '');
    END;

    PROCEDURE SetEditable@1100525005();
    BEGIN
      LineEditable := CheckLineEditable;

      KMEditable := LineEditable AND ("Component Type" = "Component Type"::Kilometers);

      ElementEditable := (LineEditable AND (Type <> Type::Indirect));
      ExtensionContractEditable := (LineEditable AND (Type = Type::Project));

      PlantCompanyEditable := (LineEditable AND
        (Type IN [Type::Plant, Type::UnmannedPlant]) AND ("Receiving Company" <> ''));  //* Not for Unmanned Plant!

      PlantLocationEditable := (LineEditable AND
        (Type IN [Type::Plant,Type::UnmannedPlant]) AND ("Object No."<>'') AND ("Plant Company" <> ''));

      PlantTypeNoEditable := (LineEditable AND
        (Type IN [Type::Plant, Type::UnmannedPlant]) AND ("Plant Company" <> ''));

      CostComponentPlantEditable := (LineEditable AND
        (Type = Type::Plant) AND ("Plant Company" <> ''));

      NotUnmannedPlant := (LineEditable AND (Type <> Type::UnmannedPlant));

      ResourceRequestEditable := (Type <> Type::Indirect);

      ObjectNoEditable := TRUE;
      IF Type = Type::Indirect THEN BEGIN
        IF SiteMngmntHoursSetup.GET THEN
          IF SiteMngmntHoursSetup."No Access Obj. No. Indir. Hrs." THEN
            ObjectNoEditable := FALSE;
      END ELSE
        IF NOT LineEditable THEN
          ObjectNoEditable := FALSE;
    END;

    LOCAL PROCEDURE ValidateKilometers@1100525001();
    VAR
      Result@1100525000 : Integer;
    BEGIN
      Result := "End Kilometer" - "Start Kilometer";
      IF Result <0 THEN
         Result := 0;

      IF (Monday <> 0) THEN VALIDATE(Monday, Result) ELSE
        IF (Tuesday <> 0) THEN VALIDATE(Tuesday, Result) ELSE
          IF (Wednesday <> 0) THEN VALIDATE(Wednesday, Result) ELSE
            IF (Thursday <> 0) THEN VALIDATE(Thursday, Result) ELSE
              IF (Friday <> 0) THEN VALIDATE(Friday, Result) ELSE
                IF (Saturday <> 0) THEN VALIDATE(Saturday, Result) ELSE
                  IF (Sunday <> 0) THEN VALIDATE(Sunday, Result) ELSE
                    VALIDATE(Friday, Result);
    END;

    LOCAL PROCEDURE SetControlAppearance@5();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
    BEGIN
      SiteMngmntHoursHeader.GET(Year,Week,"Supplying Company","Employee No.");
      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.LineHasOpenApprovalEntriesForCurrentUser(SiteMngmntHoursHeader.RECORDID, "Line No.");
      OpenApprovalEntriesExist := ApprovalsMgmt.LineHasOpenApprovalEntries(SiteMngmntHoursHeader.RECORDID, "Line No.");
    END;

    BEGIN
    {
      180522 ORANGO.WG  Default Line Type from employee card
    }
    END.
  }
}

