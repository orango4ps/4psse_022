OBJECT Report 12013656 Migrate ExFlow Files
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF510000;
  }
  PROPERTIES
  {
    ProcessingOnly=No;
    OnInitReport=BEGIN
                   PathsFromSetup := TRUE;
                   MigrateInvoices := TRUE;
                   MigrateXML := TRUE;
                   MigrateAttachments := TRUE;
                 END;

    OnPreReport=BEGIN
                  RecId := 0;
                  IF NOT CONFIRM(EXF002,TRUE) THEN
                    EXIT;

                  CASE Direction OF
                    Direction::Import : ImportBlobData;
                    Direction::Export : ExportBlobData;
                    Direction::Archive : ArchiveBlobData;
                  END;
                END;

    OnPostReport=BEGIN
                   CASE Direction OF
                     Direction::Import,Direction::Export :
                       MESSAGE(EXF001,CompsMigrated,InvoicesMigrated,TotImageFiles,XMLfilesMigrated,TotXMLfiles,AttachmentsMigrated,TotAttachedFiles);
                     Direction::Archive :
                       MESSAGE(EXF010,CompsMigrated,InvoicesMigrated,TotImageFiles);
                   END;
                 END;

  }
  DATASET
  {
    { 1100285000;;DataItem;EXDocument        ;
               DataItemTable=Table12013608;
               Temporary=Yes }

    { 1100285009;1;Column;ID                 ;
               SourceExpr=ID }

    { 1100285001;1;Column;Document_Type      ;
               IncludeCaption=Yes;
               SourceExpr="Document Type" }

    { 1100285002;1;Column;Document_No        ;
               IncludeCaption=Yes;
               SourceExpr="Document No." }

    { 1100285003;1;Column;Error_Message      ;
               SourceExpr="Error Message" }

    { 1100285004;1;Column;FileName           ;
               SourceExpr="Image Name" }

    { 1100285005;1;Column;FileType           ;
               SourceExpr="Text Field 1" }

    { 1100285011;1;Column;Direction          ;
               SourceExpr=Direction }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   EnablePaths := NOT PathsFromSetup;
                 END;

    }
    CONTROLS
    {
      { 1100285001;;Container;
                  Name=General;
                  ContainerType=ContentArea }

      { 1100285003;1;Group  ;
                  CaptionML=[ENU=General;
                             SVE=Allm„nt];
                  GroupType=Group }

      { 1100285004;2;Field  ;
                  CaptionML=[ENU=Direction;
                             SVE=Riktning];
                  OptionCaptionML=[ENU=Import,Export,Archive;
                                   SVE=Import,Export,Arkiv];
                  SourceExpr=Direction }

      { 1100285005;2;Field  ;
                  CaptionML=[ENU=Only Migrate In Company;
                             SVE=Migrera endast f”retag];
                  SourceExpr=RunInCompany;
                  OnLookup=VAR
                             CompanyLoc@1100285000 : Record 2000000006;
                             Companies@1100285001 : Page 357;
                           BEGIN
                             CompanyLoc.RESET;
                             Companies.LOOKUPMODE(TRUE);
                             Companies.EDITABLE := FALSE;
                             IF Companies.RUNMODAL <> ACTION::LookupOK THEN
                               EXIT;

                             Companies.GETRECORD(CompanyLoc);
                             IF RunInCompany <> '' THEN
                               RunInCompany += STRSUBSTNO('|%1',CompanyLoc.Name)
                             ELSE
                               RunInCompany := CompanyLoc.Name;
                           END;
                            }

      { 1100285009;2;Field  ;
                  CaptionML=[ENU=Migrate Invoices;
                             SVE=Migrera fakturor];
                  SourceExpr=MigrateInvoices }

      { 1100285000;2;Field  ;
                  CaptionML=[ENU=Migrate XML Files;
                             SVE=Migrera XML-filer];
                  SourceExpr=MigrateXML }

      { 1100285002;2;Field  ;
                  CaptionML=[ENU=Migrate Attachments;
                             SVE=Migrera bilagor];
                  SourceExpr=MigrateAttachments }

      { 1100285011;2;Field  ;
                  CaptionML=[ENU=Use paths from setup;
                             SVE=Anv„nd s”kv„gar fr†n inst„llningar];
                  SourceExpr=PathsFromSetup;
                  OnValidate=VAR
                               ExFlowSetup@1100285000 : Record 12013601;
                             BEGIN
                               IF PathsFromSetup THEN BEGIN
                                 ExFlowSetup.GET;
                                 InvoicePath := ExFlowSetup."Path to Used Invoices";
                                 AttachmentPath := ExFlowSetup."Path to connected Att. Files";
                               END ELSE BEGIN
                                 InvoicePath := '';
                                 AttachmentPath := '';
                               END;

                               EnablePaths := NOT PathsFromSetup;
                             END;
                              }

      { 1100285007;2;Field  ;
                  CaptionML=[ENU=Invoice Path;
                             SVE=Fakturakatalog];
                  SourceExpr=InvoicePath;
                  Editable=EnablePaths;
                  OnValidate=BEGIN
                               EndingSlash(InvoicePath);
                             END;

                  OnAssistEdit=BEGIN
                                 ExFlowFileMgt.SelectFolder(InvoicePath);
                               END;
                                }

      { 1100285008;2;Field  ;
                  CaptionML=[ENU=Attachment Path;
                             SVE=Bilagskatalog];
                  SourceExpr=AttachmentPath;
                  Editable=EnablePaths;
                  OnValidate=BEGIN
                               EndingSlash(AttachmentPath);
                             END;

                  OnAssistEdit=BEGIN
                                 ExFlowFileMgt.SelectFolder(AttachmentPath);
                               END;
                                }

      { 1100285012;2;Field  ;
                  CaptionML=[ENU=Replace/Ignore File Conflicts;
                             SVE=Ers„tt/Ignorera filkonfliktsfel];
                  SourceExpr=IgnoreConflicts }

      { 1100285010;2;Field  ;
                  CaptionML=[ENU=Date filter;
                             SVE=Datumfilter];
                  SourceExpr=DateFilter }

    }
  }
  LABELS
  {
    { 1100285006;FileNameLbl   ;CaptionML=[ENU=File Name;
                                           SVE=Filnamn] }
    { 1100285007;FileTypeLbl   ;CaptionML=[ENU=File Type;
                                           SVE=Filtyp] }
    { 1100285008;ErrorCodelbl  ;CaptionML=[ENU=Error Code;
                                           SVE=Felkod] }
    { 1100285010;IDlLbl        ;CaptionML=[ENU=No.;
                                           SVE=No.] }
    { 1100285012;ErrorListLbl  ;CaptionML=[ENU=Error List:;
                                           SVE=Fellista:] }
  }
  CODE
  {
    VAR
      RunInCompany@1100285000 : Text[250];
      Direction@1100285001 : 'Import,Export,Archive';
      MigrateInvoices@1100285005 : Boolean;
      MigrateXML@1100285013 : Boolean;
      MigrateAttachments@1100285014 : Boolean;
      ExFlowFileMgt@1100285008 : Codeunit 12013602;
      CompsMigrated@1100285009 : Integer;
      InvoicesMigrated@1100285010 : Integer;
      AttachmentsMigrated@1100285011 : Integer;
      XMLfilesMigrated@1100285012 : Integer;
      EXF001@1100285015 : TextConst 'ENU=Migrated %1 Companies, %2 of Tot. %3 Invoices, %4 of Tot. %5 XML Files, %6 of Tot %7 Attachments;SVE=Migrering utf”rd i %1 f”retag, %2 av %3 fakturor, %4 av %5 XML-filer, %6 av %7 Bilagor';
      EXF002@1100285016 : TextConst 'ENU=This action will import/export/archive data according to your selections. Proceed?;SVE=Denna †tg„rd kommer att importera/exporta/arkiv data enligt dina val. Forts„tta?';
      PathsFromSetup@1100285002 : Boolean;
      InvoicePath@1100285018 : Text;
      AttachmentPath@1100285019 : Text;
      EXF003@1100285017 : TextConst 'ENU=Invalid filename %1;SVE=Felaktigt filnamn %1';
      EXF004@1100285007 : TextConst 'ENU=Invoice Path %1 does not exist;SVE=Fakturas”kv„g %1 finns ej';
      EXF005@1100285020 : TextConst 'ENU=Attachment Path %1 does not exist;SVE=Bilaga %1 finns ej';
      IgnoreConflicts@1100285003 : Boolean;
      EXF006@1100285021 : TextConst 'ENU=File %1 does not exist;SVE=Fil %1 finnes ej';
      EXF007@1100285022 : TextConst 'ENU=File %1 is already imported into database;SVE=Fil %1 „r redan importerad till databasen';
      EXF008@1100285023 : TextConst 'ENU=File %1 already exists;SVE=Fil %1 finns redan';
      FileMgt@1100285006 : Codeunit 419;
      TotAttachedFiles@1100285024 : Integer;
      TotXMLfiles@1100285025 : Integer;
      TotImageFiles@1100285026 : Integer;
      EXF009@1100285027 : TextConst 'ENU=Invoice Path does not exist!;SVE=Fakturas”kv„g finns ej!';
      EXF010@1100285028 : TextConst 'ENU=Archived %1 Companies, %2 of Tot. %3 Invoices;SVE=Arkiveras %1 f”retag, %2 av %3 fakturor';
      EXF011@1100285030 : TextConst 'ENU=Company Name: %1. Archiving is applicable only for storage type "Database".;SVE=F”retags Namn: %1. Arkivering „r bara tillg„ngligt f”r lagringstypen "Databas"';
      DateFilter@1100285031 : Date;
      EXF012@1100285004 : TextConst 'ENU=Companies #1##########\Company Name #2####################\Document No.  #3####################\Invoices @4@@@@@@@@@@@@@@@@@@@@;SVE=Companies #1##########\Company Name #2####################\Document No.  #3####################\Invoices @4@@@@@@@@@@@@@@@@@@@@';
      Window@1100285029 : Dialog;
      EXF013@1100285032 : TextConst 'ENU=ExFlow Setup\;SVE=ExFlow Inst„llningar\';
      EXF014@1100285033 : TextConst 'ENU=During the archiving process, all images will be deleted!\Would you still like to continue?;SVE=Arkiverings funktionen kommer att ta bort alla faktura bilder ifr†n databasen! Žr du s„ker p† att du vill forts„tta?';
      EnablePaths@1100285034 : Boolean INDATASET;
      FileType@1100285035 : Text[250];
      FileName@1100285036 : Text[250];
      ErrorCode@1100285037 : Text[250];
      RecId@1100285038 : Integer;
      EXF015@1100285039 : TextConst 'ENU=The file has been updated.;SVE=Filen uppdateras.';
      EXF016@1100285040 : TextConst 'ENU=The image for Document No. %1 is already cleared.;SVE=Bilden f”r dokumentnummeret %1 „r redan bortagen.';

    LOCAL PROCEDURE StreamFilesToDatabase@1100285001(CompName@1100285000 : Text[30];ExflowSetup@1100285001 : Record 12013601);
    VAR
      ExflowBLOB@1100285003 : Record 12013591;
      ExDoc2@1100285009 : Record 12013612;
      FullFilePath@1100285008 : Text[250];
      ExAttachedFile@1100285002 : Record 12013643;
      DocID@1100285013 : BigInteger;
      WebID@1100285014 : BigInteger;
      ExPurchHeaderArch@1100285005 : Record 12013650;
    BEGIN
      ExDoc2.CHANGECOMPANY(CompName);
      ExAttachedFile.CHANGECOMPANY(CompName);

      ExDoc2.RESET;
      ExDoc2.SETFILTER("Image Name",'<>%1','');
      IF ExDoc2.FINDSET THEN BEGIN
        REPEAT
          IF MigrateInvoices THEN BEGIN
            TotImageFiles += 1;
            FullFilePath:= ExflowSetup."Path to Used Invoices" + ExDoc2."Image Name";
            IF CheckConflictsImport(FullFilePath,ExDoc2."Image Blob".HASVALUE,ExDoc2."Document Type",ExDoc2."Document No.") THEN BEGIN
              ExFlowFileMgt.ImportBLOB(ExflowBLOB,FullFilePath);
              ExDoc2."Image Blob" := ExflowBLOB.BLOB;
              IF ExDoc2."Image Blob".HASVALUE THEN BEGIN
                GetDocIDs(CompName,ExDoc2."Document Type",ExDoc2."Document No.",DocID,WebID);
                ExDoc2."Document ID" := DocID;
                ExDoc2."Web ID" := WebID;
                ExDoc2.MODIFY;
                InvoicesMigrated += 1;
              END;
            END;
          END;
          IF MigrateXML THEN
            IF ExPurchHeaderArch.GET(ExDoc2."Import Document No.") THEN
              IF ExPurchHeaderArch."XML File Name" <> '' THEN BEGIN
                TotXMLfiles += 1;
                FullFilePath:= ExflowSetup."Path to Used Invoices" + ExPurchHeaderArch."XML File Name";
                IF CheckConflictsImport(FullFilePath,ExPurchHeaderArch."XML File".HASVALUE,ExPurchHeaderArch."Document Type",ExPurchHeaderArch."Vendor Invoice No.") THEN BEGIN
                  ExFlowFileMgt.ImportBLOB(ExflowBLOB,FullFilePath);
                  ExPurchHeaderArch."XML File" := ExflowBLOB.BLOB;
                  IF ExPurchHeaderArch."XML File".HASVALUE THEN BEGIN
                    ExPurchHeaderArch.MODIFY;
                    XMLfilesMigrated += 1;
                  END;
                END;
              END;
        UNTIL ExDoc2.NEXT = 0
      END;

      IF MigrateAttachments THEN BEGIN
        ExAttachedFile.RESET;
        ExAttachedFile.SETFILTER("Attached File",'<>%1','');
        ExAttachedFile.SETRANGE(Attached,TRUE);
        IF ExAttachedFile.FINDSET THEN BEGIN
          REPEAT
            TotAttachedFiles += 1;
            FullFilePath:= ExflowSetup."Path to connected Att. Files" + ExAttachedFile."Attached File";
            IF CheckConflictsImport(FullFilePath,ExAttachedFile."Attachment Blob".HASVALUE,ExAttachedFile."Document Type",ExAttachedFile."Document No.") THEN BEGIN
              ExFlowFileMgt.ImportBLOB(ExflowBLOB,FullFilePath);
              ExAttachedFile."Attachment Blob":= ExflowBLOB.BLOB;
              IF ExAttachedFile."Attachment Blob".HASVALUE THEN BEGIN
                GetDocIDs(CompName,ExAttachedFile."Document Type",ExAttachedFile."Document No.",DocID,WebID);
                ExAttachedFile."Document ID" := DocID;
                ExAttachedFile."Web ID" := WebID;
                ExAttachedFile.MODIFY;
                AttachmentsMigrated += 1;
              END;
            END;
          UNTIL ExAttachedFile.NEXT = 0
        END;
      END;
    END;

    LOCAL PROCEDURE ExportFilesFromDatabase@1100285005(CompName@1100285000 : Text[30];ExflowSetup@1100285001 : Record 12013601);
    VAR
      ExflowBLOB@1100285007 : Record 12013591;
      ExDoc2@1100285009 : Record 12013612;
      FullFilePath@1100285008 : Text[250];
      ExFlowFileMgt@1100285005 : Codeunit 12013602;
      ExAttachedFile@1100285002 : Record 12013643;
      DocID@1100285013 : BigInteger;
      WebID@1100285014 : BigInteger;
      ExPurchHeaderArch@1100285006 : Record 12013650;
    BEGIN
      ExDoc2.CHANGECOMPANY(CompName);
      ExAttachedFile.CHANGECOMPANY(CompName);

      ExDoc2.RESET;
      ExDoc2.SETFILTER("Image Name",'<>%1','');
      IF ExDoc2.FINDSET(TRUE) THEN BEGIN
        REPEAT
          IF MigrateInvoices THEN
            IF ExDoc2."Image Blob".HASVALUE THEN BEGIN
              TotImageFiles += 1;
              IF NOT PathsFromSetup THEN
                FullFilePath := ExflowSetup."Path to Used Invoices" + CompName + '\' + ExDoc2."Image Name"
              ELSE
                FullFilePath := ExflowSetup."Path to Used Invoices" + ExDoc2."Image Name";
              IF CheckConflictsExport(FullFilePath, ExDoc2."Document Type",ExDoc2."Document No.") THEN BEGIN
                IF NOT ExFlowFileMgt.FolderExist(ExFlowFileMgt.Path(FullFilePath)) THEN
                  ExFlowFileMgt.NewFolder(ExFlowFileMgt.Path(FullFilePath),ExflowSetup."Path to Used Invoices");
                ExDoc2.CALCFIELDS("Image Blob");
                ExflowBLOB.BLOB := ExDoc2."Image Blob";
                ExFlowFileMgt.ExportBLOB(ExflowBLOB,FullFilePath);
                InvoicesMigrated += 1;
              END;
            END;
          IF MigrateXML THEN
            IF ExPurchHeaderArch.GET(ExDoc2."Import Document No.") THEN
              IF (ExPurchHeaderArch."XML File Name" <> '') AND ExPurchHeaderArch."XML File".HASVALUE THEN BEGIN
                TotXMLfiles += 1;
                IF NOT PathsFromSetup THEN
                  FullFilePath:= ExflowSetup."Path to Used Invoices" + CompName + '\' + ExPurchHeaderArch."XML File Name"
                ELSE
                  FullFilePath:= ExflowSetup."Path to Used Invoices" + ExPurchHeaderArch."XML File Name";
                IF CheckConflictsExport(FullFilePath,ExPurchHeaderArch."Document Type",ExPurchHeaderArch."Vendor Invoice No.") THEN BEGIN
                  IF NOT ExFlowFileMgt.FolderExist(ExFlowFileMgt.Path(FullFilePath)) THEN
                    ExFlowFileMgt.NewFolder(ExFlowFileMgt.Path(FullFilePath),ExflowSetup."Path to Used Invoices");
                  ExPurchHeaderArch.CALCFIELDS("XML File");
                  ExflowBLOB.BLOB := ExPurchHeaderArch."XML File";
                  ExFlowFileMgt.ExportBLOB(ExflowBLOB,FullFilePath);
                  XMLfilesMigrated += 1;
                END;
              END;
        UNTIL ExDoc2.NEXT = 0;
      END;

      IF MigrateAttachments THEN BEGIN
        ExAttachedFile.RESET;
        ExAttachedFile.SETFILTER("Attached File",'<>%1','');
        ExAttachedFile.SETRANGE(Attached,TRUE);
        IF ExAttachedFile.FINDSET(TRUE) THEN BEGIN
          REPEAT
            IF ExAttachedFile."Attachment Blob".HASVALUE THEN BEGIN
              TotAttachedFiles += 1;
              FullFilePath:= ExflowSetup."Path to connected Att. Files" + ExAttachedFile."Attached File";
              IF CheckConflictsExport(FullFilePath,ExAttachedFile."Document Type",ExAttachedFile."Document No.") THEN BEGIN
                IF NOT ExFlowFileMgt.FolderExist(ExFlowFileMgt.Path(FullFilePath)) THEN
                  ExFlowFileMgt.NewFolder(ExFlowFileMgt.Path(FullFilePath),ExflowSetup."Path to connected Att. Files");
                ExAttachedFile.CALCFIELDS("Attachment Blob");
                ExflowBLOB.BLOB := ExAttachedFile."Attachment Blob";
                ExFlowFileMgt.ExportBLOB(ExflowBLOB,FullFilePath);
                AttachmentsMigrated += 1;
              END;
            END;
          UNTIL ExAttachedFile.NEXT = 0
        END;
      END;
    END;

    LOCAL PROCEDURE GetDocIDs@1100285000(CompName@1100285006 : Text[30];DocType@1100285000 : Integer;DocNo@1100285001 : Code[20];VAR DocID@1100285002 : BigInteger;VAR WebID@1100285003 : BigInteger);
    VAR
      ExDoc@1100285005 : Record 12013608;
      PostedExDoc@1100285004 : Record 12013626;
    BEGIN
      DocID := 0;
      WebID := 0;

      PostedExDoc.CHANGECOMPANY(CompName);
      ExDoc.CHANGECOMPANY(CompName);

      IF DocType > 5 THEN BEGIN
        WITH PostedExDoc DO BEGIN
          RESET;
          SETCURRENTKEY("Document No.");
          SETRANGE("Document Type", DocType);
          SETRANGE("Document No.", DocNo);
          IF FINDFIRST THEN BEGIN
            DocID:= ID;
            WebID := "Web ID";
          END;
        END;
      END ELSE BEGIN
        WITH ExDoc DO BEGIN
          RESET;
          SETCURRENTKEY("Document No.");
          SETRANGE("Document Type", DocType);
          SETRANGE("Document No.", DocNo);
          IF FINDFIRST THEN BEGIN
            DocID:= ID;
            WebID := "Web ID";
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE ImportBlobData@1100285002();
    VAR
      Company@1100285000 : Record 2000000006;
      ExFlowSetup@1100285001 : Record 12013601;
    BEGIN
      WITH Company DO BEGIN
        RESET;
        IF RunInCompany <> '' THEN
          SETFILTER(Name,RunInCompany);
        IF NOT FINDSET THEN
          EXIT;

        REPEAT
          ExFlowSetup.CHANGECOMPANY(Name);
          IF ExFlowSetup.GET THEN BEGIN
            IF CheckReplaceRootPath(ExFlowSetup) THEN BEGIN
              StreamFilesToDatabase(Name,ExFlowSetup);
              CompsMigrated += 1;
            END;
          END;
        UNTIL NEXT = 0
      END;
    END;

    LOCAL PROCEDURE CheckReplaceRootPath@1100285003(VAR ExFlowSetup@1100285000 : Record 12013601) : Boolean;
    VAR
      RunInAllCompanies@1100285001 : Boolean;
    BEGIN
      RunInAllCompanies := UseAllCompanies;

      IF MigrateInvoices OR MigrateXML THEN BEGIN
        IF NOT PathsFromSetup THEN
          ExFlowSetup."Path to Used Invoices" := InvoicePath;

        IF NOT RunInAllCompanies THEN BEGIN
          IF ExFlowSetup."Path to Used Invoices" = '' THEN
            ERROR(EXF004,ExFlowSetup."Path to Used Invoices");
          IF NOT ExFlowFileMgt.FolderExist(ExFlowSetup."Path to Used Invoices") THEN
            ERROR(EXF004,ExFlowSetup."Path to Used Invoices");
        END ELSE BEGIN
          IF NOT ExFlowFileMgt.FolderExist(ExFlowSetup."Path to Used Invoices") THEN
            ExFlowSetup."Path to Used Invoices" := '';
        END;
      END;

      IF MigrateAttachments THEN BEGIN
        IF NOT PathsFromSetup THEN
          ExFlowSetup."Path to connected Att. Files":= AttachmentPath;

        IF NOT RunInAllCompanies THEN BEGIN
          IF ExFlowSetup."Path to connected Att. Files" = '' THEN
            ERROR(EXF005,ExFlowSetup."Path to connected Att. Files");
          IF NOT ExFlowFileMgt.FolderExist(ExFlowSetup."Path to connected Att. Files") THEN
            ERROR(EXF005,ExFlowSetup."Path to connected Att. Files");
        END ELSE BEGIN
          IF NOT ExFlowFileMgt.FolderExist(ExFlowSetup."Path to connected Att. Files") THEN
            ExFlowSetup."Path to connected Att. Files" := '';
        END;
      END;

      IF (ExFlowSetup."Path to connected Att. Files" = '') AND (ExFlowSetup."Path to Used Invoices" = '') THEN
        EXIT(FALSE)
      ELSE
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE ExportBlobData@1100285004();
    VAR
      Company@1100285000 : Record 2000000006;
      ExFlowSetup@1100285001 : Record 12013601;
    BEGIN
      WITH Company DO BEGIN
        RESET;
        IF RunInCompany <> '' THEN
          SETFILTER(Name,RunInCompany);
        IF NOT FINDSET THEN
          EXIT;

        REPEAT
          ExFlowSetup.CHANGECOMPANY(Name);
          IF ExFlowSetup.GET THEN BEGIN
            IF CheckReplaceRootPath(ExFlowSetup) THEN BEGIN
              ExportFilesFromDatabase(Name,ExFlowSetup);
              CompsMigrated += 1;
            END;
          END;
        UNTIL NEXT = 0
      END;
    END;

    LOCAL PROCEDURE CheckConflictsImport@1100285006(FullFilePath@1100285000 : Text;HasValue@1100285001 : Boolean;DocumentType@1100285002 : Integer;DocumentNo@1100285003 : Code[50]) : Boolean;
    BEGIN
      IF IgnoreConflicts THEN BEGIN
        IF NOT ExFlowFileMgt.FileExist(ExFlowFileMgt.Path(FullFilePath),ExFlowFileMgt.GetFileName(FullFilePath)) THEN
            InsertTmpExDoc2(DocumentType,DocumentNo,'Error: ' +EXF006,FullFilePath)
        ELSE IF HasValue THEN
            InsertTmpExDoc2(DocumentType,DocumentNo,'Information: ' + EXF015,FullFilePath);
        EXIT(ExFlowFileMgt.FileExist(ExFlowFileMgt.Path(FullFilePath),ExFlowFileMgt.GetFileName(FullFilePath)));
      END;

      IF HasValue THEN
        ERROR(EXF007,FullFilePath);

      IF NOT ExFlowFileMgt.FileExist(ExFlowFileMgt.Path(FullFilePath),ExFlowFileMgt.GetFileName(FullFilePath)) THEN
        ERROR(EXF006,FullFilePath);
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CheckConflictsExport@1100285007(FullFilePath@1100285000 : Text;DocumentType@1100285002 : Integer;DocumentNo@1100285001 : Code[50]) : Boolean;
    BEGIN
      IF IgnoreConflicts THEN BEGIN
        IF NOT FileMgt.IsValidFileName(ExFlowFileMgt.GetFileName(FullFilePath)) THEN BEGIN
          InsertTmpExDoc2(DocumentType, DocumentNo , 'ERROR: ' + EXF003 , FullFilePath);
          EXIT(FALSE);
        END;
        IF ExFlowFileMgt.FileExist(ExFlowFileMgt.Path(FullFilePath),ExFlowFileMgt.GetFileName(FullFilePath)) THEN BEGIN
          ExFlowFileMgt.Delete(ExFlowFileMgt.Path(FullFilePath),ExFlowFileMgt.GetFileName(FullFilePath));
          InsertTmpExDoc2(DocumentType,DocumentNo, 'Information: '+ EXF015 , FullFilePath);
        END;
        EXIT(TRUE);
      END;

      IF NOT FileMgt.IsValidFileName(ExFlowFileMgt.GetFileName(FullFilePath)) THEN
        ERROR(EXF003,ExFlowFileMgt.GetFileName(FullFilePath));

      IF ExFlowFileMgt.FileExist(ExFlowFileMgt.Path(FullFilePath),ExFlowFileMgt.GetFileName(FullFilePath)) THEN
        ERROR(EXF008,FullFilePath);
      EXIT(TRUE);
    END;

    PROCEDURE EndingSlash@1000000000(VAR Path@1000000000 : Text);
    BEGIN
      IF Path = '' THEN
        EXIT;

      IF Path[STRLEN(Path)] <> '\' THEN
        Path += '\';
    END;

    LOCAL PROCEDURE ArchiveBlobData@1100285009();
    VAR
      Company@1100285001 : Record 2000000006;
      TotalCompanies@1100285002 : Integer;
    BEGIN
      IF GUIALLOWED THEN
        IF NOT CONFIRM(EXF014,FALSE) THEN
          EXIT;

      IF InvoicePath = '' THEN
        ERROR(EXF009);

      EndingSlash(InvoicePath);

      WITH Company DO BEGIN
        RESET;
        IF RunInCompany <> '' THEN
          SETFILTER(Name,RunInCompany);
        IF NOT FINDSET THEN
          EXIT;
      END;

      CheckCompanies(Company);

      InvoicesMigrated := 0;
      TotImageFiles := 0;
      CompsMigrated := 0;

      IF GUIALLOWED THEN
        Window.OPEN(EXF012);

      WITH Company DO BEGIN
        TotalCompanies := COUNT;
        FINDSET;
        REPEAT
          CompsMigrated += 1;
          IF GUIALLOWED THEN BEGIN
            Window.UPDATE(1,STRSUBSTNO('%1 / %2',CompsMigrated,TotalCompanies));
            Window.UPDATE(2,Name);
          END;
          ArchivePostedInvoices(Name);
        UNTIL NEXT = 0;
      END;

      IF GUIALLOWED THEN
        Window.CLOSE;
    END;

    LOCAL PROCEDURE ArchivePostedInvoices@1100285023(CompanyName@1100285000 : Text[30]);
    VAR
      EXPostedDocument@1100285002 : Record 12013626;
      ExflowBLOB@1100285010 : Record 12013591;
      ExDoc2@1100285003 : Record 12013612;
      ExFlowFileMgt@1100285009 : Codeunit 12013602;
      TempImageName@1100285005 : Text;
      RootFolderName@1100285001 : Text;
      FileName@1100285008 : Text;
      TotalDocuments@1100285004 : Integer;
      ExFlowSetup@1100285006 : Record 12013601;
    BEGIN
      RootFolderName := STRSUBSTNO('%1%2\',InvoicePath,CompanyName);

      WITH ExDoc2 DO BEGIN
        CHANGECOMPANY(CompanyName);
        RESET;
      END;

      WITH EXPostedDocument DO BEGIN
        CHANGECOMPANY(CompanyName);
        RESET;
        SETCURRENTKEY("Document Type","Document Date");
        SETRANGE("Document Type","Document Type"::"Posted Invoice");
        SETFILTER(Status,'<>%1',Status::Inactive);
        IF DateFilter <> 0D THEN
          SETFILTER("Document Date",'<%1',DateFilter);
        IF NOT FINDSET THEN
          EXIT;

        TotalDocuments := COUNT;
        REPEAT
          GetImageDocument("Document Type","Document No.",ExflowBLOB,TempImageName);
          IF ExflowBLOB.BLOB.HASVALUE THEN BEGIN
            FileName := STRSUBSTNO('%1%2',RootFolderName,TempImageName);
            IF NOT ExFlowFileMgt.FolderExist(ExFlowFileMgt.Path(FileName)) THEN
              ExFlowFileMgt.NewFolder(ExFlowFileMgt.Path(FileName),InvoicePath);
            ExFlowFileMgt.ExportBLOB(ExflowBLOB,FileName);
            InvoicesMigrated += 1;
          END;

          IF GUIALLOWED THEN BEGIN
            Window.UPDATE(3,ROUND(InvoicesMigrated / TotalDocuments * 10000,1));
            Window.UPDATE(4,"Document No.");
          END;
        UNTIL NEXT = 0;

        TotImageFiles += TotalDocuments;
      END;
    END;

    LOCAL PROCEDURE GetImageDocument@1100285056(DocType@1100285001 : Integer;DocNo@1100285000 : Code[20];VAR ExflowBLOB@1100285006 : Record 12013591;VAR TempImageName@1100285003 : Text);
    VAR
      ExDoc2@1100285002 : Record 12013612;
    BEGIN
      TempImageName := '';
      CLEAR(ExflowBLOB);

      WITH ExDoc2 DO BEGIN
        SETCURRENTKEY("Document No.");
        SETRANGE("Document Type", DocType);
        SETRANGE("Document No.", DocNo);
        IF NOT FINDFIRST THEN BEGIN
          InsertTmpExDoc2Archive(DocType,DocNo,'no rec.');
        EXIT;
      END;

        IF NOT "Image Blob".HASVALUE THEN BEGIN
          InsertTmpExDoc2Archive(DocType,DocNo,EXF016);
          EXIT;
        END;

        TempImageName := "Image Name";
        CALCFIELDS("Image Blob");
        ExflowBLOB.INIT;
        ExflowBLOB.BLOB := "Image Blob";
        CLEAR("Image Blob");
        MODIFY;
      END;
    END;

    LOCAL PROCEDURE CheckCompanies@1100285069(VAR CompanyLoc@1100285000 : Record 2000000006);
    VAR
      ExFlowSetupLoc@1100285001 : Record 12013601;
      ErrorMessage@1100285002 : Text;
    BEGIN
      ErrorMessage := '';
      WITH CompanyLoc DO BEGIN
        REPEAT
          ExFlowSetupLoc.CHANGECOMPANY(Name);
          IF ExFlowSetupLoc.GET THEN
            IF ExFlowSetupLoc."File storage type" <> ExFlowSetupLoc."File storage type"::Database THEN
              ErrorMessage += STRSUBSTNO(EXF011,Name);
        UNTIL NEXT = 0;
      END;

      IF ErrorMessage <> '' THEN
        ERROR(EXF013 + ErrorMessage);
    END;

    LOCAL PROCEDURE UseAllCompanies@1100285015() : Boolean;
    VAR
      CompanyLoc@1100285000 : Record 2000000006;
      TotalCompLoc@1100285001 : Integer;
    BEGIN
      WITH CompanyLoc DO BEGIN
        RESET;
        TotalCompLoc := COUNT;
        IF RunInCompany <> '' THEN
          SETFILTER(Name,RunInCompany);
        EXIT(TotalCompLoc = COUNT);
      END;
    END;

    LOCAL PROCEDURE InsertTmpExDoc2@1100285026(DocumentType@1100285000 : Integer;DocumentNo@1100285003 : Code[50];ErrorMessage@1100285001 : Text[250];FullFilePath@1100285002 : Text);
    BEGIN
      RecId += 1;
      WITH EXDocument DO BEGIN
        INIT;
        ID := RecId;
        "Document Type" := DocumentType;
        "Document No." := DocumentNo;
        "Error Message" := STRSUBSTNO(ErrorMessage,FullFilePath);
        "Image Name":= ExFlowFileMgt.GetFileName(FullFilePath); //File Name
        "Text Field 1" := COPYSTR("Image Name", STRPOS("Image Name",'.'), STRLEN("Image Name"));  //File Type
        INSERT;
      END;
    END;

    LOCAL PROCEDURE InsertTmpExDoc2Archive@1100285018(DocumentType@1100285003 : Integer;DocumentNo@1100285002 : Code[50];ErrorMessage@1100285001 : Text[250]);
    BEGIN
      RecId += 1;
      WITH EXDocument DO BEGIN
        INIT;
        ID := RecId;
        "Document Type" := DocumentType;
        "Document No." := DocumentNo;
        "Error Message" := STRSUBSTNO(ErrorMessage,"Document No.");
        INSERT;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns="http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition" xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner">
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
    </DataSource>
  </DataSources>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <Fields>
        <Field Name="ID">
          <DataField>ID</DataField>
        </Field>
        <Field Name="Document_Type">
          <DataField>Document_Type</DataField>
        </Field>
        <Field Name="Document_No">
          <DataField>Document_No</DataField>
        </Field>
        <Field Name="Error_Message">
          <DataField>Error_Message</DataField>
        </Field>
        <Field Name="FileName">
          <DataField>FileName</DataField>
        </Field>
        <Field Name="FileType">
          <DataField>FileType</DataField>
        </Field>
        <Field Name="Direction">
          <DataField>Direction</DataField>
        </Field>
      </Fields>
    </DataSet>
  </DataSets>
  <ReportSections>
    <ReportSection>
      <Body>
        <ReportItems>
          <Tablix Name="Tablix1">
            <TablixBody>
              <TablixColumns>
                <TablixColumn>
                  <Width>0.81667in</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>1.81666in</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>1.83334in</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>2.16666in</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>2.16666in</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>2.95in</Width>
                </TablixColumn>
              </TablixColumns>
              <TablixRows>
                <TablixRow>
                  <Height>0.25in</Height>
                  <TablixCells>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Textbox1">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Parameters!ErrorListLbl.Value</Value>
                                  <Style />
                                </TextRun>
                              </TextRuns>
                              <Style />
                            </Paragraph>
                          </Paragraphs>
                          <rd:DefaultName>Textbox1</rd:DefaultName>
                          <Style>
                            <Border>
                              <Color>LightGrey</Color>
                              <Style>None</Style>
                            </Border>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                        <ColSpan>6</ColSpan>
                      </CellContents>
                    </TablixCell>
                    <TablixCell />
                    <TablixCell />
                    <TablixCell />
                    <TablixCell />
                    <TablixCell />
                  </TablixCells>
                </TablixRow>
                <TablixRow>
                  <Height>0.23622in</Height>
                  <TablixCells>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Textbox13">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Parameters!IDlLbl.Value</Value>
                                  <Style />
                                </TextRun>
                              </TextRuns>
                              <Style />
                            </Paragraph>
                          </Paragraphs>
                          <rd:DefaultName>Textbox13</rd:DefaultName>
                          <Style>
                            <Border>
                              <Style>None</Style>
                              <Width>0.5pt</Width>
                            </Border>
                            <BottomBorder>
                              <Style>Solid</Style>
                            </BottomBorder>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Textbox14">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!Document_Type.Value</Value>
                                  <Style />
                                </TextRun>
                              </TextRuns>
                              <Style />
                            </Paragraph>
                          </Paragraphs>
                          <rd:DefaultName>Textbox14</rd:DefaultName>
                          <Style>
                            <Border>
                              <Style>None</Style>
                              <Width>0.5pt</Width>
                            </Border>
                            <BottomBorder>
                              <Style>Solid</Style>
                            </BottomBorder>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Textbox15">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Parameters!Document_NoCaption.Value</Value>
                                  <Style />
                                </TextRun>
                              </TextRuns>
                              <Style />
                            </Paragraph>
                          </Paragraphs>
                          <rd:DefaultName>Textbox15</rd:DefaultName>
                          <Style>
                            <Border>
                              <Style>None</Style>
                              <Width>0.5pt</Width>
                            </Border>
                            <BottomBorder>
                              <Style>Solid</Style>
                            </BottomBorder>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Textbox16">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!FileName.Value</Value>
                                  <Style />
                                </TextRun>
                              </TextRuns>
                              <Style />
                            </Paragraph>
                          </Paragraphs>
                          <rd:DefaultName>Textbox16</rd:DefaultName>
                          <Style>
                            <Border>
                              <Style>None</Style>
                              <Width>0.5pt</Width>
                            </Border>
                            <BottomBorder>
                              <Style>Solid</Style>
                            </BottomBorder>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Textbox17">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Parameters!FileTypeLbl.Value</Value>
                                  <Style />
                                </TextRun>
                              </TextRuns>
                              <Style />
                            </Paragraph>
                          </Paragraphs>
                          <rd:DefaultName>Textbox17</rd:DefaultName>
                          <Style>
                            <Border>
                              <Style>None</Style>
                              <Width>0.5pt</Width>
                            </Border>
                            <BottomBorder>
                              <Style>Solid</Style>
                            </BottomBorder>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Textbox18">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Parameters!ErrorCodelbl.Value</Value>
                                  <Style />
                                </TextRun>
                              </TextRuns>
                              <Style />
                            </Paragraph>
                          </Paragraphs>
                          <rd:DefaultName>Textbox18</rd:DefaultName>
                          <Style>
                            <Border>
                              <Style>None</Style>
                              <Width>0.5pt</Width>
                            </Border>
                            <BottomBorder>
                              <Style>Solid</Style>
                            </BottomBorder>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                  </TablixCells>
                </TablixRow>
                <TablixRow>
                  <Height>0.23622in</Height>
                  <TablixCells>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Textbox2">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!ID.Value</Value>
                                  <Style />
                                </TextRun>
                              </TextRuns>
                              <Style />
                            </Paragraph>
                          </Paragraphs>
                          <rd:DefaultName>Textbox2</rd:DefaultName>
                          <Style>
                            <Border>
                              <Color>LightGrey</Color>
                              <Style>None</Style>
                            </Border>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Textbox4">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!Document_Type.Value</Value>
                                  <Style />
                                </TextRun>
                              </TextRuns>
                              <Style />
                            </Paragraph>
                          </Paragraphs>
                          <rd:DefaultName>Textbox4</rd:DefaultName>
                          <Style>
                            <Border>
                              <Color>LightGrey</Color>
                              <Style>None</Style>
                            </Border>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Textbox6">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!Document_No.Value</Value>
                                  <Style />
                                </TextRun>
                              </TextRuns>
                              <Style />
                            </Paragraph>
                          </Paragraphs>
                          <rd:DefaultName>Textbox6</rd:DefaultName>
                          <Style>
                            <Border>
                              <Color>LightGrey</Color>
                              <Style>None</Style>
                            </Border>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Textbox8">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!FileName.Value</Value>
                                  <Style />
                                </TextRun>
                              </TextRuns>
                              <Style />
                            </Paragraph>
                          </Paragraphs>
                          <rd:DefaultName>Textbox8</rd:DefaultName>
                          <Style>
                            <Border>
                              <Color>LightGrey</Color>
                              <Style>None</Style>
                            </Border>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Textbox10">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!FileType.Value</Value>
                                  <Style />
                                </TextRun>
                              </TextRuns>
                              <Style />
                            </Paragraph>
                          </Paragraphs>
                          <rd:DefaultName>Textbox10</rd:DefaultName>
                          <Style>
                            <Border>
                              <Color>LightGrey</Color>
                              <Style>None</Style>
                            </Border>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Textbox12">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!Error_Message.Value</Value>
                                  <Style />
                                </TextRun>
                              </TextRuns>
                              <Style />
                            </Paragraph>
                          </Paragraphs>
                          <rd:DefaultName>Textbox12</rd:DefaultName>
                          <Style>
                            <Border>
                              <Color>LightGrey</Color>
                              <Style>None</Style>
                            </Border>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                  </TablixCells>
                </TablixRow>
              </TablixRows>
            </TablixBody>
            <TablixColumnHierarchy>
              <TablixMembers>
                <TablixMember />
                <TablixMember />
                <TablixMember />
                <TablixMember>
                  <Visibility>
                    <Hidden>=iif(Fields!Direction.Value="Archive", true,false)</Hidden>
                  </Visibility>
                </TablixMember>
                <TablixMember>
                  <Visibility>
                    <Hidden>=iif(Fields!Direction.Value="Archive", true,false)</Hidden>
                  </Visibility>
                </TablixMember>
                <TablixMember />
              </TablixMembers>
            </TablixColumnHierarchy>
            <TablixRowHierarchy>
              <TablixMembers>
                <TablixMember>
                  <KeepWithGroup>After</KeepWithGroup>
                </TablixMember>
                <TablixMember>
                  <KeepWithGroup>After</KeepWithGroup>
                </TablixMember>
                <TablixMember>
                  <Group Name="Details" />
                </TablixMember>
              </TablixMembers>
            </TablixRowHierarchy>
            <DataSetName>DataSet_Result</DataSetName>
            <Height>0.72244in</Height>
            <Width>11.74999in</Width>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
            </Style>
          </Tablix>
        </ReportItems>
        <Height>1.835cm</Height>
        <Style />
      </Body>
      <Width>29.84497cm</Width>
      <Page>
        <PageHeight>21cm</PageHeight>
        <PageWidth>29.7cm</PageWidth>
        <ColumnSpacing>1.27cm</ColumnSpacing>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <ReportParameters>
    <ReportParameter Name="Document_TypeCaption">
      <DataType>String</DataType>
      <DefaultValue>
        <Values>
          <Value>Document_TypeCaption</Value>
        </Values>
      </DefaultValue>
      <Prompt>Document_TypeCaption</Prompt>
    </ReportParameter>
    <ReportParameter Name="Document_NoCaption">
      <DataType>String</DataType>
      <DefaultValue>
        <Values>
          <Value>Document_NoCaption</Value>
        </Values>
      </DefaultValue>
      <Prompt>Document_NoCaption</Prompt>
    </ReportParameter>
    <ReportParameter Name="FileNameLbl">
      <DataType>String</DataType>
      <DefaultValue>
        <Values>
          <Value>FileNameLbl</Value>
        </Values>
      </DefaultValue>
      <Prompt>FileNameLbl</Prompt>
    </ReportParameter>
    <ReportParameter Name="FileTypeLbl">
      <DataType>String</DataType>
      <DefaultValue>
        <Values>
          <Value>FileTypeLbl</Value>
        </Values>
      </DefaultValue>
      <Prompt>FileTypeLbl</Prompt>
    </ReportParameter>
    <ReportParameter Name="ErrorCodelbl">
      <DataType>String</DataType>
      <DefaultValue>
        <Values>
          <Value>ErrorCodelbl</Value>
        </Values>
      </DefaultValue>
      <Prompt>ErrorCodelbl</Prompt>
    </ReportParameter>
    <ReportParameter Name="IDlLbl">
      <DataType>String</DataType>
      <DefaultValue>
        <Values>
          <Value>IDlLbl</Value>
        </Values>
      </DefaultValue>
      <Prompt>IDlLbl</Prompt>
    </ReportParameter>
    <ReportParameter Name="ErrorListLbl">
      <DataType>String</DataType>
      <DefaultValue>
        <Values>
          <Value>ErrorListLbl</Value>
        </Values>
      </DefaultValue>
      <Prompt>ErrorListLbl</Prompt>
    </ReportParameter>
  </ReportParameters>
  <ReportParametersLayout>
    <GridLayoutDefinition>
      <NumberOfColumns>1</NumberOfColumns>
      <NumberOfRows>7</NumberOfRows>
      <CellDefinitions>
        <CellDefinition>
          <ColumnIndex>0</ColumnIndex>
          <RowIndex>0</RowIndex>
          <ParameterName>Document_TypeCaption</ParameterName>
        </CellDefinition>
        <CellDefinition>
          <ColumnIndex>0</ColumnIndex>
          <RowIndex>1</RowIndex>
          <ParameterName>Document_NoCaption</ParameterName>
        </CellDefinition>
        <CellDefinition>
          <ColumnIndex>0</ColumnIndex>
          <RowIndex>2</RowIndex>
          <ParameterName>FileNameLbl</ParameterName>
        </CellDefinition>
        <CellDefinition>
          <ColumnIndex>0</ColumnIndex>
          <RowIndex>3</RowIndex>
          <ParameterName>FileTypeLbl</ParameterName>
        </CellDefinition>
        <CellDefinition>
          <ColumnIndex>0</ColumnIndex>
          <RowIndex>4</RowIndex>
          <ParameterName>ErrorCodelbl</ParameterName>
        </CellDefinition>
        <CellDefinition>
          <ColumnIndex>0</ColumnIndex>
          <RowIndex>5</RowIndex>
          <ParameterName>IDlLbl</ParameterName>
        </CellDefinition>
        <CellDefinition>
          <ColumnIndex>0</ColumnIndex>
          <RowIndex>6</RowIndex>
          <ParameterName>ErrorListLbl</ParameterName>
        </CellDefinition>
      </CellDefinitions>
    </GridLayoutDefinition>
  </ReportParametersLayout>
  <Code>Public Function BlankZero(ByVal Value As Decimal)
    if Value = 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankPos(ByVal Value As Decimal)
    if Value &gt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankZeroAndPos(ByVal Value As Decimal)
    if Value &gt;= 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNeg(ByVal Value As Decimal)
    if Value &lt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNegAndZero(ByVal Value As Decimal)
    if Value &lt;= 0 then
        Return ""
    end if
    Return Value
End Function
</Code>
  <Language>=User!Language</Language>
  <ConsumeContainerWhitespace>true</ConsumeContainerWhitespace>
  <rd:ReportUnitType>Cm</rd:ReportUnitType>
</Report>
    END_OF_RDLDATA
  }
}

