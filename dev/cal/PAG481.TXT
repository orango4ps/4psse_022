OBJECT Page 481 Dimension Set ID Filter
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Dimension Filter;
               NOR=Dimensjonsfilter;
               SVE=Dimensionsfilter];
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table348;
    DelayedInsert=Yes;
    PageType=List;
    SourceTableTemporary=Yes;
    RefreshOnActivate=Yes;
    ShowFilter=No;
    OnOpenPage=BEGIN
                 TempDimensionSetIDFilterLine.SETRANGE(Code,'');
                 TempDimensionSetIDFilterLine.SETRANGE("Line No.",1);
                 IF TempDimensionSetIDFilterLine.FINDSET THEN
                   REPEAT
                     Code := TempDimensionSetIDFilterLine."Dimension Code";
                     INSERT;
                   UNTIL TempDimensionSetIDFilterLine.NEXT = 0;
               END;

    OnAfterGetRecord=BEGIN
                       DimensionValueFilter := TempDimensionSetIDFilterLine.GetDimensionValueFilter('',Code);
                     END;

    OnNewRecord=BEGIN
                  DimensionValueFilter := ''
                END;

    OnInsertRecord=BEGIN
                     EXIT(FALSE);
                   END;

    OnDeleteRecord=BEGIN
                     TempDimensionSetIDFilterLine.RESET;
                     TempDimensionSetIDFilterLine.SETRANGE(Code,'');
                     TempDimensionSetIDFilterLine.SETRANGE("Dimension Code",Code);
                     TempDimensionSetIDFilterLine.DELETEALL;
                     DELETE;
                     CurrPage.UPDATE(FALSE);
                     EXIT(FALSE);
                   END;

    ActionList=ACTIONS
    {
      { 5       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 6       ;1   ;Action    ;
                      CaptionML=[ENU=Clear Filter;
                                 NOR=Fjern filter;
                                 SVE=Rensa filter];
                      ToolTipML=[ENU=Remove the filter for all dimensions.;
                                 NOR=Fjern filteret for alle dimensjoner.;
                                 SVE=Ta bort filtret f”r alla dimensioner.];
                      ApplicationArea=#Dimensions;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ClearFilter;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 TempDimensionSetIDFilterLine.RESET;
                                 TempDimensionSetIDFilterLine.DELETEALL;
                                 DELETEALL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 4   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the dimension.;
                           NOR=Angir koden for dimensjonen.;
                           SVE=Anger dimensionens kod.];
                ApplicationArea=#Dimensions;
                SourceExpr=Code;
                TableRelation=Dimension.Code;
                OnValidate=VAR
                             Dimension@1000 : Record 348;
                           BEGIN
                             IF NOT Dimension.GET(Code) THEN BEGIN
                               Dimension.SETFILTER(Code,'%1','@' + Code + '*');
                               IF NOT Dimension.FINDFIRST THEN
                                 Dimension.GET(Code);
                               Code := Dimension.Code;
                             END;
                             IF GET(Code) THEN
                               ERROR(RecordAlreadyExistsErr);
                             INSERT;
                             TempDimensionSetIDFilterLine.Code := '';
                             TempDimensionSetIDFilterLine."Dimension Code" := Code;
                             TempDimensionSetIDFilterLine.SetDimensionValueFilter('');
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 3   ;2   ;Field     ;
                Name=DimensionValueFilter;
                CaptionML=[ENU=Filter;
                           NOR=Filtrer;
                           SVE=Filter];
                ToolTipML=[ENU=Specifies the filter for the dimension values.;
                           NOR=Angir filteret for dimensjonsverdiene.;
                           SVE=Anger filtret f”r dimensionsv„rdena.];
                ApplicationArea=#Dimensions;
                SourceExpr=DimensionValueFilter;
                OnValidate=BEGIN
                             TempDimensionSetIDFilterLine.Code := '';
                             TempDimensionSetIDFilterLine."Dimension Code" := Code;
                             TempDimensionSetIDFilterLine.SetDimensionValueFilter(DimensionValueFilter);
                           END;

                OnLookup=VAR
                           DimensionValue@1000 : Record 349;
                         BEGIN
                           EXIT(DimensionValue.LookUpDimFilter(Code,Text));
                         END;
                          }

  }
  CODE
  {
    VAR
      TempDimensionSetIDFilterLine@1003 : TEMPORARY Record 355;
      FilterNotification@1001 : Notification;
      NotificationGUID@1004 : GUID;
      DimensionValueFilter@1000 : Text;
      NotificationMsg@1002 : TextConst 'ENU=The view is filtered by dimensions:;NOR=Visningen er filtrert etter dimensjoner:;SVE=Vyn „r filtrerad efter dimensioner:';
      RecordAlreadyExistsErr@1005 : TextConst 'ENU=The record already exists.;NOR=Posten finnes allerede.;SVE=Posten finns redan.';

    [External]
    PROCEDURE LookupFilter@6() DimFilter : Text;
    VAR
      DimensionMgt@1000 : Codeunit 408;
      DimSetIDFilterPage@1001 : Page 481;
    BEGIN
      DimSetIDFilterPage.SetTempDimensionSetIDFilterLine(TempDimensionSetIDFilterLine);
      DimSetIDFilterPage.EDITABLE(TRUE);
      DimSetIDFilterPage.RUNMODAL;
      DimSetIDFilterPage.GetTempDimensionSetIDFilterLine(TempDimensionSetIDFilterLine);
      TempDimensionSetIDFilterLine.RESET;
      IF NOT TempDimensionSetIDFilterLine.ISEMPTY THEN BEGIN
        GetDimSetIDsForFilter(DimensionMgt);
        DimFilter := DimensionMgt.GetDimSetFilter;
        IF DimFilter = '' THEN
          DimFilter := '0&<>0';
        SendNotification;
      END ELSE
        RecallNotification
    END;

    LOCAL PROCEDURE GetDimSetIDsForFilter@3(VAR DimensionMgt@1000 : Codeunit 408);
    BEGIN
      TempDimensionSetIDFilterLine.RESET;
      TempDimensionSetIDFilterLine.SETRANGE(Code,'');
      TempDimensionSetIDFilterLine.SETRANGE("Line No.",1);
      IF TempDimensionSetIDFilterLine.FINDSET THEN
        REPEAT
          DimensionMgt.GetDimSetIDsForFilter(TempDimensionSetIDFilterLine."Dimension Code",
            TempDimensionSetIDFilterLine.GetDimensionValueFilter(
              TempDimensionSetIDFilterLine.Code,TempDimensionSetIDFilterLine."Dimension Code"));
        UNTIL TempDimensionSetIDFilterLine.NEXT = 0;
    END;

    [External]
    PROCEDURE GetTempDimensionSetIDFilterLine@9(VAR NewTempDimensionSetIDFilterLine@1000 : TEMPORARY Record 355);
    BEGIN
      NewTempDimensionSetIDFilterLine.COPY(TempDimensionSetIDFilterLine,TRUE)
    END;

    [External]
    PROCEDURE SetTempDimensionSetIDFilterLine@10(VAR NewTempDimensionSetIDFilterLine@1001 : TEMPORARY Record 355);
    BEGIN
      TempDimensionSetIDFilterLine.COPY(NewTempDimensionSetIDFilterLine,TRUE);
    END;

    LOCAL PROCEDURE GetNotificationMessage@2() MessageTxt : Text;
    BEGIN
      TempDimensionSetIDFilterLine.RESET;
      TempDimensionSetIDFilterLine.SETRANGE(Code,'');
      TempDimensionSetIDFilterLine.SETRANGE("Line No.",1);
      IF TempDimensionSetIDFilterLine.FINDSET THEN BEGIN
        MessageTxt := STRSUBSTNO('%1 %2: %3',NotificationMsg,TempDimensionSetIDFilterLine."Dimension Code",
            TempDimensionSetIDFilterLine.GetDimensionValueFilter('',TempDimensionSetIDFilterLine."Dimension Code"));
        IF TempDimensionSetIDFilterLine.NEXT <> 0 THEN
          REPEAT
            MessageTxt += STRSUBSTNO(', %1: %2',TempDimensionSetIDFilterLine."Dimension Code",
                TempDimensionSetIDFilterLine.GetDimensionValueFilter('',TempDimensionSetIDFilterLine."Dimension Code"));
          UNTIL TempDimensionSetIDFilterLine.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE SendNotification@1();
    BEGIN
      IF ISNULLGUID(NotificationGUID) THEN
        NotificationGUID := CREATEGUID;
      FilterNotification.ID := NotificationGUID;
      FilterNotification.MESSAGE(GetNotificationMessage);
      FilterNotification.SEND;
    END;

    LOCAL PROCEDURE RecallNotification@4();
    BEGIN
      IF NOT ISNULLGUID(NotificationGUID) THEN BEGIN
        FilterNotification.ID := NotificationGUID;
        FilterNotification.RECALL;
      END;
    END;

    BEGIN
    END.
  }
}

