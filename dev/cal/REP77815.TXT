OBJECT Report 77815 AL Translate Other Project
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=TTool;
  }
  PROPERTIES
  {
    CaptionML=ENU=AL Translate Other Project;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF NOT TTOtherALProject.GET(ALProjectCode) THEN
                    ERROR(ProjectCodeEmptyErr);

                  IF TTOtherALProject."Source Language ID" <> TTALProject."Source Language ID" THEN
                    ERROR(SourceNotEqualErr,TTOtherALProject.Code,TTALProject.Code);

                  IF TTOtherALProject."Target Language ID" <> TTALProject."Target Language ID" THEN
                    ERROR(TargetNotEqualErr,TTOtherALProject.Code,TTALProject.Code);
                END;

  }
  DATASET
  {
    { 1100525000;;DataItem;                  ;
               DataItemTable=Table77812;
               OnPreDataItem=BEGIN
                               MaxCounter := "TT AL Caption".COUNT;
                               OpenWindow(ProcessingLinesLbl,MaxCounter);
                             END;

               OnAfterGetRecord=BEGIN
                                  Counter := Counter + 1;
                                  UpdateWindow;

                                  CASE TRUE OF
                                    ALTranslationManagement.FindMatchOtherProject("TT AL Caption", TTALProject, TTOtherALProject, TRUE), //same object
                                    ALTranslationManagement.FindMatchOtherProject("TT AL Caption", TTALProject, TTOtherALProject, FALSE): //all objects
                                      BEGIN
                                        "TT AL Caption".UpdateProperties;
                                        "TT AL Caption".MODIFY(TRUE);
                                      END;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                CloseWindow;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100525001;;Container;
                  Name=Control 1;
                  ContainerType=ContentArea }

      { 1100525000;1;Field  ;
                  CaptionML=ENU=Translate from AL Project Code;
                  SourceExpr=ALProjectCode;
                  TableRelation="TT AL Project" }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      TTALProject@1100525007 : Record 77810;
      TTOtherALProject@1100525006 : Record 77810;
      Window@1100525005 : Dialog;
      WindowLastUpdated@1100525004 : Time;
      Counter@1100525003 : Integer;
      MaxCounter@1100525002 : Integer;
      ALProjectCode@1100525001 : Code[20];
      ALTranslationManagement@1100525000 : Codeunit 77810;
      ProjectCodeEmptyErr@1100525012 : TextConst 'ENU=Project Code must be filled in.';
      SourceNotEqualErr@1100525011 : TextConst 'ENU=Source language of project %1 must be equal to source language of product %2.';
      TargetNotEqualErr@1100525010 : TextConst 'ENU=Target language of project %1 must be equal to target language of product %2.';
      ProcessingLinesLbl@1100525009 : TextConst 'ENU=Processing lines @3@@@@@@@@@@@@@';
      LineOfLbl@1100525008 : TextConst 'ENU=Line             #1###### of #2######\';

    PROCEDURE SetTTALProject@1100525006(TTALProject2@1100525000 : Record 77810);
    BEGIN
      TTALProject.GET(TTALProject2.Code);
    END;

    PROCEDURE OpenWindow@1100525002(Txt@1100525000 : Text[80];MaxCounter2@1100525001 : Integer);
    BEGIN
      Window.OPEN(LineOfLbl + Txt);
      Counter := 0;
      Window.UPDATE(2,MaxCounter2);
      WindowLastUpdated := TIME;
    END;

    PROCEDURE UpdateWindow@1100525003();
    BEGIN
      IF TIME - WindowLastUpdated > 300 THEN BEGIN
        Window.UPDATE(1,Counter);
        Window.UPDATE(3,ROUND(Counter / MaxCounter * 10000,1));
        WindowLastUpdated := TIME;
      END;
    END;

    LOCAL PROCEDURE CloseWindow@1100525004();
    BEGIN
      Window.CLOSE;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

