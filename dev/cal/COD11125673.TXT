OBJECT Codeunit 11125673 Copy Estimate Elements RAW
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1100529000 : TextConst 'DEU=Zuerst Elemente markieren;ENU=First select elements;NLD=Selecteer eerst posten;SVE=Markera f”rst element med Ctrl+F1.';
      Text002@1100529002 : TextConst 'DEU=''%1'' ist bereits vorhanden;ENU=''%1'' is already present;NLD=''%1'' is al aanwezig;NOR=''%1'' finnes allerede;SVE=''%1'' finns redan';
      Text003@1100529003 : TextConst 'DEU=Muss die L„nge ... haben;ENU=must have the lenght;NLD=moet zelfde lengte hebben;NOR=m† ha lengden;SVE=m†ste ha l„ngden';
      Text004@1100529004 : TextConst 'DEU=letzte Position muss ''0È sein;ENU=last position must be ''0'';NLD=laatste positie moet ''0'' zijn;NOR=siste positionen m† v‘re ''0'';SVE=sista positionen m†ste vara ''0''';
      Text005@1100529005 : TextConst 'DEU=letzte Position darf nicht ''0È sein;ENU=last position may not be ''0'';NLD=laatste positie mag geen ''0'' zijn;NOR=siste positionen kan ikke v‘re ''0'';SVE=sista positionen kan vara ''0''';
      Text006@1210190000 : TextConst 'DEU=(Unterelement) ''%1'' hat kein Hauptelement ''%2'' in Zielortkalkulation ''%3'';ENU=(sub element) ''%1'' has no main element ''%2'' in destination estimation ''%3'';NLD=(deelpost) ''%1'' heeft geen hoofdpost ''%2'' in doelcalculatie ''%3'';NOR=(underelement) ''%1'' har ikke noe hovedelement ''%2'' i destinasjonskalkylen ''%3'';SVE=(underelement) ''%1'' har inget huvudelement ''%2'' i m†lkalkylen ''%3''';

    PROCEDURE BuildEstElemTmpRec@1100529000(VAR MarkedEstElem@1100529000 : Record 11125679;VAR TmpRec@1100529001 : TEMPORARY Record 11125679);
    VAR
      EstElem@1100529003 : Record 11125679;
      LenPrev@1100529006 : Integer;
      LenElem@1100529005 : Integer;
      PrevElem@1100529004 : Text[6];
    BEGIN
      //* Argument TmpRec must be 'Temporary' in the calling process !

      EstElem.COPY(MarkedEstElem);
      EstElem.SETCURRENTKEY("Estimate No.", "Tender Paragraph No.");
      EstElem.SETRANGE("Construction Spec. Line No.", '00');

      IF EstElem.ISEMPTY THEN
        ERROR(Text001);

      EstElem.FINDSET;
      REPEAT
        TmpRec := EstElem;
        TmpRec."Destination Paragraph No." := '';
        TmpRec.INSERT;
      UNTIL EstElem.NEXT = 0;

      TmpRec.FINDSET;
      REPEAT
        LenPrev := STRLEN(PrevElem);
        LenElem := STRLEN(TmpRec."Tender Paragraph No.");
        IF ((LenElem > LenPrev) AND (LenPrev <> 0) AND (PrevElem = COPYSTR(TmpRec."Tender Paragraph No.", 1, LenPrev))) OR
           ((LenPrev = 6) AND (LenElem = 6) AND
            (COPYSTR(TmpRec."Tender Paragraph No.", 6, 1) <> '0') AND (COPYSTR(PrevElem, 6, 1) = '0') AND
            (COPYSTR(TmpRec."Tender Paragraph No.", 1, 5) = COPYSTR(PrevElem, 1, 5)))
        THEN
          TmpRec.DELETE
        ELSE
          PrevElem := TmpRec."Tender Paragraph No.";
      UNTIL TmpRec.NEXT = 0;
    END;

    PROCEDURE ValidateElemNoDest@1100529004(VAR EstElem@1100529000 : Record 11125679;EstNoDest@1100529002 : Code[20]);
    VAR
      EstElem2@1100529004 : Record 11125679;
      EstElem3@1100529001 : Record 11125679;
      TmpEstElemExpl@1100529003 : TEMPORARY Record 11125679;
    BEGIN
      IF EstElem."Destination Paragraph No." = '' THEN
        EXIT;

      //* Structure of chapter, (sub)paragraph and elements (ending on 0 and 1..9) must be kept
      IF STRLEN(EstElem."Destination Paragraph No.") <> STRLEN(EstElem."Tender Paragraph No.") THEN
        EstElem.FIELDERROR("Destination Paragraph No.", Text003);
      IF STRLEN(EstElem."Tender Paragraph No.") = 6 THEN BEGIN
        IF COPYSTR(EstElem."Tender Paragraph No.",6,1) = '0' THEN BEGIN
          IF COPYSTR(EstElem."Destination Paragraph No.",6,1) <> '0' THEN
            EstElem.FIELDERROR("Destination Paragraph No.", Text004);
        END ELSE BEGIN
          IF COPYSTR(EstElem."Destination Paragraph No.",6,1) = '0' THEN
            EstElem.FIELDERROR("Destination Paragraph No.", Text005);
          EstElem2.RESET;
          EstElem2.SETRANGE("Estimate No.", EstNoDest);
          EstElem2.SETRANGE("Tender Paragraph No.", COPYSTR(EstElem."Destination Paragraph No.",1,5) + '0');
          EstElem2.SETRANGE("Construction Spec. Line No.", '00');
          IF EstElem2.ISEMPTY THEN BEGIN
            EstElem.FIELDERROR("Destination Paragraph No.",
              STRSUBSTNO(Text006, EstElem."Destination Paragraph No.", COPYSTR(EstElem."Destination Paragraph No.",1,5) + '0' , EstNoDest));
          END;
        END;
      END;

      //* Check destination element already used on another line (must be done/read in EstElem, because this is a tmp-rec)
      EstElem2.RESET;
      EstElem3.COPY(EstElem);  // Save
      EstElem.FILTERGROUP(9);
      EstElem.SETRANGE("Destination Paragraph No.", EstElem."Destination Paragraph No.");
      EstElem.SETFILTER("Tender Paragraph No.", '<>%1', EstElem."Tender Paragraph No.");
      IF EstElem.FINDFIRST THEN
        EstElem2 := EstElem
      ELSE
        EstElem2."Tender Paragraph No." := '';
      EstElem.FILTERGROUP(0);
      EstElem.COPY(EstElem3);  //First restore, then error
      IF EstElem2."Tender Paragraph No." <> '' THEN
        EstElem2.FIELDERROR("Destination Paragraph No.", STRSUBSTNO(Text002, EstElem2."Destination Paragraph No."));

      ExplodeEstElem(EstElem, TmpEstElemExpl);
      TmpEstElemExpl.FINDSET;
      EstElem2.RESET;
      REPEAT
        EstElem2.SETRANGE("Estimate No.", EstNoDest);
        EstElem2.SETRANGE("Tender Paragraph No.", TmpEstElemExpl."Destination Paragraph No.");
        EstElem2.SETRANGE("Construction Spec. Line No.", '00');
        IF EstElem2.FINDFIRST THEN
          EstElem2.FIELDERROR("Tender Paragraph No.", STRSUBSTNO(Text002, EstElem2."Tender Paragraph No."));
      UNTIL TmpEstElemExpl.NEXT = 0;
    END;

    LOCAL PROCEDURE ExplodeEstElem@1100529005(EstElem@1100529000 : Record 11125679;VAR TmpEstElemExpl@1100529002 : TEMPORARY Record 11125679);
    VAR
      EstElem2@1100529003 : Record 11125679;
      LenElem@1100529001 : Integer;
    BEGIN
      LenElem := STRLEN(EstElem."Tender Paragraph No.");
      IF (LenElem = 0) OR ((LenElem = 6) AND (COPYSTR(EstElem."Tender Paragraph No.",6,1) <> '0')) THEN BEGIN
        TmpEstElemExpl := EstElem;
        TmpEstElemExpl.INSERT;
        EXIT;
      END;

      EstElem2.SETRANGE("Estimate No.", EstElem."Estimate No.");
      IF LenElem < 6 THEN
        EstElem2.SETFILTER("Tender Paragraph No.", EstElem."Tender Paragraph No." + '*')
      ELSE
        EstElem2.SETFILTER("Tender Paragraph No.", COPYSTR(EstElem."Tender Paragraph No.",1,5) + '*');
      EstElem2.SETRANGE("Construction Spec. Line No.", '00');
      EstElem2.FINDSET;
      REPEAT
        TmpEstElemExpl := EstElem2;
        TmpEstElemExpl."Destination Paragraph No." :=
          GetElemNoDestForExploded(EstElem."Tender Paragraph No.",EstElem."Destination Paragraph No.",EstElem2."Tender Paragraph No.");
        TmpEstElemExpl.INSERT;
      UNTIL EstElem2.NEXT = 0;
    END;

    LOCAL PROCEDURE GetElemNoDestForExploded@1100529015(ElemNoOrig@1100529000 : Text[6];ElemNoDest@1100529001 : Text[6];ElemNoCurr@1100529002 : Text[6]) : Text[6];
    BEGIN
      IF ElemNoCurr = ElemNoOrig THEN
        EXIT(ElemNoDest);

      IF STRLEN(ElemNoDest) = 6 THEN
        EXIT(COPYSTR(ElemNoDest,1,5) + COPYSTR(ElemNoCurr,6,1));

      EXIT(ElemNoDest + COPYSTR(ElemNoCurr,STRLEN(ElemNoDest)+1));
    END;

    PROCEDURE ProcessCopy@1100529007(VAR EstElem@1100529000 : TEMPORARY Record 11125679;EstNoDest@1100529001 : Code[20];CopyQuantities@1100529007 : Boolean;CopyText@1100529006 : Boolean;CopyEstLines@1100529005 : Boolean;CopyVatSpecs@1100529003 : Boolean;CopyComments@1100525000 : Boolean);
    VAR
      Est@1100529009 : Record 11012151;
      EstElem2@1100529010 : Record 11125679;
      EstElemDest@1100529008 : Record 11125679;
      TmpEstElemOrig@1100529002 : TEMPORARY Record 11125679;
      CommentLineRAW@1100525001 : Record 11125684;
      IgnoreElemNoDestEmpty@1100529004 : Boolean;
      EstimateOrig@1100528900 : Record 11012151;
    BEGIN
      Est.GET(EstNoDest);
      Est.TESTFIELD("No.");
      Est.TESTFIELD("RAW Estimate", TRUE);

      EstElem2.COPY(EstElem);  // Save

      EstElem.FILTERGROUP(8);
      EstElem.SETRANGE("Destination Paragraph No.", '');
      IF EstElem.FINDFIRST THEN BEGIN
        IF EstElem."Estimate No." <> EstNoDest THEN BEGIN  // Only if Dest. unequal Orig. Estimate
          EstElem.SETFILTER("Destination Paragraph No.", '<>%1', '');
          IF EstElem.ISEMPTY THEN  // If not filled in all lines
            IgnoreElemNoDestEmpty := TRUE;   // Then use same Element No. as in Orig. Estimate
        END;
      END;
      EstElem.SETRANGE("Destination Paragraph No.");  // Reset filter
      EstElem.FILTERGROUP(0);

      EstElem.FINDSET;
      REPEAT
        IF NOT IgnoreElemNoDestEmpty THEN
          EstElem.TESTFIELD("Destination Paragraph No.")
        ELSE BEGIN
          IF EstElem."Destination Paragraph No." = '' THEN
            EstElem."Destination Paragraph No." := EstElem."Tender Paragraph No.";
        END;
        ValidateElemNoDest(EstElem, EstNoDest);
        ExplodeEstElem(EstElem, TmpEstElemOrig);
      UNTIL EstElem.NEXT = 0;

      EstElem.COPY(EstElem2);  // Restore

      TmpEstElemOrig.FINDSET;
      REPEAT
        EstElemDest := TmpEstElemOrig;
        EstElemDest."Estimate No." := EstNoDest;
        EstElemDest."Tender Paragraph No." := TmpEstElemOrig."Destination Paragraph No.";
        EstElemDest."Line No." := 1;
        EstElemDest.INSERT(TRUE);  // With TRUE, check element already exist must be done (for "Construction Spec. Line No." = '00')
        IF (NOT CopyQuantities) AND (EstElemDest.Quantity <> 0) THEN BEGIN
            EstElemDest.VALIDATE(Quantity, 1);
            EstElemDest.MODIFY;
        END;
        IF CopyText THEN
          CopyEstElemText(TmpEstElemOrig."Estimate No.", TmpEstElemOrig."Tender Paragraph No.", EstNoDest, EstElemDest."Tender Paragraph No.");
        IF CopyEstLines THEN BEGIN
          //DP01676.sn
          EstimateOrig.GET(TmpEstElemOrig."Estimate No.");
          //DP01676.en
          CopyEstElemLines(TmpEstElemOrig."Estimate No.", TmpEstElemOrig."Tender Paragraph No.", EstNoDest, EstElemDest."Tender Paragraph No.", CopyComments);
        END;
        IF CopyVatSpecs THEN
          CopyEstElemVatSpecs(TmpEstElemOrig."Estimate No.", TmpEstElemOrig."Tender Paragraph No.", EstNoDest, EstElemDest."Tender Paragraph No.");
        //DP01086.sn
        IF EstElemDest."Construction Spec. Line No." = '00' THEN BEGIN
          IF CopyComments THEN BEGIN
            CommentLineRAW.CopyComment(
              DATABASE::"Estimate Paragraph RAW", '', '', TmpEstElemOrig."Estimate No.", TmpEstElemOrig."Tender Paragraph No.", TmpEstElemOrig."Line No.", 0,
              DATABASE::"Estimate Paragraph RAW", '', '', EstElemDest."Estimate No.", EstElemDest."Tender Paragraph No.", EstElemDest."Line No.", 0);
          END;
          IF NOT CommentLineRAW.HasEstElemLineComment(EstElemDest."Estimate No.", EstElemDest."Tender Paragraph No.", EstElemDest."Line No.") THEN
            EstElemDest.CopyActivityCommentRAW('', EstElemDest.Activity, FALSE, '');
        END;
        //DP01086.en
      UNTIL TmpEstElemOrig.NEXT = 0;
    END;

    LOCAL PROCEDURE CopyEstElemText@1100529009(EstNoOrig@1100529002 : Code[20];ElemNoOrig@1100529003 : Text[6];EstNoDest@1100529005 : Code[20];ElemNoDest@1100529004 : Text[6]);
    VAR
      EstElemTextOrig@1100529000 : Record 11125679;
      EstElemTextDest@1100529001 : Record 11125679;
      NextLineNo@1100529006 : Integer;
    BEGIN
      EstElemTextOrig.SETRANGE("Estimate No.", EstNoOrig);
      EstElemTextOrig.SETRANGE("Tender Paragraph No.", ElemNoOrig);
      EstElemTextOrig.SETFILTER("Construction Spec. Line No.", '<>%1', '00');
      IF EstElemTextOrig.FINDSET THEN BEGIN
        NextLineNo := 10000;
        REPEAT
          EstElemTextDest := EstElemTextOrig;
          EstElemTextDest."Estimate No." := EstNoDest;
          EstElemTextDest."Tender Paragraph No." := ElemNoDest;
          EstElemTextDest."Line No." := NextLineNo;
          EstElemTextDest.INSERT;
          NextLineNo := NextLineNo + 10000;
        UNTIL EstElemTextOrig.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CopyEstElemLines@1100529017(EstNoOrig@1100529002 : Code[20];ElemNoOrig@1100529003 : Text[6];EstNoDest@1100529005 : Code[20];ElemNoDest@1100529004 : Text[6];CopyComments@1100525001 : Boolean);
    VAR
      EstLineOrig@1100528900 : Record 11125698;
      EstLineDest@1100528901 : Record 11125698;
      CommentLineRAW@1100525000 : Record 11125684;
      NextLineNo@1100529006 : Integer;
    BEGIN
      EstLineOrig.SETRANGE("Estimate No.", EstNoOrig);
      EstLineOrig.SETRANGE("Tender Paragraph No.", ElemNoOrig);
      IF EstLineOrig.FINDSET THEN BEGIN
        NextLineNo := 10000;
        REPEAT
          EstLineDest := EstLineOrig;
          EstLineDest."Estimate No." := EstNoDest;
          EstLineDest."Tender Paragraph No." := ElemNoDest;
          EstLineDest."Line No." := NextLineNo;
          EstLineDest.InitAdjustmentFactor();
          EstLineDest.InitPurchaseFields();
          EstLineDest.CalculateTotals();
          EstLineDest.INSERT;
          NextLineNo := NextLineNo + 10000;
          //DP01086.sn
          IF CopyComments THEN BEGIN
            CommentLineRAW.CopyComment(
              DATABASE::"Estimate Line RAW", '', '', EstLineOrig."Estimate No.", EstLineOrig."Tender Paragraph No.", 0, EstLineOrig."Line No.",
              DATABASE::"Estimate Line RAW", '', '', EstLineDest."Estimate No.", EstLineDest."Tender Paragraph No.", 0, EstLineDest."Line No.");
          END;
          //DP01086.en
        UNTIL EstLineOrig.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CopyEstElemVatSpecs@1100529026(EstNoOrig@1100529002 : Code[20];ElemNoOrig@1100529003 : Text[6];EstNoDest@1100529005 : Code[20];ElemNoDest@1100529004 : Text[6]);
    VAR
      EstElemVatSpecOrig@1100529000 : Record 11125678;
      EstElemVatSpecDest@1100529001 : Record 11125678;
    BEGIN
      EstElemVatSpecOrig.SETRANGE("Estimate No.", EstNoOrig);
      EstElemVatSpecOrig.SETRANGE("Tender Paragraph No.", ElemNoOrig);
      IF EstElemVatSpecOrig.FINDSET THEN BEGIN
        REPEAT
          EstElemVatSpecDest := EstElemVatSpecOrig;
          EstElemVatSpecDest."Estimate No." := EstNoDest;
          EstElemVatSpecDest."Tender Paragraph No." := ElemNoDest;
          EstElemVatSpecDest.INSERT;
        UNTIL EstElemVatSpecOrig.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

