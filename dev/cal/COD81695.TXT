OBJECT Codeunit 81695 Assemblin data upgrade
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    Subtype=Upgrade;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      InstallationManagement@1101285005 : Codeunit 11012268;
      CompanyDataUpgradeLog@1101285004 : Record 11229360;
      DatabaseDataUpgradeLog@1101285006 : Record 11229359;
      NewCompany@1101285003 : Boolean;
      NewDatabase@1101285002 : Boolean;
      TypeOfLog@1101285001 : 'Execute,No License Permission,New Company';
      StartDateTime@1101285000 : DateTime;

    [UpgradePerCompany]
    PROCEDURE UpdateWorkorder@1101285001();
    VAR
      Workorder@1101285000 : Record 81626;
      Job@1101285001 : Record 11072003;
      ConversionStatus@1101285002 : Integer;
    BEGIN
      //RFC-232

      ConversionStatus := 81695001;
      TypeOfLog := TypeOfLog::Execute;StartDateTime:=CURRENTDATETIME;
      IF CompanyDataUpgradeLog.LogExists(ConversionStatus) THEN
        EXIT;
      InstallationManagement.InitDataUpgradeLog(DATABASE::Workorder,TypeOfLog,StartDateTime,FALSE);
      IF TypeOfLog = TypeOfLog::Execute THEN BEGIN
        Workorder.SETFILTER("Project No.",'<>%1','');
        Workorder.SETFILTER("Bill-to Customer No.",'%1','');
        IF Workorder.FINDSET THEN REPEAT
          IF Job.GET(Workorder."Project No.") THEN BEGIN
            Workorder."Bill-to Customer No." := Job."Bill-to Customer No.";
            Workorder.MODIFY;
          END;
        UNTIL Workorder.NEXT=0;

      END;
      CompanyDataUpgradeLog.InsertLog(ConversionStatus,StartDateTime,TypeOfLog);
      COMMIT;
    END;

    [UpgradePerDatabase]
    PROCEDURE CreatePermissions08@1101285000();
    VAR
      ConversionStatus@1101285000 : Integer;
      Permission@1101285001 : Record 2000000005;
      FunctProfileOverwritePerm@1101285002 : Record 11229293;
      FunctionProfile@1101285003 : Record 11020569;
    BEGIN
      ConversionStatus := 81695002;
      TypeOfLog := TypeOfLog::"No License Permission";StartDateTime:=CURRENTDATETIME;
      IF DatabaseDataUpgradeLog.LogExists(ConversionStatus) THEN
        EXIT;

      Permission.INIT;
      Permission."Read Permission":=0;
      Permission."Insert Permission":=0;
      Permission."Modify Permission":=0;
      Permission."Delete Permission":=0;
      Permission."Execute Permission":=Permission."Execute Permission"::Yes;

      Permission."Object Type" := Permission."Object Type"::Codeunit;
      Permission."Object ID" := 81657;
      Permission."Role ID" := 'A0130'; Permission.INSERT(FALSE);
      Permission."Role ID" := 'IMT-RFC-1136'; Permission.INSERT(FALSE);
      Permission."Object Type" := Permission."Object Type"::Page;
      Permission."Role ID" := 'A0130'; Permission.INSERT(FALSE);
      Permission."Role ID" := 'IMT-RFC-1136'; Permission.INSERT(FALSE);

      Permission."Object Type" := Permission."Object Type"::Codeunit;
      Permission."Role ID" := 'A0050';
      Permission."Object ID" := 11128084;Permission.INSERT(FALSE);
      Permission."Object ID" := 11128085;Permission.INSERT(FALSE);
      Permission."Object Type" := Permission."Object Type"::Page;
      Permission."Object ID" := 11128027;Permission.INSERT(FALSE);
      Permission."Object ID" := 11128109;Permission.INSERT(FALSE);
      Permission."Object Type" := Permission."Object Type"::Query;
      Permission."Object ID" := 11128091;Permission.INSERT(FALSE);
      Permission."Object ID" := 11128092;Permission.INSERT(FALSE);
      Permission."Object Type" := Permission."Object Type"::Report;
      Permission."Object ID" := 81669;Permission.INSERT(FALSE);
      Permission."Role ID" := 'IMT-RFC001';Permission.INSERT(FALSE);

      Permission."Object Type" := Permission."Object Type"::XMLport;
      Permission."Role ID" := 'A0050';
      Permission."Object ID" := 81687;Permission.INSERT(FALSE);
      Permission."Role ID" := 'IMT-SVEFAKT';Permission.INSERT(FALSE);

      Permission."Role ID" := 'E2GEN-GENER-I';
      Permission."Object ID" := 11128059;Permission.INSERT(FALSE);
      Permission."Role ID" := 'A0120';Permission.INSERT(FALSE);
      Permission."Role ID" := 'A0140';Permission.INSERT(FALSE);




      Permission."Read Permission":=1;
      Permission."Insert Permission":=1;
      Permission."Modify Permission":=1;
      Permission."Delete Permission":=1;
      Permission."Execute Permission":=0;

      Permission."Object Type" := Permission."Object Type"::"Table Data";
      Permission."Object ID" := 81657;
      Permission."Role ID" := 'A0130'; Permission.INSERT(FALSE);
      Permission."Role ID" := 'IMT-RFC-1136'; Permission.INSERT(FALSE);
      Permission."Object ID" := 11128103;
      Permission."Role ID" := 'A0050'; Permission.INSERT(FALSE);

      FunctProfileOverwritePerm.INIT;
      FunctProfileOverwritePerm."Read Permission":=0;
      FunctProfileOverwritePerm."Insert Permission":=0;
      FunctProfileOverwritePerm."Modify Permission":=0;
      FunctProfileOverwritePerm."Delete Permission":=0;
      FunctProfileOverwritePerm."Execute Permission":=1;

      FunctProfileOverwritePerm."Object Type":=FunctProfileOverwritePerm."Object Type"::Codeunit;
      FunctProfileOverwritePerm."Function Profile No.":='A0050';
      FunctProfileOverwritePerm."Object ID":=11128084;FunctProfileOverwritePerm.INSERT(FALSE);
      FunctProfileOverwritePerm."Object ID":=11128085;FunctProfileOverwritePerm.INSERT(FALSE);

      FunctProfileOverwritePerm."Object Type":=FunctProfileOverwritePerm."Object Type"::Page;
      FunctProfileOverwritePerm."Object ID":=11128027;FunctProfileOverwritePerm.INSERT(FALSE);
      FunctProfileOverwritePerm."Object ID":=11128109;FunctProfileOverwritePerm.INSERT(FALSE);

      FunctProfileOverwritePerm."Object Type":=FunctProfileOverwritePerm."Object Type"::Query;
      FunctProfileOverwritePerm."Object ID":=11128091;FunctProfileOverwritePerm.INSERT(FALSE);
      FunctProfileOverwritePerm."Object ID":=11128092;FunctProfileOverwritePerm.INSERT(FALSE);

      FunctProfileOverwritePerm."Read Permission":=1;
      FunctProfileOverwritePerm."Insert Permission":=1;
      FunctProfileOverwritePerm."Modify Permission":=1;
      FunctProfileOverwritePerm."Delete Permission":=1;
      FunctProfileOverwritePerm."Execute Permission":=0;
      FunctProfileOverwritePerm."Object Type":=FunctProfileOverwritePerm."Object Type"::"Table Data";
      FunctProfileOverwritePerm."Object ID":=11128103;FunctProfileOverwritePerm.INSERT(FALSE);

      FunctionProfile.SetContentChanged('A0050',TRUE);
      FunctionProfile.SetContentChanged('A0120',TRUE);
      FunctionProfile.SetContentChanged('A0130',TRUE);
      FunctionProfile.SetContentChanged('A0140',TRUE);

      DatabaseDataUpgradeLog.InsertLog(ConversionStatus,StartDateTime,TypeOfLog);
      COMMIT;
    END;

    [UpgradePerCompany]
    PROCEDURE UpdateReportSelection@1000000000();
    VAR
      ConversionStatus@1000000000 : Integer;
      ReportSelections@1000000001 : Record 77;
      ReportSelections2@1000000002 : Record 77;
    BEGIN
      ConversionStatus := 81695003;
      TypeOfLog := TypeOfLog::Execute;StartDateTime:=CURRENTDATETIME;
      IF CompanyDataUpgradeLog.LogExists(ConversionStatus) THEN
        EXIT;

      ReportSelections.SETFILTER("Report ID",'81667&<>81669');
      IF ReportSelections.FINDSET THEN REPEAT
        ReportSelections2.SETRANGE(Usage,ReportSelections.Usage);
        ReportSelections2.FINDLAST;
        ReportSelections2.Sequence := INCSTR(ReportSelections2.Sequence);
        ReportSelections2."Report ID" := 81669;
        ReportSelections2.INSERT(FALSE);
      UNTIL ReportSelections.NEXT=0;

      CompanyDataUpgradeLog.InsertLog(ConversionStatus,StartDateTime,TypeOfLog);
      COMMIT;
    END;

    [UpgradePerCompany]
    PROCEDURE UpdateWorkorder2@1101285002();
    VAR
      Workorder@1101285000 : Record 81626;
      Job@1101285001 : Record 11072003;
      ConversionStatus@1101285002 : Integer;
      Cust@1101285003 : Record 18;
    BEGIN
      //RFC-232

      ConversionStatus := 81695004;
      TypeOfLog := TypeOfLog::Execute;StartDateTime:=CURRENTDATETIME;
      IF CompanyDataUpgradeLog.LogExists(ConversionStatus) THEN
        EXIT;
      InstallationManagement.InitDataUpgradeLog(DATABASE::Workorder,TypeOfLog,StartDateTime,FALSE);
      IF TypeOfLog = TypeOfLog::Execute THEN BEGIN
        Workorder.SETFILTER("Bill-to Customer No.",'<>%1','');
        IF Workorder.FINDSET THEN REPEAT
          IF Cust.GET(Workorder."Bill-to Customer No.") THEN BEGIN
            Workorder."Bill-to Customer Name" := Cust.Name;
            Workorder.MODIFY;
          END;
        UNTIL Workorder.NEXT=0;

      END;
      CompanyDataUpgradeLog.InsertLog(ConversionStatus,StartDateTime,TypeOfLog);
      COMMIT;
    END;

    BEGIN
    END.
  }
}

