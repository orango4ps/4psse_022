OBJECT XMLport 11128021 Export Hogia Lon
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    Direction=Export;
    Encoding=ISO-8859-2;
    XMLVersionNo=1.0;
    DefaultNamespace=http://www.hogia.se/XMLSchemas/pa;
    UseDefaultNamespace=Yes;
    OnPreXMLport=BEGIN
                   JobsSetup.GET;
                 END;

  }
  ELEMENTS
  {
    { [{A7EC3E31-FE13-4551-AB88-41CB0D2650ED}];  ;PayRoll             ;Element ;Text     }

    { [{9390A2D9-BE00-4790-A5F6-938D7A8E2DE2}];1 ;FileInfo            ;Element ;Table   ;
                                                  SourceTable=Table79;
                                                  SourceTableView=SORTING(Field1);
                                                  AutoSave=No;
                                                  MinOccurs=Once;
                                                  MaxOccurs=Once;
                                                  Export::OnAfterGetRecord=VAR
                                                                             SESetup@1100285101 : Record 11128004;
                                                                             ApplicationSystemConstants@1100285100 : Codeunit 9015;
                                                                           BEGIN
                                                                             createdBy := USERID;
                                                                             createdDate := FORMAT(WORKDATE,0,9);
                                                                             softwareProduct := PRODUCTNAME.FULL + ': ' + ApplicationSystemConstants.ApplicationVersion;
                                                                             IF SESetup.GET(SESetup."Line type"::Setup,'HOGIA','MESSAGE') THEN
                                                                               messageTxt := SESetup."Value (txt)";
                                                                           END;
                                                                            }

    { [{5179112E-4D1C-4FE3-B4F6-441E9C161ED0}];2 ;companyName         ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Company Information::Name }

    { [{9C66CD51-3FAE-4CD4-AD69-3C3319A89C6F}];2 ;softwareProduct     ;Element ;Text     }

    { [{9A7C1A71-AE7A-4056-91F4-3579FBA38E11}];2 ;createdBy           ;Element ;Text     }

    { [{F56753F3-22E2-49CB-8556-094607818D46}];2 ;createdDate         ;Element ;Text     }

    { [{BE35F604-256F-4C5E-831B-4AD85277520F}];2 ;message             ;Element ;Text    ;
                                                  VariableName=messageTxt;
                                                  MinOccurs=Zero;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF messageTxt = '' THEN
                                                                                   currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{87AA845C-3ED8-4928-B07F-D20F4AFEC15C}];1 ;PayTypeInstruction  ;Element ;Table   ;
                                                  VariableName=PHLine;
                                                  SourceTable=Table11012085;
                                                  SourceTableView=SORTING(Field10,Field20,Field30,Field40);
                                                  AutoSave=No;
                                                  MinOccurs=Zero;
                                                  Export::OnPreXMLItem=BEGIN
                                                                         PHLine.SETRANGE("Leave Type");
                                                                       END;

                                                  Export::OnAfterGetRecord=VAR
                                                                             Employee@1100285100 : Record 5200;
                                                                             WageComponent@1100285101 : Record 11012014;
                                                                             SESetup@1100285102 : Record 11128004;
                                                                             cao1@1100285103 : Boolean;
                                                                             cao2@1100285104 : Boolean;
                                                                           BEGIN
                                                                             IF NOT Employee.GET(PHLine."Employee No.") THEN
                                                                               currXMLport.SKIP;

                                                                             cao1 := FALSE;
                                                                             cao2 := FALSE;
                                                                             IF Employee.CAO <> JobsSetup."CAO AGDA Abcence" THEN
                                                                               IF ((Employee.CAO = JobsSetup."CAO AGDA Overtime Expence") AND PHLine.Overtime) OR
                                                                                   (Employee.CAO = JobsSetup."CAO AGDA Overtime Expence") AND ((PHLine.Quantity+PHLine."Total Line") <> 0) OR
                                                                                   (Employee.CAO <> JobsSetup."CAO AGDA Overtime Expence") THEN
                                                                                 cao1 := TRUE;

                                                                             IF NOT cao1 THEN
                                                                               cao2 := ((JobsSetup."CAO AGDA Abcence" = '') AND (JobsSetup."CAO AGDA Overtime Expence" = ''));

                                                                             IF NOT (cao1 OR cao2) THEN
                                                                               currXMLport.SKIP;

                                                                             employmentId := Employee."Salary No.";

                                                                             costCentre := PHLine."Department Code";
                                                                             WageComponent.GET(PHLine."Wage Component");

                                                                             payTypeCode := 'L';
                                                                             payTypeId := PHLine."Wage Component";
                                                                             IF (WageComponent."Type of Day"  IN [WageComponent."Type of Day"::Absence,WageComponent."Type of Day"::"Vacation/Day Off"]) OR
                                                                                 (WageComponent."Leave Type" <> '') THEN
                                                                               payTypeCode := 'A';

                                                                             quantity := '';
                                                                             price := '';
                                                                             amount := '';
                                                                             CASE WageComponent."Component Type" OF

                                                                               WageComponent."Component Type"::Hours,
                                                                               WageComponent."Component Type"::Addition:
                                                                                   quantity := FORMAT(PHLine."Total Line",0,9);

                                                                               WageComponent."Component Type"::Days:
                                                                                   quantity := FORMAT(PHLine.Quantity,0,9);

                                                                               WageComponent."Component Type"::Expenses: BEGIN
                                                                                 quantity := FORMAT(PHLine.Quantity,0,9);
                                                                                 amount := FORMAT(PHLine."Amount (LCY)", 0, 9);
                                                                                 IF JobsSetup."No Kilometer Amount To AGDA" THEN
                                                                                   CASE TRUE OF
                                                                                     cao1: IF WageComponent."Kilometer Expense" THEN amount := '';
                                                                                     cao2: IF WageComponent."Export Quantity i.s.o. Amount" THEN amount := '';
                                                                                   END;
                                                                                 IF SESetup.GET(SESetup."Line type"::Setup,'HOGIA','EXPENSE') THEN
                                                                                   IF SESetup."Value (bool)" THEN BEGIN
                                                                             //>>191129
                                                                                     amount := '';
                                                                                     IF PHLine.Quantity <> 0 THEN
                                                                                       price := FORMAT(PHLine."Amount (LCY)"/PHLine.Quantity,0,9);
                                                                             //<<191129
                                                                                   END;
                                                                               END;

                                                                               WageComponent."Component Type"::"Expense hours": BEGIN
                                                                                 quantity := FORMAT(PHLine."Total Line",0,9);
                                                                                 amount := FORMAT(PHLine."Amount (LCY)", 0, 9);
                                                                               END;

                                                                             END;

                                                                             CASE PHLine.Type OF
                                                                               PHLine.Type::Project:  project := PHLine."Project No.";
                                                                               PHLine.Type::Service:  project := PHLine."Service Order No.";
                                                                               ELSE project := '';
                                                                             END;

                                                                             periodStartDate := FORMAT(PHLine."Actual date of line", 0, 9);
                                                                             // periodEndDate := periodStartDate;

                                                                             note := PHLine.Comment;
                                                                           END;
                                                                            }

    { [{8C7ED65D-8111-4028-9CEE-6247CA714C58}];2 ;employmentId        ;Element ;Text     }

    { [{65B4C6D0-1056-4B19-B33E-333FF790489E}];2 ;payTypeCode         ;Element ;Text     }

    { [{3CCF4090-6F36-4B3A-AB5E-077D5151B140}];2 ;payTypeId           ;Element ;Text     }

    { [{F4C675BD-644F-42F9-A5D7-C0BC5E530BFC}];2 ;quantity            ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF quantity = '' THEN
                                                                                   currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{E72CE07D-CD21-4760-B759-69138A5014BA}];2 ;price               ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF price = '' THEN
                                                                                   currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{964532FE-5910-4D2D-94E2-A412535F56D2}];2 ;amount              ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF amount = '' THEN
                                                                                   currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{585CBD4C-80DB-4D53-A0B9-8845C1CD82D5}];2 ;periodStartDate     ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF periodStartDate = '' THEN
                                                                                   currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{D1F4A2F1-F8BA-43B3-9C0B-19F015CF25F7}];2 ;periodEndDate       ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF periodEndDate = '' THEN
                                                                                   currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{21D4CE14-4542-4B36-AB7D-54325A884FF7}];2 ;costCentre          ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF costCentre = '' THEN
                                                                                   currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{7DD58537-7DA2-4BCD-90B2-87CA5986646C}];2 ;project             ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF project = '' THEN
                                                                                   currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{A401B2C4-3D43-4C79-94E1-AF76CF9671E5}];2 ;note                ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF note = '' THEN
                                                                                   currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{6AD3A65E-1B0D-4ED3-9B75-993D337F89EA}];2 ;extent              ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF extent = '' THEN
                                                                                   currXMLport.SKIP;
                                                                               END;
                                                                                }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      JobsSetup@1100285100 : Record 315;

    BEGIN
    {
      191129 ORANGO.DL Feature #26821
      191209 ORANGO.EE Setrange on Leave Type
    }
    END.
  }
}

