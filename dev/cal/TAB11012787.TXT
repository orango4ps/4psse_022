OBJECT Table 11012787 Sales Order - Plant Order Rel.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Order - Plant Order Relation;
               NOR=Salgsordre Í maskinordrerelasjon;
               SVE=F”rs.order-maskinorderrelation];
  }
  FIELDS
  {
    { 10  ;   ;Level               ;Option        ;CaptionML=[ENU=Order Type;
                                                              NOR=Ordretype;
                                                              SVE=Ordertyp];
                                                   OptionCaptionML=[ENU=Sales Order,Plant Order,Exit Order;
                                                                    NOR=Salgsordre,Maskinordre,Sluttordre;
                                                                    SVE=F”rs„ljningsorder,Maskinorder,Slutorder];
                                                   OptionString=SalesOrder,PlantOrder,ExitOrder }
    { 20  ;   ;Sales Company Name  ;Text30        ;TableRelation=Company;
                                                   CaptionML=[ENU=Sales Company Name;
                                                              NOR=Salgsbedriftens navn;
                                                              SVE=F”rs„ljningsf”retagets namn] }
    { 30  ;   ;Sales Order No.     ;Code20        ;CaptionML=[ENU=Sales Order No.;
                                                              NOR=Salgsordrenr.;
                                                              SVE=F”rs.ordernr] }
    { 40  ;   ;Plant Document No.  ;Code20        ;TableRelation=IF (Level=CONST(PlantOrder)) "Plant Order"
                                                                 ELSE IF (Level=CONST(ExitOrder)) "Exit Order";
                                                   CaptionML=[ENU=Plant Document No.;
                                                              NOR=Maskindokumentnr.;
                                                              SVE=Maskindokumentnr] }
    { 45  ;   ;Create              ;Option        ;CaptionML=[ENU=Create;
                                                              NOR=Opprett;
                                                              SVE=Skapa];
                                                   OptionCaptionML=[ENU=" ,Arrival,Removal";
                                                                    NOR=" ,Ankomst,Fjerning";
                                                                    SVE=" ,Ankomst,Bortttagning"];
                                                   OptionString=[ ,Arrival,Removal] }
    { 50  ;   ;Sales Released on   ;DateTime      ;CaptionML=[ENU=Released on;
                                                              NOR=Frigitt den;
                                                              SVE=Sl„ppt den] }
    { 70  ;   ;Type                ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order".Type WHERE (No.=FIELD(Plant Document No.)));
                                                   CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=Arrival,Removal,Other Transfers,Negative Inventory Correction;
                                                                    NOR=Ankomst,Fjerning,Andre Overf›ringer,Negativ Lagerkorrigering;
                                                                    SVE=Ankomst,Borttagning,Andra ”verf”ringar,Negativ lagerkorrigering];
                                                   OptionString=Arrival,Removal,Other Transfers,Negative Inventory Correction;
                                                   Editable=No }
    { 71  ;   ;Transfer Date       ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order"."Transfer Date" WHERE (No.=FIELD(Plant Document No.)));
                                                   CaptionML=[ENU=Transfer Date;
                                                              NOR=Overf›ringsdato;
                                                              SVE=™verf”ringsdatum];
                                                   Editable=No }
    { 80  ;   ;Exit Date           ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Exit Order".Exit-date WHERE (No.=FIELD(Plant Document No.)));
                                                   CaptionML=[ENU=Exit Date;
                                                              NOR=Avslutte Dato;
                                                              SVE=Avsluta datum];
                                                   Editable=No }
    { 90  ;   ;Plant Location Code ;Code20        ;TableRelation="Plant Location";
                                                   CaptionML=[ENU=Location;
                                                              NOR=Plassering;
                                                              SVE=Lagerst„lle] }
    { 100 ;   ;Plant Order Created ;Option        ;CaptionML=[ENU=Plant Order Created;
                                                              NOR=Maskinordre er allerede opprettet;
                                                              SVE=Maskinorder skapad];
                                                   OptionCaptionML=[ENU=" ,Partly";
                                                                    NOR=" ,delvis";
                                                                    SVE=" ,Delvis"];
                                                   OptionString=[ ,Partly] }
  }
  KEYS
  {
    {    ;Level,Sales Company Name,Sales Order No.,Plant Document No.,Create;
                                                   Clustered=Yes }
    {    ;Level,Plant Document No.                 }
    {    ;Plant Location Code                      }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE ShowSalesOrderRelatedOrders@1100485000(IOrderType@1100485003 : Option;IOrderNo@1100485004 : Code[20]);
    VAR
      lvSalesRelOrderRec@1100485001 : Record 11012787;
      lvSalesRelRec@1100485000 : Record 11012787;
      lvText001@1100485002 : TextConst 'ENU=%1 is not created from a Sales Order in the Sales Company.;NOR=%1 er ikke opprettet fra en salgsordre i salgsselskapet;SVE=%1 skapas inte fr†n en f”rs„ljningsorder i f”rs„ljningsf”retaget.';
    BEGIN
      IF IOrderNo = '' THEN
        EXIT;

      lvSalesRelOrderRec.SETCURRENTKEY(Level,"Plant Document No.");
      lvSalesRelOrderRec.SETRANGE(Level, IOrderType);
      lvSalesRelOrderRec.SETRANGE("Plant Document No.", IOrderNo);
      IF NOT lvSalesRelOrderRec.FINDFIRST THEN BEGIN
        lvSalesRelOrderRec.Level := IOrderType;
        ERROR(lvText001, lvSalesRelOrderRec.Level);
      END;

      //* SETRANGE op Level niet nodig, deze wordt al in het form gezet.
      lvSalesRelRec.SETRANGE("Sales Company Name", lvSalesRelOrderRec."Sales Company Name");
      lvSalesRelRec.SETRANGE("Sales Order No.", lvSalesRelOrderRec."Sales Order No.");
      lvSalesRelRec.Level := lvSalesRelOrderRec.Level;
      lvSalesRelRec."Sales Company Name" := lvSalesRelOrderRec."Sales Company Name";
      lvSalesRelRec."Sales Order No." := lvSalesRelOrderRec."Sales Order No.";
      lvSalesRelRec."Plant Document No." := lvSalesRelOrderRec."Plant Document No.";
      PAGE.RUNMODAL(PAGE::"Sales R. Order Related Orders", lvSalesRelRec);
    END;

    PROCEDURE AddSalesOrderPlantRelation@1100485009(ICreatePORec@1100485000 : Record 11012787;IPlantOrderNo@1100485001 : Code[20];ILevel@1100485003 : Integer;IPlantLoc@1100485005 : Code[20]);
    VAR
      lvSalesOrderPORelRec@1100485002 : Record 11012787;
      lvLevel@1100485004 : Option;
    BEGIN
      //* ILevel: 1=Plant Order, 2=Exit Order

      WITH lvSalesOrderPORelRec DO BEGIN
        IF ILevel <> 2 THEN
          lvLevel := Level::PlantOrder
        ELSE
          lvLevel := Level::ExitOrder;

        IF GET(lvLevel, ICreatePORec."Sales Company Name", ICreatePORec."Sales Order No.", IPlantOrderNo, Create::" ") THEN BEGIN
          "Sales Released on" := ICreatePORec."Sales Released on";
          "Plant Location Code" := IPlantLoc;
          MODIFY;
        END ELSE BEGIN
          INIT;
          Level := lvLevel;
          "Sales Company Name" := ICreatePORec."Sales Company Name";
          "Sales Order No." := ICreatePORec."Sales Order No.";
          "Plant Document No." := IPlantOrderNo;
          Create := Create::" ";
          "Sales Released on" := ICreatePORec."Sales Released on";
          "Plant Location Code" := IPlantLoc;
          INSERT;
        END;
      END;
    END;

    PROCEDURE GetSalesOrdersOfPlantLoc@1100485001(IPlantLoc@1100485001 : Code[20];VAR OTmpSalesOrderRec@1100485005 : TEMPORARY Record 36) RetText : Code[20];
    VAR
      lvPlantLocRec@1100485002 : Record 11012554;
      lvSalesRelOrderRec@1100485000 : Record 11012787;
      lvCounter@1100485004 : Integer;
    BEGIN
      //* Attention: The table 'OTmpSalesOrderRec' must be 'Temporary' in the calling process!
      RetText := '';
      OTmpSalesOrderRec.RESET;
      OTmpSalesOrderRec.DELETEALL;

      IF IPlantLoc = '' THEN
        EXIT('');
      IF NOT lvPlantLocRec.GET(IPlantLoc) THEN
        EXIT('');

      lvSalesRelOrderRec.SETCURRENTKEY("Plant Location Code");
      lvSalesRelOrderRec.SETRANGE("Plant Location Code", IPlantLoc);
      IF lvPlantLocRec."Company Name" = '' THEN
        lvSalesRelOrderRec.SETRANGE("Sales Company Name", COMPANYNAME)
      ELSE
        lvSalesRelOrderRec.SETRANGE("Sales Company Name", lvPlantLocRec."Company Name");
      lvSalesRelOrderRec.SETFILTER("Sales Order No.", '<>%1', '');
      IF lvSalesRelOrderRec.FINDSET(FALSE, FALSE) THEN BEGIN
        REPEAT
          IF NOT OTmpSalesOrderRec.GET(OTmpSalesOrderRec."Document Type"::Order, lvSalesRelOrderRec."Sales Order No.") THEN BEGIN
            lvCounter := lvCounter + 1;
            IF lvCounter = 1 THEN
              RetText := lvSalesRelOrderRec."Sales Order No."
            ELSE
              RetText := STRSUBSTNO('[%1]', lvCounter);
            OTmpSalesOrderRec.INIT;
            OTmpSalesOrderRec."Document Type" := OTmpSalesOrderRec."Document Type"::Order;
            OTmpSalesOrderRec."No." := lvSalesRelOrderRec."Sales Order No.";
            OTmpSalesOrderRec.INSERT;
          END;
        UNTIL lvSalesRelOrderRec.NEXT = 0;
      END;
    END;

    PROCEDURE ShowSalesOrdersOfPlantLoc@1100485002(IPlantLoc@1100485001 : Code[20]);
    VAR
      lvPlantLocRec@1100485002 : Record 11012554;
      lvSalesOrderRec@1100485005 : Record 36;
      lvTmpSalesOrderRec@1100485003 : TEMPORARY Record 36;
    BEGIN
      IF IPlantLoc = '' THEN
        EXIT;
      IF NOT lvPlantLocRec.GET(IPlantLoc) THEN
        EXIT;

      GetSalesOrdersOfPlantLoc(IPlantLoc, lvTmpSalesOrderRec);

      lvTmpSalesOrderRec.RESET;
      IF lvTmpSalesOrderRec.FINDSET(FALSE,FALSE) THEN BEGIN
        lvSalesOrderRec.RESET;
        IF lvPlantLocRec."Company Name" <> '' THEN
          lvSalesOrderRec.CHANGECOMPANY(lvPlantLocRec."Company Name");
        REPEAT
          IF lvSalesOrderRec.GET(lvTmpSalesOrderRec."Document Type", lvTmpSalesOrderRec."No.") THEN
            lvSalesOrderRec.MARK(TRUE);
        UNTIL lvTmpSalesOrderRec.NEXT = 0;
        lvSalesOrderRec.MARKEDONLY(TRUE);
        PAGE.RUNMODAL(0, lvSalesOrderRec);
      END;
    END;

    BEGIN
    END.
  }
}

