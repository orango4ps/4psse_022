OBJECT Page 11126053 Site Mgt Hours Line (HPT) WS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    SourceTable=Table11012361;
    DelayedInsert=Yes;
    PageType=List;
    OnOpenPage=BEGIN
                 HourPortalSetup.GET;
                 SiteMngmntHoursSetup.GET;

                 BudgetLinesPresent := FALSE;
                 ReceivingCompanyEditable := TRUE;
                 CostObjectEditable := TRUE;
                 DepartmentCodeEditable := TRUE;
                 TypeEditable := TRUE;
                 ElementEditable := TRUE;
                 ExtensionContractEditable := TRUE;
                 ShiftCodeEditable :=TRUE;
                 PlantCompanyEditable := TRUE;
                 PlantNoEditable := TRUE;
                 PlantLocationEditable := TRUE;
                 PlantTypeEditable := TRUE;
                 CostComponentPlantEditable := TRUE;
                 CostComponentEditable := TRUE;
                 QuantityEditable := FALSE;
                 AmountEditable := FALSE;
                 DriverTypeEditable := FALSE;
                 RelationCodeBtnVisible := FALSE;
                 VehicleEditable := FALSE;
                 ObjectNoEditable := TRUE;
               END;

    OnClosePage=BEGIN
                  DeleteHeaderIfNoLines;
                END;

    OnAfterGetRecord=BEGIN
                       GetDescriptions;
                       GetRejectText;
                       SetEditable;
                       SetBudgetLinesPresent;
                       SetPageFields;
                     END;

    OnNewRecord=BEGIN
                  GetDescriptions;
                  SetBudgetLinesPresent;
                  "Component Type" := 0; //#C047175
                END;

    OnInsertRecord=BEGIN
                     CheckFields;
                     GetDescriptions;
                     CreateHeaderIfNotPresent;
                     SetBudgetLinesPresent;
                     LineType := GetLineType; //#C052386
                     SetWageComponent; //#C054455
                   END;

    OnModifyRecord=BEGIN
                     IF (Status = Status::Rejected) THEN
                       ReopenSingleRec;
                     GetDescriptions;
                     LineType := GetLineType; //#C052386
                     SetCostComponent; //#C047175
                   END;

    OnDeleteRecord=BEGIN
                     DeleteHeaderIfNoLines;
                   END;

  }
  CONTROLS
  {
    { 1100525000;0;Container;
                ContainerType=ContentArea }

    { 1100525001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100525002;2;Field  ;
                Name=Year;
                SourceExpr=Year }

    { 1100525003;2;Field  ;
                Name=Week;
                SourceExpr=Week }

    { 1100525006;2;Field  ;
                Name=Supplying Company;
                SourceExpr="Supplying Company" }

    { 1100525007;2;Field  ;
                Name=Employee No.;
                SourceExpr="Employee No." }

    { 1100525008;2;Field  ;
                Name=Line No.;
                SourceExpr="Line No.";
                OnValidate=BEGIN
                             IF ("Line No." <= 0) THEN
                               "Line No." := GetLastLineNo + 10000;
                           END;
                            }

    { 1100525010;2;Field  ;
                Name=Receiving Company;
                SourceExpr="Receiving Company";
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100525005;2;Field  ;
                Name=Line Template Code;
                SourceExpr="Line Template Code";
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100525037;2;Field  ;
                Name=Line Template Description;
                SourceExpr="Line Template Description";
                Editable=false }

    { 1100525011;2;Field  ;
                Name=Type;
                SourceExpr=Type;
                OnValidate=BEGIN
                             SetEditable;
                             SetBudgetLinesPresent;
                             GetDescriptions;
                           END;
                            }

    { 1100525004;2;Field  ;
                Name=Object No.;
                SourceExpr="Object No.";
                OnValidate=BEGIN
                             SetBudgetLinesPresent;
                           END;
                            }

    { 1100525023;2;Field  ;
                Name=Object Description;
                SourceExpr="Object Name";
                Editable=false }

    { 1100525015;2;Field  ;
                Name=Element;
                SourceExpr=Element }

    { 1100525022;2;Field  ;
                Name=Element Description;
                SourceExpr="Element Description" }

    { 1100525009;2;Field  ;
                Name=Extension Contract;
                SourceExpr="Extension Contract";
                OnValidate=BEGIN
                             GetDescriptions;
                           END;
                            }

    { 1100525030;2;Field  ;
                Name=Extension Contract Description;
                SourceExpr=ExtensionContract.Description;
                Editable=false }

    { 1100525038;2;Field  ;
                Name=Shift Code;
                SourceExpr="Shift Code" }

    { 1100525012;2;Field  ;
                Name=Plant Company;
                SourceExpr="Plant Company" }

    { 1100525014;2;Field  ;
                Name=Plant Location;
                SourceExpr="Plant Location" }

    { 1100525017;2;Field  ;
                Name=Plant Type;
                SourceExpr="Plant Type" }

    { 1100525018;2;Field  ;
                Name=Plant No.;
                SourceExpr="Plant No.";
                OnValidate=BEGIN
                             GetDescriptions;
                           END;
                            }

    { 1100525035;2;Field  ;
                Name=Plant Description;
                SourceExpr=GetPlantDescription;
                Editable=false }

    { 1100525019;2;Field  ;
                Name=Cost Component Plant;
                SourceExpr="Cost Component Plant" }

    { 1100525013;2;Field  ;
                Name=Cost Object;
                SourceExpr="Cost Object";
                OnValidate=BEGIN
                             GetDescriptions;
                           END;
                            }

    { 1100525027;2;Field  ;
                Name=Cost Object Description;
                SourceExpr="Cost Object Description";
                Editable=false }

    { 1100525021;2;Field  ;
                Name=Wage Component;
                SourceExpr="Wage Component";
                OnValidate=BEGIN
                             GetDescriptions;
                           END;
                            }

    { 1100525031;2;Field  ;
                Name=Wage Component Description;
                SourceExpr=WageComponent.Description;
                Editable=false }

    { 1100525033;2;Field  ;
                Name=Department Code;
                SourceExpr="Department Code";
                OnValidate=BEGIN
                             GetDescriptions;
                           END;
                            }

    { 1100525034;2;Field  ;
                Name=Department Code Description;
                SourceExpr=DimensionValue.Name;
                Editable=false }

    { 1100525025;2;Field  ;
                Name=Status;
                SourceExpr=Status }

    { 1100528312;2;Field  ;
                Name=Quantity;
                SourceExpr=Quantity;
                Editable=false }

    { 1100528310;2;Field  ;
                Name=Amount;
                SourceExpr=Amount;
                Editable=false }

    { 1100528302;2;Field  ;
                Name=Total Line;
                SourceExpr="Total Line";
                Editable=false }

    { 1100528313;2;Field  ;
                Name=Comment;
                SourceExpr=Comment }

    { 1100528309;2;Field  ;
                Name=Reject Text;
                CaptionML=[ENU=Reject Text;
                           SVE=Avvisadetext];
                SourceExpr=RejectText }

    { 1100528300;2;Field  ;
                Name=LineType;
                SourceExpr=LineType }

    { 1100529900;2;Field  ;
                Name=Vehicle;
                SourceExpr=Vehicle }

    { 1100528311;2;Field  ;
                Name=DriverType;
                SourceExpr=DriverType;
                OnValidate=BEGIN
                             SetTableFields;
                           END;
                            }

    { 1100525016;2;Field  ;
                Name=Monday;
                SourceExpr=MondayQty;
                OnValidate=BEGIN
                             SetTableFields;
                           END;
                            }

    { 1100525020;2;Field  ;
                Name=Tuesday;
                SourceExpr=TuesdayQty;
                OnValidate=BEGIN
                             SetTableFields;
                           END;
                            }

    { 1100525024;2;Field  ;
                Name=Wednesday;
                SourceExpr=WednesdayQty;
                OnValidate=BEGIN
                             SetTableFields;
                           END;
                            }

    { 1100525028;2;Field  ;
                Name=Thursday;
                SourceExpr=ThursdayQty;
                OnValidate=BEGIN
                             SetTableFields;
                           END;
                            }

    { 1100525032;2;Field  ;
                Name=Friday;
                SourceExpr=FridayQty;
                OnValidate=BEGIN
                             SetTableFields;
                           END;
                            }

    { 1100525036;2;Field  ;
                Name=Saturday;
                SourceExpr=SaturdayQty;
                OnValidate=BEGIN
                             SetTableFields;
                           END;
                            }

    { 1100525040;2;Field  ;
                Name=Sunday;
                SourceExpr=SundayQty;
                OnValidate=BEGIN
                             SetTableFields;
                           END;
                            }

    { 1100525043;2;Field  ;
                Name=BudgetLinesPresent;
                SourceExpr=BudgetLinesPresent;
                Editable=false }

    { 1100525039;2;Field  ;
                Name=ReceivingCompanyEditable;
                SourceExpr=ReceivingCompanyEditable;
                Editable=false }

    { 1100525063;2;Field  ;
                Name=TypeEditable;
                SourceExpr=TypeEditable;
                Editable=false }

    { 1100525056;2;Field  ;
                Name=ElementEditable;
                SourceExpr=ElementEditable;
                Editable=false }

    { 1100525052;2;Field  ;
                Name=ExtensionContractEditable;
                SourceExpr=ExtensionContractEditable;
                Editable=false }

    { 1100525051;2;Field  ;
                Name=ShiftCodeEditable;
                SourceExpr=ShiftCodeEditable;
                Editable=false }

    { 1100525062;2;Field  ;
                Name=PlantCompanyEditable;
                SourceExpr=PlantCompanyEditable;
                Editable=false }

    { 1100525061;2;Field  ;
                Name=PlantLocationEditable;
                SourceExpr=PlantLocationEditable;
                Editable=false }

    { 1100525060;2;Field  ;
                Name=PlantTypeEditable;
                SourceExpr=PlantTypeEditable;
                Editable=false }

    { 1100525059;2;Field  ;
                Name=PlantNoEditable;
                SourceExpr=PlantNoEditable;
                Editable=false }

    { 1100525057;2;Field  ;
                Name=CostComponentPlantEditable;
                SourceExpr=CostComponentPlantEditable;
                Editable=false }

    { 1100528307;2;Field  ;
                Name=LineEditable;
                SourceExpr=LineEditable;
                Editable=false }

    { 1100528314;2;Field  ;
                Name=DriverTypeEditable;
                SourceExpr=DriverTypeEditable;
                Editable=false }

    { 1100528308;2;Field  ;
                Name=QuantityEditable;
                SourceExpr=QuantityEditable;
                Editable=false }

    { 1100528315;2;Field  ;
                Name=AmountEditable;
                SourceExpr=AmountEditable;
                Editable=false }

    { 1100528316;2;Field  ;
                Name=CostComponentEditable;
                SourceExpr=CostComponentEditable;
                Editable=false }

    { 1100528318;2;Field  ;
                Name=DepartmentCodeEditable;
                SourceExpr=DepartmentCodeEditable;
                Editable=false }

    { 1100528319;2;Field  ;
                Name=CostObjectEditable;
                SourceExpr=CostObjectEditable;
                Editable=false }

    { 1100528301;2;Field  ;
                Name=RelationCodeBtnVisible;
                SourceExpr=RelationCodeBtnVisible }

    { 1100528303;2;Field  ;
                Name=Address From;
                SourceExpr="Address From" }

    { 1100528304;2;Field  ;
                Name=Address To;
                SourceExpr="Address To" }

    { 1100528305;2;Field  ;
                Name=Post Code From;
                SourceExpr="Post Code From" }

    { 1100528306;2;Field  ;
                Name=Post Code To;
                SourceExpr="Post Code To" }

    { 1100528317;2;Field  ;
                Name=City From;
                SourceExpr="City From" }

    { 1100528320;2;Field  ;
                Name=City To;
                SourceExpr="City To" }

    { 1100528323;2;Field  ;
                Name=Departure Date;
                SourceExpr="Departure Date" }

    { 1100528324;2;Field  ;
                Name=Departure Time;
                SourceExpr="Departure Time" }

    { 1100528325;2;Field  ;
                Name=Arrival Date;
                SourceExpr="Arrival Date" }

    { 1100528326;2;Field  ;
                Name=Arrival Time;
                SourceExpr="Arrival Time" }

    { 1100528322;2;Field  ;
                Name=Service Location No.;
                SourceExpr="Service Location No." }

    { 1100528321;2;Field  ;
                Name=Service Location Description;
                SourceExpr=ServiceLocation.Description;
                Editable=false }

    { 1100528327;2;Field  ;
                Name=ObjectNoEditable;
                SourceExpr=ObjectNoEditable }

    { 1100527600;2;Field  ;
                Name=Try-out No.;
                SourceExpr="Try-out No." }

    { 1100527601;2;Field  ;
                Name=Estimate No.;
                SourceExpr="Estimate No." }

    { 1100527602;2;Field  ;
                Name=VehicleEditable;
                SourceExpr=VehicleEditable }

  }
  CODE
  {
    VAR
      CostCode@1100528507 : Record 11012083;
      DimensionValue@1100528506 : Record 349;
      Employee@1100528505 : Record 5200;
      ExtensionContract@1100528504 : Record 11012004;
      HourLineTemplate@1100528503 : Record 11229799;
      HourPortalSetup@1100528502 : Record 11020454;
      SiteMngmntHoursSetup@1100528501 : Record 11012355;
      ServiceLocation@1100528309 : Record 11012801;
      WageComponent@1100528500 : Record 11012014;
      HourLineTemplateManagement@1100525000 : Codeunit 11012025;
      Text000@1100525006 : TextConst 'ENU=Field %1 is not filled correctly. (Current Value''%2'')';
      BudgetLinesPresent@1100525010 : Boolean;
      LineEditable@1100525005 : Boolean;
      ReceivingCompanyEditable@1100525008 : Boolean;
      TypeEditable@1100525023 : Boolean;
      ObjectNoEditable@1100528310 : Boolean;
      ElementEditable@1100525022 : Boolean;
      CostObjectEditable@1100528319 : Boolean;
      ExtensionContractEditable@1100525021 : Boolean;
      ShiftCodeEditable@1100525019 : Boolean;
      DepartmentCodeEditable@1100528320 : Boolean;
      PlantCompanyEditable@1100525024 : Boolean;
      PlantLocationEditable@1100525015 : Boolean;
      PlantTypeEditable@1100525020 : Boolean;
      PlantNoEditable@1100525016 : Boolean;
      CostComponentPlantEditable@1100525007 : Boolean;
      CostComponentEditable@1100528318 : Boolean;
      DriverTypeEditable@1100528314 : Boolean;
      QuantityEditable@1100528316 : Boolean;
      AmountEditable@1100528317 : Boolean;
      MondayQty@1100528300 : Decimal;
      TuesdayQty@1100528301 : Decimal;
      WednesdayQty@1100528302 : Decimal;
      ThursdayQty@1100528303 : Decimal;
      FridayQty@1100528304 : Decimal;
      SaturdayQty@1100528305 : Decimal;
      SundayQty@1100528306 : Decimal;
      DriverType@1100528315 : Integer;
      LineType@1100528307 : Integer;
      RelationCodeBtnVisible@1100528308 : Boolean;
      VehicleEditable@1100529900 : Boolean;
      RejectText@1100528200 : Text[250];
      SiteMngmntHoursHeader@1100528201 : Record 11012360;

    LOCAL PROCEDURE CheckFields@1100525008();
    BEGIN
      IF ("Line No." = 0) THEN
        ERROR(Text000, FIELDCAPTION("Line No."), "Line No.");
      IF ("Receiving Company" = '') THEN
        ERROR(Text000, FIELDCAPTION("Receiving Company"), "Receiving Company");
      IF ("Line Template Code" = '') THEN
        "Line Template Code" := GetHourLineTemplate;
    END;

    LOCAL PROCEDURE CheckLineEditable@1100525010() : Boolean;
    BEGIN
      IF (NOT CheckUnmannedPlantHourLineOpen) THEN
        EXIT(FALSE);
      IF (Status <> Status::Open) AND (Status <> Status::Rejected) THEN
        EXIT(FALSE);
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CreateHeaderIfNotPresent@1100409000();
    VAR
      SiteMngmntHoursHeader@1100409000 : Record 11012360;
    BEGIN
      IF (NOT SiteMngmntHoursHeader.GET(Year, Week, "Supplying Company", "Employee No.")) THEN BEGIN
        SiteMngmntHoursHeader.INIT;
        SiteMngmntHoursHeader.VALIDATE(Year, Year);
        SiteMngmntHoursHeader.VALIDATE(Week, Week);
        SiteMngmntHoursHeader.VALIDATE("Supplying Company", "Supplying Company");
        SiteMngmntHoursHeader.VALIDATE("Employee No.", "Employee No.");
        SiteMngmntHoursHeader.INSERT(TRUE);
        COMMIT;
      END;
    END;

    LOCAL PROCEDURE DeleteHeaderIfNoLines@1100409001();
    VAR
      SiteMngmntHoursHeader@1100409000 : Record 11012360;
      SiteMngmntHoursLine@1100409001 : Record 11012361;
    BEGIN
      SiteMngmntHoursLine.SETRANGE(Year, Year);
      SiteMngmntHoursLine.SETRANGE(Week, Week);
      SiteMngmntHoursLine.SETRANGE("Supplying Company", "Supplying Company");
      SiteMngmntHoursLine.SETRANGE("Employee No.", "Employee No.");
      IF (NOT SiteMngmntHoursLine.FINDFIRST) THEN BEGIN
        IF (SiteMngmntHoursHeader.GET(Year, Week, "Supplying Company", "Employee No.")) THEN
          SiteMngmntHoursHeader.DELETE(TRUE);
      END;
    END;

    LOCAL PROCEDURE GetDescriptions@1100525007();
    BEGIN
      SetIC; //#C047175
      CALCFIELDS("Element Description");

      IF (NOT WageComponent.GET("Wage Component")) THEN
        WageComponent.INIT;
      IF (NOT ExtensionContract.GET("Object No.", "Extension Contract")) THEN
        ExtensionContract.INIT;
      IF (NOT ServiceLocation.GET("Service Location No.")) THEN
        ServiceLocation.INIT;
      IF ("Department Code" <> '') THEN BEGIN
        DimensionValue.SETCURRENTKEY(Code, "Global Dimension No.");
        DimensionValue.SETRANGE(Code, "Department Code");
        DimensionValue.SETRANGE("Global Dimension No.", 1);
        IF (NOT DimensionValue.FINDFIRST) THEN
          DimensionValue.INIT;
      END ELSE
        DimensionValue.INIT;

      GetHourLineTemplate;
      SetRelationCodeBtnVisible;
    END;

    LOCAL PROCEDURE GetRejectText@1100528202();
    VAR
      ApprovalsMgmt@1100528200 : Codeunit 1535;
      ApprovalEntry@1100528201 : Record 454;
      ApprovalCommentLine@1100528202 : Record 455;
      lvRejectText@1100528203 : Text[500];
    BEGIN
      RejectText := '';
      IF Status = Status::Rejected THEN BEGIN
        GetHeader;
        IF NOT ApprovalsMgmt.LineHasOpenApprovalEntries(SiteMngmntHoursHeader.RECORDID,"Line No.") THEN BEGIN
          IF ApprovalsMgmt.LineFindLastRejectedApprovalEntry(ApprovalEntry,SiteMngmntHoursHeader.RECORDID,"Line No.") THEN BEGIN
            ApprovalCommentLine.SETCURRENTKEY("Table ID","Document Type","Document No.");
            ApprovalCommentLine.SETRANGE("Table ID",DATABASE::"Site Mngmnt. Hours Header");
            ApprovalCommentLine.SETRANGE("Document Type", ApprovalEntry."Document Type");
            ApprovalCommentLine.SETRANGE("Record ID to Approve",SiteMngmntHoursHeader.RECORDID);
            ApprovalCommentLine.SETRANGE("Workflow Step Instance ID",ApprovalEntry."Workflow Step Instance ID");
            ApprovalCommentLine.SETRANGE("Document Line No.","Line No.");
            ApprovalCommentLine.SETFILTER("Date and Time", '%1..', ApprovalEntry."Last Date-Time Modified");
            IF ApprovalCommentLine.FINDSET THEN BEGIN
              REPEAT
                lvRejectText := lvRejectText + ' ' + ApprovalCommentLine.Comment;
              UNTIL (ApprovalCommentLine.NEXT = 0) OR (STRLEN(lvRejectText) > MAXSTRLEN(RejectText));
              RejectText := COPYSTR(lvRejectText, 1, MAXSTRLEN(RejectText))
            END;
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE GetHeader@1100528205();
    BEGIN
      IF (SiteMngmntHoursHeader.Year <> Year) OR
         (SiteMngmntHoursHeader.Week <> Week) OR
         (SiteMngmntHoursHeader."Supplying Company" <> "Supplying Company") OR
         (SiteMngmntHoursHeader."Employee No." <> "Employee No.")
      THEN
        SiteMngmntHoursHeader.GET(Year,Week,"Supplying Company","Employee No.");
    END;

    LOCAL PROCEDURE GetHourLineTemplate@1100409002() : Code[20];
    VAR
      HourLineTemplateMgt@1100409000 : Codeunit 11012025;
    BEGIN
      IF ("Line Template Code" <> '') THEN
        EXIT("Line Template Code");

      HourLineTemplate.SETCURRENTKEY(Source,"Receiving Company","Seq. No.",Code);
      HourLineTemplate.SETRANGE(Source, HourLineTemplate.Source::"Site Mngmnt. Hours");
      IF "Receiving Company" = '' THEN
        HourLineTemplate.SETRANGE("Receiving Company", COMPANYNAME)
      ELSE
        HourLineTemplate.SETRANGE("Receiving Company", "Receiving Company");

      HourLineTemplate.SETRANGE(Type, Type);
      IF (HourLineTemplate.FINDSET) THEN BEGIN
        REPEAT
          IF (HourLineTemplateMgt.IsEmployeeInCAOFilter(COMPANYNAME, "Employee No.", HourLineTemplate."CAO Filter")) THEN
            EXIT(HourLineTemplate.Code);
        UNTIL (HourLineTemplate.NEXT = 0);
      END;
      EXIT('');
    END;

    LOCAL PROCEDURE GetLineType@1100528302() : Integer;
    BEGIN
      GetDescriptions;
      IF (WageComponent."Component Type" = WageComponent."Component Type"::Hours) THEN
        EXIT(1); //Hour
      IF (WageComponent."Component Type" = WageComponent."Component Type"::Expenses) THEN BEGIN
        IF (WageComponent."Kilometer Expense") THEN
          EXIT(2); //Km;
        EXIT(3); //Expense;
      END;
      EXIT(0);
    END;

    LOCAL PROCEDURE SetBudgetLinesPresent@1100525020();
    VAR
      BudgetLine@1100525000 : Record 11012001;
    BEGIN
      IF (Type <> Type::Project) THEN
        BudgetLinesPresent := FALSE
      ELSE BEGIN
        BudgetLine.SETRANGE("Project No.", "Object No.");
        BudgetLinesPresent := BudgetLine.FINDFIRST;
      END;
    END;

    LOCAL PROCEDURE SetCostComponent@1100525002();
    BEGIN
      //#C047175
      IF ("Component Type" = "Component Type"::Days) THEN
        EXIT;

      CASE LineType OF
        1: //Hour
          "Component Type" := "Component Type"::Hours;
        2: //Km;
          "Component Type" := "Component Type"::Kilometers;
        3: //Expense;
          "Component Type" := "Component Type"::Expenses;
      END;
    END;

    LOCAL PROCEDURE SetEditable@1100525014();
    BEGIN
      LineType := GetLineType;
      DriverTypeEditable := (LineType = 2);

      LineEditable := CheckLineEditable;
      ReceivingCompanyEditable := LineEditable AND ((Type <> Type::Indirect) OR (SiteMngmntHoursSetup."Allow Indirect for IC") );
      TypeEditable := LineEditable;
      ObjectNoEditable := LineEditable;
      IF (Type = Type::Indirect) THEN
        ObjectNoEditable := LineEditable AND (NOT SiteMngmntHoursSetup."No Access Obj. No. Indir. Hrs.");
      VehicleEditable := LineEditable AND (LineType = 2);
      ElementEditable := LineEditable AND (Type IN [Type::Project,Type::Plant,Type::UnmannedPlant]) AND ("Object No." <> '');
      ExtensionContractEditable := LineEditable AND (Type = Type::Project) AND ("Object No." <> '');
      ShiftCodeEditable := LineEditable AND (Type IN [Type::Project,Type::Plant,Type::UnmannedPlant]);
      CostComponentEditable := LineEditable AND (Type IN [Type::Project,Type::Plant,Type::UnmannedPlant]);
      DepartmentCodeEditable := LineEditable AND (Type IN [Type::Project,Type::Plant,Type::UnmannedPlant]);
      IF (Type = Type::Indirect) THEN
        CostObjectEditable := LineEditable AND SiteMngmntHoursSetup."Cost Object By Indirect Lines"
      ELSE
        CostObjectEditable := LineEditable;

      PlantCompanyEditable := LineEditable AND (Type = Type::Plant) AND ("Receiving Company" <> '');  //* Not for Unmanned Plant!
      PlantLocationEditable := LineEditable AND (Type IN [Type::Plant,Type::UnmannedPlant]) AND ("Object No."<>'') AND ("Plant Company" <> '');
      PlantTypeEditable := LineEditable AND (Type IN [Type::Plant, Type::UnmannedPlant]) AND ("Plant Company" <> '');
      PlantNoEditable := LineEditable AND (Type IN [Type::Plant, Type::UnmannedPlant]) AND ("Plant Company" <> '');
      CostComponentPlantEditable := LineEditable AND (Type = Type::Plant) AND ("Plant Company" <> '');
    END;

    LOCAL PROCEDURE SetIC@1100525005();
    BEGIN
      IF ("Receiving Company" = '') THEN
        "Receiving Company" := COMPANYNAME;
      ExtensionContract.CHANGECOMPANY("Receiving Company");
      DimensionValue.CHANGECOMPANY("Receiving Company");
      CostCode.CHANGECOMPANY("Receiving Company");
      ServiceLocation.CHANGECOMPANY("Receiving Company");

      IF ("Supplying Company" = '') THEN
        "Supplying Company" := COMPANYNAME;
      Employee.CHANGECOMPANY("Supplying Company");
      WageComponent.CHANGECOMPANY("Receiving Company");
    END;

    LOCAL PROCEDURE SetPageFields@1100528305();
    VAR
      WeekDaysQuantity@1100528301 : Decimal;
    BEGIN
      LineType := GetLineType;

      CASE LineType OF
        2: BEGIN //Km
          MondayQty := Monday;
          TuesdayQty := Tuesday;
          WednesdayQty := Wednesday;
          ThursdayQty := Thursday;
          FridayQty := Friday;
          SaturdayQty := Saturday;
          SundayQty := Sunday;
          DriverType := "Travel Hours Monday";
          CASE TRUE OF
            (Monday <> 0): DriverType := "Travel Hours Monday";
            (Tuesday <> 0): DriverType := "Travel Hours Tuesday";
            (Wednesday <> 0): DriverType := "Travel Hours Wednesday";
            (Thursday <> 0): DriverType := "Travel Hours Thursday";
            (Friday <> 0): DriverType := "Travel Hours Friday";
            (Saturday <> 0): DriverType := "Travel Hours Saturday";
            (Sunday <> 0): DriverType := "Travel Hours Sunday";
          END;
        END;
        3: BEGIN //Expense
          MondayQty := "Monday Quantity";
          TuesdayQty := "Tuesday Quantity";
          WednesdayQty := "Wednesday Quantity";
          ThursdayQty := "Thursday Quantity";
          FridayQty := "Friday Quantity";
          SaturdayQty := "Saturday Quantity";
          SundayQty := "Sunday Quantity";

          WeekDaysQuantity := "Monday Quantity" + "Tuesday Quantity" + "Wednesday Quantity" + "Thursday Quantity" +
            "Friday Quantity" + "Saturday Quantity" + "Sunday Quantity";
          IF (WeekDaysQuantity <> Quantity) THEN
            MondayQty := Quantity - ("Tuesday Quantity" + "Wednesday Quantity" + "Thursday Quantity" +
              "Friday Quantity" + "Saturday Quantity" + "Sunday Quantity");
        END;
        ELSE BEGIN //Hour
          MondayQty := Monday;
          TuesdayQty := Tuesday;
          WednesdayQty := Wednesday;
          ThursdayQty := Thursday;
          FridayQty := Friday;
          SaturdayQty := Saturday;
          SundayQty := Sunday;
        END;
      END;
    END;

    LOCAL PROCEDURE SetRelationCodeBtnVisible@1100528300();
    VAR
      HourLineTemplateMgt@1100409000 : Codeunit 11012025;
    BEGIN
      HourLineTemplate.SETCURRENTKEY(Source,"Receiving Company","Seq. No.",Code);
      HourLineTemplate.SETRANGE(Source, HourLineTemplate.Source::"Site Mngmnt. Hours");
      IF ("Receiving Company" = '') THEN
        HourLineTemplate.SETRANGE("Receiving Company", COMPANYNAME)
      ELSE
        HourLineTemplate.SETRANGE("Receiving Company", "Receiving Company");
      HourLineTemplate.SETRANGE(Type, Type);
      HourLineTemplate.SETRANGE(Code, "Line Template Code");
      IF (HourLineTemplate.FINDSET) THEN BEGIN
        REPEAT
          IF (HourLineTemplateMgt.IsEmployeeInCAOFilter(COMPANYNAME, "Employee No.", HourLineTemplate."CAO Filter")) THEN BEGIN
            RelationCodeBtnVisible := (HourLineTemplate."Relate Code" <> '') AND (NOT "Related Hour Line Template");
            EXIT;
          END;
        UNTIL (HourLineTemplate.NEXT = 0);
      END;
      RelationCodeBtnVisible := FALSE;
    END;

    LOCAL PROCEDURE SetTableFields@1100528301();
    BEGIN
      LineType := GetLineType;
      CASE LineType OF
        2: BEGIN //Km
          Monday := MondayQty;
          Tuesday := TuesdayQty;
          Wednesday := WednesdayQty;
          Thursday := ThursdayQty;
          Friday := FridayQty;
          Saturday := SaturdayQty;
          Sunday := SundayQty;
          "Travel Hours Monday" := DriverType;
          "Travel Hours Tuesday" := DriverType;
          "Travel Hours Wednesday" := DriverType;
          "Travel Hours Thursday" := DriverType;
          "Travel Hours Friday" := DriverType;
          "Travel Hours Saturday" := DriverType;
          "Travel Hours Sunday" := DriverType;
          CalculateTotalLine;
        END;
        3: BEGIN //Expense
          VALIDATE("Monday Quantity", MondayQty);
          VALIDATE("Tuesday Quantity", TuesdayQty);
          VALIDATE("Wednesday Quantity", WednesdayQty);
          VALIDATE("Thursday Quantity", ThursdayQty);
          VALIDATE("Friday Quantity", FridayQty);
          VALIDATE("Saturday Quantity", SaturdayQty);
          VALIDATE("Sunday Quantity", SundayQty);
        END;
        ELSE BEGIN //Hour
          Monday := MondayQty;
          Tuesday := TuesdayQty;
          Wednesday := WednesdayQty;
          Thursday := ThursdayQty;
          Friday := FridayQty;
          Saturday := SaturdayQty;
          Sunday := SundayQty;
          CalculateTotalLine;
        END;
      END;
    END;

    LOCAL PROCEDURE SetWageComponent@1100525016();
    VAR
      lvCostCodeRec@1100525002 : Record 11012083;
      lvWageComp@1100525001 : Record 11012014;
      lvEmployeeRec@1100525000 : Record 5200;
    BEGIN
      IF "Wage Component" = '' THEN
        IF Type = Type::Indirect THEN
          IF "Object No." <> '' THEN BEGIN
            SiteMngmntHoursSetup.GET;
            lvCostCodeRec.CHANGECOMPANY("Receiving Company");
            lvCostCodeRec.GET("Object No.");
            IF lvCostCodeRec.Component = '' THEN BEGIN
              "Wage Component" := '';
              "Component Type" := "Component Type"::Hours;
            END ELSE BEGIN
              VALIDATE("Wage Component",lvCostCodeRec.Component);
              IF (NOT SiteMngmntHoursSetup."Fill Wage Comp. By Indirect") AND ("Component Type" = "Component Type"::Hours) THEN
                "Wage Component" := '';
              IF lvWageComp.GET(lvCostCodeRec.Component) THEN BEGIN
                IF lvWageComp."Kilometer Expense" THEN BEGIN
                  "Component Type" := "Component Type"::Kilometers;
                  lvEmployeeRec.CHANGECOMPANY("Supplying Company");
                  lvEmployeeRec.GET("Employee No.");
                  SetDefaultDriverType(lvEmployeeRec."Driver Type");
                END;
              END;
            END;
          END;
    END;

    BEGIN
    END.
  }
}

