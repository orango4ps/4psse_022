OBJECT Page 11012025 Project Installments
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Project Installments;
               NOR=Prosjektavdrag;
               SVE=Projektavbetalningar];
    SaveValues=Yes;
    MultipleNewLines=No;
    SourceTable=Table11012018;
    DelayedInsert=Yes;
    DataCaptionFields=Project No.;
    PageType=List;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Calc Totals;
                                NOR=Ny,Behandle,Rapport,Beregn Totaler;
                                SVE=Ny,Hantera,Rapport,Ber„kna totaler];
    OnInit=VAR
             JobsSetup@1000 : Record 315;
           BEGIN
             ProjectNoEditable := TRUE;


             //>>150121
             JobsSetup.GET;
             WithheldAmountEditable := JobsSetup."Withheld Amount Editable";
             //<<150121
           END;

    OnOpenPage=VAR
                 JobsSetup@1100525000 : Record 315;
               BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 Currency.InitRoundingPrecision;
                 JobsSetup.GET();
               END;

    OnAfterGetRecord=VAR
                       RecRef@1100529700 : RecordRef;
                     BEGIN
                       RefreshAmounts;
                       RegisterExtDocFBEnabled := TRUE;
                       RecRef.GETTABLE(Rec);
                       CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
                       CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
                       CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode('');
                       GetProjectData;
                     END;

    OnNewRecord=VAR
                  lvExtensionContractRec@1100485001 : Record 11012004;
                BEGIN
                  IF ProjectNo <> '' THEN
                    "Project No." := ProjectNo;
                  IF ("Project No." <> '') AND ("Extension Contract" = '') AND (GETFILTER("Extension Contract") <> '') THEN BEGIN
                    IF STRLEN(GETFILTER("Extension Contract")) <= MAXSTRLEN(lvExtensionContractRec."Contract No.") THEN BEGIN
                      IF lvExtensionContractRec.GET("Project No.", GETFILTER("Extension Contract")) THEN
                        "Extension Contract" := lvExtensionContractRec."Contract No."
                    END;
                  END;
                  IF ( "Project No." <> '') AND (Principal = '') AND (xRec.Principal <> '') THEN BEGIN
                    IF ProjPrincipalRec.GET("Project No.", xRec.Principal) THEN
                      VALIDATE(Principal, xRec.Principal);
                  END;
                  IF ( "Project No." <> '') AND ("Plot No." = '') AND (xRec."Plot No." <> '') THEN BEGIN
                    IF PlotRec.GET("Project No.", xRec."Plot No.") THEN
                      VALIDATE("Plot No.", xRec."Plot No.");
                  END;
                  GetDefaultNr();
                  CALCFIELDS("Installment Total  (LCY)","Global Dimension 1 Code");
                END;

    OnInsertRecord=BEGIN
                     GetProjectData;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateEditable;
                           GetProjectData;
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100529702;1 ;Action    ;
                      CaptionML=[ENU=&Documents;
                                 NOR=&Dokumenter;
                                 SVE=&Dokument];
                      Image=Documents;
                      OnAction=VAR
                                 DocumentFilters@1100525001 : Codeunit 11012432;
                                 RecRef@1100525002 : RecordRef;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, TRUE);
                               END;
                                }
      { 1100525005;1 ;Action    ;
                      CaptionML=[ENU=Incl. / Excl. Cumulative Amounts;
                                 NOR=Vis akkumulerte;
                                 SVE=Visa ackumulerade];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Calculate;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 AmountsInclCumulative := NOT AmountsInclCumulative;
                                 CurrPage.ProjectInstallmentsTotalsFB.PAGE.SetShowAmountsInclCumulative(AmountsInclCumulative);
                                 CurrPage.PrincipalInstallTotalsFB.PAGE.SetShowAmountsInclCumulative(AmountsInclCumulative);
                                 CurrPage.PlotInstallTotalsFB.PAGE.SetShowAmountsInclCumulative(AmountsInclCumulative);
                                 CurrPage.ExtContInstallTotalsFB.PAGE.SetShowAmountsInclCumulative(AmountsInclCumulative);
                                 CurrPage.OptionInstallmentsTotalsFB.PAGE.SetShowAmountsInclCumulative(AmountsInclCumulative);
                                 CurrPage.OptionQuoteTotalsFB.PAGE.SetShowAmountsInclCumulative(AmountsInclCumulative);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100525003;1 ;Action    ;
                      CaptionML=[ENU=Incl. / Exlc. VAT;
                                 NOR=Inkl. / Ekskl. Mva;
                                 SVE=Inkl. / Exkl. Moms];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Calculate;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ProjectInstallmentsTotalsFB@1100527401 : Page 11129747;
                               BEGIN
                                 AmountsInclVAT := NOT AmountsInclVAT;
                                 CurrPage.ProjectInstallmentsTotalsFB.PAGE.SetShowAmountsInclVAT(AmountsInclVAT);
                                 CurrPage.PrincipalInstallTotalsFB.PAGE.SetShowAmountsInclVAT(AmountsInclVAT);
                                 CurrPage.PlotInstallTotalsFB.PAGE.SetShowAmountsInclVAT(AmountsInclVAT);
                                 CurrPage.ExtContInstallTotalsFB.PAGE.SetShowAmountsInclVAT(AmountsInclVAT);
                                 CurrPage.OptionInstallmentsTotalsFB.PAGE.SetShowAmountsInclVAT(AmountsInclVAT);
                                 CurrPage.OptionQuoteTotalsFB.PAGE.SetShowAmountsInclVAT(AmountsInclVAT);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1210190050;1 ;ActionGroup;
                      CaptionML=[ENU=Invoice;
                                 NOR=Faktura;
                                 SVE=Faktura] }
      { 1100285300;2 ;Action    ;
                      Name=<Action1100294003>;
                      CaptionML=[ENU=Calculate Final Installment;
                                 NOR=Beregn Sluttfaktura;
                                 SVE=Ber„kna slutfaktura];
                      Promoted=Yes;
                      Image=CopyFromTask;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GenerateProjInstallm@1100285300 : Codeunit 11012007;
                               BEGIN

                                 //>> 160718 ITERO.SB RAD-024 Added action for calculation of final installment (from project principal)
                                 CLEAR(GenerateProjInstallm);
                                 GenerateProjInstallm.CalcFinalInstalmentPrincipal("Project No.",Principal);
                                 //<<
                               END;
                                }
      { 1100485035;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create &Invoices;
                                 NOR=Opprette &Fakturaer;
                                 SVE=Skapa &fakturor];
                      Promoted=Yes;
                      Image=CreateJobSalesInvoice;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Job@1210190001 : Record 11072003;
                               BEGIN
                                 Job.GET("Project No.");
                                 Job.SETRECFILTER;
                                 Job.CreateInvoicesFromProject(Job);
                               END;
                                }
      { 1210190053;2 ;Action    ;
                      CaptionML=[ENU=Set Chargeable (Selected Lines);
                                 NOR=Sett belastbar (valgte rader);
                                 SVE=S„tt till debiterbar (valda rader)];
                      Image=CompleteLine;
                      OnAction=VAR
                                 ProjectInstallment@1100525000 : Record 11012018;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ProjectInstallment);
                                 ProjectInstallment.SetChargeableCollective;
                               END;
                                }
      { 1210190054;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Set &Chargeable (Selections);
                                 NOR=Sett &belastbar (utvalg);
                                 SVE=S„tt till debiterbar (urval)];
                      Image=CompleteLine;
                      OnAction=VAR
                                 ProjInstall@1210190000 : Record 11012018;
                               BEGIN
                                 //*15086.n
                                 ProjInstall.SETRANGE("Project No.", "Project No.");
                                 REPORT.RUNMODAL(REPORT::"Set Proj. Installm. Chargeable", TRUE, TRUE, ProjInstall);
                               END;
                                }
      { 1100285101;2 ;Action    ;
                      CaptionML=[ENU=Invoices;
                                 NOR=Fakturaer;
                                 SVE=Fakturor];
                      RunObject=Page 9301;
                      RunPageView=SORTING(Document Type,No.)
                                  ORDER(Ascending)
                                  WHERE(Document Type=CONST(Invoice));
                      RunPageLink=Job No.=FIELD(Project No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Invoice;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //ITERO.PR RFC-013-2
                               END;
                                }
      { 1101285000;2 ;Action    ;
                      CaptionML=[ENU=Credit Memos;
                                 NOR=Kreditnotaer;
                                 SVE=Kreditnotor];
                      RunObject=Page 9302;
                      RunPageView=SORTING(Document Type,No.)
                                  ORDER(Ascending)
                                  WHERE(Document Type=CONST(Credit Memo));
                      RunPageLink=Job No.=FIELD(Project No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CreditMemo;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //ITERO.PR RFC-013-2
                               END;
                                }
      { 1100485034;1 ;ActionGroup;
                      CaptionML=[ENU=Process;
                                 NOR=Behandle;
                                 SVE=Hantera] }
      { 1210190043;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Update Exp. Installmt. Invoice Dates;
                                 NOR=Oppdater utg. Fakturadato for avdrag;
                                 SVE=Uppdatera utg. fakturadatum f”r avbetalning];
                      Image=ChangeDates;
                      OnAction=VAR
                                 ProjectInstallment@1210190000 : Record 11012018;
                               BEGIN
                                 // jhoek.210611: melding 19735
                                 ProjectInstallment.SETRANGE("Project No.", "Project No.");
                                 ProjectInstallment.SETRANGE(Principal, Principal);

                                 REPORT.RUNMODAL(REPORT::"Upd. Exp. Installm. Inv. Dates", TRUE, FALSE, ProjectInstallment);
                               END;
                                }
      { 1210190052;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Generate Progress;
                                 NOR=Generer fremdrift;
                                 SVE=Generera f”rlopp];
                      Visible=FALSE;
                      Image=CalcWorkCenterCalendar;
                      OnAction=VAR
                                 lvProjRec@1210190001 : Record 11072003;
                                 lvGenProgressFromInstallmRpt@1210190000 : Report 11020212;
                               BEGIN
                                 lvProjRec.GET("Project No.");
                                 lvProjRec.TESTFIELD("Progress from Instal. Progress", TRUE);
                                 lvGenProgressFromInstallmRpt.SetDefaultSelection("Project No.", TODAY);
                                 lvGenProgressFromInstallmRpt.RUNMODAL;
                               END;
                                }
      { 1210190051;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Calculate Interest Installment;
                                 NOR=Beregn Renteavdrag;
                                 SVE=Ber„kna r„nteavbetalning];
                      Visible=FALSE;
                      Image=CalculateBalanceAccount;
                      OnAction=VAR
                                 lvProjInstallRec@1210190000 : Record 11012018;
                               BEGIN
                                 //**4PS01.sn
                                 lvProjInstallRec.SETRANGE("Project No.", "Project No.");
                                 REPORT.RUNMODAL(REPORT::"Calc. Int. Plot Installments", TRUE, FALSE, lvProjInstallRec);
                                 //**4PS01.en
                               END;
                                }
      { 1100525001;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Change Orig. Contract Install. Date;
                                 NOR=Endre Orig. Kontraktavdr. Dato;
                                 SVE=Žndra urspr. Kontraktavbet. Datum];
                      Visible=FALSE;
                      Image=ChangeDates;
                      OnAction=BEGIN
                                 ResetOrigContractInstDate;
                               END;
                                }
      { 1210190004;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1210190002;1 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 NOR=Skriv &ut;
                                 SVE=Skriv &ut];
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 PrintDocument@1100485001 : Codeunit 229;
                                 ProjInstall@1210190001 : Record 11012018;
                               BEGIN
                                 //PrintDocument.PrintProjectInstallments(Rec);  //*32118.o

                                 //*32118.sn
                                 ProjInstall.COPY(Rec);
                                 IF ProjectFilterGroup > 0 THEN BEGIN
                                   ProjInstall.FILTERGROUP(ProjectFilterGroup);
                                   ProjInstall.SETRANGE("Project No.");  //* Reset
                                   ProjInstall.FILTERGROUP(0);
                                   //
                                   FILTERGROUP(ProjectFilterGroup);
                                   COPYFILTER("Project No.", ProjInstall."Project No.");
                                   FILTERGROUP(0);
                                 END;
                                 PrintDocument.PrintProjectInstallments(ProjInstall);
                                 //*32118.en
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Project No.";
                Editable=ProjectNoEditable }

    { 1100525007;2;Field  ;
                CaptionML=[ENU=Project Description;
                           NOR=Prosjektbeskrivelse;
                           SVE=Projektbeskrivning];
                SourceExpr=ProjRec.Description;
                TableRelation=Job.Description WHERE (No.=FIELD(Project No.));
                Visible=FALSE;
                Editable=FALSE }

    { 1100525020;2;Field  ;
                SourceExpr="Project Address";
                Visible=FALSE }

    { 1100525021;2;Field  ;
                SourceExpr="Project Address 2";
                Visible=FALSE }

    { 1100525022;2;Field  ;
                SourceExpr="Project City";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr=Principal }

    { 1100528502;2;Field  ;
                SourceExpr="Project Manager";
                Visible=FALSE }

    { 1100528501;2;Field  ;
                CaptionML=ENU=Name Project Manager;
                SourceExpr=ProjRec."Name Project Manager";
                Visible=FALSE;
                Editable=False }

    { 1100525012;2;Field  ;
                CaptionML=[ENU=Principal Name;
                           NOR=Oppdragsgivers navn;
                           SVE=Uppdragsgivarens namn];
                SourceExpr=GetPrincipalName;
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Plot No.";
                Visible=FALSE }

    { 1100485018;2;Field  ;
                SourceExpr="House Model";
                Visible=FALSE }

    { 1100485020;2;Field  ;
                SourceExpr="Block No.";
                Visible=FALSE }

    { 1100485012;2;Field  ;
                SourceExpr="Seq. No. in Block";
                Visible=FALSE }

    { 1100485016;2;Field  ;
                SourceExpr="Floor No.";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="Installment No." }

    { 10  ;2   ;Field     ;
                SourceExpr="Extension Contract";
                OnValidate=BEGIN
                             CurrPage.UPDATE;  // 26494.n
                           END;
                            }

    { 1210190037;2;Field  ;
                SourceExpr="Description Extension Contract";
                Visible=FALSE }

    { 1210190044;2;Field  ;
                SourceExpr="Main Group";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr=Group;
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                SourceExpr="Sub Group";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr=Option;
                Visible=FALSE }

    { 1100528402;2;Field  ;
                SourceExpr="Option Description";
                Visible=FALSE }

    { 1210190000;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE }

    { 1210190048;2;Field  ;
                DrillDown=No;
                SourceExpr="Element Description";
                Visible=FALSE }

    { 1210190055;2;Field  ;
                CaptionML=[ENU=Principal Reference;
                           NOR=Oppdragsgiverreferanse;
                           SVE=Uppdragsgivarreferens];
                SourceExpr=PrincipalReference;
                Visible=FALSE;
                Editable=FALSE }

    { 1100485010;2;Field  ;
                SourceExpr="Cost Component";
                Visible=FALSE }

    { 1100528500;2;Field  ;
                SourceExpr="Global Dimension 1 Code";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Cost Object";
                LookupPageID=Cost Object List }

    { 1100485002;2;Field  ;
                SourceExpr="Installment Scheme SerNo.";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr=Description }

    { 22  ;2   ;Field     ;
                SourceExpr="VAT Prod. Posting Group" }

    { 1100529600;2;Field  ;
                SourceExpr="Advance Payment";
                Visible=FALSE }

    { 24  ;2   ;Field     ;
                SourceExpr=Points;
                Visible=FALSE }

    { 1100485004;2;Field  ;
                SourceExpr="Percentage Contract Amount";
                Visible=FALSE }

    { 1100525002;2;Field  ;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Installment Amount";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 26  ;2   ;Field     ;
                SourceExpr="Installment Amount (LCY)";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100485026;2;Field  ;
                SourceExpr="VAT Amount Long Lease";
                Visible=FALSE }

    { 1210190007;2;Field  ;
                SourceExpr="Expected Invoice Date";
                Visible=FALSE }

    { 1210190061;2;Field  ;
                SourceExpr="Orig Contract Installment Date";
                Visible=FALSE;
                Editable=false }

    { 1210190063;2;Field  ;
                SourceExpr=Remarks;
                Visible=FALSE }

    { 1100525018;2;Field  ;
                SourceExpr="Commission No.";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                SourceExpr=Chargeable;
                OnValidate=BEGIN
                             IF Chargeable AND ("Installment Amount (LCY)" <> 0) AND ("Invoice Price (LCY)" = 0) THEN
                              MESSAGE(Text003)
                           END;
                            }

    { 1210190005;2;Field  ;
                SourceExpr="Percentage Points";
                Visible=FALSE }

    { 1100485000;2;Field  ;
                SourceExpr="Total Percentage Points";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Points to be invoiced";
                Visible=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="Invoice Price" }

    { 34  ;2   ;Field     ;
                SourceExpr="Invoice Price (LCY)";
                Visible=FALSE }

    { 1100485028;2;Field  ;
                SourceExpr="Invoice VAT Amount Long Lease";
                Visible=FALSE }

    { 1100525006;2;Field  ;
                SourceExpr="Invoice in Process" }

    { 36  ;2   ;Field     ;
                SourceExpr="Invoice in Process (LCY)";
                Visible=FALSE }

    { 1100525008;2;Field  ;
                AssistEdit=Yes;
                SourceExpr="Invoiced Price";
                OnAssistEdit=BEGIN
                               ShowPostedInvoices; //C018872
                             END;
                              }

    { 1210190059;2;Field  ;
                AssistEdit=Yes;
                CaptionML=[ENU=Invoiced Price Including VAT;
                           NOR=Fakturert pris inkl. mva.;
                           SVE=Fakturerat pris inkl. moms];
                BlankZero=Yes;
                SourceExpr=InvoicedPriceInclVAT;
                Visible=FALSE;
                OnAssistEdit=BEGIN
                               ShowPostedInvoices; //C018872
                             END;
                              }

    { 38  ;2   ;Field     ;
                AssistEdit=Yes;
                SourceExpr="Invoiced Price (LCY)";
                Visible=FALSE;
                OnAssistEdit=BEGIN
                               ShowPostedInvoices; //C018872
                             END;
                              }

    { 1100525019;2;Field  ;
                SourceExpr="Credit Memo in Process" }

    { 40  ;2   ;Field     ;
                SourceExpr="Credit Memo in Process (LCY)";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                CaptionML=[ENU=Points Invoiced;
                           NOR=Fakturerte poeng;
                           SVE=Fakturerade po„ng];
                BlankZero=Yes;
                SourceExpr=InvoicedPoints;
                Visible=FALSE;
                Editable=FALSE }

    { 44  ;2   ;Field     ;
                CaptionML=[ENU=Paid;
                           NOR=Innbetalt;
                           SVE=Utbetalat];
                BlankZero=Yes;
                SourceExpr=InvoicePayment;
                Editable=FALSE }

    { 1210190057;2;Field  ;
                CaptionML=[ENU=Paid included VAT;
                           NOR=Utbetaling inkluderer moms;
                           SVE=Utbetalning inkluderar moms];
                BlankZero=Yes;
                SourceExpr=InvoicePaymentInclVAT;
                Visible=FALSE }

    { 1100528901;2;Field  ;
                SourceExpr="Installment Motivation Date";
                Visible=FALSE }

    { 1100528903;2;Field  ;
                SourceExpr="Installment Motivation Period";
                Visible=FALSE }

    { 1100528900;2;Field  ;
                SourceExpr="Installment Overview";
                Visible=FALSE }

    { 1100528902;2;Field  ;
                SourceExpr="Installment Overview Period";
                Visible=FALSE }

    { 1100525100;2;Field  ;
                SourceExpr="RAW Final Installment";
                Visible=FALSE }

    { 1210190031;2;Field  ;
                SourceExpr="Last Installment";
                Visible=FALSE }

    { 1210190041;2;Field  ;
                SourceExpr="Due Date Base" }

    { 1100528403;2;Field  ;
                SourceExpr="Specific Payment Terms Code";
                Visible=FALSE }

    { 1210190046;2;Field  ;
                DrillDown=No;
                CaptionML=[ENU=Payment Terms Code;
                           NOR=Betalingsbet.kode;
                           SVE=Betalningsvillkorskod];
                SourceExpr=GetPaymentTermsCode();
                Visible=FALSE }

    { 1100485006;2;Field  ;
                DrillDown=No;
                SourceExpr="Credit Restriction";
                Visible=FALSE }

    { 1210190033;2;Field  ;
                SourceExpr="Due Date Actual";
                Visible=FALSE }

    { 1100485022;2;Field  ;
                SourceExpr="Period Start";
                Visible=FALSE }

    { 1100485024;2;Field  ;
                SourceExpr="Period End";
                Visible=FALSE }

    { 1210190035;2;Field  ;
                SourceExpr="Interest Installment";
                Visible=FALSE }

    { 1100485126;2;Field  ;
                SourceExpr="Project Activity No.";
                Visible=FALSE }

    { 1210190039;2;Field  ;
                SourceExpr="Interest Inst. No. Transfer";
                Visible=FALSE }

    { 1100525009;2;Field  ;
                SourceExpr="Document (in Process)" }

    { 1100525010;2;Field  ;
                SourceExpr="Document (Invoiced)" }

    { 1100294000;2;Field  ;
                SourceExpr="Withheld Amount";
                Editable=WithheldAmountEditable }

    { 1100294001;2;Field  ;
                SourceExpr="Withheld Amount (LCY)";
                Editable=WithheldAmountEditable }

    { 1100285001;2;Field  ;
                SourceExpr="Amount to Invoice" }

    { 1100285000;2;Field  ;
                SourceExpr="Withheld Amt. (In Process)" }

    { 1100285002;2;Field  ;
                SourceExpr="Withheld Amt. (Invoiced)" }

    { 1100285003;2;Field  ;
                SourceExpr="Withheld Amt. (Credit)" }

    { 1101285001;2;Field  ;
                SourceExpr="Invoiced Amount (Internal)";
                Visible=False }

    { 1101285002;2;Field  ;
                SourceExpr="Withheld Amount (Internal)";
                Visible=False }

    { 1100528404;2;Field  ;
                SourceExpr="Option Quote No.";
                Visible=FALSE }

    { 1100529701;0;Container;
                ContainerType=FactBoxArea }

    { 1100529700;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                Enabled=RegisterExtDocFBEnabled;
                PartType=Page }

    { 1100285102;1;Part   ;
                SubPageLink=Project No.=FIELD(Project No.),
                            Principal=FIELD(Principal);
                PagePartID=Page11128028;
                PartType=Page }

    { 1100527400;1;Part   ;
                Name=ProjectInstallmentsTotalsFB;
                CaptionML=ENU=Installments Totals;
                SubPageLink=Project No.=FIELD(Project No.);
                PagePartID=Page11129747;
                PartType=Page }

    { 1100527402;1;Part   ;
                Name=PrincipalInstallTotalsFB;
                CaptionML=ENU=Principal;
                SubPageLink=Principal=FIELD(Principal),
                            Project No.=FIELD(Project No.);
                PagePartID=Page11129748;
                PartType=Page }

    { 1100527404;1;Part   ;
                Name=ExtContInstallTotalsFB;
                CaptionML=ENU=Extension Contract;
                SubPageLink=Project No.=FIELD(Project No.),
                            Extension Contract=FIELD(Extension Contract);
                PagePartID=Page11129750;
                PartType=Page }

    { 1100527403;1;Part   ;
                Name=PlotInstallTotalsFB;
                CaptionML=ENU=Plot;
                SubPageLink=Project No.=FIELD(Project No.),
                            Plot No.=FIELD(Plot No.);
                PagePartID=Page11129749;
                PartType=Page }

    { 1100527401;1;Part   ;
                Name=OptionInstallmentsTotalsFB;
                CaptionML=ENU=Option;
                SubPageLink=Project No.=FIELD(Project No.),
                            Principal=FIELD(Principal),
                            Option=FIELD(Option);
                PagePartID=Page11129751;
                PartType=Page }

    { 1100527405;1;Part   ;
                Name=OptionQuoteTotalsFB;
                CaptionML=ENU=Option Quote;
                SubPageLink=Project No.=FIELD(Project No.),
                            Option Quote No.=FIELD(Option Quote No.);
                PagePartID=Page11129778;
                PartType=Page }

  }
  CODE
  {
    VAR
      ProjRec@11012001 : Record 11072003;
      ProjPrincipalRec@11012002 : Record 11012005;
      ExtensionRec@1210190002 : Record 11012004;
      PlotRec@1210190003 : Record 11012500;
      VatPostingSetup@1100485005 : Record 325;
      Currency@1100485006 : Record 4;
      ProjectFilterGroup@1210190008 : Integer;
      AmountsInclCumulative@1100485002 : Boolean INDATASET;
      AmountsInclVAT@1100485004 : Boolean INDATASET;
      PrincipalReference@1210190007 : Text[50];
      "VAT Amount Long LeaseEditable"@1100409003 : Boolean INDATASET;
      ProjectNo@1100528701 : Code[20];
      ProjectNoEditable@1100528700 : Boolean INDATASET;
      WithheldAmountEditable@1000 : Boolean INDATASET;
      RegisterExtDocFBEnabled@1100529700 : Boolean INDATASET;
      Text003@1100525002 : TextConst 'ENU="You are going to create an invoice with Amount = 0"';
      DPA_IsHardFilter@1100528500 : Boolean;

    PROCEDURE InvoicePayment@2() : Decimal;
    VAR
      CustEntryRec@11012000 : Record 21;
      ProjLedgEntryRec@11012001 : Record 11072005;
      PercDec@11012002 : Decimal;
      Fbet@11012003 : Decimal;
    BEGIN
      Fbet := 0;
      ProjLedgEntryRec.SETCURRENTKEY("Project Invoice", "Installment Invoice", "Job No.", Principal, "Installment No.");
      ProjLedgEntryRec.SETRANGE("Project Invoice", TRUE);
      ProjLedgEntryRec.SETRANGE("Installment Invoice", TRUE);
      ProjLedgEntryRec.SETRANGE("Job No.", "Project No.");
      ProjLedgEntryRec.SETRANGE(Principal, Principal);
      ProjLedgEntryRec.SETRANGE("Plot No.","Plot No.");
      ProjLedgEntryRec.SETRANGE("Installment No.", "Installment No.");
      ProjLedgEntryRec.SETRANGE("Entry Type",ProjLedgEntryRec."Entry Type"::Sale);
      IF ProjLedgEntryRec.FINDSET THEN
        REPEAT
          CustEntryRec.SETCURRENTKEY("Document No.");
          CustEntryRec.SETFILTER(
            "Document Type",'%1|%2',CustEntryRec."Document Type"::Invoice,CustEntryRec."Document Type"::"Credit Memo");
          CustEntryRec.SETRANGE("Document No.", ProjLedgEntryRec."Document No.");
          //Invoicing to other customer then principal possible, depending on customerdata. Document No. is sufficient.
          IF CustEntryRec.FINDFIRST THEN BEGIN
            CustEntryRec.CALCFIELDS("Amount (LCY)","Remaining Amt. (LCY)");
            IF CustEntryRec."Amount (LCY)" <> 0 THEN BEGIN
              PercDec := (-1 * ProjLedgEntryRec."Total Price (LCY)") / CustEntryRec."Amount (LCY)";
              Fbet := Fbet + ROUND((PercDec * (CustEntryRec."Amount (LCY)" - CustEntryRec."Remaining Amt. (LCY)")),0.01);
            END;
          END;
        UNTIL ProjLedgEntryRec.NEXT = 0;
      EXIT(Fbet);
    END;

    PROCEDURE InvoicePaymentInclVAT@1210190005() : Decimal;
    VAR
      CustEntryRec@11012000 : Record 21;
      ProjLedgEntryRec@11012001 : Record 11072005;
      PercDec@11012002 : Decimal;
      Fbet@11012003 : Decimal;
    BEGIN
      // C-027114.n
      Fbet := 0;
      ProjLedgEntryRec.SETCURRENTKEY("Project Invoice", "Installment Invoice", "Job No.", Principal, "Installment No.");
      ProjLedgEntryRec.SETRANGE("Project Invoice", TRUE);
      ProjLedgEntryRec.SETRANGE("Installment Invoice", TRUE);
      ProjLedgEntryRec.SETRANGE("Job No.", "Project No.");
      ProjLedgEntryRec.SETRANGE(Principal, Principal);
      ProjLedgEntryRec.SETRANGE("Plot No.","Plot No.");
      ProjLedgEntryRec.SETRANGE("Installment No.", "Installment No.");
      ProjLedgEntryRec.SETRANGE("Entry Type",ProjLedgEntryRec."Entry Type"::Sale);
      IF ProjLedgEntryRec.FINDSET THEN
        REPEAT
          CustEntryRec.SETCURRENTKEY("Document No.");
          CustEntryRec.SETFILTER(
            "Document Type",'%1|%2',CustEntryRec."Document Type"::Invoice,CustEntryRec."Document Type"::"Credit Memo");
          CustEntryRec.SETRANGE("Document No.", ProjLedgEntryRec."Document No.");
          //Invoicing to other customer then principal possible, depending on customerdata. Document No. is sufficient.
          IF CustEntryRec.FINDFIRST THEN BEGIN
            CustEntryRec.CALCFIELDS("Amount (LCY)","Remaining Amt. (LCY)");
            IF CustEntryRec."Sales (LCY)" <> 0 THEN BEGIN
              PercDec := (-1 * ProjLedgEntryRec."Total Price (LCY)") / CustEntryRec."Sales (LCY)";
              Fbet := Fbet + ROUND((PercDec * (CustEntryRec."Amount (LCY)" - CustEntryRec."Remaining Amt. (LCY)")),0.01);
            END;
          END;
        UNTIL ProjLedgEntryRec.NEXT = 0;
      EXIT(Fbet);
    END;

    PROCEDURE InvoicedPriceInclVAT@1210190001() : Decimal;
    VAR
      InvPriceInclVAT@11012003 : Decimal;
    BEGIN
      // C-027114.n
      InvPriceInclVAT := 0;
      IF "Installment Amount" <> 0 THEN
        InvPriceInclVAT := ROUND("Invoiced Price" * "Installment Amount Incl. VAT"/"Installment Amount",0.01);
      EXIT(InvPriceInclVAT);
    END;

    PROCEDURE RefreshAmounts@1100530000();
    BEGIN
      //Call 23226
      CALCFIELDS("Invoiced Price","Invoice in Process", "Credit Memo in Process");
      CALCFIELDS("Invoiced Price (LCY)","Invoice in Process (LCY)", "Credit Memo in Process (LCY)");
      CALCFIELDS("Document (in Process)","Document (Invoiced)");  //db, 08-10-13
    END;

    PROCEDURE SetProjectFilterGroup@1210190002(FilterGroup@1210190000 : Integer);
    BEGIN
      //*32118
      ProjectFilterGroup := FilterGroup;
    END;

    PROCEDURE GetContractAmount@1210190000() : Decimal;
    BEGIN
      IF "Plot No." <> '' THEN BEGIN
        PlotRec.GET("Project No.", "Plot No.");
        EXIT(PlotRec."Building Price" + PlotRec."Additional Costs");
      END;

      IF "Extension Contract" <> '' THEN BEGIN
        ExtensionRec.GET("Project No.", "Extension Contract");
        EXIT(ExtensionRec."Contract Amount");
      END;

      IF ProjPrincipalRec.GET("Project No.", Principal) THEN
        EXIT(ProjPrincipalRec."Contract Amount")
      ELSE
        EXIT(0);
    END;

    LOCAL PROCEDURE InstallmentAmountOnAfterValida@19078325();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ProjPrincipalRecWKAPeriodOnAft@19045242();
    BEGIN
      ProjPrincipalRec.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE InvoiceinProcessOnDeactivate@19030728();
    BEGIN
      //Call 23226
      CALCFIELDS("Invoiced Price","Invoice in Process");
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE CreditMemoinProcessOnDeactivat@19056442();
    BEGIN
      //Call 23226
      CALCFIELDS("Invoiced Price","Credit Memo in Process");
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE VATAmountLongLeaseOnBeforeInpu@19055514();
    BEGIN
      //**4PS.n
      "VAT Amount Long LeaseEditable" := (ProjRec."Long Lease" AND VatPostingSetup.Manually AND ("Installment No." = '0'));
    END;

    LOCAL PROCEDURE InvoiceVATAmountLongLeaseOnBef@19022695();
    BEGIN
      //**4PS.n
      "VAT Amount Long LeaseEditable" := (ProjRec."Long Lease" AND VatPostingSetup.Manually AND ("Installment No." = '0'));
    END;

    PROCEDURE SetProject@1100528700(NewProjectNo@1100528700 : Code[20]);
    BEGIN
      ProjectNo := NewProjectNo;
      FILTERGROUP(2);
      SETRANGE("Project No.", ProjectNo);
      FILTERGROUP(0);
    END;

    LOCAL PROCEDURE UpdateEditable@1100528702();
    BEGIN
      IF ProjectNo <> '' THEN
        ProjectNoEditable := FALSE;
    END;

    LOCAL PROCEDURE GetProjectData@1100527450();
    BEGIN
      IF "Project No." <> ProjRec."No." THEN
        IF NOT ProjRec.GET("Project No.") THEN
          CLEAR(ProjRec)
        ELSE
          ProjRec.CALCFIELDS("Name Project Manager");
    END;

    BEGIN
    {
      SESB.I022 Final Instalment
         KD 17.07.2013 Control "Withheld Amount" added
         KD 17.07.2013 Control "Withheld Amount (LCY)" added
         KD 06.08.2013 Trigger ResetProjInstallForCalcTotals changed
         KD 06.08.2013 Trigger CalculateTotals changed

      IME-065, translation SVE  Group <Control1100409010> Kontraktsbelopp
      ITERO.DJ/DL, 140317, ENH015, new function to 'Recalculate withheld amount' called from Chargeable
      ITERO.DJ 140428, IME134 check for method last installment

      ITERO.PR RFC-013-2 New Page Action - Sales Invoice List - Proforma Invoice
      160315 ITERO.LP NAVSE Disabled code in Chargeable - OnValidate.
      160316 ITERO.LP NAVSE New fields: "Amount to Invoice", "Withheld Amt. (In Process)", "Withheld Amt. (Invoiced)"
      160427 ITERO.SB RAD039fix Added field "Withheld Amt. (Credit)"
      160718 ITERO.SB RAD-024 Added action for calculation of final installment (from project principal)
      180108 ITERO.SB RFC-1151 Added action, Page Sales Credit Memos
      190115 ITERO.SB RFC-1055 New field Invoiced Amount (Internal) + Withheld Amount (Internal)
      190326 ORANGO.DL BYGG002 ProjectInstallment, FB by year, new pagelink
    }
    END.
  }
}

