OBJECT Page 7507 Filter Items - AssistEdit
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Specify Filter Value;
               NOR=Angi filterverdi;
               SVE=Ange filterv„rde];
    SourceTable=Table7500;
    PageType=StandardDialog;
    OnAfterGetCurrRecord=BEGIN
                           UpdateGroupVisiblity;
                         END;

  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 14  ;1   ;Group     ;
                GroupType=Group }

    { 2   ;2   ;Group     ;
                Visible=TextGroupVisible;
                GroupType=Group }

    { 4   ;3   ;Field     ;
                Name=TextConditions;
                CaptionML=[ENU=Condition;
                           NOR=Betingelse;
                           SVE=Villkor];
                ToolTipML=[ENU="Specifies the condition for the filter value. Example: To specify that the value for a Material Description attribute must start with blue, fill the fields as follows: Condition field = Starts With. Value field = blue.";
                           NOR="Angir betingelsen for filterverdien. Eksempel: Hvis du vil angi at verdien for attributtet av typen Materialbeskrivelse m† starte med bl†tt, fyller du ut alle feltene p† f›lgende m†te: Feltet Betingelse = Starter med. Feltet Verdi = Bl†tt.";
                           SVE="Anger villkoret f”r filterv„rdet. Exempel: Om du vill ange att v„rdet p† attributet Materialbeskrivning m†ste b”rja med bl†, fyller du i f„lten s† h„r: Villkorsf„lt = B”rjar med. V„rdef„lt = bl†."];
                OptionCaptionML=[ENU=Contains,Starts With,Ends With,Exact Match;
                                 NOR=Inneholder,Starter med,Slutter med,N›yaktig treff;
                                 SVE=Inneh†ller,B”rjar med,Slutar med,Identiskt];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TextConditions }

    { 3   ;3   ;Field     ;
                Name=TextValue;
                CaptionML=[ENU=Value;
                           NOR=Verdi;
                           SVE=V„rde];
                ToolTipML=[ENU=Specifies the filter value that the condition applies to.;
                           NOR=Angir filterverdien som betingelsen gjelder for.;
                           SVE=Anger filterv„rdet som villkoret till„mpas p†.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TextValue }

    { 9   ;2   ;Group     ;
                Visible=NumericGroupVisible;
                GroupType=Group }

    { 11  ;3   ;Field     ;
                Name=NumericConditions;
                CaptionML=[ENU=Condition;
                           NOR=Betingelse;
                           SVE=Villkor];
                ToolTipML=[ENU="Specifies the condition for the filter value. Example: To specify that the value for a Quantity attribute must be higher than 10, fill the fields as follows: Condition field > Greater. Value field = 10.";
                           NOR="Angir betingelsen for filterverdien. Eksempel: Hvis du vil angi at verdien for attributtet av typen Antall v‘re h›yere enn 10, fyller du ut alle feltene p† f›lgende m†te: Feltet Betingelse > St›rre enn. Feltet Verdi = 10.";
                           SVE="Anger villkoret f”r filterv„rdet. Exempel: Om du vill ange att v„rdet p† attributet Antal m†ste vara h”gre „n 10 fyller du i f„lten s† h„r: Villkorsf„lt > St”rre. V„rdef„lt = 10."];
                OptionCaptionML=[ENU="=  - Equals,..  - Range,<  - Less,<= - Less or Equal,>  - Greater,>= - Greater or Equal";
                                 NOR="=  - Er lik,..  - Omr†de,<  - Mindre enn,<= - Mindre enn eller Er lik,>  - St›rre enn,>= - St›rre enn eller Er lik";
                                 SVE="=  - Lika med,..  - Intervall,<  - Mindre „n,<= - Mindre „n eller lika med,>  - St”rre „n,>= - St”rre „n eller lika med"];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NumericConditions;
                OnValidate=BEGIN
                             UpdateGroupVisiblity;
                           END;
                            }

    { 10  ;3   ;Field     ;
                Name=NumericValue;
                CaptionML=[ENU=Value;
                           NOR=Verdi;
                           SVE=V„rde];
                ToolTipML=[ENU=Specifies the filter value that the condition applies to.;
                           NOR=Angir filterverdien som betingelsen gjelder for.;
                           SVE=Anger filterv„rdet som villkoret till„mpas p†.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NumericValue;
                OnValidate=BEGIN
                             ValidateValueIsNumeric(NumericValue);
                           END;
                            }

    { 12  ;3   ;Group     ;
                Visible=NumericGroupMaxValueVisible;
                GroupType=Group }

    { 13  ;4   ;Field     ;
                Name=MaxNumericValue;
                CaptionML=[ENU=To Value;
                           NOR=Til verdi;
                           SVE=Till v„rde];
                ToolTipML=[ENU=Specifies the end value in the range.;
                           NOR=Angir sluttverdien i omr†det.;
                           SVE=Anger slutv„rdet i intervallet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MaxNumericValue;
                OnValidate=BEGIN
                             ValidateValueIsNumeric(MaxNumericValue);
                           END;
                            }

  }
  CODE
  {
    VAR
      TextValue@1001 : Text[240];
      TextConditions@1004 : 'Contains,Starts With,Ends With,Exact Match';
      NumericConditions@1003 : '=  - Equals,..  - Range,<  - Less,<= - Less or Equal,>  - Greater,>= - Greater or Equal';
      NumericValue@1006 : Text;
      MaxNumericValue@1007 : Text;
      NumericGroupVisible@1009 : Boolean;
      NumericGroupMaxValueVisible@1012 : Boolean;
      TextGroupVisible@1010 : Boolean;

    LOCAL PROCEDURE UpdateGroupVisiblity@31();
    BEGIN
      TextGroupVisible := Type = Type::Text;
      NumericGroupVisible := Type IN [Type::Decimal,Type::Integer];
      NumericGroupMaxValueVisible := NumericGroupVisible AND (NumericConditions = NumericConditions::"..  - Range")
    END;

    LOCAL PROCEDURE ValidateValueIsNumeric@1(TextValue@1000 : Text);
    VAR
      ValidDecimal@1002 : Decimal;
      ValidInteger@1001 : Integer;
    BEGIN
      IF Type = Type::Decimal THEN
        EVALUATE(ValidDecimal,TextValue);

      IF Type = Type::Integer THEN
        EVALUATE(ValidInteger,TextValue);
    END;

    [External]
    PROCEDURE LookupOptionValue@5(PreviousValue@1004 : Text) : Text;
    VAR
      ItemAttributeValue@1002 : Record 7501;
      SelectedItemAttributeValue@1001 : Record 7501;
      SelectItemAttributeValue@1000 : Page 7508;
      OptionFilter@1003 : Text;
    BEGIN
      ItemAttributeValue.SETRANGE("Attribute ID",ID);
      SelectItemAttributeValue.SETTABLEVIEW(ItemAttributeValue);
      // SelectItemAttributeValue.LOOKUPMODE(TRUE);
      SelectItemAttributeValue.EDITABLE(FALSE);

      IF NOT (SelectItemAttributeValue.RUNMODAL IN [ACTION::OK,ACTION::LookupOK]) THEN
        EXIT(PreviousValue);

      OptionFilter := '';
      SelectItemAttributeValue.GetSelectedValue(SelectedItemAttributeValue);
      IF SelectedItemAttributeValue.FINDSET THEN BEGIN
        REPEAT
          IF SelectedItemAttributeValue.Value <> '' THEN
            OptionFilter := STRSUBSTNO('%1|%2',SelectedItemAttributeValue.Value,OptionFilter);
        UNTIL SelectedItemAttributeValue.NEXT = 0;
        OptionFilter := COPYSTR(OptionFilter,1,STRLEN(OptionFilter) - 1);
      END;

      EXIT(OptionFilter);
    END;

    [External]
    PROCEDURE GenerateFilter@2() FilterText : Text;
    BEGIN
      CASE Type OF
        Type::Decimal,Type::Integer:
          BEGIN
            IF NumericValue = '' THEN
              EXIT('');

            IF NumericConditions = NumericConditions::"..  - Range" THEN
              FilterText := STRSUBSTNO('%1..%2',NumericValue,MaxNumericValue)
            ELSE
              FilterText := STRSUBSTNO('%1%2',DELCHR(COPYSTR(FORMAT(NumericConditions),1,2),'=',' '),NumericValue);
          END;
        Type::Text:
          BEGIN
            IF TextValue = '' THEN
              EXIT('');

            CASE TextConditions OF
              TextConditions::"Starts With":
                FilterText := STRSUBSTNO('@%1*',TextValue);
              TextConditions::"Ends With":
                FilterText := STRSUBSTNO('@*%1',TextValue);
              TextConditions::Contains:
                FilterText := STRSUBSTNO('@*%1*',TextValue);
              TextConditions::"Exact Match":
                FilterText := STRSUBSTNO('''%1''',TextValue);
            END;
          END;
      END;
    END;

    BEGIN
    END.
  }
}

