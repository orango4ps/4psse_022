OBJECT Report 11012783 Create Maint. Prop. SC Arr.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Wartungsvorschlag Servicevertrag-Arr. erstellen;
               ENU=Create Maintenance Proposal Service Contract Arr.;
               NLD=Onderhoudsvoorstel servicecontractafspraken aanmaken;
               NOR=Opprett vedlikeholdsforslag, servicekontraktarr.];
    ProcessingOnly=Yes;
    OnPostReport=BEGIN
                   IF ProposalCode <> '' THEN
                     MESSAGE(Text000, ProposalCode)
                   ELSE
                     MESSAGE(Text001);
                 END;

  }
  DATASET
  {
    { 8950;    ;DataItem;                    ;
               DataItemTable=Table11071705;
               DataItemTableView=SORTING(Service Contract No.,Object No.,Maintenance Scheme,Line No.);
               OnPreDataItem=VAR
                               MaintenanceManagementCU@1100528600 : Codeunit 11012829;
                             BEGIN
                               ProposalCode := MaintenanceManagementCU.CreateMaintPropFromContrArrangements("Service Contract Arrangement", ClusterFilter, ClusterSeqn, MaxNoOfWorkingHours);
                               CurrReport.BREAK;
                             END;
                              }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100528606;;Container;
                  ContainerType=ContentArea }

      { 1100528605;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100528603;2;Field  ;
                  CaptionML=[DEU=Nach Cluster-Sequenznr.;
                             ENU=By Cluster Seq. No.;
                             NLD=O.b.v. clustervolgnr.;
                             NOR=Av klyngesekvensnr];
                  SourceExpr=UseClusterSeqn;
                  OnValidate=BEGIN
                               RequestOptionsPage.UPDATE;
                             END;
                              }

      { 1100528602;2;Field  ;
                  CaptionML=[DEU=Vertragsnr.;
                             ENU=Contract No.;
                             NLD=Contractnr.;
                             NOR=Kontraktsnr;
                             SVE=Kontraktsnr];
                  SourceExpr=ContractFilter;
                  TableRelation=Service-Contract.No.;
                  Enabled=UseClusterSeqn;
                  OnValidate=BEGIN
                               IF NOT UseClusterSeqn THEN BEGIN
                                 ClusterFilter := '';
                                 ClusterSeqn := 0;
                               END;
                             END;
                              }

      { 1100528601;2;Field  ;
                  CaptionML=[DEU=Cluster-Filter;
                             ENU=Cluster Filter;
                             NLD=Clusterfilter;
                             NOR=Klyngefilter];
                  SourceExpr=ClusterFilter;
                  Enabled=UseClusterSeqn;
                  OnValidate=VAR
                               ServiceCluster@1100525000 : Record 11071742;
                               ServiceContract@1100528600 : Record 11012812;
                             BEGIN
                               IF (ClusterFilter <> '') AND UseClusterSeqn THEN BEGIN
                                 IF NOT ServiceContract.GET(ContractFilter) THEN
                                   ServiceContract.INIT;
                                 IF ServiceContract."Use Contract Clusters" THEN
                                   ServiceCluster.GET(ServiceCluster.Type::Contract, ContractFilter, ServiceCluster."Source Type"::" ", ClusterFilter)
                                 ELSE
                                   ServiceCluster.GET(ServiceCluster.Type::" ", '', ServiceCluster."Source Type"::" ", ClusterFilter);
                               END;
                               ClusterSeqn := 0;
                             END;

                  OnLookup=VAR
                             ServiceCluster@1100525000 : Record 11071742;
                             ServiceContract@1100528601 : Record 11012812;
                           BEGIN
                             IF UseClusterSeqn THEN BEGIN
                               IF NOT ServiceContract.GET(ContractFilter) THEN
                                 ServiceContract.INIT;
                               IF ServiceContract."Use Contract Clusters" THEN BEGIN
                                 ServiceCluster.SETRANGE(Type, ServiceCluster.Type::Contract);
                                 ServiceCluster.SETFILTER("Type Code", ContractFilter);
                               END ELSE BEGIN
                                 ServiceCluster.SETRANGE(Type, ServiceCluster.Type::" ");
                                 ServiceCluster.SETRANGE("Type Code", '');
                               END;
                               ServiceCluster.SETRANGE("Source Type", ServiceCluster."Source Type"::" ");
                               IF PAGE.RUNMODAL(0, ServiceCluster) = ACTION::LookupOK THEN BEGIN
                                 ClusterFilter := ServiceCluster.Code;
                                 ClusterSeqn := 0;
                               END;
                             END;
                           END;
                            }

      { 1100528600;2;Field  ;
                  CaptionML=[DEU=Cluster-Sequ.;
                             ENU=Cluster Seqn.;
                             NLD=Clustervolgnr.;
                             NOR=Klyngesekvens];
                  SourceExpr=ClusterSeqn;
                  Enabled=UseClusterSeqn;
                  OnValidate=VAR
                               ServiceClusterSeq@1100525000 : Record 11071966;
                               ServiceContract@1100528600 : Record 11012812;
                             BEGIN
                               IF UseClusterSeqn THEN BEGIN
                                 IF NOT ServiceContract.GET(ContractFilter) THEN
                                   ServiceContract.INIT;
                                 IF ServiceContract."Use Contract Clusters" THEN
                                   ServiceClusterSeq.GET(ServiceClusterSeq.Type::Contract, ContractFilter, ServiceClusterSeq."Source Type"::" ", ClusterFilter, ClusterSeqn)
                                 ELSE
                                   ServiceClusterSeq.GET(ServiceClusterSeq.Type::" ", '', ServiceClusterSeq."Source Type"::" ", ClusterFilter, ClusterSeqn);
                               END;
                             END;

                  OnLookup=VAR
                             ServiceClusterSeq@1100525000 : Record 11071966;
                             ServiceContract@1100528601 : Record 11012812;
                           BEGIN
                             IF UseClusterSeqn THEN BEGIN
                               IF NOT ServiceContract.GET(ContractFilter) THEN
                                 ServiceContract.INIT;
                               IF ServiceContract."Use Contract Clusters" THEN BEGIN
                                 ServiceClusterSeq.SETRANGE(Type, ServiceClusterSeq.Type::Contract);
                                 ServiceClusterSeq.SETFILTER("Type Code", ContractFilter);
                               END ELSE BEGIN
                                 ServiceClusterSeq.SETRANGE(Type, ServiceClusterSeq.Type::" ");
                                 ServiceClusterSeq.SETFILTER("Type Code", '');
                               END;
                               ServiceClusterSeq.SETRANGE("Cluster Code", ClusterFilter);
                               ServiceClusterSeq.SETRANGE("Source Type", ServiceClusterSeq."Source Type"::" ");
                               IF PAGE.RUNMODAL(0, ServiceClusterSeq) = ACTION::LookupOK THEN
                                 ClusterSeqn := ServiceClusterSeq."Seq. No.";
                             END;
                           END;
                            }

      { 1100529601;2;Field  ;
                  CaptionML=[DEU=Maximale Anzahl von Arbeitsstunden;
                             ENU=Maximum Number of Working Hours;
                             NLD=Maximale aantal werkuren];
                  SourceExpr=MaxNoOfWorkingHours;
                  MinValue=0 }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ContractFilter@1100528604 : Text[250];
      ClusterFilter@1100528602 : Code[20];
      ClusterSeqn@1100528601 : Integer;
      ProposalCode@1100528600 : Code[20];
      UseClusterSeqn@1100528603 : Boolean INDATASET;
      Text000@1100528606 : TextConst 'DEU=Wartung erstellt: %1;ENU=Maintenance Proposal created: %1;NLD=Onderhoud aangemaakt: %1;NOR=Vedlikeholdsforslag opprettet: %1;SVE=Underh†llsf”rslag skapades: %1';
      Text001@1100528605 : TextConst 'DEU=Keine Wartung erstellt;ENU=No Maintenance Proposal created;NLD=Geen onderhoud aangemaakt;NOR=Ingen vedlikeholdsforslag opprettet;SVE=Inget underh†llsf”rslag har skapats';
      MaxNoOfWorkingHours@1100529600 : Decimal;

    PROCEDURE SetContractFilter@1100528600(IContractFilter@1100528600 : Text[250]);
    BEGIN
      ContractFilter := IContractFilter;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

