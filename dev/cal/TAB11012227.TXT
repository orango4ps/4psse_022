OBJECT Table 11012227 Consent Rule
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Consent Level");
             END;

    OnModify=BEGIN
               TESTFIELD("Consent Level");
             END;

    OnDelete=VAR
               ConsentRuleFilter@1100528400 : Record 11229793;
             BEGIN
               ConsentRuleFilter.SETRANGE("Consent Rule Process", Process);
               ConsentRuleFilter.SETRANGE("Consent Rule Line No.", "Line No.");
               ConsentRuleFilter.DELETEALL;
             END;

    CaptionML=[ENU=Consent Rule;
               NOR=Attestregel;
               SVE=Godk„nnanderegel];
  }
  FIELDS
  {
    { 10  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 20  ;   ;Consent Level       ;Integer       ;CaptionML=[ENU=Consent Level;
                                                              NOR=Attestniv†;
                                                              SVE=Godk„nnandeniv†] }
    { 25  ;   ;Process             ;Option        ;OnValidate=BEGIN
                                                                IF NOT (Process IN [Process::"Purchase Order", Process::"Purchase Quote"]) THEN BEGIN
                                                                  "Budget Deviation Based On" := 0;
                                                                  "Min. Deviation From Budget %" := 0;
                                                                  "Min. Deviation From Budget" := 0;
                                                                END;
                                                                IF Process = Process::"Advice Order" THEN
                                                                  Level := Level::Line;
                                                                IF Process = Process::"Purchase Action" THEN BEGIN
                                                                  Level := Level::Header;
                                                                  Type := Type::Project;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Process;
                                                              NOR=Process;
                                                              SVE=Process];
                                                   OptionCaptionML=[ENU=Invoice,Invoice Approval,Advice Order,Purchase Order,Purchase Action,Purchase Quote,Credit Memo,Credit Memo Approval,Purchase Requisition,Not Posted Invoice,Not Posted Credit Memo;
                                                                    SVE=Faktura,Fakturagodk„nnande,Best„llningsunderlag,Ink”psorder,Ink”ps†tg„rd,Ink”psoffert,Kreditnota,Kreditnotagodk„nnande,Ink”psrekvisition,Ej bokf”rd faktura,Ej bokf”rd kredit];
                                                   OptionString=Invoice,Invoice Approval,Advice Order,Purchase Order,Purchase Action,Purchase Quote,Credit Memo,Credit Memo Approval,Purchase Requisition,Not Posted Invoice,Not Posted Credit Memo;
                                                   Description=Options must be the same in the table 11128892 Four-eyes Approval, field 10 Process }
    { 27  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF Type <> Type::Project THEN BEGIN
                                                                  "Project Role" := 0;
                                                                  IF Process = Process::"Purchase Action" THEN
                                                                    FIELDERROR(Process);
                                                                END;
                                                                IF Type <> Type::Service THEN
                                                                  "Service Role" := 0;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[ENU=,Project,Service,Other,All;
                                                                    NOR=,Prosjekt,Service,Annet,Alle;
                                                                    SVE=,Projekt,Service,™vrigt,Alla];
                                                   OptionString=,Project,Service,Other,All }
    { 30  ;   ;Level               ;Option        ;OnValidate=BEGIN
                                                                IF (Level = Level::Line) AND
                                                                   (Process = Process::"Purchase Action")
                                                                THEN FIELDERROR(Process);

                                                                IF (Level = Level::Header) AND
                                                                   (Process = Process::"Advice Order")
                                                                THEN FIELDERROR(Process);

                                                                IF Level = Level::Header THEN BEGIN
                                                                  "Min. Deviation From Rcpt. %" := 0;
                                                                  "Min. Deviation From Rcpt." := 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Level;
                                                              NOR=Niv†;
                                                              SVE=Niv†];
                                                   OptionCaptionML=[ENU=Header,Line;
                                                                    NOR=Tittel,Rad;
                                                                    SVE=Huvud,Rad];
                                                   OptionString=Header,Line }
    { 170 ;   ;Min. Deviation From Rcpt. %;Decimal;OnValidate=BEGIN
                                                                IF "Min. Deviation From Rcpt. %" <> 0 THEN
                                                                  TESTFIELD(Level, Level::Line);
                                                              END;

                                                   CaptionML=[ENU=Min. Deviation From Rcpt. %;
                                                              SVE=Min. avvikelse fr†n inleverans %] }
    { 180 ;   ;Min. Deviation From Rcpt.;Decimal  ;OnValidate=BEGIN
                                                                IF "Min. Deviation From Rcpt." <> 0 THEN
                                                                  TESTFIELD(Level, Level::Line);
                                                              END;

                                                   CaptionML=[ENU=Min. Deviation From Rcpt.;
                                                              SVE=Min. avvikelse fr†n inleverans] }
    { 185 ;   ;Consent Deviation if No Rcpt.;Boolean;
                                                   CaptionML=[ENU=Consent Deviation if No Rcpt.;
                                                              SVE=Godk„nn avvikelse om ingen inleverans] }
    { 190 ;   ;Minimum Amount      ;Decimal       ;CaptionML=[ENU=Minimum Amount;
                                                              NOR=Minimumsbel›p;
                                                              SVE=Minimibelopp] }
    { 200 ;   ;Maximum Amount      ;Decimal       ;CaptionML=[ENU=Maximum Amount;
                                                              NOR=Maksimalt bel›p;
                                                              SVE=Maximalt belopp] }
    { 210 ;   ;Approver            ;Code50        ;TableRelation=Approver."User ID";
                                                   OnValidate=BEGIN
                                                                IF Approver <> '' THEN BEGIN
                                                                  TESTFIELD("Project Role", 0);
                                                                  TESTFIELD("Service Role", 0);
                                                                  TESTFIELD("Approver Group Code", '');
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Approver;
                                                              NOR=Godkjenner;
                                                              SVE=Godk„nnare] }
    { 220 ;   ;Super Approver      ;Code50        ;TableRelation=IF (Process=FILTER(Advice Order|Purchase Order|Purchase Action|Purchase Quote|Purchase Requisition)) Approver."User ID" WHERE (Super Approver Purchase Orders=CONST(Yes))
                                                                 ELSE IF (Process=FILTER(Invoice|Invoice Approval|Credit Memo|Credit Memo Approval|Not Posted Invoice|Not Posted Credit Memo)) Approver."User ID" WHERE (Sup. Approver Purch. Invoices=CONST(Yes));
                                                   CaptionML=[ENU=Super Approver;
                                                              SVE="™verordnad godk„nnare "] }
    { 240 ;   ;Project Role        ;Option        ;OnValidate=BEGIN
                                                                IF "Project Role" > 0 THEN BEGIN
                                                                  TESTFIELD(Approver, '');
                                                                  TESTFIELD("Approver Group Code", '');
                                                                  TESTFIELD("Service Role", 0);
                                                                  TESTFIELD(Type, Type::Project);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Project Role;
                                                              NOR=Prosjektroll;
                                                              SVE=Projektroll];
                                                   OptionCaptionML=[ENU=" ,Project Manager,Project Engineer,Purchaser,Site Manager,Administrator,Estimator";
                                                                    SVE=" ,Platschef,Projektingenj”r,Ink”pare,Arbetschef,Administrat”r,Kalkylator"];
                                                   OptionString=[ ,Project Manager,Project Engineer,Purchaser,Site Manager,Administrator,Estimator];
                                                   BlankZero=Yes }
    { 245 ;   ;Service Role        ;Option        ;OnValidate=BEGIN
                                                                IF "Service Role" > 0 THEN BEGIN
                                                                  TESTFIELD(Approver, '');
                                                                  TESTFIELD("Approver Group Code", '');
                                                                  TESTFIELD("Project Role", 0);
                                                                  TESTFIELD(Type, Type::Service);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Service Role;
                                                              NOR=Serviceroll;
                                                              SVE=Serviceroll];
                                                   OptionCaptionML=[ENU=" ,Order Manager,Assigned to,Employee,Location Manager,Contract Manager";
                                                                    NOR=" ,Ordermanager,Tilornet,Anst„lld,Lokasjonsleder,Kontraktleder";
                                                                    SVE=" ,Orderchef,Tilldelat till,Anst„lld,Platschef,Kontrakthanterare"];
                                                   OptionString=[ ,Order Manager,Assigned to,Employee,Location Manager,Contract Manager];
                                                   BlankZero=Yes }
    { 250 ;   ;Filters Active      ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Consent Rule Filter" WHERE (Consent Rule Line No.=FIELD(Line No.),
                                                                                                  Consent Rule Process=FIELD(Process)));
                                                   CaptionML=[ENU=Filters Active;
                                                              NOR=Filtre aktiv;
                                                              SVE=Filter aktiv];
                                                   Editable=No }
    { 260 ;   ;Approver Group Code ;Code10        ;TableRelation="Approver Group".Code;
                                                   OnValidate=BEGIN
                                                                IF "Approver Group Code" <> '' THEN BEGIN
                                                                  TESTFIELD("Project Role", 0);
                                                                  TESTFIELD("Service Role", 0);
                                                                  TESTFIELD(Approver, '');
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Approver Group Code;
                                                              SVE=Godk„nnandegruppkod] }
    { 270 ;   ;No Consent          ;Boolean       ;CaptionML=[ENU=No Consent;
                                                              NOR=Ikke attest;
                                                              SVE=Ingen godk„nnande] }
    { 280 ;   ;Autom. Consent Own Lines;Boolean   ;CaptionML=[ENU=Autom. Consent Own Lines;
                                                              NOR=Autom. godkjenne egne linjer;
                                                              SVE=Autom. godk„nna egna rader] }
    { 290 ;   ;Min. Deviation From Budget %;Decimal;
                                                   OnValidate=BEGIN
                                                                IF ("Min. Deviation From Budget %" <> 0) AND
                                                                   NOT (Process IN [Process::"Purchase Order", Process::"Purchase Quote"])
                                                                THEN
                                                                  FIELDERROR(Process);
                                                              END;

                                                   CaptionML=[ENU=Min. Deviation From Budget %;
                                                              SVE=Min. avvikelse fr†n budget %] }
    { 300 ;   ;Min. Deviation From Budget;Decimal ;OnValidate=BEGIN
                                                                IF ("Min. Deviation From Budget" <> 0) AND
                                                                   NOT (Process IN [Process::"Purchase Order", Process::"Purchase Quote"])
                                                                THEN
                                                                  FIELDERROR(Process);
                                                              END;

                                                   CaptionML=[ENU=Min. Deviation From Budget;
                                                              SVE=Min. avvikelse fr†n budget] }
    { 310 ;   ;Consent Deviation if No Budget;Boolean;
                                                   CaptionML=[ENU=Consent Deviation if No Budget;
                                                              SVE=Godk„nn avvikelse om ingen budget] }
    { 320 ;   ;Budget Deviation Based On;Option   ;OnValidate=BEGIN
                                                                IF ("Budget Deviation Based On" <> 0) AND
                                                                   NOT (Process IN [Process::"Purchase Order", Process::"Purchase Quote"])
                                                                THEN
                                                                  FIELDERROR(Process);
                                                              END;

                                                   CaptionML=ENU=Budget Deviation Based On;
                                                   OptionCaptionML=[ENU=Purchase Action Budget,Purchase Requisition Budget;
                                                                    SVE=Ink”ps†tg„rdsbudget,Ink”psrekvisitionsbudget];
                                                   OptionString=Purchase Action Budget,Purchase Requisition Budget }
    { 330 ;   ;Approval Code Filter;Text250       ;TableRelation="Approval Code 4PS".Code;
                                                   OnValidate=BEGIN
                                                                IF "Service Role" > 0 THEN BEGIN
                                                                  TESTFIELD(Approver, '');
                                                                  TESTFIELD("Approver Group Code", '');
                                                                  TESTFIELD("Project Role", 0);
                                                                  TESTFIELD(Type, Type::Service);
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Approval Code Filter;
                                                              SVE=Godk„nnandekodfilter] }
  }
  KEYS
  {
    {    ;Process,Line No.                        ;Clustered=Yes }
    {    ;Consent Level                            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100529500 : TextConst 'ENU=You have selected multiple consent rules. Would you like to apply the new filters?';
      Text002@1100529501 : TextConst 'ENU=Select multiple consent rule rows to use this action.';

    PROCEDURE GetSuperApprover@1100528405() SuperApprover : Code[50];
    VAR
      PurchasesPayablesSetup@1100528402 : Record 312;
    BEGIN
      IF "Super Approver" <> '' THEN
        SuperApprover := "Super Approver"
      ELSE BEGIN
        PurchasesPayablesSetup.GET;
        IF Process IN [Process::"Advice Order", Process::"Purchase Order", Process::"Purchase Action", Process::"Purchase Quote", Process::"Purchase Requisition"] THEN BEGIN
          PurchasesPayablesSetup.TESTFIELD("Sup. Approver Den. Order Lines");
          SuperApprover := PurchasesPayablesSetup."Sup. Approver Den. Order Lines";
        END ELSE BEGIN
          PurchasesPayablesSetup.TESTFIELD("Sup. Approver Den. Inv. Lines");
          SuperApprover := PurchasesPayablesSetup."Sup. Approver Den. Inv. Lines";
        END;
      END;
    END;

    PROCEDURE ShowConsentRuleFilters@1100528401(ReadOnly@1100528400 : Boolean);
    VAR
      ConsentRuleFilter@1100528401 : Record 11229793;
      ConsentRuleFilters@1100528402 : Page 11126513;
    BEGIN
      ConsentRuleFilter.SETRANGE("Consent Rule Process", Process);
      ConsentRuleFilter.SETRANGE("Consent Rule Line No.", "Line No.");
      IF ReadOnly THEN
        ConsentRuleFilters.EDITABLE(FALSE);
      ConsentRuleFilters.SETTABLEVIEW(ConsentRuleFilter);
      ConsentRuleFilters.RUNMODAL;
    END;

    PROCEDURE ApplyMultipleConsentRuleFilters@1100529501(selectedLine@1100529500 : Integer;selectedProcess@1100529501 : Option;VAR SelectedConsentRules@1100529502 : Record 11012227);
    VAR
      ConsentRuleFilter@1100529503 : Record 11229793;
      TmpConsentRuleFilter@1100529600 : TEMPORARY Record 11229793;
    BEGIN
      IF SelectedConsentRules.COUNT > 1 THEN BEGIN
        ConsentRuleFilter.SETRANGE("Consent Rule Line No.", selectedLine);
        ConsentRuleFilter.SETRANGE("Consent Rule Process", selectedProcess);
        IF ConsentRuleFilter.FINDSET THEN
          REPEAT
            TmpConsentRuleFilter := ConsentRuleFilter;
            TmpConsentRuleFilter.Change := FALSE;
            TmpConsentRuleFilter.INSERT;
          UNTIL ConsentRuleFilter.NEXT = 0;
        TmpConsentRuleFilter.COPYFILTERS(ConsentRuleFilter);
        PAGE.RUNMODAL(PAGE::"Consent Rule Filters", TmpConsentRuleFilter);
      END ELSE
        ERROR(Text002);

      IF NOT CONFIRM(Text001) THEN
        EXIT;

      TmpConsentRuleFilter.SETRANGE(Remove, TRUE);
      IF TmpConsentRuleFilter.FINDSET THEN BEGIN
        ConsentRuleFilter.RESET;
        REPEAT
          IF SelectedConsentRules.FINDSET THEN
            REPEAT
              IF ConsentRuleFilter.GET(SelectedConsentRules.Process, SelectedConsentRules."Line No.",
                                        TmpConsentRuleFilter."Table No.", TmpConsentRuleFilter."Field No.",
                                        TmpConsentRuleFilter."Dimension Code")
              THEN
                ConsentRuleFilter.DELETE;
            UNTIL SelectedConsentRules.NEXT = 0;
        UNTIL TmpConsentRuleFilter.NEXT = 0;
      END;

      ConsentRuleFilter.RESET;
      TmpConsentRuleFilter.SETRANGE(Remove);
      TmpConsentRuleFilter.SETRANGE(Change, TRUE);
      IF TmpConsentRuleFilter.ISEMPTY THEN
        EXIT;
      TmpConsentRuleFilter.FINDSET;
      REPEAT
        IF SelectedConsentRules.FINDSET THEN
          REPEAT
            IF ConsentRuleFilter.GET(SelectedConsentRules.Process, SelectedConsentRules."Line No.",
                                     TmpConsentRuleFilter."Table No.", TmpConsentRuleFilter."Field No.",
                                     TmpConsentRuleFilter."Dimension Code")
            THEN BEGIN
              ConsentRuleFilter.Filter := TmpConsentRuleFilter.Filter;
              ConsentRuleFilter.MODIFY;
            END ELSE BEGIN
              ConsentRuleFilter.INIT;
              ConsentRuleFilter.TRANSFERFIELDS(TmpConsentRuleFilter);
              ConsentRuleFilter."Consent Rule Line No." := SelectedConsentRules."Line No.";
              ConsentRuleFilter.INSERT;
            END;
          UNTIL SelectedConsentRules.NEXT = 0;
      UNTIL TmpConsentRuleFilter.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

