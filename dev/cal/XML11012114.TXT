OBJECT XMLport 11012114 Imp. Plant No
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Imp. Plant No;
    DefaultFieldsValidation=No;
    PreserveWhiteSpace=Yes;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    XmlPortID := 11012114;
                    MainTableID := 11012552;
                    MainTableLookupPageID := 11012555;
                  END;

    OnPreXMLport=VAR
                   ConversionXMLPort4PS@1100527700 : Record 11020640;
                 BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     ConversionXMLPort4PS.UpdateFromXMLPort(XmlPortID,MainTableID,MainTableLookupPageID,0,FALSE,0);
                     COMMIT;
                     ERROR('');
                   END;

                   ConvMgt.DeleteConComment(XmlPortID);
                   ConvMgt.CreateConComment(XmlPortID,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XmlPortID,'Start');

                   CounterRentalTypeBothOnLoc := 0;
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XmlPortID,'Stop');
                    ConvMgt.CreateConComment(XmlPortID,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));

                    IF CounterRentalTypeBothOnLoc > 0 THEN
                      MESSAGE(Text002, CounterRentalTypeBothOnLoc);
                  END;

    Format=Variable Text;
    FieldDelimiter=<">;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{7B539476-C20A-46BC-A552-62FED55766AD}];  ;Root                ;Element ;Text     }

    { [{A667E51D-CE85-4A0D-946E-DE2CCC52ED51}];1 ;PlantNumber         ;Element ;Table   ;
                                                  SourceTable=Table11012552;
                                                  SourceTableView=SORTING(Field10,Field20);
                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 RateCode@1100409000 : Code[20];
                                                                               BEGIN
                                                                                 StripData;
                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Plant Number");

                                                                                 WITH "Plant Number" DO BEGIN
                                                                                   VALIDATE("Plant Type",A);
                                                                                   VALIDATE("No.",B);
                                                                                   INSERT(TRUE);
                                                                                   ImpLineCounter := ImpLineCounter + 1;

                                                                                   VALIDATE(Description,C);
                                                                                   CALCFIELDS(Bulk);
                                                                                   IF Bulk AND (LDec <> 0) THEN
                                                                                     VALIDATE(Quantity,LDec);
                                                                                   VALIDATE("Receipt Date",DDate);

                                                                                   IF E <> '' THEN
                                                                                     VALIDATE(Vendor,E);
                                                                                   IF F <> '' THEN
                                                                                     VALIDATE("Serial No.",F);
                                                                                   IF IDec <> 0 THEN
                                                                                     VALIDATE("Purchase Price",IDec);
                                                                                   IF K <> '' THEN
                                                                                     VALIDATE("Department Code",K);
                                                                                   IF N <> '' THEN
                                                                                     VALIDATE("Inspection No.",N);
                                                                                   IF O <> '' THEN
                                                                                     VALIDATE("Registration No.",O);

                                                                                   MODIFY(TRUE);

                                                                                   IF J <> '' THEN BEGIN
                                                                                     IF PlantLocRec.GET(J) THEN BEGIN
                                                                                       VALIDATE("Ship To Location",J);
                                                                                       MODIFY;
                                                                                       PostPlantNo.SetFromConvImport();
                                                                                       PostPlantNo.RUN("Plant Number");
                                                                                       PostPlantNo.GetRateCodeCreatedInventory(RateCode);
                                                                                       IF NOT PlantLocRec.Depot THEN BEGIN
                                                                                         PlantType.GET("Plant Type");
                                                                                         IF (MDate <> 0D) OR (PlantType."Rental Type" <> PlantType."Rental Type"::Rental) THEN BEGIN
                                                                                           PlantInventoryRec.SETRANGE(Removed,FALSE);
                                                                                           PlantInventoryRec.SETRANGE(Location,J);
                                                                                           PlantInventoryRec.SETRANGE("Plant Type","Plant Type");
                                                                                           PlantInventoryRec.SETRANGE("Plant No.","Stock No.");
                                                                                           PlantInventoryRec.SETRANGE("Rate Code",RateCode);
                                                                                           IF PlantInventoryRec.FINDLAST THEN BEGIN
                                                                                             IF MDate <> 0D THEN
                                                                                               PlantInventoryRec."Invoiced until" := MDate;
                                                                                             IF PlantType."Rental Type" <> PlantType."Rental Type"::Rental THEN BEGIN
                                                                                               PlantInventoryRec.Sold := TRUE;
                                                                                               IF PlantType."Rental Type" = PlantType."Rental Type"::Both THEN
                                                                                                 CounterRentalTypeBothOnLoc := CounterRentalTypeBothOnLoc + 1;
                                                                                             END;
                                                                                             PlantInventoryRec.MODIFY;
                                                                                           END;
                                                                                         END;
                                                                                       END;
                                                                                       IF NOT Bulk AND (GDate <> 0D) THEN BEGIN
                                                                                         PlantTypeInspRec.SETRANGE("Plant Type","Plant Type");
                                                                                         IF PlantTypeInspRec.FINDFIRST THEN BEGIN
                                                                                           InspectionRec.SETRANGE("Plant Type","Plant Type");
                                                                                           InspectionRec.SETRANGE("Plant No.","No.");
                                                                                           InspectionRec.SETRANGE("Inspection Type",PlantTypeInspRec."Inspection Type");
                                                                                           IF InspectionRec.FINDFIRST THEN BEGIN
                                                                                             InspectionRec.VALIDATE("Inspect before",GDate);
                                                                                             InspectionRec.VALIDATE("Inspected on",HDate);
                                                                                             InspectionRec.MODIFY(TRUE);
                                                                                           END;
                                                                                         END;
                                                                                       END;
                                                                                     END;
                                                                                   END;
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{3AC77EC7-9326-4B76-BA5F-EA1F70D4DA67}];2 ;A                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=20 }

    { [{1B889F9B-B9E2-4749-96B0-D22BA1117049}];2 ;B                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{D76B46B3-243B-4FF7-8D1D-C7B64CCFA492}];2 ;C                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{11AAC24C-6612-4FE6-9973-FE5EF2EF2C43}];2 ;D                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF D <> '' THEN
                                                                                    EVALUATE(DDate,D);
                                                                                END;

                                                  Width=50 }

    { [{F0633544-507F-4C5E-A35B-A0DD95F11E63}];2 ;E                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{98E7308F-19D5-4AF6-89FB-48DB78E52124}];2 ;F                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{23B2F6EB-78F9-48FB-BC70-858F6A53A74C}];2 ;G                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF G <> '' THEN
                                                                                    EVALUATE(GDate,G);
                                                                                END;

                                                  Width=50 }

    { [{007CC416-7129-43EA-90B0-193FFE5FCA68}];2 ;H                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF H <> '' THEN
                                                                                    EVALUATE(HDate,H);
                                                                                END;

                                                  Width=50 }

    { [{8F9BF873-E7E2-450A-B9C5-33703DAFE6BE}];2 ;I                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF I <> '' THEN
                                                                                    EVALUATE(IDec,I);
                                                                                END;

                                                  Width=50 }

    { [{F0890EEC-4257-4AFD-B88A-7442730D3214}];2 ;J                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{659442CF-3753-4298-9149-BE36CD412787}];2 ;K                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{575C2CA6-4C40-4A7F-A50C-2A6AD26B4DC0}];2 ;L                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF L <> '' THEN
                                                                                    EVALUATE(LDec,L);
                                                                                END;

                                                  Width=50 }

    { [{C820A9D4-97D5-4DE5-B9B8-37016A0E8AD8}];2 ;M                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF M <> '' THEN
                                                                                    EVALUATE(MDate,M);
                                                                                END;

                                                  Width=50 }

    { [{71D99CDA-4BD2-4C4F-864A-4C58FF70202A}];2 ;N                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{2B61BAAC-2E0C-4942-8622-A3E310053AB1}];2 ;O                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=ENU=<Imp. Plant No>;
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100525001;;Container;
                  Name=Dummy;
                  ContainerType=ContentArea }

    }
  }
  CODE
  {
    VAR
      PlantTypeInspRec@1100525028 : Record 11012563;
      InspectionRec@1100525027 : Record 11012564;
      PlantLocRec@1100525026 : Record 11012554;
      PlantInventoryRec@1100525025 : Record 11012555;
      PlantType@1100409000 : Record 11012551;
      XmlPortID@1100525022 : Integer;
      MainTableID@1100525021 : Integer;
      MainTableLookupPageID@1100527701 : Integer;
      CounterRentalTypeBothOnLoc@1100528000 : Integer;
      ImpLineCounter@1100525020 : Integer;
      ConversionFileFormat@1100525019 : Record 11020691;
      RunIsImportRunBln@1100525018 : Boolean;
      DDate@1100525014 : Date;
      GDate@1100525011 : Date;
      HDate@1100525010 : Date;
      IDec@1100525009 : Decimal;
      LDec@1100525006 : Decimal;
      MDate@1100525005 : Date;
      ConvMgt@1100525002 : Codeunit 11020212;
      PostPlantNo@1100525000 : Codeunit 11012550;
      Text001@1100525003 : TextConst 'ENU=In case of Bulk;SVE=Vid bulk';
      Text002@1100528001 : TextConst 'ENU=Remark: %1 plant inventory lines of S/BB plant with rental type ''Both'' are put on a location as ''Sold''. Take action as it should ''Rental''.';

    PROCEDURE StripData@1100485000();
    BEGIN
      B := DELCHR(B,'<>',' ');
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    VAR
      Inspection@1100529900 : Record 11012564;
      PlantInventory@1100529901 : Record 11012555;
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XmlPortID);
        InsertColumnLine(XmlPortID,'A',MainTableID,"Plant Number".FIELDNAME("Plant Type"),'Code20','');
        InsertColumnLine(XmlPortID,'B',MainTableID,"Plant Number".FIELDNAME("No."),'Code10','');
        InsertColumnLine(XmlPortID,'C',MainTableID,"Plant Number".FIELDNAME(Description),'Text50','');
        InsertColumnLine(XmlPortID,'D',MainTableID,"Plant Number".FIELDNAME("Receipt Date"),'Date','');
        InsertColumnLine(XmlPortID,'E',MainTableID,"Plant Number".FIELDNAME(Vendor),'Code20','');
        InsertColumnLine(XmlPortID,'F',MainTableID,"Plant Number".FIELDNAME("Serial No."),'Code20','');
        InsertColumnLine(XmlPortID,'G',11012564,Inspection.FIELDNAME("Inspect before"),'Date','');
        InsertColumnLine(XmlPortID,'H',11012564,Inspection.FIELDNAME("Inspected on"),'Date','');
        InsertColumnLine(XmlPortID,'I',MainTableID,"Plant Number".FIELDNAME("Purchase Price"),'Decimal','');
        InsertColumnLine(XmlPortID,'J',MainTableID,"Plant Number".FIELDNAME("Ship To Location"),'Code20','');
        InsertColumnLine(XmlPortID,'K',MainTableID,"Plant Number".FIELDNAME("Department Code"),'Code20','');
        InsertColumnLine(XmlPortID,'L',MainTableID,"Plant Number".FIELDNAME(Quantity),'Decimal',Text001);
        InsertColumnLine(XmlPortID,'M',11012555,PlantInventory.FIELDNAME("Invoiced until"),'Date','');
        InsertColumnLine(XmlPortID,'N',MainTableID,"Plant Number".FIELDNAME("Inspection No."),'Code30','');
        InsertColumnLine(XmlPortID,'O',MainTableID,"Plant Number".FIELDNAME("Registration No."),'Code20','');
      END;
    END;

    PROCEDURE ClearFields@1100529900();
    BEGIN
      CLEAR(PlantTypeInspRec);
      CLEAR(InspectionRec);
      CLEAR(PlantLocRec);
      CLEAR(PlantInventoryRec);
      CLEAR("Plant Number");

      A := '';
      B := '';
      C := '';
      E := '';
      F := '';
      H := '';
      I := '';
      J := '';
      K := '';
      L := '';
      M := '';
      N := '';
      O := '';
      DDate := 0D;
      GDate := 0D;
      HDate := 0D;
      IDec := 0;
      LDec := 0;
      MDate := 0D;
    END;

    BEGIN
    END.
  }
}

