OBJECT Table 1314 User Tours
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    ReplicateData=No;
    CaptionML=[ENU=User Tours;
               NOR=Brukerveiledninger];
  }
  FIELDS
  {
    { 1   ;   ;User ID             ;Text132       ;DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=[ENU=User ID;
                                                              NOR=Bruker-ID;
                                                              SVE=Anv„ndar-ID];
                                                   Editable=No }
    { 3   ;   ;Tour ID             ;Integer       ;CaptionML=[ENU=Tour ID;
                                                              NOR=Veilednings-ID;
                                                              SVE=ID f”r genomg†ng] }
    { 4   ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=[ENU=None,Started,Completed,Expired;
                                                                    NOR=Ingen,Startet,Fullf›rt,Utl›pt];
                                                   OptionString=None,Started,Completed,Expired }
    { 5   ;   ;Version             ;Text163       ;CaptionML=[ENU=Version;
                                                              NOR=Versjon;
                                                              SVE=Version] }
  }
  KEYS
  {
    {    ;User ID,Tour ID                         ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    LOCAL PROCEDURE GetStatus@3(TourID@1000 : Integer) : Integer;
    BEGIN
      IF NOT GET(USERID,TourID) THEN
        EXIT(Status::None);

      IF Version = GetVersion THEN
        EXIT(Status);

      EXIT(Status::Expired);
    END;

    LOCAL PROCEDURE SetStatus@8(TourID@1000 : Integer;NewStatus@1001 : Option);
    BEGIN
      IF NOT GET(USERID,TourID) THEN BEGIN
        INIT;
        "User ID" := USERID;
        "Tour ID" := TourID;
        INSERT;
      END;

      Status := NewStatus;
      Version := COPYSTR(GetVersion,1,MAXSTRLEN(Version));
      MODIFY;
    END;

    [External]
    PROCEDURE AlreadyCompleted@6(TourID@1000 : Integer) : Boolean;
    BEGIN
      EXIT(GetStatus(TourID) = Status::Completed);
    END;

    [External]
    PROCEDURE MarkAsCompleted@5(TourID@1000 : Integer);
    BEGIN
      SetStatus(TourID,Status::Completed);
    END;

    LOCAL PROCEDURE GetVersion@2() : Text;
    VAR
      ApplicationSystemConstants@1000 : Codeunit 9015;
    BEGIN
      EXIT(STRSUBSTNO('%1 (%2)',ApplicationSystemConstants.ApplicationVersion,ApplicationSystemConstants.ApplicationBuild));
    END;

    BEGIN
    END.
  }
}

