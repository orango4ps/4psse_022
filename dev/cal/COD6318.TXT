OBJECT Codeunit 6318 PBI Check License Task
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            IF NOT CheckForPowerBILicense THEN
              IF GETLASTERRORTEXT = PowerBIServiceMgt.GetUnauthorizedErrorText THEN BEGIN
                PowerBISessionManager.SetHasPowerBILicense(FALSE);
                PowerBIServiceMgt.LogException(ExceptionMessage,ExceptionDetails);
                EXIT;
              END;

            PowerBISessionManager.SetHasPowerBILicense(TRUE);
          END;

  }
  CODE
  {
    VAR
      PowerBIServiceMgt@1000 : Codeunit 6301;
      PowerBISessionManager@1004 : Codeunit 6317;
      ExceptionMessage@1002 : Text;
      ExceptionDetails@1001 : Text;
      NullGuidTxt@1003 : TextConst 'ENU=00000000-0000-0000-0000-000000000000;NOR=00000000-0000-0000-0000-000000000000;SVE=Power BI-tj„nster';

    [TryFunction]
    LOCAL PROCEDURE CheckForPowerBILicense@34();
    VAR
      Url@1002 : Text;
    BEGIN
      Url := PowerBIServiceMgt.GetReportsUrl;

      Url := Url + '/' + NullGuidTxt;

      // This will throw error message if unauthorized.
      PowerBIServiceMgt.GetData(ExceptionMessage,ExceptionDetails,Url);
    END;

    BEGIN
    {
      // Background session to check whether user has a power bi license or not.
    }
    END.
  }
}

