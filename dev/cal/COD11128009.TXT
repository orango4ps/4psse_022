OBJECT Codeunit 11128009 Create Mark On Atachment Meth
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [EventSubscriber(Table,112,OnAfterMergeMPDEmailAttachmentWhenPrint)]
    LOCAL PROCEDURE Table_SalesInvoiceHerader_OnAfterMergeMPDEmailAttachmentWhenPrint@1101285000(VAR SalesInvoiceHeader@1101285000 : Record 112;VAR TempEmailAttachment@1101285001 : TEMPORARY Record 11229294);
    BEGIN
      IF NOT TempEmailAttachment.FINDFIRST THEN
        EXIT;

      CreateMarkOnAttachment(TempEmailAttachment."Attachment Server File Path", SalesInvoiceHeader."No.",525, 30, 'Verdana', 7);
    END;

    PROCEDURE CreateMarkOnAttachment@1101285001(PDFFilename@1101285000 : Text;MarkText@1101285001 : Text;XPos@1101285002 : Integer;YPos@1101285003 : Integer;FontName@1101285005 : Text;FontSize@1101285006 : Integer);
    VAR
      Handled@1101285004 : Boolean;
    BEGIN
      OnBeforeCreateMarkOnAttachment(PDFFilename, MarkText, XPos, YPos, FontName, FontSize, Handled);
      IF Handled THEN
        EXIT;
      DoCreateMarkOnAttachment(PDFFilename, MarkText, XPos, YPos, FontName, FontSize);
      OnAfterCreateMarkOnAttachment(PDFFilename, MarkText, XPos, YPos, FontName, FontSize);
    END;

    LOCAL PROCEDURE DoCreateMarkOnAttachment@1101285004(PDFFilename@1101285012 : Text;MarkText@1101285011 : Text;XPos@1101285010 : Integer;YPos@1101285009 : Integer;FontName@1101285006 : Text;FontSize@1101285013 : Integer);
    VAR
      PdfInputDocument@1101285003 : DotNet "'PdfSharp, Version=1.32.2608.0, Culture=neutral, PublicKeyToken=f94615aa0424f9eb'.PdfSharp.Pdf.PdfDocument";
      PdfReader@1101285005 : DotNet "'PdfSharp, Version=1.32.2608.0, Culture=neutral, PublicKeyToken=f94615aa0424f9eb'.PdfSharp.Pdf.IO.PdfReader";
      PdfDocumentOpenMode@1101285004 : DotNet "'PdfSharp, Version=1.32.2608.0, Culture=neutral, PublicKeyToken=f94615aa0424f9eb'.PdfSharp.Pdf.IO.PdfDocumentOpenMode";
      XGraphics@1101285002 : DotNet "'PdfSharp, Version=1.32.2608.0, Culture=neutral, PublicKeyToken=f94615aa0424f9eb'.PdfSharp.Drawing.XGraphics";
      XFont@1101285001 : DotNet "'PdfSharp, Version=1.32.2608.0, Culture=neutral, PublicKeyToken=f94615aa0424f9eb'.PdfSharp.Drawing.XFont";
      XBrushes@1101285000 : DotNet "'PdfSharp, Version=1.32.2608.0, Culture=neutral, PublicKeyToken=f94615aa0424f9eb'.PdfSharp.Drawing.XBrushes";
      I@1101285007 : Integer;
      PdfPage@1101285008 : DotNet "'PdfSharp, Version=1.32.2608.0, Culture=neutral, PublicKeyToken=f94615aa0424f9eb'.PdfSharp.Pdf.PdfPage";
    BEGIN
      CLEAR(PdfInputDocument);
      PdfInputDocument := PdfReader.Open(PDFFilename, PdfDocumentOpenMode.Modify);

      FOR I := 1 TO PdfInputDocument.PageCount DO BEGIN
        CLEAR(PdfPage);
        PdfPage := PdfPage.PdfPage;

        PdfPage := PdfInputDocument.Pages.Item(I-1);
        XGraphics := XGraphics.FromPdfPage(PdfPage);
        XFont :=  XFont.XFont(FontName, FontSize);
        XGraphics.DrawString(MarkText, XFont, XBrushes.Black, XPos, YPos);
      END;
      PdfInputDocument.Save(PDFFilename);
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCreateMarkOnAttachment@1101285002(VAR PDFFilename@1101285003 : Text;VAR MarkText@1101285002 : Text;VAR XPos@1101285001 : Integer;VAR YPos@1101285000 : Integer;VAR FontName@1101285006 : Text;VAR FontSize@1101285005 : Integer;VAR Handled@1101285004 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCreateMarkOnAttachment@1101285003(VAR PDFFilename@1101285004 : Text;VAR MarkText@1101285003 : Text;VAR XPos@1101285002 : Integer;VAR YPos@1101285001 : Integer;VAR FontName@1101285005 : Text;VAR FontSize@1101285000 : Integer);
    BEGIN
    END;

    BEGIN
    {
      171124 ITERO.MH TS005
    }
    END.
  }
}

