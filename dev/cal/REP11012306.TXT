OBJECT Report 11012306 Calculate Item Cost Price
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Berechnen Artikeleinstandspreis;
               ENU=Calculate Item Cost Price;
               NLD=Berekenen artikelkostprijs;
               NOR=Beregn artikkelens selvkost;
               SVE=Ber„kna artikelns sj„lvkostnadspris];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 8129;    ;DataItem;                    ;
               DataItemTable=Table27;
               OnPreDataItem=BEGIN
                               Status.OPEN(Text001);

                               ErrorRec.SETRANGE("User ID", USERID);
                               ErrorRec.SETRANGE("Source Type", ErrorRec."Source Type"::Item);
                               ErrorRec.DELETEALL;
                             END;

               OnAfterGetRecord=BEGIN
                                  //call from item card:
                                  //CalculateStdCost.CalcItem("No.",TRUE);

                                  TestNoEntriesExist(FIELDCAPTION("Unit Cost"),SkipMess);  //db, 15-05-07

                                  //call from Revaluation Journal  (report 5899):
                                  Status.UPDATE(1, "No.");
                                  MainItem.SETRANGE("No.", "No.");

                                  CalculateStdCost.SetProperties(TODAY,TRUE,FALSE,TRUE,'',FALSE);
                                  CalculateStdCost.BatchProcess;
                                  CalculateStdCost.CalcItems(MainItem, NewStdCostItem);
                                  CLEAR(CalculateStdCost);

                                  //take over from codeunit 5812
                                  IF NewStdCostItem.FIND('-') THEN BEGIN
                                    currec := 0;
                                    maxrec := NewStdCostItem.COUNT;
                                    REPEAT
                                      currec := currec + 1;
                                      Status.UPDATE(2,ROUND(currec / maxrec * 10000,1));
                                      ItemCostMgt.UpdateStdCostShares(NewStdCostItem);
                                    UNTIL NewStdCostItem.NEXT = 0;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                Status.CLOSE;

                                IF ErrorRec.FIND('-') THEN BEGIN
                                  COMMIT;
                                  PAGE.RUNMODAL(PAGE::Errors, ErrorRec);
                                  ErrorRec.DELETEALL;
                                END;
                              END;

               ReqFilterFields=No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CalculateStdCost@1210190000 : Codeunit 5812;
      ItemCostMgt@1210190002 : Codeunit 5804;
      MainItem@1100485004 : Record 27;
      NewStdCostItem@1210190001 : TEMPORARY Record 27;
      Text001@1100485000 : TextConst 'DEU=Artikel     #1################# @2@@@@@@@@@@@@@;ENU=Item        #1################# @2@@@@@@@@@@@@@;NLD=Artikel     #1################# @2@@@@@@@@@@@@@;NOR=Artikkel        #1################# @2@@@@@@@@@@@@@;SVE=Artikel     #1################# @2@@@@@@@@@@@@@';
      ErrorRec@1100485005 : Record 11012051;
      currec@1100485001 : Integer;
      maxrec@1100485002 : Integer;
      Status@1100485003 : Dialog;
      SkipMess@1100485006 : Boolean;

    BEGIN
    {
      Checks for each Item if it contains a Bill of Materials (report 5899). Based on this a temporarily
      table will be filled (NewStdCostItem) of which the Cost Price will be calculated (codeunit 5812).

      db, 17-02-05:
      - Show progress of process (head item, percentage bill of material items)
      - filter on records to process, for the purpose of filling temporarily table

      db, 01-09-05:
      - Show errormessage as a result of status routing/productionlist in codeunit 5812
    }
    END.
  }
  RDLDATA
  {
  }
}

