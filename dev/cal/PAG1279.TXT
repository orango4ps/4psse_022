OBJECT Page 1279 Service Connections
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Service Connections;
               NOR=Tjenestetilkoblinger;
               SVE=Anslutningar till tj„nst];
    ApplicationArea=#Basic,#Suite;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table1400;
    PageType=List;
    UsageCategory=Lists;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 ReloadServiceConnections;
               END;

    OnAfterGetRecord=BEGIN
                       SetStyle;
                     END;

    OnAfterGetCurrRecord=VAR
                           RefreshPressed@1000 : Boolean;
                         BEGIN
                           RefreshPressed := CurrRecordNo = "No.";
                           IF RefreshPressed THEN
                             Refresh
                           ELSE
                             CurrRecordNo := "No.";
                           SetupActive := "Page ID" <> 0;
                           SetStyle;
                         END;

    ActionList=ACTIONS
    {
      { 6       ;    ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 5       ;1   ;Action    ;
                      Name=Setup;
                      ShortCutKey=Return;
                      CaptionML=[ENU=Setup;
                                 NOR=Oppsett;
                                 SVE=Konfiguration];
                      ToolTipML=[ENU=Get a connection to a service up and running or manage an connection that is already working.;
                                 NOR=F† en tilkobling til en tjeneste opp og kj›re, eller administrer en tilkobling som allerede fungerer.;
                                 SVE=F† ig†ng en anslutning till en tj„nst eller hantera en anslutning som redan fungerar.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=SetupActive;
                      Image=Setup;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 CallSetup;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the service. The description is based on the name of the setup page that opens when you choose the Setup.;
                           NOR=Angir tjenesten. Beskrivelsen er basert p† navnet p† oppsettssiden som †pnes n†r du velger oppsettet.;
                           SVE=Anger tj„nsten. Beskrivningen baseras p† namnet p† inst„llningssidan som ”ppnas n„r du v„ljer Inst„llningar.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the web service. This is typically a URL.;
                           NOR=Angir navnet p† webtjenesten. Dette er vanligvis en URL-adresse.;
                           SVE=Anger namnet p† webbtj„nsten. Detta „r vanligtvis en webbadress.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Host Name";
                Visible=False }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the service is enabled or disabled.;
                           NOR=Angir om tjenesten er aktivert eller deaktivert.;
                           SVE=Anger om tj„nsten „r aktiverad eller inaktiverad.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Status;
                StyleExpr=StyleExpression }

  }
  CODE
  {
    VAR
      SetupActive@1000 : Boolean;
      StyleExpression@1001 : Text;
      CurrRecordNo@1002 : Text;

    LOCAL PROCEDURE CallSetup@1();
    VAR
      AssistedSetup@1004 : Record 1803;
      RecordRefVariant@1001 : Variant;
      RecordRef@1000 : RecordRef;
      DummyRecordID@1002 : RecordID;
      CurrentRecordId@1003 : RecordID;
    BEGIN
      IF NOT SetupActive THEN
        EXIT;
      IF ((Status = Status::Error) OR (Status = Status::Disabled)) AND
         ("Assisted Setup Page ID" > 0) AND
         AssistedSetup.GET("Assisted Setup Page ID") AND
         (AssistedSetup.Status = AssistedSetup.Status::"Not Completed") AND
         AssistedSetup.Visible
      THEN
        AssistedSetup.Run
      ELSE BEGIN
        CurrentRecordId := "Record ID";
        IF CurrentRecordId = DummyRecordID THEN
          PAGE.RUNMODAL("Page ID")
        ELSE BEGIN
          RecordRef.GET("Record ID");
          RecordRefVariant := RecordRef;
          PAGE.RUNMODAL("Page ID",RecordRefVariant);
        END;
      END;
      ReloadServiceConnections;
      IF GET(xRec."No.") THEN;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SetStyle@3();
    BEGIN
      CASE Status OF
        Status::Disabled:
          StyleExpression := 'Standard';
        Status::Connected,Status::Enabled:
          StyleExpression := 'Favorable';
        Status::Error:
          StyleExpression := 'Unfavorable';
      END
    END;

    LOCAL PROCEDURE Refresh@5();
    BEGIN
      ReloadServiceConnections;
      CurrRecordNo := '';
      IF GET(xRec."No.") THEN;
      CurrPage.ACTIVATE(TRUE);
    END;

    LOCAL PROCEDURE ReloadServiceConnections@4();
    BEGIN
      DELETEALL;
      OnRegisterServiceConnection(Rec);
    END;

    BEGIN
    END.
  }
}

