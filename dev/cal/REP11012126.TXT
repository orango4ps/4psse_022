OBJECT Report 11012126 Copy Item Sls Price Cust
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Kopieren Sie Artikelverkaufspreise von Debitor zu Debitor;
               ENU=Copy Item Sales Prices from Customer to Customer;
               NLD=Kopieer artikel verkoopprijzen van klant naar klant;
               NOR=Kopier artikkelsalgspriser fra kunde til kunde;
               SVE=Kopiera artikelf”rs„ljningspriser fr†n kund till kund];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 7331;    ;DataItem;                    ;
               DataItemTable=Table7002;
               OnPreDataItem=BEGIN
                               IF ToCustCde = '' THEN
                                 ERROR(text000)
                               ELSE BEGIN
                                 CustomerRec.GET(ToCustCde);
                                 CustomerRec."Cost Plus Sales Prices" := TRUE;
                                 CustomerRec."Cost Plus Sales Prices From" := TODAY;
                                 CustomerRec.MODIFY;
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  CLEAR(SalesPriceItemCust);
                                  SalesPriceItemCust.SETRANGE("Item No.","Sales Price"."Item No.");
                                  SalesPriceItemCust.SETRANGE("Sales Type",SalesPriceItemCust."Sales Type"::Customer);
                                  SalesPriceItemCust.SETRANGE("Sales Code",ToCustCde);
                                  SalesPriceItemCust.SETRANGE("Starting Date","Sales Price"."Starting Date");
                                  IF NOT SalesPriceItemCust.FIND('-') THEN BEGIN
                                    SalesPriceItemCust.COPY("Sales Price");
                                    SalesPriceItemCust."Sales Code" := ToCustCde;
                                    SalesPriceItemCust.INSERT;
                                  END;
                                END;

               ReqFilterFields=Item No.,Sales Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1210190000;2;Field  ;
                  CaptionML=[DEU=Zum Debitor;
                             ENU=To Customer;
                             NLD=Naar Klant;
                             NOR=Til kunde;
                             SVE=Tillkundnr];
                  SourceExpr=ToCustCde;
                  OnLookup=BEGIN
                             //**4PS
                             CLEAR(CustomerListPage);
                             CustomerListPage.LOOKUPMODE(TRUE);
                             IF CustomerListPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               CustomerListPage.GETRECORD(CustomerRec);
                               ToCustCde := CustomerRec."No.";
                             END;
                             //CurrForm.UPDATE(TRUE);
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ToCustCde@1210190000 : Code[20];
      CustomerListPage@1210190001 : Page 22;
      CustomerRec@1210190002 : Record 18;
      text000@1210190003 : TextConst 'DEU=Geben Sie zuerst ''Zum Debitor'' auf Registerkarte ''Optionen'' ein.;ENU=Give To Customer in Option Tab;NLD="Geef eerst Naar Klant in op optie blad ";NOR=Angi til kunde p† alternativfanen;SVE=Ange till kund p† fliken Alternativ';
      SalesPriceItemCust@1210190004 : Record 7002;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

