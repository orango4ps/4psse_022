OBJECT Table 9500 Email Item
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Email Item;
               NOR=E-postelement];
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;GUID          ;CaptionML=[ENU=ID;
                                                              NOR=ID;
                                                              SVE=ID] }
    { 2   ;   ;From Name           ;Text100       ;CaptionML=[ENU=From Name;
                                                              NOR=Fra navn;
                                                              SVE=Fr†n namn] }
    { 3   ;   ;From Address        ;Text250       ;OnValidate=VAR
                                                                MailManagement@1000 : Codeunit 9520;
                                                              BEGIN
                                                                IF "From Address" <> '' THEN
                                                                  MailManagement.CheckValidEmailAddresses("From Address");
                                                              END;

                                                   CaptionML=[ENU=From Address;
                                                              NOR=Fra adresse;
                                                              SVE=Fr†n adress] }
    { 4   ;   ;Send to             ;Text250       ;OnValidate=BEGIN
                                                                IF "Send to" <> '' THEN
                                                                  CorrectAndValidateEmailList("Send to");
                                                              END;

                                                   CaptionML=[ENU=Send to;
                                                              NOR=Send til;
                                                              SVE=Skicka till] }
    { 5   ;   ;Send CC             ;Text250       ;OnValidate=BEGIN
                                                                IF "Send CC" <> '' THEN
                                                                  CorrectAndValidateEmailList("Send CC");
                                                              END;

                                                   CaptionML=[ENU=Send CC;
                                                              NOR=Send kopi] }
    { 6   ;   ;Send BCC            ;Text250       ;OnValidate=BEGIN
                                                                IF "Send BCC" <> '' THEN
                                                                  CorrectAndValidateEmailList("Send BCC");
                                                              END;

                                                   CaptionML=[ENU=Send BCC;
                                                              NOR=Send blindkopi] }
    { 7   ;   ;Subject             ;Text250       ;CaptionML=[ENU=Subject;
                                                              NOR=Emne;
                                                              SVE=Ang†ende] }
    { 8   ;   ;Body                ;BLOB          ;CaptionML=[ENU=Body;
                                                              NOR=Tekst;
                                                              SVE=text] }
    { 9   ;   ;Attachment File Path;Text250       ;CaptionML=[ENU=Attachment File Path;
                                                              NOR=Bane til vedleggsfil] }
    { 10  ;   ;Attachment Name     ;Text250       ;CaptionML=[ENU=Attachment Name;
                                                              NOR=Navn p† vedlegg;
                                                              SVE=Bilagenamn] }
    { 11  ;   ;Plaintext Formatted ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Plaintext Formatted" THEN
                                                                  VALIDATE("Body File Path",'')
                                                                ELSE
                                                                  SetBodyText('');
                                                              END;

                                                   CaptionML=[ENU=Plaintext Formatted;
                                                              NOR=Formatert i ren tekst] }
    { 12  ;   ;Body File Path      ;Text250       ;OnValidate=BEGIN
                                                                IF "Body File Path" <> '' THEN
                                                                  TESTFIELD("Plaintext Formatted",FALSE);
                                                              END;

                                                   CaptionML=[ENU=Body File Path;
                                                              NOR=Filbane for br›dtekst] }
    { 13  ;   ;Message Type        ;Option        ;CaptionML=[ENU=Message Type;
                                                              NOR=Meldingstype;
                                                              SVE=Meddelandetyp];
                                                   OptionCaptionML=[ENU=Custom Message,From Email Body Template;
                                                                    NOR=Egendefinert melding,Fra mal for br›dtekst i e-post];
                                                   OptionString=Custom Message,From Email Body Template }
    { 21  ;   ;Attachment File Path 2;Text250     ;CaptionML=[ENU=Attachment File Path 2;
                                                              NOR=Bane til vedleggsfil 2] }
    { 22  ;   ;Attachment Name 2   ;Text50        ;CaptionML=[ENU=Attachment Name 2;
                                                              NOR=Navn p† vedlegg 2] }
    { 23  ;   ;Attachment File Path 3;Text250     ;CaptionML=[ENU=Attachment File Path 3;
                                                              NOR=Bane til vedleggsfil 3] }
    { 24  ;   ;Attachment Name 3   ;Text50        ;CaptionML=[ENU=Attachment Name 3;
                                                              NOR=Navn p† vedlegg 3] }
    { 25  ;   ;Attachment File Path 4;Text250     ;CaptionML=[ENU=Attachment File Path 4;
                                                              NOR=Bane til vedleggsfil 4] }
    { 26  ;   ;Attachment Name 4   ;Text50        ;CaptionML=[ENU=Attachment Name 4;
                                                              NOR=Navn p† vedlegg 4] }
    { 27  ;   ;Attachment File Path 5;Text250     ;CaptionML=[ENU=Attachment File Path 5;
                                                              NOR=Bane til vedleggsfil 5] }
    { 28  ;   ;Attachment Name 5   ;Text50        ;CaptionML=[ENU=Attachment Name 5;
                                                              NOR=Navn p† vedlegg 5] }
    { 29  ;   ;Attachment File Path 6;Text250     ;CaptionML=[ENU=Attachment File Path 6;
                                                              NOR=Bane til vedleggsfil 6] }
    { 30  ;   ;Attachment Name 6   ;Text50        ;CaptionML=[ENU=Attachment Name 6;
                                                              NOR=Navn p† vedlegg 6] }
    { 31  ;   ;Attachment File Path 7;Text250     ;CaptionML=[ENU=Attachment File Path 7;
                                                              NOR=Bane til vedleggsfil 7] }
    { 32  ;   ;Attachment Name 7   ;Text50        ;CaptionML=[ENU=Attachment Name 7;
                                                              NOR=Navn p† vedlegg 7] }
    { 11012000;;Edit in Outlook    ;Boolean       ;CaptionML=[ENU=Edit in Outlook;
                                                              SVE=Redigera i Outlook] }
    { 11012010;;Storage Type OLD   ;Option        ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Storage Type OLD;
                                                   OptionCaptionML=ENU=Local,Azure File Storage,Sharepoint;
                                                   OptionString=Local,Azure File Storage,Sharepoint;
                                                   Editable=No }
    { 11012020;;Attachment File    ;BLOB          ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Attachment File;
                                                              SVE=Bifogad fil] }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      O365EmailSetup@1000 : Record 2118;
      TargetEmailAddressErr@1001 : TextConst 'ENU=The target email address has not been specified.;NOR=E-postadressen for m†l er ikke angitt.';
      TempEmailAttachment@1100528500 : TEMPORARY Record 11229294;

    [External]
    PROCEDURE Initialize@1();
    BEGIN
      ID := CREATEGUID;
    END;

    [External]
    PROCEDURE Send@2(HideMailDialog@1000 : Boolean) : Boolean;
    VAR
      MailManagement@1001 : Codeunit 9520;
    BEGIN
      OnBeforeSend(Rec,HideMailDialog,MailManagement);

      MailManagement.SetTempEmailAttachments(TempEmailAttachment); //**4PS.n

      MailManagement.SendMailOrDownload(Rec,HideMailDialog);
      //**4PS.sn
      IF ISTEMPORARY THEN
         MailManagement.GetTempEmailItem(Rec, TRUE);
      //**4PS.en
      EXIT(MailManagement.IsSent);
    END;

    [External]
    PROCEDURE SetBodyText@5(Value@1000 : Text);
    VAR
      DataStream@1001 : OutStream;
      BodyText@1002 : BigText;
    BEGIN
      CLEAR(Body);
      BodyText.ADDTEXT(Value);
      Body.CREATEOUTSTREAM(DataStream,TEXTENCODING::UTF8);
      BodyText.WRITE(DataStream);
    END;

    [Internal]
    PROCEDURE GetBodyText@3() Value : Text;
    VAR
      TempBlob@1005 : Record 99008535;
      FileManagement@1001 : Codeunit 419;
      DataStream@1004 : InStream;
      BlobInStream@1003 : InStream;
      BodyOutStream@1002 : OutStream;
      BodyText@1000 : BigText;
      IsHandled@1006 : Boolean;
    BEGIN
      // Note this is intended only to get the body in memory - not from the database.
      Value := '';

      IsHandled := FALSE;
      OnBeforeGetBodyText(Rec,Value,IsHandled);
      IF IsHandled THEN
        EXIT(Value);

      // If the body doesn't have a value, attempt to import the value from the file path, otherwise exit.
      IF NOT Body.HASVALUE THEN BEGIN
        IF ("Body File Path" <> '') AND FileManagement.ServerFileExists("Body File Path") THEN BEGIN
          TempBlob.INIT;
          FileManagement.BLOBImportFromServerFile(TempBlob,"Body File Path");
          TempBlob.Blob.CREATEINSTREAM(BlobInStream,TEXTENCODING::UTF8);
          Body.CREATEOUTSTREAM(BodyOutStream);
          COPYSTREAM(BodyOutStream,BlobInStream);
        END ELSE
          EXIT;
      END;

      IF "Plaintext Formatted" THEN BEGIN
        Body.CREATEINSTREAM(DataStream,TEXTENCODING::UTF8);
        BodyText.READ(DataStream);
        BodyText.GETSUBTEXT(Value,1);
      END ELSE BEGIN
        Body.CREATEINSTREAM(DataStream,TEXTENCODING::UTF8);
        DataStream.READ(Value);
      END;

      EXIT(Value);
    END;

    LOCAL PROCEDURE CorrectAndValidateEmailList@6(VAR EmailAddresses@1000 : Text[250]);
    VAR
      MailManagement@1001 : Codeunit 9520;
    BEGIN
      EmailAddresses := CONVERTSTR(EmailAddresses,',',';');
      EmailAddresses := DELCHR(EmailAddresses,'<>');
      MailManagement.CheckValidEmailAddresses(EmailAddresses);
    END;

    [External]
    PROCEDURE AddCcBcc@4();
    BEGIN
      "Send CC" := O365EmailSetup.GetCCAddressesFromO365EmailSetup;
      "Send BCC" := O365EmailSetup.GetBCCAddressesFromO365EmailSetup;
    END;

    [Internal]
    PROCEDURE AttachIncomingDocuments@7(SalesInvoiceNo@1001 : Code[20]);
    VAR
      SalesHeader@1000 : Record 36;
      SalesInvoiceHeader@1002 : Record 112;
      IncomingDocumentAttachment@1003 : Record 133;
      FileManagement@1006 : Codeunit 419;
      InStr@1007 : InStream;
      OutStr@1008 : OutStream;
      File@1009 : File;
      AttachmentCounter@1004 : Integer;
      MaxAttachmentNameLength@1012 : Integer;
      FilePath@1005 : Text[250];
      AttachmentName@1010 : Text[50];
      IsPostedDocument@1011 : Boolean;
    BEGIN
      IF SalesInvoiceNo = '' THEN
        EXIT;
      IsPostedDocument := TRUE;
      IF NOT SalesInvoiceHeader.GET(SalesInvoiceNo) THEN BEGIN
        SalesHeader.SETFILTER("Document Type",'%1|%2',SalesHeader."Document Type"::Quote,SalesHeader."Document Type"::Invoice);
        SalesHeader.SETRANGE("No.",SalesInvoiceNo);
        IF NOT SalesHeader.FINDFIRST THEN
          EXIT;
        IF SalesHeader."Incoming Document Entry No." = 0 THEN
          EXIT;
        IsPostedDocument := FALSE;
      END;

      IF IsPostedDocument THEN BEGIN
        IncomingDocumentAttachment.SETRANGE("Document No.",SalesInvoiceNo);
        IncomingDocumentAttachment.SETRANGE("Posting Date",SalesInvoiceHeader."Posting Date");
      END ELSE
        IncomingDocumentAttachment.SETRANGE("Incoming Document Entry No.",SalesHeader."Incoming Document Entry No.");

      OnAttachIncomingDocumentsOnAfterSetFilter(IncomingDocumentAttachment);

      IncomingDocumentAttachment.SETAUTOCALCFIELDS(Content);
      IF IncomingDocumentAttachment.FINDSET THEN
        REPEAT
          IF IncomingDocumentAttachment.Content.HASVALUE THEN BEGIN
            AttachmentCounter += 1;
            FilePath := COPYSTR(FileManagement.ServerTempFileName(IncomingDocumentAttachment."File Extension"),1,MAXSTRLEN(FilePath));
            File.CREATE(FilePath);
            File.CREATEOUTSTREAM(OutStr);
            IncomingDocumentAttachment.Content.CREATEINSTREAM(InStr);
            COPYSTREAM(OutStr,InStr);
            File.CLOSE;
            // To ensure that attachement file name has . followed by extension in the email item
            MaxAttachmentNameLength := MAXSTRLEN(AttachmentName) - STRLEN(IncomingDocumentAttachment."File Extension") - 1;
            AttachmentName := COPYSTR(IncomingDocumentAttachment.Name,1,MaxAttachmentNameLength);
            AttachmentName := STRSUBSTNO('%1.%2',AttachmentName,IncomingDocumentAttachment."File Extension");

            CASE AttachmentCounter OF
              1:
                BEGIN
                  "Attachment File Path 2" := FilePath;
                  "Attachment Name 2" := AttachmentName;
                END;
              2:
                BEGIN
                  "Attachment File Path 3" := FilePath;
                  "Attachment Name 3" := AttachmentName;
                END;
              3:
                BEGIN
                  "Attachment File Path 4" := FilePath;
                  "Attachment Name 4" := AttachmentName;
                END;
              4:
                BEGIN
                  "Attachment File Path 5" := FilePath;
                  "Attachment Name 5" := AttachmentName;
                END;
              5:
                BEGIN
                  "Attachment File Path 6" := FilePath;
                  "Attachment Name 6" := AttachmentName;
                END;
              6:
                BEGIN
                  "Attachment File Path 7" := FilePath;
                  "Attachment Name 7" := AttachmentName;
                END;
            END;
          END;
        UNTIL (AttachmentCounter = 6) OR (IncomingDocumentAttachment.NEXT = 0);
    END;

    PROCEDURE ValidateTarget@9();
    VAR
      ErrorMessageManagement@1000 : Codeunit 28;
    BEGIN
      IF ("Send to" = '') AND ("Send CC" = '') AND ("Send BCC" = '') THEN
        ErrorMessageManagement.LogSimpleErrorMessage(TargetEmailAddressErr);
    END;

    [Integration]
    LOCAL PROCEDURE OnAttachIncomingDocumentsOnAfterSetFilter@12(VAR IncomingDocumentAttachment@1000 : Record 133);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeGetBodyText@10(VAR EmailItem@1000 : Record 9500;VAR Value@1001 : Text;VAR IsHandled@1002 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeSend@8(VAR EmailItem@1000 : Record 9500;VAR HideMailDialog@1001 : Boolean;VAR MailManagement@1002 : Codeunit 9520);
    BEGIN
    END;

    PROCEDURE SetTempEmailAttachments@1100528510(VAR TempEmailAttachment2@1100528500 : TEMPORARY Record 11229294);
    BEGIN
      //**4PS
      IF TempEmailAttachment2.FINDSET THEN
        REPEAT
          TempEmailAttachment2.CALCFIELDS("Attachment File");
          TempEmailAttachment := TempEmailAttachment2;
          TempEmailAttachment.INSERT;
        UNTIL TempEmailAttachment2.NEXT = 0;
    END;

    PROCEDURE GetNoOfAttachments@1100528501() : Integer;
    BEGIN
      //**4PS
      EXIT(TempEmailAttachment.COUNT);
    END;

    PROCEDURE OnDrillDownNoOfAttachments@1100528504();
    BEGIN
      //**4PS
      PAGE.RUN(PAGE::"E-Mail Attachment List", TempEmailAttachment);
    END;

    PROCEDURE GetSendTo@1100529600() SendTo : Text;
    BEGIN
      //**4PS
      IF "Send to" <> '' THEN
        SendTo := "Send to";
      IF "Send CC" <> '' THEN BEGIN
        IF SendTo <> '' THEN
          SendTo := SendTo + '; ';
        SendTo := SendTo + "Send CC";
      END;
    END;

    BEGIN
    END.
  }
}

