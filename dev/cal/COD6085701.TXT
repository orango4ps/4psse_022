OBJECT Codeunit 6085701 Doc. - Register (Log Interact)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW111.00.00.5.00,4PS14.00;
  }
  PROPERTIES
  {
    TableNo=6085590;
    OnRun=VAR
            Cont@1000000008 : Record 5050;
            Template@1000000000 : Record 6085579;
            TempSegLine@1000000001 : TEMPORARY Record 11072040;
            Attachment@1000000002 : Record 11072030;
            InteractLogEntry@1000000007 : Record 11072027;
            Field@1000000010 : Record 6085580;
            MarketingSetup@161024013 : Record 5079;
            Setup@161024012 : Record 6085573;
            TempPdfFile@6085573 : TEMPORARY Record 6085608;
            CaptureMgt@1000000009 : Codeunit 6085576;
            FileSysMgt@1000 : Codeunit 6085584;
            SegManagement@1000000005 : Codeunit 5051;
            InterLogEntryCommentLineTmp@1000000017 : Record 11072067;
            WriteStream@6085574 : OutStream;
            ReadStream@6085575 : InStream;
            AttachmentNo@1000000003 : Integer;
            NextInteractLogEntryNo@1000000019 : Integer;
          BEGIN
            Template.GET(Rec."Template No.");
            IF Template."Codeunit ID: Doc. Validation" <> 0 THEN BEGIN
              CODEUNIT.RUN(Template."Codeunit ID: Doc. Validation",Rec);
              COMMIT;
            END;

            CheckOkToRegister;

            IF Rec.Description = '' THEN
              Rec.Description := COPYSTR(CaptureMgt.GetText(Rec,Field.Type::Header,'DESCRIPTION',0),1,MAXSTRLEN(Rec.Description));
            IF Rec.Description = '' THEN
              Rec.Description := Template.Description;

            MarketingSetup.GET;
            Setup.GET;

            Attachment.LOCKTABLE;
            IF Attachment.FINDLAST THEN
              AttachmentNo := Attachment."No." + 1
            ELSE
              AttachmentNo := 1;
            Attachment.INIT;
            Attachment."No." := AttachmentNo;

            IF MarketingSetup."Attachment Storage Type" = MarketingSetup."Attachment Storage Type"::Embedded THEN BEGIN
              Rec.CALCFIELDS("PDF File");
              IF Rec."PDF File".HASVALUE THEN
                Attachment."Attachment File" := Rec."PDF File"
              ELSE
                IF GetPdfFile(TempPdfFile) THEN BEGIN
                  TempPdfFile.GetDataStream(ReadStream);
                  Attachment."Attachment File".CREATEOUTSTREAM(WriteStream);
                  COPYSTREAM(WriteStream,ReadStream);
                END;
            END ELSE
              IF NOT FileSysMgt.FileExists(MarketingSetup."Attachment Storage Location" + '\' + "No.") THEN BEGIN
                CALCFIELDS("PDF File");
                IF "PDF File".HASVALUE THEN BEGIN
                  Attachment."Attachment File".EXPORT(MarketingSetup."Attachment Storage Location" + '\' + "No.");
                  Attachment."Storage Type" := Attachment."Storage Type"::"Disk File";
                  Attachment."Storage Pointer" := MarketingSetup."Attachment Storage Location";
                END ELSE
                  IF GetPdfFile(TempPdfFile) THEN BEGIN
                    FileSysMgt.CopyFile(TempPdfFile.GetFilePath,MarketingSetup."Attachment Storage Location" + '\' +
                      FORMAT(Attachment."No."));
                    Attachment."Storage Type" := Attachment."Storage Type"::"Disk File";
                    Attachment."Storage Pointer" := MarketingSetup."Attachment Storage Location";
                  END;
                END;

            Attachment."File Extension" := 'pdf';
            Attachment."Read Only" := TRUE;
            Attachment.INSERT;

            Cont.GET(GetSourceID);
            TempSegLine."Contact No." := Cont."No.";
            TempSegLine."Contact Company No." := Cont."Company No.";
            TempSegLine.INSERT;
            TempSegLine.VALIDATE("Interaction Template Code",Template."Interaction Template Code");
            TempSegLine."Salesperson Code" := Cont."Salesperson Code";
            TempSegLine.Description := COPYSTR(Description,1,MAXSTRLEN(TempSegLine.Description));
            TempSegLine.Subject := COPYSTR(Description,1,MAXSTRLEN(TempSegLine.Description));
            TempSegLine.Date := CaptureMgt.GetDate(Rec,Field.Type::Header,'RECEIPTDATE',0);
            TempSegLine."Time of Interaction" := TIME;
            TempSegLine."Attachment No." := Attachment."No.";

            InteractLogEntry.LOCKTABLE;
            IF InteractLogEntry.FINDLAST THEN
              NextInteractLogEntryNo := InteractLogEntry."Entry No." + 1
            ELSE
              NextInteractLogEntryNo := 1;
            InteractLogEntry.INIT;
            InteractLogEntry."Entry No." := NextInteractLogEntryNo;
            SegManagement.LogInteraction(TempSegLine,Attachment,InterLogEntryCommentLineTmp,FALSE,FALSE);

            IF "Show after Register" THEN BEGIN
              InteractLogEntry.RESET;
              InteractLogEntry.SETCURRENTKEY("Contact Company No.",Date,"Contact No.",Canceled);
              InteractLogEntry.SETRANGE("Contact Company No.",Cont."Company No.");
              InteractLogEntry.SETRANGE("Contact No.",Cont."No.");
              InteractLogEntry.GET(NextInteractLogEntryNo);
              PAGE.RUN(PAGE::"Interaction Log Entries",InteractLogEntry);
            END;

            VALIDATE(Status,Status::Registered);
            MODIFY;

            IF Template."Codeunit ID: After Step 1" <> 0 THEN
              CODEUNIT.RUN(Template."Codeunit ID: After Step 1",Rec);

            IF Template."Codeunit ID: After Step 2" <> 0 THEN
              CODEUNIT.RUN(Template."Codeunit ID: After Step 2",Rec);
          END;

  }
  CODE
  {

    BEGIN
    {
      4PS, 4PS specific due to renumbered objects
    }
    END.
  }
}

