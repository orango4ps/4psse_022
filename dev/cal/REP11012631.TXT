OBJECT Report 11012631 Add Parts of Set on Plant Quot
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Teile des Satzes auf Werkzeugangebot hinzufÅgen;
               ENU=Add Parts of Set on Plant Quot;
               NLD=Onderdelen van set op mateieeloffete opvoeren];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   PlantSetup.GET;
                 END;

    OnPreReport=BEGIN
                  ValidateSetCode;
                  ValidateSetQuantity;
                  ValidateTimeQuantity;

                  PlantQuote.GET(CurrQuoteNo);
                  PlantQuote.TESTFIELD("No.");
                  PlantQuote.TESTFIELD(Type, PlantQuote.Type::Rental);
                  IF NOT PlantQuote.PlantQuoteIsEditable THEN
                    ERROR(Text003, PlantQuote.TABLECAPTION);
                  AddPartsOfSet;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=No;
      OnQueryClosePage=BEGIN
                         IF CloseAction = ACTION::OK THEN BEGIN
                           ValidateSetCode;
                           ValidateSetQuantity;
                           ValidateTimeQuantity;
                         END;
                       END;

    }
    CONTROLS
    {
      { 1100529000;;Container;
                  ContainerType=ContentArea }

      { 1100529001;1;Field  ;
                  CaptionML=[DEU=AusgewÑhlt;
                             ENU=Set;
                             NLD=Set;
                             NOR=Svar pÜ spõrsmÜl;
                             SVE=FrÜgesvar];
                  SourceExpr=SetCode;
                  TableRelation="Plant Set";
                  OnValidate=BEGIN
                               IF SetCode <> '' THEN
                                 ValidateSetCode;
                             END;
                              }

      { 1100529004;1;Field  ;
                  CaptionML=[DEU=Satzbeschreibung;
                             ENU=Set Description;
                             NLD=Omschrijving set;
                             NOR=Sett beskrivelse;
                             SVE=Listbeskrivning];
                  SourceExpr=PlantSet.Description;
                  Editable=FALSE;
                  QuickEntry=FALSE }

      { 1100529002;1;Field  ;
                  CaptionML=[DEU=Menge;
                             ENU=Quantity;
                             NLD=Aantal;
                             NOR=Antall;
                             SVE=Antal];
                  DecimalPlaces=0:0;
                  SourceExpr=SetQuantity;
                  MinValue=0;
                  OnValidate=BEGIN
                               IF SetCode <> '' THEN
                                 ValidateSetQuantity;
                             END;
                              }

      { 1100529003;1;Field  ;
                  CaptionML=[DEU=Zeitmenge;
                             ENU=Time Quantity;
                             NLD=Tijdhoeveelheid;
                             NOR=Tidskvantitet;
                             SVE=Tidskvantitet];
                  DecimalPlaces=0:0;
                  SourceExpr=TimeQuantity;
                  MinValue=0;
                  OnValidate=BEGIN
                               IF SetCode <> '' THEN
                                 ValidateTimeQuantity;
                             END;
                              }

      { 1100529005;1;Field  ;
                  CaptionML=[DEU=Rabatt %.;
                             ENU=Discount %.;
                             NLD=Korting %];
                  DecimalPlaces=0:0;
                  SourceExpr=DiscountPerc;
                  MaxValue=100 }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      PlantSetup@1100529006 : Record 11012550;
      PlantQuote@1100529007 : Record 11229918;
      PlantSet@1100529000 : Record 11012587;
      CurrQuoteLineNo@1100529009 : Integer;
      SetQuantity@1100529001 : Decimal;
      TimeQuantity@1100529002 : Decimal;
      DiscountPerc@1100529011 : Decimal;
      CurrQuoteNo@1100529008 : Code[20];
      SetCode@1100529003 : Code[20];
      Text001@1100529004 : TextConst 'DEU=''%1'' muss in Registerkarte ''Optionen'' eingegeben werden.;ENU=%1 must be filled;NLD=%1 moet gevuld zijn;NOR=%1 mÜ fylles ut;SVE=%1 mÜste fyllas';
      Text002@1100529005 : TextConst 'DEU=%1 muss 1 sein, wenn ein Satz das einmalige Werkzeug mit laufender Nummer enthÑlt.;ENU=%1 must be 1 for a set that contains unique Plant with Plant No. filled;NLD=%1 moet 1 zijn bij een set die uniek materieel met volgnummer bevat';
      Text003@1100529010 : TextConst 'DEU=Modifizieren von %1 ist nicht erlaubt.;ENU=Modify %1 not allowed;NLD=Wijzigen %1 niet toegestaan';

    PROCEDURE SetSelection@1100529003(PlantQuoteNo@1100529000 : Code[20];PlantQuoteLineNo@1100529001 : Integer);
    BEGIN
      CurrQuoteNo := PlantQuoteNo;
      CurrQuoteLineNo := PlantQuoteLineNo;
    END;

    LOCAL PROCEDURE ValidateSetCode@1100529000();
    VAR
      PlantSetLine@1100529001 : Record 11012588;
    BEGIN
      IF SetCode = '' THEN
        ERROR(Text001, PlantSetLine.FIELDCAPTION("Set Code"));
      PlantSet.GET(SetCode);
      IF SetQuantity = 0 THEN
        SetQuantity := 1
      ELSE BEGIN
        IF SetQuantity <> 1 THEN BEGIN
          IF UniquePlantWithNoFilledOnSet THEN
            SetQuantity := 1;
        END;
      END;
    END;

    LOCAL PROCEDURE ValidateSetQuantity@1100529005();
    VAR
      PlantQuoteLine@1100529000 : Record 11229919;
    BEGIN
      IF SetQuantity = 0 THEN
        ERROR(Text001, PlantQuoteLine.FIELDCAPTION(Quantity));
      IF (SetQuantity <> 1) AND UniquePlantWithNoFilledOnSet THEN
        ERROR(Text002);
    END;

    LOCAL PROCEDURE ValidateTimeQuantity@1100529006();
    VAR
      PlantQuoteLine@1100529000 : Record 11229919;
    BEGIN
      IF TimeQuantity = 0 THEN
        ERROR(Text001, PlantQuoteLine.FIELDCAPTION("Time Quantity"));
    END;

    LOCAL PROCEDURE UniquePlantWithNoFilledOnSet@1100485003() : Boolean;
    VAR
      PlantSetLine@1100485000 : Record 11012588;
    BEGIN
      PlantSetLine.SETRANGE("Set Code", SetCode);
      PlantSetLine.SETRANGE(Type, PlantSetLine.Type::Plant);
      PlantSetLine.SETRANGE(Bulk, FALSE);
      PlantSetLine.SETFILTER("Plant No.", '<>%1', '');
      EXIT(NOT PlantSetLine.ISEMPTY);
    END;

    LOCAL PROCEDURE AddPartsOfSet@1100485000();
    VAR
      PlantSetLine@1100485002 : Record 11012588;
      PlantQuoteLine@1100485010 : Record 11229919;
      PlantRateCode@1100529000 : Record 11020502;
      LineSpacing@1100485012 : Integer;
      NextLineNo@1100485013 : Integer;
      LineQuantity@1100485004 : Decimal;
    BEGIN
      PlantSetLine.SETRANGE("Set Code", SetCode);
      PlantSetLine.SETFILTER(Quantity, '<>%1', 0);
      IF PlantSetLine.FINDSET THEN BEGIN
        NextLineNo := FirstFreeLineNoAndSpacing(PlantSetLine.COUNT, LineSpacing);
        REPEAT
          PlantSetLine.CALCFIELDS(Bulk);
          IF PlantSetLine.Bulk OR (PlantSetLine.Type = PlantSetLine.Type::Item) THEN
            LineQuantity := ROUND(PlantSetLine.Quantity * SetQuantity, 0.00001)
          ELSE BEGIN
            IF (PlantSetLine."Plant No." <> '') THEN
              LineQuantity := 1
            ELSE
              LineQuantity := ROUND(PlantSetLine.Quantity * SetQuantity, 1);
          END;

          PlantQuoteLine.INIT;
          PlantQuoteLine."Plant Quote No." := CurrQuoteNo;
          PlantQuoteLine."Line No." := NextLineNo;
          IF PlantSetLine.Type <> PlantSetLine.Type::Item THEN BEGIN
            PlantQuoteLine.Type := PlantQuoteLine.Type::Plant;
            IF PlantSetup."Rate Codes" AND (PlantSetLine."Default Rate Code" <> '') THEN BEGIN
              IF PlantRateCode.CheckPlantRateCode(PlantQuote."Plant Location", PlantSetLine."Default Rate Code", FALSE, '', 0) THEN
                PlantQuoteLine."Rate Code" := PlantSetLine."Default Rate Code";
            END;
            PlantQuoteLine.VALIDATE("Plant Type", PlantSetLine."Plant Type");
            IF PlantSetLine."Plant No." <> '' THEN
              PlantQuoteLine.VALIDATE("Plant No.", PlantSetLine."Plant No.");
            IF PlantQuoteLine.IsRentalLine THEN
              PlantQuoteLine."Time Quantity" := TimeQuantity
            ELSE
              PlantQuoteLine."Rate Code" := '';
          END ELSE BEGIN
            PlantQuoteLine.Type := PlantQuoteLine.Type::Item;
            PlantQuoteLine.VALIDATE("Item No.", PlantSetLine."Item No.");
          END;
          IF DiscountPerc <> 0 THEN
            PlantQuoteLine."Discount %" := DiscountPerc;
          PlantQuoteLine.VALIDATE(Quantity, LineQuantity);
          PlantQuoteLine.INSERT;
          NextLineNo := NextLineNo + LineSpacing;
        UNTIL PlantSetLine.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE FirstFreeLineNoAndSpacing@1100529001(NoOfLinesNeeded@1100529001 : Integer;VAR LineSpacing@1100529002 : Integer) NextLineNo : Integer;
    VAR
      PlantQuoteLine@1100529000 : Record 11229919;
    BEGIN
      LineSpacing := 0;
      IF CurrQuoteLineNo > 0 THEN BEGIN
        PlantQuoteLine.SETRANGE("Plant Quote No.", CurrQuoteNo);
        PlantQuoteLine.SETFILTER("Line No.", '<%1', CurrQuoteLineNo);
        IF NOT PlantQuoteLine.FINDLAST THEN
          PlantQuoteLine."Line No." := 0;
        IF (CurrQuoteLineNo - PlantQuoteLine."Line No." - 1) > NoOfLinesNeeded THEN
          LineSpacing := (CurrQuoteLineNo - PlantQuoteLine."Line No.") DIV (NoOfLinesNeeded + 1)
        ELSE
          LineSpacing := (CurrQuoteLineNo - PlantQuoteLine."Line No." - 1) DIV (NoOfLinesNeeded);
        IF LineSpacing > 0 THEN
          NextLineNo := PlantQuoteLine."Line No." + LineSpacing;
      END;
      IF (LineSpacing = 0) OR (NextLineNo = 0) THEN BEGIN
        LineSpacing := 10000;
        PlantQuoteLine.RESET;
        PlantQuoteLine.SETRANGE("Plant Quote No.", CurrQuoteNo);
        IF PlantQuoteLine.FINDLAST THEN
          NextLineNo := PlantQuoteLine."Line No." + LineSpacing
        ELSE
          NextLineNo := LineSpacing;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

