OBJECT Table 11012670 Project Inventory Entry
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckLocationBin;  //db, 15-12-10
               VALIDATE("Item Composition");
               CheckEntityNo;
             END;

    OnModify=BEGIN
               CheckLocationBin;  //db, 15-12-10
               VALIDATE("Item Composition");
               CheckEntityNo;
             END;

    CaptionML=[ENU=Project Inventory Entry;
               NOR=Prosjektlagertransaksjon;
               SVE=Projektlager, transaktion];
    LookupPageID=Page11012670;
    DrillDownPageID=Page11012670;
  }
  FIELDS
  {
    { 10  ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              NOR=L›penr.;
                                                              SVE=L”pnr] }
    { 20  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              NOR=Bilagsdato;
                                                              SVE=Dokumentdatum] }
    { 30  ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              NOR=Dokumentnr.;
                                                              SVE=Dokumentnr] }
    { 40  ;   ;Posting Date        ;Date          ;FieldClass=Normal;
                                                   CaptionML=[ENU=Posting Date;
                                                              NOR=Bokf›ringsdato;
                                                              SVE=Bokf”ringsdatum] }
    { 50  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr];
                                                   NotBlank=Yes }
    { 51  ;   ;Project Description ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Project Description;
                                                              NOR=Prosjektbeskrivelse;
                                                              SVE=Projektbeskrivning];
                                                   Editable=No }
    { 52  ;   ;Project Status      ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job."Project Status" WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Project Status;
                                                              NOR=Prosjektstatus;
                                                              SVE=Projekt- status];
                                                   OptionCaptionML=[ENU=Estimation,Preparation,Production,Technical Finished,Administrative Finished,Finished,Archive,Archived;
                                                                    NOR=Kalkulering,Forberedelse,Produksjon,Teknisk ferdig,Administrativt ferdig,Ferdig,Arkiv,Arkivert;
                                                                    SVE=Kalkyl,F”rberedelse,Produktion,Tekniskt f„rdig,Administrativt f„rdig,F„rdig,Arkiv,Arkiverad];
                                                   OptionString=Estimation,Preparation,Production,Technical Finished,Administrative Finished,Finished,Archive,Archived;
                                                   Editable=No }
    { 60  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              NOR=Artikkelnr;
                                                              SVE=Artikelnr];
                                                   NotBlank=Yes }
    { 65  ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   OnValidate=BEGIN
                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Variant Code;
                                                              NOR=Variantkode;
                                                              SVE=Variantkod] }
    { 70  ;   ;Manufacturer        ;Code15        ;FieldClass=Normal;
                                                   TableRelation="ETIM Vendor - Central Mgt";
                                                   OnValidate=BEGIN
                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Manufacturer;
                                                              NOR=Produsent;
                                                              SVE=Tillverkare] }
    { 80  ;   ;Basic Item          ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   OnValidate=BEGIN
                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Basic Item;
                                                              NOR=Fabrikantartikkel;
                                                              SVE=Basartikel] }
    { 90  ;   ;Vendor (Trade Item) ;Code15        ;FieldClass=Normal;
                                                   TableRelation="ETIM Vendor - Central Mgt";
                                                   OnValidate=BEGIN
                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Vendor (Trade Item);
                                                              NOR=Leverand›r (katalogartikkel);
                                                              SVE=Leverant”r (skaffningsartikel)] }
    { 100 ;   ;Trade Item          ;Code20        ;FieldClass=Normal;
                                                   TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   OnValidate=BEGIN
                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Trade Item;
                                                              NOR=Katalogartikkel;
                                                              SVE=Anskaffningsartikel] }
    { 120 ;   ;Description         ;Text100       ;OnValidate=BEGIN
                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 125 ;   ;Description 2       ;Text50        ;OnValidate=BEGIN
                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2] }
    { 130 ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              NOR=Plasseringkode;
                                                              SVE=Lagerst„llekod] }
    { 140 ;   ;Shelf No.           ;Code20        ;TableRelation="Shelf per Location".Code WHERE (Location Code=FIELD(Location Code));
                                                   CaptionML=[ENU=Shelf No.;
                                                              NOR=Hyllenr.;
                                                              SVE=Hyllnr] }
    { 145 ;   ;Bin Code            ;Code20        ;OnValidate=VAR
                                                                WMSManagement@1001 : Codeunit 7302;
                                                                Location@1100526200 : Record 14;
                                                              BEGIN
                                                                //db, 02-11-10
                                                                WMSManagement.FindBin("Location Code","Bin Code",'');
                                                                TESTFIELD("Location Code");
                                                                IF "Bin Code" <> '' THEN BEGIN
                                                                  Location.GET("Location Code");
                                                                  Location.TESTFIELD("Bin Mandatory");
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              WMSManagement@1002 : Codeunit 7302;
                                                              BinCode@1000 : Code[20];
                                                            BEGIN
                                                              //db, 02-11-10
                                                              BinCode := WMSManagement.BinLookUpSpecific("Location Code","Item No.",'','',"Project No.",'',"Bin Code");
                                                              IF BinCode <> '' THEN
                                                                VALIDATE("Bin Code",BinCode);
                                                            END;

                                                   CaptionML=[ENU=Bin Code;
                                                              NOR=Hyllekode;
                                                              SVE=Lagerplatskod] }
    { 150 ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal] }
    { 160 ;   ;Unit of Measure Code;Code10        ;TableRelation="Unit of Measure";
                                                   OnValidate=VAR
                                                                ItemUnitRec@1100525000 : Record 5404;
                                                              BEGIN
                                                                //db, 28-02-13: C005312 (changed table relation; due to problem with rename base-unit)
                                                                IF "Item No." <> '' THEN
                                                                  ItemUnitRec.GET("Item No.", "Unit of Measure Code");
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              NOR=M†leenhetskode;
                                                              SVE=Enhetskod] }
    { 170 ;   ;Receipt Line No.    ;Integer       ;CaptionML=[ENU=Receipt Line No.;
                                                              NOR=Mottakslinjenr.;
                                                              SVE=Inleveransradnr] }
    { 180 ;   ;Order No.           ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purch. Rcpt. Header"."Order No." WHERE (No.=FIELD(Document No.)));
                                                   CaptionML=[ENU=Order No.;
                                                              NOR=Ordrenr.;
                                                              SVE=Ordernr];
                                                   Editable=No }
    { 190 ;   ;Order Line No.      ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purch. Rcpt. Line"."Order Line No." WHERE (Document No.=FIELD(Document No.),
                                                                                                                  Line No.=FIELD(Receipt Line No.)));
                                                   CaptionML=[ENU=Order Line No.;
                                                              NOR=Ordrelinjenr.;
                                                              SVE=Orderradnr];
                                                   Editable=No }
    { 200 ;   ;Inventory Quantity  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Project Inventory Entry".Quantity WHERE (Project No.=FIELD(Project No.),
                                                                                                             Item Composition=FIELD(Item Composition),
                                                                                                             Extension Contract=FIELD(Extension Contract),
                                                                                                             Plot No.=FIELD(Plot No.),
                                                                                                             Location Code=FIELD(Location Code),
                                                                                                             Bin Code=FIELD(Bin Code),
                                                                                                             Shelf No.=FIELD(Shelf No.),
                                                                                                             Unit of Measure Code=FIELD(Unit of Measure Code),
                                                                                                             Element=FIELD(Element),
                                                                                                             Posting Date=FIELD(UPPERLIMIT(Date Filter)),
                                                                                                             Assembly Yard Number Object=FIELD(Assembly Yard Number Object),
                                                                                                             Receipt No.=FIELD(Purchase Receipt No. Filter),
                                                                                                             Receipt Line No.=FIELD(Purchase Rcpt. Line No. Filter)));
                                                   CaptionML=[ENU=Inventory Quantity;
                                                              NOR=Lagerantall;
                                                              SVE=Lagerantal];
                                                   Editable=No }
    { 210 ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              NOR=Datofilter;
                                                              SVE=Datumfilter] }
    { 220 ;   ;Entry Type          ;Option        ;InitValue=Delivery;
                                                   CaptionML=[ENU=Entry Type;
                                                              NOR=Posttype;
                                                              SVE=Transaktionstyp];
                                                   OptionCaptionML=[ENU=Purchase Receipt,Delivery,Positive Adjmt.,Negative Adjmt.,Transfer,Stock Receipt,Return,Temporary Shipment Third Party,Return Temporary Shipment Third Party;
                                                                    NOR=Innkj›psKvittering,Leveranse,Positiv Justering,Negativ Justering,Overf›ring,Lagerkvittering,Retur,Midlertidig Forsendelse Tredjepart,Retur Midlertidig Forsendelse Tredjepart;
                                                                    SVE=Ink”p inleverans,Leverans,Positiv just.,Negativ just.,™verf”ring,Lager inleverans,Retur,Tillf„llig utleverans tredje part,Retur tillf„llig utleverans tredje part];
                                                   OptionString=Receipt,Delivery,Positive Adjmt.,Negative Adjmt.,Transfer,StockReceipt,Return,Temporary Shipment Third Party,Return Temporary Shipment Third Party }
    { 230 ;   ;Item Composition    ;Code120       ;OnValidate=BEGIN
                                                                "Item Composition" := ProjInvItemComposition(
                                                                  "Item No.","Trade Item","Basic Item",Description,"Description 2","Yard No.",
                                                                  "Entity Type","System No.","Entity No.",Manufacturer,"Vendor (Trade Item)","Variant Code","Purch. Detail No.");
                                                              END;

                                                   CaptionML=[ENU=Item Composition;
                                                              NOR=Artikkelsammensetning;
                                                              SVE=Artikel f”r offentligt ackord];
                                                   Description=Help field, necessary because key became too big;
                                                   Editable=No }
    { 240 ;   ;Transfer Project No.;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Transfer Project;
                                                              NOR=Overf›ring, prosjekt;
                                                              SVE=™verf”ring, projekt] }
    { 250 ;   ;Transfer Location Code;Code10      ;TableRelation=Location;
                                                   CaptionML=[ENU=Transfer Location;
                                                              NOR=Overf›ring, lokasjon;
                                                              SVE=™verf”ring, lagerst„lle] }
    { 255 ;   ;Transfer Bin Code   ;Code20        ;CaptionML=[ENU=Transfer Bin Code;
                                                              NOR=Overf›ring, lagerplasskode;
                                                              SVE=™verf”ring, lagerplats kod] }
    { 260 ;   ;Transfer Shelf No.  ;Code20        ;TableRelation="Shelf per Location".Code WHERE (Location Code=FIELD(Transfer Location Code));
                                                   CaptionML=[ENU=Transfer Shelf No.;
                                                              NOR=Overf›ring, Hyllenr.;
                                                              SVE=™verf”ring, hyllnr] }
    { 261 ;   ;Transfer Element    ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Transfer Project No.));
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Transfer Element;
                                                              NOR=Overf›ring, Element;
                                                              SVE=™verf”ring, element] }
    { 270 ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   CaptionML=[ENU=Employee No.;
                                                              NOR=Ansattnr;
                                                              SVE=Anst„llningsnr] }
    { 280 ;   ;Deliver             ;Option        ;CaptionML=[ENU=Deliver;
                                                              NOR=Lever;
                                                              SVE=Leverera];
                                                   OptionCaptionML=[ENU=" ,Project Location,Location";
                                                                    NOR=" ,Prosjektplassering,Plassering";
                                                                    SVE=" ,Projektlagerst„lle,Lagerst„lle"];
                                                   OptionString=[ ,Project Location,Location] }
    { 285 ;   ;Ship To Location    ;Code10        ;TableRelation=IF (Deliver=CONST(Project Location)) "Project Location".Code WHERE (Project No.=FIELD(Project No.))
                                                                 ELSE IF (Deliver=CONST(Location)) Location.Code;
                                                   CaptionML=[ENU=Ship To Location;
                                                              NOR=Lever til lokasjon;
                                                              SVE=Leverera till lagerst„lle] }
    { 300 ;   ;Item Brand          ;Text40        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item."Item Brand" WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=[ENU=Item Brand;
                                                              NOR=Artikkelens Varemerke;
                                                              SVE=Artikelns varum„rke];
                                                   Editable=No }
    { 320 ;   ;Entity Type         ;Option        ;OnValidate=BEGIN
                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Entity Type;
                                                              NOR=Enhetstype;
                                                              SVE=Enhetstyp];
                                                   OptionCaptionML=[ENU=None,Cable,Device,Extra Need,Cable Transit,,,,,Position;
                                                                    NOR=Ingen,Kabel,Enhet,Ekstra behov,Kabeloverf›ring,,,,,Posisjon;
                                                                    SVE=Ingen,Kabel,Anordning,Extra behov,Kabel”verf”ring,,,,,Position];
                                                   OptionString=None,Cable,Device,ExtraNeed,Cable Transit,,,,,Position;
                                                   Description=Engineering;
                                                   Editable=No }
    { 321 ;   ;System No.          ;Code20        ;OnValidate=BEGIN
                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=System No.;
                                                              NOR=Systemnr;
                                                              SVE=Systemnr];
                                                   Description=Engineering;
                                                   Editable=No }
    { 322 ;   ;Entity No.          ;Code20        ;OnValidate=BEGIN
                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Entity No.;
                                                              NOR=Enhetsnr;
                                                              SVE=Enhetsnr];
                                                   Description=Engineering;
                                                   Editable=No }
    { 323 ;   ;Gland Position      ;Option        ;CaptionML=[ENU=Cable Gland Postion;
                                                              NOR=Pakkboksens posisjon;
                                                              SVE=Packboxens position];
                                                   OptionCaptionML=[ENU=" ,From Side,To Side";
                                                                    NOR=" ,Fra side,Til side";
                                                                    SVE=" ,Fr†n sida,Till sida"];
                                                   OptionString=[ ,From,To];
                                                   Description=Engineering;
                                                   Editable=No }
    { 330 ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Cost Type=CONST(Material));
                                                   CaptionML=[ENU=Cost Object;
                                                              NOR=Kostobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 335 ;   ;Project Delivery Note No.;Code20   ;TableRelation="Posted Proj. Del. Note Header";
                                                   CaptionML=[ENU=Project Delivery Note No.;
                                                              NOR=Prosjekt, Leveransebeskjednr.;
                                                              SVE=Projekt, leveransbeskednr];
                                                   Editable=No }
    { 340 ;   ;Element             ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 350 ;   ;Anonymous           ;Boolean       ;CaptionML=[ENU=Anonymous;
                                                              NOR=Anonym;
                                                              SVE=Anonym] }
    { 360 ;   ;Line for Group with Same Flds;Boolean;
                                                   CaptionML=ENU=Line for Group with Same Fields;
                                                   Description=Must be filled before using }
    { 370 ;   ;Purch. Detail No.   ;Code10        ;OnValidate=BEGIN
                                                                VALIDATE("Item Composition");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ShowDetailCard();
                                                            END;

                                                   CaptionML=ENU=Purch. Detail No.;
                                                   Editable=No }
    { 400 ;   ;Yard No.            ;Code20        ;OnValidate=BEGIN
                                                                VALIDATE("Item Composition");
                                                              END;

                                                   CaptionML=[ENU=Yard No.;
                                                              NOR=Plassnr;
                                                              SVE=Platsnr] }
    { 410 ;   ;Assembly Yard Number Object;Boolean;CaptionML=[ENU=Assembly Yard Number Object;
                                                              NOR=Monteringsverksted Nummerobjekt;
                                                              SVE=Montering av varvnummerobjekt] }
    { 420 ;   ;Purchase Receipt No. Filter;Code20 ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Purchase Receipt No. Filter;
                                                   Description=BI006 }
    { 421 ;   ;Purchase Rcpt. Line No. Filter;Integer;
                                                   FieldClass=FlowFilter;
                                                   CaptionML=ENU=Purchase Rcpt. Line No. Filter;
                                                   Description=BI006 }
    { 430 ;   ;Receipt No.         ;Code20        ;TableRelation="Purch. Rcpt. Header";
                                                   CaptionML=[ENU=Receipt No.;
                                                              NOR=Kvitteringsnr.;
                                                              SVE=Inleveransnr];
                                                   Description=BI006 }
    { 440 ;   ;Comments for Logistics;Text50      ;CaptionML=[ENU=Comments for Logistics;
                                                              NOR=Kommentarer for logistikk;
                                                              SVE=Kommentarer f”r logistik];
                                                   Description=BI003a }
    { 500 ;   ;Purchase Route Reference;Code20    ;OnLookup=VAR
                                                              lvRouteRefMgtCU@1210190000 : Codeunit 11012045;
                                                            BEGIN
                                                              lvRouteRefMgtCU.ShowReferenceList("Purchase Route Reference");
                                                            END;

                                                   CaptionML=[ENU=Purchase Route Reference;
                                                              NOR=Referanse for Innkj›psrute;
                                                              SVE=Referens f”r ink”psf”ljd];
                                                   Description=DP01137;
                                                   Editable=No }
    { 505 ;   ;Purchase Requisition No.;Code20    ;TableRelation="Purchase Requisition";
                                                   CaptionML=[ENU=Purchase Requisition No.;
                                                              SVE=Ink”psrekvisition nr];
                                                   Description=DP01137;
                                                   Editable=No }
    { 510 ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp];
                                                   Description=DP01137 }
    { 520 ;   ;Plant No.           ;Code10        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   CaptionML=[ENU=Plant No.;
                                                              NOR=Maskinnr.;
                                                              SVE=Maskinnr];
                                                   Description=DP01137 }
    { 525 ;   ;Comment             ;Text50        ;CaptionML=[ENU=Comment;
                                                              NOR=Kommentar;
                                                              SVE=Kommentar];
                                                   Description=DP01137 }
    { 530 ;   ;Extension Contract  ;Code10        ;TableRelation="Extension Contract"."Contract No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=Extension Contract;
                                                              SVE=ŽTA] }
    { 540 ;   ;Plot No.            ;Code10        ;TableRelation=Plot."Plot No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=Plot No.;
                                                              SVE=Ritningnr] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Project No.,Item Composition,Extension Contract,Plot No.,Location Code,Bin Code,Shelf No.,Unit of Measure Code,Element,Assembly Yard Number Object,Posting Date,Entry Type;
                                                   SumIndexFields=Quantity }
    {    ;Item No.,Location Code,Bin Code,Shelf No.,Posting Date,Project No.;
                                                   SumIndexFields=Quantity }
    {    ;Item Composition,Location Code,Bin Code,Shelf No.,Project No.,Unit of Measure Code,Posting Date;
                                                   SumIndexFields=Quantity }
    {    ;Location Code,Bin Code,Shelf No.,Item Composition,Project No.,Unit of Measure Code,Posting Date;
                                                   SumIndexFields=Quantity }
    {    ;Project No.,Yard No.,Entity Type,System No.,Entity No.,Assembly Yard Number Object;
                                                   SumIndexFields=Quantity }
    {    ;Project No.,Item Composition,Vendor (Trade Item),Location Code,Shelf No.,Unit of Measure Code,Element,Posting Date,Entry Type }
    {    ;Document No.                             }
    {    ;Purchase Route Reference                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ItemRec@1210190000 : Record 27;
      BasicItemRec@1210190001 : Record 11012316;
      TradeItemRec@1210190002 : Record 11012317;
      DPA_Management@1100000999 : Codeunit 11012783;
      Text001@1100529001 : TextConst 'ENU=''%1'' not present for %2 ''%3'' and %4 ''%5''';
      Text002@1100529000 : TextConst 'ENU=''%1'' is not of %2 ''%3''';
      Text003@1100529002 : TextConst 'ENU=not allowed for empty line';

    PROCEDURE GetItemDescription@1210190000() : Text[100];
    BEGIN
      IF ("Item No." <> '') THEN BEGIN
        IF ItemRec.GET("Item No.") THEN
          EXIT(ItemRec.Description)
        ELSE
          EXIT('');
      END;

      IF ("Trade Item" <> '') THEN BEGIN
        IF TradeItemRec.GET("Vendor (Trade Item)", "Trade Item") THEN
          EXIT(TradeItemRec."Item Description")
        ELSE
          EXIT('');
      END;

      IF ("Basic Item" <> '') THEN BEGIN
        IF BasicItemRec.GET(Manufacturer, "Basic Item") THEN
          EXIT(BasicItemRec."Product Class")
        ELSE
          EXIT('');
      END;

      EXIT(Description);
    END;

    PROCEDURE GetItemPrice@1210190001() : Decimal;
    BEGIN
      ItemRec.CHANGECOMPANY(CURRENTCOMPANY);
      TradeItemRec.CHANGECOMPANY(CURRENTCOMPANY);
      BasicItemRec.CHANGECOMPANY(CURRENTCOMPANY);

      IF ("Item No." <> '') THEN BEGIN
        IF ItemRec.GET("Item No.") THEN
          EXIT(ItemRec."Standard Cost")
        ELSE
          EXIT(0);
      END;

      IF ("Trade Item" <> '') THEN BEGIN
        IF TradeItemRec.GET("Vendor (Trade Item)", "Trade Item") THEN BEGIN
          IF (TradeItemRec."Qty. per Unit of Measure" <> 0) THEN
            EXIT(TradeItemRec."Net Price" / TradeItemRec."Qty. per Unit of Measure")  //* DB/GJK  15505 ('/' io '*')
          ELSE
            EXIT(TradeItemRec."Net Price");
        END ELSE
          EXIT(0);
      END;

      IF ("Basic Item" <> '') THEN BEGIN
        IF BasicItemRec.GET(Manufacturer, "Basic Item") THEN BEGIN
          IF (BasicItemRec."Qty. per Unit of Measure" <> 0) THEN
            EXIT(BasicItemRec."Net Price" / BasicItemRec."Qty. per Unit of Measure")  //* DB/GJK  15505 ('/' io '*')
          ELSE
            EXIT(BasicItemRec."Net Price");
        END ELSE
          EXIT(0);
      END;

      EXIT(0);
    END;

    PROCEDURE ProjInvItemComposition@1210190002(IItemNo@1210190000 : Code[20];ITradeItem@1210190002 : Code[20];IBasicItem@1210190003 : Code[20];IDescription@1210190004 : Text[100];IDescription2@1210190005 : Text[50];YardNo@1100528400 : Code[20];EntityType@1100525000 : ' ,Cable,Device,ExtraNeed,Gland,Anonymous,,,,Position';SystemNo@1100525001 : Code[20];EntityNo@1100525002 : Code[20];IManufacturer@1100525003 : Code[15];IVendor@1100526200 : Code[15];IVariantCode@1100525004 : Code[10];DetailNo@1100529000 : Code[10]) ResultTxt : Code[120];
    VAR
      EntityTypeTxt@1100528401 : Text[10];
      maxlen@1100525005 : Integer;
      curlen@1100525006 : Integer;
    BEGIN
      EntityTypeTxt := FORMAT(EntityType, 0, 2);  //Format to optie number
      maxlen := MAXSTRLEN("Item Composition");

      IF (IItemNo <> '') THEN BEGIN
        //Length: 20+10+10+20+2+20+20 = 102
        ResultTxt := STRSUBSTNO('%1-%2-%3-%4-%5-%6-%7',IItemNo,IVariantCode,DetailNo,YardNo,EntityTypeTxt,SystemNo,EntityNo);
        EXIT(ResultTxt);
      END;

      IF (ITradeItem <> '') THEN BEGIN
        //Length: 20+10+20+2+20+20+15 = 107
        ResultTxt := STRSUBSTNO('%1-%2-%3-%4-%5-%6-%7',ITradeItem,DetailNo,YardNo,EntityTypeTxt,SystemNo,EntityNo,IVendor);
        EXIT(ResultTxt);
      END;

      IF (IBasicItem <> '') THEN BEGIN
        //Length: 20+10+20+2+20+20+15 = 107
        ResultTxt := STRSUBSTNO('%1-%2-%3-%4-%5-%6-%7',IBasicItem,DetailNo,YardNo,EntityTypeTxt,SystemNo,EntityNo,IManufacturer);
        EXIT(ResultTxt);
      END;

      IF (YardNo <> '') OR (SystemNo <> '') OR (EntityNo <> '') THEN BEGIN
        //Length: 20+2+20+20+10 = 72
        ResultTxt := STRSUBSTNO('%1-%2-%3-%4-%5',YardNo,EntityTypeTxt,SystemNo,EntityNo,DetailNo);
        maxlen := STRLEN(ResultTxt);
        ResultTxt := ResultTxt + '-' + COPYSTR(IDescription, 1, maxlen - curlen - 1);  //C038543
        EXIT(ResultTxt);
      END;

      IF (IDescription <> '') OR (IDescription2 <> '') THEN BEGIN
        //Length: 50+50+10 = 110
        ResultTxt := STRSUBSTNO('%1-%2-%3',IDescription,IDescription2,DetailNo);
        EXIT(ResultTxt);
      END;

      EXIT('');
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11012670) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11012670');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Project Inventory Entry", "Cost Object", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Cost Object"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Cost Object");
    END;

    PROCEDURE CheckLocationBin@1100526200();
    VAR
      InvtSetup@1100526200 : Record 313;
      LocRec@1100526201 : Record 14;
      PrefBin@1100526202 : Record 11020629;
    BEGIN
      //db, 15-12-10
      IF CURRENTCOMPANY <> COMPANYNAME THEN BEGIN
        InvtSetup.CHANGECOMPANY(CURRENTCOMPANY);
        LocRec.CHANGECOMPANY(CURRENTCOMPANY);
        PrefBin.CHANGECOMPANY(CURRENTCOMPANY);
      END;

      InvtSetup.GET;
      IF InvtSetup."Location Mandatory" THEN
        TESTFIELD("Location Code");

      IF NOT LocRec.GET("Location Code") THEN LocRec.INIT;
      IF LocRec."Bin Mandatory" THEN
        TESTFIELD("Bin Code");

      PrefBin.CheckBinLocationBinding("Project No.", '', "Location Code", "Bin Code");
    END;

    PROCEDURE GetProjInventoryDeliveryLine@1100409000(VAR ProjectInventoryDelivery@1100409000 : Record 11012671) : Boolean;
    BEGIN
      //DP00121
      ProjectInventoryDelivery.RESET;
      ProjectInventoryDelivery.SETRANGE("Project No.", "Project No.");
      ProjectInventoryDelivery.SETRANGE("Item Composition", "Item Composition");
      ProjectInventoryDelivery.SETRANGE("Location Code", "Location Code");
      ProjectInventoryDelivery.SETRANGE("Bin Code", "Bin Code");  //db, 02-11-10
      ProjectInventoryDelivery.SETRANGE("Shelf No.", "Shelf No.");
      ProjectInventoryDelivery.SETRANGE("Unit of Measure Code", "Unit of Measure Code");
      ProjectInventoryDelivery.SETRANGE(Element, Element); //hbk,10-06-10,TM4870
      ProjectInventoryDelivery.SETRANGE("Assembly Yard Number Object", "Assembly Yard Number Object");
      ProjectInventoryDelivery.SETRANGE("Entry Type", ProjectInventoryDelivery."Entry Type"::Delivery);
      ProjectInventoryDelivery.SETRANGE("Extension Contract", "Extension Contract");
      ProjectInventoryDelivery.SETRANGE("Plot No.", "Plot No.");
      //**4PS.sn BI006 KD 04-07-16
      ProjectInventoryDelivery.SETRANGE("Purchase Receipt No.", '');
      ProjectInventoryDelivery.SETRANGE("Purchase Rcpt. Line No.", 0);
      ProjectInventoryDelivery.SETRANGE("Purchase Rcpt. Line No. Filter", '');
      //**4PS.en BI006 KD 04-07-16

      EXIT(ProjectInventoryDelivery.FINDFIRST);
    END;

    PROCEDURE GetProjInventoryDeliveryLineReceipt@1100529400(VAR ProjectInventoryDelivery@1100409000 : Record 11012671) : Boolean;
    BEGIN
      //**4PS.sn BI006 KD 28-09-16
      ProjectInventoryDelivery.RESET;
      ProjectInventoryDelivery.SETRANGE("Project No.", "Project No.");
      ProjectInventoryDelivery.SETRANGE("Item Composition", "Item Composition");
      ProjectInventoryDelivery.SETRANGE("Location Code", "Location Code");
      ProjectInventoryDelivery.SETRANGE("Bin Code", "Bin Code");  //db, 02-11-10
      ProjectInventoryDelivery.SETRANGE("Shelf No.", "Shelf No.");
      ProjectInventoryDelivery.SETRANGE("Unit of Measure Code", "Unit of Measure Code");
      ProjectInventoryDelivery.SETRANGE(Element, Element); //hbk,10-06-10,TM4870
      ProjectInventoryDelivery.SETRANGE("Assembly Yard Number Object", "Assembly Yard Number Object");
      ProjectInventoryDelivery.SETRANGE("Entry Type", ProjectInventoryDelivery."Entry Type"::Delivery);
      ProjectInventoryDelivery.SETRANGE("Extension Contract", "Extension Contract");
      ProjectInventoryDelivery.SETRANGE("Plot No.", "Plot No.");
      ProjectInventoryDelivery.SETRANGE("Purchase Receipt No.","Receipt No.");
      ProjectInventoryDelivery.SETRANGE("Purchase Rcpt. Line No.","Receipt Line No.");
      ProjectInventoryDelivery.SETRANGE("Purchase Rcpt. Line No. Filter", FORMAT("Receipt Line No."));
      EXIT(ProjectInventoryDelivery.FINDFIRST);
      //**4PS.en BI006 KD 28-09-16
    END;

    LOCAL PROCEDURE CheckEntityNo@1100528401();
    VAR
      JobsSetup@1100528400 : Record 315;
    BEGIN
      IF CURRENTCOMPANY <> COMPANYNAME THEN
        JobsSetup.CHANGECOMPANY(CURRENTCOMPANY);

      IF "Entity Type" = "Entity Type"::None THEN
        EXIT;

      IF JobsSetup.GET AND
         JobsSetup."Entity No. Mandatory"
      THEN
        TESTFIELD("Entity No.");
    END;

    PROCEDURE CheckDetailNoPrjInventDelivery@1100529003(ProjectInventoryDelivery@1100529000 : Record 11012671);
    VAR
      ProjectInventoryEntry@1100529001 : Record 11012670;
      PurchaseLineDetail@1100529003 : Record 11020660;
      ErrorTxt@1100529002 : Text;
    BEGIN
      IF ProjectInventoryDelivery."Purch. Detail No." = '' THEN
        EXIT;

      ProjectInventoryEntry."Purch. Detail No." := ProjectInventoryDelivery."Purch. Detail No.";
      ProjectInventoryEntry."Project No." := ProjectInventoryDelivery."Project No.";
      ProjectInventoryDelivery.FillItemComposition();
      ProjectInventoryEntry."Item Composition" := ProjectInventoryDelivery."Item Composition";
      ProjectInventoryEntry."Item No." := ProjectInventoryDelivery."Item No.";
      ProjectInventoryEntry."Trade Item" := ProjectInventoryDelivery."Trade Item";
      ProjectInventoryEntry."Basic Item" := ProjectInventoryDelivery."Basic Item";
      ProjectInventoryEntry."Yard No." := ProjectInventoryDelivery."Yard No.";
      ProjectInventoryEntry."System No." := ProjectInventoryDelivery."System No.";
      ProjectInventoryEntry."Entity No." := ProjectInventoryDelivery."Entity No.";
      ProjectInventoryEntry.Description := ProjectInventoryDelivery.Description;
      ProjectInventoryEntry."Description 2" := ProjectInventoryDelivery."Description 2";
      ProjectInventoryEntry."Extension Contract" := ProjectInventoryDelivery."Extension Contract";
      ProjectInventoryEntry."Plot No." := ProjectInventoryDelivery."Plot No.";

      IF NOT CheckDetailNoCommon(ProjectInventoryEntry, PurchaseLineDetail, ErrorTxt) THEN BEGIN
        IF ProjectInventoryDelivery."Entry Type" <> ProjectInventoryDelivery."Entry Type"::"Positive Adjmt." THEN
          FIELDERROR("Purch. Detail No.", ErrorTxt);
      END;
      IF ProjectInventoryDelivery."Entry Type" = ProjectInventoryDelivery."Entry Type"::"Positive Adjmt." THEN BEGIN
        IF NOT CheckDetailNoPosCorr(ProjectInventoryEntry, PurchaseLineDetail, ErrorTxt) THEN
          FIELDERROR("Purch. Detail No.", ErrorTxt);
      END;
    END;

    PROCEDURE CheckDetailNoProjDeliveryNote@1100529006(ProjectDeliveryNoteHead@1100529004 : Record 11012672;ProjectDeliveryNoteLine@1100529000 : Record 11012673);
    VAR
      ProjectInventoryEntry@1100529001 : Record 11012670;
      PurchaseLineDetail@1100529002 : Record 11020660;
      ErrorTxt@1100529003 : Text;
    BEGIN
      IF ProjectDeliveryNoteLine."Purch. Detail No." = '' THEN
        EXIT;

      ProjectInventoryEntry."Purch. Detail No." := ProjectDeliveryNoteLine."Purch. Detail No.";
      ProjectInventoryEntry."Project No." := ProjectDeliveryNoteHead."Project No.";
      ProjectDeliveryNoteLine.FillItemComposition();
      ProjectInventoryEntry."Item Composition" := ProjectDeliveryNoteLine."Item Composition";
      ProjectInventoryEntry."Item No." := ProjectDeliveryNoteLine."Item No.";
      ProjectInventoryEntry."Trade Item" := ProjectDeliveryNoteLine."Trade Item";
      ProjectInventoryEntry."Basic Item" := ProjectDeliveryNoteLine."Basic Item";
      ProjectInventoryEntry."Yard No." := ProjectDeliveryNoteLine."Yard No.";
      ProjectInventoryEntry."System No." := ProjectDeliveryNoteLine."System No.";
      ProjectInventoryEntry."Entity No." := ProjectDeliveryNoteLine."Entity No.";
      ProjectInventoryEntry.Description := ProjectDeliveryNoteLine.Description;
      ProjectInventoryEntry."Description 2" := ProjectDeliveryNoteLine."Description 2";
      ProjectInventoryEntry."Extension Contract" := ProjectDeliveryNoteLine."Extension Contract";
      ProjectInventoryEntry."Plot No." := ProjectDeliveryNoteLine."Plot No.";

      IF NOT CheckDetailNoCommon(ProjectInventoryEntry, PurchaseLineDetail, ErrorTxt) THEN BEGIN
        IF ProjectDeliveryNoteHead."Transaction Type" <> ProjectDeliveryNoteHead."Transaction Type"::Return THEN
          FIELDERROR("Purch. Detail No.", ErrorTxt);
      END;
      IF ProjectDeliveryNoteHead."Transaction Type" = ProjectDeliveryNoteHead."Transaction Type"::Return THEN BEGIN
        IF NOT CheckDetailNoPosCorr(ProjectInventoryEntry, PurchaseLineDetail, ErrorTxt) THEN
          FIELDERROR("Purch. Detail No.", ErrorTxt);
      END;
    END;

    LOCAL PROCEDURE CheckDetailNoCommon@1100529005(ProjInventFields@1100529008 : Record 11012670;VAR PurchaseLineDetail@1100529000 : Record 11020660;VAR ErrorTxt@1100529009 : Text) : Boolean;
    VAR
      ProjectInventoryEntry@1100529002 : Record 11012670;
    BEGIN
      ErrorTxt := '';
      WITH ProjInventFields DO BEGIN
        PurchaseLineDetail.SETCURRENTKEY("Detail No.");
        PurchaseLineDetail.SETRANGE("Detail No.", "Purch. Detail No.");
        PurchaseLineDetail.FINDFIRST;

        ProjectInventoryEntry.SETRANGE("Project No.", "Project No.");
        ProjectInventoryEntry.SETRANGE("Purch. Detail No.", "Purch. Detail No.");
        ProjectInventoryEntry.SETRANGE("Item Composition", "Item Composition");
        ProjectInventoryEntry.SETRANGE("Extension Contract", "Extension Contract");
        ProjectInventoryEntry.SETRANGE("Plot No.", "Plot No.");

        IF NOT ProjectInventoryEntry.ISEMPTY THEN
          EXIT(TRUE);
        ProjectInventoryEntry.SETRANGE("Item Composition"); //Reset filter

        IF "Item No." <> '' THEN BEGIN
          ProjectInventoryEntry.SETRANGE("Item No.", "Item No.");
          IF ProjectInventoryEntry.ISEMPTY THEN
            ErrorTxt := STRSUBSTNO(Text001,
              "Purch. Detail No.", FIELDCAPTION("Project No."), "Project No.", FIELDCAPTION("Item No."), "Item No.");
        END ELSE BEGIN
          IF "Trade Item" <> '' THEN BEGIN
            ProjectInventoryEntry.SETRANGE("Trade Item", "Trade Item");
            IF ProjectInventoryEntry.ISEMPTY THEN
              ErrorTxt := STRSUBSTNO(Text001,
                "Purch. Detail No.", FIELDCAPTION("Project No."), "Project No.", FIELDCAPTION("Trade Item"), "Trade Item");
          END ELSE BEGIN
            IF "Basic Item" <> '' THEN BEGIN
              ProjectInventoryEntry.SETRANGE("Basic Item", "Basic Item");
              IF ProjectInventoryEntry.ISEMPTY THEN
                ErrorTxt := STRSUBSTNO(Text001,
                  "Purch. Detail No.", FIELDCAPTION("Project No."), "Project No.", FIELDCAPTION("Basic Item"), "Basic Item");
                EXIT;
            END ELSE BEGIN
              IF ("Yard No." <> '') OR ("System No." <> '') OR ("Entity No." <> '') THEN BEGIN
                ProjectInventoryEntry.SETRANGE("Yard No.", "Yard No.");
                ProjectInventoryEntry.SETRANGE("System No.", "System No.");
                ProjectInventoryEntry.SETRANGE("Entity No.", "Entity No.");
                IF ProjectInventoryEntry.ISEMPTY THEN
                  ErrorTxt := STRSUBSTNO(Text001,
                    "Purch. Detail No.", FIELDCAPTION("Project No."), "Project No.",
                    FIELDCAPTION("Yard No.")+'/'+FIELDCAPTION("System No.")+'/'+FIELDCAPTION("Entity No."),
                    "Yard No."+'/'+"System No."+'/'+"Entity No.");
              END ELSE BEGIN
                IF (Description <> '') OR ("Description 2" <> '') THEN BEGIN
                  ProjectInventoryEntry.SETRANGE(Description, Description);
                  ProjectInventoryEntry.SETRANGE("Description 2", "Description 2");
                  IF ProjectInventoryEntry.ISEMPTY THEN
                    ErrorTxt := STRSUBSTNO(Text001,
                      "Purch. Detail No.", FIELDCAPTION("Project No."), "Project No.",
                      FIELDCAPTION(Description), Description + "Description 2");
                END ELSE BEGIN
                  ErrorTxt := Text003;
                END;
              END;
            END;
          END;
        END;
      END;
      IF ErrorTxt <> '' THEN
        EXIT(FALSE);
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CheckDetailNoPosCorr@1100529015(ProjInventFields@1100529008 : Record 11012670;PurchaseLineDetail@1100529003 : Record 11020660;VAR ErrorTxt@1100529009 : Text) : Boolean;
    VAR
      DetailMutFields@1100529002 : Record 11012670;
      PurchLine@1100529004 : Record 39;
      PurchLineExtension@1100529007 : Record 11020644;
      PurchRcptLine@1100529005 : Record 121;
      AdviceOrderLine@1100529006 : Record 11012055;
    BEGIN
      //For ProjInventDelivery-PostiveAdjustments and ProjDeliveryNote-Return extra checks, because then checks on 'all' fields not done in CheckProjectInventory
      ErrorTxt := '';
      WITH PurchaseLineDetail DO BEGIN
        CLEAR(DetailMutFields);
        CASE "Line Type" OF
          "Line Type"::"Purchase Order":
            BEGIN
              IF PurchLine.GET(PurchLine."Document Type"::Order, "Document No.", "Line No.") THEN BEGIN
                PurchLineExtension.GetPurchLineExtension(PurchLine."Document Type",PurchLine."Document No.",PurchLine."Line No.");
                DetailMutFields."Item No." := PurchLine."Item No.";
                DetailMutFields."Trade Item" := PurchLine."Trade Item";
                DetailMutFields."Basic Item" := PurchLine."Basic Item";
                DetailMutFields."Yard No." := PurchLineExtension."Yard No.";
                DetailMutFields."System No." := PurchLineExtension."System No.";
                DetailMutFields."Entity No." := PurchLineExtension."Entity No.";
                DetailMutFields.Description := PurchLine.Description;
                DetailMutFields."Description 2" := PurchLine."Description 2";
              END;
            END;
          "Line Type"::"Purchase Receipt":
            BEGIN
              IF PurchRcptLine.GET("Document No.", "Line No.") THEN BEGIN
                DetailMutFields."Item No." := PurchRcptLine."Item No.";
                DetailMutFields."Trade Item" := PurchRcptLine."Trade Item";
                DetailMutFields."Basic Item" := PurchRcptLine."Basic Item";
                DetailMutFields."Yard No." := PurchRcptLine."Yard No.";
                DetailMutFields."System No." := PurchRcptLine."System No.";
                DetailMutFields."Entity No." := PurchRcptLine."Entity No.";
                DetailMutFields.Description := PurchRcptLine.Description;
                DetailMutFields."Description 2" := PurchRcptLine."Description 2";
              END;
            END;
          "Line Type"::"Advice Order":
            BEGIN
              IF AdviceOrderLine.GET("Record Type", "Project No.", '', '', "Line No.") THEN BEGIN  //DP01378
                DetailMutFields."Item No." := AdviceOrderLine."Item No.";
                DetailMutFields."Trade Item" := AdviceOrderLine."Trade Item";
                DetailMutFields."Basic Item" := AdviceOrderLine."Basic Item";
                DetailMutFields."Yard No." := AdviceOrderLine."Yard No.";
                DetailMutFields."System No." := AdviceOrderLine."System No.";
                DetailMutFields."Entity No." := AdviceOrderLine."Entity No.";
                DetailMutFields.Description := AdviceOrderLine.Description;
                DetailMutFields."Description 2" := AdviceOrderLine."Description 2";
              END;
            END;
        END;
      END;
      WITH ProjInventFields DO BEGIN
        IF "Item No." <> '' THEN BEGIN
          IF DetailMutFields."Item No." <> "Item No." THEN
            ErrorTxt := STRSUBSTNO(Text002, "Purch. Detail No.", FIELDCAPTION("Item No."), "Item No.");
        END ELSE BEGIN
          IF "Trade Item" <> '' THEN BEGIN
            IF DetailMutFields."Trade Item" <> "Trade Item" THEN
              ErrorTxt := STRSUBSTNO(Text002, "Purch. Detail No.", FIELDCAPTION("Trade Item"), "Trade Item");
          END ELSE BEGIN
            IF "Basic Item" <> '' THEN BEGIN
              IF DetailMutFields."Basic Item" <> "Basic Item" THEN
                ErrorTxt := STRSUBSTNO(Text002, "Purch. Detail No.", FIELDCAPTION("Basic Item"), "Basic Item");
            END ELSE BEGIN
              IF ("Yard No." <> '') OR ("System No." <> '') OR ("Entity No." <> '') THEN BEGIN
                IF (DetailMutFields."Yard No." <> "Yard No.") OR
                   (DetailMutFields."System No." <> "System No.") OR
                   (DetailMutFields."Entity No." <> "Entity No.")
                THEN
                  ErrorTxt := STRSUBSTNO(Text002, "Purch. Detail No.",
                    FIELDCAPTION("Yard No.")+'/'+FIELDCAPTION("System No.")+'/'+FIELDCAPTION("Entity No."),
                    "Yard No."+'/'+"System No."+'/'+"Entity No.");
              END ELSE BEGIN
                IF (Description <> '') OR ("Description 2" <> '') THEN BEGIN
                  IF (DetailMutFields.Description <> Description) OR (DetailMutFields."Description 2" <> "Description 2") THEN
                    ErrorTxt := STRSUBSTNO(Text002, "Purch. Detail No.", FIELDCAPTION(Description), Description+"Description 2");
                END;
              END;
            END;
          END;
        END;
      END;
      IF ErrorTxt <> '' THEN
        EXIT(FALSE);
      EXIT(TRUE);
    END;

    PROCEDURE PurchaseDetailDescription@1100529000() : Text;
    VAR
      PurchaseLineDetail@1100529000 : Record 11020660;
    BEGIN
      EXIT(PurchaseLineDetail.PurchaseDetailDescription("Purch. Detail No."));
    END;

    PROCEDURE ShowDetailCard@1100529001();
    VAR
      PurchaseLineDetail@1100529000 : Record 11020660;
    BEGIN
      TESTFIELD("Purch. Detail No.");
      PurchaseLineDetail.ShowDetailCardOfDetailNo("Purch. Detail No.");
    END;

    PROCEDURE ShowPurchaseOrderOfEntry@1100529002();
    VAR
      PurchOrder@1100529000 : Record 38;
    BEGIN
      CALCFIELDS("Order No.");
      TESTFIELD("Order No.");
      IF "Order No." <> '' THEN BEGIN
        PurchOrder.SETRANGE("Document Type", PurchOrder."Document Type"::Order);
        PurchOrder.SETRANGE("No.", "Order No.");
        PurchOrder.FINDFIRST;
        PAGE.RUNMODAL(PAGE::"Purchase Order", PurchOrder);
      END;
    END;

    PROCEDURE ShowPurchaseOrderOfInventoryLine@1100529004();
    VAR
      ProjectInventEntry@1100529001 : Record 11012670;
      PurchOrder@1100529000 : Record 38;
      TmpPurchOrder@1100529002 : TEMPORARY Record 38;
      Counter@1100529003 : Integer;
    BEGIN
      ProjectInventEntry.SETCURRENTKEY(
        "Project No.", "Item Composition", "Extension Contract", "Plot No.", "Location Code", "Bin Code", "Shelf No.",
        "Unit of Measure Code", Element, "Assembly Yard Number Object", "Posting Date", "Entry Type");
      ProjectInventEntry.SETRANGE("Project No.", "Project No.");
      ProjectInventEntry.SETRANGE("Item Composition", "Item Composition");
      ProjectInventEntry.SETRANGE(Manufacturer, Manufacturer);
      ProjectInventEntry.SETRANGE("Vendor (Trade Item)", "Vendor (Trade Item)");
      ProjectInventEntry.SETRANGE("Location Code", "Location Code");
      ProjectInventEntry.SETRANGE("Bin Code", "Bin Code");
      ProjectInventEntry.SETRANGE("Shelf No.", "Shelf No.");
      ProjectInventEntry.SETRANGE("Unit of Measure Code", "Unit of Measure Code");
      ProjectInventEntry.SETRANGE(Element, Element);
      ProjectInventEntry.SETRANGE("Assembly Yard Number Object", "Assembly Yard Number Object");
      ProjectInventEntry.SETRANGE("Extension Contract", "Extension Contract");
      ProjectInventEntry.SETRANGE("Plot No.", "Plot No.");
      IF ProjectInventEntry.FINDSET THEN BEGIN
        REPEAT
          ProjectInventEntry.CALCFIELDS("Order No.");
          IF ProjectInventEntry."Order No." <> '' THEN BEGIN
            IF (PurchOrder.GET(PurchOrder."Document Type"::Order, ProjectInventEntry."Order No.")) AND
               (NOT TmpPurchOrder.GET(PurchOrder."Document Type"::Order, ProjectInventEntry."Order No."))
            THEN BEGIN
              TmpPurchOrder := PurchOrder;
              TmpPurchOrder.INSERT;
              Counter := Counter + 1;
            END;
          END;
        UNTIL ProjectInventEntry.NEXT = 0;
      END;
      IF Counter = 0 THEN
        EXIT;

      IF Counter = 1 THEN BEGIN
        TmpPurchOrder.FINDFIRST;
        PurchOrder.SETRANGE("Document Type", PurchOrder."Document Type"::Order);
        PurchOrder.SETRANGE("No.", TmpPurchOrder."No.");
        PAGE.RUNMODAL(PAGE::"Purchase Order", PurchOrder);
      END ELSE BEGIN
        TmpPurchOrder.SETRANGE("Document Type", PurchOrder."Document Type"::Order);
        TmpPurchOrder.FINDFIRST;
        PAGE.RUNMODAL(PAGE::"Purchase Order List", TmpPurchOrder);
      END;
    END;

    BEGIN
    {
      4PS01 HBK 03-08-2009 Added Objectfields and added 3 options tot Entry Type
      4PS02 HBK 06-05-2010 Added field Element
      4PS03 HBK 07-05-2010 Added Project No. to key 3 for flowfield "Inventory for Projects" in T27/Item
      4PS04 HBK 10-06-2010 TM4870 Added Manufacturer to "Item Composition"
      4PS05 HBK 10-06-2010 TM4870 Added Element to key and removed Manufacturer (stored in "Item Composition")
      4PS06 DB  02-11-2010 Added Bin Code to key and removed Vendor (Trade Item), stored in "Item Composition"
      4PS07 RDB 04-03-2011 Added 'Variant Code' to "Item Composition"
      4PS 04-07-16 UKR-C21173 KD: New project inventory screen (BI006) - Added fields "Purchase Receipt No. Filter", "Purchase Rcpt. Line No. Filter", "Receipt No."
                                                                         Field "Inventory Quantity" changed: filters on Receipt No. and Receipt Line No. added
                                                                         Trigger GetProjInventoryDeliveryLine changed
                                                                         Trigger GetProjInventoryDeliveryLineReceipt added
      4PS 08-02-17 UKR-C32789 KD: Comments for logistics (BI003a) - Field "Comments for Logistics" added
    }
    END.
  }
}

