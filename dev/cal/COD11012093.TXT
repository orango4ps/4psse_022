OBJECT Codeunit 11012093 Customer Cockpit Mgt
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1100528700 : TextConst 'ENU=There are no open to-dos.\\Do you want to create a new to-do?;NOR=Det finnes ingen †pne oppgaver.\\Vil du opprette en ny oppgave?;SVE=Det finns ingen ”ppen †tg„rd.\\Vill du skapa en ny †tg„rd?';
      Text002@1100528701 : TextConst 'ENU=Do you want to create a credit memo for Invoice %1?;NOR=Vil du opprette kreditnota for Faktura %1?;SVE=Vill du skapa en kredit g„llande faktura %1?';

    [External]
    PROCEDURE ShowTodosCustomer@1100528700(CustomerNo@1100528702 : Code[20]);
    VAR
      Todo@1100528700 : Record 5080;
      TodoList@1100528701 : Page 5096;
    BEGIN
      Todo.SETCURRENTKEY("Customer No.");
      Todo.SETRANGE("Customer No.", CustomerNo);
      Todo.SETRANGE("System To-do Type", Todo."System To-do Type"::Organizer);
      Todo.SETRANGE("Date Closed", 0D);
      TodoList.SETTABLEVIEW(Todo);
      TodoList.SetCreateTodoAllowed(FALSE);
      TodoList.RUNMODAL;
    END;

    [External]
    PROCEDURE ShowTodosEntry@1100528701(EntryNo@1100528702 : Integer);
    VAR
      Todo@1100528700 : Record 5080;
      TodoList@1100528701 : Page 5096;
    BEGIN
      Todo.SETCURRENTKEY("Cust. Ledger Entry No.","Date Closed");
      Todo.SETRANGE("Cust. Ledger Entry No.", EntryNo);
      Todo.SETRANGE("System To-do Type", Todo."System To-do Type"::Organizer);
      TodoList.SETTABLEVIEW(Todo);
      TodoList.SetCreateTodoAllowed(FALSE);
      TodoList.RUNMODAL;
    END;

    [External]
    PROCEDURE CheckAndCreateTodoEntry@1100528705(CustLedgerEntry@1100528705 : Record 21);
    VAR
      OpenTodoList@1100528702 : Boolean;
      Todo@1100528704 : Record 5080;
      TempTodo@1100528701 : TEMPORARY Record 5080;
      TodoList@1100528700 : Page 5096;
    BEGIN
      Todo.SETCURRENTKEY("Cust. Ledger Entry No.","Date Closed");
      Todo.SETRANGE("Cust. Ledger Entry No.", CustLedgerEntry."Entry No.");
      Todo.SETRANGE("Date Closed", 0D);
      Todo.SETRANGE("System To-do Type", Todo."System To-do Type"::Organizer);
      IF Todo.FINDFIRST THEN
        OpenTodoList := TRUE
      ELSE
        IF CONFIRM(Text001, TRUE) THEN BEGIN
          OpenTodoList := TRUE;
          TempTodo.CreateTaskFromCustLedgerEntry(CustLedgerEntry);
        END;

      IF OpenTodoList THEN BEGIN
        TodoList.SETTABLEVIEW(Todo);
        TodoList.SETRECORD(Todo);
        TodoList.SetCreateTodoAllowed(FALSE);
        TodoList.RUNMODAL;
      END;
    END;

    [External]
    PROCEDURE ShowCustEntryDocument@1100528702(CustLedgerEntry@1100528700 : Record 21);
    VAR
      SalesInvoiceHeader@1100528701 : Record 112;
      SalesCrMemoHeader@1100528702 : Record 114;
    BEGIN
      CASE CustLedgerEntry."Document Type" OF
        CustLedgerEntry."Document Type"::Invoice:
          BEGIN
            SalesInvoiceHeader.SETRANGE("No.", CustLedgerEntry."Document No.");
            IF SalesInvoiceHeader.FINDFIRST THEN
              PAGE.RUNMODAL(132, SalesInvoiceHeader);
          END;
        CustLedgerEntry."Document Type"::"Credit Memo":
          BEGIN
            SalesCrMemoHeader.SETRANGE("No.", CustLedgerEntry."Document No.");
            IF SalesCrMemoHeader.FINDFIRST THEN
              PAGE.RUNMODAL(134, SalesCrMemoHeader);
          END;
      END;
    END;

    [External]
    PROCEDURE ShowSalesComments@1100528703(CustLedgerEntry@1100528700 : Record 21);
    VAR
      SalesCommentLine@1100528701 : Record 44;
    BEGIN
      SalesCommentLine.RESET;
      CASE CustLedgerEntry."Document Type" OF
        CustLedgerEntry."Document Type"::Invoice:
          SalesCommentLine.SETRANGE("Document Type", SalesCommentLine."Document Type"::"Posted Invoice");
        CustLedgerEntry."Document Type"::"Credit Memo":
          SalesCommentLine.SETRANGE("Document Type", SalesCommentLine."Document Type"::"Posted Credit Memo");
        CustLedgerEntry."Document Type"::Payment:
          SalesCommentLine.SETRANGE("Document Type", SalesCommentLine."Document Type"::Payment);
        CustLedgerEntry."Document Type"::Refund:
          SalesCommentLine.SETRANGE("Document Type", SalesCommentLine."Document Type"::Refund);
        ELSE
          EXIT;
      END;
      SalesCommentLine.SETRANGE("No.", CustLedgerEntry."Document No.");
      PAGE.RUNMODAL(PAGE::"Sales Comment Sheet", SalesCommentLine);
    END;

    [External]
    PROCEDURE CreateCreditMemo@1100528704(CustLedgerEntry@1100528700 : Record 21);
    VAR
      SalesHeader@1100528701 : Record 36;
      CopyDocumentMgt@1100528702 : Codeunit 6620;
      SalesDocumentType@1100528703 : 'Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo';
    BEGIN
      CustLedgerEntry.TESTFIELD("Document Type", CustLedgerEntry."Document Type"::Invoice);
      IF CONFIRM(STRSUBSTNO(Text002, CustLedgerEntry."Document No."), TRUE) THEN BEGIN
        SalesHeader.INIT;
        SalesHeader."Document Type" := SalesHeader."Document Type"::"Credit Memo";
        SalesHeader."No." := '';
        SalesHeader.INSERT(TRUE);

        CopyDocumentMgt.SetProperties(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE);
        CopyDocumentMgt.CopySalesDoc(SalesDocumentType::"Posted Invoice", CustLedgerEntry."Document No.", SalesHeader);

        PAGE.RUN(44, SalesHeader);
      END;
    END;

    BEGIN
    END.
  }
}

