OBJECT Table 11072318 PB Installment Overview Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnModify=BEGIN
               TestStatusOpen;
             END;

    OnDelete=BEGIN
               TestStatusOpen;
               UnlinkDetailLines;
             END;

    CaptionML=ENU=Price Book Installment Overview Line;
    LookupPageID=Page11126818;
    DrillDownPageID=Page11126818;
  }
  FIELDS
  {
    { 10  ;   ;Installment Overview No.;Code20    ;TableRelation="PB Installment Overview";
                                                   OnValidate=VAR
                                                                PBInstallmentOverview@1100528600 : Record 11072317;
                                                              BEGIN
                                                                IF NOT PBInstallmentOverview.GET("Installment Overview No.") THEN
                                                                  PBInstallmentOverview.INIT;
                                                                "Price Book Code" := PBInstallmentOverview."Price Book Code";
                                                                "Price Book Index Date" := PBInstallmentOverview."Price Book Index Date";
                                                                "Service Contract No." := PBInstallmentOverview."Service Contract No.";
                                                                "Service Order No." := PBInstallmentOverview."Service Order No.";
                                                                "Bill-to Customer No." := PBInstallmentOverview."Bill-to Customer No.";
                                                                "Customer No." := PBInstallmentOverview."Customer No.";
                                                                "Seq. No." := PBInstallmentOverview."Seq. No.";
                                                              END;

                                                   CaptionML=ENU=Installment Overview No. }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 30  ;   ;Line Type           ;Option        ;CaptionML=[ENU=Line Type;
                                                              NOR=Radtype;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=ENU=Initial,Uncoded,Extra Declarations,Administrative,Surcharge;
                                                   OptionString=Initial,Uncoded,Extra Declarations,Administrative,Surcharge;
                                                   Editable=No }
    { 40  ;   ;Indentation         ;Integer       ;CaptionML=[ENU=Indentation;
                                                              NOR=Innrykking;
                                                              SVE=Indrag];
                                                   Editable=No }
    { 50  ;   ;Unit Price Code     ;Code35        ;TableRelation="Service Unit Price".Code WHERE (Price Book Code=FIELD(Price Book Code),
                                                                                                  Index Date=FIELD(Price Book Index Date));
                                                   OnValidate=BEGIN
                                                                DetermineProcessedQuantity;
                                                                DetermineIndentation;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Unit Price Code;
                                                              NOR=Enhetspriskode;
                                                              SVE=Enhetspriskod];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 60  ;   ;Description         ;Text100       ;OnValidate=BEGIN
                                                                TestIfEditableAllowed;
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 70  ;   ;Description 2       ;Text50        ;OnValidate=BEGIN
                                                                TestIfEditableAllowed;
                                                              END;

                                                   CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2] }
    { 80  ;   ;Description 3       ;Text50        ;OnValidate=BEGIN
                                                                TestIfEditableAllowed;
                                                              END;

                                                   CaptionML=[ENU=Description 3;
                                                              NOR=Beskrivelse 3;
                                                              SVE=Beskrivning 3] }
    { 110 ;   ;Unit of Measure     ;Code10        ;OnValidate=BEGIN
                                                                TestIfEditableAllowed;
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=M†leenhet;
                                                              SVE=M†ttenhet] }
    { 120 ;   ;Unit Price          ;Decimal       ;OnValidate=BEGIN
                                                                TestIfEditableAllowed;
                                                                CalculateTotals;
                                                              END;

                                                   CaptionML=[ENU=Unit Price;
                                                              NOR=Salgspris;
                                                              SVE=A-pris];
                                                   DecimalPlaces=2:5 }
    { 130 ;   ;Price Book Quantity ;Decimal       ;OnLookup=VAR
                                                              ServiceUnitPrice@1100528600 : Record 11071769;
                                                            BEGIN
                                                              ServiceUnitPrice.SETRANGE("Price Book Code", "Price Book Code");
                                                              ServiceUnitPrice.SETRANGE("Index Date", "Price Book Index Date");
                                                              ServiceUnitPrice.SETRANGE(Code, "Unit Price Code");
                                                              PAGE.RUN(0, ServiceUnitPrice);
                                                            END;

                                                   CaptionML=ENU=Price Book Quantity;
                                                   Editable=No }
    { 140 ;   ;Previous Processed Quantity;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("PB Installment Overview Line"."Processed Quantity" WHERE (Price Book Code=FIELD(Price Book Code),
                                                                                                                              Price Book Index Date=FIELD(Price Book Index Date),
                                                                                                                              Service Contract No.=FIELD(Service Contract No.),
                                                                                                                              Service Order No.=FIELD(Service Order No.),
                                                                                                                              Customer No.=FIELD(Customer No.),
                                                                                                                              Bill-to Customer No.=FIELD(Bill-to Customer No.),
                                                                                                                              Seq. No.=FIELD(FILTER(Installm. Over. Seq.No. Filter)),
                                                                                                                              Unit Price Code=FIELD(Unit Price Code),
                                                                                                                              Installment Overview Status=FILTER(<>Rejected),
                                                                                                                              Line Type=FILTER(<>Surcharge)));
                                                   CaptionML=ENU=Previous Invoiced Quantity;
                                                   Editable=No }
    { 150 ;   ;Processed Quantity  ;Decimal       ;OnValidate=BEGIN
                                                                TestIfEditableAllowed;
                                                                CalculateTotals;
                                                              END;

                                                   OnLookup=VAR
                                                              SUPProductionLine@1100528600 : Record 11071774;
                                                              ServiceOrderCostPlusEntry@1100528601 : Record 11012825;
                                                            BEGIN
                                                              CASE "Line Type" OF
                                                                "Line Type"::Initial,
                                                                "Line Type"::Administrative,
                                                                "Line Type"::Uncoded:
                                                                  BEGIN
                                                                    SUPProductionLine.SETRANGE("Installment Overview No.", "Installment Overview No.");
                                                                    SUPProductionLine.SETRANGE("Installment Overview Line No.", "Line No.");
                                                                    PAGE.RUNMODAL(0, SUPProductionLine);
                                                                  END;
                                                                "Line Type"::"Extra Declarations":
                                                                  BEGIN
                                                                    ServiceOrderCostPlusEntry.SETRANGE("Installment Overview No.", "Installment Overview No.");
                                                                    ServiceOrderCostPlusEntry.SETRANGE("Installment Overview Line No.", "Line No.");
                                                                    PAGE.RUNMODAL(0, ServiceOrderCostPlusEntry);
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Processed Quantity }
    { 170 ;   ;Amount incl. Previous Overview;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("PB Installment Overview Line"."Overview Amount" WHERE (Price Book Code=FIELD(Price Book Code),
                                                                                                                           Price Book Index Date=FIELD(Price Book Index Date),
                                                                                                                           Service Contract No.=FIELD(Service Contract No.),
                                                                                                                           Service Order No.=FIELD(Service Order No.),
                                                                                                                           Customer No.=FIELD(Customer No.),
                                                                                                                           Bill-to Customer No.=FIELD(Bill-to Customer No.),
                                                                                                                           Seq. No.=FIELD(FILTER(Installm. Over. Seq.No. Filter)),
                                                                                                                           Unit Price Code=FIELD(Unit Price Code),
                                                                                                                           Installment Overview Status=FILTER(<>Rejected)));
                                                   CaptionML=ENU=Amount incl. Previous Overview;
                                                   Editable=No }
    { 180 ;   ;Overview Amount     ;Decimal       ;CaptionML=ENU=Overview Amount;
                                                   Editable=No }
    { 190 ;   ;Comment             ;Text250       ;CaptionML=[ENU=Comment;
                                                              NOR=Kommentar;
                                                              SVE=Kommentar] }
    { 200 ;   ;Installm. Over. Seq.No. Filter;Integer;
                                                   FieldClass=FlowFilter;
                                                   CaptionML=ENU=Installm. Overview Seq. No. Filter }
    { 210 ;   ;Total Overview Amount;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("PB Installment Overview Line"."Overview Amount" WHERE (Installment Overview No.=FIELD(Installment Overview No.)));
                                                   CaptionML=ENU=Total Overview Amount;
                                                   Editable=No }
    { 220 ;   ;Text                ;Text250       ;OnValidate=BEGIN
                                                                "Text Block" := Text <> '';
                                                              END;

                                                   CaptionML=[ENU=Text;
                                                              NOR=Tekst;
                                                              SVE=Ben„mning] }
    { 230 ;   ;Text Block          ;Boolean       ;CaptionML=[ENU=Text Block;
                                                              NOR=Tekstblokk;
                                                              SVE=Textblock];
                                                   Editable=No }
    { 240 ;   ;Install. Collect. Overview No.;Code20;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("PB Installment Overview"."Install. Collect. Overview No." WHERE (No.=FIELD(Installment Overview No.)));
                                                   CaptionML=[ENU=Installment Collection Overview No.;
                                                              SVE=Betalplanssamling, ”versiktsnummer];
                                                   Editable=No }
    { 500 ;   ;Price Book Code     ;Code20        ;TableRelation="Service Price Book".Code;
                                                   CaptionML=[ENU=Price Book Code;
                                                              SVE=Enhetspriskod];
                                                   Editable=No }
    { 510 ;   ;Price Book Index Date;Date         ;TableRelation="Service Price Book"."Index Date" WHERE (Code=FIELD(Price Book Code));
                                                   CaptionML=[ENU=Price Book Index Date;
                                                              SVE=Indexdatum f”r enhetspris];
                                                   Editable=No }
    { 520 ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract;
                                                   CaptionML=[ENU=Service Contract No.;
                                                              NOR=Servicekontraktnr;
                                                              SVE=Servicekontraktnr];
                                                   Editable=No }
    { 530 ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order";
                                                   CaptionML=[ENU=Service Order No.;
                                                              NOR=Serviceordrenr.;
                                                              SVE=Serviceordernr];
                                                   Editable=No }
    { 540 ;   ;Seq. No.            ;Integer       ;CaptionML=[ENU=Seq. No.;
                                                              NOR=Sekv. nr;
                                                              SVE=Sekv. nr];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 550 ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              NOR=Faktureringskundenr;
                                                              SVE=Faktureringskundnr];
                                                   Editable=No }
    { 560 ;   ;Surcharge Set Code  ;Code10        ;TableRelation="Price Book Surcharge Set".Code WHERE (Price Book Code=FIELD(Price Book Code),
                                                                                                        Price Book Index Date=FIELD(Price Book Index Date));
                                                   OnValidate=BEGIN
                                                                TestIfEditableAllowed;
                                                              END;

                                                   CaptionML=ENU=Surcharge Set Code }
    { 570 ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Customer No.;
                                                              NOR=Kundenr.;
                                                              SVE=Kundnr];
                                                   Editable=No }
    { 580 ;   ;Original Service Order No.;Code20  ;TableRelation="Service Order";
                                                   CaptionML=ENU=Original Service Order No.;
                                                   Editable=No }
    { 590 ;   ;Cost Plus Entry Line No.;Integer   ;CaptionML=ENU=Cost Plus Entry Line No.;
                                                   Editable=No }
    { 600 ;   ;Installment Overview Status;Option ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("PB Installment Overview".Status WHERE (No.=FIELD(Installment Overview No.)));
                                                   CaptionML=ENU=Installment Overview Status;
                                                   OptionCaptionML=ENU=Open,,,Offered,,,Approved,,,Rejected,,,Processed;
                                                   OptionString=Open,,,Offered,,,Approved,,,Rejected,,,Processed;
                                                   Editable=No }
    { 610 ;   ;Unit Price Type     ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Unit Price"."Unit Price Type" WHERE (Price Book Code=FIELD(Price Book Code),
                                                                                                                    Index Date=FIELD(Price Book Index Date),
                                                                                                                    Code=FIELD(Unit Price Code)));
                                                   CaptionML=[ENU=Unit Price Type;
                                                              NOR=Enhetspris, type;
                                                              SVE=Enhetspristyp];
                                                   OptionCaptionML=ENU=" ,Header,Administrative,Summary Element";
                                                   OptionString=[ ,Header,Administrative,Summary Element];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Installment Overview No.,Unit Price Code;Clustered=Yes }
    {    ;Price Book Code,Price Book Index Date,Service Contract No.,Service Order No.,Seq. No. }
    {    ;Installment Overview No.,Line Type,Unit Price Code }
    {    ;Installment Overview No.,Line No.        }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TmpSUPProductionLine@1100528600 : TEMPORARY Record 11071774;

    LOCAL PROCEDURE CalculateTotals@1100528605();
    BEGIN
      VALIDATE("Overview Amount", "Processed Quantity" * "Unit Price");
    END;

    LOCAL PROCEDURE DetermineProcessedQuantity@1100528610();
    VAR
      PBInstallmentOverview@1100528602 : Record 11072317;
      SUPProductionLine@1100528601 : Record 11071774;
      ServiceOrder@1100528603 : Record 11012823;
      PBInstallmentOverviewMgt@1100528604 : Codeunit 11012887;
      ProcessedQuantity@1100528600 : Decimal;
    BEGIN
      CASE "Line Type" OF
        "Line Type"::Initial,
        "Line Type"::Uncoded:
          BEGIN
            PBInstallmentOverview.GET("Installment Overview No.");
            GetServiceOrdersByBaseServiceOrder("Service Order No.", ServiceOrder);
            IF ServiceOrder.FINDSET THEN; //; deliberate
            REPEAT
              IF ServiceOrder."No." <> '' THEN BEGIN
                SUPProductionLine.SETCURRENTKEY("Service Order No.");
                SUPProductionLine.SETRANGE("Service Order No.", ServiceOrder."No.");
              END ELSE BEGIN
                SUPProductionLine.SETCURRENTKEY("Price Book Code");
                SUPProductionLine.SETRANGE("Price Book Code", "Price Book Code");
                SUPProductionLine.SETRANGE("Index Date", "Price Book Index Date");
              END;
              SUPProductionLine.SETFILTER("SUP Production Status", '%1|%2',
                SUPProductionLine."SUP Production Status"::Offered, SUPProductionLine."SUP Production Status"::Approved);
              SUPProductionLine.SETRANGE("Production Date", 0D, PBInstallmentOverview."Ending Date");
              IF "Line Type" = "Line Type"::Uncoded THEN
                SUPProductionLine.SETRANGE("Unit Price Code", '');
              SUPProductionLine.SETRANGE("Alternative Unit Price Code", "Unit Price Code");
              SUPProductionLine.SETFILTER("Installment Overview No.", '%1|%2', '', "Installment Overview No.");
              IF SUPProductionLine.FINDSET THEN
                REPEAT
                  IF "Service Order No." = '' THEN
                    ServiceOrder.GET(SUPProductionLine."Service Order No.");
                  IF (("Service Order No." <> '') OR NOT PBInstallmentOverviewMgt.IsUnitPriceInvoicingPerServiceOrder(SUPProductionLine."Service Order No.")) AND
                     NOT PBInstallmentOverviewMgt.IsUnitPriceInvoicingPerCostPlus(SUPProductionLine."Service Order No.") AND
                     (ServiceOrder."Service Contract No." = "Service Contract No.") AND
                     (ServiceOrder."Customer No." = "Customer No.") AND
                     (ServiceOrder."Bill-to Customer No." = "Bill-to Customer No.")
                  THEN BEGIN
                    ProcessedQuantity += SUPProductionLine.Production;
                    IF SUPProductionLine."Installment Overview No." = '' THEN BEGIN
                      //These temporary lines will be processed in codeunit 11012887 - Installment Overview Mgt. (PB)
                      TmpSUPProductionLine := SUPProductionLine;
                      TmpSUPProductionLine."Installment Overview No." := "Installment Overview No.";
                      TmpSUPProductionLine."Installment Overview Line No." := "Line No.";
                      TmpSUPProductionLine.INSERT;
                    END;
                  END;
                UNTIL SUPProductionLine.NEXT = 0;
              VALIDATE("Processed Quantity", ProcessedQuantity);
            UNTIL ServiceOrder.NEXT = 0;
          END;
      END;
    END;

    PROCEDURE DetermineIndentation@1100525003();
    BEGIN
      CASE STRLEN("Unit Price Code") = 6 OF
        TRUE: Indentation := 4;
        FALSE: Indentation := STRLEN("Unit Price Code") - 1;
      END;
    END;

    LOCAL PROCEDURE TestIfEditableAllowed@1100528602();
    BEGIN
      IF CurrFieldNo = 0 THEN
        EXIT;
      TESTFIELD("Line Type", "Line Type"::Administrative);
    END;

    PROCEDURE GetTotalProcessedQuantity@1100528604() : Decimal;
    BEGIN
      SETRANGE("Installm. Over. Seq.No. Filter", 0, "Seq. No." -1);
      CALCFIELDS("Previous Processed Quantity");
      EXIT("Previous Processed Quantity" + "Processed Quantity");
    END;

    PROCEDURE GetAmountinclOverview@1100528601() : Decimal;
    BEGIN
      SETRANGE("Installm. Over. Seq.No. Filter", 0, "Seq. No." -1);
      CALCFIELDS("Amount incl. Previous Overview");
      EXIT("Amount incl. Previous Overview" + "Overview Amount");
    END;

    PROCEDURE EditText@1100528600();
    VAR
      ItemTextPage@11012001 : Page 11012120;
    BEGIN
      ItemTextPage.SetSelection(
        DATABASE::"PB Installment Overview Line", "Installment Overview No.", "Unit Price Code", '', '', '', '', 0, 0);
      ItemTextPage.RUNMODAL;
    END;

    LOCAL PROCEDURE TestStatusOpen@1100528603();
    VAR
      PBInstallmentOverview@1100528600 : Record 11072317;
    BEGIN
      IF PBInstallmentOverview.GET("Installment Overview No.") THEN
        PBInstallmentOverview.TESTFIELD(Status, PBInstallmentOverview.Status::Open);
    END;

    LOCAL PROCEDURE GetServiceOrdersByBaseServiceOrder@1100528606(IServiceOrderNo@1100528601 : Code[20];VAR OServiceOrder@1100528600 : Record 11012823);
    VAR
      ServiceOrder@1100528605 : Record 11012823;
      BaseServiceOrder@1100528602 : Record 11012823;
      BaseServiceOrderExtension@1100528603 : Record 11071727;
      ServiceOrderExtension@1100528604 : Record 11071727;
    BEGIN
      OServiceOrder.RESET;
      IF IServiceOrderNo <> '' THEN BEGIN
        OServiceOrder.GET(IServiceOrderNo);
        OServiceOrder.MARK(TRUE);
        IF OServiceOrder."Base Service Order" THEN BEGIN
          BaseServiceOrder := OServiceOrder;
          BaseServiceOrderExtension.GetServOrderExtension(BaseServiceOrder."No.");
          ServiceOrder.SETCURRENTKEY("Base Service Order No.");
          ServiceOrder.SETRANGE("Base Service Order No.", BaseServiceOrder."No.");
          ServiceOrder.SETRANGE("Settlement Method", BaseServiceOrder."Settlement Method");
          ServiceOrder.SETRANGE("Price Book Type", BaseServiceOrder."Price Book Type");
          ServiceOrder.SETRANGE("Customer No.", BaseServiceOrder."Customer No.");
          ServiceOrder.SETRANGE("Bill-to Customer No.", BaseServiceOrder."Bill-to Customer No.");
          IF ServiceOrder.FINDSET THEN
            REPEAT
              ServiceOrderExtension.SETRANGE("Service Order No.", BaseServiceOrderExtension."Service Order No.");
              ServiceOrderExtension.SETRANGE("Price Book Code", BaseServiceOrderExtension."Price Book Code");
              ServiceOrderExtension.SETRANGE("Price Book Index Date", BaseServiceOrderExtension."Price Book Index Date");
              IF NOT ServiceOrderExtension.ISEMPTY THEN BEGIN
                OServiceOrder."No." := ServiceOrder."No.";
                OServiceOrder.MARK(TRUE);
              END;
            UNTIL ServiceOrder.NEXT = 0;
        END;
      END;
      OServiceOrder.MARKEDONLY(TRUE);
    END;

    PROCEDURE UnlinkDetailLines@1100528607();
    VAR
      SUPProductionLine@1100528601 : Record 11071774;
      ServiceOrderCostPlusEntry@1100528600 : Record 11012825;
    BEGIN
      CASE "Line Type" OF
        "Line Type"::Initial,
        "Line Type"::Uncoded,
        "Line Type"::Administrative:
          BEGIN
            SUPProductionLine.SETCURRENTKEY("Installment Overview No.");
            SUPProductionLine.SETRANGE("Installment Overview No.", "Installment Overview No.");
            SUPProductionLine.SETRANGE("Installment Overview Line No.", "Line No.");
            SUPProductionLine.MODIFYALL("Installment Overview No.", '');
          END;
        "Line Type"::"Extra Declarations":
          BEGIN
            ServiceOrderCostPlusEntry.SETCURRENTKEY("Installment Overview No.");
            ServiceOrderCostPlusEntry.SETRANGE("Installment Overview No.", "Installment Overview No.");
            ServiceOrderCostPlusEntry.SETRANGE("Installment Overview Line No.", "Line No.");
            ServiceOrderCostPlusEntry.MODIFYALL(Chargeable, TRUE);
            ServiceOrderCostPlusEntry.MODIFYALL("Installment Overview No.", '');
          END;
      END;
    END;

    PROCEDURE GetTmpSUPProductionLines@1100528609(VAR OTmpSUPProductionLine@1100528601 : TEMPORARY Record 11071774);
    BEGIN
      IF TmpSUPProductionLine.FINDSET THEN
        REPEAT
          OTmpSUPProductionLine := TmpSUPProductionLine;
          OTmpSUPProductionLine.INSERT;
        UNTIL TmpSUPProductionLine.NEXT = 0;
      TmpSUPProductionLine.DELETEALL;
    END;

    PROCEDURE FindTmpSUPProductionLine@1100525000(VAR OTmpSUPProductionLine@1100525000 : TEMPORARY Record 11071774;IPBInstallmentOverviewLine@1100525001 : Record 11072318;ServiceOrderNo@1100528200 : Code[20]) LineFound : Boolean;
    BEGIN
      TmpSUPProductionLine.SETRANGE("Installment Overview No.", IPBInstallmentOverviewLine."Installment Overview No.");
      TmpSUPProductionLine.SETRANGE("Installment Overview Line No.", IPBInstallmentOverviewLine."Line No.");
      TmpSUPProductionLine.SETFILTER("Service Order No.", '<>%1' ,ServiceOrderNo);
      IF TmpSUPProductionLine.FINDFIRST THEN BEGIN
        LineFound := TRUE;
        OTmpSUPProductionLine := TmpSUPProductionLine;
      END;
      TmpSUPProductionLine.SETRANGE("Installment Overview No.");
      TmpSUPProductionLine.SETRANGE("Installment Overview Line No.");
    END;

    BEGIN
    END.
  }
}

