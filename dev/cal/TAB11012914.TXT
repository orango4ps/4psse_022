OBJECT Table 11012914 Investment Proposal Budget
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD(Date);
               GetProjDevData();
               IF (ProjDevRec."Budget Level" <> ProjDevRec."Budget Level"::Model) AND ("House Model" <> '') THEN
                 FIELDERROR("House Model", STRSUBSTNO(Text001, ProjDevRec.FIELDCAPTION("Budget Level"), ProjDevRec."Budget Level"));

               CheckFixed();

               IF "Line No." = 0 THEN
                 "Line No." := GetNextEntryNo;
             END;

    OnModify=BEGIN
               TESTFIELD(Date);
               GetProjDevData();
               IF (ProjDevRec."Budget Level" <> ProjDevRec."Budget Level"::Model) AND ("House Model" <> '') THEN
                 FIELDERROR("House Model", STRSUBSTNO(Text001, ProjDevRec.FIELDCAPTION("Budget Level"), ProjDevRec."Budget Level"));

               CheckFixed();
             END;

    OnDelete=BEGIN
               CheckFixed();
             END;

    OnRename=BEGIN
               GetProjDevData();
               IF (ProjDevRec."Budget Level" <> ProjDevRec."Budget Level"::Model) AND ("House Model" <> '') THEN
                 FIELDERROR("House Model", STRSUBSTNO(Text001, ProjDevRec.FIELDCAPTION("Budget Level"), ProjDevRec."Budget Level"));

               CheckFixed();
             END;

    CaptionML=[ENU=Investment Proposal Budget;
               NOR=Inversetringsforslag, budsjett;
               SVE=Investeringsf”rslag, budget];
    LookupPageID=Page11012918;
    DrillDownPageID=Page11012918;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr];
                                                   NotBlank=Yes }
    { 20  ;   ;Version             ;Code10        ;TableRelation="Investment Proposal".Version WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=Version;
                                                              NOR=Versjon;
                                                              SVE=Version];
                                                   NotBlank=Yes }
    { 30  ;   ;Rubric Code         ;Code10        ;TableRelation="Investm. Proposal Rubric Line"."Rubric Code" WHERE (Project No.=FIELD(Project No.),
                                                                                                                      Version=FIELD(Version));
                                                   OnValidate=BEGIN
                                                                IF ("Rubric Code" <> xRec."Rubric Code") OR (Description = '') THEN BEGIN
                                                                  IF InvPropRubricRec.GET("Project No.", Version, "Rubric Code") THEN
                                                                    Description := InvPropRubricRec.Description;
                                                                END;
                                                                VALIDATE("Budget Type");
                                                              END;

                                                   CaptionML=[ENU=Rubric Code;
                                                              NOR=Rubrikkode;
                                                              SVE=Rubrikkod];
                                                   NotBlank=Yes }
    { 35  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 40  ;   ;Date                ;Date          ;OnValidate=BEGIN
                                                                CheckReferenceDate(TRUE);
                                                              END;

                                                   CaptionML=[ENU=Date;
                                                              NOR=Dato;
                                                              SVE=Datum];
                                                   NotBlank=Yes }
    { 45  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 47  ;   ;Frequency           ;Decimal       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                CalculateAmount();
                                                              END;

                                                   CaptionML=[ENU=Frequency;
                                                              NOR=Forekomst;
                                                              SVE=Frekvens] }
    { 50  ;   ;Quantity            ;Decimal       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                CalculateAmount();
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal] }
    { 55  ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=M†leenhet;
                                                              SVE=Enhet] }
    { 60  ;   ;Unit Price          ;Decimal       ;OnValidate=BEGIN
                                                                CalculateAmount();
                                                              END;

                                                   CaptionML=[ENU=Unit Price;
                                                              NOR=Salgspris;
                                                              SVE=A-pris] }
    { 70  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp];
                                                   Editable=No }
    { 80  ;   ;Budget Type         ;Option        ;OnValidate=BEGIN
                                                                InvPropRubricRec.GET("Project No.", Version, "Rubric Code");
                                                                CASE InvPropRubricRec.Type OF
                                                                  InvPropRubricRec.Type::Costs,
                                                                  InvPropRubricRec.Type::"Percentage Costs",
                                                                  InvPropRubricRec.Type::"Costs as Perc. Revenues",
                                                                  InvPropRubricRec.Type::"Costs to Distr. as Perc. Rev.":
                                                                    "Budget Type" := "Budget Type"::Cost;
                                                                  InvPropRubricRec.Type::Revenues,
                                                                  InvPropRubricRec.Type::"Percentage Revenues",
                                                                  InvPropRubricRec.Type::"Revenues as Perc. Costs":
                                                                    "Budget Type" := "Budget Type"::Revenue;
                                                                  ELSE
                                                                    FIELDERROR("Budget Type", Text000);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Budget Type;
                                                              NOR=Budsjettype;
                                                              SVE=Budgettyp];
                                                   OptionCaptionML=[ENU=" ,Cost,Revenue";
                                                                    NOR=" ,Kost,inntekt";
                                                                    SVE=" ,Kostnad,Int„kter"];
                                                   OptionString=[ ,Cost,Revenue] }
    { 90  ;   ;House Model         ;Code20        ;TableRelation="Proj. Development House Model".Model WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                GetProjDevData();
                                                                IF (ProjDevRec."Budget Level" <> ProjDevRec."Budget Level"::Model) AND ("House Model" <> '') THEN
                                                                  FIELDERROR("House Model", Text001);

                                                                CALCFIELDS("House Model Description");
                                                              END;

                                                   CaptionML=[ENU=House Model;
                                                              NOR=Husmodell;
                                                              SVE=Husmodell] }
    { 92  ;   ;House Model Description;Text50     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Proj. Development House Model".Description WHERE (Project No.=FIELD(Project No.),
                                                                                                                         Model=FIELD(House Model)));
                                                   CaptionML=[ENU=House Model Description;
                                                              NOR=Husmodellbeskrivelse;
                                                              SVE=Husmodellbeskrivning];
                                                   Editable=No }
    { 100 ;   ;Fixed               ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Investment Proposal".Fixed WHERE (Project No.=FIELD(Project No.),
                                                                                                         Version=FIELD(Version)));
                                                   CaptionML=[ENU=Fixed;
                                                              NOR=Fast;
                                                              SVE=Fast];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Project No.,Version,Rubric Code,Line No.;Clustered=Yes }
    {    ;Project No.,Version,Rubric Code,Date    ;SumIndexFields=Amount }
    {    ;Project No.,Version,Date                 }
    {    ;Project No.,Version,Rubric Code,Budget Type,Date;
                                                   SumIndexFields=Amount }
    {    ;Project No.,Version,Rubric Code,House Model,Date }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      InvPropRubricRec@1210190001 : Record 11012913;
      ProjDevRec@1100485000 : Record 11012915;
      Text000@1210190002 : TextConst 'ENU=is unknown, budget is only allowed for Cost and Revenues;NOR=er ukjent, budsjett er kun tillatt for Kostnader og inntekter;SVE=„r ok„nt, budget „r endast till†tet f”r kostnader och int„kter';
      Text001@1100485001 : TextConst 'ENU=may not be filled because %1 is ''%2'';NOR=Kan ikke fylles ut fordi %1 er ''%2'';SVE=kan inte fyllas i eftersom %1 „r ''%2''';
      Text002@1100485002 : TextConst 'ENU=Budget Date (%1) may not be before the Reference Date (%2).;NOR=Budsjettdato (%1) kan ikke v‘re f›r referansedato (%2).;SVE=Budgetdatum (%1) f†r inte vara f”re referensdatum (%2).';

    PROCEDURE GetProjDevData@1100485000();
    BEGIN
      IF "Project No." <> ProjDevRec."Project No." THEN
        ProjDevRec.GET("Project No.");
    END;

    LOCAL PROCEDURE GetNextEntryNo@4() : Integer;
    VAR
      lvInvPropBudgetRec@1000 : Record 11012914;
    BEGIN
      lvInvPropBudgetRec.SETRANGE("Project No.", "Project No.");
      lvInvPropBudgetRec.SETRANGE(Version, Version);
      lvInvPropBudgetRec.SETRANGE("Rubric Code", "Rubric Code");
      IF lvInvPropBudgetRec.FIND('+') THEN
        EXIT(lvInvPropBudgetRec."Line No." + 10000)
      ELSE
        EXIT(10000);
    END;

    PROCEDURE CalculateAmount@1210190000();
    BEGIN
      Amount := Quantity * Frequency * "Unit Price";
    END;

    PROCEDURE CheckReferenceDate@1100485002(IErrorMode@1100485001 : Boolean) : Boolean;
    VAR
      lvInvPropRec@1100485000 : Record 11012912;
    BEGIN
      IF lvInvPropRec.GET("Project No.", Version) THEN BEGIN
        IF (Date < lvInvPropRec."Reference Date") THEN BEGIN
          IF IErrorMode THEN
            ERROR(Text002, Date, lvInvPropRec."Reference Date");
          EXIT(FALSE);
        END;
      END;

      EXIT(TRUE);
    END;

    PROCEDURE CheckFixed@1100485001();
    BEGIN
      CALCFIELDS(Fixed);
      TESTFIELD(Fixed, FALSE);
    END;

    BEGIN
    END.
  }
}

