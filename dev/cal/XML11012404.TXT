OBJECT XMLport 11012404 Imp. Standard Maint. Scheme
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Imp. Standard Maint. Scheme;
               SVE=Imp. standardunderh. Plan];
    DefaultFieldsValidation=No;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    XmlPortID := 11012404;
                    MainTableID := 11071745;
                    MainTableLookupPageID := 11125217;
                  END;

    OnPreXMLport=VAR
                   ConversionXMLPort4PS@1100527700 : Record 11020640;
                 BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     ConversionXMLPort4PS.UpdateFromXMLPort(XmlPortID,MainTableID,MainTableLookupPageID,0,FALSE,0);
                     COMMIT;
                     ERROR('');
                   END;

                   ConvMgt.DeleteConComment(XmlPortID);
                   ConvMgt.CreateConComment(XmlPortID,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XmlPortID,'Start');
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XmlPortID,'Stop');
                    ConvMgt.CreateConComment(XmlPortID,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{755F5B7F-F062-4834-8364-DC4CD51C5A62}];  ;Root                ;Element ;Text     }

    { [{A7DBD164-8D3E-4F8D-B3A0-89F91BC12205}];1 ;MaintenanceScheme   ;Element ;Table   ;
                                                  SourceTable=Table11071745;
                                                  SourceTableView=SORTING(Field10);
                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 StripData;
                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Maintenance Scheme");

                                                                                 WITH "Maintenance Scheme" DO BEGIN
                                                                                   VALIDATE(Code,A);
                                                                                   VALIDATE("Maintenance Interval",CDateF);
                                                                                   INSERT(TRUE);
                                                                                   VALIDATE(Description,B);
                                                                                   VALIDATE("Object Group",D);
                                                                                   IF E <> '' THEN
                                                                                     VALIDATE(Discipline,E);
                                                                                   IF F <> '' THEN
                                                                                     VALIDATE("Trade Speciality",F);
                                                                                   IF G <> '' THEN
                                                                                     VALIDATE("Trade Expertise",G);
                                                                                   IF HInt = 1 THEN
                                                                                     VALIDATE(Expired,TRUE);
                                                                                   IF IInt = 1 THEN
                                                                                     VALIDATE(Subcontracting,TRUE);
                                                                                   IF JInt = 1 THEN
                                                                                     VALIDATE("Survey Template",TRUE);
                                                                                   IF K <> '' THEN
                                                                                     VALIDATE("Base Inspection List Code",K);
                                                                                   MODIFY(TRUE);
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{5C900A9C-2240-4551-8D3B-A67A2D629F53}];2 ;A                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{5E5EE9AF-296C-4B48-B3A4-71FD1D3BDBB8}];2 ;B                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{81EF86E1-A401-49BA-998E-C96326459340}];2 ;C                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF C <> '' THEN
                                                                                    EVALUATE(CDateF,C);
                                                                                END;
                                                                                 }

    { [{A4D141C2-7800-4941-8428-EBDFE695445E}];2 ;D                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{A94DDF8B-AF48-4B38-93FE-471C5E7FDE8B}];2 ;E                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{7009774A-5D5B-4893-B574-E0BA7086A95E}];2 ;F                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{61A54020-5A22-4777-8499-A876D2E08C7F}];2 ;G                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{B967C1D1-EF3A-430C-8F0A-14A06A204F79}];2 ;H                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF H <> '' THEN
                                                                                    EVALUATE(HInt,H);
                                                                                END;
                                                                                 }

    { [{8D961D8C-CCBD-4D4B-9D20-44AC2F08BBD1}];2 ;I                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF I <> '' THEN
                                                                                    EVALUATE(IInt,I);
                                                                                END;
                                                                                 }

    { [{D5FC77C1-4E88-4398-9728-00D4DD6B0712}];2 ;J                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF J <> '' THEN
                                                                                    EVALUATE(JInt,J);
                                                                                END;
                                                                                 }

    { [{4EBE13AC-D62A-4B55-9333-30D2FBAA99E7}];2 ;K                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=[ENU=Imp. Contract Object;
                 SVE=Imp. kontraktsobjekt];
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100409010;;Container;
                  Name=Imp. Standard Object;
                  ContainerType=ContentArea }

      { 1100409009;1;Group  ;
                  CaptionML=[ENU=Options;
                             SVE=Alternativ];
                  GroupType=Group }

    }
  }
  CODE
  {
    VAR
      ConvMgt@1100525018 : Codeunit 11020212;
      XmlPortID@1100525015 : Integer;
      MainTableID@1100525014 : Integer;
      MainTableLookupPageID@1100527701 : Integer;
      ImpLineCounter@1100525013 : Integer;
      ConversionFileFormat@1100525011 : Record 11020691;
      RunIsImportRunBln@1100525010 : Boolean;
      CDateF@1100525005 : DateFormula;
      HInt@1100525000 : Integer;
      IInt@1100409000 : Integer;
      JInt@1100409001 : Integer;

    PROCEDURE StripData@1100485001();
    BEGIN
      A := DELCHR(A,'<>',' ');
      B := DELCHR(B,'<>',' ');
      D := DELCHR(D,'<>',' ');
      F := DELCHR(F,'<>',' ');
      G := DELCHR(G,'<>',' ');
      H := DELCHR(H,'<>',' ');
      I := DELCHR(I,'<>',' ');
      J := DELCHR(J,'<>',' ');
      K := DELCHR(K,'<>',' ');
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XmlPortID);
        InsertColumnLine(XmlPortID,'A',MainTableID,"Maintenance Scheme".FIELDNAME(Code),'Code20','');
        InsertColumnLine(XmlPortID,'B',MainTableID,"Maintenance Scheme".FIELDNAME(Description),'Text50','');
        InsertColumnLine(XmlPortID,'C',MainTableID,"Maintenance Scheme".FIELDNAME("Maintenance Interval"),'DateFormula','');
        InsertColumnLine(XmlPortID,'D',MainTableID,"Maintenance Scheme".FIELDNAME("Object Group"),'Code10','');
        InsertColumnLine(XmlPortID,'E',MainTableID,"Maintenance Scheme".FIELDNAME(Discipline),'Code10','');
        InsertColumnLine(XmlPortID,'F',MainTableID,"Maintenance Scheme".FIELDNAME("Trade Speciality"),'Code10','');
        InsertColumnLine(XmlPortID,'G',MainTableID,"Maintenance Scheme".FIELDNAME("Trade Expertise"),'Code10','');
        InsertColumnLine(XmlPortID,'H',MainTableID,"Maintenance Scheme".FIELDNAME(Expired),'Integer','OneTrueTxt');
        InsertColumnLine(XmlPortID,'I',MainTableID,"Maintenance Scheme".FIELDNAME(Subcontracting),'Integer','OneTrueTxt');
        InsertColumnLine(XmlPortID,'J',MainTableID,"Maintenance Scheme".FIELDNAME("Survey Template"),'Integer','OneTrueTxt');
        InsertColumnLine(XmlPortID,'K',MainTableID,"Maintenance Scheme".FIELDNAME("Base Inspection List Code"),'Code20','');
      END;
    END;

    PROCEDURE ClearFields@1210190000();
    BEGIN
      CLEAR("Maintenance Scheme");
      A := '';
      B := '';
      C := '';
      D := '';
      E := '';
      F := '';
      G := '';
      H := '';
      I := '';
      J := '';
      K := '';

      CLEAR(CDateF);
      HInt := 0;
      IInt := 0;
      JInt := 0;
    END;

    BEGIN
    {
      // Old No.'s are stored in Comment Table (97), marked with [CommentCde].
      // Object No is stored in [XmlPortID]. In case of customisation (copy of dataport) change in OnInitDataport;
      //
      // Please use [AddConversionFileFormatLine] in case Import file format is changed.
    }
    END.
  }
}

