OBJECT Codeunit 412 SMTP Test Mail
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnRun=VAR
            TempNameValueBuffer@1000 : TEMPORARY Record 823;
            Mail@1001 : Codeunit 397;
            AddressChoice@1003 : Text;
            ChosenAddress@1004 : ',ADMail,BasicAuthMail,UserTableMail,OtherMail';
            Address@1002 : Text;
          BEGIN
            Mail.CollectCurrentUserEmailAddresses(TempNameValueBuffer);
            TempNameValueBuffer.RESET;
            IF TempNameValueBuffer.FINDSET THEN
              REPEAT
                IF AddressChoice <> '' THEN
                  AddressChoice := AddressChoice + ',';
                AddressChoice := AddressChoice + TempNameValueBuffer.Value;
              UNTIL TempNameValueBuffer.NEXT = 0;

            AddressChoice := STRSUBSTNO('%1,%2',AddressChoice,TestMailOtherTxt);

            IF AddressChoice = ',' + TestMailOtherTxt THEN
              PromptAndSendEmail
            ELSE BEGIN
              ChosenAddress := STRMENU(AddressChoice,TempNameValueBuffer.COUNT + 1,TestMailChoiceTxt);
              IF ChosenAddress = 0 THEN
                EXIT;
              IF ChosenAddress < TempNameValueBuffer.COUNT + 1 THEN BEGIN
                Address := SELECTSTR(ChosenAddress,AddressChoice);
                SendTestMail(Address);
                MESSAGE(TestMailSuccessMsg,Address);
              END ELSE
                PromptAndSendEmail;
            END;
          END;

  }
  CODE
  {
    VAR
      TestMailChoiceTxt@1003 : TextConst 'ENU=Choose the email address that should receive a test email message:;NOR=Velg e-postadressen som skal motta en test-e-postmelding:;SVE=V„lj den e-postadress som ska ta emot ett testmeddelande:';
      TestMailTitleTxt@1002 : TextConst 'ENU=SMTP Test Email Message;NOR=Test-e-postmelding for SMTP;SVE=Test av SMTP-meddelande';
      TestMailBodyTxt@1001 : TextConst
        '@@@="{Locked=""p style="",""font-family:"",""font-size"",""pt"",""<b>"",""</b>"",""</p>"",""<BR>"",""SMTP""} %1 is an email address, such as user@domain.com; %2 is the name of a mail server, such as mail.live.com; %3 is the TCP port number, such as 25; %4 is the authentication method, such as Basic Authentication; %5 is a boolean value, such as True; %6 is a numeric ID such as 12; %7 is the name identifier of a tenant instance, such as ''MyTenant1'';"',
        'ENU="<p style=""font-family:Verdana,Arial;font-size:10pt""><b>This mail message has been generated by the user %1 for test purposes.</b></p><p style=""font-family:Verdana,Arial;font-size:9pt""><b>Sent through SMTP Server:</b> %2<BR><b>SMTP Port:</b> %3<BR><b>Authentication:</b> %4<BR><b>Using Secure Connection:</b> %5<BR><b>Server Instance ID:</b> %6<BR><b>Tenant ID:</b> %7</p>"',
        'NOR="<p style=""font-family:Verdana,Arial;font-size:10pt""><b>Denne e-postmeldingen er generert av brukeren %1 for testform†l.</b></p><p style=""font-family:Verdana,Arial;font-size:9pt""><b>Sendt via SMTP-server:</b> %2<BR><b>SMTP-port:</b> %3<BR><b>Godkjenning:</b> %4<BR><b>Bruke sikker tilkobling:</b> %5<BR><b>Serverforekomst-ID:</b> %6<BR><b>Leietaker-ID:</b> %7</p>"',
        'SVE="<p style=""font-family:Verdana,Arial;font-size:10pt""><b>Detta e-postmeddelande har genererats av anv„ndaren %1 f”r att testa systemet.</b></p><p style=""font-family:Verdana,Arial;font-size:9pt""><b>Skickat via SMTP-server:</b> %2<BR><b>SMTP-port:</b> %3<BR><b>Autentisering:</b> %4<BR><b>Anv„nder s„ker anslutning:</b> %5<BR><b>Serverinstans-ID:</b> %6<BR><b>Klientorganisations-ID:</b> %7</p>"';
      TestMailSuccessMsg@1000 : TextConst '@@@=%1 is an email address.;ENU=Test email has been sent to %1.\Check your email for messages to make sure that the email was delivered successfully.;NOR=E-posttest er sendt til %1.\Kontroller e-posten din for † v‘re sikker p† at e-posten ble levert.;SVE=Testmeddelandet har skickats till %1.\Kontrollera din inkorg f”r att se till att e-postmeddelandet levererats.';
      TestMailOtherTxt@1004 : TextConst 'ENU=Other...;NOR=Annet ...;SVE=™vrigt...';

    [TryFunction]
    [Internal]
    PROCEDURE SendTestMail@5(EmailAddress@1002 : Text);
    VAR
      SMTPMailSetup@1003 : Record 409;
      SMTPMail@1000 : Codeunit 400;
      MailManagement@1001 : Codeunit 9520;
    BEGIN
      SMTPMailSetup.GetSetup;

      SMTPMail.CreateMessage(
        '',
        MailManagement.GetSenderEmailAddress,
        EmailAddress,
        TestMailTitleTxt,
        STRSUBSTNO(
          TestMailBodyTxt,
          USERID,
          SMTPMailSetup."SMTP Server",
          FORMAT(SMTPMailSetup."SMTP Server Port"),
          SMTPMailSetup.Authentication,
          SMTPMailSetup."Secure Connection",
          SERVICEINSTANCEID,
          TENANTID),
        TRUE);

      SMTPMail.Send;
    END;

    LOCAL PROCEDURE PromptAndSendEmail@13();
    VAR
      SMTPUserSpecifiedAddress@1001 : Page 410;
      Address@1000 : Text;
    BEGIN
      IF SMTPUserSpecifiedAddress.RUNMODAL = ACTION::OK THEN BEGIN
        Address := SMTPUserSpecifiedAddress.GetEmailAddress;
        IF Address = '' THEN
          EXIT;
        SendTestMail(Address);
        MESSAGE(TestMailSuccessMsg,Address);
      END;
    END;

    BEGIN
    END.
  }
}

