OBJECT Report 11012301 Copy Item from Basic Item
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Kopieren Basisartikel in Artikel;
               ENU=Copy Basic Item to Item;
               NLD=Basisartikel naar artikel kopi‰ren;
               NOR=Kopier Basisartikkel til artikkel;
               SVE=Kopiera basartikel till artikel];
    ProcessingOnly=Yes;
    OnInitReport=VAR
                   FPSLicenseManagement@1100527400 : Codeunit 11229289;
                 BEGIN
                   IF FPSLicenseManagement.LicenseAndReadPermissionForTable(CompRelationRec) THEN BEGIN
                     CentrManagementCU.ItemFormEditable(NavBln,DiscBln,DiscGrpBln,RcpBln);
                     IF NavBln THEN
                       ERROR(Text000);
                   END;
                 END;

    UsageCategory=Tasks;
  }
  DATASET
  {
    { 3590;    ;DataItem;BasicItemRec        ;
               DataItemTable=Table11012316;
               OnPreDataItem=BEGIN
                               status.OPEN(Text001);
                               NoOfLines := COUNT;
                             END;

               OnAfterGetRecord=VAR
                                  lvType@11012003 : 'BasicItem,TradeItem';
                                  lvTradeItemRec@11012001 : Record 11012317;
                                  lvItemRec@11012000 : Record 27;
                                BEGIN
                                  IF CopyMethod = CopyMethod::NoSeries THEN BEGIN
                                    ItemCode := NoSeriesMgt.GetNextNo(ItemSeries,0D,TRUE);
                                  END;
                                  IF CopyMethod = CopyMethod::ItemCode THEN BEGIN
                                    ItemCode := "Product Code";
                                    IF ItemRec.GET(ItemCode) THEN
                                      ERROR(Text002, ItemCode);
                                  END;
                                  IF CopyMethod = CopyMethod::Manual THEN BEGIN
                                    ItemCode := NewDest;
                                    IF ItemRec.GET(ItemCode) THEN
                                      ERROR(Text002, ItemCode)
                                    ELSE
                                      ItemRec."No." := ItemCode; //db, 31-05-11
                                    ItemRec.TESTFIELD("No.");   //db, 08-09-10: M22741
                                  END;

                                  IF STRLEN(ItemCode) > MAXSTRLEN(lvItemRec."No.") THEN
                                    CurrReport.BREAK
                                  ELSE BEGIN
                                    lvType := lvType::BasicItem;
                                    lvItemRec.ProcessItemRelation(lvType,ItemCode,ItemSeries,BasicItemRec,lvTradeItemRec);  //db, 19-12-11: M31760
                                  END;

                                  StatusCounter:=StatusCounter+1;
                                  status.UPDATE(1,ROUND(StatusCounter/NoOfLines*10000,1));
                                END;

               OnPostDataItem=BEGIN
                                status.CLOSE;
                              END;

               ReqFilterFields=Product Code,Manufacturer }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF CopyMethod = CopyMethod::NoSeries THEN
                     DetermineNewDestination;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1100525004;2;Field  ;
                  CaptionML=[DEU=Artikelnr. aufgrund von;
                             ENU=Item No. based on;
                             NLD=Artikelnr. op basis van;
                             NOR=Artikkelnr. basert p†;
                             SVE=Artikelnr baserat p†];
                  OptionCaptionML=[DEU=Nummernserie,Basisartikel,Manuell;
                                   ENU=No. Series,Basic Item,Manual;
                                   NLD=Nr.-reeks,Basisartikel,Handmatig;
                                   NOR=Nummerserier,Grunnartikkel,Manuell;
                                   SVE=Nummerserier,Basartikel,Manuell];
                  SourceExpr=CopyMethod;
                  OnValidate=BEGIN
                               CopyMethodOnAfterValidate;
                             END;
                              }

      { 1100525001;2;Field  ;
                  Name=ItemSeries;
                  AssistEdit=Yes;
                  CaptionML=[DEU=Nummernserie;
                             ENU=No. Series;
                             NLD=Nr.-reeks;
                             NOR=Nr-serie;
                             SVE=Nr-serier];
                  SourceExpr=ItemSeries;
                  OnValidate=BEGIN
                               IF CopyMethod = CopyMethod::NoSeries THEN BEGIN
                                 ItemRec.VALIDATE("No. Series", ItemSeries);
                                 DetermineNewDestination;
                               END;
                             END;

                  OnAssistEdit=BEGIN
                                 ItemRec."No. Series" := ItemSeries;
                                 ItemRec.AssistEdit;
                                 IF CopyMethod = CopyMethod::NoSeries THEN BEGIN
                                   ItemSeries := ItemRec."No. Series";
                                   DetermineNewDestination;
                                 END;
                               END;
                                }

      { 1100525000;2;Field  ;
                  Name=NewDest;
                  CaptionML=[DEU=Artikelnr.;
                             ENU=Item No.;
                             NLD=Artikelnr.;
                             NOR=Artikkelnr;
                             SVE=Artikelnr];
                  SourceExpr=NewDest;
                  OnValidate=BEGIN
                               NewDestOnAfterValidate;
                             END;

                  OnLookup=VAR
                             ItemList@1100525000 : Page 31;
                           BEGIN
                             ItemList.RUNMODAL; //No lookupmode cause existing items may not be choosen.
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@11012017 : TextConst 'DEU=Verarbeitung nur gestattet in Herkunftunternehmen Zentrale Artikelverwaltung;ENU=Transaction only allowed in company used as source for central itemmanagement;NLD=Verwerking alleen toegestaan in bronbedrijf centraal artikelbeheer;NOR=Transaksjonen er kun tillatt for selskap som er i bruk som kilde for sentral artikkelh†ndtering;SVE=Transaktionen „r endast till†ten f”r f”retag som anv„nds som k„lla f”r central artikelhantering';
      Text001@11012018 : TextConst 'DEU=Erstellen Navision-Artikel @1@@@@@@@@@@@@@@@@@@;ENU=Create Navision Items @1@@@@@@@@@@@@@@@@@@;NLD=Aanmaken Navision Artikelen @1@@@@@@@@@@@@@@@@@@;NOR=Opprette Navision-artikler @1@@@@@@@@@@@@@@@@@@;SVE=Skapa Navision-artiklar @1@@@@@@@@@@@@@@@@@@';
      NoOfLines@11012007 : Integer;
      StatusCounter@11012008 : Integer;
      status@11012010 : Dialog;
      NoSeriesMgt@1210190000 : Codeunit 396;
      CentrManagementCU@11012011 : Codeunit 11012010;
      CompRelationRec@11012012 : Record 11012059;
      NavBln@11012013 : Boolean;
      DiscBln@1100485000 : Boolean;
      DiscGrpBln@1100528300 : Boolean;
      RcpBln@11012016 : Boolean;
      ItemRec@1210190002 : Record 27;
      ItemSeries@1210190001 : Code[20];
      ItemCode@1210190004 : Code[50];
      NewDest@1100525001 : Code[20];
      CopyMethod@1100525000 : 'NoSeries,ItemCode,Manual';
      Text002@1100525002 : TextConst 'DEU=Artikel %1 ist bereits vorhanden.;ENU=Item %1 already exists;NLD=Artikel %1 bestaat reeds;NOR=Artikkel %1 finnes allerede.;SVE=Artikel %1 finns redan.';

    PROCEDURE DetermineNewDestination@1000000000();
    VAR
      InvtSetup@1100525000 : Record 313;
      SeriesRec@1100525004 : Record 308;
      NoSeriesMgt@1100525001 : Codeunit 396;
    BEGIN
      NewDest := '';

      IF ItemSeries = '' THEN BEGIN
        InvtSetup.GET;
        ItemSeries := InvtSetup."Item Nos.";
      END;

      IF SeriesRec.GET(ItemSeries) THEN
        NewDest := NoSeriesMgt.GetNextNo(ItemSeries,0D,FALSE);
    END;

    LOCAL PROCEDURE NewDestOnAfterValidate@19062243();
    BEGIN
      IF ItemRec.GET(NewDest) THEN BEGIN
        MESSAGE(Text002, NewDest);
        NewDest := '';
      END;
    END;

    LOCAL PROCEDURE CopyMethodOnAfterValidate@19020830();
    BEGIN
      IF CopyMethod = CopyMethod::NoSeries THEN BEGIN
        DetermineNewDestination;
      END;
      IF CopyMethod = CopyMethod::ItemCode THEN BEGIN
        ItemSeries := '';
        NewDest := '';
      END;
      IF CopyMethod = CopyMethod::Manual THEN BEGIN
        ItemSeries := '';
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

