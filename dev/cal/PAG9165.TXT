OBJECT Page 9165 Support Contact Info Card
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.01;
  }
  PROPERTIES
  {
    Permissions=TableData 9165=rimd;
    CaptionML=[ENU=Support Contact Information;
               NOR=Informasjon om kundest›tte;
               SVE=Information om supportkontakt];
    ApplicationArea=#Basic,#Suite;
    DataCaptionExpr='';
    PageType=StandardDialog;
    UsageCategory=Administration;
    OnInit=BEGIN
             PopulateFields;
           END;

    OnQueryClosePage=BEGIN
                       IF CloseAction IN [ACTION::LookupOK,ACTION::OK] THEN
                         SaveContactEmailAddress(SupportContactEmail);
                     END;

    ActionList=ACTIONS
    {
      { 4       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=This email address is shown in the Help & Support page so that users know how to contact the people who are responsible for technical support.;
                                     NOR=Denne e-postadressen vises p† siden Hjelp og st›tte slik at brukere vet hvordan de kontakter de som er ansvarlige for teknisk kundest›tte.;
                                     SVE=Den h„r e-postadressen visas p† sidan Hj„lp och support s† att anv„ndarna vet hur de kan kontakta dem som ansvarar f”r teknisk support.] }

    { 3   ;1   ;Field     ;
                Name=EmailInputControl;
                CaptionML=[ENU=Support email address;
                           NOR=E-postadresse for kundest›tte;
                           SVE=E-postadress till supporten];
                ApplicationArea=#All;
                SourceExpr=SupportContactEmail;
                Editable=SupportContactEmailEditable;
                OnValidate=BEGIN
                             MailManagement.ValidateEmailAddressField(SupportContactEmail);
                           END;
                            }

    { 6   ;1   ;Field     ;
                Name=PopulateFromAuthControl;
                ApplicationArea=#All;
                SourceExpr=PopulateFromAuthText;
                Visible=PopulateFromAuthVisible;
                Editable=FALSE;
                OnDrillDown=VAR
                              User@1000 : Record 2000000120;
                            BEGIN
                              IF User.READPERMISSION AND User.GET(USERSECURITYID) THEN BEGIN
                                SupportContactEmail := User."Authentication Email";
                                MailManagement.ValidateEmailAddressField(SupportContactEmail);
                              END;
                            END;

                ShowCaption=No }

    { 7   ;1   ;Field     ;
                Name=PopulateFromContactControl;
                ApplicationArea=#All;
                SourceExpr=PopulateFromContactText;
                Visible=PopulateFromContactVisible;
                Editable=FALSE;
                OnDrillDown=VAR
                              User@1000 : Record 2000000120;
                            BEGIN
                              IF User.READPERMISSION AND User.GET(USERSECURITYID) THEN BEGIN
                                SupportContactEmail := User."Contact Email";
                                MailManagement.ValidateEmailAddressField(SupportContactEmail);
                              END;
                            END;

                ShowCaption=No }

  }
  CODE
  {
    VAR
      SupportContactInformation@1008 : Record 9165;
      MailManagement@1007 : Codeunit 9520;
      SupportContactEmail@1000 : Text[250];
      PopulateEmailFromAuthLbl@1001 : TextConst '@@@="%1 = the email that the user used to log in";ENU=Use my authentication email (%1);NOR=Bruk e-postadressen min for godkjenning (%1);SVE=Anv„nd min e-postadress f”r autentisering (%1)';
      PopulateEmailFromContactLbl@1002 : TextConst '@@@="%1 = the email that the user specified as contact email";ENU=Use my contact email (%1);NOR=Bruk e-postadressen min for kontakt (%1);SVE=Anv„nd min e-postadress f”r kontakt (%1)';
      SupportContactEmailEditable@1009 : Boolean;
      PopulateFromAuthVisible@1003 : Boolean;
      PopulateFromAuthText@1005 : Text;
      PopulateFromContactVisible@1004 : Boolean;
      PopulateFromContactText@1006 : Text;

    LOCAL PROCEDURE PopulateFields@1();
    VAR
      User@1001 : Record 2000000120;
    BEGIN
      IF SupportContactInformation.GET THEN
        SupportContactEmail := SupportContactInformation.Email
      ELSE BEGIN
        SupportContactInformation.INIT;
        SupportContactInformation.INSERT(TRUE);
      END;

      SupportContactEmailEditable := SupportContactInformation.WRITEPERMISSION;

      PopulateFromAuthVisible := FALSE;
      PopulateFromContactVisible := FALSE;

      IF SupportContactEmailEditable THEN // Do not show the field if the user will not have permissions anyway
        IF User.READPERMISSION THEN
          IF User.GET(USERSECURITYID) THEN BEGIN
            IF User."Authentication Email" <> '' THEN BEGIN
              PopulateFromAuthVisible := TRUE;
              PopulateFromAuthText := STRSUBSTNO(PopulateEmailFromAuthLbl,User."Authentication Email");
            END;

            IF User."Contact Email" <> '' THEN BEGIN
              PopulateFromContactVisible := TRUE;
              PopulateFromContactText := STRSUBSTNO(PopulateEmailFromContactLbl,User."Contact Email");
            END;
          END;
    END;

    LOCAL PROCEDURE SaveContactEmailAddress@2(EmailAddress@1000 : Text[250]);
    BEGIN
      SupportContactInformation.VALIDATE(Email,EmailAddress);
      SupportContactInformation.MODIFY(TRUE);
    END;

    BEGIN
    END.
  }
}

