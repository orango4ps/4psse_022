OBJECT Report 77797 Export DotNet Translation File
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=TTool;
  }
  PROPERTIES
  {
    CaptionML=ENU=Export DotNet Translation File;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF NOT TTNetProduct.GET(NetProductCode) THEN
                    ERROR(Text003);

                  IF NOT TTNetFile.GET(NetProductCode,NetFileCode) THEN
                    ERROR(Text005);

                  IF NOT TTLanguage.GET(ExportLanguageCode) THEN
                    ERROR(Text006);

                  IF TTNetProduct."Target Language ID" <> ExportLanguageCode THEN BEGIN
                    IF TTNetProduct."Source Language ID" <> ExportLanguageCode THEN
                      ERROR(Text007);
                  END;

                  IF FileName = '' THEN
                    ERROR(Text002);
                END;

    OnPostReport=BEGIN
                   MESSAGE(Text004);
                 END;

  }
  DATASET
  {
    { 6527;    ;DataItem;                    ;
               DataItemTable=Table77793;
               DataItemTableView=SORTING(Entry No.);
               OnPreDataItem=VAR
                               ExportTranslationXMLFile@1000 : Codeunit 77793;
                             BEGIN
                               ExportTranslationXMLFile.ExportTranslationData(NetProductCode,NetFileCode,ExportLanguageCode,FileName);
                               CurrReport.BREAK;
                             END;
                              }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100409000;;Container;
                  ContainerType=ContentArea }

      { 1100525000;1;Group  ;
                  CaptionML=[ENU=Options;
                             SVE=Alternativ];
                  GroupType=Group }

      { 4   ;2   ;Field     ;
                  CaptionML=ENU=Export Captions of Product Code;
                  SourceExpr=NetProductCode;
                  TableRelation="TT DotNet Product";
                  OnValidate=BEGIN
                               IF TTNetProduct.GET(NetProductCode) THEN
                                 ExportLanguageCode := TTNetProduct."Target Language ID";
                             END;
                              }

      { 2   ;2   ;Field     ;
                  CaptionML=ENU=Export Captions of File Code;
                  SourceExpr=NetFileCode;
                  TableRelation="TT DotNet Translation File".Code;
                  OnLookup=BEGIN
                             LookupNetFileCode;
                           END;
                            }

      { 1   ;2   ;Field     ;
                  CaptionML=ENU=Export Language;
                  SourceExpr=ExportLanguageCode;
                  TableRelation="TT Language";
                  OnLookup=BEGIN
                             LookupLanguageCode;
                           END;
                            }

      { 1100409001;2;Field  ;
                  CaptionML=[ENU=File Name;
                             SVE=Filnamn];
                  SourceExpr=FileName;
                  OnAssistEdit=VAR
                                 FileManagement@1100409000 : Codeunit 419;
                               BEGIN
                                 FileName := FileManagement.SaveFileDialog('',FileName,Text001);
                               END;
                                }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      TTNetProduct@1005 : Record 77791;
      TTNetFile@1004 : Record 77794;
      TTLanguage@1003 : Record 77781;
      FileName@1100525000 : Text;
      Text000@1100525001 : TextConst 'ENU=Export Translation Data';
      Text001@1100525002 : TextConst 'ENU=All Files|*.*;SVE=Alla filer|*.*';
      Text002@1100525003 : TextConst 'ENU=Please specify a file name.;SVE=Ange ett filnamn.';
      NetProductCode@1002 : Code[20];
      NetFileCode@1001 : Code[20];
      ExportLanguageCode@1000 : Code[10];
      Text003@1009 : TextConst 'ENU=Product Code does not exist.';
      Text004@1008 : TextConst 'ENU=Export captions is finished.';
      Text005@1007 : TextConst 'ENU=File Code must be filled in and exist at product.';
      Text006@1006 : TextConst 'ENU=Language Code must be filled in.';
      Text007@1010 : TextConst 'ENU=Language Code must be source or target language of product.';

    PROCEDURE LookupNetFileCode@2();
    VAR
      TTDotNetFile@1001 : Record 77794;
      TTDotNetFiles@1000 : Page 77792;
    BEGIN
      TTDotNetFile.SETRANGE("Product Code",NetProductCode);
      IF TTDotNetFile.GET(NetProductCode,NetFileCode) THEN;

      IF PAGE.RUNMODAL(0,TTDotNetFile) = ACTION::LookupOK THEN BEGIN
        NetFileCode := TTDotNetFile.Code;
      END;

      FileName := DetermineFileName(TTDotNetFile."Import File Name", NetProductCode);
    END;

    PROCEDURE LookupLanguageCode@3();
    VAR
      TTLanguage@1001 : Record 77781;
      TTLanguages@1000 : Page 77781;
    BEGIN
      IF PAGE.RUNMODAL(0,TTLanguage) = ACTION::LookupOK THEN BEGIN
        ExportLanguageCode := TTLanguage.ID;
      END;

      FileName := DetermineFileName(TTNetFile."Import File Name", NetProductCode);
    END;

    PROCEDURE SetTTNetFile@1100525004(locNetFile@1100525000 : Record 77794);
    BEGIN
      TTNetProduct.GET(locNetFile."Product Code");
      NetProductCode := TTNetProduct.Code;

      TTNetFile.GET(locNetFile."Product Code", locNetFile.Code);
      NetFileCode := TTNetFile.Code;

      ExportLanguageCode := TTNetProduct."Target Language ID";
      FileName := DetermineFileName(TTNetFile."Import File Name", NetProductCode);
    END;

    PROCEDURE DetermineFileName@1(FileName@1000 : Text;NetProductCode@1001 : Code[20]) : Text;
    VAR
      FileNameAddition@1003 : Text[11];
      Position@1004 : Integer;
    BEGIN
      TTNetProduct.GET(NetProductCode);

      IF ExportLanguageCode = TTNetProduct."Source Language ID" THEN
        EXIT(FileName)
      ELSE BEGIN
        FileNameAddition := '.' + TTNetProduct."File Name Addition" + '.resx';
        Position := STRPOS(FileName,'.resx');
        IF Position > 0 THEN BEGIN
          FileName := COPYSTR(FileName,1,Position-1);
          EXIT(FileName + FileNameAddition);
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

