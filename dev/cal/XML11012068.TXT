OBJECT XMLport 11012068 Import Empl LOSA (CTB-Int.)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import Employees LOSA (Interactief);
               SVE=Importera anst„llda LOSA (interaktiv)];
    Direction=Import;
    DefaultFieldsValidation=No;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    HumanResourcesSetup.GET;
                    HumanResourcesSetup.TESTFIELD("Salary Application",HumanResourcesSetup."Salary Application"::"LOSA-CTB");
                    HumanResourcesSetup.TESTFIELD("Exchange Salary Application");
                    HumanResourcesSetup.TESTFIELD("Pathname Files to Salary");
                    HumanResourcesSetup.TESTFIELD("Pathname Files from Salary");

                    IF COPYSTR(HumanResourcesSetup."Pathname Files from Salary", STRLEN(HumanResourcesSetup."Pathname Files from Salary"), 1) <> '\' THEN
                      HumanResourcesSetup."Pathname Files from Salary" := HumanResourcesSetup."Pathname Files from Salary" + '\';

                    currXMLport.FILENAME(HumanResourcesSetup."Pathname Files from Salary" + HumanResourcesSetup."Filename Employees (Alwi)");
                  END;

    OnPostXMLport=VAR
                    BackupFileName@1100528400 : Text[1024];
                  BEGIN
                    IF COPYSTR(HumanResourcesSetup."Pathname Salary Backup Files", STRLEN(HumanResourcesSetup."Pathname Salary Backup Files"), 1) <> '\' THEN
                      HumanResourcesSetup."Pathname Salary Backup Files" := HumanResourcesSetup."Pathname Salary Backup Files" + '\';
                    BackupFileName := HumanResourcesSetup."Pathname Salary Backup Files" + '\' + HumanResourcesSetup."Filename Employees (Alwi)" + '.bak';

                    IF FileMgt.ClientFileExists(BackupFileName) THEN
                      FileMgt.DeleteClientFile4PS(BackupFileName, TRUE);

                    FileMgt.RenameClientFile(
                      currXMLport.FILENAME,
                      BackupFileName,
                      TRUE);
                  END;

    Format=Fixed Text;
    UseRequestPage=No;
  }
  ELEMENTS
  {
    { [{D2A3FC6B-3BE3-469F-8650-411A7B6A4749}];  ;Root                ;Element ;Text     }

    { [{8FDC760D-E638-477A-AC29-B14E248FD5CA}];1 ;Employee            ;Element ;Table   ;
                                                  SourceTable=Table5200;
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              Employee.INIT;
                                                                              CLEAR(ExtraInitials);
                                                                              CLEAR(ExtraAddress);
                                                                              CLEAR(ExtraPhoneNo);
                                                                              CLEAR(EmploymentDateText);
                                                                              CLEAR(TerminationDateText);
                                                                              CLEAR(NormDaysText);
                                                                              CLEAR(NormHoursText);
                                                                              CLEAR(BirthDateText);
                                                                              CLEAR(SexText);
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 Employee2@1100528401 : Record 5200;
                                                                                 RecRef@1100528400 : RecordRef;
                                                                               BEGIN
                                                                                 WITH Employee DO BEGIN //With statement added because this code has been copied from dataport.

                                                                                 StripZero("No.");
                                                                                 IF "No." = '' THEN "No." := '0';

                                                                                 Initials := STRSUBSTNO(Text000 ,Initials, ExtraInitials);
                                                                                 Address := COPYSTR(STRSUBSTNO(Text000 ,Address, ExtraAddress), 1, MAXSTRLEN(Address));
                                                                                 "Phone No." := STRSUBSTNO(Text000 ,"Phone No.",ExtraPhoneNo);
                                                                                 VALIDATE("Last Name");

                                                                                 IF NormDaysText <> '' THEN BEGIN
                                                                                   EVALUATE(Value,NormDaysText);
                                                                                   "Norm Days" := Value/100;

                                                                                 END ELSE
                                                                                   "Norm Days" := 0;

                                                                                 IF NormHoursText <> '' THEN BEGIN
                                                                                   EVALUATE(Value,NormHoursText);
                                                                                   "Norm Hours" := Value/100;
                                                                                 END ELSE
                                                                                   "Norm Hours" := 0;

                                                                                 Status := Status::Active;
                                                                                 IF (EmploymentDateText <> '') AND (EmploymentDateText <> '0')THEN
                                                                                   "Employment Date" := ConvDate(EmploymentDateText);
                                                                                 IF (TerminationDateText <> '') AND (TerminationDateText <> '0') THEN
                                                                                   "Termination Date" := ConvDate(TerminationDateText);
                                                                                 IF "Termination Date" <> 0D THEN
                                                                                   Status := Status::Terminated;

                                                                                 IF (BirthDateText <> '') AND (BirthDateText <> '0') THEN
                                                                                   "Birth Date" := ConvDate(BirthDateText);

                                                                                 IF SexText = 'M' THEN
                                                                                   Gender := Gender::Male
                                                                                 ELSE
                                                                                   IF SexText = 'V' THEN
                                                                                     Gender := Gender::Female
                                                                                   ELSE
                                                                                     Gender := Gender::" ";

                                                                                 "Last Date Modified" := TODAY;

                                                                                 DetermineAccountHours;

                                                                                 RecRef.GETTABLE(Employee);
                                                                                 XMLportStatusDialogMgt.ShowImportStatus(RecRef);

                                                                                 IF Employee2.GET("No.") THEN
                                                                                   UpdateEmployee(Employee2, Employee)
                                                                                 ELSE
                                                                                   Employee.INSERT;

                                                                                 currXMLport.SKIP;

                                                                                 END; //Belongs to With statement.
                                                                               END;
                                                                                }

    { [{E2F349A9-DADD-4019-B33A-3DAD74FFCC33}];2 ;ParticipantNoLosa   ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Employee::Participant No. (Losa);
                                                  MinOccurs=Zero;
                                                  Width=5 }

    { [{73D47F8D-FAE4-44F0-A473-1EAE301B32E0}];2 ;No                  ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Employee::No.;
                                                  MinOccurs=Zero;
                                                  Width=5 }

    { [{EFA04ACE-5A37-4ADB-BE7B-09D5F28B233D}];2 ;LastName            ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Employee::Last Name;
                                                  MinOccurs=Zero;
                                                  Width=30 }

    { [{5D196742-44FB-4D0B-8110-66DDCB46FBB5}];2 ;Initials            ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Employee::Initials;
                                                  MinOccurs=Zero;
                                                  Width=10 }

    { [{EDAF7B31-2681-4FE1-BC4D-6FEE1BD33EA6}];2 ;ExtraInitials       ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=8 }

    { [{4E71781E-2D01-4640-968E-267BD2CD594D}];2 ;Address             ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Employee::Address;
                                                  MinOccurs=Zero;
                                                  Width=25 }

    { [{0DBB4842-ED29-4736-90B4-2E5A4C80951D}];2 ;ExtraAddress        ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=10 }

    { [{C4248F3D-38E1-4DA0-8C9D-3271C718A418}];2 ;PostCode            ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Employee::Post Code;
                                                  MinOccurs=Zero;
                                                  Width=6 }

    { [{FD2689BF-3821-481A-8E3F-60BDD55BDACE}];2 ;City                ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Employee::City;
                                                  MinOccurs=Zero;
                                                  Width=20 }

    { [{22680B14-C19B-48EB-9FE8-9C562FC66361}];2 ;PhoneNo             ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Employee::Phone No.;
                                                  MinOccurs=Zero;
                                                  Width=5 }

    { [{473FCFFB-6B58-4CBC-BB79-17C3E2A6D5DE}];2 ;ExtraPhoneNo        ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=7 }

    { [{CB3E7756-4C00-4183-A0F2-A7DE66E921E3}];2 ;Filler1             ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=1 }

    { [{975E1F2C-7147-4482-B7C9-93D8E6E8C5D2}];2 ;EmploymentDateText  ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=8 }

    { [{0293F0B8-D9B3-4C27-AF97-6EF9372E1188}];2 ;TerminationDateText ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=8 }

    { [{6954E20A-AD5B-402D-AF4E-0D26133D3BA4}];2 ;NormDaysText        ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=4 }

    { [{61722B82-1AC8-42D6-AAD0-13CB508BF6AC}];2 ;NormHoursText       ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=4 }

    { [{39BD2909-4A72-4067-8B46-DD9A9E74D34D}];2 ;Filler2             ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=4 }

    { [{1732F2B2-C0D9-42B8-8CD9-AF8EBCA192A4}];2 ;BirthDateText       ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=8 }

    { [{B8EA04DB-3F9D-4F05-8FAB-8726430D78A3}];2 ;SocialSecurityNo    ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Employee::Social Security No.;
                                                  MinOccurs=Zero;
                                                  Width=9 }

    { [{7B5011E5-774A-423F-8A7F-A78928B47F8A}];2 ;Filler3             ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=8 }

    { [{463A7D78-389F-4FCB-BBDF-AB2B02408B87}];2 ;SexText             ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=1 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      HumanResourcesSetup@1100528410 : Record 5218;
      FileMgt@1100528404 : Codeunit 419;
      XMLportStatusDialogMgt@1100528405 : Codeunit 11130006;
      Value@1100528409 : Integer;
      Text000@1100528403 : TextConst 'ENU=%1 %2;SVE=%1 %2';

    PROCEDURE StripZero@1(VAR convcde@11012000 : Code[10]);
    VAR
      Position@11012001 : Integer;
    BEGIN
      Position := STRPOS(convcde,'0');
      WHILE Position = 1 DO
        BEGIN
          convcde := DELSTR(convcde,Position,1);
          Position := STRPOS(convcde,'0');
        END;
    END;

    PROCEDURE ConvDate@1210190000(HelpDateText@1210190000 : Text[30]) : Date;
    VAR
      HelpYear@1210190001 : Integer;
      HelpMonth@1210190002 : Integer;
      HelpDay@1210190003 : Integer;
    BEGIN
      IF HelpDateText <> '' THEN BEGIN
        EVALUATE(HelpYear,COPYSTR(HelpDateText,1,4));
        EVALUATE(HelpMonth,COPYSTR(HelpDateText,5,2));
        EVALUATE(HelpDay,COPYSTR(HelpDateText,7,2));
        EXIT(DMY2DATE(HelpDay,HelpMonth,HelpYear));
      END ELSE
        EXIT(0D);
    END;

    PROCEDURE UpdateEmployee@1100525000(VAR Employee@1100525000 : Record 5200;EmployeeImport@1100525001 : Record 5200);
    BEGIN
      Employee."Participant No. (Losa)" := EmployeeImport."Participant No. (Losa)";
      Employee."Last Name" := EmployeeImport."Last Name";
      Employee.Initials := EmployeeImport.Initials;
      Employee.Address := EmployeeImport.Address;
      Employee."Post Code" := EmployeeImport."Post Code";
      Employee.City := EmployeeImport.City;
      Employee."Phone No." := EmployeeImport."Phone No.";
      Employee."Social Security No." := EmployeeImport."Social Security No.";

      Employee."Search Name" := EmployeeImport."Search Name";
      Employee."Norm Days" := EmployeeImport."Norm Days";
      Employee."Norm Hours" := EmployeeImport."Norm Hours";
      Employee.Status := EmployeeImport.Status;
      Employee."Birth Date" := EmployeeImport."Birth Date";
      Employee."Employment Date" := EmployeeImport."Employment Date";
      Employee."Termination Date" := EmployeeImport."Termination Date";
      Employee.Gender := EmployeeImport.Gender;
      Employee."Last Date Modified" := EmployeeImport."Last Date Modified";
      Employee."Account Hours" := EmployeeImport."Account Hours";

      Employee.MODIFY;
    END;

    BEGIN
    {
      CC: Dataport 11012335

      CTB, Richard Jansen, 2003-10-31:
      - Changed the startingposition and width in the dataport fields as from
        "Phone No." to the end;
      - Removed the Amountsign functionality. It is obsolete.
      - Initialized employee record
      - Cleared TerminationDateText because it was filled for every employee
      - Created a backupcopy of the file with extension '.bak'
      4PS, Jan ter Harmsel, 2004-12-23
      - Dataport added to 4PS contruct, copied from 11012385, customized version CTB
    }
    END.
  }
}

