OBJECT Codeunit 11012595 Import Secutest Base10 Manager
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=VAR
            XmlDoc@1100529910 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
            FromFile@1100528601 : Text;
          BEGIN
            OpenXMLFromStream(XmlDoc, IStream);
            DeleteNodeFromXML(XmlDoc, 'Export', 'schema');
            ProcessXMLPortImportFromXMLUsingStream(XmlDoc, InspectionTypeCode);
          END;

  }
  CODE
  {
    VAR
      InspectionTypeCode@1100529900 : Code[20];
      LocalName@1100529902 : TextConst 'DEU=".//*[local-name()=""%1""]";ENU=".//*[local-name()=""%1""]";NLD=".//*[local-name()=""%1""]"';
      XMLDOMManagement4PS@1100529903 : Codeunit 11020220;
      IStream@1100528500 : InStream;

    LOCAL PROCEDURE GetFileNameFromFullFileName@1100529902(FullFileName@1100529900 : Text) : Text;
    VAR
      StepNumber@1100529901 : Integer;
    BEGIN
      FOR StepNumber := STRLEN(FullFileName) DOWNTO 1 DO BEGIN
        IF FullFileName[StepNumber] = '\' THEN BEGIN
          EXIT(COPYSTR(FullFileName,StepNumber+1));
        END;
      END;
      EXIT('');
    END;

    LOCAL PROCEDURE GetPathFromFullFileName@1100529904(FullFileName@1100529900 : Text) : Text;
    VAR
      StepNumber@1100529901 : Integer;
    BEGIN
      FOR StepNumber := STRLEN(FullFileName) DOWNTO 1 DO BEGIN
        IF FullFileName[StepNumber] = '\' THEN BEGIN
          EXIT(COPYSTR(FullFileName,1,StepNumber));
        END;
      END;
      EXIT('');
    END;

    LOCAL PROCEDURE OpenXMLFromStream@1100529912(VAR XmlDoc@1100529900 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";IStream@1100529901 : InStream);
    BEGIN
      XmlDoc := XmlDoc.XmlDocument;
      XmlDoc.Load(IStream);
    END;

    LOCAL PROCEDURE DeleteNodeFromXML@1100529913(VAR XmlDoc@1100529900 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";ParentNode@1100529901 : Text;NodeToBeDeleted@1100529902 : Text);
    VAR
      RootNode@1100529904 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      SchemaNode@1100529903 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      XMLDOMManagement4PS.FindNode(XmlDoc, STRSUBSTNO(LocalName, ParentNode), RootNode);
      XMLDOMManagement4PS.FindNode(RootNode, STRSUBSTNO(LocalName, NodeToBeDeleted), SchemaNode);
      RootNode.RemoveChild(SchemaNode);
    END;

    LOCAL PROCEDURE ProcessXMLPortImportFromXMLUsingStream@1100529900(VAR XmlDoc@1100529900 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";InspectionType@1100529901 : Code[20]);
    VAR
      XMLportToImport@1100529903 : XMLport 11012550;
      TempBlob@1100529902 : TEMPORARY Record 99008535;
      IStream@1100529904 : InStream;
      OutStream@1100528600 : OutStream;
    BEGIN
      TempBlob.INIT;
      TempBlob.Blob.CREATEOUTSTREAM(OutStream);
      XmlDoc.Save(OutStream);

      TempBlob.Blob.CREATEINSTREAM(IStream);
      XMLportToImport.SetInspectionType(InspectionType);
      XMLportToImport.SETSOURCE(IStream);
      XMLportToImport.IMPORT;
    END;

    PROCEDURE SetDefaults@1100528501(IInspectionTypeCode@1100528500 : Code[20];IIStream@1100528501 : InStream);
    BEGIN
      InspectionTypeCode := IInspectionTypeCode;
      IStream := IIStream;
    END;

    BEGIN
    END.
  }
}

