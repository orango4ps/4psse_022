OBJECT Report 11012771 Mail Subcontr. WO not Finished
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Mail Subcontractor Work Orders not Finished;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   NoOfDays := 7;
                 END;

    UsageCategory=Tasks;
  }
  DATASET
  {
    { 3182;    ;DataItem;                    ;
               DataItemTable=Table23;
               DataItemTableView=SORTING(No.)
                                 WHERE(Subcontractor Type=FILTER(Subcontractor|Self Employed|Employment Agency));
               OnAfterGetRecord=BEGIN
                                  SubcontractorNo := Vendor.GetResourceNo;
                                  IF SubcontractorNo = '' THEN
                                    CurrReport.SKIP;
                                END;

               ReqFilterFields=No. }

    { 1100528100;1;DataItem;                 ;
               DataItemTable=Table11012823;
               DataItemTableView=SORTING(No.);
               ReqFilterFields=No. }

    { 1100528101;2;DataItem;                 ;
               DataItemTable=Table11229279;
               DataItemTableView=SORTING(Resource No.,Export to FSA)
                                 WHERE(Source Type=CONST(ServiceOrder),
                                       Resource Type=CONST(Subcontractor));
               OnPreDataItem=BEGIN
                               SETRANGE("Source Company", COMPANYNAME);
                               SETRANGE("Resource No.", SubcontractorNo);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF WorkOrderNotFinished("No.", SubcontractorNo, NoOfDays) THEN
                                    IF Vendor."No." <> EmailSentForVendorNo THEN BEGIN
                                      ServiceSubcontrEmailMgt.SendSOListMail(Vendor."No.", 0, NoOfDays, 3030);
                                      EmailSentForVendorNo := Vendor."No.";
                                    END;
                                END;

               ReqFilterFields=No.;
               DataItemLink=Source No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100528600;;Container;
                  ContainerType=ContentArea }

      { 1100528601;1;Group  ;
                  CaptionML=[ENU=Options;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100528602;2;Field  ;
                  CaptionML=[ENU=Finished within x days;
                             NOR=Ferdig innen x dager];
                  SourceExpr=NoOfDays;
                  MinValue=0 }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ServiceSubcontrEmailMgt@1100528101 : Codeunit 11012857;
      SubcontractorNo@1100528100 : Code[20];
      NoOfDays@1100528600 : Integer;
      EmailSentForVendorNo@1100527450 : Code[20];

    PROCEDURE WorkOrderNotFinished@1100528606(IWorkOrderNo@1100525001 : Code[20];ISubcontractorNo@1100528602 : Code[20];INoOfDays@1100528603 : Integer) : Boolean;
    VAR
      WorkOrder@1100528601 : Record 11229279;
    BEGIN
      IF IWorkOrderNo <> '' THEN
        WorkOrder.SETRANGE("No.", IWorkOrderNo)
      ELSE
        WorkOrder.SETCURRENTKEY("Resource No.");
      WorkOrder.SETRANGE("Resource Type", WorkOrder."Resource Type"::Subcontractor);
      WorkOrder.SETRANGE("Resource No.", ISubcontractorNo);
      WorkOrder.SETRANGE("Source Company", COMPANYNAME);
      WorkOrder.SETRANGE("Source Type", WorkOrder."Source Type"::ServiceOrder);
      WorkOrder.SETRANGE("Actual Field Service Status", '60');
      WorkOrder.SETFILTER("Last Possible Ending Date/Time", '<>%1&<%2', 0DT, CREATEDATETIME(TODAY + INoOfDays + 1, 0T));
      IF WorkOrder.FINDSET THEN
        REPEAT
          IF IsServiceOrderStartedAndNotFinished(WorkOrder."Source No.") THEN
            EXIT(TRUE);
        UNTIL WorkOrder.NEXT = 0;
      WorkOrder.SETRANGE("Last Possible Ending Date/Time");
      WorkOrder.SETFILTER("Ending Date/Time", '<>%1&<%2', 0DT, CREATEDATETIME(TODAY + INoOfDays + 1, 0T));
      IF WorkOrder.FINDSET THEN
        REPEAT
          IF IsServiceOrderStartedAndNotFinished(WorkOrder."Source No.") THEN
            EXIT(TRUE);
        UNTIL WorkOrder.NEXT = 0;
    END;

    LOCAL PROCEDURE IsServiceOrderStartedAndNotFinished@1100528600(IServiceOrderNo@1100528600 : Code[20]) : Boolean;
    VAR
      SubcontPortSetup@1100528604 : Record 11126402;
      ServiceSetup@1100528603 : Record 11012800;
      ServiceOrder@1100528601 : Record 11012823;
      ReferencePoint@1100528605 : Integer;
    BEGIN
      IF SubcontPortSetup.FINDSET THEN
        IF SubcontPortSetup."Subcontracting Portal Active" THEN
          ReferencePoint := SubcontPortSetup."Ref. Point Sending WO";
      IF ReferencePoint = 0 THEN BEGIN
        ServiceSetup.GET;
        ReferencePoint := ServiceSetup."Ref. Point SO Planned";
      END;
      ServiceOrder.SETRANGE("No.", IServiceOrderNo);
      ServiceOrder.SETFILTER("Actual Reference Point (Gantt)", '%1..', ReferencePoint);
      ServiceOrder.SETFILTER(Status, '<%1', ServiceOrder.Status::"Technical Finished");
      IF NOT ServiceOrder.ISEMPTY THEN
        EXIT(TRUE);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

