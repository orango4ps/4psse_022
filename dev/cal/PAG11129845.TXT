OBJECT Page 11129845 Costs FB
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[DEU=Kosten;
               ENU=Cost;
               NLD=Kosten;
               NOR=Kostnader;
               SVE=Kostnader];
    SourceTable=Table11012035;
    PageType=CardPart;
    SourceTableTemporary=Yes;
    RefreshOnActivate=Yes;
  }
  CONTROLS
  {
    { 1210190000;0;Container;
                ContainerType=ContentArea }

    { 1100529703;1;Field  ;
                Name=Actual Costs;
                CaptionML=[DEU=Ist-Kosten;
                           ENU=Actual Costs;
                           NLD=Besteed;
                           NOR=Faktiske koster;
                           SVE=Verkliga kostnader];
                SourceExpr=Amounts[1];
                OnDrillDown=BEGIN
                              JobLedgerEntry_Drilldown(1)
                            END;
                             }

    { 1100529700;1;Field  ;
                Name=Actual Costs (without Purchase);
                CaptionML=[DEU=Ist-Kosten (ohne Einkaufsmarkierung);
                           ENU=Actual Costs (without Purchase Action);
                           NLD=Besteed (buiten inkoopactie)];
                SourceExpr=Amounts[2];
                OnDrillDown=BEGIN
                              JobLedgerEntry_Drilldown(2)
                            END;
                             }

    { 1100529701;1;Field  ;
                Name=Actual Costs (Purchase Action);
                CaptionML=[DEU=Ist-Kosten (Einkaufsmarkierung);
                           ENU=Actual Costs (Purchase Action);
                           NLD=Besteed (inkoopactie);
                           NOR=Reelle Kostnader (Innkjõphandling);
                           SVE=Verkliga kostnader (inkîpsÜtgÑrd)];
                SourceExpr=Amounts[3];
                OnDrillDown=BEGIN
                              JobLedgerEntry_Drilldown(3)
                            END;
                             }

    { 1100529702;1;Field  ;
                Name=Purchase;
                CaptionML=[DEU=Einkauf;
                           ENU=Purchase;
                           NLD=Inkoop;
                           NOR=Kjõp;
                           SVE=Inkîp];
                SourceExpr=Amounts[4];
                OnDrillDown=BEGIN
                              PurchaseLine_Drilldown(4)
                            END;
                             }

    { 1100529707;1;Field  ;
                Name=Purchase (Get Orders);
                CaptionML=[DEU=Einkauf (AuftrÑge abrufen);
                           ENU=Purchase (Get Orders);
                           NLD=Inkoop (haalorders)];
                SourceExpr=Amounts[5] }

    { 1100529706;1;Field  ;
                Name=Purchase (Purchase Action);
                CaptionML=[DEU=Einkauf (Einkaufsmarkierung);
                           ENU=Purchase (Purchase Action);
                           NLD=Inkoop (inkoopactie);
                           NOR=Innkjõp (Innkjõpshandling);
                           SVE=Inkîp (inkîpsÜtgÑrd)];
                SourceExpr=Amounts[6] }

    { 1100527300;1;Field  ;
                Name=Purchase (without Purchase Action);
                CaptionML=[DEU=Einkauf (ohne Einkaufsmarkierung);
                           ENU=Purchase (without Purchase Action);
                           NLD=Inkoop (buiten inkoopactie)];
                SourceExpr=Amounts[4] - Amounts[6] }

    { 1100529705;1;Field  ;
                Name=Purchase budget;
                CaptionML=[DEU=Einkaufsbudget;
                           ENU=Purchase Budget;
                           NLD=Inkoopbudget;
                           NOR=Innkjõpsbudsjett;
                           SVE=Inkîpsbudget];
                SourceExpr=Amounts[7];
                OnDrillDown=BEGIN
                              BudgetLine_SETFILTERS;
                              PAGE.RUNMODAL(0, BudgetLine);
                            END;
                             }

    { 1100529704;1;Field  ;
                Name=Received/Not Invoiced;
                CaptionML=[DEU=Eingegangen/Nicht fakturiert;
                           ENU=Received/Not Invoiced;
                           NLD=Ontvangen/niet gefactureerd;
                           NOR=Mottatt/ikke fakturert;
                           SVE=Mottaget/inte fakturerat];
                SourceExpr=Amounts[8];
                OnDrillDown=BEGIN
                              PurchaseOrderControlLine_Drilldown
                            END;
                             }

    { 1100529711;1;Field  ;
                Name=Open (Purchase);
                CaptionML=[DEU=Ausstehend (Einkauf);
                           ENU=Open (Purchase);
                           NLD=Openstaand (inkoop);
                           NOR=èpne innkjõp;
                           SVE=ôppna inkîp];
                SourceExpr=Amounts[9];
                OnDrillDown=BEGIN
                              PurchaseOrderControlLine_Drilldown
                            END;
                             }

    { 1100529710;1;Field  ;
                Name=Open Amount (Hours);
                CaptionML=[DEU=Ausstehender Betrag (Stunden);
                           ENU=Open Amount (Hours);
                           NLD=Openstaand bedrag (uren);
                           NOR=èpne belõp (Timer);
                           SVE=ôppna belopp (timmar)];
                SourceExpr=Amounts[10];
                OnDrillDown=BEGIN
                              HourAccountingLine_SETFILTERS;
                              PAGE.RUNMODAL(0, HourAccountingLine);
                            END;
                             }

    { 1100529709;1;Field  ;
                Name=Open Hours;
                CaptionML=[DEU=Ausstehende Stunden;
                           ENU=Open Hours;
                           NLD=Openstaande uren;
                           NOR=èpne timer;
                           SVE=ôppna timmar];
                SourceExpr=Amounts[11];
                OnDrillDown=BEGIN
                              HourAccountingLine_SETFILTERS;
                              PAGE.RUNMODAL(0, HourAccountingLine);
                            END;
                             }

    { 1100529708;1;Field  ;
                Name=Total Release Risc Coverage;
                CaptionML=[DEU=Gesamt Freiwerdung Absicherungsbetrag;
                           ENU=Total Release Risc Coverage;
                           NLD=Totaal vrijval risicodekking;
                           NOR="Totalt, frigi Riskdekning ";
                           SVE=Total slÑppning fîr risktÑckning];
                SourceExpr=Amounts[12];
                OnDrillDown=BEGIN
                              PurchaseLine_Drilldown(12)
                            END;
                             }

    { 1100529715;1;Field  ;
                Name=Total Risc Coverage Amount;
                CaptionML=[DEU=Gesamt Absicherungsbetrag;
                           ENU=Total Risc Coverage Amount;
                           NLD=Totaal risicodekkingsbedrag;
                           NOR=Totalt Riskdekningsbelõp;
                           SVE=Totalt risktÑckningsbelopp];
                SourceExpr=Amounts[13];
                OnDrillDown=BEGIN
                              PurchaseLine_Drilldown(13)
                            END;
                             }

    { 1100529714;1;Field  ;
                Name=Open Ovh. Surch. (Inventory);
                CaptionML=[DEU=AK ausstehend (Lagerbestand);
                           ENU=Open Ovh. Surch. (Inventory);
                           NLD=AK openstaand (voorraad);
                           NOR=èpen overheadkost (lager);
                           SVE=ôppen overheadkostnad (lager)];
                SourceExpr=Amounts[14];
                OnDrillDown=BEGIN
                              ItemJournalSurcharge_SETFILTERS;
                              PAGE.RUNMODAL(PAGE::"Item Journal Surcharge Lines", ItemJournalSurcharge);
                            END;
                             }

    { 1100529713;1;Field  ;
                Name=Open Ovh. Surch. (Hours);
                CaptionML=[DEU=AK offen (Stunden);
                           ENU=Open Ovh. Surch. (Hours);
                           NLD=AK openstaand (uren);
                           NOR=èpen tilleggsgebyr for overhead (Timer);
                           SVE=ôppen overheadkostnad (timmar)];
                SourceExpr=Amounts[15];
                OnDrillDown=BEGIN
                              HourAccountingSurcharge_SETFILTERS;
                              PAGE.RUNMODAL(PAGE::"Hour Accounting Surch. Lines", HourAccountingSurcharge);
                            END;
                             }

    { 1100529712;1;Field  ;
                Name=Open Ovh. Surch. (Purchase);
                CaptionML=[DEU=AK Verpflichtungen (Einkauf);
                           ENU=Open Ovh. Surch. (Purchase);
                           NLD=AK verplichtingen (inkoop);
                           NOR=èpne Overheadkost (innkjõp);
                           SVE=ôppen overheadkostnad (inkîp)];
                SourceExpr=Amounts[16];
                OnDrillDown=BEGIN
                              PurchaseOrderControlLine_Drilldown;
                            END;
                             }

  }
  CODE
  {
    VAR
      Amounts@1100529700 : ARRAY [16] OF Decimal;
      BudgetLine@1100529702 : Record 11012001;
      PurchaseOrderControlLine@1100529704 : Record 11020221;
      HourAccountingLine@1100529703 : Record 11012039;
      ItemJournalSurcharge@1100529701 : Record 11020585;
      HourAccountingSurcharge@1100529705 : Record 11020308;
      ViewPrognPerElementByCostObj@1100529600 : Boolean;

    PROCEDURE SetParamerts@1100528105(PrognosisLineNew@1100528100 : Record 11012035;ViewPrognPerElementByCostObjNew@1100529600 : Boolean);
    BEGIN
      ViewPrognPerElementByCostObj := ViewPrognPerElementByCostObjNew;
      IF ("Project No." <> PrognosisLineNew."Project No.") OR
        ("Prognosis Date" <> PrognosisLineNew."Prognosis Date") OR
        (Element <> PrognosisLineNew.Element) OR
        ("Cost Type" <> PrognosisLineNew."Cost Type") OR
        ("Cost Object" <> PrognosisLineNew."Cost Object")
      THEN BEGIN
        DELETEALL;
        INIT;
        COPY(PrognosisLineNew);
        INSERT;
        CalcAmounts;
        CurrPage.UPDATE(FALSE);
      END
    END;

    LOCAL PROCEDURE CalcAmounts@1100529704();
    VAR
      Prognosis@1100528500 : Record 11012034;
    BEGIN
      CLEAR(Amounts);
      Prognosis.GET("Project No.", "Prognosis Date");
      IF Prognosis."Fix Prognosis Line" THEN BEGIN
        Amounts[1] := "Actual Costs";
        Amounts[2] := "Actual Costs" - "Actual Costs (Purchase Action)";
        Amounts[3] := "Actual Costs (Purchase Action)";
        Amounts[4] := "Purchase Amount";
        Amounts[5] := "Purchase Amount (Get Orders)";
        Amounts[6] := "Purchase (Purchase Action)";
        Amounts[7] := "Purchase Budget";
        Amounts[8] := "Received/Not Invoiced";
        Amounts[9] := "Open (Purchase)";
        Amounts[10] := "Open Amount (Hours)";
        Amounts[11] := "Open Hours";
        Amounts[12] := "Total Release Risc Coverage";
        Amounts[13] := "Total Risc Coverage Amount";
        Amounts[14] := "Open Ovh. Surch. (Inventory)";
        Amounts[15] := "Open Ovh. Surch. (Hours)";
        Amounts[16] := "Open Ovh. Surch. (Purchase)";
      END ELSE BEGIN
        JobLedgerEntry_CalcAmounts;
        PurchaseLine_CalcAmounts;
        PurchaseOrderControlLine_CalcAmounts;  //db, 25-01-18

        BudgetLine_SETFILTERS;
        BudgetLine.CALCSUMS("Amount (LCY)");
        Amounts[7] := BudgetLine."Amount (LCY)";

        HourAccountingLine_SETFILTERS;
        HourAccountingLine.CALCSUMS("Amount (LCY)", "Total Line");
        Amounts[10] := HourAccountingLine."Amount (LCY)";
        Amounts[11] := HourAccountingLine."Total Line";

        ItemJournalSurcharge_SETFILTERS;
        ItemJournalSurcharge.CALCSUMS("Overhead Surcharge Project");
        Amounts[14] := ItemJournalSurcharge."Overhead Surcharge Project";

        HourAccountingSurcharge_SETFILTERS;
        HourAccountingSurcharge.CALCSUMS("Overhead Surcharge Project");
        Amounts[15] := HourAccountingSurcharge."Overhead Surcharge Project";
      END;
    END;

    PROCEDURE CalculateValues@10();
    VAR
      ProjRec@1100529700 : Record 11072003;
      ElemCstObjCntrlRec@1100529703 : Record 11012050;
      CstObjCntrlRec@1100529702 : Record 11012047;
      SearchProgrDate@1100529701 : Codeunit 11012014;
    BEGIN
      IF NOT ProjRec.GET("Project No.") THEN
        EXIT;

      ProjRec.SETRANGE("Period Filter",0D,"Prognosis Date");
      SearchProgrDate.DetermineDate(ProjRec,FALSE);

      IF ProjRec."Prognosis per Element" THEN BEGIN
        IF ElemCstObjCntrlRec.GET("Project No.",Element,"Cost Type","Cost Object") THEN BEGIN
          ElemCstObjCntrlRec.RESET;
          ProjRec.COPYFILTER("Progress Filter", ElemCstObjCntrlRec."Progress Filter");
          ElemCstObjCntrlRec.SETRANGE("Prognosis Filter", "Prognosis Date");
          ElemCstObjCntrlRec.SETRANGE("Cumulation Filter", 0D, "Prognosis Date");
          ElemCstObjCntrlRec.SETRANGE("Main Project No.", "Main Project No.");
          IF "Project No." <> "Main Project No." THEN
            ElemCstObjCntrlRec.SETRANGE("Project Filter", "Project No.");
          Amounts[5] := ElemCstObjCntrlRec.CalculatePurchaseAmountGetOrders;
        END;
      END ELSE
        IF CstObjCntrlRec.GET("Project No.","Cost Type","Cost Object") THEN BEGIN
          CstObjCntrlRec.RESET;
          ProjRec.COPYFILTER("Progress Filter",CstObjCntrlRec."Progress Filter");
          CstObjCntrlRec.SETRANGE("Prognosis Filter", "Prognosis Date");
          CstObjCntrlRec.SETRANGE("Cumulation Filter", 0D, "Prognosis Date");
          CstObjCntrlRec.SETRANGE("Main Project No.", "Main Project No.");
          IF "Project No." <> "Main Project No." THEN
            CstObjCntrlRec.SETRANGE("Project Filter", "Project No.");
          Amounts[5] := CstObjCntrlRec.CalculatePurchaseAmountGetOrders;
        END;
    END;

    LOCAL PROCEDURE JobLedgerEntry_SETFILTERS@1100529702(VAR JobLedgerEntry@1100529700 : Record 11072005);
    VAR
      Job@1100528400 : Record 11072003;
    BEGIN
      IF Job.GET("Project No.") THEN;
      JobLedgerEntry.SETRANGE("Job No.", "Project No.");
      JobLedgerEntry.SETRANGE("Posting Date", 0D, "Prognosis Date");
      IF ViewPrognPerElementByCostObj THEN BEGIN
        JobLedgerEntry.SETRANGE("Cost Type", "Cost Type");
        IF Level >= 2 THEN
          JobLedgerEntry.SETRANGE("Global Dimension 2 Code", "Cost Object");
        IF Level = 3 THEN
          JobLedgerEntry.SETRANGE(Element, Element);
      END ELSE BEGIN
        IF (Element <> '') OR Job."Prognosis per Element" THEN
          JobLedgerEntry.SETRANGE(Element, Element);
        IF "Cost Type" >= 0 THEN
          JobLedgerEntry.SETRANGE("Cost Type", "Cost Type");
        IF NOT ("Cost Object" IN ['', '-']) THEN
          JobLedgerEntry.SETRANGE("Global Dimension 2 Code", "Cost Object");
      END;
    END;

    LOCAL PROCEDURE JobLedgerEntry_CalcAmounts@1100529706();
    VAR
      JobLedgerEntry@1100529700 : Record 11072005;
    BEGIN
      JobLedgerEntry_SETFILTERS(JobLedgerEntry);
      JobLedgerEntry.CALCSUMS("Total Cost (LCY)");
      Amounts[1] := JobLedgerEntry."Total Cost (LCY)";
      JobLedgerEntry.SETFILTER("Purchase Action", '<>%1', '');
      JobLedgerEntry.CALCSUMS("Total Cost (LCY)");
      Amounts[3] := JobLedgerEntry."Total Cost (LCY)";
      Amounts[2] := Amounts[1] - Amounts[3];
    END;

    LOCAL PROCEDURE JobLedgerEntry_Drilldown@1100529703(AmountType@1100529700 : Integer);
    VAR
      JobLedgerEntry@1100529702 : Record 11072005;
    BEGIN
      JobLedgerEntry_SETFILTERS(JobLedgerEntry);
      CASE AmountType OF
        2: JobLedgerEntry. SETFILTER("Purchase Action", '=%1', '');
        3: JobLedgerEntry.SETFILTER("Purchase Action", '<>%1', '');
      END;
      PAGE.RUNMODAL(0, JobLedgerEntry);
    END;

    LOCAL PROCEDURE PurchaseLine_SETFILTERS@1100529710(VAR PurchaseLine@1100529700 : Record 39);
    VAR
      Job@1100528400 : Record 11072003;
    BEGIN
      IF Job.GET("Project No.") THEN;
      PurchaseLine.SETRANGE("Main Project No.", "Main Project No.");
      IF ViewPrognPerElementByCostObj THEN BEGIN
        PurchaseLine.SETRANGE("Cost Type", "Cost Type");
        IF Level >= 2 THEN
          PurchaseLine.SETRANGE("Shortcut Dimension 2 Code", "Cost Object");
        IF Level = 3 THEN
          PurchaseLine.SETRANGE(Element, Element);
      END ELSE BEGIN
        IF (Element <> '') OR Job."Prognosis per Element" THEN
          PurchaseLine.SETRANGE(Element, Element);
        IF "Cost Type" >= 0 THEN
          PurchaseLine.SETRANGE("Cost Type", "Cost Type"+1);
        IF NOT ("Cost Object" IN ['', '-']) THEN
          PurchaseLine.SETRANGE("Shortcut Dimension 2 Code", "Cost Object");
      END;
      IF "Project No." <> "Main Project No." THEN
        PurchaseLine.SETRANGE("Job No.", "Project No.");
      PurchaseLine.SETRANGE("Document Type", PurchaseLine."Document Type"::Order);
      PurchaseLine.SETRANGE("Order Date", 0D, "Prognosis Date");
    END;

    LOCAL PROCEDURE PurchaseLine_CalcAmounts@1100529709();
    VAR
      PurchaseLine@1100529701 : Record 39;
    BEGIN
      PurchaseLine_SETFILTERS(PurchaseLine);
      PurchaseLine.CALCSUMS("Amount (LCY)", "Release Risc Coverage (LCY)", "Risc Coverage Amount (LCY)");
      CalculateValues;
      Amounts[4] := PurchaseLine."Amount (LCY)";
      Amounts[12] := PurchaseLine."Release Risc Coverage (LCY)";
      Amounts[13] := PurchaseLine."Risc Coverage Amount (LCY)";

      PurchaseLine.SETFILTER("Purchase Action", '<>%1', '');
      PurchaseLine.CALCSUMS("Amount (LCY)");
      Amounts[6] := PurchaseLine."Amount (LCY)";
    END;

    LOCAL PROCEDURE PurchaseLine_Drilldown@1100529708(AmountType@1100529700 : Integer);
    VAR
      PurchaseLine@1100529701 : Record 39;
    BEGIN
      PurchaseLine_SETFILTERS(PurchaseLine);
      PAGE.RUNMODAL(0, PurchaseLine);
    END;

    LOCAL PROCEDURE BudgetLine_SETFILTERS@1100529715();
    VAR
      Job@1100528400 : Record 11072003;
    BEGIN
      IF Job.GET("Project No.") THEN;
      BudgetLine.RESET;
      BudgetLine.SETRANGE("Main Project No.", "Main Project No.");
      IF ViewPrognPerElementByCostObj THEN BEGIN
        BudgetLine.SETRANGE("Cost Type", "Cost Type");
        IF Level >= 2 THEN
          BudgetLine.SETRANGE("Cost Object", "Cost Object");
        IF Level = 3 THEN
          BudgetLine.SETRANGE(Element, Element);
      END ELSE BEGIN
        IF (Element <> '') OR Job."Prognosis per Element" THEN
          BudgetLine.SETRANGE(Element, Element);
        IF "Cost Type" >= 0 THEN
          BudgetLine.SETRANGE("Cost Type", "Cost Type");
        IF NOT ("Cost Object" IN ['', '-']) THEN
          BudgetLine.SETRANGE("Cost Object", "Cost Object");
      END;
      IF "Project No." <> "Main Project No." THEN
        BudgetLine.SETRANGE("Project No.", "Project No.");
      BudgetLine.SETRANGE("Purch. Action Approval Date", 0D, "Prognosis Date");
      BudgetLine.SETFILTER("Purchase Action Status", '>=%1', BudgetLine."Purchase Action Status"::Approved);
    END;

    LOCAL PROCEDURE PurchaseOrderControlLine_SETFILTERS@1100529722();
    VAR
      Job@1100528400 : Record 11072003;
    BEGIN
      IF Job.GET("Project No.") THEN;
      PurchaseOrderControlLine.RESET;
      PurchaseOrderControlLine.SETRANGE("Main Project No.", "Main Project No.");
      IF ViewPrognPerElementByCostObj THEN BEGIN
        PurchaseOrderControlLine.SETRANGE("Cost Type", "Cost Type");
        IF Level >= 2 THEN
          PurchaseOrderControlLine.SETRANGE("Shortcut Dimension 2 Code", "Cost Object");
        IF Level = 3 THEN
          PurchaseOrderControlLine.SETRANGE(Element, Element);
      END ELSE BEGIN
        IF (Element <> '') OR Job."Prognosis per Element" THEN
          PurchaseOrderControlLine.SETRANGE(Element, Element);
        IF "Cost Type" >= 0 THEN
          PurchaseOrderControlLine.SETRANGE("Cost Type", "Cost Type"+1);  //db, 25-01-18: CostType in ControlLine starts with empty option
        IF NOT ("Cost Object" IN ['', '-']) THEN
          PurchaseOrderControlLine.SETRANGE("Shortcut Dimension 2 Code", "Cost Object");
      END;
      IF "Project No." <> "Main Project No." THEN
        PurchaseOrderControlLine.SETRANGE("Project No.","Project No.");
      PurchaseOrderControlLine.SETRANGE(Date, 0D, "Prognosis Date");
    END;

    LOCAL PROCEDURE PurchaseOrderControlLine_CalcAmounts@1100529721();
    BEGIN
      PurchaseOrderControlLine_SETFILTERS;
      PurchaseOrderControlLine.CALCSUMS("Amt. Rcd. Not Invoiced", "Outstanding Amount","Overhead Surcharge Soft", "Overhead Surcharge Firm");
      Amounts[8] := PurchaseOrderControlLine."Amt. Rcd. Not Invoiced";
      Amounts[9] := PurchaseOrderControlLine."Outstanding Amount";
      Amounts[16] := PurchaseOrderControlLine."Overhead Surcharge Soft" + PurchaseOrderControlLine."Overhead Surcharge Firm"
    END;

    LOCAL PROCEDURE PurchaseOrderControlLine_Drilldown@1100529720();
    BEGIN
      PurchaseOrderControlLine_SETFILTERS;
      PAGE.RUNMODAL(0, PurchaseOrderControlLine);
    END;

    LOCAL PROCEDURE HourAccountingLine_SETFILTERS@1100529726();
    VAR
      Job@1100528400 : Record 11072003;
    BEGIN
      IF Job.GET("Project No.") THEN;
      HourAccountingLine.RESET;
      HourAccountingLine.SETRANGE("Main Project No.", "Main Project No.");
      IF ViewPrognPerElementByCostObj THEN BEGIN
        HourAccountingLine.SETRANGE("Cost Type", "Cost Type");
        IF Level >= 2 THEN
          HourAccountingLine.SETRANGE("Cost Object", "Cost Object");
        IF Level = 3 THEN
          HourAccountingLine.SETRANGE(Element, Element);
      END ELSE BEGIN
        IF (Element <> '') OR Job."Prognosis per Element" THEN
          HourAccountingLine.SETRANGE(Element, Element);
        IF "Cost Type" >= 0 THEN
          HourAccountingLine.SETRANGE("Cost Type", "Cost Type");
        IF NOT ("Cost Object" IN ['', '-']) THEN
          HourAccountingLine.SETRANGE("Cost Object", "Cost Object");
      END;
      IF "Project No." <> "Main Project No." THEN
        HourAccountingLine.SETRANGE("Project No.", "Project No.");
      HourAccountingLine.SETRANGE("Posting Date", 0D, "Prognosis Date");
    END;

    LOCAL PROCEDURE ItemJournalSurcharge_SETFILTERS@1100529725();
    VAR
      Job@1100528400 : Record 11072003;
    BEGIN
      IF Job.GET("Project No.") THEN;
      ItemJournalSurcharge.RESET;
      ItemJournalSurcharge.SETRANGE("Main Project No.", "Main Project No.");
      IF ViewPrognPerElementByCostObj THEN BEGIN
        ItemJournalSurcharge.SETRANGE("Cost Type", "Cost Type");
        IF Level >= 2 THEN
          ItemJournalSurcharge.SETRANGE("Shortcut Dimension 2 Code", "Cost Object");
        IF Level = 3 THEN
          ItemJournalSurcharge.SETRANGE(Element, Element);
      END ELSE BEGIN
        IF (Element <> '') OR Job."Prognosis per Element" THEN
          ItemJournalSurcharge.SETRANGE(Element, Element);
        IF "Cost Type" >= 0 THEN
          ItemJournalSurcharge.SETRANGE("Cost Type", "Cost Type");
        IF NOT ("Cost Object" IN ['', '-']) THEN
          ItemJournalSurcharge.SETRANGE("Shortcut Dimension 2 Code", "Cost Object");
      END;
      IF "Project No." <> "Main Project No." THEN
        ItemJournalSurcharge.SETRANGE("Job No.", "Project No.");
      ItemJournalSurcharge.SETRANGE("Posting Date", 0D, "Prognosis Date");
    END;

    LOCAL PROCEDURE HourAccountingSurcharge_SETFILTERS@1100529727();
    VAR
      Job@1100528400 : Record 11072003;
    BEGIN
      IF Job.GET("Project No.") THEN;
      HourAccountingSurcharge.RESET;
      HourAccountingSurcharge.SETRANGE("Main Project No.", "Main Project No.");
      IF ViewPrognPerElementByCostObj THEN BEGIN
        HourAccountingSurcharge.SETRANGE("Cost Type", "Cost Type");
        IF Level >= 2 THEN
          HourAccountingSurcharge.SETRANGE("Cost Object", "Cost Object");
        IF Level = 3 THEN
          HourAccountingSurcharge.SETRANGE(Element, Element);
      END ELSE BEGIN
        IF (Element <> '') OR Job."Prognosis per Element" THEN
          HourAccountingSurcharge.SETRANGE(Element, Element);
        IF "Cost Type" >= 0 THEN
          HourAccountingSurcharge.SETRANGE("Cost Type", "Cost Type");
        IF NOT ("Cost Object" IN ['', '-']) THEN
          HourAccountingSurcharge.SETRANGE("Cost Object", "Cost Object");
      END;
      IF "Project No." <> "Main Project No." THEN
        HourAccountingSurcharge.SETRANGE("Project No.", "Project No.");
      HourAccountingSurcharge.SETRANGE("Posting Date", 0D, "Prognosis Date");
    END;

    BEGIN
    END.
  }
}

