OBJECT Table 11072193 Change Request
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ServiceSetup@1100528300 : Record 11012800;
               NoSeriesMgt@1100528301 : Codeunit 396;
               UserSetup@1100528302 : Record 91;
             BEGIN
               ServiceSetup.GET;
               IF "No." = '' THEN BEGIN
                 ServiceSetup.TESTFIELD("Change Request Nos.");
                 NoSeriesMgt.InitSeries(ServiceSetup."Change Request Nos.", xRec."No. Series", 0D, "No.", "No. Series");
               END;

               CopyImpactDefaultSet;

               "Created On" := CURRENTDATETIME;
               "Created By" := USERID;
               IF (UserSetup.GET(USERID)) THEN
                 "Change Manager No." := UserSetup."Employee No.";
             END;

    OnModify=BEGIN
               "Modified On" := TODAY;
               "Modified By" := USERID;
             END;

    OnDelete=VAR
               ServiceText@1210190000 : Record 11012882;
               ChangeRequestImpactLine@1100409000 : Record 11072229;
               ChangeRequestFollower@1100409001 : Record 11072230;
             BEGIN
               IF (Status = Status::"In Process") OR (Status = Status::Finished) THEN
                 FIELDERROR(Status);

               ChangeRequestImpactLine.SETRANGE("Change Request Code", "No.");
               ChangeRequestImpactLine.DELETEALL(TRUE);

               ChangeRequestFollower.SETRANGE("Change Request No.", "No.");
               ChangeRequestFollower.DELETEALL(TRUE);

               ServiceText.SETRANGE("Table Name", ServiceText."Table Name"::"Change Request");
               ServiceText.SETRANGE("No.","No.");
               ServiceText.DELETEALL(TRUE);
             END;

    OnRename=BEGIN
               ERROR(Text000);
             END;

    CaptionML=ENU=Change Request;
    LookupPageID=Page11126265;
    DrillDownPageID=Page11126265;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=VAR
                                                                ServiceSetup@1100528300 : Record 11012800;
                                                                NoSeriesMgt@1100528301 : Codeunit 396;
                                                              BEGIN
                                                                ServiceSetup.GET;
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  ServiceSetup.GET;
                                                                  NoSeriesMgt.TestManual(ServiceSetup."Change Request Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr;
                                                              SVE=Nr] }
    { 20  ;   ;Customer No.        ;Code20        ;TableRelation=Customer.No.;
                                                   OnValidate=VAR
                                                                ServiceLocation@1100409000 : Record 11012801;
                                                                ServiceContract@1100409001 : Record 11012812;
                                                              BEGIN
                                                                IF (CurrFieldNo = FIELDNO("Customer No.")) THEN BEGIN
                                                                  IF ("Service Location No." <> '') THEN BEGIN
                                                                    ServiceLocation.GET("Service Location No.");
                                                                    IF ("Service Contract No." = '') AND (ServiceLocation."Customer No." <> '') THEN BEGIN
                                                                      TESTFIELD("Customer No.", ServiceLocation."Customer No.")
                                                                    END ELSE
                                                                      IF ("Service Contract No." <> '') THEN
                                                                        IF (ServiceContract.GET("Service Contract No.")) THEN
                                                                          IF (ServiceContract."Customer No." <> '') THEN
                                                                            TESTFIELD("Customer No.", ServiceContract."Customer No.");
                                                                  END;
                                                                END;

                                                                CALCFIELDS("Customer Name");
                                                              END;

                                                   CaptionML=[ENU=Customer No.;
                                                              NOR=Kundenr.;
                                                              SVE=Kundnr] }
    { 21  ;   ;Customer Name       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=[ENU=Customer Name;
                                                              NOR=Kundnavn;
                                                              SVE=Kundnamn];
                                                   Editable=No }
    { 30  ;   ;Contact Name        ;Text100       ;OnLookup=BEGIN
                                                              LookupContact("Customer No.");
                                                            END;

                                                   CaptionML=[ENU=Contact Name;
                                                              NOR=Kontaktnavn;
                                                              SVE=Kontaktnamn] }
    { 40  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 50  ;   ;Service Location No.;Code20        ;TableRelation="Service Location";
                                                   OnValidate=VAR
                                                                ServiceLocation@1100528000 : Record 11012801;
                                                              BEGIN
                                                                CALCFIELDS("Service Location Description", "Remote Control");
                                                                IF ("Service Location No." <> '') AND ("Customer No." = '') THEN BEGIN
                                                                  ServiceLocation.GET("Service Location No.");
                                                                  IF (ServiceLocation."Customer No." <> '') THEN
                                                                    VALIDATE("Customer No.", ServiceLocation."Customer No.");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupServiceLocation;
                                                            END;

                                                   CaptionML=[ENU=Service Location No.;
                                                              NOR=Servicelokasjon Nr.;
                                                              SVE=Serviceplatsnr] }
    { 51  ;   ;Service Location Description;Text50;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Location".Description WHERE (No.=FIELD(Service Location No.)));
                                                   CaptionML=[ENU=Service Location Description;
                                                              NOR=Servicelokasjonbeskrivelse;
                                                              SVE=Serviceplatsbeskrivning];
                                                   Editable=No }
    { 52  ;   ;Remote Control      ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Location"."Remote Control" WHERE (No.=FIELD(Service Location No.)));
                                                   CaptionML=[ENU=Remote Control;
                                                              NOR=Fjernkontroll;
                                                              SVE=Fjärrkontroll];
                                                   Editable=No }
    { 60  ;   ;Object No.          ;Code20        ;TableRelation=Service-Object;
                                                   OnValidate=VAR
                                                                ServiceObject@1100528600 : Record 11071691;
                                                                ServiceContract@1100409002 : Record 11012812;
                                                                MaintenanceMgt@1100409000 : Codeunit 11012829;
                                                                ServiceContractNo@1100409001 : Code[20];
                                                              BEGIN
                                                                IF ("Object No." <> '') THEN BEGIN
                                                                  ServiceObject.GET("Object No.");
                                                                  ServiceObject.TESTFIELD(Blocked, FALSE);

                                                                  IF (("Service Location No." <> '') AND NOT ServiceObject.BelongsToServiceLocation("Service Location No.")) OR
                                                                     ("Service Location No." = '')
                                                                  THEN
                                                                    VALIDATE("Service Location No.", ServiceObject.GetPrefServiceLocationNo(FALSE));

                                                                  IF ("Service Contract No." = '') THEN BEGIN
                                                                    IF (MaintenanceMgt.GetNoOfActualContractsForObj("Object No.", TODAY, ServiceContractNo) = 1) THEN
                                                                      VALIDATE("Service Contract No.", ServiceContractNo);
                                                                  END ELSE BEGIN
                                                                    ServiceContract.GET("Service Contract No.");
                                                                    ServiceContract.TestObjectBelongtoContract("Object No.", TODAY);
                                                                  END;
                                                                END;
                                                                CALCFIELDS("Object Description");
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupObject;
                                                            END;

                                                   CaptionML=[ENU=Object No.;
                                                              NOR=Objektnr.;
                                                              SVE=Objektnr] }
    { 61  ;   ;Object Description  ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Service-Object.Description WHERE (No.=FIELD(Object No.)));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Object Description");
                                                              END;

                                                   CaptionML=[ENU=Object Description;
                                                              NOR=Objektbeskrivelse;
                                                              SVE=Objektbeskrivning];
                                                   Editable=No }
    { 70  ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract.No.;
                                                   OnValidate=VAR
                                                                ServiceContract@1100409000 : Record 11012812;
                                                                ServiceSetup@1100409001 : Record 11012800;
                                                              BEGIN
                                                                IF (ServiceContract.GET("Service Contract No.")) THEN BEGIN
                                                                  ServiceSetup.GET;
                                                                  VALIDATE("Customer No.", ServiceContract."Customer No.");
                                                                  ServiceContract.TESTFIELD(Blocked, FALSE);
                                                                  IF "Object No." = '' THEN
                                                                    DetermineObjectNo;
                                                                END ELSE BEGIN
                                                                  IF ("Service Contract No." = '') THEN
                                                                    VALIDATE("Service Location No.");
                                                                END;
                                                                CALCFIELDS("Service Contract Description");
                                                              END;

                                                   CaptionML=[ENU=Service Contract No.;
                                                              NOR=Servicekontraktnr;
                                                              SVE=Servicekontraktnr] }
    { 71  ;   ;Service Contract Description;Text50;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Service-Contract.Description WHERE (No.=FIELD(Service Contract No.)));
                                                   CaptionML=[ENU=Service Contract Description;
                                                              NOR=Servicekontraktsbeskrivelse;
                                                              SVE=Servicekontraktsbeskrivning];
                                                   Editable=No }
    { 80  ;   ;Change Manager No.  ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Change Manager Name");
                                                              END;

                                                   CaptionML=ENU=Change Manager No. }
    { 81  ;   ;Change Manager Name ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Change Manager No.)));
                                                   TableRelation=Employee;
                                                   CaptionML=ENU=Change Manager Name;
                                                   Editable=No }
    { 90  ;   ;Due Date            ;Date          ;CaptionML=[ENU=Due Date;
                                                              NOR=Forfallsdato;
                                                              SVE=Frfallodatum] }
    { 100 ;   ;Priority            ;Code20        ;TableRelation="Change Request Indication".Code WHERE (Indication=CONST(Priority));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Priority Description");
                                                              END;

                                                   CaptionML=[ENU=Priority;
                                                              NOR=Prioritet;
                                                              SVE=Prioritet] }
    { 101 ;   ;Priority Description;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Change Request Indication".Description WHERE (Indication=CONST(Priority),
                                                                                                                     Code=FIELD(Priority)));
                                                   CaptionML=[ENU=Priority Description;
                                                              NOR=Prioritet, beskrivelse;
                                                              SVE=Prioritet, beskrivning];
                                                   Editable=No }
    { 110 ;   ;Status              ;Option        ;OnValidate=BEGIN
                                                                SendFollowersNote(1); //Status
                                                              END;

                                                   CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=[ENU=Received,In Process,Finished,Cancelled;
                                                                    NOR=Mottatt, i prosess,Ferdig,Kansellert;
                                                                    SVE=Mottaget,Under behandling,Avslutat,Avbrutet];
                                                   OptionString=Received,In Process,Finished,Cancelled }
    { 120 ;   ;Kind                ;Code20        ;TableRelation="Change Request Indication".Code WHERE (Indication=CONST(Kind));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Kind Description");
                                                              END;

                                                   CaptionML=[ENU=Kind;
                                                              SVE="Typ "] }
    { 121 ;   ;Kind Description    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Change Request Indication".Description WHERE (Indication=CONST(Kind),
                                                                                                                     Code=FIELD(Kind)));
                                                   CaptionML=ENU=Kind Description;
                                                   Editable=No }
    { 130 ;   ;On Hold Code        ;Code20        ;TableRelation="On Hold Code";
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("On Hold Description");

                                                                SendFollowersNote(2); //On Hold
                                                              END;

                                                   CaptionML=[ENU=On Hold Code;
                                                              NOR=P vent-kode;
                                                              SVE=Stoppkod] }
    { 131 ;   ;On Hold Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("On Hold Code".Description WHERE (Code=FIELD(On Hold Code)));
                                                   CaptionML=ENU=On Hold Description;
                                                   Editable=No }
    { 140 ;   ;Start Date          ;Date          ;CaptionML=[ENU=Start Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum] }
    { 150 ;   ;Approval Date       ;Date          ;CaptionML=[ENU=Approval Date;
                                                              NOR=Dato for godkjenning;
                                                              SVE=Datum godknd] }
    { 160 ;   ;Plan Date           ;Date          ;CaptionML=[ENU=Plan Date;
                                                              NOR=Planleggingsdato;
                                                              SVE=Plandatum] }
    { 170 ;   ;Your Reference      ;Text50        ;CaptionML=[ENU=Your Reference;
                                                              NOR=Deres referanse;
                                                              SVE=Er referens] }
    { 190 ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              NOR=Nr.serie;
                                                              SVE=Nr-serie];
                                                   Editable=No }
    { 200 ;   ;Total Hours         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Change Request Task Hour Acc".Hours WHERE (Change Request No.=FIELD(No.)));
                                                   CaptionML=[ENU=Total Hours;
                                                              NOR=Timer totalt;
                                                              SVE=Timmar totalt];
                                                   Editable=No }
    { 201 ;   ;Total Lead Time     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Change Request Task"."Lead Time (Hrs)" WHERE (Change Request No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Lead Time;
                                                   Editable=No }
    { 500 ;   ;Created On          ;DateTime      ;CaptionML=[ENU=Created On;
                                                              NOR=Created On;
                                                              SVE=Created On];
                                                   Editable=No }
    { 510 ;   ;Created By          ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Created By;
                                                              NOR=Created By;
                                                              SVE=Created By];
                                                   Editable=No }
    { 520 ;   ;Modified On         ;Date          ;CaptionML=[ENU=Modified On;
                                                              NOR=Modified On;
                                                              SVE=Modified On];
                                                   Editable=No }
    { 530 ;   ;Modified By         ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Modified By;
                                                              NOR=Modified By;
                                                              SVE=Modified By];
                                                   Editable=No }
    { 540 ;   ;Communication Text Changed;Boolean ;CaptionML=ENU=Communication Text Changed;
                                                   Editable=No }
    { 600 ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order";
                                                   CaptionML=[ENU=Service Order No.;
                                                              NOR=Serviceordrenr.;
                                                              SVE=Serviceordernr];
                                                   Editable=No }
    { 601 ;   ;Service Order Description;Text50   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Order".Description WHERE (No.=FIELD(Service Order No.)));
                                                   CaptionML=[ENU=Service Order Description;
                                                              NOR=Serviceordre Beskrivelse;
                                                              SVE=Serviceorder beskrivning];
                                                   Editable=No }
    { 610 ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr.;
                                                              SVE=Projektnr];
                                                   Editable=No }
    { 611 ;   ;Project Description ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Project Description;
                                                              NOR=Prosjektbeskrivelse;
                                                              SVE=Projektbeskrivning];
                                                   Editable=No }
    { 620 ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=Email;
                                                              NOR=E-post;
                                                              SVE=E-post] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528300 : TextConst 'ENU=Rename not allowed.;NOR=Ikke tillatt  bytte navn.;SVE=Det r inte tilltet att byta namn.';
      Text001@1100528303 : TextConst 'ENU=%1 ''%2'' created.';
      Text002@1100409000 : TextConst 'ENU=%1 %2 \%3 changed from %4 into %5.';
      Text003@1100528000 : TextConst 'ENU=%1 %2 is created.;NOR=%1 %2 er opprettet.;SVE=%1 %2 har skapats.';

    PROCEDURE LookupContact@1100528302(lvCust@1210190001 : Code[20]);
    VAR
      Contact@1210190006 : Record 5050;
      Customer@1100528300 : Record 18;
      ServiceContact@1100528301 : Record 11012841;
    BEGIN
      IF ("Service Location No." <> '') THEN
        ServiceContact.SETRANGE("Service Location No.", "Service Location No.");
      IF (ServiceContact.FINDFIRST) THEN BEGIN
        IF (PAGE.RUNMODAL(PAGE::"Service Contacts", ServiceContact) = ACTION::LookupOK) THEN BEGIN
          "Contact Name" := ServiceContact."Contact Name";
        END;
      END ELSE BEGIN
        Customer.ShowContactName(lvCust, Contact);
        IF (Contact.Name <> '') THEN
          "Contact Name" := Contact.Name;
      END;
    END;

    PROCEDURE LookupServiceLocation@1210190002();
    VAR
      ServiceLocation@1100528603 : Record 11012801;
    BEGIN
      IF ("Customer No." <> '') THEN
        ServiceLocation.SETRANGE("Customer No.", "Customer No.");

      ServiceLocation."No." := "Service Location No.";
      IF (PAGE.RUNMODAL(PAGE::"Service Location List", ServiceLocation) = ACTION::LookupOK) THEN BEGIN
        VALIDATE("Customer No.", ServiceLocation."Customer No.");
        VALIDATE("Service Location No.", ServiceLocation."No.");
      END;
    END;

    PROCEDURE LookupObject@1100528301();
    VAR
      ServiceObject@1100528300 : Record 11071691;
    BEGIN
      IF ("Service Location No." <> '') THEN
        ServiceObject.SETRANGE("Service Location No.", "Service Location No.");

      ServiceObject."No." := "Object No.";
      IF (PAGE.RUNMODAL(PAGE::"Service Object List", ServiceObject) = ACTION::LookupOK) THEN BEGIN
        VALIDATE("Service Location No.", ServiceObject."Service Location No.");
        VALIDATE("Object No.", ServiceObject."No.");
      END;
    END;

    PROCEDURE CreateServiceOrder@1100528601();
    VAR
      ServiceOrder@1210190002 : Record 11012823;
      ServiceOrderObject@1100528600 : Record 11071724;
      ServiceLocation@1100528300 : Record 11012801;
    BEGIN
      ServiceOrder.INIT;
      ServiceOrder."Source Type" := ServiceOrder."Source Type"::Call;
      ServiceOrder.Description := Description;
      ServiceOrder.INSERT(TRUE);

      ServiceOrder."Your Reference" := "Your Reference";
      IF ServiceLocation.GET("Service Location No.") THEN
        ServiceOrder.VALIDATE("Service Location No.", "Service Location No.");
      IF ServiceOrder."Customer No." = '' THEN
        ServiceOrder.VALIDATE("Customer No.", "Customer No.");
      ServiceOrder."Change Request No." := "No.";
      //C033880.sn
      IF "Service Contract No." <> '' THEN
        ServiceOrder.VALIDATE("Service Contract No.","Service Contract No.");
      //C033880.en
      ServiceOrder.MODIFY(TRUE);

      "Service Order No." := ServiceOrder."No.";
      MODIFY(TRUE);

      IF ("Object No." <> '') THEN BEGIN
        ServiceOrderObject.INIT;
        ServiceOrderObject.VALIDATE("Service Order No.", ServiceOrder."No.");
        ServiceOrderObject.VALIDATE("Object No.", "Object No.");
        ServiceOrderObject.VALIDATE("Service Contract No.", ServiceOrder."Service Contract No.");
        ServiceOrderObject.Source := ServiceOrderObject.Source::Calls;
        ServiceOrderObject.INSERT(TRUE);
      END;
      MESSAGE(Text001, ServiceOrder.TABLECAPTION, ServiceOrder."No.");
    END;

    PROCEDURE CreateProject@1100485000();
    VAR
      JobsSetup@1100485002 : Record 315;
      Job@1100485000 : Record 11072003;
      ProjectPrincipal@1100485001 : Record 11012005;
    BEGIN
      JobsSetup.GET;

      Job.INIT;
      Job."No. Series" := JobsSetup."Job Nos.";
      Job.VALIDATE(Description, Description);
      Job.INSERT(TRUE);

      Job."Description 2" := "Your Reference";
      IF ("Customer No." <> '') THEN BEGIN
        ProjectPrincipal.INIT;
        ProjectPrincipal."Project No." := Job."No.";
        ProjectPrincipal.VALIDATE(Principal, "Customer No.");
        ProjectPrincipal.INSERT(TRUE);
        Job.VALIDATE("Bill-to Customer No.", "Customer No.");
      END;
      Job.Contact :="Contact Name";
      Job."Change Request No." := "No.";
      Job.MODIFY(TRUE);

      "Project No." := Job."No.";
      MODIFY(TRUE);
    END;

    PROCEDURE ShowDocuments@1100409000();
    VAR
      DocumentFilters@1100409000 : Codeunit 11012432;
      RecRef@1100409001 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, TRUE);
    END;

    PROCEDURE AssistEdit@1100409001(OldChangeRequest@1100409000 : Record 11072193) : Boolean;
    VAR
      ChangeRequest@1100409001 : Record 11072193;
      ServiceSetup@1100409002 : Record 11012800;
      NoSeriesMgt@1100409003 : Codeunit 396;
    BEGIN
      ServiceSetup.GET;

      ChangeRequest := Rec;
      IF NoSeriesMgt.SelectSeries(ServiceSetup."Change Request Nos.", OldChangeRequest."No. Series", ChangeRequest."No. Series") THEN BEGIN
        NoSeriesMgt.SetSeries("No.");
        Rec := ChangeRequest;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE DetermineObjectNo@1100525009();
    VAR
      LocationServiceObject@1100525003 : Record 11071691;
      ServiceObject@1100525001 : Record 11071691;
      ServiceLocation@1100525000 : Record 11012801;
      ServiceContractObject@1100525002 : Record 11071702;
      ServiceContract@1100525005 : Record 11012812;
      FoundServiceObjectNo@1100525004 : Code[20];
    BEGIN
      IF "Service Contract No." <> '' THEN BEGIN
        ServiceContract.GET("Service Contract No.");
        ServiceContractObject.SETRANGE("Service Contract No.", "Service Contract No.");
        ServiceContractObject.SETRANGE(Blocked, FALSE);
        IF "Service Location No." <> '' THEN
          ServiceContractObject.SETRANGE("Service Location No.", "Service Location No.");
        IF ServiceContractObject.FINDFIRST THEN BEGIN
          IF ServiceContractObject.NEXT = 0 THEN
            FoundServiceObjectNo := ServiceContractObject."Service Object No."
          ELSE BEGIN
            IF ServiceLocation.GET("Service Location No.") THEN BEGIN
              ServiceLocation.GetRelatedObjects(LocationServiceObject);
              LocationServiceObject.SETRANGE(Blocked, FALSE);
              ServiceContractObject.FINDSET;
              ServiceObject.MARKEDONLY(TRUE);
              REPEAT
                LocationServiceObject.SETRANGE("No.", ServiceContractObject."Service Object No.");
                IF NOT LocationServiceObject.ISEMPTY THEN BEGIN
                  ServiceObject."No." := ServiceContractObject."Service Object No.";
                  ServiceObject.MARK(TRUE);
                END;
              UNTIL (ServiceObject.COUNT > 1) OR (ServiceContractObject.NEXT = 0);
              IF ServiceObject.FINDFIRST AND (ServiceObject.NEXT = 0) THEN
                FoundServiceObjectNo := ServiceObject."No.";
            END;
          END;
        END;
      END;
      IF (ServiceContract."Contract Form" <> ServiceContract."Contract Form"::"Framework Contract") AND
         (FoundServiceObjectNo = '') AND ("Service Location No." <> '')
      THEN BEGIN
        IF ServiceLocation.GET("Service Location No.") THEN BEGIN
          ServiceLocation.GetRelatedObjects(LocationServiceObject);
          LocationServiceObject.SETRANGE(Blocked, FALSE);
          IF LocationServiceObject.FINDFIRST AND (LocationServiceObject.NEXT = 0) THEN
            FoundServiceObjectNo := LocationServiceObject."No.";
        END;
      END;

      IF (FoundServiceObjectNo <> '') OR
         (ServiceContract."Contract Form" = ServiceContract."Contract Form"::"Framework Contract")
      THEN BEGIN
        CurrFieldNo := 0;
        VALIDATE("Object No.", FoundServiceObjectNo);
      END;
    END;

    PROCEDURE StartTasksChart@1100409002();
    VAR
      ChangeRequestTasksChart@1100409000 : Page 11229224;
    BEGIN
      ChangeRequestTasksChart.SetChangeRequestFilter("No.");
      ChangeRequestTasksChart.RUNMODAL;
    END;

    PROCEDURE StartHourChart@1100409003();
    VAR
      ChangeRequestHoursChart@1100409000 : Page 11229225;
    BEGIN
      ChangeRequestHoursChart.SetChangeRequestFilter("No.");
      ChangeRequestHoursChart.RUNMODAL;
    END;

    PROCEDURE CopyImpactDefaultSet@1100409004();
    VAR
      ChangeMgtImpactGroup@1100409000 : Record 11072226;
      ChangeRequestImpactLine@1100409002 : Record 11072229;
      LastLineNo@1100409001 : Integer;
    BEGIN
      ChangeMgtImpactGroup.SETRANGE("Default Set", TRUE);
      IF (NOT ChangeMgtImpactGroup.FINDSET) THEN
        EXIT;

      REPEAT
        LastLineNo := GetLastLineNoRequestImpactLine + 10000;
        ChangeRequestImpactLine.INIT;
        ChangeRequestImpactLine."Change Request Code" := "No.";
        ChangeRequestImpactLine."Line No." := LastLineNo;
        ChangeRequestImpactLine.Type := ChangeRequestImpactLine.Type::Group;
        ChangeRequestImpactLine."Impact Code" := ChangeMgtImpactGroup.Code;
        ChangeRequestImpactLine.Description := ChangeMgtImpactGroup.Description;

        ChangeRequestImpactLine.INSERT(TRUE);

        CopyDefaultSetImpactLines('');
        CopyDefaultSetImpactLines(ChangeMgtImpactGroup.Code);
      UNTIL (ChangeMgtImpactGroup.NEXT = 0);
    END;

    LOCAL PROCEDURE CopyDefaultSetImpactLines@1100409005(ImpactGroupCode@1100409003 : Code[20]);
    VAR
      ChangeMgtImpactLine@1100409001 : Record 11072227;
      ChangeRequestImpactLine@1100409002 : Record 11072229;
      LastLineNo@1100409000 : Integer;
    BEGIN
      ChangeMgtImpactLine.SETRANGE("Default Set", TRUE);
      ChangeMgtImpactLine.SETRANGE("Impact Group Code", ImpactGroupCode);
      IF (NOT ChangeMgtImpactLine.FINDSET) THEN
        EXIT;

      REPEAT
        LastLineNo := GetLastLineNoRequestImpactLine + 10000;
        ChangeRequestImpactLine.INIT;
        ChangeRequestImpactLine."Change Request Code" := "No.";
        ChangeRequestImpactLine."Line No." := LastLineNo;
        ChangeRequestImpactLine.Type := ChangeRequestImpactLine.Type::Line;
        ChangeRequestImpactLine."Impact Code" := ChangeMgtImpactLine.Code;
        ChangeRequestImpactLine.Description := ChangeMgtImpactLine.Description;
        ChangeRequestImpactLine."Field Type" := ChangeMgtImpactLine."Field Type";
        ChangeRequestImpactLine."Unit Of Measure" := ChangeMgtImpactLine."Unit Of Measure";
        ChangeRequestImpactLine."Publish on Service Portal" := ChangeMgtImpactLine."Publish on Service Portal";

        ChangeRequestImpactLine.INSERT(TRUE);
      UNTIL (ChangeMgtImpactLine.NEXT = 0);
    END;

    PROCEDURE GetLastLineNoRequestImpactLine@1100409006() : Integer;
    VAR
      ChangeRequestImpactLine@1100409000 : Record 11072229;
    BEGIN
      ChangeRequestImpactLine.SETRANGE("Change Request Code", "No.");
      IF (ChangeRequestImpactLine.FINDLAST) THEN
        EXIT(ChangeRequestImpactLine."Line No.");
      EXIT(0);
    END;

    PROCEDURE SendFollowersNote@1100525000(NoteType@1100525005 : Option);
    VAR
      ChangeRequestFollower@1100525004 : Record 11072230;
      RecordLinkMgt@1100525003 : Codeunit 447;
      RecRef@1100525002 : RecordRef;
      TextString@1100525001 : Text;
      ChangeRequestCard@1100525000 : Page 11126268;
    BEGIN
      ChangeRequestFollower.SETRANGE("Change Request No.", "No.");
      IF (NOT ChangeRequestFollower.FINDSET) THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      CASE NoteType OF
        1: //Status
          TextString := STRSUBSTNO(Text002, TABLECAPTION, "No.", FIELDCAPTION(Status), xRec.Status, Status);
        2: //On Hold
          TextString := STRSUBSTNO(Text002, TABLECAPTION, "No.", FIELDCAPTION("On Hold Code"), xRec."On Hold Code", "On Hold Code");
        ELSE
          TextString := STRSUBSTNO(Text003, TABLECAPTION, "No.");
      END;
      REPEAT
        ChangeRequestFollower.CALCFIELDS("User ID");
        RecordLinkMgt.CreateNote(RecRef, ChangeRequestCard.OBJECTID(FALSE), TextString, ChangeRequestFollower."User ID");
      UNTIL (ChangeRequestFollower.NEXT = 0);
    END;

    BEGIN
    END.
  }
}

