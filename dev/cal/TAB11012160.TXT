OBJECT Table 11012160 Estimate Rate
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 11012188=rimd;
    OnModify=BEGIN
               TESTFIELD("Rate Code");  //db, 20-04-18 (property NotBlank not set by RateGroup and RateByDate)

               Estimate.GET("Estimate No.");
               Estimate.TESTFIELD(Fixed,FALSE);  //DP01931
             END;

    OnDelete=BEGIN
               Estimate.GET("Estimate No.");
               Estimate.TESTFIELD(Fixed,FALSE);  //DP01931

               DateRateRec.SETRANGE("Record Type", DateRateRec."Record Type"::Estimate);
               DateRateRec.SETRANGE("Estimate No.", "Estimate No.");
               DateRateRec.SETRANGE("Rate Code", "Rate Code");
               DateRateRec.DELETEALL(TRUE);
             END;

    OnRename=BEGIN
               ERROR(Text000); //db, 20-05-14: C015392 (problem with table relation Recipe Line OLD)
             END;

    CaptionML=[ENU=Estimate Rate;
               NOR=Kalkyle Í Sats;
               SVE=Kalkyl Í avgift];
    LookupPageID=Page11012168;
  }
  FIELDS
  {
    { 10  ;   ;Estimate No.        ;Code20        ;TableRelation=Estimate.No.;
                                                   CaptionML=[ENU=Estimate No.;
                                                              NOR=Kalkylenr;
                                                              SVE=Kalkylnr] }
    { 20  ;   ;Rate Code           ;Code10        ;CaptionML=[ENU=Rate Code;
                                                              NOR=Avgiftskode;
                                                              SVE=Avgiftskod];
                                                   NotBlank=Yes }
    { 30  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 40  ;   ;Cost Rate           ;Decimal       ;OnValidate=BEGIN
                                                                "Cost Rate (FCY)" := ExchangeAmtLCYToFCY("Cost Rate", FALSE, TRUE, FALSE);
                                                              END;

                                                   CaptionML=[ENU=Cost Rate;
                                                              SVE=Avgift];
                                                   AutoFormatType=2 }
    { 45  ;   ;Sales Rate          ;Decimal       ;OnValidate=BEGIN
                                                                "Sales Rate (FCY)" := ExchangeAmtLCYToFCY("Sales Rate", TRUE, TRUE, FALSE);
                                                              END;

                                                   CaptionML=[ENU=Sales Rate;
                                                              NOR=Salgsrate;
                                                              SVE=F”rs„ljningsavgift];
                                                   Description=DP00381;
                                                   AutoFormatType=2 }
    { 50  ;   ;Rate Type           ;Option        ;OnValidate=BEGIN
                                                                IF "Rate Type" = "Rate Type"::Hours THEN
                                                                  "Team Size" := 0;
                                                                IF "Rate Type" = "Rate Type"::Minuts THEN
                                                                  IF "Team Size" = 0 THEN
                                                                    "Team Size" := 1;
                                                              END;

                                                   CaptionML=[ENU=Rate Type;
                                                              NOR=Avgiftstype;
                                                              SVE=Avgiftstyp];
                                                   OptionCaptionML=[ENU=Hours,Minuts;
                                                                    NOR=Timer,Minutter;
                                                                    SVE=Timmar,Minuter];
                                                   OptionString=Hours,Minuts }
    { 60  ;   ;Team Size           ;Decimal       ;CaptionML=[ENU=Team Size;
                                                              NOR=Teamst›rrelse;
                                                              SVE=Teamstorlek] }
    { 70  ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Labor),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 80  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                VALIDATE("Cost Rate");
                                                                VALIDATE("Sales Rate");
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod] }
    { 90  ;   ;Cost Rate (FCY)     ;Decimal       ;OnValidate=BEGIN
                                                                "Cost Rate" := ExchangeAmtFCYToLCY("Cost Rate (FCY)", FALSE, TRUE, FALSE);
                                                              END;

                                                   CaptionML=ENU=Cost Rate (FCY) }
    { 100 ;   ;Sales Rate (FCY)    ;Decimal       ;OnValidate=BEGIN
                                                                "Sales Rate" := ExchangeAmtFCYToLCY("Sales Rate (FCY)", TRUE, TRUE, FALSE);
                                                              END;

                                                   CaptionML=ENU=Sales Rate (FCY) }
    { 110 ;   ;Sales Rate Fixed    ;Option        ;CaptionML=ENU=Sales Rate Fixed;
                                                   OptionCaptionML=[ENU=Local Currency,Foreign Currency;
                                                                    NOR=Lokal valuta,Utenlandsk valuta;
                                                                    SVE=Lokal valuta,Utl„ndsk valuta];
                                                   OptionString=Local Currency,Foreign Currency }
  }
  KEYS
  {
    {    ;Estimate No.,Rate Code                  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DateRateRec@1210190000 : Record 11012188;
      Text000@1100525000 : TextConst 'ENU=Rename disabled.';
      Estimate@1100528500 : Record 11012151;

    PROCEDURE GetCurrencyFactor@1100528601(IUseSalesExchange@1100528600 : Boolean;IUseReportCurrency@1100528602 : Boolean) : Decimal;
    VAR
      Estimate@1100528604 : Record 11012151;
      CurrencyExchangeRate@1100528601 : Record 330;
      CurrencyCode@1100528603 : Code[10];
    BEGIN
      IF NOT Estimate.GET("Estimate No.") THEN
        Estimate.INIT;
      IF IUseReportCurrency THEN
        CurrencyCode := Estimate."Report Currency Code"
      ELSE
        CurrencyCode := "Currency Code";
      EXIT(CurrencyExchangeRate.ExchangeRate(2, "Estimate No.", Estimate."Reference Date (Rate)", CurrencyCode, IUseSalesExchange));
    END;

    PROCEDURE ExchangeAmtLCYToFCY@1100528602(IAmount@1100528601 : Decimal;IUseSalesExchange@1100528602 : Boolean;IUsePriceRounding@1100528605 : Boolean;IUseReportCurrency@1100528607 : Boolean) : Decimal;
    VAR
      Estimate@1100528608 : Record 11012151;
      CurrencyExchangeRate@1100528600 : Record 330;
      Currency@1100528604 : Record 4;
      Amount@1100528603 : Decimal;
      CurrencyCode@1100528606 : Code[10];
    BEGIN
      IF "Currency Code" = '' THEN
        EXIT(IAmount);
      IF NOT Estimate.GET("Estimate No.") THEN
        Estimate.INIT;
      IF IUseReportCurrency THEN
        CurrencyCode := Estimate."Report Currency Code"
      ELSE
        CurrencyCode := "Currency Code";
      Amount := CurrencyExchangeRate.ExchangeAmtLCYToFCY(
        2, "Estimate No.", Estimate."Reference Date (Rate)", CurrencyCode, IAmount, GetCurrencyFactor(IUseSalesExchange, IUseReportCurrency), IUseSalesExchange);
      IF NOT Currency.GET(CurrencyCode) THEN
        Currency.InitRoundingPrecision;
      IF IUsePriceRounding THEN
        Amount := ROUND(Amount, Currency."Unit-Amount Rounding Precision")
      ELSE
        Amount := ROUND(Amount, Currency."Amount Rounding Precision");
      EXIT(Amount);
    END;

    PROCEDURE ExchangeAmtFCYToLCY@1100528600(IAmount@1100528601 : Decimal;IUseSalesExchange@1100528602 : Boolean;IUsePriceRounding@1100528605 : Boolean;IUseReportCurrency@1100528606 : Boolean) : Decimal;
    VAR
      Estimate@1100528608 : Record 11012151;
      CurrencyExchangeRate@1100528600 : Record 330;
      Currency@1100528604 : Record 4;
      Amount@1100528603 : Decimal;
      CurrencyCode@1100528607 : Code[10];
    BEGIN
      IF "Currency Code" = '' THEN
        EXIT(IAmount);
      IF NOT Estimate.GET("Estimate No.") THEN
        Estimate.INIT;
      IF IUseReportCurrency THEN
        CurrencyCode := Estimate."Report Currency Code"
      ELSE
        CurrencyCode := "Currency Code";
      Amount := CurrencyExchangeRate.ExchangeAmtFCYToLCY(
        2, "Estimate No.", Estimate."Reference Date (Rate)", CurrencyCode, IAmount, GetCurrencyFactor(IUseSalesExchange, IUseReportCurrency), IUseSalesExchange);
      Currency.InitRoundingPrecision;
      IF IUsePriceRounding THEN
        Amount := ROUND(Amount, Currency."Unit-Amount Rounding Precision")
      ELSE
        Amount := ROUND(Amount, Currency."Amount Rounding Precision");
      EXIT(Amount);
    END;

    BEGIN
    END.
  }
}

