OBJECT Page 9845 Event Recorder
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Event Recorder;
               NOR=Hendelsesregistrering;
               SVE=H„ndelseinspelare];
    ApplicationArea=#Basic,#Suite;
    SourceTable=Table9804;
    PopulateAllFields=Yes;
    SourceTableView=SORTING(Call Order)
                    ORDER(Ascending);
    PageType=Worksheet;
    UsageCategory=Lists;
    SourceTableTemporary=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Record Events;
                                NOR=Ny,Prosess,Rapport,Registrer mottak;
                                SVE=Ny,Process,Rapport,Registrera h„ndelser];
    OnAfterGetRecord=BEGIN
                       IF "Event Type" = "Event Type"::"Custom Event" THEN
                         EventTypeStyleExpr := 'Attention'
                       ELSE
                         EventTypeStyleExpr := 'AttentionAccent';
                     END;

    ActionList=ACTIONS
    {
      { 12      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 51      ;1   ;ActionGroup;
                      Name=Recording;
                      CaptionML=[ENU=Record Events;
                                 NOR=Registrer hendelser;
                                 SVE=Registrera h„ndelser];
                      ActionContainerType=ActionItems }
      { 50      ;2   ;Action    ;
                      Name=Start;
                      CaptionML=[ENU=Start;
                                 NOR=Start;
                                 SVE=Starta];
                      ToolTipML=[ENU=Start recording UI activities to generate the list of events that are called. The new recording will erase any events that have previously been recorded.;
                                 NOR=Start registrering av aktiviteter i brukergrensesnittet for † generere listen over hendelser som kalles. Den nye registreringen sletter eventuelle hendelser som er registrert tidligere.;
                                 SVE=B”rja spela in gr„nssnittsaktiviteter f”r att generera listan ”ver h„ndelser som anropas. Den nya inspelningen kommer att spela ”ver alla h„ndelser som tidigare spelats in.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=NOT EventLoggingRunning;
                      PromotedIsBig=Yes;
                      Image=Start;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 IF NOT CONFIRM(StartRecordingQst) THEN
                                   EXIT;

                                 // Delete events from the current table.
                                 DELETEALL;

                                 LogRecordedEvents.Start;
                                 EventLoggingRunning := TRUE;
                               END;
                                }
      { 48      ;2   ;Action    ;
                      Name=Stop;
                      CaptionML=[ENU=Stop;
                                 NOR=Stopp;
                                 SVE=Stoppa];
                      ToolTipML=[ENU=Stop recording and generate the list of events that are recorded.;
                                 NOR=Stopp registrering og genererer listen over hendelser som er registrert.;
                                 SVE=Stoppa inspelningen och skapa en lista ”ver h„ndelser som har spelats in.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=EventLoggingRunning;
                      PromotedIsBig=Yes;
                      Image=Stop;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 EventLoggingRunning := FALSE;
                                 LogRecordedEvents.Stop(TempRecordedEventBuffer);

                                 IF TempRecordedEventBuffer.COUNT = 0 THEN BEGIN
                                   MESSAGE(NoEventsRecordedMsg);
                                   EXIT;
                                 END;

                                 IF NOT CONFIRM(AddRecordingQst,FALSE,TempRecordedEventBuffer.COUNT) THEN
                                   EXIT;

                                 // Add elements to the source table of the page to display them in the repeater.
                                 IF TempRecordedEventBuffer.FINDSET THEN BEGIN
                                   REPEAT
                                     INIT;
                                     Rec := TempRecordedEventBuffer;
                                     INSERT;
                                   UNTIL TempRecordedEventBuffer.NEXT = 0;
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                CaptionML=[ENU=All Recorded Events;
                           NOR=Alle registrerte hendelser;
                           SVE=Alla inspelade h„ndelser];
                Editable=FALSE;
                GroupType=Repeater }

    { 8   ;2   ;Field     ;
                Name=CallOrder;
                CaptionML=[ENU=Call Order;
                           NOR=Kallrekkef›lge;
                           SVE=Anropsordning];
                ToolTipML=[ENU=Specifies the order in which the events are called.;
                           NOR=Angir rekkef›lgen for som hendelsene kalles i.;
                           SVE=Anger i vilken ordning h„ndelserna anropas.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Call Order" }

    { 7   ;2   ;Field     ;
                Name=EventType;
                CaptionML=[ENU=Event Type;
                           NOR=Hendelsestype;
                           SVE=H„ndelsetyp];
                ToolTipML=[ENU=Specifies the type of the event that is called.;
                           NOR=Angir hendelsestypen som kalles.;
                           SVE=Anger vilken typ av h„ndelse som anropas.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Event Type";
                StyleExpr=EventTypeStyleExpr }

    { 14  ;2   ;Field     ;
                Name=HitCount;
                CaptionML=[ENU=Hit Count;
                           NOR=Antall treff;
                           SVE=Antal tr„ffar];
                ToolTipML=[ENU=Specifies the number of time this event is called consecutively.;
                           NOR=Angir antall p†f›lgende ganger hendelsen kalles.;
                           SVE=Anger antalet g†nger som denna h„ndelsen anropas i rad.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Hit Count" }

    { 11  ;2   ;Field     ;
                Name=ObjectType;
                CaptionML=[ENU=Object Type;
                           NOR=Objekttype;
                           SVE=Objekttyp];
                ToolTipML=[ENU=Specifies the type of object that contains the called event.;
                           NOR=Angir objekttypen som inneholder hendelsen som kalles.;
                           SVE=Anger vilken typ av objekt som inneh†ller den anropade h„ndelsen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Object Type" }

    { 10  ;2   ;Field     ;
                Name=ObjectID;
                CaptionML=[ENU=Object ID;
                           NOR=Objekt-ID;
                           SVE=Objekt-ID];
                ToolTipML=[ENU=Specifies the ID of the object that contains the called event.;
                           NOR=Angir ID-en for objektet som inneholder hendelsen som kalles.;
                           SVE=Anger ID f”r det objekt som inneh†ller den anropade h„ndelsen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Object ID";
                Visible=FALSE;
                LookupPageID=All Objects with Caption;
                HideValue=("Object ID" = 0) }

    { 9   ;2   ;Field     ;
                Name=ObjectName;
                DrillDown=No;
                CaptionML=[ENU=Object Name;
                           NOR=Objektnavn;
                           SVE=Objektnamn];
                ToolTipML=[ENU=Specifies the name of the object that contains the called event.;
                           NOR=Angir navnet for objektet som inneholder hendelsen som kalles.;
                           SVE=Anger namnet p† det objekt som inneh†ller den anropade h„ndelsen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Object Name" }

    { 3   ;2   ;Field     ;
                Name=EventName;
                CaptionML=[ENU=Event Name;
                           NOR=Hendelsesnavn.;
                           SVE=Namn p† h„ndelse];
                ToolTipML=[ENU=Specifies the name of the called event.;
                           NOR=Angir navnet p† hendelsen som kalles.;
                           SVE=Anger namnet p† den anropade h„ndelsen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Event Name" }

    { 17  ;2   ;Field     ;
                Name=ElementName;
                CaptionML=[ENU=Element Name;
                           NOR=Elementnavn;
                           SVE=Elementnamn];
                ToolTipML=[ENU=Specifies the name of the element in which the event is called.;
                           NOR=Angir navnet p† elementet der hendelsen kalles.;
                           SVE=Anger namnet p† det element d„r h„ndelsen anropas.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Element Name" }

    { 5   ;2   ;Field     ;
                Name=CallingObjectType;
                CaptionML=[ENU=Calling Object Type;
                           NOR=Kallende objekttype;
                           SVE=Typ av anropande objekt];
                ToolTipML=[ENU=Specifies the type of the object that calls the event.;
                           NOR=Angir objekttypen som kaller hendelsen.;
                           SVE=Anger vilken typ av objekt som anropar h„ndelsen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Calling Object Type";
                HideValue=("Calling Object Type" = 0) }

    { 4   ;2   ;Field     ;
                Name=CallingObjectID;
                CaptionML=[ENU=Calling Object ID;
                           NOR=Kallende objekt-ID;
                           SVE=ID f”r anropande objekt];
                ToolTipML=[ENU=Specifies the ID of the object that calls the event.;
                           NOR=Angir ID-en for objektet som kaller hendelsen.;
                           SVE=Anger ID f”r det objekt som anropar h„ndelsen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Calling Object ID";
                Visible=FALSE;
                HideValue=("Calling Object ID" = 0) }

    { 6   ;2   ;Field     ;
                Name=CallingObjectName;
                DrillDown=No;
                CaptionML=[ENU=Calling Object Name;
                           NOR=Kallende objektnavn;
                           SVE=Namn p† anropande objekt];
                ToolTipML=[ENU=Specifies the name of the object that calls the event.;
                           NOR=Angir navnet p† objektet som kaller hendelsen.;
                           SVE=Anger namnet p† det objekt som anropar h„ndelsen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Calling Object Name" }

    { 13  ;2   ;Field     ;
                Name=CallingMethod;
                CaptionML=[ENU=Calling Method;
                           NOR=Kallmetode;
                           SVE=Anropande metod];
                ToolTipML=[ENU=Specifies the name of method that calls the event.;
                           NOR=Angir navnet p† metoden som kaller hendelsen.;
                           SVE=Anger namnet p† den metod som anropar h„ndelsen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Calling Method" }

    { 18  ;2   ;Field     ;
                Name=GetALSnippet;
                CaptionML=[ENU=Get AL Snippet;
                           NOR=Hent AL-kodesnutt;
                           SVE=H„mta AL-utdrag];
                ToolTipML=[ENU=Specifies the AL snippet to subscribe to this event.;
                           NOR=Angir AL-kodesnutten for † abonnere p† denne hendelsen.;
                           SVE=Anger det AL-utdrag som ska prenumerera p† den h„r h„ndelsen.];
                ApplicationArea=#All;
                SourceExpr=GetAlSnippetLbl;
                OnDrillDown=BEGIN
                              MESSAGE(DisplaySnippet);
                            END;
                             }

  }
  CODE
  {
    VAR
      TempRecordedEventBuffer@1015 : TEMPORARY Record 9804;
      LogRecordedEvents@1013 : Codeunit 9804;
      AddRecordingQst@1007 : TextConst '@@@=%1 represents the number of events recorded.;ENU=%1 events have been recorded. Do you want to display them?;NOR=%1 hendelser er registrert. Vil du vise dem?;SVE=%1 h„ndelser har spelats in. Vill du visa dem?';
      StartRecordingQst@1014 : TextConst 'ENU=Do you want to start the recording now?;NOR=Vil du starte registreringen n†?;SVE=Vill du starta inspelningen nu?';
      NoEventsRecordedMsg@1000 : TextConst 'ENU=No events have been recorded.;NOR=Ingen hendelser er registrert.;SVE=Inga h„ndelser har spelats in.';
      GetAlSnippetLbl@1004 : TextConst 'ENU=Get AL Snippet.;NOR=Hent AL-kodesnutt.;SVE=H„mta AL-utdrag.';
      EventLoggingRunning@1003 : Boolean;
      EventTypeStyleExpr@1001 : Text INDATASET;

    LOCAL PROCEDURE DisplaySnippet@4() Snippet : Text;
    VAR
      ObjectTypeForId@1000 : Text[30];
    BEGIN
      // In AL, the ID of a table is accessed as Database::MyTable.
      IF "Object Type" = "Object Type"::Table THEN
        ObjectTypeForId := 'Database'
      ELSE
        ObjectTypeForId := FORMAT("Object Type");

      Snippet := '[EventSubscriber(ObjectType::' + FORMAT("Object Type") + ', ' +
        ObjectTypeForId + '::' + '"' + "Object Name" + '"' + ', ' +
        '''' + "Event Name" + '''' + ', ' +
        '''' + "Element Name" + '''' + ', ' +
        'true, true)] ' + '\' +
        'local procedure MyProcedure()\' +
        'begin\' +
        'end;\';
    END;

    BEGIN
    END.
  }
}

