OBJECT Report 11012778 Create Service Order Invoice
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create Service Order Invoice;
               NOR=Opprett serviceordrefaktura;
               SVE=Skapa serviceorderfaktura];
    ProcessingOnly=Yes;
    OnPostReport=VAR
                   ProcessCollectiveList@1100528600 : Report 11012859;
                 BEGIN
                   ServiceCollectiveList.MARKEDONLY(TRUE);
                   ServiceCollectiveList.SETRANGE(Status, ServiceCollectiveList.Status::Open);
                   IF ServiceCollectiveList.FINDSET(TRUE) THEN
                     REPEAT
                       IF RecalculateCollectiveList THEN
                         ServiceCollectiveList.Recalculate
                       ELSE
                         ServiceCollectiveList.SetDontConfirmRecalculateAtRelease(TRUE);
                       ServiceCollectiveList.VALIDATE(Status, ServiceCollectiveList.Status::Released);
                       ServiceCollectiveList.MODIFY(TRUE);
                     UNTIL ServiceCollectiveList.NEXT = 0;
                   ServiceCollectiveList.SETRANGE(Status);
                   COMMIT;
                   ProcessCollectiveList.SetDefaults(SortingOrderType, TRUE, RecalculateCollectiveList);
                   IF NOT ServiceCollectiveList.ISEMPTY THEN BEGIN
                     ProcessCollectiveList.SETTABLEVIEW(ServiceCollectiveList);
                     ProcessCollectiveList.USEREQUESTPAGE := FALSE;
                     ProcessCollectiveList.RUN;
                   END;
                 END;

  }
  DATASET
  {
    { 1373;    ;DataItem;                    ;
               DataItemTable=Table11012823;
               OnAfterGetRecord=VAR
                                  ServiceOrder@1100525000 : Record 11012823;
                                  ServiceCollectiveListMgt@1100409000 : Codeunit 11012850;
                                BEGIN
                                  //>>190522 ORANGO.FH
                                  // IF "Settlement Method" = "Settlement Method"::"Cost Plus" THEN
                                  //  IF NOT (Status IN [Status::"Technical Finished", Status::"Administrative Finished", Status::Finished]) THEN
                                  //    IF NOT CONFIRM(Text002, FALSE, "No.") THEN
                                  //      ERROR('');
                                  //<<190522

                                  IF NOT "Allow Invoice Separately" AND NOT NextOrdersMatchPreliminaries("No.") THEN
                                    IF NOT CONFIRM(Text001, FALSE, "No.") THEN
                                      ERROR('');

                                  IF "Collective List No." = '' THEN BEGIN
                                    VALIDATE("Collective List No.",
                                      ServiceCollectiveListMgt.CreateCollectiveList(
                                        "Customer No.", "Bill-to Customer No.", "Bill-to Contact Person",
                                        "Alternative Bill-to Address", "Service Location No." ,"Service Contract No.", "No.", TRUE,''));
                                    MODIFY(TRUE);
                                  END;

                                  IF ServiceCollectiveList.GET("Collective List No.") THEN BEGIN
                                    ServiceOrder.SETCURRENTKEY("Collective List No.");
                                    ServiceOrder.SETRANGE("Collective List No.", "Collective List No.");
                                    IF ServiceOrder.FINDSET AND (ServiceOrder.NEXT <> 0) THEN
                                      IF NOT CONFIRM(Text000, FALSE, "Collective List No.") THEN
                                        ERROR('');
                                    ServiceCollectiveList.MARK(TRUE);
                                  END;
                                END;

               ReqFilterFields=No.,Customer No.,Subcontractor,Starting Date,Status }

    { 1100528600;1;DataItem;                 ;
               DataItemTable=Table11012825;
               DataItemTableView=SORTING(Service Order No.,Line No.)
                                 WHERE(Collective List No.=CONST(),
                                       Invoiced=CONST(No));
               OnAfterGetRecord=VAR
                                  ServiceOrder@1100528602 : Record 11012823;
                                  ServiceCollectiveListMgt@1100528600 : Codeunit 11012850;
                                  CollectiveListNo@1100528601 : Code[20];
                                BEGIN
                                  CALCFIELDS("Service Contract No.");
                                  CollectiveListNo :=
                                    ServiceCollectiveListMgt.FindCollectiveListNo("Customer No.", "Bill-to Customer No.", '',
                                      "Alternative Bill-to Address", ServiceOrder."Service Location No.", ServiceOrder."Service Contract No.", "Service Order No.", TRUE);
                                  IF CollectiveListNo = '' THEN
                                    CollectiveListNo :=
                                      ServiceCollectiveListMgt.CreateCollectiveList("Customer No.", "Bill-to Customer No.", '',
                                        "Alternative Bill-to Address", ServiceOrder."Service Location No.", ServiceOrder."Service Contract No.", "Service Order No.", TRUE,"Cost Object");
                                  VALIDATE("Collective List No.", CollectiveListNo);
                                  MODIFY(TRUE);

                                  IF ServiceCollectiveList.GET("Collective List No.") THEN BEGIN
                                    ServiceOrder.SETCURRENTKEY("Collective List No.");
                                    ServiceOrder.SETRANGE("Collective List No.", "Collective List No.");
                                    IF ServiceOrder.FINDSET AND (ServiceOrder.NEXT <> 0) THEN
                                      IF NOT CONFIRM(Text000, FALSE, "Collective List No.") THEN
                                        ERROR('');
                                    ServiceCollectiveList.MARK(TRUE);
                                  END;
                                END;

               DataItemLink=Service Order No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnInit=BEGIN
               RecalculateCollectiveList := TRUE;
             END;

    }
    CONTROLS
    {
      { 1100528600;;Container;
                  ContainerType=ContentArea }

      { 1100528601;1;Group  ;
                  CaptionML=[ENU=Options;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100528603;2;Field  ;
                  CaptionML=[ENU=Sort by;
                             SVE=Sortera efter];
                  OptionCaptionML=[ENU=Line No.,Work Order No. - Cost Object;
                                   SVE=Radnr.,Arbetsordernr. Kostnadsobjekt];
                  SourceExpr=SortingOrderType;
                  OnValidate=VAR
                               JobsSetup@1100528600 : Record 315;
                             BEGIN
                               IF SortingOrderType = SortingOrderType::"Work Order - Cost Object" THEN
                                 JobsSetup.TestIsFSAActive;
                             END;
                              }

      { 1100528500;2;Field  ;
                  CaptionML=[ENU=Recalculatie;
                             SVE="R„kna om samlingsfaktura "];
                  SourceExpr=RecalculateCollectiveList }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ServiceCollectiveList@1100409000 : Record 11071730;
      Text000@1100525000 : TextConst 'ENU=There are several Service Orders linked to Collective List %1, continue anyway?;SVE=Det finns flera serviceordrar kopplade till samlingsfaktura %1, vill du forts„tta „nd†?';
      Text001@1100528600 : TextConst 'ENU=Next Service Orders of Service Order %1 don''t match preliminaries, continue anyway?;SVE=N„sta serviceorder f”r serviceorder %1 matchar inte den prelimin„ra, vill du forts„tta „nd†?';
      Text002@1100525001 : TextConst 'ENU=Status of Service Order %1 needs to be at least Technical Finished, continue anyway?;SVE=Status p† serviceorder %1 m†ste var tekniskt f„rdig eller ”ver, vill du forts„tta „nd†?';
      SortingOrderType@1100528603 : 'Line No.,Work Order - Cost Object';
      RecalculateCollectiveList@1100528500 : Boolean;

    PROCEDURE NextOrdersMatchPreliminaries@1100528600(IServiceOrderNo@1100528600 : Code[20]) : Boolean;
    VAR
      ServiceOrder@1100528601 : Record 11012823;
    BEGIN
      ServiceOrder.SETCURRENTKEY("Base Service Order No.");
      ServiceOrder.SETRANGE("Base Service Order No.", IServiceOrderNo);
      ServiceOrder.SETRANGE("Base Service Order", FALSE);
      ServiceOrder.SETRANGE("Settlement Method", ServiceOrder."Settlement Method"::"Cost Plus");
      ServiceOrder.SETFILTER(Status, '<>%1&<>%2&<>%3',
        ServiceOrder.Status::"Technical Finished", ServiceOrder.Status::"Administrative Finished", ServiceOrder.Status::Finished);
      IF ServiceOrder.ISEMPTY THEN
        EXIT(TRUE);
      IF ServiceOrder.FINDSET THEN
        REPEAT
          IF NOT ServiceOrder.InvoiceDataDiffersFromBaseOrder THEN
            EXIT(FALSE);
        UNTIL ServiceOrder.NEXT = 0;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CostPlusEntriesAvailable@1100528601(VAR IServiceOrder@1100528600 : Record 11012823) : Boolean;
    VAR
      ServiceOrderCostPlusEntry@1100528601 : Record 11012825;
    BEGIN
      ServiceOrderCostPlusEntry.SETRANGE("Service Order No.", IServiceOrder."No.");
      ServiceOrderCostPlusEntry.SETRANGE(Invoiced, FALSE);
      ServiceOrderCostPlusEntry.SETRANGE("Bill-to Customer No.", IServiceOrder."Bill-to Customer No.");
      ServiceOrderCostPlusEntry.SETRANGE("Alternative Bill-to Address", IServiceOrder."Alternative Bill-to Address");
      EXIT(NOT ServiceOrderCostPlusEntry.ISEMPTY);
    END;

    BEGIN
    {
      DP01008: DataItemTableView (WHERE(Base Service Order=CONST(Yes)) removed
      180903 ORANGO.DL CostObject (global dim 2) from CostPlusEntry to SalesHead
      190522 ORANGO.FH #24365 Removed Confirm dialog
    }
    END.
  }
  RDLDATA
  {
  }
}

