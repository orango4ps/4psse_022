OBJECT Table 11126727 DSP Adjustment Message
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Adjustment Reason No.");
             END;

    OnModify=BEGIN
               TESTFIELD("Adjustment Reason No.");
             END;

    OnDelete=BEGIN
               TESTFIELD("Sent To Dsp", 0DT);
               TESTFIELD("Processed By Dsp", 0DT);
             END;

    CaptionML=ENU=DSP Adjustent Message;
    LookupPageID=Page11126939;
    DrillDownPageID=Page11126939;
  }
  FIELDS
  {
    { 1   ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order".No.;
                                                   CaptionML=[ENU=Service Order No.;
                                                              NOR=Serviceordrenr.;
                                                              SVE=Serviceordernr];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr];
                                                   Editable=No }
    { 20  ;   ;Object No.          ;Code20        ;TableRelation="Service Order Object"."Object No." WHERE (Service Order No.=FIELD(Service Order No.));
                                                   CaptionML=[ENU=Object No.;
                                                              NOR=Objektnr.;
                                                              SVE=Objektnr];
                                                   Editable=No }
    { 30  ;   ;Adjustment Reason Code OLD;Code20  ;OnValidate=BEGIN
                                                                CALCFIELDS("Adjustment Reason Description");
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   Description=OLD }
    { 31  ;   ;Adjustment Reason No.;Integer      ;TableRelation="DSP Code".No. WHERE (Type=CONST(AdjReason));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Adjustment Reason Description");
                                                              END;

                                                   OnLookup=VAR
                                                              DSPAssignment@1100528302 : Record 11126740;
                                                              DSPCode@1100528301 : Record 11126753;
                                                              DSPManagement@1100528300 : Codeunit 11126714;
                                                            BEGIN
                                                              DSPManagement.GetDspAssignmentByServiceOrderNoObjectNo("Service Order No.", "Object No.", DSPAssignment);
                                                              "Adjustment Reason No." := DSPCode.LookupRecord(DSPAssignment."Version No.", DSPCode.Type::AdjReason);
                                                            END;

                                                   CaptionML=ENU=Adjustment Reason }
    { 40  ;   ;Adjustment Reason Description;Text50;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("DSP Code".Description WHERE (Type=CONST(AdjReason),
                                                                                                    No.=FIELD(Adjustment Reason No.)));
                                                   CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning];
                                                   Editable=No }
    { 50  ;   ;Explanation OLD     ;Text250       ;CaptionML=;
                                                   Description=OLD;
                                                   Editable=No }
    { 51  ;   ;Explanation         ;BLOB          ;CaptionML=[ENU=Explanation;
                                                              SVE=F”rklaring];
                                                   SubType=Memo }
    { 60  ;   ;Sent To Dsp         ;DateTime      ;CaptionML=ENU=Send to DSP;
                                                   Editable=No }
    { 70  ;   ;Processed By Dsp    ;DateTime      ;CaptionML=ENU=Processed By DSP;
                                                   Editable=No }
    { 550 ;   ;Xml Message         ;BLOB          ;CaptionML=ENU=XML Message }
  }
  KEYS
  {
    {    ;Service Order No.,Object No.,Line No.   ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      MustHaveValueErr@1100528300 : TextConst 'ENU=" must have a value."';

    PROCEDURE GetLastLineNo@1100528303() : Integer;
    VAR
      DSPAdjustmentMessage@1100528300 : Record 11126727;
    BEGIN
      DSPAdjustmentMessage.SETRANGE("Service Order No.", "Service Order No.");
      DSPAdjustmentMessage.SETRANGE("Object No.", "Object No.");
      IF (DSPAdjustmentMessage.FINDLAST) THEN
        EXIT(DSPAdjustmentMessage."Line No.");
      EXIT(0);
    END;

    PROCEDURE GetXmlMessage@1100528302(VAR DnXmlDocument@1100528301 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      OStream@1100528300 : OutStream;
    BEGIN
      IF (NOT "Xml Message".HASVALUE) THEN
        FIELDERROR("Xml Message", MustHaveValueErr);

      CALCFIELDS("Xml Message");
      "Xml Message".CREATEOUTSTREAM(OStream);
      DnXmlDocument := DnXmlDocument.XmlDocument();
      DnXmlDocument.Load(OStream);
    END;

    PROCEDURE ResetSentToDsp@1100528300();
    BEGIN
      "Sent To Dsp" := 0DT;
      MODIFY(TRUE);
    END;

    PROCEDURE SetProcessedByDsp@1100528304();
    BEGIN
      "Processed By Dsp" := CURRENTDATETIME;
      MODIFY(TRUE);
    END;

    PROCEDURE ShowDocuments@1100528602();
    VAR
      DocumentFilters@1100528601 : Codeunit 11012432;
      RecRef@1100528600 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, FALSE);
    END;

    PROCEDURE ShowXmlMessage@1100528301();
    VAR
      TempXMLBuffer@1100528302 : TEMPORARY Record 1235;
      XMLViewer4PS@1100528301 : Page 11129908;
      IStream@1100528300 : InStream;
    BEGIN
      IF (NOT "Xml Message".HASVALUE) THEN
        FIELDERROR("Xml Message", MustHaveValueErr);

      CALCFIELDS("Xml Message");
      "Xml Message".CREATEINSTREAM(IStream);
      TempXMLBuffer.Load(IStream);
      XMLViewer4PS.SetTempTable(TempXMLBuffer);
      XMLViewer4PS.SetShowAttributes(FALSE);
      XMLViewer4PS.RUNMODAL;
    END;

    BEGIN
    END.
  }
}

