OBJECT Report 11128101 Copy Extension to Settlement
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Copy Extension Budget to Settlement Sheet;
               NOR=Kopier Tilleggsbudsjett til oppgj›rsskjema;
               SVE=Kopiera ill„ggsbudget till avr„kningsark];
    ProcessingOnly=Yes;
    OnPostReport=BEGIN

                   BudgetLine.SETRANGE("Project No.", ProjectNo);
                   BudgetLine.SETRANGE("Extension Contract", ExtensionContractNo);
                   BudgetLine.SETFILTER(Adjustment, '');
                   ExtensionContract.GET(ProjectNo,  ExtensionContractNo);
                   // Loop through all Sales Price Budget lines and validate them to the corresponding
                   // Project Cost Plus Entry for the Settlement sheet selected.

                   LineNo := 10000;
                   ProjectCostPlusEntry.SETRANGE("Project No.", ProjectNo);
                   ProjectCostPlusEntry.SETRANGE(Principal, ExtensionContract.Principal);
                   ProjectCostPlusEntry.SETRANGE("Commission No.", "Commission No.");
                   ProjectCostPlusEntry.SETRANGE("Settl.Sheet No.", "No.");
                   IF (ProjectCostPlusEntry.FINDLAST) THEN LineNo := ProjectCostPlusEntry."Line No." + 10000;
                   //KEYS: Project No.,Principal,Commission No.,Settl.Sheet No.,Line No.

                   IF BudgetLine.FINDSET(FALSE) THEN REPEAT

                      ProjectCostPlusEntry.INIT();
                      ProjectCostPlusEntry."Project No." := ProjectNo;
                      ProjectCostPlusEntry.VALIDATE(Principal, ExtensionContract.Principal);
                      ProjectCostPlusEntry.VALIDATE("Commission No.", "Commission No.");
                      ProjectCostPlusEntry.VALIDATE("Settl.Sheet No.", "No.");
                      ProjectCostPlusEntry.VALIDATE("Line No.", LineNo);
                      ProjectCostPlusEntry.VALIDATE("Cost Object", BudgetLine."Cost Object");
                      ProjectCostPlusEntry.VALIDATE(Description, BudgetLine.Description);
                      ProjectCostPlusEntry.VALIDATE("Description 2", BudgetLine."Description 2");
                      IF (BudgetLine."Cost Type" = BudgetLine."Cost Type"::Labor) THEN BEGIN
                         ProjectCostPlusEntry.VALIDATE(Quantity, BudgetLine.Quantity * BudgetLine.Norm);
                      END ELSE
                         ProjectCostPlusEntry.VALIDATE(Quantity, BudgetLine.Quantity);

                      //>>130905
                      IF (BudgetLine."Cost Type" = BudgetLine."Cost Type"::Plant)          OR
                         (BudgetLine."Cost Type" = BudgetLine."Cost Type"::Subcontracting) OR
                         (BudgetLine."Cost Type" = BudgetLine."Cost Type"::Sundry)         OR
                         (BudgetLine."Cost Type" = BudgetLine."Cost Type"::Material) THEN
                            ProjectCostPlusEntry.VALIDATE("Basic Price (LCY)" ,BudgetLine."Price (LCY)") ;
                      //<<130905

                      ProjectCostPlusEntry.VALIDATE("Unit of Measure", BudgetLine."Unit of Measure");
                      //>>ITERO.GH IME-179
                      //ProjectCostPlusEntry.VALIDATE("VAT Prod. Posting Group", ExtensionContract."VAT Prod. Posting Group");
                      IF ExtensionContract."VAT Prod. Posting Group" <> '' THEN
                        ProjectCostPlusEntry.VALIDATE("VAT Prod. Posting Group", ExtensionContract."VAT Prod. Posting Group")
                      ELSE
                        ProjectCostPlusEntry.DetermineVATProdPostingGroup;
                      //<<ITERO.GH IME-179
                      ProjectCostPlusEntry.VALIDATE("Creation Date", TODAY);
                      ProjectCostPlusEntry.VALIDATE("Item No.", BudgetLine."Item No.");
                      ProjectCostPlusEntry.VALIDATE("Basic Item", BudgetLine."Basic Item");
                      ProjectCostPlusEntry.VALIDATE("Vendor (Trade Item)", BudgetLine."Vendor (Trade Item)");
                      ProjectCostPlusEntry.VALIDATE("Trade Item", BudgetLine."Trade Item");
                      ProjectCostPlusEntry.VALIDATE(Manufacturer, BudgetLine.Manufacturer);
                      ProjectCostPlusEntry.VALIDATE(Element, BudgetLine.Element);
                      ProjectCostPlusEntry.VALIDATE("Extension Contract", BudgetLine."Extension Contract");
                   //   ProjectCostPlusEntry.VALIDATE(Vendor, BudgetLine.Vendor);

                      //>>130905
                      //ProjectCostPlusEntry.INSERT();
                      ProjectCostPlusEntry.INSERT(TRUE);
                      //<<130905
                      LineNo += 10000;

                   UNTIL BudgetLine.NEXT = 0;

                   MESSAGE(Text001);
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SourceTable=Table11012021;
      OnOpenPage=BEGIN
                   SETRANGE("Project No.", ProjectNo);
                   JobRec.GET(ProjectNo);

                   IF Rec.COUNT = 0 THEN BEGIN
                      IF CONFIRM(Text11012007,TRUE) THEN BEGIN
                         JobRec.InsertSettlementSheet(JobRec."Bill-to Customer No.");
                         COMMIT;
                      END;
                   END;
                 END;

    }
    CONTROLS
    {
      { 1100285000;;Container;
                  Name=Root;
                  ContainerType=ContentArea }

      { 1100285001;1;Group  ;
                  GroupType=Repeater }

      { 1100285002;2;Field  ;
                  SourceExpr="No." }

      { 1100285003;2;Field  ;
                  SourceExpr=Description }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ProjectNo@1100285000 : Code[20];
      ExtensionContractNo@1100285003 : Code[20];
      JobRec@1100285001 : Record 11072003;
      Text11012007@1100285002 : TextConst 'ENU=Add Settlement Sheet ?;NOR=Legge til oppgj›rsskjema?;SVE=L„gga till avr„kningsark?';
      ProjectCostPlusEntry@1100285004 : Record 11012019;
      BudgetLine@1100285006 : Record 11012001;
      ExtensionContract@1100285007 : Record 11012004;
      Text001@1100285008 : TextConst 'ENU=Budget lines have been copied to Settlement Sheet;NOR=Budsjettrader er kopiert til oppgj›rsskjema;SVE=Budgetrader har kopierats till avr„kningsark.';
      LineNo@1100285005 : Integer;

    PROCEDURE SetProjectNo@1100285001(ProjectNoVar@1100285000 : Code[20];ExtensionContractVar@1100285001 : Code[20]);
    BEGIN
      ProjectNo := ProjectNoVar;
      ExtensionContractNo := ExtensionContractVar;
    END;

    BEGIN
    {
      130905 4PSSE Call Annelie for IMSE-020

      140630 ITERO.GH IME-179 VAT prod.PostingGroup '' on extension
    }
    END.
  }
  RDLDATA
  {
  }
}

