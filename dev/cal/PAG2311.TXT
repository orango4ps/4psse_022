OBJECT Page 2311 BC O365 Sales Inv. Line Subp.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Invoice Line;
               NOR=Fakturalinje;
               SVE=Fakturarad];
    SaveValues=Yes;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table37;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Manage;
                                NOR=Ny,Prosess,Rapport,Administrer;
                                SVE=Ny,Process,Rapport,Hantera];
    OnInit=VAR
             O365SalesInitialSetup@1000 : Record 2110;
           BEGIN
             SalesSetup.GET;
             IF TaxSetup.GET THEN;
             Currency.InitRoundingPrecision;
             O365SalesInvoiceMgmt.ConstructCurrencyFormatString(Rec,CurrencyFormat);
             IsUsingVAT := O365SalesInitialSetup.IsUsingVAT;
             IsDevice := ClientTypeManagement.GetCurrentClientType IN [CLIENTTYPE::Tablet,CLIENTTYPE::Phone];
             ShowOnlyOnBrick := TRUE;
           END;

    OnAfterGetRecord=BEGIN
                       UpdatePriceDescription;
                       UnitOfMeasure := COPYSTR("Unit of Measure",1,MAXSTRLEN(UnitOfMeasure));
                       O365SalesInvoiceMgmt.ConstructCurrencyFormatString(Rec,CurrencyFormat);
                       CALCFIELDS("Posting Date");
                       LineQuantity := Quantity;
                       UpdateVATPostingGroupDescription;
                       ShowOnlyOnBrick := FALSE;
                     END;

    OnNewRecord=VAR
                  SalesLine@1000 : Record 37;
                BEGIN
                  Type := Type::Item;
                  SalesLine.SETRANGE("Document Type","Document Type");
                  SalesLine.SETRANGE("Document No.","Document No.");
                  IF SalesLine.FINDLAST THEN;
                  "Line No." := SalesLine."Line No." + 10000;
                  LineQuantity := 1;
                  CLEAR(VATProductPostingGroupDescription);
                END;

    OnModifyRecord=BEGIN
                     UpdatePriceDescription;
                     MODIFY(TRUE);
                     CalculateTotals;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           DescriptionSelected := Description <> '';
                         END;

    ActionList=ACTIONS
    {
      { 4       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 9       ;1   ;Action    ;
                      Name=OpenPrice;
                      CaptionML=[ENU=View Price;
                                 NOR=Vis pris;
                                 SVE=Visa pris];
                      ToolTipML=[ENU=Opens the price card.;
                                 NOR=èpner priskortet.;
                                 SVE=ôppnar priskortet.];
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=View;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      Scope=Repeater;
                      OnAction=VAR
                                 Item@1000 : Record 27;
                               BEGIN
                                 IF "No." = '' THEN
                                   EXIT;
                                 IF Item.GET("No.") THEN
                                   PAGE.RUNMODAL(PAGE::"BC O365 Item Card",Item);
                               END;
                                }
      { 15      ;1   ;Action    ;
                      Name=DeleteLine;
                      CaptionML=[ENU=Delete Line;
                                 NOR=Slett linje;
                                 SVE=Ta bort rad];
                      ToolTipML=[ENU=Delete the selected line.;
                                 NOR=Slett den merkede linjen.;
                                 SVE=Ta bort den markerade raden.];
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=DeleteRow;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IF "No." = '' THEN
                                   EXIT;

                                 IF NOT CONFIRM(DeleteQst,TRUE) THEN
                                   EXIT;
                                 DELETE(TRUE);
                               END;

                      Gesture=RightSwipe }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 6   ;1   ;Group     ;
                Name=grpGeneral;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the record.;
                           NOR=Angir nummeret pÜ posten.;
                           SVE=Anger postens nummer.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of the item or service on the line.;
                           NOR=Angir en beskrivelse av varen eller tjenesten pÜ linjen.;
                           SVE=Anger en beskrivning av artikeln eller tjÑnsten pÜ raden.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Description;
                LookupPageID=BC O365 Item List;
                OnValidate=BEGIN
                             O365SalesInvoiceMgmt.ValidateItemDescription(Rec,DescriptionSelected);
                             RedistributeTotalsOnAfterValidate;
                             DescriptionSelected := Description <> '';
                           END;
                            }

    { 5   ;2   ;Field     ;
                Width=5;
                CaptionML=[ENU=Quantity;
                           NOR=Antall;
                           SVE=Antal];
                ToolTipML=[ENU=Specifies the quantity of the item or service on the line.;
                           NOR=Angir antallet av varen eller tjenesten pÜ linjen.;
                           SVE=Anger antalet artiklar eller tjÑnster pÜ raden.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                DecimalPlaces=0:5;
                SourceExpr=LineQuantity;
                Enabled=DescriptionSelected;
                OnValidate=BEGIN
                             VALIDATE(Quantity,LineQuantity);
                             RedistributeTotalsOnAfterValidate;
                             ShowInvoiceDiscountNotification;
                           END;
                            }

    { 12  ;2   ;Field     ;
                Width=10;
                CaptionML=[ENU=Price;
                           NOR=Pris;
                           SVE=Pris];
                ToolTipML=[ENU=Specifies the price for one unit on the sales line.;
                           NOR=Angir salgsprisen for Çn enhet pÜ salgslinjen.;
                           SVE=Anger priset fîr en enhet pÜ fîrsÑljningsraden.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Unit Price";
                Enabled=DescriptionSelected;
                OnValidate=BEGIN
                             O365SalesInvoiceMgmt.ValidateItemPrice(Rec);
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 8   ;2   ;Field     ;
                Width=5;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Unit of Measure";
                Visible=FALSE;
                Enabled=FALSE;
                Editable=FALSE }

    { 7   ;2   ;Field     ;
                Width=5;
                CaptionML=[ENU=Price per;
                           NOR=Pris per;
                           SVE=Pris per];
                ToolTipML=[ENU=Specifies the sales unit of measure for this product or service.;
                           NOR=Angir salgsenheten for dette produktet eller denne tjenesten.;
                           SVE=Anger fîrsÑljningsenheten fîr produkten eller tjÑnsten.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=UnitOfMeasure;
                TableRelation="Unit of Measure";
                Enabled=DescriptionSelected;
                LookupPageID=O365 Units of Measure List;
                OnValidate=BEGIN
                             IF UnitOfMeasure = '' THEN
                               UnitOfMeasure := COPYSTR(xRec."Unit of Measure",1,MAXSTRLEN(UnitOfMeasure));

                             IF UnitOfMeasure = xRec."Unit of Measure" THEN
                               EXIT;

                             "Unit of Measure" := UnitOfMeasure;
                             O365SalesInvoiceMgmt.ValidateItemUnitOfMeasure(Rec);
                             UnitOfMeasure := COPYSTR("Unit of Measure",1,MAXSTRLEN(UnitOfMeasure));
                           END;
                            }

    { 17  ;2   ;Field     ;
                Width=5;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Line Discount %";
                Enabled=DescriptionSelected;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                             IF HasShownInvoiceDiscountNotification THEN
                               InvoiceDiscountNotification.RECALL;
                           END;
                            }

    { 27  ;2   ;Field     ;
                Width=8;
                CaptionML=[ENU=VAT;
                           NOR=Merverdiavgift;
                           SVE=Moms];
                ToolTipML=[ENU=Specifies the VAT group code for this item.;
                           NOR=Angir mva-gruppekoden for denne varen.;
                           SVE=Anger momsgruppkoden fîr den hÑr artikeln.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                NotBlank=Yes;
                SourceExpr=VATProductPostingGroupDescription;
                Visible=IsUsingVAT;
                Enabled=DescriptionSelected;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                OnLookup=VAR
                           VATProductPostingGroup@1000 : Record 324;
                         BEGIN
                           IF PAGE.RUNMODAL(PAGE::"O365 VAT Product Posting Gr.",VATProductPostingGroup) = ACTION::LookupOK THEN BEGIN
                             VALIDATE("VAT Prod. Posting Group",VATProductPostingGroup.Code);
                             VATProductPostingGroupDescription := VATProductPostingGroup.Description;
                             O365SalesInvoiceMgmt.ValidateVATRate(Rec);
                             RedistributeTotalsOnAfterValidate;
                           END;
                         END;

                QuickEntry=FALSE }

    { 2   ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Line Amount";
                Enabled=DescriptionSelected;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 11  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Price description";
                Visible=ShowOnlyOnBrick AND IsDevice }

  }
  CODE
  {
    VAR
      Currency@1008 : Record 4;
      SalesSetup@1007 : Record 311;
      TotalSalesHeader@1006 : Record 36;
      TotalSalesLine@1005 : Record 37;
      TaxSetup@1012 : Record 326;
      ClientTypeManagement@1015 : Codeunit 4030;
      O365SalesInvoiceMgmt@1021 : Codeunit 2310;
      DocumentTotals@1004 : Codeunit 57;
      InvoiceDiscountNotification@1019 : Notification;
      CurrencyFormat@1001 : Text;
      VATProductPostingGroupDescription@1027 : Text[100];
      UnitOfMeasure@1011 : Text[10];
      VATAmount@1002 : Decimal;
      LineQuantity@1003 : Decimal;
      HasShownInvoiceDiscountNotification@1000 : Boolean;
      DescriptionSelected@1010 : Boolean;
      DeleteQst@1013 : TextConst 'ENU=Are you sure?;NOR=Er du sikker?;SVE=ér du sÑker?';
      IsUsingVAT@1017 : Boolean;
      ShowOnlyOnBrick@1009 : Boolean;
      IsDevice@1014 : Boolean;

    LOCAL PROCEDURE CalculateTotals@6();
    BEGIN
      GetTotalSalesHeader;
      IF SalesSetup."Calc. Inv. Discount" AND ("Document No." <> '') AND (TotalSalesHeader."Customer Posting Group" <> '') THEN
        CODEUNIT.RUN(CODEUNIT::"Sales-Calc. Discount",Rec);

      DocumentTotals.CalculateSalesTotals(TotalSalesLine,VATAmount,Rec);
    END;

    LOCAL PROCEDURE RedistributeTotalsOnAfterValidate@2();
    BEGIN
      CurrPage.SAVERECORD;

      TotalSalesHeader.GET("Document Type","Document No.");
      DocumentTotals.SalesRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalSalesLine);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE GetTotalSalesHeader@13();
    BEGIN
      IF NOT TotalSalesHeader.GET("Document Type","Document No.") THEN
        CLEAR(TotalSalesHeader);
      IF Currency.Code <> TotalSalesHeader."Currency Code" THEN
        IF NOT Currency.GET(TotalSalesHeader."Currency Code") THEN
          Currency.InitRoundingPrecision;
    END;

    LOCAL PROCEDURE ShowInvoiceDiscountNotification@4();
    BEGIN
      IF HasShownInvoiceDiscountNotification THEN
        EXIT;
      IF "Line Discount %" = xRec."Line Discount %" THEN
        EXIT;
      O365SalesInvoiceMgmt.ShowInvoiceDiscountNotification(InvoiceDiscountNotification,RECORDID);
      HasShownInvoiceDiscountNotification := TRUE;
    END;

    LOCAL PROCEDURE UpdateVATPostingGroupDescription@10();
    VAR
      VATProductPostingGroup@1000 : Record 324;
    BEGIN
      IF VATProductPostingGroup.GET("VAT Prod. Posting Group") THEN
        VATProductPostingGroupDescription := VATProductPostingGroup.Description
      ELSE
        CLEAR(VATProductPostingGroup);
    END;

    BEGIN
    END.
  }
}

