OBJECT Table 11126181 Ref. Payment - Imported
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVFI7.10 (32000001);
  }
  PROPERTIES
  {
    CaptionML=ENU=Ref. Payment - Imported;
    LookupPageID=Page11126181;
    DrillDownPageID=Page11126181;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Integer       ;CaptionML=[ENU=No.;
                                                              NOR=Nr;
                                                              SVE=Nr] }
    { 2   ;   ;Record ID           ;Integer       ;CaptionML=[ENU=Record ID;
                                                              NOR=Bokf›rings-ID;
                                                              SVE=Post-ID] }
    { 5   ;   ;Bank Code           ;Text2         ;CaptionML=[ENU=Bank Code;
                                                              SVE=Bank kod] }
    { 6   ;   ;Agent Code          ;Text9         ;CaptionML=ENU=Agent Code }
    { 7   ;   ;Currency Code       ;Text1         ;CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod] }
    { 8   ;   ;Account Owner Code  ;Text9         ;CaptionML=ENU=Account Owner Code }
    { 9   ;   ;Account No.         ;Text15        ;CaptionML=[ENU=Account No.;
                                                              NOR=Kontonr;
                                                              SVE=Nr] }
    { 10  ;   ;Banks Posting Date  ;Date          ;CaptionML=ENU=Banks Posting Date }
    { 11  ;   ;Banks Payment Date  ;Date          ;CaptionML=ENU=Banks Payment Date }
    { 12  ;   ;Filing Code         ;Text16        ;CaptionML=ENU=Filing Code }
    { 13  ;   ;Reference No.       ;Code20        ;CaptionML=[ENU=Reference No.;
                                                              NOR=Referansenr;
                                                              SVE=Referensnr] }
    { 14  ;   ;Payers Name         ;Text12        ;CaptionML=ENU=Payers Name }
    { 15  ;   ;Currency Code 2     ;Text1         ;CaptionML=ENU=Currency Code 2 }
    { 16  ;   ;Name Source         ;Text1         ;CaptionML=ENU=Name Source }
    { 17  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp] }
    { 18  ;   ;Correction Code     ;Text1         ;CaptionML=ENU=Correction Code }
    { 19  ;   ;Delivery Method     ;Text1         ;CaptionML=[ENU=Delivery Method;
                                                              SVE=Leveranss„tt] }
    { 20  ;   ;Feedback Code       ;Text1         ;CaptionML=ENU=Feedback Code }
    { 21  ;   ;Transaction Qty.    ;Text6         ;CaptionML=ENU=Transaction Qty. }
    { 22  ;   ;Payments Qty.       ;Decimal       ;CaptionML=ENU=Payments Qty. }
    { 23  ;   ;Corrections Qty.    ;Text6         ;CaptionML=ENU=Corrections Qty. }
    { 24  ;   ;Corrections Amount  ;Decimal       ;CaptionML=ENU=Corrections Amount }
    { 25  ;   ;Failed Direct Debiting Qty.;Text6  ;CaptionML=ENU=Failed Direct Debiting Qty. }
    { 26  ;   ;Failed Direct Debiting Amount;Decimal;
                                                   CaptionML=ENU=Failed Direct Debiting Amount }
    { 28  ;   ;Matched             ;Boolean       ;CaptionML=ENU=Matched }
    { 29  ;   ;Matched Date        ;Date          ;CaptionML=ENU=Matched Date }
    { 30  ;   ;Matched Time        ;Time          ;CaptionML=ENU=Matched Time }
    { 31  ;   ;Entry No.           ;Integer       ;TableRelation="Cust. Ledger Entry"."Entry No." WHERE (Open=CONST(Yes),
                                                                                                         Customer No.=FIELD(Customer No.));
                                                   OnValidate=BEGIN
                                                                IF ("Entry No." <> xRec."Entry No.") AND ("Entry No." <> 0) THEN BEGIN
                                                                  CustEntry.GET("Entry No.");
                                                                  "Document No." := CustEntry."Document No.";
                                                                END ELSE
                                                                  "Document No." := '';
                                                              END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Entry No.;
                                                              NOR=Transaksjonsnr.;
                                                              SVE=L”pnr] }
    { 35  ;   ;Bank Account Code   ;Code20        ;TableRelation="Bank Account";
                                                   CaptionML=[ENU=Bank Account Code;
                                                              NOR=Bankkontokode;
                                                              SVE=Bankkontokod] }
    { 36  ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              NOR=Dokumentnr.;
                                                              SVE=Verifikationsnr] }
    { 37  ;   ;Customer No.        ;Code20        ;TableRelation=Customer.No.;
                                                   OnValidate=BEGIN
                                                                IF ("Customer No." <> xRec."Customer No.") AND ("Customer No." <> '') THEN BEGIN
                                                                  Cust.GET("Customer No.");
                                                                  Description := COPYSTR(Cust.Name,1,MAXSTRLEN(Description));
                                                                END ELSE
                                                                  IF "Customer No." = '' THEN
                                                                    Description := '';
                                                              END;

                                                   CaptionML=[ENU=Customer No.;
                                                              NOR=Kundenr;
                                                              SVE=Kundnr] }
    { 38  ;   ;Description         ;Text35        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 40  ;   ;Posted to G/L       ;Boolean       ;CaptionML=[ENU=Posted to G/L;
                                                              NOR=Bokf›rt i Finans;
                                                              SVE=Bokf”rd i redovisning];
                                                   Editable=No }
    { 41  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              NOR=Bokf›ringsdato;
                                                              SVE=Bokf”ringsdatum] }
    { 42  ;   ;Batch No.           ;Integer       ;CaptionML=[ENU=Batch No.;
                                                              SVE=Batchnr] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Filing Code,Record ID                    }
    {    ;Banks Payment Date,Filing Code,Customer No. }
    {    ;Banks Posting Date,Bank Code,Document No. }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Cust@1090000 : Record 18;
      CustEntry@1090001 : Record 21;

    BEGIN
    END.
  }
}

