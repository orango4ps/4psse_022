OBJECT XMLport 11012562 Import RFID Plant Order
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import RFID Plant Order;
               SVE=Import RFID maskinorder];
    Direction=Import;
    DefaultFieldsValidation=No;
    PreserveWhiteSpace=Yes;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    PlantSetup.GET;
                    RFIDSetup.GET;  //* Fields of setup used in dataport must be checked before calling
                  END;

    OnPreXMLport=VAR
                   NoSeriesLine@1100528402 : Record 309;
                   IsDigit@1100528401 : Boolean;
                   Pos@1100528400 : Integer;
                 BEGIN
                   PrefixPO := '';
                   IF PlantSetup."Plant Order Nos." <> '' THEN BEGIN
                     NoSeriesLine.SETRANGE("Series Code", PlantSetup."Plant Order Nos.");
                     NoSeriesLine.SETRANGE(Open, TRUE);
                     NoSeriesLine.SETFILTER("Starting No.", '<>%1', '');
                     IF NoSeriesLine.FINDLAST THEN BEGIN
                       Pos := 0;
                       REPEAT
                         Pos := Pos + 1;
                         IsDigit := COPYSTR(NoSeriesLine."Starting No.", Pos, 1) IN ['0'..'9'];
                         IF IsDigit AND (Pos > 1) THEN
                           PrefixPO := COPYSTR(NoSeriesLine."Starting No.", 1, Pos-1);
                       UNTIL IsDigit OR (Pos = 10);
                     END;
                   END;
                 END;

    Format=Fixed Text;
    UseRequestPage=No;
  }
  ELEMENTS
  {
    { [{340148CD-83D8-4106-8A28-423ED57D51D5}];  ;Root                ;Element ;Text     }

    { [{051155D9-C6AA-4895-A7D5-412EE708C5BF}];1 ;Integer             ;Element ;Table   ;
                                                  SourceTable=Table2000000026;
                                                  SourceTableView=SORTING(Field1);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              CLEAR(TextLine);
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 RFIDOrderLine2@1100528400 : Record 11072662;
                                                                               BEGIN
                                                                                 IF (COPYSTR(TextLine, 1, 3) = 'MSC') AND (COPYSTR(TextLine, 27, 1) <> '-') THEN BEGIN
                                                                                   //* Header
                                                                                   RFIDOrder.INIT;
                                                                                   RFIDOrder."No." := '';
                                                                                   RFIDOrder."Note No." := COPYSTR(TextLine, 4, 6);
                                                                                   IF EVALUATE(DateYear, COPYSTR(TextLine, 29, 4)) AND
                                                                                      EVALUATE(DateMonth, COPYSTR(TextLine, 33, 2)) AND
                                                                                      EVALUATE(DateDay, COPYSTR(TextLine, 35, 2))
                                                                                   THEN
                                                                                     RFIDOrder.Date := DMY2DATE(DateDay, DateMonth, DateYear);
                                                                                   IF COPYSTR(TextLine, 37, 1) = 'N' THEN  //* 'V' is Arrival (init value)
                                                                                     RFIDOrder.Type := RFIDOrder.Type::Removal;
                                                                                   FillPlantLocationsAndOther();
                                                                                   IF NOT OnExistingRFIDOrder(RFIDOrder) THEN
                                                                                     RFIDOrder.INSERT(TRUE);

                                                                                   //* Line
                                                                                   RFIDOrderLine.INIT;
                                                                                   RFIDOrderLine."Order No." := RFIDOrder."No.";
                                                                                   RFIDOrderLine."RFID Plant Code" := COPYSTR(TextLine, 10, 8);
                                                                                   FillPlantOrItemFromRFID();
                                                                                   RFIDOrderLine.CALCFIELDS(Bulk);
                                                                                   IF EVALUATE(RFIDOrderLine.Quantity,  COPYSTR(TextLine, 18, 6)) THEN;
                                                                                   IF EVALUATE(QtyDecimals,  COPYSTR(TextLine, 25, 2)) THEN
                                                                                     RFIDOrderLine.Quantity := RFIDOrderLine.Quantity + QtyDecimals/100;
                                                                                   //
                                                                                   RFIDOrderLine2.SETRANGE("Order No.", RFIDOrderLine."Order No.");
                                                                                   IF RFIDOrderLine2.FINDLAST THEN
                                                                                     RFIDOrderLine."Line No." := RFIDOrderLine2."Line No." + 1
                                                                                   ELSE
                                                                                     RFIDOrderLine."Line No." := 1;
                                                                                   RFIDOrderLine.INSERT;
                                                                                 END;

                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{8927C8D9-0851-435F-9621-C572F91DD17D}];2 ;TextLine            ;Element ;Text    ;
                                                  VariableName=TextLine;
                                                  MinOccurs=Zero;
                                                  Width=86 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      PlantSetup@1100528410 : Record 11012550;
      RFIDSetup@1100528409 : Record 11072660;
      RFIDOrder@1100528408 : Record 11072661;
      RFIDOrderLine@1100528407 : Record 11072662;
      DateYear@1100528406 : Integer;
      DateMonth@1100528405 : Integer;
      DateDay@1100528404 : Integer;
      QtyDecimals@1100528403 : Decimal;
      PrefixPO@1100528402 : Code[10];

    PROCEDURE OnExistingRFIDOrder@1210190000(VAR RFIDOrder@1210190001 : Record 11072661) : Boolean;
    VAR
      RFIDOrder2@1210190000 : Record 11072661;
    BEGIN
      RFIDOrder2.SETCURRENTKEY("Note No.", Date);
      RFIDOrder2.SETRANGE("Note No.", RFIDOrder."Note No.");
      RFIDOrder2.SETRANGE(Date, RFIDOrder.Date);
      RFIDOrder2.SETRANGE(Type, RFIDOrder.Type);
      RFIDOrder2.SETRANGE("From Location", RFIDOrder."From Location");
      RFIDOrder2.SETRANGE("To Location", RFIDOrder."To Location");
      RFIDOrder2.SETRANGE("Plant Order No.", RFIDOrder."Plant Order No.");
      IF RFIDOrder2.FINDFIRST THEN BEGIN
        RFIDOrder.GET(RFIDOrder2."No.");  // If on existing order then this must be read
        EXIT(TRUE);
      END;
    END;

    PROCEDURE FillPlantLocationsAndOther@1210190001();
    VAR
      SearchCode@1210190000 : Code[20];
    BEGIN
      IF RFIDOrder.Type = RFIDOrder.Type::Arrival THEN
        RFIDOrder."From Location" := PlantSetup."Rental Depot"
      ELSE
        RFIDOrder."To Location" := PlantSetup."Return Depot";

      IF RFIDSetup."Search Plant Location via (1)" <> 0 THEN BEGIN
        SearchCode := COPYSTR(RFIDOrder."Note No.",RFIDSetup."Start Pos. in Search Field (1)",RFIDSetup."Length in Search Field (1)");
        CASE RFIDSetup."Search Plant Location via (1)" OF
          RFIDSetup."Search Plant Location via (1)"::"Plant Order in Note No.":
            IF SearchLocsInPlantOrder(SearchCode) THEN
              EXIT;
          RFIDSetup."Search Plant Location via (1)"::"Plant Location in Note No.":
            IF SearchLocInPlantLoc(SearchCode) THEN
              EXIT;
          RFIDSetup."Search Plant Location via (1)"::"Project No. in Note No.":
            IF SearchLocInPlantLocWithProjNo(SearchCode) THEN
              EXIT;
        END;
      END;

      IF RFIDSetup."Search Plant Location via (2)" <> 0 THEN BEGIN
        SearchCode := COPYSTR(RFIDOrder."Note No.",RFIDSetup."Start Pos. in Search Field (2)",RFIDSetup."Length in Search Field (2)");
        CASE RFIDSetup."Search Plant Location via (2)" OF
          RFIDSetup."Search Plant Location via (2)"::"Plant Order in Note No.":
            IF SearchLocsInPlantOrder(SearchCode) THEN
              EXIT;
          RFIDSetup."Search Plant Location via (2)"::"Plant Location in Note No.":
            IF SearchLocInPlantLoc(SearchCode) THEN
              EXIT;
          RFIDSetup."Search Plant Location via (2)"::"Project No. in Note No.":
            IF SearchLocInPlantLocWithProjNo(SearchCode) THEN
              EXIT;
        END;
      END;

      IF RFIDSetup."Search Plant Location via (3)" <> 0 THEN BEGIN
        SearchCode := COPYSTR(RFIDOrder."Note No.",RFIDSetup."Start Pos. in Search Field (3)",RFIDSetup."Length in Search Field (3)");
        CASE RFIDSetup."Search Plant Location via (3)" OF
          RFIDSetup."Search Plant Location via (3)"::"Plant Order in Note No.":
            IF SearchLocsInPlantOrder(SearchCode) THEN
              EXIT;
          RFIDSetup."Search Plant Location via (3)"::"Plant Location in Note No.":
            IF SearchLocInPlantLoc(SearchCode) THEN
              EXIT;
          RFIDSetup."Search Plant Location via (3)"::"Project No. in Note No.":
            IF SearchLocInPlantLocWithProjNo(SearchCode) THEN
              EXIT;
        END;
      END;
    END;

    PROCEDURE SearchLocsInPlantOrder@1210190006(SearchCode@1210190000 : Code[20]) : Boolean;
    VAR
      PlantOrder@1210190001 : Record 11012556;
    BEGIN
      IF PlantOrder.GET(PrefixPO + SearchCode) THEN BEGIN
        RFIDOrder."From Location" := PlantOrder."From Location";
        RFIDOrder."To Location" := PlantOrder."To Location";
        RFIDOrder."Plant Order No." := PlantOrder."No.";
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE SearchLocInPlantLoc@1210190007(SearchCode@1210190000 : Code[20]) : Boolean;
    VAR
      PlantLoc@1210190001 : Record 11012554;
    BEGIN
      IF PlantLoc.GET(SearchCode) THEN BEGIN
        IF NOT PlantLoc.Depot THEN BEGIN
          IF RFIDOrder.Type = RFIDOrder.Type::Arrival THEN
            RFIDOrder."To Location" := PlantLoc.Code
          ELSE
            RFIDOrder."From Location" := PlantLoc.Code;
          EXIT(TRUE);
        END;
      END;
      EXIT(FALSE);
    END;

    PROCEDURE SearchLocInPlantLocWithProjNo@1210190008(SearchCode@1210190000 : Code[20]) : Boolean;
    VAR
      PlantLoc@1210190001 : Record 11012554;
    BEGIN
      PlantLoc.SETCURRENTKEY("Company Name", "Project No.");
      PlantLoc.SETRANGE("Project No.", SearchCode);
      PlantLoc.SETRANGE(Depot, FALSE);
      IF PlantLoc.FINDFIRST THEN BEGIN
        IF RFIDOrder.Type = RFIDOrder.Type::Arrival THEN
          RFIDOrder."To Location" := PlantLoc.Code
        ELSE
          RFIDOrder."From Location" := PlantLoc.Code;
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE FillPlantOrItemFromRFID@1210190002();
    VAR
      PlantNumber@1210190000 : Record 11012552;
      PlantInvent@1210190001 : Record 11012555;
      Item@1210190002 : Record 27;
    BEGIN
      IF RFIDOrderLine."RFID Plant Code" = '' THEN
        EXIT;

      PlantNumber.SETCURRENTKEY("Inspection No.");
      PlantNumber.SETRANGE("Inspection No.", RFIDOrderLine."RFID Plant Code");
      IF PlantNumber.FINDFIRST THEN BEGIN
        RFIDOrderLine.Type := RFIDOrderLine.Type::Plant;
        RFIDOrderLine."Plant Type" := PlantNumber."Plant Type";
        RFIDOrderLine."Plant No." := PlantNumber."No.";
        RFIDOrderLine.CALCFIELDS(Bulk);
        IF RFIDOrderLine.Bulk THEN BEGIN
          PlantInvent.RESET;
          PlantInvent.SETCURRENTKEY(Removed, "Plant Type", "Plant No.");
          PlantInvent.SETRANGE(Removed, FALSE);
          PlantInvent.SETRANGE("Plant Type", RFIDOrderLine."Plant Type");
          PlantInvent.SETRANGE("Plant No.", RFIDOrderLine."Plant No.");
          IF PlantInvent.ISEMPTY THEN
            RFIDOrderLine."Plant No." := '';
        END;
      END ELSE BEGIN
        Item.SETCURRENTKEY("Search Description");
        Item.SETRANGE("Search Description", RFIDOrderLine."RFID Plant Code");
        IF Item.FINDFIRST THEN BEGIN
          RFIDOrderLine.Type := RFIDOrderLine.Type::Item;
          RFIDOrderLine."Item No." := Item."No.";
        END;
      END;
    END;

    BEGIN
    {
      CC: Dataport 11012562

      DP00130

      FIELDNAME             STARTPOS  LENGTH  COMMENT
      --------------------------------------------------------------
      Record Type           1         3       Always 'MSC' (only import lines with MSC)
      Bonnummer             4         6       Contains plant order or plant location (depending on setup)
      Plant Code            10        8       Plant Type and Plant Number (length plant no. is a setup)
      Quantity              18        10      Format 'xxxxxx.xx+'. Sign is always a '+' (if sign is '-'then skip)
      Type mutation         28        1       0, 1, 2, 3 or 4. Field is not used
      Date                  29        8       Century, Year, Month en Day (format 'YYYYMMDD')
      From or To            37        1       V=Arival (Depot->Loc), N=Remaval (Loc->Depot)
      Location Number       38        5       Field is not used
      Description location  43        30      Field is not used
      Work Order Number     73        4       Field is not used
      Commission Number     77        8       Field is not used
      Closing Record        85        2       Fixed Value (Hex:0D,0A)
    }
    END.
  }
}

