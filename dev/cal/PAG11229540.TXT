OBJECT Page 11229540 _Recording Quantities by Plot
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Mengen pro GrundstÅck aufnehmen;
               ENU=Recording Quantities by Plot;
               NLD=Opnamehoeveelheid per bouwnummer];
    LinksAllowed=No;
    SourceTable=Table11072253;
    PageType=ListPart;
    OnAfterGetRecord=VAR
                       MATRIX_CurrentColumnOrdinal@1044 : Integer;
                     BEGIN
                       CLEAR(MATRIX_CellData);
                       MATRIX_CurrentColumnOrdinal := 0;
                       WHILE MATRIX_CurrentColumnOrdinal < MATRIX_CurrNoOfMatrixColumns DO BEGIN
                         MATRIX_CurrentColumnOrdinal := MATRIX_CurrentColumnOrdinal + 1;
                         MATRIX_OnAfterGetRecord(MATRIX_CurrentColumnOrdinal);
                       END;

                       SettlementPrice := 0;
                       CASE Type OF
                         Type::Settlement:
                           BEGIN
                             CALCFIELDS("Settlement Price");
                             SettlementPrice := "Settlement Price";
                           END;
                         Type::Option:
                           BEGIN
                             CALCFIELDS("Option Price");
                             SettlementPrice := "Option Price";
                           END;
                         Type::Other:
                           BEGIN
                           END;
                       END;

                       CalcTotalQuantities(TotalCold,TotalWarm,TotalProduction,Quantity);

                       GetBaseQuantity(BaseQuantity);
                     END;

    OnAfterGetCurrRecord=VAR
                           MATRIX_CurrentColumnOrdinal@1100528200 : Integer;
                         BEGIN
                           CLEAR(MATRIX_CellData);
                           MATRIX_CurrentColumnOrdinal := 0;
                           WHILE MATRIX_CurrentColumnOrdinal < MATRIX_CurrNoOfMatrixColumns DO BEGIN
                             MATRIX_CurrentColumnOrdinal := MATRIX_CurrentColumnOrdinal + 1;
                             MATRIX_OnAfterGetRecord(MATRIX_CurrentColumnOrdinal);
                           END;

                           SettlementPrice := 0;
                           CASE Type OF
                             Type::Settlement:
                               BEGIN
                                 CALCFIELDS("Settlement Price");
                                 SettlementPrice := "Settlement Price";
                               END;
                             Type::Option:
                               BEGIN
                                 CALCFIELDS("Option Price");
                                 SettlementPrice := "Option Price";
                               END;
                           END;

                           CalcTotalQuantities(TotalCold,TotalWarm,TotalProduction,Quantity);

                           GetBaseQuantity(BaseQuantity);
                         END;

    ActionList=ACTIONS
    {
      { 1100528207;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528206;1 ;ActionGroup;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unctions;
                                 NLD=F&uncties;
                                 NOR=Fu&nksjon;
                                 SVE=F&unktion] }
      { 1100528205;2 ;Action    ;
                      CaptionML=[DEU=Zeilen zu Einheit kopieren;
                                 ENU=Copy Lines to Unit;
                                 NLD=Kopieer regels naar ruimte];
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 PlotRecordingCrossList@1100528200 : Record 11072253;
                                 CopyRecordingCrossListLine@1100528201 : Page 11229545;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(PlotRecordingCrossList);
                                 IF PlotRecordingCrossList.FINDFIRST THEN BEGIN
                                   TESTFIELD("Project No.");
                                   IF PlotRecordingCrossList.COUNT > 1 THEN BEGIN
                                     PlotRecordingCrossList.SETFILTER("House Model", '<>%1', PlotRecordingCrossList."House Model");
                                     IF NOT PlotRecordingCrossList.ISEMPTY THEN
                                       ERROR(Text001);
                                   END;
                                 END ELSE
                                   ERROR(Text002);

                                 CopyRecordingCrossListLine.SetDefaults(PlotRecordingCrossList);
                                 CopyRecordingCrossListLine.StdDialogRunModal;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater;
                FreezeColumnID=Unit of Measure }

    { 1100528900;2;Field  ;
                SourceExpr="Project No.";
                Editable=FALSE }

    { 1100528901;2;Field  ;
                SourceExpr="House Model" }

    { 1100528902;2;Field  ;
                SourceExpr=Unit;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100529900;2;Field  ;
                SourceExpr="Unit Description" }

    { 1100528903;2;Field  ;
                SourceExpr=Type }

    { 20  ;2   ;Field     ;
                SourceExpr="Main Group";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr=Group;
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Sub Group";
                Visible=FALSE }

    { 1100528904;2;Field  ;
                SourceExpr=Code;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100528906;2;Field  ;
                SourceExpr=Description;
                Editable=FALSE }

    { 1100528905;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528908;2;Field  ;
                CaptionML=[DEU=VK-Preis;
                           ENU=Price;
                           NLD=Prijs;
                           NOR=Pris;
                           SVE=Pris];
                SourceExpr=SettlementPrice;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528204;2;Field  ;
                CaptionML=[DEU=Vorhersagemenge;
                           ENU=Forecast quantity;
                           NLD=Verwacht aantal];
                SourceExpr=BaseQuantity;
                Editable=FALSE }

    { 1100528200;2;Field  ;
                SourceExpr=Quantity;
                Editable=ColdQuantityEditable;
                OnValidate=BEGIN
                             IF ShowRecordingType = ShowRecordingType::"Cold Recording" THEN
                               UpdateColdRecordingQuantity(DateFilter);
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100528203;2;Field  ;
                CaptionML=[DEU=Kalt-Aufnahme gesamt;
                           ENU=Total Cold Recording;
                           NLD=Totaal koude opname];
                SourceExpr=TotalCold;
                Editable=ColdQuantityEditable;
                OnValidate=BEGIN
                             IF ShowRecordingType = ShowRecordingType::"Cold Recording" THEN
                               UpdateColdRecordingQuantity2(TotalCold, DateFilter);
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100528202;2;Field  ;
                CaptionML=[DEU=Warm-Aufnahme gesamt;
                           ENU=Total Warm Recording;
                           NLD=Totaal warme opname];
                SourceExpr=TotalWarm;
                Editable=FALSE }

    { 1100528201;2;Field  ;
                CaptionML=[DEU=Kalt-Produktion gesamt;
                           ENU=Total Cold Production;
                           NLD=Totaal productie];
                SourceExpr=TotalProduction;
                Editable=FALSE }

    { 1100528907;2;Field  ;
                SourceExpr="Unit of Measure";
                Editable=FALSE }

    { 1100525012;2;Field  ;
                Name=Field1;
                Lookup=Yes;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[1];
                CaptionClass='3,' + MATRIX_CaptionSet[1];
                Editable=CellEditable;
                Style=Attention;
                StyleExpr=CellsNotEditable;
                OnValidate=BEGIN
                             MATRIX_OnValidate(1);
                             CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           MATRIX_OnLookUp(1);
                         END;

                OnAssistEdit=BEGIN
                               MATRIX_OnAssistEdit(1);
                             END;
                              }

    { 1100525011;2;Field  ;
                Name=Field2;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[2];
                CaptionClass='3,' + MATRIX_CaptionSet[2];
                Editable=CellEditable;
                Style=Attention;
                StyleExpr=CellsNotEditable;
                OnValidate=BEGIN
                             MATRIX_OnValidate(2);
                           END;

                OnLookup=BEGIN
                           MATRIX_OnLookUp(2);
                         END;

                OnAssistEdit=BEGIN
                               MATRIX_OnAssistEdit(2);
                             END;
                              }

    { 1100525010;2;Field  ;
                Name=Field3;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[3];
                CaptionClass='3,' + MATRIX_CaptionSet[3];
                Editable=CellEditable;
                Style=Attention;
                StyleExpr=CellsNotEditable;
                OnValidate=BEGIN
                             MATRIX_OnValidate(3);
                           END;

                OnLookup=BEGIN
                           MATRIX_OnLookUp(3);
                         END;

                OnAssistEdit=BEGIN
                               MATRIX_OnAssistEdit(3);
                             END;
                              }

    { 1100525009;2;Field  ;
                Name=Field4;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[4];
                CaptionClass='3,' + MATRIX_CaptionSet[4];
                Editable=CellEditable;
                Style=Attention;
                StyleExpr=CellsNotEditable;
                OnValidate=BEGIN
                             MATRIX_OnValidate(4);
                           END;

                OnLookup=BEGIN
                           MATRIX_OnLookUp(4);
                         END;

                OnAssistEdit=BEGIN
                               MATRIX_OnAssistEdit(4);
                             END;
                              }

    { 1100525008;2;Field  ;
                Name=Field5;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[5];
                CaptionClass='3,' + MATRIX_CaptionSet[5];
                Editable=CellEditable;
                Style=Attention;
                StyleExpr=CellsNotEditable;
                OnValidate=BEGIN
                             MATRIX_OnValidate(5);
                           END;

                OnLookup=BEGIN
                           MATRIX_OnLookUp(5);
                         END;

                OnAssistEdit=BEGIN
                               MATRIX_OnAssistEdit(5);
                             END;
                              }

    { 1100525007;2;Field  ;
                Name=Field6;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[6];
                CaptionClass='3,' + MATRIX_CaptionSet[6];
                Editable=CellEditable;
                Style=Attention;
                StyleExpr=CellsNotEditable;
                OnValidate=BEGIN
                             MATRIX_OnValidate(6);
                           END;

                OnLookup=BEGIN
                           MATRIX_OnLookUp(6);
                         END;

                OnAssistEdit=BEGIN
                               MATRIX_OnAssistEdit(6);
                             END;
                              }

    { 1100525006;2;Field  ;
                Name=Field7;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[7];
                CaptionClass='3,' + MATRIX_CaptionSet[7];
                Editable=CellEditable;
                Style=Attention;
                StyleExpr=CellsNotEditable;
                OnValidate=BEGIN
                             MATRIX_OnValidate(7);
                           END;

                OnLookup=BEGIN
                           MATRIX_OnLookUp(7);
                         END;

                OnAssistEdit=BEGIN
                               MATRIX_OnAssistEdit(7);
                             END;
                              }

    { 1100525005;2;Field  ;
                Name=Field8;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[8];
                CaptionClass='3,' + MATRIX_CaptionSet[8];
                Editable=CellEditable;
                Style=Attention;
                StyleExpr=CellsNotEditable;
                OnValidate=BEGIN
                             MATRIX_OnValidate(8);
                           END;

                OnLookup=BEGIN
                           MATRIX_OnLookUp(8);
                         END;

                OnAssistEdit=BEGIN
                               MATRIX_OnAssistEdit(8);
                             END;
                              }

    { 1100525004;2;Field  ;
                Name=Field9;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[9];
                CaptionClass='3,' + MATRIX_CaptionSet[9];
                Editable=CellEditable;
                Style=Attention;
                StyleExpr=CellsNotEditable;
                OnValidate=BEGIN
                             MATRIX_OnValidate(9);
                           END;

                OnLookup=BEGIN
                           MATRIX_OnLookUp(9);
                         END;

                OnAssistEdit=BEGIN
                               MATRIX_OnAssistEdit(9);
                             END;
                              }

    { 1100525003;2;Field  ;
                Name=Field10;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[10];
                CaptionClass='3,' + MATRIX_CaptionSet[10];
                Editable=CellEditable;
                Style=Attention;
                StyleExpr=CellsNotEditable;
                OnValidate=BEGIN
                             MATRIX_OnValidate(10);
                           END;

                OnLookup=BEGIN
                           MATRIX_OnLookUp(10);
                         END;

                OnAssistEdit=BEGIN
                               MATRIX_OnAssistEdit(10);
                             END;
                              }

    { 1100525002;2;Field  ;
                Name=Field11;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[11];
                CaptionClass='3,' + MATRIX_CaptionSet[11];
                Editable=CellEditable;
                Style=Attention;
                StyleExpr=CellsNotEditable;
                OnValidate=BEGIN
                             MATRIX_OnValidate(11);
                           END;

                OnLookup=BEGIN
                           MATRIX_OnLookUp(11);
                         END;

                OnAssistEdit=BEGIN
                               MATRIX_OnAssistEdit(11);
                             END;
                              }

    { 1100525001;2;Field  ;
                Name=Field12;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[12];
                CaptionClass='3,' + MATRIX_CaptionSet[12];
                Editable=CellEditable;
                Style=Attention;
                StyleExpr=CellsNotEditable;
                OnValidate=BEGIN
                             MATRIX_OnValidate(12);
                           END;

                OnLookup=BEGIN
                           MATRIX_OnLookUp(12);
                         END;

                OnAssistEdit=BEGIN
                               MATRIX_OnAssistEdit(12);
                             END;
                              }

  }
  CODE
  {
    VAR
      SettlementQuantityManagement@1100528214 : Codeunit 11071690;
      MatrixRecords@1117 : ARRAY [12] OF Record 11012500;
      MATRIX_ColumnTempRec@1001 : Record 11012500;
      MATRIX_CurrNoOfMatrixColumns@1118 : Integer;
      MATRIX_CellData@1119 : ARRAY [12] OF Decimal;
      MATRIX_CaptionSet@1120 : ARRAY [32] OF Text[80];
      Job@1100525001 : Record 11072003;
      CellEditable@1100525013 : Boolean INDATASET;
      Text000@1100525005 : TextConst 'DEU=Sie dÅrfen nur Spalte 1 bis %1 bearbeiten.;ENU=You may only edit column 1 to %1.;NLD=U kunt alleen kolom 1 t/m %1 bewerken.;NOR=Du kan kun redigere kolonne 1 til %1.;SVE=Du kan bara redigera kolumn 1 till %1.';
      ColdQuantityEditable@1100528206 : Boolean INDATASET;
      SettlementPrice@1100528200 : Decimal;
      ShowRecordingType@1100528201 : 'Cold Recording,Warm Recording,Production';
      DateFilter@1100528205 : Date;
      TotalCold@1100528204 : Decimal;
      TotalWarm@1100528203 : Decimal;
      TotalProduction@1100528202 : Decimal;
      BaseQuantity@1100528208 : Decimal;
      CellsEditable@1100528212 : Boolean INDATASET;
      CellsNotEditable@1100528213 : Boolean INDATASET;
      ShowLinesUsed@1100528207 : Boolean;
      Text001@1100528210 : TextConst 'DEU=Nur ein Hausmodell auswÑhlen;ENU=Select one House Model only;NLD=Selectie mag maar een woningmodel bevatten.';
      Text002@1100528211 : TextConst 'DEU=Zeilen auswÑhlen;ENU=Select Lines;NLD=Selecteer regels.';

    PROCEDURE Load@1132(VAR lvJob@1100525000 : Record 11072003;VAR MatrixColumns1@1005 : ARRAY [32] OF Text[80];VAR MatrixRecords1@1006 : ARRAY [12] OF Record 11012500;CurrentNoOfMatrixColumns@1007 : Integer;lvShowRecordingType@1100528200 : 'Cold Recording,Warm Recording,Production';lvDateFilter@1100528201 : Date;lvShowLinesUsed@1100528202 : Boolean);
    VAR
      i@1008 : Integer;
    BEGIN
      ShowRecordingType := lvShowRecordingType;
      DateFilter := lvDateFilter;
      ShowLinesUsed := lvShowLinesUsed;

      SETRANGE("Project No.", lvJob."No.");
      IF FIND('=<>') THEN BEGIN
        Job.GET("Project No.");
      END;

      FOR i := 1 TO 12 DO BEGIN
        MATRIX_CaptionSet[i] := MatrixColumns1[i];
        IF MatrixRecords[i].GET(Job."No.", MatrixRecords1[i]."Plot No.") THEN;  //????
      END;

      MATRIX_CurrNoOfMatrixColumns := CurrentNoOfMatrixColumns;

      IF ShowRecordingType <> ShowRecordingType::"Cold Recording" THEN BEGIN
        CellEditable := TRUE;
        CellsEditable := TRUE;
        CellsNotEditable := FALSE;
        ColdQuantityEditable := FALSE;
      END ELSE BEGIN
        CellEditable := TRUE;
        CellsEditable := FALSE;
        CellsNotEditable := TRUE;
        ColdQuantityEditable := TRUE;
      END;

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE MATRIX_OnValidate@1100525001(MATRIX_ColumnOrdinal@1008 : Integer);
    VAR
      lPlot@1100528500 : Record 11012500;
    BEGIN
      IF MATRIX_ColumnOrdinal > MATRIX_CurrNoOfMatrixColumns THEN
        ERROR(Text000, MATRIX_CurrNoOfMatrixColumns);

      MATRIX_ColumnTempRec := MatrixRecords[MATRIX_ColumnOrdinal];

      lPlot.GET(MATRIX_ColumnTempRec."Project No.",MATRIX_ColumnTempRec."Plot No.");
      lPlot.TESTFIELD("MMR Phase", ShowRecordingType);

      IF lPlot."MMR Status" = lPlot."MMR Status"::Finished THEN
        lPlot.TESTFIELD("MMR Status", lPlot."MMR Status"::Open);

      SettlementQuantityManagement.Recording_UpdateQuantity(Rec,MATRIX_ColumnTempRec."Plot No.",DateFilter,ShowRecordingType,MATRIX_CellData[MATRIX_ColumnOrdinal]);

      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE MATRIX_OnLookUp@1100528202(MATRIX_ColumnOrdinal@1008 : Integer);
    VAR
      lPlot@1100528201 : Record 11012500;
      MajorMaintandRenovPlot@1100528200 : Page 11229528;
    BEGIN
      IF MATRIX_ColumnOrdinal > MATRIX_CurrNoOfMatrixColumns THEN
        ERROR(Text000, MATRIX_CurrNoOfMatrixColumns);

      MATRIX_ColumnTempRec := MatrixRecords[MATRIX_ColumnOrdinal];
      lPlot.GET(MATRIX_ColumnTempRec."Project No.",MATRIX_ColumnTempRec."Plot No.");
      lPlot.SETRANGE("Project No.", lPlot."Project No.");
      lPlot.SETRANGE("Plot No.", lPlot."Plot No.");
      MajorMaintandRenovPlot.SETTABLEVIEW(lPlot);
      MajorMaintandRenovPlot.SETRECORD(lPlot);
      MajorMaintandRenovPlot.RUNMODAL;
    END;

    LOCAL PROCEDURE MATRIX_OnDrillDown@1100528204(MATRIX_ColumnOrdinal@1008 : Integer);
    VAR
      PlotSQRecordingRec@1100528201 : Record 11072251;
      PlotSQRecording@1100528200 : Page 11229538;
    BEGIN
      IF MATRIX_ColumnOrdinal > MATRIX_CurrNoOfMatrixColumns THEN
        ERROR(Text000, MATRIX_CurrNoOfMatrixColumns);

      MATRIX_ColumnTempRec := MatrixRecords[MATRIX_ColumnOrdinal];

      PlotSQRecordingRec.SETRANGE("Project No.", MATRIX_ColumnTempRec."Project No.");
      PlotSQRecordingRec.SETRANGE("Plot No.", MATRIX_ColumnTempRec."Plot No.");
      PlotSQRecordingRec.SETRANGE(Phase, ShowRecordingType);
      PlotSQRecordingRec.SETRANGE("Recording Date",DateFilter);
      IF NOT PlotSQRecordingRec.FINDLAST THEN BEGIN
        PlotSQRecordingRec.INIT;
        PlotSQRecordingRec.VALIDATE("Project No.",  MATRIX_ColumnTempRec."Project No.");
        PlotSQRecordingRec.VALIDATE("Plot No.", MATRIX_ColumnTempRec."Plot No.");
        PlotSQRecordingRec."Seq. No." := 0; //numbering will be handled in OnInsert
        PlotSQRecordingRec.VALIDATE("Recording Date", DateFilter);
        PlotSQRecordingRec.VALIDATE(Phase, ShowRecordingType);
        PlotSQRecordingRec.INSERT(TRUE);
        COMMIT;
      END;
      PlotSQRecording.SETTABLEVIEW(PlotSQRecordingRec);
      PlotSQRecording.SETRECORD(PlotSQRecordingRec);
      PlotSQRecording.RUNMODAL;
    END;

    LOCAL PROCEDURE MATRIX_OnAssistEdit@1100525009(MATRIX_ColumnOrdinal@1008 : Integer);
    BEGIN
      IF MATRIX_ColumnOrdinal > MATRIX_CurrNoOfMatrixColumns THEN
        ERROR(Text000, MATRIX_CurrNoOfMatrixColumns);

      MATRIX_ColumnTempRec := MatrixRecords[MATRIX_ColumnOrdinal];
      ShowDocs(Rec,MATRIX_ColumnTempRec."Plot No.",DateFilter,ShowRecordingType,MATRIX_CellData[MATRIX_ColumnOrdinal]);

      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE MATRIX_OnAfterGetRecord@1135(MATRIX_ColumnOrdinal@1010 : Integer);
    BEGIN
      MATRIX_ColumnTempRec := MatrixRecords[MATRIX_ColumnOrdinal];
      MATRIX_CellData[MATRIX_ColumnOrdinal] := SettlementQuantityManagement.Recording_CalcQuantity(Rec,MATRIX_ColumnTempRec."Plot No.",DateFilter,ShowRecordingType);
    END;

    PROCEDURE CalcTotalQuantities@1100528201(VAR lTotalCold@1100528204 : Decimal;VAR lTotalWarm@1100528205 : Decimal;VAR lTotalProduction@1100528206 : Decimal;VAR lMeanQCold@1100528203 : Decimal);
    VAR
      PlotSQRecordingLine@1100528200 : Record 11072252;
      lvPlot@1100528201 : Record 11012500;
      NrOfPlots@1100528202 : Integer;
    BEGIN
      //The Totals per Recording Type
      lTotalCold := 0;
      lTotalWarm := 0;
      lTotalProduction := 0;
      lMeanQCold := 0;


      lvPlot.SETRANGE("Project No.", "Project No.");
      NrOfPlots := lvPlot.COUNT;
      IF lvPlot.FINDFIRST THEN
        REPEAT
          lTotalCold       := lTotalCold       + SettlementQuantityManagement.Recording_CalcQuantity(Rec,lvPlot."Plot No.",DateFilter,PlotSQRecordingLine.Phase::"Cold Recording");
          lTotalWarm       := lTotalWarm       + SettlementQuantityManagement.Recording_CalcQuantity(Rec,lvPlot."Plot No.",DateFilter,PlotSQRecordingLine.Phase::"Warm Recording");
          lTotalProduction := lTotalProduction + SettlementQuantityManagement.Recording_CalcQuantity(Rec,lvPlot."Plot No.",DateFilter,PlotSQRecordingLine.Phase::Production);
        UNTIL lvPlot.NEXT = 0;
    END;

    PROCEDURE GetBaseQuantity@1100528203(VAR SettlQuantity@1100528204 : Decimal);
    VAR
      SettlementQuantity@1100528200 : Record 11072243;
    BEGIN
      SettlQuantity := 0;

      IF Type = Type::Settlement THEN BEGIN
        SettlementQuantity.SETRANGE("Project No.", "Project No.");
        SettlementQuantity.SETRANGE("House Model", "House Model" );
        SettlementQuantity.SETRANGE(Code, Code);

        IF SettlementQuantity.FINDFIRST THEN BEGIN
            SettlQuantity := SettlementQuantity."Forecast Total Quantity";
        END;
      END;
    END;

    PROCEDURE ShowDocs@1100525002(PlotRecordingCrossList@1100528205 : Record 11072253;IplotNo@1100528204 : Code[20];IDateFilter@1100528203 : Date;IShowRecordingType@1100528201 : 'Cold Recording,Warm Recording,Production';NewQuantity@1100525000 : Decimal);
    VAR
      PlotRecordingListBaseLine@1100528202 : Record 11072254;
    BEGIN
      IF ("Project No." = '') OR (IplotNo = '') THEN
        EXIT;

      WITH PlotRecordingCrossList DO BEGIN
        PlotRecordingListBaseLine.SETRANGE("Project No.", "Project No.");
        PlotRecordingListBaseLine.SETRANGE("Plot No.", IplotNo);
        PlotRecordingListBaseLine.SETRANGE("House Model", "House Model" );
        PlotRecordingListBaseLine.SETRANGE("Line No.","Line No.");
        PlotRecordingListBaseLine.SETRANGE(Unit, Unit);
        IF NOT PlotRecordingListBaseLine.FINDFIRST THEN BEGIN
          PlotRecordingListBaseLine.INIT;
          PlotRecordingListBaseLine."Project No." := "Project No.";
          PlotRecordingListBaseLine."Plot No.":= IplotNo;
          PlotRecordingListBaseLine."House Model" := "House Model";
          PlotRecordingListBaseLine."Line No." := "Line No.";
          PlotRecordingListBaseLine.Unit := Unit;
          PlotRecordingListBaseLine.INSERT(TRUE);
        END;

        PlotRecordingListBaseLine.ShowDocuments()

      END;
    END;

    BEGIN
    END.
  }
}

