OBJECT Report 5852 Suggest Capacity Standard Cost
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=KapazitÑtseinst.-Preis vorschlagen;
               ENU=Suggest Work/Mach Ctr Std Cost;
               NLD=Vaste verrekenprijs bew.-plaats/afd. voorstellen;
               NOR=ForeslÜ std.kost for arb.sent/prod.ress.];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  StdCostWkshName@1002 : Record 5840;
                BEGIN
                  IF ToStdCostWkshName = '' THEN
                    ERROR(Text004);
                  StdCostWkshName.GET(ToStdCostWkshName);

                  ToStdCostWksh.LOCKTABLE
                END;

  }
  DATASET
  {
    { 8481;    ;DataItem;                    ;
               DataItemTable=Table99000754;
               OnPreDataItem=BEGIN
                               WindowUpdateDateTime := CURRENTDATETIME;
                               Window.OPEN(Text007 + Text008);
                             END;

               OnAfterGetRecord=BEGIN
                                  InsertStdCostWksh(1,"No.");
                                  IF CURRENTDATETIME - WindowUpdateDateTime >= 750 THEN BEGIN
                                    Window.UPDATE(1,"No.");
                                    WindowUpdateDateTime := CURRENTDATETIME;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                Window.CLOSE;
                              END;

               ReqFilterFields=No. }

    { 8429;    ;DataItem;                    ;
               DataItemTable=Table99000758;
               OnPreDataItem=BEGIN
                               WindowUpdateDateTime := CURRENTDATETIME;
                               Window.OPEN(Text007 + Text009);
                             END;

               OnAfterGetRecord=BEGIN
                                  InsertStdCostWksh(2,"No.");
                                  IF CURRENTDATETIME - WindowUpdateDateTime >= 750 THEN BEGIN
                                    Window.UPDATE(1,"No.");
                                    WindowUpdateDateTime := CURRENTDATETIME;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                Window.CLOSE;
                              END;

               ReqFilterFields=No. }

    { 5508;0   ;DataItem;                    ;
               DataItemTable=Table156;
               OnPreDataItem=BEGIN
                               WindowUpdateDateTime := CURRENTDATETIME;
                               Window.OPEN(Text007 + Text010);
                             END;

               OnAfterGetRecord=BEGIN
                                  InsertStdCostWksh(3,"No.");
                                  IF CURRENTDATETIME - WindowUpdateDateTime >= 750 THEN BEGIN
                                    Window.UPDATE(1,"No.");
                                    WindowUpdateDateTime := CURRENTDATETIME;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                Window.CLOSE;
                              END;
                               }

    { 5444;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=VAR
                   i@1000 : Integer;
                 BEGIN
                   FOR i := 1 TO ARRAYLEN(AmtAdjustFactor) DO
                     IF AmtAdjustFactor[i] = 0 THEN
                       AmtAdjustFactor[i] := 1;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 8   ;2   ;Group     ;
                  CaptionML=[DEU=Einstandspreis (fest);
                             ENU=Standard Cost;
                             NLD=Vaste verrekenprijs;
                             NOR=Kostpris (standard);
                             SVE=Standardkostnad] }

      { 18  ;3   ;Field     ;
                  CaptionML=[DEU=Korrekturfaktor;
                             ENU=Adjustment Factor;
                             NLD=Herwaarderingsfactor;
                             NOR=Justeringsfaktor];
                  ToolTipML=[DEU=Gibt einen Korrekturfaktor an, mit dem die KapazitÑt, die Sie vorschlagen mîchten, multipliziert werden. Durch die Eingabe eines Korrekturfaktors kînnen Sie die BetrÑge erhîhen oder verringern, die vorgeschlagen werden.;
                             ENU=Specifies an adjustment factor to multiply the capacity that you want suggested. By entering an adjustment factor, you can increase or decrease the amounts that are suggested.;
                             NLD=Hiermee wordt een herwaarderingsfactor opgegeven om de capaciteit mee te vermenigvuldigen die u wilt voorstellen. Door een herwaarderingsfactor in te voeren kunt u de bedragen die worden voorgesteld, verhogen of verlagen.;
                             NOR=Angir en justeringsfaktor for Ü multiplisere kapasiteten du vil foreslÜ. Ved Ü angi en justeringsfaktor, kan du õke eller minske belõpene som foreslÜs.];
                  ApplicationArea=#Manufacturing;
                  DecimalPlaces=0:5;
                  NotBlank=Yes;
                  SourceExpr=AmtAdjustFactor[1];
                  MinValue=0 }

      { 14  ;3   ;Field     ;
                  CaptionML=[DEU=Rundungsmethode;
                             ENU=Rounding Method;
                             NLD=Afrondingsmethode;
                             NOR=Avrundingsmetode;
                             SVE=Avrundningsmetod];
                  ToolTipML=[DEU=Gibt einen Code fÅr die Rundungsmethode an, die auf zu regulierende Kosten angewendet werden soll.;
                             ENU=Specifies a code for the rounding method that you want to apply to costs that you adjust.;
                             NLD=Hiermee wordt een code opgegeven voor de afrondingsmethode die u wilt toepassen op kosten die u herwaardeert.;
                             NOR=Angir en kode for avrundingsmetoden du vil bruke pÜ kostnader du justerer.];
                  ApplicationArea=#Manufacturing;
                  SourceExpr=RoundingMethod[1];
                  TableRelation="Rounding Method" }

      { 10  ;2   ;Group     ;
                  CaptionML=[DEU=Indirekte Kosten %;
                             ENU=Indirect Cost %;
                             NLD=Indirecte kosten %;
                             NOR=Indirekte kost-%;
                             SVE=Indirekt kostnad %] }

      { 1   ;3   ;Field     ;
                  CaptionML=[DEU=Korrekturfaktor;
                             ENU=Adjustment Factor;
                             NLD=Herwaarderingsfactor;
                             NOR=Justeringsfaktor];
                  ToolTipML=[DEU=Gibt einen Korrekturfaktor an, mit dem die KapazitÑt, die Sie vorschlagen mîchten, multipliziert werden. Durch die Eingabe eines Korrekturfaktors kînnen Sie die BetrÑge erhîhen oder verringern, die vorgeschlagen werden.;
                             ENU=Specifies an adjustment factor to multiply the capacity that you want suggested. By entering an adjustment factor, you can increase or decrease the amounts that are suggested.;
                             NLD=Hiermee wordt een herwaarderingsfactor opgegeven om de capaciteit mee te vermenigvuldigen die u wilt voorstellen. Door een herwaarderingsfactor in te voeren kunt u de bedragen die worden voorgesteld, verhogen of verlagen.;
                             NOR=Angir en justeringsfaktor for Ü multiplisere kapasiteten du vil foreslÜ. Ved Ü angi en justeringsfaktor, kan du õke eller minske belõpene som foreslÜs.];
                  ApplicationArea=#Manufacturing;
                  DecimalPlaces=0:5;
                  NotBlank=Yes;
                  SourceExpr=AmtAdjustFactor[2];
                  MinValue=0 }

      { 2   ;3   ;Field     ;
                  CaptionML=[DEU=Rundungsmethode;
                             ENU=Rounding Method;
                             NLD=Afrondingsmethode;
                             NOR=Avrundingsmetode;
                             SVE=Avrundningsmetod];
                  ToolTipML=[DEU=Gibt einen Code fÅr die Rundungsmethode an, die auf zu regulierende Kosten angewendet werden soll.;
                             ENU=Specifies a code for the rounding method that you want to apply to costs that you adjust.;
                             NLD=Hiermee wordt een code opgegeven voor de afrondingsmethode die u wilt toepassen op kosten die u herwaardeert.;
                             NOR=Angir en kode for avrundingsmetoden du vil bruke pÜ kostnader du justerer.];
                  ApplicationArea=#Manufacturing;
                  SourceExpr=RoundingMethod[2];
                  TableRelation="Rounding Method" }

      { 11  ;2   ;Group     ;
                  CaptionML=[DEU=Gemeinkostensatz;
                             ENU=Overhead Rate;
                             NLD=Overheadtarief;
                             NOR=Sats for indirekte kostnader;
                             SVE=Omkostnad] }

      { 3   ;3   ;Field     ;
                  CaptionML=[DEU=Korrekturfaktor;
                             ENU=Adjustment Factor;
                             NLD=Herwaarderingsfactor;
                             NOR=Justeringsfaktor];
                  ToolTipML=[DEU=Gibt einen Korrekturfaktor an, mit dem die KapazitÑt, die Sie vorschlagen mîchten, multipliziert werden. Durch die Eingabe eines Korrekturfaktors kînnen Sie die BetrÑge erhîhen oder verringern, die vorgeschlagen werden.;
                             ENU=Specifies an adjustment factor to multiply the capacity that you want suggested. By entering an adjustment factor, you can increase or decrease the amounts that are suggested.;
                             NLD=Hiermee wordt een herwaarderingsfactor opgegeven om de capaciteit mee te vermenigvuldigen die u wilt voorstellen. Door een herwaarderingsfactor in te voeren kunt u de bedragen die worden voorgesteld, verhogen of verlagen.;
                             NOR=Angir en justeringsfaktor for Ü multiplisere kapasiteten du vil foreslÜ. Ved Ü angi en justeringsfaktor, kan du õke eller minske belõpene som foreslÜs.];
                  ApplicationArea=#Manufacturing;
                  DecimalPlaces=0:5;
                  NotBlank=Yes;
                  SourceExpr=AmtAdjustFactor[3];
                  MinValue=0 }

      { 4   ;3   ;Field     ;
                  CaptionML=[DEU=Rundungsmethode;
                             ENU=Rounding Method;
                             NLD=Afrondingsmethode;
                             NOR=Avrundingsmetode;
                             SVE=Avrundningsmetod];
                  ToolTipML=[DEU=Gibt einen Code fÅr die Rundungsmethode an, die auf zu regulierende Kosten angewendet werden soll.;
                             ENU=Specifies a code for the rounding method that you want to apply to costs that you adjust.;
                             NLD=Hiermee wordt een code opgegeven voor de afrondingsmethode die u wilt toepassen op kosten die u herwaardeert.;
                             NOR=Angir en kode for avrundingsmetoden du vil bruke pÜ kostnader du justerer.];
                  ApplicationArea=#Manufacturing;
                  SourceExpr=RoundingMethod[3];
                  TableRelation="Rounding Method" }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text004@1003 : TextConst 'DEU=Sie mÅssen angeben, in welchen Vorschlagsnamen kopiert werden soll.;ENU=You must specify a worksheet name to copy to.;NLD=U moet een voorstelnaam opgeven om naar te kopiâren.;NOR=Du mÜ angi hvilket forslagsnavn det skal kopieres til.';
      Text007@1006 : TextConst 'DEU=Vorschlag wird kopiert ...\\;ENU=Copying worksheet...\\;NLD=Kopiâren voorstel...\\;NOR=Kopierer forslag...\\';
      Text008@1007 : TextConst 'DEU=Arbeitsplatzgruppennr.    #1####################\;ENU=Work Center No. #1####################\;NLD=Afdelingsnr.       #1####################\;NOR=Arbeidssenternr.   #1####################\';
      Text009@1004 : TextConst 'DEU=Arbeitsplatznr.           #1####################\;ENU=Machine Center No. #1####################\;NLD=Bew.-plaatsnr.     #1####################\;NOR=Maskinsenternr.    #1####################\';
      ToStdCostWksh@1010 : Record 5841;
      Window@1001 : Dialog;
      ToStdCostWkshName@1026 : Code[10];
      RoundingMethod@1015 : ARRAY [3] OF Code[10];
      AmtAdjustFactor@1031 : ARRAY [3] OF Decimal;
      WindowUpdateDateTime@1002 : DateTime;
      Text010@1000 : TextConst 'DEU=Ressourcennr.             #1####################\;ENU=Resource No. #1####################\;NLD=Resourcenr.        #1####################\;NOR=Ressursnr.         #1####################\';

    LOCAL PROCEDURE InsertStdCostWksh@4(Type2@1001 : Option;No2@1000 : Code[20]);
    BEGIN
      WITH ToStdCostWksh DO BEGIN
        INIT;
        VALIDATE("Standard Cost Worksheet Name",ToStdCostWkshName);
        VALIDATE(Type,Type2);
        VALIDATE("No.",No2);

        VALIDATE(
          "New Standard Cost",
          RoundAndAdjustAmt("Standard Cost",RoundingMethod[1],AmtAdjustFactor[1]));
        VALIDATE(
          "New Indirect Cost %",
          RoundAndAdjustAmt("Indirect Cost %",RoundingMethod[2],AmtAdjustFactor[2]));
        VALIDATE(
          "New Overhead Rate",
          RoundAndAdjustAmt("Overhead Rate",RoundingMethod[3],AmtAdjustFactor[3]));

        IF NOT INSERT(TRUE) THEN
          MODIFY(TRUE);
      END;
    END;

    [External]
    PROCEDURE RoundAndAdjustAmt@8(Amt@1000 : Decimal;RoundingMethodCode@1001 : Code[10];AmtAdjustFactor@1005 : Decimal) : Decimal;
    VAR
      RoundingMethod@1002 : Record 42;
      Sign@1004 : Decimal;
    BEGIN
      IF Amt = 0 THEN
        EXIT(Amt);

      Amt := ROUND(Amt * AmtAdjustFactor,0.00001);

      IF RoundingMethodCode <> '' THEN
        WITH RoundingMethod DO BEGIN
          IF Amt >= 0 THEN
            Sign := 1
          ELSE
            Sign := -1;

          SETRANGE(Code,RoundingMethodCode);
          Code := RoundingMethodCode;
          "Minimum Amount" := ABS(Amt);
          IF FIND('=<') THEN BEGIN
            Amt := Amt + Sign * "Amount Added Before";
            IF Precision > 0 THEN
              Amt := Sign * ROUND(ABS(Amt),Precision,COPYSTR('=><',Type + 1,1));
            Amt := Amt + Sign * "Amount Added After";
          END;
        END;

      EXIT(Amt);
    END;

    [External]
    PROCEDURE SetCopyToWksh@3(ToStdCostWkshName2@1001 : Code[10]);
    BEGIN
      ToStdCostWkshName := ToStdCostWkshName2;
    END;

    [External]
    PROCEDURE Initialize@1(ToStdCostWkshName2@1004 : Code[10];AmtAdjustFactor1@1007 : Decimal;AmtAdjustFactor2@1000 : Decimal;AmtAdjustFactor3@1001 : Decimal;RoundingMethod1@1008 : Code[10];RoundingMethod2@1002 : Code[10];RoundingMethod3@1003 : Code[10]);
    BEGIN
      ToStdCostWkshName := ToStdCostWkshName2;
      AmtAdjustFactor[1] := AmtAdjustFactor1;
      AmtAdjustFactor[2] := AmtAdjustFactor2;
      AmtAdjustFactor[3] := AmtAdjustFactor3;
      RoundingMethod[1] := RoundingMethod1;
      RoundingMethod[2] := RoundingMethod2;
      RoundingMethod[3] := RoundingMethod3;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

