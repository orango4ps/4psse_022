OBJECT Codeunit 11012243 Create Plant Nos. Purch. Lines
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=39;
    OnRun=BEGIN
            PurchLineRec.COPY(Rec);
            CreateUniquePlantNumbers();
          END;

  }
  CODE
  {
    VAR
      Text000@1100525004 : TextConst 'DEU=Werkzeugnummern fÅr einzelnes Werkzeug erstellen?;ENU=Create plant numbers for unique plant?;NLD=Materieelnummers voor uniek materieel aanmaken?;NOR=Opprette maskinnr. for unik maskin?;SVE=Skapa Maskinsnummer fîr unik Maskin?';
      Text001@1100525000 : TextConst 'DEU=soll Vielfalt von 1 sein;ENU=must be multiple of 1;NLD=moet veelvoud zijn van 1;NOR=mÜ vëre flere enn Çn;SVE=mÜste vara fler Ñn en';
      PlantSetupRec@1100525002 : Record 11012550;
      PurchLineRec@1100525001 : Record 39;
      PurchOrderRec@1100525003 : Record 38;

    LOCAL PROCEDURE CreateUniquePlantNumbers@1100525024();
    VAR
      PurchLineRec2@1100525001 : Record 39;
      PurchLineRec3@1100525006 : Record 39;
      PlantTypeRec@1100525010 : Record 11012551;
      NewPlantNo@1100525007 : Code[10];
      NextLineNo@1100525002 : Integer;
      Step@1100525003 : Integer;
      PlantQuantity@1100525004 : Integer;
      I@1100525005 : Integer;
      UnitCost@1100525009 : Decimal;
    BEGIN
      WITH PurchLineRec DO BEGIN
        FILTERGROUP(8);
        SETRANGE("Document Type", "Document Type"::Order);
        SETRANGE("Document No.", "Document No.");
        SETRANGE("Receiving Company", '');
        SETFILTER("Plant Type", '<>%1', '');
        SETRANGE("Plant No.", '');
        SETRANGE(Bulk, FALSE);
        SETFILTER(Quantity, '<>%1', 0);
        SETRANGE("Quantity Received", 0);
        SETFILTER("Cost Component Plant", '<>%1', '');
        IF ISEMPTY THEN
          EXIT;
        PlantSetupRec.GET;
        PlantSetupRec.TESTFIELD("Cost Component Acquisition");
        SETRANGE("Cost Component Plant", PlantSetupRec."Cost Component Acquisition");
        IF PlantSetupRec."Cost Component Rent" <> '' THEN
          SETFILTER("Cost Component Plant", '%1|%2', PlantSetupRec."Cost Component Acquisition", PlantSetupRec."Cost Component Rent");
        FILTERGROUP(0);

        IF NOT FINDSET(TRUE,FALSE) THEN
          EXIT;
        PurchOrderRec.GET("Document Type", "Document No.");

        REPEAT
          PlantTypeRec.GET("Plant Type");
          IF "Qty. per Unit of Measure" = 1 THEN BEGIN
            IF (Quantity MOD 1) <> 0 THEN
              FIELDERROR(Quantity, Text001);
            PlantQuantity := Quantity;
            UnitCost := "Direct Unit Cost";
          END ELSE BEGIN
            IF ("Quantity (Base)" MOD 1) <> 0 THEN
              FIELDERROR("Quantity (Base)", Text001);
            PlantQuantity := "Quantity (Base)";
            IF "Qty. per Unit of Measure" <> 0 THEN
              UnitCost := "Direct Unit Cost" / "Qty. per Unit of Measure"
            ELSE
              UnitCost := "Direct Unit Cost" / ("Quantity (Base)" / Quantity);
          END;
          NextLineNo := 0;
          Step := 0;
          IF PlantQuantity > 1 THEN BEGIN
            PurchLineRec2.SETRANGE("Document Type", "Document Type");
            PurchLineRec2.SETRANGE("Document No.", "Document No.");
            PurchLineRec2.SETFILTER("Line No.", '>%1', "Line No.");
            IF PurchLineRec2.FINDFIRST THEN BEGIN
              IF (PurchLineRec2."Line No." - PurchLineRec."Line No.") >= PlantQuantity THEN BEGIN
                Step := 1;
                IF (PurchLineRec2."Line No." - PurchLineRec."Line No.") >= (PlantQuantity * 10) THEN
                  Step := 10;
                NextLineNo := PurchLineRec."Line No." + Step;  //* Current Line + step (so Rec and not Rec2)
              END;
            END;
            IF NextLineNo = 0 THEN BEGIN
              Step := 10000;;
              PurchLineRec2.SETRANGE("Line No.");  //* Reset filter
              IF PurchLineRec2.FINDLAST THEN
                NextLineNo := PurchLineRec2."Line No.";
              NextLineNo := NextLineNo + Step;
            END;
          END;
          FOR I := 1 TO PlantQuantity DO BEGIN
            NewPlantNo := CreatePlantNumber();
            IF I = 1 THEN BEGIN
              Quantity := 0;  //*28991.n
              VALIDATE("Plant No.", NewPlantNo);
              VALIDATE(Quantity, 1);
              IF "Unit of Measure Code" <> PlantTypeRec."Unit of Measure" THEN
                VALIDATE("Unit of Measure Code", PlantTypeRec."Unit of Measure");
              VALIDATE("Direct Unit Cost", UnitCost);
              MODIFY(TRUE);
              PurchLineRec3."Line No." := "Line No.";
            END ELSE BEGIN
              PurchLineRec3 := PurchLineRec;
              PurchLineRec3."Line No." := NextLineNo;
              PurchLineRec3."Plant No." := '';
              PurchLineRec3.INSERT(FALSE);
              PurchLineRec3.VALIDATE("Plant No.", NewPlantNo);
              PurchLineRec3.VALIDATE(Quantity, 1);
              PurchLineRec3.VALIDATE("Direct Unit Cost", UnitCost);
              PurchLineRec3.MODIFY(TRUE);
              NextLineNo := NextLineNo + Step;
            END;
          END;
        UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CreatePlantNumber@1100525000() : Code[10];
    VAR
      PlantTypeRec@1100525001 : Record 11012551;
      PlantNoRec@1100525000 : Record 11012552;
    BEGIN
      WITH PurchLineRec DO BEGIN
        PlantNoRec.INIT;
        PlantNoRec."Plant Type" := "Plant Type";
        PlantNoRec."No." := '';
        PlantNoRec.INSERT(TRUE);
        PlantNoRec.TESTFIELD("No.");

        PlantNoRec.Description := COPYSTR(Description, 1, MAXSTRLEN(PlantNoRec.Description));
        PlantNoRec.VALIDATE(Description);
        PlantNoRec.Vendor := "Buy-from Vendor No.";
        IF ("Shortcut Dimension 1 Code" <> '') THEN
          PlantNoRec.VALIDATE("Department Code", "Shortcut Dimension 1 Code")
        ELSE BEGIN
          PlantTypeRec.GET("Plant Type");
          PlantNoRec.VALIDATE("Department Code", PlantTypeRec."Department Code");
        END;
        PlantNoRec.Quantity := 0;
        PlantNoRec.External := FALSE;
        IF ("Cost Component Plant" = PlantSetupRec."Cost Component Rent") AND (PlantSetupRec."Cost Component Rent" <> '') THEN
          PlantNoRec.External := TRUE;
        PlantNoRec."Receipt Date" := 0D;
        PlantNoRec."Fixed Asset" := '';
        PlantNoRec."Ship To Location" := '';
        PlantNoRec."Purchase Order No." := "Document No.";
        PlantNoRec.MODIFY(TRUE);

        EXIT(PlantNoRec."No.");
      END;
    END;

    PROCEDURE ConfirmCreate@1100525001() : Boolean;
    BEGIN
      IF CONFIRM(Text000) THEN
        EXIT(TRUE);
    END;

    BEGIN
    {
      Create plantnumber(s) for purchase order lines (only for "Cost Component Acquisition").
      Only for unique plant and only if the Plant No. is not filled yet on de order line.
      There is also created a Fixed Asset for the new plant number.
      Is only done when the plant is in the same company as the order. So if the receiving company is empty.
      But this is always the case (now), because the receiving company can not be entered on order line.
      Note: When a plant number is created on a receipt, this is also only done for receiving company is empty.
      18-04-2017: Now also for Rent ("Cost Component Rent")
    }
    END.
  }
}

