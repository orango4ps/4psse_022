OBJECT Codeunit 11012783 Department Authorization Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GenLedgerSetup@1100485002 : Record 98;
      UserSetup@1100485003 : Record 91;
      AccScheduleName@1100525005 : Record 84;
      AnalysisView@1100525004 : Record 363;
      ItemAnalysisView@1100528400 : Record 7152;
      HasGotUserSetup@1100485004 : Boolean;
      HardFilter@1100485001 : Boolean;
      HardFlowFilter@1100525000 : Boolean;
      AccessFilter@1100485000 : Text;
      AccessFlowFilter@1100525001 : Text;
      MainTableID@1100485005 : Integer;
      Text000@1100525003 : TextConst 'ENU=The %1 you have entered cannot be found within the department authorisation filter %2.;NOR=Den %1 du har angitt kan ikke finnes i avdelingsautorisasjonsfilter %2.;SVE=Den %1 du har angett kan inte hittas i filtret f”r avdelningstillst†nd %2.';
      AlternativeUserID@1100285300 : Code[50];
      gvWSUserID@1100525002 : Text[50];

    PROCEDURE AuthorizationActive@1100485004() : Boolean;
    BEGIN
      IF NOT GenLedgerSetup.GET THEN
        EXIT(FALSE); //This can only happen in a brandnew Company

      IF GenLedgerSetup."Department Authoriz. Active" THEN
        GetUserSetup;
      EXIT(GenLedgerSetup."Department Authoriz. Active" AND UserSetup."Department Authoriz. Active");
    END;

    PROCEDURE GetUserSetup@1100485009();
    BEGIN
      IF NOT HasGotUserSetup THEN BEGIN
        IF gvWSUserID <> '' THEN
          UserSetup.GET(gvWSUserID)
        ELSE
      //4PSSE, 151104
        IF AlternativeUserID <> '' THEN
          UserSetup.GET(AlternativeUserID)
        ELSE
      //<<4PSSE
          UserSetup.GET(USERID);
        IF UserSetup."Department Authoriz. Active" THEN BEGIN
          UserSetup.TESTFIELD("Department Code");
          UserSetup.TESTFIELD("Department Code Filter");
        END;
        HasGotUserSetup := TRUE;
      END;
    END;

    PROCEDURE GetUserDepartmentCode@1100485100() : Code[20];
    BEGIN
      GetUserSetup;
      EXIT(UserSetup."Department Code");
    END;

    PROCEDURE GetUserDepartmentFilter@1100485008() : Text;
    BEGIN
      GetUserSetup;
      IF UserSetup."Department Code Filter" = '*' THEN
        EXIT('')
      ELSE
      //>>190320
      //  EXIT(UserSetup."Department Code Filter");
        EXIT(UserSetup.GetDepartmentCodeFilter);
      //<<190320
    END;

    PROCEDURE GetTableIDFromTableName@1100528000(TableName@1100528000 : Text[30]) : Integer;
    VAR
      Object@1100528001 : Record 2000000001;
    BEGIN
      Object.SETCURRENTKEY(Type, Name);
      Object.SETRANGE(Type, Object.Type::Table);
      Object.SETRANGE(Name, TableName); //call C000261
      IF Object.FINDFIRST THEN
        EXIT(Object.ID);
    END;

    PROCEDURE DepartmentCodeAllowed@1000000002(lDim1Code@1100485000 : Code[20]) : Boolean;
    BEGIN
      GetUserSetup;
      //>>190320
      // EXIT(CodeInFilter(lDim1Code,UserSetup."Department Code Filter"));
      EXIT(CodeInFilter(lDim1Code,UserSetup.GetDepartmentCodeFilter));
      //<<190320
    END;

    PROCEDURE CodeInFilter@1100485006(lCode@1100485000 : Code[20];lFilter@1100485001 : Text) : Boolean;
    VAR
      TmpRec@1100485002 : TEMPORARY Record 352;
    BEGIN
      //190320, lFilter Text[250] -> Text[]

      IF lFilter='*' THEN
        EXIT(TRUE);
      TmpRec.RESET;
      TmpRec.DELETEALL;
      TmpRec."Dimension Value Code" := lCode;
      TmpRec.INSERT;
      TmpRec.SETFILTER("Dimension Value Code", lFilter);
      EXIT(TmpRec.FIND('-'));
    END;

    PROCEDURE InitAccessFilter@1100485001(lTableName@1100485000 : Text[50];PageID@1100485001 : Integer);
    VAR
      DepartmAuthObjectRec@1100485002 : Record 11012466;
    BEGIN
      AccessFilter := '';
      HardFilter := FALSE;
      MainTableID := 0;

      DepartmAuthObjectRec.SETRANGE(Type,DepartmAuthObjectRec.Type::Table);
      DepartmAuthObjectRec.SETFILTER(Name,lTableName);
      IF DepartmAuthObjectRec.FIND('-') THEN BEGIN
        MainTableID := DepartmAuthObjectRec.ID;
        IF DepartmAuthObjectRec."Dimension 1 Code Filter" = DepartmAuthObjectRec."Dimension 1 Code Filter"::Hard THEN
          HardFilter := TRUE;
        IF DepartmAuthObjectRec."Dimension 1 Code Filter" <> DepartmAuthObjectRec."Dimension 1 Code Filter"::None THEN
          AccessFilter := GetUserDepartmentFilter;
      END;

      DepartmAuthObjectRec.RESET;
      DepartmAuthObjectRec.SETRANGE(Type,DepartmAuthObjectRec.Type::Page);
      DepartmAuthObjectRec.SETRANGE(ID, PageID);
      IF DepartmAuthObjectRec.FIND('-') THEN BEGIN
        IF DepartmAuthObjectRec."Dimension 1 Code Filter" = DepartmAuthObjectRec."Dimension 1 Code Filter"::Hard THEN
          HardFilter := TRUE;
        IF DepartmAuthObjectRec."Dimension 1 Code Filter" <> DepartmAuthObjectRec."Dimension 1 Code Filter"::None THEN
          AccessFilter := GetUserDepartmentFilter;
      END;
    END;

    PROCEDURE IsHardFilter@1100485002() : Boolean;
    BEGIN
      EXIT(HardFilter);
    END;

    PROCEDURE GetAccessFilter@1100485003() : Text;
    BEGIN
      EXIT(AccessFilter);
    END;

    PROCEDURE GetNoSeriesDepartmentCode@1100485005(NewNoSeries@1100485000 : Code[20];OldNoSeries@1100485001 : Code[20];TableId@1100485003 : Integer) : Code[20];
    VAR
      NoSeries@1100485002 : Record 308;
      DepartmAuthObjectRec@1100485004 : Record 11012466;
    BEGIN
      DepartmAuthObjectRec.SETRANGE(Type,DepartmAuthObjectRec.Type::Table);
      DepartmAuthObjectRec.SETRANGE(ID,TableId);
      IF DepartmAuthObjectRec.FIND('-') THEN
        IF DepartmAuthObjectRec."Dimension 1 Code Filter" = DepartmAuthObjectRec."Dimension 1 Code Filter"::None THEN
          EXIT; //No Default Department

      IF NewNoSeries = '' THEN
        NewNoSeries := OldNoSeries;
      IF NoSeries.GET(NewNoSeries) THEN BEGIN
        IF NoSeries."Department Code" <> '' THEN
          EXIT(NoSeries."Department Code")
        ELSE
          EXIT(GetUserDepartmentCode);
      END ELSE
        EXIT(GetUserDepartmentCode);
    END;

    PROCEDURE SetDepartmentCodeUser@1000000004(TableName@1100528000 : Text[30];VAR DepartmentCode@1000000000 : Code[20]);
    VAR
      DepartmAuthObjectRec@1100485000 : Record 11012466;
    BEGIN
      GetUserSetup;
      IF DepartmentCode <> '' THEN
      //>>190320
      //  IF CodeInFilter(DepartmentCode,UserSetup."Department Code Filter") THEN
        IF CodeInFilter(DepartmentCode,UserSetup.GetDepartmentCodeFilter) THEN
      //<<190320
          EXIT;

      DepartmAuthObjectRec.SETRANGE(Type,DepartmAuthObjectRec.Type::Table);
      //**4PS.dbeekman.sn: M26308, Page Triggers (e.g. OnNewRec) reset Source Table's global var's (including DPA_Mgmnt)
      DepartmAuthObjectRec.SETRANGE(ID, GetTableIDFromTableName(TableName));

      IF NOT DepartmAuthObjectRec.FIND('-') THEN
        EXIT; //Not exist, handle same as 'DepartmAuthObjectRec."Dimension 1 Code Filter"::None'
      IF DepartmAuthObjectRec."Dimension 1 Code Filter" = DepartmAuthObjectRec."Dimension 1 Code Filter"::None THEN
        EXIT; //No Default Department

      DepartmentCode := UserSetup."Department Code";
    END;

    PROCEDURE SetDepartmentCodeNoSeries@1000000006(TableName@1100528000 : Text[30];VAR DepartmentCode@1000000000 : Code[20];NewNoSeries@1100485000 : Code[20];OldNoSeries@1100485001 : Code[20]);
    VAR
      NoSeries@1100485002 : Record 308;
      DepartmAuthObjectRec@1100485003 : Record 11012466;
    BEGIN
      GetUserSetup;
      IF DepartmentCode <> '' THEN
      //>>190320
      //  IF CodeInFilter(DepartmentCode,UserSetup."Department Code Filter") THEN
        IF CodeInFilter(DepartmentCode,UserSetup.GetDepartmentCodeFilter) THEN
      //<<190320
          EXIT;

      DepartmAuthObjectRec.SETRANGE(Type,DepartmAuthObjectRec.Type::Table);
      //**4PS.dbeekman.sn: M26308, Page Triggers (e.g. OnNewRec) reset Source Table's global var's (including DPA_Mgmnt)
      DepartmAuthObjectRec.SETRANGE(ID, GetTableIDFromTableName(TableName));

      IF DepartmAuthObjectRec.FIND('-') THEN
        IF DepartmAuthObjectRec."Dimension 1 Code Filter" = DepartmAuthObjectRec."Dimension 1 Code Filter"::None THEN
          EXIT; //No Default Department

      IF NewNoSeries = '' THEN
        NewNoSeries := OldNoSeries;
      IF NoSeries.GET(NewNoSeries) THEN BEGIN
        IF NoSeries."Department Code" <> '' THEN
          DepartmentCode := NoSeries."Department Code"
        ELSE
          DepartmentCode := GetUserDepartmentCode;
      END ELSE
        DepartmentCode := GetUserDepartmentCode;
    END;

    PROCEDURE SetDPAFilterFromContext@1100525002(VAR RecRef@1100525000 : RecordRef;ContextID@1100525001 : Text[30];FieldNoDepartmentCode@1100525008 : Integer;FieldNoDepartmentFlowFilter@1100525007 : Integer);
    VAR
      DepartmentAuthorizObject@1100525002 : Record 11012466;
      DepartmentAuthorizationMgt@1100525004 : Codeunit 11012783;
      FldRef@1100525003 : FieldRef;
    BEGIN
      IF NOT AuthorizationActive THEN
        EXIT;

      ClearAccessFilters;

      //get table filter
      CalcFlexibleDepmtFieldNo(RecRef.NUMBER, FieldNoDepartmentCode);
      DepartmentAuthorizObject.SETRANGE(Type,DepartmentAuthorizObject.Type::Table);
      DepartmentAuthorizObject.SETRANGE(ID,RecRef.NUMBER);
      IF DepartmentAuthorizObject.FIND('-') THEN BEGIN
        MainTableID := DepartmentAuthorizObject.ID;
        SetTableAccessFilter(RecRef.NUMBER);

        //apply flowfilter
        CalcFlexDepmtFlowFilterFieldNo(RecRef.NUMBER, FieldNoDepartmentFlowFilter);
        IF (FieldNoDepartmentFlowFilter <> 0) AND
           (DepartmentAuthorizObject."FlowFilter Auth. From" <> 0)
        THEN BEGIN
          DepartmentAuthorizationMgt.SetTableAccessFilter(DepartmentAuthorizObject."FlowFilter Auth. From");
          HardFlowFilter := DepartmentAuthorizationMgt.IsHardFilter;
          AccessFlowFilter := DepartmentAuthorizationMgt.GetAccessFilter;
          IF AccessFlowFilter <> '' THEN BEGIN
            RecRef.FILTERGROUP(GetFilterGroupFlowFilter(ContextID));
            FldRef := RecRef.FIELD(FieldNoDepartmentFlowFilter);
            FldRef.SETFILTER(AccessFlowFilter);
            RecRef.FILTERGROUP(0);
          END;
        END;
      END;

      //get page filter
      IF IsContextPage(ContextID) THEN
        SetPageAccessFilter(ContextID);

      //apply department filter
      IF (AccessFilter <> '') AND (FieldNoDepartmentCode <> 0) THEN BEGIN
        RecRef.FILTERGROUP(GetFilterGroupFieldFilter(ContextID));
        FldRef := RecRef.FIELD(FieldNoDepartmentCode);
        FldRef.SETFILTER(AccessFilter);
        RecRef.FILTERGROUP(0);
      END;
    END;

    PROCEDURE HasTableHardFilter@1100525003(TableID@1100485000 : Integer) : Boolean;
    BEGIN
      SetTableAccessFilter(TableID);
      EXIT(HardFilter);
    END;

    PROCEDURE SetTableAccessFilter@1100485007(lTableID@1100485000 : Integer);
    VAR
      DepartmAuthObjectRec@1100485002 : Record 11012466;
    BEGIN
      AccessFilter := '';
      HardFilter := FALSE;

      DepartmAuthObjectRec.SETRANGE(Type, DepartmAuthObjectRec.Type::Table);
      DepartmAuthObjectRec.SETRANGE(ID, lTableID);
      IF DepartmAuthObjectRec.FIND('-') THEN BEGIN
        IF DepartmAuthObjectRec."Dimension 1 Code Filter" = DepartmAuthObjectRec."Dimension 1 Code Filter"::Hard THEN
          HardFilter := TRUE;
        IF DepartmAuthObjectRec."Dimension 1 Code Filter" <> DepartmAuthObjectRec."Dimension 1 Code Filter"::None THEN BEGIN
          AccessFilter := GetUserDepartmentFilter;
          IF DepartmAuthObjectRec."Allow Empty Code" THEN
            IF AccessFilter <> '' THEN
              AccessFilter := AccessFilter + '|'''''
            ELSE
              AccessFilter := ''''''
        END;
      END;
    END;

    LOCAL PROCEDURE SetPageAccessFilter@1100525005(PageID@1100485000 : Text[30]);
    VAR
      DepartmAuthObjectRec@1100485002 : Record 11012466;
      PageNoString@1100525001 : Text[30];
      PageNo@1100525000 : Integer;
    BEGIN
      PageNoString := DELCHR(PageID,'=',DELCHR(PageID,'=','0123456789'));
      IF PageNoString = '' THEN
        EXIT;
      EVALUATE(PageNo,PageNoString);

      DepartmAuthObjectRec.SETRANGE(Type,DepartmAuthObjectRec.Type::Page);
      DepartmAuthObjectRec.SETRANGE(ID,PageNo);
      IF DepartmAuthObjectRec.FIND('-') THEN BEGIN
        IF DepartmAuthObjectRec."Dimension 1 Code Filter" = DepartmAuthObjectRec."Dimension 1 Code Filter"::Hard THEN
          HardFilter := TRUE;
        IF DepartmAuthObjectRec."Dimension 1 Code Filter" <> DepartmAuthObjectRec."Dimension 1 Code Filter"::None THEN BEGIN
          IF AccessFilter = '' THEN
            AccessFilter := GetUserDepartmentFilter;
          IF DepartmAuthObjectRec."Allow Empty Code" THEN
            IF AccessFilter <> '' THEN
              AccessFilter := AccessFilter + '|'''''
            ELSE
              AccessFilter := ''''''
        END;
      END;
    END;

    LOCAL PROCEDURE ClearAccessFilters@1100525006();
    BEGIN
      AccessFilter := '';
      HardFilter := FALSE;
      MainTableID := 0;
      AccessFlowFilter := '';
      HardFlowFilter := FALSE;
    END;

    LOCAL PROCEDURE CalcFlexibleDepmtFieldNo@1100525004(TableNo@1100525000 : Integer;VAR FieldNoDepmtCode@1100525001 : Integer);
    VAR
      GLBudgetEntry@1100528400 : Record 96;
      AnalysisViewEntry@1100528401 : Record 365;
      AnalysisViewBudgetEntry@1100528402 : Record 366;
      ItemAnalysisViewEntry@1100528404 : Record 7154;
      ItemAnalysisViewBudgetEntry@1100528403 : Record 7156;
    BEGIN
      GenLedgerSetup.GET;
      GenLedgerSetup.TESTFIELD("Global Dimension 1 Code");

      CASE TableNo OF
        DATABASE::"G/L Budget Entry":
          IF AnalysisView.Code <> '' THEN
            CASE GenLedgerSetup."Global Dimension 1 Code" OF
              AnalysisView."Dimension 1 Code":
                FieldNoDepmtCode := GLBudgetEntry.FIELDNO("Budget Dimension 1 Code");
              AnalysisView."Dimension 2 Code":
                FieldNoDepmtCode := GLBudgetEntry.FIELDNO("Budget Dimension 2 Code");
              AnalysisView."Dimension 3 Code":
                FieldNoDepmtCode := GLBudgetEntry.FIELDNO("Budget Dimension 3 Code");
              AnalysisView."Dimension 4 Code":
                FieldNoDepmtCode := GLBudgetEntry.FIELDNO("Budget Dimension 4 Code");
            END;

        DATABASE::"Analysis View Entry":
          IF AnalysisView.Code <> '' THEN
            CASE GenLedgerSetup."Global Dimension 1 Code" OF
              AnalysisView."Dimension 1 Code":
                FieldNoDepmtCode := AnalysisViewEntry.FIELDNO("Dimension 1 Value Code");
              AnalysisView."Dimension 2 Code":
                FieldNoDepmtCode := AnalysisViewEntry.FIELDNO("Dimension 2 Value Code");
              AnalysisView."Dimension 3 Code":
                FieldNoDepmtCode := AnalysisViewEntry.FIELDNO("Dimension 3 Value Code");
              AnalysisView."Dimension 4 Code":
                FieldNoDepmtCode := AnalysisViewEntry.FIELDNO("Dimension 4 Value Code");
            END;

        DATABASE::"Analysis View Budget Entry":
          IF AnalysisView.Code <> '' THEN
            CASE GenLedgerSetup."Global Dimension 1 Code" OF
              AnalysisView."Dimension 1 Code":
                FieldNoDepmtCode := AnalysisViewBudgetEntry.FIELDNO("Dimension 1 Value Code");
              AnalysisView."Dimension 2 Code":
                FieldNoDepmtCode := AnalysisViewBudgetEntry.FIELDNO("Dimension 2 Value Code");
              AnalysisView."Dimension 3 Code":
                FieldNoDepmtCode := AnalysisViewBudgetEntry.FIELDNO("Dimension 3 Value Code");
              AnalysisView."Dimension 4 Code":
                FieldNoDepmtCode := AnalysisViewBudgetEntry.FIELDNO("Dimension 4 Value Code");
            END;

        DATABASE::"Item Analysis View Entry":
          IF ItemAnalysisView.Code <> '' THEN
            CASE GenLedgerSetup."Global Dimension 1 Code" OF
              ItemAnalysisView."Dimension 1 Code":
                FieldNoDepmtCode := ItemAnalysisViewEntry.FIELDNO("Dimension 1 Value Code");
              ItemAnalysisView."Dimension 2 Code":
                FieldNoDepmtCode := ItemAnalysisViewEntry.FIELDNO("Dimension 2 Value Code");
              ItemAnalysisView."Dimension 3 Code":
                FieldNoDepmtCode := ItemAnalysisViewEntry.FIELDNO("Dimension 3 Value Code");
            END;

        DATABASE::"Item Analysis View Budg. Entry":
          IF ItemAnalysisView.Code <> '' THEN
            CASE GenLedgerSetup."Global Dimension 1 Code" OF
              ItemAnalysisView."Dimension 1 Code":
                FieldNoDepmtCode := ItemAnalysisViewBudgetEntry.FIELDNO("Dimension 1 Value Code");
              ItemAnalysisView."Dimension 2 Code":
                FieldNoDepmtCode := ItemAnalysisViewBudgetEntry.FIELDNO("Dimension 2 Value Code");
              ItemAnalysisView."Dimension 3 Code":
                FieldNoDepmtCode := ItemAnalysisViewBudgetEntry.FIELDNO("Dimension 3 Value Code");
            END;
      END;
    END;

    LOCAL PROCEDURE CalcFlexDepmtFlowFilterFieldNo@1100528401(TableNo@1100525000 : Integer;VAR FieldNoDepmtFlowFilter@1100525001 : Integer);
    VAR
      GLAccountAnalysisView@1100528400 : Record 376;
      AccScheduleLine@1100528401 : Record 85;
      AnalysisLine@1100528402 : Record 7114;
    BEGIN
      GenLedgerSetup.GET;
      GenLedgerSetup.TESTFIELD("Global Dimension 1 Code");

      CASE TableNo OF
        DATABASE::"Acc. Schedule Line":
          IF AnalysisView.Code <> '' THEN
            CASE GenLedgerSetup."Global Dimension 1 Code" OF
              AnalysisView."Dimension 1 Code":
                FieldNoDepmtFlowFilter := AccScheduleLine.FIELDNO("Dimension 1 Filter");
              AnalysisView."Dimension 2 Code":
                FieldNoDepmtFlowFilter := AccScheduleLine.FIELDNO("Dimension 2 Filter");
              AnalysisView."Dimension 3 Code":
                FieldNoDepmtFlowFilter := AccScheduleLine.FIELDNO("Dimension 3 Filter");
              AnalysisView."Dimension 4 Code":
                FieldNoDepmtFlowFilter := AccScheduleLine.FIELDNO("Dimension 4 Filter");
            END;

        DATABASE::"G/L Account (Analysis View)":
          IF AnalysisView.Code <> '' THEN
            CASE GenLedgerSetup."Global Dimension 1 Code" OF
              AnalysisView."Dimension 1 Code":
                FieldNoDepmtFlowFilter := GLAccountAnalysisView.FIELDNO("Dimension 1 Filter");
              AnalysisView."Dimension 2 Code":
                FieldNoDepmtFlowFilter := GLAccountAnalysisView.FIELDNO("Dimension 2 Filter");
              AnalysisView."Dimension 3 Code":
                FieldNoDepmtFlowFilter := GLAccountAnalysisView.FIELDNO("Dimension 3 Filter");
              AnalysisView."Dimension 4 Code":
                FieldNoDepmtFlowFilter := GLAccountAnalysisView.FIELDNO("Dimension 4 Filter");
            END;

        DATABASE::"Analysis Line":
          IF ItemAnalysisView.Code <> '' THEN
            CASE GenLedgerSetup."Global Dimension 1 Code" OF
              ItemAnalysisView."Dimension 1 Code":
                FieldNoDepmtFlowFilter := AnalysisLine.FIELDNO("Dimension 1 Filter");
              ItemAnalysisView."Dimension 2 Code":
                FieldNoDepmtFlowFilter := AnalysisLine.FIELDNO("Dimension 2 Filter");
              ItemAnalysisView."Dimension 3 Code":
                FieldNoDepmtFlowFilter := AnalysisLine.FIELDNO("Dimension 3 Filter");
            END;
      END;
    END;

    LOCAL PROCEDURE GetFilterGroupFlowFilter@1100525007(ContextID@1100525000 : Text[30]) : Integer;
    BEGIN
      CASE TRUE OF
        IsContextCodeunit(ContextID):
          EXIT(9);
        (ContextID = 'Page 570'):
          EXIT(8);
        (ContextID = 'Page 558'):
          EXIT(8);
        (ContextID = 'Report 25'):
          EXIT(8);
        (ContextID = 'Report 28'):
          EXIT(8);
        HardFlowFilter OR IsContextReport(ContextID):
          EXIT(7);
        ELSE
          EXIT(0);
      END;
    END;

    LOCAL PROCEDURE GetFilterGroupFieldFilter@1100525008(ContextID@1100525000 : Text[30]) : Integer;
    BEGIN
      CASE TRUE OF
        IsContextCodeunit(ContextID):
          EXIT(9);
        HardFilter OR IsContextReport(ContextID):
          EXIT(7);
        ELSE
          EXIT(0);
      END;
    END;

    PROCEDURE IsContextPage@1100525009(ContextID@1100525000 : Text[30]) : Boolean;
    BEGIN
      EXIT(UPPERCASE(COPYSTR(ContextID,1,3)) = 'PAG');
    END;

    PROCEDURE IsContextReport@1100525000(ContextID@1100525000 : Text[30]) : Boolean;
    BEGIN
      EXIT(UPPERCASE(COPYSTR(ContextID,1,3)) = 'REP');
    END;

    PROCEDURE IsContextCodeunit@1100525013(ContextID@1100525000 : Text[30]) : Boolean;
    BEGIN
      EXIT(UPPERCASE(COPYSTR(ContextID,1,3)) = 'COD');
    END;

    PROCEDURE SetAccSchedule@1100525010(AccScheduleCode@1100525000 : Code[20];AnalysisViewCode@1100525001 : Code[10]);
    BEGIN
      IF AccScheduleName.GET(AccScheduleCode) THEN BEGIN;
        IF AnalysisView.GET(AccScheduleName."Analysis View Name") THEN;
      END ELSE BEGIN;
        IF AnalysisView.GET(AnalysisViewCode) THEN;
      END;
    END;

    PROCEDURE RaiseDPAErrorForTable@1100525011(TableCaption@1100525000 : Text[80]);
    BEGIN
      ERROR(Text000, TableCaption, AccessFilter);
    END;

    PROCEDURE SetItemAnalysisView@1100528400(AnalysisArea@1100528401 : Integer;ItemAnalysisViewCode@1100528400 : Code[10]);
    BEGIN
      IF ItemAnalysisView.GET(AnalysisArea, ItemAnalysisViewCode) THEN;
    END;

    PROCEDURE AddHardDPAFiltToItAnViewEntry@1100528402(AnalysisArea@1100528403 : Integer;ItemAnalysisViewCode@1100528402 : Code[10];VAR ItemAnalysisViewEntry@1100528400 : Record 7154);
    VAR
      I@1100528401 : Integer;
      ItemAnalysisViewEntry1@1100528404 : Record 7154;
    BEGIN
      ItemAnalysisViewEntry1.DPA_SetItemAnalysisView(AnalysisArea, ItemAnalysisViewCode);
      ItemAnalysisViewEntry1.DPA_SetFilters('');

      FOR I := 10 DOWNTO 1 DO BEGIN
        ItemAnalysisViewEntry.FILTERGROUP(I);
        ItemAnalysisViewEntry1.FILTERGROUP(I);

        CASE TRUE OF
          ItemAnalysisViewEntry1.GETFILTER("Dimension 1 Value Code") <> '':
            ItemAnalysisViewEntry.SETFILTER(
              "Dimension 1 Value Code",
              ItemAnalysisViewEntry1.GETFILTER("Dimension 1 Value Code"));

          ItemAnalysisViewEntry1.GETFILTER("Dimension 2 Value Code") <> '':
            ItemAnalysisViewEntry.SETFILTER(
              "Dimension 2 Value Code",
              ItemAnalysisViewEntry1.GETFILTER("Dimension 2 Value Code"));

          ItemAnalysisViewEntry1.GETFILTER("Dimension 3 Value Code") <> '':
            ItemAnalysisViewEntry.SETFILTER(
              "Dimension 3 Value Code",
              ItemAnalysisViewEntry1.GETFILTER("Dimension 3 Value Code"));
        END;
      END;
      ItemAnalysisViewEntry.FILTERGROUP(0);
    END;

    PROCEDURE AddSoftDPAItAnalysisViewFilter@1100528405(ItemAnalysisView@1100528400 : Record 7152;VAR Dim1Filter@1100528401 : Code[250];VAR Dim2Filter@1100528402 : Code[250];VAR Dim3Filter@1100528403 : Code[250]);
    VAR
      GLSetup@1100528404 : Record 98;
    BEGIN
      GLSetup.GET;

      CASE GLSetup."Global Dimension 1 Code" OF
        ItemAnalysisView."Dimension 1 Code":
          Dim1Filter := AddSoftItAnalysisViewFilter(Dim1Filter);

        ItemAnalysisView."Dimension 2 Code":
          Dim2Filter := AddSoftItAnalysisViewFilter(Dim2Filter);

        ItemAnalysisView."Dimension 3 Code":
          Dim3Filter := AddSoftItAnalysisViewFilter(Dim3Filter);
      END;
    END;

    LOCAL PROCEDURE AddSoftItAnalysisViewFilter@1100528403(Filter@1100528400 : Code[250]) : Code[250];
    VAR
      ItemStatisticsBuffer@1100528401 : Record 5821;
      SoftDPAFilter@1100528402 : Code[250];
      ResultFilter@1100528403 : Code[500];
    BEGIN
      ItemStatisticsBuffer.DPA_SetFilters('');
      SoftDPAFilter := (ItemStatisticsBuffer.GETFILTER("Global Dimension 1 Filter"));

      IF SoftDPAFilter = '' THEN
        ResultFilter := Filter
      ELSE
        IF Filter = '' THEN
          ResultFilter := SoftDPAFilter
        ELSE
          ResultFilter := '(' + SoftDPAFilter + ') & (' + Filter + ')';

      IF STRLEN(ResultFilter) <= MAXSTRLEN(Filter) THEN
        EXIT(ResultFilter)
      ELSE
        EXIT(Filter);
    END;

    PROCEDURE AddHrdItStatBufDPAFiltToDimVal@1100528410(VAR DimensionValue@1100528400 : Record 349);
    VAR
      I@1100528401 : Integer;
      ItemStatisticsBuffer@1100528402 : Record 5821;
      GLSetup@1100528404 : Record 98;
    BEGIN
      GLSetup.GET;
      IF DimensionValue."Dimension Code" <> GLSetup."Global Dimension 1 Code" THEN
        EXIT;

      ItemStatisticsBuffer.DPA_SetFilters('');

      FOR I := 10 DOWNTO 1 DO BEGIN
        DimensionValue.FILTERGROUP(I);
        ItemStatisticsBuffer.FILTERGROUP(I);
        IF ItemStatisticsBuffer.GETFILTER("Global Dimension 1 Filter") <> '' THEN
          DimensionValue.SETFILTER(Code, ItemStatisticsBuffer.GETFILTER("Global Dimension 1 Filter"));
      END;
      DimensionValue.FILTERGROUP(0);
    END;

    PROCEDURE AddHardDPAFilterToItemStatBuf@1100528404(VAR ItemStatisticsBuffer@1100528400 : Record 5821;AnalysisArea@1100528407 : Integer;ItemAnalysisViewCode@1100528403 : Code[10]);
    VAR
      I@1100528401 : Integer;
      ItemStatisticsBuffer1@1100528402 : Record 5821;
      GLSetup@1100528404 : Record 98;
      ItemAnalysisView@1100528406 : Record 7152;
    BEGIN
      GLSetup.GET;
      ItemAnalysisView.GET(AnalysisArea, ItemAnalysisViewCode);

      ItemStatisticsBuffer1.DPA_SetFilters('');

      FOR I := 10 DOWNTO 1 DO BEGIN
        ItemStatisticsBuffer.FILTERGROUP(I);
        ItemStatisticsBuffer1.FILTERGROUP(I);

        IF ItemStatisticsBuffer1.GETFILTER("Global Dimension 1 Filter") <> '' THEN
          CASE GLSetup."Global Dimension 1 Code" OF
            ItemAnalysisView."Dimension 1 Code":
              ItemStatisticsBuffer.SETFILTER(
                "Dimension 1 Filter",
                ItemStatisticsBuffer1.GETFILTER("Global Dimension 1 Filter"));

            ItemAnalysisView."Dimension 2 Code":
              ItemStatisticsBuffer.SETFILTER(
                "Dimension 2 Filter",
                ItemStatisticsBuffer1.GETFILTER("Global Dimension 1 Filter"));

            ItemAnalysisView."Dimension 3 Code":
              ItemStatisticsBuffer.SETFILTER(
                "Dimension 3 Filter",
                ItemStatisticsBuffer1.GETFILTER("Global Dimension 1 Filter"));
          END;
      END;
      ItemStatisticsBuffer.FILTERGROUP(0);
    END;

    PROCEDURE GetSoftVendorDPAFilter@1100528409(ContextID@1100528401 : Text[30]) : Code[250];
    VAR
      Vendor@1100528400 : Record 23;
    BEGIN
      Vendor.DPA_SetFilters(ContextID);
      EXIT(Vendor.GETFILTER("Global Dimension 1 Filter"));
    END;

    PROCEDURE AddHardVendorDPAFilterToPILine@1100528408(VAR PurchInvLine@1100528400 : Record 123;ContextID@1100528403 : Text[30]);
    VAR
      Vendor@1100528401 : Record 23;
      I@1100528402 : Integer;
    BEGIN
      Vendor.DPA_SetFilters(ContextID);

      FOR I := 10 DOWNTO 1 DO BEGIN
        PurchInvLine.FILTERGROUP(I);
        Vendor.FILTERGROUP(I);
        IF Vendor.GETFILTER("Global Dimension 1 Filter") <> '' THEN
          PurchInvLine.SETFILTER(
            "Shortcut Dimension 1 Code",
            Vendor.GETFILTER("Global Dimension 1 Filter"));
      END;
      PurchInvLine.FILTERGROUP(0);
    END;

    PROCEDURE AddHardVendorDPAFiltToPCMLine@1100528407(VAR PurchCrMemoLine@1100528400 : Record 125;ContextID@1100528403 : Text[30]);
    VAR
      Vendor@1100528401 : Record 23;
      I@1100528402 : Integer;
    BEGIN
      Vendor.DPA_SetFilters(ContextID);

      FOR I := 10 DOWNTO 1 DO BEGIN
        PurchCrMemoLine.FILTERGROUP(I);
        Vendor.FILTERGROUP(I);
        IF Vendor.GETFILTER("Global Dimension 1 Filter") <> '' THEN
          PurchCrMemoLine.SETFILTER(
            "Shortcut Dimension 1 Code",
            Vendor.GETFILTER("Global Dimension 1 Filter"));
      END;
      PurchCrMemoLine.FILTERGROUP(0);
    END;

    PROCEDURE AddHardVendorDPAFilterToPOLine@1100528406(VAR PurchaseLine@1100528400 : Record 39;ContextID@1100528403 : Text[30]);
    VAR
      Vendor@1100528401 : Record 23;
      I@1100528402 : Integer;
    BEGIN
      Vendor.DPA_SetFilters(ContextID);

      FOR I := 10 DOWNTO 1 DO BEGIN
        PurchaseLine.FILTERGROUP(I);
        Vendor.FILTERGROUP(I);
        IF Vendor.GETFILTER("Global Dimension 1 Filter") <> '' THEN
          PurchaseLine.SETFILTER(
            "Shortcut Dimension 1 Code",
            Vendor.GETFILTER("Global Dimension 1 Filter"));
      END;
      PurchaseLine.FILTERGROUP(0);
    END;

    PROCEDURE AddHardVendorDPAFilterToPRLine@1100528411(VAR PurchaseRcptLine@1100528400 : Record 121;ContextID@1100528403 : Text[30]);
    VAR
      Vendor@1100528401 : Record 23;
      I@1100528402 : Integer;
    BEGIN
      Vendor.DPA_SetFilters(ContextID);

      FOR I := 10 DOWNTO 1 DO BEGIN
        PurchaseRcptLine.FILTERGROUP(I);
        Vendor.FILTERGROUP(I);
        IF Vendor.GETFILTER("Global Dimension 1 Filter") <> '' THEN
          PurchaseRcptLine.SETFILTER(
            "Shortcut Dimension 1 Code",
            Vendor.GETFILTER("Global Dimension 1 Filter"));
      END;
      PurchaseRcptLine.FILTERGROUP(0);
    END;

    PROCEDURE GetSoftGLAccDPAFilter@1100528414(ContextID@1100528401 : Text[30]) : Code[250];
    VAR
      GLAccount@1100528400 : Record 15;
    BEGIN
      GLAccount.DPA_SetFilters(ContextID);
      EXIT(GLAccount.GETFILTER("Global Dimension 1 Filter"));
    END;

    PROCEDURE AddHardGLAccDPAFilterToDimVal@1100528413(VAR DimensionValue@1100528400 : Record 349;ContextID@1100528403 : Text[30]);
    VAR
      I@1100528401 : Integer;
      GLAccount@1100528402 : Record 15;
    BEGIN
      GLAccount.DPA_SetFilters(ContextID);

      FOR I := 10 DOWNTO 1 DO BEGIN
        DimensionValue.FILTERGROUP(I);
        GLAccount.FILTERGROUP(I);
        IF GLAccount.GETFILTER("Global Dimension 1 Filter") <> '' THEN
          DimensionValue.SETFILTER(Code, GLAccount.GETFILTER("Global Dimension 1 Filter"));
      END;
      DimensionValue.FILTERGROUP(0);
    END;

    PROCEDURE AddHardDPAFilterToGLAcc@1100528412(VAR GLAccount@1100528400 : Record 15;ContextID@1100528403 : Text[30]);
    VAR
      I@1100528401 : Integer;
      GLAccount1@1100528402 : Record 15;
    BEGIN
      GLAccount1.DPA_SetFilters(ContextID);

      FOR I := 10 DOWNTO 1 DO BEGIN
        GLAccount.FILTERGROUP(I);
        GLAccount1.FILTERGROUP(I);
        IF GLAccount1.GETFILTER("Global Dimension 1 Filter") <> '' THEN
          GLAccount.SETFILTER("Global Dimension 1 Filter", GLAccount1.GETFILTER("Global Dimension 1 Filter"));
      END;
      GLAccount.FILTERGROUP(0);
    END;

    PROCEDURE AddSoftAnalysisViewDPAFilter@1100528420(AnalysisView@1100528400 : Record 363;VAR Dim1Filter@1100528406 : Text;VAR Dim2Filter@1100528405 : Text;VAR Dim3Filter@1100528404 : Text;VAR Dim4Filter@1100528403 : Text;ContextID@1100528402 : Text[30]);
    VAR
      GLSetup@1100528401 : Record 98;
    BEGIN
      GLSetup.GET;

      CASE GLSetup."Global Dimension 1 Code" OF
        AnalysisView."Dimension 1 Code":
          Dim1Filter := AddSoftAnalysisViewFilter(Dim1Filter, ContextID);

        AnalysisView."Dimension 2 Code":
          Dim2Filter := AddSoftAnalysisViewFilter(Dim2Filter, ContextID);

        AnalysisView."Dimension 3 Code":
          Dim3Filter := AddSoftAnalysisViewFilter(Dim3Filter, ContextID);

        AnalysisView."Dimension 4 Code":
          Dim4Filter := AddSoftAnalysisViewFilter(Dim4Filter, ContextID);
      END;
    END;

    LOCAL PROCEDURE AddSoftAnalysisViewFilter@1100528419(Filter@1100528400 : Code[250];ContextID@1100528404 : Text[30]) : Code[250];
    VAR
      GLAccountAnalysisView@1100528401 : Record 376;
      SoftDPAFilter@1100528402 : Code[250];
      ResultFilter@1100528403 : Code[500];
    BEGIN
      GLAccountAnalysisView.DPA_SetFilters(ContextID);
      SoftDPAFilter := (GLAccountAnalysisView.GETFILTER("Global Dimension 1 Filter"));

      IF SoftDPAFilter = '' THEN
        ResultFilter := Filter
      ELSE
        IF Filter = '' THEN
          ResultFilter := SoftDPAFilter
        ELSE
          ResultFilter := '(' + SoftDPAFilter + ') & (' + Filter + ')';

      IF STRLEN(ResultFilter) <= MAXSTRLEN(Filter) THEN
        EXIT(ResultFilter)
      ELSE
        EXIT(Filter);
    END;

    PROCEDURE AddHardGLAccAVDPAFiltToDimVal@1100528418(VAR DimensionValue@1100528400 : Record 349;ContextID@1100528403 : Text[30]);
    VAR
      I@1100528401 : Integer;
      GLAccountAnalysisView@1100528402 : Record 376;
      GLSetup@1100528404 : Record 98;
    BEGIN
      GLSetup.GET;
      IF DimensionValue."Dimension Code" <> GLSetup."Global Dimension 1 Code" THEN
        EXIT;

      GLAccountAnalysisView.DPA_SetFilters(ContextID);

      FOR I := 10 DOWNTO 1 DO BEGIN
        DimensionValue.FILTERGROUP(I);
        GLAccountAnalysisView.FILTERGROUP(I);
        IF GLAccountAnalysisView.GETFILTER("Global Dimension 1 Filter") <> '' THEN
          DimensionValue.SETFILTER(Code, GLAccountAnalysisView.GETFILTER("Global Dimension 1 Filter"));
      END;
      DimensionValue.FILTERGROUP(0);
    END;

    PROCEDURE AddHardGLAccDPAFilterToAVEntry@1100528417(VAR AnalysisViewEntry@1100528400 : Record 365;AnalysisView@1100528403 : Record 363;ContextID@1100528405 : Text[30]);
    VAR
      I@1100528401 : Integer;
      GLAccountAnalysisView@1100528402 : Record 376;
      GLSetup@1100528404 : Record 98;
    BEGIN
      GLSetup.GET;

      GLAccountAnalysisView.DPA_SetFilters(ContextID);

      FOR I := 10 DOWNTO 1 DO BEGIN
        AnalysisViewEntry.FILTERGROUP(I);
        GLAccountAnalysisView.FILTERGROUP(I);
        IF GLAccountAnalysisView.GETFILTER("Global Dimension 1 Filter") <> '' THEN
          CASE GLSetup."Global Dimension 1 Code" OF
            AnalysisView."Dimension 1 Code":
              AnalysisViewEntry.SETFILTER(
                "Dimension 1 Value Code",
                GLAccountAnalysisView.GETFILTER("Global Dimension 1 Filter"));

            AnalysisView."Dimension 2 Code":
              AnalysisViewEntry.SETFILTER(
                "Dimension 2 Value Code",
                GLAccountAnalysisView.GETFILTER("Global Dimension 1 Filter"));

            AnalysisView."Dimension 3 Code":
              AnalysisViewEntry.SETFILTER(
                "Dimension 3 Value Code",
                GLAccountAnalysisView.GETFILTER("Global Dimension 1 Filter"));

            AnalysisView."Dimension 4 Code":
              AnalysisViewEntry.SETFILTER(
                "Dimension 4 Value Code",
                GLAccountAnalysisView.GETFILTER("Global Dimension 1 Filter"));
          END;
      END;
      AnalysisViewEntry.FILTERGROUP(0);
    END;

    PROCEDURE AddHardGLAccDPAFiltToAVBEntry@1100528416(VAR AnalysisViewBudgetEntry@1100528400 : Record 366;AnalysisView@1100528403 : Record 363;ContextID@1100528405 : Text[30]);
    VAR
      I@1100528401 : Integer;
      GLAccountAnalysisView@1100528402 : Record 376;
      GLSetup@1100528404 : Record 98;
    BEGIN
      GLSetup.GET;

      GLAccountAnalysisView.DPA_SetFilters(ContextID);

      FOR I := 10 DOWNTO 1 DO BEGIN
        AnalysisViewBudgetEntry.FILTERGROUP(I);
        GLAccountAnalysisView.FILTERGROUP(I);
        IF GLAccountAnalysisView.GETFILTER("Global Dimension 1 Filter") <> '' THEN
          CASE GLSetup."Global Dimension 1 Code" OF
            AnalysisView."Dimension 1 Code":
              AnalysisViewBudgetEntry.SETFILTER(
                "Dimension 1 Value Code",
                GLAccountAnalysisView.GETFILTER("Global Dimension 1 Filter"));

            AnalysisView."Dimension 2 Code":
              AnalysisViewBudgetEntry.SETFILTER(
                "Dimension 2 Value Code",
                GLAccountAnalysisView.GETFILTER("Global Dimension 1 Filter"));

            AnalysisView."Dimension 3 Code":
              AnalysisViewBudgetEntry.SETFILTER(
                "Dimension 3 Value Code",
                GLAccountAnalysisView.GETFILTER("Global Dimension 1 Filter"));

            AnalysisView."Dimension 4 Code":
              AnalysisViewBudgetEntry.SETFILTER(
                "Dimension 4 Value Code",
                GLAccountAnalysisView.GETFILTER("Global Dimension 1 Filter"));
          END;
      END;
      AnalysisViewBudgetEntry.FILTERGROUP(0);
    END;

    PROCEDURE CopyHardALDPAFiltToItemStatBuf@1100528421(VAR AnalysisLine@1100528405 : Record 7114;VAR ItemStatisticsBuf@1100528400 : Record 5821);
    VAR
      I@1100528404 : Integer;
    BEGIN
      FOR I := 10 DOWNTO 1 DO BEGIN
        AnalysisLine.FILTERGROUP(I);
        ItemStatisticsBuf.FILTERGROUP(I);

        CASE TRUE OF
          AnalysisLine.GETFILTER("Dimension 1 Filter") <> '':
            ItemStatisticsBuf.SETFILTER(
              "Dimension 1 Filter",
              AnalysisLine.GETFILTER("Dimension 1 Filter"));

          AnalysisLine.GETFILTER("Dimension 2 Filter") <> '':
            ItemStatisticsBuf.SETFILTER(
              "Dimension 2 Filter",
              AnalysisLine.GETFILTER("Dimension 2 Filter"));

          AnalysisLine.GETFILTER("Dimension 3 Filter") <> '':
            ItemStatisticsBuf.SETFILTER(
              "Dimension 3 Filter",
              AnalysisLine.GETFILTER("Dimension 3 Filter"));
        END;
      END;

      AnalysisLine.FILTERGROUP(0);
      ItemStatisticsBuf.FILTERGROUP(0);
    END;

    PROCEDURE SetAlternativeUserID@1100285304(lvAlternativeUserID@1100285300 : Code[50]);
    BEGIN
      AlternativeUserID := lvAlternativeUserID;
    END;

    PROCEDURE SetUserWSEmployee@1100525001(UserID@1100525000 : Text[50]);
    BEGIN
      gvWSUserID := UserID;
      HasGotUserSetup := FALSE;
    END;

    BEGIN
    {
      ENH017  140321  ITERO.GH
              Field "Department Code Filter" UserSetUp table 100 -> 245 Characters, last 5 Characters for |' ' set !!
              Global variables: AccessFilter     120 -> -
                                AccessFlowFilter 120 -> -
              Functions: GetUserDepartmentFilter Text 100 -> -
                         GetAccesFilter          Text 120 -> -

      151104 ITERO.DL select NoSeries based on user-departmentcode
      190320 ORANGO.DL #22909 "Department Code Filter" too short
    }
    END.
  }
}

