OBJECT Table 11229300 Company Plan Group
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnDelete=VAR
               CompanyPlanGroupLine@1100528600 : Record 11229301;
             BEGIN
               CompanyPlanGroupLine.SETRANGE("Group Code", Code);
               CompanyPlanGroupLine.DELETEALL(TRUE);
             END;

    CaptionML=ENU=Company Plan Group;
    LookupPageID=Page11126617;
    DrillDownPageID=Page11126617;
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod] }
    { 20  ;   ;Description         ;Text30        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 30  ;   ;Plan Group Lines Exists;Boolean    ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Company Plan Group Line" WHERE (Group Code=FIELD(Code)));
                                                   CaptionML=ENU=Plan Group Lines Exists;
                                                   Editable=No }
    { 100 ;   ;Window (Days)       ;Integer       ;CaptionML=ENU=Window (Days);
                                                   MinValue=0 }
    { 110 ;   ;Start Window (Days b. WorkDat);Integer;
                                                   CaptionML=ENU=Start Window (Days before Work Date);
                                                   MinValue=0 }
    { 120 ;   ;Show in Planning until Status;Option;
                                                   InitValue=Technical Finished;
                                                   CaptionML=ENU=Show in Planning until Status;
                                                   OptionCaptionML=[ENU=" ,Open,,In Process,Technical Finished,Administrative Finished,Finished,Cancelled";
                                                                    NOR=" ,èpne,,Under behandling,Teknisk Ferdig,Administrativt Ferdig,Ferdig,Avbrutt";
                                                                    SVE=" ,ôppna,,Under behandling,Tekniskt fÑrdig,Administrativt fÑrdig,FÑrdig,Avbrutet"];
                                                   OptionString=,Open,,In Process,Technical Finished,Administrative Finished,Finished,Cancelled }
    { 130 ;   ;Update Planning Automatically;Boolean;
                                                   OnValidate=BEGIN
                                                                IF NOT "Update Planning Automatically" THEN
                                                                  "Update Planning Interval (Sec)" := 0
                                                                ELSE BEGIN
                                                                  IF ("Update Planning Interval (Sec)" <= 0) THEN
                                                                    "Update Planning Interval (Sec)" := 15;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Update Planning Automatically }
    { 140 ;   ;Update Planning Interval (Sec);Integer;
                                                   OnValidate=BEGIN
                                                                IF "Update Planning Interval (Sec)" <> 0 THEN
                                                                  TESTFIELD("Update Planning Automatically");
                                                              END;

                                                   CaptionML=ENU=Update Planning Interval (Seconds);
                                                   MinValue=5;
                                                   BlankZero=Yes }
    { 150 ;   ;Automatic Scheduling;Boolean       ;CaptionML=[ENU=Automatic Scheduling;
                                                              NOR=Automatisk Planlegging;
                                                              SVE=Automatisk schemalÑggning];
                                                   Description=GSP }
    { 160 ;   ;Setup Company       ;Text30        ;TableRelation=Company;
                                                   OnValidate=VAR
                                                                CompanyPlanGroupLine@1100525000 : Record 11229301;
                                                              BEGIN
                                                                  IF "Setup Company" <> '' THEN
                                                                    CompanyPlanGroupLine.GET(Code, "Setup Company");
                                                              END;

                                                   OnLookup=VAR
                                                              CompanyPlanGroupLine@1100525000 : Record 11229301;
                                                              Company@1100525001 : Record 2000000006;
                                                            BEGIN
                                                                CompanyPlanGroupLine.SETRANGE("Group Code", Code);
                                                                IF CompanyPlanGroupLine.FINDSET THEN
                                                                  REPEAT
                                                                    Company.Name := CompanyPlanGroupLine."Company Name";
                                                                    Company.MARK(TRUE);
                                                                  UNTIL CompanyPlanGroupLine.NEXT = 0;
                                                                Company.MARKEDONLY(TRUE);
                                                                IF PAGE.RUNMODAL(PAGE::"Company List (NEW)", Company) = ACTION::LookupOK THEN
                                                                  VALIDATE("Setup Company", Company.Name);
                                                            END;

                                                   CaptionML=ENU=Setup Company }
    { 170 ;   ;Server Address      ;Text100       ;CaptionML=ENU=Server Address }
    { 180 ;   ;OData Service Port  ;Integer       ;CaptionML=ENU=OData Service Port;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 190 ;   ;SOAP Service Port   ;Integer       ;CaptionML=ENU=SOAP Service Port;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 200 ;   ;Instance Name       ;Text30        ;CaptionML=ENU=Instance Name }
    { 210 ;   ;Auto. Determine Server Address;Boolean;
                                                   CaptionML=ENU=Automatically Determine the Server Address }
    { 220 ;   ;GWP Time-out in Minutes;Integer    ;CaptionML=ENU=GWP Time-out in Minutes }
    { 230 ;   ;UseSSL              ;Boolean       ;CaptionML=ENU=Use SSL }
    { 240 ;   ;UseNtlm             ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Use NTLM }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE GetCurrentCompanyPlanGroupCode@1100528610() : Code[10];
    BEGIN
      EXIT(GetPlanGroupCodeOfCompany(COMPANYNAME));
    END;

    PROCEDURE GetPlanGroupCodeOfCompany@1100528002(CompanyName@1100528000 : Text[30]) : Code[10];
    VAR
      CompanyPlanGroup@1100528601 : Record 11229300;
      CompanyPlanGroupLine@1100528600 : Record 11229301;
    BEGIN
      CompanyPlanGroupLine.SETRANGE("Company Name", CompanyName);
      IF CompanyPlanGroupLine.FINDFIRST THEN
        EXIT(CompanyPlanGroupLine."Group Code");
      CompanyPlanGroupLine.SETRANGE("Company Name");
      CompanyPlanGroup.SETRANGE("Plan Group Lines Exists", FALSE);
      IF CompanyPlanGroup.FINDSET THEN
        EXIT(CompanyPlanGroup.Code);
    END;

    PROCEDURE GetSetupCompanyOfCurrentCompanyPlanGroup@1100528600() : Text[30];
    BEGIN
      EXIT(GetSetupCompanyOfPlanGroupOfCompany(COMPANYNAME));
    END;

    PROCEDURE GetSetupCompanyOfPlanGroupOfCompany@1100528000(CompanyName@1100528000 : Text[30]) : Text[30];
    VAR
      CompanyPlanGroup@1100528002 : Record 11229300;
      CompanyPlanGroupCode@1100528001 : Code[20];
    BEGIN
      CompanyPlanGroupCode := GetPlanGroupCodeOfCompany(CompanyName);
      CompanyPlanGroup.GET(CompanyPlanGroupCode);
      CompanyPlanGroup.TESTFIELD("Setup Company");
      EXIT(CompanyPlanGroup."Setup Company");
    END;

    PROCEDURE BelongsCompanyToCurrentCompanyPlanGroup@1100525000(Company@1100525000 : Text) : Boolean;
    VAR
      PlanGroup@1100525001 : Code[10];
      CompanyPlanGroup@1100525002 : Record 11229300;
      CompanyPlanGroupLine@1100525003 : Record 11229301;
    BEGIN
      PlanGroup := GetCurrentCompanyPlanGroupCode;
      IF PlanGroup = '' THEN
        EXIT(TRUE);
      CompanyPlanGroup.GET(PlanGroup);
      CompanyPlanGroup.CALCFIELDS("Plan Group Lines Exists");
      IF NOT CompanyPlanGroup."Plan Group Lines Exists" THEN
        EXIT(TRUE);
      CompanyPlanGroupLine.SETRANGE("Group Code", PlanGroup);
      CompanyPlanGroupLine.SETRANGE("Company Name", Company);
      EXIT(CompanyPlanGroupLine.FINDFIRST);
    END;

    BEGIN
    END.
  }
}

