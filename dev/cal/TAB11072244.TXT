OBJECT Table 11072244 Settlement Quantity Budget
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckInsertSummarySheet(TRUE);

               UpdateOtherTables(DataTrigger::Insert);
             END;

    OnModify=BEGIN
               UpdateOtherTables(DataTrigger::Modify);
             END;

    OnDelete=BEGIN
               UpdateOtherTables(DataTrigger::Delete);
             END;

    CaptionML=ENU=Settlement Quantity Budget;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr] }
    { 15  ;   ;House Model         ;Code20        ;TableRelation="House Model".Model WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=House Model;
                                                              NOR=Husmodell;
                                                              SVE=Husmodell] }
    { 20  ;   ;Settlement Quantity Code;Code20    ;AltSearchField=Description;
                                                   CaptionML=[ENU=Settlement Quantity Code;
                                                              SVE=Avr„kningsantalkod] }
    { 30  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 40  ;   ;Element             ;Code20        ;TableRelation=IF (Project No.=FILTER(<>'')) "Project Element".Element WHERE (Project No.=FIELD(Project No.))
                                                                 ELSE IF (Project No.=FILTER('')) "Base Element".Code;
                                                   OnValidate=BEGIN
                                                                ElementFormat.FormatElem(Element,2,'');
                                                                IF Element <> '' THEN BEGIN
                                                                  IF "Project No." = '' THEN BEGIN
                                                                    ElemRec.GET(Element);
                                                                    Chapter := ElemRec.Chapter;
                                                                    Paragraph := ElemRec.Paragraph;
                                                                  END ELSE BEGIN
                                                                    ProjElemRec.GET("Project No.",Element);
                                                                    Chapter := ProjElemRec.Chapter;
                                                                    Paragraph := ProjElemRec.Paragraph;
                                                                  END;
                                                                END ELSE BEGIN
                                                                  CLEAR(Chapter);
                                                                  CLEAR(Paragraph);
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 50  ;   ;Cost Type           ;Option        ;OnValidate=VAR
                                                                BudgetRateManagement@1100528600 : Codeunit 11012358;
                                                                BudgetRateFoundAt@1100528601 : Text[250];
                                                              BEGIN
                                                                IF "Cost Object" <> '' THEN BEGIN
                                                                  IF "Cost Type" <> xRec."Cost Type" THEN
                                                                    IF CONFIRM(Text003,TRUE) THEN BEGIN
                                                                      "Cost Object" := '';
                                                                      //Fill fields below only for cost type plant
                                                                      "Item No." := '';
                                                                      "Basic Item" := '';
                                                                      "Trade Item" := '';
                                                                      Manufacturer := '';
                                                                    END ELSE BEGIN
                                                                      "Cost Type" := xRec."Cost Type";
                                                                      EXIT;
                                                                    END;
                                                                END;
                                                                IF ("Cost Type" = "Cost Type"::Labor) THEN BEGIN
                                                                  IF "Project No." <> '' THEN BEGIN
                                                                    ProjectRec.GET("Project No.");
                                                                    Rate := BudgetRateManagement.GetBudgetRate(
                                                                      0, "Project No.", '', '', ProjectRec."Global Dimension 1 Code", ProjectRec."Default Rate Code",
                                                                        TODAY, BudgetRateFoundAt);
                                                                    IF Rate <> 0 THEN
                                                                      "Rate Code" := ProjectRec."Default Rate Code"
                                                                    ELSE
                                                                      IF Price <> 0 THEN
                                                                        ERROR(Text005);
                                                                //    IF NOT RateRec.ProjectRate("Project No.", ProjectRec."Default Rate Code", TODAY, Rate) THEN BEGIN
                                                                //      IF RateRec.StandardRate(ProjectRec."Default Rate Code", TODAY, Rate) THEN BEGIN
                                                                //        "Rate Code" := ProjectRec."Default Rate Code";
                                                                //      END ELSE BEGIN
                                                                //        IF Price <> 0 THEN
                                                                //          ERROR(Text005);
                                                                //      END;
                                                                //    END ELSE BEGIN
                                                                //      "Rate Code" := ProjectRec."Default Rate Code";
                                                                //    END;
                                                                    IF (Rate <> 0) AND (Price <> 0) THEN
                                                                      Norm := Price / Rate;
                                                                    Price := 0;
                                                                  END;
                                                                  Price := 0;
                                                                END ELSE BEGIN
                                                                  IF (Rate <> 0) THEN
                                                                    Price := Norm * Rate;
                                                                  "Rate Code" := '';
                                                                  Rate := 0;
                                                                  Norm := 0;
                                                                END;
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Cost Type;
                                                              NOR=Kostnadstype;
                                                              SVE=Kostnadstyp];
                                                   OptionCaptionML=[ENU=Labor,Material,Subcontracting,Plant,Sundry;
                                                                    NOR=Arbeidskraft,Materiale,Underentrepen›r,Maskin,Diverse;
                                                                    SVE=Arbetskraft,Material,Underentreprenad,Maskin,Diverse];
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry }
    { 60  ;   ;Cost Object         ;Code20        ;TableRelation=IF (Cost Type=CONST(Labor)) "Dimension Value".Code WHERE (Cost Type=FILTER(Labor),
                                                                                                                           Global Dimension No.=CONST(2),
                                                                                                                           Project Filter=FIELD(Project No.))
                                                                                                                           ELSE IF (Cost Type=CONST(Material)) "Dimension Value".Code WHERE (Cost Type=FILTER(Material),
                                                                                                                                                                                             Global Dimension No.=CONST(2),
                                                                                                                                                                                             Project Filter=FIELD(Project No.))
                                                                                                                                                                                             ELSE IF (Cost Type=CONST(Plant)) "Dimension Value".Code WHERE (Cost Type=FILTER(Plant),
                                                                                                                                                                                                                                                            Global Dimension No.=CONST(2),
                                                                                                                                                                                                                                                            Project Filter=FIELD(Project No.))
                                                                                                                                                                                                                                                            ELSE IF (Cost Type=CONST(Sundry)) "Dimension Value".Code WHERE (Cost Type=FILTER(Sundry),
                                                                                                                                                                                                                                                                                                                            Global Dimension No.=CONST(2),
                                                                                                                                                                                                                                                                                                                            Project Filter=FIELD(Project No.))
                                                                                                                                                                                                                                                                                                                            ELSE IF (Cost Type=CONST(Subcontracting)) "Dimension Value".Code WHERE (Cost Type=FILTER(Subcontracting),
                                                                                                                                                                                                                                                                                                                                                                                                    Global Dimension No.=CONST(2),
                                                                                                                                                                                                                                                                                                                                                                                                    Project Filter=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                Selection@1100525000 : Integer;
                                                              BEGIN
                                                                IF "Cost Object" <> '' THEN
                                                                  IF xRec."Cost Object" = '' THEN
                                                                    GetDefaultsCostObject(FALSE)
                                                                  ELSE
                                                                    IF "Cost Object" <> xRec."Cost Object" THEN
                                                                      IF "Item No." + "Basic Item" + "Trade Item" = '' THEN BEGIN
                                                                        Selection := STRMENU(Text006,3);
                                                                        IF Selection < 3 THEN
                                                                          GetDefaultsCostObject(Selection=2);
                                                                      END;
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostnadsobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 70  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 80  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2] }
    { 100 ;   ;Time Quantity       ;Decimal       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Time Quantity;
                                                              NOR=Tidskvantitet;
                                                              SVE=Tidskvantitet] }
    { 110 ;   ;Unit of Time        ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   CaptionML=[ENU=Unit of Time;
                                                              NOR=Tidsenhet;
                                                              SVE=Tidsenhet] }
    { 120 ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5 }
    { 130 ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Unit of Measure") THEN BEGIN
                                                                  IF ("Cost Type" = "Cost Type"::Material) THEN
                                                                    IF "Unit of Measure" <>  xRec."Unit of Measure" THEN  //db, 10-02-05
                                                                      CheckItemUnitConversion(Rec, xRec);
                                                                  CalcTotals;
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              HandleLookupUnit;
                                                            END;

                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=Enhet;
                                                              SVE=Enhet] }
    { 140 ;   ;Price               ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Cost Type" = "Cost Type"::Labor) THEN BEGIN
                                                                  MESSAGE(Text004);
                                                                  Price := 0;
                                                                END ELSE BEGIN
                                                                  CalculateDiscount;  //db, 10-12-13: C007216
                                                                  CalcTotals;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Price;
                                                              NOR=Pris;
                                                              SVE=Pris];
                                                   AutoFormatType=2 }
    { 150 ;   ;Norm                ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Cost Type" = "Cost Type"::Labor) THEN
                                                                  CalcTotals
                                                                ELSE BEGIN
                                                                  MESSAGE(Text001, "Cost Type");
                                                                  Norm := 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Norm;
                                                              NOR=Norm;
                                                              SVE=Norm];
                                                   DecimalPlaces=2: }
    { 160 ;   ;Rate Code           ;Code10        ;TableRelation="Budget Rate".Code WHERE (Project Filter=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                BudgetRateManagement@1100528600 : Codeunit 11012358;
                                                                BudgetRateFoundAt@1100528601 : Text[250];
                                                              BEGIN
                                                                IF ("Cost Type" = "Cost Type"::Labor) THEN BEGIN
                                                                  Rate := BudgetRateManagement.GetBudgetRate(
                                                                    0, "Project No.", '', '', ProjectRec."Global Dimension 1 Code", "Rate Code", TODAY, BudgetRateFoundAt);
                                                                  CalcTotals;
                                                                END ELSE BEGIN
                                                                  IF CurrFieldNo = FIELDNO("Rate Code") THEN
                                                                    MESSAGE(Text002, "Cost Type");
                                                                  "Rate Code" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Rate Code;
                                                              NOR=Avgiftskode;
                                                              SVE=Avgiftskod] }
    { 170 ;   ;Rate                ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Cost Type" = "Cost Type"::Labor) THEN
                                                                  CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Rate;
                                                              NOR=Avgift;
                                                              SVE=Avgift];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 180 ;   ;Hours               ;Decimal       ;CaptionML=[ENU=Hours;
                                                              NOR="Timer ";
                                                              SVE=Timmar];
                                                   Editable=No }
    { 190 ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 250 ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                IF ("Item No." <> xRec."Item No.") AND ("Item No." <> '') THEN BEGIN
                                                                  ValidateItem(ItemTypeOpt::Item);
                                                                  ItemRec.TESTFIELD(Blocked,FALSE);           //jth, 15-02-05
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              NOR=Varenr.;
                                                              SVE=Artikelnr] }
    { 251 ;   ;Basic Item          ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   OnValidate=BEGIN
                                                                IF ("Basic Item" <> xRec."Basic Item") AND ("Basic Item" <> '') THEN
                                                                  ValidateItem(ItemTypeOpt::"Basic Item");
                                                              END;

                                                   CaptionML=[ENU=Basic Item;
                                                              NOR=Fabrikantartikkel;
                                                              SVE=Basartikel] }
    { 252 ;   ;Trade Item          ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   OnValidate=BEGIN
                                                                IF ("Trade Item" <> xRec."Trade Item") AND ("Trade Item" <> '') THEN
                                                                  ValidateItem(ItemTypeOpt::"Trade Item");
                                                              END;

                                                   CaptionML=[ENU=Trade Item;
                                                              NOR=Katalogartikkel;
                                                              SVE=Anskaffningsartikel] }
    { 253 ;   ;Vendor (Trade Item) ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   OnValidate=VAR
                                                                TradeItemRec@1100525000 : Record 11012317;
                                                                lvExecValidate@1100485000 : Boolean;
                                                              BEGIN
                                                                IF ("Vendor (Trade Item)" <> xRec."Vendor (Trade Item)") AND ("Vendor (Trade Item)" <> '') THEN BEGIN
                                                                  IF "Basic Item" <> '' THEN BEGIN
                                                                    "Trade Item" := '';
                                                                    lvExecValidate := TRUE;
                                                                  END;
                                                                  IF "Trade Item" <> '' THEN BEGIN
                                                                    VALIDATE("Trade Item");
                                                                    lvExecValidate := TRUE;
                                                                  END;
                                                                  //db.sn, 17-12-10: M18021
                                                                  IF lvExecValidate THEN BEGIN
                                                                    IF TradeItemRec.CheckReplaceVendor(
                                                                      xRec."Vendor (Trade Item)", xRec."Trade Item",
                                                                      "Vendor (Trade Item)", "Trade Item") THEN
                                                                      ValidateItem(ItemTypeOpt::"Trade Item")
                                                                    ELSE
                                                                      ValidateItem(ItemTypeOpt::"Trade Vendor");
                                                                  END;
                                                                  //db.en, 17-12-10: M18021
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Vendor (Trade Item);
                                                              NOR=Leverand›r (katalogartikkel);
                                                              SVE=Leverant”r (skaffningsartikel)] }
    { 254 ;   ;Manufacturer        ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   CaptionML=[ENU=Manufacturer;
                                                              NOR=Produsent;
                                                              SVE=Tillverkare] }
    { 260 ;   ;Cost Component      ;Code20        ;TableRelation="Cost Component".Code;
                                                   CaptionML=[ENU=Cost Component;
                                                              NOR=Kostnadskomponent;
                                                              SVE=Kostnadskomponent] }
    { 270 ;   ;Summary Filter      ;Boolean       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Summary Filter;
                                                              NOR=Sammendragfilter;
                                                              SVE=Sammandrag filter] }
    { 280 ;   ;Gross Price         ;Decimal       ;OnValidate=BEGIN
                                                                CalculateNetPrice;
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Gross Price;
                                                              NOR=Bruttopris;
                                                              SVE=Bruttopris];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 290 ;   ;Discount %          ;Decimal       ;OnValidate=BEGIN
                                                                CalculateNetPrice;
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Discount %;
                                                              NOR=Rabatt-%;
                                                              SVE=Rabatt %];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 300 ;   ;Total Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Settlement Quantity Budget".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                                              House Model=FIELD(House Model),
                                                                                                              Settlement Quantity Code=FIELD(Settlement Quantity Code)));
                                                   CaptionML=[ENU=Total Amount;
                                                              NOR=Totalt bel›p;
                                                              SVE=Totalt belopp];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 310 ;   ;Total Hours         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Settlement Quantity Budget".Hours WHERE (Project No.=FIELD(Project No.),
                                                                                                             House Model=FIELD(House Model),
                                                                                                             Settlement Quantity Code=FIELD(Settlement Quantity Code)));
                                                   CaptionML=[ENU=Total Hours;
                                                              NOR=Timer totalt;
                                                              SVE=Totalt timmar];
                                                   Editable=No }
    { 320 ;   ;Total Labor         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Settlement Quantity Budget".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                                              House Model=FIELD(House Model),
                                                                                                              Settlement Quantity Code=FIELD(Settlement Quantity Code),
                                                                                                              Cost Type=CONST(Labor)));
                                                   CaptionML=[ENU=Total Labor;
                                                              NOR=Total arbeidskraft;
                                                              SVE=Total arbetskraft];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 330 ;   ;Total Material      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Settlement Quantity Budget".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                                              House Model=FIELD(House Model),
                                                                                                              Settlement Quantity Code=FIELD(Settlement Quantity Code),
                                                                                                              Cost Type=CONST(Material)));
                                                   CaptionML=[ENU=Total Material;
                                                              NOR=Totalt materiale;
                                                              SVE=Totalt material];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 340 ;   ;Total Subcontracting;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Settlement Quantity Budget".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                                              House Model=FIELD(House Model),
                                                                                                              Settlement Quantity Code=FIELD(Settlement Quantity Code),
                                                                                                              Cost Type=CONST(Subcontracting)));
                                                   CaptionML=[ENU=Total Subcontracting;
                                                              NOR=Underleverand›r Total;
                                                              SVE=Underentreprenad totalt];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 350 ;   ;Total Plant         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Settlement Quantity Budget".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                                              House Model=FIELD(House Model),
                                                                                                              Settlement Quantity Code=FIELD(Settlement Quantity Code),
                                                                                                              Cost Type=CONST(Plant)));
                                                   CaptionML=[ENU=Total Plant;
                                                              NOR=Maskin total;
                                                              SVE=Maskin totalt];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 360 ;   ;Total Sundry        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Settlement Quantity Budget".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                                              House Model=FIELD(House Model),
                                                                                                              Settlement Quantity Code=FIELD(Settlement Quantity Code),
                                                                                                              Cost Type=CONST(Sundry)));
                                                   CaptionML=[ENU=Total Sundry;
                                                              NOR=Totalt diverse;
                                                              SVE=Totalt diverse];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 370 ;   ;Total Summary       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Settlement Quantity Budget".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                                              House Model=FIELD(House Model),
                                                                                                              Settlement Quantity Code=FIELD(Settlement Quantity Code),
                                                                                                              Budget Summary Line=FILTER(Yes)));
                                                   CaptionML=[ENU=Total Summary;
                                                              NOR=Totalt Sammendrag;
                                                              SVE=Totalt sammandrag];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 400 ;   ;Project Description ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Project Description;
                                                              NOR=Prosjektbeskrivelse;
                                                              SVE=Projektbeskrivning];
                                                   Editable=No }
    { 410 ;   ;Cost Object Description;Text50     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dimension Value".Name WHERE (Code=FIELD(Cost Object),
                                                                                                    Global Dimension No.=CONST(2)));
                                                   CaptionML=[ENU=Cost Object Description;
                                                              NOR=Kostnadsobjekt, Beskrivelse;
                                                              SVE=Kostnadsobjekt, beskrivning];
                                                   Editable=No;
                                                   CaptionClass='1,11012000,2, , ' + Text007 }
    { 420 ;   ;Element Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Base Element".Description WHERE (Code=FIELD(Element)));
                                                   CaptionML=[ENU=Element Description;
                                                              NOR=Elementbeskrivelse;
                                                              SVE=Elementbeskrivning];
                                                   Editable=No }
    { 430 ;   ;Project Related Name;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project - Cost Object".Name WHERE (Project No.=FIELD(Project No.),
                                                                                                          Cost Object=FIELD(Cost Object)));
                                                   CaptionML=[ENU=Project Related Name;
                                                              NOR=Prosjektrelatert navn;
                                                              SVE=Projektrelaterat namn];
                                                   Description=Name Cost Object;
                                                   Editable=No }
    { 440 ;   ;Settlement Quantity Descr.;Text100 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Settlement Quantity".Description WHERE (Project No.=FIELD(Project No.),
                                                                                                               House Model=FIELD(House Model),
                                                                                                               Code=FIELD(Settlement Quantity Code)));
                                                   CaptionML=ENU=Settlement Quantity Descr.;
                                                   Editable=No }
    { 500 ;   ;Element Filter      ;Code250       ;FieldClass=FlowFilter;
                                                   TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Element Filter;
                                                              NOR=Elementfilter;
                                                              SVE=Elementfilter] }
    { 510 ;   ;Chapter             ;Code20        ;CaptionML=[ENU=Chapter;
                                                              NOR=Kapittel;
                                                              SVE=Kapitel] }
    { 520 ;   ;Paragraph           ;Code20        ;CaptionML=[ENU=Paragraph;
                                                              NOR=Avsnitt;
                                                              SVE=Stycke] }
    { 540 ;   ;Surcharge Amnt from Summary;Decimal;CaptionML=[ENU=Overhead Surcharge Amount from Summary;
                                                              NOR=Overheadkostbel›p fra sammendrag;
                                                              SVE=Overheadkostnadsbelopp fr†n sammandrag] }
    { 550 ;   ;Overhead Surcharge from Summ.;Boolean;
                                                   CaptionML=[ENU=Overhead Surcharge from Summary;
                                                              NOR=Overheadkost fra sammendrag;
                                                              SVE=Overheadkostnad fr†n sammandrag] }
    { 600 ;   ;Budget Summary Line ;Boolean       ;CaptionML=[ENU=Budget Summary Line;
                                                              NOR=Budsjettsammendragsrad;
                                                              SVE=Budgetsammandragsrad] }
    { 650 ;   ;Source Type         ;Option        ;CaptionML=[ENU=Source Type;
                                                              NOR=Kildetype;
                                                              SVE=Ursprungstyp];
                                                   OptionCaptionML=ENU=" ,Settlement Quantity Budget,Settlement Quantity Surcharge";
                                                   OptionString=[ ,SQ Budget,SQ Surcharge];
                                                   Description=Is used for processing to budget line }
    { 680 ;   ;Location Code (CUF) ;Code20        ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Location Code (CUF) }
  }
  KEYS
  {
    {    ;Project No.,House Model,Settlement Quantity Code,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@11012014 : TextConst 'ENU=Cost Type of Line is %1, input of norm not allowed;NOR=Kostnadstypen for raden er %1, Norm kan ikke angis;SVE=Kostnadstypen f”r raden „r %1, norm kan inte anges';
      Text002@11012015 : TextConst 'ENU=Cost Type of line is %1, input of rate code not allowed.;NOR=Kostnadstypen for raden er %1, satskode kan ikke angis.;SVE=Kostnadstypen f”r raden „r %1, avgiftskod kan inte anges';
      Text003@11012016 : TextConst 'ENU=Change Cost Type ?;NOR=Endre kostnadstype?;SVE=Žndra kostnadstyp?';
      Text004@11012017 : TextConst 'ENU=Unit Price not allowed because Cost Type of this record is Labor !;NOR=Enhetsprisen er ikke tillatt siden Kostnadstypen for denne posten er arbeidskraft!;SVE=Enhetspriset „r inte till†tet eftersom kostnadstypen f”r denna post „r arbetskraft!';
      DimValRec@11012002 : Record 349;
      ProjectRec@11012003 : Record 11072003;
      ElemRec@11012006 : Record 11012060;
      ProjElemRec@11012007 : Record 11012010;
      ItemRec@1210190001 : Record 27;
      DummySurchRec@1210190004 : Record 11072247;
      ElementFormat@11012010 : Codeunit 11012022;
      ValidateCU@11012011 : Codeunit 11012033;
      DimMgtCU@1210190003 : Codeunit 408;
      SettlementQuantityManagement@1210190002 : Codeunit 11071690;
      ItemTypeOpt@11012012 : 'Item,Basic Item,Trade Item,Trade Vendor';
      DataTrigger@1210190000 : 'Insert,Modify,Delete';
      Text005@1100485000 : TextConst 'ENU=Switch to Cost Type Labor requires default Rate Code per Project (or there is no Budget Rate of this Budget Rate present before the current date).;NOR=Bytting til Kostnadstypen arbeidskraft krever Standard satskode per prosjekt (eller det mangler budsjettsats for denne budsjettsatsen f›r den aktuelle datoen).;SVE=V„xling till kostnadstypen arbetskraft kr„ver en standardavgiftskod per projekt (annars finns det ingen budgetavgift f”r denna budgetavgift f”re det aktuella datumet).';
      Text006@1100525000 : TextConst 'ENU=&Complete with Cost Object Data,Co&py Cost Object Data,&Don''''t Copy Cost Object Data;NOR=&Komplett med Kostnadsobjektdata,Ko&piere Kostnadsobjektdata,&Ikke kopier Kostnadsobjektdata;SVE=&Komplett med kostnadsobjektdata,Ko&piera kostnadsobjektdata,&Kopiera inte kostnadsobjektdata';
      Text020@1100525501 : TextConst 'ENU=First select Budget Lines;NOR=Velg f›rst Budsjettrader;SVE=V„lj f”rst budgetrader';
      Text021@1100525500 : TextConst 'ENU=Copied %1 Lines.;NOR=%1 Rader er kopiert.;SVE=%1 rader har kopierats.';
      Text007@1100527350 : TextConst 'ENU=Description;SVE=Beskrivning';

    PROCEDURE CalcTotals@1();
    BEGIN
      CASE "Cost Type" OF
        "Cost Type"::Labor:
          BEGIN
            Hours := ROUND("Time Quantity" * Quantity * Norm);
      //      Amount := Hours * Rate;  jth 09-03-2005 round hours and amount. (made identical to Budget Line.)
            IF (Quantity <> 0) OR // Amount can be entered manually when Quantity = 0 and Norm = 0;
               (Norm <> 0)
            THEN
              Amount := ROUND("Time Quantity" * Quantity * Norm * Rate);
          END;
        ELSE
          BEGIN
            Hours := 0;
            Amount := ROUND("Time Quantity" * Quantity * Price);
          END;
      END;
      CALCFIELDS("Total Amount","Total Hours","Total Labor","Total Material","Total Subcontracting","Total Plant","Total Sundry");
      UpdateControlStatus;
    END;

    PROCEDURE CalculateNetPrice@13();
    BEGIN
      //IF "Gross Price" <> 0 THEN  //db, 10-12-13: C007216
        Price := "Gross Price" - (("Gross Price"/100) * "Discount %");
    END;

    PROCEDURE CalculateDiscount@1100525024();
    BEGIN
      //db, 10-12-13: C007216
      IF "Gross Price" <> 0 THEN BEGIN
        IF ("Item No." + "Basic Item" + "Trade Item" = '') AND ("Discount %" = 0) THEN
          "Gross Price" := Price
        ELSE
          "Discount %" := (("Gross Price" - Price) / "Gross Price") * 100;
      END ELSE BEGIN
        IF "Discount %" <> 100 THEN
          "Gross Price" := Price / ((100 - "Discount %") / 100)
        ELSE
          "Gross Price" := Price;
      END;
    END;

    PROCEDURE GetDefaultsCostObject@3(Replace@1100525001 : Boolean);
    VAR
      BudgetRateManagement@1100528600 : Codeunit 11012358;
      BudgetRateFoundAt@1100528601 : Text[250];
    BEGIN
      //Function can be used in 2 ways: 1. only add data, 2: replace data
      DimMgtCU.GetDimValueRec(2, "Cost Object", DimValRec, TRUE, "Project No.");
      DimValRec.TESTFIELD(Blocked, FALSE);

      IF (Description = '') OR Replace THEN
        Description := DimValRec.Name;
      IF ("Unit of Measure" = '') OR Replace  THEN
        VALIDATE("Unit of Measure", DimValRec."Unit of Measure");
      IF ("Unit of Time" = '') OR Replace  THEN
        VALIDATE("Unit of Time", DimValRec."Unit of Time");
      IF ("Cost Component" = '') OR Replace  THEN
        VALIDATE("Cost Component", DimValRec."Cost Component");

      CASE "Cost Type" OF
        "Cost Type"::Labor:
          BEGIN
            IF (Norm = 0) OR Replace  THEN
              Norm := DimValRec.Norm;
            IF NOT ProjectRec.GET("Project No.") THEN  //*C-025993.n
              ProjectRec."Default Rate Code" := '';
            //IF (("Rate Code" = '') AND (Rate = 0)) OR Replace THEN BEGIN  //*C-025993.o
            IF (("Rate Code" = '') AND (Rate = 0)) OR (Replace AND (ProjectRec."Default Rate Code" = '')) THEN BEGIN //*C-025993.n
              "Rate Code" := DimValRec."Rate Code";
              Rate := BudgetRateManagement.GetBudgetRate(
                0, "Project No.", '', '', ProjectRec."Global Dimension 1 Code", "Rate Code", TODAY, BudgetRateFoundAt);
            END;
          END;
        ELSE
          IF (Price = 0) OR Replace  THEN
            Price := DimValRec.Price;
      END;
      CalcTotals;
    END;

    PROCEDURE UpdateControlStatus@10();
    BEGIN
      IF ("Project No." = '') OR ("Line No." = 0) THEN
        EXIT;
      IF ProjectRec.GET("Project No.") THEN BEGIN
        IF ProjectRec."Cost Control Up to Date" THEN BEGIN
          ProjectRec."Cost Control Up to Date" := FALSE;
          ProjectRec.MODIFY;
        END;
      END;
    END;

    PROCEDURE ValidateItem@31(LTypeArtOpt@11012000 : 'Item,Basic Item,Trade Item');
    VAR
      DummyDat@11012001 : Date;
      lvRefDate@1100485002 : Date;
      lvDiscRef1@1100485001 : Code[20];
      lvDiscRef2@1100485000 : Code[20];
    BEGIN
      IF NOT ProjectRec.GET("Project No.") THEN ProjectRec.INIT;
      lvRefDate := ValidateCU.GetRefDateProject(ProjectRec);
      lvDiscRef1 := ProjectRec."Purch Discount Term Group 1";
      lvDiscRef2 := ProjectRec."Purch Discount Term Group 2";

      ValidateCU.ValidateItem(LTypeArtOpt,"Trade Item","Item No.",Manufacturer,"Vendor (Trade Item)",
                              "Basic Item","Cost Object",Description,"Unit of Measure",Price,
                              "Discount %",DummyDat,"Gross Price","Description 2","Cost Component",
                              lvDiscRef1,lvDiscRef2,lvRefDate,'');
    END;

    PROCEDURE UpdateOtherTables@6(ITrigger@1210190000 : 'Insert,Modify,Delete');
    BEGIN
      CASE ITrigger OF
        ITrigger::Insert: INSERT;
        ITrigger::Modify: MODIFY;
        ITrigger::Delete: DELETE;
      END;

      SettlementQuantityManagement.MMRCalcSurchargesUpdateSettlQuan(
        "Project No.", "House Model","Settlement Quantity Code", FALSE, DummySurchRec);

      CASE ITrigger OF
        ITrigger::Insert: DELETE;
        ITrigger::Delete: INSERT;
      END;
    END;

    PROCEDURE HandleLookupUnit@1210190008();
    VAR
      ItemUnitRec@1210190000 : Record 5404;
      lvUnit@1210190001 : Code[10];
    BEGIN
      lvUnit := ItemUnitRec.HandleLookupUnit("Item No.", "Basic Item", "Trade Item", Manufacturer, "Vendor (Trade Item)");
      IF (lvUnit <> '') AND (lvUnit <> "Unit of Measure") THEN BEGIN
        xRec."Unit of Measure" := "Unit of Measure";  //db, 01-07-04: standard bug
        VALIDATE("Unit of Measure", lvUnit);
      END;
    END;

    PROCEDURE CheckItemUnitConversion@1210190010(VAR MainNewRec@1210190006 : Record 11072244;MainOldRec@1210190007 : Record 11072244);
    VAR
      ItemRec@1210190004 : Record 27;
      UnitFactor@1210190005 : Decimal;
      UnitFactorOld@1210190003 : Decimal;
      UnitFactorNew@1210190002 : Decimal;
      UnitControl@1210190001 : Codeunit 5402;
    BEGIN
      WITH MainNewRec DO BEGIN
        UnitFactorOld := 1;
        UnitFactorNew := 1;
        IF "Item No." <> '' THEN BEGIN
          ItemRec.GET("Item No.");
          UnitFactorOld := UnitControl.GetQtyPerUnitOfMeasure(ItemRec, MainOldRec."Unit of Measure");
          UnitFactorNew := UnitControl.GetQtyPerUnitOfMeasure(ItemRec, "Unit of Measure");
          UnitFactor := UnitFactorOld;
          ValidateCU.ValidateUnit(ItemTypeOpt::Item,
            "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
            Quantity,"Unit of Measure",UnitFactor);
        END ELSE BEGIN
          IF "Trade Item" <> '' THEN BEGIN
            ValidateCU.ValidateUnit(ItemTypeOpt::"Trade Item",
              "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
              Quantity,"Unit of Measure",UnitFactorNew);
          END ELSE BEGIN
            IF "Basic Item" <> '' THEN BEGIN
              ValidateCU.ValidateUnit(ItemTypeOpt::"Basic Item",
                "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
                Quantity,"Unit of Measure",UnitFactorNew);
            END;
          END;
        END;
        IF (UnitFactorNew * UnitFactorOld) <> 0 THEN BEGIN
          IF UnitFactorNew <> UnitFactorOld THEN BEGIN //db, 20-04-11: M26826
            IF "Gross Price" <> 0 THEN
              VALIDATE("Gross Price", ("Gross Price" * UnitFactorNew / UnitFactorOld))
            ELSE
              VALIDATE(Price, (Price * UnitFactorNew / UnitFactorOld));
          END;
        END;
      END;
    END;

    PROCEDURE CopyAndPasteRTC@1100525008(lvProject@1100525506 : Code[20];lvPlotNo@1100525505 : Code[20];lvHouseModel@1100525504 : Code[20];lvMainGroup@1100525503 : Code[20];lvGroup@1100525502 : Code[20];lvSubGroup@1100525501 : Code[20];lvOption@1100525500 : Code[20]);
    VAR
      lvOptionBudget2Rec@1100525000 : Record 11012503;
      lvOptionBudget3Rec@1100525009 : Record 11012503;
      NextLineNo@1100525002 : Integer;
      LineCount@1100525003 : Integer;
    BEGIN
      IF NOT FINDSET(FALSE,FALSE) THEN BEGIN
        MESSAGE(Text020);
        EXIT;
      END;

      LineCount := 0;
      REPEAT;
        lvOptionBudget2Rec.COPY(Rec);

        lvOptionBudget3Rec.SETRANGE("Project No.", lvOptionBudget2Rec."Project No.");
        lvOptionBudget3Rec.SETRANGE("Plot No.",    lvOptionBudget2Rec."Plot No.");
        lvOptionBudget3Rec.SETRANGE("House Model", lvOptionBudget2Rec."House Model");
        lvOptionBudget3Rec.SETRANGE("Main Group",  lvOptionBudget2Rec."Main Group");
        lvOptionBudget3Rec.SETRANGE(Group,       lvOptionBudget2Rec.Group);
        lvOptionBudget3Rec.SETRANGE("Sub Group",   lvOptionBudget2Rec."Sub Group");
        lvOptionBudget3Rec.SETRANGE(Option,        lvOptionBudget2Rec.Option);
        IF lvOptionBudget3Rec.FINDLAST THEN
          NextLineNo := lvOptionBudget3Rec."Line No." + 10000
        ELSE
          NextLineNo := 10000;

        lvOptionBudget2Rec."Line No." := NextLineNo;
        lvOptionBudget2Rec.INSERT(TRUE);
        LineCount += 1;
      UNTIL NEXT = 0;

      IF LineCount > 0 THEN
        MESSAGE(Text021, LineCount);
    END;

    PROCEDURE CheckInsertSummarySheet@1100525001(iRecalcMode@1100525002 : Boolean);
    VAR
      lvSummarySheetLineRec@1100525001 : Record 11012064;
      lvSettlementQuantityBudget@1100525000 : Record 11072244;
    BEGIN
      IF NOT "Budget Summary Line" AND ("Project No." <> '' ) THEN BEGIN
        ProjectRec.GET("Project No.");
        IF ProjectRec."Summary Sheet MMR" <> '' THEN BEGIN
          lvSettlementQuantityBudget.SETFILTER("Project No.", '%1', "Project No.");
          lvSettlementQuantityBudget.SETFILTER("House Model", '%1', "House Model");
          lvSettlementQuantityBudget.SETFILTER("Settlement Quantity Code", '%1', "Settlement Quantity Code");
          IF NOT lvSettlementQuantityBudget.FINDFIRST THEN BEGIN
            // Add default summary sheet only at inserting of first line of a budget
            lvSummarySheetLineRec.SETRANGE("Project No.", "Project No.");
            lvSummarySheetLineRec.SETRANGE("House Model", "House Model");
            lvSummarySheetLineRec.SETRANGE("Contract No.", '');
            lvSummarySheetLineRec.SETRANGE(Option, '');
            lvSummarySheetLineRec.SETRANGE("Settlement Quantity Code", "Settlement Quantity Code");
            IF NOT lvSummarySheetLineRec.FINDFIRST THEN BEGIN
              lvSummarySheetLineRec.RESET;
              //Save and copy default summary sheet per project
              lvSummarySheetLineRec.CopyTemplate3(ProjectRec."Summary Sheet MMR", "Project No.", "House Model", "Settlement Quantity Code");
              IF iRecalcMode THEN BEGIN
                lvSummarySheetLineRec.SETRANGE("Project No.", "Project No.");
                lvSummarySheetLineRec.SETRANGE("House Model", "House Model");
                lvSummarySheetLineRec.SETRANGE("Contract No.", '');
                lvSummarySheetLineRec.SETRANGE(Option, '');
                lvSummarySheetLineRec.SETRANGE("Settlement Quantity Code", "Settlement Quantity Code");
                IF lvSummarySheetLineRec.FINDFIRST THEN BEGIN
                  lvSummarySheetLineRec.ReCalcSettlQuanSummaryLines();
                  lvSummarySheetLineRec.UpdateSettlQuanBudgLines();
                END;
              END;
            END;
          END;
        END;
      END;
    END;

    BEGIN
    END.
  }
}

