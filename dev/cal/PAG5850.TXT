OBJECT Page 5850 Posted Sales Document Lines
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03,4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Posted Sales Document Lines;
               NOR=Bokf›rte salgsdokumentlinjer;
               SVE=Bokf”rda f”rs„ljningsdokumentrader];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table18;
    PageType=ListPlus;
    OnInit=BEGIN
             ShowRevLineEnable := TRUE;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 CurrentMenuType := 1;
                 ChangeSubMenu(CurrentMenuType);
                 SETRANGE("No.","No.");
               END;

    OnAfterGetRecord=BEGIN
                       CALCFIELDS(
                         "No. of Pstd. Shipments","No. of Pstd. Invoices",
                         "No. of Pstd. Return Receipts","No. of Pstd. Credit Memos");
                       CurrentMenuTypeOpt := CurrentMenuType;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 46  ;1   ;Group     ;
                CaptionML=[ENU=Options;
                           NOR=Alternativer;
                           SVE=Alternativ] }

    { 63  ;2   ;Field     ;
                Name=ShowRevLine;
                CaptionML=[ENU=Show Reversible Lines Only;
                           NOR=Vis bare reversible linjer;
                           SVE=Visa endast rader som kan †terf”ras];
                ToolTipML=[ENU=Specifies if only lines with quantities that are available to be reversed are shown. For example, on a posted sales invoice with an original quantity of 20, and 15 of the items have already been returned, the quantity that is available to be reversed on the posted sales invoice is 5.;
                           NOR=Angir om bare linjer med antall som er tilgjengelige for tilbakef›ring, skal vises. Hvis for eksempel antallet p† en bokf›rt salgsfaktura med et opprinnelig antall p† 20, der 15 av varene allerede har blitt returnert, vil antallet som er tilgjengelig for tilbakef›ring p† den bokf›rte kj›psfakturaen, v‘re 5.;
                           SVE=Anger om bara rader med antal som „r tillg„ngliga att †terf”ras ska visas. Om en bokf”rd f”rs„ljningsfaktura t.ex. inneh†ller det ursprungliga antalet 20, och 15 av artiklarna har returnerats, †terst†r 5 artiklar som kan †terf”ras p† den bokf”rda f”rs„ljningsfakturan.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ShowRevLinesOnly;
                Enabled=ShowRevLineEnable;
                OnValidate=BEGIN
                             CASE CurrentMenuType OF
                               0:
                                 CurrPage.PostedShpts.PAGE.Initialize(
                                   ShowRevLinesOnly,
                                   CopyDocMgt.IsSalesFillExactCostRevLink(
                                     ToSalesHeader,CurrentMenuType,ToSalesHeader."Currency Code"),TRUE);
                               1:
                                 CurrPage.PostedInvoices.PAGE.Initialize(
                                   ToSalesHeader,ShowRevLinesOnly,
                                   CopyDocMgt.IsSalesFillExactCostRevLink(
                                     ToSalesHeader,CurrentMenuType,ToSalesHeader."Currency Code"),TRUE);
                             END;
                             ShowRevLinesOnlyOnAfterValidat;
                           END;
                            }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Return Original Quantity;
                           NOR=Returner opprinnelig antall;
                           SVE=Anv„nd ursprungligt antal];
                ToolTipML=[ENU=Specifies whether to use the original quantity to receive quantities associated with specific shipments. For example, on a posted sales invoice with an original quantity of 20, you can match the 20 items with a specific shipment.;
                           NOR=Angir om det opprinnelige antallet skal brukes til † motta antall som er knyttet til bestemte leveringer. Hvis det for eksempel finnes en bokf›rt salgsfaktura med et opprinnelig antall p† 20, kan du matche de 20 enhetene med en bestemt levering.;
                           SVE=Anger om du vill anv„nda det ursprungliga antalet f”r att inleverera antal som h”r till s„rskilda utleveranser. Om det till exempel finns en bokf”rd f”rs„ljningsfaktura med det ursprungliga antalet 20, kan du matcha dessa 20 artiklar mot en viss utleverans.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=OriginalQuantity }

    { 19  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           SVE=Allm„nt] }

    { 15  ;2   ;Field     ;
                Name=PostedShipmentsBtn;
                OptionCaptionML=[ENU=Posted Shipments,Posted Invoices,Posted Return Receipts,Posted Cr. Memos;
                                 NOR=Bokf›rte f›lgesedler,Bokf›rte fakturaer,Bokf›rte retursedler,Bokf›rte kreditnotaer;
                                 SVE=Bokf”rda utleveranser,Bokf”rda fakturor,Bokf”rda returinleveranser,Bokf”rda kreditnotor];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CurrentMenuTypeOpt;
                CaptionClass=OptionCaptionServiceTier;
                OnValidate=BEGIN
                             IF CurrentMenuTypeOpt = CurrentMenuTypeOpt::x3 THEN
                               x3CurrentMenuTypeOptOnValidate;
                             IF CurrentMenuTypeOpt = CurrentMenuTypeOpt::x2 THEN
                               x2CurrentMenuTypeOptOnValidate;
                             IF CurrentMenuTypeOpt = CurrentMenuTypeOpt::x1 THEN
                               x1CurrentMenuTypeOptOnValidate;
                             IF CurrentMenuTypeOpt = CurrentMenuTypeOpt::x0 THEN
                               x0CurrentMenuTypeOptOnValidate;
                           END;
                            }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=&Posted Shipments;
                           NOR=Bokf›&rte f›lgesedler;
                           SVE=&Bokf”rda utleveranser];
                ToolTipML=[ENU=Specifies the lines that represent posted shipments.;
                           NOR=Angir linjene som representerer bokf›rte f›lgesedler.;
                           SVE=Anger raderna som representerar bokf”rda utleveranser.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=STRSUBSTNO('(%1)',"No. of Pstd. Shipments");
                Editable=FALSE }

    { 14  ;2   ;Field     ;
                Name=NoOfPostedInvoices;
                CaptionML=[ENU=Posted I&nvoices;
                           NOR=B&okf›rte fakturaer;
                           SVE=Bokf”rda &fakturor];
                ToolTipML=[ENU=Specifies the lines that represent posted invoices.;
                           NOR=Angir linjene som representerer bokf›rte fakturaer.;
                           SVE=Anger raderna som representerar bokf”rda fakturor.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=STRSUBSTNO('(%1)',"No. of Pstd. Invoices" - NoOfPostedPrepmtInvoices);
                Editable=FALSE }

    { 41  ;2   ;Field     ;
                CaptionML=[ENU=Posted Ret&urn Receipts;
                           NOR=&Bokf›rte retursedler;
                           SVE=Bokf”rda ret&urinleveranser];
                ToolTipML=[ENU=Specifies the lines that represent posted return receipts.;
                           NOR=Angir linjene som representerer bokf›rte retursedler.;
                           SVE=Anger raderna som representerar bokf”rda returinleveranser.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=STRSUBSTNO('(%1)',"No. of Pstd. Return Receipts");
                Editable=FALSE }

    { 11  ;2   ;Field     ;
                Name=NoOfPostedCrMemos;
                CaptionML=[ENU=Posted Cr. &Memos;
                           NOR=Bokf›rte kredit&notaer;
                           SVE=Bokf”rda kredit&notor];
                ToolTipML=[ENU=Specifies the lines that represent posted sales credit memos.;
                           NOR=Angir linjene som representerer bokf›rte salgskreditnotaer.;
                           SVE=Anger raderna som representerar bokf”rda f”rs„ljningskreditnotor.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=STRSUBSTNO('(%1)',"No. of Pstd. Credit Memos" - NoOfPostedPrepmtCrMemos);
                Editable=FALSE }

    { 44  ;2   ;Field     ;
                Name=CurrentMenuTypeValue;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CurrentMenuType;
                Visible=FALSE }

    { 6   ;1   ;Part      ;
                Name=PostedInvoices;
                ApplicationArea=#All;
                SubPageView=SORTING(Sell-to Customer No.);
                SubPageLink=Sell-to Customer No.=FIELD(No.);
                PagePartID=Page5852;
                Visible=PostedInvoicesVisible }

    { 7   ;1   ;Part      ;
                Name=PostedShpts;
                ApplicationArea=#All;
                SubPageView=SORTING(Sell-to Customer No.);
                SubPageLink=Sell-to Customer No.=FIELD(No.);
                PagePartID=Page5851;
                Visible=PostedShptsVisible }

    { 1   ;1   ;Part      ;
                Name=PostedCrMemos;
                ApplicationArea=#All;
                SubPageView=SORTING(Sell-to Customer No.);
                SubPageLink=Sell-to Customer No.=FIELD(No.);
                PagePartID=Page5854;
                Visible=PostedCrMemosVisible }

    { 5   ;1   ;Part      ;
                Name=PostedReturnRcpts;
                ApplicationArea=#All;
                SubPageView=SORTING(Sell-to Customer No.);
                SubPageLink=Sell-to Customer No.=FIELD(No.);
                PagePartID=Page5853;
                Visible=PostedReturnRcptsVisible }

  }
  CODE
  {
    VAR
      ToSalesHeader@1002 : Record 36;
      CopyDocMgt@1010 : Codeunit 6620;
      OldMenuType@1001 : Integer;
      CurrentMenuType@1000 : Integer;
      LinesNotCopied@1008 : Integer;
      ShowRevLinesOnly@1004 : Boolean;
      MissingExCostRevLink@1006 : Boolean;
      Text000@1009 : TextConst 'ENU=The document lines that have a G/L account that does not allow direct posting have not been copied to the new document.;NOR=Dokumentlinjer med en finanskonto der direkte bokf›ring ikke er tillatt, er ikke kopiert til det nye dokumentet.;SVE=De dokumentrader som har ett redovisningskonto som inte till†ter direktbokf”ring har inte kopierats till det nya dokumentet.';
      OriginalQuantity@1003 : Boolean;
      Text002@1091 : TextConst 'ENU=Document Type Filter;NOR=Filter for bilagstype;SVE=Dokumenttypfilter';
      DPA_IsHardFilter@1100000999 : Boolean;
      PostedShptsVisible@19073057 : Boolean INDATASET;
      PostedInvoicesVisible@19029596 : Boolean INDATASET;
      PostedReturnRcptsVisible@19034262 : Boolean INDATASET;
      PostedCrMemosVisible@19050108 : Boolean INDATASET;
      ShowRevLineEnable@19075015 : Boolean INDATASET;
      CurrentMenuTypeOpt@19019278 : 'x0,x1,x2,x3';

    [Internal]
    PROCEDURE CopyLineToDoc@5();
    VAR
      FromSalesShptLine@1001 : Record 111;
      FromSalesInvLine@1002 : Record 113;
      FromSalesCrMemoLine@1003 : Record 115;
      FromReturnRcptLine@1004 : Record 6661;
      SalesDocType@1000 : 'Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo';
    BEGIN
      OnBeforeCopyLineToDoc(CopyDocMgt);

      ToSalesHeader.TESTFIELD(Status,ToSalesHeader.Status::Open);
      LinesNotCopied := 0;

      CASE CurrentMenuType OF
        0:
          BEGIN
            CurrPage.PostedShpts.PAGE.GetSelectedLine(FromSalesShptLine);
            //CopyDocMgt.SetProperties(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity); //**4PS.o
            CopyDocMgt.SetProperties(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity,FALSE,FALSE); //**4PS.n
            CopyDocMgt.CopySalesLinesToDoc(
              SalesDocType::"Posted Shipment",ToSalesHeader,
              FromSalesShptLine,FromSalesInvLine,FromReturnRcptLine,FromSalesCrMemoLine,LinesNotCopied,MissingExCostRevLink);
          END;
        1:
          BEGIN
            CurrPage.PostedInvoices.PAGE.GetSelectedLine(FromSalesInvLine);
            //CopyDocMgt.SetProperties(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity); //**4PS.o
            CopyDocMgt.SetProperties(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity,FALSE,FALSE); //**4PS.n
            CopyDocMgt.CopySalesLinesToDoc(
              SalesDocType::"Posted Invoice",ToSalesHeader,
              FromSalesShptLine,FromSalesInvLine,FromReturnRcptLine,FromSalesCrMemoLine,LinesNotCopied,MissingExCostRevLink);
          END;
        2:
          BEGIN
            CurrPage.PostedReturnRcpts.PAGE.GetSelectedLine(FromReturnRcptLine);
            //CopyDocMgt.SetProperties(FALSE,TRUE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity); //**4PS.o
            CopyDocMgt.SetProperties(FALSE,TRUE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity,FALSE,FALSE); //**4PS.n
            CopyDocMgt.CopySalesLinesToDoc(
              SalesDocType::"Posted Return Receipt",ToSalesHeader,
              FromSalesShptLine,FromSalesInvLine,FromReturnRcptLine,FromSalesCrMemoLine,LinesNotCopied,MissingExCostRevLink);
          END;
        3:
          BEGIN
            CurrPage.PostedCrMemos.PAGE.GetSelectedLine(FromSalesCrMemoLine);
            //CopyDocMgt.SetProperties(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity); //**4PS.o
            CopyDocMgt.SetProperties(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity,FALSE,FALSE); //**4PS.n
            CopyDocMgt.CopySalesLinesToDoc(
              SalesDocType::"Posted Credit Memo",ToSalesHeader,
              FromSalesShptLine,FromSalesInvLine,FromReturnRcptLine,FromSalesCrMemoLine,LinesNotCopied,MissingExCostRevLink);
          END;
      END;
      CLEAR(CopyDocMgt);

      IF LinesNotCopied <> 0 THEN
        MESSAGE(Text000);
    END;

    LOCAL PROCEDURE ChangeSubMenu@1(NewMenuType@1000 : Integer);
    BEGIN
      IF OldMenuType <> NewMenuType THEN
        SetSubMenu(OldMenuType,FALSE);
      SetSubMenu(NewMenuType,TRUE);
      OldMenuType := NewMenuType;
      CurrentMenuType := NewMenuType;
    END;

    [External]
    PROCEDURE GetCurrentMenuType@8() : Integer;
    BEGIN
      EXIT(CurrentMenuType);
    END;

    LOCAL PROCEDURE SetSubMenu@2(MenuType@1000 : Integer;Visible@1001 : Boolean);
    BEGIN
      IF ShowRevLinesOnly AND (MenuType IN [0,1]) THEN
        ShowRevLinesOnly :=
          CopyDocMgt.IsSalesFillExactCostRevLink(ToSalesHeader,MenuType,ToSalesHeader."Currency Code");
      ShowRevLineEnable := MenuType IN [0,1];
      CASE MenuType OF
        0:
          BEGIN
            PostedShptsVisible := Visible;
            CurrPage.PostedShpts.PAGE.Initialize(
              ShowRevLinesOnly,
              CopyDocMgt.IsSalesFillExactCostRevLink(
                ToSalesHeader,MenuType,ToSalesHeader."Currency Code"),Visible);
          END;
        1:
          BEGIN
            PostedInvoicesVisible := Visible;
            CurrPage.PostedInvoices.PAGE.Initialize(
              ToSalesHeader,ShowRevLinesOnly,
              CopyDocMgt.IsSalesFillExactCostRevLink(
                ToSalesHeader,MenuType,ToSalesHeader."Currency Code"),Visible);
          END;
        2:
          PostedReturnRcptsVisible := Visible;
        3:
          PostedCrMemosVisible := Visible;
      END;
    END;

    [External]
    PROCEDURE SetToSalesHeader@4(NewToSalesHeader@1000 : Record 36);
    BEGIN
      ToSalesHeader := NewToSalesHeader;
    END;

    LOCAL PROCEDURE OptionCaptionServiceTier@1088() : Text[70];
    BEGIN
      EXIT(Text002);
    END;

    LOCAL PROCEDURE ShowRevLinesOnlyOnAfterValidat@19064108();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE x0CurrentMenuTypeOptOnPush@19052720();
    BEGIN
      ChangeSubMenu(0);
    END;

    LOCAL PROCEDURE x0CurrentMenuTypeOptOnValidate@19061499();
    BEGIN
      x0CurrentMenuTypeOptOnPush;
    END;

    LOCAL PROCEDURE x1CurrentMenuTypeOptOnPush@19049100();
    BEGIN
      ChangeSubMenu(1);
    END;

    LOCAL PROCEDURE x1CurrentMenuTypeOptOnValidate@19066842();
    BEGIN
      x1CurrentMenuTypeOptOnPush;
    END;

    LOCAL PROCEDURE x2CurrentMenuTypeOptOnPush@19056045();
    BEGIN
      ChangeSubMenu(2);
    END;

    LOCAL PROCEDURE x2CurrentMenuTypeOptOnValidate@19009894();
    BEGIN
      x2CurrentMenuTypeOptOnPush;
    END;

    LOCAL PROCEDURE x3CurrentMenuTypeOptOnPush@19036287();
    BEGIN
      ChangeSubMenu(3);
    END;

    LOCAL PROCEDURE x3CurrentMenuTypeOptOnValidate@19044768();
    BEGIN
      x3CurrentMenuTypeOptOnPush;
    END;

    LOCAL PROCEDURE NoOfPostedPrepmtInvoices@3() : Integer;
    VAR
      SalesInvHeader@1000 : Record 112;
    BEGIN
      SalesInvHeader.SETRANGE("Sell-to Customer No.","No.");
      SalesInvHeader.SETRANGE("Prepayment Invoice",TRUE);
      EXIT(SalesInvHeader.COUNT);
    END;

    LOCAL PROCEDURE NoOfPostedPrepmtCrMemos@6() : Integer;
    VAR
      SalesCrMemoHeader@1000 : Record 114;
    BEGIN
      SalesCrMemoHeader.SETRANGE("Sell-to Customer No.","No.");
      SalesCrMemoHeader.SETRANGE("Prepayment Credit Memo",TRUE);
      EXIT(SalesCrMemoHeader.COUNT);
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCopyLineToDoc@7(VAR CopyDocumentMgt@1000 : Codeunit 6620);
    BEGIN
    END;

    BEGIN
    END.
  }
}

