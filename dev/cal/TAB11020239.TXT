OBJECT Table 11020239 Reporting Layout Column
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Reporting Layout Colum;
               NOR=Kolonne for Rapporteringslayout;
               SVE=Kolumn f”r rapporteringslayout];
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code20        ;TableRelation="Reporting Layout".Code;
                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod] }
    { 20  ;   ;Column No.          ;Integer       ;CaptionML=[ENU=Column No.;
                                                              NOR=Kolonnenr.;
                                                              SVE=Kolumnnr];
                                                   BlankZero=Yes }
    { 30  ;   ;Field No.           ;Integer       ;OnValidate=VAR
                                                                ReportingLayout@1100485002 : Record 11020238;
                                                                FieldTableManagement@1100529200 : Codeunit 11012372;
                                                              BEGIN
                                                                IF NOT ReportingLayout.GET(Code) THEN
                                                                  EXIT;

                                                                FieldTableManagement.GetFieldCaption(ReportingLayout."Table No.","Field No.","Field Caption");
                                                              END;

                                                   OnLookup=VAR
                                                              ReportingLayout@1100485002 : Record 11020238;
                                                              FieldTableManagement@1100529200 : Codeunit 11012372;
                                                            BEGIN
                                                              IF NOT ReportingLayout.GET(Code) THEN
                                                                EXIT;

                                                              VALIDATE("Field No.",FieldTableManagement.LookupFieldNo(ReportingLayout."Table No.","Field No."));
                                                            END;

                                                   CaptionML=[ENU=Field No.;
                                                              NOR=Feltnr.;
                                                              SVE=F„ltnr];
                                                   BlankZero=Yes }
    { 40  ;   ;Sort Priority       ;Integer       ;OnValidate=VAR
                                                                ReportLayoutColRec@1100485000 : Record 11020239;
                                                              BEGIN

                                                                IF "Sort Priority" <> 0 THEN BEGIN
                                                                  ReportLayoutColRec.SETCURRENTKEY(Code,"Sort Priority");
                                                                  ReportLayoutColRec.SETRANGE(Code,Code);
                                                                  ReportLayoutColRec.SETRANGE("Sort Priority","Sort Priority");
                                                                  ReportLayoutColRec.SETFILTER("Field No.",'<> %1',"Field No.");
                                                                  IF ReportLayoutColRec.FIND('-') THEN
                                                                    ERROR(Text000);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sort Priority;
                                                              NOR=Sorter Prioritet;
                                                              SVE=Sortera prioritet];
                                                   MinValue=0;
                                                   MaxValue=3;
                                                   BlankZero=Yes }
    { 50  ;   ;Sort Sequence       ;Option        ;CaptionML=[ENU=Sort Sequence;
                                                              NOR=Sorter Sekvens;
                                                              SVE=Sortera sekvens];
                                                   OptionCaptionML=[ENU=Ascending,Descending;
                                                                    NOR=Stigende,Synkende;
                                                                    SVE=Stigande,Fallande];
                                                   OptionString=Ascending,Descending }
    { 60  ;   ;Group               ;Boolean       ;CaptionML=[ENU=Group;
                                                              NOR=Gruppe;
                                                              SVE=Grupp] }
    { 70  ;   ;Sum                 ;Boolean       ;OnValidate=BEGIN
                                                                CheckGroupFunction(CurrFieldNo);
                                                              END;

                                                   CaptionML=[ENU=Sum;
                                                              NOR=Sum;
                                                              SVE=Summa] }
    { 80  ;   ;Count Field         ;Boolean       ;OnValidate=BEGIN
                                                                CheckGroupFunction(CurrFieldNo);
                                                              END;

                                                   CaptionML=[ENU=Count;
                                                              NOR=Beregn;
                                                              SVE=Ber„kna];
                                                   Description=FieldName  modified: Do not use fieldname 'Count', because then the function Rec.COUNT can not be used! }
    { 90  ;   ;Average             ;Boolean       ;OnValidate=BEGIN
                                                                CheckGroupFunction(CurrFieldNo);
                                                              END;

                                                   CaptionML=[ENU=Average;
                                                              NOR=Gjenomsnitt;
                                                              SVE=Genomsnitt] }
    { 100 ;   ;Max                 ;Boolean       ;OnValidate=BEGIN
                                                                CheckGroupFunction(CurrFieldNo);
                                                              END;

                                                   CaptionML=[ENU=Max;
                                                              NOR=Max.;
                                                              SVE=Max.] }
    { 110 ;   ;Min                 ;Boolean       ;OnValidate=BEGIN
                                                                CheckGroupFunction(CurrFieldNo);
                                                              END;

                                                   CaptionML=[ENU=Min;
                                                              NOR=Min.;
                                                              SVE=Min.] }
    { 120 ;   ;Product             ;Boolean       ;OnValidate=BEGIN
                                                                CheckGroupFunction(CurrFieldNo);
                                                              END;

                                                   CaptionML=[ENU=Product;
                                                              NOR=Produkt;
                                                              SVE=Product] }
    { 130 ;   ;CountNum            ;Boolean       ;OnValidate=BEGIN
                                                                CheckGroupFunction(CurrFieldNo);
                                                              END;

                                                   CaptionML=[ENU=Count Num;
                                                              NOR=Beregn antall;
                                                              SVE=Ber„kna ant.] }
    { 140 ;   ;StdDev              ;Boolean       ;OnValidate=BEGIN
                                                                CheckGroupFunction(CurrFieldNo);
                                                              END;

                                                   CaptionML=[ENU=Standard Deviation;
                                                              NOR=Standardavvik;
                                                              SVE=Standardavvikelse] }
    { 150 ;   ;StvDevp             ;Boolean       ;OnValidate=BEGIN
                                                                CheckGroupFunction(CurrFieldNo);
                                                              END;

                                                   CaptionML=[ENU=Standard Deviation p;
                                                              NOR=Standardavvik p;
                                                              SVE=Standardavvikelse p] }
    { 160 ;   ;Var                 ;Boolean       ;OnValidate=BEGIN
                                                                CheckGroupFunction(CurrFieldNo);
                                                              END;

                                                   CaptionML=[ENU=Variance;
                                                              NOR=Avvik;
                                                              SVE=Varians] }
    { 170 ;   ;Varp                ;Boolean       ;OnValidate=BEGIN
                                                                CheckGroupFunction(CurrFieldNo);
                                                              END;

                                                   CaptionML=[ENU=Variance p;
                                                              NOR=Varians p;
                                                              SVE=Avvikelse p] }
    { 180 ;   ;Field Caption       ;Text80        ;CaptionML=[ENU=Field Caption;
                                                              NOR=Felttekst;
                                                              SVE=F„ltrubrik];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Code,Column No.                         ;Clustered=Yes }
    {    ;Code,Sort Priority                       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100485000 : TextConst 'ENU="This priority is already used. ";NOR=Denne prioritet erallerede brukt.;SVE="Denna prioritet anv„nds redan. "';
      Text001@1100485001 : TextConst 'ENU=Only 1 column per type can be setup.;NOR=Kun 1 kolonne per type kan stilles inn.;SVE=Endast 1 kolumn per typ kan st„llas in.';
      Text004@1100485003 : TextConst 'ENU="This function is only available for numeric fields. ";NOR=Denne funksjonen er kun tilgjengelig for numeriske felt.;SVE="Denna funktion finns endast tillg„nglig f”r sifferf„lt. "';

    PROCEDURE CheckGroupFunction@1100485000(iFieldNo@1100485001 : Integer);
    VAR
      lReportingLayoutColRec@1100485000 : Record 11020239;
      lReportLayoutRec@1100485003 : Record 11020238;
      lFieldRec@1100485002 : Record 2000000041;
    BEGIN
      //check correct fieldtype
      IF (Sum OR Average OR Product OR StdDev OR StvDevp OR "Var" OR Varp) THEN BEGIN
        IF lReportLayoutRec.GET(Code) THEN BEGIN
          lFieldRec.SETRANGE(TableNo,lReportLayoutRec."Table No.");
          lFieldRec.SETRANGE("No.","Field No.");
          IF lFieldRec.FIND('-') THEN
            IF NOT (lFieldRec.Type IN [lFieldRec.Type::Decimal,lFieldRec.Type::Integer]) THEN
              ERROR(Text004);
        END;
      END;

      //check one column per cumulationtype
      {
      lReportingLayoutColRec.SETRANGE(Code,Code);
      CASE iFieldNo OF
        FIELDNO(Sum): lReportingLayoutColRec.SETRANGE(Sum,TRUE);
        FIELDNO(Count): lReportingLayoutColRec.SETRANGE(Count,TRUE);
        FIELDNO(Average): lReportingLayoutColRec.SETRANGE(Average,TRUE);
        FIELDNO(Max): lReportingLayoutColRec.SETRANGE(Max,TRUE);
        FIELDNO(Min): lReportingLayoutColRec.SETRANGE(Min,TRUE);
        FIELDNO(Product): lReportingLayoutColRec.SETRANGE(Product,TRUE);
        FIELDNO(CountNum): lReportingLayoutColRec.SETRANGE(CountNum,TRUE);
        FIELDNO(StdDev): lReportingLayoutColRec.SETRANGE(StdDev,TRUE);
        FIELDNO(StvDevp): lReportingLayoutColRec.SETRANGE(StvDevp,TRUE);
        FIELDNO("Var"): lReportingLayoutColRec.SETRANGE("Var",TRUE);
        FIELDNO(Varp): lReportingLayoutColRec.SETRANGE(Varp,TRUE);
      END;
      lReportingLayoutColRec.SETFILTER(lReportingLayoutColRec."Column No.",'<>%1',"Column No.");
      IF lReportingLayoutColRec.FIND('-') THEN
        ERROR(Text001);
      }
    END;

    BEGIN
    END.
  }
}

