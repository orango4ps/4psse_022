OBJECT Codeunit 11012432 Document Filters
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
            //InitTestData;
          END;

  }
  CODE
  {
    VAR
      GlobalTempDocumentProperties@1100528705 : TEMPORARY Record 11012746;
      LinkFieldCaption@1100528700 : ARRAY [5] OF Text[80];
      CurrentDocumentFilter@1100528706 : Record 11012073;
      RID@1100528704 : RecordID;
      DocumentRelationRecRef@1100528709 : RecordRef;
      DepartmentCode@1100528703 : Code[20];
      CanCopy@1100528702 : Boolean;
      ByCompany@1100528701 : Boolean;
      ContactNo@1100528707 : Code[20];
      ContactPersonNo@1100528708 : Code[20];
      Text001@1100528711 : TextConst 'DEU=Reserviert fÅr Link-Feld %1;ENU=Reserved for Link Field %1;NLD="Gereserveerd voor koppelingsveld %1 ";NOR=Reservert for Link Field %1';
      Text002@1100525000 : TextConst 'DEU=Filter fÅr Feld %1 ist ungÅltig.;ENU=Filter on field %1 is invalid.;NLD=Filter op veld %1 is ongelig.';
      gDocumentCompany@1100529000 : Text;

    PROCEDURE ExecuteDocumentFilter@1100528714(DocumentFilter@1100528700 : Record 11012073;FromFilterForm@1100528701 : Boolean);
    BEGIN
      ApplyDocumentFilter(DocumentFilter, GlobalTempDocumentProperties);
      SetFromFilterForm(FromFilterForm);
      PAGE.RUNMODAL(0, GlobalTempDocumentProperties);
    END;

    PROCEDURE RefreshDocumentFilterResult@1100528715(DocumentFilter@1100528700 : Record 11012073);
    BEGIN
      ApplyDocumentFilter(DocumentFilter, GlobalTempDocumentProperties);
    END;

    PROCEDURE ApplyDocumentFilter@1100528700(DocumentFilter@1100528700 : Record 11012073;VAR TempDocumentProperties@1100528701 : TEMPORARY Record 11012746);
    VAR
      DocumentFilterLine@1100528702 : Record 11012097;
      DocumentMgtSetup@1100528400 : Record 11071831;
      FirstFilterTable@1100528703 : Boolean;
      RecRef@1100528707 : RecordRef;
      Company@1100528711 : Text[30];
      FieldRefs@1100528709 : ARRAY [5] OF FieldRef;
      FilterCompany@1100528710 : Text[50];
      FilterTableNo@1100528704 : Integer;
      FilterTableFilterExpression@1100528705 : Text[100];
      Index@1100528708 : Integer;
    BEGIN
      TempDocumentProperties.RESET;
      TempDocumentProperties.DELETEALL;

      DocumentMgtSetup.GET;

      CLEAR(LinkFieldCaption);
      SetCurrentDocumentFilter(DocumentFilter);

      Index := 0;

      DocumentFilterLine.SETCURRENTKEY("User ID","Document Filter",Company,"Filter Table No.","Filter Table Filter Expression");
      DocumentFilterLine.SETRANGE("User ID", DocumentFilter."User ID"); // User ID can be empty, therefore use setrange
      DocumentFilterLine.SETRANGE("Document Filter", DocumentFilter."Document Filter");
      IF DocumentFilterLine.FINDSET THEN BEGIN
        REPEAT
          IF (FilterTableNo <> 0) AND
             ((FilterCompany <> DocumentFilterLine.Company) OR
              (FilterTableNo <> DocumentFilterLine."Filter Table No.") OR
              (FilterTableFilterExpression <> DocumentFilterLine."Filter Table Filter Expression"))
          THEN BEGIN
            IF FirstFilterTable THEN
              InsertDocumentsInTempTable(
                RecRef, FieldRefs, FilterCompany, TempDocumentProperties, DocumentMgtSetup."Show Only Own Documents")
            ELSE
              DeleteDocumentsFromTempTable(
                RecRef, FieldRefs, FilterCompany, TempDocumentProperties, DocumentMgtSetup."Show Only Own Documents");
          END;

          IF (FilterCompany <> DocumentFilterLine.Company) OR
             (FilterTableNo <> DocumentFilterLine."Filter Table No.") OR
             (FilterTableFilterExpression <> DocumentFilterLine."Filter Table Filter Expression")
          THEN BEGIN
            IF RecRef.NUMBER <> 0 THEN
              RecRef.CLOSE;
            GetRecRefWithDocFilLineFilters(DocumentFilterLine, RecRef);
            GetFieldRefsToShow(DocumentFilterLine, RecRef, FieldRefs, Index);
            FirstFilterTable := (FilterTableNo = 0);
            FilterCompany := DocumentFilterLine.Company;
            FilterTableNo := DocumentFilterLine."Filter Table No.";
            FilterTableFilterExpression := DocumentFilterLine."Filter Table Filter Expression";
          END;
        UNTIL DocumentFilterLine.NEXT = 0;

        IF FilterTableNo <> 0 THEN BEGIN
          IF FirstFilterTable THEN
            InsertDocumentsInTempTable(
              RecRef, FieldRefs, FilterCompany, TempDocumentProperties, DocumentMgtSetup."Show Only Own Documents")
          ELSE
            DeleteDocumentsFromTempTable(
              RecRef, FieldRefs, FilterCompany, TempDocumentProperties, DocumentMgtSetup."Show Only Own Documents");
        END;
      END ELSE
        InsertDocumentsInTempTable2(DocumentFilter, TempDocumentProperties);

      ApplyDocumentFilterFields(DocumentFilter, TempDocumentProperties);

      SetShowingResultDocumentFilter(TRUE);
    END;

    PROCEDURE FindRecFilterResult@59(VAR DocumentProperties@1001 : Record 11012746;Which@1002 : Text[250]) : Boolean;
    VAR
      Found@1003 : Boolean;
    BEGIN
      CopyFiltersToTempDocumentProperties(DocumentProperties, GlobalTempDocumentProperties);
      GlobalTempDocumentProperties."No." := DocumentProperties."No.";
      Found := GlobalTempDocumentProperties.FIND(Which);
      IF Found THEN BEGIN
        DocumentProperties.INIT;
        DocumentProperties.TRANSFERFIELDS(GlobalTempDocumentProperties);
      END;
      EXIT(Found);
    END;

    PROCEDURE NextRecFilterResult@60(VAR DocumentProperties@1001 : Record 11012746;Steps@1002 : Integer) : Integer;
    VAR
      ResultSteps@1003 : Integer;
    BEGIN
      CopyFiltersToTempDocumentProperties(DocumentProperties, GlobalTempDocumentProperties);
      GlobalTempDocumentProperties."No." := DocumentProperties."No.";
      ResultSteps := GlobalTempDocumentProperties.NEXT(Steps);
      IF ResultSteps <> 0 THEN BEGIN
        DocumentProperties.INIT;
        DocumentProperties.TRANSFERFIELDS(GlobalTempDocumentProperties);
      END;
      EXIT(ResultSteps);
    END;

    LOCAL PROCEDURE CopyFiltersToTempDocumentProperties@1100528401(VAR DocumentProperties@1100528400 : Record 11012746;VAR TempDocumentProperties@1100528401 : TEMPORARY Record 11012746);
    BEGIN
      TempDocumentProperties.FILTERGROUP(2);
      TempDocumentProperties.COPYFILTERS(DocumentProperties);
      TempDocumentProperties.FILTERGROUP(0);
    END;

    PROCEDURE GetRecRefWithDocFilLineFilters@1100528703(DocumentFilterLine@1100528701 : Record 11012097;VAR RecRef@1100528700 : RecordRef);
    VAR
      FieldRef@1100528704 : FieldRef;
    BEGIN
      DocumentFilterLine.SETCURRENTKEY("User ID","Document Filter",Company,"Filter Table No.","Filter Table Filter Expression");
      DocumentFilterLine.SETRANGE("User ID", DocumentFilterLine."User ID");
      DocumentFilterLine.SETRANGE("Document Filter", DocumentFilterLine."Document Filter");
      DocumentFilterLine.SETRANGE(Company, DocumentFilterLine.Company);
      DocumentFilterLine.SETRANGE("Filter Table No.", DocumentFilterLine."Filter Table No.");
      DocumentFilterLine.SETRANGE("Filter Table Filter Expression", DocumentFilterLine."Filter Table Filter Expression");
      IF DocumentFilterLine.FINDSET THEN BEGIN
        IF DocumentFilterLine.Company <> '' THEN
          RecRef.OPEN(DocumentFilterLine."Filter Table No.", FALSE, DocumentFilterLine.Company)
        ELSE
          RecRef.OPEN(DocumentFilterLine."Filter Table No."); // Current company
        IF DocumentFilterLine."Filter Table Filter Expression" <> '' THEN
          RecRef.SETVIEW(DocumentFilterLine."Filter Table Filter Expression"); // Filter from possible document links
        REPEAT
          IF DocumentFilterLine."Filter Expression" <> '' THEN BEGIN
            FieldRef := RecRef.FIELD(DocumentFilterLine."Link Field No.");
            FieldRef.SETFILTER(DocumentFilterLine."Filter Expression");
          END;
        UNTIL DocumentFilterLine.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE GetFieldRefsToShow@1100528706(DocumentFilterLine@1100528703 : Record 11012097;RecRef@1100528700 : RecordRef;VAR FieldRefs@1100528701 : ARRAY [5] OF FieldRef;VAR Index@1100528704 : Integer);
    VAR
      PossibleDocumentLink@1100528702 : Record 11012748;
      LinkName@1100528705 : Text[80];
    BEGIN
      CLEAR(FieldRefs);

      IF Index >= 5 THEN
        EXIT;

      DocumentFilterLine.SETCURRENTKEY("User ID","Document Filter",Company,"Filter Table No.","Filter Table Filter Expression");
      DocumentFilterLine.SETRANGE("User ID", DocumentFilterLine."User ID");
      DocumentFilterLine.SETRANGE("Document Filter", DocumentFilterLine."Document Filter");
      DocumentFilterLine.SETRANGE(Company, DocumentFilterLine.Company);
      DocumentFilterLine.SETRANGE("Filter Table No.", DocumentFilterLine."Filter Table No.");
      DocumentFilterLine.SETRANGE("Filter Table Filter Expression", DocumentFilterLine."Filter Table Filter Expression");
      DocumentFilterLine.SETRANGE("Show in Document List", TRUE);
      IF DocumentFilterLine.FINDSET THEN BEGIN
        REPEAT
          Index := Index + 1;
          FieldRefs[Index] := RecRef.FIELD(DocumentFilterLine."Link Field No.");
          LinkName := PossibleDocumentLink.GetLinkName(
            DocumentFilterLine."Filter Table No.",
            DocumentFilterLine."Filter Table Filter Expression");
          SetLinkFieldCaption(LinkName, FieldRefs, Index);
        UNTIL (DocumentFilterLine.NEXT = 0) OR (Index >= 5);
      END;
    END;

    LOCAL PROCEDURE DeleteDocumentsFromTempTable@1199198003(VAR RecRef@1100528701 : RecordRef;VAR FieldRefs@1100528702 : ARRAY [5] OF FieldRef;Company@1100528703 : Text[30];VAR TempDocumentProperties@1100528700 : TEMPORARY Record 11012746;ShowOnlyOwnDocuments@1100528400 : Boolean);
    VAR
      DocumentLink@1199198000 : Record 11012747;
      Found@1100528705 : Boolean;
    BEGIN
      IF NOT RecRef.FINDSET THEN BEGIN
        TempDocumentProperties.RESET;
        TempDocumentProperties.DELETEALL;
        EXIT;
      END;

      TempDocumentProperties.RESET;
      IF TempDocumentProperties.FINDSET THEN BEGIN
        REPEAT
          Found := FALSE;
          IF RecRef.FINDSET THEN BEGIN
            REPEAT
              DocumentLink.RESET;
              DocumentLink.SETRANGE("Document No.", TempDocumentProperties."No.");
              DocumentLink.SETRANGE("Table No.", RecRef.NUMBER);
              DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', RecRef.RECORDID));
              IF ShowOnlyOwnDocuments THEN
                DocumentLink.SETRANGE("Internal Company", Company);
              IF DocumentLink.FINDFIRST THEN BEGIN
                FillLinkFieldValue(RecRef, FieldRefs, TempDocumentProperties);
                TempDocumentProperties.MODIFY;
                Found := TRUE;
              END;
            UNTIL (RecRef.NEXT = 0) OR (Found = TRUE);
          END;
          IF NOT Found THEN
            TempDocumentProperties.DELETE;
        UNTIL TempDocumentProperties.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE InsertDocumentsInTempTable@1100528702(VAR RecRef@1100528701 : RecordRef;VAR FieldRefs@1100528703 : ARRAY [5] OF FieldRef;Company@1100528704 : Text[30];VAR TempDocumentProperties@1100528700 : TEMPORARY Record 11012746;ShowOnlyOwnDocuments@1100528400 : Boolean);
    VAR
      DocumentLink@1199198000 : Record 11012747;
      DocumentProperties@1100528702 : Record 11012746;
    BEGIN
      IF NOT RecRef.FINDSET THEN BEGIN
        TempDocumentProperties.RESET;
        TempDocumentProperties.DELETEALL;
        EXIT;
      END;

      IF RecRef.FINDSET THEN BEGIN
        REPEAT
          DocumentLink.RESET;
          DocumentLink.SETCURRENTKEY("Record ID");
          DocumentLink.SETRANGE("Table No.", RecRef.NUMBER);
          IF ShowOnlyOwnDocuments THEN
            DocumentLink.SETRANGE("Internal Company", Company);
          DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', RecRef.RECORDID));
          IF DocumentLink.FINDSET THEN BEGIN
            REPEAT
              IF DocumentProperties.GET(DocumentLink."Document No.") THEN BEGIN
                TempDocumentProperties.INIT;
                TempDocumentProperties.TRANSFERFIELDS(DocumentProperties);
                FillLinkFieldValue(RecRef, FieldRefs, TempDocumentProperties);
                IF TempDocumentProperties.INSERT THEN;
              END;
            UNTIL DocumentLink.NEXT = 0;
          END;
        UNTIL RecRef.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE InsertDocumentsInTempTable2@1100528705(DocumentFilter@1100528701 : Record 11012073;VAR TempDocumentProperties@1100528700 : TEMPORARY Record 11012746);
    VAR
      MarketingSetup@1100528702 : Record 5079;
      DocumentProperties@1100528703 : Record 11012746;
    BEGIN
      MarketingSetup.GET;

      DocumentProperties.SETFILTER(Status, DocumentFilter.Status);
      DocumentProperties.SETFILTER("Contact No.", DocumentFilter."Contact No.");
      DocumentProperties.SETFILTER("Contact Person No.", DocumentFilter."Contact Person No.");
      SetInternalCompanyFilter(DocumentProperties, DocumentFilter);
      DocumentProperties.SETFILTER(Sender, DocumentFilter.Sender);
      DocumentProperties.SETFILTER(Editor, DocumentFilter.Editor);
      DocumentProperties.SETFILTER("Final Printed", DocumentFilter."Final Printed");
      DocumentProperties.SETFILTER("External Document", DocumentFilter."External Document");
      DocumentProperties.SETFILTER("Original To", DocumentFilter."Original To");
      DocumentProperties.SETFILTER("Document Type", DocumentFilter."Document Type");
      DocumentProperties.SETFILTER("Document Group", DocumentFilter."Document Group");
      DocumentProperties.SETFILTER("Document Category", DocumentFilter."Document Category");
      IF DocumentProperties.FINDSET THEN
        REPEAT
          TempDocumentProperties.INIT;
          TempDocumentProperties.TRANSFERFIELDS(DocumentProperties);
          IF TempDocumentProperties.INSERT THEN;
        UNTIL DocumentProperties.NEXT = 0;
    END;

    LOCAL PROCEDURE FillLinkFieldValue@1100528707(VAR RecRef@1100528702 : RecordRef;VAR FieldRefs@1100528701 : ARRAY [5] OF FieldRef;VAR TempDocumentProperties@1100528700 : TEMPORARY Record 11012746);
    VAR
      FieldRec@1100528708 : Record 2000000041;
      I@1100528703 : Integer;
      ReadableOption@1100528706 : Text[1024];
      Value@1100528705 : Text[1024];
      OptionFieldTools@1100528704 : Codeunit 11012271;
    BEGIN
      FOR I := 1 TO 5 DO BEGIN
        IF FORMAT(FieldRefs[I]) <> '' THEN BEGIN
          FieldRec.GET(RecRef.NUMBER, FieldRefs[I].NUMBER);
          IF FieldRec.Type = FieldRec.Type::Option THEN BEGIN
            IF OptionFieldTools.OptionValueToReadableOption2(FieldRefs[I], ReadableOption) THEN
              Value := ReadableOption;
          END ELSE
            Value := FORMAT(FieldRefs[I].VALUE);
          CASE I OF
            1: TempDocumentProperties."Link Field 1" := COPYSTR(Value, 1, 50);
            2: TempDocumentProperties."Link Field 2" := COPYSTR(Value, 1, 50);
            3: TempDocumentProperties."Link Field 3" := COPYSTR(Value, 1, 50);
            4: TempDocumentProperties."Link Field 4" := COPYSTR(Value, 1, 50);
            5: TempDocumentProperties."Link Field 5" := COPYSTR(Value, 1, 50);
          END;
        END;
      END;
    END;

    PROCEDURE ApplyDocumentFilterFields@1100528704(DocumentFilter@1100528701 : Record 11012073;VAR TempDocumentProperties@1100528700 : TEMPORARY Record 11012746);
    VAR
      MarketingSetup@1100528702 : Record 5079;
    BEGIN
      MarketingSetup.GET;

      TempDocumentProperties.SETFILTER("Department Code", DocumentFilter.Department);
      TempDocumentProperties.SETFILTER(Status, DocumentFilter.Status);
      TempDocumentProperties.SETFILTER("Contact No.", DocumentFilter."Contact No.");
      TempDocumentProperties.SETFILTER("Contact Person No.", DocumentFilter."Contact Person No.");
      TempDocumentProperties.SETFILTER("Document Group", DocumentFilter."Document Group");
      TempDocumentProperties.SETFILTER("Document Type", DocumentFilter."Document Type");
      TempDocumentProperties.SETFILTER("Document Category", DocumentFilter."Document Category");
      TempDocumentProperties.SETFILTER(Sender, DocumentFilter.Sender);
      TempDocumentProperties.SETFILTER(Editor, DocumentFilter.Editor);
      TempDocumentProperties.SETFILTER("Handled By", DocumentFilter."Handled by");
      TempDocumentProperties.SETFILTER("Final Printed", DocumentFilter."Final Printed");
      TempDocumentProperties.SETFILTER("External Document", DocumentFilter."External Document");
      TempDocumentProperties.SETFILTER("Original To", DocumentFilter."Original To");
      TempDocumentProperties.FILTERGROUP(2);
      SetInternalCompanyFilter(TempDocumentProperties, DocumentFilter);
      TempDocumentProperties.FILTERGROUP(0);
    END;

    PROCEDURE CreateTempFilterAndExecute1@1100528709(RecRef@1100528700 : RecordRef;DepartmentCode@1100528705 : Code[20];CanCopy@1100528704 : Boolean;ByCompany@1100528703 : Boolean);
    VAR
      DocumentFilter@1100528701 : Record 11012073;
    BEGIN
      // Use for general filtering
      RecRef.FIND('='); //C015575
      CreateTemporaryFilter(RecRef, DocumentFilter);
      COMMIT;

      SetVarsDocumentList(RecRef.RECORDID, DepartmentCode, CanCopy, ByCompany);

      SetContact('', '');

      ExecuteDocumentFilter(DocumentFilter, FALSE);
    END;

    PROCEDURE CreateTempFilterAndExecute2@1100528719(RecRef@1100528703 : RecordRef;DepartmentCode@1100528702 : Code[20];CanCopy@1100528701 : Boolean;ByCompany@1100528700 : Boolean;ExternalDocumentFilter@1100528704 : Text[30]);
    VAR
      DocumentFilter@1100528706 : Record 11012073;
      RecRef2@1100528707 : RecordRef;
      FldRef2@1100528708 : FieldRef;
    BEGIN
      // Use when setting other external document filter
      CreateTemporaryFilter(RecRef, DocumentFilter);

      RecRef2.GETTABLE(DocumentFilter);
      FldRef2 := RecRef2.FIELD(DocumentFilter.FIELDNO("External Document"));
      DocumentFilter."External Document" := DocumentFilter.ReadableOptionsToBoolFilter(ExternalDocumentFilter, FldRef2);
      DocumentFilter.MODIFY;
      COMMIT;

      SetVarsDocumentList(RecRef.RECORDID, DepartmentCode, CanCopy, ByCompany);

      SetContact('', '');

      ExecuteDocumentFilter(DocumentFilter, FALSE);
    END;

    PROCEDURE CreateTempFilterAndExecute3@1100528718(RecRef@1100528700 : RecordRef;UseRecRefInDocumentFilter@1100528400 : Boolean;DepartmentCode@1100528705 : Code[20];CanCopy@1100528704 : Boolean;ByCompany@1100528703 : Boolean;ContactNo@1100528706 : Code[20];ContactPersonNo@1100528707 : Code[20]);
    VAR
      DocumentFilter@1100528701 : Record 11012073;
      DummyRecRef@1100528401 : RecordRef;
      DummyRID@1100409000 : RecordID;
    BEGIN
      // Use for contacts
      IF UseRecRefInDocumentFilter THEN
        CreateTemporaryFilter(RecRef, DocumentFilter)
      ELSE
        CreateTemporaryFilter(DummyRecRef, DocumentFilter);

      DocumentFilter."Contact No." := ContactNo;
      DocumentFilter."Contact Person No." := ContactPersonNo;
      DocumentFilter.MODIFY;
      COMMIT;

      IF RecRef.NUMBER <> 0 THEN
        SetVarsDocumentList(RecRef.RECORDID, DepartmentCode, CanCopy, ByCompany)
      ELSE
        SetVarsDocumentList(DummyRID, DepartmentCode, CanCopy, ByCompany);

      SetContact(ContactNo, ContactPersonNo);

      ExecuteDocumentFilter(DocumentFilter, FALSE);
    END;

    PROCEDURE CreateTempFilterAndExecute4@1100528724(RecRef@1100528703 : RecordRef;DocumentRelationRecRef@1100528708 : RecordRef);
    VAR
      DocumentFilter@1100528701 : Record 11012073;
      DummyRID@1100409000 : RecordID;
    BEGIN
      // Use for document relations
      CreateTemporaryFilter(RecRef, DocumentFilter);
      COMMIT;

      IF RecRef.NUMBER <> 0 THEN
        SetVarsDocumentList(RecRef.RECORDID, '', TRUE, TRUE)
      ELSE
        SetVarsDocumentList(DummyRID, '', TRUE, TRUE);

      SetContact('', '');

      SetDocumentRelationRecRef(DocumentRelationRecRef);

      ExecuteDocumentFilter(DocumentFilter, FALSE);
    END;

    PROCEDURE CreateTempFilterAndExecute5@1100529600(RecRef@1100528700 : RecordRef;AdditionalRecRef@1100529600 : RecordRef;DepartmentCode@1100528705 : Code[20];CanCopy@1100528704 : Boolean;ByCompany@1100528703 : Boolean);
    VAR
      DocumentFilter@1100528701 : Record 11012073;
      DummyRID@1100526000 : RecordID;
    BEGIN
      // Use for base service orders
      IF RecRef.NUMBER <> 0 THEN
        RecRef.FIND('=');
      CreateTemporaryFilter(RecRef, DocumentFilter);
      UpdateTemporaryFilterLines(AdditionalRecRef, DocumentFilter);
      COMMIT;

      IF RecRef.NUMBER <> 0 THEN
        SetVarsDocumentList(RecRef.RECORDID, DepartmentCode, CanCopy, ByCompany)
      ELSE
        SetVarsDocumentList(DummyRID, DepartmentCode, CanCopy, ByCompany);

      SetContact('', '');

      ExecuteDocumentFilter(DocumentFilter, FALSE);
    END;

    PROCEDURE CreateTempFilterAndGetDocProps@1100525001(RecRef@1100525000 : RecordRef;VAR TempDocumentProperties@1100525003 : Record 11012746);
    VAR
      DocumentFilter@1100525004 : Record 11012073;
    BEGIN
      CreateTemporaryFilter(RecRef, DocumentFilter);
      ApplyDocumentFilter(DocumentFilter, TempDocumentProperties);
    END;

    PROCEDURE CreateTemporaryFilter@1100528708(RecRef@1100528700 : RecordRef;VAR DocumentFilter@1100528701 : Record 11012073);
    VAR
      DocumentMgtSetup@1100525001 : Record 11071831;
    BEGIN
      DocumentMgtSetup.GET;

      CLEAR(DocumentFilter);

      DocumentFilter.SETRANGE("User ID", USERID);
      DocumentFilter.SETRANGE(Temp, TRUE);
      DocumentFilter.DELETEALL(TRUE);

      DocumentFilter."User ID" := USERID;
      DocumentFilter."Document Filter" := DELCHR(FORMAT(TIME), '=', ':');
      DocumentFilter.Temp := TRUE;
      DocumentFilter.InitValueStatusFilter;
      DocumentFilter.InitValueFinalPrFilter;
      DocumentFilter.InitValueExtDocFilter;
      IF DocumentMgtSetup."Show Only Own Documents" THEN BEGIN  //C033089
        DocumentFilter."Internal Company" := COMPANYNAME;
        IF gDocumentCompany <> '' THEN
          DocumentFilter."Internal Company" := gDocumentCompany;
      END;
      DocumentFilter.INSERT;

      CreateTemporaryFilterLines(RecRef, DocumentFilter);
    END;

    LOCAL PROCEDURE CreateTemporaryFilterLines@1100528712(RecRef@1100528701 : RecordRef;DocumentFilter@1100528700 : Record 11012073);
    VAR
      KeyRef@1100528704 : KeyRef;
      FldRef@1100528705 : FieldRef;
      DocumentFilterLine@1100528706 : Record 11012097;
      FieldRec@1100528707 : Record 2000000041;
      DocumentLinkManagement@1100528702 : Codeunit 11012401;
      OptionFieldTools@1100528708 : Codeunit 11012271;
      I@1100528703 : Integer;
      ReadableOption@1100528709 : Text[100];
    BEGIN
      IF RecRef.NUMBER = 0 THEN
        EXIT;

      KeyRef := RecRef.KEYINDEX(1);

      FOR I := 1 TO KeyRef.FIELDCOUNT DO BEGIN
        FldRef := KeyRef.FIELDINDEX(I);
        FldRef := RecRef.FIELD(FldRef.NUMBER);
        DocumentFilterLine.INIT;
        DocumentFilterLine."User ID" := DocumentFilter."User ID";
        DocumentFilterLine."Document Filter" := DocumentFilter."Document Filter";
        DocumentFilterLine."Line No." := DocumentFilterLine.GetNextFreeLineNo;
        DocumentFilterLine.Company := COMPANYNAME;
        IF gDocumentCompany <> '' THEN
          DocumentFilterLine.Company := gDocumentCompany;
        DocumentFilterLine.VALIDATE("Filter Table No.", RecRef.NUMBER);
        DocumentFilterLine."Filter Table Filter Expression" := DocumentLinkManagement.GetFilterExpression(RecRef.RECORDID);
        DocumentFilterLine."Link Field No." := FldRef.NUMBER;
        FieldRec.GET(RecRef.NUMBER, FldRef.NUMBER);
        IF FieldRec.Type = FieldRec.Type::Option THEN BEGIN
          IF OptionFieldTools.OptionValueToReadableOption2(FldRef, ReadableOption) THEN
            DocumentFilterLine."Filter Expression" := ReadableOption;
        END ELSE
          DocumentFilterLine."Filter Expression" := FORMAT(FldRef.VALUE);
        DocumentFilterLine."Show in Document List" := TRUE;
        DocumentFilterLine.INSERT;
      END;
    END;

    LOCAL PROCEDURE UpdateTemporaryFilterLines@1100529601(AdditionalRecRef@1100528701 : RecordRef;DocumentFilter@1100528700 : Record 11012073);
    VAR
      KeyRef@1100528704 : KeyRef;
      FldRef@1100528705 : FieldRef;
      DocumentFilterLine@1100528706 : Record 11012097;
      LineFound@1100526000 : Boolean;
    BEGIN
      IF AdditionalRecRef.NUMBER = 0 THEN
        EXIT;

      KeyRef := AdditionalRecRef.KEYINDEX(1);
      IF KeyRef.FIELDCOUNT > 1 THEN
        EXIT;
      FldRef := KeyRef.FIELDINDEX(1);

      IF AdditionalRecRef.FINDSET THEN
        REPEAT
          FldRef := AdditionalRecRef.FIELD(FldRef.NUMBER);
          IF NOT LineFound THEN BEGIN
            DocumentFilterLine.SETRANGE("User ID", DocumentFilter."User ID");
            DocumentFilterLine.SETRANGE("Document Filter", DocumentFilter."Document Filter");
            DocumentFilterLine.SETRANGE("Filter Table No.", AdditionalRecRef.NUMBER);
            DocumentFilterLine.SETRANGE("Link Field No.", FldRef.NUMBER);
            LineFound := DocumentFilterLine.FINDLAST;
          END;
          IF NOT LineFound THEN BEGIN
            CreateTemporaryFilterLines(AdditionalRecRef, DocumentFilter);
            LineFound := DocumentFilterLine.FINDLAST;
            IF NOT LineFound THEN EXIT;
          END ELSE
            DocumentFilterLine."Filter Expression" := DocumentFilterLine."Filter Expression" + '|' + FORMAT(FldRef.VALUE);
        UNTIL AdditionalRecRef.NEXT = 0;

      DocumentFilterLine.MODIFY;
    END;

    LOCAL PROCEDURE SetVarsDocumentList@1100528711(NewRID@1100528700 : RecordID;NewDepartmentCode@1100528701 : Code[20];NewCanCopy@1100528702 : Boolean;NewByCompany@1100528703 : Boolean);
    BEGIN
      // Fill global variables. The variables are used in form Document List when showing the result of a document filter.
      RID := NewRID;
      DepartmentCode := NewDepartmentCode;
      CanCopy := NewCanCopy;
      ByCompany := NewByCompany;
    END;

    PROCEDURE GetVarsDocumentList@1100528725(VAR NewRID@1100528700 : RecordID;VAR NewDepartmentCode@1100528701 : Code[20];VAR NewCanCopy@1100528702 : Boolean;VAR NewByCompany@1100528703 : Boolean);
    BEGIN
      NewRID := RID;
      NewDepartmentCode := DepartmentCode;
      NewCanCopy := CanCopy;
      NewByCompany := ByCompany;
    END;

    PROCEDURE SetContact@1100528720(NewContactNo@1100528700 : Code[20];NewContactPersonNo@1100528701 : Code[20]);
    BEGIN
      // Fill global variables. The variables are used in form Document List when showing the result of a document filter.
      ContactNo := NewContactNo;
      ContactPersonNo := NewContactPersonNo;
    END;

    PROCEDURE GetContact@1100528721(VAR NewContactNo@1100528700 : Code[20];VAR NewContactPersonNo@1100528701 : Code[20]);
    BEGIN
      NewContactNo := ContactNo;
      NewContactPersonNo := ContactPersonNo;
    END;

    PROCEDURE SetDocumentRelationRecRef@1100528726(RecRef@1100528700 : RecordRef);
    BEGIN
      // Fill global variables. The variables are used in form Document List when showing the result of a document filter.
      DocumentRelationRecRef := RecRef;
    END;

    PROCEDURE GetDocumentRelationRecRef@1100528728(VAR RecRef@1100528700 : RecordRef);
    BEGIN
      RecRef := DocumentRelationRecRef;
    END;

    LOCAL PROCEDURE SetLinkFieldCaption@1100528710(LinkName@1100528702 : Text[80];VAR FieldRefs@1100528701 : ARRAY [5] OF FieldRef;Index@1100528700 : Integer);
    BEGIN
      // Fill global variable. The captions are use in form Document List when showing the result of a document filter.
      LinkFieldCaption[Index] := COPYSTR(LinkName + ' ' + FieldRefs[Index].CAPTION, 1, MAXSTRLEN(LinkFieldCaption[Index]));
    END;

    PROCEDURE GetLinkFieldCaption@1100528713(Index@1100528700 : Integer) : Text[80];
    BEGIN
      IF LinkFieldCaption[Index] <> '' THEN
        EXIT(LinkFieldCaption[Index])
      ELSE
        EXIT(STRSUBSTNO(Text001, Index));
    END;

    PROCEDURE LinkFieldUsed@1100528723(Index@1100528700 : Integer) : Boolean;
    BEGIN
      EXIT(LinkFieldCaption[Index] <> '');
    END;

    PROCEDURE SetCurrentDocumentFilter@1100528717(DocumentFilter@1100528700 : Record 11012073);
    BEGIN
      CurrentDocumentFilter.COPY(DocumentFilter);
    END;

    PROCEDURE GetCurrentDocumentFilter@1100528716(VAR DocumentFilter@1100528700 : Record 11012073);
    BEGIN
      DocumentFilter.COPY(CurrentDocumentFilter);
    END;

    LOCAL PROCEDURE SetShowingResultDocumentFilter@1100528727(NewValue@1100528700 : Boolean);
    BEGIN
      GlobalTempDocumentProperties.SETRANGE("Showing Result Document Filter", NewValue);
    END;

    LOCAL PROCEDURE SetFromFilterForm@1100528722(NewValue@1100528700 : Boolean);
    BEGIN
      GlobalTempDocumentProperties.SETRANGE("From Filter Form", NewValue);
    END;

    LOCAL PROCEDURE InitTestData@1100528701();
    VAR
      DocumentProperties@1100528700 : Record 11012746;
      DocLinkMgt@1100528701 : Codeunit 11012401;
      Job@1100528702 : Record 11072003;
      Vendor@1100528708 : Record 23;
      DocLinkRID@1100528703 : ARRAY [5] OF RecordID;
      i@1100528704 : Integer;
      RecRef@1100528706 : RecordRef;
      j@1100528707 : Integer;
      k@1100528709 : Integer;
    BEGIN
      FOR i := 1 TO 10000 DO BEGIN
        CLEAR(DocumentProperties);
        DocumentProperties."User ID" := USERID;
        DocumentProperties.INSERT(TRUE);
        j += 1;
        IF j > 5 THEN
          j := 1;
        IF Job.FINDFIRST THEN BEGIN
          k := 1;
          WHILE (k <> j) DO BEGIN
            IF Job.NEXT = 0 THEN;
            k += 1;
          END;
          RecRef.GETTABLE(Job);
          DocLinkRID[1] := RecRef.RECORDID;
          DocLinkMgt.CreateDocumentLink(DocumentProperties, DocLinkRID);
        END;

        IF Vendor.FINDFIRST THEN BEGIN
          k := 1;
          WHILE (k <> j) DO BEGIN
            IF Vendor.NEXT = 0 THEN;
            k += 1;
          END;
          RecRef.GETTABLE(Vendor);
          DocLinkRID[1] := RecRef.RECORDID;
          DocLinkMgt.CreateDocumentLink(DocumentProperties, DocLinkRID);
        END;
      END;
    END;

    LOCAL PROCEDURE SetInternalCompanyFilter@1100528400(VAR DocumentProperties@1100528400 : Record 11012746;DocumentFilter@1100528401 : Record 11012073);
    VAR
      StringFunctions@1100528402 : Codeunit 11012273;
    BEGIN
      IF DocumentFilter."Internal Company" = '' THEN BEGIN
        DocumentProperties.SETRANGE("Internal Company");
        EXIT;
      END;

      IF STRPOS(DocumentFilter."Internal Company", '|') > 0 THEN BEGIN
        IF (STRPOS(DocumentFilter."Internal Company", '&') > 0) OR
           (STRPOS(DocumentFilter."Internal Company", '''') > 0)
        THEN
          ERROR(Text002, DocumentFilter.FIELDCAPTION("Internal Company"));
        DocumentProperties.SETFILTER("Internal Company", DocumentFilter."Internal Company")
      END ELSE
        DocumentProperties.SETFILTER("Internal Company", STRSUBSTNO('''%1''',
          StringFunctions.ReplaceString(DocumentFilter."Internal Company", '''', '''''')));
    END;

    PROCEDURE SetDocumentCompany@1100529000(DocumentCompany@1100525000 : Text);
    BEGIN
      gDocumentCompany := DocumentCompany;
    END;

    BEGIN
    {
      //******************************************
      // This is single instance code unit !!!
      //******************************************
    }
    END.
  }
}

