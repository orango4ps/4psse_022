OBJECT Table 11071869 Credit Limit by Date
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               CentralDataMgt@1100528300 : Codeunit 11012010;
             BEGIN
               CheckStartDate;
               CentralDataMgt.EditCreditLimitByDate(Rec, 1, xRec);
             END;

    OnModify=VAR
               CentralDataMgt@1100528300 : Codeunit 11012010;
             BEGIN
               CheckForDateInconsistency(2);
               CentralDataMgt.EditCreditLimitByDate(Rec, 2, xRec);
             END;

    OnDelete=VAR
               CreditLimitbyDate@1100528001 : Record 11071869;
               xCreditLimitbyDate@1100528000 : Record 11071869;
               CentralDataMgt@1100528300 : Codeunit 11012010;
             BEGIN
               //CheckForDateInconsistency(3); //#CC021634.o
               TESTFIELD("End Date", 0D);
               CentralDataMgt.EditCreditLimitByDate(Rec, 4, xRec);

               //#CC021634.sn
               CreditLimitbyDate.SETRANGE("Customer No.", "Customer No.");
               CreditLimitbyDate.SETFILTER("Start Date", '<%1', "Start Date");
               CreditLimitbyDate.SETFILTER("End Date", '<>%1', 0D);
               IF (CreditLimitbyDate.FINDLAST) THEN BEGIN
                 IF (CreditLimitbyDate."End Date" <> 0D) THEN BEGIN
                   xCreditLimitbyDate.COPY(CreditLimitbyDate);
                   CreditLimitbyDate."End Date" := 0D;
                   CreditLimitbyDate.MODIFY(FALSE);
                   CentralDataMgt.EditCreditLimitByDate(CreditLimitbyDate, 2, xCreditLimitbyDate);
                 END;
               END;
               //#CC021634.en
             END;

    CaptionML=[ENU=Credit Limit by Date;
               NOR=Kreditgrense etter dato;
               SVE=Kreditlimit per datum];
  }
  FIELDS
  {
    { 10  ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Customer No.;
                                                              NOR=Kundenr.;
                                                              SVE=Kundnr];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 20  ;   ;Start Date          ;Date          ;OnValidate=BEGIN
                                                                CheckStartDate;
                                                              END;

                                                   CaptionML=[ENU=Start Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum];
                                                   NotBlank=Yes }
    { 30  ;   ;End Date            ;Date          ;CaptionML=[ENU=End Date;
                                                              NOR=Sluttdato;
                                                              SVE=Slutdatum];
                                                   Editable=No }
    { 40  ;   ;Credit Limit (LCY)  ;Decimal       ;CaptionML=[ENU=Credit Limit (LCY);
                                                              NOR=Kredittgrense (NOK);
                                                              SVE=Kreditlimit (BVA)];
                                                   AutoFormatType=1 }
    { 50  ;   ;Comment             ;Text80        ;CaptionML=[ENU=Comment;
                                                              NOR=Merknad;
                                                              SVE=Kommentar] }
  }
  KEYS
  {
    {    ;Customer No.,Start Date                 ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528303 : TextConst 'ENU=%1 must be filled.;NOR=%1 m† fylles ut.;SVE=%1 m†ste fyllas i.';
      Text001@1100528302 : TextConst 'ENU=There is already a %1 Record in this Date Range.;NOR=Det finnes allerede en %1-post i dette datointervallet.;SVE=Det finns redan en %1 post i detta datumintervall.';
      Text003@1100528300 : TextConst 'ENU=There is a date inconsistency.;NOR=Det finnes en datouoverensstemmelse.;SVE=Det finns datuminkonsekvens.';

    PROCEDURE CheckStartDate@1100529001();
    VAR
      CreditLimitPerDate@1100529000 : Record 11071869;
    BEGIN
      IF ("Start Date" = 0D) THEN
        ERROR(Text000, FIELDCAPTION("Start Date"));

      CreditLimitPerDate.SETRANGE("Customer No.", "Customer No.");
      CreditLimitPerDate.SETFILTER("Start Date", '<%1', "Start Date");
      CreditLimitPerDate.SETFILTER("End Date", '>=%1|%2', "Start Date", 0D);
      IF (CreditLimitPerDate.FINDFIRST) THEN BEGIN
        IF (CreditLimitPerDate."End Date" <> 0D) THEN
          ERROR(Text001, TABLECAPTION);
        CreditLimitPerDate."End Date" := "Start Date" - 1;
        CreditLimitPerDate.MODIFY;
      END;

      CreditLimitPerDate.SETFILTER("Start Date", '>%1', "Start Date");
      CreditLimitPerDate.SETRANGE("End Date");
      IF (CreditLimitPerDate.FINDFIRST) THEN
        "End Date" := CreditLimitPerDate."Start Date" - 1;
    END;

    PROCEDURE CheckForDateInconsistency@1100529003(Action@1100528305 : Option);
    VAR
      CreditLimitPerDate@1100528300 : Record 11071869;
      ZeroEndDateCount@1100528301 : Integer;
      RecordCount@1100528302 : Integer;
      CountedRecords@1100528303 : Integer;
      PrevEndDate@1100528304 : Date;
    BEGIN
      CreditLimitPerDate.SETRANGE("Customer No.", "Customer No.");
      IF (Action = 3) THEN
        CreditLimitPerDate.SETFILTER("Start Date", '<>%1', "Start Date");
      RecordCount := CreditLimitPerDate.COUNT;

      IF (NOT CreditLimitPerDate.FINDFIRST) THEN
        EXIT;

      REPEAT
        CountedRecords += 1;

        IF (CreditLimitPerDate."End Date" = 0D) THEN BEGIN
          IF (ZeroEndDateCount > 1) THEN
            ERROR(Text003);
          ZeroEndDateCount += 1;
        END;
        IF (CountedRecords = RecordCount) AND (CreditLimitPerDate."End Date" <> 0D) THEN
          ERROR(Text003);
        IF (PrevEndDate <> 0D) THEN
          IF (PrevEndDate + 1 <> CreditLimitPerDate."Start Date") THEN
            ERROR(Text003);
        PrevEndDate := CreditLimitPerDate."End Date";
      UNTIL (CreditLimitPerDate.NEXT = 0);
    END;

    BEGIN
    END.
  }
}

