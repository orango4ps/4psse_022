OBJECT Page 11229989 Create SO from Pl. Maint.Prop.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Erstellen Serviceauftrag aus Werkzeugwartungsvorschlag;
               ENU=Create Service Order from Plant Maintenance Proposal;
               NLD=Aanmaken serviceorder vanuit materieelonderhoudsvoorstel];
    SaveValues=Yes;
    PageType=NavigatePage;
    OnOpenPage=BEGIN
                 FillDefaults;
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525006;1 ;Action    ;
                      CaptionML=[DEU=B&eenden;
                                 ENU=&Finish;
                                 NLD=&Voltooien];
                      InFooterBar=Yes;
                      Image=Completed;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CreateServiceOrdersPlant@1100525000 : Codeunit 11012597;
                               BEGIN
                                 CheckNoSeries;
                                 CheckOrderIndication(0, OrderKind);
                                 CheckOrderIndication(1, OrderType);
                                 CreateServiceOrdersPlant.CreateServiceOrders_MaintenanceProposal(
                                   SelectedPlantMaintProposalLine,
                                   ServiceCompany, SourceType, NoSeriesCode,
                                   FixedPlanDate, UseWorkDateWithPlanDateInPast,
                                   ResourceType, ResourceNo,
                                   ServiceOrderDescription, OrderKind, OrderType);
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100525000;1;Field  ;
                CaptionML=[DEU=Festes Planungsdatum;
                           ENU=Fixed Plan Date;
                           NLD=Vaste plandatum];
                SourceExpr=FixedPlanDate }

    { 1100528608;1;Field  ;
                CaptionML=[DEU=Arbeitsdatum mit Plandatum in der Vergangenheit verwenden;
                           ENU=Use Workdate with Plan Date in the past;
                           NLD=Gebruik werkdatum bij plandatum in verleden];
                SourceExpr=UseWorkDateWithPlanDateInPast }

    { 1100525003;1;Field  ;
                CaptionML=[DEU=Nummernserie;
                           ENU=No. Series;
                           NLD=Nr.-reeks];
                SourceExpr=NoSeriesCode;
                OnValidate=BEGIN
                             CheckNoSeries;
                           END;

                OnLookup=BEGIN
                           LookupNoSeries;
                         END;
                          }

    { 1100529000;1;Field  ;
                NotBlank=Yes;
                SourceExpr=PlantMaintProposalLineResourceType."Resource Type";
                CaptionClass=SelectedPlantMaintProposalLine.FIELDCAPTION("Resource Type");
                Visible=ResourceNoEditable;
                Editable=ResourceNoEditable;
                OnValidate=BEGIN
                             IF PlantMaintProposalLineResourceType."Resource Type" <> ResourceType THEN BEGIN
                               ResourceType := PlantMaintProposalLineResourceType."Resource Type";
                               ResourceNo := '';
                             END;
                           END;
                            }

    { 1100525004;1;Field  ;
                SourceExpr=ResourceNo;
                CaptionClass=SelectedPlantMaintProposalLine.FIELDCAPTION("Resource No.");
                TableRelation="Resource (WOP)" WHERE (Type=FILTER(Employee|Subcontractor));
                Visible=ResourceNoEditable;
                Editable=ResourceNoEditable;
                OnValidate=VAR
                             ResourceMgtWorkOrderPlan@1100528600 : Codeunit 11229277;
                             ResourceWOP@1100529000 : Record 11229278;
                           BEGIN
                             IF ResourceNo <> '' THEN BEGIN
                               ResourceWOP.GET(ResourceNo);
                               ResourceWOP.TESTFIELD(Type, ResourceType);
                               IF NOT (ResourceWOP.Type IN  [ResourceWOP.Type::Employee, ResourceWOP.Type::Subcontractor]) THEN
                                 ResourceWOP.FIELDERROR(Type);
                               IF ServiceCompany = '' THEN
                                 ResourceMgtWorkOrderPlan.TestResourceWithinCompanyPlanGroup(ResourceNo);
                             END;
                           END;

                OnLookup=BEGIN
                           LookupEmployeeResourceNo;
                         END;
                          }

    { 1100528601;1;Field  ;
                SourceExpr=ServiceOrderDescription;
                CaptionClass=SelectedPlantMaintProposalLine.FIELDCAPTION("Service Order Description");
                Visible=ServiceOrderDescriptionEditable;
                Editable=ServiceOrderDescriptionEditable }

    { 1100528603;1;Field  ;
                SourceExpr=OrderKind;
                CaptionClass=SelectedPlantMaintProposalLine.FIELDCAPTION("Order Kind");
                Visible=OrderKindEditable;
                Editable=OrderKindEditable;
                OnValidate=BEGIN
                             CheckOrderIndication(0, OrderKind);
                           END;

                OnLookup=BEGIN
                           LookupOrderIndication(0, OrderKind);
                         END;
                          }

    { 1100528604;1;Field  ;
                CaptionML=[DEU=Auftragsart;
                           ENU=Order Type;
                           NLD=Ordertype];
                SourceExpr=OrderType;
                CaptionClass=SelectedPlantMaintProposalLine.FIELDCAPTION("Order Type");
                Visible=OrderTypeEditable;
                Editable=OrderTypeEditable;
                OnValidate=BEGIN
                             CheckOrderIndication(1, OrderType);
                           END;

                OnLookup=BEGIN
                           LookupOrderIndication(1, OrderType);
                         END;
                          }

  }
  CODE
  {
    VAR
      PlantSetup@1100529002 : Record 11012550;
      SelectedPlantMaintProposalLine@1100528607 : Record 11126148;
      PlantMaintProposalLineResourceType@1100529010 : Record 11126148;
      FixedPlanDate@1100525000 : Date;
      UseWorkDateWithPlanDateInPast@1100529001 : Boolean;
      ResourceNoEditable@1100529006 : Boolean INDATASET;
      ServiceOrderDescriptionEditable@1100529007 : Boolean INDATASET;
      OrderKindEditable@1100529008 : Boolean INDATASET;
      OrderTypeEditable@1100529009 : Boolean INDATASET;
      SourceType@1100529003 : Option;
      ResourceType@1100529005 : Option;
      ResourceNo@1100525002 : Code[20];
      NoSeriesCode@1100525004 : Code[10];
      OrderKind@1100528604 : Code[10];
      OrderType@1100528605 : Code[10];
      ServiceOrderDescription@1100529000 : Text[50];
      ServiceCompany@1100529004 : Text;

    PROCEDURE SetSelection@1100525000(VAR PlantMaintProposalLine@1100525000 : Record 11126148);
    BEGIN
      SelectedPlantMaintProposalLine.COPY(PlantMaintProposalLine);
    END;

    LOCAL PROCEDURE FillDefaults@1100528600();
    VAR
      ServiceSourceTypeSetup@1100529000 : Record 11071726;
    BEGIN
      PlantSetup.GET;
      PlantSetup.TESTFIELD("Service Company");
      IF PlantSetup."Service Company" = COMPANYNAME THEN
        ServiceCompany := ''
      ELSE
        ServiceCompany := PlantSetup."Service Company";

      SourceType := ServiceSourceTypeSetup."Source Type"::Direct;  // Sebastian (06-03-2019): Direct
      IF ServiceCompany <> '' THEN
        ServiceSourceTypeSetup.CHANGECOMPANY(ServiceCompany);
      ServiceSourceTypeSetup.GET(SourceType);
      ServiceSourceTypeSetup.TESTFIELD("No. Series");
      NoSeriesCode := ServiceSourceTypeSetup."No. Series";

      FixedPlanDate := 0D;
      ResourceType := PlantMaintProposalLineResourceType."Resource Type"::Employee;
      PlantMaintProposalLineResourceType."Resource Type" := ResourceType;
      ResourceNo := '';
      ServiceOrderDescription := '';
      OrderKind := '';
      OrderType := '';
      SetEditable;
    END;

    LOCAL PROCEDURE SetEditable@1100529004();
    VAR
      PlantMaintProposalLine@1100529000 : Record 11126148;
    BEGIN
      PlantMaintProposalLine.COPY(SelectedPlantMaintProposalLine);
      PlantMaintProposalLine.FILTERGROUP(11);
      PlantMaintProposalLine.SETRANGE("Service Order No.", '');
      PlantMaintProposalLine.SETRANGE(Cancelled, FALSE);

      PlantMaintProposalLine.SETRANGE("Resource No.", '');
      ResourceNoEditable := (NOT PlantMaintProposalLine.ISEMPTY);
      PlantMaintProposalLine.SETRANGE("Resource No.");

      PlantMaintProposalLine.SETRANGE("Service Order Description", '');
      ServiceOrderDescriptionEditable := (NOT PlantMaintProposalLine.ISEMPTY);
      PlantMaintProposalLine.SETRANGE("Service Order Description");

      PlantMaintProposalLine.SETRANGE("Order Kind", '');
      OrderKindEditable := (NOT PlantMaintProposalLine.ISEMPTY);
      PlantMaintProposalLine.SETRANGE("Order Kind");

      PlantMaintProposalLine.SETRANGE("Order Type", '');
      OrderTypeEditable := (NOT PlantMaintProposalLine.ISEMPTY);
      PlantMaintProposalLine.SETRANGE("Order Type");

      PlantMaintProposalLine.FILTERGROUP(0);
    END;

    LOCAL PROCEDURE CheckNoSeries@1100529005();
    VAR
      ServiceSourceTypeSetup@1100529002 : Record 11071726;
      NoSeries@1100529001 : Record 308;
      NoSeriesRelationship@1100529000 : Record 310;
    BEGIN
      IF NoSeriesCode <> '' THEN BEGIN
        IF ServiceCompany <> '' THEN BEGIN
          ServiceSourceTypeSetup.CHANGECOMPANY(ServiceCompany);
          NoSeries.CHANGECOMPANY(ServiceCompany);
          NoSeriesRelationship.CHANGECOMPANY(ServiceCompany);
        END;
        NoSeries.GET(NoSeriesCode);
        ServiceSourceTypeSetup.GET(SourceType);
        ServiceSourceTypeSetup.TESTFIELD("No. Series");
        IF NoSeriesCode <> ServiceSourceTypeSetup."No. Series" THEN BEGIN
          NoSeriesRelationship.SETRANGE(Code, ServiceSourceTypeSetup."No. Series");
          NoSeriesRelationship.FINDFIRST;
        END;
      END;
    END;

    LOCAL PROCEDURE LookupNoSeries@1100529001();
    VAR
      ServiceSourceTypeSetup@1100529000 : Record 11071726;
      NoSeries@1100529005 : Record 308;
      NoSeriesRelationship@1100529001 : Record 310;
      NoSeriesMgt@1100529003 : Codeunit 396;
      NewNoSeries@1100529004 : Code[10];
    BEGIN
      IF ServiceCompany <> '' THEN BEGIN
        ServiceSourceTypeSetup.CHANGECOMPANY(ServiceCompany);
        NoSeries.CHANGECOMPANY(ServiceCompany);
        NoSeriesRelationship.CHANGECOMPANY(ServiceCompany);
      END;
      ServiceSourceTypeSetup.GET(SourceType);
      ServiceSourceTypeSetup.TESTFIELD("No. Series");
      IF ServiceCompany = '' THEN BEGIN
        IF NoSeriesMgt.SelectSeries(ServiceSourceTypeSetup."No. Series", ServiceSourceTypeSetup."No. Series", NewNoSeries) THEN
          NoSeriesCode := NewNoSeries;
      END ELSE BEGIN
        NoSeriesRelationship.SETRANGE(Code, ServiceSourceTypeSetup."No. Series");
        IF NoSeriesRelationship.FINDSET THEN BEGIN
          REPEAT
            IF NoSeries.GET(NoSeriesRelationship."Series Code") THEN
              NoSeries.MARK(TRUE);
          UNTIL NoSeriesRelationship.NEXT = 0;
        END;
        IF NoSeries.GET(ServiceSourceTypeSetup."No. Series") THEN
          NoSeries.MARK(TRUE);
        NoSeries.MARKEDONLY(TRUE);
        IF PAGE.RUNMODAL(0,NoSeries) = ACTION::LookupOK THEN
          NoSeriesCode := NoSeries.Code;
      END;
    END;

    LOCAL PROCEDURE CheckOrderIndication@1100529002(IndicationType@1100529001 : Option;IndicationCode@1100529002 : Code[10]);
    VAR
      ServiceOrderIndication@1100529000 : Record 11012837;
    BEGIN
      IF IndicationCode <> '' THEN BEGIN
        IF ServiceCompany <> '' THEN
          ServiceOrderIndication.CHANGECOMPANY(ServiceCompany);
        ServiceOrderIndication.GET(IndicationType, IndicationCode);
      END;
    END;

    LOCAL PROCEDURE LookupOrderIndication@1100529000(IndicationType@1100529001 : Option;IndicationCode@1100529002 : Code[10]);
    VAR
      ServiceOrderIndication@1100529000 : Record 11012837;
    BEGIN
      IF ServiceCompany <> '' THEN
        ServiceOrderIndication.CHANGECOMPANY(ServiceCompany);
      ServiceOrderIndication.FILTERGROUP(7);
      ServiceOrderIndication.SETRANGE(Indication, IndicationType);
      ServiceOrderIndication.FILTERGROUP(0);
      ServiceOrderIndication.Indication := IndicationType;
      ServiceOrderIndication.Code := IndicationCode;
      IF PAGE.RUNMODAL(0, ServiceOrderIndication) = ACTION::LookupOK THEN BEGIN
        IF (ServiceOrderIndication.Code <> '') AND (ServiceOrderIndication.Code <> IndicationCode) THEN BEGIN
          CASE IndicationType OF
            ServiceOrderIndication.Indication::Kind:
              OrderKind := ServiceOrderIndication.Code;
            ServiceOrderIndication.Indication::Type:
              OrderType := ServiceOrderIndication.Code;
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE LookupEmployeeResourceNo@1100529003();
    VAR
      ResourceWOP@1100529000 : Record 11229278;
      ResourceCompany@1100529001 : Text;
    BEGIN
      IF NOT (ResourceType IN
        [PlantMaintProposalLineResourceType."Resource Type"::Employee, PlantMaintProposalLineResourceType."Resource Type"::Subcontractor])
      THEN
        EXIT;

      ResourceCompany := COMPANYNAME;
      IF ServiceCompany <> '' THEN
        ResourceCompany := ServiceCompany;
      ResourceWOP.SETCURRENTKEY(Type, Company, "No.");
      ResourceWOP.FILTERGROUP(7);
      ResourceWOP.SETRANGE(Type, ResourceType);
      ResourceWOP.FILTERGROUP(0);
      ResourceWOP.SETRANGE(Company, ResourceCompany);
      ResourceWOP.Type := ResourceType;
      ResourceWOP.Company := ResourceCompany;
      ResourceWOP."No." := ResourceNo;
      IF ResourceNo <> '' THEN BEGIN
        IF ResourceWOP.GET(ResourceNo) THEN BEGIN
          IF ResourceWOP.Company <> ResourceCompany THEN
            ResourceWOP.SETFILTER(Company, '%1|%2', ResourceCompany, ResourceWOP.Company);
        END;
      END;
      IF PAGE.RUNMODAL(0, ResourceWOP) = ACTION::LookupOK THEN
        ResourceNo := ResourceWOP."No.";
    END;

    BEGIN
    END.
  }
}

