OBJECT Codeunit 1541 Workflow Webhook Events
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      WorkflowWebhookResponseReceivedEventTxt@1001 : TextConst 'ENU=A response is received from a subscribed webhook.;NOR=Et svar mottas fra en abonnert webhook.';

    [External]
    PROCEDURE WorkflowWebhookResponseReceivedEventCode@1() : Code[128];
    BEGIN
      EXIT(UPPERCASE('WorkflowWebhookResponseReceivedEvent'));
    END;

    [EventSubscriber(Codeunit,1520,OnAddWorkflowEventPredecessorsToLibrary)]
    LOCAL PROCEDURE AddWorkflowWebhookEventHierarchiesToLibrary@6(EventFunctionName@1000 : Code[128]);
    VAR
      WorkflowEventHandling@1001 : Codeunit 1520;
    BEGIN
      CASE EventFunctionName OF
        WorkflowWebhookResponseReceivedEventCode:
          BEGIN
            WorkflowEventHandling.AddEventPredecessor(WorkflowWebhookResponseReceivedEventCode,
              WorkflowEventHandling.RunWorkflowOnSendCustomerForApprovalCode);
            WorkflowEventHandling.AddEventPredecessor(WorkflowWebhookResponseReceivedEventCode,
              WorkflowEventHandling.RunWorkflowOnSendGeneralJournalBatchForApprovalCode);
            WorkflowEventHandling.AddEventPredecessor(WorkflowWebhookResponseReceivedEventCode,
              WorkflowEventHandling.RunWorkflowOnSendGeneralJournalLineForApprovalCode);
            WorkflowEventHandling.AddEventPredecessor(WorkflowWebhookResponseReceivedEventCode,
              WorkflowEventHandling.RunWorkflowOnSendItemForApprovalCode);
            WorkflowEventHandling.AddEventPredecessor(WorkflowWebhookResponseReceivedEventCode,
              WorkflowEventHandling.RunWorkflowOnSendPurchaseDocForApprovalCode);
            WorkflowEventHandling.AddEventPredecessor(WorkflowWebhookResponseReceivedEventCode,
              WorkflowEventHandling.RunWorkflowOnSendSalesDocForApprovalCode);
            WorkflowEventHandling.AddEventPredecessor(WorkflowWebhookResponseReceivedEventCode,
              WorkflowEventHandling.RunWorkflowOnSendVendorForApprovalCode);
          END;
      END;
    END;

    [EventSubscriber(Codeunit,1520,OnAddWorkflowEventsToLibrary)]
    LOCAL PROCEDURE AddWorkflowWebhookEventsToLibrary@2();
    VAR
      WorkflowEventHandling@1000 : Codeunit 1520;
    BEGIN
      WorkflowEventHandling.AddEventToLibrary(WorkflowWebhookResponseReceivedEventCode,DATABASE::"Workflow Webhook Entry",
        WorkflowWebhookResponseReceivedEventTxt,0,FALSE);
    END;

    [EventSubscriber(Codeunit,1520,OnAddWorkflowTableRelationsToLibrary)]
    LOCAL PROCEDURE AddWorkflowWebhookTableRelationsToLibrary@7();
    VAR
      DummyCustomer@1006 : Record 18;
      DummyItem@1007 : Record 27;
      DummyGenJournalBatch@1005 : Record 232;
      DummyGenJournalLine@1004 : Record 81;
      DummyPurchaseHeader@1003 : Record 38;
      DummySalesHeader@1001 : Record 36;
      DummyVendor@1008 : Record 23;
      DummyWorkflowWebhookEntry@1002 : Record 467;
      WorkflowSetup@1000 : Codeunit 1502;
    BEGIN
      WorkflowSetup.InsertTableRelation(DATABASE::Customer,DummyCustomer.FIELDNO(Id),
        DATABASE::"Workflow Webhook Entry",DummyWorkflowWebhookEntry.FIELDNO("Data ID"));
      WorkflowSetup.InsertTableRelation(DATABASE::"Gen. Journal Batch",DummyGenJournalBatch.FIELDNO(Id),
        DATABASE::"Workflow Webhook Entry",DummyWorkflowWebhookEntry.FIELDNO("Data ID"));
      WorkflowSetup.InsertTableRelation(DATABASE::"Gen. Journal Line",DummyGenJournalLine.FIELDNO(Id),
        DATABASE::"Workflow Webhook Entry",DummyWorkflowWebhookEntry.FIELDNO("Data ID"));
      WorkflowSetup.InsertTableRelation(DATABASE::Item,DummyItem.FIELDNO(Id),
        DATABASE::"Workflow Webhook Entry",DummyWorkflowWebhookEntry.FIELDNO("Data ID"));
      WorkflowSetup.InsertTableRelation(DATABASE::"Purchase Header",DummyPurchaseHeader.FIELDNO(Id),
        DATABASE::"Workflow Webhook Entry",DummyWorkflowWebhookEntry.FIELDNO("Data ID"));
      WorkflowSetup.InsertTableRelation(DATABASE::"Sales Header",DummySalesHeader.FIELDNO(Id),
        DATABASE::"Workflow Webhook Entry",DummyWorkflowWebhookEntry.FIELDNO("Data ID"));
      WorkflowSetup.InsertTableRelation(DATABASE::Vendor,DummyVendor.FIELDNO(Id),
        DATABASE::"Workflow Webhook Entry",DummyWorkflowWebhookEntry.FIELDNO("Data ID"));
    END;

    [EventSubscriber(Codeunit,1543,OnCancelWorkflow)]
    LOCAL PROCEDURE HandleOnCancelWorkflow@3(WorkflowWebhookEntry@1000 : Record 467);
    VAR
      WorkflowManagement@1001 : Codeunit 1501;
    BEGIN
      WorkflowManagement.HandleEvent(WorkflowWebhookResponseReceivedEventCode,WorkflowWebhookEntry);
    END;

    [EventSubscriber(Codeunit,1543,OnContinueWorkflow)]
    LOCAL PROCEDURE HandleOnContinueWorkflow@4(WorkflowWebhookEntry@1000 : Record 467);
    VAR
      WorkflowManagement@1001 : Codeunit 1501;
    BEGIN
      WorkflowManagement.HandleEvent(WorkflowWebhookResponseReceivedEventCode,WorkflowWebhookEntry);
    END;

    [EventSubscriber(Codeunit,1543,OnRejectWorkflow)]
    LOCAL PROCEDURE HandleOnRejectWorkflow@5(WorkflowWebhookEntry@1000 : Record 467);
    VAR
      WorkflowManagement@1001 : Codeunit 1501;
    BEGIN
      WorkflowManagement.HandleEvent(WorkflowWebhookResponseReceivedEventCode,WorkflowWebhookEntry);
    END;

    [EventSubscriber(Codeunit,1535,OnCancelCustomerApprovalRequest)]
    LOCAL PROCEDURE HandleOnCancelCustomerApprovalRequest@12(VAR Customer@1000 : Record 18);
    VAR
      WorkflowWebhookManagement@1001 : Codeunit 1543;
    BEGIN
      // Handles the scenario when a Customer is deleted after it's been sent approval
      WorkflowWebhookManagement.FindAndCancel(Customer.RECORDID);
    END;

    [EventSubscriber(Codeunit,1535,OnCancelItemApprovalRequest)]
    LOCAL PROCEDURE HandleOnCancelItemApprovalRequest@10(VAR Item@1000 : Record 27);
    VAR
      WorkflowWebhookManagement@1001 : Codeunit 1543;
    BEGIN
      // Handles the scenario when an Item is deleted after it's been sent approval
      WorkflowWebhookManagement.FindAndCancel(Item.RECORDID);
    END;

    [EventSubscriber(Codeunit,1535,OnCancelGeneralJournalBatchApprovalRequest)]
    LOCAL PROCEDURE HandleOnCancelGeneralJournalBatchApprovalRequest@11(VAR GenJournalBatch@1000 : Record 232);
    VAR
      WorkflowWebhookManagement@1001 : Codeunit 1543;
    BEGIN
      // Handles the scenario when a General Journal Batch is deleted after it's been sent approval
      WorkflowWebhookManagement.FindAndCancel(GenJournalBatch.RECORDID);
    END;

    [EventSubscriber(Codeunit,1535,OnCancelGeneralJournalLineApprovalRequest)]
    LOCAL PROCEDURE HandleOnCancelGeneralJournalLineApprovalRequest@14(VAR GenJournalLine@1000 : Record 81);
    VAR
      WorkflowWebhookManagement@1001 : Codeunit 1543;
    BEGIN
      // Handles the scenario when a General Journal Line is deleted after it's been sent approval
      WorkflowWebhookManagement.FindAndCancel(GenJournalLine.RECORDID);
    END;

    [EventSubscriber(Codeunit,1535,OnCancelVendorApprovalRequest)]
    LOCAL PROCEDURE HandleOnCancelVendorApprovalRequest@13(VAR Vendor@1000 : Record 23);
    VAR
      WorkflowWebhookManagement@1001 : Codeunit 1543;
    BEGIN
      // Handles the scenario when a Vendor is deleted after it's been sent approval
      WorkflowWebhookManagement.FindAndCancel(Vendor.RECORDID);
    END;

    [EventSubscriber(Codeunit,1535,OnDeleteRecordInApprovalRequest)]
    LOCAL PROCEDURE HandleOnDeleteRecordInApprovalRequest@9(RecordIDToApprove@1000 : RecordID);
    VAR
      WorkflowWebhookManagement@1002 : Codeunit 1543;
    BEGIN
      WorkflowWebhookManagement.DeleteWorkflowWebhookEntries(RecordIDToApprove);
    END;

    [EventSubscriber(Codeunit,1535,OnRenameRecordInApprovalRequest)]
    LOCAL PROCEDURE HandleOnRenameRecordInApprovalRequest@8(OldRecordId@1000 : RecordID;NewRecordId@1001 : RecordID);
    VAR
      WorkflowWebhookManagement@1002 : Codeunit 1543;
    BEGIN
      WorkflowWebhookManagement.RenameRecord(OldRecordId,NewRecordId);
    END;

    BEGIN
    END.
  }
}

