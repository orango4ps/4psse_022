OBJECT Report 12013628 Batch Update Purch Inv. ExF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF500000,4PS;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Batch Update Posting Date;
               SVE=Batch-uppdatera bokf”ringsdatum];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   InitValues;
                 END;

  }
  DATASET
  {
    { 4272;    ;DataItem;                    ;
               DataItemTable=Table12013608;
               DataItemTableView=SORTING(Document Type,Document No.)
                                 WHERE(Document Type=FILTER(Invoice|Credit Memo));
               ReqFilterHeadingML=[ENU=Purchase Invoice;
                                   SVE=Ink”psfaktura];
               OnPreDataItem=BEGIN
                               IF (PostingDateTo = 0D) OR (UpdateToDate = 0D) THEN
                                 ERROR(Text000);

                               SETRANGE("Posting Date", PostingDateFrom, PostingDateTo);

                               IF GUIALLOWED THEN BEGIN
                                 CounterTotal := COUNT;
                                 Window.OPEN(Text001);
                               END;
                             END;

               OnAfterGetRecord=VAR
                                  CurrExchRate@1100583000 : Record 330;
                                BEGIN
                                  IF GUIALLOWED THEN BEGIN
                                    Counter := Counter + 1;
                                    Window.UPDATE(1,"Document No.");
                                    Window.UPDATE(2,ROUND(Counter / CounterTotal * 10000,1));
                                  END;

                                  PurchaseHeader.GET("Document Type", "Document No.");

                                  OldDocumentDate := PurchaseHeader."Document Date";
                                  OldDueDate := PurchaseHeader."Due Date";
                                  OldCurrFactor := PurchaseHeader."Currency Factor";
                                  TempPurchLine.DELETEALL;
                                  ExPerMgt.StoreDefDates(PurchaseHeader,TempPurchLine);

                                  IF CalcInvDisc THEN
                                    CalculateInvoiceDiscount;

                                  PurchaseHeader.SetHideValidationDialog(TRUE);

                                  PurchaseHeader.VALIDATE("Posting Date", UpdateToDate);
                                  IF ReplaceDocumentDate THEN
                                    PurchaseHeader.VALIDATE("Document Date",UpdateToDate);

                                  IF NOT ReplaceDocumentDate THEN BEGIN
                                    PurchaseHeader.VALIDATE("Document Date",OldDocumentDate);
                                    PurchaseHeader.VALIDATE("Due Date",OldDueDate);
                                  END;

                                  IF NOT UpdateCurrencyFactor THEN
                                    IF PurchaseHeader."Currency Code" <> '' THEN BEGIN
                                      PurchaseHeader."Currency Factor" := CurrExchRate.ExchangeRate(0,PurchaseHeader."Job No.",UpdateToDate,PurchaseHeader."Currency Code",FALSE); // 4PS
                                      IF PurchaseHeader."Currency Factor" <> OldCurrFactor THEN
                                        PurchaseHeader.VALIDATE("Currency Factor");
                                                                        END;
                                  ExPerMgt.ReValidateDefDates(TempPurchLine,UpdateDeferalsReq,UpdateToDate);

                                  ExFlowSEMgt.PurchHeaderUpdateInw(PurchaseHeader);

                                  PurchaseHeader.MODIFY(TRUE);
                                END;

               OnPostDataItem=BEGIN
                                IF GUIALLOWED THEN BEGIN
                                  Window.CLOSE;
                                  MESSAGE(Text002,CounterTotal);
                                END;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100285098;0;Container;
                  ContainerType=ContentArea }

      { 1100285099;1;Group  ;
                  CaptionML=[ENU=Options;
                             SVE=Alternativ] }

      { 1100285000;2;Field  ;
                  CaptionML=[ENU=Update Posting Dates from.;
                             SVE=Uppdatera bokf”ringsdatum from.];
                  SourceExpr=PostingDateFrom }

      { 1100285002;2;Field  ;
                  CaptionML=[ENU=To;
                             SVE=Tom.];
                  SourceExpr=PostingDateTo }

      { 1100285005;2;Field  ;
                  CaptionML=[ENU=Update To Date;
                             SVE=Uppdatera till Datum];
                  SourceExpr=UpdateToDate }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Replace Document Date;
                             SVE=Ers„tt dokumentdatum];
                  ToolTipML=[ENU=Replacing Document Date may effect Due Date;
                             SVE=Ers„ttning av Dokument Datum kan p†verka F”rfalldatum];
                  SourceExpr=ReplaceDocumentDate }

      { 5   ;2   ;Field     ;
                  CaptionML=[ENU=Calc. Inv. Discount;
                             SVE=Ber„kna fakturarabatt];
                  SourceExpr=CalcInvDisc;
                  OnValidate=BEGIN
                               PurchSetup.GET;
                               PurchSetup.TESTFIELD("Calc. Inv. Discount",FALSE);
                             END;
                              }

      { 1100285008;2;Field  ;
                  CaptionML=[ENU=Update Currency Factor;
                             SVE=Uppdatera valutafaktor];
                  SourceExpr=UpdateCurrencyFactor }

      { 1100285001;2;Field  ;
                  CaptionML=[ENU=Update Deferal schedules;
                             SVE=Uppdatera periodiseringsscheman];
                  SourceExpr=UpdateDeferalsReq }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You must select an end date filter and a valid update to date.;SVE=Du m†ste ange ett slutdatumfilter samt ett datum att uppdatera till.';
      Text001@1001 : TextConst 'ENU=Updating invoices   #1########## @2@@@@@@@@@@@@@;SVE=Uppdaterar fakturor    #1########## @2@@@@@@@@@@@@@';
      Text002@1002 : TextConst 'ENU=%1 invoices have now been updated.;SVE=%1 fakturor har uppdaterats.';
      PurchLine@1003 : Record 39;
      PurchSetup@1004 : Record 312;
      PurchaseHeader@1100285000 : Record 38;
      PurchCalcDisc@1005 : Codeunit 70;
      ExFlowSEMgt@1100285001 : Codeunit 12013598;
      Window@1007 : Dialog;
      CounterTotal@1009 : Integer;
      Counter@1010 : Integer;
      OldCurrFactor@1100285005 : Decimal;
      PostingDateFrom@1100285002 : Date;
      PostingDateTo@1100285003 : Date;
      UpdateToDate@1100285004 : Date;
      OldDocumentDate@1100285009 : Date;
      OldDueDate@1100285010 : Date;
      ReplaceDocumentDate@1100285006 : Boolean;
      UpdateCurrencyFactor@1100285007 : Boolean;
      CalcInvDisc@1100285008 : Boolean;
      UpdateDeferalsReq@1100285011 : Boolean;
      TempPurchLine@1100285012 : TEMPORARY Record 39;
      ExPerMgt@1100285013 : Codeunit 12013599;

    PROCEDURE CalculateInvoiceDiscount@1();
    BEGIN
      PurchLine.RESET;
      PurchLine.SETRANGE("Document Type",PurchaseHeader."Document Type");
      PurchLine.SETRANGE("Document No.",PurchaseHeader."No.");
      IF PurchLine.FINDFIRST THEN
        IF PurchCalcDisc.RUN(PurchLine) THEN BEGIN
          PurchaseHeader.GET(PurchaseHeader."Document Type",PurchaseHeader."No.");
          COMMIT;
        END;
    END;

    PROCEDURE InitValues@1100285000();
    BEGIN
      PurchSetup.GET;
      CalcInvDisc := PurchSetup."Calc. Inv. Discount";
      PostingDateFrom := 0D;
      PostingDateTo := CALCDATE('<-CM-1D>',TODAY);
      UpdateToDate := CALCDATE('<-CM>',TODAY);
    END;

    BEGIN
    {
      Report for batch updating from Approval Status
    }
    END.
  }
  RDLDATA
  {
  }
}

