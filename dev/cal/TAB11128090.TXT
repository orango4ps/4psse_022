OBJECT Table 11128090 Vendor Extension
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;DataClassification=ToBeClassified;
                                                   CaptionML=SVE=Nr }
    { 15000000;;Remittance         ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Remittance;
                                                              NOR=Remittering;
                                                              SVE=Remittering];
                                                   NotBlank=Yes;
                                                   Description=NAVNO }
    { 15000001;;Remittance Account Code;Code10    ;TableRelation="Remittance Account".Code;
                                                   OnValidate=VAR
                                                                RemAccount@1080000 : Record 11128506;
                                                              BEGIN
                                                                IF "Remittance Account Code" = '' THEN
                                                                  EXIT;
                                                                RemAccount.GET("Remittance Account Code");
                                                                "Remittance Agreement Code" := RemAccount."Remittance Agreement Code";

                                                                // Default for expenses:
                                                                VALIDATE("Charges Domestic","Charges Domestic"::"Debit remitter");
                                                                VALIDATE("Charges Abroad","Charges Abroad"::"Debit recipient");

                                                                // Account No. is checked if the type is changed:
                                                                IF "Recipient Bank Account No." <> '' THEN
                                                                  VALIDATE("Recipient Bank Account No.");

                                                                // SWIFT for foreign use only:
                                                                VALIDATE(SWIFT);

                                                                // Warning if vendor is settled in foreign currency and payments are domestic:
                                                                Vendor.GET("No.");
                                                                IF (Vendor."Currency Code" <> '') AND (RemAccount.Type = RemAccount.Type::Domestic) THEN
                                                                  MESSAGE(DomesticRemittanceMsg,Vendor."Currency Code");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Remittance Account Code;
                                                              NOR=Remitteringskontokode];
                                                   Description=NAVNO }
    { 15000002;;Recipient Bank Account No.;Code35 ;OnValidate=VAR
                                                                RemAccount@1080000 : Record 11128506;
                                                                RemmTools@1080001 : Codeunit 11128515;
                                                                ErrorMess@1080002 : Text[250];
                                                              BEGIN
                                                                RemAccount.GET("Remittance Account Code");
                                                                IF "Recipient Bank Account No." <> '' THEN BEGIN
                                                                  ErrorMess := RemmTools.CheckAccountNo("Recipient Bank Account No.",RemAccount.Type);
                                                                  IF ErrorMess <> '' THEN
                                                                    ERROR(ErrorMess);
                                                                END;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Recipient Bank Account No.;
                                                              NOR=Bankkontonummer for mottaker;
                                                              SVE=Inleveransbankkontonummer];
                                                   Description=NAVNO }
    { 15000003;;Remittance Agreement Code;Code10  ;TableRelation="Remittance Agreement".Code;
                                                   OnValidate=VAR
                                                                RemAccount@1080000 : Record 11128506;
                                                                RemAgreement@1080001 : Record 11128503;
                                                              BEGIN
                                                                // If the agreement is changed and the current account is not in the agreement, the account code is deleted
                                                                IF "Remittance Agreement Code" = '' THEN
                                                                  EXIT;
                                                                IF "Remittance Account Code" = '' THEN
                                                                  EXIT;
                                                                RemAgreement.GET("Remittance Agreement Code");
                                                                RemAccount.GET("Remittance Account Code");
                                                                IF RemAccount."Remittance Agreement Code" <> RemAgreement.Code THEN
                                                                  VALIDATE("Remittance Account Code",'');
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Remittance Agreement Code;
                                                              NOR=Remitteringsavtalekode];
                                                   Description=NAVNO }
    { 15000004;;BOLS Text Code     ;Option        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=BOLS Text Code;
                                                              NOR=BOLS tekstkode];
                                                   OptionCaptionML=[ENU=Transfer without advice,KID transfer,Transfer with advice,Money order,Salary,Seaman's pay,Agricultural settlement,Pension/ Social security,Advice sent from institution other than BBS,Tax,Free text mass payment,Free text, Self-produced money order;
                                                                    NOR=Overf›ring uten melding,Overf›ring med KID,Overf›ring med melding,Overf›ring med Giro Utbetaling,L›nn,Hyretrekk,Landbruksoppgj›r,Trygd Pensjon,Melding sendt fra annen institusjon enn BBS,Skatt,Fritekst massebetaling,Fritekst, Egenprodusert Giro Utbetaling];
                                                   OptionString=Transfer without advice,KID transfer,Transfer with advice,Money order,Salary,Seaman's pay,Agricultural settlement,Pension/ Social security, Advice sent from institution other than BBS,Tax,Free text mass payment,Free text, Self-produced money order;
                                                   Description=NAVNO }
    { 15000005;;Recipient ref. 1 - inv.;Code40    ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Recipient ref. 1 - inv.;
                                                              NOR=Mottaker ref. 1 - fak.];
                                                   Description=NAVNO }
    { 15000006;;Recipient ref. 2 - inv.;Code40    ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Recipient ref. 2 - inv.;
                                                              NOR=Mottaker ref. 2 - fak.];
                                                   Description=NAVNO }
    { 15000007;;Recipient ref. 3 - inv.;Code40    ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Recipient ref. 3 - inv.;
                                                              NOR=Mottaker ref. 3 - fak.];
                                                   Description=NAVNO }
    { 15000008;;Recipient ref. 1 - cred.;Code40   ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Recipient ref. 1 - cred.;
                                                              NOR=Mottaker ref. 1 - kred.];
                                                   Description=NAVNO }
    { 15000009;;Recipient ref. 2 - cred.;Code40   ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Recipient ref. 2 - cred.;
                                                              NOR=Mottaker ref. 2 - kred.];
                                                   Description=NAVNO }
    { 15000010;;Recipient ref. 3 - cred.;Code40   ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Recipient ref. 3 - cred.;
                                                              NOR=Mottaker ref. 3 - kred.];
                                                   Description=NAVNO }
    { 15000011;;Payment Type Code Domestic;Code2  ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Payment Type Code Domestic;
                                                              NOR=Betalingsartkode innland];
                                                   Description=NAVNO }
    { 15000012;;Charges Domestic   ;Option        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Charges Domestic;
                                                              NOR=Omkostninger innland];
                                                   OptionCaptionML=[ENU=Debit remitter,Debit recipient,Default;
                                                                    NOR=Belastes avsender,Belastes mottaker,Standard];
                                                   OptionString=Debit remitter,Debit recipient,Default;
                                                   Description=NAVNO }
    { 15000013;;Warning Notice     ;Option        ;OnValidate=BEGIN
                                                                IF "Warning Notice" <> "Warning Notice"::Other THEN
                                                                  "Warning Text" := '';
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Warning Notice;
                                                              NOR=Varslingsanvisninger];
                                                   OptionCaptionML=[ENU=None,Phone,Fax,Other;
                                                                    NOR=Ingen,Telefon,Telefax,Annen];
                                                   OptionString=None,Phone,Fax,Other;
                                                   Description=NAVNO }
    { 15000014;;Warning Text       ;Code25        ;OnValidate=BEGIN
                                                                TESTFIELD("Warning Notice","Warning Notice"::Other);
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Warning Text;
                                                              NOR=Varslingstekst];
                                                   Description=NAVNO }
    { 15000015;;SWIFT              ;Code11        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=SWIFT;
                                                              NOR=SWIFT];
                                                   Description=NAVNO }
    { 15000016;;Bank Name          ;Code35        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Bank Name;
                                                              NOR=Banknavn;
                                                              SVE=Banknamn];
                                                   Description=NAVNO }
    { 15000017;;Bank Address 1     ;Code35        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Bank Address 1;
                                                              NOR=Bankadresse 1];
                                                   Description=NAVNO }
    { 15000018;;Bank Address 2     ;Code35        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Bank Address 2;
                                                              NOR=Bankadresse 2];
                                                   Description=NAVNO }
    { 15000019;;Bank Address 3     ;Code35        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Bank Address 3;
                                                              NOR=Bankadresse 3];
                                                   Description=NAVNO }
    { 15000020;;SWIFT Remb. Bank   ;Code11        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=SWIFT Remb. Bank;
                                                              NOR=SWIFT remb. bank];
                                                   Description=NAVNO }
    { 15000021;;Rcpt. Bank Country/Region Code;Code2;
                                                   TableRelation=Country/Region.Code;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Rcpt. Bank Country/Region Code;
                                                              NOR=Lands-/omr†dekode for mottakers bank];
                                                   Description=NAVNO }
    { 15000022;;Recipient Confirmation;Option     ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Recipient Confirmation;
                                                              NOR=Mottakerbekreftelse];
                                                   OptionCaptionML=[ENU=None,Telex,Fax;
                                                                    NOR=Ingen,Telex,Telefaks];
                                                   OptionString=None,Telex,Fax;
                                                   Description=NAVNO }
    { 15000023;;Telex Country/Region Code;Code2   ;TableRelation=Country/Region.Code;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Telex Country/Region Code;
                                                              NOR=Lands-/omr†dekode for teleks];
                                                   Description=NAVNO }
    { 15000024;;Telex/Fax No.      ;Text18        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Telex/Fax No.;
                                                              NOR=Telex/Telefaksnr.];
                                                   Description=NAVNO }
    { 15000025;;Recipient Contact  ;Text20        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Recipient Contact;
                                                              NOR=Mottakerkontakt];
                                                   Description=NAVNO }
    { 15000026;;Recipient Ref. Abroad;Code35      ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Recipient Ref. Abroad;
                                                              NOR=Mottakerref. utland];
                                                   Description=NAVNO }
    { 15000027;;Payment Type Code Abroad;Code2    ;TableRelation="Payment Type Code Abroad";
                                                   OnValidate=VAR
                                                                PaymentTypeCodeAbroad@1080000 : Record 11128511;
                                                              BEGIN
                                                                IF "Payment Type Code Abroad" <> '' THEN
                                                                  PaymentTypeCodeAbroad.GET("Payment Type Code Abroad");
                                                                "Specification (Norges Bank)" := PaymentTypeCodeAbroad.Description;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Payment Type Code Abroad;
                                                              NOR=Betalingsartkode utland;
                                                              SVE=Betalningstypkod, utland];
                                                   Description=NAVNO }
    { 15000028;;Specification (Norges Bank);Code60;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Specification (Norges Bank);
                                                              NOR=Spesifikasjon (Norges Bank)];
                                                   Description=NAVNO }
    { 15000029;;To Own Account     ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=To Own Account;
                                                              NOR=Til egen konto];
                                                   Description=NAVNO }
    { 15000030;;Charges Abroad     ;Option        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Charges Abroad;
                                                              NOR=Omkostninger utland];
                                                   OptionCaptionML=[ENU=Debit remitter,Debit recipient,Default;
                                                                    NOR=Belastes avsender,Belastes mottaker,Standard];
                                                   OptionString=Debit remitter,Debit recipient,Default;
                                                   Description=NAVNO }
    { 15000031;;Own Vendor Recipient Ref.;Boolean ;OnValidate=VAR
                                                                RemAccount@1080000 : Record 11128506;
                                                                RemTools@1080001 : Codeunit 11128515;
                                                                VendorExt@111280000 : Record 11128090;
                                                              BEGIN
                                                                IF "Own Vendor Recipient Ref." THEN BEGIN
                                                                  RemAccount.GET("Remittance Account Code");
                                                                  VendorExt.GET("No.");
                                                                  RemTools.VendorInitRecipientRef(VendorExt,RemAccount);
                                                                END;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Own Vendor Recipient Ref.;
                                                              NOR=Egen leverand›r mottakerref.];
                                                   Description=NAVNO }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Vendor@100000000 : Record 23;
      DomesticRemittanceMsg@100000001 : TextConst 'ENU=Note: Vendor is settled in %1 and remittance is domestic.;NOR=Bemerk: Leverand›r avregnes i valuta %1 og det er angitt remittering innland';

    PROCEDURE InitGetLine@111280000(Vendor@111280000 : Record 23);
    BEGIN
      IF NOT GET(Vendor."No.") THEN
        INIT;
      "No." := Vendor."No.";
    END;

    PROCEDURE SaveUpdateLine@111280001(DocumentNo@111280002 : Code[20]);
    VAR
      VendorExtension@111280000 : Record 11128090;
      VendorExtensionInit@111280004 : Record 11128090;
      DeleteExt@111280001 : Boolean;
    BEGIN
      VendorExtensionInit.INIT;
      VendorExtensionInit."No." := DocumentNo;
      DeleteExt := (FORMAT(Rec) = FORMAT(VendorExtensionInit));

      IF NOT VendorExtension.GET(DocumentNo) THEN BEGIN
        IF DeleteExt THEN
          EXIT;
        VendorExtension.INIT;
        VendorExtension."No." := DocumentNo;
        VendorExtension.INSERT;
      END ELSE BEGIN
        IF DeleteExt THEN BEGIN
          VendorExtension.DELETE;
          EXIT;
        END;
      END;

      VendorExtension.TRANSFERFIELDS(Rec,FALSE);
      VendorExtension.MODIFY;
    END;

    BEGIN
    END.
  }
}

