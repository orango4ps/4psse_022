OBJECT Page 11072023 Job Journal Reconcile
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW111.00,4PS14.00 (376);
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[DEU=Projekt Buch.-Blatt abstimmen;
               ENU=Job Journal Reconcile;
               NLD=Projectdagboekreconciliatie;
               NOR=Prosjektjournalsavstemming;
               SVE=ProjektjournalsavstÑmning];
    SourceTable=Table11072013;
    DataCaptionExpr=Caption;
    PageType=List;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 JobJnlLine.SETCURRENTKEY("Journal Template Name","Journal Batch Name",Type,"No.","Unit of Measure Code","Work Type Code");
                 IF JobJnlLine.FIND('-') THEN BEGIN
                   OldUnitOfMeasureCode := JobJnlLine."Unit of Measure Code";
                   OldWorkTypeCode := JobJnlLine."Work Type Code";
                   REPEAT
                     IF OldUnitOfMeasureCode <> JobJnlLine."Unit of Measure Code" THEN BEGIN
                       InsertUnitOfMeasureQty;
                       InsertWorkTypeQty;
                     END ELSE
                       IF OldWorkTypeCode <> JobJnlLine."Work Type Code" THEN
                         InsertWorkTypeQty;

                     OldUnitOfMeasureCode := JobJnlLine."Unit of Measure Code";
                     OldWorkTypeCode := JobJnlLine."Work Type Code";

                     UnitOfMeasureQty := UnitOfMeasureQty + JobJnlLine.Quantity;
                     WorkTypeQty := WorkTypeQty + JobJnlLine.Quantity;
                     TotalQty := TotalQty + JobJnlLine.Quantity;
                   UNTIL (JobJnlLine.NEXT = 0);

                   InsertUnitOfMeasureQty;
                   InsertWorkTypeQty;
                   INIT;
                   "Is Total" := TRUE;
                   "Unit of Measure Code" := '';
                   "Line Type" := "Line Type"::Total;
                   "Work Type Code" := '';
                   Quantity := TotalQty;
                   INSERT;

                   TotalQty := 0;
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       FormatLine(FORMAT("Unit of Measure Code"));
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                ToolTipML=[DEU=Gibt an, wie eine Einheit des Artikels oder der Ressource gemessen wird (z. B. StÅck oder Stunden). StandardmÑ·ig wird der Wert im Feld "Basiseinheitencode" auf der Artikel- oder Ressourcenkarte eingefÅgt.;
                           ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                           NLD=Hiermee wordt opgegeven hoe elke eenheid van het artikel of de resource wordt gemeten, bijvoorbeeld in stuks of uur. Standaard wordt de waarde in het veld Basiseenheid op de artikel- of resourcekaart ingevoegd.;
                           NOR=Angir enheten for varen eller ressursen. For hver ressurs viser avstemmingen antallet som ble angitt pÜ prosjektkladdelinjene, summert etter enheter og arbeidstype.;
                           SVE=Anger mÜttenheten fîr artikeln eller resursen. Fîr varje resurs visar avstÑmningen antalet som har registrerats pÜ projektjournalraderna, summerade efter enhet och efter arbetstyp.];
                ApplicationArea=#Jobs;
                SourceExpr="Unit of Measure Code";
                Style=Strong;
                StyleExpr=Emphasize }

    { 8   ;2   ;Field     ;
                ToolTipML=[DEU=Gibt an, zu welchem Arbeitstyp die Ressource gehîrt. Die Preise werden auf Grundlage dieses Postens aktualisiert.;
                           ENU=Specifies which work type the resource applies to. Prices are updated based on this entry.;
                           NLD=Hiermee wordt opgegeven op welk werksoort de resource van toepassing is. Prijzen worden bijgewerkt op basis van deze post.;
                           NOR=Angir hvilken arbeidstype ressursen gjelder for. Priser blir oppdatert basert pÜ denne posten.;
                           SVE=Anger vilken arbetstyp resursen gÑller fîr. Priserna uppdateras baserat pÜ den hÑr informationen.];
                ApplicationArea=#Jobs;
                SourceExpr="Work Type Code" }

    { 10  ;2   ;Field     ;
                ToolTipML=[DEU=Gibt die Projektmenge an, die abgestimmt werden muss.;
                           ENU=Specifies the job quantity to be reconciled.;
                           NLD=Hiermee wordt het projectaantal opgegeven dat moet worden afgestemd.;
                           NOR=Dette feltet brukes internt.;
                           SVE=Anger typ av arbetsflîde, till exempel Administration eller Ekonomi.];
                ApplicationArea=#Jobs;
                SourceExpr=Quantity;
                Style=Strong;
                StyleExpr=Emphasize }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Total %1;ENU=Total %1;NLD=Totaal %1;NOR=I alt %1;SVE=Total %1';
      JobJnlLine@1001 : Record 11072008;
      UnitOfMeasureQty@1003 : Decimal;
      WorkTypeQty@1004 : Decimal;
      TotalQty@1005 : Decimal;
      OldUnitOfMeasureCode@1006 : Text[10];
      OldWorkTypeCode@1007 : Code[10];
      Emphasize@19043477 : Boolean INDATASET;

    [External]
    PROCEDURE SetJobJnlLine@1(VAR JobJnlLine2@1000 : Record 11072008);
    BEGIN
      JobJnlLine2.TESTFIELD(Type,JobJnlLine2.Type::Resource);
      JobJnlLine.COPYFILTERS(JobJnlLine2);
      JobJnlLine.SETRANGE(Type,JobJnlLine2.Type::Resource);
      JobJnlLine.SETRANGE("No.",JobJnlLine2."No.");
    END;

    LOCAL PROCEDURE InsertUnitOfMeasureQty@2();
    BEGIN
      INIT;
      "Is Total" := FALSE;
      "Unit of Measure Code" := OldUnitOfMeasureCode;
      "Line Type" := "Line Type"::Total;
      "Work Type Code" := '';
      Quantity := UnitOfMeasureQty;
      INSERT;
      UnitOfMeasureQty := 0;
    END;

    LOCAL PROCEDURE InsertWorkTypeQty@3();
    BEGIN
      INIT;
      "Is Total" := FALSE;
      "Unit of Measure Code" := OldUnitOfMeasureCode;
      "Line Type" := 0;
      "Work Type Code" := OldWorkTypeCode;
      Quantity := WorkTypeQty;
      INSERT;
      WorkTypeQty := 0;
    END;

    LOCAL PROCEDURE Caption@4() : Text[80];
    VAR
      Res@1000 : Record 156;
    BEGIN
      Res.GET(JobJnlLine.GETRANGEMIN("No."));
      EXIT(Res."No." + ' ' + Res.Name);
    END;

    LOCAL PROCEDURE FormatLine@19026690(Text@19007834 : Text[1024]);
    BEGIN
      IF "Line Type" = "Line Type"::Total THEN BEGIN
        Emphasize := TRUE;
        Text := STRSUBSTNO(Text000,Text);
      END;
    END;

    BEGIN
    END.
  }
}

