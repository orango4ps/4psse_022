OBJECT Codeunit 11126071 FSW Worksheet Processing Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE ProcessWorksheet@1100528005(VAR FieldServiceWorksheet@1100528000 : Record 11125878;VAR NumberOfCreatedTransits@1100528001 : Integer;VAR NumberOfUpdatedTransits@1100528005 : Integer;VAR NumberOfCreatedHourLines@1100528002 : Integer;VAR NumberOfCreatedItemLines@1100528003 : Integer);
    BEGIN
      NumberOfCreatedTransits := 0;
      NumberOfUpdatedTransits := 0;
      NumberOfCreatedHourLines := 0;
      NumberOfCreatedItemLines := 0;

      ProcessHourLines(FieldServiceWorksheet,NumberOfCreatedHourLines);
      ProcessTransitLines(FieldServiceWorksheet,NumberOfCreatedTransits, NumberOfUpdatedTransits);
      ProcessItemLines(FieldServiceWorksheet,NumberOfCreatedItemLines);

      UpdateWorkSheetStatus(FieldServiceWorksheet);

      IF (FieldServiceWorksheet."Work Order Finished") THEN
        FinishWorkOrder(FieldServiceWorksheet);
    END;

    PROCEDURE ProcessTransitsOfWorksheet@1100525000(VAR FieldServiceWorksheet@1100528000 : Record 11125878;VAR NumberOfCreatedTransits@1100528001 : Integer;VAR NumberOfUpdatedTransits@1100528005 : Integer);
    BEGIN
      NumberOfCreatedTransits := 0;
      NumberOfUpdatedTransits := 0;

      ProcessTransitLines(FieldServiceWorksheet,NumberOfCreatedTransits, NumberOfUpdatedTransits);
    END;

    LOCAL PROCEDURE ProcessHourLine@1100528000(FSWorkshHourLine@1100528000 : Record 11125881;VAR NumberOfCreatedHourLines@1100528013 : Integer);
    VAR
      FieldServiceWorksheet@1100528002 : Record 11125878;
      DimValRec@1100528003 : Record 349;
      HourAccRec@1100528009 : Record 11012038;
      HourAccLineRec@1100528008 : Record 11012039;
      HourAccLineRec2@1100528007 : Record 11012039;
      Resource@1100528004 : Record 11229278;
      GLSetupRec@1100528001 : Record 98;
      WorkOrder@1100528010 : Record 11229279;
      Year@1100528006 : Integer;
      Week@1100528005 : Integer;
      LineQuantity@1100528011 : Decimal;
      date@1100528012 : Date;
    BEGIN
      GLSetupRec.GET;
      WITH FSWorkshHourLine DO BEGIN
        IF NOT FSWorkshHourLine."Line Processed" THEN BEGIN
          CLEAR(Resource);
          Resource.GET("Resource No.");
          CheckResource(Resource);
          FieldServiceWorksheet.GET("Worksheet No.");
          FieldServiceWorksheet.TESTFIELD("Worksheet Date");

          WorkOrder.GET(FieldServiceWorksheet."Work Order No.");
          IF ("Cost Object" <> '') THEN
            DimValRec.GET(GLSetupRec."Shortcut Dimension 2 Code","Cost Object");


          date := FieldServiceWorksheet."Worksheet Date";
          Year := DATE2DWY(date, 3);
          Week := DATE2DWY(date, 2);

          IF NOT HourAccRec.GET(Year, Week, Resource."Source No.") THEN BEGIN
            HourAccRec.INIT;
            HourAccRec.SetSuppressMessages(TRUE);
            HourAccRec.VALIDATE(Year, Year);
            HourAccRec.VALIDATE(Week, Week);
            HourAccRec.VALIDATE("Employee No.", Resource."Source No.");
            HourAccRec.INSERT(TRUE);
          END;

          HourAccLineRec.INIT;
          HourAccLineRec.VALIDATE(Year, Year);
          HourAccLineRec.VALIDATE(Week, Week);
          HourAccLineRec.VALIDATE("Employee No.", Resource."Source No.");
          HourAccLineRec2.SETRANGE(Year, HourAccLineRec.Year);
          HourAccLineRec2.SETRANGE(Week, HourAccLineRec.Week);
          HourAccLineRec2.SETRANGE("Employee No.", HourAccLineRec."Employee No.");
          IF HourAccLineRec2.FINDLAST THEN
            HourAccLineRec."Line No." := HourAccLineRec2."Line No." + 10000
          ELSE
            HourAccLineRec."Line No." := 10000;

          HourAccLineRec.VALIDATE(Type, HourAccLineRec.Type::Service);
          HourAccLineRec.VALIDATE("Service Order No.", WorkOrder."Source No.");
          IF ("Cost Object" <> '') THEN
            HourAccLineRec.VALIDATE("Cost Object", "Cost Object");

          LineQuantity := ROUND(Quantity,0.001);
          CASE DATE2DWY(FieldServiceWorksheet."Worksheet Date", 1) OF
           1: HourAccLineRec.VALIDATE(Monday, LineQuantity);
           2: HourAccLineRec.VALIDATE(Tuesday, LineQuantity);
           3: HourAccLineRec.VALIDATE(Wednesday, LineQuantity);
           4: HourAccLineRec.VALIDATE(Thursday, LineQuantity);
           5: HourAccLineRec.VALIDATE(Friday, LineQuantity);
           6: HourAccLineRec.VALIDATE(Saturday, LineQuantity);
           7: HourAccLineRec.VALIDATE(Sunday, LineQuantity);
          END;

          HourAccLineRec."Posting Date" := FieldServiceWorksheet."Worksheet Date";
          HourAccLineRec.INSERT(TRUE);
          NumberOfCreatedHourLines +=1;
          FSWorkshHourLine."Line Processed" := TRUE;
          FSWorkshHourLine.MODIFY;
        END;
      END;
    END;

    PROCEDURE ProcessHourLines@1100528002(FieldServiceWorksheet@1100528000 : Record 11125878;VAR NumberOfCreatedHourLines@1100528002 : Integer);
    VAR
      FSWorkshHourLines@1100528001 : Record 11125881;
    BEGIN
      FSWorkshHourLines.SETRANGE("Worksheet No.",FieldServiceWorksheet."No.");
      IF NOT FSWorkshHourLines.FINDSET THEN
        EXIT;

      REPEAT
        ProcessHourLine(FSWorkshHourLines, NumberOfCreatedHourLines);
      UNTIL FSWorkshHourLines.NEXT = 0;
    END;

    LOCAL PROCEDURE CheckResource@1100528003(Resource@1100528000 : Record 11229278);
    BEGIN
      WITH Resource DO BEGIN
         TESTFIELD(Type,Resource.Type::Employee);// THEN BEGIN
         TESTFIELD("Source No.");
         TESTFIELD(Company);
      END;
    END;

    LOCAL PROCEDURE ProcessItemLine@1100528001(FSWorkshItemLine@1100528000 : Record 11125882;VAR NumberOfCreatedItemLines@1100528010 : Integer);
    VAR
      GLSetupRec@1100528002 : Record 98;
      FieldServiceWorksheet@1100528003 : Record 11125878;
      ResourceWOP@1100528004 : Record 11229278;
      Employee@1100528005 : Record 5200;
      FieldServiceWorksheetSetup@1100528006 : Record 11125885;
      Location@1100528008 : Record 14;
      ItemJnlLineRec@1100528009 : Record 83;
      ItemJnlLineRec2@1100528007 : Record 83;
    BEGIN
      GLSetupRec.GET;
      WITH FSWorkshItemLine DO BEGIN
        IF NOT FSWorkshItemLine."Line Processed" THEN BEGIN
          FieldServiceWorksheet.GET(FSWorkshItemLine."Worksheet No.");
          ItemJnlLineRec.INIT;
          FieldServiceWorksheetSetup.FINDFIRST;
          Location.GET(FieldServiceWorksheetSetup.Location);
          ItemJnlLineRec.VALIDATE("Journal Template Name", FieldServiceWorksheetSetup."Item Journal Template");
          ItemJnlLineRec.VALIDATE("Journal Batch Name", FieldServiceWorksheetSetup."Item Journal Batch");
          ItemJnlLineRec2.SETRANGE("Journal Template Name", FieldServiceWorksheetSetup."Item Journal Template");
          ItemJnlLineRec2.SETRANGE("Journal Batch Name", FieldServiceWorksheetSetup."Item Journal Batch");
          IF FieldServiceWorksheet."Resource No." <> '' THEN BEGIN
              ResourceWOP.GET(FieldServiceWorksheet."Resource No.");
              Employee.GET(ResourceWOP."Source No.");
              IF Employee."Location Code" <> '' THEN BEGIN
                Location.GET(Employee."Location Code");
                ItemJnlLineRec.VALIDATE("Journal Template Name", Location."Inventory Journal Template");
                ItemJnlLineRec.VALIDATE("Journal Batch Name", Location."Inventory Journal Batch");
                ItemJnlLineRec2.SETRANGE("Journal Template Name", ItemJnlLineRec."Journal Template Name");
                ItemJnlLineRec2.SETRANGE("Journal Batch Name", ItemJnlLineRec."Journal Batch Name");
              END;
          END;

          IF ItemJnlLineRec2.FINDLAST THEN
            ItemJnlLineRec."Line No." := ItemJnlLineRec2."Line No." + 10000
          ELSE BEGIN
            ItemJnlLineRec."Line No." := 10000;
          END;
          ItemJnlLineRec2."Entry Type" := ItemJnlLineRec."Entry Type"::Sale;
          ItemJnlLineRec.SetUpNewLine(ItemJnlLineRec2);
          ItemJnlLineRec.INSERT(TRUE);

          ItemJnlLineRec."Document No." := FieldServiceWorksheet."No.";
          ItemJnlLineRec."Service Order No." := FieldServiceWorksheet."Service Order No.";
          IF (FieldServiceWorksheet."Worksheet Date" <> 0D) THEN
            ItemJnlLineRec.VALIDATE("Posting Date", FieldServiceWorksheet."Worksheet Date");
          IF ("Item No." <> '') THEN BEGIN
            ItemJnlLineRec.VALIDATE("Item No.", "Item No.");
            IF (Location.Code <> '') THEN
              ItemJnlLineRec.VALIDATE("Location Code", Location.Code);
            IF ("Unit of Measure" <> '') THEN
              ItemJnlLineRec.VALIDATE("Unit of Measure Code", "Unit of Measure");
            IF (Quantity <> 0) THEN
              ItemJnlLineRec.VALIDATE(Quantity, ROUND(Quantity,0.00001));
          END;
          IF Employee."No." <> '' THEN
            ItemJnlLineRec."Employee No." := Employee."No.";

          ItemJnlLineRec.MODIFY(TRUE);
          NumberOfCreatedItemLines += 1;
          FSWorkshItemLine."Line Processed" := TRUE;
          FSWorkshItemLine.MODIFY(TRUE);
        END;
      END;
    END;

    PROCEDURE ProcessItemLines@1100528004(FieldServiceWorksheet@1100528000 : Record 11125878;VAR NumberOfCreatedItemLines@1100528002 : Integer);
    VAR
      FSWorkshItemLines@1100528001 : Record 11125882;
    BEGIN
      FSWorkshItemLines.SETRANGE("Worksheet No.",FieldServiceWorksheet."No.");
      IF NOT FSWorkshItemLines.FINDSET THEN
        EXIT;

      REPEAT
        ProcessItemLine(FSWorkshItemLines, NumberOfCreatedItemLines);
      UNTIL FSWorkshItemLines.NEXT = 0;
    END;

    LOCAL PROCEDURE ProcessTransitLine@1100528007(FSWorkshTransitLine@1100528000 : Record 11125880;VAR NumberOfCreatedTransits@1100528002 : Integer;VAR NumberOfUpdatedTransits@1100528003 : Integer);
    VAR
      FSTransit@1100528001 : Record 11125886;
    BEGIN
      IF FSWorkshTransitLine."Line Processed" THEN
        EXIT;

      IF NOT FSTransit.GET(FSWorkshTransitLine.Code) THEN BEGIN
        FSTransit.INIT;
        FSTransit.Code := FSWorkshTransitLine.Code;
        UpdateTransitFromWkshTransLine(FSWorkshTransitLine, FSTransit);
        FSTransit.INSERT;
        NumberOfCreatedTransits += 1;
      END ELSE BEGIN
        UpdateTransitFromWkshTransLine(FSWorkshTransitLine, FSTransit);
        FSTransit.MODIFY;
        NumberOfUpdatedTransits += 1;
      END;

      CopyDocumentLinks(FSWorkshTransitLine, FSTransit);

      FSWorkshTransitLine."Line Processed" := TRUE;
      FSWorkshTransitLine.MODIFY;
    END;

    LOCAL PROCEDURE UpdateTransitFromWkshTransLine@1100528009(FSWorkshTransitLine@1100528001 : Record 11125880;VAR FSTransit@1100528000 : Record 11125886);
    BEGIN
      FSTransit.Reference := FSWorkshTransitLine.Reference;
      FSTransit.Type := FSWorkshTransitLine.Type;
      FSTransit.Room := FSWorkshTransitLine.Room;
      FSTransit."Fire Retardancy Factor" := FSWorkshTransitLine."Fire Retardancy Factor";
      FSTransit."Most Recent Comment" := FSWorkshTransitLine.Comment;
      FSTransit.Status := FSWorkshTransitLine.Status;
    END;

    PROCEDURE ProcessTransitLines@1100528006(FieldServiceWorksheet@1100528000 : Record 11125878;VAR NumberOfCreatedTransits@1100528002 : Integer;VAR NumberOfUpdatedTransits@1100528003 : Integer);
    VAR
      FSWorkshTransitLine@1100528001 : Record 11125880;
    BEGIN
      FSWorkshTransitLine.SETRANGE("Worksheet No.", FieldServiceWorksheet."No.");
      IF NOT FSWorkshTransitLine.FINDSET THEN
        EXIT;

      REPEAT
        ProcessTransitLine(FSWorkshTransitLine, NumberOfCreatedTransits, NumberOfUpdatedTransits);
      UNTIL FSWorkshTransitLine.NEXT = 0;
    END;

    PROCEDURE CopyDocumentLinks@1100529006(SourceRec@1100529001 : Record 11125880;TargetRec@1100529000 : Record 11125886);
    VAR
      DocumentLinkMgt@1100525000 : Codeunit 11012401;
      SourceRecRef@1100525001 : RecordRef;
      TargetRecRef@1100529002 : RecordRef;
    BEGIN
      SourceRecRef.GETTABLE(SourceRec);
      TargetRecRef.GETTABLE(TargetRec);
      DocumentLinkMgt.CopyDocLinks(SourceRecRef, TargetRecRef);
    END;

    LOCAL PROCEDURE FinishWorkOrder@1100528008(Worksheet@1100528000 : Record 11125878);
    VAR
      WorkOrder@1100528001 : Record 11229279;
    BEGIN
      WorkOrder.GET(Worksheet."Work Order No.");
      WorkOrder.VALIDATE("Actual Field Service Status", '100');  //100 means Finished
      WorkOrder.SetDateTimeRefPointRegistr(Worksheet."Work Order Finished Time");
      WorkOrder.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE UpdateWorkSheetStatus@1100525001(VAR FieldServiceWorksheet@1100525000 : Record 11125878);
    VAR
      FSWorkshHourLine@1100525002 : Record 11125881;
      FSWorkshItemLine@1100525001 : Record 11125882;
    BEGIN
      FSWorkshHourLine.SETRANGE("Worksheet No.",FieldServiceWorksheet."No.");
      FSWorkshHourLine.SETRANGE("Line Processed", FALSE);

      FSWorkshItemLine.SETRANGE("Worksheet No.",FieldServiceWorksheet."No.");
      FSWorkshItemLine.SETRANGE("Line Processed", FALSE);

      IF NOT (FSWorkshHourLine.FINDFIRST OR FSWorkshItemLine.FINDFIRST) THEN BEGIN
        IF (FieldServiceWorksheet.Status = FieldServiceWorksheet.Status::Open) THEN
          FieldServiceWorksheet.Status := FieldServiceWorksheet.Status::"Costs Processed"
        ELSE IF (FieldServiceWorksheet.Status = FieldServiceWorksheet.Status::"Revenue Processed") THEN
          FieldServiceWorksheet.Status := FieldServiceWorksheet.Status::Completed;

        FieldServiceWorksheet.MODIFY;
      END;
    END;

    BEGIN
    END.
  }
}

