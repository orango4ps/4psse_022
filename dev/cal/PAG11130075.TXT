OBJECT Page 11130075 Site Manager FactBox
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Details;
               ENU=Details;
               NLD=Details;
               NOR=Detaljer;
               SVE=Detaljer];
    SourceTable=Table11125539;
    PageType=CardPart;
    OnOpenPage=VAR
                 QASetup@1100525000 : Record 11126001;
                 FPSLicenseManagement@1100527400 : Codeunit 11229289;
               BEGIN
                 QAVisible := FPSLicenseManagement.LicenseAndReadPermissionForTable(QASetup);
               END;

    OnAfterGetRecord=VAR
                       ProjShiftSMF@1100525002 : Record 11125538;
                       StartTime@1100525000 : Time;
                       EndTime@1100525001 : Time;
                     BEGIN
                       UpdateWorkingDate;
                       ProjShiftSMF.SETRANGE("Project No.", "Project No.");
                       ProjShiftSMF.SETFILTER("Shift Code", '<>%1', '');
                       ShiftOnProject := (NOT ProjShiftSMF.ISEMPTY);
                       WorkHoursExceptionsHideValue := (ShiftOnProject AND (gShiftCode = ''));
                       CALCFIELDS(
                         "Text Lines", "Text Lines (Date)",
                         "Weather Conditions", "Weather Conditions (Date)",
                         "Work Hours Exceptions", "Work Hours Exceptions (Date)",
                         Inspections, "Inspections (Date)"
                         );
                       TextNumbers := STRSUBSTNO('%1 (%2)', "Text Lines (Date)", "Text Lines");
                       WeaherCondNumbers := STRSUBSTNO('%1 (%2)', "Weather Conditions (Date)", "Weather Conditions");
                       InspectionsNumbers := STRSUBSTNO('%1 (%2)', "Inspections (Date)", Inspections);
                       WorkHoursExceptionsNumbers := STRSUBSTNO('%1 (%2)', "Work Hours Exceptions (Date)", "Work Hours Exceptions");
                       IF GetStartEndTimes("Project No.", gShiftCode, gWorkingDate, StartTime, EndTime) THEN
                         StartEndWorkingHours := FORMAT(StartTime, 5, '<Hours24,2>:<Minutes,2>') + ' - ' + FORMAT(EndTime, 5, '<Hours24,2>:<Minutes,2>')
                       ELSE
                         StartEndWorkingHours := '';
                     END;

  }
  CONTROLS
  {
    { 1100525000;0;Container;
                ContainerType=ContentArea }

    { 1100525500;1;Field  ;
                CaptionML=[DEU=Arbeitsstunden;
                           ENU=Working Hours;
                           NLD=Werktijden];
                SourceExpr=StartEndWorkingHours }

    { 1100525004;1;Field  ;
                CaptionML=[DEU=Arbeitsstunden Ausnahmen;
                           ENU=Work Hours Exceptions;
                           NLD=Afwijkende werktijden];
                SourceExpr=WorkHoursExceptionsNumbers;
                HideValue=WorkHoursExceptionsHideValue;
                OnDrillDown=BEGIN
                              DrillDownSMFWorkHourExceptions("Project No.", gShiftCode);
                              CurrPage.UPDATE;
                            END;
                             }

    { 1100525005;1;Field  ;
                CaptionML=[DEU=Wetterbedingungen;
                           ENU=Wheather Conditions;
                           NLD=Weersomstandigheden;
                           NOR=V‘rforhold;
                           SVE=V„derf”rh†llanden];
                SourceExpr=WeaherCondNumbers;
                OnDrillDown=BEGIN
                              DrillDownSMFWeatherConditions("Project No.");
                              CurrPage.UPDATE;
                            END;
                             }

    { 1100525003;1;Field  ;
                CaptionML=[DEU=Bemerkungen;
                           ENU=Text Lines;
                           NLD=Tekstregels;
                           NOR=Tekstrader;
                           SVE=Textrader];
                SourceExpr=TextNumbers;
                OnDrillDown=BEGIN
                              DrillDownSMFTextLines("Project No.");
                              CurrPage.UPDATE;
                            END;
                             }

    { 1210190000;1;Field  ;
                CaptionML=[DEU=Inspektionen;
                           ENU=Inspections;
                           NLD=Keuringen;
                           NOR=Inspeksjoner;
                           SVE=Inspektioner];
                SourceExpr=InspectionsNumbers;
                OnDrillDown=BEGIN
                              DrillDownSMFInspectionLines("Project No.");
                              CurrPage.UPDATE;
                            END;
                             }

    { 1210190001;1;Field  ;
                SourceExpr=Deviations;
                Visible=QAVisible;
                OnDrillDown=BEGIN
                              DrillDownSMFDeviationLines("Project No.");
                              CurrPage.UPDATE;
                            END;
                             }

    { 1210190002;1;Field  ;
                SourceExpr="Incidents/Accidents";
                Visible=QAVisible;
                OnDrillDown=BEGIN
                              DrillDownSMFAccidentLines("Project No.");
                              CurrPage.UPDATE;
                            END;
                             }

  }
  CODE
  {
    VAR
      gWorkingDate@1100525001 : Date;
      ShiftOnProject@1100525008 : Boolean;
      QAVisible@1100525005 : Boolean INDATASET;
      WorkHoursExceptionsHideValue@1100525009 : Boolean INDATASET;
      gShiftCode@1100525007 : Code[10];
      TextNumbers@1100525000 : Text[30];
      WeaherCondNumbers@1100525002 : Text[30];
      WorkHoursExceptionsNumbers@1100525003 : Text[30];
      InspectionsNumbers@1100525004 : Text[30];
      StartEndWorkingHours@1100525006 : Text[30];

    PROCEDURE AddProjectToTmpTable@1100525000(ProjectNo@1100525000 : Code[20]);
    BEGIN
      IF NOT GET(ProjectNo) THEN BEGIN
        "Project No." := ProjectNo;
        IF INSERT THEN;
      END;
    END;

    PROCEDURE SetSelections@1100525500(WorkingDate@1100525500 : Date;ShiftCode@1100525000 : Code[10];PageUpdate@1100525001 : Boolean);
    BEGIN
      gWorkingDate := WorkingDate;
      gShiftCode := ShiftCode;
      FILTERGROUP(2);
      SETRANGE("Working Date Filter", WorkingDate);
      SETRANGE("Shift Code Filter", ShiftCode);
      FILTERGROUP(0);
      IF PageUpdate THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE UpdateWorkingDate@1100525003();
    VAR
      PassDataofRunFormsSMF@1100525000 : Codeunit 11125528;
      WorkingDate@1100525002 : Date;
      ShiftCode@1100525001 : Code[10];
    BEGIN
      PassDataofRunFormsSMF.GetWorkingDate(WorkingDate);
      PassDataofRunFormsSMF.GetShiftCode(ShiftCode);
      SetSelections(WorkingDate, ShiftCode, FALSE);
    END;

    BEGIN
    END.
  }
}

