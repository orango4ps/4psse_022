OBJECT Codeunit 11128503 E-Invoice Check Sales Document
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVNO7.00,4PSSE.NO (10612);
  }
  PROPERTIES
  {
    TableNo=36;
    OnRun=VAR
            ResponsibilityCenter@1080000 : Record 5714;
          BEGIN
            IF "E-Invoice" THEN BEGIN
              ReadCompanyInfo;
              ReadGLSetup;

              EInvoiceDocumentEncode.GetEInvoiceCurrencyCode("Currency Code");
              IF "Responsibility Center" <> '' THEN BEGIN
                ResponsibilityCenter.GET("Responsibility Center");
                ResponsibilityCenter.TESTFIELD(Name);
                ResponsibilityCenter.TESTFIELD(Address);
                ResponsibilityCenter.TESTFIELD(City);
                ResponsibilityCenter.TESTFIELD("Post Code");
                ResponsibilityCenter.TESTFIELD("Country/Region Code");
              END ELSE BEGIN
                CompanyInfo.TESTFIELD(Name);
                CompanyInfo.TESTFIELD(Address);
                CompanyInfo.TESTFIELD(City);
                CompanyInfo.TESTFIELD("Post Code");
              END;
              CompanyInfo.TESTFIELD("Country/Region Code");
              EInvoiceDocumentEncode.GetEInvoiceCountryRegionCode(CompanyInfo."Country/Region Code");

              CompanyInfo.TESTFIELD("VAT Registration No.");

              IF "Document Type" IN ["Document Type"::Invoice,"Document Type"::Order] THEN
                IF "External Document No." = '' THEN
                  ERROR(
                    Text007,"Document Type");

              TESTFIELD("Bill-to Name");
              TESTFIELD("Bill-to Address");
              TESTFIELD("Bill-to City");
              TESTFIELD("Bill-to Post Code");
              TESTFIELD("Bill-to Country/Region Code");
              EInvoiceDocumentEncode.GetEInvoiceCountryRegionCode("Bill-to Country/Region Code");

              IF "Document Type" = "Document Type"::"Credit Memo" THEN BEGIN
                IF "Applies-to Doc. Type" = "Applies-to Doc. Type"::Invoice THEN
                  TESTFIELD("Applies-to Doc. No.")
                ELSE
                  IF "External Document No." = '' THEN
                    ERROR(Text007,"Document Type");
              END;

              TESTFIELD("VAT Registration No.");
              TESTFIELD("Your Reference");
              TESTFIELD("Shipment Date");
              TESTFIELD("Ship-to Address");
              TESTFIELD("Ship-to City");
              TESTFIELD("Ship-to Post Code");
              TESTFIELD("Ship-to Country/Region Code");
              EInvoiceDocumentEncode.GetEInvoiceCountryRegionCode("Ship-to Country/Region Code");
              TESTFIELD("Due Date");

              IF CompanyInfo.IBAN = '' THEN
                CompanyInfo.TESTFIELD("Bank Account No.");
              CompanyInfo.TESTFIELD("Bank Branch No.");

              CheckSalesLines(Rec);
            END;
          END;

  }
  CODE
  {
    VAR
      CompanyInfo@1080000 : Record 79;
      GLSetup@1080001 : Record 98;
      EInvoiceDocumentEncode@1080003 : Codeunit 11128501;
      CompanyInfoRead@1080004 : Boolean;
      GLSetupRead@1080005 : Boolean;
      Text007@1080007 : TextConst 'ENU="You must specify an External document number in document type  = %1.  If you use E-Invoice, this field is required regardless of the value in the External Document No. field of the Sales & Receivables Setup table.";NOR="Du m† angi et eksterndokumentnummer i dokumenttype = %1. Hvis du bruker e-faktura, er dette feltet obligatorisk, uansett verdi i feltet Eksterndokumentnr. i tabellen Salgsoppsett."';
      Text008@1080008 : TextConst '@@@=Parameter 1 - document type (), 2 - document number;ENU=The %1 %2 contains lines in which the Type and the No. are specified, but the Description is empty. This is not allowed for an E-Invoice document which might be created from the posted document.;NOR=%1 %2 inneholder linjer der typen og nummeret er angitt, men der beskrivelsen er tom. Dette er ikke tillatt for et e-fakturadokument som kan opprettes fra det bokf›rte dokumentet.';
      Text009@1080009 : TextConst '@@@=Parameter 1 - document type (Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order), 2 - document number;ENU=The %1 %2 contains lines in which either the Type, the No., or the Description is empty. Lines that contain these empty fields are not taken into account when you create an E-Invoice document. Do you want to continue?;NOR=%1 %2 inneholder linjer der typen, nummeret eller beskrivelsen er tom. Linjer som inneholder disse tomme feltene, tas ikke i betraktning n†r du oppretter et e-fakturadokument. Vil du fortsette?';
      Text011@1080011 : TextConst 'ENU=The posting has been interrupted to respect the warning.;NOR=bokf›ringen ble avbrutt pga advarselen.;SVE=Bokf”ringen har avbrutits pga varningen.';
      Text012@1080012 : TextConst '@@@=Parameter 1 - document type (Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order), 2 - document number;ENU=The %1 %2 contains lines in which the Unit of Measure is empty. This is not allowed for an E-Invoice document which might be created from the posted document.;NOR=%1 %2 inneholder linjer der m†leenheten er tom. Dette er ikke tillatt for et e-fakturadokument som kan opprettes fra det bokf›rte dokumentet.';

    LOCAL PROCEDURE ReadCompanyInfo@1080014();
    BEGIN
      IF NOT CompanyInfoRead THEN BEGIN
        CompanyInfo.GET;
        CompanyInfoRead := TRUE;
      END;
    END;

    LOCAL PROCEDURE ReadGLSetup@1080015();
    BEGIN
      IF NOT GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
    END;

    LOCAL PROCEDURE CheckSalesLines@1080016(SalesHeader@1060000 : Record 36);
    VAR
      SalesLine@1060001 : Record 37;
      EmptyLineFound@1060002 : Boolean;
    BEGIN
      EmptyLineFound := FALSE;
      WITH SalesLine DO BEGIN
        SETRANGE("Document Type",SalesHeader."Document Type");
        SETRANGE("Document No.",SalesHeader."No.");
        IF FINDSET THEN
          REPEAT
            IF (Type <> Type::" ") AND ("No." <> '') AND ("Unit of Measure" = '') THEN
              ERROR(Text012,"Document Type","Document No.");
            IF Description = '' THEN
              IF (Type <> Type::" ") AND ("No." <> '') THEN
                ERROR(Text008,"Document Type","Document No.");
            IF (Type = Type::" ") OR ("No." = '') THEN
              EmptyLineFound := TRUE;
          UNTIL (NEXT = 0);

        IF EmptyLineFound THEN
          IF NOT CONFIRM(Text009,TRUE,"Document Type","Document No.") THEN
            ERROR(Text011);
      END;
    END;

    PROCEDURE EInvoiceCheckSalesInvoice@1100285500("Sales Invoice Header"@1100285500 : Record 112);
    BEGIN
      ReadCompanyInfo;
      ReadGLSetup;

      "Sales Invoice Header"."Currency Code" := EInvoiceDocumentEncode.GetEInvoiceCurrencyCode("Sales Invoice Header"."Currency Code");

      CompanyInfo.TESTFIELD(Name);
      CompanyInfo.TESTFIELD(Address);
      CompanyInfo.TESTFIELD(City);
      CompanyInfo.TESTFIELD("Post Code");
      CompanyInfo.TESTFIELD("Country/Region Code");
      EInvoiceDocumentEncode.GetEInvoiceCountryRegionCode(CompanyInfo."Country/Region Code");
      CompanyInfo.TESTFIELD("VAT Registration No.");

      IF CompanyInfo.IBAN = '' THEN
        CompanyInfo.TESTFIELD("Bank Account No.");
      CompanyInfo.TESTFIELD("Bank Branch No.");
    END;

    PROCEDURE EInvoiceCheckSalesCrMemo@1100285501("Sales Cr.Memo Header"@1100285500 : Record 114);
    BEGIN
      ReadCompanyInfo;
      ReadGLSetup;

      "Sales Cr.Memo Header"."Currency Code" := EInvoiceDocumentEncode.GetEInvoiceCurrencyCode("Sales Cr.Memo Header"."Currency Code");

      CompanyInfo.TESTFIELD(Name);
      CompanyInfo.TESTFIELD(Address);
      CompanyInfo.TESTFIELD(City);
      CompanyInfo.TESTFIELD("Post Code");
      CompanyInfo.TESTFIELD("Country/Region Code");
      EInvoiceDocumentEncode.GetEInvoiceCountryRegionCode(CompanyInfo."Country/Region Code");

      CompanyInfo.TESTFIELD("VAT Registration No.");

      IF CompanyInfo.IBAN = '' THEN
        CompanyInfo.TESTFIELD("Bank Account No.");
      CompanyInfo.TESTFIELD("Bank Branch No.");
    END;

    BEGIN
    {
      cod10612,cod10615,cod10616
    }
    END.
  }
}

