OBJECT Codeunit 11012043 Compress Cost Plus Entries
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    TableNo=11012019;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ProjMainRec@1210190001 : Record 11012019;
      ProjCostPlusRec@1210190000 : Record 11012019;
      ProjRec@1100485001 : Record 11072003;
      ProjTypeRec@1100485002 : Record 11012009;
      ServMainRec@1210190006 : Record 11012825;
      ServCostPlusRec@1210190005 : Record 11012825;
      Counter@1210190002 : Integer;
      Text001@1210190003 : TextConst 'ENU=%1 line(s) compressed.;NOR=%1 rad(er) komprimert;SVE=%1 rad(er) har komprimerats.';
      CPLineNoFilter@1210190004 : Text[1024];
      Text002@1100485000 : TextConst 'ENU=Compressed;NOR=Komprimert;SVE=Komprimerad';
      SelectDescription@1100485030 : Boolean;
      SelectUnit@1100485029 : Boolean;
      SelectHourRate@1100485028 : Boolean;
      SelectEmployee@1100485027 : Boolean;
      SelectFromDate@1100485026 : Boolean;
      SelectToDate@1100485025 : Boolean;
      SelectItem@1100485024 : Boolean;
      SelectBasicItem@1100485023 : Boolean;
      SelectTradeItem@1100485022 : Boolean;
      SelectManufacturer@1100485021 : Boolean;
      SelectVendor@1100485020 : Boolean;
      SelectCostObject@1100485019 : Boolean;
      SelectCostComponent@1100485018 : Boolean;
      SelectGrossPrice@1100485017 : Boolean;
      SelectPurchaseDiscount@1100485016 : Boolean;
      SelectCostPrice@1100485015 : Boolean;
      SelectSalesDiscount@1100485014 : Boolean;
      SelectBasicPrice@1100485013 : Boolean;
      SelectSurcharge@1100485012 : Boolean;
      SelectSalesPrice@1100485011 : Boolean;
      SelectContractDiscount@1100485010 : Boolean;
      SelectElement@1100485009 : Boolean;
      SelectExtensionContract@1100485008 : Boolean;
      SelectText@1100485007 : Boolean;
      SelectVat@1100485006 : Boolean;
      SelectInvoiced@1100485005 : Boolean;
      gvProcess@1100485003 : Boolean;

    [External]
    PROCEDURE ProcessProjectCostPlus@1210190005(VAR Rec@1210190000 : Record 11012019);
    VAR
      lvProjSetupRec@1100485000 : Record 315;
    BEGIN
      lvProjSetupRec.GET;
      lvProjSetupRec.TESTFIELD(lvProjSetupRec."Compress CP Allowed", TRUE);

      SelectFilters;  //db, 02-10-07
      IF gvProcess = FALSE THEN EXIT;  //db, 14-01-08

      ProjMainRec.COPY(Rec);
      ProjMainRec.SETCURRENTKEY("Project No.", Principal, "Commission No.", "Settl.Sheet No.", "Line No.");
      ProjMainRec.SETRANGE(Invoiced, FALSE);

      IF NOT ProjMainRec.MARKEDONLY THEN BEGIN
        ProjMainRec.MARKEDONLY := TRUE;
        IF NOT ProjMainRec.FINDFIRST THEN
          ProjMainRec.MARKEDONLY := FALSE;
      END;

      ProjCostPlusRec.COPY(ProjMainRec);
      CPLineNoFilter := ProjMainRec.GETFILTER("Line No.");
      IF CPLineNoFilter = '' THEN
        CPLineNoFilter := '<>%1'
      ELSE
        CPLineNoFilter := '<>%1&('+ CPLineNoFilter + ')';

      Counter := 0;
      CompressProjectCostPlus;
      MESSAGE(Text001, Counter);
    END;

    [External]
    PROCEDURE ProcessServiceCostPlus@1210190002(VAR Rec@1210190000 : Record 11012825);
    BEGIN
      SelectFilters;  //db, 02-10-07
      IF gvProcess = FALSE THEN EXIT;  //db, 14-01-08

      ServMainRec.COPY(Rec);
      ServMainRec.SETCURRENTKEY("Service Order No.", "Line No.");
      ServMainRec.SETRANGE(Invoiced, FALSE);

      IF NOT ServMainRec.MARKEDONLY THEN BEGIN
        ServMainRec.MARKEDONLY := TRUE;
        IF NOT ServMainRec.FINDFIRST THEN
          ServMainRec.MARKEDONLY := FALSE;
      END;

      ServCostPlusRec.COPY(ServMainRec);
      CPLineNoFilter := ServMainRec.GETFILTER("Line No.");
      IF CPLineNoFilter = '' THEN
        CPLineNoFilter := '<>%1'
      ELSE
        CPLineNoFilter := '<>%1&('+ CPLineNoFilter + ')';

      Counter := 0;
      CompressServiceCostPlus;
      MESSAGE(Text001, Counter);
    END;

    LOCAL PROCEDURE CompressProjectCostPlus@1210190000();
    VAR
      Currency@1101285000 : Record 4;
      SESetup@1101285001 : Record 11128004;
    BEGIN
      IF NOT ProjMainRec.FINDSET(TRUE, FALSE) THEN
        EXIT;

      //>>200309
      IF NOT SESetup.GET(SESetup."Line type"::Setup,'COMPR_CPE','ROUNDING') THEN
        SESetup."Value (bool)" := FALSE;
      //<<200309

      REPEAT
      //>>200309
        IF NOT Currency.GET(ProjMainRec."Currency Code") THEN
          Currency.InitRoundingPrecision;
      //<<200309
        IF ProjMainRec."Entry No. Project Ledger" <> 0 THEN BEGIN
          ProjRec.GET(ProjMainRec."Project No.");
          ProjRec.TESTFIELD("Project Type");
          ProjTypeRec.GET(ProjRec."Project Type");
          ProjTypeRec.TESTFIELD(ProjTypeRec."Post Req. Revenue Cost Plus", FALSE);
        END;
        ProjCostPlusRec.SETRANGE("Project No.", ProjMainRec."Project No.");
        ProjCostPlusRec.SETRANGE(Principal, ProjMainRec.Principal);
        ProjCostPlusRec.SETRANGE("Commission No.", ProjMainRec."Commission No.");
        ProjCostPlusRec.SETRANGE("Settl.Sheet No.", ProjMainRec."Settl.Sheet No.");
        ProjCostPlusRec.SETFILTER("Line No.", CPLineNoFilter, ProjMainRec."Line No.");

        ProjCostPlusRec.SETRANGE("Cost Object", ProjMainRec."Cost Object");
        ProjCostPlusRec.SETRANGE("Cost Component", ProjMainRec."Cost Component");
        ProjCostPlusRec.SETRANGE(Description, ProjMainRec.Description);
        ProjCostPlusRec.SETRANGE("Unit of Measure", ProjMainRec."Unit of Measure");
        ProjCostPlusRec.SETRANGE("Hour Rate Code", ProjMainRec."Hour Rate Code");
        ProjCostPlusRec.SETRANGE("Basic Price (LCY)", ProjMainRec."Basic Price (LCY)");
        ProjCostPlusRec.SETRANGE("Surcharge %", ProjMainRec."Surcharge %");
        ProjCostPlusRec.SETRANGE("Sales Price (LCY)", ProjMainRec."Sales Price (LCY)");
        ProjCostPlusRec.SETRANGE("VAT Prod. Posting Group", ProjMainRec."VAT Prod. Posting Group");
        ProjCostPlusRec.SETRANGE(Invoiced, ProjMainRec.Invoiced);
        IF SelectEmployee = TRUE THEN  //db, 02-10-07
          ProjCostPlusRec.SETRANGE("Employee No.", ProjMainRec."Employee No.");
        IF SelectFromDate = TRUE THEN  //db, 02-10-07
          ProjCostPlusRec.SETRANGE("From Date", ProjMainRec."From Date");
        IF SelectToDate = TRUE THEN  //db, 02-10-07
          ProjCostPlusRec.SETRANGE("To Date", ProjMainRec."To Date");
        ProjCostPlusRec.SETRANGE("Item No.", ProjMainRec."Item No.");
        ProjCostPlusRec.SETRANGE("Basic Item", ProjMainRec."Basic Item");
        ProjCostPlusRec.SETRANGE("Trade Item", ProjMainRec."Trade Item");
        ProjCostPlusRec.SETRANGE("Vendor (Trade Item)", ProjMainRec."Vendor (Trade Item)");
        ProjCostPlusRec.SETRANGE(Manufacturer, ProjMainRec.Manufacturer);
        IF SelectElement = TRUE THEN  //db, 02-10-07
          ProjCostPlusRec.SETRANGE(Element, ProjMainRec.Element);
        IF SelectExtensionContract = TRUE THEN  //db, 02-10-07
          ProjCostPlusRec.SETRANGE("Extension Contract", ProjMainRec."Extension Contract");
        ProjCostPlusRec.SETRANGE(Text, ProjMainRec.Text);
        ProjCostPlusRec.SETRANGE("Gross Price (LCY)", ProjMainRec."Gross Price (LCY)");
        ProjCostPlusRec.SETRANGE("Sales Discount % (Item)", ProjMainRec."Sales Discount % (Item)");
        //call 9460 No compress per execution date
        //ProjCostPlusRec.SETRANGE("Execution Date Hours", ProjMainRec."Execution Date Hours");
        ProjCostPlusRec.SETRANGE("Cost Price (LCY)", ProjMainRec."Cost Price (LCY)"); //mg, 13-10-11: M26740
      //>>200309
        IF SESetup."Value (bool)" THEN BEGIN
          ProjCostPlusRec.SETRANGE("Cost Price (LCY)",
            ROUND(ProjMainRec."Cost Price (LCY)",Currency."Amount Rounding Precision",'<'),
            ROUND(ProjMainRec."Cost Price (LCY)",Currency."Amount Rounding Precision",'>'));
          ProjCostPlusRec.SETRANGE("Gross Price (LCY)",
            ROUND(ProjMainRec."Gross Price (LCY)",Currency."Amount Rounding Precision",'<'),
            ROUND(ProjMainRec."Gross Price (LCY)",Currency."Amount Rounding Precision",'>'));
          ProjCostPlusRec.SETRANGE("Sales Price (LCY)",
            ROUND(ProjMainRec."Sales Price (LCY)",Currency."Amount Rounding Precision",'<'),
            ROUND(ProjMainRec."Sales Price (LCY)",Currency."Amount Rounding Precision",'>'));
        END;
      //<<200309
        ProjCostPlusRec.SETRANGE("Rental Period", ProjMainRec."Rental Period");  //DP00495.n
        ProjCostPlusRec.SETRANGE("Dimensional Factor",ProjMainRec."Dimensional Factor");  //C038572

        IF ProjCostPlusRec.FINDSET(TRUE, FALSE) THEN BEGIN
          REPEAT
            ProjMainRec.Quantity := ProjMainRec.Quantity + ProjCostPlusRec.Quantity;
            ProjMainRec."Sales Amount (LCY)" := ProjMainRec."Sales Amount (LCY)" + ProjCostPlusRec."Sales Amount (LCY)";
            //db.sn, 02-10-07
            IF ProjMainRec."Source Document" <> ProjCostPlusRec."Source Document" THEN
              ProjMainRec."Source Document" := Text002;
            IF ProjMainRec."Source Line" <> ProjCostPlusRec."Source Line" THEN
              ProjMainRec."Source Line" := 0;
            IF ProjMainRec."Employee No." <> ProjCostPlusRec."Employee No." THEN
              IF SelectEmployee = FALSE THEN
                ProjMainRec."Employee No." := '';
            IF ProjMainRec."From Date" <> ProjCostPlusRec."From Date" THEN
              IF SelectFromDate = FALSE THEN
                ProjMainRec."From Date" := 0D;
            IF ProjMainRec."To Date" <> ProjCostPlusRec."To Date" THEN
              IF SelectToDate = FALSE THEN
                ProjMainRec."To Date" := 0D;
            IF ProjMainRec.Element <> ProjCostPlusRec.Element THEN
              IF SelectElement = FALSE THEN
                ProjMainRec.Element := '';
            IF ProjMainRec."Extension Contract" <> ProjCostPlusRec."Extension Contract" THEN
              IF SelectExtensionContract = FALSE THEN
                ProjMainRec."Extension Contract" := '';
            //db.en, 02-10-07
            ProjCostPlusRec.DELETE(TRUE);
            Counter :=  Counter + 1;
          UNTIL ProjCostPlusRec.NEXT = 0;

          ProjMainRec."Entry No. Project Ledger" := 0;
          ProjMainRec.MODIFY(TRUE);
        END;
      UNTIL ProjMainRec.NEXT = 0;
    END;

    LOCAL PROCEDURE CompressServiceCostPlus@1210190001();
    BEGIN
      IF NOT ServMainRec.FINDSET(TRUE, FALSE) THEN
        EXIT;

      REPEAT
        ServCostPlusRec.SETRANGE("Service Order No.", ServMainRec."Service Order No.");
        ServCostPlusRec.SETFILTER("Line No.", CPLineNoFilter, ServMainRec."Line No.");

        ServCostPlusRec.SETRANGE("Cost Object", ServMainRec."Cost Object");
        ServCostPlusRec.SETRANGE("Cost Component", ServMainRec."Cost Component");
        ServCostPlusRec.SETRANGE(Description, ServMainRec.Description);
        ServCostPlusRec.SETRANGE("Unit of Measure", ServMainRec."Unit of Measure");
        ServCostPlusRec.SETRANGE("Hour Rate Code", ServMainRec."Hour Rate Code");
        ServCostPlusRec.SETRANGE("Basic Price (LCY)", ServMainRec."Basic Price (LCY)");
        ServCostPlusRec.SETRANGE("Surcharge %", ServMainRec."Surcharge %");
        ServCostPlusRec.SETRANGE("Sales Price (LCY)", ServMainRec."Sales Price (LCY)");
        ServCostPlusRec.SETRANGE("VAT Prod. Posting Group", ServMainRec."VAT Prod. Posting Group");
        ServCostPlusRec.SETRANGE(Invoiced, ServMainRec.Invoiced);
        IF SelectEmployee = TRUE THEN  //db, 02-10-07
          ServCostPlusRec.SETRANGE("Employee No.", ServMainRec."Employee No.");
        IF SelectFromDate = TRUE THEN  //db, 02-10-07
          ServCostPlusRec.SETRANGE("From Date", ServMainRec."From Date");
        IF SelectToDate = TRUE THEN  //db, 02-10-07
          ServCostPlusRec.SETRANGE("To Date", ServMainRec."To Date");
        ServCostPlusRec.SETRANGE("Item No.", ServMainRec."Item No.");
        ServCostPlusRec.SETRANGE("Basic Item", ServMainRec."Basic Item");
        ServCostPlusRec.SETRANGE("Trade Item", ServMainRec."Trade Item");
        ServCostPlusRec.SETRANGE("Vendor (Trade Item)", ServMainRec."Vendor (Trade Item)");
        ServCostPlusRec.SETRANGE(Manufacturer, ServMainRec.Manufacturer);
        ServCostPlusRec.SETRANGE(Text, ServMainRec.Text);
        ServCostPlusRec.SETRANGE("Gross Price (LCY)", ServMainRec."Gross Price (LCY)");
        ServCostPlusRec.SETRANGE("Sales Discount % (Item)", ServMainRec."Sales Discount % (Item)");
        ServCostPlusRec.SETRANGE("Discount % (ServOrder)", ServMainRec."Discount % (ServOrder)");
        ServCostPlusRec.SETRANGE("Cost Price (LCY)", ServMainRec."Cost Price (LCY)"); //mg, 13-10-11: M26740
        ServCostPlusRec.SETRANGE("Dimensional Factor",ServMainRec."Dimensional Factor");  //C041941

        IF ServCostPlusRec.FINDSET(TRUE, FALSE) THEN BEGIN
          REPEAT
            ServMainRec.Quantity := ServMainRec.Quantity + ServCostPlusRec.Quantity;
            //db.sn, 02-10-07
            IF ServMainRec."Source Document" <> ServCostPlusRec."Source Document" THEN
              ServMainRec."Source Document" := Text002;
            IF ServMainRec."Source Line" <> ServCostPlusRec."Source Line" THEN
              ServMainRec."Source Line" := 0;
            IF ServMainRec."Employee No." <> ServCostPlusRec."Employee No." THEN
              IF SelectEmployee = FALSE THEN
                ServMainRec."Employee No." := '';
            IF ServMainRec."From Date" <> ServCostPlusRec."From Date" THEN
              IF SelectFromDate = FALSE THEN
                ServMainRec."From Date" := 0D;
            IF ServMainRec."To Date" <> ServCostPlusRec."To Date" THEN
              IF SelectToDate = FALSE THEN
                ServMainRec."To Date" := 0D;
            //db.en, 02-10-07
            ServCostPlusRec.DELETE(TRUE);
            Counter :=  Counter + 1;
          UNTIL ServCostPlusRec.NEXT = 0;

          ServMainRec.VALIDATE(Quantity);  //db, 17-11-04: incl. calc. "Invoice Price"
          ServMainRec."Entry No. Service Ledger" := 0;
          ServMainRec.MODIFY(TRUE);
        END;
      UNTIL ServMainRec.NEXT = 0;
    END;

    [External]
    PROCEDURE SelectFilters@1100485002();
    VAR
      CompressCostPlusEntriesPAGE@1100485000 : Page 11020297;
    BEGIN
      CompressCostPlusEntriesPAGE.LOOKUPMODE := TRUE;
      gvProcess := CompressCostPlusEntriesPAGE.RUNMODAL = ACTION::LookupOK;

      IF NOT gvProcess THEN EXIT;  //db, 14-01-08

      CompressCostPlusEntriesPAGE.GetFilter1(
        SelectDescription,
        SelectUnit,
        SelectHourRate,
        SelectEmployee,
        SelectFromDate,
        SelectToDate,
        SelectItem,
        SelectBasicItem,
        SelectTradeItem,
        SelectManufacturer,
        SelectVendor,
        SelectCostObject,
        SelectCostComponent);

      CompressCostPlusEntriesPAGE.GetFilter2(
        SelectGrossPrice,
        SelectPurchaseDiscount,
        SelectCostPrice,
        SelectSalesDiscount,
        SelectBasicPrice,
        SelectSurcharge,
        SelectSalesPrice,
        SelectContractDiscount,
        SelectElement,
        SelectExtensionContract,
        SelectText,
        SelectVat,
        SelectInvoiced);
    END;

    BEGIN
    {
      Only compress the 'Cost Plus Entries' within the filters / marks of the calling process.

      200309 ORANGO.DL CompressProjectCostPlus, use rounded prices for compressing selection, activate by setup
    }
    END.
  }
}

