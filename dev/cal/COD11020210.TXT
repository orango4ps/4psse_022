OBJECT Codeunit 11020210 SharePoint Integration
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1100528401 : TextConst 'DEU=Beim Anruf des SharePoint-Webservice:\\%1 ist ein Fehler aufgetreten.;ENU=An error occurred during calling the SharePoint web service:\\%1;NLD=Er is een fout opgetreden tijdens het aanroepen van de SharePoint webservice:\\%1;NOR=En feil oppstod under oppringingen av SharePoint web service:\\%1';
      Text11012004@1100485002 : TextConst 'DEU=Erstellen Sharepointsite ist gelungen!\%1;ENU=Creation of Sharepoint succesfull!\%1;NLD=Aanmaken van Sharepoint site is gelukt!\%1;NOR=Opprettelsen av Sharepoint var vellykket!\%1;SVE=Skapande av Sharepoint Site lyckades!\%1';
      Text11012005@1100485001 : TextConst 'DEU=Besch„ftigt mit dem Erstellen der Sharepointsite...;ENU=Creating Sharepoint Site....;NLD=Bezig met aanmaken van Sharepoint site...;NOR=Oppretter Sharepoint Site...;SVE=Skapar Sharepoint Site...';
      WebServiceMgt@1100528400 : Codeunit 11012266;
      Namespaces@1100528404 : ARRAY [10,2] OF Text[100];
      SharePointNamespacePrefix@1100528403 : Text[10];
      SharePointNamespace@1100528402 : Text[100];

    PROCEDURE GenerateSharePointSite@1100528400(Job@1100528400 : Record 11072003);
    VAR
      SharePointSetup@1100528405 : Record 11012730;
      Window@1100528410 : Dialog;
      MethodName@1100528408 : Text[30];
      OwnerLogin@1100528406 : Text[100];
      Result@1100528401 : Text[1024];
    BEGIN
      IF GUIALLOWED THEN
        Window.OPEN(Text11012005);

      SharePointSetup.GET;
      SharePointSetup.TESTFIELD("Owner ID");
      SharePointSetup.TESTFIELD("Language ID");
      SharePointSetup.TESTFIELD("Owner Password");
      SharePointSetup.TESTFIELD("Owner E-mail");
      SharePointSetup.TESTFIELD("Owner Domain");

      OwnerLogin := SharePointSetup."Owner Domain" + '\' + SharePointSetup."Owner ID";

      FillNamespaces;
      MethodName := 'CreateSite';
      MakeCreateSiteRequest(MethodName, OwnerLogin, SharePointSetup, Job);
      WebServiceMgt.SendSOAPRequest2(
        SharePointNamespace + MethodName, SharePointSetup."Webservice URL",
        OwnerLogin, SharePointSetup."Owner Password", FALSE);
      WebServiceMgt.AddResponseSelectionNamespaces(Namespaces);
      CheckIfSoapFaultOccurred;

      Result := WebServiceMgt.GetResponseValueText(
        './/soap:Body/*[local-name()="CreateSiteResponse"]/*[local-name()="CreateSiteResult"]', FALSE);
      IF Result = GetPathSiteCollection(SharePointSetup) + Job."No." THEN BEGIN
        MESSAGE(Text11012004, Result);
        Job."SharePoint Site Generated" := TRUE;
        Job."SharePoint Site URL" := Result;
        Job.MODIFY;
      END ELSE
        MESSAGE(Result);

      IF GUIALLOWED THEN
        Window.CLOSE;
    END;

    LOCAL PROCEDURE FillNamespaces@1100528405();
    BEGIN
      SharePointNamespacePrefix := 'sp';
      SharePointNamespace := 'http://schemas.microsoft.com/sharepoint/soap/';
      Namespaces[1, 1] := SharePointNamespacePrefix;
      Namespaces[1, 2] := SharePointNamespace;
      Namespaces[2, 1] := 'soap';
      Namespaces[2, 2] := 'http://schemas.xmlsoap.org/soap/envelope/';
    END;

    LOCAL PROCEDURE MakeCreateSiteRequest@1100528403(MethodName@1100528406 : Text[30];OwnerLogin@1100528404 : Text[100];SharePointSetup@1100528402 : Record 11012730;Job@1100528403 : Record 11072003);
    VAR
      XPath@1100528400 : Text[100];
    BEGIN
      WebServiceMgt.PrepareSOAPRequest(SharePointNamespace, MethodName);
      WebServiceMgt.AddRequestSelectionNamespaces(Namespaces);

      XPath := './/' + SharePointNamespacePrefix + ':' + MethodName;
      WebServiceMgt.AppendParameter(
        XPath, SharePointNamespace, 'Url', GetPathSiteCollection(SharePointSetup) + Job."No.");
      WebServiceMgt.AppendParameter(XPath, SharePointNamespace, 'Title', Job."No." + '-' + Job.Description);
      WebServiceMgt.AppendParameter(XPath, SharePointNamespace, 'Description', Job.Description);
      WebServiceMgt.AppendParameter(XPath, SharePointNamespace, 'Lcid', STRSUBSTNO('%1',SharePointSetup."Language ID"));
      WebServiceMgt.AppendParameter(XPath, SharePointNamespace, 'WebTemplate', SharePointSetup."SharePoint Template");
      WebServiceMgt.AppendParameter(XPath, SharePointNamespace, 'OwnerLogin', OwnerLogin);
      WebServiceMgt.AppendParameter(XPath, SharePointNamespace, 'OwnerName', SharePointSetup."Owner ID");
      WebServiceMgt.AppendParameter(XPath, SharePointNamespace, 'OwnerEmail', SharePointSetup."Owner E-mail");
      IF (SharePointSetup."SharePoint Version" = SharePointSetup."SharePoint Version"::"MOSS 2007") OR
         (SharePointSetup."SharePoint Version" = SharePointSetup."SharePoint Version"::"SharePoint 2010")
      THEN
        WebServiceMgt.AppendParameter(XPath, SharePointNamespace, 'PortalUrl', SharePointSetup."Portal URL")
      ELSE
        WebServiceMgt.AppendParameter(XPath, SharePointNamespace, 'PortalUrl', '');
      WebServiceMgt.AppendParameter(XPath, SharePointNamespace, 'PortalName', '');
    END;

    LOCAL PROCEDURE CheckIfSoapFaultOccurred@1100528412();
    VAR
      ErrorString@1100528400 : Text[1024];
    BEGIN
      IF WebServiceMgt.GetSOAPFault <> '' THEN BEGIN
        ErrorString := WebServiceMgt.GetResponseValueText(
          './/soap:Fault/*[local-name()="detail"]/*[local-name()="errorstring"]', FALSE);
        IF ErrorString <> '' THEN
          ERROR(Text000, STRSUBSTNO('%1 %2', WebServiceMgt.GetSOAPFault, ErrorString))
        ELSE
          ERROR(Text000, WebServiceMgt.GetSOAPFault);
      END;
    END;

    LOCAL PROCEDURE GetPathSiteCollection@1100528401(SharePointSetup@1100528400 : Record 11012730) : Text[100];
    VAR
      Length@1100528401 : Integer;
    BEGIN
      Length := STRLEN(SharePointSetup."Path Sitecollection SharePoint");

      IF COPYSTR(SharePointSetup."Path Sitecollection SharePoint", Length, 1) = '/' THEN
        EXIT(SharePointSetup."Path Sitecollection SharePoint");

      IF COPYSTR(SharePointSetup."Path Sitecollection SharePoint", Length, 1) = '\' THEN
        EXIT(COPYSTR(SharePointSetup."Path Sitecollection SharePoint", 1, Length -1) + '/');

      EXIT(SharePointSetup."Path Sitecollection SharePoint" + '/');
    END;

    PROCEDURE IsProjectPortalActive@1100528315() : Boolean;
    VAR
      SharePointSetup4PS@1100528300 : Record 11012730;
      LicenseManagement@1100527800 : Codeunit 11229289;
    BEGIN
      IF (NOT LicenseManagement.LicenseAndReadPermissionForTable(SharePointSetup4PS)) THEN
        EXIT(FALSE);
      IF (SharePointSetup4PS.ISEMPTY) THEN
        EXIT(FALSE);
      IF (NOT SharePointSetup4PS.GET) THEN
        EXIT(FALSE);
      EXIT(SharePointSetup4PS."Use Project Portal");
    END;

    LOCAL PROCEDURE IsLocationPortalActive@1100528300() : Boolean;
    VAR
      SharePointSetup4PS@1100528300 : Record 11012730;
    BEGIN
      IF (SharePointSetup4PS.ISEMPTY) THEN
        EXIT(FALSE);
      IF (NOT SharePointSetup4PS.GET) THEN
        EXIT(FALSE);
      EXIT(SharePointSetup4PS."Use Location Portal");
    END;

    BEGIN
    END.
  }
}

