OBJECT Table 2170 O365 Default Email Message
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    ReplicateData=No;
    CaptionML=[ENU=O365 Default Email Message;
               NOR=Standard e-postmelding for O365];
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              NOR=Dokumenttype;
                                                              SVE=Dokumenttyp];
                                                   OptionCaptionML=[ENU=Quote,Invoice;
                                                                    NOR=Tilbud,Faktura];
                                                   OptionString=Quote,Invoice }
    { 10  ;   ;Value               ;BLOB          ;CaptionML=[ENU=Value;
                                                              NOR=Verdi;
                                                              SVE=V„rde] }
  }
  KEYS
  {
    {    ;Document Type                           ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GreetingTxt@1002 : TextConst '@@@=%1 - customer name;ENU=Hello <%1>,;NOR=Hallo, <%1>,';
      InvoiceEmailBodyTxt@1001 : TextConst 'ENU=Thank you for your business. Your invoice is attached to this message.;NOR=Takk for handelen. Din faktura er vedlagt denne meldingen.';
      QuoteEmailBodyTxt@1000 : TextConst 'ENU=As promised, here is our estimate. Please see the attached estimate for details.;NOR=Her er estimatet, som avtalt. Se det vedlagte estimatet for mer informasjon.';
      CustomerLbl@1003 : TextConst 'ENU=Customer;NOR=Kunde;SVE=Kund';
      TestInvoiceEmailBodyTxt@1004 : TextConst 'ENU=Thank you for your business. Your test invoice is attached to this message.;NOR=Takk for handelen. Testfakturaen din er lagt ved i denne meldingen.';

    LOCAL PROCEDURE CreateMissingDefaultMessages@2();
    VAR
      InvoiceO365DefaultEmailMsg@1001 : Record 2170;
      QuoteO365DefaultEmailMsg@1002 : Record 2170;
      CR@1000 : Text[1];
    BEGIN
      CR[1] := 10;

      IF NOT GET("Document Type"::Quote) THEN BEGIN
        // Create default estimate message
        QuoteO365DefaultEmailMsg."Document Type" := "Document Type"::Quote;
        QuoteO365DefaultEmailMsg.INSERT;
        QuoteO365DefaultEmailMsg.SetMessage(STRSUBSTNO(GreetingTxt,CustomerLbl) + CR + CR + QuoteEmailBodyTxt)
      END;

      IF NOT GET("Document Type"::Invoice) THEN BEGIN
        // Create default invoice message
        InvoiceO365DefaultEmailMsg."Document Type" := "Document Type"::Invoice;
        InvoiceO365DefaultEmailMsg.INSERT;
        InvoiceO365DefaultEmailMsg.SetMessage(STRSUBSTNO(GreetingTxt,CustomerLbl) + CR + CR + InvoiceEmailBodyTxt)
      END;
    END;

    [External]
    PROCEDURE GetMessage@1(Type@1004 : Option) : Text;
    BEGIN
      SETFILTER("Document Type",'%1',Type);
      IF NOT FINDFIRST THEN BEGIN
        CreateMissingDefaultMessages;
        SETFILTER("Document Type",'%1',Type);
        FINDFIRST
      END;
      EXIT(ReadMessage);
    END;

    [External]
    PROCEDURE ReadMessage@9() : Text;
    VAR
      TempBlob@1000 : Record 99008535;
      LineSeparator@1001 : Text;
    BEGIN
      CALCFIELDS(Value);
      TempBlob.Blob := Value;
      LineSeparator[1] := 10;
      EXIT(TempBlob.ReadAsText(LineSeparator,TEXTENCODING::Windows));
    END;

    [External]
    PROCEDURE SetMessage@3(NewMessage@1000 : Text);
    VAR
      OutStr@1002 : OutStream;
    BEGIN
      CLEAR(Value);
      Value.CREATEOUTSTREAM(OutStr,TEXTENCODING::Windows);
      OutStr.WRITETEXT(NewMessage);
      MODIFY(TRUE);
    END;

    [External]
    PROCEDURE ReportUsageToDocumentType@18(VAR DocumentType@1000 : Option;ReportUsage@1001 : Integer);
    VAR
      ReportSelections@1002 : Record 77;
    BEGIN
      CASE ReportUsage OF
        ReportSelections.Usage::"S.Invoice",ReportSelections.Usage::"S.Invoice Draft",ReportSelections.Usage::"P.Invoice":
          DocumentType := "Document Type"::Invoice;
        ReportSelections.Usage::"S.Quote",ReportSelections.Usage::"P.Quote":
          DocumentType := "Document Type"::Quote;
      END;
    END;

    [External]
    PROCEDURE GetTestInvoiceMessage@10() : Text;
    VAR
      CR@1000 : Text[1];
      EmailBodyTxt@1001 : Text;
    BEGIN
      CR[1] := 10;

      // Create test invoice body message
      EmailBodyTxt := STRSUBSTNO(GreetingTxt,CustomerLbl) + CR + CR + TestInvoiceEmailBodyTxt;

      EXIT(EmailBodyTxt)
    END;

    BEGIN
    END.
  }
}

