OBJECT Report 11229774 Round Item Quantity
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Auf-/Abrunden Artikelmengen;
               ENU=Round Item Quantity;
               NLD=Afronden artikelhoeveelheden;
               NOR=Avrundet artikkelantall;
               SVE=Avrundat artikelantal];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  RemoveRoundingLines;
                END;

    OnPostReport=BEGIN
                   AdjustRoundingLines;
                 END;

  }
  DATASET
  {
    { 7730;    ;DataItem;OrigLineRec         ;
               DataItemTable=Table11072072;
               DataItemTableView=SORTING(Estimate No.,Sub-Estimate No.,Part Group,Part,Line No.)
                                 WHERE(Rounding Line=CONST(No));
               OnAfterGetRecord=BEGIN
                                  StoreItemQuantity;
                                END;

               ReqFilterFields=Estimate No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100525001;0;Container;
                  ContainerType=ContentArea }

      { 1100525000;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1100525002;2;Field  ;
                  CaptionML=[DEU=Auf-/Abruden pro;
                             ENU=Rounding by;
                             NLD=Afronden per;
                             NOR=Avrundning etter;
                             SVE=Avrundning efter];
                  OptionCaptionML=[DEU=Teilkalkulation,Teil;
                                   ENU=Sub-Estimate,Part;
                                   NLD=Deelcalculatie,Onderdeel];
                  SourceExpr=DestLevel;
                  OnValidate=BEGIN
                               ValidateDestLevel;
                             END;
                              }

      { 1100525003;2;Field  ;
                  CaptionML=[DEU=Teilkalkulation;
                             ENU=Sub-Estimate No.;
                             NLD=Deelcalculatie;
                             NOR=Delkalkylenummer;
                             SVE=Delkalkylnr];
                  SourceExpr=SubEstTo;
                  OnValidate=BEGIN
                               ValidateSubEstimate;
                             END;

                  OnLookup=BEGIN
                             LookupSubEstimate;
                           END;
                            }

      { 1100525004;2;Field  ;
                  CaptionML=[DEU=Beschreibung Teilkalkulation;
                             ENU=Sub-Estimate Description;
                             NLD=Omschrijving deelcalculatie;
                             NOR=Beskrivelse av delkalkyle;
                             SVE=Beskrivning av delkalkyl];
                  SourceExpr=SubEstToTxt;
                  Editable=FALSE }

      { 1100525005;2;Field  ;
                  CaptionML=[DEU=Teil;
                             ENU=Part;
                             NLD=Onderdeel;
                             NOR=Del;
                             SVE=Del];
                  SourceExpr=PartTo;
                  OnValidate=BEGIN
                               ValidatePart;
                             END;

                  OnLookup=BEGIN
                             LookupPart;
                           END;
                            }

      { 1100525006;2;Field  ;
                  CaptionML=[DEU=Teilbeschreibung;
                             ENU=Part Description;
                             NLD=Omschrijving onderdeel;
                             NOR=Delbeskrivelse;
                             SVE=Delbeskrivning];
                  SourceExpr=PartToTxt;
                  Editable=FALSE }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      DestLevel@1210190006 : 'SubEst,Part';
      EstTo@1210190007 : Code[20];
      SubEstTo@1210190002 : Code[20];
      PartGrpTo@1210190010 : Code[20];
      PartTo@1210190003 : Code[20];
      SubEstToTxt@1210190004 : Text[50];
      PartToTxt@1210190005 : Text[50];
      FormatMgt@1210190008 : Codeunit 11012022;

    PROCEDURE SetSelection@1210190000(iEst@1210190000 : Code[20]);
    VAR
      EstRec@1210190001 : Record 11012151;
    BEGIN
      EstTo := iEst;
      EstRec.GET(EstTo);
      PartGrpTo := EstRec."Part Group";
    END;

    PROCEDURE RemoveRoundingLines@1210190002();
    VAR
      EstLineRec@1210190000 : Record 11072072;
    BEGIN
      EstLineRec.SETRANGE("Estimate No.", OrigLineRec.GETFILTER("Estimate No."));
      EstLineRec.SETRANGE("Rounding Line", TRUE);
      EstLineRec.DELETEALL;
    END;

    PROCEDURE StoreItemQuantity@1210190001();
    VAR
      DestEstRec@1100525000 : Record 11012151;
      DestSubEstRec@1210190001 : Record 11072074;
      DestEstPartRec@1210190002 : Record 11072073;
      DestLineRec@1210190003 : Record 11072072;
      DestLineRec2@1210190004 : Record 11072072;
      NewQuan@1210190006 : Decimal;
      DestFactor@1210190008 : Decimal;
      CumFreq@1210190000 : Decimal;
      CumQuan@1210190005 : Decimal;
    BEGIN
      WITH OrigLineRec DO BEGIN
        IF "Trade Item" + "Basic Item" + "Item No." = '' THEN EXIT;
        DestLineRec.SETRANGE("Estimate No.", "Estimate No.");
        IF DestLevel = DestLevel::SubEst THEN
          DestLineRec.SETRANGE("Sub-Estimate No.", SubEstTo)
        ELSE
           DestLineRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
        DestLineRec.SETRANGE(Part, PartTo);
        IF "Trade Item" <> '' THEN BEGIN
          DestLineRec.SETRANGE("Vendor (Trade Item)", "Vendor (Trade Item)");
          DestLineRec.SETRANGE("Trade Item", "Trade Item");
        END ELSE BEGIN
          IF "Basic Item" <> '' THEN BEGIN
            DestLineRec.SETRANGE(Manufacturer, Manufacturer);
            DestLineRec.SETRANGE("Basic Item", "Basic Item");
          END ELSE BEGIN
            IF "Item No." <> '' THEN
              DestLineRec.SETRANGE("Item No.", "Item No.");
          END;
        END;
        IF NOT DestLineRec.FINDSET THEN BEGIN
          DestLineRec := OrigLineRec;
          DestLineRec."Estimate No." := "Estimate No.";
          IF DestLevel = DestLevel::SubEst THEN
            DestLineRec.VALIDATE("Sub-Estimate No.", SubEstTo)
          ELSE
            DestLineRec.VALIDATE("Sub-Estimate No.", "Sub-Estimate No.");
          DestLineRec."Part Group" := "Part Group";
          DestLineRec.VALIDATE(Part, PartTo);

          DestLineRec2.SETRANGE("Estimate No.", DestLineRec."Estimate No.");
          DestLineRec2.SETRANGE("Sub-Estimate No.", DestLineRec."Sub-Estimate No.");
          DestLineRec2.SETRANGE("Part Group", DestLineRec."Part Group");
          DestLineRec2.SETRANGE(Part, DestLineRec.Part);
          IF DestLineRec2.FINDLAST THEN
            DestLineRec."Line No." := DestLineRec2."Line No." + 10000
          ELSE
            DestLineRec."Line No." := 10000;
          DestLineRec.INSERT;

          DestLineRec."Rounding Line" := TRUE;
          DestLineRec.Quantity := 0;
          DestLineRec."Adjustment Factor Hours" := 0;
          DestLineRec."Adjustment Factor Price" := 0;
          DestLineRec.InitAdjustmentFactor;
          DestLineRec.VALIDATE("Part Quantity");
        END;

        DestEstRec.GET(DestLineRec."Estimate No.");
        DestEstRec.TESTFIELD(Fixed, FALSE);  //C038937
        DestSubEstRec.GET(DestLineRec."Estimate No.", DestLineRec."Sub-Estimate No.");
        DestEstPartRec.GET(DestLineRec."Estimate No.", DestLineRec."Sub-Estimate No.",
          DestLineRec."Part Group", DestLineRec.Part);
        CumFreq := DestSubEstRec."Cumulative Frequency";
        CumQuan := DestEstPartRec.GetPartQuantity;
        IF (CumFreq = 0) OR (CumQuan = 0) THEN
          DestFactor := 1
        ELSE
          DestFactor := CumQuan;
        IF DestFactor <> 0 THEN BEGIN
          NewQuan := DestLineRec.Quantity + Quantity * "Part Quantity" / DestFactor;
          DestLineRec.VALIDATE(Quantity, NewQuan);
        END;
        DestLineRec.MODIFY;
      END;
    END;

    PROCEDURE AdjustRoundingLines@1210190003();
    VAR
      EstLineRec@1210190001 : Record 11072072;
      TradeItemRec@1210190000 : Record 11012317;
      OldQuan@1210190002 : Decimal;
      NewQuan@1210190003 : Decimal;
    BEGIN
      EstLineRec.SETRANGE("Estimate No.", OrigLineRec.GETFILTER("Estimate No."));
      EstLineRec.SETRANGE("Rounding Line", TRUE);
      IF EstLineRec.FINDSET THEN BEGIN
        REPEAT
          IF EstLineRec."Trade Item" <> '' THEN BEGIN
            TradeItemRec.GET(EstLineRec."Vendor (Trade Item)", EstLineRec."Trade Item");
            IF EstLineRec."Unit of Measure" = UPPERCASE(TradeItemRec."Application Unit") THEN BEGIN
              OldQuan := EstLineRec.Quantity * EstLineRec."Part Quantity";
              NewQuan := EstLineRec.GetDeliverableQuantity(OldQuan);
              EstLineRec.VALIDATE(Quantity, (NewQuan-OldQuan));
              EstLineRec.MODIFY;
            END;
          END;
        UNTIL EstLineRec.NEXT = 0;
      END;
    END;

    PROCEDURE ValidateSubEstimate@1100525000();
    VAR
      Chapter@1100525003 : Code[20];
      Paragraph@1100525002 : Code[20];
      Level@1100525001 : Integer;
      SubEstRec@1100525000 : Record 11072074;
    BEGIN
      //DP00381
      FormatMgt.FormatSubEstimate(SubEstTo,Chapter,Paragraph,Level,EstTo,FALSE);
      IF NOT SubEstRec.GET(EstTo,SubEstTo) THEN SubEstRec.INIT;
      SubEstToTxt := SubEstRec.Description;
    END;

    PROCEDURE LookupSubEstimate@1100525003();
    VAR
      SubEstRec@1100525000 : Record 11072074;
    BEGIN
      //DP00381
      SubEstRec.SETRANGE("Estimate No.",EstTo);
      IF PAGE.RUNMODAL(PAGE::"Sub-Estimate List",SubEstRec) = ACTION::LookupOK THEN BEGIN
         SubEstTo := SubEstRec."Sub-Estimate No.";
         SubEstToTxt := SubEstRec.Description;
      END;
    END;

    PROCEDURE ValidatePart@1100525001();
    VAR
      BasePartRec@1100525000 : Record 11012169;
    BEGIN
      //DP00381
      FormatMgt.FormatElem(PartTo,1,'');
      BasePartRec.SETRANGE("Part Group",PartGrpTo);
      BasePartRec.SETRANGE(Code,PartTo);
      IF NOT BasePartRec.FINDFIRST THEN BasePartRec.INIT;
      PartToTxt := BasePartRec.Description;
    END;

    PROCEDURE LookupPart@1100525004();
    VAR
      BasePartRec@1100525000 : Record 11012169;
    BEGIN
      //DP00381
      BasePartRec.SETRANGE("Part Group",PartGrpTo);
      IF PAGE.RUNMODAL(PAGE::"Base Part List",BasePartRec) = ACTION::LookupOK THEN BEGIN
         PartTo := BasePartRec.Code;
         PartToTxt := BasePartRec.Description;
      END;
    END;

    PROCEDURE ValidateDestLevel@1100525002();
    BEGIN
      //DP00381
      IF DestLevel = DestLevel::Part THEN BEGIN
        SubEstTo := '';
        SubEstToTxt := '';
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

