OBJECT Codeunit 5460 Graph Int. - Contact Addresses
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [EventSubscriber(Codeunit,5345,OnAfterTransferRecordFields)]
    PROCEDURE OnAfterTransferRecordFields@35(SourceRecordRef@1002 : RecordRef;VAR DestinationRecordRef@1001 : RecordRef;VAR AdditionalFieldsWereModified@1000 : Boolean);
    BEGIN
      CASE GetSourceDestCode(SourceRecordRef,DestinationRecordRef) OF
        'Contact-Graph Contact':
          BEGIN
            SetContactAddressesOnGraph(SourceRecordRef,DestinationRecordRef);
            AdditionalFieldsWereModified := TRUE;
          END;
      END;
    END;

    [EventSubscriber(Codeunit,5345,OnAfterInsertRecord)]
    PROCEDURE OnAfterInsertRecord@45(SourceRecordRef@1001 : RecordRef;DestinationRecordRef@1000 : RecordRef);
    BEGIN
      CASE GetSourceDestCode(SourceRecordRef,DestinationRecordRef) OF
        'Graph Contact-Contact':
          BEGIN
            CreateContactAddressesFromGraph(SourceRecordRef,DestinationRecordRef);
            DestinationRecordRef.MODIFY(TRUE);
          END;
      END;
    END;

    [EventSubscriber(Codeunit,5345,OnAfterModifyRecord)]
    PROCEDURE OnAfterModifyRecord@51(SourceRecordRef@1001 : RecordRef;VAR DestinationRecordRef@1002 : RecordRef);
    BEGIN
      CASE GetSourceDestCode(SourceRecordRef,DestinationRecordRef) OF
        'Graph Contact-Contact':
          BEGIN
            SetContactAddressesFromGraph(SourceRecordRef,DestinationRecordRef);
            DestinationRecordRef.MODIFY(TRUE);
          END;
      END;
    END;

    LOCAL PROCEDURE GetSourceDestCode@38(SourceRecordRef@1001 : RecordRef;DestinationRecordRef@1000 : RecordRef) : Text;
    BEGIN
      IF (SourceRecordRef.NUMBER <> 0) AND (DestinationRecordRef.NUMBER <> 0) THEN
        EXIT(STRSUBSTNO('%1-%2',SourceRecordRef.NAME,DestinationRecordRef.NAME));
      EXIT('');
    END;

    [External]
    PROCEDURE GetContactAlternativeHomeAddressCode@3() : Code[10];
    BEGIN
      EXIT(UPPERCASE('Home'));
    END;

    [External]
    PROCEDURE GetContactAlternativeOtherAddressCode@4() : Code[10];
    BEGIN
      EXIT(UPPERCASE('Other'));
    END;

    LOCAL PROCEDURE SetContactAddressesOnGraph@7(VAR SourceRecordRef@1000 : RecordRef;VAR DestinationRecordRef@1001 : RecordRef);
    VAR
      Contact@1002 : Record 5050;
      GRAPHContact@1004 : Record 5450;
      ContactAltAddress@1006 : Record 5051;
      GraphCollectionMgtContact@1005 : Codeunit 5458;
      AddressesString@1003 : Text;
      PhonesString@1007 : Text;
      WebsitesString@1008 : Text;
    BEGIN
      SourceRecordRef.SETTABLE(Contact);
      DestinationRecordRef.SETTABLE(GRAPHContact);

      AddressesString := GRAPHContact.GetPostalAddressesString;
      PhonesString := GRAPHContact.GetPhonesString;
      WebsitesString := GRAPHContact.GetWebsitesString;

      AddressesString := GraphCollectionMgtContact.UpdateBusinessAddress(AddressesString,Contact.Address,
          Contact."Address 2",Contact.City,Contact.County,Contact."Country/Region Code",Contact."Post Code");
      PhonesString := GraphCollectionMgtContact.UpdateBusinessPhone(PhonesString,Contact."Phone No.");
      PhonesString := GraphCollectionMgtContact.UpdateBusinessFaxPhone(PhonesString,Contact."Fax No.");
      PhonesString := GraphCollectionMgtContact.UpdateMobilePhone(PhonesString,Contact."Mobile Phone No.");
      PhonesString := GraphCollectionMgtContact.UpdatePagerPhone(PhonesString,Contact.Pager);
      WebsitesString := GraphCollectionMgtContact.UpdateHomeWebsite(WebsitesString,Contact."Home Page");

      IF ContactAltAddress.GET(Contact."No.",GetContactAlternativeHomeAddressCode) THEN BEGIN
        AddressesString := GraphCollectionMgtContact.UpdateHomeAddress(AddressesString,ContactAltAddress.Address,
            ContactAltAddress."Address 2",ContactAltAddress.City,ContactAltAddress.County,
            ContactAltAddress."Country/Region Code",ContactAltAddress."Post Code");
        PhonesString := GraphCollectionMgtContact.UpdateHomePhone(PhonesString,ContactAltAddress."Phone No.");
        PhonesString := GraphCollectionMgtContact.UpdateHomeFaxPhone(PhonesString,ContactAltAddress."Fax No.");
      END;

      IF ContactAltAddress.GET(Contact."No.",GetContactAlternativeOtherAddressCode) THEN BEGIN
        AddressesString := GraphCollectionMgtContact.UpdateOtherAddress(AddressesString,ContactAltAddress.Address,
            ContactAltAddress."Address 2",ContactAltAddress.City,ContactAltAddress.County,
            ContactAltAddress."Country/Region Code",ContactAltAddress."Post Code");
        PhonesString := GraphCollectionMgtContact.UpdateOtherPhone(PhonesString,ContactAltAddress."Phone No.");
        PhonesString := GraphCollectionMgtContact.UpdateOtherFaxPhone(PhonesString,ContactAltAddress."Fax No.");
      END;

      GRAPHContact.SetPostalAddressesString(AddressesString);
      GRAPHContact.SetPhonesString(PhonesString);
      GRAPHContact.SetWebsitesString(WebsitesString);

      DestinationRecordRef.GETTABLE(GRAPHContact);
    END;

    LOCAL PROCEDURE CreateContactAddressesFromGraph@10(VAR SourceRecordRef@1000 : RecordRef;VAR DestinationRecordRef@1001 : RecordRef);
    BEGIN
      SetContactAddressesFromGraph(SourceRecordRef,DestinationRecordRef);
    END;

    LOCAL PROCEDURE SetContactAddressesFromGraph@11(VAR SourceRecordRef@1000 : RecordRef;VAR DestinationRecordRef@1001 : RecordRef);
    VAR
      Contact@1002 : Record 5050;
      GRAPHContact@1003 : Record 5450;
      ContactAltAddress@1006 : Record 5051;
      GraphCollectionMgtContact@1004 : Codeunit 5458;
      AddressesString@1005 : Text;
      PhonesString@1007 : Text;
      WebsitesString@1008 : Text;
    BEGIN
      SourceRecordRef.SETTABLE(GRAPHContact);
      DestinationRecordRef.SETTABLE(Contact);

      AddressesString := GRAPHContact.GetPostalAddressesString;
      PhonesString := GRAPHContact.GetPhonesString;
      WebsitesString := GRAPHContact.GetWebsitesString;

      IF GraphCollectionMgtContact.HasBusinessAddressOrPhone(AddressesString,PhonesString,WebsitesString) THEN BEGIN
        GraphCollectionMgtContact.GetBusinessAddress(AddressesString,Contact.Address,
          Contact."Address 2",Contact.City,Contact.County,Contact."Country/Region Code",Contact."Post Code");
        GraphCollectionMgtContact.GetBusinessPhone(PhonesString,Contact."Phone No.");
        GraphCollectionMgtContact.GetBusinessFaxPhone(PhonesString,Contact."Fax No.");
        GraphCollectionMgtContact.GetMobilePhone(PhonesString,Contact."Mobile Phone No.");
        GraphCollectionMgtContact.GetPagerPhone(PhonesString,Contact.Pager);
        GraphCollectionMgtContact.GetWorkWebsite(WebsitesString,Contact."Home Page");
      END;

      IF GraphCollectionMgtContact.HasHomeAddressOrPhone(AddressesString,PhonesString,WebsitesString) THEN BEGIN
        IF NOT ContactAltAddress.GET(Contact."No.",GetContactAlternativeHomeAddressCode) THEN BEGIN
          ContactAltAddress.INIT;
          ContactAltAddress.VALIDATE("Contact No.",Contact."No.");
          ContactAltAddress.VALIDATE(Code,GetContactAlternativeHomeAddressCode);
          ContactAltAddress.INSERT(TRUE);
        END;
        GraphCollectionMgtContact.GetHomeAddress(AddressesString,ContactAltAddress.Address,
          ContactAltAddress."Address 2",ContactAltAddress.City,ContactAltAddress.County,
          ContactAltAddress."Country/Region Code",ContactAltAddress."Post Code");
        GraphCollectionMgtContact.GetHomePhone(PhonesString,ContactAltAddress."Phone No.");
        GraphCollectionMgtContact.GetHomeFaxPhone(PhonesString,ContactAltAddress."Fax No.");
        GraphCollectionMgtContact.GetHomeWebsite(WebsitesString,ContactAltAddress."Home Page");
        ContactAltAddress.MODIFY(TRUE);
      END;

      IF GraphCollectionMgtContact.HasOtherAddressOrPhone(AddressesString,PhonesString,WebsitesString) THEN BEGIN
        IF NOT ContactAltAddress.GET(Contact."No.",GetContactAlternativeOtherAddressCode) THEN BEGIN
          ContactAltAddress.INIT;
          ContactAltAddress.VALIDATE("Contact No.",Contact."No.");
          ContactAltAddress.VALIDATE(Code,GetContactAlternativeOtherAddressCode);
          ContactAltAddress.INSERT(TRUE);
        END;
        GraphCollectionMgtContact.GetOtherAddress(AddressesString,ContactAltAddress.Address,
          ContactAltAddress."Address 2",ContactAltAddress.City,ContactAltAddress.County,
          ContactAltAddress."Country/Region Code",ContactAltAddress."Post Code");
        GraphCollectionMgtContact.GetOtherPhone(PhonesString,ContactAltAddress."Phone No.");
        GraphCollectionMgtContact.GetOtherFaxPhone(PhonesString,ContactAltAddress."Fax No.");
        ContactAltAddress.MODIFY(TRUE);
      END;

      DestinationRecordRef.GETTABLE(Contact);
    END;

    BEGIN
    END.
  }
}

