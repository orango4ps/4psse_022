OBJECT Page 11129933 Overall Capacity Need Matrix
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Matrix;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table11229348;
    SourceTableView=SORTING(Level,Project No.,Discipline)
                    ORDER(Ascending);
    PageType=ListPart;
    SourceTableTemporary=Yes;
    OnAfterGetRecord=VAR
                       MATRIX_CurrentColumnOrdinal@1100528500 : Integer;
                     BEGIN
                       FOR MATRIX_CurrentColumnOrdinal := 1 TO MATRIX_CurrSetLength DO
                         MATRIX_OnAfterGetRecord(MATRIX_CurrentColumnOrdinal);

                       IF "Project No." = '' THEN
                         CLEAR(Project)
                       ELSE BEGIN
                         Project.GET("Project No.");
                         Project.CALCFIELDS("Name Project Manager");
                       END;

                       ReadHours;

                       StyleTextAvailableHours := GetStyle(AvailableHours);
                       StyleTextHoursToPlan := GetStyle(HoursToPlanWorkorder);
                     END;

    ActionList=ACTIONS
    {
      { 1100528505;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528504;1 ;Action    ;
                      Name=ProjectCapacityNeed;
                      CaptionML=ENU=Project Capacity Need;
                      Promoted=Yes;
                      Image=Capacity;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 StartPageProjectCapacityNeed;
                               END;
                                }
      { 1100528508;1 ;Action    ;
                      CaptionML=ENU=Schedule Employees;
                      Image=Planning;
                      OnAction=BEGIN
                                 StartPageScheduleEmployeesOnProject;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100525000;;Container;
                ContainerType=ContentArea }

    { 1100525001;1;Group  ;
                IndentationControls=Description;
                GroupType=Repeater;
                FreezeColumnID=HoursToPlanWorkorder }

    { 1100525004;2;Field  ;
                SourceExpr=Discipline;
                Visible=DisciplineVisible }

    { 1100528503;2;Field  ;
                SourceExpr="Project No.";
                Visible=ProjectNoVisible }

    { 1100528509;2;Field  ;
                CaptionML=ENU=Project Capacity Need Level;
                SourceExpr=Project."Capacity Need Level";
                Visible=ProjectNoVisible;
                Editable=FALSE;
                HideValue=Level = Level::Total }

    { 1100528512;2;Field  ;
                SourceExpr="Project Manager";
                Visible=ProjectNoVisible;
                Editable=FALSE;
                HideValue=Level = Level::Total }

    { 1100528510;2;Field  ;
                CaptionML=ENU=Name Project Manager;
                SourceExpr=Project."Name Project Manager";
                Visible=[ProjectNoVisible ];
                Editable=FALSE;
                HideValue=Level = Level::Total }

    { 1100528511;2;Field  ;
                SourceExpr="Project Status";
                Visible=ProjectNoVisible;
                HideValue=Level = Level::Total }

    { 1100525003;2;Field  ;
                Name=Description;
                SourceExpr=Description;
                Editable=FALSE }

    { 1100525007;2;Field  ;
                CaptionML=ENU=Budget Hours;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=BudgetHours;
                Editable=FALSE }

    { 1100525008;2;Field  ;
                CaptionML=ENU=Actual Hours;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=ActualHours;
                Editable=FALSE }

    { 1100528502;2;Field  ;
                CaptionML=ENU=Requested Hours;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=EstimatedHours;
                Editable=FALSE }

    { 1100525009;2;Field  ;
                Lookup=Yes;
                CaptionML=ENU=Requested Hours;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=RequestedHours;
                Editable=FALSE;
                OnLookup=BEGIN
                           LookupRequestedHours;
                         END;
                          }

    { 1100525010;2;Field  ;
                CaptionML=ENU=Available Hours;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=AvailableHours;
                Editable=FALSE;
                StyleExpr=[StyleTextAvailableHours ] }

    { 1100528507;2;Field  ;
                CaptionML=ENU=Scheduled Hours;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=ScheduledHours;
                Importance=Additional;
                Editable=FALSE }

    { 1100528506;2;Field  ;
                CaptionML=ENU=Hours to schedule;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=HoursToSchedule;
                Importance=Additional;
                Editable=FALSE }

    { 1100528500;2;Field  ;
                CaptionML=ENU=Planned Hours Work Order;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=PlannedHoursWorkorder;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528501;2;Field  ;
                Name=HoursToPlanWorkorder;
                CaptionML=ENU=Hours to plan Work Order;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=HoursToPlanWorkorder;
                Visible=FALSE;
                Editable=FALSE;
                StyleExpr=StyleTextHoursToPlan }

    { 1100525022;2;Field  ;
                Name=Field1;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[1];
                CaptionClass='3,' + MATRIX_CaptionSet[1];
                Editable=FALSE;
                StyleExpr=StyleTextMatrixCell1;
                OnValidate=BEGIN
                             MATRIX_OnValidate(1);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(1);
                            END;

                OnAssistEdit=BEGIN
                               MATRIX_OnDrillDown(1);
                             END;
                              }

    { 1100525021;2;Field  ;
                Name=Field2;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[2];
                CaptionClass='3,' + MATRIX_CaptionSet[2];
                Editable=FALSE;
                StyleExpr=StyleTextMatrixCell2;
                OnValidate=BEGIN
                             MATRIX_OnValidate(2);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(2);
                            END;

                OnAssistEdit=BEGIN
                               MATRIX_OnDrillDown(2);
                             END;
                              }

    { 1100525020;2;Field  ;
                Name=Field3;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[3];
                CaptionClass='3,' + MATRIX_CaptionSet[3];
                Editable=FALSE;
                StyleExpr=StyleTextMatrixCell3;
                OnValidate=BEGIN
                             MATRIX_OnValidate(3);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(3);
                            END;

                OnAssistEdit=BEGIN
                               MATRIX_OnDrillDown(3);
                             END;
                              }

    { 1100525019;2;Field  ;
                Name=Field4;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[4];
                CaptionClass='3,' + MATRIX_CaptionSet[4];
                Editable=FALSE;
                StyleExpr=StyleTextMatrixCell4;
                OnValidate=BEGIN
                             MATRIX_OnValidate(4);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(4);
                            END;

                OnAssistEdit=BEGIN
                               MATRIX_OnDrillDown(4);
                             END;
                              }

    { 1100525018;2;Field  ;
                Name=Field5;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[5];
                CaptionClass='3,' + MATRIX_CaptionSet[5];
                Editable=FALSE;
                StyleExpr=StyleTextMatrixCell5;
                OnValidate=BEGIN
                             MATRIX_OnValidate(5);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(5);
                            END;

                OnAssistEdit=BEGIN
                               MATRIX_OnDrillDown(5);
                             END;
                              }

    { 1100525017;2;Field  ;
                Name=Field6;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[6];
                CaptionClass='3,' + MATRIX_CaptionSet[6];
                Editable=FALSE;
                StyleExpr=StyleTextMatrixCell6;
                OnValidate=BEGIN
                             MATRIX_OnValidate(6);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(6);
                            END;

                OnAssistEdit=BEGIN
                               MATRIX_OnDrillDown(6);
                             END;
                              }

    { 1100525016;2;Field  ;
                Name=Field7;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[7];
                CaptionClass='3,' + MATRIX_CaptionSet[7];
                Editable=FALSE;
                StyleExpr=StyleTextMatrixCell7;
                OnValidate=BEGIN
                             MATRIX_OnValidate(7);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(7);
                            END;

                OnAssistEdit=BEGIN
                               MATRIX_OnDrillDown(7);
                             END;
                              }

    { 1100525015;2;Field  ;
                Name=Field8;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[8];
                CaptionClass='3,' + MATRIX_CaptionSet[8];
                Editable=FALSE;
                StyleExpr=StyleTextMatrixCell8;
                OnValidate=BEGIN
                             MATRIX_OnValidate(8);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(8);
                            END;

                OnAssistEdit=BEGIN
                               MATRIX_OnDrillDown(8);
                             END;
                              }

    { 1100525014;2;Field  ;
                Name=Field9;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[9];
                CaptionClass='3,' + MATRIX_CaptionSet[9];
                Editable=FALSE;
                StyleExpr=StyleTextMatrixCell9;
                OnValidate=BEGIN
                             MATRIX_OnValidate(9);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(9);
                            END;

                OnAssistEdit=BEGIN
                               MATRIX_OnDrillDown(9);
                             END;
                              }

    { 1100525013;2;Field  ;
                Name=Field10;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[10];
                CaptionClass='3,' + MATRIX_CaptionSet[10];
                Editable=FALSE;
                StyleExpr=StyleTextMatrixCell10;
                OnValidate=BEGIN
                             MATRIX_OnValidate(10);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(10);
                            END;

                OnAssistEdit=BEGIN
                               MATRIX_OnDrillDown(10);
                             END;
                              }

    { 1100525012;2;Field  ;
                Name=Field11;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[11];
                CaptionClass='3,' + MATRIX_CaptionSet[11];
                Editable=FALSE;
                StyleExpr=StyleTextMatrixCell11;
                OnValidate=BEGIN
                             MATRIX_OnValidate(11);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(11);
                            END;

                OnAssistEdit=BEGIN
                               MATRIX_OnDrillDown(11);
                             END;
                              }

    { 1100525011;2;Field  ;
                Name=Field12;
                DecimalPlaces=0:2;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[12];
                CaptionClass='3,' + MATRIX_CaptionSet[12];
                Editable=FALSE;
                StyleExpr=StyleTextMatrixCell12;
                OnValidate=BEGIN
                             MATRIX_OnValidate(12);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(12);
                            END;

                OnAssistEdit=BEGIN
                               MATRIX_OnDrillDown(12);
                             END;
                              }

  }
  CODE
  {
    VAR
      Project@1100528503 : Record 11072003;
      MATRIX_MatrixRecord@1100525017 : Record 2000000007;
      MATRIX_MatrixRecords@1100525016 : ARRAY [32] OF Record 2000000007;
      MATRIX_CaptionSet@1100525015 : ARRAY [32] OF Text[80];
      MATRIX_CurrSetLength@1100525014 : Integer;
      MATRIX_CellData@1100525013 : ARRAY [32] OF Decimal;
      MATRIX_PeriodType@1100525012 : 'Day,Week,Month,Quarter,Year';
      OverallNeedLevel@1100528532 : 'Project,Discipline';
      BudgetHours@1100528528 : Decimal;
      ActualHours@1100528530 : Decimal;
      EstimatedHours@1100528531 : Decimal;
      RequestedHours@1100528529 : Decimal;
      AvailableHours@1100525003 : Decimal;
      ScheduledHours@1100528502 : Decimal;
      HoursToSchedule@1100528500 : Decimal;
      PlannedHoursWorkorder@1100528501 : Decimal;
      HoursToPlanWorkorder@1100525002 : Decimal;
      StyleTextAvailableHours@1100525000 : Text;
      StyleTextHoursToPlan@1100525001 : Text;
      StyleTextMatrixCell1@1100528515 : Text INDATASET;
      StyleTextMatrixCell2@1100528516 : Text INDATASET;
      StyleTextMatrixCell3@1100528517 : Text INDATASET;
      StyleTextMatrixCell4@1100528520 : Text INDATASET;
      StyleTextMatrixCell5@1100528519 : Text INDATASET;
      StyleTextMatrixCell6@1100528518 : Text INDATASET;
      StyleTextMatrixCell7@1100528523 : Text INDATASET;
      StyleTextMatrixCell8@1100528522 : Text INDATASET;
      StyleTextMatrixCell9@1100528521 : Text INDATASET;
      StyleTextMatrixCell10@1100528526 : Text INDATASET;
      StyleTextMatrixCell11@1100528525 : Text INDATASET;
      StyleTextMatrixCell12@1100528524 : Text INDATASET;
      ProjectNoVisible@1100528513 : Boolean INDATASET;
      DisciplineVisible@1100528514 : Boolean INDATASET;
      UnassignedTxt@1100528533 : TextConst 'ENU=Unassigned';
      OnlyLevelProjectTxt@1100528504 : TextConst 'ENU=Function only available for %1 %2';
      ProjectManagerFilter@1100528505 : Code[20];

    PROCEDURE Load@1132(VAR CaptionSet@1005 : ARRAY [32] OF Text[80];VAR MatrixRecords@1006 : ARRAY [32] OF Record 2000000007;CurrSetLength@1007 : Integer;PeriodType@1100528700 : 'Day,Week,Month,Quarter,Year';CurrOverallNeedLevel@1100528500 : 'Project,Discipline';CurrProjectManagerFilter@1100528501 : Code[20]);
    BEGIN
      CLEAR(MATRIX_CellData);
      COPYARRAY(MATRIX_CaptionSet, CaptionSet, 1);
      COPYARRAY(MATRIX_MatrixRecords, MatrixRecords, 1);

      MATRIX_CurrSetLength := CurrSetLength;
      MATRIX_PeriodType := PeriodType;

      OverallNeedLevel := CurrOverallNeedLevel;
      ProjectManagerFilter := CurrProjectManagerFilter;
      BuildTempTable;

      ProjectNoVisible := OverallNeedLevel = OverallNeedLevel::Project;
      DisciplineVisible := OverallNeedLevel = OverallNeedLevel::Discipline;

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE MATRIX_OnAfterGetRecord@1135(ColumnNo@1010 : Integer);
    VAR
      ProjectCapacityNeedDetail@1100528500 : Record 11229349;
    BEGIN
      MATRIX_MatrixRecord := MATRIX_MatrixRecords[ColumnNo];

      SetProjectCapacityNeedDetailFilters(ProjectCapacityNeedDetail);
      ProjectCapacityNeedDetail.CALCSUMS("Requested Hours");

      MATRIX_CellData[ColumnNo] := ProjectCapacityNeedDetail."Requested Hours";

      FormatCell(ColumnNo);
    END;

    LOCAL PROCEDURE MATRIX_OnValidate@1100525001(ColumnNo@1008 : Integer);
    BEGIN
    END;

    LOCAL PROCEDURE MATRIX_OnLookup@1100528701(ColumnNo@1100409000 : Integer);
    BEGIN
    END;

    LOCAL PROCEDURE MATRIX_OnDrillDown@1100409000(ColumnNo@1100409000 : Integer);
    VAR
      ProjectCapacityNeedDetail@1100528500 : Record 11229349;
      ProjectCapacityNeedDetails@1100528501 : Page 11132129;
    BEGIN
      MATRIX_MatrixRecord := MATRIX_MatrixRecords[ColumnNo];

      SetProjectCapacityNeedDetailFilters(ProjectCapacityNeedDetail);

      ProjectCapacityNeedDetails.EDITABLE(FALSE);
      ProjectCapacityNeedDetails.SETTABLEVIEW(ProjectCapacityNeedDetail);
      ProjectCapacityNeedDetails.RUNMODAL;
    END;

    LOCAL PROCEDURE MATRIX_OnAssistEdit@1100409001(ColumnNo@1100409000 : Integer);
    BEGIN
    END;

    LOCAL PROCEDURE SetProjectCapacityNeedDetailFilters@1100528502(VAR ProjectCapacityNeedDetail@1100528500 : Record 11229349);
    BEGIN
      ProjectCapacityNeedDetail.RESET;

      IF Level <> Level::Total THEN
        CASE OverallNeedLevel OF
          OverallNeedLevel::Discipline:
            ProjectCapacityNeedDetail.SETRANGE(Discipline,Discipline);
          OverallNeedLevel::Project:
            ProjectCapacityNeedDetail.SETRANGE("Project No.","Project No.");
        END;

      ProjectCapacityNeedDetail.SETRANGE("Line Type",ProjectCapacityNeedDetail."Line Type"::Main);
      ProjectCapacityNeedDetail.SETRANGE("Need Date",MATRIX_MatrixRecord."Period Start",MATRIX_MatrixRecord."Period End");
    END;

    LOCAL PROCEDURE FormatCell@1100528500(ColumnNo@1100528502 : Integer);
    VAR
      StyleTextMatrixCell@1100528504 : Text;
    BEGIN
      IF IsCommentPresent THEN
        StyleTextMatrixCell := 'AttentionAccent'
      ELSE
        StyleTextMatrixCell := 'Standard';

      CASE ColumnNo OF
        1: StyleTextMatrixCell1 := StyleTextMatrixCell;
        2: StyleTextMatrixCell2 := StyleTextMatrixCell;
        3: StyleTextMatrixCell3 := StyleTextMatrixCell;
        4: StyleTextMatrixCell4 := StyleTextMatrixCell;
        5: StyleTextMatrixCell5 := StyleTextMatrixCell;
        6: StyleTextMatrixCell6 := StyleTextMatrixCell;
        7: StyleTextMatrixCell7 := StyleTextMatrixCell;
        8: StyleTextMatrixCell8 := StyleTextMatrixCell;
        9: StyleTextMatrixCell9 := StyleTextMatrixCell;
        10: StyleTextMatrixCell10 := StyleTextMatrixCell;
        11: StyleTextMatrixCell11 := StyleTextMatrixCell;
        12: StyleTextMatrixCell12 := StyleTextMatrixCell;
      END;
    END;

    LOCAL PROCEDURE IsCommentPresent@1100528505() : Boolean;
    VAR
      ProjectCapacityNeedDetail@1100528500 : Record 11229349;
    BEGIN
      IF Level <> Level::Project THEN
        EXIT(FALSE);

      SetProjectCapacityNeedDetailFilters(ProjectCapacityNeedDetail);
      ProjectCapacityNeedDetail.SETFILTER(Comment,'<>%1','');
      EXIT(NOT ProjectCapacityNeedDetail.ISEMPTY);
    END;

    LOCAL PROCEDURE BuildTempTable@1100528501();
    VAR
      ProjectCapacityNeedFilters@1100528500 : Record 11229348;
      ProjectCapacityNeed@1100528502 : Record 11229348;
      Discipline@1100528501 : Record 11020204;
      Project@1100528503 : Record 11072003;
      ProjectInFilter@1100528504 : Boolean;
    BEGIN
      IF NOT Rec.ISTEMPORARY THEN
        ERROR('');

      ProjectCapacityNeedFilters.COPY(Rec);

      RESET;
      DELETEALL;

      CASE OverallNeedLevel OF
        OverallNeedLevel::Discipline:
          BEGIN
            //Empty Line
            CLEAR(Rec);
            Level := Level::Discipline;
            Description := UnassignedTxt;
            INSERT;

            //Discipline Lines
            CLEAR(Rec);
            IF Discipline.FINDSET THEN
              REPEAT
                Level := Level::Discipline;
                Rec.Discipline := Discipline.Code;
                Description := Discipline.Description;
                INSERT;
              UNTIL Discipline.NEXT = 0;

            //Total Line
            CLEAR(Rec);
            Level := Level::Total;
            Description := FORMAT(Level::Total);
            INSERT;
          END;
        OverallNeedLevel::Project:
          BEGIN
            //Project Lines
            CLEAR(Rec);
            ProjectCapacityNeed.SETRANGE("Line Type",ProjectCapacityNeed."Line Type"::Main);
            ProjectCapacityNeed.SETFILTER(Level,'<>%1',ProjectCapacityNeed.Level::Total);
            IF ProjectCapacityNeed.FINDSET THEN
              REPEAT
                IF ProjectCapacityNeed."Project No." <> "Project No." THEN BEGIN
                  Project.GET(ProjectCapacityNeed."Project No.");
                  IF ProjectManagerFilter <> '' THEN BEGIN
                    Project.SETFILTER("Project Manager",ProjectManagerFilter);
                    ProjectInFilter := Project.FIND('=');
                  END ELSE
                    ProjectInFilter := TRUE;
                  IF ProjectInFilter THEN BEGIN
                    Level := Level::Project;
                    "Project No." := ProjectCapacityNeed."Project No.";
                    "Project Manager" := Project."Project Manager";
                    Description := Project.Description;
                    INSERT;
                  END;
                END;
              UNTIL ProjectCapacityNeed.NEXT = 0;

            //Total Line
            CLEAR(Rec);
            Level := Level::Total;
            Description := FORMAT(Level::Total);
            INSERT;
          END;
      END;

      COPY(ProjectCapacityNeedFilters);
    END;

    LOCAL PROCEDURE ReadHours@1100528503();
    VAR
      ProjectCapacityNeed@1100528500 : Record 11229348;
      ProjectCapacityNeedDetail@1100528501 : Record 11229349;
      TempProjectCapacityNeed@1100528504 : TEMPORARY Record 11229348;
      ProjectScheduleEmployee@1100528502 : Record 11229412;
      DummyBoolean@1100528503 : Boolean;
    BEGIN
      BudgetHours := 0;
      ActualHours := 0;
      EstimatedHours := 0;
      RequestedHours := 0;
      AvailableHours := 0;
      ScheduledHours := 0;
      HoursToSchedule := 0;
      PlannedHoursWorkorder := 0;
      HoursToPlanWorkorder := 0;

      CASE OverallNeedLevel OF
        OverallNeedLevel::Discipline:
          BEGIN
            IF Level <> Level::Total THEN
              ProjectCapacityNeed.SETRANGE(Discipline,Discipline);
            ProjectCapacityNeed.SETFILTER(Level,'<>%1',ProjectCapacityNeed.Level::Total);
            ProjectCapacityNeed.SETRANGE("Line Type",ProjectCapacityNeed."Line Type"::Main);
            ProjectCapacityNeed.CALCSUMS("Estimated Hours");
            EstimatedHours := ProjectCapacityNeed."Estimated Hours";

            IF Level <> Level::Total THEN
              ProjectCapacityNeedDetail.SETRANGE(Discipline,Discipline);
            ProjectCapacityNeedDetail.SETRANGE("Line Type",ProjectCapacityNeedDetail."Line Type"::Main);
            ProjectCapacityNeedDetail.CALCSUMS("Requested Hours");
            RequestedHours := ProjectCapacityNeedDetail."Requested Hours";

            AvailableHours := EstimatedHours - RequestedHours;

            IF Level <> Level::Total THEN
              ProjectScheduleEmployee.SETRANGE(Discipline,Discipline);
            ProjectScheduleEmployee.CALCSUMS("Scheduled Hours");
            ScheduledHours := ProjectScheduleEmployee."Scheduled Hours";
            HoursToSchedule := RequestedHours - ScheduledHours;
          END;
        OverallNeedLevel::Project:
          BEGIN
            IF Level <> Level::Total THEN BEGIN
              ActualHours := ReadActualHours(DummyBoolean);
              PlannedHoursWorkorder := ReadPlannedHoursWorkOrder;
              HoursToPlanWorkorder := ReadHoursToPlanWorkorder;
              ScheduledHours := ReadScheduledHours;
              HoursToSchedule := ReadHoursToSchedule;
            END ELSE BEGIN
              TempProjectCapacityNeed.COPY(Rec,TRUE);
              TempProjectCapacityNeed.SETRANGE(Level,TempProjectCapacityNeed.Level::Project);
              IF TempProjectCapacityNeed.FINDSET THEN
                REPEAT
                  ActualHours += TempProjectCapacityNeed.ReadActualHours(DummyBoolean);
                  PlannedHoursWorkorder += TempProjectCapacityNeed.ReadPlannedHoursWorkOrder;
                  HoursToPlanWorkorder += TempProjectCapacityNeed.ReadHoursToPlanWorkorder;
                  ScheduledHours += TempProjectCapacityNeed.ReadScheduledHours;
                  HoursToSchedule += TempProjectCapacityNeed.ReadHoursToSchedule;
                UNTIL TempProjectCapacityNeed.NEXT = 0;
            END;

            ProjectCapacityNeed.SETRANGE(Level,ProjectCapacityNeed.Level::Total);
            IF Level <> Level::Total THEN
              ProjectCapacityNeed.SETRANGE("Project No.","Project No.");
            ProjectCapacityNeed.SETRANGE("Line Type",ProjectCapacityNeed."Line Type"::Main);
            ProjectCapacityNeed.CALCSUMS("Budget Hours","Estimated Hours");
            EstimatedHours := ProjectCapacityNeed."Estimated Hours";
            BudgetHours := ProjectCapacityNeed."Budget Hours";

            IF Level <> Level::Total THEN
              ProjectCapacityNeedDetail.SETRANGE("Project No.","Project No.");
            ProjectCapacityNeedDetail.SETRANGE("Line Type",ProjectCapacityNeedDetail."Line Type"::Main);
            ProjectCapacityNeedDetail.CALCSUMS("Requested Hours");
            RequestedHours := ProjectCapacityNeedDetail."Requested Hours";

            AvailableHours := EstimatedHours - RequestedHours;
          END;
      END;
    END;

    LOCAL PROCEDURE LookupRequestedHours@1100528504();
    VAR
      ProjectCapacityNeedDetail@1100528501 : Record 11229349;
      ProjectCapacityNeedDetails@1100528500 : Page 11132129;
    BEGIN
      SetProjectCapacityNeedDetailFilters(ProjectCapacityNeedDetail);
      ProjectCapacityNeedDetail.SETRANGE("Need Date");

      ProjectCapacityNeedDetails.EDITABLE(FALSE);
      ProjectCapacityNeedDetails.SETTABLEVIEW(ProjectCapacityNeedDetail);
      ProjectCapacityNeedDetails.RUNMODAL;
    END;

    LOCAL PROCEDURE StartPageProjectCapacityNeed@1100528506();
    VAR
      ProjectCapacityNeedPage@1100528500 : Page 11132127;
    BEGIN
      IF Level <> Level::Project THEN
        ERROR(OnlyLevelProjectTxt,FIELDCAPTION(Level),Level::Project);

      ProjectCapacityNeedPage.SetProjectNo("Project No.");
      ProjectCapacityNeedPage.RUN;
    END;

    LOCAL PROCEDURE StartPageScheduleEmployeesOnProject@1100528507();
    VAR
      ScheduleEmployeesOnProject@1100528500 : Page 11129934;
    BEGIN
      IF Level <> Level::Project THEN
        ERROR(OnlyLevelProjectTxt,FIELDCAPTION(Level),Level::Project);

      ScheduleEmployeesOnProject.SetProjectNo("Project No.");
      ScheduleEmployeesOnProject.RUNMODAL;
    END;

    BEGIN
    END.
  }
}

