OBJECT Codeunit 11072049 InsuranceJnlManagement
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03,4PS14.00 (5656);
  }
  PROPERTIES
  {
    Permissions=TableData 11072090=imd,
                TableData 11072091=imd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=VERSICHERUNG;ENU=INSURANCE;NLD=VERZEKERNG;NOR=FORSIKRING;SVE=F™RSŽKRING';
      Text001@1001 : TextConst 'DEU=Versicherungs Buch.-Blatt;ENU=Insurance Journal;NLD=Verzekeringsdagboek;NOR=Forsikringskladd;SVE=F”rs„kringsjournal';
      Text002@1002 : TextConst 'DEU=STANDARD;ENU=DEFAULT;NLD=STANDAARD;NOR=STANDARD;SVE=STANDARD';
      Text003@1003 : TextConst 'DEU=Standard Buch.-Blatt;ENU=Default Journal;NLD=Standaarddagboek;NOR=Standardkladd;SVE=Standardjournal';
      OldInsuranceNo@1004 : Code[20];
      OldFANo@1005 : Code[20];
      OpenFromBatch@1006 : Boolean;

    [External]
    PROCEDURE TemplateSelection@1(PageID@1003 : Integer;VAR InsuranceJnlLine@1002 : Record 11072092;VAR JnlSelected@1001 : Boolean);
    VAR
      InsuranceJnlTempl@1000 : Record 11072090;
    BEGIN
      JnlSelected := TRUE;

      InsuranceJnlTempl.RESET;
      InsuranceJnlTempl.SETRANGE("Page ID",PageID);

      CASE InsuranceJnlTempl.COUNT OF
        0:
          BEGIN
            InsuranceJnlTempl.INIT;
            InsuranceJnlTempl.Name := Text000;
            InsuranceJnlTempl.Description := Text001;
            InsuranceJnlTempl.VALIDATE("Page ID");
            InsuranceJnlTempl.INSERT;
            COMMIT;
          END;
        1:
          InsuranceJnlTempl.FINDFIRST;
        ELSE
          JnlSelected := PAGE.RUNMODAL(0,InsuranceJnlTempl) = ACTION::LookupOK;
      END;
      IF JnlSelected THEN BEGIN
        InsuranceJnlLine.FILTERGROUP := 2;
        InsuranceJnlLine.SETRANGE("Journal Template Name",InsuranceJnlTempl.Name);
        InsuranceJnlLine.FILTERGROUP := 0;
        IF OpenFromBatch THEN BEGIN
          InsuranceJnlLine."Journal Template Name" := '';
          PAGE.RUN(InsuranceJnlTempl."Page ID",InsuranceJnlLine);
        END;
      END;
    END;

    [External]
    PROCEDURE TemplateSelectionFromBatch@10(VAR InsuranceJnlBatch@1000 : Record 11072091);
    VAR
      InsuranceJnlLine@1002 : Record 11072092;
      InsuranceJnlTempl@1003 : Record 11072090;
    BEGIN
      OpenFromBatch := TRUE;
      InsuranceJnlTempl.GET(InsuranceJnlBatch."Journal Template Name");
      InsuranceJnlTempl.TESTFIELD("Page ID");
      InsuranceJnlBatch.TESTFIELD(Name);

      InsuranceJnlLine.FILTERGROUP := 2;
      InsuranceJnlLine.SETRANGE("Journal Template Name",InsuranceJnlTempl.Name);
      InsuranceJnlLine.FILTERGROUP := 0;

      InsuranceJnlLine."Journal Template Name" := '';
      InsuranceJnlLine."Journal Batch Name" := InsuranceJnlBatch.Name;
      PAGE.RUN(InsuranceJnlTempl."Page ID",InsuranceJnlLine);
    END;

    [External]
    PROCEDURE OpenJournal@2(VAR CurrentJnlBatchName@1000 : Code[10];VAR InsuranceJnlLine@1001 : Record 11072092);
    BEGIN
      CheckTemplateName(InsuranceJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
      InsuranceJnlLine.FILTERGROUP := 2;
      InsuranceJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      InsuranceJnlLine.FILTERGROUP := 0;
    END;

    [External]
    PROCEDURE OpenJnlBatch@12(VAR InsuranceJnlBatch@1000 : Record 11072091);
    VAR
      InsuranceJnlTemplate@1002 : Record 11072090;
      InsuranceJnlLine@1004 : Record 11072092;
      JnlSelected@1003 : Boolean;
    BEGIN
      IF InsuranceJnlBatch.GETFILTER("Journal Template Name") <> '' THEN
        EXIT;
      InsuranceJnlBatch.FILTERGROUP(2);
      IF InsuranceJnlBatch.GETFILTER("Journal Template Name") <> '' THEN BEGIN
        InsuranceJnlBatch.FILTERGROUP(0);
        EXIT;
      END;
      InsuranceJnlBatch.FILTERGROUP(0);

      IF NOT InsuranceJnlBatch.FIND('-') THEN BEGIN
        IF NOT InsuranceJnlTemplate.FINDFIRST THEN
          TemplateSelection(0,InsuranceJnlLine,JnlSelected);
        IF InsuranceJnlTemplate.FINDFIRST THEN
          CheckTemplateName(InsuranceJnlTemplate.Name,InsuranceJnlBatch.Name);
      END;
      InsuranceJnlBatch.FIND('-');
      JnlSelected := TRUE;
      IF InsuranceJnlBatch.GETFILTER("Journal Template Name") <> '' THEN
        InsuranceJnlTemplate.SETRANGE(Name,InsuranceJnlBatch.GETFILTER("Journal Template Name"));
      CASE InsuranceJnlTemplate.COUNT OF
        1:
          InsuranceJnlTemplate.FINDFIRST;
        ELSE
          JnlSelected := PAGE.RUNMODAL(0,InsuranceJnlTemplate) = ACTION::LookupOK;
      END;
      IF NOT JnlSelected THEN
        ERROR('');

      InsuranceJnlBatch.FILTERGROUP(0);
      InsuranceJnlBatch.SETRANGE("Journal Template Name",InsuranceJnlTemplate.Name);
      InsuranceJnlBatch.FILTERGROUP(2);
    END;

    [External]
    PROCEDURE CheckName@4(CurrentJnlBatchName@1000 : Code[10];VAR InsuranceJnlLine@1001 : Record 11072092);
    VAR
      InsuranceJnlBatch@1002 : Record 11072091;
    BEGIN
      InsuranceJnlBatch.GET(InsuranceJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
    END;

    [External]
    PROCEDURE SetName@5(CurrentJnlBatchName@1000 : Code[10];VAR InsuranceJnlLine@1001 : Record 11072092);
    BEGIN
      InsuranceJnlLine.FILTERGROUP := 2;
      InsuranceJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      InsuranceJnlLine.FILTERGROUP := 0;
      IF InsuranceJnlLine.FIND('-') THEN;
    END;

    [External]
    PROCEDURE LookupName@6(VAR CurrentJnlBatchName@1000 : Code[10];VAR InsuranceJnlLine@1001 : Record 11072092);
    VAR
      InsuranceJnlBatch@1002 : Record 11072091;
    BEGIN
      COMMIT;
      InsuranceJnlBatch."Journal Template Name" := InsuranceJnlLine.GETRANGEMAX("Journal Template Name");
      InsuranceJnlBatch.Name := InsuranceJnlLine.GETRANGEMAX("Journal Batch Name");
      InsuranceJnlBatch.FILTERGROUP(2);
      InsuranceJnlBatch.SETRANGE("Journal Template Name",InsuranceJnlBatch."Journal Template Name");
      InsuranceJnlBatch.FILTERGROUP(0);
      IF PAGE.RUNMODAL(0,InsuranceJnlBatch) = ACTION::LookupOK THEN BEGIN
        CurrentJnlBatchName := InsuranceJnlBatch.Name;
        SetName(CurrentJnlBatchName,InsuranceJnlLine);
      END;
    END;

    LOCAL PROCEDURE CheckTemplateName@3(CurrentJnlTemplateName@1000 : Code[10];VAR CurrentJnlBatchName@1001 : Code[10]);
    VAR
      InsuranceJnlBatch@1002 : Record 11072091;
    BEGIN
      IF NOT InsuranceJnlBatch.GET(CurrentJnlTemplateName,CurrentJnlBatchName) THEN BEGIN
        InsuranceJnlBatch.SETRANGE("Journal Template Name",CurrentJnlTemplateName);
        IF NOT InsuranceJnlBatch.FINDFIRST THEN BEGIN
          InsuranceJnlBatch.INIT;
          InsuranceJnlBatch."Journal Template Name" := CurrentJnlTemplateName;
          InsuranceJnlBatch.SetupNewBatch;
          InsuranceJnlBatch.Name := Text002;
          InsuranceJnlBatch.Description := Text003;
          InsuranceJnlBatch.INSERT(TRUE);
          COMMIT;
        END;
        CurrentJnlBatchName := InsuranceJnlBatch.Name;
      END;
    END;

    [External]
    PROCEDURE GetDescriptions@7(InsuranceJnlLine@1000 : Record 11072092;VAR InsuranceDescription@1001 : Text[100];VAR FADescription@1002 : Text[100]);
    VAR
      Insurance@1003 : Record 11072087;
      FA@1004 : Record 5600;
    BEGIN
      IF InsuranceJnlLine."Insurance No." <> OldInsuranceNo THEN BEGIN
        InsuranceDescription := '';
        IF InsuranceJnlLine."Insurance No." <> '' THEN
          IF Insurance.GET(InsuranceJnlLine."Insurance No.") THEN
            InsuranceDescription := Insurance.Description;
        OldInsuranceNo := InsuranceJnlLine."Insurance No.";
      END;
      IF InsuranceJnlLine."FA No." <> OldFANo THEN BEGIN
        FADescription := '';
        IF InsuranceJnlLine."FA No." <> '' THEN
          IF FA.GET(InsuranceJnlLine."FA No.") THEN
            FADescription := FA.Description;
        OldFANo := FA."No.";
      END;
    END;

    BEGIN
    END.
  }
}

