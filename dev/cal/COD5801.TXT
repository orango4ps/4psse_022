OBJECT Codeunit 5801 Show Applied Entries
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.01;
  }
  PROPERTIES
  {
    TableNo=32;
    Permissions=TableData 32=rim,
                TableData 339=r;
    OnRun=BEGIN
            TempItemEntry.DELETEALL;
            FindAppliedEntry(Rec);
            PAGE.RUNMODAL(PAGE::"Applied Item Entries",TempItemEntry);
          END;

  }
  CODE
  {
    VAR
      TempItemEntry@1000 : TEMPORARY Record 32;

    LOCAL PROCEDURE FindAppliedEntry@2(ItemLedgEntry@1000 : Record 32);
    VAR
      ItemApplnEntry@1001 : Record 339;
    BEGIN
      WITH ItemLedgEntry DO
        IF Positive THEN BEGIN
          ItemApplnEntry.RESET;
          ItemApplnEntry.SETCURRENTKEY("Inbound Item Entry No.","Outbound Item Entry No.","Cost Application");
          ItemApplnEntry.SETRANGE("Inbound Item Entry No.","Entry No.");
          ItemApplnEntry.SETFILTER("Outbound Item Entry No.",'<>%1',0);
          ItemApplnEntry.SETRANGE("Cost Application",TRUE);
          OnFindAppliedEntryOnAfterSetFilters(ItemApplnEntry,ItemLedgEntry);
          IF ItemApplnEntry.FIND('-') THEN
            REPEAT
              InsertTempEntry(ItemApplnEntry."Outbound Item Entry No.",ItemApplnEntry.Quantity);
            UNTIL ItemApplnEntry.NEXT = 0;
        END ELSE BEGIN
          ItemApplnEntry.RESET;
          ItemApplnEntry.SETCURRENTKEY("Outbound Item Entry No.","Item Ledger Entry No.","Cost Application");
          ItemApplnEntry.SETRANGE("Outbound Item Entry No.","Entry No.");
          ItemApplnEntry.SETRANGE("Item Ledger Entry No.","Entry No.");
          ItemApplnEntry.SETRANGE("Cost Application",TRUE);
          OnFindAppliedEntryOnAfterSetFilters(ItemApplnEntry,ItemLedgEntry);
          IF ItemApplnEntry.FIND('-') THEN
            REPEAT
              InsertTempEntry(ItemApplnEntry."Inbound Item Entry No.",-ItemApplnEntry.Quantity);
            UNTIL ItemApplnEntry.NEXT = 0;
        END;
    END;

    LOCAL PROCEDURE InsertTempEntry@1(EntryNo@1000 : Integer;AppliedQty@1001 : Decimal);
    VAR
      ItemLedgEntry@1002 : Record 32;
      IsHandled@1003 : Boolean;
    BEGIN
      ItemLedgEntry.GET(EntryNo);

      IsHandled := FALSE;
      OnBeforeInsertTempEntry(ItemLedgEntry,IsHandled);
      IF IsHandled THEN
        EXIT;

      IF AppliedQty * ItemLedgEntry.Quantity < 0 THEN
        EXIT;

      IF NOT TempItemEntry.GET(EntryNo) THEN BEGIN
        TempItemEntry.INIT;
        TempItemEntry := ItemLedgEntry;
        TempItemEntry.Quantity := AppliedQty;
        TempItemEntry.INSERT;
      END ELSE BEGIN
        TempItemEntry.Quantity := TempItemEntry.Quantity + AppliedQty;
        TempItemEntry.MODIFY;
      END;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeInsertTempEntry@4(ItemLedgerEntry@1000 : Record 32;VAR IsHandled@1001 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnFindAppliedEntryOnAfterSetFilters@3(VAR ItemApplicationEntry@1000 : Record 339;ItemLedgerEntry@1001 : Record 32);
    BEGIN
    END;

    BEGIN
    END.
  }
}

