OBJECT Table 11126733 DSP Cancellation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               DSPAssignment@1100528300 : Record 11126740;
             BEGIN
               DSPManagement.GetDspAssignmentByAssignmentId("Assignment Id", DSPAssignment);
               "Service Order No." := DSPAssignment."Service Order No.";
               "Object No." := DSPAssignment."Object No.";
               DSPManagement.GetLastAdjustmentReason("Service Order No.", "Object No.", "Last Adjustment Reason",
                 "Last Adjustment Explanation");
               FillRemarkText;
             END;

    OnModify=BEGIN
               DSPManagement.GetLastAdjustmentReason("Service Order No.", "Object No.", "Last Adjustment Reason",
                 "Last Adjustment Explanation");
               FillRemarkText;
             END;

    OnDelete=BEGIN
               IF (Status = Status::Released) THEN
                 FIELDERROR(Status);
             END;

    CaptionML=ENU=DSP Cancellation;
    LookupPageID=Page11126957;
    DrillDownPageID=Page11126957;
  }
  FIELDS
  {
    { 10  ;   ;Entry No.           ;BigInteger    ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=Entry No.;
                                                              NOR=L›penr.;
                                                              SVE=L”pnr];
                                                   Editable=No }
    { 100 ;   ;Assignment Id       ;Text50        ;CaptionML=ENU=Assignment Id }
    { 110 ;   ;Version No.         ;Text10        ;CaptionML=[ENU=Version No.;
                                                              NOR=Versjonsnr.;
                                                              SVE=Versionsnr] }
    { 120 ;   ;Cancellation Reason No.;Integer    ;TableRelation="DSP Code".No. WHERE (Type=CONST(CancelReason));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Cancellation Reason Desc.");
                                                              END;

                                                   CaptionML=ENU=Cancellation Reason }
    { 130 ;   ;Cancellation Reason Desc.;Text50   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("DSP Code".Description WHERE (Type=CONST(CancelReason),
                                                                                                    No.=FIELD(Cancellation Reason No.)));
                                                   CaptionML=ENU=Cancellation Reason Description;
                                                   Editable=No }
    { 140 ;   ;Remark Text         ;Text250       ;CaptionML=ENU=Remark Text (Part);
                                                   Editable=No }
    { 141 ;   ;Remark              ;BLOB          ;CaptionML=ENU=Remark }
    { 150 ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=ENU=Received,Released,Processed;
                                                   OptionString=Received,Released,Processed }
    { 160 ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order".No.;
                                                   CaptionML=[ENU=Service Order No.;
                                                              NOR=Serviceordrenr.;
                                                              SVE=Serviceordernr];
                                                   Editable=No }
    { 170 ;   ;Object No.          ;Code20        ;TableRelation="Service Order Object"."Object No." WHERE (Service Order No.=FIELD(Service Order No.));
                                                   CaptionML=[ENU=Object No.;
                                                              NOR=Objektnr.;
                                                              SVE=Objektnr];
                                                   Editable=No }
    { 200 ;   ;Sent Ready Request To Dsp;DateTime ;CaptionML=ENU=Ready Request sent to DSP;
                                                   Editable=No }
    { 210 ;   ;Processed Ready Request By Dsp;DateTime;
                                                   CaptionML=ENU=Ready Request processed by DSP;
                                                   Editable=No }
    { 220 ;   ;Last Adjustment Reason;Integer     ;CaptionML=ENU=Last Adjustent Reason;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 221 ;   ;Last Adjustment Explanation;Text250;CaptionML=ENU=Last Cancellation Explanation;
                                                   Editable=No }
    { 550 ;   ;Xml Message         ;BLOB          ;CaptionML=ENU=XML Message }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Service Order No.,Object No.             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DSPManagement@1100528300 : Codeunit 11126714;

    PROCEDURE FillRemarkText@1100528302();
    VAR
      IStream@1100528300 : InStream;
    BEGIN
      "Remark Text" := '';
      IF (NOT Remark.HASVALUE) THEN
        EXIT;

      Remark.CREATEINSTREAM(IStream);
      IStream.READ("Remark Text", MAXSTRLEN("Remark Text"));
    END;

    PROCEDURE ResetSentToDsp@1100528300();
    BEGIN
      Status := Status::Released;
      "Sent Ready Request To Dsp" := 0DT;
      MODIFY;
    END;

    PROCEDURE ShowXmlMessage@1100528301();
    VAR
      TempXMLBuffer@1100528302 : TEMPORARY Record 1235;
      XMLViewer4PS@1100528301 : Page 11129908;
      IStream@1100528300 : InStream;
    BEGIN
      IF (NOT "Xml Message".HASVALUE) THEN
        EXIT;

      CALCFIELDS("Xml Message");
      "Xml Message".CREATEINSTREAM(IStream);
      TempXMLBuffer.Load(IStream);
      XMLViewer4PS.SetTempTable(TempXMLBuffer);
      XMLViewer4PS.SetShowAttributes(FALSE);
      XMLViewer4PS.RUNMODAL;
    END;

    BEGIN
    END.
  }
}

