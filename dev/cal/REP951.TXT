OBJECT Report 951 Suggest Res. Jnl. Lines
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Ressourcen Buch.-Blattzeilen vorschlagen;
               ENU=Suggest Res. Jnl. Lines;
               NLD=Resourcedagboekregels voorstellen;
               NOR=ForeslÜ ressurskladdelinjer];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  TimeSheetMgt@1000 : Codeunit 950;
                BEGIN
                  DateFilter := TimeSheetMgt.GetDateFilter(StartingDate,EndingDate);
                END;

  }
  DATASET
  {
    { 5508;    ;DataItem;                    ;
               DataItemTable=Table156;
               DataItemTableView=WHERE(Use Time Sheet=CONST(Yes));
               OnPreDataItem=BEGIN
                               IF ResourceNoFilter <> '' THEN
                                 SETFILTER("No.",ResourceNoFilter);

                               IF DateFilter <> '' THEN
                                 TimeSheetHeader.SETFILTER("Starting Date",DateFilter);
                             END;

               OnAfterGetRecord=BEGIN
                                  FillTempBuffer("No.");
                                END;

               OnPostDataItem=VAR
                                NoSeriesMgt@1002 : Codeunit 396;
                                NextDocNo@1001 : Code[20];
                                LineNo@1000 : Integer;
                                QtyToPost@1004 : Decimal;
                              BEGIN
                                IF TempTimeSheetLine.FINDSET THEN BEGIN
                                  ResJnlLine.LOCKTABLE;
                                  ResJnlTemplate.GET(ResJnlLine."Journal Template Name");
                                  ResJnlBatch.GET(ResJnlLine."Journal Template Name",ResJnlLine."Journal Batch Name");
                                  IF ResJnlBatch."No. Series" = '' THEN
                                    NextDocNo := ''
                                  ELSE
                                    NextDocNo := NoSeriesMgt.GetNextNo(ResJnlBatch."No. Series",TempTimeSheetLine."Time Sheet Starting Date",FALSE);

                                  ResJnlLine.SETRANGE("Journal Template Name",ResJnlLine."Journal Template Name");
                                  ResJnlLine.SETRANGE("Journal Batch Name",ResJnlLine."Journal Batch Name");
                                  IF ResJnlLine.FINDLAST THEN;
                                  LineNo := ResJnlLine."Line No.";

                                  REPEAT
                                    TimeSheetHeader.GET(TempTimeSheetLine."Time Sheet No.");
                                    TimeSheetDetail.SETRANGE("Time Sheet No.",TempTimeSheetLine."Time Sheet No.");
                                    TimeSheetDetail.SETRANGE("Time Sheet Line No.",TempTimeSheetLine."Line No.");
                                    IF DateFilter <> '' THEN
                                      TimeSheetDetail.SETFILTER(Date,DateFilter);
                                    TimeSheetDetail.SETFILTER(Quantity,'<>0');
                                    IF TimeSheetDetail.FINDSET THEN
                                      REPEAT
                                        QtyToPost := TimeSheetDetail.GetMaxQtyToPost;
                                        IF QtyToPost <> 0 THEN BEGIN
                                          ResJnlLine.INIT;
                                          LineNo := LineNo + 10000;
                                          ResJnlLine."Line No." := LineNo;
                                          ResJnlLine."Time Sheet No." := TimeSheetDetail."Time Sheet No.";
                                          ResJnlLine."Time Sheet Line No." := TimeSheetDetail."Time Sheet Line No.";
                                          ResJnlLine."Time Sheet Date" := TimeSheetDetail.Date;
                                          ResJnlLine.VALIDATE("Resource No.",TimeSheetHeader."Resource No.");
                                          ResJnlLine.VALIDATE("Posting Date",TimeSheetDetail.Date);
                                          ResJnlLine."Document No." := NextDocNo;
                                          NextDocNo := INCSTR(NextDocNo);
                                          ResJnlLine."Posting No. Series" := ResJnlBatch."Posting No. Series";
                                          ResJnlLine.Description := TempTimeSheetLine.Description;
                                          ResJnlLine.VALIDATE("Work Type Code",TempTimeSheetLine."Work Type Code");
                                          ResJnlLine.VALIDATE(Quantity,QtyToPost);
                                          ResJnlLine."Source Code" := ResJnlTemplate."Source Code";
                                          ResJnlLine."Reason Code" := ResJnlBatch."Reason Code";
                                          OnBeforeResJnlLineInsert(ResJnlLine,TimeSheetHeader,TempTimeSheetLine,TimeSheetDetail,ResJnlTemplate,ResJnlBatch);
                                          ResJnlLine.INSERT;
                                        END;
                                      UNTIL TimeSheetDetail.NEXT = 0;
                                  UNTIL TempTimeSheetLine.NEXT = 0;
                                END;
                              END;

               ReqFilterFields=No.,Type }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 2   ;2   ;Field     ;
                  CaptionML=[DEU=Startdatum;
                             ENU=Starting Date;
                             NLD=Begindatum;
                             NOR=Startdato;
                             SVE=Startdatum];
                  ToolTipML=[DEU=Gibt das Datum des ersten Tags fÅr die Periode an, fÅr die Buchungsblattzeilen erstellt werden sollen.;
                             ENU=Specifies the date of the first day for the period for which you want to create journal lines.;
                             NLD=Hiermee wordt de datum opgegeven van de eerste dag in de periode waarvoor u dagboekregels wilt maken.;
                             NOR=Angir datoen for den fõrste dagen i perioden du vil opprette kladdelinjer for.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=StartingDate }

      { 1   ;2   ;Field     ;
                  CaptionML=[DEU=Enddatum;
                             ENU=Ending Date;
                             NLD=Einddatum;
                             NOR=Sluttdato;
                             SVE=Slutdatum];
                  ToolTipML=[DEU=Gibt das Datum fÅr den letzten Tag der Periode an, fÅr die Sie Buch.-Bl.-Zeilen einfÅgen mîchten.;
                             ENU=Specifies the date of the last day for the period for which you want to create journal lines.;
                             NLD=Hiermee wordt de datum opgegeven van de laatste dag in de periode waarvoor u dagboekregels wilt maken.;
                             NOR=Angir datoen for den siste dagen i perioden du vil opprette kladdelinjer for.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=EndingDate }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ResJnlLine@1012 : Record 207;
      ResJnlBatch@1011 : Record 236;
      ResJnlTemplate@1010 : Record 206;
      TimeSheetHeader@1009 : Record 950;
      TimeSheetLine@1008 : Record 951;
      TempTimeSheetLine@1007 : TEMPORARY Record 951;
      TimeSheetDetail@1006 : Record 952;
      ResourceNoFilter@1005 : Code[250];
      StartingDate@1001 : Date;
      EndingDate@1000 : Date;
      DateFilter@1002 : Text[30];

    [External]
    PROCEDURE SetResJnlLine@1(NewResJnlLine@1000 : Record 207);
    BEGIN
      ResJnlLine := NewResJnlLine;
    END;

    [External]
    PROCEDURE InitParameters@2(NewResJnlLine@1000 : Record 207;NewResourceNoFilter@1003 : Code[250];NewStartingDate@1001 : Date;NewEndingDate@1002 : Date);
    BEGIN
      ResJnlLine := NewResJnlLine;
      ResourceNoFilter := NewResourceNoFilter;
      StartingDate := NewStartingDate;
      EndingDate := NewEndingDate;
    END;

    LOCAL PROCEDURE FillTempBuffer@3(ResourceNo@1000 : Code[20]);
    BEGIN
      TimeSheetHeader.SETRANGE("Resource No.",ResourceNo);
      IF TimeSheetHeader.FINDSET THEN
        REPEAT
          TimeSheetLine.SETRANGE("Time Sheet No.",TimeSheetHeader."No.");
          TimeSheetLine.SETRANGE(Type,TimeSheetLine.Type::Resource);
          TimeSheetLine.SETRANGE(Status,TimeSheetLine.Status::Approved);
          TimeSheetLine.SETRANGE(Posted,FALSE);
          IF TimeSheetLine.FINDSET THEN
            REPEAT
              TempTimeSheetLine := TimeSheetLine;
              TempTimeSheetLine.INSERT;
            UNTIL TimeSheetLine.NEXT = 0;
        UNTIL TimeSheetHeader.NEXT = 0;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeResJnlLineInsert@4(VAR ResJournalLine@1000 : Record 207;TimeSheetHeader@1001 : Record 950;TimeSheetLine@1002 : Record 951;TimeSheetDetail@1003 : Record 952;ResJournalTemplate@1004 : Record 206;ResJournalBatch@1005 : Record 236);
    BEGIN
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

