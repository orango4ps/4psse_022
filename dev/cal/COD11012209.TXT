OBJECT Codeunit 11012209 XML Encode (Donau)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      XMLDOMMgtCU@1100485000 : Codeunit 11020220;
      FormatCU@1100485001 : Codeunit 11020221;
      CodeInt@1100525000 : Integer;
      GeneralLedgerSetup@1100525001 : Record 98;

    PROCEDURE PurchaseOrder@1100525006(CompanyName2@1100525006 : Text[30];VAR Rec@1100525001 : Record 38;VAR XMLDocOut@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument") : Boolean;
    VAR
      XMLCurrNode@1100525004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1100525003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1100525002 : Text[50];
    BEGIN
      //Donau
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;

      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'ReplyType','ReplyPurchaseOrder',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);

      WITH XMLDOMMgtCU DO BEGIN
        IF AddElement(XMLCurrNode,'ParameterList','',DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        XMLCurrNode := XMLNewChild;

        IF AddElement(XMLCurrNode,'Company',CompanyName2,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'No',Rec."No.",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'BuyFromVendorName',Rec."Buy-from Vendor No.",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'OrderDate',FormatCU.FormatDate(Rec."Order Date"),DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Status',FormatCU.FormatOptionNo(Rec.Status),DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
      END;
      EXIT(TRUE);
    END;

    PROCEDURE Vendor@1100525003(CompanyName2@1100525005 : Text[30];VAR Rec@1100525001 : Record 23;VAR XMLDocOut@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument") : Boolean;
    VAR
      XMLCurrNode@1100525004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1100525003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1100525002 : Text[50];
    BEGIN
      //Donau
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;
      //Rec.CALCFIELDS("B-Account No.","Bank Account No."); //C020749.o
      Rec.CALCFIELDS(IBAN, "IBAN B-Acc."); //C020749.n

      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'ReplyType','ReplyVendor',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);

      WITH XMLDOMMgtCU DO BEGIN
        IF AddElement(XMLCurrNode,'Parameterlist','',DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        XMLCurrNode := XMLNewChild;

        IF AddElement(XMLCurrNode,'Company',CompanyName2,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'No',Rec."No.",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Name',Rec.Name,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Address',Rec.Address,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'PostCode',Rec."Post Code",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'City',Rec.City,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Country',Rec."Country/Region Code",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'PhoneNo',Rec."Phone No.",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'FaxNo',Rec."Fax No.",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'E-Mail',Rec."E-Mail",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        //so.C020749
        //Rec.CALCFIELDS("B-Account No.","Bank Account No.");
        //IF AddElement(XMLCurrNode,'BankAccountCode',Rec."Bank Account No.",DocNameSpace,XMLNewChild) > 0 THEN
        //  EXIT(FALSE);
        //IF AddElement(XMLCurrNode,'B-AccountNo',Rec."B-Account No.",DocNameSpace,XMLNewChild) > 0 THEN
        //  EXIT(FALSE);
        //eo.C020749
        //sn.C020749
        Rec.CALCFIELDS(IBAN, "IBAN B-Acc.");
        IF AddElement(XMLCurrNode,'BankAccountCode',Rec.IBAN,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'B-AccountNo',Rec."IBAN B-Acc.",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        //en.C020749
        IF AddElement(XMLCurrNode,'PaymentTermsCode',Rec."Payment Terms Code",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'VATProdPostingGroup',Rec."VAT Prod. Posting Group",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        //sn dbeekman, 16-11-09: donau phase 2
        IF AddElement(XMLCurrNode,'Subcontractor',FormatCU.FormatOptionNo(Rec."Subcontractor Type"),DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        //en dbeekman

      END;
      EXIT(TRUE);
    END;

    PROCEDURE GLAccount@1100525012(CompanyName2@1100525006 : Text[30];VAR Rec@1100525001 : Record 15;VAR XMLDocOut@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument") : Boolean;
    VAR
      XMLCurrNode@1100525004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1100525003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1100525002 : Text[50];
      lvDefaultDimension@1100525005 : Record 352;
    BEGIN
      //Donau
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;

      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'ReplyType','ReplyGLAccount',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);


      WITH XMLDOMMgtCU DO BEGIN
        IF AddElement(XMLCurrNode,'Parameterlist','',DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        XMLCurrNode := XMLNewChild;

        IF AddElement(XMLCurrNode,'Company',CompanyName2,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'No',Rec."No.",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Name',Rec.Name,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Blocked',FormatCU.FormatBoolean(Rec.Blocked),DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);

        lvDefaultDimension.CHANGECOMPANY(CompanyName2);
        GeneralLedgerSetup.CHANGECOMPANY(CompanyName2);
        lvDefaultDimension.SETRANGE("Table ID",15);
        lvDefaultDimension.SETRANGE("No.",Rec."No.");
        GeneralLedgerSetup.GET;
        lvDefaultDimension.SETRANGE("Dimension Code",GeneralLedgerSetup."Global Dimension 1 Code");
        CodeInt := 0;
        IF lvDefaultDimension.FINDFIRST THEN BEGIN
          CASE lvDefaultDimension."Value Posting" OF
            lvDefaultDimension."Value Posting"::"Code Mandatory":CodeInt := 1;
            lvDefaultDimension."Value Posting"::"Same Code":CodeInt := 2;
            lvDefaultDimension."Value Posting"::"No Code":CodeInt := 3;
          END;
        END;

        IF AddElement(XMLCurrNode,'CostCenterMandatory',STRSUBSTNO('%1',CodeInt),DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);

      END;
      EXIT(TRUE);
    END;

    PROCEDURE CostCenter@1100485018(CompanyName2@1100525000 : Text[30];VAR Rec@1001 : Record 349;VAR XMLDocOut@1005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument") @1000 : Boolean;
    VAR
      XMLCurrNode@1006 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1007 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1008 : Text[50];
    BEGIN
      //Donau
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;

      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'ReplyType','ReplyCostCenter',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);

      WITH XMLDOMMgtCU DO BEGIN
        IF AddElement(XMLCurrNode,'ParameterList','',DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        XMLCurrNode := XMLNewChild;

        IF AddElement(XMLCurrNode,'Company',CompanyName2,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Code',Rec.Code,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Name',Rec.Name,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Blocked',FormatCU.FormatBoolean(Rec.Blocked),DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);

      END;
      EXIT(TRUE);
    END;

    PROCEDURE CostObject@1100485009(CompanyName2@1100525000 : Text[30];VAR Rec@1001 : Record 349;VAR XMLDocOut@1005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument") @1000 : Boolean;
    VAR
      XMLCurrNode@1006 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1007 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1008 : Text[50];
    BEGIN
      //dbeekman, 17-11-09
      //Due to limitations in the Donau software, this function is abused to return all Dimensions, contrairy to what the request type
      //and function name suggest. The DonauSendCostCenter function is in fact obsolete now, but needed to exist for backward
      //compatibility reasons.
      //The function name and request type could not be changed for reasons within Donau. Sincere apologies.

      //Donau
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;

      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'ReplyType','ReplyCostObject',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);

      WITH XMLDOMMgtCU DO BEGIN
        IF AddElement(XMLCurrNode,'ParameterList','',DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        XMLCurrNode := XMLNewChild;

        IF AddElement(XMLCurrNode,'Company',CompanyName2,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        //sn dbeekman, 17-11-09: Donau Phase 2
        IF AddElement(XMLCurrNode,'DimensionCode',Rec."Dimension Code",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        //en dbeekman
        IF AddElement(XMLCurrNode,'Code',Rec.Code,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Name',Rec.Name,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Blocked',FormatCU.FormatBoolean(Rec.Blocked),DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);

      END;
      EXIT(TRUE);
    END;

    PROCEDURE Vehicle@1100525009(CompanyName2@1100525000 : Text[30];VAR Rec@1001 : Record 349;VAR XMLDocOut@1005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument") @1000 : Boolean;
    VAR
      XMLCurrNode@1006 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1007 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1008 : Text[50];
    BEGIN
      //Donau
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;

      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'ReplyType','ReplyVehicle',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);

      WITH XMLDOMMgtCU DO BEGIN
        IF AddElement(XMLCurrNode,'ParameterList','',DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        XMLCurrNode := XMLNewChild;

        IF AddElement(XMLCurrNode,'Company',CompanyName2,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Code',Rec.Code,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Name',Rec.Name,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Blocked',FormatCU.FormatBoolean(Rec.Blocked),DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);

      END;
      EXIT(TRUE);
    END;

    PROCEDURE Project@1100525014(CompanyName2@1100525005 : Text[30];VAR Rec@1100525001 : Record 11072003;VAR XMLDocOut@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument") : Boolean;
    VAR
      XMLCurrNode@1100525004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1100525003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1100525002 : Text[50];
    BEGIN
      //Donau
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;

      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'ReplyType','ReplyProject',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);

      WITH XMLDOMMgtCU DO BEGIN
        IF AddElement(XMLCurrNode,'ParameterList','',DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        XMLCurrNode := XMLNewChild;

        IF AddElement(XMLCurrNode,'Company',CompanyName2,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'No',Rec."No.",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Description',Rec.Description,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Blocked',FormatCU.FormatOptionNo(Rec.Blocked),DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);

      END;
      EXIT(TRUE);
    END;

    PROCEDURE Company@1100525019(Rec@1100525001 : Record 2000000006;VAR XMLDocOut@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument") : Boolean;
    VAR
      XMLCurrNode@1100525004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1100525003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1100525002 : Text[50];
      CompanyData@1100528500 : Record 11020674;
    BEGIN
      //Donau
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;

      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'ReplyType','ReplyCompany',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);

      IF CompanyData.GET(Rec.Name) THEN; //NAV2013R2

      WITH XMLDOMMgtCU DO BEGIN
        IF AddElement(XMLCurrNode,'ParameterList','',DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        XMLCurrNode := XMLNewChild;

        IF AddElement(XMLCurrNode,'CompanyID',CompanyData."Company ID",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Name',Rec.Name,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);

      END;
      EXIT(TRUE);
    END;

    PROCEDURE ServiceOrder@2(CompanyName2@1100525000 : Text[30];VAR Rec@1001 : Record 11012823;VAR XMLDocOut@1005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument") @1000 : Boolean;
    VAR
      XMLCurrNode@1006 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1007 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1008 : Text[50];
    BEGIN
      //Donau
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;

      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'ReplyType','ReplyServiceOrder',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);


      WITH XMLDOMMgtCU DO BEGIN
        IF AddElement(XMLCurrNode,'ParameterList','',DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        XMLCurrNode := XMLNewChild;

        IF AddElement(XMLCurrNode,'Company',CompanyName2,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'No',Rec."No.",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Description',Rec.Description,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
      END;
      EXIT(TRUE);
    END;

    PROCEDURE ServiceContract@1100525007(CompanyName2@1100525000 : Text[30];VAR Rec@1001 : Record 11012812;VAR XMLDocOut@1005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument") @1000 : Boolean;
    VAR
      XMLCurrNode@1006 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1007 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1008 : Text[50];
    BEGIN
      //Donau
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;

      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'ReplyType','ReplyServiceContract',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);


      WITH XMLDOMMgtCU DO BEGIN
        IF AddElement(XMLCurrNode,'ParameterList','',DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        XMLCurrNode := XMLNewChild;

        IF AddElement(XMLCurrNode,'Company',CompanyName2,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'No',Rec."No.",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Description',Rec.Description,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
      END;
      EXIT(TRUE);
    END;

    PROCEDURE Plant@1100525030(CompanyName2@1100525000 : Text[30];VAR Rec@1001 : Record 11012551;VAR XMLDocOut@1005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument") @1000 : Boolean;
    VAR
      XMLCurrNode@1006 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1007 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1008 : Text[50];
    BEGIN
      //Donau
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;

      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'ReplyType','ReplyPlant',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);


      WITH XMLDOMMgtCU DO BEGIN
        IF AddElement(XMLCurrNode,'ParameterList','',DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        XMLCurrNode := XMLNewChild;

        IF AddElement(XMLCurrNode,'Company',CompanyName2,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Code',Rec.Code,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Description',Rec.Description,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);

      END;
      EXIT(TRUE);
    END;

    PROCEDURE FixedAsset@1100525037(CompanyName2@1100525000 : Text[30];VAR Rec@1001 : Record 5600;VAR XMLDocOut@1005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument") @1000 : Boolean;
    VAR
      XMLCurrNode@1006 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1007 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1008 : Text[50];
    BEGIN
      //Donau
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;

      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'ReplyType','ReplyFixedAsset',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);

      WITH XMLDOMMgtCU DO BEGIN
        IF AddElement(XMLCurrNode,'ParameterList','',DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        XMLCurrNode := XMLNewChild;

        IF AddElement(XMLCurrNode,'Company',CompanyName2,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'No',Rec."No.",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Description',Rec.Description,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);

      END;
      EXIT(TRUE);
    END;

    PROCEDURE ReplyInvoiceHeader@1100525000(Rec@1100525001 : Record 38;VAR XMLDocOut@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";ResultBool@1100525005 : Boolean;ErrorText@1100525006 : Text[50]) : Boolean;
    VAR
      XMLCurrNode@1100525004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1100525003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1100525002 : Text[50];
    BEGIN
      //Donau
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;

      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'ReplyType','ReplyInvoiceHeader',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);


      WITH XMLDOMMgtCU DO BEGIN
        IF AddElement(XMLCurrNode,'ParameterList','',DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        XMLCurrNode := XMLNewChild;

        IF AddElement(XMLCurrNode,'Result',FormatCU.FormatBoolean(ResultBool),DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Error',ErrorText,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'No',Rec."No.",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
      END;
    END;

    PROCEDURE ReplyInvoiceLine@1100525002(Rec@1100525001 : Record 39;VAR XMLDocOut@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";ResultBool@1100525005 : Boolean;ErrorText@1100525006 : Text[50]) : Boolean;
    VAR
      XMLCurrNode@1100525004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1100525003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1100525002 : Text[50];
    BEGIN
      //Donau
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;

      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'ReplyType','ReplyInvoiceLine',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);


      WITH XMLDOMMgtCU DO BEGIN
        IF AddElement(XMLCurrNode,'ParameterList','',DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        XMLCurrNode := XMLNewChild;

        IF AddElement(XMLCurrNode,'Result',FormatCU.FormatBoolean(ResultBool),DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Error',ErrorText,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'No',Rec."No.",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
      END;
    END;

    PROCEDURE ReplyInvApprovalLine@1100525008(Rec@1100525001 : Record 11012032;VAR XMLDocOut@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";ResultBool@1100525005 : Boolean;ErrorText@1100525006 : Text[50]) : Boolean;
    VAR
      XMLCurrNode@1100525004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1100525003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1100525002 : Text[50];
    BEGIN
      //Donau
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;

      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'ReplyType','ReplyInvoiceLine',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);


      WITH XMLDOMMgtCU DO BEGIN
        IF AddElement(XMLCurrNode,'ParameterList','',DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        XMLCurrNode := XMLNewChild;

        IF AddElement(XMLCurrNode,'Result',FormatCU.FormatBoolean(ResultBool),DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Error',ErrorText,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'No',Rec."Document No.",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
      END;
    END;

    PROCEDURE ReplyApprovedInvoice@1100525004(Rec@1100525003 : Record 38;VAR XMLDocOut@1100525002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";ResultBool@1100525001 : Boolean;ErrorText@1100525000 : Text[50]) : Boolean;
    VAR
      XMLCurrNode@1100525006 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1100525005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1100525004 : Text[50];
    BEGIN
      //Donau
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;

      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'ReplyType','ReplyApprovedInvoice',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);


      WITH XMLDOMMgtCU DO BEGIN
        IF AddElement(XMLCurrNode,'ParameterList','',DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        XMLCurrNode := XMLNewChild;

        IF AddElement(XMLCurrNode,'Result',FormatCU.FormatBoolean(ResultBool),DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Error',ErrorText,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'No',Rec."No.",DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
      END;
    END;

    PROCEDURE ReplyStatusInvoice@1100525005(Rec@1100525003 : Record 38;VAR XMLDocOut@1100525002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";ResultBool@1100525001 : Boolean;ErrorText@1100525000 : Text[50];StatusTxt@1100525007 : Text[50]) : Boolean;
    VAR
      XMLCurrNode@1100525006 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1100525005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1100525004 : Text[50];
    BEGIN
      //Donau
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;

      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'ReplyType','ReplyStatusInvoice',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);

      WITH XMLDOMMgtCU DO BEGIN
        IF AddElement(XMLCurrNode,'ParameterList','',DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        XMLCurrNode := XMLNewChild;

        IF AddElement(XMLCurrNode,'Status',StatusTxt,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
        IF AddElement(XMLCurrNode,'Message',ErrorText,DocNameSpace,XMLNewChild) > 0 THEN
          EXIT(FALSE);
      END;
    END;

    PROCEDURE EndOfTransaction@1100525001(VAR XMLDocOut@1100525001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument") : Boolean;
    VAR
      XMLCurrNode@1100525004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1100525003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1100525002 : Text[50];
    BEGIN
      XMLDocOut.LoadXml('<Reply/>');
      XMLCurrNode := XMLDocOut.DocumentElement;
      IF XMLDOMMgtCU.AddElement(XMLCurrNode,'EndOfTransaction','',DocNameSpace,XMLNewChild) > 0 THEN
        EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

