OBJECT Page 11012683 _Purch. Turnover Statistics MB
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[DEU=Tarifkomponente Ert„ge;
               ENU=Matrix;
               NLD=Matrix;
               NOR=Maskinordre, kostrad;
               SVE=Maskinorder, kostnadsrad];
    LinksAllowed=No;
    SourceTable=Table11012287;
    PageType=ListPart;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             // Use only when the matrix is editable
             //FieldEditable1 := TRUE;
             //...
             FieldVisible1 := TRUE;
             FieldVisible2 := TRUE;
             FieldVisible3 := TRUE;
             FieldVisible4 := TRUE;
             FieldVisible5 := TRUE;
             FieldVisible6 := TRUE;
             FieldVisible7 := TRUE;
             FieldVisible8 := TRUE;
             FieldVisible9 := TRUE;
             FieldVisible10 := TRUE;
             FieldVisible11 := TRUE;
             FieldVisible12 := TRUE;

             PurchStatisticMgt.InitStatistic(0);  // 0=Turnover
           END;

    OnAfterGetRecord=VAR
                       I@1100528700 : Integer;
                     BEGIN
                       FOR I := 1 TO MATRIX_CurrSetLength DO
                         MATRIX_OnAfterGetRecord(I);

                       // Use only when the matrix is editable
                       //FOR I := 1 TO ARRAYLEN(MATRIX_MatrixRecords) DO
                       //  MATRIX_SetFieldEditable(I);

                       TotalLine := (("Line Type" = "Line Type"::Total) OR ("Line Type" = "Line Type"::TotalDesc));
                     END;

  }
  CONTROLS
  {
    { 1100528731;0;Container;
                ContainerType=ContentArea }

    { 1100528730;1;Group  ;
                GroupType=Repeater;
                FreezeColumnID=PercentageLine }

    { 1100529000;2;Field  ;
                SourceExpr=Code;
                Style=Strong;
                StyleExpr=TotalLine }

    { 1100529001;2;Field  ;
                SourceExpr=Name;
                Style=Strong;
                StyleExpr=TotalLine }

    { 1100529002;2;Field  ;
                Name=TotalLineAmt;
                CaptionML=[DEU=Gesamt;
                           ENU=Total;
                           NLD=Totaal;
                           NOR=Totalt;
                           SVE=Totalt];
                BlankZero=Yes;
                SourceExpr=PurchStatisticMgt.TO_RoundAmount(Total, MATRIX_MatrixRecord."Column Type"::Amount);
                Style=Strong;
                StyleExpr=TotalLine;
                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(0);  // Column 0: Indicator for Total
                            END;
                             }

    { 1100525000;2;Field  ;
                Name=PercentageLine;
                CaptionML=[DEU=Percentage;
                           ENU=Percentage;
                           NLD=Percentage;
                           NOR=Prosent;
                           SVE=Procent];
                DecimalPlaces=2:2;
                BlankZero=Yes;
                SourceExpr=CalcPercentageLine();
                Style=Strong;
                StyleExpr=TotalLine }

    { 1100528701;2;Field  ;
                Name=Field1;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[1];
                CaptionClass='3,' + MATRIX_CaptionSet[1];
                Visible=FieldVisible1;
                Editable=FieldEditable1;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(1);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(1);
                            END;
                             }

    { 1100528702;2;Field  ;
                Name=Field2;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[2];
                CaptionClass='3,' + MATRIX_CaptionSet[2];
                Visible=FieldVisible2;
                Editable=FieldEditable2;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(2);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(2);
                            END;
                             }

    { 1100528703;2;Field  ;
                Name=Field3;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[3];
                CaptionClass='3,' + MATRIX_CaptionSet[3];
                Visible=FieldVisible3;
                Editable=FieldEditable3;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(3);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(3);
                            END;
                             }

    { 1100528704;2;Field  ;
                Name=Field4;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[4];
                CaptionClass='3,' + MATRIX_CaptionSet[4];
                Visible=FieldVisible4;
                Editable=FieldEditable4;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(4);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(4);
                            END;
                             }

    { 1100528705;2;Field  ;
                Name=Field5;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[5];
                CaptionClass='3,' + MATRIX_CaptionSet[5];
                Visible=FieldVisible5;
                Editable=FieldEditable5;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(5);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(5);
                            END;
                             }

    { 1100528706;2;Field  ;
                Name=Field6;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[6];
                CaptionClass='3,' + MATRIX_CaptionSet[6];
                Visible=FieldVisible6;
                Editable=FieldEditable6;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(6);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(6);
                            END;
                             }

    { 1100528707;2;Field  ;
                Name=Field7;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[7];
                CaptionClass='3,' + MATRIX_CaptionSet[7];
                Visible=FieldVisible7;
                Editable=FieldEditable7;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(7);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(7);
                            END;
                             }

    { 1100528708;2;Field  ;
                Name=Field8;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[8];
                CaptionClass='3,' + MATRIX_CaptionSet[8];
                Visible=FieldVisible8;
                Editable=FieldEditable8;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(8);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(8);
                            END;
                             }

    { 1100528709;2;Field  ;
                Name=Field9;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[9];
                CaptionClass='3,' + MATRIX_CaptionSet[9];
                Visible=FieldVisible9;
                Editable=FieldEditable9;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(9);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(9);
                            END;
                             }

    { 1100528710;2;Field  ;
                Name=Field10;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[10];
                CaptionClass='3,' + MATRIX_CaptionSet[10];
                Visible=FieldVisible10;
                Editable=FieldEditable10;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(10);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(10);
                            END;
                             }

    { 1100528711;2;Field  ;
                Name=Field11;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[11];
                CaptionClass='3,' + MATRIX_CaptionSet[11];
                Visible=FieldVisible11;
                Editable=FieldEditable11;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(11);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(11);
                            END;
                             }

    { 1100528712;2;Field  ;
                Name=Field12;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[12];
                CaptionClass='3,' + MATRIX_CaptionSet[12];
                Visible=FieldVisible12;
                Editable=FieldEditable12;
                Style=Strong;
                StyleExpr=TotalLine;
                OnValidate=BEGIN
                             MATRIX_OnValidate(12);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(12);
                            END;
                             }

  }
  CODE
  {
    VAR
      MATRIX_MatrixRecord@1100528723 : Record 11012288;
      MATRIX_MatrixRecords@1100528722 : ARRAY [32] OF Record 11012288;
      MATRIX_CaptionSet@1100528718 : ARRAY [32] OF Text[80];
      MATRIX_CurrSetLength@1100528716 : Integer;
      MATRIX_CellData@1100528715 : ARRAY [32] OF Decimal;
      FieldEditable1@1100528711 : Boolean INDATASET;
      FieldEditable2@1100528710 : Boolean INDATASET;
      FieldEditable3@1100528709 : Boolean INDATASET;
      FieldEditable4@1100528708 : Boolean INDATASET;
      FieldEditable5@1100528707 : Boolean INDATASET;
      FieldEditable6@1100528706 : Boolean INDATASET;
      FieldEditable7@1100528705 : Boolean INDATASET;
      FieldEditable8@1100528704 : Boolean INDATASET;
      FieldEditable9@1100528703 : Boolean INDATASET;
      FieldEditable10@1100528702 : Boolean INDATASET;
      FieldEditable11@1100528701 : Boolean INDATASET;
      FieldEditable12@1100528700 : Boolean INDATASET;
      FieldVisible1@1100409007 : Boolean INDATASET;
      FieldVisible2@1100409006 : Boolean INDATASET;
      FieldVisible3@1100409005 : Boolean INDATASET;
      FieldVisible4@1100409004 : Boolean INDATASET;
      FieldVisible5@1100409003 : Boolean INDATASET;
      FieldVisible6@1100409002 : Boolean INDATASET;
      FieldVisible7@1100409001 : Boolean INDATASET;
      FieldVisible8@1100409000 : Boolean INDATASET;
      FieldVisible9@1100409008 : Boolean INDATASET;
      FieldVisible10@1100409009 : Boolean INDATASET;
      FieldVisible11@1100409010 : Boolean INDATASET;
      FieldVisible12@1100409011 : Boolean INDATASET;
      SelType@1100525011 : Record 11012285;
      TmpDataBuf@1100525006 : TEMPORARY Record 11012289;
      PurchStatisticMgt@1100525007 : Codeunit 11012297;
      TotalLine@1100525002 : Boolean INDATASET;
      Text004@1100525001 : TextConst 'DEU=Gebuchte Rechnungszeilen,Gebuchte Gutschriften;ENU=Posted Invoice Lines,Posted Credit Memo''s;NLD=Geboekte factuurregels,Geboekte creditnota''s;NOR=Bokf›rte fakturarader,bokf›rte kreditnotaer;SVE=Bokf”rda fakturarader,Bokf”rda kreditnotor';
      AmountsBasedOn@1100525000 : 'PurchaseInvoices,PurchaseOrders';
      TotalAmtLines@1100525003 : Decimal;

    PROCEDURE Load@1132(VAR CaptionSet@1005 : ARRAY [32] OF Text[80];VAR MatrixRecords@1006 : ARRAY [32] OF Record 11012288;CurrSetLength@1007 : Integer);
    BEGIN
      CLEAR(MATRIX_CellData);
      COPYARRAY(MATRIX_CaptionSet, CaptionSet, 1);
      COPYARRAY(MATRIX_MatrixRecords, MatrixRecords, 1);

      MATRIX_CurrSetLength := CurrSetLength;
      MATRIX_SetFieldVisible;
    END;

    PROCEDURE Load2@1100525002(LineSelCode@1100525012 : Code[30];ColumnSelCode@1100525011 : Code[30];PeriodType@1100525010 : Option;RoundingFactor@1100525001 : Option;AmountsBasedOn2@1100525014 : Option;ShowApprovalLines@1100525013 : Boolean;SkipEmptyLines@1100525008 : Boolean;DateFilter@1100525006 : Text[30];VendorFilter@1100525005 : Code[250];VendorCategoryFilterCodeSystem@1100525016 : Code[250];VendorCategoryFilterCode@1100525015 : Code[250];VendQualFilter@1100525004 : Code[250];GLAccFilter@1100525003 : Code[250];GlobalDim1Filter@1100525002 : Code[250];GlobalDim2Filter@1100525000 : Code[250];HardDPAFilter@1100525007 : Code[250]);
    VAR
      SaveLineCodeBuf@1100525009 : Record 11012287;
    BEGIN
      AmountsBasedOn := AmountsBasedOn2;
      FILTERGROUP(9);
      IF SkipEmptyLines THEN
        SETRANGE("Empty Line", FALSE)
      ELSE
        SETRANGE("Empty Line");  // Reset Filter
      FILTERGROUP(0);
      PurchStatisticMgt.LoadSelections(
        LineSelCode, ColumnSelCode, PeriodType, RoundingFactor, AmountsBasedOn, ShowApprovalLines, '',
        DateFilter, VendorFilter, VendQualFilter, GLAccFilter, GlobalDim1Filter, GlobalDim2Filter, HardDPAFilter);
      PurchStatisticMgt.LoadSelectionsForVendCategory(VendorCategoryFilterCodeSystem,VendorCategoryFilterCode);

      SaveLineCodeBuf.COPY(Rec);
      IF GET("Line Type"::Total, '') THEN  //* Read total of all lines
        TotalAmtLines := Total;
      COPY(SaveLineCodeBuf);
    END;

    LOCAL PROCEDURE MATRIX_OnAfterGetRecord@1135(ColumnNo@1010 : Integer);
    BEGIN
      MATRIX_MatrixRecord := MATRIX_MatrixRecords[ColumnNo];

      IF "Line Type" = "Line Type"::Line THEN BEGIN
        IF TmpDataBuf.GET(Code, MATRIX_MatrixRecord.Code) THEN
          MATRIX_CellData[ColumnNo] := TmpDataBuf.Amount
        ELSE
          MATRIX_CellData[ColumnNo] := 0;
      END ELSE BEGIN
        MATRIX_CellData[ColumnNo] := MATRIX_MatrixRecord.Total;
      END;

      IF MATRIX_MatrixRecord."Column Type" = MATRIX_MatrixRecord."Column Type"::Percentage THEN BEGIN
        IF Total = 0 THEN
          MATRIX_CellData[ColumnNo] := 0
        ELSE
          MATRIX_CellData[ColumnNo] := MATRIX_CellData[ColumnNo] / Total * 100;
      END;

      IF MATRIX_CellData[ColumnNo] <> 0 THEN BEGIN
        MATRIX_CellData[ColumnNo] :=
          PurchStatisticMgt.TO_RoundAmount(MATRIX_CellData[ColumnNo], MATRIX_MatrixRecord."Column Type");
        IF MATRIX_CellData[ColumnNo] = 0 THEN
          MATRIX_CellData[ColumnNo] := 0.000001;  // Display 0 (not empty because BlankZero is true)
      END;
    END;

    LOCAL PROCEDURE MATRIX_OnValidate@1100525001(ColumnNo@1008 : Integer);
    BEGIN
      MATRIX_UpdateCell(ColumnNo);
    END;

    LOCAL PROCEDURE MATRIX_OnLookup@1100528701(ColumnNo@1100409000 : Integer);
    BEGIN
    END;

    LOCAL PROCEDURE MATRIX_OnDrillDown@1100409000(ColumnNo@1100409000 : Integer);
    VAR
      PurchOrderLine@1100525007 : Record 39;
      PurchInvLine@1100525005 : Record 123;
      PurchCrMemoLine@1100525004 : Record 125;
    BEGIN
      IF ColumnNo <> 0 THEN
        MATRIX_MatrixRecord := MATRIX_MatrixRecords[ColumnNo];
      CASE AmountsBasedOn OF
        AmountsBasedOn::PurchaseOrders:
          BEGIN
            PurchStatisticMgt.SetComFiltersOnPurchOrderLine(PurchOrderLine);
            SetCellFiltersOnPurchOrderLine(PurchOrderLine, ColumnNo=0);
            PAGE.RUNMODAL(PAGE::"Purchase Lines", PurchOrderLine);
          END;
        AmountsBasedOn::PurchaseInvoices:
          BEGIN
            CASE STRMENU(Text004) OF
              1:
                BEGIN
                  PurchStatisticMgt.SetComFiltersOnPurchInvLine(PurchInvLine);
                  SetCellFiltersOnPurchInvLine(PurchInvLine, ColumnNo=0);
                  PAGE.RUNMODAL(PAGE::"Posted Purchase Invoice Lines", PurchInvLine);
                END;
              2:
                BEGIN
                  PurchStatisticMgt.SetComFiltersOnPurchCrMemoLine(PurchCrMemoLine);
                  SetCellFiltersOnPurchCrMemLine(PurchCrMemoLine, ColumnNo=0);
                  PAGE.RUNMODAL(PAGE::"Posted Purchase Cr. Memo Lines", PurchCrMemoLine);
                END;
            END;
          END;
      END;
    END;

    LOCAL PROCEDURE MATRIX_OnAssistEdit@1100409001(ColumnNo@1100409000 : Integer);
    BEGIN
    END;

    LOCAL PROCEDURE MATRIX_UpdateCell@1100485007(ColumnNo@1100528701 : Integer);
    BEGIN
      MATRIX_MatrixRecord := MATRIX_MatrixRecords[ColumnNo];
    END;

    LOCAL PROCEDURE MATRIX_SetFieldEditable@1100528700(ColumnNo@1100528700 : Integer);
    BEGIN
      // Use only when the matrix is editable
    END;

    LOCAL PROCEDURE MATRIX_SetFieldVisible@1100409002();
    BEGIN
      // Use only when the matrix contains checkboxes
    END;

    PROCEDURE ShareTmpTables@1100525000(VAR TmpLineBuf@1100525001 : TEMPORARY Record 11012287;VAR TmpDataBuf2@1100525006 : TEMPORARY Record 11012289);
    BEGIN
      COPY(TmpLineBuf, TRUE);
      TmpDataBuf.COPY(TmpDataBuf2, TRUE);
    END;

    PROCEDURE SetCellFiltersOnPurchOrderLine@1210190037(VAR PurchOrderLine@1100525000 : Record 39;LineTotalMode@1100485000 : Boolean);
    BEGIN
      WITH PurchOrderLine DO BEGIN
        IF Rec."Line Type" = Rec."Line Type"::Line THEN BEGIN
          CASE Rec."Selection Type Option No." OF
            SelType.Type::Period:
              SETRANGE("Order Date", Rec."Period Start", Rec."Period End");
            SelType.Type::Vendor:
              SETRANGE("Buy-from Vendor No.", Rec.Code);
            SelType.Type::Account:
              BEGIN
                IF Rec.Code <> '' THEN
                  SETRANGE(Type, Type::"G/L Account")
                ELSE
                  SETFILTER(Type, '<>%1', Type::" ");
                SETRANGE("Account No.", Rec.Code);
              END;
            SelType.Type::Dim1:
              SETRANGE("Shortcut Dimension 1 Code", Rec.Code);
            SelType.Type::Dim2:
              SETRANGE("Shortcut Dimension 2 Code", Rec.Code);
          END;
        END;

        IF LineTotalMode THEN
          EXIT;

        CASE MATRIX_MatrixRecord."Selection Type Option No." OF
          SelType.Type::Period:
            SETRANGE("Order Date", MATRIX_MatrixRecord."Period Start", MATRIX_MatrixRecord."Period End");
          SelType.Type::Vendor:
            SETRANGE("Buy-from Vendor No.", MATRIX_MatrixRecord.Code);
          SelType.Type::Account:
            BEGIN
              IF MATRIX_MatrixRecord.Code <> '' THEN
                SETRANGE(Type, Type::"G/L Account")
              ELSE
                SETFILTER(Type, '<>%1', Type::" ");
              SETRANGE("Account No.", MATRIX_MatrixRecord.Code);
            END;
          SelType.Type::Dim1:
            SETRANGE("Shortcut Dimension 1 Code", MATRIX_MatrixRecord.Code);
          SelType.Type::Dim2:
            SETRANGE("Shortcut Dimension 2 Code", MATRIX_MatrixRecord.Code);
        END;
      END;
    END;

    PROCEDURE SetCellFiltersOnPurchInvLine@1210190039(VAR PurchInvLine@1100525001 : Record 123;LineTotalMode@1100485000 : Boolean);
    BEGIN
      WITH PurchInvLine DO BEGIN
        IF Rec."Line Type" = Rec."Line Type"::Line THEN BEGIN
          CASE Rec."Selection Type Option No." OF
            SelType.Type::Period:
              SETRANGE("Posting Date", Rec."Period Start", Rec."Period End");
            SelType.Type::Vendor:
              SETRANGE("Buy-from Vendor No.", Rec.Code);
            SelType.Type::Account:
              BEGIN
                IF Rec.Code <> '' THEN
                  SETRANGE(Type, Type::"G/L Account")
                ELSE
                  SETFILTER(Type, '<>%1', Type::" ");
                SETRANGE("Account No.", Rec.Code);
              END;
            SelType.Type::Dim1:
              SETRANGE("Shortcut Dimension 1 Code", Rec.Code);
            SelType.Type::Dim2:
              SETRANGE("Shortcut Dimension 2 Code", Rec.Code);
          END;
        END;

        IF LineTotalMode THEN
          EXIT;

        CASE MATRIX_MatrixRecord."Selection Type Option No." OF
          SelType.Type::Period:
            SETRANGE("Posting Date", MATRIX_MatrixRecord."Period Start", MATRIX_MatrixRecord."Period End");
          SelType.Type::Vendor:
            SETRANGE("Buy-from Vendor No.", MATRIX_MatrixRecord.Code);
          SelType.Type::Account:
            BEGIN
              IF MATRIX_MatrixRecord.Code <> '' THEN
                SETRANGE(Type, Type::"G/L Account")
              ELSE
                SETFILTER(Type, '<>%1', Type::" ");
              SETRANGE("Account No.", MATRIX_MatrixRecord.Code);
            END;
          SelType.Type::Dim1:
            SETRANGE("Shortcut Dimension 1 Code", MATRIX_MatrixRecord.Code);
          SelType.Type::Dim2:
            SETRANGE("Shortcut Dimension 2 Code", MATRIX_MatrixRecord.Code);
        END;
      END;
    END;

    PROCEDURE SetCellFiltersOnPurchCrMemLine@1210190038(VAR PurchCrMemoLine@1100525000 : Record 125;LineTotalMode@1100485000 : Boolean);
    BEGIN
      WITH PurchCrMemoLine DO BEGIN
        IF Rec."Line Type" = Rec."Line Type"::Line THEN BEGIN
          CASE Rec."Selection Type Option No." OF
            SelType.Type::Period:
              SETRANGE("Posting Date", Rec."Period Start", Rec."Period End");
            SelType.Type::Vendor:
              SETRANGE("Buy-from Vendor No.", Rec.Code);
            SelType.Type::Account:
              BEGIN
                IF Rec.Code <> '' THEN
                  SETRANGE(Type, Type::"G/L Account")
                ELSE
                  SETFILTER(Type, '<>%1', Type::" ");
                SETRANGE("Account No.", Rec.Code);
              END;
            SelType.Type::Dim1:
              SETRANGE("Shortcut Dimension 1 Code", Rec.Code);
            SelType.Type::Dim2:
              SETRANGE("Shortcut Dimension 2 Code", Rec.Code);
          END;
        END;

        IF LineTotalMode THEN
          EXIT;

        CASE MATRIX_MatrixRecord."Selection Type Option No." OF
          SelType.Type::Period:
            SETRANGE("Posting Date", MATRIX_MatrixRecord."Period Start", MATRIX_MatrixRecord."Period End");
          SelType.Type::Vendor:
            SETRANGE("Buy-from Vendor No.", MATRIX_MatrixRecord.Code);
          SelType.Type::Account:
            BEGIN
              IF MATRIX_MatrixRecord.Code <> '' THEN
                SETRANGE(Type, Type::"G/L Account")
              ELSE
                SETFILTER(Type, '<>%1', Type::" ");
              SETRANGE("Account No.", MATRIX_MatrixRecord.Code);
            END;
          SelType.Type::Dim1:
            SETRANGE("Shortcut Dimension 1 Code", MATRIX_MatrixRecord.Code);
          SelType.Type::Dim2:
            SETRANGE("Shortcut Dimension 2 Code", MATRIX_MatrixRecord.Code);
        END;
      END;
    END;

    PROCEDURE CalcPercentageLine@1100485000() : Decimal;
    BEGIN
      IF TotalAmtLines <> 0 THEN
        EXIT(Total / TotalAmtLines * 100);

      EXIT(0);
    END;

    BEGIN
    {
      Rec is temporary, the property SourceTableTemporary is Yes
    }
    END.
  }
}

