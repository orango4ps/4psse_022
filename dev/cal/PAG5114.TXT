OBJECT Page 5114 Contact Profile Answers
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Contact Profile Answers;
               NOR=Kontaktprofilsvar;
               SVE=Kontakt profilsvar];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table5088;
    DataCaptionExpr=CaptionStr;
    PageType=List;
    AutoSplitKey=Yes;
    OnOpenPage=BEGIN
                 IF ContactProfileAnswerCode = '' THEN
                   CurrentQuestionsChecklistCode :=
                     ProfileManagement.ProfileQuestionnaireAllowed(Cont,CurrentQuestionsChecklistCode)
                 ELSE
                   CurrentQuestionsChecklistCode := ContactProfileAnswerCode;

                 ProfileManagement.SetName(CurrentQuestionsChecklistCode,Rec,ContactProfileAnswerLine);

                 IF (Cont."Company No." <> '') AND (Cont."No." <> Cont."Company No.") THEN BEGIN
                   CaptionStr := COPYSTR(Cont."Company No." + ' ' + Cont."Company Name",1,MAXSTRLEN(CaptionStr));
                   CaptionStr := COPYSTR(CaptionStr + ' ' + Cont."No." + ' ' + Cont.Name,1,MAXSTRLEN(CaptionStr));
                 END ELSE
                   CaptionStr := COPYSTR(Cont."No." + ' ' + Cont.Name,1,MAXSTRLEN(CaptionStr));
               END;

    OnFindRecord=BEGIN
                   ProfileQuestionnaireLine2.COPY(Rec);

                   IF NOT ProfileQuestionnaireLine2.FIND(Which) THEN
                     EXIT(FALSE);

                   ProfileQuestLineQuestion := ProfileQuestionnaireLine2;
                   IF ProfileQuestionnaireLine2.Type = Type::Answer THEN
                     ProfileQuestLineQuestion.GET(ProfileQuestionnaireLine2."Profile Questionnaire Code",ProfileQuestLineQuestion.FindQuestionLine);

                   OK := TRUE;
                   IF ProfileQuestLineQuestion."Auto Contact Classification" THEN BEGIN
                     OK := FALSE;
                     REPEAT
                       IF Which = '+' THEN
                         GoNext := ProfileQuestionnaireLine2.NEXT(-1) <> 0
                       ELSE
                         GoNext := ProfileQuestionnaireLine2.NEXT(1) <> 0;
                       IF GoNext THEN BEGIN
                         ProfileQuestLineQuestion := ProfileQuestionnaireLine2;
                         IF ProfileQuestionnaireLine2.Type = Type::Answer THEN
                           ProfileQuestLineQuestion.GET(
                             ProfileQuestionnaireLine2."Profile Questionnaire Code",ProfileQuestLineQuestion.FindQuestionLine);
                         OK := NOT ProfileQuestLineQuestion."Auto Contact Classification";
                       END;
                     UNTIL (NOT GoNext) OR OK;
                   END;

                   IF NOT OK THEN
                     EXIT(FALSE);

                   Rec := ProfileQuestionnaireLine2;
                   EXIT(TRUE);
                 END;

    OnNextRecord=VAR
                   ActualSteps@1000 : Integer;
                   Step@1001 : Integer;
                   NoOneFound@1002 : Boolean;
                 BEGIN
                   ProfileQuestionnaireLine2.COPY(Rec);

                   IF Steps > 0 THEN
                     Step := 1
                   ELSE
                     Step := -1;

                   REPEAT
                     IF ProfileQuestionnaireLine2.NEXT(Step) <> 0 THEN BEGIN
                       IF ProfileQuestionnaireLine2.Type = Type::Answer THEN
                         ProfileQuestLineQuestion.GET(
                           ProfileQuestionnaireLine2."Profile Questionnaire Code",ProfileQuestionnaireLine2.FindQuestionLine);
                       IF ((NOT ProfileQuestLineQuestion."Auto Contact Classification") AND
                           (ProfileQuestionnaireLine2.Type = Type::Answer)) OR
                          ((ProfileQuestionnaireLine2.Type = Type::Question) AND (NOT ProfileQuestionnaireLine2."Auto Contact Classification"))
                       THEN BEGIN
                         ActualSteps := ActualSteps + Step;
                         IF Steps <> 0 THEN
                           Rec := ProfileQuestionnaireLine2;
                       END;
                     END ELSE
                       NoOneFound := TRUE
                   UNTIL (ActualSteps = Steps) OR NoOneFound;

                   EXIT(ActualSteps);
                 END;

    OnAfterGetRecord=BEGIN
                       Set := ContProfileAnswer.GET(Cont."No.","Profile Questionnaire Code","Line No.");

                       StyleIsStrong := Type = Type::Question;
                       IF Type <> Type::Question THEN
                         DescriptionIndent := 1
                       ELSE
                         DescriptionIndent := 0;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 11  ;1   ;Field     ;
                CaptionML=[ENU=Profile Questionnaire Code;
                           NOR=Profilsp›rreskjema - kode;
                           SVE=Profilfr†geformul„r kod];
                ToolTipML=[ENU=Specifies the profile questionnaire.;
                           NOR=Angir profilsp›rreskjemaet.;
                           SVE=Anger profilfr†geformul„ret.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=CurrentQuestionsChecklistCode;
                OnValidate=BEGIN
                             ProfileManagement.CheckName(CurrentQuestionsChecklistCode,Cont);
                             CurrentQuestionsChecklistCodeO;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           ProfileManagement.LookupName(CurrentQuestionsChecklistCode,Rec,Cont);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1   ;1   ;Group     ;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the entry is a question or an answer.;
                           NOR=Angir om posten er et sp›rsm†l eller et svar.;
                           SVE=Anger om posten „r en fr†ga eller ett svar.];
                ApplicationArea=#All;
                SourceExpr=Type;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=StyleIsStrong }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the profile question or answer.;
                           NOR=Angir profilsp›rsm†let eller -svaret.;
                           SVE=Anger profilfr†gor eller svar.];
                ApplicationArea=#All;
                SourceExpr=Description;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=StyleIsStrong }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of contacts that have given this answer.;
                           NOR=Angir hvor mange kontakter som har oppgitt dette svaret.;
                           SVE=Anger det antal kontakter som har gett det h„r svaret.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="No. of Contacts";
                Visible=FALSE }

    { 15  ;2   ;Field     ;
                CaptionML=[ENU=Set;
                           NOR=Valg;
                           SVE=Fr†gesvar];
                ToolTipML=[ENU=Specifies the answer to the question.;
                           NOR=Angir svaret p† sp›rsm†let.;
                           SVE=Anger svaret p† fr†gan.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Set;
                OnValidate=BEGIN
                             UpdateProfileAnswer;
                           END;
                            }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                ApplicationArea=#RecordLinks;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                ApplicationArea=#Notes;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Cont@1000 : Record 5050;
      ContProfileAnswer@1001 : Record 5089;
      ProfileQuestionnaireLine2@1008 : Record 5088;
      ProfileQuestLineQuestion@1009 : Record 5088;
      ProfileManagement@1002 : Codeunit 5059;
      CurrentQuestionsChecklistCode@1003 : Code[20];
      ContactProfileAnswerCode@1006 : Code[20];
      ContactProfileAnswerLine@1007 : Integer;
      Set@1004 : Boolean;
      GoNext@1010 : Boolean;
      OK@1011 : Boolean;
      CaptionStr@1005 : Text[260];
      RunFormCode@1012 : Boolean;
      StyleIsStrong@1013 : Boolean INDATASET;
      DescriptionIndent@19057867 : Integer INDATASET;

    [External]
    PROCEDURE SetParameters@1(VAR SetCont@1000 : Record 5050;SetProfileQuestionnaireCode@1001 : Code[20];SetContProfileAnswerCode@1003 : Code[20];SetContProfileAnswerLine@1002 : Integer);
    BEGIN
      Cont := SetCont;
      CurrentQuestionsChecklistCode := SetProfileQuestionnaireCode;
      ContactProfileAnswerCode := SetContProfileAnswerCode;
      ContactProfileAnswerLine := SetContProfileAnswerLine;
    END;

    [External]
    PROCEDURE UpdateProfileAnswer@2();
    BEGIN
      IF NOT RunFormCode AND Set THEN
        TESTFIELD(Type,Type::Answer);

      IF Set THEN BEGIN
        ContProfileAnswer.INIT;
        ContProfileAnswer."Contact No." := Cont."No.";
        ContProfileAnswer."Contact Company No." := Cont."Company No.";
        ContProfileAnswer.VALIDATE("Profile Questionnaire Code",CurrentQuestionsChecklistCode);
        ContProfileAnswer.VALIDATE("Line No.","Line No.");
        ContProfileAnswer."Last Date Updated" := TODAY;
        ContProfileAnswer.INSERT(TRUE);
      END ELSE
        IF ContProfileAnswer.GET(Cont."No.",CurrentQuestionsChecklistCode,"Line No.") THEN
          ContProfileAnswer.DELETE(TRUE);

      OnAfterUpdateProfileAnswer(Rec,xRec,Cont);
    END;

    [External]
    PROCEDURE SetRunFromForm@24(VAR ProfileQuestionnaireLine@1002 : Record 5088;ContactFrom@1000 : Record 5050;CurrQuestionsChecklistCodeFrom@1001 : Code[20]);
    BEGIN
      Set := TRUE;
      RunFormCode := TRUE;
      Cont := ContactFrom;
      CurrentQuestionsChecklistCode := CurrQuestionsChecklistCodeFrom;
      Rec := ProfileQuestionnaireLine;
    END;

    LOCAL PROCEDURE CurrentQuestionsChecklistCodeO@19076168();
    BEGIN
      CurrPage.SAVERECORD;
      ProfileManagement.SetName(CurrentQuestionsChecklistCode,Rec,0);
      CurrPage.UPDATE(FALSE);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterUpdateProfileAnswer@3(VAR ProfileQuestionnaireLine@1000 : Record 5088;VAR xProfileQuestionnaireLine@1001 : Record 5088;Contact@1002 : Record 5050);
    BEGIN
    END;

    BEGIN
    END.
  }
}

