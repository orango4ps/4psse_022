OBJECT Table 6661 Return Receipt Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.01,4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 32=r,
                TableData 5802=r;
    OnDelete=VAR
               SalesDocLineComments@1000 : Record 44;
             BEGIN
               SalesDocLineComments.SETRANGE("Document Type",SalesDocLineComments."Document Type"::"Posted Return Receipt");
               SalesDocLineComments.SETRANGE("No.","Document No.");
               SalesDocLineComments.SETRANGE("Document Line No.","Line No.");
               IF NOT SalesDocLineComments.ISEMPTY THEN
                 SalesDocLineComments.DELETEALL;
             END;

    CaptionML=[ENU=Return Receipt Line;
               NOR=Returseddellinje];
    LookupPageID=Page6663;
  }
  FIELDS
  {
    { 2   ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Sell-to Customer No.;
                                                              NOR=Salg til-kundenr.;
                                                              SVE=F”rs.kundnr];
                                                   Editable=No }
    { 3   ;   ;Document No.        ;Code20        ;TableRelation="Return Receipt Header";
                                                   CaptionML=[ENU=Document No.;
                                                              NOR=Bilagsnr.;
                                                              SVE=Dokumentnr] }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 5   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)";
                                                                    NOR=" ,Finanskonto,Vare,Ressurs,Aktiva,Gebyr (vare)";
                                                                    SVE=" ,Redov.konto,Artikel,Resurs,Anl.tillg†ng,Omkostnad (artikel)"];
                                                   OptionString=[ ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)] }
    { 6   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Type=CONST("Charge (Item)")) "Item Charge";
                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 7   ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              NOR=Lokasjonskode;
                                                              SVE=Lagerst„llekod] }
    { 8   ;   ;Posting Group       ;Code20        ;TableRelation=IF (Type=CONST(Item)) "Inventory Posting Group"
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "FA Posting Group";
                                                   CaptionML=[ENU=Posting Group;
                                                              NOR=Bokf›ringsgruppe;
                                                              SVE=Bokf”ringsmall];
                                                   Editable=No }
    { 10  ;   ;Shipment Date       ;Date          ;CaptionML=[ENU=Shipment Date;
                                                              NOR=Forsendelsesdato;
                                                              SVE=Utleveransdatum] }
    { 11  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 12  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2] }
    { 13  ;   ;Unit of Measure     ;Text50        ;CaptionML=[ENU=Unit of Measure;
                                                              NOR=Enhet;
                                                              SVE=M†ttenhet] }
    { 15  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5 }
    { 22  ;   ;Unit Price          ;Decimal       ;CaptionML=[ENU=Unit Price;
                                                              NOR=Salgspris;
                                                              SVE=A-pris];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 23  ;   ;Unit Cost (LCY)     ;Decimal       ;CaptionML=[ENU=Unit Cost (LCY);
                                                              NOR=Enhetskost (NOK);
                                                              SVE=Styckkostnad (BVA)];
                                                   AutoFormatType=2 }
    { 25  ;   ;VAT %               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              NOR=Mva-%;
                                                              SVE=Momssats %];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 27  ;   ;Line Discount %     ;Decimal       ;CaptionML=[ENU=Line Discount %;
                                                              NOR=Linjerabatt-%;
                                                              SVE=Radrabatt %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 32  ;   ;Allow Invoice Disc. ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Invoice Disc.;
                                                              NOR=Tillat fakturarabatt;
                                                              SVE=Ber„kna fakturarabatt] }
    { 34  ;   ;Gross Weight        ;Decimal       ;CaptionML=[ENU=Gross Weight;
                                                              NOR=Bruttovekt;
                                                              SVE=Bruttovikt];
                                                   DecimalPlaces=0:5 }
    { 35  ;   ;Net Weight          ;Decimal       ;CaptionML=[ENU=Net Weight;
                                                              NOR=Nettovekt;
                                                              SVE=Nettovikt];
                                                   DecimalPlaces=0:5 }
    { 36  ;   ;Units per Parcel    ;Decimal       ;CaptionML=[ENU=Units per Parcel;
                                                              NOR=Antall per kolli;
                                                              SVE=Antal per kolli];
                                                   DecimalPlaces=0:5 }
    { 37  ;   ;Unit Volume         ;Decimal       ;CaptionML=[ENU=Unit Volume;
                                                              NOR=Volum;
                                                              SVE=Volym];
                                                   DecimalPlaces=0:5 }
    { 38  ;   ;Appl.-to Item Entry ;Integer       ;AccessByPermission=TableData 27=R;
                                                   CaptionML=[ENU=Appl.-to Item Entry;
                                                              NOR=Utligningsvarepost;
                                                              SVE=Koppla till artikell”pnr] }
    { 39  ;   ;Item Rcpt. Entry No.;Integer       ;CaptionML=[ENU=Item Rcpt. Entry No.;
                                                              NOR=Varemottaksl›penr.;
                                                              SVE=L”pnr f”r artikelinleverans] }
    { 40  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              NOR=Snarveisdimensjon 1 - kode;
                                                              SVE=Genv„g dimension 1 kod];
                                                   CaptionClass='1,2,1' }
    { 41  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              NOR=Snarveisdimensjon 2 - kode;
                                                              SVE=Genv„g dimension 2 kod];
                                                   CaptionClass='1,2,2' }
    { 42  ;   ;Customer Price Group;Code10        ;TableRelation="Customer Price Group";
                                                   CaptionML=[ENU=Customer Price Group;
                                                              NOR=Kundeprisgruppe;
                                                              SVE=Kund prisgrupp] }
    { 45  ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Job No.;
                                                              NOR=Prosjektnr.;
                                                              SVE=Projektnr] }
    { 52  ;   ;Work Type Code      ;Code10        ;TableRelation="Work Type";
                                                   CaptionML=[ENU=Work Type Code;
                                                              NOR=Arbeidstypekode;
                                                              SVE=Arbetstypkod] }
    { 61  ;   ;Quantity Invoiced   ;Decimal       ;CaptionML=[ENU=Quantity Invoiced;
                                                              NOR=Fakturert (antall);
                                                              SVE=Fakturerat antal];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 68  ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              NOR=Faktura til-kundenr.;
                                                              SVE=Faktureringskundnr];
                                                   Editable=No }
    { 74  ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              NOR=Bokf›ringsgruppe - firma;
                                                              SVE=Gen. r”relsebokf”ringsmall] }
    { 75  ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              NOR=Bokf›ringsgruppe - vare;
                                                              SVE=Produktbokf”ringsmall] }
    { 77  ;   ;VAT Calculation Type;Option        ;CaptionML=[ENU=VAT Calculation Type;
                                                              NOR=Mva-beregningstype;
                                                              SVE=Momsber„kningstyp];
                                                   OptionCaptionML=[ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                                    NOR=Normal mva.,Snudd avregning,Full mva.,Salgsmva.;
                                                                    SVE=Normal moms,Omv„nd EG-moms,Enbart moms,Oms„ttningsskatt];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax }
    { 78  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=[ENU=Transaction Type;
                                                              NOR=Transaksjonsart;
                                                              SVE=EU transaktionstyp] }
    { 79  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=[ENU=Transport Method;
                                                              NOR=Transportm†te;
                                                              SVE=Transports„tt] }
    { 80  ;   ;Attached to Line No.;Integer       ;TableRelation="Return Receipt Line"."Line No." WHERE (Document No.=FIELD(Document No.));
                                                   CaptionML=[ENU=Attached to Line No.;
                                                              NOR=Knyttet til linjenr.;
                                                              SVE=Bifogad till radnr] }
    { 81  ;   ;Exit Point          ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=[ENU=Exit Point;
                                                              NOR=Utpunkt;
                                                              SVE=Utf”rselplats] }
    { 82  ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=[ENU=Area;
                                                              NOR=Omr†de;
                                                              SVE=Omr†de] }
    { 83  ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=[ENU=Transaction Specification;
                                                              NOR=Transaksjonsspesifikasjon;
                                                              SVE=EU transaktionsspecifikation] }
    { 85  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              NOR=Mva-omr†dekode;
                                                              SVE=Skatteomr†deskod] }
    { 86  ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              NOR=Skyldig mva.;
                                                              SVE=Skattepliktig] }
    { 87  ;   ;Tax Group Code      ;Code20        ;TableRelation="Tax Group";
                                                   CaptionML=[ENU=Tax Group Code;
                                                              NOR=Mva-gruppekode;
                                                              SVE=Skattegruppskod] }
    { 89  ;   ;VAT Bus. Posting Group;Code20      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              NOR=Mva-bokf›ringsgruppe - firma;
                                                              SVE=Moms r”relsebokf”ringsmall] }
    { 90  ;   ;VAT Prod. Posting Group;Code20     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              NOR=Mva-bokf›ringsgruppe - vare;
                                                              SVE=Moms produktbokf”ringsmall] }
    { 91  ;   ;Currency Code       ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Return Receipt Header"."Currency Code" WHERE (No.=FIELD(Document No.)));
                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod];
                                                   Editable=No }
    { 97  ;   ;Blanket Order No.   ;Code20        ;TableRelation="Sales Header".No. WHERE (Document Type=CONST(Blanket Order));
                                                   TestTableRelation=No;
                                                   AccessByPermission=TableData 6660=R;
                                                   CaptionML=[ENU=Blanket Order No.;
                                                              NOR=Rammebestillingsnr.;
                                                              SVE=Avropsordernr] }
    { 98  ;   ;Blanket Order Line No.;Integer     ;TableRelation="Sales Line"."Line No." WHERE (Document Type=CONST(Blanket Order),
                                                                                                Document No.=FIELD(Blanket Order No.));
                                                   TestTableRelation=No;
                                                   AccessByPermission=TableData 6660=R;
                                                   CaptionML=[ENU=Blanket Order Line No.;
                                                              NOR=Rammebestillingslinjenr.;
                                                              SVE=Avropsorder radnr] }
    { 99  ;   ;VAT Base Amount     ;Decimal       ;CaptionML=[ENU=VAT Base Amount;
                                                              NOR=Mva-grunnlagsbel›p;
                                                              SVE=Nettobelopp];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 100 ;   ;Unit Cost           ;Decimal       ;CaptionML=[ENU=Unit Cost;
                                                              NOR=Enhetskost;
                                                              SVE=Styckkostnad];
                                                   Editable=No;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 131 ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              NOR=Bokf›ringsdato;
                                                              SVE=Bokf”ringsdatum] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              NOR=Dimensjonssett-ID;
                                                              SVE=Dimensionsupps„ttnings-ID];
                                                   Editable=No }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              NOR=Variantkode;
                                                              SVE=Variantkod] }
    { 5403;   ;Bin Code            ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Location Code),
                                                                                 Item Filter=FIELD(No.),
                                                                                 Variant Filter=FIELD(Variant Code));
                                                   CaptionML=[ENU=Bin Code;
                                                              NOR=Hyllekode;
                                                              SVE=Lagerplatskod] }
    { 5404;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=[ENU=Qty. per Unit of Measure;
                                                              NOR=Antall per enhet;
                                                              SVE=Antal per enhet];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5407;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              NOR=Enhetskode;
                                                              SVE=Enhetskod] }
    { 5415;   ;Quantity (Base)     ;Decimal       ;CaptionML=[ENU=Quantity (Base);
                                                              NOR=Antall (lagerenhet);
                                                              SVE=Antal (bas)];
                                                   DecimalPlaces=0:5 }
    { 5461;   ;Qty. Invoiced (Base);Decimal       ;CaptionML=[ENU=Qty. Invoiced (Base);
                                                              NOR=Antall fakturert (lagerenhet);
                                                              SVE=Fakturerat antal (bas)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5600;   ;FA Posting Date     ;Date          ;CaptionML=[ENU=FA Posting Date;
                                                              NOR=Aktivabokf.dato;
                                                              SVE=Anl. bokf”ringsdatum] }
    { 5602;   ;Depreciation Book Code;Code10      ;TableRelation="Depreciation Book";
                                                   CaptionML=[ENU=Depreciation Book Code;
                                                              NOR=Avskrivningstabl†kode;
                                                              SVE=Avskrivningsregelkod] }
    { 5605;   ;Depr. until FA Posting Date;Boolean;CaptionML=[ENU=Depr. until FA Posting Date;
                                                              NOR=Avskr. frem til aktivabokf.dato;
                                                              SVE=Avskr. till anl. bokf.datum] }
    { 5612;   ;Duplicate in Depreciation Book;Code10;
                                                   TableRelation="Depreciation Book";
                                                   CaptionML=[ENU=Duplicate in Depreciation Book;
                                                              NOR=Duplikat i avskrivningstabl†;
                                                              SVE=Dubblett i avskrivningsregel] }
    { 5613;   ;Use Duplication List;Boolean       ;CaptionML=[ENU=Use Duplication List;
                                                              NOR=Bruk duplikatoversikt;
                                                              SVE=Anv„nd dubblettlista] }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   ValidateTableRelation=Yes;
                                                   CaptionML=[ENU=Responsibility Center;
                                                              NOR=Ansvarssenter;
                                                              SVE=Ansvarsenhet] }
    { 5705;   ;Cross-Reference No. ;Code20        ;AccessByPermission=TableData 5717=R;
                                                   CaptionML=[ENU=Cross-Reference No.;
                                                              NOR=Kryssreferansenr.;
                                                              SVE=Tv„rreferensnr] }
    { 5706;   ;Unit of Measure (Cross Ref.);Code10;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Unit of Measure (Cross Ref.);
                                                              NOR=Enhet (kryssref.);
                                                              SVE=Enhet (tv„rref.)] }
    { 5707;   ;Cross-Reference Type;Option        ;CaptionML=[ENU=Cross-Reference Type;
                                                              NOR=Kryssreferansetype;
                                                              SVE=Tv„rreferens typ];
                                                   OptionCaptionML=[ENU=" ,Customer,Vendor,Bar Code";
                                                                    NOR=" ,Kunde,Leverand›r,Strekkode";
                                                                    SVE=" ,Kund,Leverant”r,Streckkod"];
                                                   OptionString=[ ,Customer,Vendor,Bar Code] }
    { 5708;   ;Cross-Reference Type No.;Code30    ;CaptionML=[ENU=Cross-Reference Type No.;
                                                              NOR=Kryssreferansetypenr.;
                                                              SVE=Tv„rreferens typnr] }
    { 5709;   ;Item Category Code  ;Code20        ;TableRelation=IF (Type=CONST(Item)) "Item Category";
                                                   CaptionML=[ENU=Item Category Code;
                                                              NOR=Varekategorikode;
                                                              SVE=Artikelkategorikod] }
    { 5710;   ;Nonstock            ;Boolean       ;CaptionML=[ENU=Catalog;
                                                              NOR=Katalog;
                                                              SVE=Ej lagerf”rd] }
    { 5711;   ;Purchasing Code     ;Code10        ;TableRelation=Purchasing;
                                                   CaptionML=[ENU=Purchasing Code;
                                                              NOR=Kj›pskode;
                                                              SVE=Ink”pskod] }
    { 5712;   ;Product Group Code  ;Code10        ;TableRelation="Product Group".Code WHERE (Item Category Code=FIELD(Item Category Code));
                                                   ValidateTableRelation=No;
                                                   ObsoleteState=Removed;
                                                   ObsoleteReason=Product Groups became first level children of Item Categories.;
                                                   CaptionML=[ENU=Product Group Code;
                                                              NOR=Produktgruppekode;
                                                              SVE=Produktgruppkod] }
    { 5805;   ;Return Qty. Rcd. Not Invd.;Decimal ;CaptionML=[ENU=Return Qty. Rcd. Not Invd.;
                                                              NOR=Returant. mottatt, ikke fakt.;
                                                              SVE=Inlevrd. returantal ej faktrd];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5811;   ;Appl.-from Item Entry;Integer      ;AccessByPermission=TableData 27=R;
                                                   CaptionML=[ENU=Appl.-from Item Entry;
                                                              NOR=Utlignet fra-varepost;
                                                              SVE=Koppla fr†n artikell”pnr];
                                                   MinValue=0 }
    { 5812;   ;Item Charge Base Amount;Decimal    ;CaptionML=[ENU=Item Charge Base Amount;
                                                              NOR=Varegebyrgrunnlag;
                                                              SVE=Art.omkost. nettobelopp];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 5817;   ;Correction          ;Boolean       ;CaptionML=[ENU=Correction;
                                                              NOR=Korreksjon;
                                                              SVE=R„ttningstransaktion];
                                                   Editable=No }
    { 6602;   ;Return Order No.    ;Code20        ;CaptionML=[ENU=Return Order No.;
                                                              NOR=Ordrereturnr.;
                                                              SVE=Returordernr];
                                                   Editable=No }
    { 6603;   ;Return Order Line No.;Integer      ;CaptionML=[ENU=Return Order Line No.;
                                                              NOR=Ordrereturlinjenr.];
                                                   Editable=No }
    { 6608;   ;Return Reason Code  ;Code10        ;TableRelation="Return Reason";
                                                   CaptionML=[ENU=Return Reason Code;
                                                              NOR=Retur†rsakskode;
                                                              SVE=Returorsakskod] }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Line Disc.;
                                                              NOR=Tillat linjerabatt;
                                                              SVE=Till†t radrabatt] }
    { 7002;   ;Customer Disc. Group;Code20        ;TableRelation="Customer Discount Group";
                                                   CaptionML=[ENU=Customer Disc. Group;
                                                              NOR=Kunderabattgruppe;
                                                              SVE=Kundrabattgrupp] }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;Clustered=Yes }
    {    ;Return Order No.,Return Order Line No.   }
    {    ;Blanket Order No.,Blanket Order Line No. }
    {    ;Item Rcpt. Entry No.                     }
    {    ;Bill-to Customer No.                     }
    {    ;Sell-to Customer No.                     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Currency@1000 : Record 4;
      ReturnRcptHeader@1005 : Record 6660;
      Text000@1003 : TextConst 'ENU=Return Receipt No. %1:;NOR=Returseddelnr. %1:';
      Text001@1002 : TextConst 'ENU=The program cannot find this purchase line.;NOR=Programmet finner ikke denne bestillingslinjen.;SVE=Programmet kan inte hitta denna ink”psrad.';
      LanguageManagement@1001 : Codeunit 43;
      CurrencyRead@1004 : Boolean;
      gCreateNotPostedInvFromOrder@1210190001 : Boolean;
      gQtyToInvoice@1210190000 : Decimal;
      DPA_Management@1100000999 : Codeunit 11012783;

    [External]
    PROCEDURE GetCurrencyCode@1() : Code[10];
    BEGIN
      IF "Document No." = ReturnRcptHeader."No." THEN
        EXIT(ReturnRcptHeader."Currency Code");
      IF ReturnRcptHeader.GET("Document No.") THEN
        EXIT(ReturnRcptHeader."Currency Code");
      EXIT('');
    END;

    [External]
    PROCEDURE ShowDimensions@25();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2 %3',TABLECAPTION,"Document No.","Line No."));
    END;

    [External]
    PROCEDURE ShowItemTrackingLines@3();
    VAR
      ItemTrackingDocMgt@1000 : Codeunit 6503;
    BEGIN
      ItemTrackingDocMgt.ShowItemTrackingForShptRcptLine(DATABASE::"Return Receipt Line",0,"Document No.",'',0,"Line No.");
    END;

    [External]
    PROCEDURE InsertInvLineFromRetRcptLine@2(VAR SalesLine@1000 : Record 37;lvCopyComment@1210190000 : Boolean);
    VAR
      SalesHeader@1011 : Record 36;
      SalesHeader2@1012 : Record 36;
      SalesOrderHeader@1010 : Record 36;
      SalesOrderLine@1005 : Record 37;
      TempSalesLine@1002 : TEMPORARY Record 37;
      SalesSetup@1020 : Record 311;
      SalesCommentLine@1100525000 : Record 44;
      TransferOldExtLines@1007 : Codeunit 379;
      ItemTrackingMgt@1008 : Codeunit 6500;
      ExtTextLine@1006 : Boolean;
      NextLineNo@1001 : Integer;
      IsHandled@1003 : Boolean;
    BEGIN
      SETRANGE("Document No.","Document No.");

      TempSalesLine := SalesLine;
      IF SalesLine.FIND('+') THEN
        NextLineNo := SalesLine."Line No." + 10000
      ELSE
        NextLineNo := 10000;

      IF SalesHeader."No." <> TempSalesLine."Document No." THEN
        SalesHeader.GET(TempSalesLine."Document Type",TempSalesLine."Document No.");

      //IF SalesLine."Return Receipt No." <> "Document No." THEN BEGIN  //**4PS.o
      IF (SalesLine."Return Receipt No." <> "Document No.") AND (NOT gCreateNotPostedInvFromOrder) THEN BEGIN  //**4PS.n
        SalesLine.INIT;
        SalesLine."Line No." := NextLineNo;
        SalesLine."Document Type" := TempSalesLine."Document Type";
        SalesLine."Document No." := TempSalesLine."Document No.";
        LanguageManagement.SetGlobalLanguageByCode(SalesHeader."Language Code");
        SalesLine.Description := STRSUBSTNO(Text000,"Document No.");
        LanguageManagement.RestoreGlobalLanguage;
        IsHandled := FALSE;
        OnBeforeInsertInvLineFromRetRcptLineBeforeInsertTextLine(Rec,SalesLine,NextLineNo,IsHandled);
        IF NOT IsHandled THEN BEGIN
          SalesLine.INSERT;
          NextLineNo := NextLineNo + 10000;
        END;
      END;

      TransferOldExtLines.ClearLineNumbers;
      SalesSetup.GET;
      REPEAT
        ExtTextLine := (TransferOldExtLines.GetNewLineNumber("Attached to Line No.") <> 0);

        IF NOT SalesOrderLine.GET(
             SalesOrderLine."Document Type"::"Return Order","Return Order No.","Return Order Line No.")
        THEN BEGIN
          IF ExtTextLine THEN BEGIN
            SalesOrderLine.INIT;
            SalesOrderLine."Line No." := "Return Order Line No.";
            SalesOrderLine.Description := Description;
            SalesOrderLine."Description 2" := "Description 2";
          END  ELSE
            ERROR(Text001);
        END ELSE BEGIN
          IF (SalesHeader2."Document Type" <> SalesOrderLine."Document Type"::"Return Order") OR
             (SalesHeader2."No." <> SalesOrderLine."Document No.")
          THEN
            SalesHeader2.GET(SalesOrderLine."Document Type"::"Return Order","Return Order No.");

          InitCurrency("Currency Code");

          IF SalesHeader."Prices Including VAT" THEN BEGIN
            IF NOT SalesHeader2."Prices Including VAT" THEN
              SalesOrderLine."Unit Price" :=
                ROUND(
                  SalesOrderLine."Unit Price" * (1 + SalesOrderLine."VAT %" / 100),
                  Currency."Unit-Amount Rounding Precision");
          END ELSE BEGIN
            IF SalesHeader2."Prices Including VAT" THEN
              SalesOrderLine."Unit Price" :=
                ROUND(
                  SalesOrderLine."Unit Price" / (1 + SalesOrderLine."VAT %" / 100),
                  Currency."Unit-Amount Rounding Precision");
          END;
        END;
        SalesLine := SalesOrderLine;
        SalesLine."Line No." := NextLineNo;
        SalesLine."Document Type" := TempSalesLine."Document Type";
        SalesLine."Document No." := TempSalesLine."Document No.";
        SalesLine."Variant Code" := "Variant Code";
        SalesLine."Location Code" := "Location Code";
        SalesLine."Return Reason Code" := "Return Reason Code";
        SalesLine."Quantity (Base)" := 0;
        SalesLine.Quantity := 0;
        SalesLine."Outstanding Qty. (Base)" := 0;
        SalesLine."Outstanding Quantity" := 0;
        SalesLine."Return Qty. Received" := 0;
        SalesLine."Return Qty. Received (Base)" := 0;
        SalesLine."Quantity Invoiced" := 0;
        SalesLine."Qty. Invoiced (Base)" := 0;
        SalesLine."Drop Shipment" := FALSE;
        SalesLine."Return Receipt No." := "Document No.";
        SalesLine."Return Receipt Line No." := "Line No.";
        SalesLine."Appl.-to Item Entry" := 0;
        SalesLine."Appl.-from Item Entry" := 0;
        OnAfterCopyFieldsFromReturnReceiptLine(Rec,SalesLine);

        IF NOT ExtTextLine THEN BEGIN
          //SalesLine.VALIDATE(Quantity,Quantity - "Quantity Invoiced");  //**4PS.o
          //**4PS.sn
          IF NOT gCreateNotPostedInvFromOrder THEN
            SalesLine.VALIDATE(Quantity,Quantity - "Quantity Invoiced")
          ELSE
            SalesLine.VALIDATE(Quantity,gQtyToInvoice);
          //**4PS.en
          SalesLine.VALIDATE("Unit Price",SalesOrderLine."Unit Price");
          SalesLine."Allow Line Disc." := SalesOrderLine."Allow Line Disc.";
          SalesLine."Allow Invoice Disc." := SalesOrderLine."Allow Invoice Disc.";
          SalesLine.VALIDATE("Line Discount %",SalesOrderLine."Line Discount %");
          IF SalesOrderLine.Quantity = 0 THEN
            SalesLine.VALIDATE("Inv. Discount Amount",0)
          ELSE
            SalesLine.VALIDATE(
              "Inv. Discount Amount",
              ROUND(
                SalesOrderLine."Inv. Discount Amount" * SalesLine.Quantity / SalesOrderLine.Quantity,
                Currency."Amount Rounding Precision"));
        END;
        SalesLine."Attached to Line No." :=
          TransferOldExtLines.TransferExtendedText(
            SalesOrderLine."Line No.",
            NextLineNo,
            "Attached to Line No.");
        SalesLine."Shortcut Dimension 1 Code" := SalesOrderLine."Shortcut Dimension 1 Code";
        SalesLine."Shortcut Dimension 2 Code" := SalesOrderLine."Shortcut Dimension 2 Code";
        SalesLine."Dimension Set ID" := SalesOrderLine."Dimension Set ID";

        OnBeforeInsertInvLineFromRetRcptLine(SalesLine,SalesOrderLine,Rec);
        SalesLine.INSERT;
        OnAftertInsertInvLineFromRetRcptLine(SalesLine,SalesOrderLine);

      //M28272 sn
        IF lvCopyComment THEN
          SalesCommentLine.CopySingleCommentLines(SalesOrderLine."Document Type"::"Return Order", SalesLine."Document Type",
            SalesOrderLine."Document No.", SalesLine."Document No.",
            SalesOrderLine."Line No.", SalesLine."Line No.");
         lvCopyComment := FALSE;     //**copy only once per sales order line
      //M28272 sn

        ItemTrackingMgt.CopyHandledItemTrkgToInvLine(SalesOrderLine,SalesLine);

        NextLineNo := NextLineNo + 10000;
        IF "Attached to Line No." = 0 THEN
          SETRANGE("Attached to Line No.","Line No.");

      UNTIL (NEXT = 0) OR ("Attached to Line No." = 0);

      IF NOT gCreateNotPostedInvFromOrder THEN  //**4PS.n   Do not modify 'Order Header', gives problems in SQL
        IF SalesOrderHeader.GET(SalesOrderHeader."Document Type"::Order,"Return Order No.") THEN BEGIN
          SalesOrderHeader."Get Shipment Used" := TRUE;
          SalesOrderHeader.MODIFY;
        END;
    END;

    LOCAL PROCEDURE GetSalesCrMemoLines@4(VAR TempSalesCrMemoLine@1000 : TEMPORARY Record 115);
    VAR
      SalesCrMemoLine@1003 : Record 115;
      ItemLedgEntry@1002 : Record 32;
      ValueEntry@1001 : Record 5802;
    BEGIN
      TempSalesCrMemoLine.RESET;
      TempSalesCrMemoLine.DELETEALL;

      IF Type <> Type::Item THEN
        EXIT;

      FilterPstdDocLnItemLedgEntries(ItemLedgEntry);
      ItemLedgEntry.SETFILTER("Invoiced Quantity",'<>0');
      IF ItemLedgEntry.FINDSET THEN BEGIN
        ValueEntry.SETCURRENTKEY("Item Ledger Entry No.","Entry Type");
        ValueEntry.SETRANGE("Entry Type",ValueEntry."Entry Type"::"Direct Cost");
        ValueEntry.SETFILTER("Invoiced Quantity",'<>0');
        REPEAT
          ValueEntry.SETRANGE("Item Ledger Entry No.",ItemLedgEntry."Entry No.");
          IF ValueEntry.FINDSET THEN
            REPEAT
              IF ValueEntry."Document Type" = ValueEntry."Document Type"::"Sales Credit Memo" THEN
                IF SalesCrMemoLine.GET(ValueEntry."Document No.",ValueEntry."Document Line No.") THEN BEGIN
                  TempSalesCrMemoLine.INIT;
                  TempSalesCrMemoLine := SalesCrMemoLine;
                  IF TempSalesCrMemoLine.INSERT THEN;
                END;
            UNTIL ValueEntry.NEXT = 0;
        UNTIL ItemLedgEntry.NEXT = 0;
      END;
    END;

    [External]
    PROCEDURE FilterPstdDocLnItemLedgEntries@6(VAR ItemLedgEntry@1000 : Record 32);
    BEGIN
      ItemLedgEntry.RESET;
      ItemLedgEntry.SETCURRENTKEY("Document No.");
      ItemLedgEntry.SETRANGE("Document No.","Document No.");
      ItemLedgEntry.SETRANGE("Document Type",ItemLedgEntry."Document Type"::"Sales Return Receipt");
      ItemLedgEntry.SETRANGE("Document Line No.","Line No.");
    END;

    [External]
    PROCEDURE ShowItemSalesCrMemoLines@9();
    VAR
      TempSalesCrMemoLine@1000 : TEMPORARY Record 115;
    BEGIN
      IF Type = Type::Item THEN BEGIN
        GetSalesCrMemoLines(TempSalesCrMemoLine);
        PAGE.RUNMODAL(0,TempSalesCrMemoLine);
      END;
    END;

    LOCAL PROCEDURE InitCurrency@7(CurrencyCode@1001 : Code[10]);
    BEGIN
      IF (Currency.Code = CurrencyCode) AND CurrencyRead THEN
        EXIT;

      IF CurrencyCode <> '' THEN
        Currency.GET(CurrencyCode)
      ELSE
        Currency.InitRoundingPrecision;
      CurrencyRead := TRUE;
    END;

    [External]
    PROCEDURE ShowLineComments@5();
    VAR
      SalesCommentLine@1000 : Record 44;
    BEGIN
      SalesCommentLine.ShowComments(SalesCommentLine."Document Type"::"Posted Return Receipt","Document No.","Line No.");
    END;

    [External]
    PROCEDURE InitFromSalesLine@10(ReturnRcptHeader@1001 : Record 6660;SalesLine@1002 : Record 37);
    BEGIN
      INIT;
      TRANSFERFIELDS(SalesLine);
      IF ("No." = '') AND (Type IN [Type::"G/L Account"..Type::"Charge (Item)"]) THEN
        Type := Type::" ";
      "Posting Date" := ReturnRcptHeader."Posting Date";
      "Document No." := ReturnRcptHeader."No.";
      Quantity := SalesLine."Return Qty. to Receive";
      "Quantity (Base)" := SalesLine."Return Qty. to Receive (Base)";
      IF ABS(SalesLine."Qty. to Invoice") > ABS(SalesLine."Return Qty. to Receive") THEN BEGIN
        "Quantity Invoiced" := SalesLine."Return Qty. to Receive";
        "Qty. Invoiced (Base)" := SalesLine."Return Qty. to Receive (Base)";
      END ELSE BEGIN
        "Quantity Invoiced" := SalesLine."Qty. to Invoice";
        "Qty. Invoiced (Base)" := SalesLine."Qty. to Invoice (Base)";
      END;
      "Return Qty. Rcd. Not Invd." :=
        Quantity - "Quantity Invoiced";
      IF SalesLine."Document Type" = SalesLine."Document Type"::"Return Order" THEN BEGIN
        "Return Order No." := SalesLine."Document No.";
        "Return Order Line No." := SalesLine."Line No.";
      END;

      OnAfterInitFromSalesLine(ReturnRcptHeader,SalesLine,Rec);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCopyFieldsFromReturnReceiptLine@13(VAR ReturnReceiptLine@1000 : Record 6661;VAR SalesLine@1001 : Record 37);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterInitFromSalesLine@8(ReturnRcptHeader@1000 : Record 6660;SalesLine@1001 : Record 37;VAR ReturnRcptLine@1002 : Record 6661);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAftertInsertInvLineFromRetRcptLine@19(VAR SalesLine@1000 : Record 37;VAR SalesOrderLine@1001 : Record 37);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeInsertInvLineFromRetRcptLine@11(VAR SalesLine@1000 : Record 37;SalesOrderLine@1001 : Record 37;VAR ReturnReceiptLine@1002 : Record 6661);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeInsertInvLineFromRetRcptLineBeforeInsertTextLine@12(VAR ReturnReceiptLine@1000 : Record 6661;VAR SalesLine@1001 : Record 37;VAR NextLineNo@1002 : Integer;VAR IsHandled@1003 : Boolean);
    BEGIN
    END;

    PROCEDURE LineCommentPresent@1210190001() : Boolean;
    VAR
      SalesCommentLine@1210190000 : Record 44;
    BEGIN
      //**4PS 22575
      EXIT(SalesCommentLine.CommentPresent(SalesCommentLine."Document Type"::"Posted Return Receipt", "Document No.", "Line No."));
    END;

    PROCEDURE SetCreateNotPostedInvFromOrder@1100525000(iQtyToInvoice@1100525000 : Decimal);
    BEGIN
      //**4PS
      gCreateNotPostedInvFromOrder := TRUE;
      gQtyToInvoice := iQtyToInvoice;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(6661) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 6661');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Return Receipt Line", "Shortcut Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Shortcut Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Shortcut Dimension 1 Code");
    END;

    BEGIN
    {
      4PS: Same as in T111
    }
    END.
  }
}

