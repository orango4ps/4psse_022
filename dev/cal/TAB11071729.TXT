OBJECT Table 11071729 Planning Agreement
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Planning Agreement;
               NOR=Planleggingsavtale;
               SVE=Planeringsavtal];
    LookupPageID=Page11125228;
    DrillDownPageID=Page11125228;
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 20  ;   ;Description         ;Text30        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 30  ;   ;Starting Time       ;Time          ;OnLookup=BEGIN
                                                              CheckTime;
                                                            END;

                                                   CaptionML=[ENU=Starting Time;
                                                              NOR=Starttidspunkt;
                                                              SVE=Starttid] }
    { 40  ;   ;Ending Time         ;Time          ;OnValidate=BEGIN
                                                                CheckTime;
                                                              END;

                                                   CaptionML=[ENU=Ending Time;
                                                              NOR=Sluttidspunkt;
                                                              SVE=Sluttid] }
    { 50  ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[ENU=Plan,Appointment Letter,Both;
                                                                    NOR=Plan,M›tebrev,Begge;
                                                                    SVE=Plan,M”tesbrev,B†da];
                                                   OptionString=Plan,Appointment Letter,Both }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Starting Time,Ending Time                }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Description,Starting Time,Ending Time }
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=%1 may not exceed %2;NOR=%1 kan ikke overskride %2;SVE=%1 f†r inte ”verskrida %2';

    PROCEDURE CheckTime@1100528601();
    BEGIN
      IF ("Starting Time" <> 0T) AND ("Ending Time" <> 0T) AND ("Ending Time" <> 000000T) THEN
        IF "Ending Time" < "Starting Time" THEN
          ERROR(Text000, FIELDCAPTION("Ending Time"), FIELDCAPTION("Starting Time"));
    END;

    PROCEDURE GetPlanningAgreementTimes@1100528604(IStartingTime@1100528602 : Time;VAR OFromTime@1100528600 : Time;VAR OToTime@1100528601 : Time);
    VAR
      PlanningAgreement@1100528603 : Record 11071729;
      PlanningAgreementCode@1100528604 : Code[10];
    BEGIN
      PlanningAgreementCode := GetPlanningAgreementCode(IStartingTime);
      IF PlanningAgreement.GET(PlanningAgreementCode) THEN BEGIN
        OFromTime := PlanningAgreement."Starting Time";
        OToTime := PlanningAgreement."Ending Time";
      END;
    END;

    PROCEDURE GetPlanningAgreementCode@1100528600(IStartingTime@1100528602 : Time) : Code[10];
    VAR
      PlanningAgreement@1100528603 : Record 11071729;
    BEGIN
      PlanningAgreement.SETCURRENTKEY("Starting Time", "Ending Time");
      PlanningAgreement.SETFILTER(Type, '%1|%2', PlanningAgreement.Type::Plan, PlanningAgreement.Type::Both);
      PlanningAgreement.SETFILTER("Starting Time", '<=%1', IStartingTime);
      PlanningAgreement.SETFILTER("Ending Time", '>=%1', IStartingTime);
      IF PlanningAgreement.FINDLAST THEN
        EXIT(PlanningAgreement.Code);
    END;

    PROCEDURE GetPlanningAgreement@1100528602(IStartingTime@1100528602 : Time) : Boolean;
    VAR
      PlanningAgreementCode@1100528604 : Code[10];
    BEGIN
      PlanningAgreementCode := GetPlanningAgreementCode(IStartingTime);
      IF NOT GET(PlanningAgreementCode) THEN BEGIN
        INIT;
        EXIT(FALSE);
      END ELSE
        EXIT(TRUE);
    END;

    PROCEDURE GetShortStartingTime@1100528661(ILanguageID@1100528600 : Integer) : Text;
    BEGIN
      EXIT(GetShortTime(ILanguageID, "Starting Time"));
    END;

    PROCEDURE GetShortEndingTime@1100528662(ILanguageID@1100528600 : Integer) : Text;
    BEGIN
      EXIT(GetShortTime(ILanguageID, "Ending Time"));
    END;

    LOCAL PROCEDURE GetShortTime@1100528663(ILanguageID@1100528600 : Integer;ITime@1100528601 : Time) : Text;
    BEGIN
      CASE ILanguageID OF
        1033:
          EXIT(FORMAT(ITime, 0, '<Hours12>.<Minutes,2> <AM/PM>'));
        1043:
          EXIT(FORMAT(ITime, 0, '<Hours24>.<Minutes,2>'));
      ELSE
        EXIT(FORMAT(ITime, 0, '<Hours24>.<Minutes,2>'));
      END;
    END;

    BEGIN
    END.
  }
}

