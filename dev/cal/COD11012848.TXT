OBJECT Codeunit 11012848 Object Specification Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ServiceOrderInspectionLineNo@1100528601 : Integer;

    PROCEDURE CreateSOSpecificationLines@1100528600(IServiceOrderNo@1100528600 : Code[20];IServiceObjectNo@1100528604 : Code[20]);
    VAR
      TmpServiceOrderObjSpecLine@1100528601 : TEMPORARY Record 11071782;
    BEGIN
      CollectTmpSpecLines(IServiceObjectNo, TRUE, TmpServiceOrderObjSpecLine);
      HandleTmpSpecLines(IServiceOrderNo, TmpServiceOrderObjSpecLine);
    END;

    PROCEDURE DeleteSOSpecificationLines@1100528603(IServiceOrderNo@1100528602 : Code[20];IServiceObjectNo@1100528601 : Code[20]);
    VAR
      ServiceOrderObjSpecLine@1100528603 : Record 11071782;
    BEGIN
      ServiceOrderObjSpecLine.SETRANGE("Service Order No.", IServiceOrderNo);
      ServiceOrderObjSpecLine.SETRANGE("Service Object No.", IServiceObjectNo);
      ServiceOrderObjSpecLine.DELETEALL(TRUE);
    END;

    LOCAL PROCEDURE CopyTmpSpecificationLines@1100528602(IServiceObjectNo@1100528607 : Code[20];ISpecificationType@1100528604 : Option;ICode@1100528602 : Code[20];IFilterVisibleforFieldService@1210190000 : Boolean;VAR OTmpServiceOrderObjSpecLine@1100528600 : TEMPORARY Record 11071782);
    VAR
      ObjectSpecificationLine@1100528601 : Record 11071781;
      Decoded@1100525000 : Boolean;
      BORGManagement@1100528000 : Codeunit 11012859;
    BEGIN
      ObjectSpecificationLine.SETRANGE("Specification Type", ISpecificationType);
      ObjectSpecificationLine.SETRANGE(Code, ICode);
      IF (IServiceObjectNo <> ICode) AND (ISpecificationType <> ObjectSpecificationLine."Specification Type"::Object) THEN
        ObjectSpecificationLine.SETRANGE("Object Level", FALSE);
      IF NOT ObjectSpecificationLine.FINDSET THEN EXIT;
      REPEAT
        ObjectSpecificationLine.CALCFIELDS("Visible for Field Service", "Editable by Field Service", "Publish on Service Portal");
        IF ((NOT IFilterVisibleforFieldService OR ObjectSpecificationLine."Visible for Field Service") OR
            (ObjectSpecificationLine.Type = ObjectSpecificationLine.Type::Group)) AND
          NOT TmpSOSpecificationLineExists(ObjectSpecificationLine, OTmpServiceOrderObjSpecLine) THEN BEGIN
          OTmpServiceOrderObjSpecLine.INIT;
          OTmpServiceOrderObjSpecLine."Service Order No." := '';
          OTmpServiceOrderObjSpecLine."Service Object No." := IServiceObjectNo;
          ServiceOrderInspectionLineNo += 10000;
          OTmpServiceOrderObjSpecLine."Line No." := ServiceOrderInspectionLineNo;
          IF (ISpecificationType = ObjectSpecificationLine."Specification Type"::"Object Line") AND NOT ObjectSpecificationLine."Object Level" THEN
            OTmpServiceOrderObjSpecLine."Specification Type" := ObjectSpecificationLine."Specification Type"::"Standard Object"
          ELSE
            OTmpServiceOrderObjSpecLine."Specification Type" := ObjectSpecificationLine."Specification Type";
          OTmpServiceOrderObjSpecLine.Code := ObjectSpecificationLine.Code;
          OTmpServiceOrderObjSpecLine."Specification Line No." := ObjectSpecificationLine."Line No.";
          OTmpServiceOrderObjSpecLine.Type := ObjectSpecificationLine.Type;
          OTmpServiceOrderObjSpecLine."Specification Code" := ObjectSpecificationLine."Specification Code";
          OTmpServiceOrderObjSpecLine.Description := ObjectSpecificationLine.Description;
          OTmpServiceOrderObjSpecLine."Field Type" := ObjectSpecificationLine."Field Type";
          OTmpServiceOrderObjSpecLine."Unit Of Measure" := ObjectSpecificationLine."Unit Of Measure";
          IF OTmpServiceOrderObjSpecLine.Type = OTmpServiceOrderObjSpecLine.Type::Line THEN
            OTmpServiceOrderObjSpecLine."Specification Group Code" := ObjectSpecificationLine.GetObjSpecificationGroupCode()
          ELSE
            OTmpServiceOrderObjSpecLine."Specification Group Code" := ObjectSpecificationLine."Specification Code";
          IF NOT ObjectSpecificationLine.BORG THEN BEGIN
            OTmpServiceOrderObjSpecLine."Old Value" := ObjectSpecificationLine.GetValue(Decoded);
            IF OTmpServiceOrderObjSpecLine."Field Type" <> OTmpServiceOrderObjSpecLine."Field Type"::Option THEN
              OTmpServiceOrderObjSpecLine.VALIDATE("Old Value");
          END ELSE
            OTmpServiceOrderObjSpecLine."Old Value" := ObjectSpecificationLine.Value;
          OTmpServiceOrderObjSpecLine."Editable by Field Service" := ObjectSpecificationLine."Editable by Field Service";
          OTmpServiceOrderObjSpecLine."Publish on Service Portal" := ObjectSpecificationLine."Publish on Service Portal";
          OTmpServiceOrderObjSpecLine.BORG := ObjectSpecificationLine.BORG;
          OTmpServiceOrderObjSpecLine.INSERT;
        END;
      UNTIL ObjectSpecificationLine.NEXT = 0;
    END;

    PROCEDURE CollectTmpSpecLines@1100528605(IServiceObjectNo@1100528605 : Code[20];IFilterVisibleforFieldService@1210190000 : Boolean;VAR OTmpServiceOrderObjSpecLine@1100528604 : TEMPORARY Record 11071782);
    VAR
      ServiceObject@1100528602 : Record 11071691;
      ObjectSpecificationLine@1100528601 : Record 11071781;
    BEGIN
      IF NOT OTmpServiceOrderObjSpecLine.ISTEMPORARY THEN
        EXIT;
      OTmpServiceOrderObjSpecLine.RESET;
      OTmpServiceOrderObjSpecLine.DELETEALL;

      IF (IServiceObjectNo <> '') AND ServiceObject.GET(IServiceObjectNo) THEN BEGIN
        IF ServiceObject."Standard Object No." <> '' THEN BEGIN
          CopyTmpSpecificationLines(IServiceObjectNo, ObjectSpecificationLine."Specification Type"::"Standard Object",
            ServiceObject."Standard Object No.", IFilterVisibleforFieldService, OTmpServiceOrderObjSpecLine);
          CopyTmpSpecificationLines(IServiceObjectNo, ObjectSpecificationLine."Specification Type"::"Object Line",
            ServiceObject."Standard Object No.", IFilterVisibleforFieldService, OTmpServiceOrderObjSpecLine);
        END;

        CopyTmpSpecificationLines(IServiceObjectNo, ObjectSpecificationLine."Specification Type"::Object,
          IServiceObjectNo, IFilterVisibleforFieldService, OTmpServiceOrderObjSpecLine);

        CopyTmpSpecificationLines(IServiceObjectNo, ObjectSpecificationLine."Specification Type"::"Object Line",
          IServiceObjectNo, IFilterVisibleforFieldService, OTmpServiceOrderObjSpecLine);  //DP00118
      END;

      OTmpServiceOrderObjSpecLine.RESET;
      OTmpServiceOrderObjSpecLine.SETCURRENTKEY("Service Order No.", "Service Object No.", "Specification Group Code");
    END;

    LOCAL PROCEDURE HandleTmpSpecLines@1100528604(IServiceOrderNo@1100528603 : Code[20];VAR ITmpServiceOrderObjSpecLine@1100528602 : TEMPORARY Record 11071782);
    VAR
      ServiceOrderObjSpecLine@1100528600 : Record 11071782;
      LineNo@1100528601 : Integer;
    BEGIN
      IF NOT ITmpServiceOrderObjSpecLine.FINDSET THEN EXIT;
      REPEAT
        ServiceOrderObjSpecLine.INIT;
        ServiceOrderObjSpecLine := ITmpServiceOrderObjSpecLine;
        ServiceOrderObjSpecLine."Service Order No." := IServiceOrderNo;
        LineNo += 10000;
        ServiceOrderObjSpecLine."Line No." := LineNo;
        IF ServiceOrderObjSpecLine.INSERT(TRUE) THEN;
      UNTIL ITmpServiceOrderObjSpecLine.NEXT = 0;
    END;

    PROCEDURE ShowTmpSpecLines@1100528609(IServiceOrderNo@1100528603 : Code[20];IServiceContractNo@1100528602 : Code[20];IServiceObjectNo@1100528601 : Code[20];IMaintenanceSchemeCode@1100528600 : Code[20];IFilterVisibleforFieldService@1210190000 : Boolean);
    VAR
      TmpServiceOrderObjSpecLine@1100528604 : TEMPORARY Record 11071782;
    BEGIN
      CollectTmpSpecLines(IServiceObjectNo, IFilterVisibleforFieldService, TmpServiceOrderObjSpecLine);
      PAGE.RUNMODAL(0, TmpServiceOrderObjSpecLine);
    END;

    PROCEDURE TmpSOSpecificationLineExists@1100528611(IObjectSpecificationLine@1100528600 : Record 11071781;VAR ITmpServiceOrderObjSpecLine@1100528601 : TEMPORARY Record 11071782) : Boolean;
    BEGIN
      ITmpServiceOrderObjSpecLine.RESET;
      ITmpServiceOrderObjSpecLine.SETRANGE(Type, IObjectSpecificationLine.Type);
      ITmpServiceOrderObjSpecLine.SETRANGE("Specification Code", IObjectSpecificationLine."Specification Code");
      IF IObjectSpecificationLine.Type = IObjectSpecificationLine.Type::Line THEN BEGIN
        //DP00118.sn
        IF IObjectSpecificationLine."Specification Type" = IObjectSpecificationLine."Specification Type"::"Object Line" THEN BEGIN
          ITmpServiceOrderObjSpecLine.SETRANGE("Specification Type", IObjectSpecificationLine."Specification Type");
          ITmpServiceOrderObjSpecLine.SETRANGE("Object Line No.", IObjectSpecificationLine."Object Line No.");
        END;
        //DP00118.en
        ITmpServiceOrderObjSpecLine.SETRANGE("Specification Group Code", IObjectSpecificationLine.GetObjSpecificationGroupCode());
      END;
      EXIT(NOT ITmpServiceOrderObjSpecLine.ISEMPTY);
    END;

    PROCEDURE UpdateObjectSpecValues@1100528601(VAR IServiceOrderObjSpecLine@1100528600 : Record 11071782);
    VAR
      ServiceOrderObjSpecLine@1100528601 : Record 11071782;
      ServiceOrderObjSpecLine2@1100528703 : Record 11071782;
      ObjectSpecificationLine@1100528602 : Record 11071781;
      Decoded@1100525000 : Boolean;
      BORGManagement@1100528000 : Codeunit 11012859;
    BEGIN
      ServiceOrderObjSpecLine.COPY(IServiceOrderObjSpecLine);
      ServiceOrderObjSpecLine.SETRANGE(Status, ServiceOrderObjSpecLine.Status::Approved);
      IF ServiceOrderObjSpecLine.FINDSET(TRUE, TRUE) THEN
        REPEAT
          IF ServiceOrderObjSpecLine.BORG THEN
            BORGManagement.TestBORGUser;
          IF ((NOT ServiceOrderObjSpecLine.BORG) AND (ServiceOrderObjSpecLine.GetValue(FALSE, Decoded) <> ServiceOrderObjSpecLine.GetValue(TRUE, Decoded))) OR
             (ServiceOrderObjSpecLine.BORG AND (BORGManagement.DecodeValue2(ServiceOrderObjSpecLine."Old Value") <> BORGManagement.DecodeValue2(ServiceOrderObjSpecLine."New Value")))
          THEN BEGIN
            IF ObjectSpecificationLine.GET(ServiceOrderObjSpecLine."Specification Type", ServiceOrderObjSpecLine.Code,
              ServiceOrderObjSpecLine."Object Line No.", //DP00118
              ServiceOrderObjSpecLine."Specification Line No.") THEN BEGIN
              IF NOT ServiceOrderObjSpecLine.BORG THEN
                ObjectSpecificationLine.VALIDATE(Value, ServiceOrderObjSpecLine.GetValue(TRUE, Decoded))
              ELSE
                ObjectSpecificationLine.VALIDATE(Value, BORGManagement.DecodeValue2(ServiceOrderObjSpecLine."New Value"));
              ObjectSpecificationLine.MODIFY(TRUE);

              ServiceOrderObjSpecLine2.COPY(ServiceOrderObjSpecLine);
              ServiceOrderObjSpecLine2.VALIDATE("Processed Date", TODAY);
              ServiceOrderObjSpecLine2.MODIFY(TRUE);
            END;
          END;
        UNTIL ServiceOrderObjSpecLine.NEXT = 0;
    END;

    PROCEDURE ModifyObjectSpecValueFromTmp@1100528606(VAR ITmpServiceOrderObjSpecLine@1100528600 : TEMPORARY Record 11071782);
    VAR
      ObjectSpecificationLine@1100528601 : Record 11071781;
    BEGIN
      IF ObjectSpecificationLine.GET(ITmpServiceOrderObjSpecLine."Specification Type", ITmpServiceOrderObjSpecLine.Code,
        ITmpServiceOrderObjSpecLine."Object Line No.", //DP00118
        ITmpServiceOrderObjSpecLine."Specification Line No.") THEN BEGIN
        ObjectSpecificationLine.VALIDATE("Specification Code", ITmpServiceOrderObjSpecLine."Specification Code");
        ObjectSpecificationLine.VALIDATE(Value, ITmpServiceOrderObjSpecLine."Old Value");
        ObjectSpecificationLine.VALIDATE(Description, ITmpServiceOrderObjSpecLine.Description);
        ObjectSpecificationLine.MODIFY(TRUE);
      END;
    END;

    PROCEDURE SetObjectSpecValue@1100528607(IServiceObjectNo@1100528601 : Code[20];IObjectSpecCode@1100528600 : Code[10];IValue@1100528604 : Text[80]);
    VAR
      ObjectSpecificationLine@1100528602 : Record 11071781;
    BEGIN
      IF FindOrCreateObjectSpec(IServiceObjectNo, IObjectSpecCode, ObjectSpecificationLine) THEN BEGIN
        ObjectSpecificationLine.VALIDATE(Value, IValue);
        ObjectSpecificationLine.MODIFY(TRUE);
      END;
    END;

    PROCEDURE FindOrCreateObjectSpec@1100528612(IServiceObjectNo@1100528601 : Code[20];IObjectSpecCode@1100528600 : Code[10];VAR OObjectSpecificationLine@1100528605 : Record 11071781) : Boolean;
    VAR
      BaseObjectSpecificationLine@1100528604 : Record 11071779;
      LineNo@1100528602 : Integer;
      GroupCode@1100527650 : Code[10];
    BEGIN
      BaseObjectSpecificationLine.SETRANGE(Code, IObjectSpecCode);
      BaseObjectSpecificationLine.SETRANGE(Level, BaseObjectSpecificationLine.Level::Object);
      IF NOT BaseObjectSpecificationLine.FINDFIRST THEN
        EXIT;

      IF OObjectSpecificationLine.Type = OObjectSpecificationLine.Type::Group THEN
        GroupCode := OObjectSpecificationLine."Specification Code";

      OObjectSpecificationLine.SETRANGE("Specification Type", OObjectSpecificationLine."Specification Type"::Object);
      OObjectSpecificationLine.SETRANGE(Code, IServiceObjectNo);
      OObjectSpecificationLine.SETRANGE("Specification Code", BaseObjectSpecificationLine.Code);
      IF NOT OObjectSpecificationLine.FINDFIRST THEN BEGIN
        OObjectSpecificationLine.SETRANGE("Specification Code");
        LineNo := GetNextLineNoInsideGroup(IServiceObjectNo, GroupCode, OObjectSpecificationLine."Specification Type"::Object, OObjectSpecificationLine."Object Line No.");
        OObjectSpecificationLine.INIT;
        OObjectSpecificationLine.VALIDATE("Specification Type", OObjectSpecificationLine."Specification Type"::Object);
        OObjectSpecificationLine.VALIDATE(Code, IServiceObjectNo);
        OObjectSpecificationLine.VALIDATE(Type, OObjectSpecificationLine.Type::Line);
        OObjectSpecificationLine.VALIDATE("Specification Code", BaseObjectSpecificationLine.Code);
        OObjectSpecificationLine."Line No." := LineNo;
        OObjectSpecificationLine.INSERT(TRUE);
      END;
      EXIT(TRUE);
    END;

    PROCEDURE FindOrCreateObjectSpecGroup@1100528613(IServiceObjectNo@1100528603 : Code[20];IObjectSpecGroupCode@1100528601 : Code[10];VAR OObjectSpecificationLine@1100528600 : Record 11071781);
    VAR
      ObjectSpecificationGroup@1100528604 : Record 11071778;
      LineNo@1100528602 : Integer;
    BEGIN
      IF NOT ObjectSpecificationGroup.GET(IObjectSpecGroupCode) THEN
        EXIT;

      OObjectSpecificationLine.SETRANGE("Specification Type", OObjectSpecificationLine."Specification Type"::Object);
      OObjectSpecificationLine.SETRANGE(Code, IServiceObjectNo);
      //OObjectSpecificationLine.SETRANGE(Type, OObjectSpecificationLine.Type::Group);
      OObjectSpecificationLine.SETRANGE("Specification Code", ObjectSpecificationGroup.Code);
      OObjectSpecificationLine.SetDontCheckBORGUser(TRUE);
      IF NOT OObjectSpecificationLine.FINDFIRST THEN BEGIN
        OObjectSpecificationLine.SETRANGE("Specification Code");
        IF OObjectSpecificationLine.FINDLAST THEN
          LineNo := OObjectSpecificationLine."Line No.";
        LineNo += 10000;
        OObjectSpecificationLine.INIT;
        OObjectSpecificationLine.VALIDATE("Specification Type", OObjectSpecificationLine."Specification Type"::Object);
        OObjectSpecificationLine.VALIDATE(Code, IServiceObjectNo);
        OObjectSpecificationLine.VALIDATE(Type, OObjectSpecificationLine.Type::Group);
        OObjectSpecificationLine.VALIDATE("Specification Code", ObjectSpecificationGroup.Code);
        OObjectSpecificationLine."Line No." := LineNo;
        OObjectSpecificationLine.INSERT(TRUE);
      END;
    END;

    PROCEDURE GetYearOfManufactureValue@1100525000(IServiceObjectNo@1100525000 : Code[20]) Value : Text[80];
    VAR
      ServiceSetup@1100528602 : Record 11012800;
      ObjectSpecificationLine@1100528601 : Record 11071781;
      Decoded@1100528604 : Boolean;
    BEGIN
      ServiceSetup.GET;
      IF ServiceSetup."Spec. Code Year of Manufact." = '' THEN
        EXIT;
      IF GetSpecificationLine(IServiceObjectNo, ServiceSetup."Spec. Code Year of Manufact.", ObjectSpecificationLine) THEN
        Value := ObjectSpecificationLine.GetValue(Decoded);
    END;

    PROCEDURE GetYearOfManufacture@1100528610(IServiceObjectNo@1100525000 : Code[20]) : Integer;
    VAR
      ServiceSetup@1100528602 : Record 11012800;
      ObjectSpecificationLine@1100409000 : Record 11071781;
    BEGIN
      ServiceSetup.GET;
      IF ServiceSetup."Spec. Code Year of Manufact." = '' THEN
        EXIT;
      IF GetSpecificationLine(IServiceObjectNo, ServiceSetup."Spec. Code Year of Manufact.", ObjectSpecificationLine) THEN
        CASE ObjectSpecificationLine."Field Type" OF
          ObjectSpecificationLine."Field Type"::Date:
            IF ObjectSpecificationLine."Value (Date)" <> 0D THEN
              EXIT(DATE2DMY(ObjectSpecificationLine."Value (Date)", 3));
          ObjectSpecificationLine."Field Type"::Value:
            IF ROUND(ObjectSpecificationLine."Value (Value)", 1) = ObjectSpecificationLine."Value (Value)" THEN
              EXIT(ObjectSpecificationLine."Value (Value)");
        END;
    END;

    PROCEDURE GetSerialNo@1100528614(IServiceObjectNo@1100525000 : Code[20]) : Text;
    VAR
      ServiceSetup@1100528602 : Record 11012800;
      ObjectSpecificationLine@1100409000 : Record 11071781;
    BEGIN
      ServiceSetup.GET;
      IF ServiceSetup."Spec. Code Serial No." = '' THEN
        EXIT;
      GetSpecificationLine(IServiceObjectNo, ServiceSetup."Spec. Code Serial No.", ObjectSpecificationLine);
      EXIT(ObjectSpecificationLine.Value);
    END;

    PROCEDURE GetValueBySpecificationCode@1100528608(IServiceObjectNo@1100528600 : Code[20];ISpecificationCode@1100528601 : Code[10]) : Text[80];
    VAR
      ObjectSpecificationLine@1100528602 : Record 11071781;
      Decoded@1100528603 : Boolean;
    BEGIN
      ObjectSpecificationLine.SETRANGE("Specification Type", ObjectSpecificationLine."Specification Type"::Object);
      ObjectSpecificationLine.SETRANGE(Code, IServiceObjectNo);
      ObjectSpecificationLine.SETRANGE(Type, ObjectSpecificationLine.Type::Line);
      ObjectSpecificationLine.SETRANGE("Specification Code", ISpecificationCode);
      IF ObjectSpecificationLine.FINDFIRST THEN BEGIN
        ObjectSpecificationLine.TESTFIELD(BORG, FALSE);
        EXIT(ObjectSpecificationLine.GetValue(Decoded));
      END;
    END;

    PROCEDURE GetSpecificationLine@1100409000(IServiceObjectNo@1100409001 : Code[20];ISpecificationCode@1100409000 : Code[10];VAR OObjectSpecificationLine@1100409002 : Record 11071781) : Boolean;
    BEGIN
      OObjectSpecificationLine.RESET;
      OObjectSpecificationLine.SETRANGE("Specification Type", OObjectSpecificationLine."Specification Type"::Object);
      OObjectSpecificationLine.SETRANGE(Code, IServiceObjectNo);
      OObjectSpecificationLine.SETRANGE(Type, OObjectSpecificationLine.Type::Line);
      OObjectSpecificationLine.SETRANGE("Specification Code", ISpecificationCode);
      OObjectSpecificationLine.SETRANGE(BORG, FALSE);
      IF NOT OObjectSpecificationLine.FINDFIRST THEN
        OObjectSpecificationLine.INIT
      ELSE
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE GetNextLineNoInsideGroup@1100527650(ServiceObjectNo@1100527650 : Code[20];SpecificationGroupCode@1100527651 : Code[10];SpecificationType@1100527550 : 'Standard Object,Object,Object Line';ObjectLineNo@1100525000 : Integer) NewLineNo : Integer;
    VAR
      ObjectSpecificationLine@1100527653 : Record 11071781;
      LastLineNoFromCurrentGroup@1100527654 : Integer;
      NextLineNoFromOtherGroup@1100527655 : Integer;
    BEGIN
      ObjectSpecificationLine.SETRANGE("Specification Type", SpecificationType);
      ObjectSpecificationLine.SETRANGE(Code, ServiceObjectNo);
      ObjectSpecificationLine.SETRANGE(Type, ObjectSpecificationLine.Type::Group);
      ObjectSpecificationLine.SETRANGE("Specification Code", SpecificationGroupCode);
      ObjectSpecificationLine.SETRANGE("Object Line No.", ObjectLineNo);
      IF ObjectSpecificationLine.FINDLAST THEN BEGIN
        ObjectSpecificationLine.SETRANGE(Type);
        ObjectSpecificationLine.SETRANGE("Specification Code");
        REPEAT
          LastLineNoFromCurrentGroup := ObjectSpecificationLine."Line No.";
        UNTIL (ObjectSpecificationLine.NEXT = 0) OR (ObjectSpecificationLine.Type = ObjectSpecificationLine.Type::Group);

        ObjectSpecificationLine.FINDLAST;
        IF LastLineNoFromCurrentGroup = ObjectSpecificationLine."Line No." THEN
          EXIT(LastLineNoFromCurrentGroup + 10000)
        ELSE
          EXIT(LastLineNoFromCurrentGroup + 1)
      END ELSE BEGIN
        ObjectSpecificationLine.SETRANGE(Type);
        ObjectSpecificationLine.SETRANGE("Specification Code");
        IF ObjectSpecificationLine.FINDLAST THEN
          EXIT(ObjectSpecificationLine."Line No." + 10000)
        ELSE
          EXIT(10000)
      END;
    END;

    PROCEDURE FindOrCreateObjectSpecForMaterialInv@1100527568(IServiceObjectNo@1100528601 : Code[20];IObjectSpecCode@1100528600 : Code[10];VAR OObjectSpecificationLine@1100528605 : Record 11071781;ObjectLineNo@1100527550 : Integer) : Boolean;
    VAR
      BaseObjectSpecificationLine@1100528604 : Record 11071779;
      LineNo@1100528602 : Integer;
      GroupCode@1100527551 : Code[10];
    BEGIN
      IF NOT BaseObjectSpecificationLine.GET(IObjectSpecCode) THEN
        EXIT;
      IF BaseObjectSpecificationLine.Level = BaseObjectSpecificationLine.Level::"Standard Object" THEN
        EXIT;

      IF OObjectSpecificationLine.Type = OObjectSpecificationLine.Type::Group THEN
        GroupCode := OObjectSpecificationLine."Specification Code";

      OObjectSpecificationLine.SETRANGE("Specification Type", OObjectSpecificationLine."Specification Type"::"Object Line");
      OObjectSpecificationLine.SETRANGE(Code, IServiceObjectNo);
      OObjectSpecificationLine.SETRANGE("Specification Code", BaseObjectSpecificationLine.Code);
      OObjectSpecificationLine.SETRANGE("Object Line No.", ObjectLineNo);
      IF NOT OObjectSpecificationLine.FINDFIRST THEN BEGIN
        LineNo := GetNextLineNoInsideGroup(IServiceObjectNo, GroupCode, OObjectSpecificationLine."Specification Type"::"Object Line", OObjectSpecificationLine."Object Line No.");
        OObjectSpecificationLine.INIT;
        OObjectSpecificationLine.VALIDATE("Specification Type", OObjectSpecificationLine."Specification Type"::"Object Line");
        OObjectSpecificationLine.VALIDATE(Code, IServiceObjectNo);
        OObjectSpecificationLine.VALIDATE(Type, OObjectSpecificationLine.Type::Line);
        OObjectSpecificationLine.VALIDATE("Specification Code", BaseObjectSpecificationLine.Code);
        OObjectSpecificationLine.VALIDATE("Object Line No.", ObjectLineNo);
        OObjectSpecificationLine."Line No." := LineNo;
        OObjectSpecificationLine.INSERT(TRUE);
      END;
      EXIT(TRUE);
    END;

    PROCEDURE FindOrCreateObjectSpecGroupForMaterialInv@1100525001(IServiceObjectNo@1100528603 : Code[20];IObjectSpecGroupCode@1100528601 : Code[10];VAR OObjectSpecificationLine@1100528600 : Record 11071781;ObjectLineNo@1100527550 : Integer);
    VAR
      ObjectSpecificationGroup@1100528604 : Record 11071778;
      LineNo@1100528602 : Integer;
    BEGIN
      IF NOT ObjectSpecificationGroup.GET(IObjectSpecGroupCode) THEN
        EXIT;

      OObjectSpecificationLine.SETRANGE("Specification Type", OObjectSpecificationLine."Specification Type"::"Object Line");
      OObjectSpecificationLine.SETRANGE(Code, IServiceObjectNo);
      OObjectSpecificationLine.SETRANGE("Specification Code", ObjectSpecificationGroup.Code);
      OObjectSpecificationLine.SETRANGE("Object Line No.", ObjectLineNo);
      OObjectSpecificationLine.SetDontCheckBORGUser(TRUE);
      IF NOT OObjectSpecificationLine.FINDFIRST THEN BEGIN
        OObjectSpecificationLine.SETRANGE("Specification Code");
        IF OObjectSpecificationLine.FINDLAST THEN
          LineNo := OObjectSpecificationLine."Line No.";
        LineNo += 10000;
        OObjectSpecificationLine.INIT;
        OObjectSpecificationLine.VALIDATE("Specification Type", OObjectSpecificationLine."Specification Type"::"Object Line");
        OObjectSpecificationLine.VALIDATE(Code, IServiceObjectNo);
        OObjectSpecificationLine.VALIDATE(Type, OObjectSpecificationLine.Type::Group);
        OObjectSpecificationLine.VALIDATE("Specification Code", ObjectSpecificationGroup.Code);
        OObjectSpecificationLine.VALIDATE("Object Line No.", ObjectLineNo);
        OObjectSpecificationLine."Line No." := LineNo;
        OObjectSpecificationLine.INSERT(TRUE);
      END;
    END;

    BEGIN
    END.
  }
}

