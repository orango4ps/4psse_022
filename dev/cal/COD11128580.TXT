OBJECT Codeunit 11128580 OIOUBL Export Sales Cr. Memo
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVDK10.00,4PSSE (13610);
  }
  PROPERTIES
  {
    TableNo=62;
    Permissions=TableData 114=rm;
    OnRun=VAR
            SalesCrMemoHeader@1060019 : Record 114;
            RecordRef@1060000 : RecordRef;
          BEGIN
            RecordRef.GET(RecordID);
            RecordRef.SETTABLE(SalesCrMemoHeader);

            ServerFilePath := CreateXML(SalesCrMemoHeader);
            MODIFY;

            SalesCrMemoHeader."Electronic Credit Memo Created" := TRUE;
            SalesCrMemoHeader.MODIFY;
          END;

  }
  CODE
  {
    VAR
      CompanyInfo@1101100002 : Record 79;
      GLSetup@1101100003 : Record 98;
      SalesSetup@1101100014 : Record 311;
      Currency@1060000 : Record 4;
      OIOUBLDOMManagement@1101100006 : Codeunit 11128571;
      OIOUBLDocumentEncode@1101100007 : Codeunit 11128570;
      Header@1101100005 : Text[1000];
      CompanyInfoRead@1101100000 : Boolean;
      GLSetupRead@1101100001 : Boolean;
      PleaseUsetheStdCRNotePath@1060003 : TextConst 'ENU=Please save the file under %1.';
      UsetheIOULBClientPath@1060002 : TextConst 'ENU=Please save the file to a location from which it can be retrieved by the OIOUBL function.';

    PROCEDURE ExportXML@1060002(SalesCrMemoHeader@1060000 : Record 114);
    VAR
      SalesCrMemoHeader2@1060024 : Record 114;
      RBMgt@1060019 : Codeunit 419;
      FromFile@1060013 : Text[1024];
      ToFile@1060012 : Text[1024];
      FileName@1060009 : Text;
      DocumentType@1060001 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Finance Charge,Reminder';
    BEGIN
      FromFile := CreateXML(SalesCrMemoHeader);

      SalesSetup.GET;
      SalesSetup."OIOUBL Cr. Memo Path" := DELCHR(SalesSetup."OIOUBL Cr. Memo Path",'>','\');

      IF RBMgt.CanRunDotNetOnClient THEN BEGIN
        SalesSetup.VerifyAndSetOIOUBLPathSetup(DocumentType::"Credit Memo");
        ToFile := RBMgt.DownloadTempFile(FromFile);
        RBMgt.CopyClientFile(ToFile,STRSUBSTNO('%1\%2.xml',SalesSetup."OIOUBL Cr. Memo Path",SalesCrMemoHeader."No."),TRUE);
      END ELSE BEGIN
        FileName := STRSUBSTNO('%1.xml',SalesCrMemoHeader."No.");
        IF SalesSetup."OIOUBL Cr. Memo Path" <> '' THEN
          MESSAGE(STRSUBSTNO(PleaseUsetheStdCRNotePath,SalesSetup."OIOUBL Cr. Memo Path"))
        ELSE
          MESSAGE(UsetheIOULBClientPath);
        DOWNLOAD(FromFile,'',SalesSetup."OIOUBL Cr. Memo Path",'',FileName);
      END;

      SalesCrMemoHeader2.GET(SalesCrMemoHeader."No.");
      SalesCrMemoHeader2."Electronic Credit Memo Created" := TRUE;
      SalesCrMemoHeader2.MODIFY;
    END;

    LOCAL PROCEDURE CreateXML@1060003(SalesCrMemoHeader@1060001 : Record 114) FromFile : Text[250];
    VAR
      SalesCrMemoLine@1060023 : Record 115;
      SalesCrMemoLine2@1060022 : Record 115;
      SalespersonPurchaser@1060021 : Record 13;
      OIOUBLProfile@1060020 : Record 11128570;
      RBMgt@1060019 : Codeunit 419;
      XMLDOMManagement@1060000 : Codeunit 6224;
      XMLdocOut@1060018 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XMLCurrNode@1060017 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNewChild@1060016 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocNameSpace@1060015 : Text[250];
      Prefix@1060014 : Text[30];
      DocNameSpace2@1060011 : Text[250];
      Prefix2@1060010 : Text[30];
      CurrencyCode@1060008 : Code[10];
      VATPercentage@1060007 : Decimal;
      TaxableAmount@1060006 : Decimal;
      TaxAmount@1060005 : Decimal;
      TotalAmount@1060004 : Decimal;
      TotalInvDiscountAmount@1060003 : Decimal;
      TotalTaxAmount@1060002 : Decimal;
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"OIOUBL Check Sales Cr. Memo",SalesCrMemoHeader);
      ReadGLSetup;
      ReadCompanyInfo;

      IF SalesCrMemoHeader."Currency Code" = '' THEN
        CurrencyCode := GLSetup."LCY Code"
      ELSE
        CurrencyCode := SalesCrMemoHeader."Currency Code";

      IF CurrencyCode = GLSetup."LCY Code" THEN
        Currency.InitRoundingPrecision
      ELSE BEGIN
        Currency.GET(CurrencyCode);
        Currency.TESTFIELD("Amount Rounding Precision");
      END;

      SalesCrMemoLine.SETRANGE("Document No.",SalesCrMemoHeader."No.");
      SalesCrMemoLine.SETFILTER(Type,'>%1',0);
      SalesCrMemoLine.SETFILTER("No.",'<>%1',' ');
      IF NOT SalesCrMemoLine.FINDSET THEN
        EXIT;

      FromFile := RBMgt.ServerTempFileName('');

      // Credit Memo
      Header := '<?xml version="1.0" encoding="UTF-8" ?> ' +
        '<CreditNote xsi:schemaLocation="urn:oasis:names:specification:ubl:schema:xsd:CreditNote-2 UBL-CreditNote-2.0.xsd" ' +
        'xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:specification:ubl:schema:xsd:CreditNote-2" ' +
        'xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" ' +
        'xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" ' +
        'xmlns:ccts="urn:oasis:names:specification:ubl:schema:xsd:CoreComponentParameters-2" ' +
        'xmlns:sdt="urn:oasis:names:specification:ubl:schema:xsd:SpecializedDatatypes-2" ' +
        'xmlns:udt="urn:un:unece:uncefact:data:specification:UnqualifiedDataTypesSchemaModule:2"/> ';

      XMLDOMManagement.LoadXMLDocumentFromText(Header,XMLdocOut);
      XMLCurrNode := XMLdocOut.DocumentElement;

      WITH OIOUBLDOMManagement DO BEGIN
        DocNameSpace := 'urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2';
        DocNameSpace2 := 'urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2';

        Prefix := 'cbc';
        Prefix2 := 'cac';

        AddElement(XMLCurrNode,'UBLVersionID','2.0',DocNameSpace,XMLNewChild,Prefix);
        AddElement(XMLCurrNode,'CustomizationID','OIOUBL-2.02',DocNameSpace,XMLNewChild,Prefix);

        AddElement(
          XMLCurrNode,'ProfileID',
          OIOUBLProfile.GetOIOUBLProfileID(SalesCrMemoHeader."OIOUBL Profile Code",SalesCrMemoHeader."Sell-to Customer No."),
          DocNameSpace,XMLNewChild,Prefix);
        XMLCurrNode := XMLNewChild;
        AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:profileid-1.2');
        AddAttribute(XMLCurrNode,'schemeAgencyID','320');
        XMLCurrNode := XMLCurrNode.ParentNode;

        AddElement(XMLCurrNode,'ID',SalesCrMemoHeader."No.",DocNameSpace,XMLNewChild,Prefix);
        AddElement(XMLCurrNode,'CopyIndicator',OIOUBLDocumentEncode.BooleanToText(SalesCrMemoHeader."Electronic Credit Memo Created"),
          DocNameSpace,XMLNewChild,Prefix);
        AddElement(
          XMLCurrNode,'IssueDate',OIOUBLDocumentEncode.DateToText(SalesCrMemoHeader."Posting Date"),DocNameSpace,XMLNewChild,Prefix);

        //4PSSE
        AddElement(XMLCurrNode,'Note','<![CDATA['+SalesCrMemoHeader."Credit Memo Text"+']]>',DocNameSpace,XMLNewChild,Prefix);

        AddElement(XMLCurrNode,'DocumentCurrencyCode',CurrencyCode,DocNameSpace,XMLNewChild,Prefix);
        AddElement(XMLCurrNode,'AccountingCostCode',SalesCrMemoHeader."Account Code DK",DocNameSpace,XMLNewChild,Prefix);
        AddElement(XMLCurrNode,'DiscrepancyResponse','',DocNameSpace2,XMLNewChild,Prefix2);
        XMLCurrNode := XMLNewChild;
        AddElement(XMLCurrNode,'ReferenceID','1',DocNameSpace,XMLNewChild,Prefix);
        AddElement(XMLCurrNode,'Description','Kreditnota if?lge aftale',DocNameSpace,XMLNewChild,Prefix);
        XMLCurrNode := XMLCurrNode.ParentNode;

        AddElement(XMLCurrNode,'OrderReference','',DocNameSpace2,XMLNewChild,Prefix2);
        XMLCurrNode := XMLNewChild;

        AddElement(XMLCurrNode,'ID',SalesCrMemoHeader."External Document No.",DocNameSpace,XMLNewChild,Prefix);

        AddElement(XMLCurrNode,'SalesOrderID',SalesCrMemoHeader."Applies-to Doc. No.",DocNameSpace,XMLNewChild,Prefix);
        AddElement(
          XMLCurrNode,'IssueDate',OIOUBLDocumentEncode.DateToText(SalesCrMemoHeader."Posting Date"),DocNameSpace,XMLNewChild,Prefix);

        // Credit Memo->AccountingSupplierParty
        XMLCurrNode := XMLCurrNode.ParentNode;
        AddElement(XMLCurrNode,'AccountingSupplierParty','',DocNameSpace2,XMLNewChild,Prefix2);
        XMLCurrNode := XMLNewChild;

        AddElement(XMLCurrNode,'Party','',DocNameSpace2,XMLNewChild,Prefix2);

        XMLCurrNode := XMLNewChild;
        AddElement(XMLCurrNode,'WebsiteURI',CompanyInfo."Home Page",DocNameSpace,XMLNewChild,Prefix);
        AddElement(XMLCurrNode,'EndpointID',OIOUBLDocumentEncode.GetCompanyVATRegNo(CompanyInfo."VAT Registration No."),
          DocNameSpace,XMLNewChild,Prefix);
        XMLCurrNode := XMLNewChild;
        AddAttribute(XMLCurrNode,'schemeID','DK:CVR');
        XMLCurrNode := XMLCurrNode.ParentNode;

        AddElement(XMLCurrNode,'PartyIdentification','',DocNameSpace2,XMLNewChild,Prefix2);

        XMLCurrNode := XMLNewChild;
        AddElement(XMLCurrNode,'ID',OIOUBLDocumentEncode.GetCompanyVATRegNo(CompanyInfo."VAT Registration No."),
          DocNameSpace,XMLNewChild,Prefix);
        XMLCurrNode := XMLNewChild;
        AddAttribute(XMLCurrNode,'schemeID','DK:CVR');
        XMLCurrNode := XMLCurrNode.ParentNode;

        XMLCurrNode := XMLCurrNode.ParentNode;
        AddElement(XMLCurrNode,'PartyName','',DocNameSpace2,XMLNewChild,Prefix2);

        XMLCurrNode := XMLNewChild;
        AddElement(XMLCurrNode,'Name',CompanyInfo.Name,DocNameSpace,XMLNewChild,Prefix);

        XMLCurrNode := XMLCurrNode.ParentNode;
        AddElement(XMLCurrNode,'PostalAddress','',DocNameSpace2,XMLNewChild,Prefix2);

        XMLCurrNode := XMLNewChild;
        AddElement(XMLCurrNode,'AddressFormatCode','StructuredLax',DocNameSpace,XMLNewChild,Prefix);
        XMLCurrNode := XMLNewChild;
        AddAttribute(XMLCurrNode,'listID','urn:oioubl:codelist:addressformatcode-1.1');
        AddAttribute(XMLCurrNode,'listAgencyID','320');
        XMLCurrNode := XMLCurrNode.ParentNode;

        AddElement(XMLCurrNode,'StreetName',CompanyInfo.Address,DocNameSpace,XMLNewChild,Prefix);
        AddElement(XMLCurrNode,'AdditionalStreetName',CompanyInfo."Address 2",DocNameSpace,XMLNewChild,Prefix);
        AddElement(XMLCurrNode,'InhouseMail',CompanyInfo."E-Mail",DocNameSpace,XMLNewChild,Prefix);
        AddElement(XMLCurrNode,'CityName',CompanyInfo.City,DocNameSpace,XMLNewChild,Prefix);
        AddElement(XMLCurrNode,'PostalZone',CompanyInfo."Post Code",DocNameSpace,XMLNewChild,Prefix);

        AddElement(XMLCurrNode,'Country','',DocNameSpace2,XMLNewChild,Prefix2);

        XMLCurrNode := XMLNewChild;
        AddElement(XMLCurrNode,'IdentificationCode',CompanyInfo."Country/Region Code",DocNameSpace,XMLNewChild,Prefix);

        XMLCurrNode := XMLCurrNode.ParentNode;
        XMLCurrNode := XMLCurrNode.ParentNode;
        AddElement(XMLCurrNode,'PartyTaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);

        XMLCurrNode := XMLNewChild;
        AddElement(XMLCurrNode,'CompanyID',OIOUBLDocumentEncode.GetCompanyVATRegNo(CompanyInfo."VAT Registration No."),
          DocNameSpace,XMLNewChild,Prefix);
        XMLCurrNode := XMLNewChild;
        AddAttribute(XMLCurrNode,'schemeID','DK:SE');
        XMLCurrNode := XMLCurrNode.ParentNode;

        AddElement(XMLCurrNode,'TaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);

        XMLCurrNode := XMLNewChild;
        AddElement(XMLCurrNode,'ID','63',DocNameSpace,XMLNewChild,Prefix);
        XMLCurrNode := XMLNewChild;
        AddAttribute(XMLCurrNode,'schemeAgencyID','320');
        AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxschemeid-1.1');
        XMLCurrNode := XMLCurrNode.ParentNode;
        AddElement(XMLCurrNode,'Name','Moms',DocNameSpace,XMLNewChild,Prefix);

        XMLCurrNode := XMLCurrNode.ParentNode;
        XMLCurrNode := XMLCurrNode.ParentNode;
        AddElement(XMLCurrNode,'PartyLegalEntity','',DocNameSpace2,XMLNewChild,Prefix2);

        XMLCurrNode := XMLNewChild;
        AddElement(XMLCurrNode,'RegistrationName',CompanyInfo.Name,DocNameSpace,XMLNewChild,Prefix);
        AddElement(XMLCurrNode,'CompanyID',OIOUBLDocumentEncode.GetCompanyVATRegNo(CompanyInfo."VAT Registration No."),
          DocNameSpace,XMLNewChild,Prefix);
        XMLCurrNode := XMLNewChild;
        AddAttribute(XMLCurrNode,'schemeID','DK:CVR');
        XMLCurrNode := XMLCurrNode.ParentNode;

        XMLCurrNode := XMLCurrNode.ParentNode;
        IF SalespersonPurchaser.GET(SalesCrMemoHeader."Salesperson Code") THEN BEGIN
          AddElement(XMLCurrNode,'Contact','',DocNameSpace2,XMLNewChild,Prefix2);
          XMLCurrNode := XMLNewChild;
          AddElement(XMLCurrNode,'ID',SalesCrMemoHeader."Salesperson Code",DocNameSpace,XMLNewChild,Prefix);
          AddElement(XMLCurrNode,'Name',SalespersonPurchaser.Name,DocNameSpace,XMLNewChild,Prefix);
          AddElement(XMLCurrNode,'Telephone',SalespersonPurchaser."Phone No.",DocNameSpace,XMLNewChild,Prefix);
          AddElement(XMLCurrNode,'ElectronicMail',SalespersonPurchaser."E-Mail",DocNameSpace,XMLNewChild,Prefix);
          XMLCurrNode := XMLCurrNode.ParentNode;
        END;

        XMLCurrNode := XMLCurrNode.ParentNode;
        XMLCurrNode := XMLCurrNode.ParentNode;

        // Credit Memo->AccountingCustomerParty
        AddElement(XMLCurrNode,'AccountingCustomerParty','',DocNameSpace2,XMLNewChild,Prefix2);
        XMLCurrNode := XMLNewChild;

        AddElement(XMLCurrNode,'Party','',DocNameSpace2,XMLNewChild,Prefix2);

        XMLCurrNode := XMLNewChild;
        AddElement(XMLCurrNode,'EndpointID',SalesCrMemoHeader."EAN No.",DocNameSpace,XMLNewChild,Prefix);
        XMLCurrNode := XMLNewChild;
        AddAttribute(XMLCurrNode,'schemeAgencyID','9');
        AddAttribute(XMLCurrNode,'schemeID','GLN');
        XMLCurrNode := XMLCurrNode.ParentNode;

        AddElement(XMLCurrNode,'PartyIdentification','',DocNameSpace2,XMLNewChild,Prefix2);

        XMLCurrNode := XMLNewChild;
        AddElement(XMLCurrNode,'ID',OIOUBLDocumentEncode.GetCustomerVATRegNo(SalesCrMemoHeader."VAT Registration No."),
          DocNameSpace,XMLNewChild,Prefix);
        XMLCurrNode := XMLNewChild;
        AddAttribute(XMLCurrNode,'schemeID','DK:CVR');
        XMLCurrNode := XMLCurrNode.ParentNode;

        // CreditMemo->AccountingCustomerParty->PartyName
        XMLCurrNode := XMLCurrNode.ParentNode;
        AddElement(XMLCurrNode,'PartyName','',DocNameSpace2,XMLNewChild,Prefix2);

        XMLCurrNode := XMLNewChild;
        AddElement(XMLCurrNode,'Name',SalesCrMemoHeader."Bill-to Name",DocNameSpace,XMLNewChild,Prefix);

        // CreditMemo->AccountingCustomerParty->PostalAddress
        XMLCurrNode := XMLCurrNode.ParentNode;
        AddElement(XMLCurrNode,'PostalAddress','',DocNameSpace2,XMLNewChild,Prefix2);

        XMLCurrNode := XMLNewChild;
        AddElement(XMLCurrNode,'AddressFormatCode','StructuredLax',DocNameSpace,XMLNewChild,Prefix);
        XMLCurrNode := XMLNewChild;
        AddAttribute(XMLCurrNode,'listID','urn:oioubl:codelist:addressformatcode-1.1');
        AddAttribute(XMLCurrNode,'listAgencyID','320');
        XMLCurrNode := XMLCurrNode.ParentNode;

        AddElement(XMLCurrNode,'StreetName',SalesCrMemoHeader."Bill-to Address",DocNameSpace,XMLNewChild,Prefix);
        AddElement(XMLCurrNode,'AdditionalStreetName',SalesCrMemoHeader."Bill-to Address 2",DocNameSpace,XMLNewChild,Prefix);
        AddElement(XMLCurrNode,'CityName',SalesCrMemoHeader."Bill-to City",DocNameSpace,XMLNewChild,Prefix);
        AddElement(XMLCurrNode,'PostalZone',SalesCrMemoHeader."Bill-to Post Code",DocNameSpace,XMLNewChild,Prefix);

        AddElement(XMLCurrNode,'Country','',DocNameSpace2,XMLNewChild,Prefix2);

        XMLCurrNode := XMLNewChild;
        AddElement(
          XMLCurrNode,'IdentificationCode',
          OIOUBLDocumentEncode.GetOIOUBLCountryRegionCode(SalesCrMemoHeader."Bill-to Country/Region Code"),
          DocNameSpace,XMLNewChild,Prefix);

        XMLCurrNode := XMLCurrNode.ParentNode;
        XMLCurrNode := XMLCurrNode.ParentNode;
        AddElement(XMLCurrNode,'Contact','',DocNameSpace2,XMLNewChild,Prefix2);
        XMLCurrNode := XMLNewChild;
        AddElement(XMLCurrNode,'ID',SalesCrMemoHeader."Sell-to Contact",DocNameSpace,XMLNewChild,Prefix);

        AddElement(XMLCurrNode,'Name',SalesCrMemoHeader."Sell-to Contact",DocNameSpace,XMLNewChild,Prefix);
        AddElement(XMLCurrNode,'Telephone',SalesCrMemoHeader."Sell-to Contact Phone No.",DocNameSpace,XMLNewChild,Prefix);
        AddElement(XMLCurrNode,'Telefax',SalesCrMemoHeader."Sell-to Contact Fax No.",DocNameSpace,XMLNewChild,Prefix);
        AddElement(XMLCurrNode,'ElectronicMail',SalesCrMemoHeader."Sell-to Contact E-Mail",DocNameSpace,XMLNewChild,Prefix);

        XMLCurrNode := XMLCurrNode.ParentNode;
        XMLCurrNode := XMLCurrNode.ParentNode;
        XMLCurrNode := XMLCurrNode.ParentNode;

        // CreditMemo->Allowance Charge
        SalesCrMemoLine2.RESET;
        SalesCrMemoLine2.COPY(SalesCrMemoLine);
        SalesCrMemoLine2.SETRANGE(Type);
        SalesCrMemoLine2.SETRANGE("No.");
        SalesCrMemoLine2.CALCSUMS(Amount,"Amount Including VAT","Inv. Discount Amount");

        TotalInvDiscountAmount := 0;
        IF SalesCrMemoLine2.FINDSET THEN
          REPEAT
            ExcludeVAT(SalesCrMemoLine2,SalesCrMemoHeader."Prices Including VAT");
            TotalInvDiscountAmount := TotalInvDiscountAmount + SalesCrMemoLine2."Inv. Discount Amount" +
              SalesCrMemoLine2."Line Discount Amount";
          UNTIL SalesCrMemoLine2.NEXT = 0;

        IF TotalInvDiscountAmount > 0 THEN BEGIN
          AddElement(XMLCurrNode,'AllowanceCharge','',DocNameSpace2,XMLNewChild,Prefix2);
          XMLCurrNode := XMLNewChild;

          AddElement(XMLCurrNode,'ID','1',DocNameSpace,XMLNewChild,Prefix);
          AddElement(XMLCurrNode,'ChargeIndicator','false',
            DocNameSpace,XMLNewChild,Prefix);
          AddElement(XMLCurrNode,'AllowanceChargeReason','Rabat',DocNameSpace,XMLNewChild,Prefix);
          AddElement(XMLCurrNode,'MultiplierFactorNumeric','1.000',DocNameSpace,XMLNewChild,Prefix);
          AddElement(XMLCurrNode,'SequenceNumeric','1',DocNameSpace,XMLNewChild,Prefix);

          AddElement(XMLCurrNode,'Amount',OIOUBLDocumentEncode.DecimalToText(TotalInvDiscountAmount),
            DocNameSpace,XMLNewChild,Prefix);
          XMLCurrNode := XMLNewChild;
          AddAttribute(XMLCurrNode,'currencyID',CurrencyCode);
          XMLCurrNode := XMLCurrNode.ParentNode;

          AddElement(XMLCurrNode,'BaseAmount',OIOUBLDocumentEncode.DecimalToText(TotalInvDiscountAmount),
            DocNameSpace,XMLNewChild,Prefix);
          XMLCurrNode := XMLNewChild;
          AddAttribute(XMLCurrNode,'currencyID',CurrencyCode);
          XMLCurrNode := XMLCurrNode.ParentNode;

          // CreditMemo->AllowanceCharge->TaxCategory
          AddElement(XMLCurrNode,'TaxCategory','',DocNameSpace2,XMLNewChild,Prefix2);
          XMLCurrNode := XMLNewChild;

          AddElement(XMLCurrNode,'ID',GetTaxCategoryID(SalesCrMemoLine2."VAT Calculation Type",SalesCrMemoLine2."VAT %"),
            DocNameSpace,XMLNewChild,Prefix);
          XMLCurrNode := XMLNewChild;
          AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxcategoryid-1.1');
          AddAttribute(XMLCurrNode,'schemeAgencyID','320');
          XMLCurrNode := XMLCurrNode.ParentNode;

          AddElement(XMLCurrNode,'Percent',OIOUBLDocumentEncode.DecimalToText(SalesCrMemoLine2."VAT %"),
            DocNameSpace,XMLNewChild,Prefix);

          // CreditMemo->AllowanceCharge->TaxCategory->TaxScheme
          AddElement(XMLCurrNode,'TaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);
          XMLCurrNode := XMLNewChild;

          AddElement(XMLCurrNode,'ID','63',DocNameSpace,XMLNewChild,Prefix);
          XMLCurrNode := XMLNewChild;
          AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxschemeid-1.1');
          XMLCurrNode := XMLCurrNode.ParentNode;
          AddElement(XMLCurrNode,'Name','Moms',DocNameSpace,XMLNewChild,Prefix);

          XMLCurrNode := XMLCurrNode.ParentNode;
          XMLCurrNode := XMLCurrNode.ParentNode;
          XMLCurrNode := XMLCurrNode.ParentNode;
        END;

        SalesCrMemoLine2.RESET;
        SalesCrMemoLine2.COPY(SalesCrMemoLine);
        SalesCrMemoLine2.SETFILTER(
          "VAT Calculation Type",'%1|%2|%3',
          SalesCrMemoLine2."VAT Calculation Type"::"Normal VAT",
          SalesCrMemoLine2."VAT Calculation Type"::"Full VAT",
          SalesCrMemoLine2."VAT Calculation Type"::"Reverse Charge VAT");
        IF SalesCrMemoLine2.FINDFIRST THEN BEGIN
          TotalTaxAmount := 0;
          SalesCrMemoLine2.CALCSUMS(Amount,"Amount Including VAT");
          TotalTaxAmount := SalesCrMemoLine2."Amount Including VAT" - SalesCrMemoLine2.Amount;

          AddElement(XMLCurrNode,'TaxTotal','',DocNameSpace2,XMLNewChild,Prefix2);
          XMLCurrNode := XMLNewChild;
          AddElement(
            XMLCurrNode,'TaxAmount',
            OIOUBLDocumentEncode.DecimalToText(TotalTaxAmount),DocNameSpace,XMLNewChild,Prefix);
          XMLCurrNode := XMLNewChild;
          AddAttribute(XMLCurrNode,'currencyID',SalesCrMemoHeader."Currency Code");
          XMLCurrNode := XMLCurrNode.ParentNode;

          // Invoice->TaxTotal (for ("Normal VAT" AND "VAT %" <> 0) OR "Full VAT")
          SalesCrMemoLine2.SETFILTER(
            "VAT Calculation Type",'%1|%2',
            SalesCrMemoLine2."VAT Calculation Type"::"Normal VAT",
            SalesCrMemoLine2."VAT Calculation Type"::"Full VAT");
          IF SalesCrMemoLine2.FINDFIRST THEN BEGIN
            TaxableAmount := 0;
            TaxAmount := 0;
            SalesCrMemoLine2.SETFILTER("VAT %",'<>0');
            IF SalesCrMemoLine2.FINDSET THEN BEGIN
              VATPercentage := SalesCrMemoLine2."VAT %";
              REPEAT
                UpdateTaxAmtAndTaxableAmt(SalesCrMemoLine2.Amount,SalesCrMemoLine2."Amount Including VAT",TaxableAmount,TaxAmount);
              UNTIL SalesCrMemoLine2.NEXT = 0;
              // Invoice->TaxTotal->TaxSubtotal
              AddElement(XMLCurrNode,'TaxSubtotal','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'TaxableAmount',
                OIOUBLDocumentEncode.DecimalToText(TaxableAmount),DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'currencyID',SalesCrMemoHeader."Currency Code");
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'TaxAmount',
                OIOUBLDocumentEncode.DecimalToText(TaxAmount),DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'currencyID',SalesCrMemoHeader."Currency Code");
              XMLCurrNode := XMLCurrNode.ParentNode;

              // Invoice->TaxTotal->TaxSubtotal->TaxCategory
              AddElement(XMLCurrNode,'TaxCategory','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;

              AddElement(XMLCurrNode,'ID',GetTaxCategoryID(SalesCrMemoLine2."VAT Calculation Type",VATPercentage),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxcategoryid-1.1');
              AddAttribute(XMLCurrNode,'schemeAgencyID','320');
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'Percent',OIOUBLDocumentEncode.DecimalToText(VATPercentage),
                DocNameSpace,XMLNewChild,Prefix);

              // Invoice->TaxTotal->TaxSubtotal->TaxCategory->TaxScheme
              AddElement(XMLCurrNode,'TaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;

              AddElement(XMLCurrNode,'ID','63',DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxschemeid-1.1');
              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'Name','Moms',DocNameSpace,XMLNewChild,Prefix);

              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;
            END;

            TaxableAmount := 0;
            TaxAmount := 0;
            SalesCrMemoLine2.SETRANGE("VAT %",0);
            IF SalesCrMemoLine2.FINDSET THEN BEGIN
              VATPercentage := SalesCrMemoLine2."VAT %";
              REPEAT
                UpdateTaxAmtAndTaxableAmt(SalesCrMemoLine2.Amount,SalesCrMemoLine2."Amount Including VAT",TaxableAmount,TaxAmount);
              UNTIL SalesCrMemoLine2.NEXT = 0;
              // Invoice->TaxTotal->TaxSubtotal
              AddElement(XMLCurrNode,'TaxSubtotal','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'TaxableAmount',
                OIOUBLDocumentEncode.DecimalToText(TaxableAmount),DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'currencyID',SalesCrMemoHeader."Currency Code");
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'TaxAmount',
                OIOUBLDocumentEncode.DecimalToText(TaxAmount),DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'currencyID',SalesCrMemoHeader."Currency Code");
              XMLCurrNode := XMLCurrNode.ParentNode;

              // Invoice->TaxTotal->TaxSubtotal->TaxCategory
              AddElement(XMLCurrNode,'TaxCategory','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;

              AddElement(XMLCurrNode,'ID',GetTaxCategoryID(SalesCrMemoLine2."VAT Calculation Type",VATPercentage),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxcategoryid-1.1');
              AddAttribute(XMLCurrNode,'schemeAgencyID','320');
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'Percent',OIOUBLDocumentEncode.DecimalToText(VATPercentage),
                DocNameSpace,XMLNewChild,Prefix);

              // Invoice->TaxTotal->TaxSubtotal->TaxCategory->TaxScheme
              AddElement(XMLCurrNode,'TaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;

              AddElement(XMLCurrNode,'ID','63',DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxschemeid-1.1');
              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'Name','Moms',DocNameSpace,XMLNewChild,Prefix);

              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;
            END;
          END;

          // Invoice->TaxTotal (for "Reverse Charge VAT")
          SalesCrMemoLine2.SETRANGE("VAT %");
          SalesCrMemoLine2.SETRANGE("VAT Calculation Type",SalesCrMemoLine2."VAT Calculation Type"::"Reverse Charge VAT");
          IF SalesCrMemoLine2.FINDSET THEN BEGIN
            TaxableAmount := 0;
            TaxAmount := 0;
            VATPercentage := SalesCrMemoLine2."VAT %";
            REPEAT
              UpdateTaxAmtAndTaxableAmt(SalesCrMemoLine2.Amount,SalesCrMemoLine2."Amount Including VAT",TaxableAmount,TaxAmount);
            UNTIL SalesCrMemoLine2.NEXT = 0;
            // Invoice->TaxTotal->TaxSubtotal
            AddElement(XMLCurrNode,'TaxSubtotal','',DocNameSpace2,XMLNewChild,Prefix2);
            XMLCurrNode := XMLNewChild;
            AddElement(XMLCurrNode,'TaxableAmount',
              OIOUBLDocumentEncode.DecimalToText(TaxableAmount),DocNameSpace,XMLNewChild,Prefix);
            XMLCurrNode := XMLNewChild;
            AddAttribute(XMLCurrNode,'currencyID',SalesCrMemoHeader."Currency Code");
            XMLCurrNode := XMLCurrNode.ParentNode;

            AddElement(XMLCurrNode,'TaxAmount',
              OIOUBLDocumentEncode.DecimalToText(TaxAmount),DocNameSpace,XMLNewChild,Prefix);
            XMLCurrNode := XMLNewChild;
            AddAttribute(XMLCurrNode,'currencyID',SalesCrMemoHeader."Currency Code");
            XMLCurrNode := XMLCurrNode.ParentNode;

            // CreditMemo->TaxTotal->TaxSubtotal->TaxCategory
            AddElement(XMLCurrNode,'TaxCategory','',DocNameSpace2,XMLNewChild,Prefix2);
            XMLCurrNode := XMLNewChild;

            AddElement(XMLCurrNode,'ID',GetTaxCategoryID(SalesCrMemoLine2."VAT Calculation Type",VATPercentage),
              DocNameSpace,XMLNewChild,Prefix);
            XMLCurrNode := XMLNewChild;
            AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxcategoryid-1.1');
            AddAttribute(XMLCurrNode,'schemeAgencyID','320');
            XMLCurrNode := XMLCurrNode.ParentNode;

            AddElement(XMLCurrNode,'Percent',OIOUBLDocumentEncode.DecimalToText(VATPercentage),
              DocNameSpace,XMLNewChild,Prefix);

            // CreditMemo->TaxTotal->TaxSubtotal->TaxCategory->TaxScheme
            AddElement(XMLCurrNode,'TaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);
            XMLCurrNode := XMLNewChild;

            AddElement(XMLCurrNode,'ID','63',DocNameSpace,XMLNewChild,Prefix);
            XMLCurrNode := XMLNewChild;
            AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxschemeid-1.1');
            XMLCurrNode := XMLCurrNode.ParentNode;
            AddElement(XMLCurrNode,'Name','Moms',DocNameSpace,XMLNewChild,Prefix);

            XMLCurrNode := XMLCurrNode.ParentNode;
            XMLCurrNode := XMLCurrNode.ParentNode;
            XMLCurrNode := XMLCurrNode.ParentNode;
          END;
          XMLCurrNode := XMLCurrNode.ParentNode;
        END;

        // CreditMemo->LegalMonetaryTotal
        TaxableAmount := 0;
        TaxAmount := 0;

        SalesCrMemoLine2.RESET;
        SalesCrMemoLine2.COPY(SalesCrMemoLine);
        IF SalesCrMemoLine2.FINDSET THEN
          REPEAT
            ExcludeVAT(SalesCrMemoLine2,SalesCrMemoHeader."Prices Including VAT");
            TaxableAmount := TaxableAmount + SalesCrMemoLine2.Amount + SalesCrMemoLine2."Inv. Discount Amount" +
              SalesCrMemoLine2."Line Discount Amount";
            TotalAmount := TotalAmount + SalesCrMemoLine2."Amount Including VAT";
            TaxAmount := TaxAmount + SalesCrMemoLine2."Amount Including VAT" - SalesCrMemoLine2.Amount;
          UNTIL SalesCrMemoLine2.NEXT = 0;

        AddElement(XMLCurrNode,'LegalMonetaryTotal','',DocNameSpace2,XMLNewChild,Prefix2);
        XMLCurrNode := XMLNewChild;

        AddElement(XMLCurrNode,'LineExtensionAmount',OIOUBLDocumentEncode.DecimalToText(TaxableAmount),
          DocNameSpace,XMLNewChild,Prefix);
        XMLCurrNode := XMLNewChild;
        AddAttribute(XMLCurrNode,'currencyID',CurrencyCode);
        XMLCurrNode := XMLCurrNode.ParentNode;

        AddElement(XMLCurrNode,'TaxExclusiveAmount',OIOUBLDocumentEncode.DecimalToText(TaxAmount),
          DocNameSpace,XMLNewChild,Prefix);
        XMLCurrNode := XMLNewChild;
        AddAttribute(XMLCurrNode,'currencyID',SalesCrMemoHeader."Currency Code");
        XMLCurrNode := XMLCurrNode.ParentNode;

        AddElement(XMLCurrNode,'TaxInclusiveAmount',OIOUBLDocumentEncode.DecimalToText(TotalAmount),
          DocNameSpace,XMLNewChild,Prefix);
        XMLCurrNode := XMLNewChild;
        AddAttribute(XMLCurrNode,'currencyID',SalesCrMemoHeader."Currency Code");
        XMLCurrNode := XMLCurrNode.ParentNode;

        IF TotalInvDiscountAmount > 0 THEN BEGIN
          AddElement(XMLCurrNode,'AllowanceTotalAmount',OIOUBLDocumentEncode.DecimalToText(TotalInvDiscountAmount),
            DocNameSpace,XMLNewChild,Prefix);
          XMLCurrNode := XMLNewChild;
          AddAttribute(XMLCurrNode,'currencyID',SalesCrMemoHeader."Currency Code");
          XMLCurrNode := XMLCurrNode.ParentNode;
        END;

        AddElement(XMLCurrNode,'PayableAmount',OIOUBLDocumentEncode.DecimalToText(TotalAmount),
          DocNameSpace,XMLNewChild,Prefix);
        XMLCurrNode := XMLNewChild;
        AddAttribute(XMLCurrNode,'currencyID',SalesCrMemoHeader."Currency Code");
        XMLCurrNode := XMLCurrNode.ParentNode;

        XMLCurrNode := XMLCurrNode.ParentNode;

        // CreditMemo->CreditMemoLine
        REPEAT
          SalesCrMemoLine.TESTFIELD(Description);
          ExcludeVAT(SalesCrMemoLine,SalesCrMemoHeader."Prices Including VAT");

          AddElement(XMLCurrNode,'CreditNoteLine','',DocNameSpace2,XMLNewChild,Prefix2);
          XMLCurrNode := XMLNewChild;

          AddElement(XMLCurrNode,'ID',FORMAT(SalesCrMemoLine."Line No."),DocNameSpace,XMLNewChild,Prefix);
          AddElement(XMLCurrNode,'CreditedQuantity',OIOUBLDocumentEncode.DecimalToText(SalesCrMemoLine.Quantity),
            DocNameSpace,XMLNewChild,Prefix);
          XMLCurrNode := XMLNewChild;
          AddAttribute(XMLCurrNode,'unitCode',OIOUBLDocumentEncode.GetUoMCode(SalesCrMemoLine."Unit of Measure Code"));
          XMLCurrNode := XMLCurrNode.ParentNode;

          AddElement(XMLCurrNode,'LineExtensionAmount',
            OIOUBLDocumentEncode.DecimalToText(SalesCrMemoLine.Amount + SalesCrMemoLine."Inv. Discount Amount" +
              SalesCrMemoLine."Line Discount Amount"),DocNameSpace,XMLNewChild,Prefix);
          XMLCurrNode := XMLNewChild;
          AddAttribute(XMLNewChild,'currencyID',SalesCrMemoHeader."Currency Code");
          XMLCurrNode := XMLCurrNode.ParentNode;

          AddElement(XMLCurrNode,'TaxTotal','',DocNameSpace2,XMLNewChild,Prefix2);
          XMLCurrNode := XMLNewChild;

          AddElement(XMLCurrNode,'TaxAmount',
            OIOUBLDocumentEncode.DecimalToText(SalesCrMemoLine."Amount Including VAT" - SalesCrMemoLine.Amount),
            DocNameSpace,XMLNewChild,Prefix);
          XMLCurrNode := XMLNewChild;
          AddAttribute(XMLCurrNode,'currencyID',CurrencyCode);
          XMLCurrNode := XMLCurrNode.ParentNode;

          AddElement(XMLCurrNode,'TaxSubtotal','',DocNameSpace2,XMLNewChild,Prefix2);
          XMLCurrNode := XMLNewChild;
          AddElement(XMLCurrNode,'TaxableAmount',
            OIOUBLDocumentEncode.DecimalToText(SalesCrMemoLine.Amount),DocNameSpace,XMLNewChild,Prefix);
          XMLCurrNode := XMLNewChild;
          AddAttribute(XMLCurrNode,'currencyID',CurrencyCode);
          XMLCurrNode := XMLCurrNode.ParentNode;

          AddElement(XMLCurrNode,'TaxAmount',
            OIOUBLDocumentEncode.DecimalToText(SalesCrMemoLine."Amount Including VAT" - SalesCrMemoLine.Amount),
            DocNameSpace,XMLNewChild,Prefix);
          XMLCurrNode := XMLNewChild;
          AddAttribute(XMLCurrNode,'currencyID',CurrencyCode);
          XMLCurrNode := XMLCurrNode.ParentNode;

          AddElement(XMLCurrNode,'TaxCategory','',DocNameSpace2,XMLNewChild,Prefix2);
          XMLCurrNode := XMLNewChild;

          AddElement(XMLCurrNode,'ID',GetTaxCategoryID(SalesCrMemoLine."VAT Calculation Type",SalesCrMemoLine."VAT %"),
            DocNameSpace,XMLNewChild,Prefix);
          XMLCurrNode := XMLNewChild;
          AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxcategoryid-1.1');
          AddAttribute(XMLCurrNode,'schemeAgencyID','320');
          XMLCurrNode := XMLCurrNode.ParentNode;

          AddElement(XMLCurrNode,'Percent',OIOUBLDocumentEncode.DecimalToText(SalesCrMemoLine."VAT %"),
            DocNameSpace,XMLNewChild,Prefix);

          // CreditMemo->CreditMemoLine->TaxTotal->TaxSubtotal->TaxCategory->TaxScheme
          AddElement(XMLCurrNode,'TaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);
          XMLCurrNode := XMLNewChild;

          AddElement(XMLCurrNode,'ID','63',DocNameSpace,XMLNewChild,Prefix);
          XMLCurrNode := XMLNewChild;
          AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxschemeid-1.1');
          XMLCurrNode := XMLCurrNode.ParentNode;
          AddElement(XMLCurrNode,'Name','Moms',DocNameSpace,XMLNewChild,Prefix);

          XMLCurrNode := XMLCurrNode.ParentNode;
          XMLCurrNode := XMLCurrNode.ParentNode;
          XMLCurrNode := XMLCurrNode.ParentNode;
          XMLCurrNode := XMLCurrNode.ParentNode;

          // CreditMemo->CreditMemoLine->Item
          AddElement(XMLCurrNode,'Item','',DocNameSpace2,XMLNewChild,Prefix2);
          XMLCurrNode := XMLNewChild;

          AddElement(XMLCurrNode,'Description',SalesCrMemoLine.Description,DocNameSpace,XMLNewChild,Prefix);
          AddElement(XMLCurrNode,'Name',COPYSTR(SalesCrMemoLine.Description,1,40),DocNameSpace,XMLNewChild,Prefix);

          // CreditMemo->CreditMemoLine->Item->SellersItemIdentification
          AddElement(XMLCurrNode,'SellersItemIdentification','',DocNameSpace2,XMLNewChild,Prefix2);
          XMLCurrNode := XMLNewChild;

          AddElement(XMLCurrNode,'ID',SalesCrMemoLine."No.",DocNameSpace,XMLNewChild,Prefix);
          XMLCurrNode := XMLNewChild;
          AddAttribute(XMLCurrNode,'schemeID','n/a');
          XMLCurrNode := XMLCurrNode.ParentNode;

          XMLCurrNode := XMLCurrNode.ParentNode;
          XMLCurrNode := XMLCurrNode.ParentNode;

          // CreditMemo->CreditMemoLine->Price
          AddElement(XMLCurrNode,'Price','',DocNameSpace2,XMLNewChild,Prefix2);
          XMLCurrNode := XMLNewChild;

          AddElement(XMLCurrNode,'PriceAmount',FORMAT(SalesCrMemoLine."Unit Price",0,9),
            DocNameSpace,XMLNewChild,Prefix);
          XMLCurrNode := XMLNewChild;
          AddAttribute(XMLCurrNode,'currencyID',CurrencyCode);
          XMLCurrNode := XMLCurrNode.ParentNode;

          AddElement(XMLCurrNode,'BaseQuantity',OIOUBLDocumentEncode.DecimalToText(SalesCrMemoLine.Quantity),
            DocNameSpace,XMLNewChild,Prefix);
          XMLCurrNode := XMLNewChild;
          AddAttribute(XMLNewChild,'unitCode',OIOUBLDocumentEncode.GetUoMCode(SalesCrMemoLine."Unit of Measure Code"));
          XMLCurrNode := XMLCurrNode.ParentNode;

          XMLCurrNode := XMLCurrNode.ParentNode;
          XMLCurrNode := XMLCurrNode.ParentNode;

        UNTIL SalesCrMemoLine.NEXT = 0;
      END;

      XMLdocOut.Save(FromFile);
    END;

    PROCEDURE ReadCompanyInfo@1101100003();
    BEGIN
      IF NOT CompanyInfoRead THEN BEGIN
        CompanyInfo.GET;
        CompanyInfoRead := TRUE;
      END;
    END;

    PROCEDURE ReadGLSetup@1101100011();
    BEGIN
      IF NOT GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
    END;

    PROCEDURE GetTaxCategoryID@1060038(Type@1060000 : 'Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax';VATPercent@1060001 : Decimal) : Text[15];
    BEGIN
      CASE Type OF
        Type::"Normal VAT":
          BEGIN
            IF VATPercent <> 0 THEN
              EXIT('StandardRated');
            EXIT('ZeroRated');
          END;
        Type::"Full VAT":
          EXIT('StandardRated');
        Type::"Reverse Charge VAT":
          EXIT('ReverseCharge');
        ELSE
          EXIT('ZeroRated');
      END;
    END;

    PROCEDURE UpdateTaxAmtAndTaxableAmt@1060001(Amount@1060000 : Decimal;AmountIncludingVAT@1060001 : Decimal;VAR TaxableAmountParam@1060002 : Decimal;VAR TaxAmountParam@1060003 : Decimal);
    BEGIN
      TaxableAmountParam := TaxableAmountParam + Amount;
      TaxAmountParam := TaxAmountParam + AmountIncludingVAT - Amount;
    END;

    LOCAL PROCEDURE ExcludeVAT@1060000(VAR SalesCrMemoLine@1060000 : Record 115;PricesInclVAT@1060001 : Boolean);
    VAR
      ExclVATFactor@1060002 : Decimal;
    BEGIN
      IF NOT PricesInclVAT THEN
        EXIT;
      WITH SalesCrMemoLine DO BEGIN
        ExclVATFactor := 1 + "VAT %" / 100;
        "Line Discount Amount" := ROUND("Line Discount Amount" / ExclVATFactor,Currency."Amount Rounding Precision");
        "Inv. Discount Amount" := ROUND("Inv. Discount Amount" / ExclVATFactor,Currency."Amount Rounding Precision");
        "Unit Price" := ROUND("Unit Price" / ExclVATFactor,Currency."Amount Rounding Precision");
      END;
    END;

    BEGIN
    {
      http://oioubl.info/Classes/da/Creditnote.html

      150205 ITERO.DL Added
        AddElement(XMLCurrNode,'Note','<![CDATA['+"Credit Memo Text"+']]>',DocNameSpace,XMLNewChild,Prefix);
      170104 ITERO.WG Added IssueDate, was missing
    }
    END.
  }
}

