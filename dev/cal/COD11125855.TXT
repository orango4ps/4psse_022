OBJECT Codeunit 11125855 Timesheet Port. create HAL
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11125853;
    OnRun=BEGIN
            CreateHourAccountingLine(Rec);
          END;

  }
  CODE
  {

    LOCAL PROCEDURE CreateHourAccountingLine@1100525000(TimesheetPortalHourLine@1100525000 : Record 11125853);
    VAR
      HourAccountingLine@1100525006 : Record 11012039;
      HourAccounting@1100525005 : Record 11012038;
      HourAccountingLine2@1100525004 : Record 11012039;
      UpdateAction@1100525007 : 'Insert,Modify,Delete,Rename';
    BEGIN
      WITH TimesheetPortalHourLine DO BEGIN
        //create header if needed

        IF NOT HourAccounting.GET(Year,Week,"Employee No.") THEN BEGIN
          HourAccounting.INIT;
          HourAccounting.SetSuppressMessages(TRUE);
          HourAccounting.Year := Year;
          HourAccounting.Week := Week;
          HourAccounting.VALIDATE("Employee No.","Employee No."); //C014478 Validation added
          HourAccounting.INSERT(TRUE);
        END;

        //create line
        HourAccountingLine.INIT;
        HourAccountingLine.Year := Year;
        HourAccountingLine.Week := Week;
        HourAccountingLine.SetFromHourAccByProj(HourAccountingLine.FIELDNO("Employee No."));
        HourAccountingLine.VALIDATE("Employee No.", "Employee No."); //validate also fills posting date of expenses (call 23504)
        HourAccountingLine2.SETRANGE(Year, Year);
        HourAccountingLine2.SETRANGE(Week, Week);
        HourAccountingLine2.SETRANGE("Employee No.", "Employee No.");
        IF HourAccountingLine2.FINDLAST THEN
          HourAccountingLine."Line No." := HourAccountingLine2."Line No." + 10000
        ELSE
          HourAccountingLine."Line No." := 10000;
        HourAccountingLine.InitRecord();
        HourAccountingLine.Type := Type;
        HourAccountingLine."Document No." := HourAccounting."Document No.";
        HourAccountingLine."Receiving Company" := "Receiving Company";
        IF COMPANYNAME = HourAccountingLine."Receiving Company" THEN
          HourAccountingLine."Receiving Company" := '';
      //HourAccountingLine."Extension Contract" := "Extension Contract"; //C018235.o
        IF ("Service Order No." <> '') THEN BEGIN
          HourAccountingLine.SetFromHourAccByProj(HourAccountingLine.FIELDNO("Service Order No."));
          HourAccountingLine.VALIDATE("Service Order No.", "Service Order No.");
        END;
        IF ("Project No." <> '') THEN BEGIN
          HourAccountingLine.SetFromHourAccByProj(HourAccountingLine.FIELDNO("Project No."));
          HourAccountingLine.VALIDATE("Project No.", "Project No.");
          HourAccountingLine."Extension Contract" := "Extension Contract"; //C018235.n
        END;
        HourAccountingLine.VALIDATE("Cost Code", "Cost Code");
        HourAccountingLine.SetFromHourAccByProj(HourAccountingLine.FIELDNO("Cost Object"));
        IF ("Cost Object" <> '') THEN BEGIN
          HourAccountingLine.VALIDATE("Cost Object", "Cost Object");
        END;
        HourAccountingLine.SetFromHourAccByProj(HourAccountingLine.FIELDNO("Wage Component"));
        //fill HourAccountingLine."Leave Type" and HourAccountingLine."Leave Factor"
        HourAccountingLine.VALIDATE("Wage Component", "Wage Component");
        HourAccountingLine.Element := Element;
        HourAccountingLine.Monday := Monday;
        HourAccountingLine.Tuesday := Tuesday;
        HourAccountingLine.Wednesday := Wednesday;
        HourAccountingLine.Thursday := Thursday;
        HourAccountingLine.Friday := Friday;
        HourAccountingLine.Saturday := Saturday;
        HourAccountingLine.Sunday := Sunday;
        HourAccountingLine.Comment := Comment;
        HourAccountingLine."Amount (LCY)" := Amount;
        HourAccountingLine.Quantity := Quantity;
        HourAccountingLine.CALCFIELDS("Component Type");
        IF HourAccountingLine."Component Type" = HourAccountingLine."Component Type"::Expenses THEN BEGIN
          HourAccountingLine.SetFromHourAccByProj(HourAccountingLine.FIELDNO(Amount));
          HourAccountingLine.VALIDATE("Amount (LCY)"); //validate of amount with quantity filled, fills UnitCost which can be used
                                               //  in validation
                                              //of quantity when type is expenses
        END;
        HourAccountingLine.SetFromHourAccByProj(HourAccountingLine.FIELDNO(Quantity));
        HourAccountingLine.VALIDATE(Quantity);
        HourAccountingLine.Correction := Correction;
        HourAccountingLine.VALIDATE("Reason Code", "Reason Code");
        HourAccountingLine.TotalHours();
        HourAccountingLine.FillDocNoPostingDate(FALSE);
        HourAccountingLine.UpdateCostControlStatus(UpdateAction::Insert); //C018471.n
        HourAccountingLine.CalcOverheadSurcharge; //C018471.n
        HourAccountingLine.INSERT(FALSE);
      END;
    END;

    BEGIN
    END.
  }
}

