OBJECT Table 11071901 NS Tracking Specification
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               TESTFIELD("Quantity Handled (Base)",0);
               TESTFIELD("Quantity Invoiced (Base)",0);
             END;

    CaptionML=[ENU=Non-stock Tracking Specification;
               NOR=Bestillingsvare sporingsspesifikasjon.;
               SVE=Best.vara sp†rn.spec.];
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              NOR=L›penr.;
                                                              SVE=L”pnr] }
    { 2   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Item No.;
                                                              NOR=Artikkelnr;
                                                              SVE=Artikelnr] }
    { 3   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              NOR=Plasseringkode;
                                                              SVE=Lagerst„llekod] }
    { 4   ;   ;Quantity (Base)     ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Quantity (Base)" * "Quantity Handled (Base)" < 0) OR
                                                                   ((ABS("Quantity (Base)") < ABS("Quantity Handled (Base)")))
                                                                THEN
                                                                  FIELDERROR("Quantity (Base)",STRSUBSTNO(Text002,FIELDCAPTION("Quantity Handled (Base)")));

                                                                CheckItemTrackingChange;
                                                                CheckSerialNoQty;
                                                                InitQtyToShip;
                                                              END;

                                                   CaptionML=[ENU=Quantity (Base);
                                                              NOR=Antall (lag.enh);
                                                              SVE=Antal (bas)];
                                                   DecimalPlaces=0:5 }
    { 7   ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 8   ;   ;Creation Date       ;Date          ;CaptionML=[ENU=Creation Date;
                                                              NOR=Opprettet den;
                                                              SVE=Uppl„ggningsdatum] }
    { 10  ;   ;Source Type         ;Integer       ;CaptionML=[ENU=Source Type;
                                                              NOR=Kildetype;
                                                              SVE=Ursprungstyp] }
    { 11  ;   ;Source Subtype      ;Option        ;CaptionML=[ENU=Source Subtype;
                                                              NOR=Kildeundertype;
                                                              SVE=Ursprungssubtyp];
                                                   OptionCaptionML=[ENU=0,1,2,3,4,5,6,7,8,9,10;
                                                                    NOR=0,1,2,3,4,5,6,7,8,9,10;
                                                                    SVE=0,1,2,3,4,5,6,7,8,9,10];
                                                   OptionString=0,1,2,3,4,5,6,7,8,9,10 }
    { 12  ;   ;Source ID           ;Code20        ;CaptionML=[ENU=Source ID;
                                                              NOR=Kilde-ID;
                                                              SVE=Ursprungs-ID] }
    { 13  ;   ;Source Batch Name   ;Code10        ;CaptionML=[ENU=Source Batch Name;
                                                              NOR=Navn p† kildebunke;
                                                              SVE=Ursprungsjnlnamn] }
    { 14  ;   ;Source Prod. Order Line;Integer    ;CaptionML=[ENU=Source Prod. Order Line;
                                                              NOR=Kildeprod.ordrerad;
                                                              SVE=Ursprungsprod.orderrad] }
    { 15  ;   ;Source Ref. No.     ;Integer       ;CaptionML=[ENU=Source Ref. No.;
                                                              NOR=Kilderef.nr.;
                                                              SVE=Ursprungsref.nr] }
    { 16  ;   ;Appl.-to Item Entry ;Integer       ;TableRelation="Item Ledger Entry";
                                                   CaptionML=[ENU=Appl.-to Item Entry;
                                                              NOR=Utligningsvarepost;
                                                              SVE=Koppla till artikell”pnr] }
    { 17  ;   ;Transfer Item Entry No.;Integer    ;TableRelation="Item Ledger Entry";
                                                   CaptionML=[ENU=Transfer Item Entry No.;
                                                              NOR=Overf›r artikkeltransaksjonsnr;
                                                              SVE=™verf”ring artikell”pnr] }
    { 24  ;   ;Serial No.          ;Code50        ;OnValidate=BEGIN
                                                                IF "Serial No." <> xRec."Serial No." THEN BEGIN
                                                                  TESTFIELD("Quantity Handled (Base)",0);
                                                                  IF IsReclass THEN
                                                                    "New Serial No." := "Serial No.";
                                                                  CheckItemTrackingChange;
                                                                  IF NOT SkipSerialNoQtyValidation THEN
                                                                    CheckSerialNoQty;
                                                                  InitExpirationDate;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Serial No.;
                                                              NOR=Serienr.;
                                                              SVE=Serienr] }
    { 28  ;   ;Positive            ;Boolean       ;CaptionML=[ENU=Positive;
                                                              NOR=Positiv;
                                                              SVE=Positiv] }
    { 29  ;   ;Qty. per Unit of Measure;Decimal   ;InitValue=1;
                                                   CaptionML=[ENU=Qty. per Unit of Measure;
                                                              NOR=Antall per enhet;
                                                              SVE=Antal per enhet];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 40  ;   ;Warranty Date       ;Date          ;CaptionML=[ENU=Warranty Date;
                                                              NOR=Garantidato;
                                                              SVE=Garantidatum] }
    { 41  ;   ;Expiration Date     ;Date          ;OnValidate=BEGIN
                                                                CheckItemTrackingChange;
                                                                IF "Buffer Status2" = "Buffer Status2"::"ExpDate blocked" THEN BEGIN
                                                                  "Expiration Date" := xRec."Expiration Date";
                                                                  MESSAGE(Text004);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Expiration Date;
                                                              NOR=Utg†r den;
                                                              SVE=Utg†ngsdatum] }
    { 50  ;   ;Qty. to Handle (Base);Decimal      ;OnValidate=BEGIN
                                                                IF ("Qty. to Handle (Base)" * "Quantity (Base)" < 0) OR
                                                                   (ABS("Qty. to Handle (Base)") > ABS("Quantity (Base)")
                                                                   - "Quantity Handled (Base)")
                                                                THEN
                                                                  ERROR(
                                                                    Text001,
                                                                    "Quantity (Base)" - "Quantity Handled (Base)");

                                                                InitQtyToInvoice;
                                                                "Qty. to Handle" := CalcQty("Qty. to Handle (Base)");
                                                              END;

                                                   CaptionML=[ENU=Qty. to Handle (Base);
                                                              NOR=Ant. † h†ndtere (lag.enh);
                                                              SVE=Ant. att hantera (bas)];
                                                   DecimalPlaces=0:5 }
    { 51  ;   ;Qty. to Invoice (Base);Decimal     ;OnValidate=BEGIN
                                                                IF ("Qty. to Invoice (Base)" * "Quantity (Base)" < 0) OR
                                                                   (ABS("Qty. to Invoice (Base)") > ABS("Qty. to Handle (Base)"
                                                                   + "Quantity Handled (Base)" - "Quantity Invoiced (Base)"))
                                                                THEN
                                                                  ERROR(
                                                                    Text000,
                                                                    "Qty. to Handle (Base)" + "Quantity Handled (Base)"- "Quantity Invoiced (Base)");
                                                                "Qty. to Invoice" := CalcQty("Qty. to Invoice (Base)");
                                                              END;

                                                   CaptionML=[ENU=Qty. to Invoice (Base);
                                                              NOR=Ant. som skal fakt. (l.enh.);
                                                              SVE=Ant. att faktureras (bas)];
                                                   DecimalPlaces=0:5 }
    { 52  ;   ;Quantity Handled (Base);Decimal    ;CaptionML=[ENU=Quantity Handled (Base);
                                                              NOR=H†ndtert antall (l.enh.);
                                                              SVE=Antal hanterat (bas)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 53  ;   ;Quantity Invoiced (Base);Decimal   ;CaptionML=[ENU=Quantity Invoiced (Base);
                                                              NOR=Antall fakturert  (lag.enh);
                                                              SVE=Antal fakturerat (bas)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 60  ;   ;Qty. to Handle      ;Decimal       ;CaptionML=[ENU=Qty. to Handle;
                                                              NOR=Ant. som skal h†ndt.;
                                                              SVE=Ant. att hantera];
                                                   DecimalPlaces=0:5 }
    { 61  ;   ;Qty. to Invoice     ;Decimal       ;CaptionML=[ENU=Qty. to Invoice;
                                                              NOR=Fakturer (antall);
                                                              SVE=Ant. att fakturera];
                                                   DecimalPlaces=0:5 }
    { 70  ;   ;Buffer Status       ;Option        ;CaptionML=[ENU=Buffer Status;
                                                              NOR=Bufferstatus;
                                                              SVE=Bufferstatus];
                                                   OptionCaptionML=[ENU=" ,MODIFY,INSERT";
                                                                    NOR=" ,ENDRE,SETT INN";
                                                                    SVE=" ,MODIFY,INSERT"];
                                                   OptionString=[ ,MODIFY,INSERT];
                                                   Editable=No }
    { 71  ;   ;Buffer Status2      ;Option        ;CaptionML=[ENU=Buffer Status2;
                                                              NOR=Bufferstatus 2;
                                                              SVE=Buffertstatus2];
                                                   OptionCaptionML=[ENU=,ExpDate blocked;
                                                                    NOR=,ExpDate sperret;
                                                                    SVE=,ExpDate sp„rrat];
                                                   OptionString=,ExpDate blocked;
                                                   Editable=No }
    { 72  ;   ;Buffer Value1       ;Decimal       ;CaptionML=[ENU=Buffer Value1;
                                                              NOR=Bufferverdi 1;
                                                              SVE=Buffertv„rde1];
                                                   Editable=No }
    { 73  ;   ;Buffer Value2       ;Decimal       ;CaptionML=[ENU=Buffer Value2;
                                                              NOR=Bufferverdi 2;
                                                              SVE=Buffertv„rde2];
                                                   Editable=No }
    { 74  ;   ;Buffer Value3       ;Decimal       ;CaptionML=[ENU=Buffer Value3;
                                                              NOR=Bufferverdi 3;
                                                              SVE=Buffertv„rde3];
                                                   Editable=No }
    { 75  ;   ;Buffer Value4       ;Decimal       ;CaptionML=[ENU=Buffer Value4;
                                                              NOR=Bufferverdi4;
                                                              SVE=Buffertv„rde4];
                                                   Editable=No }
    { 76  ;   ;Buffer Value5       ;Decimal       ;CaptionML=[ENU=Buffer Value5;
                                                              NOR=Bufferverdi 5;
                                                              SVE=Buffertv„rde5];
                                                   Editable=No }
    { 80  ;   ;New Serial No.      ;Code50        ;OnValidate=BEGIN
                                                                CheckItemTrackingChange;
                                                              END;

                                                   CaptionML=[ENU=New Serial No.;
                                                              NOR=Nytt serienr.;
                                                              SVE=Nytt serienr] }
    { 81  ;   ;New Lot No.         ;Code50        ;OnValidate=BEGIN
                                                                CheckItemTrackingChange;
                                                              END;

                                                   CaptionML=[ENU=New Lot No.;
                                                              NOR=Nytt partinr.;
                                                              SVE=Nytt partinr] }
    { 5400;   ;Lot No.             ;Code50        ;OnValidate=BEGIN
                                                                IF "Lot No." <> xRec."Lot No." THEN BEGIN
                                                                  TESTFIELD("Quantity Handled (Base)",0);
                                                                  IF IsReclass THEN
                                                                    "New Lot No." := "Lot No.";
                                                                  CheckItemTrackingChange;
                                                                  InitExpirationDate;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Lot No.;
                                                              NOR=Partinr.;
                                                              SVE=Partinr] }
    { 5401;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              NOR=Variantkode;
                                                              SVE=Variantkod] }
    { 5402;   ;Bin Code            ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Location Code));
                                                   CaptionML=[ENU=Bin Code;
                                                              NOR=Lagerplasseringskode;
                                                              SVE=Lagerplatskod] }
    { 5811;   ;Appl.-from Item Entry;Integer      ;OnValidate=VAR
                                                                ItemLedgEntry@1000 : Record 32;
                                                              BEGIN
                                                                IF "Appl.-from Item Entry" = 0 THEN
                                                                  EXIT;

                                                                CASE "Source Type" OF
                                                                  DATABASE::"Sales Line":
                                                                    IF (("Source Subtype" IN [3,5]) AND ("Quantity (Base)" < 0)) OR
                                                                       (("Source Subtype" IN [1,2]) AND ("Quantity (Base)" > 0)) //sale
                                                                    THEN
                                                                      FIELDERROR("Quantity (Base)");
                                                                  DATABASE::"Item Journal Line":
                                                                    IF (("Source Subtype" IN [0,2,6]) AND ("Quantity (Base)" < 0)) OR
                                                                       (("Source Subtype" IN [1,3,4,5]) AND ("Quantity (Base)" > 0))
                                                                    THEN
                                                                      FIELDERROR("Quantity (Base)");
                                                                  DATABASE::"Service Line":
                                                                    IF (("Source Subtype" IN [3]) AND ("Quantity (Base)" < 0)) OR
                                                                       (("Source Subtype" IN [1,2]) AND ("Quantity (Base)" > 0))
                                                                    THEN
                                                                      FIELDERROR("Quantity (Base)");
                                                                  ELSE
                                                                    FIELDERROR("Source Subtype");
                                                                END;

                                                                IF ("Serial No." = '') AND ("Lot No." = '') THEN BEGIN
                                                                  TESTFIELD("Serial No.");
                                                                  TESTFIELD("Lot No.");
                                                                END;
                                                                ItemLedgEntry.GET("Appl.-from Item Entry");
                                                                ItemLedgEntry.SETRANGE("Item No.","Item No.");
                                                                ItemLedgEntry.TESTFIELD(Positive,FALSE);
                                                                IF ItemLedgEntry."Shipped Qty. Not Returned" + ABS("Qty. to Handle (Base)") > 0 THEN
                                                                  ItemLedgEntry.FIELDERROR("Shipped Qty. Not Returned");
                                                                ItemLedgEntry.TESTFIELD("Variant Code","Variant Code");
                                                                ItemLedgEntry.TESTFIELD("Serial No.","Serial No.");
                                                                ItemLedgEntry.TESTFIELD("Lot No.","Lot No.");
                                                              END;

                                                   OnLookup=VAR
                                                              ItemLedgEntry@1000 : Record 32;
                                                            BEGIN
                                                              ItemLedgEntry.SETCURRENTKEY("Item No.",Positive,"Location Code","Variant Code");
                                                              ItemLedgEntry.SETRANGE("Item No.","Item No.");
                                                              ItemLedgEntry.SETRANGE(Positive,FALSE);
                                                              IF "Location Code" <> '' THEN
                                                                ItemLedgEntry.SETRANGE("Location Code","Location Code");
                                                              ItemLedgEntry.SETRANGE("Variant Code","Variant Code");
                                                              ItemLedgEntry.SETRANGE("Serial No.","Serial No.");
                                                              ItemLedgEntry.SETRANGE("Lot No.","Lot No.");
                                                              ItemLedgEntry.SETFILTER("Shipped Qty. Not Returned",'<0');
                                                              IF PAGE.RUNMODAL(PAGE::"Item Ledger Entries",ItemLedgEntry) = ACTION::LookupOK THEN
                                                                VALIDATE("Appl.-from Item Entry",ItemLedgEntry."Entry No.");
                                                            END;

                                                   CaptionML=[ENU=Appl.-from Item Entry;
                                                              NOR=Utlignet fra-varepost;
                                                              SVE=Koppla fr†n artikell”pnr];
                                                   MinValue=0 }
    { 5817;   ;Correction          ;Boolean       ;CaptionML=[ENU=Correction;
                                                              NOR=Korreksjon;
                                                              SVE=R„ttningstransaktion] }
    { 6505;   ;New Expiration Date ;Date          ;OnValidate=BEGIN
                                                                CheckItemTrackingChange;
                                                              END;

                                                   CaptionML=[ENU=New Expiration Date;
                                                              NOR=Ny utl›psdato;
                                                              SVE=Nytt utg†ngsdatum] }
    { 7300;   ;Quantity actual Handled (Base);Decimal;
                                                   CaptionML=[ENU=Quantity actual Handled (Base);
                                                              NOR=Faktisk ant. h†ndtert (l.enh);
                                                              SVE=Ant. faktiskt hanterade (bas)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 11012000;;Tracking Entry No. ;Integer       ;CaptionML=[ENU=Tracking Entry No.;
                                                              NOR=Sporingstransaksjonsnr;
                                                              SVE=Sp†rningsartikelnr] }
    { 11012010;;Warranty Code Vendor;Code10       ;TableRelation="Service Warranty";
                                                   CaptionML=[ENU=Warranty Code Vendor;
                                                              NOR=Garantikode leverand›r;
                                                              SVE=Grantikod leveran”r] }
    { 11012020;;Warranty Start Date Vendor;Date   ;CaptionML=[ENU=Warranty Start Date Vendor;
                                                              NOR=Garantistartdato leverand›r;
                                                              SVE=Garantistartdatum leverant”r] }
    { 11012030;;Warranty Period Vendor;DateFormula;CaptionML=[ENU=Warranty Period Vendor;
                                                              NOR=Garantiperiode leverand›r;
                                                              SVE=Grantiperiod leverant”r] }
    { 11012040;;Warranty Code Customer;Code10     ;TableRelation="Service Warranty";
                                                   CaptionML=[ENU=Warranty Code Customer;
                                                              NOR=Garantikode kunde;
                                                              SVE=Grantikod kund] }
    { 11012050;;Warranty Start Date Customer;Date ;CaptionML=[ENU=Warranty Start Date Customer;
                                                              NOR=Garantistartdato kunde;
                                                              SVE=Garantistartdatum kund] }
    { 11012060;;Warranty Period Customer;DateFormula;
                                                   CaptionML=[ENU=Warranty Period Customer;
                                                              NOR=Garantiperiode kunde;
                                                              SVE=Grantiperiod kund] }
    { 11012070;;Warranty Date Customer;Date       ;CaptionML=[ENU=Warranty Date Customer;
                                                              NOR=Garantidato kunde;
                                                              SVE=Grantidatum kund];
                                                   Editable=No }
    { 11012080;;Good Customs       ;Boolean       ;CaptionML=[ENU=Good Customs;
                                                              NOR=Varetoll;
                                                              SVE=Varutull] }
    { 11012090;;Shipment with T1   ;Boolean       ;CaptionML=[ENU=Shipment with T1;
                                                              NOR=Levering med T1;
                                                              SVE=Frakt med T1] }
    { 11012100;;Customs Destination Code;Code20   ;CaptionML=[ENU=Customs Destination Code;
                                                              NOR=Tollens destinasjonskode;
                                                              SVE=Tulls destinationskod] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Source ID,Source Type,Source Subtype,Source Batch Name,Source Prod. Order Line,Source Ref. No. }
    {    ;Lot No.,Serial No.                       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528605 : TextConst 'ENU=You cannot invoice more than %1 units.;NOR=Du kan ikke fakturere mer enn %1 enheter.;SVE=Du kan inte fakturera mer „n %1 stycken.';
      Text001@1100528604 : TextConst 'ENU=You cannot handle more than %1 units.;NOR=Du kan ikke h†ndtere mer enn %1 enheter.;SVE=Du kan inte hantera mer „n %1 enheter.';
      Text002@1100528603 : TextConst 'ENU=must not be less than %1;NOR=kan ikke v‘re mindre enn %1;SVE=f†r inte vara mindre „n %1';
      Text003@1100528602 : TextConst 'ENU=%1 must be -1, 0 or 1 when %2 is stated.;NOR=%1 m† v‘re -1, 0 eller 1 n†r %2 er oppgitt.;SVE=%1 m†ste vara -1, 0 eller 1 n„r %2 „r best„md.';
      Text004@1100528601 : TextConst 'ENU=Expiration date has been established by existing entries and cannot be changed.;NOR=Utl›psdatoen er etablert av eksisterende poster og kan ikke endres.;SVE=Utg†ngsdatumet bygger p† befintliga transaktioner och kan inte „ndras.';
      Text005@1100528600 : TextConst 'ENU=%1 in %2 for %3 %4, %5: %6, %7: %8 is currently %9. It must be %10.;NOR=%1 i %2 for %3 %4, %5: %6, %7: %8 er n† %9. Det m† v‘re %10.;SVE=%1 i %2 f”r %3 %4, %5: %6, %7: %8 „r just nu %9. Det m†ste vara %10.';
      WMSManagement@1100528607 : Codeunit 7302;
      SkipSerialNoQtyValidation@1100528606 : Boolean;

    PROCEDURE InitQtyToShip@15();
    BEGIN
      "Qty. to Handle (Base)" := "Quantity (Base)" - "Quantity Handled (Base)";
      "Qty. to Handle" := CalcQty("Qty. to Handle (Base)");

      InitQtyToInvoice;
    END;

    PROCEDURE InitQtyToInvoice@13();
    BEGIN
      "Qty. to Invoice (Base)" := "Quantity Handled (Base)" + "Qty. to Handle (Base)" - "Quantity Invoiced (Base)";
      "Qty. to Invoice" := CalcQty("Qty. to Invoice (Base)");
    END;

    PROCEDURE CheckSerialNoQty@1();
    BEGIN
      IF "Serial No." <> '' THEN
        IF NOT ("Quantity (Base)" IN [-1,0,1]) THEN
          ERROR(Text003,FIELDCAPTION("Quantity (Base)"),FIELDCAPTION("Serial No."));
    END;

    PROCEDURE CopyPointerFilters@3(VAR ProjInvItemTrackingEntry@1000 : Record 11071900);
    BEGIN
      ProjInvItemTrackingEntry.COPYFILTER("Source Type","Source Type");
      ProjInvItemTrackingEntry.COPYFILTER("Source Subtype","Source Subtype");
      ProjInvItemTrackingEntry.COPYFILTER("Source ID","Source ID");
      ProjInvItemTrackingEntry.COPYFILTER("Source Batch Name","Source Batch Name");
      ProjInvItemTrackingEntry.COPYFILTER("Source Prod. Order Line","Source Prod. Order Line");
      ProjInvItemTrackingEntry.COPYFILTER("Source Ref. No.","Source Ref. No.");
    END;

    PROCEDURE CalcQty@14(BaseQty@1000 : Decimal) : Decimal;
    BEGIN
      IF "Qty. per Unit of Measure" = 0 THEN
        "Qty. per Unit of Measure" := 1;
      EXIT(ROUND(BaseQty/"Qty. per Unit of Measure",0.00001));
    END;

    PROCEDURE InitExpirationDate@2();
    VAR
      ItemTrackingMgt@1001 : Codeunit 6500;
      ExpDate@1000 : Date;
      EntriesExist@1002 : Boolean;
    BEGIN
      IF ("Serial No." = xRec."Serial No.") AND ("Lot No." = xRec."Lot No.") THEN
        EXIT;

      "Expiration Date" := 0D;

      ExpDate := ItemTrackingMgt.ExistingExpirationDate("Item No.","Variant Code","Lot No.","Serial No.",FALSE,EntriesExist);
      IF EntriesExist THEN BEGIN
        "Expiration Date" := ExpDate;
        "Buffer Status2" := "Buffer Status2"::"ExpDate blocked";
      END ELSE
        "Buffer Status2" := 0;

      IF IsReclass THEN BEGIN
        "New Expiration Date":= "Expiration Date";
        "Warranty Date" := ItemTrackingMgt.ExistingWarrantyDate("Item No.","Variant Code","Lot No.","Serial No.",EntriesExist);
      END;
    END;

    PROCEDURE IsReclass@4() : Boolean;
    BEGIN
      EXIT(("Source Type"= DATABASE::"Item Journal Line") AND ("Source Subtype" = 4));
    END;

    PROCEDURE TestFieldError@5(FieldCaptionText@1000 : Text[80];CurrFieldValue@1001 : Decimal;CompareValue@1002 : Decimal);
    BEGIN
      IF CurrFieldValue = CompareValue THEN
        EXIT;

      ERROR(Text005,
            FieldCaptionText,
            TABLECAPTION,
            FIELDCAPTION("Item No."),
            "Item No.",
            FIELDCAPTION("Serial No."),
            "Serial No.",
            FIELDCAPTION("Lot No."),
            "Lot No.",
            CurrFieldValue,
            CompareValue);
    END;

    PROCEDURE SetSkipSerialNoQtyValidation@7(NewVal@1000 : Boolean);
    BEGIN
      SkipSerialNoQtyValidation := NewVal;
    END;

    PROCEDURE CheckItemTrackingChange@1100528600();
    VAR
      TrackingSpecification@1100528601 : Record 336;
      xTrackingSpecification@1100528600 : Record 336;
    BEGIN
      TrackingSpecification.TRANSFERFIELDS(Rec);
      xTrackingSpecification.TRANSFERFIELDS(xRec);
      WMSManagement.CheckItemTrackingChange(TrackingSpecification,xTrackingSpecification);
    END;

    [External]
    PROCEDURE SetSourceFilter@31(SourceType@1011 : Integer;SourceSubtype@1010 : Integer;SourceID@1009 : Code[20];SourceRefNo@1008 : Integer;SourceKey@1000 : Boolean);
    BEGIN
      IF SourceKey THEN
        SETCURRENTKEY(
          "Source ID","Source Type","Source Subtype","Source Batch Name",
          "Source Prod. Order Line","Source Ref. No.");
      SETRANGE("Source Type",SourceType);
      IF SourceSubtype >= 0 THEN
        SETRANGE("Source Subtype",SourceSubtype);
      SETRANGE("Source ID",SourceID);
      IF SourceRefNo >= 0 THEN
        SETRANGE("Source Ref. No.",SourceRefNo);
    END;

    [External]
    PROCEDURE SetSourceFilter2@33(SourceBatchName@1007 : Code[10];SourceProdOrderLine@1006 : Integer);
    BEGIN
      SETRANGE("Source Batch Name",SourceBatchName);
      SETRANGE("Source Prod. Order Line",SourceProdOrderLine);
    END;

    BEGIN
    END.
  }
}

