OBJECT Report 11128050 Create work schedule
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create Work Schedule;
               NOR=Opprette Arbeidsplan;
               SVE=Skapa Schema];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN

                   InputStartDate:=0D;
                   InputEndDate:=0D;
                   NormHoursWorkday:=8;
                   NormHoursWeekend:=0;
                 END;

    OnPreReport=BEGIN

                  IF InputStartDate = 0D THEN
                    ERROR(Text02);

                  IF InputEndDate = 0D THEN
                    ERROR(Text03);

                  WorkSchedule.SETRANGE(Date,InputStartDate,InputEndDate);
                  IF WorkSchedule.FINDSET THEN
                    IF NOT CONFIRM(Text01) THEN
                      CurrReport.QUIT
                     ELSE WorkSchedule.DELETEALL;
                END;

    OnPostReport=BEGIN


                   WHILE InputStartDate <= InputEndDate DO BEGIN
                     WorkSchedule.INIT;
                     WorkSchedule.Date:=InputStartDate;
                     WorkSchedule.INSERT(TRUE);

                     DayOfWeek := DATE2DWY(InputStartDate,1);

                     IF DayOfWeek = 1 THEN
                       WorkSchedule."Norm Hours":=Monday;
                     IF DayOfWeek = 2 THEN
                       WorkSchedule."Norm Hours":=Tuesday;
                     IF DayOfWeek = 3 THEN
                       WorkSchedule."Norm Hours":=Wednesday;
                     IF DayOfWeek = 4 THEN
                       WorkSchedule."Norm Hours":=Thursday;
                     IF DayOfWeek = 5 THEN
                       WorkSchedule."Norm Hours":=Friday;
                     IF DayOfWeek = 6 THEN
                       WorkSchedule."Norm Hours":=Saturday;
                     IF DayOfWeek = 7 THEN
                       WorkSchedule."Norm Hours":=Sunday;


                     IF Date.GET(Date."Period Type"::Date,InputStartDate) THEN
                       WorkSchedule.Weekday := Date."Period Name";
                     // ELSE
                       //WorkSchedule.Weekday:='Hittade ej dag';

                     WorkSchedule.MODIFY(TRUE);
                     InputStartDate := CALCDATE('1D',InputStartDate);

                   END;

                   InputStartDate:=0D;
                   InputEndDate:=0D;
                 END;

    UseRequestPage=Yes;
  }
  DATASET
  {
    { 5444;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100285000;;Container;
                  Name=Container;
                  ContainerType=ContentArea }

      { 1100285001;1;Group  ;
                  GroupType=Group }

      { 1100285002;2;Field  ;
                  CaptionML=[ENU=Start date;
                             NOR=Startdato;
                             SVE=Startdatum];
                  SourceExpr=InputStartDate }

      { 1100285005;2;Field  ;
                  CaptionML=[ENU=End date;
                             NOR=Sluttdato;
                             SVE=Slutdatum];
                  SourceExpr=InputEndDate }

      { 1100285003;2;Field  ;
                  CaptionML=[ENU=Monday;
                             NOR=Mandag;
                             SVE=M†ndag];
                  SourceExpr=Monday }

      { 1100285007;2;Field  ;
                  CaptionML=[ENU=Tuesday;
                             NOR=Tirsdag;
                             SVE=Tisdag];
                  SourceExpr=Tuesday }

      { 1100285008;2;Field  ;
                  CaptionML=[ENU=Wednesday;
                             NOR=Onsdag;
                             SVE=Onsdag];
                  SourceExpr=Wednesday }

      { 1100285009;2;Field  ;
                  CaptionML=[ENU=Thursday;
                             NOR=Torsdag;
                             SVE=Torsdag];
                  SourceExpr=Thursday }

      { 1100285010;2;Field  ;
                  CaptionML=[ENU=Friday;
                             NOR=Fredag;
                             SVE=Fredag];
                  SourceExpr=Friday }

      { 1100285011;2;Field  ;
                  CaptionML=[ENU=Saturday;
                             NOR=L›rdag;
                             SVE=L”rdag];
                  SourceExpr=Saturday }

      { 1100285012;2;Field  ;
                  CaptionML=[ENU=Sunday;
                             NOR=S›ndag;
                             SVE=S”ndag];
                  SourceExpr=Sunday }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      InputStartDate@1100285010 : Date;
      InputEndDate@1100285011 : Date;
      NormHoursWorkday@1100285003 : Decimal;
      NormHoursWeekend@1100285001 : Decimal;
      WorkSchedule@1100285002 : Record 11128050;
      DayOfWeek@1100285006 : Integer;
      BaseCalendar@1100285007 : Record 11072014;
      Date@1100285008 : Record 2000000007;
      Text01@1100285000 : TextConst 'ENU=Existing schedule between these dates will be overwrited, do you want to proceed?;NOR=Eksisterende timeplan mellom disse datoene vil overskrives, vil du fortsette?;SVE=Befintligt schema mellan dessa datum kommer att skrivas ”ver, vill du forts„tta?';
      Createworkschedule@1100285004 : Report 11128050;
      Text02@1100285005 : TextConst 'ENU=Input start date;NOR=Angi startdato;SVE=Ange startdatum';
      Text03@1100285009 : TextConst 'ENU=Input end date;NOR=Angi sluttdato;SVE=Ange slutdatum';
      Monday@1100285012 : Decimal;
      Tuesday@1100285013 : Decimal;
      Wednesday@1100285014 : Decimal;
      Thursday@1100285015 : Decimal;
      Friday@1100285016 : Decimal;
      Saturday@1100285017 : Decimal;
      Sunday@1100285018 : Decimal;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

