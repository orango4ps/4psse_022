OBJECT Page 6086019 Purch. Posted Inv. (WS)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCOW13.70.00,DCW16.00.00.5.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Eink. Gebuchtes Inv. (WS);
               ENU=Purch. Posted Inv. (WS);
               NLD=Purch. Posted Inv. (WS)];
    SourceTable=Table122;
    PageType=Card;
    OnAfterGetRecord=VAR
                       GLSetup@161024012 : Record 98;
                       Currency@161024013 : Record 4;
                       CurrExchRate@161024014 : Record 330;
                       JobAndDimMgt@161024015 : Codeunit 6086004;
                     BEGIN
                       GLSetup.GET;

                       IF "Currency Code" IN ['',GLSetup."LCY Code"] THEN BEGIN
                         CurrencyCode := GLSetup."LCY Code";
                         AmountExclVATLCY := Amount;
                         AmountInclVATLCY := "Amount Including VAT";
                       END ELSE BEGIN
                         CurrencyCode := "Currency Code";

                         Currency.InitRoundingPrecision;
                       //**4PS.so
                       //  AmountExclVATLCY := ROUND(CurrExchRate.ExchangeAmtFCYToLCY("Posting Date","Currency Code",Amount,"Currency Factor"),
                       //    Currency."Amount Rounding Precision");
                       //  AmountInclVATLCY := ROUND(CurrExchRate.ExchangeAmtFCYToLCY("Posting Date","Currency Code","Amount Including VAT",
                       //    "Currency Factor"),Currency."Amount Rounding Precision");
                       //**4PS.eo
                       //**4PS.sn
                         AmountExclVATLCY := ROUND(CurrExchRate.ExchangeAmtFCYToLCY(0,'',"Posting Date","Currency Code",Amount,"Currency Factor",FALSE),
                           Currency."Amount Rounding Precision");
                         AmountInclVATLCY := ROUND(CurrExchRate.ExchangeAmtFCYToLCY(0,'',"Posting Date","Currency Code","Amount Including VAT",
                           "Currency Factor",FALSE),Currency."Amount Rounding Precision");
                       //**4PS.en
                       END;

                       JobAndDimMgt.GetPurchInvHeaderDim(Rec,WebDimValueCode);

                       IF "Pre-Assigned No." = '' THEN
                         "Pre-Assigned No." := 'XXXXXXX'; // This fixes a filtering-bug in NAV in WS
                     END;

    OnModifyRecord=BEGIN
                     ERROR('');
                   END;

  }
  CONTROLS
  {
    { 161024012;;Container;
                Name=ContentArea;
                ContainerType=ContentArea }

    { 161024013;1;Group   ;
                Name=Generelt;
                GroupType=Group }

    { 161024016;2;Field   ;
                Name=No;
                SourceExpr="No." }

    { 161024017;2;Field   ;
                Name=PayToVendorNo;
                SourceExpr="Pay-to Vendor No." }

    { 161024018;2;Field   ;
                Name=PayToName;
                SourceExpr="Pay-to Name" }

    { 161024019;2;Field   ;
                Name=PayToName2;
                SourceExpr="Pay-to Name 2" }

    { 161024020;2;Field   ;
                Name=PayToAddress;
                SourceExpr="Pay-to Address" }

    { 161024021;2;Field   ;
                Name=PayToAddress2;
                SourceExpr="Pay-to Address 2" }

    { 161024022;2;Field   ;
                Name=PayToCity;
                SourceExpr="Pay-to City" }

    { 161024023;2;Field   ;
                Name=PayToContact;
                SourceExpr="Pay-to Contact" }

    { 161024024;2;Field   ;
                Name=YourReference;
                SourceExpr="Your Reference" }

    { 161024035;2;Field   ;
                Name=DueDate;
                SourceExpr="Due Date" }

    { 161024042;2;Field   ;
                Name=CurrencyCode;
                SourceExpr=CurrencyCode }

    { 161024047;2;Field   ;
                Name=PurchaserCode;
                SourceExpr="Purchaser Code" }

    { 161024048;2;Field   ;
                Name=OnHold;
                SourceExpr="On Hold" }

    { 161024049;2;Field   ;
                Name=VendorOrderNo;
                SourceExpr="Vendor Order No." }

    { 161024051;2;Field   ;
                Name=VendorInvoiceNo;
                SourceExpr="Vendor Invoice No." }

    { 161024059;2;Field   ;
                Name=PayToPostCode;
                SourceExpr="Pay-to Post Code" }

    { 161024060;2;Field   ;
                Name=PayToCounty;
                SourceExpr="Pay-to County" }

    { 161024061;2;Field   ;
                Name=PayToCountryRegionCode;
                SourceExpr="Pay-to Country/Region Code" }

    { 161024070;2;Field   ;
                Name=PayToCountryRegion;
                SourceExpr=GetCountryRegionName("Pay-to Country/Region Code") }

    { 161024068;2;Field   ;
                Name=DocumentDate;
                SourceExpr="Document Date" }

    { 1160040002;2;Field  ;
                Name=PaymentMethodCode;
                SourceExpr="Payment Method Code" }

    { 1160040003;2;Field  ;
                Name=PaymentMethod;
                SourceExpr=GetPaymentMethod("Payment Method Code") }

    { 161024036;2;Field   ;
                Name=DocumentFilename;
                SourceExpr=GetDocFilename }

    { 1160040000;2;Field  ;
                Name=PricesIncludingVAT;
                SourceExpr="Prices Including VAT" }

    { 161024028;2;Field   ;
                Name=LineAmountExclVAT;
                SourceExpr=Amount }

    { 161024027;2;Field   ;
                Name=LineAmountInclVAT;
                SourceExpr="Amount Including VAT" }

    { 161024015;2;Field   ;
                Name=AmountExclVATLCY;
                SourceExpr=AmountExclVATLCY }

    { 161024014;2;Field   ;
                Name=AmountInclVATLCY;
                SourceExpr=AmountInclVATLCY }

    { 161024073;2;Field   ;
                Name=WebDim1Code;
                SourceExpr=WebDimValueCode[1] }

    { 161024079;2;Field   ;
                Name=WebDim2Code;
                SourceExpr=WebDimValueCode[2] }

    { 161024078;2;Field   ;
                Name=WebDim3Code;
                SourceExpr=WebDimValueCode[3] }

    { 161024077;2;Field   ;
                Name=WebDim4Code;
                SourceExpr=WebDimValueCode[4] }

    { 161024076;2;Field   ;
                Name=WebDim5Code;
                SourceExpr=WebDimValueCode[5] }

    { 161024075;2;Field   ;
                Name=WebDim6Code;
                SourceExpr=WebDimValueCode[6] }

    { 161024074;2;Field   ;
                Name=WebDim7Code;
                SourceExpr=WebDimValueCode[7] }

    { 161024080;2;Field   ;
                Name=WebDim8Code;
                SourceExpr=WebDimValueCode[8] }

    { 161024037;1;Part    ;
                Name=PurchLines;
                SubPageView=SORTING(Document No.,Line No.);
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page6086020;
                PartType=Page }

    { 161024071;1;Part    ;
                Name=ApprovalEntries;
                SubPageLink=Table ID=CONST(122),
                            Document No.=FIELD(No.);
                PagePartID=Page6086023;
                PartType=Page }

    { 161024072;1;Part    ;
                Name=ApprovalComments;
                SubPageView=SORTING(Table ID,Document No.,Date and Time);
                SubPageLink=Table ID=CONST(122),
                            Document No.=FIELD(No.);
                PagePartID=Page6086024;
                PartType=Page }

    { 1160040001;1;Part   ;
                Name=AttachedFiles;
                SubPageLink=Created Doc. Type=CONST(38),
                            Created Doc. Subtype=FILTER(2),
                            Created Doc. ID=FIELD(Pre-Assigned No.),
                            Status=CONST(Registered);
                PagePartID=Page6086038;
                PartType=Page }

  }
  CODE
  {
    VAR
      CurrencyCode@161024014 : Code[10];
      WebDimValueCode@161024012 : ARRAY [8] OF Code[20];
      AmountExclVATLCY@161024020 : Decimal;
      AmountInclVATLCY@161024017 : Decimal;

    PROCEDURE GetDocFilename@161024012() : Text[1024];
    VAR
      Document@161024012 : Record 6085590;
      PurchHeader@161024014 : Record 38;
      TempDocFileInfo@6085573 : Record 6085600;
      CEDOProxy@1160040000 : Codeunit 6085800;
    BEGIN
      IF CEDOProxy.IsCEDOEnabled THEN BEGIN
        IF "Pre-Assigned No." <> '' THEN BEGIN
          PurchHeader."Document Type" := PurchHeader."Document Type"::Invoice;
          PurchHeader."No." := "Pre-Assigned No.";
        END ELSE
          IF "Order No." <> '' THEN BEGIN
            PurchHeader."Document Type" := PurchHeader."Document Type"::Order;
            PurchHeader."No." := "Order No.";
          END;

        IF CEDOProxy.GetTempDocFilename(TempDocFileInfo,PurchHeader) THEN
          EXIT('XML');
      END;

      Document.SETCURRENTKEY("Created Doc. Type","Created Doc. Subtype","Created Doc. ID","Created Doc. Ref. No.");
      Document.SETRANGE("Created Doc. Type",DATABASE::"Purchase Header");
      Document.SETRANGE("File Type",Document."File Type"::OCR);

      IF "Pre-Assigned No." <> '' THEN BEGIN
        Document.SETRANGE("Created Doc. Subtype",PurchHeader."Document Type"::Invoice);
        Document.SETRANGE("Created Doc. ID","Pre-Assigned No.");
      END ELSE
        IF "Order No." <> '' THEN BEGIN
          Document.SETRANGE("Created Doc. Subtype",PurchHeader."Document Type"::Order);
          Document.SETRANGE("Created Doc. ID","Order No.");
        END;

      IF Document.FINDFIRST THEN
        EXIT(STRSUBSTNO('%1.pdf',Document."No."));
    END;

    PROCEDURE GetCountryRegionName@161024014(Code@161024012 : Code[20]) : Text[50];
    VAR
      CountryRegion@161024013 : Record 9;
    BEGIN
      IF CountryRegion.GET(Code) THEN
        IF CountryRegion.Name <> '' THEN
          EXIT(CountryRegion.Name);

      EXIT(Code);
    END;

    PROCEDURE GetPaymentMethod@1160040000(Code@1160040000 : Code[10]) : Text[50];
    VAR
      PaymentMethod@1160040001 : Record 289;
    BEGIN
      IF PaymentMethod.GET(Code) THEN
        IF PaymentMethod.Description <> '' THEN
          EXIT(PaymentMethod.Description);

      EXIT(Code);
    END;

    BEGIN
    END.
  }
}

