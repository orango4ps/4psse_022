OBJECT Page 11125156 Create SO from Maint. Prop.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Erstellen Serviceauftrag aus Wartungsvorschlag;
               ENU=Create Service Order from Maintenance Proposal;
               NLD=Aanmaken serviceorder uit onderhoudsvoorstel;
               NOR=Opprette serviceordre fra vedlikeholdsforslag;
               SVE=Skapa serviceorder fr†n underh†llsf”rslag];
    PageType=NavigatePage;
    OnOpenPage=BEGIN
                 UpdateEnable;
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525006;1 ;Action    ;
                      CaptionML=[DEU=B&eenden;
                                 ENU=&Finish;
                                 NLD=&Voltooien;
                                 NOR=&Avslutt;
                                 SVE=&Slutf”r];
                      InFooterBar=Yes;
                      Image=Completed;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lvCreateSOFromMaintPropCU@1100525000 : Codeunit 11012831;
                               BEGIN
                                 CASE TypeOfServiceOrder OF
                                   TypeOfServiceOrder::Maintenance:
                                     BEGIN
                                       DetermineServiceOrderDescription(SelectedMaintenanceProposalLine, ServiceOrderDescription);
                                       IF OrderKind <> '' THEN
                                         SelectedMaintenanceProposalLine.MODIFYALL("Order Kind", OrderKind);
                                       IF OrderType <> '' THEN
                                         SelectedMaintenanceProposalLine.MODIFYALL("Order Type", OrderType);
                                       lvCreateSOFromMaintPropCU.CreateServiceOrdersMaintProp(
                                         SelectedMaintenanceProposalLine, FixedPlanDate, PlanMargin, PreferredEmployeeResNo, SplitSOonDiscTradeSpec,
                                         SplitSOonServicePackage, OnlyNewServiceOrders, NoSeriesCode, MaxHoursPerServiceOrder, UseWorkDateWithOldPlanDate);
                                     END;
                                   TypeOfServiceOrder::Modification:
                                     lvCreateSOFromMaintPropCU.CreateServiceOrdersModifi(
                                       SelectedObjectModificationLine, FixedPlanDate, PlanMargin, PreferredEmployeeResNo, SplitSOonDiscTradeSpec, NoSeriesCode);
                                   TypeOfServiceOrder::Replacement:
                                     lvCreateSOFromMaintPropCU.CreateServiceOrdersReplace(
                                       SelectedReplacementLine, FixedPlanDate, PlanMargin, PreferredEmployeeResNo, SplitSOonDiscTradeSpec, NoSeriesCode);
                                 END;

                                 IF PrintAppointmentLetters THEN BEGIN
                                   COMMIT;
                                   SelectedMaintenanceProposalLine.PrintAppointmentLetters(SelectedMaintenanceProposalLine);
                                 END;

                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100525001;1;Field  ;
                CaptionML=[DEU=Erstellen Serviceauftrag aus Wartungsvorschlag;
                           ENU=Create Service Order from Maintenance Proposal;
                           NLD=Aanmaken serviceorder uit onderhoudsvoorstel;
                           NOR=Opprette serviceordre fra vedlikeholdsforslag;
                           SVE=Skapa serviceorder fr†n underh†llsf”rslag];
                Style=Strong;
                StyleExpr=TRUE }

    { 1100525000;1;Field  ;
                CaptionML=[DEU=Festes Planungsdatum;
                           ENU=Fixed Plan Date;
                           NLD=Vaste plandatum;
                           NOR=Fast plan, dato;
                           SVE=Fast plandatum];
                SourceExpr=FixedPlanDate }

    { 1100528608;1;Field  ;
                CaptionML=[DEU=Arbeitsdatum mit Plandatum in der Vergangenheit verwenden;
                           ENU=Use Workdate with Plan Date in the past;
                           NLD=Gebruik werkdatum bij plandatum in verleden];
                SourceExpr=UseWorkDateWithOldPlanDate }

    { 1100528606;1;Field  ;
                CaptionML=[DEU=Neue Serviceauftr„ge erstellen;
                           ENU=Create New Service Orders;
                           NLD=Nieuwe serviceorders aanmaken];
                SourceExpr=OnlyNewServiceOrders;
                Enabled=OnlyNewServiceOrdersEnable;
                OnValidate=BEGIN
                             UpdateEnable;
                           END;
                            }

    { 1100525002;1;Field  ;
                Name=PlanMarginCtrl;
                CaptionML=[DEU=Planungsmarge (Tag);
                           ENU=Plan Margin (day);
                           NLD=Planmarge (dag);
                           NOR=Planmargin (dag);
                           SVE=Planmarginal (dag)];
                SourceExpr=PlanMargin;
                Enabled=PlanMarginCtrlEnable }

    { 1100525004;1;Field  ;
                CaptionML=[DEU=Bevorzugter Monteur;
                           ENU=Preferred Employee;
                           NLD=Voorkeurmonteur;
                           NOR=Foretrukket Ansatt;
                           SVE=F”rvald &anst„lld];
                SourceExpr=PreferredEmployeeResNo;
                TableRelation="Resource (WOP)" WHERE (Type=CONST(Employee));
                OnValidate=VAR
                             ResourceMgtWorkOrderPlan@1100528600 : Codeunit 11229277;
                           BEGIN
                             ResourceMgtWorkOrderPlan.TestResourceWithinCompanyPlanGroup(PreferredEmployeeResNo);
                           END;
                            }

    { 1100528600;1;Field  ;
                CaptionML=[DEU=Aufteilen Serviceauftrag aufgrund Disziplin - Fachgebiet;
                           ENU=Split Service Order on Discipline - Trade Speciality;
                           NLD=Splits SO o.b.v. discipline - vakgebied;
                           NOR=Del serviceordre p† disiplin Í SNI-nummer;
                           SVE=Dela serviceorder p† disciplin Í SNI-nummer];
                SourceExpr=SplitSOonDiscTradeSpec;
                OnValidate=BEGIN
                             IF NOT SplitSOonDiscTradeSpec THEN
                               SODescriptionBasedOnDisciplineAndTradeSpeciality := FALSE;
                             UpdateEnable;
                           END;
                            }

    { 1210190000;1;Field  ;
                CaptionML=[DEU=Aufteilen Serviceauftrag aufgrund Servicepaket;
                           ENU=Split Service Order on Service Package;
                           NLD=Splits SO o.b.v. servicepakket;
                           NOR=Del serviceordre p† servicepakke;
                           SVE=Dela serviceorder p† servicepaket];
                SourceExpr=SplitSOonServicePackage }

    { 1100528602;1;Field  ;
                CaptionML=[DEU=Terminbriefe drucken;
                           ENU=Print Appointment Letters;
                           NLD=Afspraakbrieven afdrukken;
                           NOR=Skriv ut m›tebrev;
                           SVE=Skriv ut m”tesbrev];
                SourceExpr=PrintAppointmentLetters }

    { 1100525003;1;Field  ;
                CaptionML=[DEU=Nummernserie;
                           ENU=No. Series;
                           NLD=Nr.-reeks;
                           NOR=Nr-serie;
                           SVE=Nr-serie];
                SourceExpr=NoSeriesCode;
                TableRelation="No. Series";
                OnLookup=VAR
                           ServiceSourceTypeSetup@1100525000 : Record 11071726;
                           ServiceOrder@1100525001 : Record 11012823;
                           ServiceCall@1100525002 : Record 11012822;
                           NoSeriesManagement@1100525003 : Codeunit 396;
                         BEGIN
                           CASE TypeOfServiceOrder OF
                             TypeOfServiceOrder::Maintenance:
                               IF ServiceSourceTypeSetup.GET(ServiceOrder."Source Type"::Contract) THEN
                                 NoSeriesCode := ServiceSourceTypeSetup."No. Series";
                             TypeOfServiceOrder::Modification:
                               IF ServiceSourceTypeSetup.GET(ServiceOrder."Source Type"::Modification) THEN
                                 NoSeriesCode := ServiceSourceTypeSetup."No. Series";
                             TypeOfServiceOrder::Replacement:
                               IF ServiceSourceTypeSetup.GET(ServiceOrder."Source Type"::Replacement) THEN
                                 NoSeriesCode := ServiceSourceTypeSetup."No. Series";
                           END;
                           IF ServiceCall.CheckSeries(NoSeriesCode) THEN
                             NoSeriesManagement.SelectSeries(NoSeriesCode, NoSeriesCode, NoSeriesCode);
                         END;
                          }

    { 1100528607;1;Field  ;
                CaptionML=[DEU=Beschreibung anhand von Disziplin/Handelsspezialit„t;
                           ENU=Description Based On Discipline/Trade Speciality;
                           NLD=Omschrijving gebaseerd op discipline/vakgebied];
                SourceExpr=SODescriptionBasedOnDisciplineAndTradeSpeciality;
                Enabled=SODescriptionBasedOnDisciplineAndTradeSpecialityEnable;
                OnValidate=BEGIN
                             IF SODescriptionBasedOnDisciplineAndTradeSpeciality THEN
                               ServiceOrderDescription := '';
                             UpdateEnable;
                           END;
                            }

    { 1100528601;1;Field  ;
                CaptionML=[DEU=Serviceauftragsbeschreibung;
                           ENU=Service Order Description;
                           NLD=Serviceorder omschrijving;
                           NOR=Serviceordre Beskrivelse;
                           SVE=Serviceorder beskrivning];
                SourceExpr=ServiceOrderDescription;
                Enabled=ServiceOrderDescriptionEnable }

    { 1100528603;1;Field  ;
                CaptionML=[DEU=Auftragsart;
                           ENU=Order Kind;
                           NLD=Ordersoort;
                           NOR=Type ordre;
                           SVE=Ordertyp];
                SourceExpr=OrderKind;
                TableRelation="Service Order Indication".Code WHERE (Indication=CONST(Kind));
                Enabled=OrderKindEnable }

    { 1100528604;1;Field  ;
                CaptionML=[DEU=Auftragsart;
                           ENU=Order Type;
                           NLD=Ordertype;
                           NOR=Ordretype;
                           SVE=Ordertyp];
                SourceExpr=OrderType;
                TableRelation="Service Order Indication".Code WHERE (Indication=CONST(Type));
                Enabled=OrderTypeEnable }

    { 1100528605;1;Field  ;
                CaptionML=[DEU=Max. Stunden pro Serviceauftrag;
                           ENU=Max. Hours Per Service Order;
                           NLD=Max. aantal uren per serviceorder];
                SourceExpr=MaxHoursPerServiceOrder;
                Enabled=MaxHoursPerServiceOrderEnable }

  }
  CODE
  {
    VAR
      SelectedMaintenanceProposalLine@1100528607 : Record 11071696;
      SelectedObjectModificationLine@1100528606 : Record 11071701;
      SelectedReplacementLine@1100528608 : Record 11071710;
      FixedPlanDate@1100525000 : Date;
      PlanMargin@1100525001 : Integer;
      PreferredEmployeeResNo@1100525002 : Code[20];
      TypeOfServiceOrder@1100526201 : 'Maintenance,Modification,Replacement';
      SplitSOonDiscTradeSpec@1100528600 : Boolean;
      SplitSOonServicePackage@1210190000 : Boolean;
      OnlyNewServiceOrders@1100528612 : Boolean;
      PrintAppointmentLetters@1100528601 : Boolean;
      PlanMarginCtrlEnable@19068861 : Boolean INDATASET;
      NoSeriesCode@1100525004 : Code[10];
      SODescriptionBasedOnDisciplineAndTradeSpeciality@1100528614 : Boolean;
      SODescriptionBasedOnDisciplineAndTradeSpecialityEnable@1100528615 : Boolean;
      ServiceOrderDescription@1100528602 : Text[50];
      ServiceOrderDescriptionEnable@1100528603 : Boolean INDATASET;
      OrderKind@1100528604 : Code[10];
      OrderKindEnable@1100528609 : Boolean INDATASET;
      OrderType@1100528605 : Code[10];
      OrderTypeEnable@1100528610 : Boolean INDATASET;
      OnlyNewServiceOrdersEnable@1100528611 : Boolean INDATASET;
      MaxHoursPerServiceOrder@1100528613 : Decimal;
      MaxHoursPerServiceOrderEnable@1100528616 : Boolean;
      UseWorkDateWithOldPlanDate@1100528617 : Boolean;

    PROCEDURE SetDefaults@1100525000(VAR IMaintenanceProposalLine@1100525000 : Record 11071696;VAR IObjectModificationLine@1100526201 : Record 11071701;VAR IReplacementLine@1100526202 : Record 11071710;ITypeOfServiceOrder@1100526200 : 'Maintenance,Modification,Replacement');
    BEGIN
      SelectedMaintenanceProposalLine.COPY(IMaintenanceProposalLine);
      SelectedObjectModificationLine.COPY(IObjectModificationLine);
      SelectedReplacementLine.COPY(IReplacementLine);
      TypeOfServiceOrder := ITypeOfServiceOrder;
      IF TypeOfServiceOrder = TypeOfServiceOrder::Maintenance THEN
        DetermineSODefaults;
    END;

    PROCEDURE UpdateEnable@1100528601();
    BEGIN
      OnlyNewServiceOrdersEnable := TypeOfServiceOrder = TypeOfServiceOrder::Maintenance;
      PlanMarginCtrlEnable := (TypeOfServiceOrder = TypeOfServiceOrder::Maintenance) AND NOT OnlyNewServiceOrders;
      OrderKindEnable := TypeOfServiceOrder = TypeOfServiceOrder::Maintenance;
      OrderTypeEnable := TypeOfServiceOrder = TypeOfServiceOrder::Maintenance;
      SODescriptionBasedOnDisciplineAndTradeSpecialityEnable := (TypeOfServiceOrder = TypeOfServiceOrder::Maintenance) AND SplitSOonDiscTradeSpec;
      ServiceOrderDescriptionEnable := (TypeOfServiceOrder = TypeOfServiceOrder::Maintenance) AND NOT SODescriptionBasedOnDisciplineAndTradeSpeciality;
      MaxHoursPerServiceOrderEnable := TypeOfServiceOrder = TypeOfServiceOrder::Maintenance;
    END;

    PROCEDURE DetermineSODefaults@1100528600();
    VAR
      MaintenanceProposalLine@1100528600 : Record 11071696;
      StopCheckingSODescription@1100528601 : Boolean;
      StopCheckingOrderKind@1100528602 : Boolean;
      StopCheckingOrderType@1100528603 : Boolean;
    BEGIN
      ServiceOrderDescription := '';
      MaintenanceProposalLine.COPY(SelectedMaintenanceProposalLine);
      IF MaintenanceProposalLine.FINDSET THEN
        REPEAT
          IF NOT StopCheckingSODescription AND (ServiceOrderDescription = '') THEN
            ServiceOrderDescription := MaintenanceProposalLine."Service Order Description";
          IF ServiceOrderDescription <> MaintenanceProposalLine."Service Order Description" THEN BEGIN
            ServiceOrderDescription := '';
            StopCheckingSODescription := TRUE;
          END;
          IF NOT StopCheckingOrderKind AND (OrderKind = '') THEN
            OrderKind := MaintenanceProposalLine."Order Kind";
          IF OrderKind <> MaintenanceProposalLine."Order Kind" THEN BEGIN
            OrderKind := '';
            StopCheckingOrderKind := TRUE;
          END;
          IF NOT StopCheckingOrderType AND (OrderType = '') THEN
            OrderType := MaintenanceProposalLine."Order Type";
          IF OrderType <> MaintenanceProposalLine."Order Type" THEN BEGIN
            OrderType := '';
            StopCheckingOrderType := TRUE;
          END;
        UNTIL MaintenanceProposalLine.NEXT = 0;
    END;

    LOCAL PROCEDURE DetermineServiceOrderDescription@1100528606(VAR IOSelectedMaintenanceProposalLine@1100528600 : Record 11071696;IServiceOrderDescription@1100528601 : Text[50]);
    VAR
      ServiceSetup@1100528602 : Record 11012800;
    BEGIN
      IF SODescriptionBasedOnDisciplineAndTradeSpeciality THEN BEGIN
        ServiceSetup.GET;
        IF IOSelectedMaintenanceProposalLine.FINDSET THEN
          REPEAT
            IOSelectedMaintenanceProposalLine."Service Order Description" :=
              COPYSTR(
                STRSUBSTNO('%1-%2-%3', ServiceSetup."Description Maintenance Orders", IOSelectedMaintenanceProposalLine.Discipline,
                  IOSelectedMaintenanceProposalLine."Trade Speciality"),
                1, MAXSTRLEN(IOSelectedMaintenanceProposalLine."Service Order Description"));
            IOSelectedMaintenanceProposalLine.MODIFY;
          UNTIL IOSelectedMaintenanceProposalLine.NEXT = 0;
      END ELSE
        IF IServiceOrderDescription <> '' THEN
          IOSelectedMaintenanceProposalLine.MODIFYALL("Service Order Description", IServiceOrderDescription);
    END;

    BEGIN
    END.
  }
}

