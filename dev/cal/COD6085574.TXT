OBJECT Codeunit 6085574 Word Functions
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW13.70.00.5.00.07;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GlobalWords@1000000002 : TEMPORARY Record 6085592;
      BuffWordDocNo@1000000001 : Code[20];
      BuffWordPageNo@1000000000 : Integer;

    PROCEDURE CaptureValue@1000000001(VAR Page@1000000005 : Record 6085591;VAR Words@1000000006 : TEMPORARY Record 6085592;VAR Field@1000000004 : Record 6085580;IsValue@1000000000 : Boolean;LineNo@1000000001 : Integer;VAR Value@1000000002 : Record 6085593);
    BEGIN
      Value."Document No." := Page."Document No.";
      Value.Type := Field.Type;
      Value.Code := Field.Code;
      Value."Line No." := LineNo;
      GetRectFromWords(Words,Value.Top,Value.Left,Value.Bottom,Value.Right);

      IF NOT Value.INSERT THEN
        Value.MODIFY;
    END;

    PROCEDURE GetWordsInRegion@1000000006(Page@1000000005 : Record 6085591;Top@1000000003 : Integer;Left@1000000001 : Integer;Bottom@1000000002 : Integer;Right@1000000000 : Integer;VAR WordsInRegion@1000000008 : TEMPORARY Record 6085592);
    VAR
      Word@1000000004 : Text[1024];
    BEGIN
      BufferWords(Page."Document No.",Page."Page No.");

      GlobalWords.SETRANGE("Page No.",Page."Page No.");
      GlobalWords.SETFILTER(Top,'<%1',Bottom);
      GlobalWords.SETFILTER(Left,'<%1',Right);
      GlobalWords.SETFILTER(Bottom,'>%1',Top);
      GlobalWords.SETFILTER(Right,'>%1',Left);

      IF GlobalWords.FINDSET(FALSE,FALSE) THEN
        REPEAT
          WordsInRegion := GlobalWords;
          WordsInRegion.INSERT;
        UNTIL GlobalWords.NEXT = 0;
    END;

    PROCEDURE GetRectFromWords@1000000017(VAR Words@1000000008 : TEMPORARY Record 6085592;VAR Top@1000000003 : Integer;VAR Left@1000000002 : Integer;VAR Bottom@1000000001 : Integer;VAR Right@1000000000 : Integer);
    BEGIN
      Top := 0;
      Left := 0;
      Bottom := 0;
      Right := 0;

      IF Words.FINDSET(FALSE,FALSE) THEN
        REPEAT
          IF (Top = 0) OR (Words.Top < Top) THEN
            Top := Words.Top;
          IF (Left = 0) OR (Words.Left < Left) THEN
            Left := Words.Left;
          IF (Bottom = 0) OR (Words.Bottom > Bottom) THEN
            Bottom := Words.Bottom;
          IF (Right = 0) OR (Words.Right > Right) THEN
            Right := Words.Right;
        UNTIL Words.NEXT = 0;
    END;

    PROCEDURE CombineWords@1000000000(VAR Words@1000000000 : TEMPORARY Record 6085592) NewWord : Text[1024];
    BEGIN
      IF Words.FINDSET(FALSE,FALSE) THEN
        REPEAT
          IF NewWord = '' THEN
            NewWord := Words.Word
          ELSE
            NewWord := COPYSTR(NewWord + ' ' + Words.Word,1,MAXSTRLEN(NewWord));
        UNTIL Words.NEXT = 0;
    END;

    PROCEDURE IsWordsOnSameLine@1000000027(Word1@1000000000 : Record 6085592;Word2@1000000001 : Record 6085592) : Boolean;
    VAR
      LineMiddle@1000000002 : Decimal;
      Height@161024012 : Integer;
    BEGIN
      Height := Word1.Bottom - Word1.Top;
      IF (Word1.Word IN ['ùï`']) OR (Word1.Word = '''') THEN
        EXIT((Word1.Bottom > Word2.Top - Height) AND (Word1.Bottom < Word2.Bottom));

      IF (Word1.Word = ',') OR (Word1.Word = '.') THEN
        EXIT((Word1.Top < Word2.Bottom + Height) AND (Word1.Top > Word2.Top));

      LineMiddle := Word1.Top + ((Word1.Bottom - Word1.Top) / 2);
      EXIT ((Word2.Top < LineMiddle) AND (Word2.Bottom > LineMiddle));
    END;

    PROCEDURE EndsWith@1000000053(TextToTest@1000000000 : Text[1024];EndWithText@1000000001 : Text[1024]) : Boolean;
    BEGIN
      IF TextToTest = EndWithText THEN
        EXIT(TRUE);

      IF STRLEN(TextToTest) < STRLEN(EndWithText) THEN
        EXIT(FALSE);

      EXIT(STRPOS(TextToTest,EndWithText) + STRLEN(EndWithText) - 1 = STRLEN(TextToTest));
    END;

    PROCEDURE GetFirstWordFromLeft@1000000002(Page@1000000006 : Record 6085591;Top@1000000000 : Integer;Left@1000000001 : Integer;Bottom@1000000002 : Integer;Right@1000000003 : Integer;VAR LeftWord@1000000004 : TEMPORARY Record 6085592) : Boolean;
    VAR
      Words@1000000007 : TEMPORARY Record 6085592;
      WordFunc@1000000005 : Codeunit 6085574;
    BEGIN
      CLEAR(LeftWord);
      GetWordsInRegion(Page,Top,Left,Bottom,Right,Words);
      BufferWords(Page."Document No.",Page."Page No.");
      IF Words.FINDSET(FALSE,FALSE) THEN
        REPEAT
          IF (LeftWord.Left = 0) OR (Words.Left < LeftWord.Left) THEN
            LeftWord := Words;
        UNTIL Words.NEXT = 0;
      EXIT(LeftWord.Left <> 0);
    END;

    PROCEDURE GetFirstWordFromTop@1000000009(Page@1000000006 : Record 6085591;Top@1000000000 : Integer;Left@1000000001 : Integer;Bottom@1000000002 : Integer;Right@1000000003 : Integer;VAR TopWord@1000000004 : TEMPORARY Record 6085592) : Boolean;
    VAR
      Words@1000000007 : TEMPORARY Record 6085592;
      WordFunc@1000000005 : Codeunit 6085574;
    BEGIN
      BufferWords(Page."Document No.",Page."Page No.");
      GetWordsInRegion(Page,Top,Left,Bottom,Right,Words);
      IF Words.FINDSET(FALSE,FALSE) THEN
        REPEAT
          IF (TopWord.Left = 0) OR (Words.Top < TopWord.Top) THEN
            TopWord := Words;
        UNTIL Words.NEXT = 0;
      EXIT(TopWord.Top <> 0);
    END;

    PROCEDURE BufferWords@1000000019(DocumentNo@1000000000 : Code[20];PageNo@1000000001 : Integer);
    VAR
      Words@1000000002 : Record 6085592;
    BEGIN
      IF (BuffWordDocNo = DocumentNo) AND ((BuffWordPageNo = PageNo) OR (BuffWordPageNo = 0)) THEN
        EXIT;

      GlobalWords.RESET;
      GlobalWords.DELETEALL;

      Words.SETRANGE("Document No.",DocumentNo);
      IF PageNo <> 0 THEN
        Words.SETRANGE("Page No.",PageNo);

      IF Words.FINDSET(FALSE,FALSE) THEN
        REPEAT
          GlobalWords := Words;
          GlobalWords.INSERT;
        UNTIL Words.NEXT = 0;

      BuffWordDocNo := DocumentNo;
      BuffWordPageNo := PageNo;
    END;

    BEGIN
    END.
  }
}

