OBJECT Table 90 BOM Component
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Item.GET("Parent Item No.");
               IF Type = Type::Item THEN
                 ValidateAgainstRecursion("No.")
             END;

    OnModify=BEGIN
               Item.GET("Parent Item No.");
               IF Type = Type::Item THEN
                 ValidateAgainstRecursion("No.")
             END;

    OnRename=BEGIN
               Item.GET("Parent Item No.");
               IF Type = Type::Item THEN
                 ValidateAgainstRecursion("No.")
             END;

    CaptionML=[ENU=BOM Component;
               NOR=Stykklistekomponent;
               SVE=Strukturkomponent];
    LookupPageID=Page36;
    DrillDownPageID=Page36;
  }
  FIELDS
  {
    { 1   ;   ;Parent Item No.     ;Code20        ;TableRelation=Item WHERE (Type=CONST(Inventory));
                                                   CaptionML=[ENU=Parent Item No.;
                                                              NOR=Overordnet varenr.;
                                                              SVE=Strukturnr];
                                                   NotBlank=Yes }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 3   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                "No." := '';
                                                                "Variant Code" := '';
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[ENU=" ,Item,Resource";
                                                                    NOR=" ,Vare,Ressurs";
                                                                    SVE=" ,Artikel,Resurs"];
                                                   OptionString=[ ,Item,Resource] }
    { 4   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Item)) Item WHERE (Type=FILTER(Inventory|Non-Inventory))
                                                                 ELSE IF (Type=CONST(Resource)) Resource;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Type);
                                                                "Variant Code" := '';
                                                                IF "No." = '' THEN
                                                                  EXIT;

                                                                CASE Type OF
                                                                  Type::Item:
                                                                    CopyFromItem;
                                                                  Type::Resource:
                                                                    CopyFromResource;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 5   ;   ;Assembly BOM        ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("BOM Component" WHERE (Parent Item No.=FIELD(No.)));
                                                   CaptionML=[ENU=Assembly BOM;
                                                              NOR=Monteringsstykkliste;
                                                              SVE=Monteringsstruktur];
                                                   Editable=No }
    { 6   ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 7   ;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE IF (Type=CONST(Resource)) "Resource Unit of Measure".Code WHERE (Resource No.=FIELD(No.));
                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              NOR=Enhetskode;
                                                              SVE=Enhetskod] }
    { 8   ;   ;Quantity per        ;Decimal       ;CaptionML=[ENU=Quantity per;
                                                              NOR=Antall per;
                                                              SVE=Antal per];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 9   ;   ;Position            ;Code10        ;CaptionML=[ENU=Position;
                                                              NOR=Posisjon;
                                                              SVE=Position] }
    { 10  ;   ;Position 2          ;Code10        ;CaptionML=[ENU=Position 2;
                                                              NOR=Posisjon 2;
                                                              SVE=Position 2] }
    { 11  ;   ;Position 3          ;Code10        ;CaptionML=[ENU=Position 3;
                                                              NOR=Posisjon 3;
                                                              SVE=Position 3] }
    { 12  ;   ;Machine No.         ;Code10        ;CaptionML=[ENU=Machine No.;
                                                              NOR=Maskinnr.;
                                                              SVE=Maskinh„nvisning] }
    { 13  ;   ;Lead-Time Offset    ;DateFormula   ;CaptionML=[ENU=Lead-Time Offset;
                                                              NOR=Forskyvning av leveringstid;
                                                              SVE=Ledtidsf”rskjutning] }
    { 14  ;   ;BOM Description     ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item.Description WHERE (No.=FIELD(Parent Item No.)));
                                                   CaptionML=[ENU=BOM Description;
                                                              NOR=Stykkl.beskrivelse;
                                                              SVE=Strukturbeskrivning];
                                                   Editable=No }
    { 20  ;   ;Resource Usage Type ;Option        ;OnValidate=BEGIN
                                                                IF "Resource Usage Type" = xRec."Resource Usage Type" THEN
                                                                  EXIT;

                                                                TESTFIELD(Type,Type::Resource);
                                                              END;

                                                   CaptionML=[ENU=Resource Usage Type;
                                                              NOR=Ressursbrukstype;
                                                              SVE=Resursf”rbrukningstyp];
                                                   OptionCaptionML=[ENU=Direct,Fixed;
                                                                    NOR=Direkte,Fast;
                                                                    SVE=Direkt,Fast];
                                                   OptionString=Direct,Fixed }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   OnValidate=BEGIN
                                                                IF "Variant Code" = '' THEN
                                                                  EXIT;
                                                                TESTFIELD(Type,Type::Item);
                                                                TESTFIELD("No.");
                                                                ItemVariant.GET("No.","Variant Code");
                                                                Description := ItemVariant.Description;
                                                              END;

                                                   CaptionML=[ENU=Variant Code;
                                                              NOR=Variantkode;
                                                              SVE=Variantkod] }
    { 5900;   ;Installed in Line No.;Integer      ;OnValidate=BEGIN
                                                                IF "Installed in Line No." <> 0 THEN BEGIN
                                                                  IF "Installed in Line No." = "Line No." THEN
                                                                    ERROR(Text000,FIELDCAPTION("Installed in Line No."));
                                                                  BOMComp.RESET;
                                                                  BOMComp.SETRANGE("Parent Item No.","Parent Item No.");
                                                                  BOMComp.SETRANGE(Type,BOMComp.Type::Item);
                                                                  BOMComp.SETRANGE("Line No.","Installed in Line No.");
                                                                  BOMComp.FINDFIRST;
                                                                  BOMComp.TESTFIELD("Quantity per",1);
                                                                  "Installed in Item No." := BOMComp."No.";
                                                                END ELSE
                                                                  "Installed in Item No." := '';
                                                              END;

                                                   OnLookup=BEGIN
                                                              BOMComp.RESET;
                                                              BOMComp.SETRANGE("Parent Item No.","Parent Item No.");
                                                              BOMComp.SETRANGE(Type,BOMComp.Type::Item);
                                                              BOMComp.SETFILTER("Line No.",'<>%1',"Line No.");
                                                              CLEAR(AssemblyBOM);
                                                              AssemblyBOM.SETTABLEVIEW(BOMComp);
                                                              AssemblyBOM.EDITABLE(FALSE);
                                                              AssemblyBOM.LOOKUPMODE(TRUE);
                                                              IF AssemblyBOM.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                AssemblyBOM.GETRECORD(BOMComp);
                                                                VALIDATE("Installed in Line No.",BOMComp."Line No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Installed in Line No.;
                                                              NOR=Installert p† linjenr.;
                                                              SVE=Installerad i radnr] }
    { 5901;   ;Installed in Item No.;Code20       ;TableRelation=IF (Type=CONST(Item)) Item;
                                                   OnValidate=BEGIN
                                                                IF "Installed in Item No." <> '' THEN BEGIN
                                                                  BOMComp.RESET;
                                                                  BOMComp.SETRANGE("Parent Item No.","Parent Item No.");
                                                                  BOMComp.SETRANGE(Type,BOMComp.Type::Item);
                                                                  BOMComp.SETRANGE("No.","Installed in Item No.");
                                                                  BOMComp.FINDFIRST;
                                                                END;

                                                                VALIDATE("Installed in Line No.",BOMComp."Line No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              BOMComp.RESET;
                                                              BOMComp.SETRANGE("Parent Item No.","Parent Item No.");
                                                              BOMComp.SETRANGE(Type,BOMComp.Type::Item);
                                                              BOMComp."No." := "Installed in Item No.";
                                                              BOMComp.SETFILTER("Line No.",'<>%1',"Line No.");
                                                              CLEAR(AssemblyBOM);
                                                              AssemblyBOM.SETTABLEVIEW(BOMComp);
                                                              AssemblyBOM.EDITABLE(FALSE);
                                                              AssemblyBOM.LOOKUPMODE(TRUE);
                                                              IF AssemblyBOM.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                AssemblyBOM.GETRECORD(BOMComp);
                                                                VALIDATE("Installed in Line No.",BOMComp."Line No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Installed in Item No.;
                                                              NOR=Installert i varenr.;
                                                              SVE=Installerad i artikelnr] }
  }
  KEYS
  {
    {    ;Parent Item No.,Line No.                ;Clustered=Yes }
    {    ;Type,No.                                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 cannot be component of itself.;NOR=%1 kan ikke v‘re komponent av seg selv.;SVE=%1 kan inte vara en komponent till sig sj„lv.';
      Text001@1006 : TextConst 'ENU=You cannot insert item %1 as an assembly component of itself.;NOR=Du kan ikke sette inn varen %1 som en monteringskomponent i seg selv.;SVE=Det g†r inte att infoga artikeln %1 som en monteringskomponent till sig sj„lv.';
      Item@1001 : Record 27;
      ParentItem@1007 : Record 27;
      Res@1002 : Record 156;
      ItemVariant@1003 : Record 5401;
      BOMComp@1004 : Record 90;
      CalcLowLevelCode@1008 : Codeunit 99000793;
      AssemblyBOM@1005 : Page 36;

    [External]
    PROCEDURE ValidateAgainstRecursion@3(ItemNo@1003 : Code[20]);
    VAR
      BOMComp@1001 : Record 90;
      IsHandled@1000 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforeValidateAgainstRecursion(ItemNo,IsHandled);
      IF IsHandled THEN
        EXIT;

      IF "Parent Item No." = ItemNo THEN
        ERROR(Text001,ItemNo);

      IF Type = Type::Item THEN BEGIN
        BOMComp.SETCURRENTKEY(Type,"No.");
        BOMComp.SETRANGE(Type,Type::Item);
        BOMComp.SETRANGE("No.","Parent Item No.");
        IF BOMComp.FINDSET THEN
          REPEAT
            BOMComp.ValidateAgainstRecursion(ItemNo);
          UNTIL BOMComp.NEXT = 0
      END
    END;

    LOCAL PROCEDURE CopyFromItem@1();
    BEGIN
      Item.GET("No.");
      ValidateAgainstRecursion("No.");
      OnBeforeCopyFromItem(Rec,xRec,Item,CurrFieldNo);

      Item.CALCFIELDS("Assembly BOM");
      "Assembly BOM" := Item."Assembly BOM";
      Description := Item.Description;
      "Unit of Measure Code" := Item."Base Unit of Measure";
      ParentItem.GET("Parent Item No.");
      CalcLowLevelCode.SetRecursiveLevelsOnItem(Item,ParentItem."Low-Level Code" + 1,TRUE);
      Item.FIND;
      ParentItem.FIND;
      IF ParentItem."Low-Level Code" >= Item."Low-Level Code" THEN
        ERROR(Text001,"No.");

      OnAfterCopyFromItem(Rec,Item);
    END;

    LOCAL PROCEDURE CopyFromResource@6();
    BEGIN
      Res.GET("No.");
      "Assembly BOM" := FALSE;
      Description := Res.Name;
      "Unit of Measure Code" := Res."Base Unit of Measure";

      OnAfterCopyFromResource(Rec,Res);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCopyFromItem@4(VAR BOMComponent@1000 : Record 90;Item@1001 : Record 27);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCopyFromResource@7(VAR BOMComponent@1000 : Record 90;Resource@1001 : Record 156);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCopyFromItem@2(VAR BOMComponent@1000 : Record 90;xBOMComponent@1001 : Record 90;Item@1002 : Record 27;CallingFieldNo@1003 : Integer);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeValidateAgainstRecursion@5(ItemNo@1000 : Code[20];VAR IsHandled@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

