OBJECT XMLport 81639 Handyman Export Cost Types
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSHM;
  }
  PROPERTIES
  {
    Encoding=UTF-8;
  }
  ELEMENTS
  {
    { [{D68FCCEB-F781-4B22-8758-B764D6F0ABB2}];  ;SalaryCodeItemList  ;Element ;Text     }

    { [{A474E95C-F78D-472C-96EE-1EE61D4A59E1}];1 ;SalaryCodeItem      ;Element ;Table   ;
                                                  VariableName=HMSC;
                                                  SourceTable=Table81632;
                                                  SourceTableView=WHERE(Field11=CONST(Yes));
                                                  MinOccurs=Zero;
                                                  Export::OnPreXMLItem=BEGIN
                                                                         HandymanSetup.GET();
                                                                         IF (HandymanSetup."Last Export Date" <> 0D) THEN
                                                                            HMSC.SETFILTER("Last Modified Date/Time", '>=%1', HandymanSetup."Last Exported Basic Data");
                                                                       END;
                                                                        }

    { [{418E6F3A-39F8-4E9A-9519-0483D28404B2}];2 ;SalaryCode          ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=HMSC::Salary Code }

    { [{B4A8BAD5-8738-4398-8A25-8C154DB5505F}];2 ;Description         ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=HMSC::Description }

    { [{06E085A8-3E97-4E1F-A693-4B66E621F98F}];2 ;Unit                ;Element ;Text    ;
                                                  DataType=Option;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Unit := FORMAT(HMSC.Unit, 0, 9);
                                                                               END;
                                                                                }

    { [{AB7A5FA2-2FB4-47E9-98BF-1156D158D1AC}];2 ;SumOnTimesheet      ;Element ;Field   ;
                                                  DataType=Integer;
                                                  SourceField=HMSC::SumOnTimesheet }

    { [{6AEE0463-BF6A-4757-BBF6-E1BF7F77DD13}];2 ;InfoMandatory       ;Element ;Text    ;
                                                  DataType=Boolean;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF (HMSC.InfoMandatory) THEN InfoMandatory := '1' ELSE InfoMandatory := '0';
                                                                               END;
                                                                                }

    { [{972945AE-E6D2-444A-B4A4-1149AEF36C45}];2 ;Price               ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 Price := FORMAT(HMSC.Price, 0, 9);
                                                                               END;
                                                                                }

    { [{5D4C9C99-699F-4F4B-ACEB-7AD837B055F1}];2 ;VATRate             ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  VATRate := FORMAT(HMSC.VATRate, 0, 9);
                                                                                END;
                                                                                 }

    { [{49FE53B1-BE5A-46C7-AD96-7E8AFF621C5B}];2 ;AvailableForCategory;Element ;Field   ;
                                                  DataType=Integer;
                                                  SourceField=HMSC::AvailableForCategory }

    { [{FE73013C-1EE3-48B5-A096-2879ABF82995}];2 ;HoursType           ;Element ;Text    ;
                                                  DataType=Option;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 HoursType := FORMAT(HMSC."Hours Type", 0, 9);
                                                                               END;
                                                                                }

    { [{4B5C66AB-F60B-480D-B95F-B9B19CB1C961}];2 ;GroupList           ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  MaxOccurs=Once }

    { [{2625844C-24EF-4D77-A196-66EB3C40D7AB}];3 ;Group               ;Element ;Table   ;
                                                  VariableName=LabourRule;
                                                  SourceTable=Table11128230;
                                                  MinOccurs=Zero }

    { [{3D150D09-9690-47A9-9031-560186AB04E0}];4 ;HSGroupID           ;Element ;Text    ;
                                                  VariableName=HSGroupID1;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 HSGroupID1 := '0';
                                                                               END;
                                                                                }

    { [{FC1D708C-BE31-4838-A6F1-ABA104070DD9}];4 ;GroupID             ;Element ;Text    ;
                                                  VariableName=GroupID1;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 GroupID1 := HandymanSetup."Company Prefix" + '_S_' + LabourRule.Code;
                                                                               END;
                                                                                }

    { [{F3EAF1F5-8209-49B5-9372-69A262907793}];4 ;DeleteFromGroup     ;Element ;Text    ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF (DeleteFromGroupYes) THEN BEGIN // Bug in Handyman, when sending cost types, deletefromgroup must first be set to 0, then it can be added.
                                                                                   DeleteFromGroup := '0'
                                                                                 END ELSE BEGIN
                                                                                    IF (HMSC."NAV Cost Code" <> '') THEN BEGIN
                                                                                       IF (LabourRuleCostCode.GET(LabourRule.Code, HMSC."NAV Cost Code")) THEN DeleteFromGroup := '0' ELSE DeleteFromGroup := '1';
                                                                                    END;
                                                                                    IF (HMSC."NAV Wage Component" <> '') THEN BEGIN
                                                                                       IF (LabourRuleWageComp.GET(LabourRule.Code, HMSC."NAV Wage Component")) THEN DeleteFromGroup := '0' ELSE DeleteFromGroup := '1';
                                                                                    END;
                                                                                 END;
                                                                               END;
                                                                                }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      HandymanSetup@1100285505 : Record 81609;
      LabourRuleCostCode@1100285000 : Record 11128231;
      LabourRuleWageComp@1100285001 : Record 11128232;
      DeleteFromGroupYes@1100285002 : Boolean;

    PROCEDURE ToggleDeleteFromGroup@1100285000(Toggle@1100285000 : Boolean);
    BEGIN
      DeleteFromGroupYes := Toggle;
    END;

    BEGIN
    END.
  }
}

