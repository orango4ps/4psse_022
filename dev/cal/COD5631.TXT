OBJECT Codeunit 5631 FA Jnl.-Check Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04,4PS14.00;
  }
  PROPERTIES
  {
    TableNo=81;
    OnRun=BEGIN
            TESTFIELD("Receiving Company",''); //**4PS.n
            TESTFIELD("Job No.",'');
            TESTFIELD("FA Posting Type");
            TESTFIELD("Depreciation Book Code");
            IF "Duplicate in Depreciation Book" = "Depreciation Book Code" THEN
              FIELDERROR(
                "Duplicate in Depreciation Book",
                STRSUBSTNO(Text000,FIELDCAPTION("Depreciation Book Code")));
            IF "Account Type" = "Bal. Account Type" THEN
              ERROR(
                Text001,
                FIELDCAPTION("Account Type"),FIELDCAPTION("Bal. Account Type"),"Account Type");
            IF "Account No." <> '' THEN
              IF "Account Type" = "Account Type"::"Fixed Asset" THEN BEGIN
                IF "FA Posting Type" IN
                   ["FA Posting Type"::"Acquisition Cost",
                    "FA Posting Type"::Appreciation,
                    "FA Posting Type"::Disposal,
                    "FA Posting Type"::Maintenance]
                THEN BEGIN
                  IF ("Gen. Bus. Posting Group" <> '') OR ("Gen. Prod. Posting Group" <> '') OR
                     ("VAT Bus. Posting Group" <> '') OR ("VAT Prod. Posting Group" <> '')
                  THEN
                    TESTFIELD("Gen. Posting Type");
                  IF ("Gen. Posting Type" <> "Gen. Posting Type"::" ") AND
                     ("VAT Posting" = "VAT Posting"::"Automatic VAT Entry")
                  THEN BEGIN
                    IF "VAT Amount" + "VAT Base Amount" <> Amount THEN
                      ERROR(
                        Text016,FIELDCAPTION("VAT Amount"),FIELDCAPTION("VAT Base Amount"),
                        FIELDCAPTION(Amount));
                    IF "Currency Code" <> '' THEN
                      IF "VAT Amount (LCY)" + "VAT Base Amount (LCY)" <> "Amount (LCY)" THEN
                        ERROR(
                          Text016,FIELDCAPTION("VAT Amount (LCY)"),
                          FIELDCAPTION("VAT Base Amount (LCY)"),FIELDCAPTION("Amount (LCY)"));
                  END;
                END ELSE BEGIN
                  TESTFIELD("Gen. Posting Type",0);
                  TESTFIELD("Gen. Bus. Posting Group",'');
                  TESTFIELD("Gen. Prod. Posting Group",'');
                  TESTFIELD("VAT Bus. Posting Group",'');
                  TESTFIELD("VAT Prod. Posting Group",'');
                END;
                FANo := "Account No.";
              END;
            IF "Bal. Account No." <> '' THEN
              IF "Bal. Account Type" = "Bal. Account Type"::"Fixed Asset" THEN BEGIN
                IF "FA Posting Type" IN
                   ["FA Posting Type"::"Acquisition Cost",
                    "FA Posting Type"::Disposal,
                    "FA Posting Type"::Maintenance]
                THEN BEGIN
                  IF ("Bal. Gen. Bus. Posting Group" <> '') OR ("Bal. Gen. Prod. Posting Group" <> '') OR
                     ("Bal. VAT Bus. Posting Group" <> '') OR ("Bal. VAT Prod. Posting Group" <> '')
                  THEN
                    TESTFIELD("Bal. Gen. Posting Type");
                  IF ("Bal. Gen. Posting Type" <> "Bal. Gen. Posting Type"::" ") AND
                     ("VAT Posting" = "VAT Posting"::"Automatic VAT Entry")
                  THEN BEGIN
                    IF "Bal. VAT Amount" + "Bal. VAT Base Amount" <> -Amount THEN
                      ERROR(
                        Text017,FIELDCAPTION("Bal. VAT Amount"),FIELDCAPTION("Bal. VAT Base Amount"),
                        FIELDCAPTION(Amount));
                    IF "Currency Code" <> '' THEN
                      IF "Bal. VAT Amount (LCY)" + "Bal. VAT Base Amount (LCY)" <> -"Amount (LCY)" THEN
                        ERROR(
                          Text017,FIELDCAPTION("Bal. VAT Amount (LCY)"),
                          FIELDCAPTION("Bal. VAT Base Amount (LCY)"),FIELDCAPTION("Amount (LCY)"));
                  END;
                END ELSE BEGIN
                  TESTFIELD("Bal. Gen. Posting Type",0);
                  TESTFIELD("Bal. Gen. Bus. Posting Group",'');
                  TESTFIELD("Bal. Gen. Prod. Posting Group",'');
                  TESTFIELD("Bal. VAT Bus. Posting Group",'');
                  TESTFIELD("Bal. VAT Prod. Posting Group",'');
                END;
                FANo := "Bal. Account No.";
              END;

            IF "Recurring Method" > "Recurring Method"::"V  Variable" THEN BEGIN
              GenJnlline2."Account Type" := GenJnlline2."Account Type"::"Fixed Asset";
              FIELDERROR(
                "Recurring Method",
                STRSUBSTNO(Text002,
                  "Recurring Method",
                  FIELDCAPTION("Account Type"),
                  FIELDCAPTION("Bal. Account Type"),
                  GenJnlline2."Account Type"));
            END;
            DeprBookCode := "Depreciation Book Code";
            IF "FA Posting Date" = 0D THEN
              "FA Posting Date" := "Posting Date";
            FAPostingDate := "FA Posting Date";
            PostingDate := "Posting Date";
            FAPostingType := "FA Posting Type" - 1;
            GenJnlPosting := TRUE;
            GenJnlLine := Rec;
            CheckJnlLine;
            CheckFADepAcrossFiscalYear;

            OnAfterCheckGenJnlLine(Rec);
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=is not different than %1;NOR=er ikke forskjellig fra %1;SVE=„r inte skilt fr†n %1';
      Text001@1001 : TextConst 'ENU=%1 and %2 must not both be %3.;NOR=%1 og %2 kan ikke begge v‘re %3.;SVE=%1 och %2 f†r inte b†da vara %3.';
      Text002@1002 : TextConst 'ENU=must not be %1 when %2 or %3 are %4;NOR=kan ikke v‘re %1 n†r %2 eller %3 er %4;SVE=f†r inte vara %1 n„r %2 eller %3 „r %4';
      Text003@1003 : TextConst 'ENU=can only be a closing date for G/L entries;NOR=kan bare v‘re en avslutningsdato for finansposter;SVE=kan endast vara ett avslutsdatum f”r redovisningstransaktioner';
      Text004@1004 : TextConst 'ENU=is not within your range of allowed posting dates;NOR=er ikke innenfor tillatte bokf›ringsdatoer;SVE=„r inte i ditt till†tna intervall f”r bokf”ringsdatum';
      Text005@1005 : TextConst 'ENU=must be identical to %1;NOR=m† v‘re lik %1;SVE=m†ste vara identiskt med %1';
      Text006@1006 : TextConst 'ENU=must not be a %1;NOR=kan ikke v‘re en %1;SVE=f†r inte vara %1';
      Text007@1007 : TextConst 'ENU=%1 must be posted in the general journal;NOR=%1 m† bokf›res i finanskladden;SVE=%1 m†ste bokf”ras i redovisningsjournalen';
      Text008@1008 : TextConst 'ENU=%1 must be posted in the FA journal;NOR=%1 m† bokf›res i aktivakladden.;SVE=%1 m†ste bokf”ras i anl.journalen';
      Text009@1009 : TextConst 'ENU="must not be specified when %1 = %2 in %3";NOR="skal ikke angis n†r %1 = %2 i %3";SVE="f†r inte specificeras n„r %1 = %2 i %3"';
      Text010@1010 : TextConst 'ENU=must not be specified when %1 is specified;NOR=skal ikke angis n†r %1 er angitt;SVE=f†r inte specificeras n„r %1 „r specificerat';
      Text011@1011 : TextConst 'ENU="must not be specified together with %1 = %2";NOR="kan ikke angis sammen med %1 = %2.";SVE="f†r inte specificeras tillsammans med %1 = %2"';
      Text012@1012 : TextConst 'ENU=must not be specified when %1 is a %2;NOR=skal ikke angis n†r %1 er en %2;SVE=f†r inte specificeras n„r %1 „r %2';
      Text013@1013 : TextConst 'ENU=is a %1;NOR=er en %1;SVE=„r en %1';
      Text014@1014 : TextConst 'ENU=The combination of dimensions used in %1 %2, %3, %4 is blocked. %5;NOR=Kombinasjonen av dimensjonene som brukes i %1 %2, %3, %4 er sperret. %5;SVE=Kombinationen av dimensioner i %1 %2, %3, %4 „r sp„rrad. %5';
      Text015@1015 : TextConst 'ENU=A dimension used in %1 %2, %3, %4 has caused an error. %5;NOR=En dimensjon som brukes i %1 %2, %3, %4 har for†rsaket en feil. %5;SVE=En dimension anv„nd i %1 %2, %3, %4 har orsakat ett fel. %5';
      UserSetup@1016 : Record 91;
      FASetup@1017 : Record 5603;
      FA@1018 : Record 5600;
      FADeprBook@1019 : Record 5612;
      DeprBook@1020 : Record 5611;
      GenJnlLine@1021 : Record 81;
      GenJnlline2@1022 : Record 81;
      FAJnlLine@1023 : Record 5621;
      DimMgt@1024 : Codeunit 408;
      AllowPostingFrom@1025 : Date;
      AllowPostingTo@1026 : Date;
      GenJnlPosting@1027 : Boolean;
      FANo@1028 : Code[20];
      DeprBookCode@1029 : Code[10];
      PostingDate@1030 : Date;
      FAPostingDate@1031 : Date;
      FAPostingType@1032 : 'Acquisition Cost,Depreciation,Write-Down,Appreciation,Custom 1,Custom 2,Disposal,Maintenance,Salvage Value';
      FieldErrorText@1033 : Text[250];
      Text016@1034 : TextConst 'ENU=%1 + %2 must be %3.;NOR=%1 + %2 m† v‘re %3.;SVE=%1 + %2 m†ste vara %3.';
      Text017@1035 : TextConst 'ENU=%1 + %2 must be -%3.;NOR=%1 + %2 m† v‘re -%3.;SVE=%1 + %2 m†ste vara -%3.';
      Text018@1036 : TextConst 'ENU=You cannot dispose Main Asset %1 until Components are disposed.;NOR=Du kan ikke selge hovedaktiva %1 f›r komponenter er solgt.;SVE=Det g†r inte att avyttra huvudtillg†ngen %1 f”rr„n komponenter har avyttrats.';
      Text019Err@1037 : TextConst 'ENU=You cannot post depreciation, because the calculation is across different fiscal year periods, which is not supported.;NOR=Du kan ikke bokf›re avskrivning, fordi beregningen g†r over flere ulike perioder i regnskaps†ret, noe det ikke er st›tte for.;SVE=Du kan inte bokf”ra avskrivning eftersom ber„kningen g„ller f”r flera olika r„kenskaps†rsperioder, vilket inte st”ds.';

    [External]
    PROCEDURE CheckFAJnlLine@2(VAR FAJnlLine2@1000 : Record 5621);
    VAR
      TableID@1002 : ARRAY [10] OF Integer;
      No@1003 : ARRAY [10] OF Code[20];
    BEGIN
      WITH FAJnlLine2 DO BEGIN
        IF "FA No." = '' THEN
          EXIT;
        TESTFIELD("FA Posting Date");
        TESTFIELD("Depreciation Book Code");
        TESTFIELD("Document No.");
        IF "Duplicate in Depreciation Book" = "Depreciation Book Code" THEN
          FIELDERROR("Duplicate in Depreciation Book",
            STRSUBSTNO(Text000,FIELDCAPTION("Depreciation Book Code")));
        FANo := "FA No.";
        PostingDate := "Posting Date";
        FAPostingDate := "FA Posting Date";
        IF PostingDate = 0D THEN
          PostingDate := FAPostingDate;
        DeprBookCode := "Depreciation Book Code";
        FAPostingType := "FA Posting Type";
        IF NOT DimMgt.CheckDimIDComb("Dimension Set ID") THEN
          ERROR(
            Text014,
            TABLECAPTION,"Journal Template Name","Journal Batch Name","Line No.",
            DimMgt.GetDimCombErr);

        TableID[1] := DATABASE::"Fixed Asset";
        No[1] := "FA No.";
        IF NOT DimMgt.CheckDimValuePosting(TableID,No,"Dimension Set ID") THEN
          IF "Line No." <> 0 THEN
            ERROR(
              Text015,
              TABLECAPTION,"Journal Template Name","Journal Batch Name","Line No.",
              DimMgt.GetDimValuePostingErr)
          ELSE
            ERROR(DimMgt.GetDimValuePostingErr);
      END;
      GenJnlPosting := FALSE;
      FAJnlLine := FAJnlLine2;
      CheckJnlLine;

      OnAfterCheckFAJnlLine(FAJnlLine2);
    END;

    LOCAL PROCEDURE CheckJnlLine@4();
    BEGIN
      FA.GET(FANo);
      FASetup.GET;
      DeprBook.GET(DeprBookCode);
      FADeprBook.GET(FANo,DeprBookCode);
      CheckFAPostingDate;
      CheckFAIntegration;
      CheckConsistency;
      CheckErrorNo;
      CheckMainAsset;
    END;

    LOCAL PROCEDURE CheckFAPostingDate@7();
    VAR
      IsHandled@1000 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforeCheckFAPostingDate(GenJnlLine,FAJnlLine,DeprBook,IsHandled);
      IF IsHandled THEN
        EXIT;

      IF FAPostingDate <> NORMALDATE(FAPostingDate) THEN
        IF GenJnlPosting THEN
          GenJnlLine.FIELDERROR("FA Posting Date",Text003)
        ELSE
          FAJnlLine.FIELDERROR("FA Posting Date",Text003);

      IF (FAPostingDate < DMY2DATE(1,1,2)) OR
         (FAPostingDate > DMY2DATE(31,12,9998))
      THEN
        IF GenJnlPosting THEN
          GenJnlLine.FIELDERROR("FA Posting Date",Text004)
        ELSE
          FAJnlLine.FIELDERROR("FA Posting Date",Text004);

      IF (AllowPostingFrom = 0D) AND (AllowPostingTo = 0D) THEN BEGIN
        IF USERID <> '' THEN
          IF UserSetup.GET(USERID) THEN BEGIN
            AllowPostingFrom := UserSetup."Allow FA Posting From";
            AllowPostingTo := UserSetup."Allow FA Posting To";
          END;
        IF (AllowPostingFrom = 0D) AND (AllowPostingTo = 0D) THEN BEGIN
          FASetup.GET;
          AllowPostingFrom := FASetup."Allow FA Posting From";
          AllowPostingTo := FASetup."Allow FA Posting To";
        END;
        IF AllowPostingTo = 0D THEN
          AllowPostingTo := DMY2DATE(31,12,9998);
      END;
      IF (FAPostingDate < AllowPostingFrom) OR
         (FAPostingDate > AllowPostingTo)
      THEN
        IF GenJnlPosting THEN
          GenJnlLine.FIELDERROR("FA Posting Date",Text004)
        ELSE
          FAJnlLine.FIELDERROR("FA Posting Date",Text004);

      IF DeprBook."Use Same FA+G/L Posting Dates" AND (PostingDate <> FAPostingDate) THEN BEGIN
        IF GenJnlPosting THEN
          GenJnlLine.FIELDERROR(
            "FA Posting Date",STRSUBSTNO(Text005,
              GenJnlLine.FIELDCAPTION("Posting Date")));

        FAJnlLine.FIELDERROR(
          "Posting Date",STRSUBSTNO(Text005,
            FAJnlLine.FIELDCAPTION("FA Posting Date")))
      END;
    END;

    LOCAL PROCEDURE CheckFAIntegration@5();
    VAR
      GLIntegration@1000 : Boolean;
    BEGIN
      IF GenJnlPosting AND FA."Budgeted Asset" THEN
        GenJnlLine.FIELDERROR("Account No.",STRSUBSTNO(Text006,FA.FIELDCAPTION("Budgeted Asset")));
      IF FA."Budgeted Asset" THEN
        EXIT;
      CASE FAPostingType OF
        FAPostingType::"Acquisition Cost":
          GLIntegration := DeprBook."G/L Integration - Acq. Cost";
        FAPostingType::Depreciation:
          GLIntegration := DeprBook."G/L Integration - Depreciation";
        FAPostingType::"Write-Down":
          GLIntegration := DeprBook."G/L Integration - Write-Down";
        FAPostingType::Appreciation:
          GLIntegration := DeprBook."G/L Integration - Appreciation";
        FAPostingType::"Custom 1":
          GLIntegration := DeprBook."G/L Integration - Custom 1";
        FAPostingType::"Custom 2":
          GLIntegration := DeprBook."G/L Integration - Custom 2";
        FAPostingType::Disposal:
          GLIntegration := DeprBook."G/L Integration - Disposal";
        FAPostingType::Maintenance:
          GLIntegration := DeprBook."G/L Integration - Maintenance";
        FAPostingType::"Salvage Value":
          GLIntegration := FALSE;
      END;
      IF GLIntegration AND NOT GenJnlPosting THEN
        FAJnlLine.FIELDERROR(
          "FA Posting Type",
          STRSUBSTNO(Text007,FAJnlLine."FA Posting Type"));
      IF NOT GLIntegration AND GenJnlPosting THEN
        GenJnlLine.FIELDERROR(
          "FA Posting Type",
          STRSUBSTNO(Text008,GenJnlLine."FA Posting Type"));

      GLIntegration := DeprBook."G/L Integration - Depreciation";
      IF GenJnlPosting THEN
        WITH GenJnlLine DO BEGIN
          IF "Depr. until FA Posting Date" AND NOT GLIntegration THEN
            FIELDERROR(
              "Depr. until FA Posting Date",STRSUBSTNO(Text009,
                DeprBook.FIELDCAPTION("G/L Integration - Depreciation"),FALSE,DeprBook.TABLECAPTION));
          IF "Depr. Acquisition Cost" AND NOT GLIntegration THEN
            FIELDERROR(
              "Depr. Acquisition Cost",STRSUBSTNO(Text009,
                DeprBook.FIELDCAPTION("G/L Integration - Depreciation"),FALSE,DeprBook.TABLECAPTION));
        END;
      IF NOT GenJnlPosting THEN
        WITH FAJnlLine DO BEGIN
          IF "Depr. until FA Posting Date" AND GLIntegration THEN
            FIELDERROR(
              "Depr. until FA Posting Date",STRSUBSTNO(Text009,
                DeprBook.FIELDCAPTION("G/L Integration - Depreciation"),TRUE,DeprBook.TABLECAPTION));
          IF "Depr. Acquisition Cost" AND GLIntegration THEN
            FIELDERROR(
              "Depr. Acquisition Cost",STRSUBSTNO(Text009,
                DeprBook.FIELDCAPTION("G/L Integration - Depreciation"),TRUE,DeprBook.TABLECAPTION));
        END;
    END;

    LOCAL PROCEDURE CheckErrorNo@8();
    BEGIN
      IF GenJnlPosting AND (GenJnlLine."FA Error Entry No." > 0) THEN
        WITH GenJnlLine DO BEGIN
          FieldErrorText :=
            STRSUBSTNO(Text010,
              FIELDCAPTION("FA Error Entry No."));
          CASE TRUE OF
            "Depr. until FA Posting Date":
              FIELDERROR("Depr. until FA Posting Date",FieldErrorText);
            "Depr. Acquisition Cost":
              FIELDERROR("Depr. Acquisition Cost",FieldErrorText);
            "Duplicate in Depreciation Book" <> '':
              FIELDERROR("Duplicate in Depreciation Book",FieldErrorText);
            "Use Duplication List":
              FIELDERROR("Use Duplication List",FieldErrorText);
            "Salvage Value" <> 0:
              FIELDERROR("Salvage Value",FieldErrorText);
            "Insurance No." <> '':
              FIELDERROR("Insurance No.",FieldErrorText);
            "Budgeted FA No." <> '':
              FIELDERROR("Budgeted FA No.",FieldErrorText);
            "Recurring Method" > 0:
              FIELDERROR("Recurring Method",FieldErrorText);
          END;
        END;
      IF NOT GenJnlPosting AND (FAJnlLine."FA Error Entry No." > 0) THEN
        WITH FAJnlLine DO BEGIN
          FieldErrorText :=
            STRSUBSTNO(Text010,
              FIELDCAPTION("FA Error Entry No."));
          CASE TRUE OF
            "Depr. until FA Posting Date":
              FIELDERROR("Depr. until FA Posting Date",FieldErrorText);
            "Depr. Acquisition Cost":
              FIELDERROR("Depr. Acquisition Cost",FieldErrorText);
            "Duplicate in Depreciation Book" <> '':
              FIELDERROR("Duplicate in Depreciation Book",FieldErrorText);
            "Use Duplication List":
              FIELDERROR("Use Duplication List",FieldErrorText);
            "Salvage Value" <> 0:
              FIELDERROR("Salvage Value",FieldErrorText);
            "Insurance No." <> '':
              FIELDERROR("Insurance No.",FieldErrorText);
            "Budgeted FA No." <> '':
              FIELDERROR("Budgeted FA No.",FieldErrorText);
            "Recurring Method" > 0:
              FIELDERROR("Recurring Method",FieldErrorText);
          END;
        END;
    END;

    LOCAL PROCEDURE CheckConsistency@9();
    VAR
      IsHandled@1000 : Boolean;
    BEGIN
      IF GenJnlPosting THEN
        WITH GenJnlLine DO BEGIN
          IF "Journal Template Name" = '' THEN
            Quantity := 0;
          FieldErrorText :=
            STRSUBSTNO(Text011,
              FIELDCAPTION("FA Posting Type"),"FA Posting Type");
          IF ("FA Error Entry No." > 0) AND ("FA Posting Type" = "FA Posting Type"::Maintenance) THEN
            FIELDERROR("FA Error Entry No.",FieldErrorText);
          IF "FA Posting Type" <> "FA Posting Type"::"Acquisition Cost" THEN
            CASE TRUE OF
              "Depr. Acquisition Cost":
                FIELDERROR("Depr. Acquisition Cost",FieldErrorText);
              "Salvage Value" <> 0:
                FIELDERROR("Salvage Value",FieldErrorText);
              "Insurance No." <> '':
                FIELDERROR("Insurance No.",FieldErrorText);
              Quantity <> 0:
                BEGIN
                  IsHandled := FALSE;
                  OnCheckConsistencyOnBeforeCheckQuantity(GenJnlLine,IsHandled);
                  IF NOT IsHandled THEN
                    IF "FA Posting Type" <> "FA Posting Type"::Maintenance THEN
                      FIELDERROR(Quantity,FieldErrorText);
                END;
            END;
          IF ("FA Posting Type" <> "FA Posting Type"::Maintenance) AND
             ("Maintenance Code" <> '')
          THEN
            FIELDERROR("Maintenance Code",FieldErrorText);
          IF "FA Posting Type" = "FA Posting Type"::Maintenance THEN BEGIN
            IF "Depr. until FA Posting Date" THEN
              FIELDERROR("Depr. until FA Posting Date",FieldErrorText);
          END;

          IF ("FA Posting Type" <> "FA Posting Type"::Depreciation) AND
             ("FA Posting Type" <> "FA Posting Type"::"Custom 1") AND
             ("No. of Depreciation Days" <> 0)
          THEN
            FIELDERROR("No. of Depreciation Days",FieldErrorText);

          IF "FA Posting Type" = "FA Posting Type"::Disposal THEN BEGIN
            IF "FA Reclassification Entry" THEN
              FIELDERROR("FA Reclassification Entry",FieldErrorText);
            IF  "Budgeted FA No." <> '' THEN
              FIELDERROR("Budgeted FA No.",FieldErrorText);
          END;

          FieldErrorText := STRSUBSTNO(Text012,
              FIELDCAPTION("Account No."),FA.FIELDCAPTION("Budgeted Asset"));

          IF FA."Budgeted Asset" AND ("Budgeted FA No." <> '') THEN
            FIELDERROR("Budgeted FA No.",FieldErrorText);

          IF ("FA Posting Type" = "FA Posting Type"::"Acquisition Cost") AND
             ("Insurance No." <> '') AND
             (DeprBook.Code <> FASetup."Insurance Depr. Book")
          THEN
            TESTFIELD("Insurance No.",'');

          IF FA."Budgeted Asset" THEN
            FIELDERROR("Account No.",STRSUBSTNO(Text013,FA.FIELDCAPTION("Budgeted Asset")));
        END;

      IF NOT GenJnlPosting THEN
        WITH FAJnlLine DO BEGIN
          FieldErrorText :=
            STRSUBSTNO(Text011,
              FIELDCAPTION("FA Posting Type"),"FA Posting Type");

          IF ("FA Error Entry No." > 0) AND ("FA Posting Type" = "FA Posting Type"::Maintenance) THEN
            FIELDERROR("FA Error Entry No.",FieldErrorText);

          IF "FA Posting Type" <> "FA Posting Type"::"Acquisition Cost" THEN
            CASE TRUE OF
              "Depr. Acquisition Cost":
                FIELDERROR("Depr. Acquisition Cost",FieldErrorText);
              "Salvage Value" <> 0:
                FIELDERROR("Salvage Value",FieldErrorText);
              Quantity <> 0:
                IF "FA Posting Type" <> "FA Posting Type"::Maintenance THEN
                  FIELDERROR(Quantity,FieldErrorText);
              "Insurance No." <> '':
                FIELDERROR("Insurance No.",FieldErrorText);
            END;
          IF ("FA Posting Type" = "FA Posting Type"::Maintenance) AND
             "Depr. until FA Posting Date"
          THEN
            FIELDERROR("Depr. until FA Posting Date",FieldErrorText);
          IF ("FA Posting Type" <> "FA Posting Type"::Maintenance) AND
             ("Maintenance Code" <> '')
          THEN
            FIELDERROR("Maintenance Code",FieldErrorText);

          IF ("FA Posting Type" <> "FA Posting Type"::Depreciation) AND
             ("FA Posting Type" <> "FA Posting Type"::"Custom 1") AND
             ("No. of Depreciation Days" <> 0)
          THEN
            FIELDERROR("No. of Depreciation Days",FieldErrorText);

          IF "FA Posting Type" = "FA Posting Type"::Disposal THEN BEGIN
            IF "FA Reclassification Entry" THEN
              FIELDERROR("FA Reclassification Entry",FieldErrorText);
            IF  "Budgeted FA No." <> '' THEN
              FIELDERROR("Budgeted FA No.",FieldErrorText);
          END;

          FieldErrorText := STRSUBSTNO(Text012,
              FIELDCAPTION("FA No."),FA.FIELDCAPTION("Budgeted Asset"));

          IF FA."Budgeted Asset" AND ("Budgeted FA No." <> '') THEN
            FIELDERROR("Budgeted FA No.",FieldErrorText);

          IF ("FA Posting Type" = "FA Posting Type"::"Acquisition Cost") AND
             ("Insurance No." <> '') AND
             (DeprBook.Code <> FASetup."Insurance Depr. Book")
          THEN
            TESTFIELD("Insurance No.",'');
        END;
    END;

    LOCAL PROCEDURE CheckMainAsset@1();
    VAR
      MainAssetComponent@1000 : Record 5640;
      ComponentFADeprBook@1001 : Record 5612;
    BEGIN
      IF GenJnlLine."FA Posting Type" <> GenJnlLine."FA Posting Type"::Disposal THEN
        EXIT;
      IF FA."Main Asset/Component" <> FA."Main Asset/Component"::"Main Asset" THEN
        EXIT;

      WITH MainAssetComponent DO BEGIN
        RESET;
        SETRANGE("Main Asset No.",FA."No.");
        IF FINDSET THEN
          REPEAT
            IF ComponentFADeprBook.GET("FA No.",DeprBookCode) THEN
              IF ComponentFADeprBook."Disposal Date" = 0D THEN
                ERROR(Text018,FA."No.");
          UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CheckFADepAcrossFiscalYear@1000();
    VAR
      AccPeriod@1000 : Record 50;
      DepreciationCalculation@1003 : Codeunit 5616;
      AccountingPeriodMgt@1001 : Codeunit 360;
      EndingDate@1004 : Date;
      StartingDate@1002 : Date;
    BEGIN
      IF (GenJnlLine."FA Posting Type" = GenJnlLine."FA Posting Type"::Depreciation) AND
         (GenJnlLine."No. of Depreciation Days" <> 0) AND
         (FADeprBook."Depreciation Method" = FADeprBook."Depreciation Method"::"Declining-Balance 1")
      THEN BEGIN
        EndingDate := DepreciationCalculation.ToMorrow(GenJnlLine."FA Posting Date",DeprBook."Fiscal Year 365 Days");
        IF DeprBook."Fiscal Year 365 Days" THEN
          StartingDate := CALCDATE(STRSUBSTNO('<-%1D>',GenJnlLine."No. of Depreciation Days"),EndingDate)
        ELSE BEGIN
          StartingDate := CALCDATE(STRSUBSTNO('<-%1M>',GenJnlLine."No. of Depreciation Days" DIV 30),EndingDate);
          StartingDate := CALCDATE(STRSUBSTNO('<-%1D>',GenJnlLine."No. of Depreciation Days" MOD 30),StartingDate);
        END;
        AccPeriod.SETFILTER("Starting Date",'>%1&<=%2',AccountingPeriodMgt.FindFiscalYear(StartingDate),GenJnlLine."FA Posting Date");
        AccPeriod.SETRANGE("New Fiscal Year",TRUE);
        IF NOT AccPeriod.ISEMPTY THEN
          ERROR(Text019Err);
      END;
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCheckGenJnlLine@3(VAR GenJnlLine@1000 : Record 81);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCheckFAJnlLine@6(VAR FAJnlLine@1000 : Record 5621);
    BEGIN
    END;

    [Integration(DEFAULT,TRUE)]
    LOCAL PROCEDURE OnBeforeCheckFAPostingDate@10(GenJournalLine@1000 : Record 81;FAJournalLine@1001 : Record 5621;DepreciationBook@1002 : Record 5611;VAR IsHandled@1003 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnCheckConsistencyOnBeforeCheckQuantity@11(VAR GenJournalLine@1000 : Record 81;VAR IsHandled@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

