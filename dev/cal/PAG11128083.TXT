OBJECT Page 11128083 Employee List Cust
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Employee List;
               NOR=Liste over ansatte;
               SVE=Personallista];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table5200;
    SourceTableView=WHERE(Discipline=CONST(MONT™R));
    PageType=List;
    CardPageID=Employee Card;
    OnInit=VAR
             Fgroup@1100525001 : Integer;
             Status2filterIsSet@1100525000 : Boolean;
           BEGIN
           END;

    OnOpenPage=VAR
                 lEmplRec@1100485000 : Record 5200;
                 ServiceOrder@1100285000 : Record 11012823;
               BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 //**4PS.sn
                 //Disable Menubutton if called from other company
                 IF FIND('=<>') THEN;
                 lEmplRec.COPY(Rec);
                 IF NOT lEmplRec.FIND('=<>') THEN
                   CLEAR(lEmplRec);

                 EmployeeButtonEnabled := ("No." + "Full Name" = lEmplRec."No." + lEmplRec."Full Name");

                 //DP00465.so
                 //IF GETFILTER(Schedule) <> '' THEN BEGIN
                 //  IF NOT UserSetup.GET(USERID) THEN
                 //    UserSetup.INIT;
                 //  IF UserSetup."Employee No." <> '' THEN
                 //    IF EmplRec.GET(UserSetup."Employee No.") THEN
                 //      //db.sn, 21-05-13: C005474
                 //      //IF EmplRec."Manager No." <> '' THEN
                 //      //  SETRANGE("Manager No.", EmplRec."Manager No.");
                 //      IF EmplRec.Planner <> '' THEN
                 //        SETRANGE(Planner, EmplRec.Planner);
                 //      //db.en, 21-05-13: C005474
                 //END;
                 //DP00465.eo
                 IF NOT gShowActiveEmployees THEN BEGIN
                   lEmplRec.SETRANGE(Status, Status::Active);
                   IF GETFILTER(Status) = lEmplRec.GETFILTER(Status) THEN
                     gShowActiveEmployees := TRUE;
                 END;
                 ShowTable;
                 //**4PS.en
               END;

    OnAfterGetRecord=BEGIN
                       //**4PS.sn
                       IF gShowActiveEmployees AND (Status <> Status::Active) THEN
                         //Apparently Status Filter is removed
                         gShowActiveEmployees := FALSE;
                       //**4PS.en

                       CalculateOrderValues; // ITERO.KP

                       IF ProjBalance = 0 THEN
                         ShowRow := TRUE
                       ELSE
                         ShowRow := FALSE;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 33      ;1   ;ActionGroup;
                      Name=EmployeeButton;
                      CaptionML=[ENU=E&mployee;
                                 NOR=A&nsatt;
                                 SVE=&Personal];
                      Enabled=EmployeeButtonEnabled;
                      Image=Employee }
      { 43      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 NOR=Ko&mmentarer;
                                 SVE=Ko&mmentarer];
                      RunObject=Page 5222;
                      RunPageLink=Table Name=CONST(Employee),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 20      ;2   ;ActionGroup;
                      CaptionML=[ENU=Dimensions;
                                 NOR=Dimensjoner;
                                 SVE=Dimensioner];
                      Image=Dimensions }
      { 184     ;3   ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions-Single;
                                 NOR=Dimensjoner/&en;
                                 SVE=Dimensioner/&en];
                      RunObject=Page 540;
                      RunPageLink=Table ID=CONST(5200),
                                  No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Dimensions;
                      PromotedCategory=Process }
      { 19      ;3   ;Action    ;
                      CaptionML=[ENU=Dimensions-&Multiple;
                                 NOR=Dimensjoner-&flere;
                                 SVE=Dimensioner/&flera];
                      Promoted=Yes;
                      Image=DimensionSets;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Employee@1001 : Record 5200;
                                 DefaultDimMultiple@1002 : Page 542;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(Employee);
                                 DefaultDimMultiple.SetMultiEmployee(Employee);
                                 DefaultDimMultiple.RUNMODAL;
                               END;
                                }
      { 44      ;2   ;Action    ;
                      CaptionML=[ENU=&Picture;
                                 NOR=&Bilde;
                                 SVE=&Bild];
                      RunObject=Page 5202;
                      RunPageLink=No.=FIELD(No.);
                      Image=Picture }
      { 45      ;2   ;Action    ;
                      CaptionML=[ENU=&Alternative Addresses;
                                 NOR=&Alternative adresser;
                                 SVE=&Alternativa adresser];
                      RunObject=Page 5203;
                      RunPageLink=Employee No.=FIELD(No.);
                      Image=Addresses }
      { 46      ;2   ;Action    ;
                      CaptionML=[ENU=&Relatives;
                                 NOR=&Beslektede;
                                 SVE=Anh&”riga];
                      RunObject=Page 5209;
                      RunPageLink=Employee No.=FIELD(No.);
                      Image=Relatives }
      { 47      ;2   ;Action    ;
                      CaptionML=[ENU=Mi&sc. Article Information;
                                 NOR=Di&v. artikkelinformasjon;
                                 SVE=Di&v. artikel information];
                      RunObject=Page 5219;
                      RunPageLink=Employee No.=FIELD(No.);
                      Image=Filed }
      { 48      ;2   ;Action    ;
                      CaptionML=[ENU=Co&nfidential Information;
                                 NOR=Konf&idensiell informasjon;
                                 SVE=Ko&nfidentiell information];
                      RunObject=Page 5221;
                      RunPageLink=Employee No.=FIELD(No.);
                      Image=Lock }
      { 49      ;2   ;Action    ;
                      CaptionML=[ENU=Q&ualifications;
                                 NOR=K&valifikasjoner;
                                 SVE=Kom&petens];
                      RunObject=Page 5206;
                      RunPageLink=Employee No.=FIELD(No.);
                      Image=Certificate }
      { 50      ;2   ;Action    ;
                      CaptionML=[ENU=A&bsences;
                                 NOR=F&rav‘r;
                                 SVE=Fr&†nvaro];
                      RunObject=Page 5211;
                      RunPageLink=Employee No.=FIELD(No.);
                      Image=Absence }
      { 51      ;2   ;Separator  }
      { 54      ;2   ;Action    ;
                      CaptionML=[ENU=Absences by Ca&tegories;
                                 NOR=Frav‘r etter ka&tegori;
                                 SVE=Fr†nvaro per ka&tegori];
                      RunObject=Page 5226;
                      RunPageLink=No.=FIELD(No.),
                                  Employee No. Filter=FIELD(No.);
                      Image=AbsenceCategory }
      { 55      ;2   ;Action    ;
                      CaptionML=[ENU=Misc. Articles &Overview;
                                 NOR=D&iv. artikler Oversikt;
                                 SVE=D&iv. artiklar ”versikt];
                      RunObject=Page 5228;
                      Image=FiledOverview }
      { 56      ;2   ;Action    ;
                      CaptionML=[ENU=Con&fidential Info. Overview;
                                 NOR=Ko&nfidensiell info.- oversikt;
                                 SVE=K&onfidentiell info. ”versikt];
                      RunObject=Page 5229;
                      Image=ConfidentialOverview }
      { 57      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 58      ;1   ;Action    ;
                      CaptionML=[ENU=Absence Registration;
                                 NOR=Frav‘rsregistrering;
                                 SVE=Fr†nvaroregistrering];
                      RunObject=Page 5212;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Absence;
                      PromotedCategory=Process }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="No." }

    { 17  ;2   ;Field     ;
                Name=FullName;
                CaptionML=[ENU=Full Name;
                           NOR=Fullstendig navn;
                           SVE=Fullst„ndigt namn];
                SourceExpr=FullName }

    { 4   ;2   ;Field     ;
                SourceExpr="First Name" }

    { 6   ;2   ;Field     ;
                SourceExpr="Middle Name" }

    { 8   ;2   ;Field     ;
                SourceExpr="Last Name" }

    { 10  ;2   ;Field     ;
                SourceExpr=Initials;
                Visible=FALSE }

    { 12  ;2   ;Group     ;
                GroupType=Group }

    { 1210190000;2;Field  ;
                SourceExpr="Global Dimension 1 Code";
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 1210190008;2;Field  ;
                SourceExpr="Global Dimension 2 Code";
                Visible=FALSE }

    { 1210190002;2;Field  ;
                SourceExpr=Employer }

    { 1210190004;2;Field  ;
                SourceExpr=External;
                Visible=FALSE }

    { 1101200002;2;Field  ;
                SourceExpr=City;
                Visible=FALSE }

    { 80  ;2   ;Field     ;
                SourceExpr=Extension }

    { 1210190006;2;Field  ;
                SourceExpr="Company E-Mail" }

    { 14  ;2   ;Field     ;
                SourceExpr="Search Name" }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=Order Revenue;
                           SVE=Int„kt serviceordrar];
                SourceExpr=Revenue }

    { 5   ;2   ;Field     ;
                CaptionML=[ENU=Order Costs;
                           SVE=Kostnad serviceordrar];
                SourceExpr=ProjBalance-Revenue }

    { 7   ;2   ;Field     ;
                CaptionML=[ENU=Order Balance;
                           SVE=TB Serviceordrar];
                SourceExpr=ProjBalance;
                Style=Attention;
                StyleExpr=NegBal }

    { 9   ;2   ;Field     ;
                CaptionML=[ENU=Profit %;
                           NOR=Fortjeneste %;
                           SVE=TG];
                SourceExpr=ProfitPct;
                Style=Attention;
                StyleExpr=NegBal2 }

    { 11  ;2   ;Field     ;
                CaptionML=[ENU=Hours;
                           NOR=Timer;
                           SVE=Timmar];
                SourceExpr=Hours }

    { 13  ;2   ;Field     ;
                CaptionML=[ENU=Tools & Equipment;
                           SVE=Verktyg & maskiner];
                SourceExpr=ToolsCost }

    { 15  ;2   ;Field     ;
                CaptionML=[ENU=Service Car;
                           NOR=Servicekj›ret›y;
                           SVE=Servicebilskostnader];
                SourceExpr=CarCost }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=Workwear;
                           SVE="Arbetskl„der "];
                SourceExpr=WorkwearCost }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Other Costs;
                           NOR=Andre kostnader;
                           SVE="™vriga kostnader "];
                SourceExpr=OtherCost }

    { 21  ;2   ;Field     ;
                CaptionML=[ENU=Total Costs;
                           NOR=Totale kost;
                           SVE="Summa mont”rskostnader "];
                SourceExpr=Total1 }

    { 22  ;2   ;Field     ;
                CaptionML=[ENU=Result;
                           NOR=Resultat;
                           SVE="Mont”rsresultat "];
                SourceExpr=Total2;
                Style=Attention;
                StyleExpr=NegBal3 }

    { 23  ;2   ;Field     ;
                CaptionML=[ENU=Department Costs;
                           SVE=Filialkostnad];
                SourceExpr=DepCost }

    { 24  ;2   ;Field     ;
                CaptionML=[ENU=CK Costs;
                           SVE=HK-kostnad];
                SourceExpr=CKCost }

    { 1100285000;2;Field  ;
                CaptionML=[ENU=Total;
                           NOR=I alt;
                           SVE=Total];
                SourceExpr=Total3;
                Style=Attention;
                StyleExpr=NegBal4 }

  }
  CODE
  {
    VAR
      ProjSetup@1210190000 : Record 315;
      UserSetup@1100485000 : Record 91;
      EmplRec@1100485001 : Record 5200;
      DepAuthRec@1100000997 : Record 11012466;
      SummarySetup@1015 : Record 11128081;
      Overhead@1016 : Record 11020208;
      AnalysisEntry@1017 : Record 365;
      gShowActiveEmployees@1100485002 : Boolean;
      DPA_IsHardFilter@1100000999 : Boolean;
      EmployeeButtonEnabled@1100525000 : Boolean INDATASET;
      ProjRevenue@1000 : Decimal;
      ProjCosts@1001 : Decimal;
      ProjBalance@1002 : Decimal;
      ProfitHour@1003 : Decimal;
      Hours@1004 : Decimal;
      ProfitPct@1005 : Decimal;
      Revenue@1006 : Decimal;
      ToolsCost@1007 : Decimal;
      CarCost@1008 : Decimal;
      WorkwearCost@1009 : Decimal;
      OtherCost@1010 : Decimal;
      Total1@1011 : Decimal;
      Total2@1012 : Decimal;
      DepCost@1013 : Decimal;
      CKCost@1014 : Decimal;
      NegBal@1100285000 : Boolean INDATASET;
      NegBal2@1100285001 : Boolean INDATASET;
      NegBal3@1100285002 : Boolean INDATASET;
      Total3@1100285003 : Decimal;
      NegBal4@1100285004 : Boolean INDATASET;
      ShowRow@1100285005 : Boolean;

    PROCEDURE ShowTable@1100485000();
    BEGIN
      //**4PS
      IF gShowActiveEmployees THEN
        SETRANGE(Status, Status::Active)
      ELSE
        SETRANGE(Status);
    END;

    PROCEDURE GetSelectionFilter@1100526100() : Text[250];
    VAR
      Employee@1100526101 : Record 5200;
      SelectionFilter@1100526100 : Text[250];
      FirstEmployee@1100526102 : Code[20];
      LastEmployee@1100526103 : Code[20];
      EmployeeCount@1100526104 : Integer;
    BEGIN
      //**4PS
      CurrPage.SETSELECTIONFILTER(Employee);
      EmployeeCount := Employee.COUNT;
      IF EmployeeCount > 0 THEN BEGIN
        Employee.FIND('-');
        WHILE EmployeeCount > 0 DO BEGIN
          EmployeeCount := EmployeeCount - 1;
          Employee.MARKEDONLY(FALSE);
          FirstEmployee := Employee."No.";
          LastEmployee := FirstEmployee;
          IF SelectionFilter <> '' THEN
            SelectionFilter := SelectionFilter + '|';
          IF FirstEmployee = LastEmployee THEN
            SelectionFilter := SelectionFilter + FirstEmployee
          ELSE
            SelectionFilter := SelectionFilter + FirstEmployee + '..' + LastEmployee;
          IF EmployeeCount > 0 THEN BEGIN
            Employee.MARKEDONLY(TRUE);
            Employee.NEXT;
          END;
        END;
      END;
      EXIT(SelectionFilter);
    END;

    LOCAL PROCEDURE gShowActiveEmployeesOnAfterVal@19014325();
    BEGIN
      //**4PS
      ShowTable;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE CalculateOrderValues@2();
    VAR
      ServiceOrder@1003 : Record 11012823;
      SLEntry@1000 : Record 11012819;
    BEGIN

      ClearAmounts;

      ServiceOrder.RESET;
      ServiceOrder.SETRANGE("Assigned to","No.");
      ServiceOrder.SETRANGE(Status,ServiceOrder.Status::Finished);
      IF ServiceOrder.FIND('-') THEN REPEAT
        SLEntry.RESET;
        SLEntry.SETCURRENTKEY("Service Order No.");
        SLEntry.SETRANGE("Service Order No.",ServiceOrder."No.");
        IF SLEntry.FIND('-') THEN REPEAT
          ProjBalance += SLEntry."Total Revenue (LCY)" - SLEntry."Total Cost (LCY)" ;
          IF SLEntry."Cost Type" = SLEntry."Cost Type"::Labor THEN
            Hours += SLEntry.Quantity;
          IF SLEntry."Cost Type" = SLEntry."Cost Type"::Revenues THEN
            Revenue += SLEntry."Total Revenue (LCY)";
        UNTIL SLEntry.NEXT=0;
      UNTIL ServiceOrder.NEXT=0;
      IF Hours <> 0 THEN
        ProfitHour := ROUND(ProjBalance / Hours,1,'=');
      IF Revenue <> 0 THEN
        ProfitPct := ROUND(100 * ProjBalance / Revenue,0.01,'=');

      SummarySetup.GET;
      IF SummarySetup."Analysis View Code" <> '' THEN BEGIN
        AnalysisEntry.RESET;
        AnalysisEntry.SETRANGE("Analysis View Code",SummarySetup."Analysis View Code");
        AnalysisEntry.SETRANGE("Dimension 1 Value Code","No.");
        IF SummarySetup."Tools Account Filter" <> '' THEN BEGIN
          AnalysisEntry.SETFILTER("Account No.",SummarySetup."Tools Account Filter");
          IF AnalysisEntry.FIND('-') THEN REPEAT
            ToolsCost += AnalysisEntry.Amount;
          UNTIL AnalysisEntry.NEXT =0;
        END;
        IF SummarySetup."Service Car Account Filter" <> '' THEN BEGIN
          AnalysisEntry.SETFILTER("Account No.",SummarySetup."Service Car Account Filter");
          IF AnalysisEntry.FIND('-') THEN REPEAT
            CarCost += AnalysisEntry.Amount;
          UNTIL AnalysisEntry.NEXT =0;
        END;
        IF SummarySetup."Workwear Account Filter" <> '' THEN BEGIN
          AnalysisEntry.SETFILTER("Account No.",SummarySetup."Workwear Account Filter");
          IF AnalysisEntry.FIND('-') THEN REPEAT
            WorkwearCost += AnalysisEntry.Amount;
          UNTIL AnalysisEntry.NEXT =0;
        END;
        IF SummarySetup."Other Costs Account Filter" <> '' THEN BEGIN
          AnalysisEntry.SETFILTER("Account No.",SummarySetup."Other Costs Account Filter");
          IF AnalysisEntry.FIND('-') THEN REPEAT
            OtherCost += AnalysisEntry.Amount;
          UNTIL AnalysisEntry.NEXT =0;
        END;
      END;
      Total1 := ToolsCost + CarCost+ WorkwearCost + OtherCost;
      Total2 := ProjBalance - Total1;

      IF (SummarySetup."Department Cost Level" <> 0) AND (SummarySetup."Department Cost Object" <> '') THEN BEGIN
        Overhead.RESET;
        Overhead.SETRANGE(Level,SummarySetup."Department Cost Level");
        Overhead.SETRANGE("Cost Object Surcharge",SummarySetup."Department Cost Object");
        Overhead.SETRANGE(Department,"Global Dimension 1 Code");
        IF Overhead.FIND('-') THEN REPEAT
          DepCost += Overhead.Amount;
        UNTIL Overhead.NEXT=0;
        DepCost := DepCost * Hours;
      END;

      IF (SummarySetup."CK Cost Level" <> 0) AND (SummarySetup."CK Cost Object" <> '') THEN BEGIN
        Overhead.RESET;
        Overhead.SETRANGE(Level,SummarySetup."CK Cost Level");
        Overhead.SETRANGE("Cost Object Surcharge",SummarySetup."CK Cost Object");
        Overhead.SETRANGE(Department,"Global Dimension 1 Code");
        IF Overhead.FIND('-') THEN REPEAT
          CKCost += Overhead.Amount;
        UNTIL Overhead.NEXT=0;
        CKCost := CKCost * Hours;
      END;

      Total3:=Total2-(CKCost+DepCost);

      IF ProjBalance<0 THEN
        NegBal:= TRUE
      ELSE
        NegBal:=FALSE;

      IF ProfitPct<0 THEN
        NegBal2:= TRUE
      ELSE
        NegBal2:=FALSE;

      IF Total2<0 THEN
        NegBal3:= TRUE
      ELSE
        NegBal3:=FALSE;

      IF Total3<0 THEN
        NegBal4:= TRUE
      ELSE
        NegBal4:=FALSE;
    END;

    PROCEDURE ClearAmounts@13();
    BEGIN
      ProjRevenue :=0;
      ProjCosts := 0;
      ProjBalance :=0;
      ProfitPct :=0;
      Hours := 0;
      Revenue :=0;
      ToolsCost := 0;
      CarCost := 0;
      WorkwearCost := 0;
      OtherCost := 0;
      Total1:=0;
      Total2:=0;
      DepCost :=0;
      CKCost :=0;
    END;

    BEGIN
    {
      4PS,03-06-2010,HBK C-017611 Several Fields deleted
      4PS, 08-08-11, PS, C-23249, E-mail replaced bij Company E-mail
    }
    END.
  }
}

