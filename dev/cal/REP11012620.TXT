OBJECT Report 11012620 Export Plant Invoices Central
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 112=rm,
                TableData 114=rm;
    CaptionML=[DEU=Werkzeugrechnungen exportieren in Zentral;
               ENU=Export Plant Invoices Central;
               NLD=Materieelfacturen naar centraal exporteren;
               NOR=Eksporter maskinfakturaer Sentralt;
               SVE=Exportera Maskinfakturor centralt];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  TempBlob.Blob.CREATEOUTSTREAM(OutStr,TEXTENCODING::Windows);
                END;

    OnPostReport=BEGIN
                   IF WrittenToOutstream THEN
                     ThreeTierAutomationMgt.BLOBExport4PS(TempBlob, Text000, TRUE, TRUE);
                 END;

    UsageCategory=Tasks;
  }
  DATASET
  {
    { 5581;    ;DataItem;                    ;
               DataItemTable=Table112;
               DataItemTableView=WHERE(Plant Invoice=CONST(Yes));
               OnPreDataItem=BEGIN
                               SETRANGE("Service Order No.", '');  //* Not plant invoices for service order
                             END;

               OnAfterGetRecord=BEGIN
                                  RecRef.GETTABLE("Sales Invoice Header");
                                  XMLportStatusDialogMgt.ShowExportStatus(RecRef);

                                  SalesInvLine.SETRANGE("Document No.","No.");
                                  SalesInvLine.SETRANGE(Type,SalesInvLine.Type::"G/L Account");
                                  IF SalesInvLine.FINDSET THEN
                                    REPEAT
                                      EVALUATE(AccNrInt, SalesInvLine."No.");
                                      IF TmpCumSalesInv.GET(SalesInvLine."Shortcut Dimension 2 Code",AccNrInt) THEN BEGIN
                                        TmpCumSalesInv.Amount := TmpCumSalesInv.Amount + SalesInvLine."Line Amount";
                                        TmpCumSalesInv.MODIFY;
                                      END ELSE BEGIN
                                        DimMgt.GetDimValueRec(2,SalesInvLine."Shortcut Dimension 2 Code",DimValRec,FALSE,'');
                                        TmpCumSalesInv."Document No." := SalesInvLine."Shortcut Dimension 2 Code";
                                        TmpCumSalesInv."Line No." := AccNrInt;
                                        TmpCumSalesInv."No." := SalesInvLine."No.";
                                        TmpCumSalesInv.Description := DimValRec.Name;
                                        TmpCumSalesInv.Amount := SalesInvLine."Line Amount";
                                        TmpCumSalesInv.Element := SalesInvLine.Element;
                                        TmpCumSalesInv.INSERT;
                                      END;
                                    UNTIL SalesInvLine.NEXT = 0;

                                  IF TmpCumSalesInv.FIND('-') THEN
                                    REPEAT
                                      OutStr.WRITETEXT(
                                        STRSUBSTNO(
                                          '"%1","%2","%3","%4","%5","%6","%7","%8"',
                                          "Posting Date","No.","Job No.",TmpCumSalesInv."Document No.",TmpCumSalesInv."No.",
                                          TmpCumSalesInv.Description,TmpCumSalesInv.Amount,TmpCumSalesInv.Element));
                                      OutStr.WRITETEXT; // New line
                                      WrittenToOutstream := TRUE;
                                      TmpCumSalesInv.DELETE;
                                    UNTIL TmpCumSalesInv.NEXT = 0;

                                  "Exported on" := TODAY;
                                  MODIFY;
                                END;

               ReqFilterFields=No.,Posting Date,Exported on }

    { 8098;    ;DataItem;                    ;
               DataItemTable=Table114;
               DataItemTableView=WHERE(Plant Credit Memo=CONST(Yes));
               OnPreDataItem=BEGIN
                               SETRANGE("Service Order No.", '');  //* Not plant invoices for service order
                             END;

               OnAfterGetRecord=BEGIN
                                  RecRef.GETTABLE("Sales Cr.Memo Header");
                                  XMLportStatusDialogMgt.ShowExportStatus(RecRef);

                                  SalesCredMemoLine.SETRANGE("Document No.","No.");
                                  SalesCredMemoLine.SETRANGE(Type,SalesCredMemoLine.Type::"G/L Account");
                                  IF SalesCredMemoLine.FINDSET THEN
                                    REPEAT
                                      EVALUATE(AccNrInt, SalesCredMemoLine."No.");
                                      IF TmpCumSalesInv.GET(SalesCredMemoLine."Shortcut Dimension 2 Code",AccNrInt) THEN BEGIN
                                        TmpCumSalesInv.Amount := TmpCumSalesInv.Amount - SalesCredMemoLine."Line Amount";
                                        TmpCumSalesInv.MODIFY;
                                      END ELSE BEGIN
                                        DimMgt.GetDimValueRec(2,SalesCredMemoLine."Shortcut Dimension 2 Code",DimValRec,FALSE,'');
                                        TmpCumSalesInv."Document No." := SalesCredMemoLine."Shortcut Dimension 2 Code";
                                        TmpCumSalesInv."Line No." := AccNrInt;
                                        TmpCumSalesInv."No." := SalesCredMemoLine."No.";
                                        TmpCumSalesInv.Description := DimValRec.Name;
                                        TmpCumSalesInv.Amount := -SalesCredMemoLine."Line Amount";
                                        TmpCumSalesInv.Element := SalesCredMemoLine.Element;
                                        TmpCumSalesInv.INSERT;
                                      END;
                                    UNTIL SalesCredMemoLine.NEXT = 0;

                                  IF TmpCumSalesInv.FIND('-') THEN
                                    REPEAT
                                      OutStr.WRITETEXT(
                                        STRSUBSTNO(
                                          '"%1","%2","%3","%4","%5","%6","%7","%8"',
                                          "Posting Date","No.","Job No.",TmpCumSalesInv."Document No.",TmpCumSalesInv."No.",
                                          TmpCumSalesInv.Description,TmpCumSalesInv.Amount,TmpCumSalesInv.Element));
                                      OutStr.WRITETEXT; // New line
                                      WrittenToOutstream := TRUE;
                                      TmpCumSalesInv.DELETE;
                                    UNTIL TmpCumSalesInv.NEXT = 0;

                                  "Exported on" := TODAY;
                                  MODIFY;
                                END;

               ReqFilterFields=No.,Posting Date,Exported on }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1100525003 : TextConst 'DEU=Export Plant Invoices Central.txt;ENU=Export Plant Invoices Central.txt;NLD=Export Plant Invoices Central.txt;NOR=Eksporter maskinfakturaer sentralt.txt;SVE=Exportera Maskinfakturor centralt.txt';
      SalesInvLine@1100525009 : Record 113;
      TmpCumSalesInv@1100525008 : TEMPORARY Record 113;
      SalesCredMemoLine@1100525007 : Record 115;
      DimValRec@1100525006 : Record 349;
      TempBlob@1100525001 : Record 99008535;
      RecRef@1100525010 : RecordRef;
      XMLportStatusDialogMgt@1100525011 : Codeunit 11130006;
      DimMgt@1100525005 : Codeunit 408;
      ThreeTierAutomationMgt@1100525000 : Codeunit 419;
      OutStr@1100525002 : OutStream;
      AccNrInt@1100525004 : Integer;
      WrittenToOutstream@1100525012 : Boolean;

    BEGIN
    {
      CC: Dataport 11012550
    }
    END.
  }
  RDLDATA
  {
  }
}

