OBJECT Table 11229353 CFW Connector
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnModify=BEGIN
               DocumentElementSet;
             END;

    OnDelete=VAR
               CFWConnectorMapping@1100528300 : Record 11229354;
               CFWConnectorDataLine@1100528301 : Record 11229460;
               CFWConnectorParameter@1100528302 : Record 11229371;
             BEGIN
               CFWConnectorDataLine.SETRANGE("Service Code", "Service Code");
               CFWConnectorDataLine.SETRANGE("Connector Code", Code);
               CFWConnectorDataLine.DELETEALL(TRUE);

               CFWConnectorMapping.SETRANGE("Service Code", "Service Code");
               CFWConnectorMapping.SETRANGE("Connector Code", Code);
               CFWConnectorMapping.DELETEALL(TRUE);

               CFWConnectorParameter.SETRANGE("Service Code", "Service Code");
               CFWConnectorParameter.SETRANGE("Connector Code", Code);
               CFWConnectorParameter.DELETEALL(TRUE);
             END;

    CaptionML=ENU=CFW Connector;
    LookupPageID=Page11130246;
    DrillDownPageID=Page11130246;
  }
  FIELDS
  {
    { 5   ;   ;Service Code        ;Code20        ;TableRelation="Consumed Web Service".Code;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Service Description");
                                                              END;

                                                   CaptionML=ENU=Service Code }
    { 6   ;   ;Service Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Consumed Web Service".Description WHERE (Code=FIELD(Service Code)));
                                                   CaptionML=ENU=Service Description;
                                                   Editable=No }
    { 10  ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes;
                                                   CharAllowed=09AZ__ }
    { 100 ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 110 ;   ;Table No.           ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Table));
                                                   OnValidate=VAR
                                                                Key@1100528300 : Record 2000000063;
                                                              BEGIN
                                                                CALCFIELDS("Table Name");
                                                                IF ("Table No." <> 0) THEN BEGIN
                                                                  Key.GET("Table No.", 1);
                                                                  "Primary Key Index" := Key.Key;
                                                                  DocumentElementSet;
                                                                END ELSE BEGIN
                                                                  "Primary Key Index" := '';
                                                                  "Document Element" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Table No.;
                                                              NOR=Tabellnr;
                                                              SVE=Tabellnr] }
    { 111 ;   ;Table Name          ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Table),
                                                                                         Company Name=FILTER(''),
                                                                                         ID=FIELD(Table No.)));
                                                   CaptionML=[ENU=Table Name;
                                                              NOR=Tabellnavn;
                                                              SVE=Tabellnamn];
                                                   Editable=No }
    { 112 ;   ;Primary Key Index   ;Text250       ;CaptionML=ENU=Primary Key Index;
                                                   Editable=No }
    { 120 ;   ;Direction           ;Option        ;CaptionML=[ENU=Direction;
                                                              NOR=Retning;
                                                              SVE=Riktning];
                                                   OptionCaptionML=ENU=" ,Inbound,Outbound";
                                                   OptionString=[ ,Inbound,Outbound] }
    { 130 ;   ;Template            ;BLOB          ;CaptionML=[ENU=Template;
                                                              NOR=Mal;
                                                              SVE=Mall] }
    { 140 ;   ;Interface Codeunit  ;Integer       ;TableRelation="CFW Connector Interface"."Object Id" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Interface Name");
                                                              END;

                                                   CaptionML=ENU=Interface Codeunit }
    { 141 ;   ;Interface Name      ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Codeunit),
                                                                                         Company Name=FILTER(''),
                                                                                         ID=FIELD(Interface Codeunit)));
                                                   CaptionML=ENU=Interface Codeunit Name;
                                                   Editable=No }
    { 150 ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=ENU=" ,CSV File,Web Service,Subconnector";
                                                   OptionString=[ ,CsvFile,WebService,SubConnector] }
    { 160 ;   ;Skip Insert         ;Boolean       ;CaptionML=ENU=Skip Insert }
    { 170 ;   ;Skip Modify         ;Boolean       ;CaptionML=ENU=Skip Modify }
    { 530 ;   ;Document Element    ;Text50        ;CaptionML=ENU=Document Element }
    { 600 ;   ;No. Of Mapping Lines;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("CFW Connector Mapping" WHERE (Service Code=FIELD(Service Code),
                                                                                                    Connector Code=FIELD(Code)));
                                                   CaptionML=ENU=No. of Mapping Lines;
                                                   Editable=No }
    { 610 ;   ;No. Of Data Lines   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("CFW Connector Data Line." WHERE (Service Code=FIELD(Service Code),
                                                                                                       Connector Code=FIELD(Code)));
                                                   CaptionML=ENU=No. of Data Lines;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Service Code,Code                       ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100528301 : TextConst 'ENU=Select %1 file';
      Text000@1100528300 : TextConst 'ENU=Rename is not allowed.;NOR=Gi nytt navn ikke tillatt;SVE=Att ge nytt namn „r inte till†tet.';
      Text002@1100528302 : TextConst 'ENU=There is no Service Parameter (%1) defined for %2.';

    [External]
    PROCEDURE CreateTemplate@1100528309();
    VAR
      CFWConnectorMapping@1100528301 : Record 11229354;
      DataXmlString@1100528300 : Text;
    BEGIN
      CFWConnectorMapping.GetMapping("Service Code",Code);
      CFWConnectorMapping.SETFILTER("Data Type",'<>''''');
      IF (NOT CFWConnectorMapping.FINDSET) THEN
        EXIT;

      DataXmlString := STRSUBSTNO('<%1>', DocumentElementGetXpath);
      REPEAT
        DataXmlString += STRSUBSTNO('<%1>%2</%1>', CFWConnectorMapping."Element Name", CFWConnectorMapping."Data Type");
      UNTIL (CFWConnectorMapping.NEXT = 0);

      DataXmlString += STRSUBSTNO('</%1>', "Document Element");
      SaveStringToBlob(FIELDNO(Template), DataXmlString);
    END;

    [External]
    PROCEDURE EditBlob@1100528311(FieldNo@1100528300 : Integer);
    VAR
      TempBlob@1100528302 : TEMPORARY Record 99008535;
      TextEditor@1100528305 : Codeunit 11012001;
      IStream@1100528301 : InStream;
      OStream@1100528304 : OutStream;
      HasValue@1100528303 : Boolean;
    BEGIN
      CreateInstream(FieldNo, IStream, HasValue);

      TempBlob.INIT;
      TempBlob.Blob.CREATEOUTSTREAM(OStream);
      COPYSTREAM(OStream, IStream);
      TextEditor.EditBLOBFieldText(TempBlob, 'xml');

      TempBlob.Blob.CREATEINSTREAM(IStream);
      CreateOutStream(FieldNo, OStream);
      COPYSTREAM(OStream, IStream);
      MODIFY(TRUE);
    END;

    [External]
    PROCEDURE ViewBlob@1100528304(FieldNo@1100528300 : Integer);
    VAR
      CFWConnectorManagement@1100528303 : Codeunit 11229291;
      IStream@1100528301 : InStream;
      HasValue@1100528302 : Boolean;
    BEGIN
      CreateInstream(FieldNo, IStream, HasValue);
      CFWConnectorManagement.ViewStreamOLD20191028(HasValue, IStream);
    END;

    [External]
    PROCEDURE ReadStringFromBlob@1100528303(FieldNo@1100528300 : Integer) DataXmlString : Text;
    VAR
      CFWConnectorManagement@1100528303 : Codeunit 11229291;
      IStream@1100528301 : InStream;
      HasValue@1100528302 : Boolean;
    BEGIN
      CreateInstream(FieldNo, IStream, HasValue);
      DataXmlString := CFWConnectorManagement.ReadStringFromStream(HasValue, IStream)
    END;

    [External]
    PROCEDURE SaveStringToBlob@1100528310(FieldNo@1100528300 : Integer;DataXmlString@1100528301 : Text);
    VAR
      CFWConnectorManagement@1100528303 : Codeunit 11229291;
      OStream@1100528302 : OutStream;
    BEGIN
      CreateOutStream(FieldNo, OStream);
      CFWConnectorManagement.WriteStringToStream(DataXmlString, OStream);
      MODIFY(TRUE);
    END;

    [External]
    PROCEDURE UploadToBlob@1100528307(FieldNo@1100528300 : Integer;FieldCaption@1100528301 : Text);
    VAR
      CFWConnectorManagement@1100528306 : Codeunit 11229291;
      Istream@1100528302 : InStream;
      Ostream@1100528303 : OutStream;
      TempServerFileName@1100528304 : Text;
      TempFile@1100528305 : File;
    BEGIN
      CFWConnectorManagement.SelectFile(STRSUBSTNO(Text001, FieldCaption), '.xml', TempServerFileName);
      CreateOutStream(FieldNo, Ostream);
      TempFile.OPEN(TempServerFileName);
      TempFile.CREATEINSTREAM(Istream);
      COPYSTREAM(Ostream, Istream);
      MODIFY(TRUE);

      TempFile.CLOSE;
      ERASE(TempServerFileName);
    END;

    [External]
    PROCEDURE ConnectorParameterGet@1100525000(Parameter@1100525001 : Text) Value : Text;
    VAR
      CFWConnectorParameter@1100525000 : Record 11229371;
    BEGIN
      IF NOT CFWConnectorParameter.GET("Service Code",Code,Parameter) THEN
        ERROR('Er is geen parameter(%1) gedefinieerd voor %2/%3', Parameter,"Service Code", Code);
      Value := CFWConnectorParameter.Value;
    END;

    [External]
    PROCEDURE ConnectorParameterGetAsInt@1100525002(Parameter@1100525001 : Text) ValueInt : Integer;
    VAR
      Value@1100525002 : Text;
    BEGIN
      Value := ConnectorParameterGet(Parameter);
      EVALUATE(ValueInt,Value,9);
    END;

    [External]
    PROCEDURE ConnectorParameterSet@1100525001(Parameter@1100525001 : Text;Value@1100525000 : Text);
    VAR
      CFWConnectorParameter@1100525002 : Record 11229371;
    BEGIN
      CFWConnectorParameter.GET(Rec."Service Code",Rec.Code,Parameter);
      CFWConnectorParameter.VALIDATE(Value,Value);
      CFWConnectorParameter.MODIFY(TRUE);
    END;

    [External]
    PROCEDURE ConnectorSetFromInt@1100525003(Parameter@1100525001 : Text;ValueInt@1100525000 : Integer);
    VAR
      value@1100525003 : Text;
    BEGIN
      value := FORMAT(ValueInt,0,9);
      ConnectorParameterSet(Parameter,value);
    END;

    [External]
    PROCEDURE ConnectorParameterCheck@1100525004(Parameter@1100525001 : Text;CheckValue@1100525002 : Text) checked : Boolean;
    VAR
      CFWConnectorParameter@1100525000 : Record 11229371;
    BEGIN
      IF NOT CFWConnectorParameter.GET(Rec."Service Code",Rec.Code,Parameter)THEN
        EXIT(FALSE);
      IF CheckValue <> CFWConnectorParameter.Value THEN
        EXIT(FALSE);
      EXIT(TRUE);
    END;

    [External]
    PROCEDURE ServiceParameterGet@1100525012(Parameter@1100525001 : Text) Value : Text;
    VAR
      ConsumedWebServiceParameter@1100528300 : Record 11229363;
    BEGIN
      IF NOT ConsumedWebServiceParameter.GET(ConsumedWebServiceParameter.Type::Header,"Service Code",0,Parameter) THEN
        ERROR(Text002, Parameter,"Service Code");
      Value := ConsumedWebServiceParameter.Value;
    END;

    [External]
    PROCEDURE ServiceParameterGetAsInt@1100525011(Parameter@1100525001 : Text) ValueInt : Integer;
    VAR
      Value@1100525002 : Text;
    BEGIN
      Value := ServiceParameterGet(Parameter);
      EVALUATE(ValueInt,Value,9);
    END;

    [External]
    PROCEDURE ServiceParameterSet@1100525010(Parameter@1100525001 : Text;Value@1100525000 : Text);
    VAR
      ConsumedWebServiceParameter@1100528300 : Record 11229363;
    BEGIN
      ConsumedWebServiceParameter.GET(ConsumedWebServiceParameter.Type::Header,"Service Code",0,Parameter);
      ConsumedWebServiceParameter.VALIDATE(Value,Value);
      ConsumedWebServiceParameter.MODIFY(TRUE);
    END;

    [External]
    PROCEDURE ServcieSetFromInt@1100525009(Parameter@1100525001 : Text;ValueInt@1100525000 : Integer);
    VAR
      value@1100525003 : Text;
    BEGIN
      value := FORMAT(ValueInt,0,9);
      ServiceParameterSet(Parameter,value);
    END;

    [External]
    PROCEDURE ServiceParameterCheck@1100525008(Parameter@1100525001 : Text;CheckValue@1100525002 : Text) checked : Boolean;
    VAR
      ConsumedWebServiceParameter@1100528300 : Record 11229363;
    BEGIN
      IF NOT ConsumedWebServiceParameter.GET(ConsumedWebServiceParameter.Type::Header,"Service Code",0,Parameter)THEN
        EXIT(FALSE);
      IF CheckValue <> ConsumedWebServiceParameter.Value THEN
        EXIT(FALSE);
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE "---Locals---"@1100528305();
    BEGIN
    END;

    LOCAL PROCEDURE CreateInstream@1100528306(FieldNoIn@1100528300 : Integer;VAR IStreamInOut@1100528301 : InStream;VAR HasValueInOut@1100528302 : Boolean);
    BEGIN
      CASE FieldNoIn OF
        FIELDNO(Template): BEGIN
          HasValueInOut :=   Template.HASVALUE;
          CALCFIELDS(Template);
          Template.CREATEINSTREAM(IStreamInOut, TEXTENCODING::Windows);
        END;
      END;
    END;

    LOCAL PROCEDURE CreateOutStream@1100528308(FieldNoIn@1100528300 : Integer;OStreamInOut@1100528301 : OutStream);
    BEGIN
      CASE FieldNoIn OF
        FIELDNO(Template):BEGIN
          CLEAR(Template);
          Template.CREATEOUTSTREAM(OStreamInOut, TEXTENCODING::Windows);
        END;
      END;
    END;

    LOCAL PROCEDURE DocumentElementSet@1100528301();
    VAR
      CFWConnectorManagement@1100528300 : Codeunit 11229291;
    BEGIN
      CALCFIELDS("Table Name");
      IF ("Document Element" = '') THEN
        "Document Element" := CFWConnectorManagement.ConvertTextToXmlTagName("Table Name");
      IF "Document Element" = '' THEN
        "Document Element" := 'Default';
    END;

    [External]
    PROCEDURE DocumentElementGetXpath@1100528300() Xpath : Text;
    BEGIN
      IF "Document Element"= 'DOCUMENTELEMENT' THEN
        Xpath := ConnectorParameterGet('DOCUMENTELEMENT')
      ELSE
        Xpath := "Document Element";
    END;

    BEGIN
    END.
  }
}

