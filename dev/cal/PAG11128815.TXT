OBJECT Page 11128815 Copy NEN2767 Measurement
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=LTMP Szenario kopieren;
               ENU=Copy LTMP Scenario;
               NLD=NEN2767 conditiemeting kopi‰ren];
    PageType=StandardDialog;
    OnOpenPage=BEGIN
                 UpdateEnabled;
               END;

    OnQueryClosePage=BEGIN
                       CloseActionOK := CloseAction IN [ACTION::OK,ACTION::LookupOK];
                     END;

  }
  CONTROLS
  {
    { 1100528600;;Container;
                ContainerType=ContentArea }

    { 1100528601;1;Group  ;
                CaptionML=[DEU=Kopieren von;
                           ENU=Copy from;
                           NLD=Kopi‰ren van;
                           NOR=Kopier fra;
                           SVE=Kopiera fr†n];
                GroupType=Group }

    { 1100528605;2;Field  ;
                CaptionML=[DEU=Messdatum;
                           ENU=Measure Date;
                           NLD=Meetdatum];
                SourceExpr=FromMeasureDate;
                OnValidate=BEGIN
                             UpdateEnabled;
                           END;

                OnLookup=VAR
                           NEN2767LTMPHeader@1100528600 : Record 11128784;
                         BEGIN
                           NEN2767LTMPHeader.SETRANGE("Entry ID", EntryID);
                           IF PAGE.RUNMODAL(0, NEN2767LTMPHeader) = ACTION::LookupOK THEN
                             FromMeasureDate := NEN2767LTMPHeader."Measurement Date";
                         END;
                          }

    { 1100528603;1;Group  ;
                CaptionML=[DEU=Kopieren in;
                           ENU=Copy to;
                           NLD=Kopi‰ren naar;
                           NOR=Kopier til;
                           SVE=Kopiera till];
                GroupType=Group }

    { 1100528606;2;Field  ;
                CaptionML=[DEU=Messdatum;
                           ENU=Measure Date;
                           NLD=Meetdatum];
                SourceExpr=ToMeasureDate;
                OnValidate=BEGIN
                             UpdateEnabled;
                           END;
                            }

    { 1100528602;1;Group  ;
                CaptionML=[DEU=Optionen;
                           ENU=Options;
                           NLD=Opties;
                           NOR=Alternativer;
                           SVE=Alternativ];
                GroupType=Group }

    { 1100528604;2;Field  ;
                CaptionML=[DEU=Szenarien einbeziehen;
                           ENU=Include Scenarios;
                           NLD=Inclusief scenario's];
                SourceExpr=IncludeScenarios }

  }
  CODE
  {
    VAR
      EntryID@1100528607 : Integer;
      FromMeasureDate@1100528603 : Date;
      ToMeasureDate@1100528604 : Date;
      CloseActionOK@1100528602 : Boolean;
      Text001@1100528605 : TextConst 'DEU=Quelle und Ziel k”nnen nicht gleich sein;ENU=Source and Destination cannot be equal;NLD=Bron en doel kunnen niet gelijk zijn';
      Text002@1100528606 : TextConst 'DEU=Tragen Sie zuerst alle Felder ein;ENU=Please, fill all fields first;NLD=Vul eerst alle velden;NOR=Fyll ut alle felt f›rst;SVE=Fyll i alla f„lt f”rst';
      IncludeScenarios@1100528600 : Boolean;

    PROCEDURE SetDefaults@1210190001(IEntryID@1210190005 : Integer);
    VAR
      NEN2767LTMPHeader@1100528600 : Record 11128784;
    BEGIN
      EntryID := IEntryID;
      NEN2767LTMPHeader.GET(IEntryID);
      FromMeasureDate := NEN2767LTMPHeader."Measurement Date";
    END;

    LOCAL PROCEDURE CopyScenario@1100528402();
    VAR
      NEN2767LTMPHeader@1100528601 : Record 11128784;
      NEN2767Management@1100528600 : Codeunit 11012863;
    BEGIN
      IF (FromMeasureDate = 0D) OR (ToMeasureDate = 0D) THEN
        ERROR(Text002);
      IF FromMeasureDate = ToMeasureDate THEN
        ERROR(Text001);

      NEN2767LTMPHeader.GET(EntryID);
      NEN2767Management.CopyConditionMeasurement(NEN2767LTMPHeader, ToMeasureDate, IncludeScenarios);
    END;

    LOCAL PROCEDURE StdDialogConfirm@1100528400() : Boolean;
    BEGIN
      CurrPage.RUNMODAL;
      EXIT(CloseActionOK);
    END;

    LOCAL PROCEDURE StdDialogDoAction@1100528401();
    BEGIN
      CopyScenario;
    END;

    PROCEDURE StdDialogRunModal@1100528404();
    BEGIN
      IF StdDialogConfirm THEN
        StdDialogDoAction;
    END;

    PROCEDURE UpdateEnabled@1100528600();
    BEGIN
    END;

    BEGIN
    END.
  }
}

