OBJECT Codeunit 12057143 Process Import Header
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF510000;
  }
  PROPERTIES
  {
    TableNo=12013648;
    OnRun=VAR
            VendorIDMgt@1100285002 : Codeunit 12013667;
            ExPurchDocHead@1100285001 : Record 12013587;
            lcduVerifyDoc@1100285000 : Codeunit 12013594;
            ImportMgr@1100285003 : Codeunit 12013604;
            ExFlowSetup@1100285004 : Record 12013601;
          BEGIN
            ExFlowSetup.GET;

            IF "Imported by User" = '' THEN BEGIN
              "Imported by User" := USERID;
              "Imported at DateTime" := CURRENTDATETIME;
            END;

            IF ExFlowSetup."Set Company ID on OCR Import" AND ("Company-ID" = '') THEN
              "Company-ID" := ExFlowSetup."Company-ID";

            "Company-ID" := UPPERCASE("Company-ID");
            "Scan User ID" := UPPERCASE("Scan User ID");
            "Source Import Folder" := UPPERCASE("Source Import Folder");

            "Posting Date" := ImportMgr.TransformDate("Posting Date (Text)");
            "Due Date" := ImportMgr.TransformDate("Due Date (Text)");
            "Exflow Document Type" := ImportMgr.GetExFlowDocType(Credit);
            ImportMgr.TransformInteger("DueDays (Text)",DueDays);
            IF DueDays > 199 THEN
              DueDays := 0;

            ImportMgr.TransformNumber("Document Amount VAT (Text)","Document Amount VAT");
            ImportMgr.TransformNumber("Amount Inc. VAT (Text)","Document Amount Including VAT");

            IF Credit = '' THEN
              IF "Document Amount Including VAT" < 0 THEN
                "Exflow Document Type" := "Exflow Document Type"::"Credit Memo";

            VendorIDMgt.RemoveSpecChars("Vendor ID");
            VendorIDMgt.RemoveSpecChars("Vendor ID2");
            VendorIDMgt.RemoveSpecChars("Vendor ID3");
            VendorIDMgt.RemoveSpecChars("Vendor ID4");
            VendorIDMgt.RemoveSpecChars("Vendor ID5");
            "PO Matched Document" := "Order No." <> '';

            ImportMgr.TransformNumber("Misc Amount 1 (Text)","Misc Amount 1");
            ImportMgr.TransformNumber("Misc Amount 2 (Text)","Misc Amount 2");

            ImportMgr.FormatConversionHeader(Rec);

            ProcessImportLines(Rec);

            IF ("Image Buffer ID" = 0) AND (GlobalImportPath <> '') THEN BEGIN
              ExPurchDocHead.INIT;
              lcduVerifyDoc.UploadImage(ExPurchDocHead,GlobalImportPath,"Image File Name");
              IF ExPurchDocHead."Image Buffer ID" <> 0 THEN BEGIN
                "Image File Name" := ExPurchDocHead."Image File Name";
                "Image Buffer ID" := ExPurchDocHead."Image Buffer ID";
              END;
            END;
          END;

  }
  CODE
  {
    VAR
      GlobalImportPath@1100285000 : Text[250];

    PROCEDURE SetImpPath@1100285000(ImportPath@1100285000 : Text[250]);
    BEGIN
      GlobalImportPath := ImportPath;
    END;

    PROCEDURE ProcessImportLines@1100285023(VAR ExPurchImpHeader@1100285000 : Record 12013648);
    VAR
      ExPurchImpLine@1100285001 : Record 12013649;
      ExPurchImpLine2@1100285002 : Record 12013649;
      ImportMgr@1100285003 : Codeunit 12013604;
    BEGIN
      ExPurchImpLine2.RESET;
      ExPurchImpLine2.SETRANGE("Import Document No.",ExPurchImpHeader."Import Document No.");
      IF ExPurchImpLine2.FINDSET THEN
        REPEAT
          ExPurchImpLine := ExPurchImpLine2;

          ImportMgr.TransformNumber(ExPurchImpLine."Quantity (Text)",ExPurchImpLine.Quantity);
          ImportMgr.TransformNumber(ExPurchImpLine."Direct Unit Cost (Text)",ExPurchImpLine."Direct Unit Cost");
          ImportMgr.TransformNumber(ExPurchImpLine."Line Discount % (Text)",ExPurchImpLine."Line Discount %");
          ImportMgr.TransformNumber(ExPurchImpLine."LineDiscountAmt (Text)",ExPurchImpLine.LineDiscountAmt);
          ImportMgr.TransformNumber(ExPurchImpLine."Line Amount (Text)",ExPurchImpLine."Line Amount");

          IF NOT ExPurchImpHeader."PO Matched Document" THEN
            ExPurchImpHeader."PO Matched Document" := ExPurchImpLine."Order No." <> '';

          ImportMgr.FormatConversionLine(ExPurchImpHeader,ExPurchImpLine);

          IF ExPurchImpLine."Order No." = '' THEN
            ExPurchImpLine."Order No." := ExPurchImpHeader."Order No.";

          IF ExPurchImpLine."Job No." = '' THEN
            ExPurchImpLine."Job No." := ExPurchImpHeader."Job No.";
          ExPurchImpLine.MODIFY;
        UNTIL ExPurchImpLine2.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

