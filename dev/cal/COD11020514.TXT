OBJECT Codeunit 11020514 IMOS General Data XML Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11020534;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      IMOSSetup@1000000001 : Record 11020549;
      XMLProtocolRec@1100485000 : Record 11020547;
      IMOSFileProtocolMgt@1100485004 : Codeunit 11020512;
      OutboundDocMgt@1000000002 : Codeunit 11020511;
      Window@1100485001 : Dialog;
      XMLDOMDocument@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      text001@1000000006 : TextConst 'DEU=XML-Belege erstellen\Fortschritt @1@@@@@@@@@@@@@@;ENU=Create XML Documents\Progress @1@@@@@@@@@@@@@@;NLD=XML Documenten aanmaken\Voortgang @1@@@@@@@@@@@@@@;NOR=Opprette XML-dokument\-Fremdrift @1@@@@@@@@@@@@@@;SVE=Skapa XML-dokument\-f”rlopp @1@@@@@@@@@@@@@@';
      RecCount@1100485002 : Integer;
      RecNo@1100485003 : Integer;
      XMLDOMManagement4PS@1100525000 : Codeunit 11020220;

    PROCEDURE ItemSend@1000000029(VAR ItemRec@1000000000 : Record 27);
    VAR
      XMLDOMNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IMOSSetup.GET;
      IMOSSetup.TESTFIELD("Send iMOS Artikel");

      XMLProtocolRec.SETRANGE("Agreement Code",IMOSSetup."Send iMOS Artikel");
      OpenInfoWindow(ItemRec.COUNT * XMLProtocolRec.COUNT);
      IF XMLProtocolRec.FIND('-') THEN BEGIN
        REPEAT
          OutboundDocMgt.InitOutboundXMLDocument(XMLDOMDocument,XMLProtocolRec,XMLDOMNode);
          IF ItemRec.FIND('-') THEN
            REPEAT
              UpdateInfoWindow;
              ItemCreateXML(XMLDOMNode,ItemRec);
            UNTIL ItemRec.NEXT = 0;

          IMOSFileProtocolMgt.SendXML(XMLProtocolRec, XMLDOMDocument, '');

        UNTIL XMLProtocolRec.NEXT = 0;
      END;

      CloseInfoWindow;
    END;

    LOCAL PROCEDURE ItemCreateXML@1000000015(VAR XMLDOMNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";VAR ItemRec@1000000001 : Record 27);
    VAR
      RetNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      XMLDOMManagement4PS.AddElement(XMLDOMNode,'article','', XMLProtocolRec."XML Document Namespace", RetNode);
      XMLDOMManagement4PS.AddElement(RetNode,'customdata','', XMLProtocolRec."XML Document Namespace", RetNode);
      XMLDOMManagement4PS.AddAttribute(RetNode,'description',ItemRec.Description);
      XMLDOMManagement4PS.AddAttribute(RetNode,'erp_article_id',ItemRec."No.");
    END;

    PROCEDURE EngineerSend@1100485004(VAR EmployeeRec@1000000000 : Record 5200);
    VAR
      XMLDOMNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IMOSSetup.GET;
      IMOSSetup.TESTFIELD("Send iMOS Engineer");

      XMLProtocolRec.SETRANGE("Agreement Code",IMOSSetup."Send iMOS Engineer");
      EmployeeRec.SETFILTER("Imos Login",'<>%1','');
      EmployeeRec.SETRANGE("Imos Type",EmployeeRec."Imos Type"::Engineer);
      OpenInfoWindow(EmployeeRec.COUNT * XMLProtocolRec.COUNT);
      IF XMLProtocolRec.FIND('-') THEN
        REPEAT
          OutboundDocMgt.InitOutboundXMLDocument(XMLDOMDocument,XMLProtocolRec,XMLDOMNode);
          IF EmployeeRec.FIND('-') THEN BEGIN
            REPEAT
              UpdateInfoWindow;
              EngineerCreateXML(XMLDOMNode,EmployeeRec);
            UNTIL EmployeeRec.NEXT = 0;
          END;
          IMOSFileProtocolMgt.SendXML(XMLProtocolRec,XMLDOMDocument,'');
        UNTIL XMLProtocolRec.NEXT = 0;
      CloseInfoWindow;
    END;

    LOCAL PROCEDURE EngineerCreateXML@1100485000(VAR XMLDOMNode@1000000006 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";VAR EmployeeRec@1000000001 : Record 5200);
    VAR
      RetNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      CurrNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      XMLDOMManagement4PS.AddElement(XMLDOMNode,'engineer','',XMLProtocolRec."XML Document Namespace", CurrNode);

      XMLDOMManagement4PS.AddElement(CurrNode,'plannerunit_ref','',XMLProtocolRec."XML Document Namespace",RetNode);
      XMLDOMManagement4PS.AddElement(RetNode,'customdata','',XMLProtocolRec."XML Document Namespace",RetNode);
      XMLDOMManagement4PS.AddAttribute(RetNode,'erp_rayonnummer',EmployeeRec."Imos Planner District Code");

      XMLDOMManagement4PS.AddElement(CurrNode,'customdata','',XMLProtocolRec."XML Document Namespace",RetNode);
      XMLDOMManagement4PS.AddAttribute(RetNode,'erp_engineer_id',EmployeeRec."No.");
      XMLDOMManagement4PS.AddAttribute(RetNode,'naam',EmployeeRec."Last Name");
      XMLDOMManagement4PS.AddAttribute(RetNode,'wachtwoord',EmployeeRec."Imos Password");
    END;

    PROCEDURE LocationSend@1100485008(VAR LocationRec@1000000008 : Record 11012554);
    VAR
      XMLDOMNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IMOSSetup.GET;
      IMOSSetup.TESTFIELD("Send iMOS Location");

      XMLProtocolRec.SETRANGE("Agreement Code",IMOSSetup."Send iMOS Location");
      OpenInfoWindow(LocationRec.COUNT * XMLProtocolRec.COUNT);
      IF XMLProtocolRec.FIND('-') THEN BEGIN
        REPEAT
          OutboundDocMgt.InitOutboundXMLDocument(XMLDOMDocument,XMLProtocolRec,XMLDOMNode);
          IF LocationRec.FIND('-') THEN
            REPEAT
              UpdateInfoWindow;
              LocationCreateXML(XMLDOMNode,LocationRec);
            UNTIL LocationRec.NEXT=0;
          IMOSFileProtocolMgt.SendXML(XMLProtocolRec,XMLDOMDocument,'');
        UNTIL XMLProtocolRec.NEXT = 0;
      END;
      CloseInfoWindow;
    END;

    LOCAL PROCEDURE LocationCreateXML@1100485007(VAR XMLDOMNode@1000000006 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";LocationRec@1000000001 : Record 11012554);
    VAR
      RetNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      CurrNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      plantinventoryrec@1000000000 : Record 11012555;
      lItemRec@1100485001 : Record 27;
    BEGIN
      XMLDOMManagement4PS.AddElement(XMLDOMNode,'location','',XMLProtocolRec."XML Document Namespace", CurrNode);

      XMLDOMManagement4PS.AddElement(CurrNode,'customdata','',XMLProtocolRec."XML Document Namespace",RetNode);
      XMLDOMManagement4PS.AddAttribute(RetNode,'locationcode',LocationRec.Code);
      XMLDOMManagement4PS.AddAttribute(RetNode,'adres',LocationRec.Address);
      XMLDOMManagement4PS.AddAttribute(RetNode,'postcode',LocationRec."Post Code");
      XMLDOMManagement4PS.AddAttribute(RetNode,'plaatsnaam',LocationRec.City);

      plantinventoryrec.SETRANGE(Removed,FALSE);
      plantinventoryrec.SETRANGE(Location,LocationRec.Code);
      plantinventoryrec.SETFILTER("Plant Type", '<>%1', '');
      plantinventoryrec.SETFILTER(Quantity, '>%1', 0);

      IF plantinventoryrec.FIND('-') THEN
        REPEAT
          plantinventoryrec.CALCFIELDS("Plant Type Description", "Plant No. Description");
          IF plantinventoryrec."Plant No." <> '0' THEN BEGIN

            XMLDOMManagement4PS.AddElement(CurrNode,'imosobject','',XMLProtocolRec."XML Document Namespace",RetNode);
            XMLDOMManagement4PS.AddElement(RetNode,'customdata','',XMLProtocolRec."XML Document Namespace",RetNode);
            XMLDOMManagement4PS.AddAttribute(RetNode,'erp_installatiecode',((plantinventoryrec."Plant Type") + plantinventoryrec."Plant No."));
            XMLDOMManagement4PS.AddAttribute(RetNode,'omschrijving',plantinventoryrec."Plant No. Description");

          END;

          IF plantinventoryrec."Plant No." = '0' THEN BEGIN

            XMLDOMManagement4PS.AddElement(CurrNode,'imosobject','',XMLProtocolRec."XML Document Namespace",RetNode);
            XMLDOMManagement4PS.AddElement(RetNode,'customdata','',XMLProtocolRec."XML Document Namespace",RetNode);
            XMLDOMManagement4PS.AddAttribute(RetNode,'erp_installatiecode',plantinventoryrec."Plant Type");
            XMLDOMManagement4PS.AddAttribute(RetNode,'omschrijving',plantinventoryrec."Plant Type Description");

          END;
        UNTIL plantinventoryrec.NEXT=0;


      IF IMOSSetup."Dummy Item" <> '' THEN BEGIN
        IF lItemRec.GET(IMOSSetup."Dummy Item") THEN;
        XMLDOMManagement4PS.AddElement(CurrNode,'imosobject','',XMLProtocolRec."XML Document Namespace",RetNode);
        XMLDOMManagement4PS.AddElement(RetNode,'customdata','',XMLProtocolRec."XML Document Namespace",RetNode);
        XMLDOMManagement4PS.AddAttribute(RetNode,'erp_installatiecode',IMOSSetup."Dummy Item");
        XMLDOMManagement4PS.AddAttribute(RetNode,'omschrijving',lItemRec.Description);
      END;
    END;

    PROCEDURE PlannerSend@1100485006(VAR EmployeeRec@1000000000 : Record 5200);
    VAR
      XMLDOMNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IMOSSetup.GET;
      IMOSSetup.TESTFIELD("Send iMOS Planner");

      XMLProtocolRec.SETRANGE("Agreement Code",IMOSSetup."Send iMOS Planner");

      EmployeeRec.SETFILTER("Imos Login",'<>%1','');
      EmployeeRec.SETRANGE("Imos Type",EmployeeRec."Imos Type"::Planner);

      OpenInfoWindow(EmployeeRec.COUNT * XMLProtocolRec.COUNT);
      IF XMLProtocolRec.FIND('-') THEN BEGIN
        REPEAT
          OutboundDocMgt.InitOutboundXMLDocument(XMLDOMDocument,XMLProtocolRec,XMLDOMNode);
          IF EmployeeRec.FIND('-') THEN
            REPEAT
              UpdateInfoWindow;
              PlannerCreateXML(XMLDOMNode,EmployeeRec);
            UNTIL EmployeeRec.NEXT = 0;
          IMOSFileProtocolMgt.SendXML(XMLProtocolRec,XMLDOMDocument,'');
        UNTIL XMLProtocolRec.NEXT = 0;
      END;
      CloseInfoWindow;
    END;

    LOCAL PROCEDURE PlannerCreateXML@1100485005(VAR XMLDOMNode@1000000006 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";VAR EmployeeRec@1000000001 : Record 5200);
    VAR
      PlannerAccessNode@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      PlannerUnitNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      CustomDataNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      CurrNode@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      XMLDOMManagement4PS.AddElement(XMLDOMNode,'planner','', XMLProtocolRec."XML Document Namespace", CurrNode);

      XMLDOMManagement4PS.AddAttribute(CurrNode,'login_name',EmployeeRec."Imos Login");
      XMLDOMManagement4PS.AddAttribute(CurrNode,'full_name',EmployeeRec.FullName);
      XMLDOMManagement4PS.AddAttribute(CurrNode,'password',EmployeeRec."Imos Password");

      XMLDOMManagement4PS.AddElement(CurrNode,'planneraccess','',XMLProtocolRec."XML Document Namespace",PlannerAccessNode);
      XMLDOMManagement4PS.AddAttribute(PlannerAccessNode,'readonly','false');
      XMLDOMManagement4PS.AddAttribute(PlannerAccessNode,'role','planner');

      XMLDOMManagement4PS.AddElement(PlannerAccessNode,'plannerunit_ref','',XMLProtocolRec."XML Document Namespace",PlannerUnitNode);
      XMLDOMManagement4PS.AddElement(PlannerUnitNode,'customdata','',XMLProtocolRec."XML Document Namespace",CustomDataNode);
      XMLDOMManagement4PS.AddAttribute(CustomDataNode,'erp_rayonnummer',EmployeeRec."Imos Planner District Code");

      XMLDOMManagement4PS.AddElement(CurrNode,'customdata','',XMLProtocolRec."XML Document Namespace",CustomDataNode);
    END;

    PROCEDURE PlannerUnitSend@1100485010(VAR PlannerUnit@1000000000 : Record 11020535);
    VAR
      XMLDOMNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IMOSSetup.GET;
      IMOSSetup.TESTFIELD("Send iMOS PlannerUnit");

      XMLProtocolRec.SETRANGE("Agreement Code",IMOSSetup."Send iMOS PlannerUnit");

      OpenInfoWindow(PlannerUnit.COUNT * XMLProtocolRec.COUNT);
      IF XMLProtocolRec.FIND('-') THEN
        REPEAT
          OutboundDocMgt.InitOutboundXMLDocument(XMLDOMDocument,XMLProtocolRec,XMLDOMNode);
          IF PlannerUnit.FIND('-') THEN BEGIN
            REPEAT
              UpdateInfoWindow;
              PlannerUnitCreateXML(XMLDOMNode,PlannerUnit);
            UNTIL PlannerUnit.NEXT = 0;
          END;
          IMOSFileProtocolMgt.SendXML(XMLProtocolRec,XMLDOMDocument,'');
        UNTIL XMLProtocolRec.NEXT = 0;
      CloseInfoWindow;
    END;

    LOCAL PROCEDURE PlannerUnitCreateXML@1100485009(VAR XMLDOMNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";VAR PlannerUnit@1000000001 : Record 11020535);
    VAR
      RetNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      CurrNode@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      XMLDOMManagement4PS.AddElement(XMLDOMNode,'plannerunit','',XMLProtocolRec."XML Document Namespace", CurrNode);

      XMLDOMManagement4PS.AddElement(CurrNode,'customdata','',XMLProtocolRec."XML Document Namespace",RetNode);
      XMLDOMManagement4PS.AddAttribute(RetNode,'erp_rayonnummer',PlannerUnit.Code);
      XMLDOMManagement4PS.AddAttribute(RetNode,'omschrijving',PlannerUnit.Description);
    END;

    PROCEDURE CarSend@1100485012(VAR Car@1000000008 : Record 14);
    VAR
      XMLDOMNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IMOSSetup.GET;
      IMOSSetup.TESTFIELD("Send iMOS Cars");

      XMLProtocolRec.SETRANGE("Agreement Code",IMOSSetup."Send iMOS Cars");

      Car.SETRANGE("Service Car",TRUE);

      OpenInfoWindow(Car.COUNT * XMLProtocolRec.COUNT);
      IF XMLProtocolRec.FIND('-') THEN BEGIN
        REPEAT
          OutboundDocMgt.InitOutboundXMLDocument(XMLDOMDocument,XMLProtocolRec,XMLDOMNode);
          IF Car.FIND('-') THEN
            REPEAT
              UpdateInfoWindow;
              CarCreateXML(XMLDOMNode,Car);
            UNTIL Car.NEXT=0;
          IMOSFileProtocolMgt.SendXML(XMLProtocolRec,XMLDOMDocument,'');
        UNTIL XMLProtocolRec.NEXT = 0;
      END;
      CloseInfoWindow;
    END;

    LOCAL PROCEDURE CarCreateXML@1100485011(VAR XMLDOMNode@1000000006 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";Car@1000000007 : Record 14);
    VAR
      CustomDataNode@1000000001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      CurrNode@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      XMLDOMManagement4PS.AddElement(XMLDOMNode,'car','',XMLProtocolRec."XML Document Namespace",CurrNode);
      XMLDOMManagement4PS.AddAttribute(CurrNode,'licence_plate',Car.Code);
      XMLDOMManagement4PS.AddAttribute(CurrNode,'description',Car.Name);

      XMLDOMManagement4PS.AddElement(CurrNode,'customdata','',XMLProtocolRec."XML Document Namespace",CustomDataNode);
    END;

    PROCEDURE EngineerCarSend@1100485014(VAR EmployeeRec@1000000000 : Record 5200);
    VAR
      XMLDOMNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IMOSSetup.GET;
      IMOSSetup.TESTFIELD("Send iMOS EngineerCars");

      XMLProtocolRec.SETRANGE("Agreement Code",IMOSSetup."Send iMOS EngineerCars");

      EmployeeRec.SETFILTER("Imos Car",'<>%1','');
      EmployeeRec.SETRANGE("Imos Type",EmployeeRec."Imos Type"::Engineer);

      OpenInfoWindow(EmployeeRec.COUNT * XMLProtocolRec.COUNT);
      IF XMLProtocolRec.FIND('-') THEN BEGIN
        REPEAT
          OutboundDocMgt.InitOutboundXMLDocument(XMLDOMDocument,XMLProtocolRec,XMLDOMNode);
          IF EmployeeRec.FIND('-') THEN
            REPEAT
              UpdateInfoWindow;
              EngineerCarCreateXML(XMLDOMNode,EmployeeRec);
            UNTIL EmployeeRec.NEXT = 0;
          IMOSFileProtocolMgt.SendXML(XMLProtocolRec,XMLDOMDocument,'');
        UNTIL XMLProtocolRec.NEXT = 0;
      END;

      CloseInfoWindow;
    END;

    LOCAL PROCEDURE EngineerCarCreateXML@1100485013(VAR XMLDOMNode@1000000006 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";VAR EmployeeRec@1100485000 : Record 5200);
    VAR
      CurrNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      RetNode@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      XMLDOMManagement4PS.AddElement(XMLDOMNode,'engineer_ref','',XMLProtocolRec."XML Document Namespace", CurrNode);
      XMLDOMManagement4PS.AddElement(CurrNode,'customdata','',XMLProtocolRec."XML Document Namespace", RetNode);
      XMLDOMManagement4PS.AddAttribute(RetNode,'erp_engineer_id',EmployeeRec."No.");

      XMLDOMManagement4PS.AddElement(CurrNode,'car_ref','',XMLProtocolRec."XML Document Namespace",RetNode);
      XMLDOMManagement4PS.AddAttribute(RetNode,'licence_plate',EmployeeRec."Imos Car");
    END;

    PROCEDURE CustomerSend@1100485016(VAR CustomerRec@1000000008 : Record 18);
    VAR
      XMLDOMNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IMOSSetup.GET;
      IMOSSetup.TESTFIELD("Send iMOS Location");

      XMLProtocolRec.SETRANGE("Agreement Code",IMOSSetup."Send iMOS Location");

      OpenInfoWindow(CustomerRec.COUNT * XMLProtocolRec.COUNT);
      IF XMLProtocolRec.FIND('-') THEN BEGIN
        REPEAT
          OutboundDocMgt.InitOutboundXMLDocument(XMLDOMDocument,XMLProtocolRec,XMLDOMNode);
          UpdateInfoWindow;
          CustomerCreateXML(XMLDOMNode,CustomerRec);
          IMOSFileProtocolMgt.SendXML(XMLProtocolRec,XMLDOMDocument,'');
        UNTIL XMLProtocolRec.NEXT = 0;
      END;
      CloseInfoWindow;
    END;

    LOCAL PROCEDURE CustomerCreateXML@1100485015(VAR XMLDOMNode@1000000006 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";CustomerRec@1000000001 : Record 18);
    VAR
      CurrNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      RetNode@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      XMLDOMManagement4PS.AddElement(XMLDOMNode,'location','',XMLProtocolRec."XML Document Namespace", CurrNode);

      XMLDOMManagement4PS.AddElement(CurrNode,'customdata','',XMLProtocolRec."XML Document Namespace",RetNode);
      XMLDOMManagement4PS.AddAttribute(RetNode,'locationcode',CustomerRec."No.");
      XMLDOMManagement4PS.AddAttribute(RetNode,'adres',CustomerRec.Address);
      XMLDOMManagement4PS.AddAttribute(RetNode,'postcode',CustomerRec."Post Code");
      XMLDOMManagement4PS.AddAttribute(RetNode,'plaatsnaam',CustomerRec.City);
    END;

    PROCEDURE OpenInfoWindow@1100485001(Lines@1100485000 : Integer);
    BEGIN
      IF GUIALLOWED THEN BEGIN
        Window.OPEN(text001);
        RecCount := Lines;
        RecNo := 0;
      END;
    END;

    PROCEDURE UpdateInfoWindow@1100485002();
    BEGIN
      IF GUIALLOWED THEN BEGIN
        RecNo += 1;
        Window.UPDATE(1,ROUND(RecNo/RecCount*10000,1));
      END;
    END;

    PROCEDURE CloseInfoWindow@1100485003();
    BEGIN
      IF GUIALLOWED THEN
        Window.CLOSE;
    END;

    BEGIN
    END.
  }
}

