OBJECT Table 11012884 Capacity Need Detail
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               CapacityNeedDetail@1100528700 : Record 11012884;
             BEGIN
               IF CapacityNeedDetail.FINDLAST THEN
                 "Entry No." := CapacityNeedDetail."Entry No." + 1
               ELSE
                 "Entry No." := 1;
             END;

    CaptionML=ENU=Capacity Need Detail;
    LookupPageID=Page11020390;
    DrillDownPageID=Page11020390;
  }
  FIELDS
  {
    { 5   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              NOR=L›penr.;
                                                              SVE=L”pnr] }
    { 10  ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=ENU=Occupation,Workload;
                                                   OptionString=Occupation,Workload }
    { 20  ;   ;Source Code         ;Code20        ;TableRelation=IF (Type=CONST(Occupation)) Employee
                                                                 ELSE IF (Type=CONST(Workload),
                                                                          Workload Type=CONST(ServiceContract)) Service-Contract
                                                                          ELSE IF (Type=CONST(Workload),
                                                                                   Workload Type=CONST(TryoutQuote)) "Try-out Quote";
                                                   CaptionML=[ENU=Source Code;
                                                              NOR=Kildespor;
                                                              SVE=Ursprungskod] }
    { 30  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Global dimensjon 1 kode;
                                                              SVE=Global dimension 1 kod];
                                                   CaptionClass='1,1,1' }
    { 40  ;   ;Territory Code      ;Code10        ;TableRelation=Territory;
                                                   CaptionML=[ENU=Territory Code;
                                                              NOR=Distriktskode;
                                                              SVE=Distriktskod] }
    { 50  ;   ;Order Type          ;Code10        ;CaptionML=[ENU=Order Type;
                                                              NOR=Ordretype;
                                                              SVE=Ordertyp] }
    { 60  ;   ;Discipline Code     ;Code10        ;TableRelation=Discipline;
                                                   CaptionML=[ENU=Discipline Code;
                                                              NOR=Disiplinkode;
                                                              SVE=Disciplinkod] }
    { 70  ;   ;Trade Speciality Code;Code10       ;TableRelation="Trade Speciality".Code WHERE (Discipline=FIELD(Discipline Code));
                                                   CaptionML=[ENU=Trade Speciality Code;
                                                              NOR=SNI-Nummerkode;
                                                              SVE=SNI-nummerkod] }
    { 80  ;   ;Date                ;Date          ;CaptionML=[ENU=Date;
                                                              NOR=Dato;
                                                              SVE=Datum] }
    { 90  ;   ;Hours               ;Decimal       ;CaptionML=[ENU=Hours;
                                                              NOR="Timer ";
                                                              SVE=Timmar] }
    { 100 ;   ;Workload Type       ;Option        ;CaptionML=ENU=Workload Type;
                                                   OptionCaptionML=[ENU=Service Contract,Try-out Qoute;
                                                                    NOR=Servicekontrakt,Tilbudsforesp›rsel;
                                                                    SVE=Servicekontrakt,Anbudsf”rfr†gan];
                                                   OptionString=ServiceContract,TryoutQuote }
    { 110 ;   ;Leading             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Try-out Quote".Leading WHERE (Code=FIELD(Source Code)));
                                                   CaptionML=[ENU=Leading;
                                                              NOR=Ledende;
                                                              SVE=Ledande];
                                                   Editable=No }
    { 120 ;   ;Try-out Quote Status;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Try-out Quote".Status WHERE (Code=FIELD(Source Code)));
                                                   CaptionML=ENU=Try-out Quote Status;
                                                   Editable=No }
    { 130 ;   ;Scoring Percentage  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Try-out Quote"."Scoring Percentage" WHERE (Code=FIELD(Source Code)));
                                                   CaptionML=[ENU=Scoring Percentage;
                                                              SVE=Sannolikhet %];
                                                   Editable=No }
    { 140 ;   ;Service Contract Status;Option     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Service-Contract.Status WHERE (No.=FIELD(Source Code)));
                                                   CaptionML=[ENU=Service Contract Status;
                                                              SVE=Servicekontraktsstatus];
                                                   OptionCaptionML=[ENU=Applied,Offered,Order,Invoicing Allowed,Expired,Closed;
                                                                    SVE=Till„mpad,Anbudsgiven,Order,Fakturering till†ten,Utg†ngen,St„ngd];
                                                   OptionString=Applied,Offered,Order,Invoicing Allowed,Expired,Closed;
                                                   Editable=No }
    { 150 ;   ;Try-out Quote Description;Text50   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Try-out Quote".Description WHERE (Code=FIELD(Source Code)));
                                                   CaptionML=[ENU=Try-out Quote Description;
                                                              SVE=Beskrivning av anbudsf”rfr†gan];
                                                   Editable=No }
    { 151 ;   ;Try-out Quote Description 2;Text50 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Try-out Quote"."Description 2" WHERE (Code=FIELD(Source Code)));
                                                   CaptionML=ENU=Try-out Quote Description 2;
                                                   Editable=No }
    { 160 ;   ;Employee Name       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Source Code)));
                                                   CaptionML=[ENU=Employee Name;
                                                              SVE=Namn p† anst„lld];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Type,Source Code,Global Dimension 1 Code,Territory Code,Order Type,Discipline Code,Trade Speciality Code,Date,Workload Type;
                                                   SumIndexFields=Hours }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11012884) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11012884');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Capacity Need Detail", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    PROCEDURE ShowEmployee@1100529600();
    VAR
      Employee@1100529600 : Record 5200;
    BEGIN
      TESTFIELD(Type, Type::Occupation);
      TESTFIELD("Source Code");
      Employee.GET("Source Code");
      PAGE.RUN(PAGE::"Employee Card", Employee);
    END;

    PROCEDURE ShowEmployeeOccupationPrognosis@1100529601();
    VAR
      Employee@1100529600 : Record 5200;
      OccupationEmployee@1100529601 : Page 11020697;
    BEGIN
      TESTFIELD(Type, Type::Occupation);
      TESTFIELD("Source Code");
      Employee.GET("Source Code");
      OccupationEmployee.SetOccupationFilter(0, "Source Code");
      OccupationEmployee.RUN;
    END;

    PROCEDURE ShowTryOutQuote@1100529602();
    VAR
      TryOutQuote@1100529600 : Record 11012758;
    BEGIN
      TESTFIELD(Type, Type::Workload);
      TESTFIELD("Workload Type", "Workload Type"::TryoutQuote);
      TESTFIELD("Source Code");
      TryOutQuote.GET("Source Code");
      PAGE.RUN(PAGE::"Try-out Quote", TryOutQuote);
    END;

    PROCEDURE ShowTryOutQuoteCapacityNeed@1100529604();
    VAR
      TryOutQuote@1100529600 : Record 11012758;
    BEGIN
      TESTFIELD(Type, Type::Workload);
      TESTFIELD("Workload Type", "Workload Type"::TryoutQuote);
      TESTFIELD("Source Code");
      TryOutQuote.GET("Source Code");
      PAGE.RUN(PAGE::"Cap. Need Try-out Quote Matrix", TryOutQuote);
    END;

    BEGIN
    END.
  }
}

