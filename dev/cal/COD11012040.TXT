OBJECT Codeunit 11012040 Multi Company Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      FieldRec@1210190000 : Record 2000000041;
      RecRef@1210190002 : RecordRef;
      FldRef@1210190001 : FieldRef;
      ArrLen@1210190004 : Integer;
      ArrNo@1210190005 : Integer;

    [External]
    PROCEDURE GLAccCalculateDecimalsMC@1210190000(VAR IGLAccRec@1210190000 : Record 15;VAR ICompRec@1210190001 : Record 2000000006;VAR IFieldNoArray@1210190006 : ARRAY [20] OF Integer;VAR OAmountArray@1210190008 : ARRAY [20] OF Decimal;VAR ONotAllZeroBln@1210190003 : Boolean);
    VAR
      lvGLAccRec@1210190002 : Record 15;
      lvCompRec@1210190005 : Record 2000000006;
      lvAmount@1210190004 : Decimal;
    BEGIN
      {
      With this function the decimal fields of the 'G/L Account' table can be calculated on multi company level.
      IN:
       - Fields and filters on 'G/L Account' table, most important is that the Account No. ("No.") is filled
         Other fields/flowfilters used for 'CALCFIELDS' are f.i.:
         - Totaling
         - Cost Centre Filter ("Global Dimension 1 Filter")
         - Cost Object Filter ("Global Dimension 2 Filter")
         - Date Filter
         - Business Unit Filter
         - Budget Filter
       - Filters on the Company table (ICompRec)
       - Array with the field nos. of the decimal fields that must be calculated
      OUT:
       - Array with the calculated amounts (corresponding with the array with the field nos.)
       - Indicator that at least one amount is unequal zero in at least one company
      }

      WITH lvGLAccRec DO BEGIN
        ArrLen := ARRAYLEN(IFieldNoArray);
        CLEAR(OAmountArray);
        ONotAllZeroBln := FALSE;

        IF NOT GET(IGLAccRec."No.") THEN
          EXIT;
        IF "Account Type" IN ["Account Type"::Heading, "Account Type"::"Begin-Total"] THEN
          EXIT;

        COPY(IGLAccRec);
        lvCompRec.COPY(ICompRec);

        IF NOT lvCompRec.FIND('-') THEN
          EXIT;
        REPEAT
          CHANGECOMPANY(lvCompRec.Name);
          IF GET(IGLAccRec."No.") THEN BEGIN
            RecRef.GETTABLE(lvGLAccRec);
            ArrNo := 0;
            REPEAT
              ArrNo := ArrNo + 1;
              IF (IFieldNoArray[ArrNo] <> 0) THEN BEGIN
                FldRef := RecRef.FIELD(IFieldNoArray[ArrNo]);
                IF FieldRec.GET(DATABASE::"G/L Account", IFieldNoArray[ArrNo]) THEN BEGIN
                  IF (FieldRec.Type = FieldRec.Type::Decimal) THEN BEGIN
                    IF (FieldRec.Class = FieldRec.Class::FlowField) THEN
                      FldRef.CALCFIELD;
                    lvAmount := FldRef.VALUE;
                    OAmountArray[ArrNo] := OAmountArray[ArrNo] + lvAmount;
                    IF (NOT ONotAllZeroBln) AND (lvAmount <> 0) THEN
                      ONotAllZeroBln := TRUE;
                  END;
                END;
              END;
            UNTIL (ArrNo >= ArrLen) OR (IFieldNoArray[ArrNo] = 0);
          END;
        UNTIL lvCompRec.NEXT = 0;
      END;
    END;

    BEGIN
    {
      Functions for Multi Company handling.
      This codeunit is made for Report '11012119' but can also be used in other (new) components.
    }
    END.
  }
}

