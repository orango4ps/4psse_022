OBJECT Report 11020511 Create Purch.Order Trans. Ride
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Eink.-Bestell. Transp.-Fahrt erstellen;
               ENU=Create Purchase Order Transport Ride;
               NLD=Inkooporder transportrit aanmaken;
               NOR=Opprette Innkjõpsordre, Transporttur;
               SVE=Skapa inkîpsorder, transportkîrning];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   PlantSetupRec.GET;
                   PlantSetupRec.TESTFIELD("Account Transport Cost");
                   //PlantSetupRec.TESTFIELD("Default Cost Object Transport");  //22057.o

                   CreatedPurchOrderNo := '';
                   MaxLenDescr1 := MAXSTRLEN(PurchOrderLineRec.Description);
                   MaxLenDescr2 := MAXSTRLEN(PurchOrderLineRec."Description 2");
                 END;

    OnPreReport=VAR
                  lvShippingAgentRec@1100485000 : Record 291;
                  lvFirstVendNo@1100485001 : Code[20];
                BEGIN
                  lvShippingAgentRec.COPY("Shipping Agent");
                  lvShippingAgentRec.SETCURRENTKEY("Vendor No.");
                  IF lvShippingAgentRec.FIND('-') THEN BEGIN
                    lvFirstVendNo := lvShippingAgentRec."Vendor No.";
                    lvShippingAgentRec.FIND('+');
                    IF lvShippingAgentRec."Vendor No." <> lvFirstVendNo THEN
                      ERROR(Text000);
                  END;

                  PurchOrderRec."No." := '';

                  IF gOnExistingPurchOrder THEN BEGIN
                    WITH PurchOrderRec DO BEGIN
                      "No." := gPurchOrderNo;
                      TESTFIELD("No.");
                      GET(PurchOrderRec."Document Type"::Order, gPurchOrderNo);
                      TESTFIELD(Status, PurchOrderRec.Status::Open);
                      TESTFIELD("Buy-from Vendor No.");
                    END;
                    WITH PurchOrderLineRec DO BEGIN
                      RESET;
                      SETRANGE("Document Type", "Document Type"::Order);
                      SETRANGE("Document No.", PurchOrderRec."No.");
                      IF FIND('+') THEN
                        NextLineNo := PurchOrderLineRec."Line No." + 10000
                      ELSE
                        NextLineNo := 10000;
                    END;
                  END;

                  TransDateFilter := "Shipping Agent".GETFILTER("Transport Date Filter");
                  MeansOfTransFilter := "Shipping Agent".GETFILTER("Means of Transport Filter");
                END;

  }
  DATASET
  {
    { 9736;    ;DataItem;                    ;
               DataItemTable=Table291;
               DataItemTableView=SORTING(Vendor No.)
                                 WHERE(Code=FILTER(<>''),
                                       External=CONST(Yes));
               OnAfterGetRecord=BEGIN
                                  TESTFIELD(External, TRUE);
                                  TESTFIELD("Vendor No.");
                                  IF gOnExistingPurchOrder THEN
                                    PurchOrderRec.TESTFIELD("Buy-from Vendor No.", "Vendor No.");
                                END;

               ReqFilterFields=Code,Vendor No.,Transport Date Filter,Means of Transport Filter }

    { 9220;1   ;DataItem;                    ;
               DataItemTable=Table11020517;
               DataItemTableView=SORTING(No.)
                                 WHERE(External Transport=CONST(Yes),
                                       Purchase Order=FILTER(''));
               OnPreDataItem=BEGIN
                               FILTERGROUP(9);
                               IF TransDateFilter <> '' THEN
                                 SETFILTER(Date, TransDateFilter);
                               IF MeansOfTransFilter <> '' THEN
                                 SETFILTER("Means of Transport", MeansOfTransFilter);
                               FILTERGROUP(0);
                             END;

               OnAfterGetRecord=VAR
                                  lvRideLineRec@1100525000 : Record 11020518;
                                  lvTransOrderRec@1100525001 : Record 11020505;
                                  lvPostedTransOrderRec@1100525002 : Record 11020507;
                                BEGIN
                                  TESTFIELD("Shipping Agent");
                                  TESTFIELD("Means of Transport");
                                  TESTFIELD(Date);
                                  TESTFIELD(Quantity);
                                  TESTFIELD("Purchase Price");

                                  lvRideLineRec.SETRANGE("Ride No.", "No.");
                                  IF lvRideLineRec.FINDSET(FALSE,FALSE) THEN BEGIN
                                    REPEAT
                                      IF lvTransOrderRec.GET(lvRideLineRec."Transport Order No.") THEN BEGIN
                                        IF lvTransOrderRec."Purchase Order" <> '' THEN
                                          ERROR(Text001, lvRideLineRec."Transport Order No.", "No.");
                                      END;
                                      IF lvPostedTransOrderRec.GET(lvRideLineRec."Transport Order No.") THEN BEGIN
                                        IF lvPostedTransOrderRec."Purchase Order" <> '' THEN
                                          ERROR(Text001, lvRideLineRec."Transport Order No.", "No.");
                                      END;

                                    UNTIL lvRideLineRec.NEXT = 0;
                                  END;

                                  CALCFIELDS("Means of Transport Description");

                                  IF PurchOrderRec."No." = '' THEN
                                    InsertPurchOrder();
                                  IF "Purchase Order" = '' THEN BEGIN
                                    "Purchase Order" := PurchOrderRec."No.";
                                    MODIFY;
                                  END;
                                  InsertPurchOrderLine();
                                END;

               ReqFilterFields=No.,Status;
               DataItemLink=Shipping Agent=FIELD(Code) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      PlantSetupRec@1100485000 : Record 11012550;
      PurchOrderRec@1100485001 : Record 38;
      PurchOrderLineRec@1100485002 : Record 39;
      gOnExistingPurchOrder@1100485007 : Boolean;
      NextLineNo@1100485006 : Integer;
      MaxLenDescr1@1100485018 : Integer;
      MaxLenDescr2@1100485019 : Integer;
      gPurchOrderNo@1100485003 : Code[20];
      Text000@1100485009 : TextConst 'DEU="Es wurde mehr als ein Kreditor (Zusteller) ausgewÑhlt; dies ist nicht zulÑssig.";ENU=More than one Vendor (Shipping Agent) selected, this is not allowed.;NLD=Meer dan 1 leveranciers (expediteurs) geselecteerd, dit is niet toegestaan.;NOR=Det er ikke tillatt Ü velge flere enn Çn leverandõr (Transportõr).;SVE=Det Ñr inte tillÜtet att vÑlja fler Ñn en leverantîr (speditîr).';
      CreatedPurchOrderNo@1100485013 : Code[20];
      TransDateFilter@1100485010 : Text[1024];
      MeansOfTransFilter@1100485014 : Text[1024];
      Text001@1100525000 : TextConst 'DEU=Es sind bereits Einkaufbestellungen fÅr Transportauftrag ''%1'' von Fahrt ''%2'' erstellt worden.;ENU=There is already created a purchase order for transport order ''%1'' of ride ''%2''.;NLD=Er is al een inkooporder aangemaakt voor transportorder ''%1'' van rit ''%2''.;NOR=En innkjõpsordre er allerede opprettet for Transportordre ''%1'' for tur ''%2''.;SVE=En inkîpsorder har redan skapats fîr transportorder ''%1'' fîr kîrning ''%2''.';
      SelectedNoSeries@1100409000 : Code[20];

    PROCEDURE SetOnExistingPurchOrder@1100485005(IPurchOrderNo@1100485000 : Code[20]);
    BEGIN
      gOnExistingPurchOrder := TRUE;
      gPurchOrderNo := IPurchOrderNo;
    END;

    PROCEDURE GetCreatedPurchOrderNo@1100485000(VAR OCreatedPurchOrderNo@1100485000 : Code[20]);
    BEGIN
      OCreatedPurchOrderNo := CreatedPurchOrderNo;
    END;

    PROCEDURE InsertPurchOrder@1100485004();
    BEGIN
      IF gOnExistingPurchOrder THEN
        EXIT;

      WITH PurchOrderRec DO BEGIN
        INIT;
        "Document Type" := "Document Type"::Order;
        "No." := '';
        //C021547.sn
        IF SelectedNoSeries = '' THEN
          CheckAskForNoSeries("Document Type"::Order,SelectedNoSeries);
        "No. Series" := SelectedNoSeries;
        GetNoForSelectedNoSeries(PurchOrderRec);
        //C021547.en
        INSERT(TRUE);
        TESTFIELD("No.");
        VALIDATE("Buy-from Vendor No.", "Shipping Agent"."Vendor No.");
        "Amounts only" := FALSE;
        MODIFY(TRUE);

        CreatedPurchOrderNo := "No.";  //* Will be create max. 1 purchaseorder (max. 1 vendor, see check in 'OnBeforeReport')
        NextLineNo := 10000;
      END;
    END;

    PROCEDURE InsertPurchOrderLine@1100485008();
    VAR
      TransCostObject@1210190000 : Record 11020499;
      lvFactor@1100485000 : Integer;
    BEGIN
      WITH PurchOrderLineRec DO BEGIN
        INIT;
        "Document Type" := "Document Type"::Order;
        "Document No." := PurchOrderRec."No.";
        InitRecord();
        "Line No." := NextLineNo;
        VALIDATE("Shortcut Dimension 1 Code", "Shipping Agent"."Cost Centre");
        //VALIDATE("Shortcut Dimension 2 Code", PlantSetupRec."Default Cost Object Transport");  //22057.o

        Type := Type::"G/L Account";
        VALIDATE("No.", PlantSetupRec."Account Transport Cost");
        //22057.sn
        TransCostObject.SETRANGE("Shipping Agent",  "Plant Transport Ride"."Shipping Agent");
        TransCostObject.SETRANGE("Means of Transport", "Plant Transport Ride"."Means of Transport");
        TransCostObject.SETRANGE(Type, TransCostObject.Type::Transport);
        TransCostObject.SETFILTER("Cost Object", '<>%1', '');
        IF TransCostObject.FINDFIRST THEN
          VALIDATE("Shortcut Dimension 2 Code", TransCostObject."Cost Object");
        //22057.en

        Description := COPYSTR(
          FORMAT("Plant Transport Ride".Date) + ' ' + "Plant Transport Ride"."Means of Transport Description", 1, MaxLenDescr1);
        "Description 2" := COPYSTR(
          "Plant Transport Ride".TABLECAPTION + ' ' + "Plant Transport Ride"."No.", 1, MaxLenDescr2);
        "Plant Transport Order No." := 'TEMP';  //* Must be filled because of "Direct Receipt Pl. Transport" (Purchase setup)
                                                //* during validite of Quantity (must be made empty afterwards)
        "Plant Transport Ride No." := "Plant Transport Ride"."No.";
        //* On the purchase line 'Quantity' and 'Amount' must both positive or both negative.
        //* IF not then correct by multiply 'Quantity' and 'Price' with -1.
        IF ("Plant Transport Ride"."Purchase Price" >= 0) OR ("Plant Transport Ride".Quantity = 0)THEN
          lvFactor := 1
        ELSE
          lvFactor := -1;
        VALIDATE(Quantity, lvFactor * "Plant Transport Ride".Quantity);
        VALIDATE("Unit of Measure Code", "Plant Transport Ride"."Unit of Measure");
        VALIDATE("Direct Unit Cost", lvFactor * "Plant Transport Ride"."Purchase Price");
        "Plant Transport Order No." := '';  //* Empty (was temporary filled)
        INSERT(TRUE);
        NextLineNo := NextLineNo + 10000;
      END;
    END;

    BEGIN
    {
      Copied from R11020505 (Transport Order)
    }
    END.
  }
  RDLDATA
  {
  }
}

