OBJECT Page 11128108 Extended ROT/RUT Information
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Extended ROT/RUT Information;
               SVE=Ut”kad ROT/RUT information];
    SourceTable=Table11128102;
    DelayedInsert=Yes;
    PageType=ListPart;
    OnNewRecord=VAR
                  SalesSetup@1100285100 : Record 311;
                BEGIN
                  //>>RFC188
                  SalesSetup.GET;
                  CASE "Application Type" OF
                    "Application Type"::ROT:
                      IF SalesSetup."ROT default worktype" <> 0 THEN //IME1157
                        "ROT/RUT Type" := SalesSetup."ROT default worktype" -1;
                    "Application Type"::RUT:
                      IF SalesSetup."RUT default worktype" <> 0 THEN //IME1157
                        "ROT/RUT Type" := SalesSetup."RUT default worktype" +19;
                  END;
                  //<<RFC188
                END;

    ActionList=ACTIONS
    {
      { 1101285001;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1101285000;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 NOR=Fu&nksjon;
                                 SVE=F&unktion] }
      { 1101285002;2 ;Action    ;
                      Name=CalcExtRotinfo;
                      CaptionML=[ENU=Fill ext. rot-information;
                                 SVE=Fyll ut”kad ROT-info];
                      OnAction=VAR
                                 ExtendedROTRUTmapping@1101285000 : Record 11128103;
                                 ProjectCostPlusEntry@1101285002 : Record 11012019;
                                 DimensionValue@1101285003 : Record 349;
                                 GLSetup@1101285001 : Record 98;
                                 ROTHours@1101285004 : Decimal;
                                 ROTMaterial@1101285005 : Decimal;
                                 ExtendedROTRUTInfo@1101285006 : Record 11128102;
                                 Text001@1101285007 : TextConst 'ENU=Delete extended rot/rut-information and fill from settlement sheet?;SVE=Rensa ut”kad rot/rut-info och fyll utifr†n avr„kningsark?';
                                 Text002@1101285008 : TextConst 'ENU=Extended rot/rut mapping table is empty;SVE=Upps„ttning saknas i ut”kad rot/rut mappningstabell';
                                 ServiceOrderCostPlusEntry@1101285009 : Record 11012825;
                                 CreateProjectInvoices@1101285010 : Report 11012014;
                                 ProjectPrincipal@1101285011 : Record 11012005;
                                 Job@1101285012 : Record 11072003;
                                 ServiceOrder@1101285013 : Record 11012823;
                                 Customer@1101285014 : Record 18;
                               BEGIN
                                 IF Type = Type::Project THEN BEGIN
                                   IF CONFIRM(Text001) THEN BEGIN
                                     GLSetup.GET;
                                     Job.GET("Document No.");
                                     ProjectPrincipal.GET(Job."No.",Job."Bill-to Customer No.");
                                     ExtendedROTRUTInfo.SETRANGE(Type,Type::Project);
                                     ExtendedROTRUTInfo.SETRANGE("Document No.","Document No.");
                                     ExtendedROTRUTInfo.SETRANGE("Personal No.","Personal No.");
                                     ExtendedROTRUTInfo.SETRANGE("Invoice No.",'');
                                     ExtendedROTRUTInfo.DELETEALL(TRUE);
                                     IF ExtendedROTRUTmapping.FINDSET THEN BEGIN
                                       REPEAT
                                         ROTHours := 0;
                                         ROTMaterial := 0;
                                         CLEAR(ProjectCostPlusEntry);
                                         CLEAR(ExtendedROTRUTInfo);
                                         ProjectCostPlusEntry.SETRANGE("Project No.","Document No.");
                                         ProjectCostPlusEntry.SETRANGE("Cost Object",ExtendedROTRUTmapping."Cost Object");
                                         ProjectCostPlusEntry.SETRANGE(Chargeable,TRUE);
                                         IF ProjectCostPlusEntry.FINDSET THEN REPEAT
                                           IF DimensionValue.GET(GLSetup."Global Dimension 2 Code",ProjectCostPlusEntry."Cost Object") THEN BEGIN
                                             IF DimensionValue."ROT-reduction" THEN
                                               ROTHours := ROTHours + ProjectCostPlusEntry.Quantity
                                             ELSE
                                               ROTMaterial := ROTMaterial + CreateProjectInvoices.CalcAmountInclVat((ProjectCostPlusEntry.Quantity*ProjectCostPlusEntry."Sales Price (LCY)")
                                             ,ProjectCostPlusEntry."VAT Prod. Posting Group",ProjectPrincipal."VAT Bus. Posting Group", Job."VAT Bus. Posting Group");
                                           END;

                                         UNTIL ProjectCostPlusEntry.NEXT=0;

                                         IF (ROTMaterial <> 0) OR (ROTHours<>0) THEN BEGIN
                                           IF ExtendedROTRUTmapping."ROT/RUT Type" > "ROT/RUT Type"::RUT THEN BEGIN
                                             IF ExtendedROTRUTInfo.GET(Type::Project,"Document No.",'',"Personal No.","Application Type"::RUT,ExtendedROTRUTmapping."ROT/RUT Type") THEN BEGIN
                                               ExtendedROTRUTInfo.VALIDATE("Material Cost",ExtendedROTRUTInfo."Material Cost"+ROUND(ROTMaterial,1,'='));
                                               ExtendedROTRUTInfo.VALIDATE("Quantity Hours",ExtendedROTRUTInfo."Quantity Hours"+ROUND(ROTHours,1,'='));
                                               ExtendedROTRUTInfo.MODIFY(TRUE);
                                             END ELSE BEGIN
                                               ExtendedROTRUTInfo.INIT;
                                               ExtendedROTRUTInfo.VALIDATE(Type,Type::Project);
                                               ExtendedROTRUTInfo.VALIDATE("Document No.","Document No.");
                                               ExtendedROTRUTInfo.VALIDATE("Personal No.","Personal No.");
                                               ExtendedROTRUTInfo.VALIDATE("Application Type","Application Type"::RUT);
                                               ExtendedROTRUTInfo.VALIDATE("ROT/RUT Type",ExtendedROTRUTmapping."ROT/RUT Type");
                                               ExtendedROTRUTInfo.INSERT(FALSE);
                                               ExtendedROTRUTInfo.VALIDATE("Quantity Hours",ROUND(ROTHours,1,'='));
                                               ExtendedROTRUTInfo.VALIDATE("Material Cost",ROUND(ROTMaterial,1,'='));
                                               ExtendedROTRUTInfo.MODIFY(TRUE);
                                             END;

                                           END ELSE BEGIN
                                             IF ExtendedROTRUTInfo.GET(Type::Project,"Document No.",'',"Personal No.","Application Type"::ROT,ExtendedROTRUTmapping."ROT/RUT Type") THEN BEGIN
                                               ExtendedROTRUTInfo.VALIDATE("Material Cost",ExtendedROTRUTInfo."Material Cost"+ROUND(ROTMaterial,1,'='));
                                               ExtendedROTRUTInfo.VALIDATE("Quantity Hours",ExtendedROTRUTInfo."Quantity Hours"+ROUND(ROTHours,1,'='));
                                               ExtendedROTRUTInfo.MODIFY(TRUE);
                                             END ELSE BEGIN
                                               ExtendedROTRUTInfo.INIT;
                                               ExtendedROTRUTInfo.VALIDATE(Type,Type::Project);
                                               ExtendedROTRUTInfo.VALIDATE("Document No.","Document No.");
                                               ExtendedROTRUTInfo.VALIDATE("Personal No.","Personal No.");
                                               ExtendedROTRUTInfo.VALIDATE("Application Type","Application Type"::ROT);
                                               ExtendedROTRUTInfo.VALIDATE("ROT/RUT Type",ExtendedROTRUTmapping."ROT/RUT Type");
                                               ExtendedROTRUTInfo.INSERT(FALSE);
                                               ExtendedROTRUTInfo.VALIDATE("Quantity Hours",ROUND(ROTHours,1,'='));
                                               ExtendedROTRUTInfo.VALIDATE("Material Cost",ROUND(ROTMaterial,1,'='));
                                               ExtendedROTRUTInfo.MODIFY(TRUE);
                                             END;
                                           END;
                                         END;
                                       UNTIL ExtendedROTRUTmapping.NEXT=0;
                                     END ELSE
                                       MESSAGE(Text002)
                                   END;
                                 END;
                                 IF Type = Type::"Service Order" THEN BEGIN
                                   IF CONFIRM(Text001) THEN BEGIN
                                     GLSetup.GET;
                                     ServiceOrder.GET("Document No.");
                                     Customer.GET(ServiceOrder."Customer No.");
                                     ExtendedROTRUTInfo.SETRANGE(Type,Type::"Service Order");
                                     ExtendedROTRUTInfo.SETRANGE("Document No.","Document No.");
                                     ExtendedROTRUTInfo.SETRANGE("Personal No.","Personal No.");
                                     ExtendedROTRUTInfo.SETRANGE("Invoice No.",'');
                                     ExtendedROTRUTInfo.DELETEALL(TRUE);
                                     IF ExtendedROTRUTmapping.FINDSET THEN BEGIN
                                       REPEAT
                                         ROTHours := 0;
                                         ROTMaterial := 0;
                                         CLEAR(ServiceOrderCostPlusEntry);
                                         CLEAR(ExtendedROTRUTInfo);
                                         ServiceOrderCostPlusEntry.SETRANGE("Service Order No.","Document No.");
                                         ServiceOrderCostPlusEntry.SETRANGE("Cost Object",ExtendedROTRUTmapping."Cost Object");
                                         ServiceOrderCostPlusEntry.SETRANGE(Chargeable,TRUE);
                                         IF ServiceOrderCostPlusEntry.FINDSET THEN REPEAT
                                           IF DimensionValue.GET(GLSetup."Global Dimension 2 Code",ServiceOrderCostPlusEntry."Cost Object") THEN BEGIN
                                             IF DimensionValue."ROT-reduction" THEN
                                               ROTHours := ROTHours + ServiceOrderCostPlusEntry.Quantity
                                             ELSE
                                               ROTMaterial := ROTMaterial + CreateProjectInvoices.CalcAmountInclVat((ServiceOrderCostPlusEntry.Quantity*ServiceOrderCostPlusEntry."Sales Price (LCY)")
                                             ,ServiceOrderCostPlusEntry."VAT Prod. Posting Group",ServiceOrder."VAT Bus. Posting Group", Customer."VAT Bus. Posting Group");
                                           END;
                                         UNTIL ServiceOrderCostPlusEntry.NEXT=0;

                                         IF (ROTMaterial <> 0) OR (ROTHours<>0) THEN BEGIN
                                           IF ExtendedROTRUTmapping."ROT/RUT Type" > "ROT/RUT Type"::RUT THEN BEGIN
                                             IF ExtendedROTRUTInfo.GET(Type::"Service Order","Document No.",'',"Personal No.","Application Type"::RUT,ExtendedROTRUTmapping."ROT/RUT Type") THEN BEGIN
                                               ExtendedROTRUTInfo.VALIDATE("Material Cost",ExtendedROTRUTInfo."Material Cost"+ROUND(ROTMaterial,1,'='));
                                               ExtendedROTRUTInfo.VALIDATE("Quantity Hours",ExtendedROTRUTInfo."Quantity Hours"+ROUND(ROTHours,1,'='));
                                               ExtendedROTRUTInfo.MODIFY(TRUE);
                                             END ELSE BEGIN
                                               ExtendedROTRUTInfo.INIT;
                                               ExtendedROTRUTInfo.VALIDATE(Type,Type::"Service Order");
                                               ExtendedROTRUTInfo.VALIDATE("Document No.","Document No.");
                                               ExtendedROTRUTInfo.VALIDATE("Personal No.","Personal No.");
                                               ExtendedROTRUTInfo.VALIDATE("Application Type","Application Type"::RUT);
                                               ExtendedROTRUTInfo.VALIDATE("ROT/RUT Type",ExtendedROTRUTmapping."ROT/RUT Type");
                                               ExtendedROTRUTInfo.INSERT(FALSE);
                                               ExtendedROTRUTInfo.VALIDATE("Quantity Hours",ROUND(ROTHours,1,'='));
                                               ExtendedROTRUTInfo.VALIDATE("Material Cost",ROUND(ROTMaterial,1,'='));
                                               ExtendedROTRUTInfo.MODIFY(TRUE);
                                             END;

                                           END ELSE BEGIN
                                             IF ExtendedROTRUTInfo.GET(Type::"Service Order","Document No.",'',"Personal No.","Application Type"::ROT,ExtendedROTRUTmapping."ROT/RUT Type") THEN BEGIN
                                               ExtendedROTRUTInfo.VALIDATE("Material Cost",ExtendedROTRUTInfo."Material Cost"+ROUND(ROTMaterial,1,'='));
                                               ExtendedROTRUTInfo.VALIDATE("Quantity Hours",ExtendedROTRUTInfo."Quantity Hours"+ROUND(ROTHours,1,'='));
                                               ExtendedROTRUTInfo.MODIFY(TRUE);
                                             END ELSE BEGIN
                                               ExtendedROTRUTInfo.INIT;
                                               ExtendedROTRUTInfo.VALIDATE(Type,Type::"Service Order");
                                               ExtendedROTRUTInfo.VALIDATE("Document No.","Document No.");
                                               ExtendedROTRUTInfo.VALIDATE("Personal No.","Personal No.");
                                               ExtendedROTRUTInfo.VALIDATE("Application Type","Application Type"::ROT);
                                               ExtendedROTRUTInfo.VALIDATE("ROT/RUT Type",ExtendedROTRUTmapping."ROT/RUT Type");
                                               ExtendedROTRUTInfo.INSERT(FALSE);
                                               ExtendedROTRUTInfo.VALIDATE("Quantity Hours",ROUND(ROTHours,1,'='));
                                               ExtendedROTRUTInfo.VALIDATE("Material Cost",ROUND(ROTMaterial,1,'='));
                                               ExtendedROTRUTInfo.MODIFY(TRUE);
                                             END;
                                           END;
                                         END;
                                       UNTIL ExtendedROTRUTmapping.NEXT=0;
                                     END ELSE
                                       MESSAGE(Text002)
                                   END;
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100285500;0;Container;
                ContainerType=ContentArea }

    { 1100285501;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100285102;2;Field  ;
                SourceExpr="Personal No.";
                Visible=FALSE }

    { 1100285103;2;Field  ;
                SourceExpr="Application Type";
                OnValidate=VAR
                             ROTInfo@1100285100 : Record 11128101;
                             SalesSetup@1100285101 : Record 311;
                           BEGIN
                             SalesSetup.GET;
                             CASE "Application Type" OF
                               "Application Type"::ROT:
                                 IF SalesSetup."ROT default worktype" <> 0 THEN //IME1157
                                   "ROT/RUT Type" := SalesSetup."ROT default worktype" -1;
                               "Application Type"::RUT:
                                 IF SalesSetup."RUT default worktype" <> 0 THEN //IME1157
                                   "ROT/RUT Type" := SalesSetup."RUT default worktype" +19;
                             END;

                             IF NOT ROTInfo.GET(Type,"Document No.","Invoice No.","Personal No.","Application Type") THEN
                               ERROR('');
                           END;
                            }

    { 1100285505;2;Field  ;
                SourceExpr="ROT/RUT Type" }

    { 1100285502;2;Field  ;
                SourceExpr="Quantity Hours" }

    { 1100285503;2;Field  ;
                SourceExpr="Material Cost" }

    { 1100285100;2;Field  ;
                SourceExpr="Quantity Hours to TaxAuth";
                Visible=false;
                Style=Subordinate;
                StyleExpr=TRUE }

    { 1100285101;2;Field  ;
                SourceExpr="Material Cost to TaxAuth";
                Visible=false;
                Style=Subordinate;
                StyleExpr=TRUE }

  }
  CODE
  {

    BEGIN
    {
      170405 ITERO.DL RFC188 enhance ROT-handling and extend with RUT
      170512 ITERO.DL RFC188 namechange ROT -> ROT/RUT
      170602 ITERO.DL RFC188 added functions for RUT
      180130 ITERO.DL IME521 problems with adding second line of same application type
      190114 RAD-112/#22484 ITERO.SB Extended rot/rut funcionality, new function CalcExtRotinfo
      190118 ORANGO.DL IME1157 unable to assign "ROT/RUT Type"::Construction
      190227 ORANGO.SB RAD-112/#22484 Added functionality for serviceorder, added amount incl vat calculation
    }
    END.
  }
}

