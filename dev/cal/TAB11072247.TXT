OBJECT Table 11072247 Settlement Quantity Surcharge
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckStatus();
               CheckBudgetRate;
               UpdateBudgSurchAndOptionPrice(DBTrigger::Insert);
             END;

    OnModify=BEGIN
               CheckStatus();
               CheckBudgetRate;
               UpdateBudgSurchAndOptionPrice(DBTrigger::Modify);
             END;

    OnDelete=BEGIN
               CheckStatus();
               UpdateBudgSurchAndOptionPrice(DBTrigger::Delete);
             END;

    CaptionML=ENU=Settlement Quantity Surcharge;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr] }
    { 15  ;   ;House Model         ;Code20        ;TableRelation="House Model".Model WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=House Model;
                                                              NOR=Husmodell;
                                                              SVE=Husmodell] }
    { 20  ;   ;Settlement Quantity Code;Code20    ;AltSearchField=Description;
                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod] }
    { 90  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 100 ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code;
                                                   OnValidate=BEGIN
                                                                IF ("Cost Object" <> xRec."Cost Object") OR (Description = '') THEN BEGIN
                                                                  DimMgtCU.GetDimValueRec(2, "Cost Object", DimValRec, TRUE, "Settlement Quantity Code");
                                                                  Description := DimValRec.Name;
                                                                END;

                                                                VALIDATE("Cost Type");
                                                                VALIDATE("Rate Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostnadsobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   NotBlank=Yes;
                                                   CaptionClass='1,1,2' }
    { 101 ;   ;Cost Type           ;Option        ;InitValue=Sundry;
                                                   OnValidate=VAR
                                                                lvDimValRec@1100409001 : Record 349;
                                                                lvDimMgtCU@1100409000 : Codeunit 408;
                                                              BEGIN
                                                                IF "Cost Object" = '' THEN BEGIN
                                                                  "Cost Type" := "Cost Type"::Sundry;
                                                                END ELSE BEGIN
                                                                  lvDimMgtCU.GetDimValueRec(2, "Cost Object", lvDimValRec, FALSE,'');
                                                                  "Cost Type" := lvDimValRec."Cost Type";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Cost Type;
                                                              NOR=Kosttype;
                                                              SVE=Kostnadstyp];
                                                   OptionCaptionML=[ENU=Labor,Material,Subcontracting,Plant,Sundry;
                                                                    NOR=Arbeidskraft,Materiale,Underentrepen›r,Maskin,Diverse;
                                                                    SVE=Arbetskraft,Material,Underentreprenad,Maskin,Diverse];
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry;
                                                   Editable=No }
    { 110 ;   ;Rate Code           ;Code10        ;TableRelation="Budget Rate" WHERE (Project Filter=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                IF ("Rate Code" = '') THEN
                                                                  EXIT;

                                                                CheckBudgetRate;
                                                              END;

                                                   CaptionML=[ENU=Rate Code;
                                                              NOR=Avgiftskode;
                                                              SVE=Avgiftskod] }
    { 120 ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 130 ;   ;Surcharge %         ;Decimal       ;CaptionML=[ENU=Surcharge %;
                                                              NOR=Tilleggsgebyrsprosent;
                                                              SVE=Till„ggsavgiftsprocent] }
    { 140 ;   ;Surcharge Amount    ;Decimal       ;FieldClass=Normal;
                                                   CaptionML=[ENU=Surcharge Amount;
                                                              NOR=Tilleggsgebyrsbel›p;
                                                              SVE=Till„ggsbelopp] }
    { 150 ;   ;Budget Amount       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Settlement Quantity Budget".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                                              Settlement Quantity Code=FIELD(Settlement Quantity Code)));
                                                   CaptionML=[ENU=Budget Amount;
                                                              NOR=Budsjettbel›p;
                                                              SVE=Budgetbelopp];
                                                   Editable=No }
    { 160 ;   ;Total Surcharge Amount;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Settlement Quantity Surcharge"."Surcharge Amount" WHERE (Project No.=FIELD(Project No.),
                                                                                                                             Settlement Quantity Code=FIELD(Settlement Quantity Code)));
                                                   CaptionML=[ENU=Total Surcharge Amount;
                                                              NOR=Tilleggsgebyr Totalt;
                                                              SVE=Till„ggsbelopp totalt];
                                                   Editable=No }
    { 180 ;   ;Element             ;Code20        ;TableRelation=IF (Project No.=FILTER(<>'')) "Project Element".Element WHERE (Project No.=FIELD(Project No.))
                                                                 ELSE IF (Project No.=FILTER('')) "Base Element".Code;
                                                   OnValidate=BEGIN
                                                                ElementFormat.FormatElem(Element,2,'');
                                                                IF Element <> '' THEN BEGIN
                                                                  IF "Settlement Quantity Code" = '' THEN BEGIN
                                                                    ElemRec.GET(Element);
                                                                    Chapter := ElemRec.Chapter;
                                                                    Paragraph := ElemRec.Paragraph;
                                                                  END ELSE BEGIN
                                                                    ProjElemRec.GET("Settlement Quantity Code",Element);
                                                                    Chapter := ProjElemRec.Chapter;
                                                                    Paragraph := ProjElemRec.Paragraph;
                                                                  END;
                                                                END ELSE BEGIN
                                                                  Chapter := '';
                                                                  Paragraph := '';
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 181 ;   ;Chapter             ;Code20        ;CaptionML=[ENU=Chapter;
                                                              NOR=Kapittel;
                                                              SVE=Kapitel];
                                                   Editable=No }
    { 182 ;   ;Paragraph           ;Code20        ;CaptionML=[ENU=Paragraph;
                                                              NOR=Avsnitt;
                                                              SVE=Stycke];
                                                   Editable=No }
    { 190 ;   ;Fixed Amount        ;Boolean       ;CaptionML=[ENU=Fixed Amount;
                                                              NOR=Fast bel›p;
                                                              SVE=Fast belopp] }
  }
  KEYS
  {
    {    ;Project No.,House Model,Settlement Quantity Code,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DimValRec@1210190003 : Record 349;
      ElemRec@1210190006 : Record 11012060;
      ProjElemRec@1210190007 : Record 11012010;
      DimMgtCU@1210190002 : Codeunit 408;
      SettlementQuantityManagement@1210190000 : Codeunit 11071690;
      ElementFormat@1210190005 : Codeunit 11012022;
      DBTrigger@1210190001 : 'Insert,Modify,Delete';

    PROCEDURE CheckCostbjectIsLabor@1210190000(ICostObject@1210190000 : Code[20]) : Boolean;
    VAR
      lvDimValRec@1210190001 : Record 349;
      lvDimMgtCU@1210190002 : Codeunit 408;
    BEGIN
      //TODO This probably will not be used
      IF ICostObject = '' THEN
        EXIT(FALSE);

      lvDimMgtCU.GetDimValueRec(2, ICostObject, lvDimValRec, FALSE,'');
      IF lvDimValRec."Cost Type" = lvDimValRec."Cost Type"::Labor THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE UpdateBudgSurchAndOptionPrice@6(IDBTrigger@1210190000 : 'Insert,Modify,Delete');
    BEGIN
      CASE IDBTrigger OF
        IDBTrigger::Insert: INSERT;
        IDBTrigger::Modify: MODIFY;
        IDBTrigger::Delete: DELETE;
      END;

      SettlementQuantityManagement.MMRCalcSurchargesUpdateSettlQuan(
        "Project No.", "House Model", "Settlement Quantity Code", TRUE, Rec);

      CASE IDBTrigger OF
        IDBTrigger::Insert: DELETE;
        IDBTrigger::Delete: INSERT;
      END;
    END;

    PROCEDURE CheckBudgetRate@1100485000();
    BEGIN
      IF "Cost Type" <> "Cost Type"::Labor THEN BEGIN
        "Rate Code" := '';
        EXIT;
      END;

      IF ("Surcharge %" <> 0) THEN
        EXIT;

      TESTFIELD("Rate Code");
      //RateRec.SETRANGE("Starting Date", 0D, TODAY);
      //RateRec.SETFILTER("Ending Date",'%1|>=%2',0D, TODAY);
      //RateRec.FINDLAST;
      //RateRec.TESTFIELD(Rate);
    END;

    PROCEDURE CheckStatus@1100525000();
    VAR
      lvSettlementQuantity@1100525000 : Record 11072243;
      lvText000@1100525001 : TextConst 'ENU=has the status %1'', modify surcharges not allowed';
    BEGIN
      { TODO misschien controle op nieuw status eld.
      IF ("Settlement Quantity Code" = '') OR ("Project No." = '') THEN
        EXIT;

      IF lvSettlementQuantity.GET("Project No.", "Settlement Quantity Code") THEN BEGIN
        IF (lvSettlementQuantity.Status >= lvSettlementQuantity.Status::Open) THEN BEGIN
          FIELDERROR(lvSettlementQuantity, STRSUBSTNO(lvText000, lvSettlementQuantity.Status));
        END;
      END;
      }
    END;

    BEGIN
    END.
  }
}

