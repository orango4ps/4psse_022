OBJECT Table 11012574 Plant Hours Revenues Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               InitRecord;
             END;

    OnModify=BEGIN
               TESTFIELD(Status,Status::Open);
             END;

    OnDelete=BEGIN
               IF NOT DeleteAllowed THEN
                 ERROR(Text003,TABLECAPTION,"Line No.");
             END;

    CaptionML=[ENU=Plant Hours Revenues Line;
               NOR=Maskintimer, inntektsrad;
               SVE=Maskintimmar intÑktsrad];
  }
  FIELDS
  {
    { 10  ;   ;Year                ;Integer       ;CaptionML=[ENU=Year;
                                                              NOR=èr;
                                                              SVE=èr] }
    { 20  ;   ;Week                ;Integer       ;CaptionML=[ENU=Week;
                                                              NOR=Uke;
                                                              SVE=Vecka] }
    { 30  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp] }
    { 35  ;   ;Plant No.           ;Code10        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   CaptionML=[ENU=Plant No.;
                                                              NOR=Maskinnr.;
                                                              SVE=Maskinnr] }
    { 40  ;   ;Line No.            ;Integer       ;TableRelation="Hour Accounting" WHERE (Year=FIELD(Year),
                                                                                          Week=FIELD(Week));
                                                   CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 50  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF Type <> xRec.Type THEN BEGIN
                                                                  TESTFIELD(Status,Status::Open);
                                                                  IF NOT (Type IN [Type::Expenses, Type::Cost]) THEN BEGIN
                                                                    TESTFIELD(Amount, 0);
                                                                    "Cost Object" := '';
                                                                    Quantity := 0;
                                                                    "Unit Price" := 0;
                                                                    Amount := 0;
                                                                    IF Type = Type::"Unmanned Hours" THEN BEGIN  //*C-019470.sn
                                                                      "Employee No." := '';
                                                                      "Employee Name" := '';
                                                                    END;  //*C-019470.en
                                                                    "Description (Cost)" := '';
                                                                    "Unit of Measure (Cost)" := '';
                                                                  END ELSE BEGIN
                                                                    TESTFIELD("Total Line", 0);
                                                                    "Rate Code" := '';
                                                                    Monday := 0;
                                                                    Tuesday := 0;
                                                                    Wednesday := 0;
                                                                    Thursday := 0;
                                                                    Friday := 0;
                                                                    Saturday := 0;
                                                                    Sunday := 0;
                                                                    "Total Hours";
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Typ];
                                                   OptionCaptionML=ENU=Hours,Expenses,Unmanned Hours,Cost;
                                                   OptionString=Hours,Expenses,Unmanned Hours,Cost }
    { 60  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=[ENU=Open,Posted;
                                                                    NOR=èpne,Bokfõrt;
                                                                    SVE=ôppna,Bokfîrd];
                                                   OptionString=Open,Posted;
                                                   Editable=No }
    { 70  ;   ;Plant Location      ;Code20        ;TableRelation="Plant Location";
                                                   OnValidate=BEGIN
                                                                IF "Plant Location" <> xRec."Plant Location" THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF "Plant Location" <> '' THEN BEGIN
                                                                  PlantLocationRec.GET("Plant Location");
                                                                  PlantLocationRec.CheckBlock(2,FALSE,FALSE);
                                                                  CALCFIELDS("Location Description");
                                                                END;

                                                                IF "Plant Location" <> xRec."Plant Location" THEN BEGIN
                                                                  Element := '';
                                                                  IF "Rate Code" <> '' THEN BEGIN
                                                                    IF NOT PlantRateCodeRec.CheckPlantRateCode("Plant Location", "Rate Code", FALSE, '', 0) THEN
                                                                      "Rate Code" := '';
                                                                  END;
                                                                  "Resource Request No." := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Location;
                                                              NOR=Plassering;
                                                              SVE=LagerstÑlle] }
    { 80  ;   ;Rate Code           ;Code10        ;OnValidate=BEGIN
                                                                IF "Rate Code" <> xRec."Rate Code" THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF "Rate Code" <> '' THEN BEGIN
                                                                  IF Type IN [Type::Expenses, Type::Cost] THEN
                                                                    FIELDERROR(Type);
                                                                  PlantSetupRec.GET;
                                                                  PlantSetupRec.TESTFIELD("Rate Codes");
                                                                  PlantRateCodeRec.CheckPlantRateCode("Plant Location", "Rate Code", TRUE, '', 0);
                                                                  IF "Employee No." = '' THEN BEGIN
                                                                    //PlantRateCodeRec.GET("Rate Code");
                                                                    PlantRateCodeRec.ReadPlantRateCode("Plant Location", "Rate Code", '');
                                                                    IF PlantRateCodeRec."Hour Rate from" = PlantRateCodeRec."Hour Rate from"::Employee THEN BEGIN
                                                                      FIELDERROR("Rate Code",
                                                                        STRSUBSTNO(Text002, "Rate Code", PlantRateCodeRec.FIELDCAPTION("Hour Rate from"), PlantRateCodeRec."Hour Rate from"));
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              PlantRateCodeRec.Code := PlantRateCodeRec.LookupPlantRateCode("Plant Location", "Rate Code", TRUE, '', 0);
                                                              IF (Status = Status::Open) AND (Type IN [Type::Hours, Type::"Unmanned Hours"]) AND  //*C-019470.c
                                                                 (PlantRateCodeRec.Code <> "Rate Code")
                                                              THEN
                                                                VALIDATE("Rate Code", PlantRateCodeRec.Code);
                                                            END;

                                                   CaptionML=[ENU=Rate Code;
                                                              NOR=Avgiftskode;
                                                              SVE=Avgiftskod] }
    { 100 ;   ;Employee No.        ;Code20        ;TableRelation=IF (Employee Company=CONST()) Employee;
                                                   OnValidate=BEGIN
                                                                IF "Employee No." <> xRec."Employee No." THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF ("Employee No." <> '') AND (Type IN [Type::"Unmanned Hours", Type::Cost]) THEN  //*C-019470.n
                                                                  FIELDERROR(Type);
                                                                IF (Type = Type::Expenses) AND (CurrFieldNo = FIELDNO("Employee No.")) AND ("Cost Object" <> '') THEN
                                                                 VALIDATE("Unit Price", GetUnitPriceExpenses());

                                                                CALCFIELDS("Employee Name");
                                                              END;

                                                   CaptionML=[ENU=Employee No.;
                                                              NOR=Ansattnr;
                                                              SVE=AnstÑllningsnr] }
    { 105 ;   ;Employee Name       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Employee No.)));
                                                   CaptionML=[ENU=Employee Name;
                                                              NOR=Navn pÜ ansatt;
                                                              SVE=Namn pÜ anstÑlld];
                                                   Editable=No }
    { 110 ;   ;Monday              ;Decimal       ;FieldClass=Normal;
                                                   OnValidate=BEGIN
                                                                IF Monday <> xRec.Monday THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF Monday <> 0 THEN
                                                                  IF Type IN [Type::Expenses, Type::Cost] THEN
                                                                    FIELDERROR(Type);

                                                                "Total Hours";
                                                              END;

                                                   CaptionML=[ENU=Monday;
                                                              NOR=Mandag;
                                                              SVE=MÜndag];
                                                   DecimalPlaces=0:3;
                                                   BlankZero=Yes }
    { 120 ;   ;Tuesday             ;Decimal       ;FieldClass=Normal;
                                                   OnValidate=BEGIN
                                                                IF Tuesday <> xRec.Tuesday THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF Tuesday <> 0 THEN
                                                                  IF Type IN [Type::Expenses, Type::Cost] THEN
                                                                    FIELDERROR(Type);

                                                                "Total Hours";
                                                              END;

                                                   CaptionML=[ENU=Tuesday;
                                                              NOR=Tirsdag;
                                                              SVE=Tisdag];
                                                   DecimalPlaces=0:3;
                                                   BlankZero=Yes }
    { 130 ;   ;Wednesday           ;Decimal       ;FieldClass=Normal;
                                                   OnValidate=BEGIN
                                                                IF Wednesday <> xRec.Wednesday THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF Wednesday <> 0 THEN
                                                                  IF Type IN [Type::Expenses, Type::Cost] THEN
                                                                    FIELDERROR(Type);

                                                                "Total Hours";
                                                              END;

                                                   CaptionML=[ENU=Wednesday;
                                                              NOR=Onsdag;
                                                              SVE=Onsdag];
                                                   DecimalPlaces=0:3;
                                                   BlankZero=Yes }
    { 140 ;   ;Thursday            ;Decimal       ;FieldClass=Normal;
                                                   OnValidate=BEGIN
                                                                IF Thursday <> xRec.Thursday THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF Thursday <> 0 THEN
                                                                  IF Type IN [Type::Expenses, Type::Cost] THEN
                                                                    FIELDERROR(Type);

                                                                "Total Hours";
                                                              END;

                                                   CaptionML=[ENU=Thursday;
                                                              NOR=Torsdag;
                                                              SVE=Torsdag];
                                                   DecimalPlaces=0:3;
                                                   BlankZero=Yes }
    { 150 ;   ;Friday              ;Decimal       ;FieldClass=Normal;
                                                   OnValidate=BEGIN
                                                                IF Friday <> xRec.Friday THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF Friday <> 0 THEN
                                                                  IF Type IN [Type::Expenses, Type::Cost] THEN
                                                                    FIELDERROR(Type);

                                                                "Total Hours";
                                                              END;

                                                   CaptionML=[ENU=Friday;
                                                              NOR=Fredag;
                                                              SVE=Fredag];
                                                   DecimalPlaces=0:3;
                                                   BlankZero=Yes }
    { 160 ;   ;Saturday            ;Decimal       ;FieldClass=Normal;
                                                   OnValidate=BEGIN
                                                                IF Saturday <> xRec.Saturday THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF Saturday <> 0 THEN
                                                                  IF Type IN [Type::Expenses, Type::Cost] THEN
                                                                    FIELDERROR(Type);

                                                                "Total Hours";
                                                              END;

                                                   CaptionML=[ENU=Saturday;
                                                              NOR=Lõrdag;
                                                              SVE=Lîrdag];
                                                   DecimalPlaces=0:3;
                                                   BlankZero=Yes }
    { 170 ;   ;Sunday              ;Decimal       ;FieldClass=Normal;
                                                   OnValidate=BEGIN
                                                                IF Sunday <> xRec.Sunday THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF Sunday <> 0 THEN
                                                                  IF Type IN [Type::Expenses, Type::Cost] THEN
                                                                    FIELDERROR(Type);

                                                                "Total Hours";
                                                              END;

                                                   CaptionML=[ENU=Sunday;
                                                              NOR=Sõndag;
                                                              SVE=Sîndag];
                                                   DecimalPlaces=0:3;
                                                   BlankZero=Yes }
    { 180 ;   ;Total Line          ;Decimal       ;CaptionML=[ENU=Total Line;
                                                              NOR=Totalrad;
                                                              SVE=Totalrad];
                                                   DecimalPlaces=0:3;
                                                   Editable=No }
    { 190 ;   ;Total Monday        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Hours Revenues Line".Monday WHERE (Year=FIELD(Year),
                                                                                                             Week=FIELD(Week),
                                                                                                             Plant Type=FIELD(Plant Type),
                                                                                                             Plant No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Total Monday;
                                                              NOR=Totalt mandag;
                                                              SVE=Totalt mÜndag];
                                                   Editable=No }
    { 200 ;   ;Total Tuesday       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Hours Revenues Line".Tuesday WHERE (Year=FIELD(Year),
                                                                                                              Week=FIELD(Week),
                                                                                                              Plant Type=FIELD(Plant Type),
                                                                                                              Plant No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Total Tuesday;
                                                              NOR=Totalt tirsdag;
                                                              SVE=Totalt tisdag];
                                                   Editable=No }
    { 210 ;   ;Total Wednesday     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Hours Revenues Line".Wednesday WHERE (Year=FIELD(Year),
                                                                                                                Week=FIELD(Week),
                                                                                                                Plant Type=FIELD(Plant Type),
                                                                                                                Plant No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Total Wednesday;
                                                              NOR=Totalt onsdag;
                                                              SVE=Totalt onsdag];
                                                   Editable=No }
    { 220 ;   ;Total Thursday      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Hours Revenues Line".Thursday WHERE (Year=FIELD(Year),
                                                                                                               Week=FIELD(Week),
                                                                                                               Plant Type=FIELD(Plant Type),
                                                                                                               Plant No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Total Thursday;
                                                              NOR=Totalt torsdag;
                                                              SVE=Totalt torsdag];
                                                   Editable=No }
    { 230 ;   ;Total Friday        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Hours Revenues Line".Friday WHERE (Year=FIELD(Year),
                                                                                                             Week=FIELD(Week),
                                                                                                             Plant Type=FIELD(Plant Type),
                                                                                                             Plant No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Total Friday;
                                                              NOR=Totalt fredag;
                                                              SVE=Totalt fredag];
                                                   Editable=No }
    { 240 ;   ;Total Saturday      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Hours Revenues Line".Saturday WHERE (Year=FIELD(Year),
                                                                                                               Week=FIELD(Week),
                                                                                                               Plant Type=FIELD(Plant Type),
                                                                                                               Plant No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Total Saturday;
                                                              NOR=Totalt lõrdag;
                                                              SVE=Totalt lîrdag];
                                                   Editable=No }
    { 250 ;   ;Total Sunday        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Hours Revenues Line".Sunday WHERE (Year=FIELD(Year),
                                                                                                             Week=FIELD(Week),
                                                                                                             Plant Type=FIELD(Plant Type),
                                                                                                             Plant No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Total Sunday;
                                                              NOR=Totalt sõndag;
                                                              SVE=Totalt sîndag];
                                                   Editable=No }
    { 330 ;   ;Total Normal        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Hours Revenues Line"."Total Line" WHERE (Year=FIELD(Year),
                                                                                                                   Week=FIELD(Week),
                                                                                                                   Plant Type=FIELD(Plant Type),
                                                                                                                   Plant No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Total Normal;
                                                              NOR=Totalt, Normalt;
                                                              SVE=Totalt, normalt];
                                                   Editable=No }
    { 350 ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Cost Type=FILTER(<Revenue),
                                                                                               Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                IF "Cost Object" <> xRec."Cost Object" THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF "Cost Object" = '' THEN
                                                                  EXIT;

                                                                IF NOT (Type IN [Type::Expenses, Type::Cost]) THEN
                                                                  FIELDERROR(Type);

                                                                IF (CurrFieldNo = FIELDNO("Cost Object")) THEN
                                                                 VALIDATE("Unit Price", GetUnitPriceExpenses());

                                                                CALCFIELDS("Cost Object Description", "Cost Object Unit of Measure");
                                                                IF (Type = Type::Cost) AND ("Cost Object" <> xRec."Cost Object") THEN BEGIN
                                                                  "Description (Cost)" := "Cost Object Description";
                                                                  "Unit of Measure (Cost)" := "Cost Object Unit of Measure";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostnadsobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   Description=Only for expenses and cost;
                                                   CaptionClass='1,1,2' }
    { 351 ;   ;Cost Object Description;Text50     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dimension Value".Name WHERE (Global Dimension No.=FILTER(2),
                                                                                                    Code=FIELD(Cost Object)));
                                                   CaptionML=[ENU=Cost Object Description;
                                                              NOR=Kostnadsobjekt, Beskrivelse;
                                                              SVE=Kostnadsobjekt, beskrivning];
                                                   Editable=No;
                                                   CaptionClass='1,11012000,2, , ' + Text000 }
    { 352 ;   ;Cost Object Unit of Measure;Code10 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dimension Value"."Unit of Measure" WHERE (Global Dimension No.=FILTER(2),
                                                                                                                 Code=FIELD(Cost Object)));
                                                   CaptionML=[ENU=Cost Object Unit of Measure;
                                                              NOR=Kostnadsobjekt, MÜleenhet;
                                                              SVE=Kostnadsobjekt, enhet];
                                                   Editable=No }
    { 360 ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                IF Quantity <> xRec.Quantity THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF Quantity <> 0 THEN
                                                                  IF NOT (Type IN [Type::Expenses, Type::Cost]) THEN
                                                                    FIELDERROR(Type);

                                                                Amount := ROUND(Quantity * "Unit Price");
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:3;
                                                   BlankZero=Yes;
                                                   Description=Only for expenses and cost }
    { 370 ;   ;Unit Price          ;Decimal       ;OnValidate=BEGIN
                                                                IF "Unit Price" <> xRec."Unit Price" THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF "Unit Price" <> 0 THEN
                                                                  IF NOT (Type IN [Type::Expenses, Type::Cost]) THEN
                                                                    FIELDERROR(Type);

                                                                Amount := ROUND(Quantity * "Unit Price");
                                                              END;

                                                   CaptionML=[ENU=Unit Price;
                                                              NOR=Enhetspris;
                                                              SVE=A-pris];
                                                   BlankNumbers=BlankNeg;
                                                   BlankZero=Yes;
                                                   Description=Only for expenses and cost;
                                                   AutoFormatType=2 }
    { 380 ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                IF Amount <> xRec.Amount THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF Amount <> 0 THEN BEGIN
                                                                  IF NOT (Type IN [Type::Expenses, Type::Cost]) THEN
                                                                    FIELDERROR(Type);
                                                                  TESTFIELD(Quantity);
                                                                END;

                                                                IF Quantity = 0 THEN
                                                                  "Unit Price" := 0
                                                                ELSE BEGIN
                                                                  GLSetupRec.GET;
                                                                  "Unit Price" := ROUND((Amount / Quantity), GLSetupRec."Unit-Amount Rounding Precision");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              NOR=Belõp;
                                                              SVE=Belopp];
                                                   BlankZero=Yes;
                                                   Description=Only for expenses and cost;
                                                   AutoFormatType=1 }
    { 430 ;   ;Comment             ;Text100       ;OnValidate=BEGIN
                                                                IF Comment <> xRec.Comment THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=[ENU=Comment;
                                                              NOR=Kommentar;
                                                              SVE=Kommentar] }
    { 440 ;   ;Location Description;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Location".Description WHERE (Code=FIELD(Plant Location)));
                                                   CaptionML=[ENU=Location Description;
                                                              NOR=Beskrivelse av lokasjon;
                                                              SVE=Beskrivning av lagerstÑlle];
                                                   Editable=No }
    { 450 ;   ;Invoiced            ;Boolean       ;CaptionML=[ENU=Invoiced;
                                                              NOR=Fakturert;
                                                              SVE=Fakt. intÑkt];
                                                   Editable=No }
    { 460 ;   ;Invoice No.         ;Code20        ;TableRelation=IF (Invoice Status=CONST(Proposal)) "Sales Header".No. WHERE (Document Type=CONST(Invoice Proposal))
                                                                 ELSE IF (Invoice Status=CONST(Temporary)) "Sales Header".No. WHERE (Document Type=CONST(Invoice))
                                                                 ELSE IF (Invoice Status=CONST(Posted)) "Sales Invoice Header".No.;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Invoice No.;
                                                              NOR=Fakturanr.;
                                                              SVE=Fakturanummer];
                                                   Editable=No }
    { 465 ;   ;Invoice Line No.    ;Integer       ;CaptionML=[ENU=Invoice Line No.;
                                                              NOR=Fakturaradnr.;
                                                              SVE=Fakturaradnr];
                                                   Editable=No }
    { 470 ;   ;Invoice Status      ;Option        ;CaptionML=[ENU=Invoice Status;
                                                              NOR=Fakturastatus;
                                                              SVE=Invoice Status];
                                                   OptionCaptionML=[ENU=,Proposal,Temporary,Posted;
                                                                    NOR=,Forslag,Midlertidig,Bokfõrt;
                                                                    SVE=,Fîrslag,TillfÑlligt,Bokfîrt];
                                                   OptionString=,Proposal,Temporary,Posted;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 490 ;   ;Origin              ;Option        ;CaptionML=[ENU=Origin;
                                                              NOR=Utstedt;
                                                              SVE=Origin];
                                                   OptionCaptionML=ENU=Plant,Hour Accounting,Resource Request;
                                                   OptionString=Plant,HourAcc,ResourceRequest;
                                                   Editable=No }
    { 495 ;   ;Employee Company    ;Text30        ;TableRelation=Company;
                                                   OnValidate=BEGIN
                                                                IF "Employee Company" = COMPANYNAME THEN
                                                                  "Employee Company" := '';
                                                              END;

                                                   CaptionML=[ENU=Employee Company;
                                                              NOR=Ansattes selskap;
                                                              SVE=Den anstÑlldes fîretag];
                                                   Description=Only allowed for hours from 'Hour Accounting', so field not editable;
                                                   Editable=No }
    { 500 ;   ;Element             ;Code20        ;OnValidate=BEGIN
                                                                IF Element <> xRec.Element THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF Element = '' THEN
                                                                  EXIT;
                                                                TESTFIELD("Plant Location");
                                                                PlantElementMgtCU.OnValidateElement("Plant Location", Element, '', FALSE);
                                                              END;

                                                   OnLookup=VAR
                                                              lvNewElement@1100525000 : Code[20];
                                                            BEGIN
                                                              lvNewElement := PlantElementMgtCU.OnLookupElement("Plant Location", Element, '', Status=Status::Open);
                                                              IF (lvNewElement <> '') AND (lvNewElement <> Element) THEN
                                                                VALIDATE(Element, lvNewElement);
                                                            END;

                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 510 ;   ;Wage Component      ;Code10        ;TableRelation="Wage Component".Code WHERE (Component Type=FILTER(Hours));
                                                   CaptionML=[ENU=Wage Component;
                                                              NOR=Lõnnsart;
                                                              SVE=Lîneart];
                                                   Description=Only allowed for hours from 'Hour Accounting', so field not editable (only Hours for Sales Hour Rate for Rate Code for Employee);
                                                   Editable=No }
    { 520 ;   ;Resource Request No.;Code20        ;TableRelation=IF (Resource Req. Receiv. Company=FILTER('')) "Resource Request";
                                                   OnValidate=VAR
                                                                PlantLocation@1100529000 : Record 11012554;
                                                                ResourceRequest@1100529001 : Record 11124901;
                                                              BEGIN
                                                                //DP01195
                                                                IF "Resource Request No." <> '' THEN BEGIN
                                                                  TESTFIELD("Plant Location");
                                                                  PlantLocation.GET("Plant Location");
                                                                  IF (PlantLocation."Project No." = '') AND (PlantLocation."Service Order No." = '') THEN
                                                                    FIELDERROR("Resource Request No.", Text006);
                                                                  ResourceRequest.CHANGECOMPANY("Resource Req. Receiv. Company");
                                                                  ResourceRequest.GET("Resource Request No.");
                                                                  IF NOT (ResourceRequest."Source Type" IN [ResourceRequest."Source Type"::Project, ResourceRequest."Source Type"::ServiceOrder]) THEN
                                                                    ResourceRequest.FIELDERROR("Source Type");
                                                                  CASE ResourceRequest."Source Type" OF
                                                                    ResourceRequest."Source Type"::Project:
                                                                      ResourceRequest.TESTFIELD("Source No.", PlantLocation."Project No.");
                                                                    ResourceRequest."Source Type"::ServiceOrder:
                                                                      ResourceRequest.TESTFIELD("Source No.", PlantLocation."Service Order No.");
                                                                  END;
                                                                  ResourceRequest.CheckResRequestReceivCompany(PlantLocation."Company Name", PlantLocation.CURRENTCOMPANY);
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              PlantLocation@1100529001 : Record 11012554;
                                                              ResourceRequest@1100529000 : Record 11124901;
                                                            BEGIN
                                                              IF "Plant Location" = '' THEN
                                                                EXIT;
                                                              PlantLocation.GET("Plant Location");
                                                              IF (PlantLocation."Project No." = '') AND (PlantLocation."Service Order No." = '') THEN
                                                                EXIT;
                                                              ResourceRequest.CHANGECOMPANY("Resource Req. Receiv. Company");
                                                              ResourceRequest.SetFilterOnReceivingCompany(PlantLocation."Company Name", PlantLocation.CURRENTCOMPANY);
                                                              ResourceRequest.SETCURRENTKEY("Source Type", "Source No.");
                                                              IF PlantLocation."Project No." <> '' THEN BEGIN
                                                                ResourceRequest.SETRANGE("Source Type", ResourceRequest."Source Type"::Project);
                                                                ResourceRequest.SETRANGE("Source No.", PlantLocation."Project No.");
                                                              END ELSE BEGIN
                                                                ResourceRequest.SETRANGE("Source Type", ResourceRequest."Source Type"::ServiceOrder);
                                                                ResourceRequest.SETRANGE("Source No.", PlantLocation."Service Order No.");
                                                              END;
                                                              ResourceRequest."No." := "Resource Request No.";
                                                              IF Status <> Status::Open THEN
                                                                PAGE.RUNMODAL(0, ResourceRequest)
                                                              ELSE BEGIN
                                                                IF PAGE.RUNMODAL(0, ResourceRequest) = ACTION::LookupOK THEN
                                                                  VALIDATE("Resource Request No.", ResourceRequest."No.");
                                                              END;
                                                            END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Request No.;
                                                              NOR=Forespõrselnr.;
                                                              SVE=Nr fîr fîrfrÜgan] }
    { 530 ;   ;Description (Cost)  ;Text50        ;OnValidate=BEGIN
                                                                IF "Description (Cost)" <> '' THEN
                                                                  TESTFIELD(Type, Type::Cost);
                                                              END;

                                                   CaptionML=ENU=Description (Cost);
                                                   Description=Request: Transport Cost }
    { 531 ;   ;Unit of Measure (Cost);Code10      ;TableRelation="Unit of Measure";
                                                   OnValidate=BEGIN
                                                                IF "Unit of Measure (Cost)" <> '' THEN
                                                                  TESTFIELD(Type, Type::Cost);
                                                              END;

                                                   CaptionML=ENU=Unit of Measure (Cost);
                                                   Description=Request: Transport Cost }
    { 540 ;   ;Resource Req. Receiv. Company;Text30;
                                                   TableRelation=Company;
                                                   OnValidate=BEGIN
                                                                IF xRec."Resource Req. Receiv. Company" <> "Resource Req. Receiv. Company" THEN
                                                                 "Resource Request No." := '';
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Resource Request Receiving Company }
  }
  KEYS
  {
    {    ;Year,Week,Plant Type,Plant No.,Line No. ;SumIndexFields=Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday,Total Line;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Year,Week,Plant Location,Plant Type,Plant No. }
    {    ;Invoiced,Status,Plant Location,Year,Week,Plant Type,Plant No. }
    {    ;Invoice Status,Invoice No.               }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GLSetupRec@1100485004 : Record 98;
      PlantSetupRec@1100525003 : Record 11012550;
      PlantLocationRec@1210190002 : Record 11012554;
      Text002@1100525002 : TextConst 'ENU=''%1'' with ''%2 %3'' not allowed if employee is not fillerd;NOR=''%1'' med ''%2 %3'' er ikke tillatt hvis ansatt ikke har fylt ut;SVE=''%1'' med ''%2 %3'' Ñr inte tillÜtet om anstÑlld inte har fyllts i';
      Text003@1210190003 : TextConst 'ENU=%1 %2 is not deleted.;NOR=%1 %2 er ikke fjernet.;SVE=%1 %2 Ñr inte borttaget.';
      Text004@1210190001 : TextConst 'ENU=%1 is not invoiced yet. Do you still want to delete the %1?;NOR=%1 er enda ikke fakturert. Vil du fortsatt fjerne %1?;SVE=%1 Ñr Ñnnu inte fakturerad. Vill du fortfarande ta bort %1?';
      Text005@1210190000 : TextConst 'ENU=%1 is not invoiced completely. Do you still want to delete the %1?;NOR=%1 er enda ikke fullstendig fakturert. Vil du fortsatt fjerne %1?;SVE=%1 Ñr Ñnnu inte helt fakturerad. Vill du fortfarande ta bort %1?';
      PlantRateCodeRec@1100525001 : Record 11020502;
      DimValRec@1100485002 : Record 349;
      DimMgtCu@1100485001 : Codeunit 408;
      PlantElementMgtCU@1100525000 : Codeunit 11012582;
      Text006@1100529000 : TextConst 'ENU=only allowed for a plant location that is linked to a project or service order';
      Text000@1100527350 : TextConst 'ENU=Description;SVE=Beskrivning';

    PROCEDURE InitRecord@1100485001();
    BEGIN
      Status := Status::Open;
      Invoiced := FALSE;
      "Invoice No." := '';
      "Invoice Line No." := 0;
      "Invoice Status" := 0;
      Origin := Origin::Plant;
      "Employee Company" := '';
    END;

    PROCEDURE "Total Hours"@1();
    BEGIN
      "Total Line" := Monday + Tuesday + Wednesday + Thursday + Friday + Saturday + Sunday;
    END;

    PROCEDURE DeleteAllowed@1210190000() : Boolean;
    BEGIN
      IF NOT Invoiced THEN BEGIN
        IF NOT CONFIRM(STRSUBSTNO(
          Text004,
          TABLECAPTION))
        THEN
          EXIT(FALSE);
      END ELSE
        IF "Invoice Status" IN ["Invoice Status"::Proposal,"Invoice Status"::"Temporary"] THEN
          IF NOT CONFIRM(STRSUBSTNO(
            Text005,TABLECAPTION))
          THEN
            EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE GetUnitPrice@1100485000(IDate@1100485003 : Date;IGiveMess@1100485004 : Integer) UnitPrice : Decimal;
    VAR
      lvSearchRate@1100485002 : Codeunit 11012567;
      lvFirstHrsDateWeek@1100485000 : Date;
      lvRateDate@1100485001 : Date;
    BEGIN
      UnitPrice := 0;
      IF (Year = 0) OR (Week = 0) OR ("Plant Type" = '') THEN
        EXIT;

      lvRateDate := IDate;
      IF lvRateDate <> 0D THEN BEGIN
        IF (lvRateDate < DWY2DATE(1, Week, Year)) OR (lvRateDate > DWY2DATE(7,Week,Year)) THEN
          lvRateDate := 0D;
      END;

      IF lvRateDate = 0D THEN BEGIN
        lvFirstHrsDateWeek := 0D;
        IF (lvFirstHrsDateWeek = 0D) AND (Monday <> 0) THEN lvFirstHrsDateWeek := DWY2DATE(1,Week,Year);
        IF (lvFirstHrsDateWeek = 0D) AND (Tuesday <> 0) THEN lvFirstHrsDateWeek := DWY2DATE(2,Week,Year);
        IF (lvFirstHrsDateWeek = 0D) AND (Wednesday <> 0) THEN lvFirstHrsDateWeek := DWY2DATE(3,Week,Year);
        IF (lvFirstHrsDateWeek = 0D) AND (Thursday <> 0) THEN lvFirstHrsDateWeek := DWY2DATE(4,Week,Year);
        IF (lvFirstHrsDateWeek = 0D) AND (Friday <> 0) THEN lvFirstHrsDateWeek := DWY2DATE(5,Week,Year);
        IF (lvFirstHrsDateWeek = 0D) AND (Saturday <> 0) THEN lvFirstHrsDateWeek := DWY2DATE(6,Week,Year);
        IF (lvFirstHrsDateWeek = 0D) AND (Sunday <> 0) THEN lvFirstHrsDateWeek := DWY2DATE(7,Week,Year);
        IF (lvFirstHrsDateWeek = 0D) THEN lvFirstHrsDateWeek := DWY2DATE(1, Week, Year);
        lvRateDate := lvFirstHrsDateWeek;
      END;

      lvSearchRate.SetExtraSelectionGetEmplRate("Employee Company", "Wage Component");
      UnitPrice := lvSearchRate.Rate("Plant Location","Plant Type","Plant No.","Rate Code",lvRateDate,3,IGiveMess,"Employee No.");
    END;

    PROCEDURE GetUnitPriceExpenses@1100485003() UnitPriceExp : Decimal;
    VAR
      lvEmplPriceCostObjectRec@1100485000 : Record 11020259;
    BEGIN
      UnitPriceExp := 0;

      IF "Employee No." <> '' THEN BEGIN
        IF "Employee Company" <> '' THEN
          lvEmplPriceCostObjectRec.CHANGECOMPANY("Employee Company");
        lvEmplPriceCostObjectRec.SETRANGE("Employee No.","Employee No.");
        lvEmplPriceCostObjectRec.SETRANGE("Cost Object","Cost Object");
        lvEmplPriceCostObjectRec.SETRANGE("Starting Date", 0D, DWY2DATE(7,Week,Year));
        IF lvEmplPriceCostObjectRec.FINDLAST THEN BEGIN
          UnitPriceExp := lvEmplPriceCostObjectRec."Cost Price";
          EXIT;
        END;
      END;

      DimMgtCu.GetDimValueRec(2, "Cost Object", DimValRec, FALSE, '');
      UnitPriceExp := DimValRec.Price;
    END;

    PROCEDURE GetEmployeeName@1100525000() : Text[250];
    VAR
      lvEmplRec@1100525000 : Record 5200;
    BEGIN
      IF ("Employee No." <> '') AND ("Employee Company" <> '') THEN BEGIN
        lvEmplRec.CHANGECOMPANY("Employee Company");
        IF lvEmplRec.GET("Employee No.") THEN
          EXIT(lvEmplRec."Full Name")
      END ELSE BEGIN
        CALCFIELDS("Employee Name");
        EXIT("Employee Name");
      END;
      EXIT('');
    END;

    PROCEDURE ResourceRequestDescription@1100529000() : Text;
    VAR
      ResourceRequest@1100529000 : Record 11124901;
    BEGIN
      IF ("Resource Request No." <> '') THEN BEGIN
        ResourceRequest.CHANGECOMPANY("Resource Req. Receiv. Company");
        IF ResourceRequest.GET("Resource Request No.") THEN
          EXIT(ResourceRequest.Description);
      END;
      EXIT;
    END;

    BEGIN
    {
      07-10-2002 Cor Hofman: Copied from table "Hour Accounting Line" for "Plant Hour Accounting"
    }
    END.
  }
}

