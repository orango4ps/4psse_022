OBJECT Page 11125271 Service Unit Price List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Unit Price List;
               NOR=Service, enhetsprisliste;
               SVE=Radlista ”ver enhetspriser f”r service];
    SourceTable=Table11071769;
    PageType=List;
    CardPageID=Service Unit Price;
    OnInit=BEGIN
             CopyBtnEnable := TRUE;
             ShowHeaders := TRUE;
             ShowAdministrative := TRUE;
             ShowSummaryElements := FALSE;
           END;

    OnOpenPage=BEGIN
                 CopyBtnEnable := IsCopyProcess;
                 CurrPage.EDITABLE(NOT IsCopyProcess);
                 IF (IsCopyProcess) THEN BEGIN
                   FILTERGROUP(9);
                   SETRANGE("Price Book Type", PriceBookType);
                   SETRANGE("Price Book Code", UnitPriceCode);
                   SETRANGE("Index Date", UnitPriceIndexDate);
                   FILTERGROUP(0);
                   SETFILTER(Part, '%1|%2', '', UnitPricePart); // Not mandatory
                 END;
                 ApplyFilters;
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528614;1 ;Action    ;
                      CaptionML=[DEU=Kopfzeilen;
                                 ENU=Header Lines;
                                 NLD=Kopregels;
                                 NOR=Topptekstlinjer;
                                 SVE=Rubrikrader];
                      Promoted=Yes;
                      Image=FilterLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowHeaders := NOT ShowHeaders;
                                 ApplyFilters;
                               END;
                                }
      { 1100528617;1 ;Action    ;
                      CaptionML=[DEU=Administratives Element;
                                 ENU=Administrative Element;
                                 NLD=Administratieve posten];
                      Promoted=Yes;
                      Image=FilterLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowAdministrative := NOT ShowAdministrative;
                                 ApplyFilters;
                               END;
                                }
      { 1100528616;1 ;Action    ;
                      CaptionML=[DEU=Endblattelement;
                                 ENU=Summary Element;
                                 NLD=Staartposten];
                      Promoted=Yes;
                      Image=FilterLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowSummaryElements := NOT ShowSummaryElements;
                                 ApplyFilters;
                               END;
                                }
      { 1100528620;1 ;Action    ;
                      Name=CopyBtn;
                      CaptionML=[DEU=Kopieren;
                                 ENU=Copy;
                                 NLD=Kopi‰ren;
                                 NOR=KOPIER;
                                 SVE=KOPIA];
                      Promoted=Yes;
                      Enabled=CopyBtnEnable;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopyUnitPriceLines;
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100528600;1;Group  ;
                GroupType=Repeater }

    { 1100528601;2;Field  ;
                SourceExpr="Price Book Type" }

    { 1100528603;2;Field  ;
                SourceExpr="Price Book Code" }

    { 1100528605;2;Field  ;
                SourceExpr="Index Date" }

    { 1100528607;2;Field  ;
                SourceExpr=Code }

    { 1100528609;2;Field  ;
                SourceExpr=Description }

    { 1100528606;2;Field  ;
                SourceExpr="Description 2" }

    { 1100528608;2;Field  ;
                SourceExpr="Description 3" }

    { 1100528611;2;Field  ;
                SourceExpr="Unit Price" }

    { 1100528613;2;Field  ;
                SourceExpr="Unit of Measure" }

    { 1100528615;2;Field  ;
                SourceExpr=Quantity }

    { 1100528700;2;Field  ;
                SourceExpr=Part }

    { 1100528602;2;Field  ;
                SourceExpr=Discipline }

    { 1100528604;2;Field  ;
                SourceExpr="Trade Speciality" }

    { 1100528610;2;Field  ;
                SourceExpr="Surcharge Set Code" }

    { 1100528612;2;Field  ;
                SourceExpr="Unit Price Type" }

    { 1101285000;2;Field  ;
                SourceExpr="Payment Code" }

  }
  CODE
  {
    VAR
      IsCopyProcess@1100528600 : Boolean;
      ServiceOrderNo@1100528601 : Code[20];
      PriceBookType@1100528602 : Option;
      UnitPriceCode@1100528603 : Code[20];
      UnitPriceIndexDate@1100528604 : Date;
      UnitPriceLineCode@1100528605 : Code[20];
      UnitPricePart@1100528700 : Code[20];
      UnitPriceRoom@1100528606 : Code[20];
      CopyBtnEnable@19067989 : Boolean INDATASET;
      CopyUsed@1100528607 : Boolean;
      ShowHeaders@1100528608 : Boolean;
      ShowSummaryElements@1100528609 : Boolean;
      ShowAdministrative@1100528610 : Boolean;
      ProductionSeqNo@1100529601 : Integer;
      CopyToTableID@1100529600 : Integer;

    PROCEDURE CopyUnitPriceLines@1100528600();
    VAR
      ServiceUnitPrice@1100528600 : Record 11071769;
      OldServiceUnitPrice@1100525000 : Record 11071769;
      SUPRecordingLine@1100528601 : Record 11071772;
      SUPRoomRelationLine@1100528602 : Record 11071983;
      SUPProductionLine@1100529600 : Record 11071774;
      ServiceOrderCostPlusEntry@1100528500 : Record 11012825;
      LineNo@1100528603 : Integer;
    BEGIN
      IF NOT IsCopyProcess THEN
        EXIT;

      CopyUsed := TRUE;

      OldServiceUnitPrice.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(Rec);
      ServiceUnitPrice.COPY(Rec);
      Rec.COPY(OldServiceUnitPrice);

      CASE CopyToTableID OF
        DATABASE::"SUP Recording Line":
          IF ServiceOrderNo <> '' THEN BEGIN
            SUPRecordingLine.SETRANGE("Service Order No.", ServiceOrderNo);
            IF SUPRecordingLine.FINDLAST THEN
              LineNo := SUPRecordingLine."Line No.";
            IF ServiceUnitPrice.FINDSET THEN
              REPEAT
                LineNo += 10000;
                SUPRecordingLine.INIT;
                SUPRecordingLine."Service Order No." := ServiceOrderNo;
                SUPRecordingLine."Line No." := LineNo;
                SUPRecordingLine."Price Book Type" := ServiceUnitPrice."Price Book Type";
                SUPRecordingLine."Price Book Code" := ServiceUnitPrice."Price Book Code";
                SUPRecordingLine."Index Date" := ServiceUnitPrice."Index Date";
                SUPRecordingLine.VALIDATE("Unit Price Code", ServiceUnitPrice.Code);
                SUPRecordingLine.VALIDATE("Quantity Recording");
                SUPRecordingLine.VALIDATE("Recording Quantity");
                SUPRecordingLine.Part := ServiceUnitPrice.Part;
                SUPRecordingLine.Room := UnitPriceRoom;
                IF SUPRecordingLine.INSERT(TRUE) THEN;
              UNTIL ServiceUnitPrice.NEXT = 0;
          END;

        DATABASE::"SUP Production Line":
          IF (ServiceOrderNo <> '') AND (ProductionSeqNo <> 0) THEN BEGIN
            SUPProductionLine.SETRANGE("Service Order No.", ServiceOrderNo);
            SUPProductionLine.SETRANGE("Production Seq. No.", ProductionSeqNo);
            IF SUPProductionLine.FINDLAST THEN
              LineNo := SUPProductionLine."Line No.";
            IF ServiceUnitPrice.FINDSET THEN
              REPEAT
                LineNo += 10000;
                SUPProductionLine.INIT;
                SUPProductionLine."Service Order No." := ServiceOrderNo;
                SUPProductionLine."Production Seq. No." := ProductionSeqNo;
                SUPProductionLine."Line No." := LineNo;
                SUPProductionLine."Price Book Type" := ServiceUnitPrice."Price Book Type";
                SUPProductionLine."Price Book Code" := ServiceUnitPrice."Price Book Code";
                SUPProductionLine."Index Date" := ServiceUnitPrice."Index Date";
                SUPProductionLine.VALIDATE("Unit Price Code", ServiceUnitPrice.Code);
                SUPProductionLine.Part := ServiceUnitPrice.Part;
                SUPProductionLine.Room := UnitPriceRoom;
                IF SUPProductionLine.INSERT(TRUE) THEN;
              UNTIL ServiceUnitPrice.NEXT = 0;
          END;

        DATABASE::"SUP Room Relation Line":
          IF (ServiceOrderNo = '') AND (PriceBookType = SUPRoomRelationLine."Price Book Type"::Customer) THEN BEGIN
            SUPRoomRelationLine.SETRANGE("Customer No.", ServiceUnitPrice."Price Book Code");
            SUPRoomRelationLine.SETRANGE("Room Code", UnitPriceRoom);
            SUPRoomRelationLine.SETRANGE("Index Date", ServiceUnitPrice."Index Date");
            IF SUPRoomRelationLine.FINDLAST THEN
              LineNo := SUPRoomRelationLine."Line No.";
            IF ServiceUnitPrice.FINDSET THEN
              REPEAT
                LineNo += 10000;
                SUPRoomRelationLine.INIT;
                SUPRoomRelationLine."Line No." := LineNo;
                SUPRoomRelationLine."Customer No." := ServiceUnitPrice."Price Book Code";
                SUPRoomRelationLine."Room Code" := UnitPriceRoom;
                SUPRoomRelationLine."Index Date" := ServiceUnitPrice."Index Date";
                SUPRoomRelationLine."Price Book Type" := ServiceUnitPrice."Price Book Type";
                SUPRoomRelationLine."Price Book Code" := ServiceUnitPrice."Price Book Code";
                SUPRoomRelationLine."Unit Price Code" := ServiceUnitPrice.Code;
                SUPRoomRelationLine.INSERT(TRUE);
              UNTIL ServiceUnitPrice.NEXT = 0;
          END;

        DATABASE::"Service Order Cost Plus Entry":
          IF ServiceOrderNo <> '' THEN BEGIN
            ServiceOrderCostPlusEntry.SETRANGE("Service Order No.", ServiceOrderNo);
            IF ServiceOrderCostPlusEntry.FINDLAST THEN
              LineNo := ServiceOrderCostPlusEntry."Line No.";
            IF ServiceUnitPrice.FINDSET THEN
              REPEAT
                LineNo += 10000;
                ServiceOrderCostPlusEntry.INIT;
                ServiceOrderCostPlusEntry.VALIDATE("Service Order No.", ServiceOrderNo);
                ServiceOrderCostPlusEntry."Line No." := LineNo;
                ServiceOrderCostPlusEntry."Price Book Code" := ServiceUnitPrice."Price Book Code";
                ServiceOrderCostPlusEntry."Unit Price Index Date" := ServiceUnitPrice."Index Date";
                ServiceOrderCostPlusEntry.VALIDATE("Unit Price Code", ServiceUnitPrice.Code);
                ServiceOrderCostPlusEntry."Unit Price Room" := UnitPriceRoom;
                IF ServiceOrderCostPlusEntry.INSERT(TRUE) THEN;
              UNTIL ServiceUnitPrice.NEXT = 0;
          END;

      END;
    END;

    PROCEDURE SetCopyFilter@1100528601(SONo@1100528605 : Code[20];UPType@1100528604 : Option;UPCode@1100528603 : Code[20];UPIndexDate@1100528602 : Date;UPLineCode@1100528601 : Code[20];UPPart@1100528700 : Code[20];UPRoom@1100528600 : Code[20];NewProductionSeqNo@1100529601 : Integer;NewCopyToTableID@1100529600 : Integer);
    BEGIN
      IsCopyProcess := TRUE;
      ServiceOrderNo := SONo;

      PriceBookType := UPType;
      UnitPriceCode := UPCode;
      UnitPriceIndexDate := UPIndexDate;
      UnitPriceLineCode := UPLineCode;
      UnitPricePart := UPPart;
      UnitPriceRoom := UPRoom;
      ProductionSeqNo := NewProductionSeqNo;
      CopyToTableID := NewCopyToTableID;
    END;

    PROCEDURE GetCopyUsed@1100528602() : Boolean;
    BEGIN
      EXIT(CopyUsed);
    END;

    LOCAL PROCEDURE ApplyFilters@1100528603();
    VAR
      FilterText@1100528600 : Text;
    BEGIN
      IF ShowHeaders OR ShowSummaryElements OR ShowAdministrative THEN
        FilterText := STRSUBSTNO('%1', 0);
      IF ShowHeaders THEN
        FilterText := STRSUBSTNO('%1|%2', FilterText, "Unit Price Type"::Header);
      IF ShowSummaryElements THEN
        FilterText := STRSUBSTNO('%1|%2', FilterText, "Unit Price Type"::"Summary Element");
      IF ShowAdministrative THEN
        FilterText := STRSUBSTNO('%1|%2', FilterText, "Unit Price Type"::Administrative);
      SETFILTER("Unit Price Type", FilterText);
    END;

    BEGIN
    END.
  }
}

