OBJECT Page 11012350 Replace Items
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Ersetzen Artikel;
               ENU=Replace Items;
               NLD=Vervangen artikelen;
               NOR=Erstatt artikler;
               SVE=Ers„tt artiklar];
    PageType=Worksheet;
    OnOpenPage=VAR
                 NavBln@1100409005 : Boolean;
                 DiscBln@1100409004 : Boolean;
                 DiscGrpBln@1100409003 : Boolean;
                 RcpBln@1100409002 : Boolean;
                 CompRel@1100409001 : Record 11012059;
                 CentrManagementCU@1100409000 : Codeunit 11012010;
                 FPSLicenseManagement@1100528500 : Codeunit 11229289;
               BEGIN
                 ActPrice := TRUE;
                 IF FPSLicenseManagement.LicenseAndReadPermissionForTable(CompRel) THEN BEGIN  //db, 03-11-14: C018589
                   CentrManagementCU.ItemFormEditable(NavBln,DiscBln,DiscGrpBln,RcpBln);
                   UpdateRecipeProhibited := RcpBln;
                 END;
                 EstSetup.GET;  //DP00381
               END;

    OnQueryClosePage=BEGIN
                       IF (CloseAction = ACTION::OK) OR (CloseAction = ACTION::LookupOK) THEN
                         StartUpdate;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100529007;1;Group  ;
                CaptionML=[DEU=Optionen;
                           ENU=Options;
                           NLD=Opties];
                GroupType=Group }

    { 1100525012;2;Field  ;
                CaptionML=[DEU=Aktualisieren Norm/Preis;
                           ENU=Update Norm/Price;
                           NLD=Actualiseren norm/prijs;
                           NOR=Aktualiser norm/pris;
                           SVE=F”rverkliga norm/pris];
                SourceExpr=ActPrice;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100529006;1;Group  ;
                CaptionML=[DEU=Aktualisieren;
                           ENU=Update;
                           NLD=Bijwerken];
                GroupType=Group }

    { 1100525006;2;Field  ;
                CaptionML=[DEU=Kalkulationszeilen;
                           ENU=Estimate Lines;
                           NLD=Calculatieregels];
                SourceExpr=ActEst;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100525008;2;Field  ;
                CaptionML=[DEU=Kalkulationsrezepte;
                           ENU=Estimate Recipes;
                           NLD=Calculatie-recepten];
                SourceExpr=ActEstRecipe;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100525014;2;Field  ;
                CaptionML=[DEU=Standardrezepte;
                           ENU=Standard Recipes;
                           NLD=Standaard recepten;
                           NOR=Revider standardmaler;
                           SVE=Revidera standardmallar];
                SourceExpr=ActRecipe;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100525000;2;Field  ;
                CaptionML=[DEU=Standardteilzeilen (Kalkulation);
                           ENU=Base Estimate Part Lines;
                           NLD=Standaard onderdeelregels (calculatie);
                           NOR=Revider rader for basiskalkyledel;
                           SVE=Revidera rader f”r baskalkyldel];
                SourceExpr=ActEstPartLine;
                OnValidate=BEGIN
                             UpdateEditable;
                             ActEstPartLineOnAfterValidate;
                           END;
                            }

    { 1100525001;2;Field  ;
                CaptionML=[DEU=Aktualisieren Budgetzeilen (Projekt);
                           ENU=Revise Budget Lines (Project);
                           NLD=Bijwerken begrotingregels (project)];
                SourceExpr=ActProjectBudget;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1210190000;2;Field  ;
                CaptionML=[DEU=Artikelbeziehungen;
                           ENU=Item Relation;
                           NLD=Artikelrelaties;
                           NOR=Revidere artikkelrelasjon;
                           SVE=Revidera artikelrelation];
                SourceExpr=ActItemRelation;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100528608;2;Field  ;
                CaptionML=[DEU=Wartungsschemata;
                           ENU=Maintenance Schemes;
                           NLD=Onderhoudsschema's;
                           NOR=Revidere vedlikeholdsskjemaer;
                           SVE=Revidera underh†llsscheman];
                SourceExpr=ActMaintScheme;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100528610;2;Field  ;
                CaptionML=[DEU=Modifikationen;
                           ENU=Modifications;
                           NLD=Modificaties;
                           NOR=Revidere endringer;
                           SVE=Revidera „ndringar];
                SourceExpr=ActModification;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100528612;2;Field  ;
                CaptionML=[DEU=Standardobjekte;
                           ENU=Standard Objects;
                           NLD=Standaard objecten;
                           NOR=Revidere standardobjekter;
                           SVE=Revidera standardobjekt];
                SourceExpr=ActStandardObject;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100528614;2;Field  ;
                CaptionML=[DEU=Objekte;
                           ENU=Objects;
                           NLD=Objecten;
                           NOR=Revidere objektr;
                           SVE=Revidera objekt];
                SourceExpr=ActServiceObject;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100528603;2;Field  ;
                CaptionML=[DEU=Serviceinventur;
                           ENU=Service Survey;
                           NLD=Service inventarisatie];
                SourceExpr=ActServiceSurvey;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100528605;2;Field  ;
                CaptionML=[DEU=Vorschlagsauftr„ge (Service);
                           ENU=Advice Orders (Service);
                           NLD=Adviesorders (service)];
                SourceExpr=ActServiceAdviceOrderLines;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100529100;2;Field  ;
                CaptionML=[DEU=Optionsbudget Wohnungsmodell;
                           ENU=Option Budget House Model;
                           NLD=Optiebegroting woningmodel];
                SourceExpr=ActOptionBudgetHouseModel }

    { 1100529000;2;Field  ;
                CaptionML=[DEU=Standardwerkzeugwartungsschemata;
                           ENU=Standard Plant Maintenance Schemes;
                           NLD=Standaard materieelonderhoudsschema's];
                SourceExpr=ActStndPlantMaintScheme;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100529004;2;Field  ;
                CaptionML=[DEU=Werkzeugwartungsschemata;
                           ENU=Plant Maintenance Schemes;
                           NLD=Materieelonderhoudsschema's];
                SourceExpr=ActPlantMaintScheme;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100529008;2;Field  ;
                CaptionML=[DEU=Werkzeug - Materialinventur;
                           ENU=Plant - Material Inventory;
                           NLD=Materieel - materiaalinventarisatie];
                SourceExpr=ActPlantMaterialInventory;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100529005;1;Group  ;
                CaptionML=[DEU=Filter;
                           ENU=Filters;
                           NLD=Filters];
                GroupType=Group }

    { 1   ;2   ;Field     ;
                Name=EstFilter;
                CaptionML=[DEU=Kalkulation;
                           ENU=Estimate;
                           NLD=Calculatie;
                           NOR=Kalkyle;
                           SVE=Kalkyl];
                SourceExpr=EstFilter;
                Editable=EstFilterEditable;
                OnLookup=BEGIN
                           EstRec.SETFILTER("No.", EstFilter);
                           IF PAGE.RUNMODAL(PAGE::"Estimate List",EstRec) = ACTION::LookupOK THEN
                             IF (ActEst = TRUE) OR (ActEstRecipe = TRUE) THEN
                               EstFilter := EstRec."No.";
                         END;
                          }

    { 3   ;2   ;Field     ;
                Name=RcpGrpFilter;
                CaptionML=[DEU=Rezeptgruppe;
                           ENU=Recipe Group;
                           NLD=Receptgroep;
                           NOR=Maltype;
                           SVE=Malltyp];
                SourceExpr=RcpGrpFilter;
                Editable=RcpGrpFilterEditable;
                OnLookup=BEGIN
                           LookupRecipeGroup;
                         END;
                          }

    { 1100525016;2;Field  ;
                Name=RcpFilter;
                CaptionML=[DEU=Rezept;
                           ENU=Recipe;
                           NLD=Recept;
                           NOR=Mal;
                           SVE=Mall];
                SourceExpr=RcpFilter;
                Editable=RcpFilterEditable;
                OnLookup=BEGIN
                           LookupRecipe;
                         END;
                          }

    { 1100525004;2;Field  ;
                Name=PartGrpFilter;
                CaptionML=[DEU=Teilgruppe (Kalkulation);
                           ENU=Estimate Part Group;
                           NLD=Onderdeelgroep (calculatie);
                           NOR=Kalkyle Í delgruppe;
                           SVE=Kalkyl Í delgrupp];
                SourceExpr=EstPartGrpFilter;
                Editable=EstPartGrpFilterEditable;
                OnLookup=BEGIN
                           LookupPartGroup;
                         END;
                          }

    { 1100525002;2;Field  ;
                Name=PartFilter;
                CaptionML=[DEU=Standardkalkulationsteil;
                           ENU=Base Estimate Part;
                           NLD=Standaard onderdeel (calculatie);
                           NOR=Basiskalkyledel;
                           SVE=Baskalkyldel];
                SourceExpr=EstPartFilter;
                Editable=EstPartFilterEditable;
                OnLookup=BEGIN
                           LookupPart;
                         END;
                          }

    { 1100525003;2;Field  ;
                Name=ProjectFilter;
                CaptionML=[DEU=Projekt;
                           ENU=Project;
                           NLD=Project];
                SourceExpr=ProjectFilter;
                Editable=ProjectFilterEditable;
                OnLookup=BEGIN
                           ProjRec.SETFILTER("No.", ProjectFilter);
                           IF PAGE.RUNMODAL(0,ProjRec) = ACTION::LookupOK THEN
                             IF (ActProjectBudget = TRUE) THEN
                               ProjectFilter := ProjRec."No.";
                         END;
                          }

    { 1100528600;2;Field  ;
                Name=MaintSchemeFilter;
                CaptionML=[DEU=Wartungsschema (Objekte);
                           ENU=Maintenance Scheme (Objects);
                           NLD=Onderhoudsschema (objecten);
                           NOR=Vedlikeholdsskjema (objekt);
                           SVE=Underh†llsschema (objekt)];
                SourceExpr=MaintSchemeFilter;
                Editable=MaintSchemeFilterEditable;
                OnLookup=BEGIN
                           IF PAGE.RUNMODAL(0, MaintenanceScheme) = ACTION::LookupOK THEN
                             IF ActMaintScheme THEN
                               MaintSchemeFilter := MaintenanceScheme.Code;
                         END;
                          }

    { 1100528602;2;Field  ;
                Name=ModificationFilter;
                CaptionML=[DEU=Modifikation (Objekte);
                           ENU=Modification (objecten);
                           NLD=Modificatie (objecten);
                           NOR=Endring (objekt);
                           SVE=Žndring (objekt)];
                SourceExpr=ModificationFilter;
                Editable=ModificationFilterEditable;
                OnLookup=BEGIN
                           ObjectModification.SETFILTER("No.", ModificationFilter);
                           IF PAGE.RUNMODAL(0, ObjectModification) = ACTION::LookupOK THEN
                             IF ActModification THEN
                               ModificationFilter := ObjectModification."No.";
                         END;
                          }

    { 1100528604;2;Field  ;
                Name=StandardObjectFilter;
                CaptionML=[DEU=Standardobjekt;
                           ENU=Standard Object;
                           NLD=Standaard object;
                           NOR=Standardobjekt;
                           SVE=Standardobjekt:];
                SourceExpr=StandardObjectFilter;
                Editable=StandardObjectFilterEditable;
                OnLookup=BEGIN
                           StandardObject.SETFILTER("No.", StandardObjectFilter);
                           IF PAGE.RUNMODAL(0, StandardObject) = ACTION::LookupOK THEN
                             IF ActStandardObject THEN
                               StandardObjectFilter := StandardObject."No.";
                         END;
                          }

    { 1100528606;2;Field  ;
                Name=ServiceObjectFilter;
                CaptionML=[DEU=Objekt;
                           ENU=Object;
                           NLD=Object;
                           NOR=Objekt;
                           SVE=Objekt];
                SourceExpr=ServiceObjectFilter;
                Editable=ServiceObjectFilterEditable;
                OnLookup=BEGIN
                           ServiceObject.SETFILTER("No.", ServiceObjectFilter);
                           IF PAGE.RUNMODAL(0, ServiceObject) = ACTION::LookupOK THEN
                             IF ActServiceObject THEN
                               ServiceObjectFilter := ServiceObject."No.";
                         END;
                          }

    { 1100528601;2;Field  ;
                CaptionML=[DEU=Serviceinventur;
                           ENU=Service Survey;
                           NLD=Service inventarisatie;
                           NOR=Servicekartlegging;
                           SVE=Servicekartl„ggning];
                SourceExpr=ServiceSurveyFilter;
                Editable=ServiceSurveyFilterEditable;
                OnLookup=VAR
                           ServiceSurvey@1100528600 : Record 11071803;
                         BEGIN
                           ServiceSurvey.SETFILTER("No.", ServiceSurveyFilter);
                           IF PAGE.RUNMODAL(0, ServiceSurvey) = ACTION::LookupOK THEN
                             IF ActServiceSurvey THEN
                               ServiceSurveyFilter := ServiceSurvey."No.";
                         END;
                          }

    { 1100528607;2;Field  ;
                CaptionML=[DEU=Serviceauftrag;
                           ENU=Service Order;
                           NLD=Serviceorder;
                           NOR=Serviceordre;
                           SVE=Serviceorder];
                SourceExpr=ServiceOrderFilter;
                Editable=ServiceOrderFilterEditable;
                OnLookup=VAR
                           ServiceOrder@1100528600 : Record 11012823;
                         BEGIN
                           ServiceOrder.SETFILTER("No.", ServiceOrderFilter);
                           IF PAGE.RUNMODAL(0, ServiceOrder) = ACTION::LookupOK THEN
                             IF ActServiceAdviceOrderLines THEN
                               ServiceOrderFilter := ServiceOrder."No.";
                         END;
                          }

    { 1100529102;2;Field  ;
                CaptionML=[DEU=Wohnungsmodell;
                           ENU=House Model;
                           NLD=Woningmodel];
                SourceExpr=HouseModelFilter;
                Editable=ActOptionBudgetHouseModel;
                OnValidate=BEGIN
                             HouseModelFilter := UPPERCASE(HouseModelFilter);
                           END;

                OnLookup=VAR
                           HouseModel@1100529000 : Record 11012501;
                         BEGIN
                           HouseModel.FILTERGROUP(2);
                           HouseModel.SETRANGE("Project No.", '');
                           HouseModel.FILTERGROUP(0);
                           IF NOT ActOptionBudgetHouseModel THEN
                             PAGE.RUNMODAL(PAGE::"House Model List", HouseModel)
                           ELSE BEGIN
                             IF PAGE.RUNMODAL(PAGE::"House Model List", HouseModel) = ACTION::LookupOK THEN BEGIN
                               Text := Text + HouseModel.Model;
                               EXIT(TRUE);
                             END;
                           END;
                         END;
                          }

    { 1100529001;2;Field  ;
                CaptionML=[DEU=Werkzeugwartungsschema;
                           ENU=Plant Maintenance Scheme;
                           NLD=Materieelonderhoudsschema];
                SourceExpr=PlantMaintSchemeFilter;
                Editable=PlantMaintSchemeFilterEditable;
                OnValidate=BEGIN
                             PlantMaintSchemeFilter := UPPERCASE(PlantMaintSchemeFilter);
                           END;

                OnLookup=VAR
                           PlantStndMaintenanceScheme@1100529000 : Record 11072673;
                         BEGIN
                           IF NOT PlantMaintSchemeFilterEditable THEN
                             PAGE.RUNMODAL(0, PlantStndMaintenanceScheme)
                           ELSE BEGIN
                             IF PAGE.RUNMODAL(0, PlantStndMaintenanceScheme) = ACTION::LookupOK THEN BEGIN
                               Text := Text + PlantStndMaintenanceScheme.Code;
                               EXIT(TRUE);
                             END;
                           END;
                         END;
                          }

    { 1100529002;2;Field  ;
                CaptionML=[DEU=Werkzeugart;
                           ENU=Plant Type;
                           NLD=Materieelsoort];
                SourceExpr=PlantTypeFilter;
                Editable=PlantTypeFilterEditable;
                OnValidate=BEGIN
                             PlantTypeFilter := UPPERCASE(PlantTypeFilter);
                           END;

                OnLookup=VAR
                           PlantType@1100529000 : Record 11012551;
                         BEGIN
                           IF NOT PlantTypeFilterEditable THEN
                             PAGE.RUNMODAL(0, PlantType)
                           ELSE BEGIN
                             IF PAGE.RUNMODAL(0, PlantType) = ACTION::LookupOK THEN BEGIN
                               Text := Text + PlantType.Code;
                               EXIT(TRUE);
                             END;
                           END;
                         END;
                          }

    { 1100529003;2;Field  ;
                CaptionML=[DEU=Werkzeugnr.;
                           ENU=Plant No.;
                           NLD=Materieelnummer];
                SourceExpr=PlantNoFilter;
                Editable=PlantTypeFilterEditable;
                OnValidate=BEGIN
                             PlantNoFilter := UPPERCASE(PlantNoFilter);
                           END;

                OnLookup=VAR
                           PlantNumber@1100529000 : Record 11012552;
                         BEGIN
                           IF PlantTypeFilter <> '' THEN
                             PlantNumber.SETFILTER("Plant Type", PlantTypeFilter);
                           IF NOT PlantTypeFilterEditable THEN
                             PAGE.RUNMODAL(0, PlantNumber)
                           ELSE BEGIN
                             IF PAGE.RUNMODAL(0, PlantNumber) = ACTION::LookupOK THEN BEGIN
                               Text := Text + PlantNumber."No." ;
                               EXIT(TRUE);
                             END;
                           END;
                         END;
                          }

  }
  CODE
  {
    VAR
      EstFilter@11012000 : Code[20];
      RcpGrpFilter@1210190001 : Code[20];
      RcpFilter@11012001 : Code[20];
      EstPartGrpFilter@1100525002 : Code[20];
      EstPartFilter@1100525001 : Code[20];
      ProjectFilter@1100525007 : Code[20];
      MaintSchemeFilter@1100528600 : Code[20];
      ModificationFilter@1100528601 : Code[20];
      StandardObjectFilter@1100528602 : Code[20];
      ServiceObjectFilter@1100528603 : Code[20];
      ServiceSurveyFilter@1100528614 : Code[20];
      ServiceOrderFilter@1100528617 : Code[20];
      HouseModelFilter@1100529100 : Text;
      PlantMaintSchemeFilter@1100529001 : Text;
      PlantTypeFilter@1100529003 : Text;
      PlantNoFilter@1100529005 : Text;
      EstSetup@1100528900 : Record 11012150;
      EstRec@11012003 : Record 11012151;
      EstGrpRec@1210190002 : Record 11012157;
      EstPartRec@1100525003 : Record 11012169;
      ProjRec@1100525015 : Record 11072003;
      MaintenanceScheme@1100528608 : Record 11071745;
      ObjectModification@1100528609 : Record 11071700;
      StandardObject@1100528610 : Record 11020334;
      ServiceObject@1100528611 : Record 11071691;
      ActEst@11012012 : Boolean;
      ActRecipe@11012013 : Boolean;
      ActEstRecipe@11012014 : Boolean;
      ActPrice@1210190000 : Boolean;
      ActEstPartLine@1100525000 : Boolean;
      Text011@1100525005 : TextConst 'DEU=Besch„ftigt mit      #1################# @2@@@@@@@@@@@@@;ENU=Busy with       #1################# @2@@@@@@@@@@@@@;NLD=Bezig met       #1################# @2@@@@@@@@@@@@@;NOR=Opptatt med       #1################# @2@@@@@@@@@@@@@;SVE=Upptagen med    #1################# @2@@@@@@@@@@@@@';
      ActProjectBudget@1100525016 : Boolean;
      ActItemRelation@1210190003 : Boolean;
      ActMaintScheme@1100528604 : Boolean;
      ActModification@1100528605 : Boolean;
      ActStandardObject@1100528606 : Boolean;
      ActServiceObject@1100528607 : Boolean;
      ActServiceSurvey@1100528612 : Boolean;
      ActServiceAdviceOrderLines@1100528615 : Boolean;
      ActOptionBudgetHouseModel@1100529101 : Boolean INDATASET;
      ActStndPlantMaintScheme@1100529000 : Boolean;
      ActPlantMaintScheme@1100529006 : Boolean;
      ActPlantMaterialInventory@1100529007 : Boolean;
      UpdateRecipeProhibited@1210190005 : Boolean;
      Text000@1210190006 : TextConst 'DEU=Update Standardrezepte wegen Zentraler Verwaltung nicht m”glich;ENU="Update base recipes not possible because of Central Management ";NLD=Update standaard recepten niet mogelijk door Centraal Beheer;NOR=Oppdatere hovedmaler er ikke mulig p† grunn av sentral ledelse;SVE="Uppdatera basmallar „r inte m”jligt p† grund av central hantering "';
      EstFilterEditable@1100525014 : Boolean;
      RcpGrpFilterEditable@1100525013 : Boolean;
      RcpFilterEditable@1100525012 : Boolean;
      EstPartGrpFilterEditable@1100525011 : Boolean;
      EstPartFilterEditable@1100525010 : Boolean;
      ProjectFilterEditable@1100525017 : Boolean;
      MaintSchemeFilterEditable@1100525009 : Boolean;
      ModificationFilterEditable@1100525008 : Boolean;
      StandardObjectFilterEditable@1100525006 : Boolean;
      ServiceObjectFilterEditable@1100525004 : Boolean;
      ServiceSurveyFilterEditable@1100528613 : Boolean;
      ServiceOrderFilterEditable@1100528616 : Boolean;
      PlantMaintSchemeFilterEditable@1100529002 : Boolean;
      PlantTypeFilterEditable@1100529004 : Boolean;

    PROCEDURE StartUpdate@1100525000();
    VAR
      ConvRec@1100525003 : Record 11012322;
      EstLineRecNEW@1100525005 : Record 11072072;
      RcpLineRecNEW@1100525006 : Record 11072075;
      BaseRcpLine@1100525008 : Record 11020582;
      MaintSchemeVersionLine@1100528601 : Record 11071744;
      PlantMaintSchemeVerLine@1100529000 : Record 11072675;
      UpdateMgt@1100525007 : Codeunit 11012229;
      ReviseAdditionalActivitities@1100528600 : Codeunit 11012833;
    BEGIN
      //db, 07-10-08: M11811
      ConvRec.SETRANGE(Select, TRUE);

      IF ActRecipe AND UpdateRecipeProhibited THEN
        ERROR(Text000);

      IF ConvRec.FINDSET THEN BEGIN
        REPEAT
          ConvRec.VALIDATE(Select);  //Check (can be modified after it is selected)
        UNTIL ConvRec.NEXT = 0;
      END;

      IF ActEst THEN BEGIN
        IF EstFilter = '' THEN
          EstLineRecNEW.SETFILTER("Estimate No.", '<>%1', '')
        ELSE
          EstLineRecNEW.SETFILTER("Estimate No.", EstFilter);
      END;

      IF ActRecipe OR ActEstRecipe THEN BEGIN
        IF ActRecipe THEN BEGIN  //db, 24-06-14: C014467
          IF RcpGrpFilter = '' THEN
            BaseRcpLine.SETFILTER("Recipe Group", '<>%1', '')
          ELSE
            BaseRcpLine.SETFILTER("Recipe Group", RcpGrpFilter);
          IF RcpFilter = '' THEN
            BaseRcpLine.SETFILTER(Recipe, '<>%1', '')
          ELSE
            BaseRcpLine.SETFILTER(Recipe, RcpFilter);
        END;
        IF ActEstRecipe THEN BEGIN  //db, 24-06-14: C014467
          IF EstFilter = '' THEN
            RcpLineRecNEW.SETFILTER("Estimate No.", '<>%1', '')
          ELSE
            RcpLineRecNEW.SETFILTER("Estimate No.", EstFilter);
          IF RcpGrpFilter = '' THEN
            RcpLineRecNEW.SETFILTER("Recipe Group", '<>%1', '')
          ELSE
            RcpLineRecNEW.SETFILTER("Recipe Group", RcpGrpFilter);
          IF RcpFilter = '' THEN
            RcpLineRecNEW.SETFILTER(Recipe, '<>%1', '')
          ELSE
            RcpLineRecNEW.SETFILTER(Recipe, RcpFilter);
        END;
      END;

      IF ActEst OR ActRecipe OR ActEstRecipe THEN BEGIN
        UpdateMgt.SetSkipFixed;  //C026777: db 24-12-15
        UpdateMgt.ReplaceItem(ConvRec, EstLineRecNEW, RcpLineRecNEW, BaseRcpLine,
          ActEst, ActEstRecipe, ActRecipe, FALSE, ActPrice);  //db, 24-06-14: C014467
      END;

      IF ActEstPartLine THEN
        ProcessEstPart(ConvRec);  //db, 23-08-10: M17540

      IF ActItemRelation THEN
        ProcessItemRelation(ConvRec);  //db, 21-06-11: M18987

      //mg.sn, 07-09-11: M27754
      IF ActMaintScheme THEN BEGIN
        MaintSchemeVersionLine.SETRANGE("Line Type", MaintSchemeVersionLine."Line Type"::"Maintenance Scheme");
        IF MaintSchemeFilter <> '' THEN
          MaintSchemeVersionLine.SETFILTER("Type Code", MaintSchemeFilter);
        ReviseAdditionalActivitities.ReviceAdditionalActivities(ConvRec, MaintSchemeVersionLine, ActPrice);
      END;

      IF ActModification THEN BEGIN
        MaintSchemeVersionLine.SETRANGE("Line Type", MaintSchemeVersionLine."Line Type"::Modification);
        IF ModificationFilter <> '' THEN
          MaintSchemeVersionLine.SETFILTER("Type Code", ModificationFilter);
        ReviseAdditionalActivitities.ReviceAdditionalActivities(ConvRec, MaintSchemeVersionLine, ActPrice);
      END;

      IF ActStandardObject THEN BEGIN
        MaintSchemeVersionLine.SETFILTER("Line Type", '%1|%2|%3',
          MaintSchemeVersionLine."Line Type"::"Standard Object",
          MaintSchemeVersionLine."Line Type"::"Standard Object Installation",
          MaintSchemeVersionLine."Line Type"::"Standard Object Deinstallation");
        IF StandardObjectFilter <> '' THEN
          MaintSchemeVersionLine.SETFILTER("Type Code", StandardObjectFilter);
        ReviseAdditionalActivitities.ReviceAdditionalActivities(ConvRec, MaintSchemeVersionLine, ActPrice);
      END;

      IF ActServiceObject THEN BEGIN
        MaintSchemeVersionLine.SETFILTER("Line Type", '%1|%2',
          MaintSchemeVersionLine."Line Type"::"Object Installation",
          MaintSchemeVersionLine."Line Type"::Object);
        IF ServiceObjectFilter <> '' THEN
          MaintSchemeVersionLine.SETFILTER("Type Code", ServiceObjectFilter);
        ReviseAdditionalActivitities.ReviceAdditionalActivities(ConvRec, MaintSchemeVersionLine, ActPrice);
      END;
      //mg.en, 07-09-11: M27754

      IF ActServiceSurvey THEN
        ProcessServiceSurvey(ConvRec);

      IF ActServiceAdviceOrderLines THEN
        ProcessServiceAdviceOrder(ConvRec);

      IF ActOptionBudgetHouseModel THEN
        ProcessOptionBudget(ConvRec);

      IF ActStndPlantMaintScheme THEN
        ProcessPlantMaintScheme(ConvRec, PlantMaintSchemeVerLine.Level::"Maintenance Scheme");
      IF ActPlantMaintScheme THEN BEGIN
        ProcessPlantMaintScheme(ConvRec, PlantMaintSchemeVerLine.Level::"Plant Type");
        ProcessPlantMaintScheme(ConvRec, PlantMaintSchemeVerLine.Level::"Plant Number");
      END;

      IF ActPlantMaterialInventory THEN
        ProcessPlantMaterialInventory(ConvRec);
    END;

    PROCEDURE ProcessEstPart@1100525001(VAR ConvRec@1100525001 : Record 11012322);
    VAR
      EstPartLineRecNEW@1100528900 : Record 11072076;
      DimValRec@1100525002 : Record 349;
      DimMgt@1100525003 : Codeunit 408;
      ItemTypeOpt@1100525008 : 'Item,Basic Item,Trade Item,Trade Vendor';
      OldSubOperation@1210190000 : Code[20];
      currec@1100525004 : Integer;
      maxrec@1100525005 : Integer;
      Status@1100525006 : Dialog;
    BEGIN
      //db, 23-08-10: M17540
      IF ConvRec.FINDSET THEN BEGIN
        Status.OPEN(Text011);
        REPEAT
          IF ActEstPartLine THEN BEGIN
            //copy from codeunit 11012229 (function ReplaceItem)
            Status.UPDATE(1,EstPartLineRecNEW.TABLECAPTION);
            IF RcpGrpFilter = '' THEN
              EstPartLineRecNEW.SETFILTER("Part Group", '<>%1', '')
            ELSE
              EstPartLineRecNEW.SETFILTER("Part Group", EstPartGrpFilter);
            IF EstPartFilter = '' THEN
              EstPartLineRecNEW.SETFILTER(Part, '<>%1', '')
            ELSE
              EstPartLineRecNEW.SETFILTER(Part, EstPartFilter);
            IF ConvRec."Trade Item (Old)" <> '' THEN BEGIN
              EstPartLineRecNEW.SETRANGE("Trade Item", ConvRec."Trade Item (Old)");
              EstPartLineRecNEW.SETRANGE("Vendor (Trade Item)", ConvRec."Vendor (Old)");
            END ELSE BEGIN
              IF ConvRec."Basic Item (Old)" <> '' THEN BEGIN
                EstPartLineRecNEW.SETRANGE("Basic Item", ConvRec."Basic Item (Old)");
                EstPartLineRecNEW.SETRANGE(Manufacturer, ConvRec."Manufacturer (Old)");
              END ELSE BEGIN
                IF ConvRec."Item No. (Old)" <> '' THEN BEGIN
                  EstPartLineRecNEW.SETRANGE("Item No.", ConvRec."Item No. (Old)");
                END ELSE BEGIN
                  IF ConvRec."Cost Object (Old)" <> '' THEN BEGIN
                    EstPartLineRecNEW.SETFILTER("Trade Item", '%1', '');
                    EstPartLineRecNEW.SETFILTER("Vendor (Trade Item)", '%1', '');
                    EstPartLineRecNEW.SETFILTER("Basic Item", '%1', '');
                    EstPartLineRecNEW.SETFILTER(Manufacturer, '%1', '');
                    EstPartLineRecNEW.SETFILTER("Item No.", '%1', '');
                    DimMgt.GetDimValueRec(2, ConvRec."Cost Object (Old)", DimValRec, TRUE, '');
                    IF DimValRec."Cost Type" = DimValRec."Cost Type"::Labor THEN
                      EstPartLineRecNEW.SETRANGE("Cost Object Labor", ConvRec."Cost Object (Old)");
                    IF DimValRec."Cost Type" = DimValRec."Cost Type"::Material THEN
                      EstPartLineRecNEW.SETRANGE("Cost Object Price", ConvRec."Cost Object (Old)");
                    IF DimValRec."Cost Type" = DimValRec."Cost Type"::Subcontracting THEN
                      EstPartLineRecNEW.SETRANGE("Cost Object Price", ConvRec."Cost Object (Old)");
                    IF DimValRec."Cost Type" = DimValRec."Cost Type"::Plant THEN
                      EstPartLineRecNEW.SETRANGE("Cost Object Price", ConvRec."Cost Object (Old)");
                    IF DimValRec."Cost Type" = DimValRec."Cost Type"::Sundry THEN
                      EstPartLineRecNEW.SETRANGE("Cost Object Price", ConvRec."Cost Object (Old)");
                  END;
                END;
              END;
            END;
            IF EstPartLineRecNEW.FINDSET (TRUE, FALSE) THEN BEGIN
              currec := 0;
              maxrec := EstPartLineRecNEW.COUNT;
              REPEAT
                OldSubOperation := EstPartLineRecNEW."Sub Operation Code";  //db, 21-11-11: M30942
                IF ConvRec."Cost Object (Old)" <> '' THEN BEGIN
                  DimMgt.GetDimValueRec(2, ConvRec."Cost Object (New)", DimValRec, TRUE, '');
                  IF DimValRec."Cost Type" = DimValRec."Cost Type"::Labor THEN
                    EstPartLineRecNEW."Cost Object Labor" := ConvRec."Cost Object (New)";
                  IF DimValRec."Cost Type" = DimValRec."Cost Type"::Material THEN
                    EstPartLineRecNEW."Cost Object Price" := ConvRec."Cost Object (New)";
                  IF DimValRec."Cost Type" = DimValRec."Cost Type"::Subcontracting THEN
                    EstPartLineRecNEW."Cost Object Price" := ConvRec."Cost Object (New)";
                  IF DimValRec."Cost Type" = DimValRec."Cost Type"::Plant THEN
                    EstPartLineRecNEW."Cost Object Price" := ConvRec."Cost Object (New)";
                  IF DimValRec."Cost Type" = DimValRec."Cost Type"::Sundry THEN
                    EstPartLineRecNEW."Cost Object Price" := ConvRec."Cost Object (New)";
                END ELSE BEGIN
                  EstPartLineRecNEW."Item No." := ConvRec."Item No. (New)";
                  EstPartLineRecNEW."Basic Item" := ConvRec."Basic Item (New)";
                  EstPartLineRecNEW."Trade Item" := ConvRec."Trade Item (New)";
                  EstPartLineRecNEW.Manufacturer := ConvRec."Manufacturer (New)";
                  EstPartLineRecNEW."Vendor (Trade Item)" := ConvRec."Vendor (New)";
                END;
                IF ActPrice = TRUE THEN BEGIN
                  IF ConvRec."Trade Item (New)" <> '' THEN
                    EstPartLineRecNEW.ValidateItem(ItemTypeOpt::"Trade Item")
                  ELSE
                    IF ConvRec."Basic Item (New)" <> '' THEN
                      EstPartLineRecNEW.ValidateItem(ItemTypeOpt::"Basic Item")
                    ELSE
                      IF ConvRec."Item No. (New)" <> '' THEN
                        EstPartLineRecNEW.ValidateItem(ItemTypeOpt::Item);
                  IF OldSubOperation <> '' THEN
                    EstPartLineRecNEW."Sub Operation Code" := OldSubOperation;  //db, 21-11-11: M30942
                END;
                EstPartLineRecNEW.MODIFY;
                currec := currec + 1;
                Status.UPDATE(2,ROUND(currec / maxrec * 10000,1));
              UNTIL EstPartLineRecNEW.NEXT = 0;
            END;
          END;
        UNTIL ConvRec.NEXT = 0;
        Status.CLOSE;
      END;
    END;

    PROCEDURE ProcessItemRelation@1210190000(VAR ConvRec@1210190004 : Record 11012322);
    VAR
      ItemRelationRec@1210190000 : Record 11012319;
      ItemRelationRec2@1210190006 : Record 11012319;
      currec@1210190003 : Integer;
      maxrec@1210190002 : Integer;
      Status@1210190001 : Dialog;
      ItemLevel@1210190005 : Integer;
    BEGIN
      //db, 21-06-11: M18987
      IF ConvRec.FINDSET THEN BEGIN
        Status.OPEN(Text011);
        REPEAT
          ItemLevel := 0;
          ItemRelationRec.RESET;
          IF (ConvRec."Item No. (Old)" <> '') AND (ConvRec."Item No. (New)" <> '') THEN BEGIN
            ItemLevel := 1;
            ItemRelationRec.SETRANGE("Navision Item", ConvRec."Item No. (Old)");
          END;
          IF (ConvRec."Basic Item (Old)" <> '') AND (ConvRec."Basic Item (New)" <> '') THEN BEGIN
            ItemLevel := 2;
            ItemRelationRec.SETRANGE(Manufacturer, ConvRec."Manufacturer (Old)");
            ItemRelationRec.SETRANGE("Basic Item", ConvRec."Basic Item (Old)");
          END;
          IF (ConvRec."Trade Item (Old)" <> '') AND (ConvRec."Trade Item (New)" <> '') THEN BEGIN
            ItemLevel := 3;
            ItemRelationRec.SETRANGE(Vendor, ConvRec."Vendor (Old)");
            ItemRelationRec.SETRANGE("Trade Item", ConvRec."Trade Item (Old)");
          END;
          IF ItemLevel <> 0 THEN BEGIN
            Status.UPDATE(1,ItemRelationRec.TABLECAPTION);
            IF ItemRelationRec.FINDSET (TRUE, TRUE) THEN BEGIN
              currec := 0;
              maxrec := ItemRelationRec.COUNT;
              REPEAT
                IF ItemLevel = 1 THEN BEGIN
                  ItemRelationRec2 := ItemRelationRec;
                  ItemRelationRec2."Navision Item" := ConvRec."Item No. (New)";
                  IF ItemRelationRec2.INSERT THEN
                    ItemRelationRec.DELETE;
                END;
                IF ItemLevel = 2 THEN BEGIN
                  ItemRelationRec.Manufacturer := ConvRec."Manufacturer (New)";
                  ItemRelationRec.VALIDATE("Basic Item", ConvRec."Basic Item (New)");
                  ItemRelationRec.MODIFY;
                END;
                IF ItemLevel = 3 THEN BEGIN
                  ItemRelationRec.Vendor := ConvRec."Vendor (New)";
                  ItemRelationRec.VALIDATE("Trade Item", ConvRec."Trade Item (New)");
                  ItemRelationRec.MODIFY;
                END;
                currec := currec + 1;
                Status.UPDATE(2,ROUND(currec / maxrec * 10000,1));
              UNTIL ItemRelationRec.NEXT = 0;
            END;
          END;
        UNTIL ConvRec.NEXT = 0;
        Status.CLOSE;
      END;
    END;

    PROCEDURE ProcessServiceSurvey@1100528603(VAR ConvRec@1100525001 : Record 11012322);
    VAR
      ServSurvObjectAddAct@1100528600 : Record 11071814;
      ItemTypeOpt@1100525008 : 'Item,Basic Item,Trade Item,Trade Vendor';
      currec@1100525004 : Integer;
      maxrec@1100525005 : Integer;
      Status@1100525006 : Dialog;
    BEGIN
      //db, 23-08-10: M17540
      IF ConvRec.FINDSET THEN BEGIN
        Status.OPEN(Text011);
        REPEAT
          IF ActEstPartLine THEN BEGIN
            Status.UPDATE(1, ServSurvObjectAddAct.TABLECAPTION);
            ServSurvObjectAddAct.SETFILTER("Survey No.", ServiceSurveyFilter);
            IF ConvRec."Trade Item (Old)" <> '' THEN BEGIN
              ServSurvObjectAddAct.SETRANGE("Trade Item", ConvRec."Trade Item (Old)");
              ServSurvObjectAddAct.SETRANGE("Vendor (Trade Item)", ConvRec."Vendor (Old)");
            END ELSE BEGIN
              IF ConvRec."Basic Item (Old)" <> '' THEN BEGIN
                ServSurvObjectAddAct.SETRANGE("Basic Item", ConvRec."Basic Item (Old)");
                ServSurvObjectAddAct.SETRANGE(Manufacturer, ConvRec."Manufacturer (Old)");
              END ELSE
                IF ConvRec."Item No. (Old)" <> '' THEN
                  ServSurvObjectAddAct.SETRANGE("Item No.", ConvRec."Item No. (Old)")
                ELSE
                  IF ConvRec."Cost Object (Old)" <> '' THEN BEGIN
                    ServSurvObjectAddAct.SETFILTER("Trade Item", '%1', '');
                    ServSurvObjectAddAct.SETFILTER("Vendor (Trade Item)", '%1', '');
                    ServSurvObjectAddAct.SETFILTER("Basic Item", '%1', '');
                    ServSurvObjectAddAct.SETFILTER(Manufacturer, '%1', '');
                    ServSurvObjectAddAct.SETFILTER("Item No.", '%1', '');
                    ServSurvObjectAddAct.SETRANGE("Cost Object", ConvRec."Cost Object (Old)");
                  END;
            END;
            IF ServSurvObjectAddAct.FINDSET(TRUE, FALSE) THEN BEGIN
              currec := 0;
              maxrec := ServSurvObjectAddAct.COUNT;
              REPEAT
                IF ConvRec."Cost Object (Old)" <> '' THEN BEGIN

                  ServSurvObjectAddAct."Cost Object" := ConvRec."Cost Object (New)";
                END ELSE BEGIN
                  ServSurvObjectAddAct."Item No." := ConvRec."Item No. (New)";
                  ServSurvObjectAddAct."Basic Item" := ConvRec."Basic Item (New)";
                  ServSurvObjectAddAct."Trade Item" := ConvRec."Trade Item (New)";
                  ServSurvObjectAddAct.Manufacturer := ConvRec."Manufacturer (New)";
                  ServSurvObjectAddAct."Vendor (Trade Item)" := ConvRec."Vendor (New)";
                END;
                IF ActPrice THEN BEGIN
                  IF ConvRec."Trade Item (New)" <> '' THEN
                    ServSurvObjectAddAct.ValidateItem(ItemTypeOpt::"Trade Item")
                  ELSE
                    IF ConvRec."Basic Item (New)" <> '' THEN
                      ServSurvObjectAddAct.ValidateItem(ItemTypeOpt::"Basic Item")
                    ELSE
                      IF ConvRec."Item No. (New)" <> '' THEN
                        ServSurvObjectAddAct.ValidateItem(ItemTypeOpt::Item);
                END;
                ServSurvObjectAddAct.MODIFY;
                currec := currec + 1;
                Status.UPDATE(2,ROUND(currec / maxrec * 10000,1));
              UNTIL ServSurvObjectAddAct.NEXT = 0;
            END;
          END;
        UNTIL ConvRec.NEXT = 0;
        Status.CLOSE;
      END;
    END;

    LOCAL PROCEDURE ProcessServiceAdviceOrder@1100528602(VAR ConvRec@1100528600 : Record 11012322);
    VAR
      ServiceOrder@1100528601 : Record 11012823;
      AdviceOrderLine@1100528602 : Record 11012055;
      ItemTypeOpt@1100528606 : 'Item,Basic Item,Trade Item,Trade Vendor';
      currec@1100528605 : Integer;
      maxrec@1100528604 : Integer;
      Status@1100528603 : Dialog;
    BEGIN
      IF NOT ActServiceAdviceOrderLines THEN
        EXIT;
      IF ConvRec.FINDSET THEN BEGIN
        Status.OPEN(Text011);
        REPEAT
          Status.UPDATE(1, ServiceOrder.TABLECAPTION);
          ServiceOrder.SETFILTER("No.", ServiceOrderFilter);
          ServiceOrder.SETFILTER(Status, '<%1', ServiceOrder.Status::Cancelled);
          IF ServiceOrder.FINDSET THEN
            currec := 0;
            maxrec := ServiceOrder.COUNT;
            REPEAT
              AdviceOrderLine.SETRANGE("Record Type", AdviceOrderLine."Record Type"::ServOrder);
              AdviceOrderLine.SETRANGE("Service Order No.", ServiceOrder."No.");
              AdviceOrderLine.SETRANGE("Process Status", AdviceOrderLine."Process Status"::Open);
              IF ConvRec."Trade Item (Old)" <> '' THEN BEGIN
                AdviceOrderLine.SETRANGE("Trade Item", ConvRec."Trade Item (Old)");
                AdviceOrderLine.SETRANGE("Vendor (Trade Item)", ConvRec."Vendor (Old)");
              END ELSE BEGIN
                IF ConvRec."Basic Item (Old)" <> '' THEN BEGIN
                  AdviceOrderLine.SETRANGE("Basic Item", ConvRec."Basic Item (Old)");
                  AdviceOrderLine.SETRANGE(Manufacturer, ConvRec."Manufacturer (Old)");
                END ELSE
                  IF ConvRec."Item No. (Old)" <> '' THEN
                    AdviceOrderLine.SETRANGE("Item No.", ConvRec."Item No. (Old)")
                  ELSE
                    IF ConvRec."Cost Object (Old)" <> '' THEN BEGIN
                      AdviceOrderLine.SETFILTER("Trade Item", '%1', '');
                      AdviceOrderLine.SETFILTER("Vendor (Trade Item)", '%1', '');
                      AdviceOrderLine.SETFILTER("Basic Item", '%1', '');
                      AdviceOrderLine.SETFILTER(Manufacturer, '%1', '');
                      AdviceOrderLine.SETFILTER("Item No.", '%1', '');
                      AdviceOrderLine.SETRANGE("Cost Object", ConvRec."Cost Object (Old)");
                    END;
              END;
              IF AdviceOrderLine.FINDSET(TRUE, FALSE) THEN BEGIN
                REPEAT
                  IF ConvRec."Cost Object (Old)" <> '' THEN BEGIN
                    AdviceOrderLine."Cost Object" := ConvRec."Cost Object (New)";
                  END ELSE BEGIN
                    AdviceOrderLine."Item No." := ConvRec."Item No. (New)";
                    AdviceOrderLine."Basic Item" := ConvRec."Basic Item (New)";
                    AdviceOrderLine."Trade Item" := ConvRec."Trade Item (New)";
                    AdviceOrderLine.Manufacturer := ConvRec."Manufacturer (New)";
                    AdviceOrderLine."Vendor (Trade Item)" := ConvRec."Vendor (New)";
                  END;
                  IF ActPrice THEN BEGIN
                    IF ConvRec."Trade Item (New)" <> '' THEN
                      AdviceOrderLine.ValidateItem(ItemTypeOpt::"Trade Item")
                    ELSE
                      IF ConvRec."Basic Item (New)" <> '' THEN
                        AdviceOrderLine.ValidateItem(ItemTypeOpt::"Basic Item")
                      ELSE
                        IF ConvRec."Item No. (New)" <> '' THEN
                          AdviceOrderLine.ValidateItem(ItemTypeOpt::Item);
                  END;
                  AdviceOrderLine.MODIFY;
                UNTIL AdviceOrderLine.NEXT = 0;
              END;
              currec := currec + 1;
              Status.UPDATE(2,ROUND(currec / maxrec * 10000,1));
            UNTIL ServiceOrder.NEXT = 0;
        UNTIL ConvRec.NEXT = 0;
        Status.CLOSE;
      END;
    END;

    LOCAL PROCEDURE ProcessOptionBudget@1100529116(VAR ConvRec@1100529000 : Record 11012322);
    VAR
      OptionBudget@1100529002 : Record 11012503;
      Status@1100529003 : Dialog;
      ItemTypeOpt@1100529006 : 'Item,Basic Item,Trade Item,Trade Vendor';
      Counter@1100529005 : Integer;
      NoOfRecords@1100529004 : Integer;
    BEGIN
      IF ConvRec.FINDSET THEN BEGIN
        Status.OPEN(Text011);
        Status.UPDATE(1, OptionBudget.TABLECAPTION);
        REPEAT
          OptionBudget.RESET;
          OptionBudget.SETRANGE("Project No.", '');  // Only on House Model (standard) level, see call C048855
          OptionBudget.SETRANGE("Plot No.", '');
          IF HouseModelFilter <> '' THEN
            OptionBudget.SETFILTER("House Model", HouseModelFilter);
          IF ConvRec."Trade Item (Old)" <> '' THEN BEGIN
            OptionBudget.SETRANGE("Trade Item", ConvRec."Trade Item (Old)");
            OptionBudget.SETRANGE("Vendor (Trade Item)", ConvRec."Vendor (Old)");
          END ELSE BEGIN
            IF ConvRec."Basic Item (Old)" <> '' THEN BEGIN
              OptionBudget.SETRANGE("Basic Item", ConvRec."Basic Item (Old)");
              OptionBudget.SETRANGE(Manufacturer, ConvRec."Manufacturer (Old)");
            END ELSE BEGIN
              IF ConvRec."Item No. (Old)" <> '' THEN BEGIN
                OptionBudget.SETRANGE("Item No.", ConvRec."Item No. (Old)");
              END ELSE BEGIN
                IF ConvRec."Cost Object (Old)" <> '' THEN BEGIN
                  OptionBudget.SETFILTER("Trade Item", '%1', '');
                  OptionBudget.SETFILTER("Vendor (Trade Item)", '%1', '');
                  OptionBudget.SETFILTER("Basic Item", '%1', '');
                  OptionBudget.SETFILTER(Manufacturer, '%1', '');
                  OptionBudget.SETFILTER("Item No.", '%1', '');
                  OptionBudget.SETRANGE("Cost Object", ConvRec."Cost Object (Old)");
                END;
              END;
            END;
          END;
          IF OptionBudget.FINDSET(TRUE, FALSE) THEN BEGIN
            Counter := 0;
            NoOfRecords := OptionBudget.COUNT;
            REPEAT
              IF ConvRec."Cost Object (Old)" <> '' THEN BEGIN
                OptionBudget."Cost Object" := ConvRec."Cost Object (New)";
              END ELSE BEGIN
                OptionBudget."Item No." := ConvRec."Item No. (New)";
                OptionBudget."Basic Item" := ConvRec."Basic Item (New)";
                OptionBudget."Trade Item" := ConvRec."Trade Item (New)";
                OptionBudget.Manufacturer := ConvRec."Manufacturer (New)";
                OptionBudget."Vendor (Trade Item)" := ConvRec."Vendor (New)";
              END;
              IF ActPrice THEN BEGIN
                IF ConvRec."Trade Item (New)" <> '' THEN
                  OptionBudget.ValidateItem(ItemTypeOpt::"Trade Item")
                ELSE BEGIN
                  IF ConvRec."Basic Item (New)" <> '' THEN
                    OptionBudget.ValidateItem(ItemTypeOpt::"Basic Item")
                  ELSE
                    IF ConvRec."Item No. (New)" <> '' THEN
                      OptionBudget.ValidateItem(ItemTypeOpt::Item);
                END;
              END;
              OptionBudget.MODIFY(ActPrice);
              Counter += 1;
              Status.UPDATE(2, ROUND(Counter / NoOfRecords * 10000, 1));
            UNTIL OptionBudget.NEXT = 0;
          END;
        UNTIL ConvRec.NEXT = 0;
        Status.CLOSE;
      END;
    END;

    LOCAL PROCEDURE ProcessPlantMaintScheme@1100529016(VAR ConvRec@1100529000 : Record 11012322;PlantMaintLevel@1100529001 : Option);
    VAR
      PlantMaintSchemeVerLine@1100529002 : Record 11072675;
      Status@1100529003 : Dialog;
      ItemTypeOpt@1100529006 : 'Item,Basic Item,Trade Item,Trade Vendor';
      Counter@1100529005 : Integer;
      NoOfRecords@1100529004 : Integer;
    BEGIN
      IF ConvRec.FINDSET THEN BEGIN
        Status.OPEN(Text011);
        PlantMaintSchemeVerLine.Level := PlantMaintLevel;
        Status.UPDATE(1, PlantMaintSchemeVerLine.TABLECAPTION +
          ' (' + PlantMaintSchemeVerLine.FIELDCAPTION(Level) + ': ' + FORMAT(PlantMaintSchemeVerLine.Level) + ')');
        REPEAT
          PlantMaintSchemeVerLine.RESET;
          PlantMaintSchemeVerLine.SETRANGE(Level, PlantMaintLevel);
          IF (PlantTypeFilter <> '') AND
              (PlantMaintSchemeVerLine.Level IN [PlantMaintSchemeVerLine.Level::"Plant Type", PlantMaintSchemeVerLine.Level::"Plant Number"])
          THEN
            PlantMaintSchemeVerLine.SETFILTER("Plant Type", PlantTypeFilter);
          IF (PlantNoFilter <> '') AND (PlantMaintSchemeVerLine.Level = PlantMaintSchemeVerLine.Level::"Plant Number") THEN
            PlantMaintSchemeVerLine.SETFILTER("Plant No.", PlantNoFilter);
          IF PlantMaintSchemeFilter <> '' THEN
            PlantMaintSchemeVerLine.SETFILTER("Maintenance Scheme", PlantMaintSchemeFilter);
          IF ConvRec."Trade Item (Old)" <> '' THEN BEGIN
            PlantMaintSchemeVerLine.SETRANGE("Trade Item", ConvRec."Trade Item (Old)");
            PlantMaintSchemeVerLine.SETRANGE("Vendor (Trade Item)", ConvRec."Vendor (Old)");
          END ELSE BEGIN
            IF ConvRec."Basic Item (Old)" <> '' THEN BEGIN
              PlantMaintSchemeVerLine.SETRANGE("Basic Item", ConvRec."Basic Item (Old)");
              PlantMaintSchemeVerLine.SETRANGE(Manufacturer, ConvRec."Manufacturer (Old)");
            END ELSE BEGIN
              IF ConvRec."Item No. (Old)" <> '' THEN BEGIN
                PlantMaintSchemeVerLine.SETRANGE("Item No.", ConvRec."Item No. (Old)");
              END ELSE BEGIN
                IF ConvRec."Cost Object (Old)" <> '' THEN BEGIN
                  PlantMaintSchemeVerLine.SETFILTER("Trade Item", '%1', '');
                  PlantMaintSchemeVerLine.SETFILTER("Vendor (Trade Item)", '%1', '');
                  PlantMaintSchemeVerLine.SETFILTER("Basic Item", '%1', '');
                  PlantMaintSchemeVerLine.SETFILTER(Manufacturer, '%1', '');
                  PlantMaintSchemeVerLine.SETFILTER("Item No.", '%1', '');
                  PlantMaintSchemeVerLine.SETRANGE("Cost Object", ConvRec."Cost Object (Old)");
                END;
              END;
            END;
          END;
          IF PlantMaintSchemeVerLine.FINDSET(TRUE, FALSE) THEN BEGIN
            Counter := 0;
            NoOfRecords := PlantMaintSchemeVerLine.COUNT;
            REPEAT
              IF ConvRec."Cost Object (Old)" <> '' THEN BEGIN
                PlantMaintSchemeVerLine."Cost Object" := ConvRec."Cost Object (New)";
              END ELSE BEGIN
                PlantMaintSchemeVerLine."Item No." := ConvRec."Item No. (New)";
                PlantMaintSchemeVerLine."Basic Item" := ConvRec."Basic Item (New)";
                PlantMaintSchemeVerLine."Trade Item" := ConvRec."Trade Item (New)";
                PlantMaintSchemeVerLine.Manufacturer := ConvRec."Manufacturer (New)";
                PlantMaintSchemeVerLine."Vendor (Trade Item)" := ConvRec."Vendor (New)";
              END;
              IF ActPrice THEN BEGIN
                IF ConvRec."Trade Item (New)" <> '' THEN
                  PlantMaintSchemeVerLine.ValidateItem(ItemTypeOpt::"Trade Item")
                ELSE BEGIN
                  IF ConvRec."Basic Item (New)" <> '' THEN
                    PlantMaintSchemeVerLine.ValidateItem(ItemTypeOpt::"Basic Item")
                  ELSE
                    IF ConvRec."Item No. (New)" <> '' THEN
                      PlantMaintSchemeVerLine.ValidateItem(ItemTypeOpt::Item);
                END;
              END;
              PlantMaintSchemeVerLine.MODIFY;
              Counter += 1;
              Status.UPDATE(2, ROUND(Counter / NoOfRecords * 10000, 1));
            UNTIL PlantMaintSchemeVerLine.NEXT = 0;
          END;
        UNTIL ConvRec.NEXT = 0;
        Status.CLOSE;
      END;
    END;

    LOCAL PROCEDURE ProcessPlantMaterialInventory@1100529000(VAR ConvRec@1100529000 : Record 11012322);
    VAR
      PlantMaterialInventory@1100529002 : Record 11229926;
      Status@1100529003 : Dialog;
      ItemTypeOpt@1100529006 : 'Item,Basic Item,Trade Item,Trade Vendor';
      Counter@1100529005 : Integer;
      NoOfRecords@1100529004 : Integer;
    BEGIN
      IF ConvRec.FINDSET THEN BEGIN
        Status.OPEN(Text011);
        Status.UPDATE(1, PlantMaterialInventory.TABLECAPTION);
        REPEAT
          IF (ConvRec."Trade Item (Old)" <> '') OR (ConvRec."Basic Item (Old)" <> '') OR (ConvRec."Item No. (Old)" <> '') THEN BEGIN  //No Cost Object in Material Invent
            PlantMaterialInventory.RESET;
            IF PlantTypeFilter <> '' THEN
              PlantMaterialInventory.SETFILTER("Plant Type", PlantTypeFilter);
            IF PlantNoFilter <> '' THEN
              PlantMaterialInventory.SETFILTER("Plant No.", PlantNoFilter);
            IF ConvRec."Trade Item (Old)" <> '' THEN BEGIN
              PlantMaterialInventory.SETRANGE("Trade Item", ConvRec."Trade Item (Old)");
              PlantMaterialInventory.SETRANGE("Vendor (Trade Item)", ConvRec."Vendor (Old)");
            END ELSE BEGIN
              IF ConvRec."Basic Item (Old)" <> '' THEN BEGIN
                PlantMaterialInventory.SETRANGE("Basic Item", ConvRec."Basic Item (Old)");
                PlantMaterialInventory.SETRANGE(Manufacturer, ConvRec."Manufacturer (Old)");
              END ELSE BEGIN
                IF ConvRec."Item No. (Old)" <> '' THEN
                  PlantMaterialInventory.SETRANGE("Item No.", ConvRec."Item No. (Old)");
              END;
            END;
            IF PlantMaterialInventory.FINDSET(TRUE, FALSE) THEN BEGIN
              Counter := 0;
              NoOfRecords := PlantMaterialInventory.COUNT;
              REPEAT
                PlantMaterialInventory."Item No." := ConvRec."Item No. (New)";
                PlantMaterialInventory."Basic Item" := ConvRec."Basic Item (New)";
                PlantMaterialInventory."Trade Item" := ConvRec."Trade Item (New)";
                PlantMaterialInventory.Manufacturer := ConvRec."Manufacturer (New)";
                PlantMaterialInventory."Vendor (Trade Item)" := ConvRec."Vendor (New)";
                IF ActPrice THEN BEGIN
                  IF ConvRec."Trade Item (New)" <> '' THEN
                    PlantMaterialInventory.ValidateItem(ItemTypeOpt::"Trade Item")
                  ELSE BEGIN
                    IF ConvRec."Basic Item (New)" <> '' THEN
                      PlantMaterialInventory.ValidateItem(ItemTypeOpt::"Basic Item")
                    ELSE
                      IF ConvRec."Item No. (New)" <> '' THEN
                        PlantMaterialInventory.ValidateItem(ItemTypeOpt::Item);
                    END;
                END;
                PlantMaterialInventory.MODIFY;
                Counter += 1;
                Status.UPDATE(2, ROUND(Counter / NoOfRecords * 10000, 1));
              UNTIL PlantMaterialInventory.NEXT = 0;
            END;
          END;
        UNTIL ConvRec.NEXT = 0;
        Status.CLOSE;
      END;
    END;

    PROCEDURE ProcessProjectBudget@1100528901(VAR ConvRec@1100525001 : Record 11012322);
    VAR
      BudgetLine@1100528900 : Record 11012001;
      ItemTypeOpt@1100525008 : 'Item,Basic Item,Trade Item,Trade Vendor';
      currec@1100525004 : Integer;
      maxrec@1100525005 : Integer;
      Status@1100525006 : Dialog;
    BEGIN
      //C055860
      IF ConvRec.FINDSET THEN BEGIN
        Status.OPEN(Text011);
        REPEAT
          IF ActProjectBudget THEN BEGIN
            Status.UPDATE(1,BudgetLine.TABLECAPTION);
            BudgetLine.SETFILTER("Project No.", ProjectFilter);
            IF ConvRec."Trade Item (Old)" <> '' THEN BEGIN
              BudgetLine.SETRANGE("Trade Item", ConvRec."Trade Item (Old)");
              BudgetLine.SETRANGE("Vendor (Trade Item)", ConvRec."Vendor (Old)");
            END ELSE BEGIN
              IF ConvRec."Basic Item (Old)" <> '' THEN BEGIN
                BudgetLine.SETRANGE("Basic Item", ConvRec."Basic Item (Old)");
                BudgetLine.SETRANGE(Manufacturer, ConvRec."Manufacturer (Old)");
              END ELSE BEGIN
                IF ConvRec."Item No. (Old)" <> '' THEN BEGIN
                  BudgetLine.SETRANGE("Item No.", ConvRec."Item No. (Old)");
                END ELSE BEGIN
                  IF ConvRec."Cost Object (Old)" <> '' THEN BEGIN
                    BudgetLine.SETFILTER("Trade Item", '%1', '');
                    BudgetLine.SETFILTER("Vendor (Trade Item)", '%1', '');
                    BudgetLine.SETFILTER("Basic Item", '%1', '');
                    BudgetLine.SETFILTER(Manufacturer, '%1', '');
                    BudgetLine.SETFILTER("Item No.", '%1', '');
                    BudgetLine.SETRANGE("Cost Object", ConvRec."Cost Object (Old)");
                  END;
                END;
              END;
            END;
            IF BudgetLine.FINDSET (TRUE, FALSE) THEN BEGIN
              currec := 0;
              maxrec := BudgetLine.COUNT;
              REPEAT
                IF ConvRec."Cost Object (Old)" <> '' THEN BEGIN
                  BudgetLine."Cost Object" := ConvRec."Cost Object (New)";
                END ELSE BEGIN
                  BudgetLine."Item No." := ConvRec."Item No. (New)";
                  BudgetLine."Basic Item" := ConvRec."Basic Item (New)";
                  BudgetLine."Trade Item" := ConvRec."Trade Item (New)";
                  BudgetLine.Manufacturer := ConvRec."Manufacturer (New)";
                  BudgetLine."Vendor (Trade Item)" := ConvRec."Vendor (New)";
                END;
                IF ActPrice = TRUE THEN BEGIN
                  IF ConvRec."Trade Item (New)" <> '' THEN
                    BudgetLine.ValidateItem(ItemTypeOpt::"Trade Item")
                  ELSE
                    IF ConvRec."Basic Item (New)" <> '' THEN
                      BudgetLine.ValidateItem(ItemTypeOpt::"Basic Item")
                    ELSE
                      IF ConvRec."Item No. (New)" <> '' THEN
                        BudgetLine.ValidateItem(ItemTypeOpt::Item);
                END;
                BudgetLine.MODIFY;
                currec := currec + 1;
                Status.UPDATE(2,ROUND(currec / maxrec * 10000,1));
              UNTIL BudgetLine.NEXT = 0;
            END;
          END;
        UNTIL ConvRec.NEXT = 0;
        Status.CLOSE;
      END;
    END;

    LOCAL PROCEDURE ActEstPartLineOnAfterValidate@19066497();
    BEGIN
      IF ActEstPartLine = FALSE THEN BEGIN
        EstPartGrpFilter := '';
        EstPartFilter := '';
      END;
    END;

    PROCEDURE UpdateEditable@1100525003();
    BEGIN
      EstFilterEditable := (ActEst = TRUE) OR (ActEstRecipe = TRUE);
      RcpGrpFilterEditable := (ActRecipe = TRUE) OR (ActEstRecipe = TRUE);
      RcpFilterEditable := (ActRecipe = TRUE) OR (ActEstRecipe = TRUE);
      EstPartGrpFilterEditable := (ActEstPartLine = TRUE);
      EstPartFilterEditable := (ActEstPartLine = TRUE);
      ProjectFilterEditable := (ActProjectBudget = TRUE);
      MaintSchemeFilterEditable := (ActMaintScheme = TRUE);
      ModificationFilterEditable := (ActModification = TRUE);
      StandardObjectFilterEditable := (ActStandardObject = TRUE);
      ServiceObjectFilterEditable := (ActServiceObject = TRUE);
      ServiceSurveyFilterEditable := (ActServiceSurvey = TRUE);
      ServiceOrderFilterEditable := (ActServiceAdviceOrderLines = TRUE);
      PlantMaintSchemeFilterEditable := (ActStndPlantMaintScheme OR ActPlantMaintScheme);
      PlantTypeFilterEditable := (ActPlantMaintScheme OR ActPlantMaterialInventory);
    END;

    PROCEDURE LookupRecipeGroup@1100528900();
    VAR
      RcpGrpRec@1100525001 : Record 11020580;
    BEGIN
      //DP00381
      RcpGrpRec.SETFILTER("No.", RcpGrpFilter);
      IF PAGE.RUNMODAL(0, RcpGrpRec) = ACTION::LookupOK THEN
        IF (ActRecipe = TRUE) OR (ActEstRecipe = TRUE) THEN
          RcpGrpFilter := RcpGrpRec."No.";
    END;

    PROCEDURE LookupRecipe@1100525004();
    VAR
      BaseRecipeRec@1100525000 : Record 11020581;
    BEGIN
      //DP00381
      BaseRecipeRec.SETFILTER("No.", RcpFilter);
      IF PAGE.RUNMODAL(0, BaseRecipeRec) = ACTION::LookupOK THEN
        IF (ActRecipe = TRUE) OR (ActEstRecipe = TRUE) THEN
          RcpFilter := BaseRecipeRec."No.";
    END;

    PROCEDURE LookupPartGroup@1100525005();
    VAR
      EstGrpRec@1100525000 : Record 11012157;
    BEGIN
      //DP00381
      EstGrpRec.SETRANGE(Type, EstGrpRec.Type::Part);
      EstGrpRec.SETFILTER("No.", EstPartGrpFilter);
      IF PAGE.RUNMODAL(0, EstGrpRec) = ACTION::LookupOK THEN
        IF ActEstPartLine = TRUE THEN
          EstPartGrpFilter := EstGrpRec."No.";
    END;

    PROCEDURE LookupPart@1100525006();
    VAR
      EstPartRec@1100525000 : Record 11012169;
    BEGIN
      //DP00381
      EstPartRec.SETFILTER("Part Group", EstPartGrpFilter);
      EstPartRec.SETFILTER(Code, EstPartFilter);
      IF PAGE.RUNMODAL(0, EstPartRec) = ACTION::LookupOK THEN
        IF ActEstPartLine = TRUE THEN
          EstPartFilter := EstPartRec.Code;
    END;

    BEGIN
    {
      db, 03-10-14: setfilter changed
    }
    END.
  }
}

