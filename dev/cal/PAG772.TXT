OBJECT Page 772 Inventory Performance
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Inventory Performance;
               NOR=Lagerytelse;
               SVE=Lagerprestanda];
    SourceTable=Table485;
    PageType=CardPart;
    ActionList=ACTIONS
    {
      { 23      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 18      ;1   ;Action    ;
                      Name=SelectChart;
                      CaptionML=[ENU=Select Chart;
                                 NOR=Velg diagram;
                                 SVE=VÑlj diagram];
                      ToolTipML=[ENU=Select the analysis report that the chart will be based on.;
                                 NOR=Velg analyserapporten som diagrammet skal baseres pÜ.;
                                 SVE=VÑlj den analysrapport som ska ligga till grund fîr diagrammet.];
                      ApplicationArea=#Basic,#Suite;
                      Image=SelectChart;
                      OnAction=BEGIN
                                 IF AnalysisReportChartMgt.SelectChart(AnalysisReportChartSetup,Rec) THEN
                                   UpdateChart(Period::" ");
                               END;
                                }
      { 5       ;1   ;Separator  }
      { 15      ;1   ;ActionGroup;
                      Name=PeriodLength;
                      CaptionML=[ENU=Period Length;
                                 NOR=Periodelengde;
                                 SVE=Period];
                      Image=Period }
      { 14      ;2   ;Action    ;
                      Name=Day;
                      CaptionML=[ENU=Day;
                                 NOR=Dag;
                                 SVE=Dag];
                      ToolTipML=[ENU=Each stack covers one day.;
                                 NOR=Hver stakk omfatter Çn dag.;
                                 SVE=Varje stack omfattar en dag.];
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 AnalysisReportChartSetup.SetPeriodLength(AnalysisReportChartSetup."Period Length"::Day);
                                 UpdateChart(Period::" ");
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Name=Week;
                      CaptionML=[ENU=Week;
                                 NOR=Uke;
                                 SVE=Vecka];
                      ToolTipML=[ENU=Each stack except for the last stack covers one week. The last stack contains data from the start of the week until the date that is defined by the Show option.;
                                 NOR=Hver stakk, bortsett fra den siste stakken, omfatter Çn uke. Den siste stakken inneholder data fra starten av uken til datoen som er definert av alternativet Vis.;
                                 SVE=Varje stack, fîrutom den senaste stacken, omfattar en vecka. Den senaste stacken innehÜller data frÜn bîrjan av veckan och fram tills det datum som anges med alternativet Visa.];
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 AnalysisReportChartSetup.SetPeriodLength(AnalysisReportChartSetup."Period Length"::Week);
                                 UpdateChart(Period::" ");
                               END;
                                }
      { 12      ;2   ;Action    ;
                      Name=Month;
                      CaptionML=[ENU=Month;
                                 NOR=MÜned;
                                 SVE=MÜnad];
                      ToolTipML=[ENU=Each stack except for the last stack covers one month. The last stack contains data from the start of the month until the date that is defined by the Show option.;
                                 NOR=Hver stakk, bortsett fra den siste stakken, omfatter Çn mÜned. Den siste stakken inneholder data fra starten av mÜneden til datoen som er definert av alternativet Vis.;
                                 SVE=Varje stack, fîrutom den senaste stacken, omfattar en mÜnad. Den senaste stacken innehÜller data frÜn bîrjan av mÜnaden och fram tills det datum som anges med alternativet Visa.];
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 AnalysisReportChartSetup.SetPeriodLength(AnalysisReportChartSetup."Period Length"::Month);
                                 UpdateChart(Period::" ");
                               END;
                                }
      { 11      ;2   ;Action    ;
                      Name=Quarter;
                      CaptionML=[ENU=Quarter;
                                 NOR=Kvartal;
                                 SVE=Kvartal];
                      ToolTipML=[ENU=Each stack except for the last stack covers one quarter. The last stack contains data from the start of the quarter until the date that is defined by the Show option.;
                                 NOR=Hver stakk, bortsett fra den siste stakken, omfatter ett kvartal. Den siste stakken inneholder data fra starten av kvartalet til datoen som er definert av alternativet Vis.;
                                 SVE=Varje stack, fîrutom den senaste stacken, omfattar ett kvartal. Den senaste stacken innehÜller data frÜn bîrjan av kvartalet och fram tills det datum som anges med alternativet Visa.];
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 AnalysisReportChartSetup.SetPeriodLength(AnalysisReportChartSetup."Period Length"::Quarter);
                                 UpdateChart(Period::" ");
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Name=Year;
                      CaptionML=[ENU=Year;
                                 NOR=èr;
                                 SVE=èr];
                      ToolTipML=[ENU=Each stack except for the last stack covers one year. The last stack contains data from the start of the year until the date that is defined by the Show option.;
                                 NOR=Hver stakk, bortsett fra den siste stakken, omfatter ett Ür. Den siste stakken inneholder data fra starten av Üret til datoen som er definert av alternativet Vis.;
                                 SVE=Varje stack, fîrutom den senaste stacken, omfattar ett Ür. Den senaste stacken innehÜller data frÜn bîrjan av Üret och fram tills det datum som anges med alternativet Visa.];
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 AnalysisReportChartSetup.SetPeriodLength(AnalysisReportChartSetup."Period Length"::Year);
                                 UpdateChart(Period::" ");
                               END;
                                }
      { 16      ;1   ;Action    ;
                      Name=PreviousPeriod;
                      CaptionML=[ENU=Previous;
                                 NOR=Forrige;
                                 SVE=FîregÜende];
                      ToolTipML=[ENU=Show the information based on the previous period. If you set the View by field to Day, the date filter changes to the day before.;
                                 NOR=Vis informasjonen basert pÜ den forrige perioden. Hvis du setter feltet Vis etter til Dag, endres datofiltret til dagen fõr.;
                                 SVE=Visa informationen baserad pÜ fîregÜende period. Om du stÑller in fÑltet Visa efter pÜ Dag Ñndras dagsfiltret till dagen fîre.];
                      ApplicationArea=#Basic,#Suite;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 UpdateChart(Period::Previous);
                               END;
                                }
      { 17      ;1   ;Action    ;
                      Name=NextPeriod;
                      CaptionML=[ENU=Next;
                                 NOR=Neste;
                                 SVE=NÑsta];
                      ToolTipML=[ENU=Show the information based on the next period.;
                                 NOR=Vis informasjonen som er basert pÜ den neste perioden.;
                                 SVE=Visa information baserad pÜ nÑsta period.];
                      ApplicationArea=#Basic,#Suite;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 UpdateChart(Period::Next);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=container;
                ContainerType=ContentArea }

    { 2   ;1   ;Field     ;
                Name=StatusText;
                ToolTipML=[ENU=Specifies the status of the chart.;
                           NOR=Angir statusen til diagrammet.;
                           SVE=Anger diagrammets status.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=StatusText;
                Enabled=FALSE;
                Style=StrongAccent;
                StyleExpr=TRUE;
                ShowCaption=No }

    { 3   ;1   ;Field     ;
                Name=BusinessChart;
                ApplicationArea=#Basic,#Suite;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.BusinessChart;PublicKeyToken=31bf3856ad364e35] }

  }
  CODE
  {
    VAR
      AnalysisReportChartSetup@1004 : Record 770;
      AnalysisReportChartMgt@1002 : Codeunit 770;
      StatusText@1001 : Text[250];
      Period@1005 : ' ,Next,Previous';

    LOCAL PROCEDURE UpdateChart@6(Period@1000 : ',Next,Previous');
    BEGIN
      AnalysisReportChartMgt.UpdateChart(
        Period,AnalysisReportChartSetup,AnalysisReportChartSetup."Analysis Area"::Inventory,Rec,StatusText);
      Update(CurrPage.BusinessChart);
    END;

    EVENT BusinessChart@-5::DataPointClicked@12(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
      SetDrillDownIndexes(point);
      AnalysisReportChartMgt.DrillDown(Rec,AnalysisReportChartSetup);
    END;

    EVENT BusinessChart@-5::DataPointDoubleClicked@13(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
    END;

    EVENT BusinessChart@-3::AddInReady@14();
    BEGIN
      UpdateChart(Period::" ");
    END;

    EVENT BusinessChart@-3::Refresh@15();
    BEGIN
      InitializePeriodFilter(0D,0D);
      UpdateChart(Period::" ");
    END;

    BEGIN
    END.
  }
}

