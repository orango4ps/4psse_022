OBJECT Codeunit 11126702 Service Text FSA WS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [External]
    PROCEDURE PushProblemText@1100528012(WorkOrderNo@1100528001 : Code[20];ResourceNo@1100528007 : Code[20];Text@1100528000 : Text);
    BEGIN
      CreateDebriefTextLines(WorkOrderNo, ResourceNo, 90, Text);
    END;

    [External]
    PROCEDURE PushCauseText@1100528011(WorkOrderNo@1100528001 : Code[20];ResourceNo@1100528007 : Code[20];Text@1100528000 : Text);
    BEGIN
      CreateDebriefTextLines(WorkOrderNo, ResourceNo, 94, Text);
    END;

    [External]
    PROCEDURE PushSolutionText@1100528008(WorkOrderNo@1100528001 : Code[20];ResourceNo@1100528007 : Code[20];Text@1100528000 : Text);
    BEGIN
      CreateDebriefTextLines(WorkOrderNo, ResourceNo, 92, Text);
    END;

    [External]
    PROCEDURE PushWorkOrderText@1100528007(WorkOrderNo@1100528001 : Code[20];ResourceNo@1100528007 : Code[20];Text@1100528000 : Text);
    BEGIN
      CreateDebriefTextLines(WorkOrderNo, ResourceNo, 1000, Text);
    END;

    [External]
    PROCEDURE PushProjectElementText@1100528009(WorkOrderNo@1100528001 : Code[20];ResourceNo@1100528007 : Code[20];Text@1100528000 : Text);
    BEGIN
      CreateDebriefTextLines(WorkOrderNo, ResourceNo, 3000, Text);
    END;

    [External]
    PROCEDURE PushAdviceOrderLineText@1100528001(WorkOrderNo@1100528002 : Code[20];ResourceNo@1100528001 : Code[20];Text@1100528000 : Text;DecentralCreatedGuid@1100528003 : Text[32]);
    BEGIN
      CreateDebriefAdviceOrderTextLine(WorkOrderNo,ResourceNo,Text,DecentralCreatedGuid);
    END;

    [External]
    PROCEDURE PushSUPRecordingLineComment@1100528005(WorkOrderNo@1100528000 : Code[20];ResourceNo@1100528001 : Code[20];Comment@1100528002 : Text;DecentralGuid@1100528003 : Text);
    BEGIN
      CreateDebriefSUPRecordingLineCommentLines(WorkOrderNo,ResourceNo,Comment,DecentralGuid);
    END;

    [External]
    PROCEDURE PullSolutionText@1100528000(ServiceOrderNo@1100528000 : Code[20]) : Text;
    VAR
      ServiceText@1100528001 : Record 11012882;
    BEGIN
      ServiceText.RESET;
      ServiceText.SETRANGE("Table Name", ServiceText."Table Name"::"Service Order");
      ServiceText.SETRANGE("No.", ServiceOrderNo);
      ServiceText.SETRANGE("Table Field", 92);
      EXIT(ServiceTextToText(ServiceText))
    END;

    [External]
    PROCEDURE IsAvoidDuplicatedServiceTextsAvailable@1100528700() : Boolean;
    BEGIN
      EXIT(TRUE)
    END;

    LOCAL PROCEDURE CreateDebriefTextLines@1100528004(WorkOrderNo@1100528000 : Code[20];ResourceNo@1100528008 : Code[20];FieldNo@1100528001 : Integer;Text@1100528002 : Text);
    VAR
      DebriefWorkOrderTexts@1100528007 : Record 11020449;
      MaxLen@1100528006 : Integer;
      CurrPos@1100528005 : Integer;
      TextLineLength@1100528004 : Integer;
      TextLineText@1100528003 : Text;
      FirstLine@1100528009 : Boolean;
      LineBreakPos@1100527000 : Integer;
      LineBreakLen@1100527001 : Integer;
      Text80@1100527002 : Text;
      IsLastLine@1100525001 : Boolean;
      StringFunctions@1100528700 : Codeunit 11012273;
    BEGIN
      DebriefWorkOrderTexts.SETRANGE("Work Order No.", WorkOrderNo);
      DebriefWorkOrderTexts.SETRANGE("Resource No. (Employee)", ResourceNo);
      DebriefWorkOrderTexts.SETRANGE("Table Field", FieldNo);
      IF NOT DebriefWorkOrderTexts.ISEMPTY THEN EXIT;

      MaxLen := MAXSTRLEN(DebriefWorkOrderTexts.Comment);
      FirstLine := TRUE;

      Text := StringFunctions.ReplaceDoubleLineBreaks(Text);

      DebriefWorkOrderTexts.INIT;
      DebriefWorkOrderTexts."Work Order No." := WorkOrderNo;
      DebriefWorkOrderTexts."Resource No. (Employee)" := ResourceNo;
      DebriefWorkOrderTexts."Table Field" := FieldNo;

      WHILE NOT IsLastLine DO BEGIN
        StringFunctions.SplitTextUsingLength(Text, DebriefWorkOrderTexts.Comment, DebriefWorkOrderTexts."Line Break", MaxLen);

        IsLastLine := (DELCHR(Text) = '');
        DebriefWorkOrderTexts."First Line" := FirstLine;
        FirstLine := FALSE;
        DebriefWorkOrderTexts.INSERT(TRUE);
      END;

      // MaxLen := 80;
      // CurrPos := 1;
      // FirstLine := TRUE;
      // REPEAT
      //  DebriefWorkOrderTexts.INIT;
      //  Text80 := COPYSTR(Text,CurrPos,80);
      //  IF NOT GetLineBreakPosition(Text80, LineBreakPos, LineBreakLen) THEN
      //    TextLineLength := SplitLength(Text80)
      //  ELSE BEGIN
      //    TextLineLength := LineBreakPos;
      //    DebriefWorkOrderTexts."Line Break" := TRUE;
      //  END;
      //  TextLineText := COPYSTR(Text,CurrPos,TextLineLength);
      //  TextLineText := DELCHR(TextLineText, '<>', CRLF);
      //
      //  CurrPos += TextLineLength;
      //  IF (LineBreakLen = 2) THEN
      //    CurrPos := CurrPos + 1;
      //
      //  DebriefWorkOrderTexts."Work Order No." := WorkOrderNo;
      //  DebriefWorkOrderTexts."Resource No. (Employee)" := ResourceNo;
      //  DebriefWorkOrderTexts."Table Field" := FieldNo;
      //  DebriefWorkOrderTexts.Comment := TextLineText;
      //  DebriefWorkOrderTexts."First Line" := FirstLine;
      //  DebriefWorkOrderTexts.INSERT(TRUE);
      //
      //  FirstLine := FALSE;
      // UNTIL CurrPos >= STRLEN(Text);
    END;

    LOCAL PROCEDURE CreateDebriefAdviceOrderTextLine@1100528002(WorkOrderNo@1100528000 : Code[20];ResourceNo@1100528008 : Code[20];Text@1100528002 : Text;DecentralCreatedGUID@1100528001 : Text[32]);
    VAR
      DebriefAdvOrdLnText@1100528007 : Record 11229870;
      MaxLineLength@1100528006 : Integer;
      CurrPos@1100528005 : Integer;
      TextLineLength@1100528004 : Integer;
      TextLineText@1100528003 : Text;
      LineBreakPos@1100527002 : Integer;
      LineBreakLen@1100527001 : Integer;
      Text80@1100527000 : Text;
    BEGIN
      MaxLineLength := 80;
      CurrPos := 1;
      REPEAT
        DebriefAdvOrdLnText.INIT;
        Text80 := COPYSTR(Text,CurrPos,80);
        IF NOT GetLineBreakPosition(Text80, LineBreakPos, LineBreakLen) THEN
          TextLineLength := SplitLength(Text80)
        ELSE BEGIN
          TextLineLength := LineBreakPos;
          DebriefAdvOrdLnText."Line Break" := TRUE;
        END;
        TextLineText := COPYSTR(Text,CurrPos,TextLineLength);
        TextLineText := DELCHR(TextLineText, '<>', CRLF);

        CurrPos += TextLineLength;
        IF (LineBreakLen = 2) THEN
          CurrPos := CurrPos + 1;

        DebriefAdvOrdLnText."Work Order No." := WorkOrderNo;
        DebriefAdvOrdLnText."Resource No. (Employee)" := ResourceNo;
        DebriefAdvOrdLnText.Comment := TextLineText;
        DebriefAdvOrdLnText."Decentral Created Guid" := DecentralCreatedGUID;
        DebriefAdvOrdLnText.INSERT(TRUE);
      UNTIL CurrPos >= STRLEN(Text);
    END;

    LOCAL PROCEDURE CreateDebriefSUPRecordingLineCommentLines@1100528006(WorkOrderNo@1100528000 : Code[20];ResourceNo@1100528008 : Code[20];Comment@1100528002 : Text;DecentralGUID@1100528001 : Text);
    VAR
      DebriefSUPRecLineComment@1100528007 : Record 11126708;
      MaxLineLength@1100528006 : Integer;
      CurrPos@1100528005 : Integer;
      TextLineLength@1100528004 : Integer;
      TextLineText@1100528003 : Text;
      LineBreakPos@1100527002 : Integer;
      LineBreakLen@1100527001 : Integer;
      Text80@1100527000 : Text;
    BEGIN
      MaxLineLength := 80;
      CurrPos := 1;
      REPEAT
        DebriefSUPRecLineComment.INIT;
        Text80 := COPYSTR(Comment,CurrPos,80);
        IF NOT GetLineBreakPosition(Text80, LineBreakPos, LineBreakLen) THEN
          TextLineLength := SplitLength(Text80)
        ELSE BEGIN
          TextLineLength := LineBreakPos;
          DebriefSUPRecLineComment."Line Break" := TRUE;
        END;
        TextLineText := COPYSTR(Comment, CurrPos, TextLineLength);
        TextLineText := DELCHR(TextLineText, '<>', CRLF);

        CurrPos += TextLineLength;
        IF (LineBreakLen = 2) THEN
          CurrPos := CurrPos + 1;

        DebriefSUPRecLineComment."Work Order No." := WorkOrderNo;
        DebriefSUPRecLineComment."Resource No. (Employee)" := ResourceNo;
        DebriefSUPRecLineComment.Comment := TextLineText;
        DebriefSUPRecLineComment."Decentral Guid" := DecentralGUID;
        DebriefSUPRecLineComment.INSERT(TRUE);
      UNTIL CurrPos >= STRLEN(Comment);
    END;

    LOCAL PROCEDURE ServiceTextToText@1100528003(ServiceText@1100528000 : Record 11012882) : Text;
    VAR
      Text@1100528001 : Text;
      NewLineStarted@1100528002 : Boolean;
    BEGIN
      Text := '';
      IF ServiceText.FINDFIRST() THEN BEGIN
        REPEAT
          IF NOT NewLineStarted THEN
            Text += ' ';
          Text += ServiceText.Comment;
          IF ServiceText."Line Break" THEN BEGIN
            Text += CRLF;
            NewLineStarted := TRUE;
          END ELSE BEGIN
            NewLineStarted := FALSE;
          END;
        UNTIL ServiceText.NEXT = 0;
      END;

      EXIT(Text);
    END;

    LOCAL PROCEDURE SplitLength@7(Text@1210190000 : Text[1024]) : Integer;
    VAR
      Pos@1210190001 : Integer;
    BEGIN
      Text := Reverse(COPYSTR(Text,1,80));
      Pos := STRPOS(Text,' ');
      IF Pos = 0 THEN
        Pos := STRPOS(Text,';');
      IF Pos = 0 THEN
        Pos := STRPOS(Text,',');
      IF Pos = 0 THEN
        Pos := 80
      ELSE
        Pos := 80 - Pos + 1;
      EXIT(Pos);
    END;

    LOCAL PROCEDURE Reverse@4(Text1@1210190000 : Text[1024]) : Text[1024];
    VAR
      Text2@1210190001 : Text[250];
      Length@1210190002 : Integer;
      i@1210190003 : Integer;
    BEGIN
      Length := STRLEN(Text1);
      Text2 := '';
      FOR i := 1 TO Length DO
        Text2[i] := Text1[Length - i + 1];
      EXIT(Text2);
    END;

    LOCAL PROCEDURE CRLF@1100527003() ReturnValue : Text[2];
    BEGIN
      ReturnValue[1] := 13;
      ReturnValue[2] := 10;
    END;

    LOCAL PROCEDURE LF@1100527002() ReturnValue : Text[1];
    BEGIN
      ReturnValue[1] := 10;
    END;

    [External]
    PROCEDURE GetLineBreakPosition@1100527004(Input@1100527002 : Text;VAR Position@1100527000 : Integer;VAR Length@1100527001 : Integer) : Boolean;
    BEGIN
      Length := 0;

      Position := STRPOS(Input, CRLF);
      IF  Position <> 0 THEN BEGIN
        Length := 2;
        EXIT(TRUE);
      END;

      Position := STRPOS(Input, LF);
      IF Position <> 0 THEN BEGIN
        Length := 1;
        EXIT(TRUE);
      END;
    END;

    BEGIN
    END.
  }
}

