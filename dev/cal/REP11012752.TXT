OBJECT Report 11012752 Copy Try-out Quote
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Kopieren Angebotsgenerierung;
               ENU=Copy Try-out Quote;
               NLD=Trajectofferte kopi‰ren;
               NOR=Kopier tilbudsforesp›rsel;
               SVE=Kopiera anbudsf”rfr†gan];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 5444;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnAfterGetRecord=BEGIN
                                  IF Quantity > 0  THEN BEGIN
                                    QuoteRec.GET(OriginalNo);
                                    FOR LoopCount := 1 TO Quantity DO
                                      BEGIN
                                        NewQuoteRec.INIT;
                                        IF NewTryoutQuoteNo <> '' THEN
                                          NewQuoteRec.Code := NewTryoutQuoteNo
                                        ELSE
                                          NewQuoteRec.Code := '';
                                        IF (MarketingSetup.GET) AND (MarketingSetup."Try-out Quote Nos." <> QuoteRec."No. Series") THEN
                                          NewQuoteRec.SetNoSeriesFromInitialDoc(QuoteRec."No. Series");
                                        NewQuoteRec.INSERT(TRUE);
                                        NewQuoteRec2 := NewQuoteRec;
                                        NewQuoteRec.TRANSFERFIELDS(QuoteRec, FALSE);
                                        NewQuoteRec.Description := 'COPY ' + COPYSTR(NewQuoteRec.Description, 1, 45);
                                        NewQuoteRec."Creation Date" := NewQuoteRec2."Creation Date";
                                        NewQuoteRec."Inserted By" := NewQuoteRec2."Inserted By";
                                        NewQuoteRec.MODIFY(TRUE);

                                        QuoteLineRec.SETRANGE("Try-out Quote", QuoteRec.Code);
                                        IF QuoteLineRec.FINDSET THEN
                                          REPEAT
                                            NewQuoteLineRec.INIT;
                                            NewQuoteLineRec := QuoteLineRec;
                                            NewQuoteLineRec."Try-out Quote" := NewQuoteRec.Code;
                                            NewQuoteLineRec.INSERT(TRUE);
                                          UNTIL QuoteLineRec.NEXT = 0;

                                        // 34215.sn
                                        ContactFeatureType.CopyFeaturesFromOtherType(
                                          ContactFeatureType."Relation Type"::"Try-out Quote", QuoteRec.Code,
                                          ContactFeatureType."Relation Type"::"Try-out Quote", NewQuoteRec.Code);
                                        // 34215.en
                                      END;
                                  END;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   MarketingSetup.GET;
                   QuantityEditable := TRUE;
                   NewTryoutQuoteNoEditable := NoSeriesManagement.CheckManual(MarketingSetup."Try-out Quote Nos.");
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1100485000;2;Field  ;
                  CaptionML=[DEU=Original;
                             ENU=Original;
                             NLD="Origineel ";
                             NOR=Opprinnelig;
                             SVE=Ursprunglig];
                  SourceExpr=OriginalNo;
                  Editable=FALSE }

      { 1100485004;2;Field  ;
                  CaptionML=[DEU=Menge;
                             ENU=Quantity;
                             NLD="Aantal ";
                             NOR=Antall;
                             SVE=Antal];
                  SourceExpr=Quantity;
                  MinValue=0;
                  MaxValue=9;
                  Editable=QuantityEditable }

      { 1100528800;2;Field  ;
                  CaptionML=[DEU=Neue Angebotsgenerierung;
                             ENU=New Try-out Quote No.;
                             NLD=Nieuw trajectoffertenr.];
                  SourceExpr=NewTryoutQuoteNo;
                  Editable=NewTryoutQuoteNoEditable;
                  OnValidate=BEGIN
                               IF NewTryoutQuoteNo <> '' THEN BEGIN
                                 Quantity := 1;
                                 QuantityEditable := FALSE;
                               END ELSE BEGIN
                                 Quantity := 0;
                                 QuantityEditable := TRUE;
                               END
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      QuoteRec@1100485002 : Record 11012758;
      QuoteLineRec@1210190000 : Record 11125864;
      NewQuoteRec@1100485004 : Record 11012758;
      NewQuoteRec2@1100525002 : Record 11012758;
      NewQuoteLineRec@1210190001 : Record 11125864;
      ContactFeatureType@1100525000 : Record 11012753;
      MarketingSetup@1100528804 : Record 5079;
      NoSeriesManagement@1100528803 : Codeunit 396;
      OriginalNo@1100485000 : Code[20];
      NewTryoutQuoteNo@1100528800 : Code[20];
      NewTryoutQuoteNoEditable@1100528802 : Boolean INDATASET;
      Quantity@1100485001 : Integer;
      QuantityEditable@1100528801 : Boolean INDATASET;
      LoopCount@1100485003 : Integer;

    PROCEDURE SetSelection@1100485002(lCode@1100485000 : Code[20]);
    BEGIN
      OriginalNo := lCode;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

