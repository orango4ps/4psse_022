OBJECT Codeunit 1351 Telemetry Subscribers
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04,4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 9802=r;
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ProfileChangedTelemetryMsg@1001 : TextConst '@@@="%1=Previous profile id, %2=New profile id";ENU=Profile changed from %1 to %2.;NOR=Profil endret fra %1 til %2.';
      ProfileChangedTelemetryCategoryTxt@1002 : TextConst 'ENU=AL User Profile;NOR=AL-brukerprofil';
      NoSeriesCategoryTxt@1004 : TextConst '@@@={LOCKED};ENU=AL NoSeries;NOR=AL NoSeries';
      NoSeriesEditedTelemetryTxt@1003 : TextConst '@@@={LOCKED};ENU=The number series was changed by the user.;NOR=The number series was changed by the user.';
      PermissionSetCategoryTxt@1005 : TextConst '@@@={LOCKED};ENU=AL PermissionSet;NOR=AL PermissionSet';
      PermissionSetLinkAddedTelemetryTxt@1000 : TextConst '@@@={LOCKED};ENU=A Permission Set Link was added between Source Permission Set %1 and Permission Set %2. Total count of Permission Set Links are %3.;NOR=A Permission Set Link was added between Source Permission Set %1 and Permission Set %2. Total count of Permission Set Links are %3.';
      PermissionSetAddedTelemetryTxt@1006 : TextConst '@@@={LOCKED};ENU=Permission Set %1 was added. Total count of user defined Permission Sets is %2.;NOR=Permission Set %1 was added. Total count of user defined Permission Sets is %2.';
      PermissionSetAssignedToUserTelemetryTxt@1007 : TextConst '@@@={LOCKED};ENU=Permission Set %1 was added to a user.;NOR=Permission Set %1 was added to a user.';
      PermissionSetAssignedToUserGroupTelemetryTxt@1008 : TextConst '@@@={LOCKED};ENU=Permission Set %1 was added to a user group %2.;NOR=Permission Set %1 was added to a user group %2.';
      EffectivePermsCalculatedTxt@1009 : TextConst '@@@="{LOCKED} %1 = company name, %2 = object type, %3 = object Id";ENU=Effective permissions were calculated for company %1, object type %2, object ID %3.;NOR=Effective permissions were calculated for company %1, object type %2, object ID %3.';
      TenantPermissionsChangedFromEffectivePermissionsPageTxt@1011 : TextConst '@@@="{LOCKED} %1 = permission set id";ENU=Tenant permission set %1 was changed.;NOR=Tenant permission set %1 was changed.';
      NumberOfDocumentLinesMsg@1020 : TextConst '@@@={Locked};ENU=Type of Document: %1, Number of Document Lines: %2;NOR=Type of Document: %1, Number of Document Lines: %2';
      RecordCountCategoryTxt@1021 : TextConst '@@@={Locked};ENU=AL Record Count;NOR=AL Record Count';
      JobQueueEntriesCategoryTxt@1010 : TextConst '@@@={LOCKED};ENU=AL JobQueueEntries;NOR=AL JobQueueEntries';
      JobQueueEntryStartedTxt@1013 : TextConst '@@@={LOCKED};ENU="JobID = %1, ObjectType = %2, ObjectID = %3, Status = Started";NOR="JobID = %1, ObjectType = %2, ObjectID = %3, Status = Started"';
      JobQueueEntryFinishedTxt@1012 : TextConst '@@@={LOCKED};ENU="JobID = %1, ObjectType = %2, ObjectID = %3, Status = Finished,  Result = %4";NOR="JobID = %1, ObjectType = %2, ObjectID = %3, Status = Finished,  Result = %4"';
      UndoSalesShipmentCategoryTxt@1016 : TextConst '@@@={LOCKED};ENU=AL UndoSalesShipmentNoOfLines;NOR=AL UndoSalesShipmentNoOfLines';
      UndoSalesShipmentNoOfLinesTxt@1014 : TextConst '@@@={LOCKED};ENU="UndoNoOfLines = %1";NOR="UndoNoOfLines = %1"';
      EmailLoggingTelemetryCategoryTxt@1019 : TextConst '@@@={Locked};ENU=AL Email Logging;NOR=AL Email Logging';
      UserSettingUpEmailLoggingTxt@1018 : TextConst '@@@={Locked};ENU=User is attempting to set up email logging via %1 page.;NOR=User is attempting to set up email logging via %1 page.';
      UserCompletedSettingUpEmailLoggingTxt@1017 : TextConst '@@@={Locked};ENU=User completed the setting up of email logging via %1 page.;NOR=User completed the setting up of email logging via %1 page.';
      UserCreatingInteractionLogEntryBasedOnEmailTxt@1015 : TextConst '@@@={Locked};ENU=User created an interaction log entry from an email message.;NOR=User created an interaction log entry from an email message.';

    [EventSubscriber(Codeunit,40,OnAfterCompanyOpen,"",Skip,Skip)]
    LOCAL PROCEDURE ScheduleMasterdataTelemetryAfterCompanyOpen@1();
    VAR
      CodeUnitMetadata@1001 : Record 2000000137;
      TelemetryManagement@1000 : Codeunit 1350;
    BEGIN
      IF NOT IsSaaS THEN
        EXIT;

      CodeUnitMetadata.ID := CODEUNIT::"Generate Master Data Telemetry";
      TelemetryManagement.ScheduleCalEventsForTelemetryAsync(CodeUnitMetadata.RECORDID,CODEUNIT::"Create Telemetry Cal. Events",20);
    END;

    [EventSubscriber(Codeunit,40,OnAfterCompanyOpen,"",Skip,Skip)]
    LOCAL PROCEDURE ScheduleActivityTelemetryAfterCompanyOpen@2();
    VAR
      CodeUnitMetadata@1001 : Record 2000000137;
      TelemetryManagement@1000 : Codeunit 1350;
    BEGIN
      IF NOT IsSaaS THEN
        EXIT;

      CodeUnitMetadata.ID := CODEUNIT::"Generate Activity Telemetry";
      TelemetryManagement.ScheduleCalEventsForTelemetryAsync(CodeUnitMetadata.RECORDID,CODEUNIT::"Create Telemetry Cal. Events",21);
    END;

    [EventSubscriber(Codeunit,9170,OnProfileChanged,"",Skip,Skip)]
    LOCAL PROCEDURE SendTraceOnProfileChanged@3(PrevProfileID@1000 : Code[30];ProfileID@1001 : Code[30]);
    BEGIN
      IF NOT IsSaaS THEN
        EXIT;

      SENDTRACETAG(
        '00001O5',ProfileChangedTelemetryCategoryTxt,VERBOSITY::Normal,STRSUBSTNO(ProfileChangedTelemetryMsg,PrevProfileID,ProfileID),
        DATACLASSIFICATION::SystemMetadata);
    END;

    [EventSubscriber(Page,2340,OnAfterNoSeriesModified,"",Skip,Skip)]
    LOCAL PROCEDURE LogNoSeriesModifiedInvoicing@14();
    BEGIN
      IF NOT IsSaaS THEN
        EXIT;

      SENDTRACETAG('00001PI',NoSeriesCategoryTxt,VERBOSITY::Normal,NoSeriesEditedTelemetryTxt,DATACLASSIFICATION::SystemMetadata);
    END;

    [EventSubscriber(Table,9802,OnAfterInsertEvent,"",Skip,Skip)]
    LOCAL PROCEDURE SendTraceOnPermissionSetLinkAdded@4(VAR Rec@1000 : Record 9802;RunTrigger@1001 : Boolean);
    VAR
      PermissionSetLink@1002 : Record 9802;
    BEGIN
      IF NOT IsSaaS THEN
        EXIT;

      SENDTRACETAG(
        '0000250',PermissionSetCategoryTxt,VERBOSITY::Normal,
        STRSUBSTNO(PermissionSetLinkAddedTelemetryTxt,Rec."Permission Set ID",Rec."Linked Permission Set ID",PermissionSetLink.COUNT),
        DATACLASSIFICATION::SystemMetadata);
    END;

    [EventSubscriber(Table,2000000165,OnAfterInsertEvent,"",Skip,Skip)]
    LOCAL PROCEDURE SendTraceOnUserDefinedPermissionSetIsAdded@10(VAR Rec@1000 : Record 2000000165;RunTrigger@1001 : Boolean);
    VAR
      TenantPermissionSet@1002 : Record 2000000165;
    BEGIN
      IF NOT IsSaaS THEN
        EXIT;

      IF NOT ISNULLGUID(Rec."App ID") THEN
        EXIT;

      TenantPermissionSet.SETRANGE("App ID",Rec."App ID");
      SENDTRACETAG(
        '0000251',PermissionSetCategoryTxt,VERBOSITY::Normal,
        STRSUBSTNO(PermissionSetAddedTelemetryTxt,Rec."Role ID",TenantPermissionSet.COUNT),DATACLASSIFICATION::SystemMetadata);
    END;

    [EventSubscriber(Table,2000000053,OnAfterInsertEvent,"",Skip,Skip)]
    LOCAL PROCEDURE SendTraceOnUserDefinedPermissionSetIsAssignedToAUser@7(VAR Rec@1000 : Record 2000000053;RunTrigger@1001 : Boolean);
    VAR
      TenantPermissionSet@1002 : Record 2000000165;
    BEGIN
      IF NOT IsSaaS THEN
        EXIT;

      IF NOT ISNULLGUID(Rec."App ID") THEN
        EXIT;

      IF NOT TenantPermissionSet.GET(Rec."App ID",Rec."Role ID") THEN
        EXIT;

      SENDTRACETAG(
        '0000252',PermissionSetCategoryTxt,VERBOSITY::Normal,STRSUBSTNO(PermissionSetAssignedToUserTelemetryTxt,Rec."Role ID"),
        DATACLASSIFICATION::SystemMetadata);
    END;

    [EventSubscriber(Table,9003,OnAfterInsertEvent,"",Skip,Skip)]
    LOCAL PROCEDURE SendTraceOnUserDefinedPermissionSetIsAssignedToAUserGroup@16(VAR Rec@1000 : Record 9003;RunTrigger@1001 : Boolean);
    VAR
      TenantPermissionSet@1002 : Record 2000000165;
    BEGIN
      IF NOT IsSaaS THEN
        EXIT;

      IF NOT ISNULLGUID(Rec."App ID") THEN
        EXIT;

      IF NOT TenantPermissionSet.GET(Rec."App ID",Rec."Role ID") THEN
        EXIT;

      SENDTRACETAG(
        '0000253',PermissionSetCategoryTxt,VERBOSITY::Normal,
        STRSUBSTNO(PermissionSetAssignedToUserGroupTelemetryTxt,Rec."Role ID",Rec."User Group Code"),
        DATACLASSIFICATION::SystemMetadata);
    END;

    [EventSubscriber(Codeunit,448,OnBeforeExecuteJob)]
    LOCAL PROCEDURE SendTraceOnJobQueueEntryStarted@12(VAR JobQueueEntry@1000 : Record 472);
    BEGIN
      IF NOT IsSaaS THEN
        EXIT;

      SENDTRACETAG(
        '000082B',JobQueueEntriesCategoryTxt,VERBOSITY::Normal,
        STRSUBSTNO(JobQueueEntryStartedTxt,JobQueueEntry.ID,JobQueueEntry."Object Type to Run",JobQueueEntry."Object ID to Run"),
        DATACLASSIFICATION::SystemMetadata);
    END;

    [EventSubscriber(Codeunit,448,OnAfterExecuteJob)]
    LOCAL PROCEDURE SendTraceOnJobQueueEntryFinished@17(VAR JobQueueEntry@1000 : Record 472;WasSuccess@1001 : Boolean);
    VAR
      Result@1002 : Text[10];
    BEGIN
      IF NOT IsSaaS THEN
        EXIT;

      IF WasSuccess THEN
        Result := 'Success'
      ELSE
        Result := 'Fail';

      SENDTRACETAG(
        '000082C',JobQueueEntriesCategoryTxt,VERBOSITY::Normal,
        STRSUBSTNO(JobQueueEntryFinishedTxt,JobQueueEntry.ID,JobQueueEntry."Object Type to Run",
          JobQueueEntry."Object ID to Run",Result),
        DATACLASSIFICATION::SystemMetadata);
    END;

    [EventSubscriber(Codeunit,5815,OnAfterCode)]
    LOCAL PROCEDURE SendTraceUndoSalesShipmentNoOfLines@108(VAR SalesShipmentLine@1000 : Record 111);
    BEGIN
      IF NOT IsSaaS THEN
        EXIT;

      SalesShipmentLine.SETRANGE(Correction,TRUE);
      SENDTRACETAG('000085N',UndoSalesShipmentCategoryTxt,VERBOSITY::Normal,
        STRSUBSTNO(UndoSalesShipmentNoOfLinesTxt,SalesShipmentLine.COUNT),
        DATACLASSIFICATION::SystemMetadata);
    END;

    [EventSubscriber(Page,9852,OnEffectivePermissionsPopulated,"",Skip,Skip)]
    LOCAL PROCEDURE EffectivePermissionsFetchedInPage@5(CurrUserId@1000 : GUID;CurrCompanyName@1001 : Text[30];CurrObjectType@1002 : Integer;CurrObjectId@1003 : Integer);
    BEGIN
      IF NOT IsSaaS THEN
        EXIT;

      SENDTRACETAG(
        '000027E',PermissionSetCategoryTxt,VERBOSITY::Normal,
        STRSUBSTNO(EffectivePermsCalculatedTxt,CurrCompanyName,CurrObjectType,CurrObjectId),
        DATACLASSIFICATION::OrganizationIdentifiableInformation);
    END;

    [EventSubscriber(Codeunit,9852,OnTenantPermissionModified,"",Skip,Skip)]
    LOCAL PROCEDURE EffectivePermissionsChangeInPage@11(PermissionSetId@1000 : Code[20]);
    BEGIN
      IF NOT IsSaaS THEN
        EXIT;

      SENDTRACETAG(
        '000027G',PermissionSetCategoryTxt,VERBOSITY::Normal,
        STRSUBSTNO(TenantPermissionsChangedFromEffectivePermissionsPageTxt,PermissionSetId),
        DATACLASSIFICATION::SystemMetadata);
    END;

    [EventSubscriber(Codeunit,91,OnAfterConfirmPost,"",Skip,Skip)]
    LOCAL PROCEDURE LogNumberOfPurchaseLines@13(PurchaseHeader@1000 : Record 38);
    VAR
      PurchaseLine@1001 : Record 39;
      DocumentType@1002 : Integer;
    BEGIN
      DocumentType := PurchaseHeader."Document Type";
      PurchaseLine.SETRANGE("Document No.",PurchaseHeader."No.");
      SENDTRACETAG('000085T',RecordCountCategoryTxt,VERBOSITY::Normal,
        STRSUBSTNO(NumberOfDocumentLinesMsg,FORMAT(DocumentType),PurchaseLine.COUNT),DATACLASSIFICATION::SystemMetadata);
    END;

    [EventSubscriber(Codeunit,81,OnAfterConfirmPost,"",Skip,Skip)]
    LOCAL PROCEDURE LogNumberOfSalesLines@6(SalesHeader@1000 : Record 36);
    VAR
      SalesLine@1001 : Record 37;
      DocumentType@1002 : Integer;
    BEGIN
      DocumentType := SalesHeader."Document Type";
      SalesLine.SETRANGE("Document No.",SalesHeader."No.");
      SENDTRACETAG('000085U',RecordCountCategoryTxt,VERBOSITY::Normal,
        STRSUBSTNO(NumberOfDocumentLinesMsg,FORMAT(DocumentType),SalesLine.COUNT),DATACLASSIFICATION::SystemMetadata);
    END;

    [EventSubscriber(Report,1306,OnAfterGetSalesHeader,"",Skip,Skip)]
    LOCAL PROCEDURE LogNumberOfSalesInvoiceLinesForReport1306@20(SalesInvoiceHeader@1002 : Record 112);
    BEGIN
      LogNumberOfSalesInvoiceLines(SalesInvoiceHeader);
    END;

    [EventSubscriber(Report,206,OnAfterGetRecordSalesInvoiceHeader,"",Skip,Skip)]
    LOCAL PROCEDURE LogNumberOfSalesInvoiceLinesForReport206@18(SalesInvoiceHeader@1000 : Record 112);
    BEGIN
      LogNumberOfSalesInvoiceLines(SalesInvoiceHeader);
    END;

    LOCAL PROCEDURE LogNumberOfSalesInvoiceLines@9(SalesInvoiceHeader@1000 : Record 112);
    VAR
      SalesInvoiceLine@1001 : Record 113;
    BEGIN
      SalesInvoiceLine.SETRANGE("Document No.",SalesInvoiceHeader."No.");
      SENDTRACETAG('000085V',RecordCountCategoryTxt,VERBOSITY::Normal,
        STRSUBSTNO(NumberOfDocumentLinesMsg,'Sales Invoice - export',SalesInvoiceLine.COUNT),DATACLASSIFICATION::SystemMetadata);
    END;

    LOCAL PROCEDURE IsSaaS@28() : Boolean;
    VAR
      PermissionManager@1000 : Codeunit 9002;
    BEGIN
      EXIT(PermissionManager.SoftwareAsAService);
    END;

    [EventSubscriber(Page,1811,OnOpenPageEvent)]
    LOCAL PROCEDURE LogTelemetryOnOpenSetupEmailLoggingPage@22();
    VAR
      SetupEmailLogging@1000 : Page 1811;
    BEGIN
      SENDTRACETAG(
        '000089V',EmailLoggingTelemetryCategoryTxt,VERBOSITY::Normal,
        STRSUBSTNO(UserSettingUpEmailLoggingTxt,SetupEmailLogging.CAPTION),DATACLASSIFICATION::SystemMetadata)
    END;

    [EventSubscriber(Page,1811,OnAfterAssistedSetupEmailLoggingCompleted)]
    LOCAL PROCEDURE LogTelemetryOnAfterAssistedSetupEmailLoggingCompleted@21();
    VAR
      SetupEmailLogging@1000 : Page 1811;
    BEGIN
      SENDTRACETAG(
        '000089W',EmailLoggingTelemetryCategoryTxt,VERBOSITY::Normal,
        STRSUBSTNO(UserCompletedSettingUpEmailLoggingTxt,SetupEmailLogging.CAPTION),DATACLASSIFICATION::SystemMetadata)
    END;

    [EventSubscriber(Page,5094,OnAfterMarketingSetupEmailLoggingUsed)]
    LOCAL PROCEDURE LogTelemetryOnAfterMarketingSetupEmailLoggingUsed@19();
    VAR
      MarketingSetup@1000 : Page 5094;
    BEGIN
      SENDTRACETAG(
        '000089X',EmailLoggingTelemetryCategoryTxt,VERBOSITY::Normal,
        STRSUBSTNO(UserSettingUpEmailLoggingTxt,MarketingSetup.CAPTION),DATACLASSIFICATION::SystemMetadata)
    END;

    [EventSubscriber(Page,5094,OnAfterMarketingSetupEmailLoggingCompleted)]
    LOCAL PROCEDURE LogTelemetryOnAfterMarketingSetupEmailLoggingCompleted@15();
    VAR
      MarketingSetup@1000 : Page 5094;
    BEGIN
      SENDTRACETAG(
        '000089Y',EmailLoggingTelemetryCategoryTxt,VERBOSITY::Normal,
        STRSUBSTNO(UserCompletedSettingUpEmailLoggingTxt,MarketingSetup.CAPTION),DATACLASSIFICATION::SystemMetadata)
    END;

    [EventSubscriber(Codeunit,11072027,OnAfterInsertInteractionLogEntry)]
    LOCAL PROCEDURE LogTelemetryOnAfterInsertInteractionLogEntry@8();
    BEGIN
      SENDTRACETAG(
        '000089Z',EmailLoggingTelemetryCategoryTxt,VERBOSITY::Normal,
        UserCreatingInteractionLogEntryBasedOnEmailTxt,DATACLASSIFICATION::SystemMetadata)
    END;

    BEGIN
    END.
  }
}

