OBJECT Codeunit 11012791 Process ICF Invoices
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      PurchSetup@1100525011 : Record 312;
      ICFLine@1100525000 : Record 11012327;
      ProcessICFInvoice@1100525007 : Codeunit 11012792;
      Window@1100525002 : Dialog;
      Text001@1100525004 : TextConst 'DEU=Rechnung/Gutschrift #1########\;ENU=Invoice No./Credit Memo #1########\;NLD=Factuur/Creditnota #1########\;NOR=Fakturanr./Kreditnota #1########\;SVE=Fakturanr/kreditnota #1########\';
      Text002@1100525003 : TextConst 'DEU=Prozess             #2###########\;ENU=Process                 #2###########\;NLD=Proces             #2###########\;NOR=Prosess #2###########\;SVE=Process                 #2###########\';
      Text004@1100525008 : TextConst 'DEU=Rechnung erstellen;ENU=Create Invoice;NLD=Factuur aanmaken;NOR=Opprette faktura;SVE=Skapa faktura';
      Text005@1100525009 : TextConst 'DEU=Eingang abrufen;ENU=Collect Revenues;NLD=Ontvangst ophalen;NOR=Samle inn inntekter;SVE=Samla in int„kter';
      Text006@1100525010 : TextConst 'DEU=ICF vergleichen;ENU=Match ICF;NLD=ICF Matchen;NOR=Matche ICF;SVE=Matcha ICF';

    PROCEDURE ProcessICFLines@1210190009(ICFFileRec@1100525000 : Record 11012328;lvCreateInvoices@1100525001 : Boolean;lvGetRcptLines@1100525004 : Boolean;lvMatchICFLines@1100525008 : Boolean);
    VAR
      PurchHeader@1100525003 : Record 38;
      ProcessType@1100525002 : 'CreateInvoice,GetReceipts,MatchICF';
      ProcessTypeMax@1100525005 : 'CreateInvoice,GetReceipts,MatchICF';
    BEGIN
      Window.OPEN(Text001 + Text002);
      PurchSetup.GET;

      IF PurchSetup."Approve ICF Purchase Invoices" THEN
        ProcessTypeMax := ProcessType::CreateInvoice
      ELSE
        ProcessTypeMax := ProcessType::MatchICF;

      FOR ProcessType := ProcessType::CreateInvoice TO ProcessTypeMax DO BEGIN
        IF ((ProcessType = ProcessType::CreateInvoice) AND lvCreateInvoices) OR
           ((ProcessType = ProcessType::GetReceipts) AND lvGetRcptLines) OR
           ((ProcessType = ProcessType::MatchICF) AND lvMatchICFLines) THEN
        BEGIN
          CASE ProcessType OF
            ProcessType::CreateInvoice: Window.UPDATE(2,Text004);
            ProcessType::GetReceipts: Window.UPDATE(2,Text005);
            ProcessType::MatchICF: Window.UPDATE(2,Text006);
          END;
          ICFLine.RESET;
          ICFLine.SETRANGE(Vendor, ICFFileRec.Vendor);
          ICFLine.SETRANGE("Reference (Vendor)", ICFFileRec."Reference (Vendor)");
          ICFLine.SETRANGE("Record Type", 'FH70');
          IF ICFLine.FINDSET(FALSE,FALSE) THEN BEGIN
            REPEAT
              CLEAR(PurchHeader);

              //Create Invoices
              IF ProcessType = ProcessType::CreateInvoice THEN BEGIN
                ProcessICFInvoice.SetProcessType(ProcessType);
                IF ProcessICFInvoice.RUN(ICFLine) THEN
                  Window.UPDATE(1,ICFLine."Invoice No.")
                ELSE BEGIN
                  ICFLine."Process halted at" := ICFLine."Process halted at"::"Creating Purchase Invoice Header";
                  ICFLine."Reason for halting" := COPYSTR(GETLASTERRORTEXT, 1, MAXSTRLEN(ICFLine."Reason for halting"));
                  UpdateICFLinesProcessHalted;
                END;
              END;

              IF ICFLine."Invoice No." <> '' THEN BEGIN
                //GetReceiptLines
                IF (ProcessType = ProcessType::GetReceipts) AND
                   (ICFLine.Status = ICFLine.Status::"Invoice/Credit Memo Created") THEN
                BEGIN
                  Window.UPDATE(1,ICFLine."Invoice No.");
                  ProcessICFInvoice.SetProcessType(ProcessType);
                  IF NOT ProcessICFInvoice.RUN(ICFLine) THEN BEGIN
                    ICFLine."Process halted at" := ICFLine."Process halted at"::"Getting Receipts";
                    ICFLine."Reason for halting" := COPYSTR(GETLASTERRORTEXT, 1, MAXSTRLEN(ICFLine."Reason for halting"));
                    UpdateICFLinesProcessHalted;
                  END;
                END;

                //Match ICF Invoices
                IF (ProcessType = ProcessType::MatchICF) AND (ICFLine.Status = ICFLine.Status::"Got Receipt") THEN BEGIN
                  Window.UPDATE(1,ICFLine."Invoice No.");
                  ProcessICFInvoice.SetProcessType(ProcessType);
                  IF NOT ProcessICFInvoice.RUN(ICFLine) THEN BEGIN
                    ICFLine."Process halted at" := ICFLine."Process halted at"::"Matching ICF Lines";
                    ICFLine."Reason for halting" := COPYSTR(GETLASTERRORTEXT, 1, MAXSTRLEN(ICFLine."Reason for halting"));
                    UpdateICFLinesProcessHalted;
                  END;
                END;
              END;
              COMMIT; // For each step for each invoice
            UNTIL ICFLine.NEXT = 0;
          END;
        END;
      END;

      Window.CLOSE;
    END;

    PROCEDURE UpdateICFLinesProcessHalted@1210190007();
    VAR
      ICFLine2@1210190003 : Record 11012327;
    BEGIN
      ICFLine2.SETRANGE(Vendor, ICFLine.Vendor);
      ICFLine2.SETRANGE("Reference (Vendor)", ICFLine."Reference (Vendor)");
      ICFLine2.SETRANGE("Invoice No. (Vendor)", ICFLine."Invoice No. (Vendor)");
      ICFLine2.MODIFYALL("Process halted at", ICFLine."Process halted at");
      ICFLine2.MODIFYALL("Reason for halting", ICFLine."Reason for halting");
    END;

    BEGIN
    END.
  }
}

