OBJECT Codeunit 11128587 OIOUBL Export Service Cr. Memo
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVDK10.00 (13617);
  }
  PROPERTIES
  {
    TableNo=5994;
    OnRun=VAR
            ServCrMemoHeader2@1101100007 : Record 5994;
            ServCrMemoLine@1101100000 : Record 5995;
            ServCrMemoLine2@1101100008 : Record 5995;
            SalespersonPurchaser@1060000 : Record 13;
            OIOUBLProfile@1060014 : Record 11128570;
            RBMgt@1060005 : Codeunit 419;
            XMLDOMManagement@1060018 : Codeunit 6224;
            XMLCurrNode@1060004 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
            XMLNewChild@1060002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
            XMLdocOut@1060001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
            CurrencyCode@1060006 : Code[10];
            Prefix@1101100004 : Text[30];
            DocNameSpace@1101100005 : Text[100];
            FromFile@1060007 : Text[1024];
            ToFile@1060008 : Text[1024];
            DocNameSpace2@1060010 : Text[250];
            Prefix2@1060009 : Text[30];
            VATPercentage@1060011 : Decimal;
            TaxableAmount@1060013 : Decimal;
            TaxAmount@1060012 : Decimal;
            TotalAmount@1060003 : Decimal;
            TotalTaxAmount@1060015 : Decimal;
            DocumentType@1060017 : 'Quote,Order,Invoice,Credit Memo';
            FileName@1060016 : Text;
          BEGIN
            CODEUNIT.RUN(CODEUNIT::"OIOUBL Check Service Cr. Memo",Rec);
            ReadGLSetup;
            ReadCompanyInfo;

            IF "Currency Code" = '' THEN
              CurrencyCode := GLSetup."LCY Code"
            ELSE
              CurrencyCode := "Currency Code";

            ServCrMemoLine.SETRANGE("Document No.","No.");
            ServCrMemoLine.SETFILTER(Type,'>%1',0);
            ServCrMemoLine.SETFILTER("No.",'<>%1',' ');
            IF NOT ServCrMemoLine.FINDSET THEN
              EXIT;

            FromFile := RBMgt.ServerTempFileName('');

            // Credit Memo
            Header := '<?xml version="1.0" encoding="UTF-8" ?> ' +
              '<CreditNote xsi:schemaLocation="urn:oasis:names:specification:ubl:schema:xsd:CreditNote-2 UBL-CreditNote-2.0.xsd" ' +
              'xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:specification:ubl:schema:xsd:CreditNote-2" ' +
              'xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" ' +
              'xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" ' +
              'xmlns:ccts="urn:oasis:names:specification:ubl:schema:xsd:CoreComponentParameters-2" ' +
              'xmlns:sdt="urn:oasis:names:specification:ubl:schema:xsd:SpecializedDatatypes-2" ' +
              'xmlns:udt="urn:un:unece:uncefact:data:specification:UnqualifiedDataTypesSchemaModule:2"/> ';

            XMLDOMManagement.LoadXMLDocumentFromText(Header,XMLdocOut);
            XMLCurrNode := XMLdocOut.DocumentElement;

            WITH OIOUBLDOMManagement DO BEGIN
              DocNameSpace := 'urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2';
              DocNameSpace2 := 'urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2';

              Prefix := 'cbc';
              Prefix2 := 'cac';

              AddElement(XMLCurrNode,'UBLVersionID','2.0',DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'CustomizationID','OIOUBL-2.02',DocNameSpace,XMLNewChild,Prefix);

              AddElement(
                XMLCurrNode,'ProfileID',
                OIOUBLProfile.GetOIOUBLProfileID(Rec."OIOUBL Profile Code",Rec."Customer No."),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:profileid-1.2');
              AddAttribute(XMLCurrNode,'schemeAgencyID','320');
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'ID',"No.",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'CopyIndicator',OIOUBLDocumentEncode.BooleanToText("Electronic Credit Memo Created"),
                DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'IssueDate',OIOUBLDocumentEncode.DateToText("Posting Date"),DocNameSpace,XMLNewChild,Prefix);

              AddElement(XMLCurrNode,'DocumentCurrencyCode',CurrencyCode,DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'AccountingCostCode',"Account Code DK",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'DiscrepancyResponse','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'ReferenceID','1',DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'Description','Kreditnota if?lge aftale',DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'OrderReference','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;

              AddElement(XMLCurrNode,'ID',"Your Reference",DocNameSpace,XMLNewChild,Prefix);

              AddElement(XMLCurrNode,'CustomerReference',"Applies-to Doc. No.",DocNameSpace,XMLNewChild,Prefix);

              // Credit Memo->AccountingSupplierParty
              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'AccountingSupplierParty','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;

              AddElement(XMLCurrNode,'Party','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'WebsiteURI',CompanyInfo."Home Page",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'EndpointID',OIOUBLDocumentEncode.GetCompanyVATRegNo(CompanyInfo."VAT Registration No."),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeID','DK:CVR');
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'PartyIdentification','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'ID',OIOUBLDocumentEncode.GetCompanyVATRegNo(CompanyInfo."VAT Registration No."),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeID','DK:CVR');
              XMLCurrNode := XMLCurrNode.ParentNode;

              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'PartyName','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'Name',CompanyInfo.Name,DocNameSpace,XMLNewChild,Prefix);

              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'PostalAddress','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'AddressFormatCode','StructuredLax',DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'listID','urn:oioubl:codelist:addressformatcode-1.1');
              AddAttribute(XMLCurrNode,'listAgencyID','320');
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'StreetName',CompanyInfo.Address,DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'AdditionalStreetName',CompanyInfo."Address 2",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'InhouseMail',CompanyInfo."E-Mail",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'CityName',CompanyInfo.City,DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'PostalZone',CompanyInfo."Post Code",DocNameSpace,XMLNewChild,Prefix);

              AddElement(XMLCurrNode,'Country','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'IdentificationCode',CompanyInfo."Country/Region Code",DocNameSpace,XMLNewChild,Prefix);

              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'PartyTaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'CompanyID',OIOUBLDocumentEncode.GetCompanyVATRegNo(CompanyInfo."VAT Registration No."),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeID','DK:SE');
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'TaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'ID','63',DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeAgencyID','320');
              AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxschemeid-1.1');
              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'Name','Moms',DocNameSpace,XMLNewChild,Prefix);

              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'PartyLegalEntity','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'RegistrationName',CompanyInfo.Name,DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'CompanyID',OIOUBLDocumentEncode.GetCompanyVATRegNo(CompanyInfo."VAT Registration No."),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeID','DK:CVR');
              XMLCurrNode := XMLCurrNode.ParentNode;

              XMLCurrNode := XMLCurrNode.ParentNode;
              IF SalespersonPurchaser.GET("Salesperson Code") THEN BEGIN
                AddElement(XMLCurrNode,'Contact','',DocNameSpace2,XMLNewChild,Prefix2);
                XMLCurrNode := XMLNewChild;
                AddElement(XMLCurrNode,'ID',"Salesperson Code",DocNameSpace,XMLNewChild,Prefix);
                AddElement(XMLCurrNode,'Name',SalespersonPurchaser.Name,DocNameSpace,XMLNewChild,Prefix);
                AddElement(XMLCurrNode,'Telephone',SalespersonPurchaser."Phone No.",DocNameSpace,XMLNewChild,Prefix);
                AddElement(XMLCurrNode,'ElectronicMail',SalespersonPurchaser."E-Mail",DocNameSpace,XMLNewChild,Prefix);
                XMLCurrNode := XMLCurrNode.ParentNode;
              END;

              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;

              // Credit Memo->AccountingCustomerParty
              AddElement(XMLCurrNode,'AccountingCustomerParty','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;

              AddElement(XMLCurrNode,'Party','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'EndpointID',"EAN No.",DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeAgencyID','9');
              AddAttribute(XMLCurrNode,'schemeID','GLN');
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'PartyIdentification','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'ID',OIOUBLDocumentEncode.GetCustomerVATRegNo("VAT Registration No."),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'schemeID','DK:CVR');
              XMLCurrNode := XMLCurrNode.ParentNode;

              // CreditMemo->AccountingCustomerParty->PartyName
              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'PartyName','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'Name',"Bill-to Name",DocNameSpace,XMLNewChild,Prefix);

              // CreditMemo->AccountingCustomerParty->PostalAddress
              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'PostalAddress','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'AddressFormatCode','StructuredLax',DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'listID','urn:oioubl:codelist:addressformatcode-1.1');
              AddAttribute(XMLCurrNode,'listAgencyID','320');
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'StreetName',"Bill-to Address",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'AdditionalStreetName',"Bill-to Address 2",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'CityName',"Bill-to City",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'PostalZone',"Bill-to Post Code",DocNameSpace,XMLNewChild,Prefix);

              AddElement(XMLCurrNode,'Country','',DocNameSpace2,XMLNewChild,Prefix2);

              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'IdentificationCode',OIOUBLDocumentEncode.GetOIOUBLCountryRegionCode("Bill-to Country/Region Code"),
                DocNameSpace,XMLNewChild,Prefix);

              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;
              AddElement(XMLCurrNode,'Contact','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;
              AddElement(XMLCurrNode,'ID',"Contact Name",DocNameSpace,XMLNewChild,Prefix);

              AddElement(XMLCurrNode,'Name',"Contact Name",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'Telephone',"Phone No.",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'Telefax',"Fax No.",DocNameSpace,XMLNewChild,Prefix);
              AddElement(XMLCurrNode,'ElectronicMail',"E-Mail",DocNameSpace,XMLNewChild,Prefix);

              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;
              XMLCurrNode := XMLCurrNode.ParentNode;

              // CreditMemo->Allowance Charge
              ServCrMemoLine2.RESET;
              ServCrMemoLine2.COPY(ServCrMemoLine);
              ServCrMemoLine2.SETRANGE(Type);
              ServCrMemoLine2.SETRANGE("No.");
              ServCrMemoLine2.CALCSUMS(Amount,"Amount Including VAT","Inv. Discount Amount");

              TotalInvDiscountAmount := 0;
              IF ServCrMemoLine2.FINDSET THEN
                REPEAT
                  TotalInvDiscountAmount := TotalInvDiscountAmount + ServCrMemoLine2."Inv. Discount Amount" +
                    ServCrMemoLine2."Line Discount Amount";
                UNTIL ServCrMemoLine2.NEXT = 0;

              IF TotalInvDiscountAmount > 0 THEN BEGIN
                AddElement(XMLCurrNode,'AllowanceCharge','',DocNameSpace2,XMLNewChild,Prefix2);
                XMLCurrNode := XMLNewChild;

                AddElement(XMLCurrNode,'ID','1',DocNameSpace,XMLNewChild,Prefix);
                AddElement(XMLCurrNode,'ChargeIndicator','false',
                  DocNameSpace,XMLNewChild,Prefix);
                AddElement(XMLCurrNode,'AllowanceChargeReason','Rabat',DocNameSpace,XMLNewChild,Prefix);
                AddElement(XMLCurrNode,'MultiplierFactorNumeric','1.000',DocNameSpace,XMLNewChild,Prefix);
                AddElement(XMLCurrNode,'SequenceNumeric','1',DocNameSpace,XMLNewChild,Prefix);

                AddElement(XMLCurrNode,'Amount',OIOUBLDocumentEncode.DecimalToText(TotalInvDiscountAmount),
                  DocNameSpace,XMLNewChild,Prefix);
                XMLCurrNode := XMLNewChild;
                AddAttribute(XMLCurrNode,'currencyID',CurrencyCode);
                XMLCurrNode := XMLCurrNode.ParentNode;

                AddElement(XMLCurrNode,'BaseAmount',OIOUBLDocumentEncode.DecimalToText(TotalInvDiscountAmount),
                  DocNameSpace,XMLNewChild,Prefix);
                XMLCurrNode := XMLNewChild;
                AddAttribute(XMLCurrNode,'currencyID',CurrencyCode);
                XMLCurrNode := XMLCurrNode.ParentNode;

                // CreditMemo->AllowanceCharge->TaxCategory
                AddElement(XMLCurrNode,'TaxCategory','',DocNameSpace2,XMLNewChild,Prefix2);
                XMLCurrNode := XMLNewChild;

                AddElement(XMLCurrNode,'ID',GetTaxCategoryID(ServCrMemoLine2."VAT Calculation Type",ServCrMemoLine2."VAT %"),
                  DocNameSpace,XMLNewChild,Prefix);
                XMLCurrNode := XMLNewChild;
                AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxcategoryid-1.1');
                AddAttribute(XMLCurrNode,'schemeAgencyID','320');
                XMLCurrNode := XMLCurrNode.ParentNode;

                AddElement(XMLCurrNode,'Percent',OIOUBLDocumentEncode.DecimalToText(ServCrMemoLine2."VAT %"),
                  DocNameSpace,XMLNewChild,Prefix);

                // CreditMemo->AllowanceCharge->TaxCategory->TaxScheme
                AddElement(XMLCurrNode,'TaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);
                XMLCurrNode := XMLNewChild;

                AddElement(XMLCurrNode,'ID','63',DocNameSpace,XMLNewChild,Prefix);
                XMLCurrNode := XMLNewChild;
                AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxschemeid-1.1');
                XMLCurrNode := XMLCurrNode.ParentNode;
                AddElement(XMLCurrNode,'Name','Moms',DocNameSpace,XMLNewChild,Prefix);

                XMLCurrNode := XMLCurrNode.ParentNode;
                XMLCurrNode := XMLCurrNode.ParentNode;
                XMLCurrNode := XMLCurrNode.ParentNode;
              END;

              ServCrMemoLine2.RESET;
              ServCrMemoLine2.COPY(ServCrMemoLine);
              ServCrMemoLine2.SETFILTER(
                "VAT Calculation Type",'%1|%2|%3',
                ServCrMemoLine2."VAT Calculation Type"::"Normal VAT",
                ServCrMemoLine2."VAT Calculation Type"::"Full VAT",
                ServCrMemoLine2."VAT Calculation Type"::"Reverse Charge VAT");
              IF ServCrMemoLine2.FINDFIRST THEN BEGIN
                TotalTaxAmount := 0;
                ServCrMemoLine2.CALCSUMS(Amount,"Amount Including VAT");
                TotalTaxAmount := ServCrMemoLine2."Amount Including VAT" - ServCrMemoLine2.Amount;

                AddElement(XMLCurrNode,'TaxTotal','',DocNameSpace2,XMLNewChild,Prefix2);
                XMLCurrNode := XMLNewChild;
                AddElement(
                  XMLCurrNode,'TaxAmount',
                  OIOUBLDocumentEncode.DecimalToText(TotalTaxAmount),DocNameSpace,XMLNewChild,Prefix);
                XMLCurrNode := XMLNewChild;
                AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
                XMLCurrNode := XMLCurrNode.ParentNode;

                // Invoice->TaxTotal (for ("Normal VAT" AND "VAT %" <> 0) OR "Full VAT")
                ServCrMemoLine2.SETFILTER(
                  "VAT Calculation Type",'%1|%2',
                  ServCrMemoLine2."VAT Calculation Type"::"Normal VAT",
                  ServCrMemoLine2."VAT Calculation Type"::"Full VAT");
                IF ServCrMemoLine2.FINDFIRST THEN BEGIN
                  TaxableAmount := 0;
                  TaxAmount := 0;
                  ServCrMemoLine2.SETFILTER("VAT %",'<>0');
                  IF ServCrMemoLine2.FINDSET THEN BEGIN
                    VATPercentage := ServCrMemoLine2."VAT %";
                    REPEAT
                      UpdateTaxAmtAndTaxableAmt(ServCrMemoLine2.Amount,ServCrMemoLine2."Amount Including VAT",TaxableAmount,TaxAmount);
                    UNTIL ServCrMemoLine2.NEXT = 0;
                    // Invoice->TaxTotal->TaxSubtotal
                    AddElement(XMLCurrNode,'TaxSubtotal','',DocNameSpace2,XMLNewChild,Prefix2);
                    XMLCurrNode := XMLNewChild;
                    AddElement(XMLCurrNode,'TaxableAmount',
                      OIOUBLDocumentEncode.DecimalToText(TaxableAmount),DocNameSpace,XMLNewChild,Prefix);
                    XMLCurrNode := XMLNewChild;
                    AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
                    XMLCurrNode := XMLCurrNode.ParentNode;

                    AddElement(XMLCurrNode,'TaxAmount',
                      OIOUBLDocumentEncode.DecimalToText(TaxAmount),DocNameSpace,XMLNewChild,Prefix);
                    XMLCurrNode := XMLNewChild;
                    AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
                    XMLCurrNode := XMLCurrNode.ParentNode;

                    // Invoice->TaxTotal->TaxSubtotal->TaxCategory
                    AddElement(XMLCurrNode,'TaxCategory','',DocNameSpace2,XMLNewChild,Prefix2);
                    XMLCurrNode := XMLNewChild;

                    AddElement(XMLCurrNode,'ID',GetTaxCategoryID(ServCrMemoLine2."VAT Calculation Type",VATPercentage),
                      DocNameSpace,XMLNewChild,Prefix);
                    XMLCurrNode := XMLNewChild;
                    AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxcategoryid-1.1');
                    AddAttribute(XMLCurrNode,'schemeAgencyID','320');
                    XMLCurrNode := XMLCurrNode.ParentNode;

                    AddElement(XMLCurrNode,'Percent',OIOUBLDocumentEncode.DecimalToText(VATPercentage),
                      DocNameSpace,XMLNewChild,Prefix);

                    // Invoice->TaxTotal->TaxSubtotal->TaxCategory->TaxScheme
                    AddElement(XMLCurrNode,'TaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);
                    XMLCurrNode := XMLNewChild;

                    AddElement(XMLCurrNode,'ID','63',DocNameSpace,XMLNewChild,Prefix);
                    XMLCurrNode := XMLNewChild;
                    AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxschemeid-1.1');
                    XMLCurrNode := XMLCurrNode.ParentNode;
                    AddElement(XMLCurrNode,'Name','Moms',DocNameSpace,XMLNewChild,Prefix);

                    XMLCurrNode := XMLCurrNode.ParentNode;
                    XMLCurrNode := XMLCurrNode.ParentNode;
                    XMLCurrNode := XMLCurrNode.ParentNode;
                  END;

                  TaxableAmount := 0;
                  TaxAmount := 0;
                  ServCrMemoLine2.SETRANGE("VAT %",0);
                  IF ServCrMemoLine2.FINDSET THEN BEGIN
                    VATPercentage := ServCrMemoLine2."VAT %";
                    REPEAT
                      UpdateTaxAmtAndTaxableAmt(ServCrMemoLine2.Amount,ServCrMemoLine2."Amount Including VAT",TaxableAmount,TaxAmount);
                    UNTIL ServCrMemoLine2.NEXT = 0;
                    // Invoice->TaxTotal->TaxSubtotal
                    AddElement(XMLCurrNode,'TaxSubtotal','',DocNameSpace2,XMLNewChild,Prefix2);
                    XMLCurrNode := XMLNewChild;
                    AddElement(XMLCurrNode,'TaxableAmount',
                      OIOUBLDocumentEncode.DecimalToText(TaxableAmount),DocNameSpace,XMLNewChild,Prefix);
                    XMLCurrNode := XMLNewChild;
                    AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
                    XMLCurrNode := XMLCurrNode.ParentNode;

                    AddElement(XMLCurrNode,'TaxAmount',
                      OIOUBLDocumentEncode.DecimalToText(TaxAmount),DocNameSpace,XMLNewChild,Prefix);
                    XMLCurrNode := XMLNewChild;
                    AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
                    XMLCurrNode := XMLCurrNode.ParentNode;

                    // Invoice->TaxTotal->TaxSubtotal->TaxCategory
                    AddElement(XMLCurrNode,'TaxCategory','',DocNameSpace2,XMLNewChild,Prefix2);
                    XMLCurrNode := XMLNewChild;

                    AddElement(XMLCurrNode,'ID',GetTaxCategoryID(ServCrMemoLine2."VAT Calculation Type",VATPercentage),
                      DocNameSpace,XMLNewChild,Prefix);
                    XMLCurrNode := XMLNewChild;
                    AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxcategoryid-1.1');
                    AddAttribute(XMLCurrNode,'schemeAgencyID','320');
                    XMLCurrNode := XMLCurrNode.ParentNode;

                    AddElement(XMLCurrNode,'Percent',OIOUBLDocumentEncode.DecimalToText(VATPercentage),
                      DocNameSpace,XMLNewChild,Prefix);

                    // Invoice->TaxTotal->TaxSubtotal->TaxCategory->TaxScheme
                    AddElement(XMLCurrNode,'TaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);
                    XMLCurrNode := XMLNewChild;

                    AddElement(XMLCurrNode,'ID','63',DocNameSpace,XMLNewChild,Prefix);
                    XMLCurrNode := XMLNewChild;
                    AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxschemeid-1.1');
                    XMLCurrNode := XMLCurrNode.ParentNode;
                    AddElement(XMLCurrNode,'Name','Moms',DocNameSpace,XMLNewChild,Prefix);

                    XMLCurrNode := XMLCurrNode.ParentNode;
                    XMLCurrNode := XMLCurrNode.ParentNode;
                    XMLCurrNode := XMLCurrNode.ParentNode;
                  END;
                END;

                // Invoice->TaxTotal (for "Reverse Charge VAT")
                ServCrMemoLine2.SETRANGE("VAT %");
                ServCrMemoLine2.SETRANGE("VAT Calculation Type",ServCrMemoLine2."VAT Calculation Type"::"Reverse Charge VAT");
                IF ServCrMemoLine2.FINDSET THEN BEGIN
                  TaxableAmount := 0;
                  TaxAmount := 0;
                  VATPercentage := ServCrMemoLine2."VAT %";
                  REPEAT
                    UpdateTaxAmtAndTaxableAmt(ServCrMemoLine2.Amount,ServCrMemoLine2."Amount Including VAT",TaxableAmount,TaxAmount);
                  UNTIL ServCrMemoLine2.NEXT = 0;
                  // Invoice->TaxTotal->TaxSubtotal
                  AddElement(XMLCurrNode,'TaxSubtotal','',DocNameSpace2,XMLNewChild,Prefix2);
                  XMLCurrNode := XMLNewChild;
                  AddElement(XMLCurrNode,'TaxableAmount',
                    OIOUBLDocumentEncode.DecimalToText(TaxableAmount),DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
                  XMLCurrNode := XMLCurrNode.ParentNode;

                  AddElement(XMLCurrNode,'TaxAmount',
                    OIOUBLDocumentEncode.DecimalToText(TaxAmount),DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
                  XMLCurrNode := XMLCurrNode.ParentNode;

                  // CreditMemo->TaxTotal->TaxSubtotal->TaxCategory
                  AddElement(XMLCurrNode,'TaxCategory','',DocNameSpace2,XMLNewChild,Prefix2);
                  XMLCurrNode := XMLNewChild;

                  AddElement(XMLCurrNode,'ID',GetTaxCategoryID(ServCrMemoLine2."VAT Calculation Type",VATPercentage),
                    DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxcategoryid-1.1');
                  AddAttribute(XMLCurrNode,'schemeAgencyID','320');
                  XMLCurrNode := XMLCurrNode.ParentNode;

                  AddElement(XMLCurrNode,'Percent',OIOUBLDocumentEncode.DecimalToText(VATPercentage),
                    DocNameSpace,XMLNewChild,Prefix);

                  // CreditMemo->TaxTotal->TaxSubtotal->TaxCategory->TaxScheme
                  AddElement(XMLCurrNode,'TaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);
                  XMLCurrNode := XMLNewChild;

                  AddElement(XMLCurrNode,'ID','63',DocNameSpace,XMLNewChild,Prefix);
                  XMLCurrNode := XMLNewChild;
                  AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxschemeid-1.1');
                  XMLCurrNode := XMLCurrNode.ParentNode;
                  AddElement(XMLCurrNode,'Name','Moms',DocNameSpace,XMLNewChild,Prefix);

                  XMLCurrNode := XMLCurrNode.ParentNode;
                  XMLCurrNode := XMLCurrNode.ParentNode;
                  XMLCurrNode := XMLCurrNode.ParentNode;
                END;
                XMLCurrNode := XMLCurrNode.ParentNode;
              END;

              // CreditMemo->LegalMonetaryTotal
              TaxableAmount := 0;
              TaxAmount := 0;

              ServCrMemoLine2.RESET;
              ServCrMemoLine2.COPY(ServCrMemoLine);
              IF ServCrMemoLine2.FINDSET THEN
                REPEAT
                  TaxableAmount := TaxableAmount + ServCrMemoLine2.Amount + ServCrMemoLine2."Inv. Discount Amount" +
                    ServCrMemoLine2."Line Discount Amount";
                  TotalAmount := TotalAmount + ServCrMemoLine2."Amount Including VAT";
                  TaxAmount := TaxAmount + ServCrMemoLine2."Amount Including VAT" - ServCrMemoLine2.Amount;
                  ServCrMemoLine2."VAT Identifier" := '';
                UNTIL ServCrMemoLine2.NEXT = 0;

              AddElement(XMLCurrNode,'LegalMonetaryTotal','',DocNameSpace2,XMLNewChild,Prefix2);
              XMLCurrNode := XMLNewChild;

              AddElement(XMLCurrNode,'LineExtensionAmount',OIOUBLDocumentEncode.DecimalToText(TaxableAmount),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'currencyID',CurrencyCode);
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'TaxExclusiveAmount',OIOUBLDocumentEncode.DecimalToText(TaxAmount),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
              XMLCurrNode := XMLCurrNode.ParentNode;

              AddElement(XMLCurrNode,'TaxInclusiveAmount',OIOUBLDocumentEncode.DecimalToText(TotalAmount),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
              XMLCurrNode := XMLCurrNode.ParentNode;

              IF TotalInvDiscountAmount > 0 THEN BEGIN
                AddElement(XMLCurrNode,'AllowanceTotalAmount',OIOUBLDocumentEncode.DecimalToText(TotalInvDiscountAmount),
                  DocNameSpace,XMLNewChild,Prefix);
                XMLCurrNode := XMLNewChild;
                AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
                XMLCurrNode := XMLCurrNode.ParentNode;
              END;

              AddElement(XMLCurrNode,'PayableAmount',OIOUBLDocumentEncode.DecimalToText(TotalAmount),
                DocNameSpace,XMLNewChild,Prefix);
              XMLCurrNode := XMLNewChild;
              AddAttribute(XMLCurrNode,'currencyID',"Currency Code");
              XMLCurrNode := XMLCurrNode.ParentNode;

              XMLCurrNode := XMLCurrNode.ParentNode;

              // CreditMemo->CreditMemoLine
              REPEAT
                ServCrMemoLine.TESTFIELD(Description);

                AddElement(XMLCurrNode,'CreditNoteLine','',DocNameSpace2,XMLNewChild,Prefix2);
                XMLCurrNode := XMLNewChild;

                AddElement(XMLCurrNode,'ID',FORMAT(ServCrMemoLine."Line No."),DocNameSpace,XMLNewChild,Prefix);
                AddElement(XMLCurrNode,'CreditedQuantity',OIOUBLDocumentEncode.DecimalToText(ServCrMemoLine.Quantity),
                  DocNameSpace,XMLNewChild,Prefix);
                XMLCurrNode := XMLNewChild;
                AddAttribute(XMLCurrNode,'unitCode',OIOUBLDocumentEncode.GetUoMCode(ServCrMemoLine."Unit of Measure Code"));
                XMLCurrNode := XMLCurrNode.ParentNode;

                AddElement(XMLCurrNode,'LineExtensionAmount',
                  OIOUBLDocumentEncode.DecimalToText(ServCrMemoLine.Amount + ServCrMemoLine."Inv. Discount Amount" +
                    ServCrMemoLine."Line Discount Amount"),DocNameSpace,XMLNewChild,Prefix);
                XMLCurrNode := XMLNewChild;
                AddAttribute(XMLNewChild,'currencyID',"Currency Code");
                XMLCurrNode := XMLCurrNode.ParentNode;

                AddElement(XMLCurrNode,'TaxTotal','',DocNameSpace2,XMLNewChild,Prefix2);
                XMLCurrNode := XMLNewChild;

                AddElement(XMLCurrNode,'TaxAmount',
                  OIOUBLDocumentEncode.DecimalToText(ServCrMemoLine."Amount Including VAT" - ServCrMemoLine.Amount),
                  DocNameSpace,XMLNewChild,Prefix);
                XMLCurrNode := XMLNewChild;
                AddAttribute(XMLCurrNode,'currencyID',CurrencyCode);
                XMLCurrNode := XMLCurrNode.ParentNode;

                AddElement(XMLCurrNode,'TaxSubtotal','',DocNameSpace2,XMLNewChild,Prefix2);
                XMLCurrNode := XMLNewChild;
                AddElement(XMLCurrNode,'TaxableAmount',
                  OIOUBLDocumentEncode.DecimalToText(ServCrMemoLine.Amount),DocNameSpace,XMLNewChild,Prefix);
                XMLCurrNode := XMLNewChild;
                AddAttribute(XMLCurrNode,'currencyID',CurrencyCode);
                XMLCurrNode := XMLCurrNode.ParentNode;

                AddElement(XMLCurrNode,'TaxAmount',
                  OIOUBLDocumentEncode.DecimalToText(ServCrMemoLine."Amount Including VAT" - ServCrMemoLine.Amount),
                  DocNameSpace,XMLNewChild,Prefix);
                XMLCurrNode := XMLNewChild;
                AddAttribute(XMLCurrNode,'currencyID',CurrencyCode);
                XMLCurrNode := XMLCurrNode.ParentNode;

                AddElement(XMLCurrNode,'TaxCategory','',DocNameSpace2,XMLNewChild,Prefix2);
                XMLCurrNode := XMLNewChild;

                AddElement(XMLCurrNode,'ID',GetTaxCategoryID(ServCrMemoLine."VAT Calculation Type",ServCrMemoLine."VAT %"),
                  DocNameSpace,XMLNewChild,Prefix);
                XMLCurrNode := XMLNewChild;
                AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxcategoryid-1.1');
                AddAttribute(XMLCurrNode,'schemeAgencyID','320');
                XMLCurrNode := XMLCurrNode.ParentNode;

                AddElement(XMLCurrNode,'Percent',OIOUBLDocumentEncode.DecimalToText(ServCrMemoLine."VAT %"),
                  DocNameSpace,XMLNewChild,Prefix);

                // CreditMemo->CreditMemoLine->TaxTotal->TaxSubtotal->TaxCategory->TaxScheme
                AddElement(XMLCurrNode,'TaxScheme','',DocNameSpace2,XMLNewChild,Prefix2);
                XMLCurrNode := XMLNewChild;

                AddElement(XMLCurrNode,'ID','63',DocNameSpace,XMLNewChild,Prefix);
                XMLCurrNode := XMLNewChild;
                AddAttribute(XMLCurrNode,'schemeID','urn:oioubl:id:taxschemeid-1.1');
                XMLCurrNode := XMLCurrNode.ParentNode;
                AddElement(XMLCurrNode,'Name','Moms',DocNameSpace,XMLNewChild,Prefix);

                XMLCurrNode := XMLCurrNode.ParentNode;
                XMLCurrNode := XMLCurrNode.ParentNode;
                XMLCurrNode := XMLCurrNode.ParentNode;
                XMLCurrNode := XMLCurrNode.ParentNode;

                // CreditMemo->CreditMemoLine->Item
                AddElement(XMLCurrNode,'Item','',DocNameSpace2,XMLNewChild,Prefix2);
                XMLCurrNode := XMLNewChild;

                AddElement(XMLCurrNode,'Description',ServCrMemoLine.Description,DocNameSpace,XMLNewChild,Prefix);
                AddElement(XMLCurrNode,'Name',COPYSTR(ServCrMemoLine.Description,1,40),DocNameSpace,XMLNewChild,Prefix);

                // CreditMemo->CreditMemoLine->Item->SellersItemIdentification
                AddElement(XMLCurrNode,'SellersItemIdentification','',DocNameSpace2,XMLNewChild,Prefix2);
                XMLCurrNode := XMLNewChild;

                AddElement(XMLCurrNode,'ID',ServCrMemoLine."No.",DocNameSpace,XMLNewChild,Prefix);
                XMLCurrNode := XMLNewChild;
                AddAttribute(XMLCurrNode,'schemeID','n/a');
                XMLCurrNode := XMLCurrNode.ParentNode;

                XMLCurrNode := XMLCurrNode.ParentNode;
                XMLCurrNode := XMLCurrNode.ParentNode;

                // CreditMemo->CreditMemoLine->Price
                AddElement(XMLCurrNode,'Price','',DocNameSpace2,XMLNewChild,Prefix2);
                XMLCurrNode := XMLNewChild;

                AddElement(XMLCurrNode,'PriceAmount',FORMAT(ServCrMemoLine."Unit Price",0,9),
                  DocNameSpace,XMLNewChild,Prefix);
                XMLCurrNode := XMLNewChild;
                AddAttribute(XMLCurrNode,'currencyID',CurrencyCode);
                XMLCurrNode := XMLCurrNode.ParentNode;

                AddElement(XMLCurrNode,'BaseQuantity',OIOUBLDocumentEncode.DecimalToText(ABS(ServCrMemoLine.Quantity)),
                  DocNameSpace,XMLNewChild,Prefix);
                XMLCurrNode := XMLNewChild;
                AddAttribute(XMLNewChild,'unitCode',OIOUBLDocumentEncode.GetUoMCode(ServCrMemoLine."Unit of Measure Code"));
                XMLCurrNode := XMLCurrNode.ParentNode;

                XMLCurrNode := XMLCurrNode.ParentNode;
                XMLCurrNode := XMLCurrNode.ParentNode;

              UNTIL ServCrMemoLine.NEXT = 0;
            END;

            ServiceMgtSetup.GET;
            ServiceMgtSetup."OIOUBL Service Cr. Memo Path" := DELCHR(ServiceMgtSetup."OIOUBL Service Cr. Memo Path",'>','\');
            XMLdocOut.Save(FromFile);
            ToFile := RBMgt.DownloadTempFile(FromFile);
            IF RBMgt.CanRunDotNetOnClient THEN BEGIN
              ServiceMgtSetup.VerifyAndSetOIOUBLPath(DocumentType::"Credit Memo");
              ToFile := RBMgt.DownloadTempFile(FromFile);
              RBMgt.CopyClientFile(ToFile,STRSUBSTNO('%1\%2.xml',ServiceMgtSetup."OIOUBL Service Cr. Memo Path","No."),TRUE);
            END ELSE BEGIN
              FileName := STRSUBSTNO('%1.xml',"No.");
              IF ServiceMgtSetup."OIOUBL Service Cr. Memo Path" <> '' THEN
                MESSAGE(STRSUBSTNO(PleaseUsetheStdCRNotePath,ServiceMgtSetup."OIOUBL Service Cr. Memo Path"))
              ELSE
                MESSAGE(UsetheIOULBClientPath);
              DOWNLOAD(FromFile,'',ServiceMgtSetup."OIOUBL Service Cr. Memo Path",'',FileName);
            END;

            ServCrMemoHeader2.GET("No.");
            ServCrMemoHeader2."Electronic Credit Memo Created" := TRUE;
            ServCrMemoHeader2.MODIFY;
          END;

  }
  CODE
  {
    VAR
      GLSetup@1101100001 : Record 98;
      CompanyInfo@1101100003 : Record 79;
      ServiceMgtSetup@1101100007 : Record 5911;
      OIOUBLDocumentEncode@1060005 : Codeunit 11128570;
      OIOUBLDOMManagement@1060003 : Codeunit 11128571;
      TotalInvDiscountAmount@1060002 : Decimal;
      Header@1060001 : Text[1000];
      GLSetupRead@1101100000 : Boolean;
      CompanyInfoRead@1101100002 : Boolean;
      PleaseUsetheStdCRNotePath@1060007 : TextConst 'ENU=Please save the file under %1.';
      UsetheIOULBClientPath@1060004 : TextConst 'ENU=Please save the file to a location from which it can be retrieved by the OIOUBL function.';

    LOCAL PROCEDURE ReadGLSetup@1101100000();
    BEGIN
      IF NOT GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
    END;

    LOCAL PROCEDURE ReadCompanyInfo@1101100002();
    BEGIN
      IF NOT CompanyInfoRead THEN BEGIN
        CompanyInfo.GET;
        CompanyInfoRead := TRUE;
      END;
    END;

    PROCEDURE GetTaxCategoryID@1060038(Type@1060000 : 'Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax';VATPercent@1060001 : Decimal) : Text[15];
    BEGIN
      CASE Type OF
        Type::"Normal VAT":
          BEGIN
            IF VATPercent <> 0 THEN
              EXIT('StandardRated');
            EXIT('ZeroRated');
          END;
        Type::"Full VAT":
          EXIT('StandardRated');
        Type::"Reverse Charge VAT":
          EXIT('ReverseCharge');
        ELSE
          EXIT('ZeroRated');
      END;
    END;

    PROCEDURE UpdateTaxAmtAndTaxableAmt@1060001(Amount@1060000 : Decimal;AmountIncludingVAT@1060001 : Decimal;VAR TaxableAmountParam@1060002 : Decimal;VAR TaxAmountParam@1060003 : Decimal);
    BEGIN
      TaxableAmountParam := TaxableAmountParam + Amount;
      TaxAmountParam := TaxAmountParam + AmountIncludingVAT - Amount;
    END;

    BEGIN
    END.
  }
}

