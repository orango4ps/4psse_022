OBJECT Table 11012057 Intercompany Relation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnRename=BEGIN
               ERROR('');
             END;

    CaptionML=[ENU=Intercompany Relations;
               NOR=Konserninterne Relasjoner;
               SVE=Koncerninterna relationer];
    LookupPageID=Page11012112;
  }
  FIELDS
  {
    { 1   ;   ;Supplying Company   ;Text30        ;TableRelation=Company.Name;
                                                   CaptionML=[ENU=Supplying Company;
                                                              NOR=Leverende  selskap;
                                                              SVE=Levererande f”retag];
                                                   NotBlank=Yes }
    { 2   ;   ;Receiving Company   ;Text30        ;TableRelation=Company.Name;
                                                   CaptionML=[ENU=Receiving Company;
                                                              NOR=Mottakselskap;
                                                              SVE=Mottagningsf”retag];
                                                   NotBlank=Yes }
    { 3   ;   ;Supplying Company IC Account;Code20;OnValidate=BEGIN
                                                                ValidateICAccount("Supplying Company", "Supplying Company IC Account");
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupICAccount("Supplying Company", "Supplying Company IC Account");
                                                              ValidateICAccount("Supplying Company", "Supplying Company IC Account");
                                                            END;

                                                   CaptionML=ENU=Supplying Company IC Account }
    { 5   ;   ;Receiving Company IC Account;Code20;OnValidate=BEGIN
                                                                ValidateICAccount("Receiving Company", "Receiving Company IC Account");
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupICAccount("Receiving Company", "Receiving Company IC Account");
                                                              ValidateICAccount("Receiving Company", "Receiving Company IC Account");
                                                            END;

                                                   CaptionML=ENU=Receiving Company IC Account }
    { 13  ;   ;Source Code         ;Code10        ;OnValidate=BEGIN
                                                                SourceCodeRec.CHANGECOMPANY("Receiving Company");
                                                                SourceCodeRec.GET("Source Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              SourceCodeRec.CHANGECOMPANY("Receiving Company");
                                                              //SourceCodeRec.Code := "Source Code";
                                                              IF PAGE.RUNMODAL(0, SourceCodeRec) = ACTION::LookupOK THEN
                                                                VALIDATE("Source Code", SourceCodeRec.Code);
                                                            END;

                                                   CaptionML=[ENU=Source Code;
                                                              NOR=Kildekode;
                                                              SVE=Ursprungskod] }
    { 20  ;   ;Vendor Posting Group;Code20        ;TableRelation="Vendor Posting Group";
                                                   OnLookup=BEGIN
                                                              CheckCompanyIC;
                                                              VendorPostingGroupRec.Code := "Vendor Posting Group";
                                                              IF PAGE.RUNMODAL(0, VendorPostingGroupRec) = ACTION::LookupOK THEN
                                                                VALIDATE("Vendor Posting Group", VendorPostingGroupRec.Code);
                                                            END;

                                                   CaptionML=[ENU=Vendor Posting Group;
                                                              NOR=Leverand›rsbokf›ringsmal;
                                                              SVE=Leverant”rsbokf”ringsmall] }
    { 30  ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   OnLookup=BEGIN
                                                              CheckCompanyIC;
                                                              GenBusinessPostingGroup.Code := "Gen. Bus. Posting Group";
                                                              IF PAGE.RUNMODAL(0, GenBusinessPostingGroup) = ACTION::LookupOK THEN
                                                                VALIDATE("Gen. Bus. Posting Group", GenBusinessPostingGroup.Code);
                                                            END;

                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              NOR=Bokf›ringsgruppe - firma;
                                                              SVE=Gen. r”relsebokf”ringsmall] }
    { 480 ;   ;Dimension Set ID Receiving C.;Integer;
                                                   TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDocDimReceivingCompany;
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Dimension Set ID Receiving Company;
                                                   Editable=No }
    { 481 ;   ;Dimension Set ID Supplying C.;Integer;
                                                   TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDocDimSupplyingCompany;
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Dimension Set ID Supplying Company;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Supplying Company,Receiving Company     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@11012001 : TextConst 'ENU=%1 %2 does not exist in %3 %4.';
      SourceCodeRec@1210190003 : Record 230;
      Text001@1100485000 : TextConst 'ENU=%1 of %2 %3 must be No in %4 %5.';
      VendorPostingGroupRec@1100525000 : Record 93;
      GenBusinessPostingGroup@1100528300 : Record 250;

    PROCEDURE CheckCompanyIC@32();
    BEGIN
      VendorPostingGroupRec.CHANGECOMPANY("Receiving Company");
      GenBusinessPostingGroup.CHANGECOMPANY("Receiving Company");
    END;

    LOCAL PROCEDURE ValidateICAccount@1100528400(CompanyName2@1100528400 : Text[30];AccountNo@1100528401 : Code[20]);
    VAR
      GLAccount@1100528402 : Record 15;
      Company@1100528403 : Record 2000000006;
    BEGIN
      IF AccountNo = '' THEN
        EXIT;

      GLAccount.CHANGECOMPANY(CompanyName2);
      IF NOT GLAccount.GET(AccountNo) THEN
        ERROR(
          Text000, GLAccount.TABLECAPTION, AccountNo, Company.TABLECAPTION, CompanyName2);
      IF GLAccount."Direct Posting" THEN
        ERROR(
          Text001, GLAccount.FIELDCAPTION("Direct Posting"), GLAccount.TABLECAPTION,
          AccountNo, Company.TABLECAPTION, CompanyName2);
    END;

    LOCAL PROCEDURE LookupICAccount@1100528410(CompanyName2@1100528400 : Text[30];VAR AccountNo@1100528401 : Code[20]);
    VAR
      GLAccount@1100528402 : Record 15;
    BEGIN
      GLAccount.CHANGECOMPANY(CompanyName2);
      GLAccount."No." := AccountNo;
      IF PAGE.RUNMODAL(0, GLAccount) = ACTION::LookupOK THEN
        AccountNo := GLAccount."No.";
    END;

    PROCEDURE GetICAccountOfCurrentCompany@1100528402() ICAccount : Code[20];
    BEGIN
      CASE COMPANYNAME OF
        "Supplying Company":
          ICAccount := "Supplying Company IC Account";
        "Receiving Company":
          ICAccount := "Receiving Company IC Account";
      END;
    END;

    PROCEDURE AddICRelationDimsOfCurrentCompany@1100529402(VAR DimSetID@1100529404 : Integer;VAR GlobalDimVal1@1100529403 : Code[20];VAR GlobalDimVal2@1100529402 : Code[20]);
    VAR
      DimMgt@1100529401 : Codeunit 408;
      DimSetIDArr@1100529405 : ARRAY [10] OF Integer;
      DimSetToAdd@1100529400 : Integer;
    BEGIN
      //T007402
      CASE COMPANYNAME OF
        "Supplying Company":
          DimSetToAdd := "Dimension Set ID Supplying C.";
        "Receiving Company":
          DimSetToAdd := "Dimension Set ID Receiving C.";
      END;
      IF DimSetToAdd = 0 THEN
        EXIT;

      DimSetIDArr[1] := DimSetID;
      DimSetIDArr[2] := DimSetToAdd;

      DimSetID := DimMgt.GetCombinedDimensionSetID(DimSetIDArr,GlobalDimVal1,GlobalDimVal2);
    END;

    PROCEDURE ShowDocDimReceivingCompany@1100529400();
    VAR
      OldDimSetID@1000 : Integer;
      DimMgt@1100529400 : Codeunit 408;
    BEGIN
      DimMgt.SetTableID(DATABASE::"Intercompany Relation");
      DimMgt.SetCompany("Receiving Company");
      OldDimSetID := "Dimension Set ID Receiving C.";
      "Dimension Set ID Receiving C." :=
        DimMgt.EditDimensionSet(
          "Dimension Set ID Receiving C.",STRSUBSTNO('%1 %2',"Supplying Company","Receiving Company"));
      IF OldDimSetID <> "Dimension Set ID Receiving C." THEN
        MODIFY;
    END;

    PROCEDURE ShowDocDimSupplyingCompany@1100529401();
    VAR
      OldDimSetID@1000 : Integer;
      DimMgt@1100529400 : Codeunit 408;
    BEGIN
      DimMgt.SetTableID(DATABASE::"Intercompany Relation");
      DimMgt.SetCompany("Supplying Company");
      OldDimSetID := "Dimension Set ID Supplying C.";
      "Dimension Set ID Supplying C." :=
        DimMgt.EditDimensionSet(
          "Dimension Set ID Supplying C.",STRSUBSTNO('%1 %2',"Supplying Company","Receiving Company"));
      IF OldDimSetID <> "Dimension Set ID Supplying C." THEN
        MODIFY;
    END;

    BEGIN
    END.
  }
}

