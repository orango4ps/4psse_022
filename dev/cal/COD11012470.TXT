OBJECT Codeunit 11012470 Xrm 4PS Integration
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      IntegrationTableMappingNotFoundErr@1000000008 : TextConst '@@@="%1 = Integration Table Mapping caption, %2 = Table caption for the table which is not mapped";DEU=Es wurde keine %1 fÅr Tabelle %2 gefunden.;ENU=No %1 was found for table %2.;NLD=Er is geen %1 gevonden voor tabel %2.;NOR=Finner ingen %1 for tabellen %2.;SVE=Ingen %1 hittades fîr tabell %2 .';

    PROCEDURE Get4PSCRMTableNo@32(NAVTableID@1000 : Integer) : Integer;
    BEGIN
      //Given normal NAV table no., return equivalent CRM integration table no.
      CASE NAVTableID OF
        DATABASE::"Try-out":
          EXIT(DATABASE::"CRM Opportunity");
        DATABASE::"Contact Feature Group":
          EXIT(DATABASE::"CRM Feature Group");
        DATABASE::"Contact Feature":
          EXIT(DATABASE::"CRM Feature");
        DATABASE::"Contact Feature Type":
          EXIT(DATABASE::"CRM Feature Type");
        DATABASE::"Try-out Line":
          EXIT(DATABASE::"CRM Connection");
      END;
    END;

    PROCEDURE Get4PSDefaultDirection@1000000013(NAVTableID@1000000000 : Integer) : Integer;
    VAR
      IntegrationTableMapping@1000000001 : Record 5335;
    BEGIN
      //Given NAV table number, return integration direction
      CASE NAVTableID OF
        DATABASE::"Try-out",
        DATABASE::"Contact Feature Type",
        DATABASE::"Try-out Line":
          EXIT(IntegrationTableMapping.Direction::Bidirectional);
        DATABASE::"Contact Feature Group",
        DATABASE::"Contact Feature":
          EXIT(IntegrationTableMapping.Direction::ToIntegrationTable);
      END;
    END;

    PROCEDURE Get4PSNameFieldNo@1000000016(TableID@1000000000 : Integer) : Integer;
    VAR
      Tryout@1000000001 : Record 11012750;
      CRMOpportunity@1000000002 : Record 5343;
      ContactFeatureGroup@1000000003 : Record 11012751;
      CRMFeatureGroup@1000000004 : Record 11124935;
      ContactFeature@1000000005 : Record 11012752;
      CRMFeature@1000000006 : Record 11124936;
      ContactFeatureType@1000000007 : Record 11012753;
      CRMFeatureType@1000000008 : Record 11124937;
      TryoutLine@1000000009 : Record 11012755;
      CRMConnection@1000000011 : Record 11124938;
    BEGIN
      //Given NAV table number, return key field
      CASE TableID OF
        DATABASE::"Try-out":
          EXIT(Tryout.FIELDNO(Description));
        DATABASE::"CRM Opportunity":
          EXIT(CRMOpportunity.FIELDNO(StepId));
        DATABASE::"Contact Feature Group":
          EXIT(ContactFeatureGroup.FIELDNO(Description));
        DATABASE::"CRM Feature Group":
          EXIT(CRMFeatureGroup.FIELDNO(fps_description));
        DATABASE::"Contact Feature":
          EXIT(ContactFeature.FIELDNO(Code));
        DATABASE::"CRM Feature":
          EXIT(CRMFeature.FIELDNO(fps_code));
        DATABASE::"Contact Feature Type":
          EXIT(ContactFeatureType.FIELDNO(Code));
        DATABASE::"CRM Feature Type":
          EXIT(CRMFeatureType.FIELDNO(fps_code));
        DATABASE::"Try-out Line":
          EXIT(TryoutLine.FIELDNO("Contact Person Name"));
        DATABASE::"CRM Connection":
          EXIT(CRMConnection.FIELDNO(Description));
      END;
    END;

    PROCEDURE ManageCreateNewRecordFromCRM@1000000007(TableID@1000 : Integer);
    VAR
      IntegrationTableMapping@1001 : Record 5335;
      CRMOpportunityList@1003 : Page 5343;
    BEGIN
      //Handle creating a new record in NAV from data in CRM
      GetIntegrationTableMapping(IntegrationTableMapping,TableID);

      // Open the right kind of CRM List page, allowing creation
      CASE TableID OF
        DATABASE::"Try-out":
          BEGIN
            CRMOpportunityList.SetAllowCreateFromCRM(TRUE);
            CRMOpportunityList.RUNMODAL;
          END;
      END;
    END;

    LOCAL PROCEDURE GetIntegrationTableMapping@9(VAR IntegrationTableMapping@1001 : Record 5335;TableID@1000 : Integer);
    VAR
      TableMetadata@1002 : Record 2000000136;
    BEGIN
      //Given NAV table number, get the corresponding integration table mapping record.
      IntegrationTableMapping.SETRANGE("Synch. Codeunit ID",CODEUNIT::"CRM Integration Table Synch.");
      IntegrationTableMapping.SETRANGE("Table ID",TableID);
      IF NOT IntegrationTableMapping.FINDFIRST THEN BEGIN
        TableMetadata.GET(TableID);
        ERROR(IntegrationTableMappingNotFoundErr,IntegrationTableMapping.TABLECAPTION,TableMetadata.Caption);
      END;
    END;

    PROCEDURE OpenRecordCardPage@36(RecordID@1008 : RecordID) : Boolean;
    VAR
      Tryout@1007 : Record 11012750;
      RecordRef@1000 : RecordRef;
    BEGIN
      // Open the right kind of card page
      RecordRef := RecordID.GETRECORD;
      CASE RecordID.TABLENO OF
        DATABASE::"Try-out":
          BEGIN
            RecordRef.SETTABLE(Tryout);
            PAGE.RUN(PAGE::"Try-out",Tryout);
            EXIT(TRUE);
          END;
        ELSE
          EXIT(FALSE);
      END;
    END;

    LOCAL PROCEDURE GetSourceDestCode@38(SourceRecordRef@1001 : RecordRef;DestinationRecordRef@1000 : RecordRef) : Text;
    BEGIN
      //returns string used to identify source table and destination table combined
      IF (SourceRecordRef.NUMBER <> 0) AND (DestinationRecordRef.NUMBER <> 0) THEN
        EXIT(STRSUBSTNO('%1-%2',SourceRecordRef.NAME,DestinationRecordRef.NAME));
      EXIT('');
    END;

    BEGIN
    {
      4PS PD(metx) 20-12-2017 XRM-4PS Integration. Initial release. This unit provides general "helper" type handling
      4PS PD(uk) 20-01-2019 XRM-4PS Integration changes.
    }
    END.
  }
}

