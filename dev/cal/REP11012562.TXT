OBJECT Report 11012562 Modify Plant Type Rates
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Tarife nach Werkzeugart anpassen;
               ENU=Modify Plant Type Rates;
               NLD=Tarieven per materieelsoort aanpassen;
               NOR=Endre maskintypesatser;
               SVE=éndra Maskinstypsavgifter];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF RentalRateType = 0 THEN
                    ERROR(Text000);

                  IF (RentalRateType IN [RentalRateType::Rental, RentalRateType::Both]) AND BasedOnInternal AND (SurchPercExternal = 0) THEN
                    ERROR(Text002);

                  RoundingMethod.SETRANGE(Code,RoundingMethod.Code);
                END;

    UsageCategory=Tasks;
  }
  DATASET
  {
    { 8752;    ;DataItem;PlntType            ;
               DataItemTable=Table11012551;
               OnPreDataItem=BEGIN
                               CASE RentalRateType OF
                                 RentalRateType::Rental:
                                   SETFILTER("Rental Type", '<>%1', "Rental Type"::"Sales/Buy Back");
                                 RentalRateType::"Sales / Buy Back":
                                   SETFILTER("Rental Type", '<>%1', "Rental Type"::Rental);
                                 RentalRateType::Both:
                                   SETRANGE("Rental Type");
                               END;

                               Window.OPEN(Text001);
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1,Code);

                                  IF RateBy IN [RateBy::PlantType, RateBy::Both] THEN
                                    ProcessRate('');
                                END;

               ReqFilterFields=Code }

    { 5114;1   ;DataItem;                    ;
               DataItemTable=Table11012552;
               OnPreDataItem=BEGIN
                               IF NOT (RateBy IN [RateBy::PlantNo, RateBy::Both]) THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  ProcessRate("No.");
                                END;

               ReqFilterFields=No.;
               DataItemLink=Plant Type=FIELD(Code) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnInit=BEGIN
               RateBy := RateBy::Both;
             END;

      OnOpenPage=BEGIN
                   IF RateFactorRentalInternal = 0 THEN
                     RateFactorRentalInternal := 1;
                   IF RateFactorRentalExternal = 0 THEN
                     RateFactorRentalExternal := 1;
                   IF RateFactorSalesBB = 0 THEN
                     RateFactorSalesBB := 1;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1100525000;2;Field  ;
                  CaptionML=[DEU=Tarife nach;
                             ENU=Rates by;
                             NLD=Tarieven per;
                             NOR=Avgifter etter;
                             SVE=Avgifter efter];
                  OptionCaptionML=[DEU=Werkzeugart,Werkzeugnr.,Beide;
                                   ENU=Plant Type,Plant No,Both;
                                   NLD=Materieelsoort,Materieelnummer,Beide;
                                   NOR=Maskintype,Maskinnr.,Begge;
                                   SVE=Maskintyp,Maskinnr,BÜda];
                  SourceExpr=RateBy }

      { 1   ;2   ;Field     ;
                  CaptionML=[DEU=Mietart;
                             ENU=Rental Type;
                             NLD=Huurtype;
                             NOR=Leietype;
                             SVE=Uthyrningstyp];
                  OptionCaptionML=[DEU=,Miete,Verkauf / RÅckkauf,Beide;
                                   ENU=,Rental,Sales / Buy Back,Both;
                                   NLD=,Huur,Verkoop / terugkoop,Beide;
                                   NOR=,Leie,Salg/Tilbakekjõp,Begge;
                                   SVE=,Uthyrning,FîrsÑljning/Üterkîp,BÜda];
                  BlankZero=Yes;
                  SourceExpr=RentalRateType }

      { 7   ;2   ;Field     ;
                  CaptionML=[DEU=Neue Tarife erstellen;
                             ENU=Create New Rates;
                             NLD=Nieuwe tarieven aanmaken;
                             NOR=Opprett nye satser;
                             SVE=Skapa nya avgifter];
                  SourceExpr=MakeNewRates }

      { 21  ;2   ;Group     ;
                  CaptionML=[DEU=Kopieren in;
                             ENU=Copy to.;
                             NLD=Kopiâren naar;
                             NOR=Kopier til;
                             SVE=Kopiera till] }

      { 3   ;3   ;Field     ;
                  CaptionML=[DEU=Startdatum;
                             ENU=Starting Date;
                             NLD=Begindatum;
                             NOR=Startdato;
                             SVE=Startdatum];
                  SourceExpr=ToDate }

      { 5   ;2   ;Field     ;
                  CaptionML=[DEU=Faktor - Miete intern;
                             ENU=Factor - Rental Internal;
                             NLD=Factor - huur intern;
                             NOR=Faktor;
                             SVE=Faktor];
                  DecimalPlaces=0:5;
                  NotBlank=Yes;
                  SourceExpr=RateFactorRentalInternal;
                  MinValue=0 }

      { 1100528500;2;Field  ;
                  CaptionML=[DEU=Faktor - Miete extern;
                             ENU=Factor - Rental External;
                             NLD=Factor - huur extern];
                  DecimalPlaces=0:5;
                  NotBlank=Yes;
                  SourceExpr=RateFactorRentalExternal;
                  MinValue=0 }

      { 1100528501;2;Field  ;
                  CaptionML=[DEU=Faktor - Verkauf/RÅckkauf;
                             ENU=Factor - Sales/Buy Back;
                             NLD=Factor - verkoop/terugkoop];
                  DecimalPlaces=0:5;
                  NotBlank=Yes;
                  SourceExpr=RateFactorSalesBB;
                  MinValue=0 }

      { 1100485004;2;Group  ;
                  CaptionML=[DEU=Berechnung externen Miettarifs;
                             ENU=Calculation Enternal Rental Rate;
                             NLD=Berekening extern huurtarief;
                             NOR=Beregning av eksterne leiesatser;
                             SVE=BerÑkning av externa uthyrningsavgifter] }

      { 1100485002;3;Field  ;
                  CaptionML=[DEU=GegrÅndet auf internen Miettarif;
                             ENU=Based on Internal Rate;
                             NLD=Gebaseerd op intern huurtarief;
                             NOR=Basert pÜ intern sats;
                             SVE=Baserad pÜ interna avgifter];
                  SourceExpr=BasedOnInternal }

      { 1100485000;3;Field  ;
                  CaptionML=[DEU=Zuschlagsprozentsatz extern;
                             ENU=Surcharge Percentage External;
                             NLD=Opslagpercentage extern;
                             NOR=Ekstern tilleggsgebyrsprosent;
                             SVE=Extern tillÑggsavgiftsprocent];
                  SourceExpr=SurchPercExternal;
                  MinValue=0 }

      { 4   ;2   ;Field     ;
                  CaptionML=[DEU=Minimalbetrag;
                             ENU=Minimum Amount;
                             NLD=Minimumbedrag;
                             NOR=Minimumsbelõp;
                             SVE=Minimibelopp];
                  DecimalPlaces=2:5;
                  SourceExpr=MinRateLimit }

      { 6   ;2   ;Field     ;
                  CaptionML=[DEU=Rundungsmethode;
                             ENU=Rounding Method;
                             NLD=Afrondingsmethode;
                             NOR=Avrundingsmetode;
                             SVE=Avrundningsmetod];
                  SourceExpr=RoundingMethod.Code;
                  TableRelation="Rounding Method" }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@11012011 : TextConst 'DEU=AuswÑhlen Mietart in Registerkarte ''Optionen''.;ENU=Select Rental Type in Option Tab;NLD=Selecteer Huurtype in tabblad Opties.;NOR=Velg utleiestype pÜ fanen alternativer;SVE=VÑlj uthyrningstyp pÜ alternativfliken';
      Text001@11012012 : TextConst 'DEU=Verarbeiten Werkzeugart #1##########;ENU=Process Plant Type  #1##########;NLD=Verwerk materieelsoort #1##########;NOR=Behandle maskintype  #1##########;SVE=Behandla Maskinstyp  #1##########';
      RoundingMethod@11012000 : Record 42;
      RateRec@11012001 : Record 11012567;
      RateRec2@11012002 : Record 11012567;
      Window@11012003 : Dialog;
      RateBy@1100525000 : 'PlantType,PlantNo,Both';
      RentalRateType@11012004 : ',Rental,Sales / Buy Back,Both';
      RateExists@11012005 : Boolean;
      MakeNewRates@11012006 : Boolean;
      BasedOnInternal@1100485000 : Boolean;
      RateFactorRentalInternal@11012007 : Decimal;
      RateFactorRentalExternal@1100528500 : Decimal;
      RateFactorSalesBB@1100528501 : Decimal;
      MinRateLimit@11012008 : Decimal;
      NewRate@11012009 : Decimal;
      SurchPercExternal@1100485001 : Decimal;
      ToDate@11012010 : Date;
      Text002@1100485002 : TextConst 'DEU=Zuschlagsprozentsatz externen Miettarifs muss eingegeben werden.;ENU=Surcharge Percentage External Rental Rate must be filled.;NLD=Opslagpercentage extern huurtarief moet ingegeven worden.;NOR=Ekstern tilleggsgebyrprosent for leiesats mÜ fylles ut.;SVE=Extern tillÑggsavgiftsprocent fîr uthyrningsavgift mÜste fyllas i.';

    PROCEDURE ProcessRate@1100525002(PlantNo@1100525000 : Code[10]);
    BEGIN
      WITH PlntType DO BEGIN
        CASE "Rental Type" OF
          "Rental Type"::Rental:
            BEGIN
              RateRec.SETRANGE("Rental Type",RateRec."Rental Type"::Rental);
              GetRate(PlantNo);
            END;
          "Rental Type"::"Sales/Buy Back":
            BEGIN
              RateRec.SETRANGE("Rental Type",RateRec."Rental Type"::"Sales / Buy Back");
              GetRate(PlantNo);
            END;
          "Rental Type"::Both:
            BEGIN
              IF (RentalRateType <> RentalRateType::"Sales / Buy Back") THEN BEGIN
                RateRec.SETRANGE("Rental Type",RateRec."Rental Type"::Rental);
                GetRate(PlantNo);
              END;
              IF (RentalRateType <> RentalRateType::Rental) THEN BEGIN
                RateRec.SETRANGE("Rental Type",RateRec."Rental Type"::"Sales / Buy Back");
                GetRate(PlantNo);
              END;
            END;
        END;
      END;
    END;

    PROCEDURE GetRate@8(PlantNo@1100525000 : Code[10]);
    VAR
      RateCompRec@1210190000 : Record 11012585;
      RateComp2Rec@1210190002 : Record 11012585;
      DateFrom@1210190001 : Date;
    BEGIN
      WITH RateRec DO BEGIN
        SETRANGE("Plant Type",PlntType.Code);
        SETRANGE("Plant No.",PlantNo);
        SETRANGE("Starting Date",0D,ToDate);
        IF FINDLAST THEN BEGIN
          DateFrom := "Starting Date";
          RateExists := ("Starting Date" = ToDate);
          IF RateExists OR MakeNewRates THEN BEGIN
            "Starting Date" := ToDate;
            CalculateNewRates;
            RateRec2 := RateRec;
            IF RateRec2.FIND('=') THEN
              MODIFY
            ELSE BEGIN
              RateRec."Ending Date" := 0D;
              INSERT;
              RateCompRec.SETRANGE("Rental Type","Rental Type");
              RateCompRec.SETRANGE("Plant Type","Plant Type");
              RateCompRec.SETRANGE("Plant No.","Plant No.");
              RateCompRec.SETRANGE("Starting Date",DateFrom);
              IF RateCompRec.FINDSET THEN BEGIN
                REPEAT
                  RateComp2Rec := RateCompRec;
                  RateComp2Rec."Starting Date" := "Starting Date";
                  IF RateComp2Rec.INSERT THEN;
                UNTIL RateCompRec.NEXT = 0;
              END;
            END;
          END;
        END;
      END;
    END;

    PROCEDURE CalculateNewRates@5();
    BEGIN
      WITH RateRec DO BEGIN
        CASE "Rental Type" OF
          "Rental Type"::Rental:
            BEGIN
              IF "Rental Rate (Days)" >= MinRateLimit THEN BEGIN
                CalculateNewRate("Rental Rate (Days)", FALSE, RateFactorRentalInternal);
                CalculateNewRate("Rental Rate External (Days)", BasedOnInternal, RateFactorRentalExternal);
              END;
            END;
          "Rental Type"::"Sales / Buy Back":
            BEGIN
              IF "Sales Rate" >= MinRateLimit THEN BEGIN
                CalculateNewRate("Sales Rate", FALSE, RateFactorSalesBB);
                CalculateNewRate("Buy Back Rate", FALSE, RateFactorSalesBB);
              END;
            END;
        END;
      END;
    END;

    PROCEDURE CalculateNewRate@1(VAR NewRate@11012000 : Decimal;IBasedOnInternal@1100485000 : Boolean;Factor@1100528500 : Decimal);
    BEGIN
      IF (RateRec."Rental Type" = RateRec."Rental Type"::Rental) AND IBasedOnInternal THEN
        NewRate := RateRec."Rental Rate (Days)" * ((100 + SurchPercExternal) / 100)
      ELSE
        NewRate := NewRate * Factor;
      IF RoundingMethod.Code <> '' THEN BEGIN
        RoundingMethod."Minimum Amount" := NewRate;
        IF RoundingMethod.FIND('=<') THEN BEGIN
          NewRate := NewRate + RoundingMethod."Amount Added Before";
          IF RoundingMethod.Precision > 0 THEN
            NewRate :=
              ROUND(
                NewRate,
                RoundingMethod.Precision,COPYSTR('=><',RoundingMethod.Type + 1,1));
          NewRate := NewRate + RoundingMethod."Amount Added After";
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

