OBJECT Codeunit 6085702 Purch. Doc. - Identification
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW13.70.00.5.00.07,4PS14.00;
  }
  PROPERTIES
  {
    TableNo=6085590;
    OnRun=VAR
            Template@1000000000 : Record 6085579;
            Field@1000000001 : Record 6085580;
            Vendor@1000000002 : Record 23;
            SourceExcl@161024012 : Record 6085598;
            DocCat@161024015 : Record 6085575;
            CaptureEngine@1000000004 : Codeunit 6085575;
            RecIDMgt@161024014 : Codeunit 6085604;
            CaptureMgt@6085574 : Codeunit 6085576;
            VATRegNo@1000000003 : Code[20];
            Found@161024013 : Boolean;
            RecIDTreeID@161024016 : Integer;
            SourceID@6085573 : Integer;
            RecRef@1160040000 : RecordRef;
            FoundVendor@1000 : Record 23;
            CoCRegNo@1100528200 : Code[20];
          BEGIN
            // *********************************************************************************************************************************
            // SOURCE NO ALREADY IDENTIFIED. VALIDATING THE NO. WILL MAKE THE SYSTEM INSERT THE DEFAULT TEMPLATE
            // *********************************************************************************************************************************
            IF "Source Record ID Tree ID" <> 0 THEN BEGIN
              VALIDATE("Source Record ID Tree ID","Source Record ID Tree ID");
              MODIFY(TRUE);
              EXIT;
            END;

            // *********************************************************************************************************************************
            // FIND THE IDENTIFICATION TEMPLATE
            // *********************************************************************************************************************************
            Template.RESET;
            Template.SETCURRENTKEY("Category Code",Type);
            Template.SETRANGE("Category Code","Document Category Code");
            Template.SETRANGE(Type,Template.Type::Identification);
            IF NOT Template.FINDFIRST THEN
              EXIT;

            Field.SETRANGE("Template No.",Template."No.");
            IF NOT Field.FINDFIRST THEN
              EXIT;

            DocCat.GET("Document Category Code");

            // *********************************************************************************************************************************
            // CAPTURE THE VAT REG. NO FROM THE DOCUMENT VALUES
            // *********************************************************************************************************************************
            //**4PS.sn
            Field.SETRANGE(Code, 'VATREGNO');
            IF Field.FINDFIRST THEN
            //**4PS.en
              VATRegNo := COPYSTR(CaptureEngine.CaptureField(Rec,0,Field,FALSE),1,MAXSTRLEN(Vendor."VAT Registration No."));

            // *********************************************************************************************************************************
            // IF REGISTRATION NO. WAS FOUND THEN TRY TO FIND A VENDOR WITH THE NO.
            // *********************************************************************************************************************************
            VATRegNo := CaptureMgt.ReplaceIllegalFilterCharacters(VATRegNo,FALSE,MAXSTRLEN(VATRegNo));
            IF VATRegNo <> '' THEN BEGIN
              Vendor.SETCURRENTKEY("VAT Registration No.");
              Vendor.SETRANGE("VAT Registration No.",VATRegNo);
              IF Vendor.FINDSET THEN
                REPEAT
                  RecIDTreeID := RecIDMgt.GetRecIDTreeID2(
                    DocCat."Source Table No.",Vendor.FIELDNO("No."),DocCat."Document Category GUID",Vendor."No.");
                  Found := NOT SourceExcl.GET("Document Category Code",RecIDTreeID);
                  IF Found THEN
                    FoundVendor := Vendor;
                UNTIL Found OR (Vendor.NEXT = 0);

              IF NOT Found THEN BEGIN
                VATRegNo := RemoveLeadingLetters(VATRegNo);
                IF (STRLEN(VATRegNo) > 6) THEN BEGIN
                  Vendor.SETRANGE("VAT Registration No.",VATRegNo);

                  IF Vendor.FINDSET THEN
                    REPEAT
                      RecIDTreeID := RecIDMgt.GetRecIDTreeID2(
                        DocCat."Source Table No.",Vendor.FIELDNO("No."),DocCat."Document Category GUID",Vendor."No.");
                      Found := NOT SourceExcl.GET("Document Category Code",RecIDTreeID);
                      IF Found THEN
                        FoundVendor := Vendor;
                    UNTIL Found OR (Vendor.NEXT = 0);

                  IF NOT Found THEN BEGIN
                    Vendor.SETFILTER("VAT Registration No.",'%1','*' + VATRegNo + '*');
                    IF Vendor.FINDSET THEN
                      REPEAT
                        RecIDTreeID := RecIDMgt.GetRecIDTreeID2(
                          DocCat."Source Table No.",Vendor.FIELDNO("No."),DocCat."Document Category GUID",Vendor."No.");
                        Found := NOT SourceExcl.GET("Document Category Code",RecIDTreeID);
                        IF Found THEN
                          FoundVendor := Vendor;
                      UNTIL Found OR (Vendor.NEXT = 0);
                  END;
                END;
              END;
            END;

            //**4PS.sn
            // *********************************************************************************************************************************
            // Check on CoC Registration No.
            // *********************************************************************************************************************************
            IF NOT Found THEN BEGIN
              Field.SETRANGE(Code, 'COCREGNO');
              IF Field.FINDFIRST THEN
                CoCRegNo := COPYSTR(CaptureEngine.CaptureField(Rec,0,Field,FALSE), 1, MAXSTRLEN(Vendor."COC Registration No."));

              IF CoCRegNo <> '' THEN BEGIN
                Vendor.SETRANGE("COC Registration No.",CoCRegNo);
                IF Vendor.FINDSET THEN
                  REPEAT
                    RecIDTreeID := RecIDMgt.GetRecIDTreeID2(
                      DocCat."Source Table No.",Vendor.FIELDNO("No."),DocCat."Document Category GUID",Vendor."No.");
                    Found := NOT SourceExcl.GET("Document Category Code",RecIDTreeID);
                    IF Found THEN
                      FoundVendor := Vendor;
                  UNTIL Found OR (Vendor.NEXT = 0);


                IF NOT Found THEN BEGIN
                  Vendor.SETFILTER("COC Registration No.",'%1','*' + CoCRegNo + '*');
                  IF Vendor.FINDSET THEN
                    REPEAT
                      RecIDTreeID := RecIDMgt.GetRecIDTreeID2(
                        DocCat."Source Table No.",Vendor.FIELDNO("No."),DocCat."Document Category GUID",Vendor."No.");
                      Found := NOT SourceExcl.GET("Document Category Code",RecIDTreeID);
                      IF Found THEN
                        FoundVendor := Vendor;
                    UNTIL Found OR (Vendor.NEXT = 0);
                END;
              END;
            END;
            //**4PS.en

            IF NOT Found THEN
              EXIT;

            RecRef.GETTABLE(FoundVendor);
            SourceID := RecIDMgt.GetRecIDTreeID(RecRef,TRUE);
            COMMIT;

            VALIDATE("Source Record ID Tree ID",SourceID);
            MODIFY(TRUE);
          END;

  }
  CODE
  {

    PROCEDURE CaptureVATNo@161024012(VAR CaptureFieldVal@161024012 : Record 6085597);
    VAR
      CompInfo@161024013 : Record 79;
    BEGIN
      // *********************************************************************************************************************************
      // THIS FUNCTION IS CALLED DURING IDENTIFICATION. IF THE SYSTEM FINDS OUR OWN VAT REG. NO, IT WILL CONTINUE SEARCHING THE DOCUMENT
      // FOR THE VENDOR VAT NO.
      // *********************************************************************************************************************************
      CompInfo.GET;
      WITH CaptureFieldVal DO BEGIN
        // WE ONLY WAN'T TO VALIDATE THE VALUE IF THE VALUE ALREADY CONFORMS TO THE SPECIFIED REGEX-RULES
        IF "File Rule Entry No." = 0 THEN
          EXIT;

        // REMOVE ALL LETTERS FROM THE VAT NO. AND COMPARE ONLY THE NUMBER-SEQUENCE
        "Is Valid" := RemoveLeadingLetters(Value) <> RemoveLeadingLetters(CompInfo."VAT Registration No.")
      END;
    END;

    PROCEDURE RemoveLeadingLetters@1000000000(Text@1000000000 : Text[1024]) : Text[1024];
    BEGIN
      WHILE Text <> '' DO BEGIN
        IF (Text[1] >= 'A') AND (Text[1] <= 'Z') THEN
          Text := COPYSTR(Text,2)
        ELSE
          EXIT(Text);
      END;
      EXIT(Text);
    END;

    BEGIN
    END.
  }
}

