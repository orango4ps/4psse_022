OBJECT XMLport 81618 Imp. Ship-to Address IMSE
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS7.00Toolsv9.MC;
  }
  PROPERTIES
  {
    Permissions=TableData 21=rm;
    DefaultFieldsValidation=No;
    Format/Evaluate=C/SIDE Format/Evaluate;
    PreserveWhiteSpace=Yes;
    OnInitXMLport=BEGIN
                    XMLNo := 81618;
                    MainTableID := 222;
                  END;

    OnPreXMLport=BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   ConversionXMLPort.GET(XMLNo);
                 END;

    Format=Variable Text;
    FieldDelimiter=<None>;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{7B539476-C20A-46BC-A552-62FED55766AD}];  ;Root                ;Element ;Text     }

    { [{A667E51D-CE85-4A0D-946E-DE2CCC52ED51}];1 ;ShipToAddress       ;Element ;Table   ;
                                                  SourceTable=Table222;
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              ClearFields;
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 lvInt@1100285000 : Integer;
                                                                                 lvDate@1100285001 : Date;
                                                                               BEGIN
                                                                                 StripData;
                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Ship-to Address");
                                                                                 WITH "Ship-to Address" DO BEGIN
                                                                                   CustCde := ConvMgt.DetermineNewCode(
                                                                                     LookupCustomerNo,
                                                                                     CommentRec."Table Name"::Customer,
                                                                                     CustCommentCde,
                                                                                     A);

                                                                                   VALIDATE("Customer No.", CustCde);
                                                                                   VALIDATE(Code, B);
                                                                                   VALIDATE(Name, C);
                                                                                   VALIDATE("Name 2", D);
                                                                                   Address := E;
                                                                                   "Address 2" := F;
                                                                                   City := ConvMgt.PostCodePresent(K);
                                                                                   IF City = '' THEN
                                                                                     City := G;
                                                                                   VALIDATE(Contact, H);
                                                                                   VALIDATE("Phone No.", I);
                                                                                   VALIDATE("Country/Region Code", J);
                                                                                   "Post Code" := K;
                                                                                   VALIDATE("E-Mail", L);
                                                                                   VALIDATE("Home Page", M);

                                                                                   CLEAR(lvInt);
                                                                                   IF N <> '' THEN BEGIN
                                                                                     EVALUATE(lvInt,N);
                                                                                     IF lvInt = 1 THEN
                                                                                       VALIDATE("Shipping Address", TRUE);
                                                                                   END;

                                                                                   CLEAR(lvInt);
                                                                                   IF O <> '' THEN BEGIN
                                                                                     EVALUATE(lvInt,O);
                                                                                     IF lvInt = 1 THEN
                                                                                       VALIDATE("Project Address", TRUE);
                                                                                   END;

                                                                                   CLEAR(lvInt);
                                                                                   IF P <> '' THEN BEGIN
                                                                                     EVALUATE(lvInt,P);
                                                                                     IF lvInt = 1 THEN
                                                                                       VALIDATE("Billing Address", TRUE);
                                                                                   END;

                                                                                   INSERT(TRUE);
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{3AC77EC7-9326-4B76-BA5F-EA1F70D4DA67}];2 ;A                   ;Element ;Text    ;
                                                  Width=20 }

    { [{1B889F9B-B9E2-4749-96B0-D22BA1117049}];2 ;B                   ;Element ;Text    ;
                                                  Width=50 }

    { [{D76B46B3-243B-4FF7-8D1D-C7B64CCFA492}];2 ;C                   ;Element ;Text    ;
                                                  Width=50 }

    { [{11AAC24C-6612-4FE6-9973-FE5EF2EF2C43}];2 ;D                   ;Element ;Text    ;
                                                  Width=50 }

    { [{F0633544-507F-4C5E-A35B-A0DD95F11E63}];2 ;E                   ;Element ;Text    ;
                                                  Width=50 }

    { [{98E7308F-19D5-4AF6-89FB-48DB78E52124}];2 ;F                   ;Element ;Text    ;
                                                  Width=50 }

    { [{23B2F6EB-78F9-48FB-BC70-858F6A53A74C}];2 ;G                   ;Element ;Text    ;
                                                  Width=50 }

    { [{DADC8C67-C0A0-4BAA-978C-F55ABF73C1B2}];2 ;H                   ;Element ;Text     }

    { [{5F1B729D-C0F5-4564-8226-34239EFF4415}];2 ;I                   ;Element ;Text     }

    { [{9F8E3726-8CFC-4396-AED5-CEDB06767B2A}];2 ;J                   ;Element ;Text     }

    { [{43FA715D-0520-4F37-ABBB-C720DC53B7C9}];2 ;K                   ;Element ;Text     }

    { [{3A24A68E-9B9A-4BA9-BA1D-BCF073361836}];2 ;L                   ;Element ;Text     }

    { [{7A531839-A1AD-40B9-B4ED-F9E826142F55}];2 ;M                   ;Element ;Text     }

    { [{082CD5BE-C234-42FC-B8A2-3738DB5EDF99}];2 ;N                   ;Element ;Text     }

    { [{801A91E3-6001-491C-B3D0-E9AE7221C30E}];2 ;O                   ;Element ;Text     }

    { [{E7361FAB-2445-4CB4-A8F5-CC91F21591EF}];2 ;P                   ;Element ;Text     }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100409000;;Container;
                  Name=Options;
                  ContainerType=ContentArea }

      { 1100409001;1;Field  ;
                  Name=LookupCustomerNo;
                  CaptionML=ENU=Find Customer by Old Customer No;
                  SourceExpr=LookupCustomerNo;
                  OnValidate=BEGIN
                               IF NOT LookupCustomerNo THEN
                                 CustCommentCde := '';
                             END;
                              }

      { 1100409002;1;Field  ;
                  Name=CustCommentCde;
                  CaptionML=ENU=Comment Code old Customer;
                  SourceExpr=CustCommentCde;
                  TableRelation="Comment Code" }

    }
  }
  CODE
  {
    VAR
      "// GENERAL"@1100525062 : Integer;
      ConversionXMLPort@1100409001 : Record 11020640;
      XMLNo@1100409000 : Integer;
      MainTableID@1100409002 : Integer;
      CommentRec@1100525061 : Record 97;
      ConvMgt@1100525059 : Codeunit 11020212;
      NoSerieMgt@1100525058 : Codeunit 396;
      ImpLineCounter@1100409007 : Integer;
      XmlShowStatus@1100409006 : Codeunit 11130006;
      "//"@1100525049 : Integer;
      "// THIS DATAPORT"@1100525048 : Integer;
      LookupCustomerNo@1100409005 : Boolean;
      CustCommentCde@1100409004 : Code[20];
      CustLedgerEntry@1100285000 : Record 21;
      Text001@1100285001 : TextConst 'ENU=Customer Ledger Entrie Not Found.\Customer: %1\Document No.: %2';
      CustCde@1100285002 : Code[20];

    PROCEDURE AddConversionFileFormatLine@1100529901();
    VAR
      ConversionFileFormat@1100409000 : Record 11020691;
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [XMLport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,"Ship-to Address".FIELDNAME("Customer No."),'Code20','OldTxt');
        InsertColumnLine(XMLNo,'B',MainTableID,"Ship-to Address".FIELDNAME(Code),'Code10','');
        InsertColumnLine(XMLNo,'C',MainTableID,"Ship-to Address".FIELDNAME(Name),'Text50','');
        InsertColumnLine(XMLNo,'D',MainTableID,"Ship-to Address".FIELDNAME("Name 2"),'Text50','');
        InsertColumnLine(XMLNo,'E',MainTableID,"Ship-to Address".FIELDNAME(Address),'Text50','');
        InsertColumnLine(XMLNo,'F',MainTableID,"Ship-to Address".FIELDNAME("Address 2"),'Text50','');
        InsertColumnLine(XMLNo,'G',MainTableID,"Ship-to Address".FIELDNAME(City),'Text30','');
        InsertColumnLine(XMLNo,'H',MainTableID,"Ship-to Address".FIELDNAME(Contact),'Text50','');
        InsertColumnLine(XMLNo,'I',MainTableID,"Ship-to Address".FIELDNAME("Phone No."),'Text30','');
        InsertColumnLine(XMLNo,'J',MainTableID,"Ship-to Address".FIELDNAME("Country/Region Code"),'Code10','');
        InsertColumnLine(XMLNo,'K',MainTableID,"Ship-to Address".FIELDNAME("Post Code"),'Code20','');
        InsertColumnLine(XMLNo,'L',MainTableID,"Ship-to Address".FIELDNAME("E-Mail"),'Text80','');
        InsertColumnLine(XMLNo,'M',MainTableID,"Ship-to Address".FIELDNAME("Home Page"),'Text80','');
        InsertColumnLine(XMLNo,'N',MainTableID,"Ship-to Address".FIELDNAME("Shipping Address"),'Integer','OneTrueTxt');
        InsertColumnLine(XMLNo,'O',MainTableID,"Ship-to Address".FIELDNAME("Project Address"),'Integer','OneTrueTxt');
        InsertColumnLine(XMLNo,'P',MainTableID,"Ship-to Address".FIELDNAME("Billing Address"),'Integer','OneTrueTxt');
      END;
    END;

    PROCEDURE FillConversionXMLPortFields@1100409004();
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      ConversionXMLPort.MODIFY;
    END;

    PROCEDURE StripData@1100485000();
    BEGIN
    END;

    PROCEDURE ClearFields@1100529902();
    BEGIN
      CLEAR("Ship-to Address");

      CLEAR(A);
      CLEAR(B);
      CLEAR(C);
      CLEAR(D);
      CLEAR(E);
      CLEAR(F);
      CLEAR(G);
      CLEAR(H);
      CLEAR(I);
      CLEAR(J);
      CLEAR(K);
      CLEAR(L);
      CLEAR(M);
      CLEAR(N);
      CLEAR(O);
      CLEAR(P);
    END;

    BEGIN
    END.
  }
}

