OBJECT Codeunit 11012606 UAR Hour Acc. Reconcile
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11012609;
    OnRun=BEGIN
            HourAccRec.COPY(Rec);
            Code;
          END;

  }
  CODE
  {
    VAR
      Text000@11012006 : TextConst 'DEU=Keine Stunden von Mitarbeiter in Woche %1-%2.;ENU=No hours of employee in week %1-%2.;NLD=Geen uren van werknemer in week %1-%2.;SVE=Inga tider f”r anst„lld f”r vecka %1-%2';
      Text001@11012010 : TextConst 'DEU=Projekt ist nicht eingegeben worden.;ENU=Project is not filled.;NLD=Project is niet gevuld.;SVE=Projket „r inte ifylld';
      Text002@1210190003 : TextConst 'DEU=Element ist nicht eingegeben worden.;ENU=Element is not filled.;NLD=Element is niet gevuld.;SVE=Element har inte fyllts i.';
      Text003@11012011 : TextConst 'DEU=Kostenkomponente ist nicht eingegeben worden.;ENU=Cost Component is not filled.;NLD=Kostencomponent is niet gevuld.;SVE=Kostnadsdel „r inte ifylld';
      Text004@1210190002 : TextConst 'DEU=Anzahl Stunden (51) kleiner als die Norm Stunden (%2);ENU=Number of hours (%1) is less than the norm hours (%2);NLD=Aantal uren (%1) kleiner dan de norm uren (%2);SVE=Antal timmar (%1) „r l„gre „n normtiden (%2)';
      Text005@1210190007 : TextConst 'DEU=Bemerkung: Anzahl Stunden (%1) gr”sser als die Norm Stunden (%2);ENU=Note: Number of hours (%1) is greater than the norm hours (%2);NLD=Opm.: Aantal uren (%1) groter dan de norm uren (%2);SVE=OBS: Antal timmar (%1) „r h”gre „n normtiden (%2)';
      Text006@11012013 : TextConst 'DEU=Es wurden keine Fehler gefunden.;ENU=No errors found.;NLD=Er zijn geen fouten gevonden.;NOR=Ingen feil funnet;SVE=Inga fel funna.';
      ProjRec@1210190004 : Record 11072003;
      HourAccRec@1210190000 : Record 11012609;
      HourAccLineRec@11012002 : Record 11012610;
      PostedHourAccLineRec@1210190006 : Record 11012614;
      EmplRec@1210190001 : Record 5200;
      ErrorRec@11012003 : Record 11012051;
      HourAccFunctionsCU@1210190018 : Codeunit 11012607;
      TotalHours@1210190005 : Decimal;
      Text007@1100485000 : TextConst 'DEU=Serviceauftrag ist nicht eingegeben worden.;ENU=Service Order is not filled.;NLD=Serviceorder is niet gevuld.;SVE=Serviceorder „r inte ifylld';

    PROCEDURE Code@2();
    VAR
      lvHoursPresent@1210190000 : Boolean;
    BEGIN
      WITH HourAccRec DO BEGIN
        IF (Year = 0) OR (Week = 0) OR ("Employee No." = '') THEN
          EXIT;

        EmplRec.RESET;
        IF EmplRec.FIND('-') THEN BEGIN
          REPEAT
            lvHoursPresent := FALSE;
            TotalHours := 0;

            SETRANGE(Year,Year);
            SETRANGE(Week,Week);
            SETRANGE("Employee No.",EmplRec."No.");
            IF FIND('-') THEN BEGIN
              HourAccLineRec.SETRANGE(Year, Year);
              HourAccLineRec.SETRANGE(Week, Week);
              HourAccLineRec.SETRANGE("Employee No.", EmplRec."No.");
              IF HourAccLineRec.FIND('-') THEN BEGIN
                HourAccFunctionsCU.BuildAutomaticPause(Year, Week, EmplRec."No.");
                REPEAT
                  IF (HourAccLineRec.Type = HourAccLineRec.Type::Project) AND (HourAccLineRec."Project No." = '') THEN
                    StoreMessage(Text001);
                  IF (HourAccLineRec."Project No." <> '') AND (HourAccLineRec.Element = '') THEN BEGIN
                    IF HourAccLineRec."Receiving Company" <> '' THEN
                      ProjRec.CHANGECOMPANY(HourAccLineRec."Receiving Company")
                    ELSE
                      ProjRec.CHANGECOMPANY(COMPANYNAME);
                    ProjRec.GET(HourAccLineRec."Project No.");
                    IF (ProjRec."Posting Element Mandatory") THEN
                      StoreMessage(Text002);
                  END;
                  IF (HourAccLineRec.Type = HourAccLineRec.Type::Service) THEN BEGIN
                    IF (HourAccLineRec."Service Order No." = '') THEN
                      StoreMessage(Text007);
                  END;
                  IF HourAccLineRec."Cost Component" = '' THEN
                    StoreMessage(Text003);
                  IF NOT HourAccLineRec.EmptyLine THEN BEGIN
                    lvHoursPresent := TRUE;
                    HourAccFunctionsCU.RecalculateNumberOfHours(HourAccLineRec, 'Reconcile');
                    COMMIT;
                    TotalHours := TotalHours + HourAccLineRec.Hours
                  END;
                UNTIL HourAccLineRec.NEXT = 0;
              END;
            END;
            CLEAR(HourAccLineRec);

            IF EmplRec."Account Hours" = EmplRec."Account Hours"::"Required according to Norm" THEN BEGIN
              PostedHourAccLineRec.SETRANGE(Year,Year);
              PostedHourAccLineRec.SETRANGE(Week,Week);
              PostedHourAccLineRec.SETRANGE("Employee No.", EmplRec."No.");
              IF PostedHourAccLineRec.FIND('-') THEN BEGIN
                REPEAT
                  lvHoursPresent := TRUE;
                  TotalHours := TotalHours + PostedHourAccLineRec.Hours
                UNTIL PostedHourAccLineRec.NEXT = 0;
              END;

              IF NOT lvHoursPresent THEN BEGIN
                StoreMessage(STRSUBSTNO(Text000,Year,Week));
              END;
              IF lvHoursPresent AND (EmplRec."Norm Hours" <> 0) AND (TotalHours <> EmplRec."Norm Hours") THEN BEGIN
                IF (TotalHours < EmplRec."Norm Hours") THEN
                  StoreMessage(STRSUBSTNO(Text004, TotalHours, EmplRec."Norm Hours"))
                ELSE
                  StoreMessage(STRSUBSTNO(Text005, TotalHours, EmplRec."Norm Hours"));
              END;
            END;
          UNTIL EmplRec.NEXT = 0;
        END;

        COMMIT;
        ErrorRec.SETRANGE("User ID", USERID);
        ErrorRec.SETRANGE("Source Type", ErrorRec."Source Type"::"Hours Accounting");
        IF ErrorRec.FIND('-') THEN
          PAGE.RUNMODAL(PAGE::Errors, ErrorRec)
        ELSE
          MESSAGE(Text006);
      END;
    END;

    PROCEDURE StoreMessage@7(lvMess@11012001 : Text[250]);
    VAR
      lvError@11012002 : Integer;
    BEGIN
      WITH ErrorRec DO BEGIN
        SETRANGE("User ID", USERID);
        SETRANGE("Source Type", "Source Type"::"Hours Accounting");
        IF FIND('+') THEN
          lvError := "Line No." + 1
        ELSE
          lvError := 1;

        INIT;
        "User ID" := USERID;
        "Source Type" := "Source Type"::"Hours Accounting";
        "Line No." := lvError;
        "Error message" := lvMess;
        "Employee No." := EmplRec."No.";
        "Document No." := HourAccRec."Document No.";
        "Posting Date" := HourAccRec."Posting Date";
        "Project No." := HourAccLineRec."Project No.";
        "Service Contract No." := HourAccLineRec."Service Contract No.";
        "Service Order No." := HourAccLineRec."Service Order No.";
        INSERT;
      END;
    END;

    BEGIN
    {
      Error/warning messages:
      - Check Hour Accounting of the week
    }
    END.
  }
}

