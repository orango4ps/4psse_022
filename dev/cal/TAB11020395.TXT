OBJECT Table 11020395 Impl. Company Table
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    CaptionML=[ENU=Implementation Company Table;
               NOR=Tabell Implementeringsselskap;
               SVE=Tabell implementationsf”retag];
    LookupPageID=Page11072500;
  }
  FIELDS
  {
    { 5   ;   ;Database Abbreviation;Text30       ;TableRelation="Impl. Company"."Database Abbreviation";
                                                   CaptionML=[ENU=Database Abbreviation;
                                                              NOR=Databaseforkortelse;
                                                              SVE=Databasf”rkortning] }
    { 7   ;   ;Company Abbreviation;Text30        ;TableRelation="Impl. Company"."Company Abbreviation" WHERE (Database Abbreviation=FIELD(Database Abbreviation));
                                                   CaptionML=[ENU=Company Abbreviation;
                                                              NOR=Selskapsforkortelse;
                                                              SVE=F”retagsf”rkortning] }
    { 10  ;   ;Database Company    ;Text30        ;FieldClass=Normal;
                                                   CaptionML=[ENU=Database Company;
                                                              NOR=Selskapsdatabase;
                                                              SVE=F”retagsdatabas];
                                                   Editable=No }
    { 20  ;   ;Table ID            ;Integer       ;CaptionML=[ENU=Table ID;
                                                              NOR=Tabell-ID;
                                                              SVE=Tabell-ID];
                                                   Editable=No }
    { 30  ;   ;Defined Table Type  ;Option        ;CaptionML=[ENU=Defined Table Type;
                                                              NOR=Definert tabelltype;
                                                              SVE=Definierad tabelltyp];
                                                   OptionCaptionML=[ENU=,Setup,Common Data,Basic Data,Financial Setup,Basic Cards,Input,Transaction,Not Applicable,Tools;
                                                                    NOR=,Innstilling,Felles data,Grunndata,Finansielle Innstillinger,Grunnkort,Input,Transaksjon,Ikke anvendelig,Verkt›y;
                                                                    SVE=,Inst„llning,Gemensamma data,Grunddata,Finansiella inst„llningar,Grundkort,Indata,Transaktion,Inte till„mpligt,Verktyg];
                                                   OptionString=,Setup,Common Data,Basic Data,Financial Setup,Basic Cards,Input,Transaction,Not Applicable,Tools }
    { 35  ;   ;Type of Table       ;Option        ;CaptionML=[ENU=Type of Table;
                                                              NOR=Type tabell;
                                                              SVE=Typ av tabell];
                                                   OptionCaptionML=[ENU=,Setup,Common Data,Basic Data,Financial Setup,Basic Cards,Input,Transaction,Not Applicable,Tools;
                                                                    NOR=,Innstilling,Felles data,Grunndata,Finansielle Innstillinger,Grunnkort,Input,Transaksjon,Ikke anvendelig,Verkt›y;
                                                                    SVE=,Inst„llning,Gemensamma data,Grunddata,Finansiella inst„llningar,Grundkort,Indata,Transaktion,Inte till„mpligt,Verktyg];
                                                   OptionString=,Setup,Common Data,Basic Data,Financial Setup,Basic Cards,Input,Transaction,Not Applicable,Tools;
                                                   Editable=No }
    { 50  ;   ;Table Name          ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Table),
                                                                                         ID=FIELD(Table ID)));
                                                   CaptionML=[ENU=Table Name;
                                                              NOR=Tabellnavn;
                                                              SVE=Tabellnamn];
                                                   Editable=No }
    { 60  ;   ;Table Caption       ;Text249       ;CaptionML=[ENU=Table Caption;
                                                              NOR=Tabelltittel;
                                                              SVE=Tabellrubrik];
                                                   Editable=No }
    { 87  ;   ;Central Modified Data;Boolean      ;CaptionML=[ENU=Central Modified Data;
                                                              NOR=Sentralt Endret Data;
                                                              SVE=Centrala „ndrade data] }
    { 90  ;   ;Status              ;Option        ;OnValidate=BEGIN
                                                                IF Status = Status::Definitief THEN BEGIN
                                                                  IF "Date Finished" = 0D THEN
                                                                    "Date Finished" := TODAY;
                                                                END ELSE
                                                                  "Date Finished" := 0D;
                                                              END;

                                                   CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=[ENU=In Process,Testing,Final;
                                                                    NOR=P†g†ende,Tester,Endelig;
                                                                    SVE=P†g†ende,Testar,Slutlig];
                                                   OptionString=Uitvoering,Testgereed,Definitief }
    { 95  ;   ;Responsable Person  ;Code10        ;TableRelation="Impl. Activity Person".Code;
                                                   CaptionML=[ENU=Responsable Person;
                                                              NOR=Ansvarlig;
                                                              SVE=Ansvarig] }
    { 100 ;   ;Page ID             ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Page));
                                                   OnLookup=VAR
                                                              AllObjWithCaption@1100529501 : Record 2000000058;
                                                              AllObjWithCaptionManagement@1100529500 : Codeunit 11125358;
                                                            BEGIN
                                                              AllObjWithCaption.SETRANGE("Object Type",AllObjWithCaption."Object Type"::Page);
                                                              VALIDATE("Page ID",AllObjWithCaptionManagement.SelectObjectFromList(AllObjWithCaption));
                                                            END;

                                                   CaptionML=[ENU=Page ID;
                                                              NOR=Side-ID;
                                                              SVE=Sid-ID] }
    { 120 ;   ;No. Of Comments     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Impl. Company Table Comment" WHERE (Database Abbreviation=FIELD(Database Abbreviation),
                                                                                                          Company Abbreviation=FIELD(Company Abbreviation),
                                                                                                          Table ID=FIELD(Table ID)));
                                                   CaptionML=[ENU=No. Of Remarkst;
                                                              NOR=Antall Bemerkninger;
                                                              SVE=Antal anm„rkningar];
                                                   Editable=No }
    { 130 ;   ;Expected Finish Date;Date          ;CaptionML=[ENU=Expected Finish Date;
                                                              NOR=Forventet sluttdato;
                                                              SVE=F”rv„ntat slutdatum] }
    { 140 ;   ;Date Finished       ;Date          ;CaptionML=[ENU=Finish Date;
                                                              NOR=Sluttdato;
                                                              SVE=Slutdatum] }
    { 150 ;   ;License permission  ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("License Permission"."Read Permission" WHERE (Object Type=CONST(TableData),
                                                                                                                    Object Number=FIELD(Table ID)));
                                                   CaptionML=[ENU=Current License Permission;
                                                              NOR=Aktuell Lisenstillatelse;
                                                              SVE=Aktuell licensbeh”righet];
                                                   OptionCaptionML=[ENU=" ,Yes,Indirect";
                                                                    NOR=" ,Ja,Indirekte";
                                                                    SVE=" ,Ja,Indirekt"];
                                                   OptionString=[ ,Yes,Indirect];
                                                   Editable=No }
    { 160 ;   ;Granule             ;Text250       ;CaptionML=[ENU=Granule;
                                                              NOR=Granul;
                                                              SVE=Granul];
                                                   Editable=No }
    { 170 ;   ;Granule Name        ;Text50        ;CaptionML=[ENU=Granule Name;
                                                              NOR=Granulnavn;
                                                              SVE=Granulnamn];
                                                   Editable=No }
    { 300 ;   ;Check Data          ;Option        ;OnValidate=VAR
                                                                lvExtendedTablePropRec@1100525000 : Record 11020573;
                                                                lvText001@1100525001 : TextConst 'ENU=Create Check Setup Lines not possible for table %1;NOR=Kan ikke opprette Kontroller Innstillingsrader for tabell %1;SVE=Det g†r inte att skapa kontrollera inst„llningsrader f”r tabell %1';
                                                              BEGIN
                                                                IF "Check Data" = "Check Data"::Yes THEN
                                                                  IF NOT lvExtendedTablePropRec.IsCheckSetupLineAllowed("Table ID") THEN
                                                                    ERROR(STRSUBSTNO(lvText001,"Table ID"));
                                                              END;

                                                   CaptionML=[ENU=Check Setup;
                                                              NOR=Kontroller innstillinger;
                                                              SVE=Kontrollera inst„llning];
                                                   OptionCaptionML=[ENU=No,Yes;
                                                                    NOR=Nei,Ja;
                                                                    SVE=Nej,Ja];
                                                   OptionString=No,Yes }
    { 500 ;   ;Create RIM Migration Table;Option  ;OnValidate=VAR
                                                                lvExtendedTablePropRec@1100525000 : Record 11020573;
                                                                lvText001@1100525001 : TextConst 'ENU=Create Rim Migration Table not possible for table %1;NOR=Kan ikke opprette Rim-Migrasjonstabell for tabell %1;SVE=Det g†r inte att skapa Rim-migrationstabell f”r tabell %1';
                                                              BEGIN
                                                                IF "Create RIM Migration Table" = "Create RIM Migration Table"::Yes THEN
                                                                  IF NOT lvExtendedTablePropRec.IsRimImportExportAllowed("Table ID") THEN
                                                                    ERROR(STRSUBSTNO(lvText001,"Table ID"));
                                                              END;

                                                   CaptionML=[ENU=Create Rim Migration Table;
                                                              NOR=Opprette Rim-Migrasjonstabell;
                                                              SVE=Skapa Rim-migrationstabell];
                                                   OptionCaptionML=[ENU=No,Yes;
                                                                    NOR=Nei,Ja;
                                                                    SVE=Nej,Ja];
                                                   OptionString=No,Yes }
    { 600 ;   ;Create XML Migration Table;Option  ;OnValidate=VAR
                                                                ExtendedTableProperty@1100525000 : Record 11020573;
                                                                Text001@1100525001 : TextConst 'ENU=Create Rim Migration Table not possible for table %1;NOR=Kan ikke opprette Rim-Migrasjonstabell for tabell %1;SVE=Det g†r inte att skapa Rim-migrationstabell f”r tabell %1';
                                                                XMLMigrationTable@1100525002 : Record 11020619;
                                                              BEGIN
                                                                IF "Create XML Migration Table" = "Create XML Migration Table"::Yes THEN
                                                                  IF NOT ExtendedTableProperty.IsXMLImportExportAllowed("Table ID") THEN
                                                                    ERROR(STRSUBSTNO(Text001,"Table ID",XMLMigrationTable.TABLECAPTION));
                                                              END;

                                                   CaptionML=[ENU=Create XML Export Table;
                                                              NOR=Opprette XML-eksporttabell;
                                                              SVE=Skapa XML-exporttabell];
                                                   OptionCaptionML=[ENU=No,Yes;
                                                                    NOR=Nei,Ja;
                                                                    SVE=Nej,Ja];
                                                   OptionString=No,Yes }
    { 610 ;   ;No. Of Records      ;Integer       ;CaptionML=[ENU=No. Of Records;
                                                              NOR=Antall poster;
                                                              SVE=Antal poster];
                                                   Editable=No }
    { 620 ;   ;Global Table        ;Boolean       ;CaptionML=ENU=Global Table;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Database Abbreviation,Company Abbreviation,Table ID;
                                                   Clustered=Yes }
    {    ;Database Abbreviation,Company Abbreviation,Defined Table Type }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Window@1100525003 : Dialog;
      Progress@1100525002 : Integer;
      NoOfRecords@1100525001 : Integer;
      Counter@1100525000 : Integer;
      Text014@1100525007 : TextConst 'ENU=Initialize Tables  @1@@@@@@@@@@@@@';
      Text015@1100525006 : TextConst 'ENU=Update Tables @1@@@@@@@@@@@@@';

    PROCEDURE UpdateProgressWindow@1100525005(NewProgress@11012000 : Integer);
    BEGIN
      IF NoOfRecords > 0 THEN BEGIN
        NewProgress := ROUND(NewProgress / NoOfRecords * 100,1);
        IF (NewProgress <> Progress) THEN
          Window.UPDATE(1,100 * NewProgress);
        Progress := NewProgress;
      END;
    END;

    PROCEDURE CreateRIMMigrationTable@1100525003(TableID@1100525001 : Integer);
    VAR
      lvMigrationRec@1100525000 : Record 8613;
    BEGIN
      IF TableID = 0 THEN
        EXIT;

      lvMigrationRec.INIT;
      lvMigrationRec.VALIDATE("Table ID",TableID);
      lvMigrationRec.INSERT(TRUE);
    END;

    PROCEDURE CreateXMLMigrationTable@1100525111(TableID@1100525001 : Integer);
    VAR
      XMLMigrationTable@1100525000 : Record 11020619;
    BEGIN
      IF TableID = 0 THEN
        EXIT;

      XMLMigrationTable.INIT;
      XMLMigrationTable.VALIDATE("Table ID",TableID);
      XMLMigrationTable.INSERT(TRUE);
    END;

    PROCEDURE RIMTablePossible@1100525014(VAR ExtDataRec@1100525000 : Record 11020573) : Boolean;
    BEGIN
      EXIT(
        ExtDataRec."Type of Table" IN [
          ExtDataRec."Type of Table"::"Common Data",
          ExtDataRec."Type of Table"::"Basic Data",
          ExtDataRec."Type of Table"::"Financial Setup"]);
    END;

    PROCEDURE XMLTablePossible@1100525004(VAR ExtDataRec@1100525000 : Record 11020573) : Boolean;
    BEGIN
      EXIT(
        ExtDataRec."Type of Table" IN [
          ExtDataRec."Type of Table"::Setup,
          ExtDataRec."Type of Table"::"Common Data",
          ExtDataRec."Type of Table"::"Basic Data",
          ExtDataRec."Type of Table"::"Financial Setup"]);
    END;

    PROCEDURE UpdateImplTables@1100525000(ImplCompany@1100525000 : Record 11020394;UpdateBln@1100525004 : Boolean);
    VAR
      ExtendedTableProperty@1100525002 : Record 11020573;
      ImplCompanyTable@1100525003 : Record 11020395;
      Object@1100409000 : Record 2000000001;
    BEGIN
      CLEAR(ImplCompanyTable);
      IF ExtendedTableProperty.FINDSET(FALSE,FALSE) THEN BEGIN
        IF UpdateBln THEN
          Window.OPEN(STRSUBSTNO(Text015))
        ELSE
          Window.OPEN(STRSUBSTNO(Text014));
        NoOfRecords := ExtendedTableProperty.COUNT;
        Counter := 0;
        REPEAT
          Counter := Counter + 1;
          UpdateProgressWindow(Counter);
          IF NOT ImplCompanyTable.GET(
              ImplCompany."Database Abbreviation",
              ImplCompany."Company Abbreviation",
              ExtendedTableProperty."Table ID") THEN BEGIN
            ImplCompanyTable.INIT;
            ImplCompanyTable.VALIDATE("Table ID",ExtendedTableProperty."Table ID");
            ImplCompanyTable.VALIDATE("Type of Table",ExtendedTableProperty."Type of Table");
            ImplCompanyTable."Database Abbreviation" := ImplCompany."Database Abbreviation";
            ImplCompanyTable."Company Abbreviation" := ImplCompany."Company Abbreviation";
            ImplCompanyTable."Defined Table Type" := ExtendedTableProperty."Type of Table";
            ImplCompanyTable.INSERT;
          END;
          ExtendedTableProperty.CALCFIELDS("Table Caption");
          IF NOT UpdateBln THEN
            ImplCompanyTable."Defined Table Type" := ExtendedTableProperty."Type of Table";
          ImplCompanyTable."Database Company" := ImplCompany."Database Company";
          ImplCompanyTable."Type of Table" := ExtendedTableProperty."Type of Table";
          ImplCompanyTable."Page ID" := ExtendedTableProperty."Page ID";
          ImplCompanyTable.Granule := ExtendedTableProperty.Granule;
          ImplCompanyTable."Granule Name" := ExtendedTableProperty."Granule Name";
          ImplCompanyTable."Table Caption" := ExtendedTableProperty."Table Caption";
          ImplCompanyTable.CALCFIELDS("License permission");
          IF (ImplCompanyTable."License permission" = ImplCompanyTable."License permission"::Yes) THEN BEGIN
            ImplCompanyTable."No. Of Records" := ImplCompanyTable.GetNoOfDatabaseRecords;
            ImplCompanyTable."Global Table" := ImplCompanyTable.TableIsGlobalTable;
          END;
          ImplCompanyTable.MODIFY;
        UNTIL ExtendedTableProperty.NEXT = 0;
        Window.CLOSE;
      END;

      CLEAR(ImplCompanyTable);
      ImplCompanyTable.SETRANGE("Database Abbreviation",ImplCompany."Database Abbreviation");
      ImplCompanyTable.SETRANGE("Company Abbreviation",ImplCompany."Company Abbreviation");
      IF ImplCompanyTable.FINDSET(TRUE,TRUE) THEN
        REPEAT
          IF NOT Object.GET(Object.Type::Table,'',ImplCompanyTable."Table ID") THEN
            ImplCompanyTable.DELETE(TRUE);
        UNTIL ImplCompanyTable.NEXT = 0;
    END;

    PROCEDURE GetNoOfDatabaseRecords@15() : Integer;
    VAR
      RecRef@1000 : RecordRef;
    BEGIN
      IF "Table ID" = 0 THEN
        EXIT(0);

      CALCFIELDS("License permission");
      IF "License permission" = "License permission"::" " THEN
        EXIT(0);

      RecRef.OPEN("Table ID",FALSE,"Database Company");
      EXIT(RecRef.COUNT);
    END;

    PROCEDURE TableIsGlobalTable@1100529200() : Boolean;
    VAR
      TableInformation@1100529200 : Record 2000000028;
    BEGIN
      TableInformation.SETRANGE("Company Name",' ');
      TableInformation.SETRANGE("Table No.","Table ID");
      EXIT(NOT TableInformation.ISEMPTY);
    END;

    BEGIN
    END.
  }
}

