OBJECT Page 11127350 DSP Assign Comp Serv Object SP
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=DSP Assignm. Discipline SP;
    SourceTable=Table11071724;
    PageType=ListPart;
    SourceTableTemporary=Yes;
    OnAfterGetRecord=BEGIN
                       StyleTxt := SetStyle;
                       TempDSPAssignment.COPY(DSPAssignmentCurrent);
                       IF PreviousDSPOrderLine THEN
                         TempDSPAssignment.COPY(DSPAssignmentPrevious);
                       IF RevisedDSPOrderLine THEN
                         TempDSPAssignment.COPY(DSPAssignment);
                     END;

  }
  CONTROLS
  {
    { 1100525000;0;Container;
                ContainerType=ContentArea }

    { 1100525001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100528300;2;Field  ;
                CaptionML=ENU=Line Type;
                SourceExpr=LineType;
                StyleExpr=StyleTxt }

    { 1100528805;2;Field  ;
                CaptionML=ENU=DSP Discipline;
                SourceExpr=DSPAssignment.Discipline;
                StyleExpr=StyleTxt }

    { 1100528302;2;Field  ;
                CaptionML=ENU=Version No.;
                SourceExpr=TempDSPAssignment."Version No." }

  }
  CODE
  {
    VAR
      DSPAssignment@1100528301 : Record 11126740;
      DSPAssignmentCurrent@1100528305 : Record 11126740;
      DSPAssignmentPrevious@1100528304 : Record 11126740;
      TempDSPAssignment@1100528302 : TEMPORARY Record 11126740;
      GenericTempTable@1100528802 : TEMPORARY Record 11020579;
      ServiceObject@1100528303 : Record 11071691;
      DSPManagement@1100528800 : Codeunit 11126714;
      StyleTxt@1100528801 : Text;
      SERVICEOBJECTTXT@1100528803 : TextConst 'ENU=SERVICEOBJECT';
      CURRENTTXT@1100528300 : TextConst 'ENU=Current';
      PREVIOUSTXT@1100528804 : TextConst 'ENU=Previous';
      REVISEDTXT@1100528805 : TextConst 'ENU=Revised';

    PROCEDURE InitializeRec@1100528803(EntryNo@1100528800 : BigInteger);
    VAR
      ServiceOrderObject@1100528801 : Record 11071724;
      TEMPPreviousServiceOrderObject@1100528804 : TEMPORARY Record 11071724;
      TEMPRevisedServiceOrderObject@1100528802 : TEMPORARY Record 11071724;
    BEGIN
      DSPAssignment.GET(EntryNo);
      DSPManagement.GetPreviousProcessedDspAssignment(EntryNo, DSPAssignmentPrevious);

      IF (ServiceOrderObject.GET(DSPAssignment."Service Order No.", DSPAssignment."Object No.", '')) THEN BEGIN
        DSPManagement.GetDspAssignmentByServiceOrderNoObjectNo(DSPAssignment."Service Order No.",
          DSPAssignment."Object No.", DSPAssignmentCurrent);
        COPY(ServiceOrderObject);
        INSERT;
        GenericTempTable."Key Code1" := SERVICEOBJECTTXT;
        GenericTempTable."Key Code2" := CURRENTTXT;
        GenericTempTable."Key Code3" := "Object No.";
          GenericTempTable.BigInt1 := DSPAssignmentCurrent."Entry No.";
        GenericTempTable.INSERT;
      END;

      IF (DSPAssignmentPrevious."Entry No." <> 0) THEN BEGIN
        DSPManagement.CreateTEMPServiceObject(DSPAssignmentPrevious."Entry No.", TEMPPreviousServiceOrderObject);

        IF (TEMPPreviousServiceOrderObject.FINDSET) THEN BEGIN
          COPY(TEMPPreviousServiceOrderObject);
          "Object No." += 'P';
          INSERT;
          GenericTempTable."Key Code1" := SERVICEOBJECTTXT;
          GenericTempTable."Key Code2" := PREVIOUSTXT;
          GenericTempTable."Key Code3" := "Object No.";
          GenericTempTable.BigInt1 := DSPAssignmentPrevious."Entry No.";
          GenericTempTable.INSERT;
        END;
      END;

      IF (DSPAssignment."No. Of Adjustments" <> 0) THEN BEGIN
        DSPManagement.CreateTEMPServiceObject(EntryNo, TEMPRevisedServiceOrderObject);

        IF (TEMPRevisedServiceOrderObject.FINDSET) THEN BEGIN
          COPY(TEMPRevisedServiceOrderObject);
          "Object No." += 'R';
          INSERT;
          GenericTempTable."Key Code1" := SERVICEOBJECTTXT;
          GenericTempTable."Key Code2" := REVISEDTXT;
          GenericTempTable."Key Code3" := "Object No.";
          GenericTempTable.BigInt1 := EntryNo;
          GenericTempTable.INSERT;
        END;
      END;
    END;

    LOCAL PROCEDURE RevisedDSPOrderLine@1100528800() : Boolean;
    BEGIN
      GenericTempTable.SETRANGE("Key Code1", SERVICEOBJECTTXT);
      GenericTempTable.SETRANGE("Key Code2", REVISEDTXT);
      GenericTempTable.SETRANGE("Key Code3", "Object No.");
      IF GenericTempTable.FINDFIRST THEN
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE PreviousDSPOrderLine@1100528807() : Boolean;
    BEGIN
      GenericTempTable.SETRANGE("Key Code1", SERVICEOBJECTTXT);
      GenericTempTable.SETRANGE("Key Code2", PREVIOUSTXT);
      GenericTempTable.SETRANGE("Key Code3", "Object No.");
      IF GenericTempTable.FINDFIRST THEN
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE ServiceOrderLine@1100528808() : Boolean;
    BEGIN
      GenericTempTable.SETRANGE("Key Code1", SERVICEOBJECTTXT);
      GenericTempTable.SETRANGE("Key Code2", CURRENTTXT);
      GenericTempTable.SETRANGE("Key Code3", "Object No.");
      IF GenericTempTable.FINDFIRST THEN
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE LineType@1100528805() : Text;
    BEGIN
      IF RevisedDSPOrderLine THEN EXIT(REVISEDTXT);
      IF PreviousDSPOrderLine THEN EXIT(PREVIOUSTXT);
      EXIT(CURRENTTXT);
    END;

    LOCAL PROCEDURE SetStyle@1100528806() : Text;
    BEGIN
      IF PreviousDSPOrderLine THEN EXIT('Strong');
      IF RevisedDSPOrderLine THEN EXIT('Favorable');
      EXIT('');
    END;

    BEGIN
    END.
  }
}

