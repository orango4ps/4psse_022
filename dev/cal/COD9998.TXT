OBJECT Codeunit 9998 Upgrade Tags
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [EventSubscriber(Codeunit,9999,OnGetPerCompanyUpgradeTags)]
    LOCAL PROCEDURE RegisterPerCompanyTags@3(VAR TempUpgradeTags@1000 : TEMPORARY Record 9999);
    VAR
      UpgradeTagMgt@1001 : Codeunit 9999;
    BEGIN
      UpgradeTagMgt.RegisterUpgradeTag(GetTimeRegistrationUpgradeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetNewSalesInvoiceEntityAggregateUpgradeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetNewPurchInvEntityAggregateUpgradeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetNewSalesOrderEntityBufferUpgradeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetNewSalesQuoteEntityBufferUpgradeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetNewSalesCrMemoEntityBufferUpgradeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetCleanupDataExchUpgradeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetDefaultDimensionAPIUpgradeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetBalAccountNoOnJournalAPIUpgradeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetItemCategoryOnItemAPIUpgradeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetInvoicingSetJobQueueEntriesOnHoldTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetMoveCurrencyISOCodeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetVATRepSetupPeriodRemCalcUpgradeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetVerifyIntegrationIDsUpgradeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetAddingIDToJobsUpgradeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetSalesOrderShipmentMethodUpgradeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetSalesCrMemoShipmentMethodUpgradeTag,TempUpgradeTags);
    END;

    [EventSubscriber(Codeunit,9999,OnGetPerDatabaseUpgradeTags)]
    LOCAL PROCEDURE RegisterPerDatabaseTags@6(VAR TempUpgradeTags@1000 : TEMPORARY Record 9999);
    VAR
      UpgradeTagMgt@1001 : Codeunit 9999;
    BEGIN
      UpgradeTagMgt.RegisterUpgradeTag(GetNewISVPlansUpgradeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetWorkflowWebhookWebServicesUpgradeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetExcelTemplateWebServicesUpgradeTag,TempUpgradeTags);
      UpgradeTagMgt.RegisterUpgradeTag(GetAddDeviceISVEmbUpgradeTag,TempUpgradeTags);
    END;

    [External]
    PROCEDURE GetTimeRegistrationUpgradeTag@1() : Code[250];
    BEGIN
      EXIT('284963-TimeRegistrationAPI-ReadOnly-20181010');
    END;

    [External]
    PROCEDURE GetSalesInvoiceEntityAggregateUpgradeTag@11() : Code[250];
    BEGIN
      EXIT('298839-SalesInvoiceAddingMultipleAddresses-20190213');
    END;

    [External]
    PROCEDURE GetPurchInvEntityAggregateUpgradeTag@12() : Code[250];
    BEGIN
      EXIT('294917-PurchInvoiceAddingMultipleAddresses-20190213');
    END;

    [External]
    PROCEDURE GetSalesOrderEntityBufferUpgradeTag@13() : Code[250];
    BEGIN
      EXIT('298839-SalesOrderAddingMultipleAddresses-20190213');
    END;

    [External]
    PROCEDURE GetSalesQuoteEntityBufferUpgradeTag@14() : Code[250];
    BEGIN
      EXIT('298839-SalesQuoteAddingMultipleAddresses-20190213');
    END;

    [External]
    PROCEDURE GetSalesCrMemoEntityBufferUpgradeTag@15() : Code[250];
    BEGIN
      EXIT('298839-SalesCrMemoAddingMultipleAddresses-20190213');
    END;

    [External]
    PROCEDURE GetNewSalesInvoiceEntityAggregateUpgradeTag@71() : Code[250];
    BEGIN
      EXIT('MS-317081-SalesInvoiceAddingMultipleAddresses-20190731');
    END;

    [External]
    PROCEDURE GetNewPurchInvEntityAggregateUpgradeTag@72() : Code[250];
    BEGIN
      EXIT('MS-317081-PurchInvoiceAddingMultipleAddresses-20190731');
    END;

    [External]
    PROCEDURE GetNewSalesOrderEntityBufferUpgradeTag@73() : Code[250];
    BEGIN
      EXIT('MS-317081-SalesOrderAddingMultipleAddresses-20190731');
    END;

    [External]
    PROCEDURE GetNewSalesQuoteEntityBufferUpgradeTag@74() : Code[250];
    BEGIN
      EXIT('MS-317081-SalesQuoteAddingMultipleAddresses-20190731');
    END;

    [External]
    PROCEDURE GetNewSalesCrMemoEntityBufferUpgradeTag@75() : Code[250];
    BEGIN
      EXIT('MS-317081-SalesCrMemoAddingMultipleAddresses-20190731');
    END;

    [External]
    PROCEDURE GetNewISVPlansUpgradeTag@2() : Code[250];
    BEGIN
      EXIT('MS-287563-NewISVPlansAdded-20181105');
    END;

    [External]
    PROCEDURE GetWorkflowWebhookWebServicesUpgradeTag@5() : Code[250];
    BEGIN
      EXIT('MS-281716-WorkflowWebhookWebServices-20180907');
    END;

    [External]
    PROCEDURE GetExcelTemplateWebServicesUpgradeTag@4() : Code[250];
    BEGIN
      EXIT('MS-281716-ExcelTemplateWebServices-20180907');
    END;

    [External]
    PROCEDURE GetCleanupDataExchUpgradeTag@7() : Code[250];
    BEGIN
      EXIT('MS-CleanupDataExchUpgrade-20180821');
    END;

    [External]
    PROCEDURE GetDefaultDimensionAPIUpgradeTag@8() : Code[250];
    BEGIN
      EXIT('MS-275427-DefaultDimensionAPI-20180719');
    END;

    [External]
    PROCEDURE GetBalAccountNoOnJournalAPIUpgradeTag@9() : Code[250];
    BEGIN
      EXIT('MS-275328-BalAccountNoOnJournalAPI-20180823');
    END;

    [External]
    PROCEDURE GetItemCategoryOnItemAPIUpgradeTag@10() : Code[250];
    BEGIN
      EXIT('MS-279686-ItemCategoryOnItemAPI-20180903');
    END;

    [External]
    PROCEDURE GetInvoicingSetJobQueueEntriesOnHoldTag@16() : Code[250];
    BEGIN
      EXIT('MS-294186-InvoicingSetJobQueueEntriesOnHold-20190301');
    END;

    [External]
    PROCEDURE GetMoveCurrencyISOCodeTag@17() : Code[250];
    BEGIN
      EXIT('MS-267101-MoveCurrencyISOCode-20190209');
    END;

    [External]
    PROCEDURE GetVATRepSetupPeriodRemCalcUpgradeTag@19() : Code[250];
    BEGIN
      EXIT('MS-306583-VATReportSetup-20190402');
    END;

    PROCEDURE GetAddingIDToJobsUpgradeTag@20() : Code[250];
    BEGIN
      EXIT('MS-310839-GETAddingIDToJobs-20190506');
    END;

    PROCEDURE GetAddDeviceISVEmbUpgradeTag@22() : Code[250];
    BEGIN
      EXIT('MS-312516-AddDeviceISVEmbPlan-20190601');
    END;

    PROCEDURE GetVerifyIntegrationIDsUpgradeTag@18() : Code[250];
    BEGIN
      EXIT('MS-316383-VerifyIntegrationIDsAndTable-20190627');
    END;

    PROCEDURE GetSalesOrderShipmentMethodUpgradeTag@23() : Code[250];
    BEGIN
      EXIT('MS-313998-SalesOrderShipmentMethod-20190606');
    END;

    PROCEDURE GetSalesCrMemoShipmentMethodUpgradeTag@24() : Code[250];
    BEGIN
      EXIT('MS-313998-SalesCrMemoShipmentMethod-20190606');
    END;

    BEGIN
    END.
  }
}

