OBJECT Codeunit 6085660 Capture RTC Library
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW17.00.00.5.00.08;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            CreateClientAddInEntries;
          END;

  }
  CODE
  {
    VAR
      XmlLib@1000000000 : Codeunit 6085573;
      Text001@161024012 : TextConst 'DEU=™ffnen;ENU=Open;NLD=Open;SVE=™ppen';
      Text002@161024013 : TextConst 'DEU=Umbenennen;ENU=Rename;NLD=Hernoemen';
      Text003@161024014 : TextConst 'DEU=L”schen;ENU=Delete;NLD=Verwijder;SVE=Ta bort';
      Text004@161024017 : TextConst 'DEU=Name;ENU=Name;NLD=Naam;SVE=Namn';
      Text005@161024016 : TextConst 'DEU=Benutzer;ENU=User;NLD=Gebruiker;SVE=Anv„ndare';
      Text006@161024015 : TextConst 'DEU=Datum/Uhrzeit;ENU=Date / Time;NLD=Datum/tijd';
      Text007@161024018 : TextConst 'DEU=Kopieren;ENU=Copy;NLD=Kopi‰ren;SVE=Kopia';
      Text008@1160040000 : TextConst 'DEU=Bearbeiten;ENU=Edit;NLD=Wijzigen;NOR=Rediger;SVE=Redigera';

    PROCEDURE BuildZoomCommand@1000000001(NewZoomPct@1000000003 : Integer;VAR XmlDoc@161024012 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000000 : Codeunit 6192801;
      ParamNode@1000000004 : Codeunit 6192801;
      NewNode@1000000005 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetZoomPct',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'ZoomPct',XmlLib.Dec2Text(NewZoomPct),NewNode);
    END;

    PROCEDURE BuildZoomTextCommand@1000000004(NewZoomText@1000000001 : Text[1024];VAR XmlDoc@1000000000 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000004 : Codeunit 6192801;
      ParamNode@1000000003 : Codeunit 6192801;
      NewNode@1000000002 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetZoomText',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'ZoomText',NewZoomText,NewNode);
    END;

    PROCEDURE BuildInvalidFileTextCommand@1160040000(NewInvalidFileText@1000000001 : Text[1024];VAR XmlDoc@1000 : Codeunit 6192800);
    VAR
      DocumentElement@1004 : Codeunit 6192801;
      CommandNode@1003 : Codeunit 6192801;
      ParamNode@1002 : Codeunit 6192801;
      NewNode@1001 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetInvalidFileText',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'InvalidFileText',NewInvalidFileText,NewNode);
    END;

    PROCEDURE BuildTotalNoOfPagesTextCommand@1000000005(NewTotalNoOfPagesText@1000000001 : Text[1024];VAR XmlDoc@1000000000 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000004 : Codeunit 6192801;
      ParamNode@1000000003 : Codeunit 6192801;
      NewNode@1000000002 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetTotalNoOfPages',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'TotalNoOfPagesText',NewTotalNoOfPagesText,NewNode);
    END;

    PROCEDURE BuildDrawFieldCommand@1000000007(FieldCode@1000000001 : Code[20];IsValue@1000000005 : Boolean;Top@1000000006 : Integer;Left@1000000007 : Integer;Bottom@1000000008 : Integer;Right@1000000009 : Integer;VAR XmlDoc@1000000000 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000004 : Codeunit 6192801;
      ParamNode@1000000003 : Codeunit 6192801;
      NewNode@1000000002 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','DrawField',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'FieldName',FieldCode,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'IsValue',XmlLib.Bool2Text(IsValue),NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Top',XmlLib.Dec2Text(Top),NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Left',XmlLib.Dec2Text(Left),NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Bottom',XmlLib.Dec2Text(Bottom),NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Right',XmlLib.Dec2Text(Right),NewNode);
    END;

    PROCEDURE BuildSetImageCommand@1000000010(Filename@1000000003 : Text[1024];ShowPageControls@6085573 : Boolean;VAR XmlDoc@1000000001 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000000 : Codeunit 6192801;
      ParamNode@1000000004 : Codeunit 6192801;
      NewNode@1000000005 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetImage',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'Filename',Filename,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'ShowPageControls',XmlLib.Bool2Text(ShowPageControls),NewNode);
    END;

    PROCEDURE BuildSetImageDataCommand@4(Data@1000000003 : Text;ShowPageControls@6085573 : Boolean;VAR XmlDoc@1000000001 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000000 : Codeunit 6192801;
      ParamNode@1000000004 : Codeunit 6192801;
      NewNode@1000000005 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetImage',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'Data',Data,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'ShowPageControls',XmlLib.Bool2Text(ShowPageControls),NewNode);
    END;

    PROCEDURE BuildClearImageCommand@1000000008(VAR XmlDoc@1000000001 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000000 : Codeunit 6192801;
      ParamNode@1000000004 : Codeunit 6192801;
      NewNode@1000000005 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','ClearImage',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
    END;

    PROCEDURE BuildScrollTopCommand@1000000014(VAR XmlDoc@1000000001 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000000 : Codeunit 6192801;
      ParamNode@1000000004 : Codeunit 6192801;
      NewNode@1000000005 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','ScrollToTop',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
    END;

    PROCEDURE BuildScrollToLeftEndCommand@1000000013(VAR XmlDoc@1000000001 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000000 : Codeunit 6192801;
      ParamNode@1000000004 : Codeunit 6192801;
      NewNode@1000000005 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','ScrollToLeftEnd',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
    END;

    PROCEDURE BuildScrollToRightEndCommand@1000000012(VAR XmlDoc@1000000001 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000000 : Codeunit 6192801;
      ParamNode@1000000004 : Codeunit 6192801;
      NewNode@1000000005 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','ScrollToRightEnd',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
    END;

    PROCEDURE BuildScrollToEndCommand@1000000015(VAR XmlDoc@1000000001 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000000 : Codeunit 6192801;
      ParamNode@1000000004 : Codeunit 6192801;
      NewNode@1000000005 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','ScrollToEnd',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
    END;

    PROCEDURE BuildSetActivePageCommand@1000000011(NewActivePage@1000000003 : Integer;Text@1000000002 : Text[1024];VAR XmlDoc@1000000001 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000000 : Codeunit 6192801;
      ParamNode@1000000004 : Codeunit 6192801;
      NewNode@1000000005 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Time',FORMAT(TIME),NewNode);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetActivePage',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'PageNo',XmlLib.Dec2Text(NewActivePage),NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Text',Text,NewNode);
    END;

    PROCEDURE BuildNotifierConfig@1000000016(HeaderFieldsFormName@1000000002 : Text[50];LineFieldsFormName@1000000003 : Text[50];VAR XmlDoc@1000000001 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000000 : Codeunit 6192801;
      ParamNode@1000000004 : Codeunit 6192801;
      NewNode@1000000005 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetConfig',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'HeaderFieldsFormName',HeaderFieldsFormName,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'LineFieldsFormName',LineFieldsFormName,NewNode);
    END;

    PROCEDURE BuildSetPagesCommand@6086300(VAR TempFile@6086300 : TEMPORARY Record 6085608;VAR XmlDoc@6086301 : Codeunit 6192800);
    VAR
      DocumentElement@6086308 : Codeunit 6192801;
      CommandNode@6086307 : Codeunit 6192801;
      ParamNode@6086306 : Codeunit 6192801;
      NewNode@6086305 : Codeunit 6192801;
      PageNode@6086310 : Codeunit 6192801;
      PagesNode@6086309 : Codeunit 6192801;
      PDFMgt@6086302 : Codeunit 6085608;
      PageCount@6086303 : Integer;
      i@6086304 : Integer;
    BEGIN
      IF NOT (TempFile.Extension = 'pdf') THEN
        EXIT;

      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');

      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetPages',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'Pages','',PagesNode);

      PageCount := PDFMgt.GetPageCount(TempFile);
      IF PageCount > 5 THEN
        PageCount := 5;

      FOR i := 1 TO PageCount DO BEGIN
         XmlLib.CreateXmlNode(PagesNode,'Page','',PageNode);
         XmlLib.CreateXmlNode(PageNode,'PageData',PDFMgt.GetPageAsDataUrl(TempFile,i),NewNode);
      END;
    END;

    PROCEDURE BuildSetAddInWidthCommand@5(Width@1000 : Integer;VAR XmlDoc@1000000001 : Codeunit 6192800);
    VAR
      DocumentElement@1001 : Codeunit 6192801;
      CommandNode@1000000000 : Codeunit 6192801;
      ParamNode@1000000004 : Codeunit 6192801;
      NewNode@1000000005 : Codeunit 6192801;
      WebClientMgt@6085573 : Codeunit 6085662;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetAddInWidth',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      IF WebClientMgt.IsWebClient THEN
        XmlLib.CreateXmlNode(ParamNode,'AddInWidth',STRSUBSTNO('%1px',Width),NewNode)
      ELSE
        XmlLib.CreateXmlNode(ParamNode,'AddInWidth',FORMAT(Width),NewNode);
    END;

    PROCEDURE BuildRedrawAllValuesCommand@1000000017(DocumentNo@1000000000 : Code[20];PageNo@1000000001 : Integer;VAR XmlDoc@1000000003 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      Value@1000000002 : Record 6085593;
    BEGIN
      Value.SETRANGE("Document No.",DocumentNo);
      Value.SETRANGE("Page No.",PageNo);
      IF Value.FINDSET THEN
        REPEAT
          IF (Value.Right - Value.Left > 0) AND (Value.Bottom - Value.Top > 0) THEN BEGIN
            IF Value."Is Value" THEN
              BuildDrawFieldCommand(
                Value.Code + FORMAT(Value."Line No."),TRUE,Value.Top,Value.Left,Value.Bottom,Value.Right,XmlDoc)
            ELSE BEGIN
              BuildDrawFieldCommand(Value.Code,FALSE,Value.Top,Value.Left,Value.Bottom,Value.Right,XmlDoc);
            END;
          END;
        UNTIL Value.NEXT = 0;
    END;

    PROCEDURE BuildStartCaptureCommand@1000000019(Area@1000000001 : Text[1024];CaptionName@1000000005 : Code[250];ValueName@1000000006 : Code[250];VAR XmlDoc@1000000000 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000004 : Codeunit 6192801;
      ParamNode@1000000003 : Codeunit 6192801;
      NewNode@1000000002 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','StartCapture',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'Area',Area,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'CaptionName',CaptionName,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'ValueName',ValueName,NewNode);
    END;

    PROCEDURE BuildRemoveAllFieldsCommand@1000000018(VAR XmlDoc@1000000001 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000000 : Codeunit 6192801;
      ParamNode@1000000004 : Codeunit 6192801;
      NewNode@1000000005 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','RemoveAllFields',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
    END;

    PROCEDURE BuildLineFieldOrderCommand@1000000020(TemplateNo@1000000001 : Code[20];VAR XmlDoc@1000000000 : Codeunit 6192800);
    VAR
      Field@1000000010 : Record 6085580;
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000004 : Codeunit 6192801;
      ParamNode@1000000003 : Codeunit 6192801;
      NewNode@1000000002 : Codeunit 6192801;
      i@1000000005 : Integer;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetLineFields',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);

      Field.SETCURRENTKEY("Template No.",Type,"Sort Order");
      Field.SETRANGE("Template No.",TemplateNo);
      Field.SETRANGE(Type,Field.Type::Line);
      IF Field.FINDSET THEN
        REPEAT
          XmlLib.CreateXmlNode(ParamNode,'Field',Field.Code,NewNode);
        UNTIL (Field.NEXT = 0) OR (i = 20);
    END;

    PROCEDURE BuildHeaderFieldOrderCommand@3(TemplateNo@1000000001 : Code[20];VAR XmlDoc@1000000000 : Codeunit 6192800);
    VAR
      Field@1001 : Record 6085580;
      DocumentElement@1002 : Codeunit 6192801;
      CommandNode@1000000004 : Codeunit 6192801;
      ParamNode@1000000003 : Codeunit 6192801;
      NewNode@1000 : Codeunit 6192801;
      FieldNode@1000000002 : Codeunit 6192801;
      i@1000000005 : Integer;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetHeaderFields',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);

      Field.SETCURRENTKEY("Template No.",Type,"Sort Order");
      Field.SETRANGE("Template No.",TemplateNo);
      Field.SETRANGE(Type,Field.Type::Header);
      IF Field.FINDSET THEN
        REPEAT
          XmlLib.CreateXmlNode(ParamNode,'Field','',FieldNode);
          XmlLib.CreateXmlNode(FieldNode,'Code',Field.Code,NewNode);
          XmlLib.CreateXmlNode(FieldNode,'Name',Field."Field Name",NewNode);
        UNTIL (Field.NEXT = 0) OR (i = 20);
    END;

    PROCEDURE BuildAddDocumentField@1000000023(FieldId@1000000002 : Code[50];VAR XmlDoc@1000000001 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000000 : Codeunit 6192801;
      ParamNode@1000000004 : Codeunit 6192801;
      NewNode@1000000005 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','AddDocumentField',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'FieldId',FieldId,NewNode);
    END;

    PROCEDURE BuildNotifyMessage@1000000021(Channel@1000000002 : Code[50];MessageToSend@1000000003 : Code[200];VAR XmlDoc@1000000001 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000000 : Codeunit 6192801;
      ParamNode@1000000004 : Codeunit 6192801;
      NewNode@1000000005 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','NotifyListner',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'Channel',Channel,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Type','0',NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Text',MessageToSend,NewNode);
    END;

    PROCEDURE BuildCaptureEnabledCommand@1000000022(Enabled@1000000001 : Boolean;VAR XmlDoc@1000000000 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000004 : Codeunit 6192801;
      ParamNode@1000000003 : Codeunit 6192801;
      NewNode@1000000002 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','CaptureEnabled',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'Value',XmlLib.Bool2Text(Enabled),NewNode);
    END;

    PROCEDURE BuildShowScannerSettingCommand@1000000024(VAR XmlDoc@1000000000 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000004 : Codeunit 6192801;
      ParamNode@1000000003 : Codeunit 6192801;
      NewNode@1000000002 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','ShowScannerSettings',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'Time',FORMAT(TIME),NewNode);
    END;

    PROCEDURE BuildRefreshScannerListCommand@1000000026(VAR XmlDoc@1000000000 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000004 : Codeunit 6192801;
      ParamNode@1000000003 : Codeunit 6192801;
      NewNode@1000000002 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Time',FORMAT(TIME),NewNode);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','RefreshScannerList',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
    END;

    PROCEDURE BuildStartScanningCommand@1000000025(PaperJamErrorMessage@1000000006 : Text[1024];MultiPage@1000000007 : Boolean;Duplex@1000000008 : Boolean;VAR XmlDoc@1000000000 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000004 : Codeunit 6192801;
      ParamNode@1000000003 : Codeunit 6192801;
      NewNode@1000000002 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Time',FORMAT(TIME),NewNode);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','StartScanning',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'PaperJamErrorMessage',PaperJamErrorMessage,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Duplex',XmlLib.Bool2Text(Duplex),NewNode);
      XmlLib.CreateXmlNode(ParamNode,'MultiPage',XmlLib.Bool2Text(MultiPage),NewNode);
    END;

    PROCEDURE BuildSetSelectedScannerCommand@6085580(ScannerCode@1160040000 : Code[20];VAR XmlDoc@1000000000 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@6085575 : Codeunit 6192801;
      ParamNode@6085574 : Codeunit 6192801;
      NewNode@6085573 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Time',FORMAT(TIME),NewNode);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetSelectedScanner',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'SelectedScanner',ScannerCode,NewNode);
    END;

    PROCEDURE BuildSetDriverTypeCommand@1160040001(DriverType@1160040000 : Integer;VAR XmlDoc@1000000000 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@6085575 : Codeunit 6192801;
      ParamNode@6085574 : Codeunit 6192801;
      NewNode@6085573 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Time',FORMAT(TIME),NewNode);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetDriverType',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'DriverType',FORMAT(DriverType-1),NewNode);
    END;

    PROCEDURE BuildSetSignParametersCommand@1160040002(CertificatePath@1160040000 : Text[250];CertificatePassword@1160040001 : Text[30];Author@1160040002 : Text[50];Keywords@1160040003 : Text[30];Subject@1160040004 : Text[30];SignatureReason@1160040005 : Text[30];SignatureLocation@1160040006 : Text[30];ContactInfo@1160040007 : Text[250];VAR XmlDoc@1000000000 : Codeunit 6192800);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@6085575 : Codeunit 6192801;
      ParamNode@6085574 : Codeunit 6192801;
      NewNode@6085573 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Time',FORMAT(TIME),NewNode);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetSignatureParameters',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'CertificatePath',CertificatePath,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'CertificatePassword',CertificatePassword,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Author',Author,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Keywords',Keywords,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Subject',Subject,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'SignatureReason',SignatureReason,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'SignatureLocation',SignatureLocation,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'ContactInfo',ContactInfo,NewNode);
    END;

    PROCEDURE BuildMatchInfoBarCommand@161024013(VAR XmlDoc@1000000000 : Codeunit 6192800;OrderNoCaption@161024017 : Text[1024];OrderNoValue@161024012 : Text[1024];AmountToMatchCaption@161024013 : Text[1024];AmountToMatchValue@161024014 : Text[1024];MatchedAmountCaption@161024016 : Text[1024];MatchedAmountValue@161024015 : Text[1024];MatchDiffAmountCaption@6085574 : Text[1024];MatchDiffAmountValue@6085573 : Text[1024]);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000004 : Codeunit 6192801;
      ParamNode@1000000003 : Codeunit 6192801;
      NewNode@1000000002 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetInfo',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'orderNoCaption',OrderNoCaption,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'orderNoValue',OrderNoValue,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'amountToMatchCaption',AmountToMatchCaption,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'amountToMatchValue',AmountToMatchValue,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'matchedAmountCaption',MatchedAmountCaption,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'matchedAmountValue',MatchedAmountValue,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'matchDiffAmountCaption',MatchDiffAmountCaption,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'matchDiffAmountValue',MatchDiffAmountValue,NewNode);
    END;

    PROCEDURE BuildFileMenuCommand@6085573(VAR XmlDoc@1000000000 : Codeunit 6192800;DropFilesCaption@161024017 : Text[1024];BrowseCaption@6085573 : Text[1024];NewFileCaption@6085574 : Text[1024]);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000004 : Codeunit 6192801;
      ParamNode@1000000003 : Codeunit 6192801;
      NewNode@1000000002 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetInfo',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'dropFilesCaption',DropFilesCaption,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'browseCaption',BrowseCaption,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'newFileCaption',NewFileCaption,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'time',FORMAT(TIME),NewNode);
    END;

    PROCEDURE BuildCreateNewFileCommand@6085574(VAR XmlDoc@1000000000 : Codeunit 6192800;Type@161024017 : Text[1024];Filename@6085573 : Text[1024];DocumentNo@6085574 : Code[20];WaitForExit@6085575 : Boolean);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000004 : Codeunit 6192801;
      ParamNode@1000000003 : Codeunit 6192801;
      NewNode@1000000002 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','CreateNew',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'type',Type,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'filename',Filename,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'documentNo',DocumentNo,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'waitForExit',XmlLib.Bool2Text(WaitForExit),NewNode);
      XmlLib.CreateXmlNode(ParamNode,'time',FORMAT(TIME),NewNode);
    END;

    PROCEDURE BuildCopyFileCommand@6085575(VAR XmlDoc@1000000000 : Codeunit 6192800;Type@161024017 : Text[1024];Filename@6085573 : Text[1024];CategoryCode@6085574 : Code[20]);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000004 : Codeunit 6192801;
      ParamNode@1000000003 : Codeunit 6192801;
      NewNode@1000000002 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','CopyFile',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'fromFilename',Type,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'toFilename',Filename,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'categoryCode',CategoryCode,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'time',FORMAT(TIME),NewNode);
    END;

    PROCEDURE BuildMoveFileCommand@6085579(VAR XmlDoc@6085575 : Codeunit 6192800;Type@6085574 : Text;Filename@6085576 : Text;CategoryCode@6085577 : Code[20]);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@6085573 : Codeunit 6192801;
      ParamNode@6085578 : Codeunit 6192801;
      NewNode@6085579 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','MoveFile',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'fromFilename',Type,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'toFilename',Filename,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'categoryCode',CategoryCode,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'time',FORMAT(TIME),NewNode);
    END;

    PROCEDURE BuildOpenFileCommand@6085576(VAR XmlDoc@1000000000 : Codeunit 6192800;Filename@6085573 : Text[1024];DocumentNo@6085574 : Code[20];WaitForExit@6085575 : Boolean);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000004 : Codeunit 6192801;
      ParamNode@1000000003 : Codeunit 6192801;
      NewNode@1000000002 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','OpenFile',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'filename',Filename,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'documentNo',DocumentNo,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'waitForExit',XmlLib.Bool2Text(WaitForExit),NewNode);
      XmlLib.CreateXmlNode(ParamNode,'time',FORMAT(TIME),NewNode);
    END;

    PROCEDURE BuildSetClientTypeCommand@2(VAR XmlDoc@6085573 : Codeunit 6192800);
    VAR
      DocumentElement@1001 : Codeunit 6192801;
      CommandNode@6085575 : Codeunit 6192801;
      ParamNode@6085576 : Codeunit 6192801;
      NewNode@1000 : Codeunit 6192801;
      WebClientMgt@6085574 : Codeunit 6085662;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetClientType',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);

      IF WebClientMgt.IsWebClient THEN
        XmlLib.CreateXmlNode(ParamNode,'clientType','Web',NewNode)
      ELSE
        XmlLib.CreateXmlNode(ParamNode,'clientType','Windows',NewNode);
    END;

    PROCEDURE BuildDocListSetupCommand@6085577(VAR XmlDoc@6085573 : Codeunit 6192800;IsInfoPane@6085574 : Boolean);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@6085575 : Codeunit 6192801;
      ParamNode@6085576 : Codeunit 6192801;
      ActionsNode@6085577 : Codeunit 6192801;
      ActionNode@6085578 : Codeunit 6192801;
      ColumnsNode@6085579 : Codeunit 6192801;
      ColumnNode@6085580 : Codeunit 6192801;
      NewNode@6085581 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetDocListSetup',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);

      // Build the actions
      XmlLib.CreateXmlNode(ParamNode,'actions','',ActionsNode);

      XmlLib.CreateXmlNode(ActionsNode,'action','',ActionNode);
      XmlLib.CreateXmlNode(ActionNode,'code','OPEN',NewNode);
      XmlLib.CreateXmlNode(ActionNode,'text',Text001,NewNode);
      XmlLib.CreateXmlNode(ActionNode,'image','View',NewNode);

      XmlLib.CreateXmlNode(ActionsNode,'action','',ActionNode);
      XmlLib.CreateXmlNode(ActionNode,'code','EDIT',NewNode);
      XmlLib.CreateXmlNode(ActionNode,'text',Text008,NewNode);

      XmlLib.CreateXmlNode(ActionsNode,'action','',ActionNode);
      XmlLib.CreateXmlNode(ActionNode,'code','RENAME',NewNode);
      XmlLib.CreateXmlNode(ActionNode,'text',Text002,NewNode);

      XmlLib.CreateXmlNode(ActionsNode,'action','',ActionNode);
      XmlLib.CreateXmlNode(ActionNode,'code','DELETE',NewNode);
      XmlLib.CreateXmlNode(ActionNode,'text',Text003,NewNode);
      XmlLib.CreateXmlNode(ActionNode,'image','Delete',NewNode);

      // Build the columns
      XmlLib.CreateXmlNode(ParamNode,'columns','',ColumnsNode);

      XmlLib.CreateXmlNode(ColumnsNode,'column','',ColumnNode);
      XmlLib.CreateXmlNode(ColumnNode,'code','name',NewNode);
      XmlLib.CreateXmlNode(ColumnNode,'text',Text004,NewNode);
      IF NOT IsInfoPane THEN BEGIN
        XmlLib.CreateXmlNode(ColumnsNode,'column','',ColumnNode);
        XmlLib.CreateXmlNode(ColumnNode,'code','user',NewNode);
        XmlLib.CreateXmlNode(ColumnNode,'text',Text005,NewNode);
        XmlLib.CreateXmlNode(ColumnNode,'width','150',NewNode);

        XmlLib.CreateXmlNode(ColumnsNode,'column','',ColumnNode);
        XmlLib.CreateXmlNode(ColumnNode,'code','datetime',NewNode);
        XmlLib.CreateXmlNode(ColumnNode,'text',Text006,NewNode);
        XmlLib.CreateXmlNode(ColumnNode,'width','100',NewNode);
      END;
    END;

    PROCEDURE BuildDocListContentCommand@6085578(VAR XmlDoc@6085573 : Codeunit 6192800;VAR TempDoc@6085574 : Record 6085756;IsInfoPane@6085575 : Boolean);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@6085576 : Codeunit 6192801;
      ParamNode@6085577 : Codeunit 6192801;
      DocumentsNode@6085578 : Codeunit 6192801;
      DocumentNode@6085579 : Codeunit 6192801;
      NewNode@6085580 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetDocListContent',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);

      XmlLib.CreateXmlNode(ParamNode,'documents','',DocumentsNode);

      IF TempDoc.FINDSET THEN
        REPEAT
          XmlLib.CreateXmlNode(DocumentsNode,'document','',DocumentNode);
          XmlLib.CreateXmlNode(DocumentNode,'_no',TempDoc."No.",NewNode);
          XmlLib.CreateXmlNode(DocumentNode,'_filetype',TempDoc."File Type",NewNode);
          XmlLib.CreateXmlNode(DocumentNode,'_bold',XmlLib.Bool2Text(TempDoc.Bold),NewNode);
          XmlLib.CreateXmlNode(DocumentNode,'_indentation',XmlLib.Dec2Text(TempDoc.Indentation),NewNode);
          XmlLib.CreateXmlNode(DocumentNode,'_group',TempDoc."Document Category Code",NewNode);
          XmlLib.CreateXmlNode(DocumentNode,'_isgroup',XmlLib.Bool2Text(TempDoc."Is Group"),NewNode);
          XmlLib.CreateXmlNode(DocumentNode,'name',TempDoc.Description,NewNode);

          IF NOT IsInfoPane THEN BEGIN
            XmlLib.CreateXmlNode(DocumentNode,'user',TempDoc.GetUserName,NewNode);
            XmlLib.CreateXmlNode(DocumentNode,'datetime',FORMAT(TempDoc."Date/Time"),NewNode);
          END;
        UNTIL TempDoc.NEXT = 0;
    END;

    PROCEDURE BuildSetCaptionCommand@6085584(VAR XmlDoc@1000000000 : Codeunit 6192800;Caption@6085573 : Text;CaptionBold@6085574 : Boolean);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000004 : Codeunit 6192801;
      ParamNode@1000000003 : Codeunit 6192801;
      NewNode@1000000002 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetCaption',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'Caption',Caption,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'CaptionBold',XmlLib.Bool2Text(CaptionBold),NewNode);
    END;

    PROCEDURE BuildSetBoolValueCommand@6085585(VAR XmlDoc@1000000000 : Codeunit 6192800;Value@6085573 : Boolean);
    VAR
      DocumentElement@1000 : Codeunit 6192801;
      CommandNode@1000000004 : Codeunit 6192801;
      ParamNode@1000000003 : Codeunit 6192801;
      NewNode@1000000002 : Codeunit 6192801;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlDoc.GetDocumentElement(DocumentElement);
      XmlLib.CreateXmlNode(DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetValue',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'Value',XmlLib.Bool2Text(Value),NewNode);
    END;

    PROCEDURE XmlToBigText@1000000002(VAR XmlDoc@1000000000 : Codeunit 6192800;VAR BigText@1000000001 : BigText);
    VAR
      CompInfo@1000000002 : TEMPORARY Record 79;
      InStr@1000000004 : InStream;
      OutStr@1000000003 : OutStream;
      VarStream@1000 : Variant;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        EXIT;

      CompInfo.Picture.CREATEOUTSTREAM(OutStr);

      VarStream := OutStr;
      XmlDoc.SaveToStream(VarStream);
      CompInfo.Picture.CREATEINSTREAM(InStr);
      BigText.READ(InStr);
    END;

    PROCEDURE BigTextToXml@1000000003(VAR XmlDoc@1000000000 : Codeunit 6192800;BigText@1000000001 : BigText);
    VAR
      CompInfo@1000000002 : TEMPORARY Record 79;
      InStr@1000000004 : InStream;
      OutStr@1000000003 : OutStream;
      t@1000000005 : Text[30];
    BEGIN
      CompInfo.Picture.CREATEOUTSTREAM(OutStr);
      BigText.WRITE(OutStr);
      CompInfo.Picture.CREATEINSTREAM(InStr);

      XmlDoc.LoadFromStream(InStr);
    END;

    PROCEDURE XmlToText@161024016(VAR XmlDoc@1000000000 : Codeunit 6192800;VAR Text@1000000001 : Text);
    VAR
      CompInfo@1000000002 : TEMPORARY Record 79;
      InStr@1000000004 : InStream;
      OutStr@1000000003 : OutStream;
    BEGIN
      IF XmlDoc.IsEmpty THEN
        EXIT;

      Text := XmlDoc.InnerXml;
    END;

    PROCEDURE TextToXml@161024015(VAR XmlDoc@1000000000 : Codeunit 6192800;Text@1000000001 : Text);
    BEGIN
      XmlDoc.LoadXml(Text);
    END;

    PROCEDURE BigTextToText@1000000000(BigText@1000000001 : BigText) Text : Text[1024];
    BEGIN
      BigText.GETSUBTEXT(Text,1,BigText.LENGTH);
    END;

    PROCEDURE CreateClientAddInEntries@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"DC Client Add-In Management");
    END;

    BEGIN
    END.
  }
}

