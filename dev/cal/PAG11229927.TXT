OBJECT Page 11229927 Bing Maps Service Object
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Bing Maps-Serviceobjekt;
               ENU=Bing Maps Service Object;
               NLD=Bing Maps Service Object];
    SourceTable=Table11071691;
    OnInit=BEGIN
             ServiceObjectTableIDText := FORMAT(DATABASE::"Service-Object");
             ServiceObjectTableIDInteger := DATABASE::"Service-Object";
             DisplayMultipleObjects := FALSE;
           END;

  }
  CONTROLS
  {
    { 1100525000;;Container;
                Name=Container;
                CaptionML=[DEU=Container;
                           ENU=Container;
                           NLD=Container;
                           NOR=Container;
                           SVE=Beh†llare];
                ContainerType=ContentArea }

    { 1100525001;1;Field  ;
                Name=Map;
                CaptionML=[DEU=Karte;
                           ENU=Map;
                           NLD=Kaart];
                ControlAddIn=[Fps.Nav.Addin.BingMaps;PublicKeyToken=024bd013665211e9] }

  }
  CODE
  {
    VAR
      BingMapsHandler@1100525000 : Codeunit 11012485;
      Text001@1100525003 : TextConst 'DEU=Konfigurieren Sie Bing Maps.;ENU=Please configure Bing Maps.;NLD=Stel Bing Maps in.';
      Text003@1100525004 : TextConst 'DEU=Verschieben;ENU=Move;NLD=Verplaats';
      ServiceObject@1100525005 : Record 11071691;
      DisplayMultipleObjects@1100525006 : Boolean;
      ServiceObjectTableIDText@1100525007 : Text[30];
      ServiceObjectTableIDInteger@1100525008 : Integer;

    PROCEDURE setServiceObject@1100525000(record@1100525000 : Record 11071691);
    BEGIN
      Rec := record;
      ServiceObject.COPY(record, FALSE);
    END;

    LOCAL PROCEDURE addPinToMap@1100525001(object@1100525000 : Record 11071691);
    VAR
      titleValue@1100525001 : Text;
      descriptionValue@1100525002 : Text;
      ReturnType@1100525003 : 'NAV,FSA';
    BEGIN

      titleValue := BingMapsHandler.GetValueFromField(object.RECORDID, ServiceObjectTableIDInteger,
                        BingMapsHandler.GetFieldIDForTitle(ServiceObjectTableIDInteger, ReturnType::NAV));
      descriptionValue := BingMapsHandler.BuildDescription(object.RECORDID, DATABASE::"Service-Object", ReturnType::NAV);

      IF (object.Latitude <> '') AND (object.Longitude <> '') THEN
        CurrPage.Map.addPinToMapLatLng(object."No.", titleValue, ServiceObjectTableIDText,
          descriptionValue, '', object.Latitude, object.Longitude)
      ELSE
        BEGIN
          object.CALCFIELDS("Location Address", "Location City", "Location Post Code");
          CurrPage.Map.addPinToMapCode(object."No.", titleValue, ServiceObjectTableIDText, descriptionValue, '',
            STRSUBSTNO('%1 %2 %3', object."Location City", object."Location Address", object."Location Post Code"));
        END;
    END;

    PROCEDURE setServiceObjects@1100525002(record@1100525000 : Record 11071691);
    BEGIN
      Rec := record;
      ServiceObject.COPY(record, FALSE);
      DisplayMultipleObjects := TRUE;
    END;

    EVENT Map@-1100525001::ControlAddInReady@20();
    VAR
      BingMapsSetup@1100525000 : Page 11127140;
    BEGIN
      IF BingMapsHandler.SetupIsDoneAndEnabled THEN
        CurrPage.Map.setApiKey(BingMapsHandler.GetApiKey(CurrPage.OBJECTID(FALSE)))
      ELSE
        BEGIN
          MESSAGE(Text001);
          BingMapsSetup.RUN;
          CurrPage.CLOSE;
        END;
    END;

    EVENT Map@-1100525001::MapLoaded@21();
    BEGIN
      CurrPage.Map.allowEditFor(ServiceObjectTableIDText, Text003);
      IF BingMapsHandler.DisplayAsPin(ServiceObjectTableIDInteger) THEN
        CurrPage.Map.displayAsPin(ServiceObjectTableIDText);
      IF DisplayMultipleObjects = TRUE THEN
        REPEAT
          addPinToMap(ServiceObject);
        UNTIL ServiceObject.NEXT = 0
      ELSE BEGIN
        addPinToMap(ServiceObject);
        CurrPage.Map.setCenter(ServiceObject.Latitude, ServiceObject.Longitude);
      END;
    END;

    EVENT Map@-1100525001::PinAdded@22(no@1100525001 : Text;type@1100525000 : Text);
    BEGIN
      IF DisplayMultipleObjects = TRUE THEN
        CurrPage.Map.setBestView
      ELSE
        CurrPage.Map.setZoom(BingMapsHandler.GetZoomLevel);
    END;

    EVENT Map@-1100525001::AddLocationToSelection@23(no@1100525001 : Text;type@1100525000 : Text);
    BEGIN
    END;

    EVENT Map@-1100525001::RemoveLocationFromSelection@24(no@1100525001 : Text;type@1100525000 : Text);
    BEGIN
    END;

    EVENT Map@-1100525001::DirectionsReady@25(distance@1100525001 : Text;time@1100525000 : Text);
    BEGIN
    END;

    EVENT Map@-1100525001::DirectionsError@26();
    BEGIN
    END;

    EVENT Map@-1100525001::LocationUpdated@27(no@1100525003 : Text;type@1100525002 : Text;lat@1100525001 : Text;lng@1100525000 : Text);
    VAR
      TableInteger@1100525004 : Integer;
    BEGIN
      EVALUATE(TableInteger, type);
      BingMapsHandler.UpdateLocation(no, TableInteger, lat, lng);
    END;

    EVENT Map@-1100525001::LocationAdded@28(no@1100525003 : Text;type@1100525002 : Text;lat@1100525001 : Text;lng@1100525000 : Text);
    VAR
      TableInteger@1100525004 : Integer;
    BEGIN
      EVALUATE(TableInteger, type);
      BingMapsHandler.UpdateLocation(no, TableInteger, lat, lng);
    END;

    EVENT Map@-1100525001::LocationRemoved@29(no@1100525001 : Text;type@1100525000 : Text);
    BEGIN
    END;

    EVENT Map@-1100525001::ExtraAction@30(action@1100525002 : Text;no@1100525001 : Text;type@1100525000 : Text);
    BEGIN
    END;

    EVENT Map@-1100525001::ZoomLevel@31(level@1100525000 : Text);
    VAR
      levelInteger@1100525001 : Integer;
    BEGIN
      IF EVALUATE(levelInteger, level) THEN
        BingMapsHandler.SetZoomLevel(levelInteger);
    END;

    EVENT Map@-1100525001::RegisterEvent@32(no@1100528102 : Text;type@1100528101 : Text;eventname@1100528100 : Text);
    BEGIN
      BingMapsHandler.WriteToBingMapsLogUsingQuery(no, CurrPage.OBJECTID(FALSE), eventname, type);
    END;

    BEGIN
    END.
  }
}

