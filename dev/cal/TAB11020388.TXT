OBJECT Table 11020388 Exceptional Sales Price
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               ExceptionalSalesPriceDateRec.RESET;
               ExceptionalSalesPriceDateRec.SETRANGE(Level, Level);
               ExceptionalSalesPriceDateRec.DELETEALL;
             END;

    CaptionML=[ENU=Exceptional Sales Price;
               NOR=Eksepsjonell salgspris;
               SVE=Exceptionellt f”rs„ljningspris];
    LookupPageID=Page11072459;
  }
  FIELDS
  {
    { 10  ;   ;Level               ;Integer       ;CaptionML=[ENU=Level;
                                                              NOR=Niv†;
                                                              SVE=Niv†];
                                                   NotBlank=Yes }
    { 20  ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   CaptionML=[ENU=Employee No.;
                                                              NOR=Ansattnr;
                                                              SVE=Anst„llningsnr] }
    { 30  ;   ;Trade Association   ;Code10        ;TableRelation="Trade Association";
                                                   CaptionML=[ENU=Trade Association;
                                                              NOR=Bransjeorganisasjon;
                                                              SVE=Branschorganisation] }
    { 40  ;   ;Department Code     ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Avdelingskode;
                                                              SVE=Mottagande avdelningskod];
                                                   CaptionClass='1,1,1' }
    { 50  ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostnadsobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 60  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Project Description");
                                                              END;

                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr] }
    { 65  ;   ;Project Description ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Project Description;
                                                              NOR=Prosjektbeskrivelse;
                                                              SVE=Projektbeskrivning];
                                                   Editable=No }
    { 70  ;   ;Element             ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                IF Element <> '' THEN
                                                                  ElementFormat.FormatElem(Element,2,'');
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 80  ;   ;Wage Component      ;Code10        ;TableRelation="Wage Component".Code WHERE (Component Type=FILTER(Hours|Expenses));
                                                   CaptionML=[ENU=Wage Component;
                                                              NOR=L›nnsart;
                                                              SVE=L”neart] }
    { 100 ;   ;Extension Contract  ;Code10        ;TableRelation="Extension Contract"."Contract No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=Extension Contract;
                                                              NOR=ETA;
                                                              SVE=ŽTA] }
    { 110 ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order".No.;
                                                   CaptionML=[ENU=Service Order No.;
                                                              NOR=Serviceordrenr.;
                                                              SVE=Serviceordernr] }
    { 120 ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract.No.;
                                                   CaptionML=[ENU=Service Contract No.;
                                                              NOR=Servicekontraktnr;
                                                              SVE=Servicekontraktnr] }
    { 130 ;   ;Customer No.        ;Code20        ;TableRelation=Customer.No.;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Customer Name");
                                                              END;

                                                   CaptionML=[ENU=Customer No.;
                                                              NOR=Kundenr;
                                                              SVE=Kundnr];
                                                   NotBlank=Yes }
    { 135 ;   ;Customer Name       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=[ENU=Customer Name;
                                                              NOR=Kundnavn;
                                                              SVE=Kundnamn];
                                                   Editable=No }
    { 190 ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              NOR=Datofilter;
                                                              SVE=Datumfilter] }
  }
  KEYS
  {
    {    ;Level                                   ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ExceptionalSalesPriceDateRec@1100485000 : Record 11020389;
      ElementFormat@1100485001 : Codeunit 11012022;
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE GetRate@1100485000(VAR VExceptionalSalesPriceRec@1100485000 : Record 11020388) : Decimal;
    VAR
      lStartDate@1100485001 : Date;
    BEGIN
      ExceptionalSalesPriceDateRec.RESET;
      ExceptionalSalesPriceDateRec.SETRANGE(Level, VExceptionalSalesPriceRec.Level);
      IF VExceptionalSalesPriceRec.GETFILTER("Date Filter") <> '' THEN
        lStartDate := VExceptionalSalesPriceRec.GETRANGEMIN("Date Filter")
      ELSE
        lStartDate := WORKDATE;
      ExceptionalSalesPriceDateRec.SETRANGE("Starting Date", 0D, lStartDate);
      ExceptionalSalesPriceDateRec.SETFILTER("Ending Date",'%1|>=%2',0D, lStartDate);
      IF ExceptionalSalesPriceDateRec.FINDLAST THEN
        EXIT(ExceptionalSalesPriceDateRec."Sales Price");
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11020388) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11020388');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Exceptional Sales Price", "Department Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Department Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Department Code");
    END;

    BEGIN
    END.
  }
}

