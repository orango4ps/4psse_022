OBJECT Report 11125352 Batch Create Prognosis
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Batch-Prognoseerstellung;
               ENU=Batch Create Prognosis;
               NLD=Batch prognoses aanmaken];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  JobNoFilter := Job.GETFILTER("No.");
                END;

    UsageCategory=Tasks;
  }
  DATASET
  {
    { 8019;    ;DataItem;                    ;
               DataItemTable=Table11072003;
               OnPreDataItem=BEGIN
                               IF JobNoFilter = '' THEN
                                 Job.SETFILTER("Prognosis Level", '<>%1', Job."Prognosis Level"::"No Prognosis");
                             END;

               OnAfterGetRecord=BEGIN
                                  PrognosisRec.RESET;
                                  PrognosisRec.SETRANGE("Project No.",Job."No.");
                                  PrognosisRec.SETFILTER("Prognosis Date",'>=%1',PrognosisDate);
                                  IF (PrognosisRec.FINDFIRST) THEN
                                    EXIT;

                                  PrognosisRec.INIT;
                                  PrognosisRec."Project No." := Job."No.";
                                  PrognosisRec.VALIDATE("Prognosis Date",PrognosisDate);
                                  PrognosisRec.SetupDetailedPrognosisOptions();
                                  PrognosisRec.INSERT(TRUE);

                                  CASE Job."Prognosis Level" OF
                                    "Prognosis Level"::Detailed:
                                      PrognosisMgt.ProcessPrognosis(PrognosisRec);
                                    "Prognosis Level"::Rough:
                                      PrognosisMgt.CreatePrognosis(PrognosisRec, CostTypes::Both);
                                    "Prognosis Level"::Element:
                                      ProcessPrognosisElement(PrognosisRec);
                                  END;
                                END;

               ReqFilterFields=No.,Project Status }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnInit=BEGIN
               PrognosisDate := TODAY;
             END;

      OnOpenPage=BEGIN
                   JobSetup.GET;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1100525000;2;Field  ;
                  CaptionML=[DEU=Prognosedatum;
                             ENU=Prognosis Date;
                             NLD=Prognosedatum;
                             NOR=Prognosedato;
                             SVE=Prognosdatum];
                  SourceExpr=PrognosisDate }

      { 1100525003;1;Group  ;
                  CaptionML=[DEU=NÑchste Schritte nach der Erstellung der Prognose;
                             ENU=Next Steps after create Prognosis;
                             NLD="Vervolgstappen na aanmaken prognose ";
                             NOR=Neste steg etter Ü Opprette Prognose;
                             SVE=NÑsta steg efter att skapa prognos] }

      { 1100525002;2;Field  ;
                  CaptionML=[DEU=Vorige Prognose Kosten kopieren;
                             ENU=Copy Previous Cost Prognosis;
                             NLD=Vorige prognose kosten kopiâren;
                             NOR=Kopier forrige Kostprognose;
                             SVE=Kopiera fîregÜende kostnadsprognos];
                  SourceExpr=CopyPrevCostPrognosis }

      { 1100525001;2;Field  ;
                  CaptionML=[DEU=Prognose mit verfÅg&baren Kosten eingeben;
                             ENU=Fill Prognosis with &Available Cost;
                             NLD=Prognose vullen met &beschikbare kosten;
                             NOR=Fyll ut Prognose med &Tilgjengelige Kostnader;
                             SVE=Fyll i prognos med &tillgÑngliga kostnader];
                  SourceExpr=FillProgWithAvailableCost }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      PrognosisDate@1100525000 : Date;
      PrognosisRec@1100525001 : Record 11012034;
      PrognosisMgt@1100525002 : Codeunit 11020217;
      CostTypes@1100525003 : 'Cost,Revenue,Both';
      CopyPrevCostPrognosis@1100525007 : Boolean;
      FillProgWithAvailableCost@1100525006 : Boolean;
      JobSetup@1100525004 : Record 315;
      JobNoFilter@1100527350 : Text[20];

    PROCEDURE ProcessPrognosisElement@1100525008(Prognosis@1100528800 : Record 11012034);
    BEGIN
      PrognosisMgt.CreatePrognosisElements(Prognosis, CostTypes::Both);
      IF CopyPrevCostPrognosis THEN
        PrognosisMgt.CopyPrevPrognosisElements(Prognosis, FALSE, CostTypes::Cost);
      IF FillProgWithAvailableCost THEN
        PrognosisMgt.FillPrognosisWithAvailableElem(Prognosis);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

