OBJECT Table 5714 Responsibility Center
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               DPA_OnInsert; //**4PS.n
             END;

    OnDelete=BEGIN
               DimMgt.DeleteDefaultDim(DATABASE::"Responsibility Center",Code);
             END;

    OnRename=BEGIN
               DimMgt.RenameDefaultDim(DATABASE::"Responsibility Center",xRec.Code,Code);
             END;

    CaptionML=[ENU=Responsibility Center;
               NOR=Ansvarssenter;
               SVE=Ansvarsenhet];
    LookupPageID=Page5715;
    DrillDownPageID=Page5715;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text100       ;CaptionML=[ENU=Name;
                                                              NOR=Navn;
                                                              SVE=Namn] }
    { 3   ;   ;Address             ;Text100       ;CaptionML=[ENU=Address;
                                                              NOR=Adresse;
                                                              SVE=Adress] }
    { 4   ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              NOR=Adresse 2;
                                                              SVE=Adress 2] }
    { 5   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookupPostCode(City,"Post Code",County,"Country/Region Code");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              NOR=Sted;
                                                              SVE=Ort] }
    { 6   ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookupPostCode(City,"Post Code",County,"Country/Region Code");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              NOR=Postnr.;
                                                              SVE=Postnr] }
    { 7   ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   OnValidate=BEGIN
                                                                PostCode.CheckClearPostCodeCityCounty(City,"Post Code",County,"Country/Region Code",xRec."Country/Region Code");
                                                              END;

                                                   CaptionML=[ENU=Country/Region Code;
                                                              NOR=Lands-/omr†dekode;
                                                              SVE=Lands-/regionkod] }
    { 8   ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              NOR=Telefonnr.;
                                                              SVE=Telefonnr] }
    { 9   ;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              NOR=Faksnr.;
                                                              SVE=Telefaxnr] }
    { 10  ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              NOR=Navn 2;
                                                              SVE=Namn 2] }
    { 11  ;   ;Contact             ;Text100       ;CaptionML=[ENU=Contact;
                                                              NOR=Kontakt;
                                                              SVE=Kontaktperson] }
    { 12  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Global dimensjon 1 - kode;
                                                              SVE=Global dimension 1 kod];
                                                   CaptionClass='1,1,1' }
    { 13  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Global dimensjon 2 - kode;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 14  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              NOR=Lokasjonskode;
                                                              SVE=Lagerst„llekod] }
    { 15  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              NOR=Fylke/delstat;
                                                              SVE=Delstat];
                                                   CaptionClass='5,1,' + "Country/Region Code" }
    { 102 ;   ;E-Mail              ;Text80        ;OnValidate=VAR
                                                                MailManagement@1000 : Codeunit 9520;
                                                              BEGIN
                                                                MailManagement.ValidateEmailAddressField("E-Mail");
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=Email;
                                                              NOR=E-post;
                                                              SVE=E-post] }
    { 103 ;   ;Home Page           ;Text90        ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Home Page;
                                                              NOR=Hjemmeside;
                                                              SVE=Hemsida] }
    { 5900;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              NOR=Datofilter;
                                                              SVE=Datumfilter] }
    { 5901;   ;Contract Gain/Loss Amount;Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Contract Gain/Loss Entry".Amount WHERE (Responsibility Center=FIELD(Code),
                                                                                                            Change Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Contract Gain/Loss Amount;
                                                              NOR=Kontraktresultat - bel›p;
                                                              SVE=Kontrakt vinst/f”rlust];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 11012022;;Ship-to Name       ;Text100       ;CaptionML=[ENU=Ship-to Name;
                                                              SVE=Leveransnamn] }
    { 11012023;;Ship-to Name 2     ;Text50        ;CaptionML=[ENU=Ship-to Name 2;
                                                              SVE=Leveransnamn 2] }
    { 11012024;;Ship-to Address    ;Text100       ;CaptionML=[ENU=Ship-to Address;
                                                              SVE=Leveransadress] }
    { 11012025;;Ship-to Address 2  ;Text50        ;CaptionML=[ENU=Ship-to Address 2;
                                                              SVE=Leveransadress 2] }
    { 11012026;;Ship-to City       ;Text30        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity("Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Ship-to City;
                                                              SVE=Leveransort] }
    { 11012027;;Ship-to Contact    ;Text100       ;CaptionML=[ENU=Ship-to Contact;
                                                              SVE=Leveranskontaktperson] }
    { 11012032;;Ship-to Post Code  ;Code20        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode("Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Ship-to Post Code;
                                                              SVE=Leveranspostnrkod] }
    { 11012033;;Ship-to County     ;Text30        ;CaptionML=[ENU=Ship-to County;
                                                              SVE=Leveransl„n] }
    { 11012037;;Ship-to Country/Region Code;Code10;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Ship-to Country/Region Code;
                                                              SVE=Kod f”r leveransland/-region] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Code,Name,Location Code                  }
  }
  CODE
  {
    VAR
      PostCode@1000 : Record 225;
      DimMgt@1001 : Codeunit 408;
      DPA_Management@1100000999 : Codeunit 11012783;
      SkipModify@1100528400 : Boolean;

    [External]
    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::"Responsibility Center",Code,FieldNumber,ShortcutDimCode);
      IF NOT SkipModify THEN //**4PS.n
        MODIFY;
    END;

    LOCAL PROCEDURE DPA_OnInsert@1100000991();
    BEGIN
      //**4PS
      IF NOT DPA_IsActive THEN
        EXIT;

      IF "Global Dimension 1 Code" <> '' THEN BEGIN
        SkipModify := TRUE;
        VALIDATE("Global Dimension 1 Code");
        SkipModify := FALSE;
      END;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100528500 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(5714) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 5714');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Responsibility Center", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    BEGIN
    END.
  }
}

