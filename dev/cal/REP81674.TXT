OBJECT Report 81674 Imtech Svefaktura Cr.Memo
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Send Svefaktura;
               SVE=Skicka Svefaktura];
    ProcessingOnly=Yes;
    OnInitReport=VAR
                   SalesInvoiceHeader@1100285000 : Record 112;
                 BEGIN


                   {
                   iCount := lvSalesInvHeader.COUNT;
                   lvSalesInvHeader.SETFILTER("Electronic Invoicing", '<>%1', SalesInvHeader."Electronic Invoicing"::"Svefaktura (XML)");

                   IF (lvSalesInvHeader.COUNT > 0) THEN IF NOT (CONFIRM(txtSendAllInvoices, FALSE, lvSalesInvHeader.COUNT, iCount)) THEN EXIT;


                   lvSalesInvHeader.SETFILTER("Electronic Invoicing", '%1', SalesInvHeader."Electronic Invoicing"::"Svefaktura (XML)");
                   // 140909 ITERO.MH ENH042 <<
                   IF (lvSalesInvHeader.FINDSET(FALSE)) THEN REPEAT
                      IF (lvSalesInvHeader."Electronic Invoice Created") THEN iAlreadyCreated +=1;
                   UNTIL lvSalesInvHeader.NEXT = 0;

                   IF (iAlreadyCreated > 0) THEN IF NOT (CONFIRM(txtSendAlreadyCreated, TRUE, iAlreadyCreated)) THEN EXIT;
                   // 140909 ITERO.MH ENH042 >>

                   ExportSvefaktura.CreateSveSalesInvoice(lvSalesInvHeader);
                   MESSAGE(txtSvefakturaCreated, lvSalesInvHeader.COUNT);
                   }
                 END;

  }
  DATASET
  {
    { 1100285000;;DataItem;                  ;
               DataItemTable=Table114;
               DataItemTableView=SORTING(No.);
               OnPostDataItem=VAR
                                SvefakturaMgmtImtech@1100285000 : Codeunit 81647;
                              BEGIN
                                SvefakturaMgmtImtech.CreateSalesCreditMemo("Sales Cr.Memo Header", gLayout, gNotPrintItemNo, gPrintLineDiscount);
                                MESSAGE(txtSvefakturaCreated, "Sales Cr.Memo Header".COUNT);
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   CheckIfCreatedBefore("Sales Cr.Memo Header");

                   CheckMarkedForInvoice("Sales Cr.Memo Header");
                 END;

    }
    CONTROLS
    {
      { 1100285011;0;Container;
                  ContainerType=ContentArea }

      { 1100285004;1;Group  ;
                  CaptionML=[ENU=Warnings;
                             SVE=Varningar];
                  GroupType=GridLayout }

      { 1100285003;2;Field  ;
                  SourceExpr=gCreationStatus;
                  Editable=FALSE }

      { 1100285005;2;Field  ;
                  SourceExpr=gDoubleWarning;
                  Editable=FALSE }

      { 1100285010;1;Group  ;
                  CaptionML=[ENU=Layout;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100285002;2;Field  ;
                  Name=PrintLineDiscount;
                  CaptionML=[ENU=Print Line Discount;
                             NOR=Print radrabatt;
                             SVE=Skriv radrabatt];
                  SourceExpr=gPrintLineDiscount;
                  Enabled=gPrintLineDiscountEnabled }

      { 1100285001;2;Field  ;
                  Name=NotPrintArticleNo;
                  CaptionML=[ENU=Hide Item no.;
                             NOR=Skjul artikkelnummer;
                             SVE=D”lj artikelnummer];
                  SourceExpr=gNotPrintItemNo;
                  Enabled=gNotPrintItemNoEnabled }

      { 1100285000;2;Field  ;
                  CaptionML=SVE=Gruppering/Sortering;
                  SourceExpr=gLayout;
                  Enabled=gLayoutEnabled }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      gCreationStatus@1100285000 : Text;
      gDoubleWarning@1100285001 : Text;
      gPrintLineDiscount@1100285002 : Boolean;
      gNotPrintItemNo@1100285003 : Boolean;
      gLayout@1100285008 : 'Kostnadstyp (normal),Ej grupperad (sorterad efter kostnadstyp),Enligt avr„kningsark,Ej grupperad (sorterad efter ŽTA nr)';
      txtSendAllInvoices@1100285006 : TextConst 'ENU=%1 credit memos of %2 are not marked as Svefaktura and will hence not be created.;NOR=%1 av %2 kreditnotaer er ikke merket som Svefaktura og vil derfor ikke bli opprettet.;SVE=%1 kreditnotor av %2 „r inte markerade som Svefaktura och kommer d„rf”r inte att skapas.';
      txtSvefakturaCreated@1100285005 : TextConst 'ENU=%1 electronic credit memos have been created.;NOR=%1 elektroniske kreditnotaer har blitt opprettet.;SVE=%1 svefaktura-filer har skapats.';
      txtSendAlreadyCreated@1100285004 : TextConst 'ENU=%1 electronic credit memos have already been created and will be created again.;NOR=%1 elektroniske kreditnotaer er allerede opprettet og vil bli opprettet igjen.;SVE=%1 elektroniska kreditnotor har redan skapats och kommer att skapas p† nytt.';
      txtIllegalCombination@1100285007 : TextConst 'ENU=You can not select multiple Credit Memos as they hav already been sent or printed. Select and send one Credit Memo at a time.;NOR=Du kan ikke velge flere kreditfakturaer som alrede har blitt sendt eller skrevet ut. Velg en kreditfaktura om gangen.;SVE=Du kan inte v„lja flera kreditnotor samtidigt om de redan har skickats eller skrivits ut tidigare. Markera och skicka en kreditnota i taget.';
      gPrintLineDiscountEnabled@1100285011 : Boolean INDATASET;
      gNotPrintItemNoEnabled@1100285010 : Boolean INDATASET;
      gLayoutEnabled@1100285009 : Boolean INDATASET;

    LOCAL PROCEDURE CheckIfCreatedBefore@1100285000(VAR SalesCrMemoHeader@1100285000 : Record 114);
    VAR
      Count@1100285001 : Integer;
      lvLayoutCode@1100285002 : Code[10];
    BEGIN
      //>> 160121 ITERO.AC IME445 Handle new column "E-Invoice Layout Code"
      IF (SalesCrMemoHeader.COUNT <> 1 ) THEN BEGIN
        IF CheckForIllegalSelection(SalesCrMemoHeader) THEN BEGIN
          MESSAGE(txtIllegalCombination);
          CurrReport.QUIT;
        END;

        gPrintLineDiscountEnabled := TRUE;
        gNotPrintItemNoEnabled := TRUE;
        gLayoutEnabled := TRUE;

      END ELSE BEGIN
        SalesCrMemoHeader.FINDSET(FALSE);
        IF SalesCrMemoHeader."E-Invoice Layout Code" <> '' THEN BEGIN
          lvLayoutCode := SalesCrMemoHeader."E-Invoice Layout Code";
          gPrintLineDiscountEnabled := FALSE;
          gNotPrintItemNoEnabled := FALSE;
          gLayoutEnabled := FALSE;

          IF STRPOS(lvLayoutCode, ',') <> 0 THEN BEGIN
            //>> 160217 ITERO.AC IME445 Bugfix (IF Evaluate)
            IF EVALUATE(gLayout, SELECTSTR(1, lvLayoutCode)) THEN;
            IF EVALUATE(gNotPrintItemNo, SELECTSTR(2, lvLayoutCode)) THEN;
            IF EVALUATE(gPrintLineDiscount, SELECTSTR(3, lvLayoutCode)) THEN;
            //<< 160217 ITERO.AC IME445 Bugfix
          END;

        END ELSE BEGIN
          lvLayoutCode := SalesCrMemoHeader."Invoice Layout Code";
          IF EVALUATE(gLayout, SELECTSTR(1, lvLayoutCode)) THEN;      // 160217 ITERO.AC IME445 Bugfix (IF clause)
          gPrintLineDiscountEnabled := TRUE;
          gNotPrintItemNoEnabled := TRUE;
          gLayoutEnabled := TRUE;

        END;
      END;
      //<< 160121 ITERO.AC IME445
      gCreationStatus := '';
      Count := SalesCrMemoHeader.COUNT;

      SalesCrMemoHeader.SETFILTER("Electronic Invoicing", '<>%1', SalesCrMemoHeader."Electronic Invoicing"::"Svefaktura (XML)");
      IF (SalesCrMemoHeader.COUNT > 0) THEN gCreationStatus := STRSUBSTNO(txtSendAllInvoices, SalesCrMemoHeader.COUNT, Count);

      SalesCrMemoHeader.SETRANGE("Electronic Invoicing");
    END;

    LOCAL PROCEDURE CheckMarkedForInvoice@1100285001(VAR SalesCrMemoHeader@1100285000 : Record 114);
    VAR
      AlreadyCreated@1100285001 : Integer;
    BEGIN
      gDoubleWarning := '';


      IF (SalesCrMemoHeader.FINDSET(FALSE)) THEN REPEAT
         IF (SalesCrMemoHeader."Electronic Credit Memo Created") THEN AlreadyCreated +=1;
      UNTIL SalesCrMemoHeader.NEXT = 0;

      IF (AlreadyCreated > 0) THEN gDoubleWarning := STRSUBSTNO(txtSendAlreadyCreated, AlreadyCreated);
    END;

    PROCEDURE CheckForIllegalSelection@1100285002(VAR pSalesCrMemoHeader@1100285000 : Record 114) : Boolean;
    BEGIN
      // 160121 ITERO.AC IME445 This function is used to check if the user has selected more than one Credit Memo that already has been sent or printed

      IF pSalesCrMemoHeader.FINDSET(FALSE) THEN BEGIN
        REPEAT
          IF pSalesCrMemoHeader."E-Invoice Layout Code" <> '' THEN
            EXIT(TRUE);

          UNTIL pSalesCrMemoHeader.NEXT = 0;
      END;

      EXIT(FALSE);
    END;

    BEGIN
    {
      160121 ITERO.AC IME445 Handle new column "E-Invoice Layout Code" in tables "Sales Invoice Header" and "Sales Cr.Memo Header" (The new layout code is saved when an invioce is printed or sent).
      160217 ITERO.AC IME445 Bug fix. Avoid error if "Invoice Layout Code" is blank
      180713 ORANGO.DL IME1068 SaveValues yes->no
    }
    END.
  }
  RDLDATA
  {
  }
}

