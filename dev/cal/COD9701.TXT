OBJECT Codeunit 9701 Cue Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    Permissions=TableData 9701=r;
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      TempGlobalCueSetup@1000 : TEMPORARY Record 9701;

    [External]
    PROCEDURE GetCustomizedCueStyle@2(TableId@1001 : Integer;FieldId@1002 : Integer;CueValue@1004 : Decimal) : Text;
    VAR
      CueSetup@1000 : Record 9701;
      Style@1005 : Option;
    BEGIN
      Style := GetCustomizedCueStyleOption(TableId,FieldId,CueValue);
      EXIT(CueSetup.ConvertStyleToStyleText(Style));
    END;

    [External]
    PROCEDURE OpenCustomizePageForCurrentUser@1(TableId@1000 : Integer);
    VAR
      TempCueSetupRecord@1003 : TEMPORARY Record 9701;
    BEGIN
      // Set TableNo in filter group 4, which is invisible and unchangeable for the user.
      // The user should only be able to set personal styles/thresholds, and only for the given table.
      TempCueSetupRecord.FILTERGROUP(4);
      TempCueSetupRecord.SETRANGE("Table ID",TableId);
      PAGE.RUNMODAL(PAGE::"Cue Setup End User",TempCueSetupRecord);
    END;

    [External]
    PROCEDURE PopulateTempCueSetupRecords@3(VAR TempCueSetupPageSourceRec@1002 : TEMPORARY Record 9701);
    VAR
      CueSetup@1001 : Record 9701;
      Field@1000 : Record 2000000041;
    BEGIN
      // Populate temporary records with appropriate records from the real table.
      CueSetup.COPYFILTERS(TempCueSetupPageSourceRec);
      CueSetup.SETFILTER("User Name",'%1|%2',USERID,'');

      // Insert user specific records and company wide records.
      CueSetup.ASCENDING := FALSE;
      IF CueSetup.FINDSET THEN BEGIN
        REPEAT
          TempCueSetupPageSourceRec.TRANSFERFIELDS(CueSetup);

          IF TempCueSetupPageSourceRec."User Name" = '' THEN
            TempCueSetupPageSourceRec.Personalized := FALSE
          ELSE
            TempCueSetupPageSourceRec.Personalized := TRUE;

          TempCueSetupPageSourceRec."User Name" := USERID;
          IF TempCueSetupPageSourceRec.INSERT THEN;
        UNTIL CueSetup.NEXT = 0;
      END;

      // Insert default records
      // Look up in the Fields virtual table
      // Filter on Table No=Table No and Type=Decimal|Integer. This should give us approximately the
      // fields that are "valid" for a cue control.
      Field.SETFILTER(TableNo,TempCueSetupPageSourceRec.GETFILTER("Table ID"));
      Field.SETFILTER(Type,'%1|%2',Field.Type::Decimal,Field.Type::Integer);
      Field.SETFILTER(ObsoleteState,'<>%1',Field.ObsoleteState::Removed);
      IF Field.FINDSET THEN BEGIN
        REPEAT
          IF NOT TempCueSetupPageSourceRec.GET(USERID,Field.TableNo,Field."No.") THEN BEGIN
            TempCueSetupPageSourceRec.INIT;
            TempCueSetupPageSourceRec."User Name" := USERID;
            TempCueSetupPageSourceRec."Table ID" := Field.TableNo;
            TempCueSetupPageSourceRec."Field No." := Field."No.";
            TempCueSetupPageSourceRec.Personalized := FALSE;
            TempCueSetupPageSourceRec.INSERT;
          END;
        UNTIL Field.NEXT = 0;

        // Clear last filter
        TempCueSetupPageSourceRec.SETRANGE("Field No.");
        IF TempCueSetupPageSourceRec.FINDFIRST THEN;
      END;
    END;

    [External]
    PROCEDURE CopyTempCueSetupRecordsToTable@6(VAR TempCueSetupPageSourceRec@1000 : TEMPORARY Record 9701);
    VAR
      CueSetup@1001 : Record 9701;
    BEGIN
      IF TempCueSetupPageSourceRec.FINDSET THEN BEGIN
        REPEAT
          IF TempCueSetupPageSourceRec.Personalized THEN BEGIN
            CueSetup.TRANSFERFIELDS(TempCueSetupPageSourceRec);
            IF CueSetup.FIND THEN BEGIN
              CueSetup.TRANSFERFIELDS(TempCueSetupPageSourceRec);
              // Personalized field contains tempororaty property we never save it in the database.
              CueSetup.Personalized := FALSE;
              CueSetup.MODIFY
            END ELSE BEGIN
              // Personalized field contains tempororaty property we never save it in the database.
              CueSetup.Personalized := FALSE;
              CueSetup.INSERT;
            END;
          END ELSE BEGIN
            CueSetup.TRANSFERFIELDS(TempCueSetupPageSourceRec);
            IF CueSetup.DELETE THEN;
          END;
        UNTIL TempCueSetupPageSourceRec.NEXT = 0;
      END;
      ClearCachedValues;
    END;

    [External]
    PROCEDURE ValidatePersonalizedField@10(VAR TempCueSetupPageSourceRec@1000 : TEMPORARY Record 9701);
    VAR
      CueSetup@1001 : Record 9701;
    BEGIN
      IF TempCueSetupPageSourceRec.Personalized = FALSE THEN
        IF CueSetup.GET('',TempCueSetupPageSourceRec."Table ID",TempCueSetupPageSourceRec."Field No.") THEN BEGIN
          // Revert back to company default if present.
          TempCueSetupPageSourceRec."Low Range Style" := CueSetup."Low Range Style";
          TempCueSetupPageSourceRec."Threshold 1" := CueSetup."Threshold 1";
          TempCueSetupPageSourceRec."Middle Range Style" := CueSetup."Middle Range Style";
          TempCueSetupPageSourceRec."Threshold 2" := CueSetup."Threshold 2";
          TempCueSetupPageSourceRec."High Range Style" := CueSetup."High Range Style";
        END ELSE BEGIN
          // Revert to "no values".
          TempCueSetupPageSourceRec."Low Range Style" := TempCueSetupPageSourceRec."Low Range Style"::None;
          TempCueSetupPageSourceRec."Threshold 1" := 0;
          TempCueSetupPageSourceRec."Middle Range Style" := TempCueSetupPageSourceRec."Middle Range Style"::None;
          TempCueSetupPageSourceRec."Threshold 2" := 0;
          TempCueSetupPageSourceRec."High Range Style" := TempCueSetupPageSourceRec."High Range Style"::None;
        END;
    END;

    LOCAL PROCEDURE GetCustomizedCueStyleOption@5(TableId@1003 : Integer;FieldNo@1001 : Integer;CueValue@1000 : Decimal) : Integer;
    VAR
      CueSetup@1002 : Record 9701;
    BEGIN
      FindCueSetup(CueSetup,TableId,FieldNo);
      EXIT(CueSetup.GetStyleForValue(CueValue));
    END;

    LOCAL PROCEDURE FindCueSetup@4(VAR CueSetup@1000 : Record 9701;TableId@1001 : Integer;FieldNo@1002 : Integer);
    VAR
      Found@1003 : Boolean;
    BEGIN
      IF NOT TempGlobalCueSetup.GET(USERID,TableId,FieldNo) THEN BEGIN
        Found := CueSetup.GET(USERID,TableId,FieldNo);
        IF NOT Found THEN
          Found := CueSetup.GET('',TableId,FieldNo);
        IF Found THEN
          TempGlobalCueSetup := CueSetup
        ELSE BEGIN // add default to cache
          TempGlobalCueSetup.INIT;
          TempGlobalCueSetup."Table ID" := TableId;
          TempGlobalCueSetup."Field No." := FieldNo;
        END;
        TempGlobalCueSetup."User Name" := USERID;
        TempGlobalCueSetup.INSERT;
      END;
      CueSetup := TempGlobalCueSetup;
    END;

    [External]
    PROCEDURE ClearCachedValues@7();
    BEGIN
      TempGlobalCueSetup.DELETEALL;
    END;

    [EventSubscriber(Codeunit,2000000004,GetCueStyle)]
    LOCAL PROCEDURE GetCueStyle@8(TableId@1000 : Integer;FieldNo@1001 : Integer;CueValue@1002 : Decimal;VAR StyleText@1003 : Text);
    BEGIN
      StyleText := GetCustomizedCueStyle(TableId,FieldNo,CueValue)
    END;

    BEGIN
    END.
  }
}

