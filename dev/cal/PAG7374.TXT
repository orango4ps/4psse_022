OBJECT Page 7374 Bin Contents
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Bin Contents;
               NOR=Hylleinnhold;
               SVE=Lagerplatsinneh†ll];
    ApplicationArea=#Warehouse;
    SaveValues=Yes;
    InsertAllowed=No;
    SourceTable=Table7302;
    DataCaptionExpr=DataCaption;
    PageType=Worksheet;
    UsageCategory=Tasks;
    OnOpenPage=BEGIN
                 ItemDescription := '';
                 GetWhseLocation(LocationCode,ZoneCode);
                 DefFilter;
               END;

    OnAfterGetCurrRecord=BEGIN
                           GetItemDescr("Item No.","Variant Code",ItemDescription);
                           DataCaption := STRSUBSTNO('%1 ',"Bin Code");
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 55      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 NOR=&Linje;
                                 SVE=Ra&d];
                      Image=Line }
      { 57      ;2   ;Action    ;
                      CaptionML=[ENU=Warehouse Entries;
                                 NOR=Lagerposter;
                                 SVE=Dist.lager transaktioner];
                      ToolTipML=[ENU=View completed warehouse activities related to the document.;
                                 NOR=Vis fullf›rte lageraktiviteter som er relatert til dokumentet.;
                                 SVE=Visa slutf”rda distributionslageraktiviteter f”r dokumentet.];
                      ApplicationArea=#Warehouse;
                      RunObject=Page 7318;
                      RunPageView=SORTING(Item No.,Bin Code,Location Code,Variant Code);
                      RunPageLink=Item No.=FIELD(Item No.),
                                  Location Code=FIELD(Location Code),
                                  Bin Code=FIELD(Bin Code),
                                  Variant Code=FIELD(Variant Code);
                      Image=BinLedger }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 4   ;1   ;Group     ;
                CaptionML=[ENU=Options;
                           NOR=Alternativer;
                           SVE=Alternativ] }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Location Filter;
                           NOR=Lokasjonsfilter;
                           SVE=Lagerst„llefilter];
                ToolTipML=[ENU=Specifies the locations that bin contents are shown for.;
                           NOR=Angir lokasjonene som hylleinnhold vises for.;
                           SVE=Anger vilka lagerst„llen som lagerplatsinneh†ll visas f”r.];
                ApplicationArea=#Location;
                SourceExpr=LocationCode;
                OnValidate=BEGIN
                             ZoneCode := '';
                             IF LocationCode <> '' THEN BEGIN
                               IF WMSMgt.LocationIsAllowed(LocationCode) THEN BEGIN
                                 Location.GET(LocationCode);
                                 Location.TESTFIELD("Bin Mandatory",TRUE);
                               END ELSE
                                 ERROR(Text000,USERID);
                             END;
                             DefFilter;
                             LocationCodeOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           Location.RESET;
                           Location.SETRANGE("Bin Mandatory",TRUE);
                           IF LocationCode <> '' THEN
                             Location.Code := LocationCode;
                           IF PAGE.RUNMODAL(PAGE::"Locations with Warehouse List",Location) = ACTION::LookupOK THEN BEGIN
                             Location.TESTFIELD("Bin Mandatory",TRUE);
                             LocationCode := Location.Code;
                             DefFilter;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 45  ;2   ;Field     ;
                CaptionML=[ENU=Zone Filter;
                           NOR=Sonefilter;
                           SVE=Zonfilter];
                ToolTipML=[ENU=Specifies the filter that allows you to see an overview of the documents with a certain value in the Service Zone Code field.;
                           NOR=Angir filteret som gj›r at du kan se en oversikt over de dokumentene som har en bestemt verdi i feltet Servicesonekode.;
                           SVE=Anger filtret som g”r att du kan visa en ”versikt ”ver dokument med ett visst v„rde i f„ltet Servicezonskod.];
                ApplicationArea=#Warehouse;
                SourceExpr=ZoneCode;
                OnValidate=BEGIN
                             DefFilter;
                             ZoneCodeOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           Zone.RESET;
                           IF ZoneCode <> '' THEN
                             Zone.Code := ZoneCode;
                           IF LocationCode <> '' THEN
                             Zone.SETRANGE("Location Code",LocationCode);
                           IF PAGE.RUNMODAL(0,Zone) = ACTION::LookupOK THEN BEGIN
                             ZoneCode := Zone.Code;
                             LocationCode := Zone."Location Code";
                             DefFilter;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 37  ;1   ;Group     ;
                GroupType=Repeater }

    { 50  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the location code of the bin.;
                           NOR=Angir lokasjonskoden for hyllen.;
                           SVE=Anger lagerplatsens lagerst„llekod.];
                ApplicationArea=#Warehouse;
                SourceExpr="Location Code";
                Visible=FALSE }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the zone code of the bin.;
                           NOR=Angir sonekoden for hyllen.;
                           SVE=Anger lagerplatsens zonkod.];
                ApplicationArea=#Warehouse;
                SourceExpr="Zone Code";
                Visible=FALSE }

    { 1   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the bin where the items are picked or put away.;
                           NOR=Angir hyllen der varene plukkes eller plasseres.;
                           SVE=Anger lagerplatsen d„r artiklarna plockas eller f”rs in.];
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Code";
                OnValidate=BEGIN
                             CheckQty;
                           END;
                            }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the item that will be stored in the bin.;
                           NOR=Angir nummeret p† varen som skal lagres p† hyllen.;
                           SVE=Anger numret p† den artikel som ska lagras p† lagerplatsen.];
                ApplicationArea=#Warehouse;
                SourceExpr="Item No.";
                OnValidate=BEGIN
                             CheckQty;
                           END;
                            }

    { 1100529100;2;Field  ;
                SourceExpr="Item Description" }

    { 23  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the variant of the item on the line.;
                           NOR=Angir varianten for varen p† linjen.;
                           SVE=Anger varianten av artikeln p† raden.];
                ApplicationArea=#Planning;
                SourceExpr="Variant Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             CheckQty;
                           END;
                            }

    { 39  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                           NOR=Angir hvordan hver enhet av varen eller ressursen m†les, for eksempel i stykker eller timer. Verdien i feltet Lagerenhet p† vare- eller ressurskortet settes inn som standard.;
                           SVE=Anger hur varje enhet av artikeln eller resursen m„ts, till exempel i stycken eller timmar. Som standard infogas v„rdet i f„ltet Basenhet p† artikel- eller resurskortet.];
                ApplicationArea=#Warehouse;
                SourceExpr="Unit of Measure Code" }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of base units of measure that are in the unit of measure specified for the item in the bin.;
                           NOR=Angir antall lagerenheter i den enheten som er spesifisert for varen i hyllen.;
                           SVE=Anger antalet basenheter i den enhet som har angetts f”r artikeln p† lagerplatsen.];
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. per Unit of Measure";
                Visible=FALSE;
                OnValidate=BEGIN
                             CheckQty;
                           END;
                            }

    { 59  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the bin is the default bin for the associated item.;
                           NOR=Angir om hyllen er standardhylle for den tilknyttede varen.;
                           SVE=Anger om lagerplatsen „r standardlagerplatsen f”r motsvarande artikel.];
                ApplicationArea=#Warehouse;
                SourceExpr=Default }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the bin is used as a dedicated bin, which means that its bin content is available only to certain resources.;
                           NOR=Angir om hyllen skal brukes som en dedikert hylle, noe som betyr at hylleinnholdet bare er tilgjengelig for bestemte ressurser.;
                           SVE=Anger om lagerplatsen anv„nds som en dedikerad lagerplats, vilket inneb„r att lagerplatsinneh†llet bara „r tillg„ngligt f”r vissa resurser.];
                ApplicationArea=#Warehouse;
                SourceExpr=Dedicated }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the warehouse class code. Only items with the same warehouse class can be stored in this bin.;
                           NOR=Angir lagerklassekoden. I denne hyllen kan du bare lagre varer med samme lagerklassekode.;
                           SVE=Anger distributionslagerklasskoden. Det „r endast artiklar med samma distributionslagerklass som kan lagras p† den h„r lagerplatsen.];
                ApplicationArea=#Warehouse;
                SourceExpr="Warehouse Class Code" }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the bin type that was selected for this bin.;
                           NOR=Angir koden for hylletypen som er valgt for denne hyllen.;
                           SVE=Anger koden f”r den lagerplatstyp som har valts f”r den h„r lagerplatsen.];
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Type Code" }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the bin ranking.;
                           NOR=Angir hyllerangeringen.;
                           SVE=Anger lagerplatsens rangordning.];
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Ranking" }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how the movement of a particular item, or bin content, into or out of this bin, is blocked.;
                           NOR=Angir hvordan flyttingen av en bestemt vare eller et bestemt hylleinnhold til eller fra denne hyllen er blokkert.;
                           SVE=Anger hur transporten av en viss artikel eller ett visst lagerplatsinneh†ll in i och ut fr†n den h„r lagerplatsen sp„rras.];
                ApplicationArea=#Warehouse;
                SourceExpr="Block Movement" }

    { 13  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the minimum number of units of the item that you want to have in the bin at all times.;
                           NOR=Angir minimum antall enheter av varen som du vil ha p† hyllen til enhver tid.;
                           SVE=Anger det minsta antalet artiklar som du vid varje tidpunkt vill ha p† lagerplatsen.];
                ApplicationArea=#Warehouse;
                SourceExpr="Min. Qty." }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the maximum number of units of the item that you want to have in the bin.;
                           NOR=Angir det maksimale antall enheter av varen du vil ha p† hyllen.;
                           SVE=Anger det h”gsta antal artiklar som du vid varje tidpunkt vill ha p† lagerplatsen.];
                ApplicationArea=#Warehouse;
                SourceExpr="Max. Qty." }

    { 19  ;2   ;Field     ;
                CaptionML=[ENU=Quantity;
                           NOR=Antall;
                           SVE=Antal];
                ToolTipML=[ENU=Specifies the quantity of the item in the bin that corresponds to the line.;
                           NOR=Angir antallet av varen i hyllen som samsvarer med linjen.;
                           SVE=Anger det antal av artikeln p† lagerplatsen som motsvarar raden.];
                ApplicationArea=#Warehouse;
                DecimalPlaces=0:5;
                SourceExpr=CalcQtyUOM }

    { 61  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the item, in the base unit of measure, are stored in the bin.;
                           NOR=Angir hvor mange varer av lagerenheten som plasseres i hyllen.;
                           SVE=Anger hur m†nga artikelenheter som lagras p† lagerplatsen, m„tt i antalet basenheter.];
                ApplicationArea=#Warehouse;
                SourceExpr="Quantity (Base)" }

    { 63  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the item, in the base unit of measure, will be picked from the bin.;
                           NOR=Angir hvor mange varer av lagerenheten som skal plukkes fra hyllen.;
                           SVE=Anger hur m†nga artikelenheter i antalet basenheter som plockas fr†n lagerplatsen.];
                ApplicationArea=#Warehouse;
                SourceExpr="Pick Quantity (Base)" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many assemble-to-order units are picked for assembly.;
                           NOR=Angir hvor mange monter-til-ordre-enheter som plukkes for montering.;
                           SVE=Anger hur m†nga enheter av montering mot kundorder v„ljs f”r montering.];
                ApplicationArea=#Assembly;
                SourceExpr="ATO Components Pick Qty (Base)" }

    { 65  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many item units, in the base unit of measure, will be posted on journal lines as negative quantities.;
                           NOR=Angir hvor mange vareenheter av lagerenheten som skal bokf›res p† kladdelinjer som negative antall.;
                           SVE=Anger hur m†nga artikelenheter i antalet basenheter som bokf”rs p† journalrader som negativa kvantiteter.];
                ApplicationArea=#Warehouse;
                SourceExpr="Negative Adjmt. Qty. (Base)" }

    { 67  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the item, in the base unit of measure, will be put away in the bin.;
                           NOR=Angir hvor mange varer av lagerenheten som skal plasseres i hyllen.;
                           SVE=Anger hur m†nga artikelenheter i antalet basenheter som inf”rs p† lagerplatsen.];
                ApplicationArea=#Warehouse;
                SourceExpr="Put-away Quantity (Base)" }

    { 69  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many item units, in the base unit of measure, will be posted on journal lines as positive quantities.;
                           NOR=Angir hvor mange vareenheter av lagerenheten som skal bokf›res p† kladdelinjer som positive antall.;
                           SVE=Anger hur m†nga artikelenheter i antalet basenheter som bokf”rs p† journalrader som positiva kvantiteter.];
                ApplicationArea=#Warehouse;
                SourceExpr="Positive Adjmt. Qty. (Base)" }

    { 47  ;2   ;Field     ;
                CaptionML=[ENU=Available Qty. to Take;
                           NOR=Disp. antall som skal hentes;
                           SVE=Disponibelt ant. att ta];
                ToolTipML=[ENU=Specifies the quantity of the item that is available in the bin.;
                           NOR=Angir antallet for varen som er tilgjengelige i hyllen.;
                           SVE=Anger antalet av artikeln som „r disponibelt p† lagerplatsen.];
                ApplicationArea=#Warehouse;
                DecimalPlaces=0:5;
                SourceExpr=CalcQtyAvailToTakeUOM;
                Editable=FALSE }

    { 43  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the item (bin content) has been associated with this bin, and that the bin should normally contain the item.;
                           NOR=Angir at varen (hylleinnholdet) fast knyttet til denne hyllen, og hyllen skal normalt inneholde denne varen.;
                           SVE=Anger att artikeln (lagerplatsinneh†llet) har kopplats till den h„r lagerplatsen och att lagerplatsen vanligtvis inneh†ller den h„r artikeln.];
                ApplicationArea=#Warehouse;
                SourceExpr=Fixed }

    { 56  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the bin content is in a cross-dock bin.;
                           NOR=Angir om hylleinnholdet er i en kryssoverf›ringshylle.;
                           SVE=Anger om inneh†llet p† lagerplatsen „r p† en lagerplats f”r direktutleverans.];
                ApplicationArea=#Warehouse;
                SourceExpr="Cross-Dock Bin" }

    { 49  ;1   ;Group      }

    { 1903651201;2;Group  ;
                GroupType=FixedLayout }

    { 1900206101;3;Group  ;
                CaptionML=[ENU=Item Description;
                           NOR=Varebeskrivelse;
                           SVE=Artikelbeskrivning] }

    { 54  ;4   ;Field     ;
                ApplicationArea=#Warehouse;
                SourceExpr=ItemDescription;
                Editable=FALSE;
                ShowCaption=No }

    { 1900205901;3;Group  ;
                CaptionML=[ENU=Qty. on Adjustment Bin;
                           NOR=Ant. i justeringshylle;
                           SVE=Ant. i justeringslagerplats] }

    { 52  ;4   ;Field     ;
                CaptionML=[ENU=Qty. on Adjustment Bin;
                           NOR=Ant. i justeringshylle;
                           SVE=Ant. i justeringslagerplats];
                ToolTipML=[ENU=Specifies the adjusted quantity in a bin, when the quantity recorded in the system is inaccurate because of a physical gain or loss of an item.;
                           NOR=Angir det justerte antallet i en hylle n†r antallet som er registrert i systemet, er un›yaktig p† grunn av et fysisk tap eller vinning for en vare.;
                           SVE=Anger det justerade antalet p† en lagerplats, n„r antalet som bokf”rs i systemet „r felaktigt p† grund av en fysisk vinst eller f”rlust av en artikel.];
                ApplicationArea=#Warehouse;
                DecimalPlaces=0:5;
                SourceExpr=CalcQtyonAdjmtBin;
                Editable=FALSE;
                OnDrillDown=VAR
                              WhseEntry@1001 : Record 7312;
                            BEGIN
                              LocationGet("Location Code");
                              WhseEntry.SETCURRENTKEY(
                                "Item No.","Bin Code","Location Code","Variant Code","Unit of Measure Code");
                              WhseEntry.SETRANGE("Item No.","Item No.");
                              WhseEntry.SETRANGE("Bin Code",AdjmtLocation."Adjustment Bin Code");
                              WhseEntry.SETRANGE("Location Code","Location Code");
                              WhseEntry.SETRANGE("Variant Code","Variant Code");
                              WhseEntry.SETRANGE("Unit of Measure Code","Unit of Measure Code");

                              PAGE.RUNMODAL(PAGE::"Warehouse Entries",WhseEntry);
                            END;
                             }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 2   ;1   ;Part      ;
                ApplicationArea=#ItemTracking;
                SubPageLink=Item No.=FIELD(Item No.),
                            Variant Code=FIELD(Variant Code),
                            Location Code=FIELD(Location Code);
                PagePartID=Page9126;
                Visible=false;
                PartType=Page }

    { 1900383207;1;Part   ;
                ApplicationArea=#RecordLinks;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                ApplicationArea=#Notes;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Location@1001 : Record 14;
      AdjmtLocation@1006 : Record 14;
      Zone@1002 : Record 7300;
      WMSMgt@1003 : Codeunit 7302;
      LocationCode@1009 : Code[10];
      ZoneCode@1010 : Code[10];
      DataCaption@1012 : Text[80];
      ItemDescription@1000 : Text[100];
      Text000@1004 : TextConst 'ENU=Location code is not allowed for user %1.;NOR=Det er ikke tillatt med lokasjonskode for brukeren %1.;SVE=Lagerst„llekod „r inte till†ten f”r anv„ndare %1.';
      LocFilter@1005 : Text[250];

    LOCAL PROCEDURE DefFilter@1();
    BEGIN
      FILTERGROUP := 2;
      IF LocationCode <> '' THEN
        SETRANGE("Location Code",LocationCode)
      ELSE BEGIN
        CLEAR(LocFilter);
        CLEAR(Location);
        Location.SETRANGE("Bin Mandatory",TRUE);
        IF Location.FIND('-') THEN
          REPEAT
            IF WMSMgt.LocationIsAllowed(Location.Code) THEN
              LocFilter := LocFilter + Location.Code + '|';
          UNTIL Location.NEXT = 0;
        IF STRLEN(LocFilter) <> 0 THEN
          LocFilter := COPYSTR(LocFilter,1,(STRLEN(LocFilter) - 1));
        SETFILTER("Location Code",LocFilter);
      END;
      IF ZoneCode <> '' THEN
        SETRANGE("Zone Code",ZoneCode)
      ELSE
        SETRANGE("Zone Code");
      FILTERGROUP := 0;
    END;

    LOCAL PROCEDURE CheckQty@2();
    BEGIN
      TESTFIELD(Quantity,0);
      TESTFIELD("Pick Qty.",0);
      TESTFIELD("Put-away Qty.",0);
      TESTFIELD("Pos. Adjmt. Qty.",0);
      TESTFIELD("Neg. Adjmt. Qty.",0);
    END;

    LOCAL PROCEDURE LocationGet@4(LocationCode@1000 : Code[10]);
    BEGIN
      IF AdjmtLocation.Code <> LocationCode THEN
        AdjmtLocation.GET(LocationCode);
    END;

    LOCAL PROCEDURE LocationCodeOnAfterValidate@19034787();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE ZoneCodeOnAfterValidate@19054042();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    BEGIN
    END.
  }
}

