OBJECT Page 6050 Service Contract
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Contract;
               NOR=Servicekontrakt;
               SVE=Servicekontrakt];
    SourceTable=Table5965;
    SourceTableView=WHERE(Contract Type=FILTER(Contract));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Print/Send,Contract;
                                NOR=Ny,Prosess,Rapport,Skriv ut / send,Kontrakt;
                                SVE=Ny,Process,Rapport,Skriv ut/skicka,Kontrakt];
    OnInit=BEGIN
             InvoiceAfterServiceEnable := TRUE;
             PrepaidEnable := TRUE;
             FirstServiceDateEditable := TRUE;
           END;

    OnOpenPage=BEGIN
                 IF UserMgt.GetServiceFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetServiceFilter);
                   FILTERGROUP(0);
                 END;

                 ActivateFields;
               END;

    OnAfterGetRecord=BEGIN
                       UpdateShiptoCode;
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetServiceFilter;
                END;

    OnAfterGetCurrRecord=BEGIN
                           CALCFIELDS("Calcd. Annual Amount","No. of Posted Invoices","No. of Unposted Invoices");
                           ActivateFields;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 3       ;1   ;ActionGroup;
                      CaptionML=[ENU=Overview;
                                 NOR=Oversikt;
                                 SVE=ôversikt] }
      { 161     ;2   ;ActionGroup;
                      CaptionML=[ENU=Ser&vice Overview;
                                 NOR=Ser&viceoversikt;
                                 SVE=Ser&viceîversikt];
                      Image=Tools }
      { 87      ;3   ;Action    ;
                      CaptionML=[ENU=Service Orders;
                                 NOR=Serviceordrer;
                                 SVE=Serviceorder];
                      ToolTipML=[ENU=Open the list of ongoing service orders.;
                                 NOR=èpne listen over pÜgÜende serviceordrer.;
                                 SVE=ôppna listan med pÜgÜende serviceorder.];
                      ApplicationArea=#Service;
                      RunObject=Page 5901;
                      RunPageView=SORTING(Contract No.);
                      RunPageLink=Document Type=CONST(Order),
                                  Contract No.=FIELD(Contract No.);
                      Image=Document }
      { 88      ;3   ;Action    ;
                      CaptionML=[ENU=Posted Service Shipments;
                                 NOR=Bokfõrte servicefõlgesedler;
                                 SVE=Bokfîrda serviceutleveranser];
                      ToolTipML=[ENU=Open the list of posted service shipments.;
                                 NOR=èpne listen over bokfõrte serviceleveringer.;
                                 SVE=ôppna listan med bokfîrda serviceutleveranser.];
                      ApplicationArea=#Service;
                      Image=PostedShipment;
                      OnAction=VAR
                                 TempServShptHeader@1001 : TEMPORARY Record 5990;
                               BEGIN
                                 CollectShpmntsByLineContractNo(TempServShptHeader);
                                 PAGE.RUNMODAL(PAGE::"Posted Service Shipments",TempServShptHeader);
                               END;
                                }
      { 29      ;3   ;Action    ;
                      CaptionML=[ENU=Posted Service Invoices;
                                 NOR=Bokfõrte servicefakturaer;
                                 SVE=Bokfîrda servicefakturor];
                      ToolTipML=[ENU=Open the list of posted service invoices.;
                                 NOR=èpne listen over bokfõrte servicefakturaer.;
                                 SVE=ôppna listan med bokfîrda servicefakturor.];
                      ApplicationArea=#Service;
                      RunObject=Page 5968;
                      RunPageView=SORTING(Source Document Type,Source Document No.,Destination Document Type,Destination Document No.)
                                  WHERE(Source Document Type=CONST(Contract),
                                        Destination Document Type=CONST(Posted Invoice));
                      RunPageLink=Source Document No.=FIELD(Contract No.);
                      Image=PostedServiceOrder }
      { 94      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Contract;
                                 NOR=&Kontrakt;
                                 SVE=&Kontrakt];
                      Image=Agreement }
      { 69      ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 NOR=Dimensjoner;
                                 SVE=Dimensioner];
                      ToolTipML=[ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 NOR=Vis eller rediger dimensjoner, for eksempel omrÜde, prosjekt eller avdeling, som du kan tilordne til salgs- og kjõpsdokumenter for Ü distribuere kostnader og analysere transaksjonshistorikk.;
                                 SVE=Visa eller redigera dimensioner, till exempel omrÜde, projekt eller avdelning, som du kan tilldela fîrsÑljnings- och inkîpsdokument fîr att fîrdela kostnader och analysera transaktionshistorik.];
                      ApplicationArea=#Dimensions;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 22      ;2   ;Action    ;
                      CaptionML=[ENU=Service Dis&counts;
                                 NOR=Servi&cerabatter;
                                 SVE=Service&rabatter];
                      ToolTipML=[ENU=View or edit the discounts that you grant for the contract on spare parts in particular service item groups, the discounts on resource hours for resources in particular resource groups, and the discounts on particular service costs.;
                                 NOR=Vis eller rediger rabattene du gir for kontrakten pÜ reservedeler i bestemte servicevaregrupper, rabattene pÜ ressurstimer for ressurser i bestemte ressursgrupper, og rabattene pÜ bestemte servicekostnader.;
                                 SVE=Visa eller redigera rabatterna som du beviljar fîr kontraktet pÜ reservdelar i vissa serviceartikelgrupper, rabatterna pÜ resurstimmar fîr resurser i vissa resursgrupper samt rabatterna pÜ vissa servicekostnader.];
                      ApplicationArea=#Service;
                      RunObject=Page 6058;
                      RunPageLink=Contract Type=FIELD(Contract Type),
                                  Contract No.=FIELD(Contract No.);
                      Image=Discount }
      { 136     ;2   ;Action    ;
                      CaptionML=[ENU=Service &Hours;
                                 NOR=Service&timer;
                                 SVE=Servicek&alender];
                      ToolTipML=[ENU=View the service hours that are valid for the service contract. This window displays the starting and ending service hours for the contract for each weekday.;
                                 NOR=Vis servicetimene som gjelder for servicekontrakten. Dette vinduet viser start- og sluttservicetimene for kontrakten for hver enkelt ukedag.;
                                 SVE=Visa servicekalendern som gÑller fîr servicekontraktet. Fînstret innehÜller start- och sluttidpunkt per veckodag fîr kontraktet.];
                      ApplicationArea=#Service;
                      RunObject=Page 5916;
                      RunPageLink=Service Contract No.=FIELD(Contract No.),
                                  Service Contract Type=FILTER(Contract);
                      Image=ServiceHours }
      { 21      ;2   ;ActionGroup;
                      CaptionML=[ENU=Statistics;
                                 NOR=Statistikk;
                                 SVE=Statistik];
                      Image=Statistics }
      { 178     ;3   ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 NOR=Statistikk;
                                 SVE=Statistik];
                      ToolTipML=[ENU=View statistical information, such as the value of posted entries, for the record.;
                                 NOR=Vis statistikkinformasjon, for eksempel verdien for bokfõrte poster, for posten.;
                                 SVE=Visa statistisk information fîr posten, till exempel vÑrdet pÜ bokfîrda transaktioner.];
                      ApplicationArea=#Service;
                      RunObject=Page 6059;
                      RunPageLink=Contract Type=CONST(Contract),
                                  Contract No.=FIELD(Contract No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Statistics;
                      PromotedCategory=Category5 }
      { 97      ;3   ;Action    ;
                      CaptionML=[ENU=Tr&endscape;
                                 NOR=Tr&endscape;
                                 SVE=Tr&endscape];
                      ToolTipML=[ENU=View a detailed account of service item transactions by time intervals.;
                                 NOR=Vis en detaljert fremstilling av servicevaretransaksjoner per tidsintervall.;
                                 SVE=Visa en detaljerad redovisning av serviceartikeltransaktioner per tidsperiod.];
                      ApplicationArea=#Service;
                      RunObject=Page 6060;
                      RunPageLink=Contract Type=CONST(Contract),
                                  Contract No.=FIELD(Contract No.);
                      Image=Trendscape }
      { 145     ;2   ;Action    ;
                      CaptionML=[ENU=Filed Contracts;
                                 NOR=Arkiverte kontrakter;
                                 SVE=Arkiverade kontrakt];
                      ToolTipML=[ENU=View service contracts that are filed.;
                                 NOR=Vis servicekontrakter som er arkiverte.;
                                 SVE=Visa servicekontrakt som har arkiverats.];
                      ApplicationArea=#Service;
                      RunObject=Page 6073;
                      RunPageView=SORTING(Contract Type Relation,Contract No. Relation,File Date,File Time)
                                  ORDER(Descending);
                      RunPageLink=Contract Type Relation=FIELD(Contract Type),
                                  Contract No. Relation=FIELD(Contract No.);
                      Image=Agreement }
      { 99      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 NOR=&Merknader;
                                 SVE=Ko&mmentarer];
                      ToolTipML=[ENU=View or add comments for the record.;
                                 NOR=Vis eller legg til kommentarer for posten.;
                                 SVE=Visa eller lÑgg till kommentarer till posten.];
                      ApplicationArea=#Service;
                      RunObject=Page 5911;
                      RunPageLink=Table Name=CONST(Service Contract),
                                  Table Subtype=FIELD(Contract Type),
                                  No.=FIELD(Contract No.),
                                  Table Line No.=CONST(0);
                      Promoted=Yes;
                      Image=ViewComments;
                      PromotedCategory=Category5 }
      { 194     ;2   ;Action    ;
                      CaptionML=[ENU=&Gain/Loss Entries;
                                 NOR=&Resultatposter;
                                 SVE=&Vinst-/fîrlusttrans.];
                      ToolTipML=[ENU=View the contract number, reason code, contract group code, responsibility center, customer number, ship-to code, customer name, and type of change, as well as the contract gain and loss. You can print all your service contract gain/loss entries.;
                                 NOR=Vis kontraktnummeret, Ürsakskoden, kontraktgruppekoden, ansvarssenteret, kundenummeret, lever til-koden, kundenavnet og kontraktresultatet. Du kan skrive ut alle servicekontraktresultatpostene.;
                                 SVE=Visa kontraktsnummer, uppfîljningskod, kontraktsgruppkod, ansvarsenhet, kundnummer, leveransadresskod, kundnamn och vinsten/fîrlusten pÜ kontraktet. Du kan skriva ut alla vinst- och fîrlusttransaktioner fîr servicekontrakt.];
                      ApplicationArea=#Service;
                      RunObject=Page 6064;
                      RunPageView=SORTING(Contract No.,Change Date)
                                  ORDER(Descending);
                      RunPageLink=Contract No.=FIELD(Contract No.);
                      Image=GainLossEntries }
      { 5       ;1   ;ActionGroup;
                      CaptionML=[ENU=History;
                                 NOR=Historikk;
                                 SVE=Historik] }
      { 116     ;2   ;Action    ;
                      CaptionML=[ENU=C&hange Log;
                                 NOR=E&ndringslogg;
                                 SVE=&éndringslogg];
                      ToolTipML=[ENU=View all changes that have been made to the service contract.;
                                 NOR=Vis alle endringer som er gjort i servicekontrakten.;
                                 SVE=Visa alla Ñndringar som har gjorts i servicekontraktet.];
                      ApplicationArea=#Service;
                      RunObject=Page 6063;
                      RunPageView=SORTING(Contract No.)
                                  ORDER(Descending);
                      RunPageLink=Contract No.=FIELD(Contract No.);
                      Image=ChangeLog }
      { 149     ;2   ;Action    ;
                      CaptionML=[ENU=&Warranty Ledger Entries;
                                 NOR=&Garantiposter;
                                 SVE=&Garantitransaktioner];
                      ToolTipML=[ENU=View all the ledger entries for the service item or service order that result from posting transactions in service documents that contain warranty agreements.;
                                 NOR=Vis alle postene for servicevaren eller serviceordren som er et resultat av bokfõringstransaksjoner i servicedokumenter som inneholder garantiavtaler.;
                                 SVE=Visa alla transaktioner fîr serviceartikeln eller serviceordern som hÑrrîr frÜn bokfîrda transaktioner i servicedokument som innehÜller garantiavtal.];
                      ApplicationArea=#Service;
                      RunObject=Page 5913;
                      RunPageView=SORTING(Service Contract No.,Posting Date,Document No.);
                      RunPageLink=Service Contract No.=FIELD(Contract No.);
                      Image=WarrantyLedger }
      { 96      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Service Ledger E&ntries;
                                 NOR=Service&poster;
                                 SVE=&Servicetransaktioner];
                      ToolTipML=[ENU=View all the ledger entries for the service item or service order that result from posting transactions in service documents.;
                                 NOR=Vis alle postene for servicevaren eller serviceordren som er et resultat av bokfõringstransaksjoner i servicedokumenter.;
                                 SVE=Visa alla transaktioner fîr serviceartikeln eller serviceordern som hÑrrîr frÜn bokfîrda transaktioner i servicedokumentet.];
                      ApplicationArea=#Service;
                      RunObject=Page 5912;
                      RunPageView=SORTING(Service Contract No.);
                      RunPageLink=Service Contract No.=FIELD(Contract No.);
                      Image=ServiceLedger }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 7       ;1   ;ActionGroup;
                      CaptionML=[ENU=General;
                                 NOR=Generelt;
                                 SVE=AllmÑnt] }
      { 112     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 NOR=&Skriv ut;
                                 SVE=Skriv &ut];
                      ToolTipML=[ENU=Prepare to print the document. A report request window for the document opens where you can specify what to include on the print-out.;
                                 NOR=Klargjõr for Ü skrive ut dokumentet. Det vises et rapportforespõrselsvindu for dokumentet der du kan angi hva som skal inkluderes pÜ utskriften.;
                                 SVE=Fîrbered utskrift av dokumentet. Ett rapportfînster om dokumentet îppnas dÑr det gÜr att ange vad du vill inkludera pÜ utskriften.];
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 DocPrint@1001 : Codeunit 229;
                               BEGIN
                                 DocPrint.PrintServiceContract(Rec);
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=New Documents;
                                 NOR=Nye bilag;
                                 SVE=Nya dokument] }
      { 110     ;2   ;Action    ;
                      CaptionML=[ENU=Create Service Credit &Memo;
                                 NOR=&Opprett servicekreditnota;
                                 SVE=Skapa servicekredit&nota];
                      ToolTipML=[ENU=Create a new credit memo for the related service invoice.;
                                 NOR=Opprett en ny kreditnota for den relaterte servicefakturaen.;
                                 SVE=Skapa en ny kreditnota fîr den relaterade servicefakturan.];
                      ApplicationArea=#Service;
                      Image=CreateCreditMemo;
                      OnAction=VAR
                                 ConfirmManagement@1002 : Codeunit 27;
                                 W1@1000 : Dialog;
                                 CreditNoteNo@1001 : Code[20];
                                 i@1003 : Integer;
                                 j@1004 : Integer;
                                 LineFound@1005 : Boolean;
                               BEGIN
                                 CurrPage.UPDATE;
                                 TESTFIELD(Status,Status::Signed);
                                 IF "No. of Unposted Credit Memos" <> 0 THEN
                                   IF NOT ConfirmManagement.ConfirmProcess(Text009,TRUE) THEN
                                     EXIT;

                                 ServContractMgt.CopyCheckSCDimToTempSCDim(Rec);

                                 IF NOT ConfirmManagement.ConfirmProcess(Text010,TRUE) THEN
                                   EXIT;

                                 ServContractLine.RESET;
                                 ServContractLine.SETCURRENTKEY("Contract Type","Contract No.",Credited,"New Line");
                                 ServContractLine.SETRANGE("Contract Type","Contract Type");
                                 ServContractLine.SETRANGE("Contract No.","Contract No.");
                                 ServContractLine.SETRANGE(Credited,FALSE);
                                 ServContractLine.SETFILTER("Credit Memo Date",'>%1&<=%2',0D,WORKDATE);
                                 i := ServContractLine.COUNT;
                                 j := 0;
                                 IF ServContractLine.FIND('-') THEN BEGIN
                                   LineFound := TRUE;
                                   W1.OPEN(
                                     Text011 +
                                     '@1@@@@@@@@@@@@@@@@@@@@@');
                                   CLEAR(ServContractMgt);
                                   ServContractMgt.InitCodeUnit;
                                   REPEAT
                                     ServContractLine1 := ServContractLine;
                                     CreditNoteNo := ServContractMgt.CreateContractLineCreditMemo(ServContractLine1,FALSE);
                                     j := j + 1;
                                     W1.UPDATE(1,ROUND(j / i * 10000,1));
                                   UNTIL ServContractLine.NEXT = 0;
                                   ServContractMgt.FinishCodeunit;
                                   W1.CLOSE;
                                   CurrPage.UPDATE(FALSE);
                                 END;
                                 ServContractLine.SETFILTER("Credit Memo Date",'>%1',WORKDATE);
                                 IF CreditNoteNo <> '' THEN
                                   MESSAGE(STRSUBSTNO(Text012,CreditNoteNo))
                                 ELSE
                                   IF NOT ServContractLine.FIND('-') OR LineFound THEN
                                     MESSAGE(Text013)
                                   ELSE
                                     MESSAGE(Text016,ServContractLine.FIELDCAPTION("Credit Memo Date"),ServContractLine."Credit Memo Date");
                               END;
                                }
      { 83      ;2   ;Action    ;
                      Name=CreateServiceInvoice;
                      CaptionML=[ENU=Create Service &Invoice;
                                 NOR=Opprett &servicefaktura;
                                 SVE=Skapa service&faktura];
                      ToolTipML=[ENU="Create a service invoice for a service contract that is due for invoicing. ";
                                 NOR="Opprett en servicefaktura for en servicekontrakt som forfaller til fakturering. ";
                                 SVE="Skapa en servicefaktura fîr ett servicekontrakt som Ñr klart fîr fakturering. "];
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      Image=NewInvoice;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ConfirmManagement@1000 : Codeunit 27;
                               BEGIN
                                 CurrPage.UPDATE;
                                 TESTFIELD(Status,Status::Signed);
                                 TESTFIELD("Change Status","Change Status"::Locked);

                                 IF "No. of Unposted Invoices" <> 0 THEN
                                   IF NOT ConfirmManagement.ConfirmProcess(Text003,TRUE) THEN
                                     EXIT;

                                 IF "Invoice Period" = "Invoice Period"::None THEN
                                   ERROR(
                                     Text004,
                                     TABLECAPTION,"Contract No.",FIELDCAPTION("Invoice Period"),FORMAT("Invoice Period"));

                                 IF "Next Invoice Date" > WORKDATE THEN
                                   IF ("Last Invoice Date" = 0D) AND
                                      ("Starting Date" < "Next Invoice Period Start")
                                   THEN BEGIN
                                     CLEAR(ServContractMgt);
                                     ServContractMgt.InitCodeUnit;
                                     IF ServContractMgt.CreateRemainingPeriodInvoice(Rec) <> '' THEN
                                       MESSAGE(Text006);
                                     ServContractMgt.FinishCodeunit;
                                     EXIT;
                                   END ELSE
                                     ERROR(Text005);

                                 ServContractMgt.CopyCheckSCDimToTempSCDim(Rec);

                                 IF ConfirmManagement.ConfirmProcess(Text007,TRUE) THEN BEGIN
                                   CLEAR(ServContractMgt);
                                   ServContractMgt.InitCodeUnit;
                                   ServContractMgt.CreateInvoice(Rec);
                                   ServContractMgt.FinishCodeunit;
                                   MESSAGE(Text008);
                                 END;
                               END;
                                }
      { 11      ;1   ;ActionGroup;
                      CaptionML=[ENU=Lock;
                                 NOR=LÜs;
                                 SVE=LÜs] }
      { 73      ;2   ;Action    ;
                      Name=LockContract;
                      CaptionML=[ENU=&Lock Contract;
                                 NOR=&LÜs kontrakt;
                                 SVE=&LÜs kontrakt];
                      ToolTipML=[ENU=Make sure that the changes will be part of the contract.;
                                 NOR=Sõrg for at endringene blir en del av kontrakten.;
                                 SVE=Kontrollera att Ñndringarna infîrs i kontraktet.];
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      Image=Lock;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 LockOpenServContract@1001 : Codeunit 5943;
                               BEGIN
                                 CurrPage.UPDATE;
                                 LockOpenServContract.LockServContract(Rec);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 74      ;2   ;Action    ;
                      Name=OpenContract;
                      CaptionML=[ENU=&Open Contract;
                                 NOR=è&pne kontrakt;
                                 SVE=&ôppna kontrakt];
                      ToolTipML=[ENU=Open the service contract.;
                                 NOR=èpne servicekontrakten.;
                                 SVE=ôppna servicekontraktet.];
                      ApplicationArea=#Service;
                      Image=ReOpen;
                      OnAction=VAR
                                 LockOpenServContract@1001 : Codeunit 5943;
                               BEGIN
                                 CurrPage.UPDATE;
                                 LockOpenServContract.OpenServContract(Rec);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 137     ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 NOR=F&unksjoner;
                                 SVE=Fu&nktion];
                      Image=Action }
      { 75      ;2   ;Action    ;
                      Name=SelectContractLines;
                      CaptionML=[ENU=&Select Contract Lines;
                                 NOR=&Velg kontraktlinjer;
                                 SVE=&VÑlj kontraktsrader];
                      ToolTipML=[ENU="Open the list of all the service items that are registered to the customer and select which to include in the contract. ";
                                 NOR="èpne listen over alle servicevarene som er registrert for kunden, og velg hvilken vare som skal inkluderes i kontrakten. ";
                                 SVE="ôppna listan med alla serviceartiklar som registrerats fîr kunden och vÑlj vilka som ska ingÜ i kontraktet. "];
                      ApplicationArea=#Service;
                      Image=CalculateLines;
                      OnAction=BEGIN
                                 CheckRequiredFields;
                                 GetServItemLine;
                               END;
                                }
      { 77      ;2   ;Action    ;
                      CaptionML=[ENU=&Remove Contract Lines;
                                 NOR=&Fjern kontraktlinjer;
                                 SVE=&Ta bort kontraktsrad];
                      ToolTipML=[ENU=Remove the selected contract lines from the service contract, for example because you remove the corresponding service items as they are expired or broken.;
                                 NOR=Fjern de valgte kontraktlinjene fra servicekontrakten, for eksempel fordi du fjerner de tilsvarende servicevarene nÜr de er utlõpt eller knust.;
                                 SVE=Ta bort de valda kontraktsraderna frÜn servicekontraktet, till exempel eftersom du tar bort motsvarande serviceartiklar som de har upphîrt att gÑlla eller Ñr trasiga.];
                      ApplicationArea=#Service;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 ServContractLine.RESET;
                                 ServContractLine.SETRANGE("Contract Type","Contract Type");
                                 ServContractLine.SETRANGE("Contract No.","Contract No.");
                                 REPORT.RUNMODAL(REPORT::"Remove Lines from Contract",TRUE,TRUE,ServContractLine);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 76      ;2   ;Action    ;
                      Name=SignContract;
                      CaptionML=[ENU=Si&gn Contract;
                                 NOR=Si&gner kontrakt;
                                 SVE=Si&gnera kontrakt];
                      ToolTipML=[ENU=Confirm the contract.;
                                 NOR=Bekreft kontrakten.;
                                 SVE=BekrÑfta kontraktet.];
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      Image=Signature;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SignServContractDoc@1001 : Codeunit 5944;
                               BEGIN
                                 CurrPage.UPDATE;
                                 SignServContractDoc.SignContract(Rec);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 103     ;2   ;Action    ;
                      CaptionML=[ENU=C&hange Customer;
                                 NOR=Skift &kunde;
                                 SVE=&éndra kund];
                      ToolTipML=[ENU=Change the customer in a service contract. If a service item that is subject to a service contract is registered in other contracts owned by the customer, the owner is automatically changed for all service item-related contracts and all contract-related service items.;
                                 NOR=Endre kunden i en servicekontrakt. Hvis en servicevare som er med i en servicekontrakt, er registrert i andre kontrakter som eies av kunden, endres eieren for alle servicevarerelaterte kontrakter og alle kontraktrelaterte servicevarer automatisk.;
                                 SVE=Byt kund i ett servicekontrakt. Om en serviceartikel som ingÜr i ett servicekontrakt registreras i andra kontrakt som Ñgs av kunden, Ñndras automatiskt Ñgaren till alla serviceartikelrelaterade kontrakt och alla kontraktrelaterade serviceartiklar.];
                      ApplicationArea=#Service;
                      Image=ChangeCustomer;
                      OnAction=BEGIN
                                 CLEAR(ChangeCustomerinContract);
                                 ChangeCustomerinContract.SetRecord("Contract No.");
                                 ChangeCustomerinContract.RUNMODAL;
                               END;
                                }
      { 20      ;2   ;Action    ;
                      CaptionML=[ENU=Copy &Document...;
                                 NOR=Kopier &dokument...;
                                 SVE=Kopiera &dokument...];
                      ToolTipML=[ENU=Copy document lines and header information from another service contractor to this contract to quickly create a similar document.;
                                 NOR=Kopier dokumentlinjer og hodeopplysninger fra en annen servicekontrakt til denne kontrakten for Ü raskt opprette et lignende dokument.;
                                 SVE=Kopiera dokumentrader och huvudinformation frÜn ett annat servicekontrakt eller det hÑr kontraktet fîr att snabbt skapa ett liknande dokument.];
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      Image=CopyDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CheckRequiredFields;
                                 CLEAR(CopyServDoc);
                                 CopyServDoc.SetServContractHeader(Rec);
                                 CopyServDoc.RUNMODAL;
                               END;
                                }
      { 150     ;2   ;Action    ;
                      CaptionML=[ENU=&File Contract;
                                 NOR=&Arkiver kontrakt;
                                 SVE=&Arkivera kontrakt];
                      ToolTipML=[ENU=Record and archive a copy of the contract. Service contracts are automatically filed when you convert contract quotes to service contracts or cancel service contracts.;
                                 NOR=Registrer og arkiver en kopi av kontrakten. Servicekontrakter blir automatisk arkivert nÜr du konverterer kontraktstilbud til servicekontrakter eller avbryter servicekontrakter.;
                                 SVE=Registrera och arkivera en kopia av kontraktet. Servicekontrakt arkiveras automatiskt nÑr du omvandlar kontraktsofferter till servicekontrakt eller makulerar servicekontrakt.];
                      ApplicationArea=#Service;
                      Image=Agreement;
                      OnAction=VAR
                                 ConfirmManagement@1000 : Codeunit 27;
                               BEGIN
                                 IF ConfirmManagement.ConfirmProcess(Text014,TRUE) THEN
                                   FiledServContract.FileContract(Rec);
                               END;
                                }
      { 1900000006;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1903183006;1 ;Action    ;
                      CaptionML=[ENU=Contract Details;
                                 NOR=Kontraktsdetaljer;
                                 SVE=Kontraktsdetaljer];
                      ToolTipML=[ENU=Specifies billable prices for the job task that are related to items.;
                                 NOR=Angir fakturerbare priser for prosjektoppgaven som er relatert til varer.;
                                 SVE=Anger fakturerbara priser fîr projektaktiviteten som berîr artiklar.];
                      ApplicationArea=#Service;
                      RunObject=Report 5971;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
      { 1906367306;1 ;Action    ;
                      CaptionML=[ENU=Contract Gain/Loss Entries;
                                 NOR=Kontraktresultatposter;
                                 SVE=Kontraktsvinst/fîrlusttrans.];
                      ToolTipML=[ENU=Specifies billable prices for the job task that are related to G/L accounts, expressed in the local currency.;
                                 NOR=Angir fakturerbare priser for prosjektoppgaven som er relatert finanskonti, uttrykt i den lokale valutaen.;
                                 SVE=Anger fakturerbara priser fîr projektaktiviteten som berîr redovisningskonton, i den lokala valutan.];
                      ApplicationArea=#Service;
                      RunObject=Report 5983;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
      { 1906957906;1 ;Action    ;
                      CaptionML=[ENU=Contract Invoicing;
                                 NOR=Kontraktfakturering;
                                 SVE=Kontraktsfakturering];
                      ToolTipML=[ENU=Specifies all billable profits for the job task.;
                                 NOR=Angir alle fakturerbare fortjenester for prosjektoppgaven.;
                                 SVE=Anger alla fakturerbara vinster fîr projektaktiviteten.];
                      ApplicationArea=#Service;
                      RunObject=Report 5984;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
      { 1902585006;1 ;Action    ;
                      CaptionML=[ENU=Contract Price Update - Test;
                                 NOR=Kontraktprisoppdatering - kontroll;
                                 SVE=Kontraktsprisuppd. - test];
                      ToolTipML=[ENU=View the contracts numbers, customer numbers, contract amounts, price update percentages, and any errors that occur. You can test which service contracts need price updates up to the date that you have specified.;
                                 NOR=Vis kontraktnumrene, kundenumrene, kontraktbelõpene, prisoppdateringsprosentene og eventuelle feil som oppstÜr. Du kan teste hvilke servicekontrakter som trenger prisoppdateringer frem til angitt dato.;
                                 SVE=Visa kontraktsnummer, kundnummer, kontraktsbelopp, procentuella prisÑndringar och eventuella fel som intrÑffar. Du kan du testa vilka servicekontrakt som priset behîver uppdateras pÜ fram till angivet datum.];
                      ApplicationArea=#Service;
                      RunObject=Report 5985;
                      Promoted=No;
                      Image=Report;
                      PromotedCategory=Report }
      { 1906186206;1 ;Action    ;
                      CaptionML=[ENU=Prepaid Contract;
                                 NOR=ForhÜndsbetalt kontrakt;
                                 SVE=Fîrutbetalt kontrakt];
                      ToolTipML=[ENU=View the prepaid service contract.;
                                 NOR=Vis den forhÜndsbetalte servicekontrakten.;
                                 SVE=Visa det fîrutbetalda servicekontraktet.];
                      ApplicationArea=#Prepayments;
                      RunObject=Report 5986;
                      Promoted=No;
                      Image=Report;
                      PromotedCategory=Report }
      { 1905491506;1 ;Action    ;
                      CaptionML=[ENU=Expired Contract Lines;
                                 NOR=Utlõpte kontraktslinjer;
                                 SVE=UtgÜngna kontraktsrader];
                      ToolTipML=[ENU=View the service contract, the service items to be removed, the contract expiration dates, and the line amounts.;
                                 NOR=Vis servicekontrakten, servicevarene som skal fjernes, kontraktens utlõpsdatoer og linjebelõpene.;
                                 SVE=Visa servicekontrakt, serviceartiklar som ska tas bort, kontraktets utgÜngsdatum och radbeloppen.];
                      ApplicationArea=#Service;
                      RunObject=Report 5987;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=AllmÑnt] }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the service contract or service contract quote.;
                           NOR=Angir nummeret pÜ servicekontrakten eller servicekontrakttilbudet.;
                           SVE=Anger numret pÜ servicekontraktet eller servicekontraktsofferten.];
                ApplicationArea=#Service;
                SourceExpr="Contract No.";
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 48  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of the service contract.;
                           NOR=Angir en beskrivelse av servicekontrakten.;
                           SVE=Anger en beskrivning av servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr=Description }

    { 91  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the customer who owns the service items in the service contract/contract quote.;
                           NOR=Angir nummeret pÜ kunden som eier servicevarene i servicekontrakten/kontrakttilbudet.;
                           SVE=Anger numret pÜ kunden som Ñger serviceartiklarna i servicekontraktet eller servicekontraktsofferten.];
                ApplicationArea=#Service;
                SourceExpr="Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             CustomerNoOnAfterValidate;
                           END;
                            }

    { 80  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the contact who will receive the service delivery.;
                           NOR=Angir nummeret pÜ kontakten som skal motta serviceleveringen.;
                           SVE=Anger numret pÜ kontakten som ska ta emot serviceleveransen.];
                ApplicationArea=#Service;
                SourceExpr="Contact No." }

    { 13  ;2   ;Group     ;
                GroupType=Group }

    { 42  ;3   ;Field     ;
                DrillDown=No;
                ToolTipML=[ENU=Specifies the name of the customer in the service contract.;
                           NOR=Angir navnet pÜ kunden i servicekontrakten.;
                           SVE=Anger namnet pÜ kunden i servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr=Name }

    { 32  ;3   ;Field     ;
                DrillDown=No;
                ToolTipML=[ENU=Specifies the customer's address.;
                           NOR=Angir kundens adresse.;
                           SVE=Anger kundens adress.];
                ApplicationArea=#Service;
                SourceExpr=Address;
                QuickEntry=FALSE }

    { 120 ;3   ;Field     ;
                DrillDown=No;
                ToolTipML=[ENU=Specifies additional address information.;
                           NOR=Angir ekstra adresseinformasjon.;
                           SVE=Anger ytterligare adressuppgifter.];
                ApplicationArea=#Service;
                SourceExpr="Address 2";
                QuickEntry=FALSE }

    { 126 ;3   ;Field     ;
                DrillDown=No;
                ToolTipML=[ENU=Specifies the name of the city in where the customer is located.;
                           NOR=Angir navnet pÜ poststedet der kunden er plassert.;
                           SVE=Anger namnet pÜ orten dÑr kunden befinner sig.];
                ApplicationArea=#Service;
                SourceExpr=City;
                QuickEntry=FALSE }

    { 24  ;3   ;Group     ;
                Visible=IsSellToCountyVisible;
                GroupType=Group }

    { 17  ;4   ;Field     ;
                ApplicationArea=#Service;
                SourceExpr=County;
                QuickEntry=FALSE }

    { 15  ;3   ;Field     ;
                DrillDown=No;
                ToolTipML=[ENU=Specifies the postal code.;
                           NOR=Angir postnummeret.;
                           SVE=Anger postnumret.];
                ApplicationArea=#Service;
                SourceExpr="Post Code";
                QuickEntry=FALSE }

    { 19  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the country/region of the address.;
                           NOR=Angir landet/omrÜdet i adressen.;
                           SVE=Anger adressens land/region.];
                ApplicationArea=#Service;
                SourceExpr="Country/Region Code";
                OnValidate=BEGIN
                             IsSellToCountyVisible := FormatAddress.UseCounty("Country/Region Code");
                           END;

                QuickEntry=FALSE }

    { 114 ;3   ;Field     ;
                DrillDown=No;
                ToolTipML=[ENU=Specifies the name of the person you regularly contact when you do business with the customer in this service contract.;
                           NOR=Angir navnet pÜ personen du kontakter regelmessig nÜr du gjõr forretninger med kunden i denne servicekontrakten.;
                           SVE=Anger namnet pÜ den person som du brukar kontakta nÑr du gîr affÑrer med kunden i det hÑr servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr="Contact Name" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer phone number.;
                           NOR=Angir kundens telefonnummer.;
                           SVE=Anger kundens telefonnummer.];
                ApplicationArea=#Service;
                SourceExpr="Phone No." }

    { 67  ;2   ;Field     ;
                ExtendedDatatype=E-Mail;
                ToolTipML=[ENU=Specifies the customer's email address.;
                           NOR=Angir kundens e-postadresse.;
                           SVE=Anger kundens e-postadress.];
                ApplicationArea=#Service;
                SourceExpr="E-Mail" }

    { 158 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the contract group code assigned to the service contract.;
                           NOR=Angir kontraktgruppekoden som er tilordnet servicekontrakten.;
                           SVE=Anger kontraktgruppskoden som servicekontraktet tilldelats.];
                ApplicationArea=#Service;
                SourceExpr="Contract Group Code" }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the salesperson assigned to this service contract.;
                           NOR=Angir koden til selgeren som er tilordnet denne servicekontrakten.;
                           SVE=Anger koden fîr sÑljaren som har blivit tilldelad servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr="Salesperson Code" }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the starting date of the service contract.;
                           NOR=Angir startdatoen for servicekontrakten.;
                           SVE=Anger startdatumet fîr servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr="Starting Date";
                Importance=Promoted;
                OnValidate=BEGIN
                             StartingDateOnAfterValidate;
                           END;
                            }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of the service contract or contract quote.;
                           NOR=Angir statusen for servicekontrakten eller kontrakttilbudet.;
                           SVE=Anger status fîr servicekontraktet eller servicekontraktsofferten.];
                ApplicationArea=#Service;
                SourceExpr=Status;
                Importance=Promoted;
                OnValidate=BEGIN
                             ActivateFields;
                             StatusOnAfterValidate;
                           END;
                            }

    { 23  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the responsibility center, such as a distribution hub, that is associated with the involved user, company, customer, or vendor.;
                           NOR=Angir koden til ansvarssenteret, for eksempel en distribusjonshub, som er knyttet til den involverte brukeren, selskapet, kunden eller leverandõren.;
                           SVE=Anger koden fîr ansvarsenheten, till exempel ett distributionsnav, som associeras med anvÑndaren, fîretaget, kunden eller leverantîren i frÜga.];
                ApplicationArea=#Service;
                SourceExpr="Responsibility Center" }

    { 63  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if a service contract or contract quote is locked or open for changes.;
                           NOR=Angir om en servicekontrakt eller et kontrakttilbud er lÜst eller Üpen for endringer.;
                           SVE=Anger om ett servicekontrakt eller en kontraktsoffert har lÜsts eller kan Ñndras.];
                ApplicationArea=#Service;
                SourceExpr="Change Status" }

    { 93  ;1   ;Part      ;
                Name=ServContractLines;
                ApplicationArea=#Service;
                SubPageLink=Contract No.=FIELD(Contract No.);
                PagePartID=Page6052;
                PartType=Page }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoicing;
                           NOR=Fakturering;
                           SVE=Fakturering] }

    { 138 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the customer that you send or sent the invoice or credit memo to.;
                           NOR=Angir nummeret for kunden du sender eller har sendt fakturaen eller kreditnotaen til.;
                           SVE=Anger numret pÜ kunden som du skickade eller skickar fakturan eller kreditnotan till.];
                ApplicationArea=#Service;
                SourceExpr="Bill-to Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             BilltoCustomerNoOnAfterValidat;
                           END;
                            }

    { 140 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the contact person at the customer's billing address.;
                           NOR=Angir nummeret for kontaktpersonen i kundens fakturaadresse.;
                           SVE=Anger numret pÜ kontaktpersonen pÜ kundens faktureringsadress.];
                ApplicationArea=#Service;
                SourceExpr="Bill-to Contact No." }

    { 27  ;2   ;Group     ;
                GroupType=Group }

    { 122 ;3   ;Field     ;
                DrillDown=No;
                CaptionML=[ENU=Name;
                           NOR=Navn;
                           SVE=Namn];
                ToolTipML=[ENU=Specifies the name of the customer that you send or sent the invoice or credit memo to.;
                           NOR=Angir navnet pÜ kunden du sender eller har sendt fakturaen eller kreditnotaen til.;
                           SVE=Anger namnet pÜ kunden som du skickade eller skickar fakturan eller kreditnotan till.];
                ApplicationArea=#Service;
                SourceExpr="Bill-to Name" }

    { 123 ;3   ;Field     ;
                DrillDown=No;
                CaptionML=[ENU=Address;
                           NOR=Adresse;
                           SVE=Adress];
                ToolTipML=[ENU=Specifies the address of the customer to whom you sent the invoice.;
                           NOR=Angir adressen for kunden du sendte fakturaen til.;
                           SVE=Anger adressen till kunden som du skickade fakturan till.];
                ApplicationArea=#Service;
                SourceExpr="Bill-to Address";
                QuickEntry=FALSE }

    { 130 ;3   ;Field     ;
                DrillDown=No;
                CaptionML=[ENU=Address 2;
                           NOR=Adresse 2;
                           SVE=Adress 2];
                ToolTipML=[ENU=Specifies an additional line of the address.;
                           NOR=Angir en ekstra linje i adressen.;
                           SVE=Anger ytterligare en adressrad.];
                ApplicationArea=#Service;
                SourceExpr="Bill-to Address 2";
                QuickEntry=FALSE }

    { 131 ;3   ;Field     ;
                DrillDown=No;
                CaptionML=[ENU=City;
                           NOR=Sted;
                           SVE=Ort];
                ToolTipML=[ENU=Specifies the city of the address.;
                           NOR=Angir poststedet for adressen.;
                           SVE=Anger orten i adressen.];
                ApplicationArea=#Service;
                SourceExpr="Bill-to City";
                QuickEntry=FALSE }

    { 33  ;3   ;Group     ;
                Visible=IsBillToCountyVisible;
                GroupType=Group }

    { 31  ;4   ;Field     ;
                CaptionML=[ENU=County;
                           NOR=Fylke/delstat;
                           SVE=LÑn];
                ApplicationArea=#Service;
                SourceExpr="Bill-to County";
                QuickEntry=FALSE }

    { 39  ;3   ;Field     ;
                DrillDown=No;
                CaptionML=[ENU=Post Code;
                           NOR=Postnummer;
                           SVE=Postnummer];
                ToolTipML=[ENU=Specifies the postal code of the customer's billing address.;
                           NOR=Angir postnummeret til kundens fakturaadresse.;
                           SVE=Anger postnumret i kundens faktureringsadress.];
                ApplicationArea=#Service;
                SourceExpr="Bill-to Post Code";
                QuickEntry=FALSE }

    { 28  ;3   ;Field     ;
                CaptionML=[ENU=Country/Region;
                           NOR=Land/omrÜde;
                           SVE=Land/region];
                ApplicationArea=#Service;
                SourceExpr="Bill-to Country/Region Code";
                OnValidate=BEGIN
                             IsBillToCountyVisible := FormatAddress.UseCounty("Bill-to Country/Region Code");
                           END;

                QuickEntry=FALSE }

    { 133 ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           NOR=Kontakt;
                           SVE=Kontakt];
                ToolTipML=[ENU=Specifies the name of the contact person at the customer's billing address.;
                           NOR=Angir navnet pÜ kontaktpersonen i kundens fakturaadresse.;
                           SVE=Anger namnet pÜ kontaktpersonen pÜ kundens faktureringsadress.];
                ApplicationArea=#Service;
                SourceExpr="Bill-to Contact" }

    { 132 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's reference number.;
                           NOR=Angir kundens referansenummer.;
                           SVE=Anger kundens referensnummer.];
                ApplicationArea=#Service;
                SourceExpr="Your Reference" }

    { 118 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code associated with the service contract account group.;
                           NOR=Angir koden som er knyttet til kontogruppen for servicekontrakt.;
                           SVE=Anger koden som Ñr kopplad till kontomallen fîr servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr="Serv. Contract Acc. Gr. Code" }

    { 85  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                           NOR=Angir koden til Snarveisdimensjon 1, som er Çn av to globale dimensjonskoder som du har definert i vinduet Finansoppsett.;
                           SVE=Anger koden fîr GenvÑg dimension 1, som Ñr en av tvÜ globala dimensionskoder som du stÑller in i fînstret RedovisningsinstÑllningar.];
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code" }

    { 84  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                           NOR=Angir koden til Snarveisdimensjon 2, som er Çn av to globale dimensjonskoder som du har definert i vinduet Finansoppsett.;
                           SVE=Anger koden fîr GenvÑg dimension 2, som Ñr en av tvÜ globala dimensionskoder som du stÑller in i fînstret RedovisningsinstÑllningar.];
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code" }

    { 52  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount.;
                           NOR=Angir en formel som beregner forfallsdatoen for betalingen, kontantrabattdatoen og kontantrabattbelõpet.;
                           SVE=Anger en formel som berÑknar betalningsfîrfallodatumet, kassarabattsdatumet och kassarabattens belopp.];
                ApplicationArea=#Service;
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 53  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency used to calculate the amounts in the documents related to this contract.;
                           NOR=Angir valutaen som brukes til Ü beregne belõpene i dokumentene som er relatert til denne kontrakten.;
                           SVE=Anger valutakoden som anvÑnds fîr att berÑkna belopp i dokument som berîr det hÑr kontraktet.];
                ApplicationArea=#Service;
                SourceExpr="Currency Code";
                Importance=Promoted }

    { 1906801201;1;Group  ;
                CaptionML=[ENU=Shipping;
                           NOR=Levering;
                           SVE=Leverans] }

    { 44  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code for an alternate shipment address if you want to ship to another address than the one that has been entered automatically. This field is also used in case of drop shipment.;
                           NOR=Angir en kode for en alternativ leveringsadresse hvis du vil levere til en annen adresse enn den som er angitt automatisk. Dette feltet brukes ogsÜ ved direkte levering.;
                           SVE=Anger en kod fîr en alternativ leveransadress om du vill leverera till en annan adress Ñn den som har angetts automatiskt. Det hÑr fÑltet anvÑnds ocksÜ vid direktutleverans.];
                ApplicationArea=#Service;
                SourceExpr="Ship-to Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             ShiptoCodeOnAfterValidate;
                           END;
                            }

    { 34  ;2   ;Group     ;
                CaptionML=[ENU=Ship-to;
                           NOR=Lever til;
                           SVE=Leverans];
                GroupType=Group }

    { 162 ;3   ;Field     ;
                DrillDown=No;
                CaptionML=[ENU=Name;
                           NOR=Navn;
                           SVE=Namn];
                ToolTipML=[ENU=Specifies the name of the customer at the address that the items are shipped to.;
                           NOR=Angir navnet pÜ kunden pÜ adressen som varene blir levert til.;
                           SVE=Anger namnet pÜ kunden pÜ adressen som artiklarna levereras till.];
                ApplicationArea=#Service;
                SourceExpr="Ship-to Name" }

    { 164 ;3   ;Field     ;
                DrillDown=No;
                CaptionML=[ENU=Address;
                           NOR=Adresse;
                           SVE=Adress];
                ToolTipML=[ENU=Specifies the address that the items are shipped to.;
                           NOR=Angir adressen som varene leveres til.;
                           SVE=Anger adressen som artiklarna levereras till.];
                ApplicationArea=#Service;
                SourceExpr="Ship-to Address";
                QuickEntry=FALSE }

    { 166 ;3   ;Field     ;
                DrillDown=No;
                CaptionML=[ENU=Address 2;
                           NOR=Adresse 2;
                           SVE=Adress 2];
                ToolTipML=[ENU=Specifies an additional part of the ship-to address, in case it is a long address.;
                           NOR=Angir en tilleggsdel for lever til-adresse i tilfelle det er en lang adresse.;
                           SVE=Anger ytterligare en del av leveransadressen, om detta Ñr en lÜng adress.];
                ApplicationArea=#Service;
                SourceExpr="Ship-to Address 2";
                QuickEntry=FALSE }

    { 127 ;3   ;Field     ;
                DrillDown=No;
                CaptionML=[ENU=City;
                           NOR=Sted;
                           SVE=Ort];
                ToolTipML=[ENU=Specifies the city of the address that the items are shipped to.;
                           NOR=Angir poststedet for adressen som varene leveres til.;
                           SVE=Anger orten i adressen som artiklarna levereras till.];
                ApplicationArea=#Service;
                SourceExpr="Ship-to City";
                QuickEntry=FALSE }

    { 38  ;3   ;Group     ;
                Visible=IsShipToCountyVisible;
                GroupType=Group }

    { 35  ;4   ;Field     ;
                CaptionML=[ENU=County;
                           NOR=Fylke/delstat;
                           SVE=LÑn];
                ApplicationArea=#Service;
                SourceExpr="Ship-to County";
                QuickEntry=FALSE }

    { 37  ;3   ;Field     ;
                DrillDown=No;
                CaptionML=[ENU=Post Code;
                           NOR=Postnummer;
                           SVE=Postnummer];
                ToolTipML=[ENU=Specifies the postal code of the address that the items are shipped to.;
                           NOR=Angir postnummeret i adressen som varene sendes til.;
                           SVE=Anger postnumret i adressen som artiklarna levereras till.];
                ApplicationArea=#Service;
                SourceExpr="Ship-to Post Code";
                Importance=Promoted;
                QuickEntry=FALSE }

    { 36  ;3   ;Field     ;
                CaptionML=[ENU=Country/Region;
                           NOR=Land/omrÜde;
                           SVE=Land/region];
                ApplicationArea=#Service;
                SourceExpr="Ship-to Country/Region Code";
                QuickEntry=FALSE }

    { 1902138501;1;Group  ;
                CaptionML=[ENU=Service;
                           NOR=Service;
                           SVE=Service] }

    { 188 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the service zone of the customer ship-to address.;
                           NOR=Angir koden til servicesonen for kundens lever til-adresse.;
                           SVE=Anger koden fîr servicezonen fîr kundens leveransadress.];
                ApplicationArea=#Service;
                SourceExpr="Service Zone Code";
                Importance=Promoted }

    { 186 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a default service period for the items in the contract.;
                           NOR=Angir en standard serviceperiode for varene i kontrakten.;
                           SVE=Anger en standardserviceperiod fîr artiklarna i kontraktet.];
                ApplicationArea=#Service;
                SourceExpr="Service Period";
                OnValidate=BEGIN
                             ServicePeriodOnAfterValidate;
                           END;
                            }

    { 183 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date of the first expected service for the service items in the contract.;
                           NOR=Angir datoen for den fõrste forventede tjenesten for servicevarene i kontrakten.;
                           SVE=Anger datumet dÜ den fîrsta fîrvÑntade servicen av serviceartiklarna i kontraktet ska utfîras.];
                ApplicationArea=#Service;
                SourceExpr="First Service Date";
                Importance=Promoted;
                Editable=FirstServiceDateEditable;
                OnValidate=BEGIN
                             FirstServiceDateOnAfterValidat;
                           END;
                            }

    { 181 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the response time for the service contract.;
                           NOR=Angir svartiden for servicekontrakten.;
                           SVE=Anger svarstiden fîr servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr="Response Time (Hours)";
                OnValidate=BEGIN
                             ResponseTimeHoursOnAfterValida;
                           END;
                            }

    { 180 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the service order type assigned to service orders linked to this contract.;
                           NOR=Angir serviceordretypen som er tilordnet serviceordrene som er koblet til denne kontrakten.;
                           SVE=Anger serviceordertypen som har tilldelats de serviceorder som Ñr kopplade till det hÑr kontraktet.];
                ApplicationArea=#Service;
                SourceExpr="Service Order Type" }

    { 1905361901;1;Group  ;
                CaptionML=[ENU=Invoice Details;
                           NOR=Fakturadetaljer;
                           SVE=Fakturadetaljer] }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount that will be invoiced annually for the service contract or contract quote.;
                           NOR=Angir belõpet som vil bli fakturert Ürlig for servicekontrakten eller kontrakttilbudet.;
                           SVE=Anger beloppet som ska faktureras per Ür fîr servicekontraktet eller kontraktsofferten.];
                ApplicationArea=#Service;
                SourceExpr="Annual Amount";
                OnValidate=BEGIN
                             AnnualAmountOnAfterValidate;
                           END;
                            }

    { 153 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the contents of the Calcd. Annual Amount field are copied into the Annual Amount field in the service contract or contract quote.;
                           NOR=Angir om innholdet i feltet Beregnet Ürlig belõp skal kopieres til feltet èrlig belõp i servicekontrakten eller kontrakttilbudet.;
                           SVE=Anger om innehÜllet i fÑltet BerÑknat Ürligt belopp kopieras till fÑltet èrligt belopp i servicekontraktet eller kontraktsofferten.];
                ApplicationArea=#Service;
                SourceExpr="Allow Unbalanced Amounts";
                OnValidate=BEGIN
                             AllowUnbalancedAmountsOnAfterV;
                           END;
                            }

    { 25  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the sum of the Line Amount field values on all contract lines associated with the service contract or contract quote.;
                           NOR=Angir summen av verdiene i feltet Linjebelõp pÜ alle kontraktlinjene knyttet til servicekontrakten eller kontrakttilbudet.;
                           SVE=Anger summan av vÑrdena i fÑltet Radbelopp pÜ alla kontraktsrader som Ñr kopplade till servicekontraktet eller kontraktsofferten.];
                ApplicationArea=#Service;
                SourceExpr="Calcd. Annual Amount" }

    { 107 ;2   ;Field     ;
                Name=InvoicePeriod;
                ToolTipML=[ENU=Specifies the invoice period for the service contract.;
                           NOR=Angir fakturaperioden for servicekontrakten.;
                           SVE=Anger fakturaperioden fîr servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr="Invoice Period";
                Importance=Promoted }

    { 16  ;2   ;Field     ;
                Name=NextInvoiceDate;
                ToolTipML=[ENU=Specifies the date of the next invoice for this service contract.;
                           NOR=Angir datoen for neste faktura for denne servicekontrakten.;
                           SVE=Anger datumet fîr nÑsta faktura fîr det hÑr servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr="Next Invoice Date";
                Importance=Promoted }

    { 12  ;2   ;Field     ;
                Name=AmountPerPeriod;
                ToolTipML=[ENU=Specifies the amount that will be invoiced for each invoice period for the service contract.;
                           NOR=Angir belõpet som vil bli fakturert for hver fakturaperiode for servicekontrakten.;
                           SVE=Anger det belopp som ska faktureras varje fakturaperiod fîr servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr="Amount per Period" }

    { 18  ;2   ;Field     ;
                Name=NextInvoicePeriod;
                CaptionML=[ENU=Next Invoice Period;
                           NOR=Neste fakturaperiode;
                           SVE=NÑsta fakturaperiod];
                ToolTipML=[ENU=Specifies the ending date of the next invoice period for the service contract.;
                           NOR=Angir sluttdatoen for neste fakturaperiode for servicekontrakten.;
                           SVE=Anger slutdatumet fîr nÑsta fakturaperiod fîr servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr=NextInvoicePeriod }

    { 134 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when this service contract was last invoiced.;
                           NOR=Angir datoen da servicekontrakten sist ble fakturert.;
                           SVE=Anger datumet dÜ det hÑr servicekontraktet senast fakturerades.];
                ApplicationArea=#Service;
                SourceExpr="Last Invoice Date" }

    { 54  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that this service contract is prepaid.;
                           NOR=Angir at servicekontrakten er forhÜndsbetalt.;
                           SVE=Anger att servicekontraktet Ñr fîrutbetalt.];
                ApplicationArea=#Service;
                SourceExpr=Prepaid;
                Enabled=PrepaidEnable;
                OnValidate=BEGIN
                             PrepaidOnAfterValidate;
                           END;
                            }

    { 79  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that a credit memo is created when you remove a contract line.;
                           NOR=Angir at det opprettes en kreditnota nÜr du fjerner en kontraktlinje.;
                           SVE=Anger att en kreditnota skapas nÑr du tar bort en kontraktsrad.];
                ApplicationArea=#Service;
                SourceExpr="Automatic Credit Memos" }

    { 173 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that you can only invoice the contract if you have posted a service order since last time you invoiced the contract.;
                           NOR=Angir at du bare kan fakturere kontrakten hvis du har bokfõrt en serviceordre siden sist gang du fakturerte kontrakten.;
                           SVE=Anger att du endast kan fakturera kontraktet om du har bokfîrt en serviceorder sedan fîrra gÜngen du fakturerade kontraktet.];
                ApplicationArea=#Service;
                SourceExpr="Invoice after Service";
                Enabled=InvoiceAfterServiceEnable;
                OnValidate=BEGIN
                             InvoiceafterServiceOnAfterVali;
                           END;
                            }

    { 105 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies you want to combine invoices for this service contract with invoices for other service contracts with the same bill-to customer.;
                           NOR=Angir at du vil kombinere fakturaer for denne servicekontrakten med fakturaer for andre servicekontrakter med den samme faktura til-kunden.;
                           SVE=Anger att du vill kombinera fakturor fîr det hÑr servicekontraktet med fakturor fîr andra servicekontrakt med samma faktureringskund.];
                ApplicationArea=#Service;
                SourceExpr="Combine Invoices" }

    { 151 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that you want the lines for this contract to appear as text on the invoice.;
                           NOR=Angir at du vil at linjene for denne kontrakten skal vises som tekst pÜ fakturaen.;
                           SVE=Anger att raderna fîr det hÑr kontraktet ska visas som text pÜ fakturan.];
                ApplicationArea=#Service;
                SourceExpr="Contract Lines on Invoice" }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of unposted service invoices linked to the service contract.;
                           NOR=Angir nummeret pÜ ikke-bokfõrte servicefakturaer som er koblet til servicekontrakten.;
                           SVE=Anger antalet ej bokfîrda servicefakturor som Ñr kopplade till servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr="No. of Unposted Invoices" }

    { 113 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of unposted credit memos linked to the service contract.;
                           NOR=Angir nummeret pÜ ikke-bokfõrte kreditnotaer som er koblet til servicekontrakten.;
                           SVE=Anger antalet ej bokfîrda kreditnotor som Ñr kopplade till servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr="No. of Unposted Credit Memos" }

    { 46  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of posted service invoices linked to the service contract.;
                           NOR=Angir nummeret pÜ bokfõrte servicefakturaer som er koblet til servicekontrakten.;
                           SVE=Anger antalet bokfîrda servicefakturor som Ñr kopplade till servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr="No. of Posted Invoices" }

    { 146 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of posted credit memos linked to this service contract.;
                           NOR=Angir nummeret pÜ bokfõrte kreditnotaer som er koblet til denne servicekontrakten.;
                           SVE=Anger antalet bokfîrda kreditnotor som Ñr kopplade till det hÑr servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr="No. of Posted Credit Memos" }

    { 1904390801;1;Group  ;
                CaptionML=[ENU=Price Update;
                           NOR=Prisoppdatering;
                           SVE=Prisuppdatering] }

    { 155 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the price update period for this service contract.;
                           NOR=Angir prisoppdateringsperioden for denne servicekontrakten.;
                           SVE=Anger prisuppdateringsperioden fîr det hÑr servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr="Price Update Period";
                Importance=Promoted }

    { 60  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the next date you want contract prices to be updated.;
                           NOR=Angir neste dato du vil at kontraktpriser skal oppdateres.;
                           SVE=Anger nÑsta datum dÜ du vill att kontraktspriserna ska uppdateras.];
                ApplicationArea=#Service;
                SourceExpr="Next Price Update Date";
                Importance=Promoted }

    { 58  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the price update percentage you used the last time you updated the contract prices.;
                           NOR=Angir prisoppdateringsprosenten du brukte sist gang du oppdaterte kontraktprisene.;
                           SVE=Anger den prisuppdatering i procent som du anvÑnde senaste gÜngen du uppdaterade kontraktspriserna.];
                ApplicationArea=#Service;
                SourceExpr="Last Price Update %" }

    { 57  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date you last updated the contract prices.;
                           NOR=Angir datoen du sist oppdaterte kontraktprisene.;
                           SVE=Anger datumet dÜ du senast uppdaterade kontraktspriserna.];
                ApplicationArea=#Service;
                SourceExpr="Last Price Update Date" }

    { 59  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the standard text code printed on service invoices, informing the customer which prices have been updated since the last invoice.;
                           NOR=Angir standard tekstkode skrevet ut pÜ servicefakturaer, for Ü informere kunden om hvilke priser som er oppdatert siden siste faktura.;
                           SVE=Anger standardtextkoden som skrivs ut pÜ servicefakturor och ger kunderna information om vilka priser som har uppdaterats sedan den fîrra fakturan.];
                ApplicationArea=#Service;
                SourceExpr="Print Increase Text" }

    { 56  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the standard text code printed on service invoices, informing the customer which prices have been updated since the last invoice.;
                           NOR=Angir standard tekstkode skrevet ut pÜ servicefakturaer, for Ü informere kunden om hvilke priser som er oppdatert siden siste faktura.;
                           SVE=Anger standardtextkoden som skrivs ut pÜ servicefakturor och ger kunderna information om vilka priser som har uppdaterats sedan den fîrra fakturan.];
                ApplicationArea=#Service;
                SourceExpr="Price Inv. Increase Code" }

    { 1901902601;1;Group  ;
                CaptionML=[ENU=Details;
                           NOR=Detaljer;
                           SVE=Detaljer] }

    { 40  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the service contract expires.;
                           NOR=Angir datoen servicekontrakten utlõper.;
                           SVE=Anger datumet dÜ servicekontraktet upphîrde att gÑlla.];
                ApplicationArea=#Service;
                SourceExpr="Expiration Date";
                OnValidate=BEGIN
                             ExpirationDateOnAfterValidate;
                           END;
                            }

    { 168 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a reason code for canceling the service contract.;
                           NOR=Angir en Ürsakskode for annullering av servicekontrakten.;
                           SVE=Anger en uppfîljningskod fîr makulering av servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr="Cancel Reason Code" }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the maximum unit price that can be set for a resource on all service orders and lines for the service contract.;
                           NOR=Angir den maksimale enhetsprisen som kan defineres for en ressurs pÜ alle serviceordrelinjer for servicekontrakten.;
                           SVE=Anger det hîgsta a-pris som kan anges fîr en resurs pÜ alla serviceorder och rader fîr det hÑr servicekontraktet.];
                ApplicationArea=#Service;
                SourceExpr="Max. Labor Unit Price" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1902018507;1;Part   ;
                ApplicationArea=#Service;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9082;
                Visible=TRUE;
                PartType=Page }

    { 1900316107;1;Part   ;
                ApplicationArea=#Service;
                SubPageLink=No.=FIELD(Customer No.);
                PagePartID=Page9084;
                Visible=TRUE;
                PartType=Page }

    { 1900383207;1;Part   ;
                ApplicationArea=#RecordLinks;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                ApplicationArea=#Notes;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1016 : TextConst '@@@=Contract No. must not be blank in Service Contract Header SC00004;ENU=%1 must not be blank in %2 %3;NOR=%1 kan ikke vëre tom i %2 %3;SVE=%1 fÜr inte vara blank i %2 %3';
      Text003@1003 : TextConst 'ENU=There are unposted invoices associated with this contract.\\Do you want to continue?;NOR=Det er knyttet ikke-bokfõrte fakturaer til denne kontrakten.\\Vil du fortsette?;SVE=Det finns kopplade fakturor till servicekontraktet som inte Ñr bokfîrda.\\Vill du fortsÑtta?';
      Text004@1004 : TextConst '@@@=You cannot create an invoice for Service Contract Header Contract No. because Invoice Period is Month.;ENU=You cannot create an invoice for %1 %2 because %3 is %4.;NOR=Du kan ikke opprette en faktura for %1 %2 fordi %3 er %4.;SVE=Du kan inte skapa en faktura fîr %1 %2 dÑrfîr att %3 Ñr %4.';
      Text005@1005 : TextConst 'ENU=The next invoice date has not expired.;NOR=Den neste fakturadatoen er ikke utgÜtt.;SVE=NÑsta fakturadatum har inte gÜtt ut.';
      Text006@1006 : TextConst 'ENU=An invoice was created successfully.;NOR=Det ble opprettet en faktura.;SVE=Det gick bra att skapa fakturan.';
      Text007@1007 : TextConst 'ENU=Do you want to create an invoice for the contract?;NOR=Vil du opprette et faktura for kontrakten?;SVE=Vill du skapa en faktura fîr kontraktet?';
      Text008@1008 : TextConst 'ENU=The invoice was created successfully.;NOR=Fakturaen ble opprettet.;SVE=Det gick bra att skapa fakturan.';
      Text009@1009 : TextConst 'ENU=There are unposted credit memos associated with this contract.\\Do you want to continue?;NOR=Det er knyttet ikke-bokfõrte kraditnotaer til denne kontrakten.\\Vil du fortsette?;SVE=Det finns kopplade kreditnotor till servicekontraktet som inte Ñr bokfîrda.\\Vill du fortsÑtta?';
      Text010@1010 : TextConst 'ENU=Do you want to create a credit note for the contract?;NOR=Vil du opprette en kreditnota for kontrakten?;SVE=Vill du skapa en kreditnota fîr kontraktet?';
      Text011@1011 : TextConst 'ENU=Processing...        \\;NOR=Behandler...        \\;SVE=Behandlar...        \\';
      Text012@1012 : TextConst 'ENU=Contract lines have been credited.\\Credit memo %1 was created.;NOR=Kontraktlinjene er krediterte.\\Kreditnota %1 ble opprettet.;SVE=Kontraktsrader har krediterats .\\Kreditnota %1 skapades.';
      Text013@1013 : TextConst 'ENU=A credit memo cannot be created. There must be at least one invoiced and expired service contract line which has not yet been credited.;NOR=Kan ikke opprette en kreditnota. Det mÜ finnes minst Çn fakturert og utlõpt servicekontraktlinje som ikke er kreditert ennÜ.;SVE=Det gÜr inte att skapa en kreditnota. Det mÜste finnas minst en fakturerad och fîrfallen servicekontraktsrad som inte har krediterats Ñnnu.';
      Text014@1014 : TextConst 'ENU=Do you want to file the contract?;NOR=Vil du arkivere kontrakten?;SVE=Vill du arkivera kontraktet?';
      ServContractLine@1015 : Record 5964;
      ServContractLine1@1001 : Record 5964;
      FiledServContract@1017 : Record 5970;
      ChangeCustomerinContract@1000 : Report 6037;
      CopyServDoc@1021 : Report 5979;
      ServContractMgt@1018 : Codeunit 5940;
      UserMgt@1019 : Codeunit 5700;
      Text015@1022 : TextConst '@@@=Status must not be Locked in Service Contract Header SC00005;ENU=%1 must not be %2 in %3 %4;NOR=%1 kan ikke vëre %2 i %3 %4;SVE=%1 fÜr inte vara %2 i %3 %4';
      Text016@1023 : TextConst '@@@=A credit memo cannot be created, because the Credit Memo Date 03-02-11 is after the work date.;ENU=A credit memo cannot be created, because the %1 %2 is after the work date.;NOR=Det kan ikke opprettes en kreditnota fordi %1 %2 kommer etter arbeidsdatoen.;SVE=En kreditnota kan inte skapas dÑrfîr att %1 %2 Ñr efter arbetsdatumet.';
      FormatAddress@1025 : Codeunit 365;
      FirstServiceDateEditable@19053837 : Boolean INDATASET;
      PrepaidEnable@19025160 : Boolean INDATASET;
      InvoiceAfterServiceEnable@19024761 : Boolean INDATASET;
      IsShipToCountyVisible@1002 : Boolean;
      IsSellToCountyVisible@1020 : Boolean;
      IsBillToCountyVisible@1024 : Boolean;

    LOCAL PROCEDURE CollectShpmntsByLineContractNo@4(VAR TempServShptHeader@1002 : TEMPORARY Record 5990);
    VAR
      ServShptHeader@1000 : Record 5990;
      ServShptLine@1001 : Record 5991;
    BEGIN
      TempServShptHeader.RESET;
      TempServShptHeader.DELETEALL;
      ServShptLine.RESET;
      ServShptLine.SETCURRENTKEY("Contract No.");
      ServShptLine.SETRANGE("Contract No.","Contract No.");
      IF ServShptLine.FIND('-') THEN
        REPEAT
          IF ServShptHeader.GET(ServShptLine."Document No.") THEN BEGIN
            TempServShptHeader.COPY(ServShptHeader);
            IF TempServShptHeader.INSERT THEN;
          END;
        UNTIL ServShptLine.NEXT = 0;
    END;

    LOCAL PROCEDURE ActivateFields@2();
    BEGIN
      FirstServiceDateEditable := Status <> Status::Signed;
      PrepaidEnable := (NOT "Invoice after Service" OR Prepaid);
      InvoiceAfterServiceEnable := (NOT Prepaid OR "Invoice after Service");
      IsBillToCountyVisible := FormatAddress.UseCounty("Bill-to Country/Region Code");
      IsSellToCountyVisible := FormatAddress.UseCounty("Country/Region Code");
      IsShipToCountyVisible := FormatAddress.UseCounty("Ship-to Country/Region Code");
    END;

    [External]
    PROCEDURE CheckRequiredFields@1();
    BEGIN
      IF "Contract No." = '' THEN
        ERROR(Text000,FIELDCAPTION("Contract No."),TABLECAPTION,"Contract No.");
      IF "Customer No." = '' THEN
        ERROR(Text000,FIELDCAPTION("Customer No."),TABLECAPTION,"Contract No.");
      IF FORMAT("Service Period") = '' THEN
        ERROR(Text000,FIELDCAPTION("Service Period"),TABLECAPTION,"Contract No.");
      IF "First Service Date" = 0D THEN
        ERROR(Text000,FIELDCAPTION("First Service Date"),TABLECAPTION,"Contract No.");
      IF Status = Status::Canceled THEN
        ERROR(Text015,FIELDCAPTION(Status),FORMAT(Status),TABLECAPTION,"Contract No.");
      IF "Change Status" = "Change Status"::Locked THEN
        ERROR(Text015,FIELDCAPTION("Change Status"),FORMAT("Change Status"),TABLECAPTION,"Contract No.");
    END;

    LOCAL PROCEDURE GetServItemLine@5();
    VAR
      ContractLineSelection@1005 : Page 6057;
    BEGIN
      CLEAR(ContractLineSelection);
      ContractLineSelection.SetSelection("Customer No.","Ship-to Code","Contract Type","Contract No.");
      ContractLineSelection.RUNMODAL;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE StartingDateOnAfterValidate@19020273();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE StatusOnAfterValidate@19072689();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CustomerNoOnAfterValidate@19016267();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE BilltoCustomerNoOnAfterValidat@19044114();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShiptoCodeOnAfterValidate@19065015();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ResponseTimeHoursOnAfterValida@19023139();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE ServicePeriodOnAfterValidate@19066190();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE AnnualAmountOnAfterValidate@19051853();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE InvoiceafterServiceOnAfterVali@19065496();
    BEGIN
      ActivateFields;
    END;

    LOCAL PROCEDURE AllowUnbalancedAmountsOnAfterV@19018309();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PrepaidOnAfterValidate@19004759();
    BEGIN
      ActivateFields;
    END;

    LOCAL PROCEDURE ExpirationDateOnAfterValidate@19018149();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE FirstServiceDateOnAfterValidat@6();
    BEGIN
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

