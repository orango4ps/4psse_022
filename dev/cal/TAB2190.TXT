OBJECT Table 2190 O365 Sales Graph
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    TableType=MicrosoftGraph;
    ReplicateData=No;
    CaptionML=[ENU=O365 Sales Graph;
               NOR=Salgsdiagram i O365;
               SVE=O365 f”rs„ljningsdiagram];
  }
  FIELDS
  {
    { 1   ;   ;Component           ;Text60        ;ExternalName=component;
                                                   ExternalType=Edm.String;
                                                   CaptionML=[ENU=Component;
                                                              NOR=Komponent;
                                                              SVE=Komponent] }
    { 2   ;   ;Type                ;Text60        ;ExternalName=type;
                                                   ExternalType=Edm.String;
                                                   CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Typ] }
    { 3   ;   ;Schema              ;Text60        ;ExternalName=schema;
                                                   ExternalType=Edm.String;
                                                   CaptionML=[ENU=Schema;
                                                              NOR=Skjema] }
    { 4   ;   ;Details             ;BLOB          ;ExternalName=details;
                                                   ExternalType=Edm.Json;
                                                   CaptionML=[ENU=Details;
                                                              NOR=Detaljer;
                                                              SVE=Detaljer];
                                                   SubType=Json }
    { 5   ;   ;InvoiceId           ;Text60        ;ExternalName=invoiceId;
                                                   ExternalType=Edm.String;
                                                   CaptionML=[ENU=InvoiceId;
                                                              NOR=Faktura-ID] }
    { 6   ;   ;EmployeeId          ;Text250       ;ExternalName=employeeId;
                                                   ExternalType=Edm.String;
                                                   CaptionML=[ENU=EmployeeId;
                                                              NOR=Ansatt-ID] }
    { 7   ;   ;ContactId           ;Text250       ;ExternalName=customerId;
                                                   ExternalType=Edm.String;
                                                   CaptionML=[ENU=ContactId;
                                                              NOR=Kontakt-ID] }
    { 8   ;   ;ActivityDate        ;Text60        ;ExternalName=activityDate;
                                                   ExternalType=Edm.String;
                                                   CaptionML=[ENU=ActivityDate;
                                                              NOR=Aktivitetsdato] }
    { 9   ;   ;Kind                ;Text60        ;ExternalName=kind;
                                                   ExternalType=Edm.String;
                                                   CaptionML=[ENU=Kind;
                                                              NOR="Type ";
                                                              SVE="Typ "] }
    { 10  ;   ;EstimateId          ;Text60        ;ExternalName=EstimateId;
                                                   ExternalType=Edm.String;
                                                   CaptionML=[ENU=EstimateId;
                                                              NOR=EstimateId] }
  }
  KEYS
  {
    {    ;Component                               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      InvalidComponentErr@1000 : TextConst 'ENU=Component should be Invoice.;NOR=Komponenten m† v‘re Faktura.';
      InvalidSchemaErr@1001 : TextConst 'ENU=An unsupported schema was specified.;NOR=Et ust›ttet skjema ble angitt.';
      InvalidTypeErr@1005 : TextConst 'ENU=The specified type is not valid for the request.;NOR=Den angitte typen er ugyldig for foresp›rselen.';
      NotInvoicingErr@1006 : TextConst 'ENU=The specified tenant is not an Invoicing tenant.;NOR=Den angitte leietakeren er ikke en Invoicing-leietaker.';
      SupportedSchemaTxt@1003 : TextConst '@@@={Locked};ENU=InvoiceV1;NOR=InvoiceV1';
      ComponentTxt@1004 : TextConst '@@@={Locked};ENU=Invoice;NOR=Invoice';
      RefreshTypeTxt@1002 : TextConst '@@@={Locked};ENU=Refresh;NOR=Refresh';

    [External]
    PROCEDURE Initialize@1();
    BEGIN
      INIT;
      Component := ComponentTxt;
      Schema := SupportedSchemaTxt;
      ActivityDate := FORMAT(CURRENTDATETIME,0,9);
    END;

    [Internal]
    PROCEDURE SetEmployeeIdToCurrentUser@4();
    VAR
      AzureADUserManagement@1000 : Codeunit 9010;
    BEGIN
      EmployeeId := AzureADUserManagement.GetUserObjectId(USERSECURITYID);
    END;

    [External]
    PROCEDURE ParseRefresh@2();
    VAR
      O365SalesInitialSetup@1000 : Record 2110;
    BEGIN
      IF UPPERCASE(Component) <> UPPERCASE(ComponentTxt) THEN
        ERROR(InvalidComponentErr);

      IF UPPERCASE(Schema) <> UPPERCASE(SupportedSchemaTxt) THEN
        ERROR(InvalidSchemaErr);

      IF UPPERCASE(Type) <> UPPERCASE(RefreshTypeTxt) THEN
        ERROR(InvalidTypeErr);

      IF (NOT O365SalesInitialSetup.GET) OR (NOT O365SalesInitialSetup."Is initialized") THEN
        ERROR(NotInvoicingErr);

      TASKSCHEDULER.CREATETASK(CODEUNIT::"O365 Sales Web Service",0,TRUE,COMPANYNAME,CURRENTDATETIME + 10000); // Add 10s
    END;

    BEGIN
    END.
  }
}

