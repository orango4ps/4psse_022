OBJECT Page 1638 Booking Items
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Bookings Not Invoiced;
               NOR=Bestillinger som ikke er fakturert;
               SVE=Icke fakturerade bokningar];
    LinksAllowed=No;
    SourceTable=Table6707;
    PageType=List;
    SourceTableTemporary=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Invoicing;
                                NOR=Ny,Prosess,Rapport,Fakturering;
                                SVE=Ny,Process,Rapport,Fakturering];
    OnAfterGetRecord=VAR
                       OutlookSynchTypeConv@1000 : Codeunit 5302;
                     BEGIN
                       StartDate := OutlookSynchTypeConv.UTC2LocalDT(GetStartDate);
                       CustomerName := "Customer Name";
                       IF CustomerName = '' THEN
                         CustomerName := NoCustomerSelectedTxt;
                     END;

    ActionList=ACTIONS
    {
      { 9       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 10      ;1   ;Action    ;
                      Name=Invoice;
                      CaptionML=[ENU=Create Invoice;
                                 NOR=Opprett faktura;
                                 SVE=Skapa faktura];
                      ToolTipML=[ENU=Create a new sales invoice for the selected booking.;
                                 NOR=Opprett en ny salgsfaktura for den valgte bestillingen.;
                                 SVE=Skapa en ny f”rs„ljningsfaktura f”r den valda bokningen.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=NewSalesInvoice;
                      PromotedCategory=Category4;
                      Scope=Repeater;
                      OnAction=VAR
                                 TempBookingItem@1001 : TEMPORARY Record 6707;
                                 SalesHeader@1000 : Record 36;
                                 CountCust@1004 : Integer;
                               BEGIN
                                 IF NOT ActionAllowed THEN
                                   EXIT;

                                 GetSelectedRecords(TempBookingItem);

                                 IF TempBookingItem.FINDSET THEN
                                   REPEAT
                                     IF InvoiceItemsForCustomer(TempBookingItem,SalesHeader) THEN
                                       CountCust += 1;
                                   UNTIL TempBookingItem.NEXT = 0;

                                 OutputAction(CountCust,SalesHeader);
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=Invoice Customer;
                      CaptionML=[ENU=Create Invoice for Customer;
                                 NOR=Opprett faktura for kunde;
                                 SVE=Skapa kundfaktura];
                      ToolTipML=[ENU=Create a new sales invoice for all items booked by the customer on the selected booking.;
                                 NOR=Opprett en ny salgsfaktura for alle varer bestilt av kunden p† den valgte bestillingen.;
                                 SVE=Skapa en ny f”rs„ljningsfaktura f”r alla artiklar som bokats av kunden f”r den valda bokningen.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=SuggestCustomerBill;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 SalesHeader@1000 : Record 36;
                               BEGIN
                                 IF NOT ActionAllowed THEN
                                   EXIT;

                                 IF InvoiceItemsForCustomer(Rec,SalesHeader) THEN
                                   OutputAction(1,SalesHeader);
                               END;
                                }
      { 4       ;1   ;Action    ;
                      Name=MarkInvoiced;
                      CaptionML=[ENU=Mark as Invoiced;
                                 NOR=Merket som fakturert;
                                 SVE=Markera som fakturerad];
                      ToolTipML=[ENU=Mark the bookings that you have selected as invoiced. This removes the bookings from this view.;
                                 NOR=Merk de valgte bestillingene som fakturert. Dette fjerner bestillingene fra denne visningen.;
                                 SVE=Markera de bokningar som du har markerat som fakturerade. Detta tar bort bokningarna fr†n denna vy.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=ClearLog;
                      PromotedCategory=Category4;
                      Scope=Repeater;
                      OnAction=VAR
                                 BookingItem@1001 : Record 6707;
                                 TempBookingItem@1004 : TEMPORARY Record 6707;
                                 InstructionMgt@1000 : Codeunit 1330;
                               BEGIN
                                 IF NOT ActionAllowed THEN
                                   EXIT;

                                 IF InstructionMgt.ShowConfirm(ConfirmMarkQst,InstructionMgt.MarkBookingAsInvoicedWarningCode) THEN BEGIN
                                   GetSelectedRecords(TempBookingItem);
                                   IF TempBookingItem.FINDSET THEN
                                     REPEAT
                                       BookingItem.GET(TempBookingItem.Id);
                                       BookingItem."Invoice Status" := BookingItem."Invoice Status"::open;
                                       BookingItem.MODIFY;
                                       RemoveFromView(TempBookingItem);
                                     UNTIL TempBookingItem.NEXT = 0;
                                 END;

                                 CurrPage.UPDATE;
                               END;

                      Gesture=None }
      { 12      ;1   ;Action    ;
                      Name=InvoiceAll;
                      CaptionML=[ENU=Invoice All;
                                 NOR=Fakturer alle;
                                 SVE=Fakturera alla];
                      ToolTipML=[ENU=Create a new sales invoice for all non-invoiced bookings.;
                                 NOR=Opprett en ny salgsfaktura for alle ikke-fakturerte bestillinger.;
                                 SVE=Skapa en ny f”rs„ljningsfaktura f”r alla ej fakturerade bokningar.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=NewSalesInvoice;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 TempBookingItem@1000 : TEMPORARY Record 6707;
                                 SalesHeader@1001 : Record 36;
                                 CountCust@1002 : Integer;
                               BEGIN
                                 IF NOT ActionAllowed THEN
                                   EXIT;

                                 TempBookingItem.COPY(Rec,TRUE);

                                 TempBookingItem.SETFILTER("Customer Name",'<>''''');
                                 IF TempBookingItem.FINDSET THEN
                                   REPEAT
                                     IF InvoiceItemsForCustomer(TempBookingItem,SalesHeader) THEN
                                       CountCust += 1;
                                   UNTIL TempBookingItem.NEXT = 0;

                                 OutputAction(CountCust,SalesHeader);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 7   ;2   ;Field     ;
                CaptionML=[ENU=Start Date;
                           NOR=Startdato;
                           SVE=Startdatum];
                ToolTipML=[ENU=Specifies the start date and time of the booking.;
                           NOR=Angir startdato og -klokkeslett for bestillingen.;
                           SVE=Anger bokningens startdatum och starttid.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=StartDate }

    { 13  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the duration of the booking that is not yet invoiced.;
                           NOR=Angir varigheten av bestillingen som enn† ikke er fakturert.;
                           SVE=Anger varaktigheten f”r bokningen som „nnu inte har fakturerats.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Duration }

    { 5   ;2   ;Field     ;
                Name=Customer;
                CaptionML=[ENU=Customer;
                           NOR=Kunde;
                           SVE=Kund];
                ToolTipML=[ENU=Specifies the name of the customer that the booking is for.;
                           NOR=Angir navnet p† kunden som bestillingen er for.;
                           SVE=Anger namnet p† kunden som bokningen „r avsedd f”r.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CustomerName;
                OnDrillDown=VAR
                              Customer@1000 : Record 18;
                            BEGIN
                              IF Customer.FindByEmail(Customer,"Customer Email") THEN
                                PAGE.RUN(PAGE::"Customer Card",Customer);
                            END;
                             }

    { 3   ;2   ;Field     ;
                Name=Service;
                ToolTipML=[ENU=Specifies the subject of the booking.;
                           NOR=Angir emnet for bestillingen.;
                           SVE=Anger bokningens „mne.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Service Name";
                OnDrillDown=VAR
                              BookingServiceMapping@1000 : Record 6706;
                              Item@1001 : Record 27;
                            BEGIN
                              IF BookingServiceMapping.GET("Service ID") THEN
                                IF Item.GET(BookingServiceMapping."Item No.") THEN
                                  PAGE.RUN(PAGE::"Item Card",Item);
                            END;
                             }

  }
  CODE
  {
    VAR
      ConfirmMarkQst@1002 : TextConst 'ENU=The appointments that you mark as invoiced will be removed from this view. You will no longer be able to manage them in this window. Do you want to continue?;NOR=Avtalene som du har merket som fakturert, fjernes fra denne visningen. Du kan ikke lenger behandle dem i dette vinduet. Vil du fortsette?;SVE=De m”ten som du markerar som fakturerade tas bort fr†n denna vy. Du kan sedan inte l„ngre hantera dem i detta f”nster. Vill du forts„tta?';
      InvoicePostQst@1003 : TextConst 'ENU=Sales invoices have been created but have not been posted or sent. Would you like to view your list of unposted sales invoices?;NOR=Salgsfakturaer er opprettet, men ikke bokf›rt eller sendt. Vil du vise listen over salgsfakturaer som ikke er bokf›rt?;SVE=F”rs„ljningsfakturan har skapats men inte bokf”rts eller skickats. Vill du visa listan med ej bokf”rda f”rs„ljningsfakturor?';
      AlreadyInvoicedMsg@1000 : TextConst 'ENU=The selected appointments have already been invoiced.;NOR=De valgte avtalene er allerede fakturert.;SVE=Markerade m”ten har redan fakturerats.';
      StartDate@1004 : DateTime;
      NoCustomerSelectedMsg@1001 : TextConst 'ENU=A customer must be selected to create an invoice for the booking. Select a customer for the booking in the Bookings app, then re-open this page.;NOR=En kunde m† v‘re valgt for † opprette en faktura for bestillingen. Velg en kunde for bestillingen i Bookings-appen, og †pne deretter denne siden p† nytt.;SVE=Du m†ste v„lja en kund f”r att kunna skapa en faktura f”r bokningen. V„lj en kund f”r bokningen i appen Bookings och ”ppna sedan den h„r sidan igen.';
      NoCustomerSelectedTxt@1006 : TextConst '@@@=Indicates that a customer was not selected for the Bookings appointment.;ENU=<No customer selected>;NOR=<Ingen kunde valgt>;SVE=<Ingen kund har valts>';
      CustomerName@1007 : Text;

    LOCAL PROCEDURE ActionAllowed@10() Allowed : Boolean;
    BEGIN
      Allowed := CheckActionAllowed;
      IF "Customer Name" = '' THEN BEGIN
        MESSAGE(NoCustomerSelectedMsg);
        Allowed := FALSE;
      END;
    END;

    [External]
    PROCEDURE GetSelectedRecords@3(VAR TempBookingItem@1000 : TEMPORARY Record 6707);
    BEGIN
      IF MARKEDONLY THEN BEGIN
        TempBookingItem.COPY(Rec,TRUE);
        TempBookingItem.MARKEDONLY(TRUE);
      END ELSE BEGIN
        TempBookingItem.COPY(Rec,TRUE);
        CurrPage.SETSELECTIONFILTER(TempBookingItem);
      END;
    END;

    LOCAL PROCEDURE InvoiceItemsForCustomer@12(VAR TempBookingItem@1000 : TEMPORARY Record 6707;VAR SalesHeader@1002 : Record 36) InvoiceCreated : Boolean;
    VAR
      BookingManager@1001 : Codeunit 6721;
    BEGIN
      InvoiceCreated := BookingManager.InvoiceItemsForCustomer(Rec,TempBookingItem,SalesHeader);
    END;

    LOCAL PROCEDURE OutputAction@38(CountCust@1000 : Integer;SalesHeader@1002 : Record 36);
    VAR
      PageManagement@1001 : Codeunit 700;
      RecordRef@1003 : RecordRef;
    BEGIN
      RecordRef.GETTABLE(SalesHeader);
      CASE CountCust OF
        0:
          MESSAGE(AlreadyInvoicedMsg);
        1:
          PAGE.RUN(PageManagement.GetConditionalCardPageID(RecordRef),SalesHeader);
        ELSE
          IF CONFIRM(InvoicePostQst) THEN
            PAGE.RUN(PageManagement.GetConditionalListPageID(RecordRef),SalesHeader);
      END;
    END;

    LOCAL PROCEDURE RemoveFromView@4(VAR TempBookingItem@1000 : TEMPORARY Record 6707);
    BEGIN
      GET(TempBookingItem.Id);
      DELETE;
    END;

    BEGIN
    END.
  }
}

