OBJECT Codeunit 6085781 Continia User Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW19.00.00.5.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      NoPermissionErr@6085573 : TextConst 'DEU=Sie besitzen keine Berechtigungen fÅr diese Aktion.;ENU=You do not have permissions for this action.;NLD=U hebt geen rechten voor deze actie.;SVE=Du har inte behîrighet att utfîra den hÑr ÜtgÑrden.';

    PROCEDURE LookupUser@1102601000(VAR _UserID@1000 : Text[50];IncludeDatabaseLogin@1002 : Boolean;IncludeContiniaUsers@1160040000 : Boolean) : Boolean;
    VAR
      TempContiniaUser@1001 : TEMPORARY Record 6086001;
      ContiniaUser@1160040001 : Record 6086001;
      User@1004 : Record 2000000120;
    BEGIN
      IF IncludeContiniaUsers THEN
        IF ContiniaUser.FINDSET THEN
          REPEAT
            TempContiniaUser := ContiniaUser;
            TempContiniaUser.INSERT;
          UNTIL ContiniaUser.NEXT = 0;

      IF User.FINDSET THEN
        REPEAT
          IF NOT TempContiniaUser.GET(User."User Name") THEN BEGIN
            TempContiniaUser.INIT;
            TempContiniaUser."User ID" := User."User Name";
            TempContiniaUser.Name := User."User Name";
            IF User."Windows Security ID" <> '' THEN
              TempContiniaUser."NAV Login Type" := TempContiniaUser."NAV Login Type"::Windows
            ELSE
              TempContiniaUser."NAV Login Type" := TempContiniaUser."NAV Login Type"::Database;
            TempContiniaUser.INSERT;
          END;
        UNTIL User.NEXT = 0;

      CLEAR(TempContiniaUser);
      TempContiniaUser.SETCURRENTKEY("User ID");
      TempContiniaUser."User ID" := _UserID;
      IF TempContiniaUser.FIND('=><') THEN;
      IF PAGE.RUNMODAL(PAGE::"Continia User List (Lookup)",TempContiniaUser) = ACTION::LookupOK THEN BEGIN
        _UserID := TempContiniaUser."User ID";
        EXIT(TRUE);
      END;

      EXIT(FALSE);
    END;

    PROCEDURE GetNAVUserID@1160040000(_UserID@1160040000 : Code[50]) : Code[50];
    BEGIN
      EXIT(_UserID);
    END;

    PROCEDURE GetNAVUserLoginType@1160040001(_UserID@1160040000 : Code[50]) : Integer;
    VAR
      User@1160040003 : Record 2000000120;
      ContiniaUser@1160040004 : Record 6086001;
    BEGIN
      User.SETCURRENTKEY("User Name");
      User.SETRANGE("User Name",_UserID);
      IF User.FINDFIRST THEN BEGIN
        IF User."Windows Security ID" <> '' THEN
          EXIT(ContiniaUser."NAV Login Type"::Windows)
        ELSE
          EXIT(ContiniaUser."NAV Login Type"::Database);
      END;
    END;

    PROCEDURE ShortUserID@4(VAR _UserID@1000 : Text[100]) : Code[50];
    BEGIN
      EXIT(_UserID);
    END;

    PROCEDURE ValidateNAVLoginTypeForWebUser@1160040002(ContiniaUserSetup@1160040000 : Record 6086002);
    VAR
      ContiniaUser@6085574 : Record 6086001;
      ContiniaVersionMgt@6085575 : Codeunit 6192775;
    BEGIN
      IF ContiniaVersionMgt.NAVVersion >= 71000 THEN
        EXIT;

      ContiniaUser.GET(ContiniaUserSetup."Continia User ID");
      IF ContiniaUser."NAV Login Type" = ContiniaUser."NAV Login Type"::"No NAV Login" THEN
        ContiniaUser.FIELDERROR("NAV Login Type");
    END;

    PROCEDURE IsLimitedUser@1160040012(_UserID@1160040000 : Code[50]) : Boolean;
    VAR
      User@6086300 : Record 2000000120;
    BEGIN
      User.SETCURRENTKEY("User Name");
      User.SETRANGE("User Name",_UserID);
      IF User.FINDFIRST THEN
        EXIT(User."License Type" = User."License Type"::"Limited User");
    END;

    PROCEDURE GetName@6085573(_UserID@6085574 : Code[50];VAR Name@6085573 : Text[50]) : Boolean;
    VAR
      User@6085575 : Record 2000000120;
    BEGIN
      User.SETCURRENTKEY("User Name");
      User.SETRANGE("User Name",_UserID);
      IF User.FINDFIRST THEN BEGIN
        Name := COPYSTR(User."Full Name",1,MAXSTRLEN(Name));
        EXIT(TRUE);
      END ELSE
        EXIT(FALSE);
    END;

    PROCEDURE GetEmail@6085574(_UserID@6085574 : Code[50];VAR EMail@6085573 : Text[250]) : Boolean;
    VAR
      User@6085575 : Record 2000000120;
    BEGIN
      User.SETCURRENTKEY("User Name");
      User.SETRANGE("User Name",_UserID);
      IF User.FINDFIRST THEN BEGIN
        EMail := COPYSTR(User."Contact Email",1,MAXSTRLEN(EMail));
        EXIT(TRUE);
      END ELSE
        EXIT(FALSE);
    END;

    LOCAL PROCEDURE IsPrimaryKeyField@6085579(TableID@6085575 : Integer;FieldID@6085574 : Integer;VAR NumberOfPrimaryKeyFields@6085573 : Integer) : Boolean;
    VAR
      ConfigValidateMgt@6085578 : Codeunit 8617;
      RecRef@6085577 : RecordRef;
      KeyRef@6085576 : KeyRef;
    BEGIN
      RecRef.OPEN(TableID);
      KeyRef := RecRef.KEYINDEX(1);
      NumberOfPrimaryKeyFields := KeyRef.FIELDCOUNT;
      EXIT(ConfigValidateMgt.IsKeyField(TableID,FieldID));
    END;

    LOCAL PROCEDURE RenameRecord@6085578(VAR RecRef@6085577 : RecordRef;TableNo@6085576 : Integer;NumberOfPrimaryKeyFields@6085575 : Integer;UserName@6085574 : Code[50];Company@6085573 : Text[30]);
    BEGIN
      IF NumberOfPrimaryKeyFields = 1 THEN
        RecRef.RENAME(UserName)
      ELSE
        ERROR('');

      // Need to implement below code if Continia User is part of primary key in table with more than one primary key field
      // (code copied from C418 - User Management)
      {
        CASE TableNo OF
          DATABASE::"User Time Register":
            BEGIN
              UserTimeRegister.CHANGECOMPANY(Company);
              RecRef.SETTABLE(UserTimeRegister);
              UserTimeRegister.RENAME(UserName,UserTimeRegister.Date);
            END;
          DATABASE::"Printer Selection":
            BEGIN
              RecRef.SETTABLE(PrinterSelection);
              PrinterSelection.RENAME(UserName,PrinterSelection."Report ID");
            END;
        END;
      }

      OnAfterRenameRecord(RecRef,TableNo,NumberOfPrimaryKeyFields,UserName,Company);
    END;

    PROCEDURE RenameContiniaUser@6085577(OldUserName@6085574 : Code[50];NewUserName@6085573 : Code[50]);
    VAR
      ContiniaUser@6085582 : Record 6086001;
      Field@6085581 : Record 2000000041;
      TableInformation@6085580 : Record 2000000028;
      Company@6085579 : Record 2000000006;
      RecRef@6085578 : RecordRef;
      FieldRef@6085577 : FieldRef;
      FieldRef2@6085576 : FieldRef;
      NumberOfPrimaryKeyFields@6085575 : Integer;
    BEGIN
      OnBeforeRenameContiniaUser(OldUserName,NewUserName);

      Field.SETRANGE(RelationTableNo,DATABASE::"Continia User");
      Field.SETRANGE(RelationFieldNo,ContiniaUser.FIELDNO("User ID"));
      IF Field.FINDSET THEN
        REPEAT
          Company.FINDSET;
          REPEAT
            RecRef.OPEN(Field.TableNo,FALSE,Company.Name);
            IF RecRef.READPERMISSION THEN BEGIN
              FieldRef := RecRef.FIELD(Field."No.");
              FieldRef.SETRANGE(OldUserName);
              IF RecRef.FINDSET(TRUE) THEN
                REPEAT
                  IF IsPrimaryKeyField(Field.TableNo,Field."No.",NumberOfPrimaryKeyFields) THEN
                    RenameRecord(RecRef,Field.TableNo,NumberOfPrimaryKeyFields,NewUserName,Company.Name)
                  ELSE BEGIN
                    FieldRef2 := RecRef.FIELD(Field."No.");
                    FieldRef2.VALUE := NewUserName;
                    RecRef.MODIFY;
                  END;
                UNTIL RecRef.NEXT = 0;
            END ELSE BEGIN
              TableInformation.GET(Company.Name,Field.TableNo);
              IF TableInformation."No. of Records" > 0 THEN
                ERROR(NoPermissionErr);
            END;
            RecRef.CLOSE;
          UNTIL Company.NEXT = 0;
        UNTIL Field.NEXT = 0;
    END;

    [Integration]
    PROCEDURE OnAfterRenameRecord@6085576(VAR RecRef@6085577 : RecordRef;TableNo@6085576 : Integer;NumberOfPrimaryKeyFields@6085575 : Integer;UserName@6085574 : Code[50];Company@6085573 : Text[30]);
    BEGIN
    END;

    [Integration]
    PROCEDURE OnBeforeRenameContiniaUser@6085580(OldUserName@6085574 : Code[50];NewUserName@6085573 : Code[50]);
    BEGIN
    END;

    BEGIN
    END.
  }
}

