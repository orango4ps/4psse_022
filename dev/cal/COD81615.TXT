OBJECT Codeunit 81615 Skapa Projektartikelrader
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=VAR
            price1@1100285000 : Decimal;
            price2@1100285001 : Decimal;
            price3@1100285002 : Decimal;
            price4@1100285003 : Decimal;
            price5@1100285004 : Decimal;
            netprice@1100285005 : Decimal;
          BEGIN
            JobLedgerEntry.SETFILTER("Vendor (Trade Item)", '<>%1', '');
            JobLedgerEntry.SETFILTER("Trade Item", '<>%1', '');
            JobLedgerEntry.SETRANGE("Posting Date", 150901D, 151030D);
            JobLedgerEntry.SETRANGE(JobLedgerEntry."Entry Type", JobLedgerEntry."Entry Type"::Usage);
            JobLedgerEntry.SETFILTER(Quantity, '<>0');
            //JobLedgerEntry.SETFILTER("Job No.", '*425');
            Tolerance := 0.5;
            LineNo := 1;

            // ItemWrongNetPrice.DELETEALL;

            IF (JobLedgerEntry.FINDSET(FALSE)) THEN REPEAT
               netprice := 0;
               IF (TradeItem.GET(JobLedgerEntry."Vendor (Trade Item)", JobLedgerEntry."Trade Item")) THEN BEGIN
                  TradeItem.GetActualPrice(0D, '', '');
                  TradeItem.GetUnitPrices(price1, netprice, price2, price3, price4);
                  HighAmount := JobLedgerEntry."Unit Cost" * (1+Tolerance);
                  LowAmount := JobLedgerEntry."Unit Cost" * (1-Tolerance);
                  IF (netprice > HighAmount) OR (netprice < LowAmount) THEN BEGIN
            //         ItemWrongNetPrice.INIT;
            //         ItemWrongNetPrice."Line No" := LineNo;
            //         ItemWrongNetPrice."Posting Date" := JobLedgerEntry."Posting Date";
            //         ItemWrongNetPrice."Document No." := JobLedgerEntry."Document No.";
            //         ItemWrongNetPrice."Project No." := JobLedgerEntry."Job No.";
            //         ItemWrongNetPrice."Vendor Trade Item" := JobLedgerEntry."Vendor (Trade Item)";
            //         ItemWrongNetPrice."Trade Item" := JobLedgerEntry."Trade Item";
            //         ItemWrongNetPrice."Net Cost Project" := JobLedgerEntry."Unit Cost";
            //         ItemWrongNetPrice."Net Price List" := netprice;
            //         ItemWrongNetPrice.INSERT;
                    LineNo += 1;
                  END;
               END;
               Count += 1;
            UNTIL (JobLedgerEntry.NEXT = 0);

            MESSAGE(FORMAT(Count) + ' och ' + FORMAT(LineNo));
          END;

  }
  CODE
  {
    VAR
      JobLedgerEntry@1100285000 : Record 11072005;
      TradeItem@1100285002 : Record 11012317;
      Tolerance@1100285003 : Decimal;
      HighAmount@1100285004 : Decimal;
      LowAmount@1100285005 : Decimal;
      LineNo@1100285006 : Integer;
      Count@1100285007 : Integer;

    BEGIN
    {
      NameDataTypeSubtypeLength
      ItemWrongNetPriceRecordTable81634
    }
    END.
  }
}

