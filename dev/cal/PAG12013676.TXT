OBJECT Page 12013676 Import File
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF400000;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import File;
               SVE=Importera fil];
    PageType=Card;
    OnOpenPage=BEGIN
                 ImportType := ImportDataRowNo.GetImportType;

                 SkipUpdateIfErrorIsFound := FALSE;

                 DataStartsAtRowNo := 2;
                 FieldNamesRowNo := 1;

                 DeleteExColumns := TRUE;
                 DeleteExCodingRules := TRUE;
                 DeleteTemplateRuleLines := TRUE;
                 DeleteExLineTypes := TRUE;
                 DeleteExDocs := TRUE;
                 ValidateBGPGFieldsVendor := TRUE;
               END;

  }
  CONTROLS
  {
    { 1100285014;0;Container;
                ContainerType=ContentArea }

    { 1100285013;1;Group  ;
                CaptionML=[ENU=General;
                           SVE=Allm„nt] }

    { 1100285001;2;Field  ;
                Name=FileNameTextBox;
                CaptionML=[ENU=XML File Name;
                           SVE=XML Filnamn];
                SourceExpr=FileName;
                Visible=ImportType <> 1;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               RequestFile;
                             END;
                              }

    { 1100285015;2;Field  ;
                Name=FileNameTextBox2;
                CaptionML=[ENU=Excel File Name;
                           SVE=Excel Filnamn];
                SourceExpr=FileName;
                Visible=[ImportType = 1 ];
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               RequestFile;
                               SheetName := ExcelBuf.SelectSheetsName(ServerFileName);
                             END;
                              }

    { 1100285002;2;Field  ;
                CaptionML=[ENU=Error XML File Name;
                           SVE=Fel XML filnamn];
                SourceExpr=ErrorFileName;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               ExFlowFileMgt.FileNameFromDialog(ErrorFileName,Text005,4,Text002,1);
                             END;
                              }

    { 1100285003;2;Field  ;
                CaptionML=[ENU=Worksheet Name;
                           SVE=Kalkylbladet];
                SourceExpr=SheetName;
                Visible=ImportType <> 0;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               IF ServerFileName = '' THEN
                                 RequestFile;

                               SheetName := ExcelBuf.SelectSheetsName(ServerFileName);
                             END;
                              }

    { 1100285000;1;Group  ;
                CaptionML=[ENU=Advanced options;
                           SVE=Avancerade inst„llningar] }

    { 1100285004;2;Field  ;
                CaptionML=[ENU=Skip Update if a error is found (if not marked, records without an error will be imported);
                           SVE=Uppdatera enbart n„r inget fel hittas (om denna inte „r inst„lld kommer de poster utan fel importeras, annars inga poster ifall ett fel hittas)];
                SourceExpr=SkipUpdateIfErrorIsFound;
                Visible=importtype = 0 }

    { 1100285005;2;Field  ;
                CaptionML=[ENU=Update Option;
                           SVE=Uppdateringsalternativ];
                OptionCaptionML=[ENU=Insert&Modify,Modify Only,Insert Only;
                                 SVE=Ins„ttning&Modifiering,Modifering enbart,Ins„ttning enbart];
                SourceExpr=UpdateOption }

    { 1100285006;2;Field  ;
                CaptionML=[ENU=Data starts at Row No:;
                           SVE=F”rsta raden med data „r:];
                SourceExpr=DataStartsAtRowNo }

    { 1100285007;2;Field  ;
                CaptionML=[ENU=Field Names are at Row No;
                           SVE=F„ltnamn finns p† rad nr:];
                SourceExpr=FieldNamesRowNo }

    { 1100285008;2;Field  ;
                CaptionML=[ENU=Delete existing Ex Columns;
                           SVE=Ta bort existerande Ex Column poster];
                SourceExpr=DeleteExColumns;
                Visible=ImportType = 0 }

    { 1100285009;2;Field  ;
                CaptionML=[ENU=Delete existing Ex Coding Rules;
                           SVE=Ta bort existerande Konteringsregler];
                SourceExpr=DeleteExCodingRules;
                Visible=ImportType = 0 }

    { 1100285010;2;Field  ;
                CaptionML=[ENU=Delete existing Template Rule Lines;
                           SVE=Ta bort existerande attestregler];
                SourceExpr=DeleteTemplateRuleLines;
                Visible=ImportType = 0 }

    { 1100285011;2;Field  ;
                CaptionML=[ENU=Delete existing Ex Line Type lines;
                           SVE=Ta bort existerande Ex Line Type poster];
                SourceExpr=DeleteExLineTypes;
                Visible=ImportType = 0 }

    { 1100285017;2;Field  ;
                CaptionML=[ENU=Delete existing Ex Documents/lines;
                           SVE=Ta bort existerande Ex Dokument/rader];
                SourceExpr=DeleteExDocs;
                Visible=ImportType = 0 }

    { 1100285012;2;Field  ;
                CaptionML=[ENU=Update Vendor ID for all vendors;
                           SVE=Uppdatera Leverant”rsID f”r alla leverant”rer];
                SourceExpr=ValidateBGPGFieldsVendor;
                Visible=ImportType = 0 }

  }
  CODE
  {
    VAR
      ExcelBuf@1100285021 : Record 370;
      ExFlowFileMgt@1100285013 : Codeunit 12013602;
      ImportDataRowNo@1100285018 : Codeunit 12013622;
      FileMgt@1100285019 : Codeunit 419;
      FileName@1100285012 : Text;
      ServerFileName@1100285014 : Text;
      ErrorFileName@1100285000 : Text;
      SheetName@1100285017 : Text;
      DataStartsAtRowNo@1100285010 : Integer;
      FieldNamesRowNo@1100285009 : Integer;
      UpdateOption@1100285008 : 'Insert&Modify,Modify Only,Insert Only';
      SkipUpdateIfErrorIsFound@1100285007 : Boolean;
      DeleteExColumns@1100285006 : Boolean;
      DeleteExCodingRules@1100285005 : Boolean;
      DeleteTemplateRuleLines@1100285004 : Boolean;
      DeleteExLineTypes@1100285003 : Boolean;
      DeleteExDocs@1100285011 : Boolean;
      ValidateBGPGFieldsVendor@1100285002 : Boolean;
      Text002@1100285022 : TextConst 'ENU=XML Files (*.xml*)|*.xml*|All Files (*.*)|*.*;SVE=XML Filer (*.xml*)|*.xml*|Alla Filer (*.*)|*.*';
      Text003@1100285029 : TextConst 'ENU=Import XML File;SVE=Importera XML Fil';
      Text005@1100285028 : TextConst 'ENU=Save error messages in XML File;SVE=Spara felmeddelande i XML fil';
      Text006@1100285020 : TextConst 'ENU=Import Excel File;SVE=Importera Excel-fil';
      Text029@1100285015 : TextConst 'ENU=You must enter a file name.;SVE=Du m†ste ange ett filnamn.';
      ErrorName@1100285001 : TextConst 'ENU=ExFlowSetupImportError.xml;SVE=ExFlowInst„llningsFel.xml';
      ImportType@1100285016 : Integer INDATASET;

    PROCEDURE GetFileInfo@12013587(VAR _FileName@1100285011 : Text[250];VAR _ErrorFileName@1100285010 : Text[250];VAR _DataStartsAtRowNo@1100285009 : Integer;VAR _FieldNamesRowNo@1100285008 : Integer;VAR _UpdateOption@1100285007 : 'Insert&Modify,Modify Only,Insert Only';VAR _SkipUpdateIfErrorIsFound@1100285006 : Boolean;VAR _DeleteExColumns@1100285005 : Boolean;VAR _DeleteExCodingRules@1100285004 : Boolean;VAR _DeleteTemplateRuleLines@1100285003 : Boolean;VAR _DeleteExLineTypes@1100285002 : Boolean;VAR _DeleteExDocs@1100285012 : Boolean;VAR _ValidateBGPGFieldsVendor@1100285001 : Boolean;VAR _SheetName@1100285000 : Text[250]);
    BEGIN
      _FileName := ServerFileName;
      _ErrorFileName := ErrorFileName;
      _DataStartsAtRowNo := DataStartsAtRowNo;
      _FieldNamesRowNo := FieldNamesRowNo;
      _UpdateOption := UpdateOption;
      _SkipUpdateIfErrorIsFound := SkipUpdateIfErrorIsFound;
      _DeleteExColumns := DeleteExColumns;
      _DeleteExCodingRules := DeleteExCodingRules;
      _DeleteTemplateRuleLines := DeleteTemplateRuleLines;
      _DeleteExLineTypes := DeleteExLineTypes;
      _DeleteExDocs := DeleteExDocs;
      _ValidateBGPGFieldsVendor := ValidateBGPGFieldsVendor;
      _SheetName := SheetName;
    END;

    PROCEDURE RequestFile@6();
    BEGIN
      IF FileName <> '' THEN
        ServerFileName := FileMgt.UploadFile(Text006,FileName)
      ELSE
        IF ImportType = 1 THEN
          ServerFileName := FileMgt.UploadFile(Text006,'.xlsx')
        ELSE
          ServerFileName := FileMgt.UploadFile(Text003,'.xml');

      ValidateServerFileName;
      FileName := ServerFileName;

      ErrorFileName := ExFlowFileMgt.Path(FileName) + ErrorName;
    END;

    LOCAL PROCEDURE ValidateServerFileName@9();
    BEGIN
      IF ServerFileName = '' THEN BEGIN
        FileName := '';
        SheetName := '';
        ERROR(Text029);
      END;
    END;

    BEGIN
    END.
  }
}

