OBJECT Report 11020513 Batch Post Pl.Transport Orders
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Batchbuchung Transportauftr„ge;
               ENU=Batch Post Transport Orders;
               NLD=Batchboeken transportorders];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  PlantTransportOrder.COPY("Plant Transport Order");
                  UpdateReleaedToPOPosted;
                END;

    OnPostReport=BEGIN
                   PlantTransportOrder.FILTERGROUP(9);
                   PlantTransportOrder.SETRANGE(Status, PlantTransportOrder.Status::"PO Posted");
                   PlantTransportOrder.FILTERGROUP(0);
                   PostPlTransportOrderYN.RunPostBatchTransportOrder(PlantTransportOrder);
                 END;

  }
  DATASET
  {
    { 1100529500;;DataItem;                  ;
               DataItemTable=Table11020505;
               DataItemTableView=SORTING(No.)
                                 WHERE(Status=FILTER(Released|PO Posted),
                                       Invoice with Transport Order=CONST());
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;  //Only used for filters
                             END;

               ReqFilterFields=No.,Transport Date,Status }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      PlantTransportOrder@1100529501 : Record 11020505;
      PostPlTransportOrderYN@1100529500 : Codeunit 11020502;

    LOCAL PROCEDURE UpdateReleaedToPOPosted@1100529500();
    VAR
      TransportPlantOrderLine@1100529500 : Record 11020509;
    BEGIN
      PlantTransportOrder.FILTERGROUP(9);
      PlantTransportOrder.SETRANGE(Status, PlantTransportOrder.Status::Released);
      PlantTransportOrder.FILTERGROUP(0);
      IF PlantTransportOrder.FINDSET(TRUE,FALSE) THEN BEGIN
        REPEAT
          TransportPlantOrderLine.RESET;
          TransportPlantOrderLine.SETRANGE("Transport Order No.", PlantTransportOrder."No.");
          TransportPlantOrderLine.SETFILTER("Plant Order No.", '<>%1', '');
          IF NOT TransportPlantOrderLine.ISEMPTY THEN BEGIN  //Min. one PO on TO
            TransportPlantOrderLine.SETFILTER("Status (PO)", '<>%1', TransportPlantOrderLine."Status (PO)"::Posted);
            IF TransportPlantOrderLine.ISEMPTY THEN BEGIN  // All PO's of TO posted
              PlantTransportOrder.Status := PlantTransportOrder.Status::"PO Posted";
              PlantTransportOrder.MODIFY;
            END;
          END;
        UNTIL PlantTransportOrder.NEXT = 0;
      END;
      COMMIT;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

