OBJECT Table 1101 Cost Journal Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               LOCKTABLE;
               CostJournalTemplate.GET("Journal Template Name");
               CostJournalBatch.GET("Journal Template Name","Journal Batch Name");
               "Reason Code" := CostJournalBatch."Reason Code";

               IF "Source Code" = '' THEN BEGIN
                 SourceCodeSetup.GET;
                 "Source Code" := SourceCodeSetup."Cost Journal";
               END;
             END;

    OnModify=BEGIN
               "System-Created Entry" := FALSE;
             END;

    CaptionML=[ENU=Cost Journal Line;
               NOR=Kostkladdelin.;
               SVE=Kostnadsjournalrad];
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;TableRelation="Cost Journal Template";
                                                   CaptionML=[ENU=Journal Template Name;
                                                              NOR=Kladdemalnavn;
                                                              SVE=Mallnamn fîr journal] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 4   ;   ;Cost Type No.       ;Code20        ;TableRelation="Cost Type";
                                                   OnValidate=BEGIN
                                                                IF CostType.GET("Cost Type No.") THEN BEGIN
                                                                  CostType.TESTFIELD(Blocked,FALSE);
                                                                  CostType.TESTFIELD(Type,CostType.Type::"Cost Type");
                                                                  "Cost Center Code" := CostType."Cost Center Code";
                                                                  "Cost Object Code" := CostType."Cost Object Code";
                                                                  Description := CostType.Name;
                                                                END;

                                                                CalcBalance;
                                                              END;

                                                   CaptionML=[ENU=Cost Type No.;
                                                              NOR=Kosttypenr.;
                                                              SVE=Kostnadstypsnr] }
    { 5   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              NOR=Bokfõringsdato;
                                                              SVE=Bokfîringsdatum];
                                                   ClosingDates=Yes }
    { 7   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              NOR=Bilagsnr.;
                                                              SVE=Dokumentnr] }
    { 8   ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 9   ;   ;Journal Batch Name  ;Code10        ;TableRelation="Cost Journal Batch".Name WHERE (Journal Template Name=FIELD(Journal Template Name));
                                                   CaptionML=[ENU=Journal Batch Name;
                                                              NOR=Kladdenavn;
                                                              SVE=Journalnamn] }
    { 11  ;   ;Bal. Cost Type No.  ;Code20        ;TableRelation="Cost Type";
                                                   OnValidate=BEGIN
                                                                IF CostType.GET("Bal. Cost Type No.") THEN BEGIN
                                                                  CostType.TESTFIELD(Blocked,FALSE);
                                                                  CostType.TESTFIELD(Type,CostType.Type::"Cost Type");
                                                                  "Bal. Cost Center Code" := CostType."Cost Center Code";
                                                                  "Bal. Cost Object Code" := CostType."Cost Object Code";
                                                                END;

                                                                CalcBalance;
                                                              END;

                                                   CaptionML=[ENU=Bal. Cost Type No.;
                                                              NOR=Kosttypenr. for saldo;
                                                              SVE=Kostnadstypsnr motkonto] }
    { 16  ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                CalcBalance;
                                                                UpdateDebitCreditAmounts;
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              NOR=Belõp;
                                                              SVE=Belopp] }
    { 17  ;   ;Balance             ;Decimal       ;CaptionML=[ENU=Balance;
                                                              NOR=Saldo;
                                                              SVE=Saldo];
                                                   Editable=No }
    { 18  ;   ;Debit Amount        ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE(Amount,"Debit Amount");
                                                              END;

                                                   CaptionML=[ENU=Debit Amount;
                                                              NOR=Debetbelõp;
                                                              SVE=Debetbelopp] }
    { 19  ;   ;Credit Amount       ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE(Amount,-"Credit Amount");
                                                              END;

                                                   CaptionML=[ENU=Credit Amount;
                                                              NOR=Kreditbelõp;
                                                              SVE=Kreditbelopp] }
    { 20  ;   ;Cost Center Code    ;Code20        ;TableRelation="Cost Center";
                                                   OnValidate=BEGIN
                                                                CheckCostCenter("Cost Center Code");
                                                              END;

                                                   CaptionML=[ENU=Cost Center Code;
                                                              NOR=Kostsenterkode;
                                                              SVE=Kod fîr kostnadsstÑlle] }
    { 21  ;   ;Cost Object Code    ;Code20        ;TableRelation="Cost Object";
                                                   OnValidate=BEGIN
                                                                CheckCostObject("Cost Object Code");
                                                              END;

                                                   CaptionML=[ENU=Cost Object Code;
                                                              NOR=Kostobjektkode;
                                                              SVE=Kod fîr kostnadsbÑrare] }
    { 22  ;   ;Bal. Cost Center Code;Code20       ;TableRelation="Cost Center";
                                                   OnValidate=BEGIN
                                                                CheckCostCenter("Bal. Cost Center Code");
                                                              END;

                                                   CaptionML=[ENU=Bal. Cost Center Code;
                                                              NOR=Kostsenterkode for saldo;
                                                              SVE=Kod fîr kostnadsstÑlle motkonto] }
    { 23  ;   ;Bal. Cost Object Code;Code20       ;TableRelation="Cost Object";
                                                   OnValidate=BEGIN
                                                                CheckCostObject("Bal. Cost Object Code");
                                                              END;

                                                   CaptionML=[ENU=Bal. Cost Object Code;
                                                              NOR=Kostobjektkode for saldo;
                                                              SVE=Kod fîr kostnadsbÑrare motkonto] }
    { 27  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              NOR=èrsaksspor;
                                                              SVE=Uppfîljningskod] }
    { 29  ;   ;G/L Entry No.       ;Integer       ;TableRelation="G/L Entry";
                                                   CaptionML=[ENU=G/L Entry No.;
                                                              NOR=Finanslõpenr.;
                                                              SVE=Lîpnr redovisning];
                                                   Editable=No }
    { 30  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              NOR=Kildespor;
                                                              SVE=Ursprungskod] }
    { 31  ;   ;System-Created Entry;Boolean       ;CaptionML=[ENU=System-Created Entry;
                                                              NOR=Opprettet automatisk;
                                                              SVE=Systemkreerad trans.];
                                                   Editable=No }
    { 32  ;   ;Cost Entry No.      ;Integer       ;CaptionML=[ENU=Cost Entry No.;
                                                              NOR=Kostpostnr.;
                                                              SVE=Kostnadstransaktionsnummer];
                                                   Editable=No }
    { 33  ;   ;Allocated           ;Boolean       ;CaptionML=[ENU=Allocated;
                                                              NOR=Fordelt;
                                                              SVE=Fîrdelat] }
    { 50  ;   ;Allocation Description;Text80      ;CaptionML=[ENU=Allocation Description;
                                                              NOR=Tildelingsbeskrivelse;
                                                              SVE=Fîrdelningsavskrivning] }
    { 51  ;   ;Allocation ID       ;Code10        ;CaptionML=[ENU=Allocation ID;
                                                              NOR=Fordelings-ID;
                                                              SVE=Fîrdelnings-ID] }
    { 68  ;   ;Additional-Currency Amount;Decimal ;CaptionML=[ENU=Additional-Currency Amount;
                                                              NOR=Tilleggsvalutabelõp;
                                                              SVE=Alt. valuta belopp];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 69  ;   ;Add.-Currency Debit Amount;Decimal ;CaptionML=[ENU=Add.-Currency Debit Amount;
                                                              NOR=Till.valuta - debetbelõp;
                                                              SVE=Alt. valutadebetbelopp];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 70  ;   ;Add.-Currency Credit Amount;Decimal;CaptionML=[ENU=Add.-Currency Credit Amount;
                                                              NOR=Till.valuta - kreditbelõp;
                                                              SVE=Alt. valutakreditbelopp];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 100 ;   ;Budget Name         ;Code10        ;CaptionML=[ENU=Budget Name;
                                                              NOR=Budsjettnavn;
                                                              SVE=Budgetnamn];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Journal Template Name,Journal Batch Name,Line No.;
                                                   Clustered=Yes }
    {    ;Cost Type No.,Cost Center Code,Cost Object Code }
    {    ;G/L Entry No.                            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      SourceCodeSetup@1005 : Record 242;
      CostType@1004 : Record 1103;
      CostJournalBatch@1003 : Record 1102;
      CostJournalTemplate@1002 : Record 1100;
      Text000@1006 : TextConst '@@@="%2 = Cost Center or Cost Object; %3 = Cost Center or Cost Object Code";ENU=Line Type must be %1 or Begin-Total in %2 %3.;NOR=Linjetypen mÜ vëre %1 eller ha fra-summen i %2 %3.;SVE=Radtypen mÜste vara %1 eller frÜnsumma i %2 %3.';

    LOCAL PROCEDURE CalcBalance@1();
    BEGIN
      CASE TRUE OF
        ("Cost Type No." <> '') AND ("Bal. Cost Type No." <> ''):
          Balance := 0;
        "Bal. Cost Type No." <> '':
          Balance := -Amount;
        ELSE
          Balance := Amount;
      END;
    END;

    LOCAL PROCEDURE CheckCostCenter@2(CostCenterCode@1000 : Code[20]);
    VAR
      CostCenter@1001 : Record 1112;
    BEGIN
      IF CostCenter.GET(CostCenterCode) THEN BEGIN
        IF NOT (CostCenter."Line Type" IN [CostCenter."Line Type"::"Cost Center",CostCenter."Line Type"::"Begin-Total"]) THEN
          ERROR(Text000,CostCenter."Line Type"::"Cost Center",CostCenter.TABLECAPTION,CostCenter.Code);
        CostCenter.TESTFIELD(Blocked,FALSE);
      END;
    END;

    LOCAL PROCEDURE CheckCostObject@3(CostObjectCode@1000 : Code[20]);
    VAR
      CostObject@1001 : Record 1113;
    BEGIN
      IF CostObject.GET(CostObjectCode) THEN BEGIN
        IF NOT (CostObject."Line Type" IN [CostObject."Line Type"::"Cost Object",CostObject."Line Type"::"Begin-Total"]) THEN
          ERROR(Text000,CostObject."Line Type"::"Cost Object",CostObject.TABLECAPTION,CostObject.Code);
        CostObject.TESTFIELD(Blocked,FALSE);
      END;
    END;

    [External]
    PROCEDURE SetUpNewLine@8(LastCostJournalLine@1000 : Record 1101);
    VAR
      CostJournalLine@1001 : Record 1101;
    BEGIN
      CostJournalTemplate.GET("Journal Template Name");
      CostJournalBatch.GET("Journal Template Name","Journal Batch Name");
      CostJournalLine.SETRANGE("Journal Template Name","Journal Template Name");
      CostJournalLine.SETRANGE("Journal Batch Name","Journal Batch Name");
      IF CostJournalLine.FINDFIRST THEN BEGIN
        "Posting Date" := LastCostJournalLine."Posting Date";
        "Document No." := LastCostJournalLine."Document No.";
      END ELSE
        "Posting Date" := WORKDATE;

      "Source Code" := CostJournalTemplate."Source Code";
      "Reason Code" := CostJournalBatch."Reason Code";
      "Bal. Cost Type No." := CostJournalBatch."Bal. Cost Type No.";
      "Bal. Cost Center Code" := CostJournalBatch."Bal. Cost Center Code";
      "Bal. Cost Object Code" := CostJournalBatch."Bal. Cost Object Code";
    END;

    [External]
    PROCEDURE EmptyLine@4() : Boolean;
    BEGIN
      EXIT(Amount = 0);
    END;

    LOCAL PROCEDURE UpdateDebitCreditAmounts@5();
    BEGIN
      CASE TRUE OF
        Amount > 0:
          BEGIN
            "Debit Amount" := Amount;
            "Credit Amount" := 0;
          END;
        Amount < 0:
          BEGIN
            "Debit Amount" := 0;
            "Credit Amount" := -Amount;
          END;
        Amount = 0:
          BEGIN
            "Debit Amount" := 0;
            "Credit Amount" := 0;
          END;
      END;
    END;

    [External]
    PROCEDURE IsOpenedFromBatch@42() : Boolean;
    VAR
      CostJournalBatch@1002 : Record 1102;
      TemplateFilter@1001 : Text;
      BatchFilter@1000 : Text;
    BEGIN
      BatchFilter := GETFILTER("Journal Batch Name");
      IF BatchFilter <> '' THEN BEGIN
        TemplateFilter := GETFILTER("Journal Template Name");
        IF TemplateFilter <> '' THEN
          CostJournalBatch.SETFILTER("Journal Template Name",TemplateFilter);
        CostJournalBatch.SETFILTER(Name,BatchFilter);
        CostJournalBatch.FINDFIRST;
      END;

      EXIT((("Journal Batch Name" <> '') AND ("Journal Template Name" = '')) OR (BatchFilter <> ''));
    END;

    BEGIN
    END.
  }
}

