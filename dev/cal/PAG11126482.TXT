OBJECT Page 11126482 Project Cost Plus Entries SF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Projektregieeintr„ge;
               ENU=Project Cost Plus Entries;
               NLD=Projectregiemutaties;
               NOR=Rapportert selvkoster for prosjekt;
               SVE=Redovisade sj„lvkostnader f”r projekt];
    SourceTable=Table11012019;
    PageType=ListPart;
    OnInit=BEGIN
             "Cost ComponentEDITABLE" := FALSE;
           END;

    OnOpenPage=BEGIN
                 ProjSetup.GET();
                 "Cost ComponentEDITABLE" := ProjSetup."Cost Component Editable";
               END;

    OnAfterGetRecord=BEGIN
                       GetInvoicedQuantity;
                     END;

    OnNewRecord=BEGIN
                  GetInvoicedQuantity;
                  DetermineVATProdPostingGroup;
                  GetCurrency;  //DP00887
                  //T003311
                  SetSkipDetermineChargeable(FALSE);
                  DetermineChargeable;
                  //
                END;

    OnInsertRecord=BEGIN
                     SetSkipDetermineChargeable(TRUE); //T003311
                   END;

  }
  CONTROLS
  {
    { 1100528200;0;Container;
                ContainerType=ContentArea }

    { 1100528201;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100528202;2;Field  ;
                SourceExpr="Project No." }

    { 1100528203;2;Field  ;
                SourceExpr=Principal }

    { 1100528204;2;Field  ;
                SourceExpr="Principal Name" }

    { 1100528205;2;Field  ;
                SourceExpr="Commission No." }

    { 1100528206;2;Field  ;
                SourceExpr="Settl.Sheet No." }

    { 1100528207;2;Field  ;
                SourceExpr="Source Document";
                OnDrillDown=BEGIN
                              Navigate;  //db, 05-02-07
                            END;
                             }

    { 1100528208;2;Field  ;
                SourceExpr=Element }

    { 1100528209;2;Field  ;
                SourceExpr="Extension Contract" }

    { 1100528210;2;Field  ;
                SourceExpr=Room }

    { 1100528211;2;Field  ;
                SourceExpr="Room Description" }

    { 1100528212;2;Field  ;
                SourceExpr="Item No.";
                OnValidate=BEGIN
                             CALCFIELDS("Cost Type");
                             IF NOT (("Cost Type" = "Cost Type"::Material) OR ("Cost Object" = '')) THEN
                               ERROR('');
                           END;
                            }

    { 1100528213;2;Field  ;
                SourceExpr="Serial No." }

    { 1100528214;2;Field  ;
                SourceExpr="Lot No." }

    { 1100528215;2;Field  ;
                SourceExpr=Manufacturer;
                OnValidate=BEGIN
                             CALCFIELDS("Cost Type");
                             IF NOT (("Cost Type" = "Cost Type"::Material) OR ("Cost Object" = '')) THEN
                               ERROR('');
                           END;
                            }

    { 1100528216;2;Field  ;
                SourceExpr="Basic Item";
                OnValidate=BEGIN
                             CALCFIELDS("Cost Type");
                             IF NOT (("Cost Type" = "Cost Type"::Material) OR ("Cost Object" = '')) THEN
                               ERROR('');
                           END;
                            }

    { 1100528217;2;Field  ;
                SourceExpr="Vendor (Trade Item)";
                OnValidate=BEGIN
                             CALCFIELDS("Cost Type");
                             IF NOT (("Cost Type" = "Cost Type"::Material) OR ("Cost Object" = '')) THEN
                               ERROR('');
                           END;
                            }

    { 1100528218;2;Field  ;
                SourceExpr="Trade Item";
                OnValidate=BEGIN
                             CALCFIELDS("Cost Type");
                             IF NOT (("Cost Type" = "Cost Type"::Material) OR ("Cost Object" = '')) THEN
                               ERROR('');
                           END;

                OnAssistEdit=BEGIN
                               HandleItemAssistEdit(3);
                             END;
                              }

    { 1100528219;2;Field  ;
                SourceExpr="Cost Object" }

    { 1100528220;2;Field  ;
                SourceExpr="Cost Component";
                Editable="Cost ComponentEDITABLE" }

    { 1100528221;2;Field  ;
                SourceExpr="Cost Type" }

    { 1100528222;2;Field  ;
                SourceExpr="Employee No.";
                OnValidate=BEGIN
                             CALCFIELDS("Cost Type");
                             IF NOT (("Cost Type" = "Cost Type"::Labor) AND ("Cost Object" <> '')) THEN
                               ERROR('');
                           END;
                            }

    { 1100528223;2;Field  ;
                SourceExpr="Name Employee";
                Visible=false }

    { 1100528224;2;Field  ;
                SourceExpr="Wage Component" }

    { 1100528225;2;Field  ;
                SourceExpr="Description Wage Component" }

    { 1100528226;2;Field  ;
                SourceExpr=Description }

    { 1100528227;2;Field  ;
                SourceExpr="Description 2" }

    { 1100528228;2;Field  ;
                SourceExpr=Quantity }

    { 1100528500;2;Field  ;
                SourceExpr="Dimensional Factor";
                Visible=FALSE }

    { 1100528229;2;Field  ;
                SourceExpr="Reconcilation ID" }

    { 1100528230;2;Field  ;
                SourceExpr="Unit of Measure" }

    { 1100528231;2;Field  ;
                SourceExpr="Quantity Project Ledger" }

    { 1100528232;2;Field  ;
                SourceExpr="Quantity Posted Hour Line" }

    { 1100528233;2;Field  ;
                SourceExpr="Hour Rate Code";
                OnValidate=BEGIN
                             CALCFIELDS("Cost Type");
                             IF NOT (("Cost Type" = "Cost Type"::Labor) AND ("Cost Object" <> '')) THEN
                               ERROR('');
                           END;

                OnLookup=VAR
                           HourRateRec@1100528201 : Record 11012022;
                           Desc@1100528200 : Text[50];
                         BEGIN
                           IF "Reference Date" = 0D THEN
                             "Reference Date" := FillReferenceDate;

                           HourRateRec.SETRANGE("Project Filter", "Project No.");
                           HourRateRec.SETRANGE("Principal Filter", Principal);
                           HourRateRec.SETFILTER("Service Contract Filter", '%1', '');
                           HourRateRec.SETRANGE("Date Filter", 0D, "Reference Date");
                           IF PAGE.RUNMODAL(0, HourRateRec) = ACTION::LookupOK THEN BEGIN
                             Desc := Description;
                             SetValidateHourRateCode(TRUE);
                             VALIDATE("Hour Rate Code",HourRateRec.Code);
                             IF ProjSetup."Description Cost Plus Entry" <> ProjSetup."Description Cost Plus Entry"::RateCode THEN
                               Description := Desc;
                             CurrPage.UPDATE(TRUE);
                           END;
                         END;
                          }

    { 1100528234;2;Field  ;
                SourceExpr="Sales Surcharge Overtime %" }

    { 1100528235;2;Field  ;
                SourceExpr="Gross Price (LCY)" }

    { 1100525000;2;Field  ;
                SourceExpr="Gross Price (FCY)" }

    { 1100528236;2;Field  ;
                SourceExpr="Purchase Discount % (Item)" }

    { 1100528237;2;Field  ;
                SourceExpr="Cost Price (LCY)" }

    { 1100525001;2;Field  ;
                SourceExpr="Cost Price (FCY)" }

    { 1100525010;2;Field  ;
                SourceExpr="Currency Code Costs" }

    { 1100528238;2;Field  ;
                SourceExpr="Sales Discount % (Item)" }

    { 1100528239;2;Field  ;
                SourceExpr="Basic Price (LCY)" }

    { 1100525002;2;Field  ;
                SourceExpr="Basic Price (FCY)" }

    { 1100528240;2;Field  ;
                SourceExpr="Basic Price Found at" }

    { 1100528241;2;Field  ;
                SourceExpr="Surcharge %" }

    { 1100528242;2;Field  ;
                SourceExpr="Surcharge Amount (LCY)" }

    { 1100525003;2;Field  ;
                SourceExpr="Surcharge Amount (FCY)" }

    { 1100528243;2;Field  ;
                SourceExpr="Sales Price (LCY)" }

    { 1100525004;2;Field  ;
                SourceExpr="Sales Price (FCY)" }

    { 1100525009;2;Field  ;
                SourceExpr="Currency Code" }

    { 1100525008;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Sales Amount (LCY)";
                AutoFormatType=1 }

    { 1100525007;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Sales Amount (FCY)";
                AutoFormatType=1 }

    { 1100525006;2;Field  ;
                SourceExpr="Cost Amount (LCY)" }

    { 1100525005;2;Field  ;
                SourceExpr="Cost Amount (FCY)" }

    { 1100528244;2;Field  ;
                SourceExpr="VAT Prod. Posting Group" }

    { 1100528246;2;Field  ;
                SourceExpr="From Date";
                OnValidate=BEGIN
                             CALCFIELDS("Cost Type");
                             IF NOT (("Cost Type" = "Cost Type"::Labor) AND ("Cost Object" <> '')) THEN
                               ERROR('');
                           END;
                            }

    { 1100528247;2;Field  ;
                SourceExpr="From Time";
                OnValidate=BEGIN
                             CALCFIELDS("Cost Type");
                             IF NOT (("Cost Type" = "Cost Type"::Labor) AND ("Cost Object" <> '')) THEN
                               ERROR('');
                           END;
                            }

    { 1100528248;2;Field  ;
                SourceExpr="To Date";
                OnValidate=BEGIN
                             CALCFIELDS("Cost Type");
                             IF NOT (("Cost Type" = "Cost Type"::Labor) AND ("Cost Object" <> '')) THEN
                               ERROR('');
                           END;
                            }

    { 1100528249;2;Field  ;
                SourceExpr="To Time";
                OnValidate=BEGIN
                             CALCFIELDS("Cost Type");
                             IF NOT (("Cost Type" = "Cost Type"::Labor) AND ("Cost Object" <> '')) THEN
                               ERROR('');
                           END;
                            }

    { 1100528250;2;Field  ;
                SourceExpr=Chargeable }

    { 1100528251;2;Field  ;
                SourceExpr="Invoiced Quantity" }

    { 1100528252;2;Field  ;
                SourceExpr="Invoiced Price" }

    { 1100528253;2;Field  ;
                SourceExpr="Invoice in Process" }

    { 1100528254;2;Field  ;
                SourceExpr="Credit Memo in Process" }

    { 1100528255;2;Field  ;
                SourceExpr="Creation Date" }

    { 1100528256;2;Field  ;
                SourceExpr="Last Date Modified" }

    { 1100528257;2;Field  ;
                SourceExpr="Entry No. Project Ledger" }

    { 1100528258;2;Field  ;
                SourceExpr=Vendor }

    { 1100528259;2;Field  ;
                SourceExpr="Vendor Name" }

    { 1100528264;2;Field  ;
                SourceExpr="Invoiced Quantity Pr. Ledger" }

    { 1100528265;2;Field  ;
                SourceExpr="Invoiced Price Pr. Ledger" }

    { 1100528266;2;Field  ;
                CaptionML=[DEU=Fakt. Anzahl gebuchter Stunden;
                           ENU=Invoiced Quantity Posted Hour Line;
                           NLD=Gefactureerd aantal geboekte uren;
                           NOR=Linje for fakturert antall bokf›rte timer;
                           SVE=Rad f”r fakturerat antal bokf”rda timmar];
                SourceExpr=InvoicedQuantityPostedHourLine;
                Editable=FALSE }

    { 1100528260;2;Field  ;
                SourceExpr=Processed }

    { 1100528261;2;Field  ;
                SourceExpr="Posting Date Costs" }

    { 1100528262;2;Field  ;
                SourceExpr="Execution Date" }

  }
  CODE
  {
    VAR
      ProjSetup@1100528202 : Record 315;
      InvoicedQuantityPostedHourLine@1100528200 : Decimal;
      "Cost ComponentEDITABLE"@1100528203 : Boolean INDATASET;

    PROCEDURE ShowToBeInvoicedEntries@1100528600(Show@1100528600 : Boolean);
    BEGIN
      IF Show THEN BEGIN
        SETRANGE(Chargeable, TRUE);
        SETRANGE(Invoiced, FALSE);
      END ELSE BEGIN
        SETRANGE(Chargeable);
        SETRANGE(Invoiced);
      END;
    END;

    PROCEDURE ShowSettlementSheetCard@1100528601();
    VAR
      SettlementSheet@1100528600 : Record 11012021;
    BEGIN
      IF NOT SettlementSheet.GET("Settl.Sheet No.") THEN EXIT;
        PAGE.RUNMODAL(PAGE::"Settlement Sheet", SettlementSheet);
    END;

    LOCAL PROCEDURE GetInvoicedQuantity@1100525000();
    VAR
      ProjectCostPlusEntry@1100525000 : Record 11012019;
    BEGIN
      InvoicedQuantityPostedHourLine :=  0;
      IF (ProjSetup."Project Cost Plus Hours from" = ProjSetup."Project Cost Plus Hours from"::"Posted Hours") AND
         ("Posted Hour Line No." > 0) THEN
      BEGIN
        ProjectCostPlusEntry.SETCURRENTKEY("Posted Hour Year","Posted Hour Week","Employee No.","Posted Hour Line No.");
        ProjectCostPlusEntry.SETRANGE("Posted Hour Year", "Posted Hour Year" );
        ProjectCostPlusEntry.SETRANGE("Posted Hour Week", "Posted Hour Week" );
        ProjectCostPlusEntry.SETRANGE("Posted Hour Line No.", "Posted Hour Line No." );
        ProjectCostPlusEntry.SETRANGE("Employee No.", "Employee No.");
        IF ProjectCostPlusEntry.FIND('-') THEN
          REPEAT
            ProjectCostPlusEntry.CALCFIELDS("Invoiced Quantity");
            InvoicedQuantityPostedHourLine := InvoicedQuantityPostedHourLine + ProjectCostPlusEntry."Invoiced Quantity";
          UNTIL ProjectCostPlusEntry.NEXT = 0;
      END;
    END;

    PROCEDURE HandleItemAssistEdit@1100528302(ZoomType@1210190000 : Integer);
    BEGIN
      AssistEditItemData(ZoomType);
      IF ZoomType = -1 THEN
        CurrPage.UPDATE(TRUE);
    END;

    BEGIN
    END.
  }
}

