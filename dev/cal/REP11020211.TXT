OBJECT Report 11020211 VAT- ICL fill Vat Nr.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,(eVAT1.00);
  }
  PROPERTIES
  {
    CaptionML=[DEU=Zusammenfass. fÅllen USt-IdNr.  in MwSt.-Posten;
               ENU=VAT- ICL fill Vat Nr.;
               NLD=BTW-Intracomm. vullen BTW Nr in BTW Posten;
               NOR=Moms-ICL fyll ut momsnr];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   FileName := Text1000000;
                 END;

    OnPreReport=BEGIN
                  IF FileName = '' THEN
                    ERROR(Text1000001)
                  ELSE
                    IF STRPOS(FileName, Text1000002) = 0 THEN
                      ERROR(Text1000003);

                  RepMonth := DATE2DMY(StartDate,2);
                  IF (DATE2DMY(StartDate,1) <> 1) OR (NOT (RepMonth IN [1,4,7,10])) THEN
                    ERROR(Text1000004);

                  CompanyInfo.GET;
                  CompanyInfo.TESTFIELD("VAT Registration No.");

                  RecordEntryNo := 1;
                  RecordCount := 0;
                END;

    UseRequestPage=Yes;
  }
  DATASET
  {
    { 7612;    ;DataItem;                    ;
               DataItemTable=Table254;
               DataItemTableView=SORTING(Type,Country/Region Code,Bill-to/Pay-to No.,VAT Bus. Posting Group,VAT Prod. Posting Group,Posting Date)
                                 WHERE(Type=CONST(Sale),
                                       VAT Calculation Type=CONST(Reverse Charge VAT),
                                       Document Type=FILTER(Invoice|Credit Memo));
               OnPreDataItem=BEGIN
                               "VAT Entry".SETRANGE("Posting Date", StartDate, "Ending Date");
                               Errors := FALSE;
                             END;

               OnAfterGetRecord=VAR
                                  Cust@1000000 : Record 18;
                                  SalesInv@1000001 : Record 112;
                                  SalesCrMemo@1000002 : Record 114;
                                BEGIN
                                  CASE "Document Type" OF
                                    "Document Type"::Invoice:
                                      IF SalesInv.GET("Document No.") THEN BEGIN
                                        IF SalesInv."VAT Registration No." <> '' THEN BEGIN
                                          "VAT Entry"."VAT Registration No." := SalesInv."VAT Registration No.";
                                          "VAT Entry"."Country/Region Code" := SalesInv."Ship-to Country/Region Code";
                                          "VAT Entry".MODIFY;
                                        END ELSE
                                          ;//DecimalNumeralZeroFormat(STRSUBSTNO(Text1000006, "Document No."));
                                      END ELSE BEGIN
                                        IF ("Bill-to/Pay-to No." <> '') THEN BEGIN
                                          Cust.GET("Bill-to/Pay-to No.");
                                          IF Cust."VAT Registration No." <> '' THEN BEGIN
                                            "VAT Entry"."VAT Registration No." := Cust."VAT Registration No.";
                                            "VAT Entry"."Country/Region Code" := Cust."Country/Region Code";
                                            "VAT Entry".MODIFY;
                                          END ELSE
                                            ;//DecimalNumeralZeroFormat(STRSUBSTNO(Text1000007,"VAT Entry"."Sell-to/Buy-from No."));
                                        END ELSE
                                          ;//DecimalNumeralZeroFormat(STRSUBSTNO(Text1000008, "Document No."));
                                      END;
                                    "Document Type"::"Credit Memo":
                                      IF SalesCrMemo.GET("Document No.") THEN BEGIN
                                        IF SalesCrMemo."VAT Registration No." <> '' THEN BEGIN
                                          "VAT Entry"."VAT Registration No." := SalesCrMemo."VAT Registration No.";
                                          "VAT Entry"."Country/Region Code" := SalesCrMemo."Ship-to Country/Region Code";
                                          "VAT Entry".MODIFY;
                                        END ELSE
                                          ;//DecimalNumeralZeroFormat(STRSUBSTNO(Text1000009, "Document No."));
                                      END ELSE BEGIN
                                        IF ("Bill-to/Pay-to No." <> '') THEN BEGIN
                                          Cust.GET("Bill-to/Pay-to No.");
                                          IF Cust."VAT Registration No." <> '' THEN BEGIN
                                            "VAT Entry"."VAT Registration No." := Cust."VAT Registration No.";
                                            "VAT Entry"."Country/Region Code" := Cust."Country/Region Code";
                                            "VAT Entry".MODIFY;
                                          END ELSE
                                            ;//DecimalNumeralZeroFormat(STRSUBSTNO(Text1000007,"Sell-to/Buy-from No."));
                                        END ELSE
                                          ;//DecimalNumeralZeroFormat(STRSUBSTNO(Text1000010, "Document No."));
                                      END;
                                  END;
                                END;

               ReqFilterFields=VAT Bus. Posting Group,VAT Prod. Posting Group }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=[DEU=Zusammenfassende Meldung Disk;
                 ENU=VAT- VIES Declaration Disk;
                 NLD=BTW-Intracomm. opgave Diskette;
                 NOR=EU-mva. - brukes ikke i Norge;
                 SVE=Moms-/kvartalredov. disk];
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1   ;2   ;Field     ;
                  CaptionML=[DEU=Dateiname;
                             ENU=File Name;
                             NLD=Bestandsnaam;
                             NOR=Filnavn;
                             SVE=Filnamn];
                  SourceExpr=FileName }

      { 3   ;2   ;Field     ;
                  CaptionML=[DEU=Startdatum Quartal;
                             ENU=Start date quarter;
                             NLD=Begindatum kwartaal;
                             NOR=Startdatokvartal];
                  SourceExpr=StartDate }

      { 5   ;2   ;Field     ;
                  CaptionML=[DEU=BetrÑge in BerichtswÑhrung ausgeben;
                             ENU=Show Amounts in Add. Reporting Currency;
                             NLD=Bedragen in rapp.-valuta tonen;
                             NOR=Vis belõp i tilleggsrapp.valuta;
                             SVE=Visa belopp i alt. rapporteringsvaluta];
                  SourceExpr="Reporting Currency";
                  MultiLine=Yes }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text1000000@1000000 : TextConst 'ENU=a:\ICTB002;NLD=a:\ICTB002;NOR=a:\ICTB002';
      Text1000001@1000001 : TextConst 'ENU=Please enter the file name.;NLD=Geef een bestandsnaam op.;NOR=Skriv inn filnavn.;SVE=Skriv in filnamn.';
      Text1000002@1000002 : TextConst 'ENU=ICTB002;NLD=ICTB002;NOR=ICTB002';
      Text1000003@1000003 : TextConst 'ENU=File name must be ICTB002.;NLD=Bestandsnaam moet ICTB002 zijn.;NOR=Filnavnet mÜ vëre ICTB002.';
      Text1000004@1000004 : TextConst 'ENU=Start date must be the first day of a quarter.;NLD=De begindatum moet de eerste dag van een kwartaal zijn.;NOR=Startdatoen mÜ vëre den fõrste dagen i et kvartal.';
      CompanyInfo@1000023 : Record 79;
      Errors@1000027 : Boolean;
      FileName@1000028 : Text[250];
      RecordCount@1000030 : Integer;
      "Reporting Currency"@1000031 : Boolean;
      RecordEntryNo@1000033 : Integer;
      RepMonth@1000035 : Integer;
      StartDate@1000036 : Date;
      "Ending Date"@1000037 : Date;

    PROCEDURE CheckYearQuarter@1000002();
    BEGIN
      "Ending Date" := CALCDATE('<+1Q-1D>', StartDate);  //db, 16-03-11
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

