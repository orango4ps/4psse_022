OBJECT Codeunit 11128105 Bankgiro Mgmt
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            MarketingSetup.GET();


            FileFind.RESET();
            FileFind.SETRANGE(Path, MarketingSetup."Path to Bankgiro");
            FileFind.SETRANGE("Is a file", TRUE);
            IF FileFind.FINDSET(FALSE) THEN REPEAT
               //IF NOT CONFIRM(FileFind.Name) THEN EXIT; Commented 150326
               IF (ReadFile(MarketingSetup."Path to Bankgiro" + '\' + FileFind.Name)) THEN BEGIN // File processed.


                  FILE.COPY(MarketingSetup."Path to Bankgiro" + '\' + FileFind.Name, MarketingSetup."Path to Bankgiro"
                     + '\Read\'+ FileFind.Name);
                  FILE.ERASE(MarketingSetup."Path to Bankgiro" + '\' + FileFind.Name);

               END;
            UNTIL FileFind.NEXT = 0;
          END;

  }
  CODE
  {
    VAR
      inFile@1100285000 : File;
      ReadStr@1100285001 : Text[1024];
      MarketingSetup@1100285002 : Record 5079;
      FileFind@1100285004 : Record 2000000022;
      Type_FillAll@1100285003 : Boolean;
      Type_Update@1100285005 : Boolean;
      BankgiroInformation@1100285006 : Record 11128105;
      RowFound@1100285007 : Boolean;

    PROCEDURE ReadFile@1100285002(Filename@1100285000 : Text[1024]) Return : Boolean;
    BEGIN
      Return := FALSE;


      inFile.WRITEMODE := FALSE;
      inFile.TEXTMODE := TRUE;

      IF NOT (inFile.OPEN(Filename)) THEN BEGIN
         EXIT;
      END;

      REPEAT
         inFile.READ(ReadStr);
         HandleTextLine(ReadStr);
         COMMIT;

      // do something with vstring
      UNTIL inFile.POS >= inFile.LEN;



      inFile.CLOSE;
      Return := TRUE;
    END;

    PROCEDURE HandleTextLine@1100285008(TextLine@1100285000 : Text[1024]);
    VAR
      TextPart@1100285001 : Text[1024];
      I@1100285002 : Integer;
      Pos@1100285003 : Integer;
    BEGIN
      // What type of line is it? Read first two

      TextPart := COPYSTR(TextLine, 1, 2);



      CASE TextPart OF

         '01': BEGIN // START-post
            // First line of file, see if its update-file or First Register All -file
            IF (TextLine[74] = 'G') THEN
               Type_FillAll := TRUE
            ELSE
               Type_Update := TRUE;
         END;

         '02': BEGIN
            BankgiroInformation.INIT();
            CASE COPYSTR(TextLine, 29, 3) OF
               'UPD': BEGIN
                  RowFound := FALSE;
                  IF NOT(BankgiroInformation.GET(DeleteFirstZeros(COPYSTR(TextLine, 32, 10)))) THEN EXIT;
                  RowFound := TRUE;
                  IF (TextLine[42] = 'J') THEN
                     BankgiroInformation.Active := FALSE
                  ELSE
                     BankgiroInformation.Active := TRUE;
                  BankgiroInformation.VALIDATE(Name, Ansi2Ascii(DeleteSpaceAfter(COPYSTR(TextLine, 43, 35))));
                  IF (TextLine[79] <> ' ') THEN
                     BankgiroInformation.VALIDATE("COC No.", DeleteFirstZeros(COPYSTR(TextLine, 78, 12)))
                  ELSE
                     BankgiroInformation.VALIDATE("COC No.", DeleteFirstZeros(COPYSTR(TextLine, 80, 10)));
                  BankgiroInformation."Last Updated" := CREATEDATETIME(TODAY, TIME);
                  BankgiroInformation.MODIFY();
               END;
               'INS': BEGIN // Insert-statment
                  BankgiroInformation.VALIDATE("Bankgiro No.", DeleteFirstZeros(COPYSTR(TextLine, 32, 10)));
                  IF (TextLine[42] = 'J') THEN
                     BankgiroInformation.Active := FALSE
                  ELSE
                     BankgiroInformation.Active := TRUE;
                  BankgiroInformation.VALIDATE(Name, Ansi2Ascii(DeleteSpaceAfter(COPYSTR(TextLine, 43, 35))));
                  IF (TextLine[79] <> ' ') THEN
                     BankgiroInformation.VALIDATE("COC No.", DeleteFirstZeros(COPYSTR(TextLine, 78, 12)))
                  ELSE
                     BankgiroInformation.VALIDATE("COC No.", DeleteFirstZeros(COPYSTR(TextLine, 80, 10)));
                  BankgiroInformation."Last Updated" := CREATEDATETIME(TODAY, TIME);
                  IF BankgiroInformation.INSERT() THEN; // IME Bankgiro 150413 added IF to insert statment
                  RowFound := TRUE;
               END;
               'DEL': BEGIN
                  IF NOT(BankgiroInformation.GET(DeleteFirstZeros(COPYSTR(TextLine, 32, 10)))) THEN EXIT;
                  BankgiroInformation.DELETE();
               END;
            END;

         END;

         '03': BEGIN
            IF (COPYSTR(TextLine, 29, 3) = 'UPD') OR (COPYSTR(TextLine, 29, 3) = 'INS') THEN BEGIN
               BankgiroInformation.VALIDATE(Address, Ansi2Ascii(DeleteSpaceAfter(COPYSTR(TextLine, 42, 35))));

               // Different fields are used for foreign country addresses.
               IF (TextLine[112] = ' ') OR (TextLine[112] = '0') THEN BEGIN // No domestic address
                  BankgiroInformation.VALIDATE("Address 1", Ansi2Ascii(DeleteSpaceAfter(COPYSTR(TextLine, 77, 35))));
                  BankgiroInformation.VALIDATE(Country, Ansi2Ascii(DeleteSpaceAfter(COPYSTR(TextLine, 117, 35))));

               END ELSE BEGIN // Domestic Address
                  BankgiroInformation.VALIDATE("Address 1", Ansi2Ascii(DeleteSpaceAfter(COPYSTR(TextLine, 77, 35))));
                  BankgiroInformation.VALIDATE("Postal No.", Ansi2Ascii(DeleteSpaceAfter(COPYSTR(TextLine, 112, 5))));
                  BankgiroInformation.VALIDATE(City, Ansi2Ascii(DeleteSpaceAfter(COPYSTR(TextLine, 117, 35))));

               END;
               BankgiroInformation."Last Updated" := CREATEDATETIME(TODAY, TIME);

               IF (RowFound) THEN BankgiroInformation.MODIFY();
            END;

         END;

         '04': BEGIN // Post with complementary address content
            IF (COPYSTR(TextLine, 29, 3) = 'UPD') OR (COPYSTR(TextLine, 29, 3) = 'INS') THEN BEGIN
               BankgiroInformation.VALIDATE("Address 2", Ansi2Ascii(DeleteSpaceAfter(COPYSTR(TextLine, 42, 35))));
               BankgiroInformation.VALIDATE("Address 3", Ansi2Ascii(DeleteSpaceAfter(COPYSTR(TextLine, 77, 35))));
               BankgiroInformation.VALIDATE("Address 4", Ansi2Ascii(DeleteSpaceAfter(COPYSTR(TextLine, 112, 35))));
               BankgiroInformation."Last Updated" := CREATEDATETIME(TODAY, TIME);

               IF (RowFound) THEN BankgiroInformation.MODIFY();
            END;
         END;

         '07': BEGIN  // END-post
            // Do nothing
         END;
      END;
    END;

    PROCEDURE DeleteFirstZeros@1100285015(Handle@1100285000 : Text[100]) Return : Text[100];
    VAR
      Int@1100285001 : BigInteger;
    BEGIN
      EVALUATE(Int, Handle);
      Return := FORMAT(Int);
      IF (Return = '0') THEN Return := '';
    END;

    PROCEDURE DeleteSpaceAfter@1100285000(Text@1100285000 : Text[300]) Return : Text[300];
    VAR
      Pos@1100285001 : Integer;
    BEGIN
      Pos := STRLEN(Text);
      REPEAT
         Pos -= 1;
         IF (Pos <= 0) THEN BEGIN
            Return := '';
            EXIT;
         END;
      UNTIL (Text[Pos] <> ' ');
      Return := COPYSTR(Text, 1, Pos);
    END;

    PROCEDURE Ascii2Ansi@1100285035(_Text@1100285001 : Text[250]) : Text[200];
    VAR
      AsciiStr@1100285000 : Text[30];
      AnsiStr@1100285002 : Text[30];
      AE@1100285003 : Char;
      UE@1100285004 : Char;
      AA@1100285005 : Char;
      UA@1100285006 : Char;
    BEGIN
      AsciiStr := 'ÜÑîÅèéôöÇàäÉÖá';
      AE := 196;
      UE := 220;
      AA := 229;
      UA := 197;
      AnsiStr := FORMAT(AA)+'‰ˆ¸' + FORMAT(UA)+FORMAT(AE) + '÷' + FORMAT(UE) + 'ÈÍË‚‡Á';

      EXIT(CONVERTSTR(_Text,AsciiStr,AnsiStr));
    END;

    PROCEDURE Ansi2Ascii@1100285034(_Text@1100285000 : Text[250]) : Text[200];
    VAR
      AsciiStr@1100285006 : Text[30];
      AnsiStr@1100285005 : Text[30];
      AE@1100285004 : Char;
      UE@1100285003 : Char;
      AA@1100285002 : Char;
      UA@1100285001 : Char;
      FF@1100285007 : Char;
    BEGIN
      AsciiStr := 'ÜÑîÅèéôöÇàäÉÖá';
      AE := 196;
      UE := 220;
      AA := 229;
      UA := 197;
      FF:=12;
      AnsiStr := FORMAT(AA)+'‰ˆ¸' + FORMAT(UA)+FORMAT(AE) + '÷' + FORMAT(UE) + 'ÈÍË‚‡Á';
      _Text:=DELCHR(_Text,'=',FORMAT(FF));

      EXIT(CONVERTSTR(_Text,AnsiStr,AsciiStr));
    END;

    BEGIN
    {
      150326 ITERO.MH Commented Confirmation dialog
      150413 ITERO.MH Added IF to insert()-statement
    }
    END.
  }
}

