OBJECT Table 11071924 Service & Maintenance Cue
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Cue;
               NOR=Servicebunke-ikon;
               SVE=Stack-ikon fîr service];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              NOR=Primërnõkkel;
                                                              SVE=PrimÑrnyckel] }
    { 2   ;   ;Open Service Contracts;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count(Service-Contract WHERE (Status=FILTER(..Invoicing Allowed)));
                                                   CaptionML=[ENU=Open Service Contracts;
                                                              NOR=èpne servicekontrakter;
                                                              SVE=ôppna servicekontrakt];
                                                   Editable=No }
    { 3   ;   ;Open Service Contracts by User;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count(Service-Contract WHERE (Status=FILTER(..Invoicing Allowed),
                                                                                             Contract Manager=FIELD(Salesperson Filter)));
                                                   CaptionML=[ENU=Open Service Contracts by User;
                                                              NOR=èpne servicekontrakter etter bruker;
                                                              SVE=ôppna servicekontr. efter anv.];
                                                   Editable=No }
    { 4   ;   ;Open Maintenance Proposals;Integer ;FieldClass=FlowField;
                                                   CalcFormula=Count("Maintenance Proposal Header" WHERE (Completed=FILTER(No)));
                                                   CaptionML=[ENU=Open Maintenance Proposals;
                                                              NOR=èpne vedlikeholdsforslag;
                                                              SVE=ôppna underhÜllsfîrslag];
                                                   Editable=No }
    { 5   ;   ;Open Service Calls  ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Service Call" WHERE (Status=FILTER(..In Process),
                                                                                           Assigned to=FIELD(Employee Filter)));
                                                   CaptionML=[ENU=Open Service Calls;
                                                              NOR=èpne servicesamtaler;
                                                              SVE=ôppna servicesamtal];
                                                   Editable=No }
    { 6   ;   ;Open Service Orders ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Service Order" WHERE (Actual Reference Point (Gantt)=FIELD(Actual Ref Point Filter 3),
                                                                                            Assigned to=FIELD(Employee Filter)));
                                                   CaptionML=[ENU=Open Service Orders;
                                                              NOR=èpne serviceordre;
                                                              SVE=ôppna serviceorder];
                                                   Editable=No }
    { 7   ;   ;Open Service Orders (Plan);Integer ;FieldClass=FlowField;
                                                   CalcFormula=Count("Service Order" WHERE (Actual Reference Point (Gantt)=FIELD(FILTER(Actual Ref Point Filter 1)),
                                                                                            Assigned to=FIELD(FILTER(Employee Filter))));
                                                   CaptionML=[ENU=Open Service Orders (Plan);
                                                              NOR=èpne serviceordre (Planlagt);
                                                              SVE=ôppna serviceorder (Plenerad)];
                                                   Editable=No }
    { 8   ;   ;Open Service Orders (Review);Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Service Order" WHERE (Actual Reference Point (Gantt)=FIELD(FILTER(Actual Ref Point Filter 2)),
                                                                                            Assigned to=FIELD(FILTER(Employee Filter))));
                                                   CaptionML=[ENU=Open Service Orders (Review);
                                                              NOR=èpne serviceordre (gjennomgÜtt);
                                                              SVE=ôppna serviceorder (granskn.)];
                                                   Editable=No }
    { 100 ;   ;Employee Filter     ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Employee.No.;
                                                   CaptionML=[ENU=Employee Filter;
                                                              NOR=Ansattfilter;
                                                              SVE=Personalfilter] }
    { 110 ;   ;Actual Ref Point Filter 1;Integer  ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Acutal Reference Point (Gantt Chart) Filter 1;
                                                              NOR=Faktisk referansepunkt (Gantt-skjema) Filter 1;
                                                              SVE=Faktisk ref.p.(Gantsch.)filt.1];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 120 ;   ;Actual Ref Point Filter 2;Integer  ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Acutal Reference Point (Gantt Chart) Filter 2;
                                                              NOR=Faktisk referansepunkt (Gantt-skjema) filter 2;
                                                              SVE=Faktisk ref.p.(Gantsch.)filt.2];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 125 ;   ;Actual Ref Point Filter 3;Integer  ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Acutal Reference Point (Gantt Chart) Filter 3;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 130 ;   ;Salesperson Filter  ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Salesperson Filter;
                                                              NOR=Selgerfilter;
                                                              SVE=SÑljarfilter] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE CountCues@1100525000(FieldNumber@1100525000 : Integer) : Integer;
    VAR
      ServiceContract@1100525001 : Record 11012812;
      ServiceCall@1100525003 : Record 11012822;
      ServiceOrder@1100525004 : Record 11012823;
      ServiceSetup@1100528800 : Record 11012800;
    BEGIN
      //**4PS C015772
      CASE FieldNumber OF
        FIELDNO("Open Service Contracts"):
          BEGIN
            ServiceContract.DPA_SetFilters('Page 11012825');
            ServiceContract.SETFILTER(Status,'..%1',ServiceContract.Status::"Invoicing Allowed");
            EXIT(ServiceContract.COUNT);
          END;
        FIELDNO("Open Service Contracts by User"):
          BEGIN
            ServiceContract.DPA_SetFilters('Page 11012825');
            ServiceContract.SETFILTER(Status,'..%1',ServiceContract.Status::"Invoicing Allowed");
            COPYFILTER("Salesperson Filter",ServiceContract."Contract Manager");
            EXIT(ServiceContract.COUNT);
          END;
        FIELDNO("Open Maintenance Proposals"):
          EXIT("Open Maintenance Proposals");
        FIELDNO("Open Service Calls"):
          BEGIN
            ServiceCall.DPA_SetFilters('Page 11012828');
            ServiceCall.SETFILTER(Status,'..%1',ServiceCall.Status::"In Process");
            COPYFILTER("Employee Filter",ServiceCall."Assigned to");
            EXIT(ServiceCall.COUNT);
          END;
        FIELDNO("Open Service Orders"):
          BEGIN
            ServiceOrder.DPA_SetFilters('Page 11012830');
            ServiceSetup.GET;
            COPYFILTER("Actual Ref Point Filter 3",ServiceOrder."Actual Reference Point (Gantt)");
            COPYFILTER("Employee Filter",ServiceOrder."Assigned to");
            EXIT(ServiceOrder.COUNT);
          END;
        FIELDNO("Open Service Orders (Plan)"):
          BEGIN
            ServiceOrder.DPA_SetFilters('Page 11012830');
            COPYFILTER("Actual Ref Point Filter 1",ServiceOrder."Actual Reference Point (Gantt)");
            COPYFILTER("Employee Filter",ServiceOrder."Assigned to");
            EXIT(ServiceOrder.COUNT);
          END;
        FIELDNO("Open Service Orders (Review)"):
          BEGIN
            ServiceOrder.DPA_SetFilters('Page 11012830');
            COPYFILTER("Actual Ref Point Filter 2",ServiceOrder."Actual Reference Point (Gantt)");
            COPYFILTER("Employee Filter",ServiceOrder."Assigned to");
            EXIT(ServiceOrder.COUNT);
          END;
      END;
    END;

    LOCAL PROCEDURE GetOpenGlazingCallsDS@1100525003(VAR OGlazingServiceCall@1100525000 : Record 11125777);
    VAR
      UserSetup@1100525001 : Record 91;
    BEGIN
      OGlazingServiceCall.SETFILTER(Status,'..%1', OGlazingServiceCall.Status::"In Progress");
      IF UserSetup.GET(USERID) THEN
        OGlazingServiceCall.SETRANGE("Order Manager", UserSetup."Employee No.");
    END;

    PROCEDURE GetOpenGlazingCalls@1100525001() : Integer;
    VAR
      GlazingServiceCall@1100525002 : Record 11125777;
      InstallationMgt@1100525000 : Codeunit 11012268;
    BEGIN
      IF InstallationMgt.LicensePermissionForTableData(DATABASE::"Glazing Service Call") THEN BEGIN
        GetOpenGlazingCallsDS(GlazingServiceCall);
        EXIT(GlazingServiceCall.COUNT);
      END ELSE
        EXIT(0);
    END;

    PROCEDURE ShowOpenGlazingCalls@1100525002();
    VAR
      GlazingServiceCall@1100525000 : Record 11125777;
    BEGIN
      GetOpenGlazingCallsDS(GlazingServiceCall);
      PAGE.RUN(0, GlazingServiceCall);
    END;

    BEGIN
    END.
  }
}

