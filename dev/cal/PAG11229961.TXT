OBJECT Page 11229961 Plant Maintenance Arrangements
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Werkzeugwartungsvertr„ge;
               ENU=Plant Maintenance Arrangements;
               NLD=Materieelonderhoudsafspraken];
    InsertAllowed=No;
    SourceTable=Table11126146;
    DelayedInsert=Yes;
    DataCaptionFields=Plant No.;
    PageType=List;
    PromotedActionCategoriesML=[DEU=Neu,Verarbeiten,Liste,Vereinbarungen,Funktionen;
                                ENU=New,Process,Report,Arrangements,Functions;
                                NLD=Nieuw,Proces,Lijst,Afspraken,Functies];
    OnInit=BEGIN
             LineEditable := TRUE;
           END;

    OnOpenPage=VAR
                 PlantSetup@1100529000 : Record 11012550;
               BEGIN


                 IF EndingDate = 0D THEN BEGIN
                   PlantSetup.GET;
                   IF FORMAT(PlantSetup."Plan. Horz. Maint.Arrangements") = '' THEN
                     EndingDate := CALCDATE('<CY>')  //31-12 current year
                   ELSE
                     EndingDate := CALCDATE(PlantSetup."Plan. Horz. Maint.Arrangements", TODAY);
                 END;
                 SaveEndingDate := EndingDate;
                 UpdateEnabled := (SelectionLevel >= SelectionLevel::PlantType);
               END;

    OnAfterGetRecord=BEGIN
                       UpdateEditable();
                       IF EndingDate = 0D THEN
                         EndingDate := SaveEndingDate;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateEditable();
                           IF EndingDate = 0D THEN
                             EndingDate := SaveEndingDate;
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100529002;1 ;ActionGroup;
                      CaptionML=[DEU=Vereinbarungen;
                                 ENU=Arrangements;
                                 NLD=Afspraken] }
      { 1100526228;2 ;Action    ;
                      CaptionML=[DEU=Aktualisieren;
                                 ENU=Update;
                                 NLD=Bijwerken];
                      Promoted=Yes;
                      Enabled=UpdateEnabled;
                      PromotedIsBig=Yes;
                      Image=RefreshLines;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 PlantMaintenanceScheme@1100526200 : Record 11072677;
                                 PlantMaintenanceManagement@1100529000 : Codeunit 11012872;
                               BEGIN
                                 CASE SelectionLevel OF
                                   SelectionLevel::MaintScheme:
                                     BEGIN
                                       IF PlantMaintenanceScheme.GET("Plant Type", "Plant No.", "Maintenance Scheme") THEN
                                         PlantMaintenanceManagement.UpdatePlantNoMaintSchemeArrangements(PlantMaintenanceScheme, EndingDate, TRUE, TRUE);
                                     END;
                                   SelectionLevel::PlantNo,
                                   SelectionLevel::PlantType:
                                     BEGIN
                                       TESTFIELD("Plant Type");
                                       PlantMaintenanceScheme.SETRANGE("Plant Type", "Plant Type");
                                       IF SelectionLevel = SelectionLevel::PlantNo THEN BEGIN
                                         TESTFIELD("Plant No.");
                                         PlantMaintenanceScheme.SETRANGE("Plant No.", "Plant No.");
                                       END;
                                       IF PlantMaintenanceScheme.FINDSET THEN BEGIN
                                         REPEAT
                                           PlantMaintenanceManagement.UpdatePlantNoMaintSchemeArrangements(PlantMaintenanceScheme, EndingDate, FALSE, TRUE);
                                         UNTIL PlantMaintenanceScheme.NEXT = 0;
                                       END;
                                     END;
                                 END;
                               END;
                                }
      { 1100528626;2 ;Action    ;
                      CaptionML=[DEU=Storniert;
                                 ENU=Cancelled;
                                 NLD=Vervallen];
                      PromotedIsBig=Yes;
                      Image=CancelAllLines;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 PlantMaintenanceArrangement@1100528600 : Record 11126146;
                                 PlantMaintenanceManagement@1100529000 : Codeunit 11012872;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(PlantMaintenanceArrangement);
                                 IF PlantMaintenanceArrangement.ISEMPTY THEN
                                   ERROR(Text000);
                                 PlantMaintenanceManagement.SetPlantMaintArrangementCancelled(PlantMaintenanceArrangement, TRUE);
                               END;
                                }
      { 1100529003;1 ;ActionGroup;
                      CaptionML=[DEU=Funktionen;
                                 ENU=Functions;
                                 NLD=Functies] }
      { 1100528614;2 ;Action    ;
                      CaptionML=[DEU=Wartungsvorschlag erstellen;
                                 ENU=Create Maintenance Proposal;
                                 NLD=Onderhoudsvoorstel aanmaken];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MaintenanceRegistrations;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 CreateProposal(FALSE);
                               END;
                                }
      { 1100528613;2 ;Action    ;
                      CaptionML=[DEU=Wartungsvorschlag und Serviceauftr„ge erstellen;
                                 ENU=Create Maintenance Proposal and Service Orders;
                                 NLD=Onderhoudsvoorstel en serviceorders aanmaken];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 CreateProposal(TRUE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100526200;1;Group  ;
                GroupType=Repeater }

    { 1100526201;2;Field  ;
                SourceExpr="Plant Type" }

    { 1100526203;2;Field  ;
                SourceExpr="Plant No." }

    { 1100528625;2;Field  ;
                SourceExpr="Plant Description" }

    { 1100529000;2;Field  ;
                SourceExpr="Inspection No.";
                Visible=FALSE }

    { 1100526207;2;Field  ;
                SourceExpr="Maintenance Scheme" }

    { 1100525000;2;Field  ;
                SourceExpr="Maintenance Scheme Description";
                Visible=FALSE }

    { 1100528600;2;Field  ;
                SourceExpr="Inspection Type" }

    { 1100529001;2;Field  ;
                SourceExpr="Inspection Type Description";
                Visible=FALSE }

    { 1100526211;2;Field  ;
                SourceExpr="Maintenance Year";
                Editable=LineEditable }

    { 1100526213;2;Field  ;
                SourceExpr="Maintenance Week";
                Editable=LineEditable }

    { 1100526215;2;Field  ;
                SourceExpr="Maintenance Day";
                Visible=FALSE;
                Editable=LineEditable }

    { 1100526237;2;Field  ;
                SourceExpr="Theoretical Maintenance Date" }

    { 1100526226;2;Field  ;
                SourceExpr="Maintenance Date" }

    { 1100526233;2;Field  ;
                SourceExpr="Firm Planned";
                Editable=LineEditable }

    { 1100526224;2;Field  ;
                SourceExpr="Interval Maintenance" }

    { 1100529004;2;Field  ;
                SourceExpr=Meter }

    { 1100529005;2;Field  ;
                SourceExpr="Meter Reading Type" }

    { 1100529011;2;Field  ;
                SourceExpr="Total Meter Reading Maint.";
                Editable=LineEditable }

    { 1100529006;2;Field  ;
                SourceExpr="Unit of Measure (Meter)";
                Visible=FALSE }

    { 1100529007;2;Field  ;
                SourceExpr="Interval Meter Reading" }

    { 1100529008;2;Field  ;
                SourceExpr="Specific Meter Reading" }

    { 1100528611;2;Field  ;
                SourceExpr=Comment;
                Editable=LineEditable }

    { 1100528612;2;Field  ;
                SourceExpr=Cancelled;
                Editable=LineEditable }

    { 1100526229;2;Field  ;
                Lookup=No;
                SourceExpr="Maintenance Proposal No.";
                OnDrillDown=BEGIN
                              DrillDownMaintenanceProposal(FALSE);
                            END;
                             }

    { 1100526217;2;Field  ;
                DrillDown=No;
                SourceExpr="Planned Maintenance Date" }

    { 1100526231;2;Field  ;
                Lookup=No;
                SourceExpr="Service Order No.";
                OnDrillDown=BEGIN
                              DrillDownServiceOrder;
                            END;
                             }

    { 1100528616;1;Group  ;
                GroupType=Group }

    { 1100528615;2;Field  ;
                CaptionML=[DEU=Enddatum;
                           ENU=Ending Date;
                           NLD=Einddatum];
                NotBlank=Yes;
                SourceExpr=EndingDate;
                OnValidate=BEGIN
                             IF EndingDate < TODAY THEN
                               ERROR(Text001);
                             SaveEndingDate := EndingDate;
                           END;
                            }

    { 1100529010;0;Container;
                ContainerType=FactBoxArea }

    { 1100529009;1;Part   ;
                SubPageLink=Plant Type=FIELD(Plant Type),
                            Plant No.=FIELD(Plant No.),
                            Maintenance Scheme=FIELD(Maintenance Scheme),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11229962;
                PartType=Page }

  }
  CODE
  {
    VAR
      EndingDate@1100526200 : Date;
      SaveEndingDate@1100529000 : Date;
      SelectionLevel@1100529005 : ' ,PlantType,PlantNo,MaintScheme';
      LineEditable@19038698 : Boolean INDATASET;
      Text000@1100528606 : TextConst 'DEU=Zuerst Zeilen w„hlen;ENU=Select lines first;NLD=Eerst regels selecteren';
      Text001@1100529001 : TextConst 'DEU=Enddatum darf nicht kleiner als heutiges Datum sein;ENU=Ending date may not be less than current date;NLD=Einddatum mag niet kleiner zijn dan huidige datum';
      UpdateEnabled@1100529006 : Boolean INDATASET;
      Text002@1100529002 : TextConst 'DEU=Erstellen Sie nur Vorschl„ge, wenn die Vereinbarungen aktualisiert sind!\\Wartungsvorschl„ge erstellen, sind Sie sich sicher?;ENU="Only create proposals if the arrangements are updated!\ \Create maintenance proposals, are you sure? ";NLD="Maak alleen voorstellen aan als de afspraken zijn bijgewerkt!\ \Onderhoudsvoorstellen aanmaken, weet u het zeker? "';

    PROCEDURE SetSelectionLevel@1100529000(LevelNo@1100529000 : Integer);
    BEGIN
      SelectionLevel := LevelNo;
    END;

    LOCAL PROCEDURE UpdateEditable@1100526200();
    BEGIN
      CALCFIELDS("Maintenance Proposal No.", "Service Order No.");
      LineEditable := ("Maintenance Proposal No." = '') AND ("Service Order No." = '');
    END;

    LOCAL PROCEDURE CreateProposal@1100529001(CreateServiceOrderMode@1100529002 : Boolean);
    VAR
      PlantMaintenanceArrangement@1100529001 : Record 11126146;
      PlantMaintProposalLine@1100529004 : Record 11126148;
      CreatePlantMaintPropArr@1100529000 : Report 11012645;
      CreateSOFromPlantMaintProposal@1100529005 : Page 11229989;
      ProposalNo@1100529003 : Code[20];
    BEGIN
      IF NOT CONFIRM(Text002, FALSE) THEN
        EXIT;
      CurrPage.SETSELECTIONFILTER(PlantMaintenanceArrangement);
      IF NOT PlantMaintenanceArrangement.MARKEDONLY THEN BEGIN
        IF PlantMaintenanceArrangement.FINDFIRST THEN BEGIN
          REPEAT
            PlantMaintenanceArrangement.MARK(TRUE);
          UNTIL PlantMaintenanceArrangement.NEXT = 0;
        END;
        PlantMaintenanceArrangement.MARKEDONLY(TRUE);
      END;
      CreatePlantMaintPropArr.SETTABLEVIEW(PlantMaintenanceArrangement);
      CreatePlantMaintPropArr.RUNMODAL;
      IF CreateServiceOrderMode THEN BEGIN
         CreatePlantMaintPropArr.GetCreateProposalNo(ProposalNo);
        IF ProposalNo <> '' THEN BEGIN
          COMMIT;
          PlantMaintProposalLine.SETRANGE("Maintenance Proposal No.", ProposalNo);
          CreateSOFromPlantMaintProposal.SetSelection(PlantMaintProposalLine);
          CreateSOFromPlantMaintProposal.RUNMODAL;
        END;
      END;
    END;

    BEGIN
    END.
  }
}

