OBJECT Table 11126752 DSP Plan Message
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckRecord;
             END;

    OnModify=BEGIN
               CheckRecord;
             END;

    OnDelete=BEGIN
               TESTFIELD("Sent To Dsp", 0DT);
               TESTFIELD("Processed By Dsp", 0DT);
             END;

    CaptionML=ENU=DSP Plan Message;
  }
  FIELDS
  {
    { 10  ;   ;Type                ;Option        ;CaptionML=SVE=Typ;
                                                   OptionCaptionML=ENU=" ,Contact Attempt Message,Plan Message";
                                                   OptionString=[ ,ContactAttempt,Plan];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 20  ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order".No.;
                                                   CaptionML=[ENU=Service Order No.;
                                                              NOR=Serviceordrenr.;
                                                              SVE=Serviceordernr];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 30  ;   ;Object No.          ;Code20        ;TableRelation="Service Order Object"."Object No." WHERE (Service Order No.=FIELD(Service Order No.));
                                                   CaptionML=[ENU=Object No.;
                                                              NOR=Objektnr.;
                                                              SVE=Objektnr];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 40  ;   ;Seq No.             ;Integer       ;CaptionML=[ENU=Seq No.;
                                                              NOR=Sekv.nr;
                                                              SVE=Sekv.nr];
                                                   Editable=No }
    { 100 ;   ;Planning Time No.   ;Integer       ;TableRelation="DSP Code".No. WHERE (Type=CONST(PlanTypeTime));
                                                   OnValidate=VAR
                                                                ServiceOrder@1100528300 : Record 11012823;
                                                              BEGIN
                                                                CALCFIELDS("Planning Time Description");
                                                                IF ("Start Time" = 0DT) AND ("End Time" = 0DT) THEN BEGIN
                                                                  ServiceOrder.GET("Service Order No.");
                                                                  "Start Time" := CREATEDATETIME(ServiceOrder."Starting Date", ServiceOrder."Starting Time");
                                                                  "End Time" := CREATEDATETIME(ServiceOrder."Ending Date", ServiceOrder."Ending Time");
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              DSPAssignment@1100528300 : Record 11126740;
                                                              DSPCode@1100528301 : Record 11126753;
                                                              DSPManagement@1100528302 : Codeunit 11126714;
                                                            BEGIN
                                                              DSPManagement.GetDspAssignmentByServiceOrderNoObjectNo("Service Order No.", "Object No.", DSPAssignment);
                                                              "Planning Time No." := DSPCode.LookupRecord(DSPAssignment."Version No.", DSPCode.Type::PlanTypeTime);
                                                              VALIDATE("Planning Time No.");
                                                            END;

                                                   CaptionML=ENU=Planning Time No. }
    { 101 ;   ;Planning Time Description;Text50   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("DSP Code".Description WHERE (Type=CONST(PlanTypeTime),
                                                                                                    No.=FIELD(Planning Time No.)));
                                                   CaptionML=ENU=Planning Time Description;
                                                   Editable=No }
    { 110 ;   ;Start Time          ;DateTime      ;CaptionML=[ENU=Start Time;
                                                              NOR=Starttid;
                                                              SVE=Starttid];
                                                   Editable=No }
    { 120 ;   ;End Time            ;DateTime      ;CaptionML=[ENU=End Time;
                                                              NOR=Sluttid;
                                                              SVE=Sluttid];
                                                   Editable=No }
    { 130 ;   ;Reason No.          ;Integer       ;TableRelation="DSP Code".No. WHERE (Type=CONST(PlanReason));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Reason Description");
                                                              END;

                                                   CaptionML=ENU=Reason No. }
    { 131 ;   ;Reason Description  ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("DSP Code".Description WHERE (Type=CONST(PlanReason),
                                                                                                    No.=FIELD(Reason No.)));
                                                   CaptionML=[ENU=Reason Description;
                                                              NOR=èrsaksbeskrivelse;
                                                              SVE=Orsaksbeskrivning];
                                                   Editable=No }
    { 140 ;   ;Remark              ;BLOB          ;CaptionML=ENU=Remark }
    { 150 ;   ;Operator Mandatory  ;Boolean       ;CaptionML=ENU=Operator Mandatory }
    { 160 ;   ;Contact Attempt No. ;Integer       ;TableRelation="DSP Code".No. WHERE (Type=CONST(ContactAttempt));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Contact Attempt Description");
                                                              END;

                                                   CaptionML=ENU=Contact Attempt No. }
    { 161 ;   ;Contact Attempt Description;Text50 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("DSP Code".Description WHERE (Type=CONST(ContactAttempt),
                                                                                                    No.=FIELD(Contact Attempt No.)));
                                                   CaptionML=ENU=Contact Attempt Description;
                                                   Editable=No }
    { 170 ;   ;Contact Time        ;DateTime      ;CaptionML=ENU=Contact Time;
                                                   Editable=No }
    { 200 ;   ;Sent To Dsp         ;DateTime      ;CaptionML=ENU=Sent to DSP;
                                                   Editable=No }
    { 210 ;   ;Processed By Dsp    ;DateTime      ;CaptionML=ENU=Processed by DSP;
                                                   Editable=No }
    { 550 ;   ;Xml Message         ;BLOB          ;CaptionML=ENU=XML Message }
  }
  KEYS
  {
    {    ;Type,Service Order No.,Object No.,Seq No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      MustHaveValueErr@1100528300 : TextConst 'ENU=" must have a value."';

    PROCEDURE GetLastSeqNo@1100528300() : Integer;
    VAR
      DSPPlanMessage@1100528300 : Record 11126752;
    BEGIN
      DSPPlanMessage.SETRANGE(Type, Type);
      DSPPlanMessage.SETRANGE("Service Order No.", "Service Order No.");
      DSPPlanMessage.SETRANGE("Object No.", "Object No.");
      IF (DSPPlanMessage.FINDLAST) THEN
        EXIT(DSPPlanMessage."Seq No.");
      EXIT(0);
    END;

    PROCEDURE GetXmlMessage@1100528306(VAR DnXmlDocument@1100528301 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      OStream@1100528300 : OutStream;
    BEGIN
      IF (NOT "Xml Message".HASVALUE) THEN
        FIELDERROR("Xml Message", MustHaveValueErr);

      CALCFIELDS("Xml Message");
      "Xml Message".CREATEOUTSTREAM(OStream);
      DnXmlDocument := DnXmlDocument.XmlDocument();
      DnXmlDocument.Load(OStream);
    END;

    PROCEDURE ResetSentToDsp@1100528301();
    BEGIN
      "Sent To Dsp" := 0DT;
      MODIFY(TRUE);
    END;

    PROCEDURE SetProcessedByDsp@1100528304();
    BEGIN
      "Processed By Dsp" := CURRENTDATETIME;
      MODIFY(TRUE);
    END;

    PROCEDURE ShowXMLMessage@1100528801();
    VAR
      TempXMLBuffer@1100528301 : TEMPORARY Record 1235;
      XMLViewer4PS@1100528300 : Page 11129908;
      IStream@1100528302 : InStream;
    BEGIN
      IF (NOT "Xml Message".HASVALUE) THEN
        FIELDERROR("Xml Message", MustHaveValueErr);

      CALCFIELDS("Xml Message");
      "Xml Message".CREATEINSTREAM(IStream);
      TempXMLBuffer.Load(IStream);
      XMLViewer4PS.SetTempTable(TempXMLBuffer);
      XMLViewer4PS.SetShowAttributes(FALSE);
      XMLViewer4PS.RUN;
    END;

    LOCAL PROCEDURE "---Locals---"@1100528302();
    BEGIN
    END;

    LOCAL PROCEDURE CheckRecord@1100528303();
    BEGIN
      CASE Type OF
        Type::ContactAttempt: BEGIN
          TESTFIELD("Contact Time");
          TESTFIELD("Contact Attempt No.");
        END;
        Type::Plan: BEGIN
          TESTFIELD("Planning Time No.");
          TESTFIELD("Start Time");
          TESTFIELD("Reason No.");
        END;
      END;
    END;

    BEGIN
    END.
  }
}

