OBJECT Page 11072372 Plant Technical Specs List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Werkzeug techn. Spezifikation šbersicht;
               ENU=Plant Technical Specification List;
               NLD=Materieel technische specificatie overzicht;
               NOR=Maskinens liste over tekniske Spesifikasjoner;
               SVE=Maskinens lista ”ver tekniska specifikationer];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table11012582;
    SourceTableView=SORTING(Plant Type,Plant No.,Material Inventory Line No.,Level,Profile Code,Line No.);
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 LevelFilterToSpecsLevel;
               END;

    OnAfterGetRecord=BEGIN
                       FillFlowfieldsOtherPlantCompany(CURRENTCOMPANY);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485022;1;Group   }

    { 1100485020;2;Field  ;
                CaptionML=[DEU=Merkmalfilter;
                           ENU=Feature Filter;
                           NLD=Kenmerkfilter;
                           NOR=Funksjonsfilter;
                           SVE=Funktionsfilter];
                SourceExpr=FeatureFilter;
                OnValidate=BEGIN
                             SETFILTER("Feature (Question)", FeatureFilter);
                             CurrPage.UPDATE(FALSE);
                           END;

                OnLookup=VAR
                           lvFeatureRec@1100485000 : Record 11012581;
                         BEGIN
                           IF CURRENTCOMPANY <> COMPANYNAME THEN
                             lvFeatureRec.CHANGECOMPANY(CURRENTCOMPANY);
                           IF PAGE.RUNMODAL(PAGE::"Plant Profile Feature List", lvFeatureRec) = ACTION::LookupOK THEN BEGIN
                             FeatureFilter := Text + lvFeatureRec.Description;
                             SETFILTER("Feature (Question)", FeatureFilter);
                             CurrPage.UPDATE(FALSE);
                           END;
                         END;
                          }

    { 1100485023;2;Field  ;
                CaptionML=[DEU=Techn. Spezifikationsfilter;
                           ENU=Techn. Specification Filter;
                           NLD=Techn. specificatie filter;
                           NOR=Teknisk Spesifikasjonsfilter;
                           SVE=Tekn. Specifikationsfilter];
                SourceExpr=TechSpecFilter;
                OnValidate=BEGIN
                             SETFILTER(Answer, TechSpecFilter);
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 1100529001;2;Field  ;
                CaptionML=[DEU=Spezifikationsebene;
                           ENU=Specification Level;
                           NLD=Specificatieniveau];
                OptionCaptionML=[DEU=Werkzeugart,Werkzeugnummer,Werkzeugart + Werkzeugnummer,Materialinventar,Werkzeugart + Materialinventar,Werkzeugnummer + Materialinventar,Alle;
                                 ENU=Plant Type,Plant Number,Plant Type + Plant Number,Material Inventory,Plant Type + Material Inventory,Plant Number + Material Inventory,All;
                                 NLD=Materieelsoort,Materieelnummer,Materieelsoort + materieelnummer,Materiaalinventarisatie,Materieelsoort + materiaalinventarisatie,Materieelnummer + materiaalinventarisatie,Alle];
                SourceExpr=SpecsLevel;
                OnValidate=BEGIN
                             SpecsLevelToLevelFilter;
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 1100485000;1;Group  ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1100529000;2;Field  ;
                SourceExpr=Level }

    { 1100485001;2;Field  ;
                SourceExpr="Plant Type" }

    { 1100485005;2;Field  ;
                DrillDown=No;
                SourceExpr="Plant Type Description" }

    { 1100485009;2;Field  ;
                SourceExpr="Plant No." }

    { 1100485013;2;Field  ;
                DrillDown=No;
                SourceExpr="Plant No. Description";
                Visible=FALSE }

    { 1100529002;2;Field  ;
                CaptionML=[DEU=Beschreibung Materialinventar;
                           ENU=Material Inventory Description;
                           NLD=Materiaalinventariesatie omschrijving];
                SourceExpr=MaterialInventoryDescription() }

    { 1100485003;2;Field  ;
                SourceExpr="Profile Code" }

    { 1100485015;2;Field  ;
                DrillDown=No;
                SourceExpr="Profile Description";
                Visible=FALSE }

    { 1100485011;2;Field  ;
                DrillDown=No;
                SourceExpr="Feature (Question)" }

    { 1100485007;2;Field  ;
                SourceExpr=Answer }

    { 1100529600;2;Field  ;
                SourceExpr="Modified by";
                Visible=FALSE }

    { 1100529601;2;Field  ;
                SourceExpr="Last Date Modified";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      FeatureFilter@1100485000 : Text[250];
      TechSpecFilter@1100485001 : Text[250];
      SpecsLevel@1100529000 : 'PlantType,PlantNo,PlantTypeAndPlantNo,MaterialInventory,PlantTypeAndMaterialInventory,PlantNoAndMaterialInventory,All';

    LOCAL PROCEDURE LevelFilterToSpecsLevel@1100529000();
    VAR
      TmpPlantProfileAnswer@1100529000 : TEMPORARY Record 11012582;
      LevelPlantType@1100529001 : Boolean;
      LevelPlantNo@1100529002 : Boolean;
      LevelMaterialInvent@1100529003 : Boolean;
    BEGIN
      FILTERGROUP(8);
      SpecsLevel := SpecsLevel::All;
      IF GETFILTER(Level) <> '' THEN BEGIN
        TmpPlantProfileAnswer.Level := TmpPlantProfileAnswer.Level::PlantType;
        TmpPlantProfileAnswer.INSERT;
        TmpPlantProfileAnswer.Level := TmpPlantProfileAnswer.Level::PlantNumber;
        TmpPlantProfileAnswer.INSERT;
        TmpPlantProfileAnswer.Level := TmpPlantProfileAnswer.Level::MaterialInventory;
        TmpPlantProfileAnswer.INSERT;
        TmpPlantProfileAnswer.FILTERGROUP(2);
        COPYFILTER(Level, TmpPlantProfileAnswer.Level);
        TmpPlantProfileAnswer.FILTERGROUP(0);
        TmpPlantProfileAnswer.SETRANGE(Level, TmpPlantProfileAnswer.Level::PlantType);
        LevelPlantType := TmpPlantProfileAnswer.FINDFIRST;
        TmpPlantProfileAnswer.SETRANGE(Level, TmpPlantProfileAnswer.Level::PlantNumber);
        LevelPlantNo := TmpPlantProfileAnswer.FINDFIRST;
        TmpPlantProfileAnswer.SETRANGE(Level, TmpPlantProfileAnswer.Level::MaterialInventory);
        LevelMaterialInvent := TmpPlantProfileAnswer.FINDFIRST;
        TmpPlantProfileAnswer.RESET;
        TmpPlantProfileAnswer.DELETEALL;
        CASE TRUE OF
          (LevelPlantType AND (NOT LevelPlantNo) AND (NOT LevelMaterialInvent)):
            SpecsLevel := SpecsLevel::PlantType;
          ((NOT LevelPlantType) AND LevelPlantNo AND (NOT LevelMaterialInvent)):
            SpecsLevel := SpecsLevel::PlantNo;
          (LevelPlantType AND LevelPlantNo AND (NOT LevelMaterialInvent)):
            SpecsLevel := SpecsLevel::PlantTypeAndPlantNo;
          ((NOT LevelPlantType) AND (NOT LevelPlantNo) AND LevelMaterialInvent):
            SpecsLevel := SpecsLevel::MaterialInventory;
          (LevelPlantType AND (NOT LevelPlantNo) AND LevelMaterialInvent):
            SpecsLevel := SpecsLevel::PlantTypeAndMaterialInventory;
          ((NOT LevelPlantType) AND LevelPlantNo AND LevelMaterialInvent):
            SpecsLevel := SpecsLevel::PlantNoAndMaterialInventory;
        END;
      END;
      FILTERGROUP(0);
    END;

    LOCAL PROCEDURE SpecsLevelToLevelFilter@1100529001();
    BEGIN
      FILTERGROUP(8);
      CASE SpecsLevel OF
        SpecsLevel::PlantType:
          SETRANGE(Level, Level::PlantType);
        SpecsLevel::PlantNo:
          SETRANGE(Level, Level::PlantNumber);
        SpecsLevel::PlantTypeAndPlantNo:
          SETFILTER(Level, '%1|%2', Level::PlantType, Level::PlantNumber);
        SpecsLevel::MaterialInventory:
          SETRANGE(Level, Level::MaterialInventory);
        SpecsLevel::PlantTypeAndMaterialInventory:
          SETFILTER(Level, '%1|%2', Level::PlantType, Level::MaterialInventory);
        SpecsLevel::PlantNoAndMaterialInventory:
          SETFILTER(Level, '%1|%2', Level::PlantNumber, Level::MaterialInventory);
      ELSE
        SETRANGE(Level);
      END;
      FILTERGROUP(0);
    END;

    LOCAL PROCEDURE FillFlowfieldsOtherPlantCompany@1100529002(PlantCompany@1100529004 : Text);
    VAR
      PlantQuestionList@1100529000 : Record 11012581;
      PlantQuestionProfile@1100529001 : Record 11012580;
      PlantType@1100529002 : Record 11012551;
      PlantNumber@1100529003 : Record 11012552;
    BEGIN
      IF (PlantCompany = '') OR (PlantCompany = COMPANYNAME) THEN
        EXIT;
      PlantQuestionList.CHANGECOMPANY(PlantCompany);
      PlantQuestionProfile.CHANGECOMPANY(PlantCompany);
      PlantType.CHANGECOMPANY(PlantCompany);
      PlantNumber.CHANGECOMPANY(PlantCompany);

      IF NOT PlantQuestionList.GET("Profile Code", "Question Line No.") THEN
        PlantQuestionList.INIT;
      "Feature (Question)" := PlantQuestionList.Description;
      IF NOT PlantQuestionProfile.GET("Profile Code") THEN
        PlantQuestionProfile.INIT;
      "Profile Description" := PlantQuestionProfile.Description;
      IF NOT PlantType.GET("Plant Type") THEN
        PlantType.INIT;
      "Plant Type Description" := PlantType.Description;
      IF NOT PlantNumber.GET("Plant Type", "Plant No.") THEN
        PlantNumber.INIT;
      "Plant No. Description" := PlantNumber.Description;
    END;

    BEGIN
    END.
  }
}

