OBJECT Page 11130788 Service Order Hist. V2 FSA WS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=;
    SourceTable=Table11012823;
    PageType=List;
    SourceTableTemporary=Yes;
  }
  CONTROLS
  {
    { 1100528000;0;Container;
                ContainerType=ContentArea }

    { 1100528003;1;Field  ;
                Name=ServiceOrderNo;
                SourceExpr=ServiceOrderNo;
                OnValidate=BEGIN
                             FillSourceTable;
                           END;
                            }

    { 1100528001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100528002;2;Field  ;
                Name=No;
                SourceExpr="No." }

    { 1100528004;2;Field  ;
                Name=Description;
                SourceExpr=Description }

    { 1100528005;2;Field  ;
                Name=StartingDateTime;
                SourceExpr=GetStartingDateTime }

    { 1100528006;2;Field  ;
                Name=SourceType;
                SourceExpr="Source Type" }

    { 1100528007;2;Field  ;
                Name=ProblemText;
                SourceExpr=GetProblemText }

    { 1100528009;2;Field  ;
                Name=CauseText;
                SourceExpr=GetCauseText }

    { 1100528008;2;Field  ;
                Name=SolutionText;
                SourceExpr=GetSolutionText }

    { 1100526000;1;Part   ;
                Name=WorkOrderHistory;
                SubPageLink=Source Type=CONST(ServiceOrder),
                            Source No.=FIELD(No.);
                PagePartID=Page11130789;
                PartType=Page }

    { 1100526001;1;Part   ;
                Name=UsedItemHistory;
                SubPageLink=Service Order No.=FIELD(No.),
                            Cost Type=CONST(Material),
                            Extra Cost=CONST(No),
                            Quantity=FILTER(<>0);
                PagePartID=Page11130790;
                PartType=Page }

    { 1100526002;1;Part   ;
                Name=ServiceObjectHistory;
                SubPageLink=Service Order No.=FIELD(No.);
                PagePartID=Page11130791;
                PartType=Page }

    { 1100526003;1;Part   ;
                Name=InspectionHistory;
                SubPageLink=Service Order No.=FIELD(No.),
                            Type=CONST(Line);
                PagePartID=Page11130792;
                PartType=Page }

  }
  CODE
  {
    VAR
      ServiceOrderNo@1100528000 : Code[20];

    LOCAL PROCEDURE FillSourceTable@1100528000();
    VAR
      MobileSetup@1100528008 : Record 11012676;
      ServiceOrder@1100528000 : Record 11012823;
      ServiceOrder2@1100528001 : Record 11012823;
      TempServiceOrder@1100526000 : TEMPORARY Record 11012823;
      TempServiceOrder1@1100528005 : TEMPORARY Record 11012823;
      TempServiceOrder2@1100528004 : TEMPORARY Record 11012823;
      ServiceOrderObject@1100528007 : Record 11071724;
      ServiceOrderObject2@1100528006 : Record 11071724;
      Transfer@1100528009 : Boolean;
      MatchObject@1100528003 : Boolean;
      I@1100528002 : Integer;
    BEGIN
      Rec.RESET;
      Rec.DELETEALL;

      MobileSetup.GET;
      IF NOT ServiceOrder.GET(ServiceOrderNo) THEN
        EXIT;

      IF (MobileSetup."Number of Historic Orders" < 1) OR (ServiceOrder."Service Location No." = '') THEN
        EXIT;

      ServiceOrder2.SETCURRENTKEY("Service Location No.","Order Date","Order Time");
      ServiceOrder2.SETRANGE("Service Location No.", ServiceOrder."Service Location No.");
      ServiceOrder2.SETFILTER("No.", '<>%1', ServiceOrder."No.");
      ServiceOrder2.SETFILTER(Status, '<>%1', ServiceOrder2.Status::Cancelled);
      IF ServiceOrder2.FINDSET THEN BEGIN
        REPEAT
          Transfer := ServiceOrder2.Status >= ServiceOrder2.Status::"In Process";
          IF NOT Transfer THEN BEGIN
            ServiceOrder2.CALCFIELDS("Actual Reference Point");
            Transfer := ServiceOrder2."Actual Reference Point" >= MobileSetup."Ref. Point Sending SO";
          END;
          IF Transfer THEN BEGIN
            TempServiceOrder.TRANSFERFIELDS(ServiceOrder2);
            IF TempServiceOrder."Starting Date" = 0D THEN BEGIN
              TempServiceOrder."Starting Date" := ServiceOrder2."Order Date";
              TempServiceOrder."Starting Time" := ServiceOrder2."Order Time";
            END;
            TempServiceOrder.INSERT;
          END;
        UNTIL ServiceOrder2.NEXT = 0;

      ServiceOrderObject.SETRANGE("Service Order No.", ServiceOrder."No.");

      TempServiceOrder.SETCURRENTKEY("Starting Date","Starting Time");
      TempServiceOrder.ASCENDING(FALSE);
      IF TempServiceOrder.FINDSET THEN
        REPEAT
          MatchObject := FALSE;
          ServiceOrderObject2.RESET;
          ServiceOrderObject2.SETRANGE("Service Order No.", TempServiceOrder."No.");
          IF ServiceOrderObject.FINDSET THEN BEGIN
            REPEAT
              ServiceOrderObject2.SETRANGE("Object No.", ServiceOrderObject."Object No.");
              IF NOT ServiceOrderObject2.ISEMPTY THEN
                MatchObject := TRUE;
            UNTIL (ServiceOrderObject.NEXT = 0) OR (MatchObject);
          END;
          IF MatchObject THEN BEGIN
            TempServiceOrder1.TRANSFERFIELDS(TempServiceOrder);
            TempServiceOrder1.INSERT;
          END ELSE BEGIN
            TempServiceOrder2.TRANSFERFIELDS(TempServiceOrder);
            TempServiceOrder2.INSERT;
          END;
        UNTIL (TempServiceOrder.NEXT = 0) OR (TempServiceOrder1.COUNT >= MobileSetup."Number of Historic Orders");
      END;

      TempServiceOrder1.SETCURRENTKEY("Starting Date","Starting Time");
      TempServiceOrder1.ASCENDING(FALSE);
      IF TempServiceOrder1.FINDSET THEN
        REPEAT
          Rec.TRANSFERFIELDS(TempServiceOrder1);
          Rec.INSERT;
          I += 1;
        UNTIL (TempServiceOrder1.NEXT = 0) OR (I = MobileSetup."Number of Historic Orders");

      IF (I < MobileSetup."Number of Historic Orders") THEN BEGIN
        TempServiceOrder2.SETCURRENTKEY("Starting Date","Starting Time");
        TempServiceOrder2.ASCENDING(FALSE);
        IF TempServiceOrder2.FINDSET THEN
          REPEAT
            Rec.TRANSFERFIELDS(TempServiceOrder2);
            Rec.INSERT;
            I += 1;
          UNTIL (TempServiceOrder2.NEXT = 0) OR (I = MobileSetup."Number of Historic Orders");
      END;
    END;

    LOCAL PROCEDURE GetStartingDateTime@1100528003() : DateTime;
    BEGIN
      EXIT(CREATEDATETIME("Starting Date", "Starting Time"));
    END;

    LOCAL PROCEDURE GetProblemText@1100525002() : Text;
    VAR
      ServiceText@1100525000 : Record 11012882;
    BEGIN
      EXIT(ServiceText.GetServiceOrderText(90, "No.", TRUE));
    END;

    LOCAL PROCEDURE GetCauseText@1100528001() : Text;
    VAR
      ServiceText@1100525000 : Record 11012882;
    BEGIN
      EXIT(ServiceText.GetServiceOrderText(94, "No.", TRUE));
    END;

    LOCAL PROCEDURE GetSolutionText@1100528002() : Text;
    VAR
      ServiceText@1100525000 : Record 11012882;
    BEGIN
      EXIT(ServiceText.GetServiceOrderText(92, "No.", TRUE));
    END;

    BEGIN
    END.
  }
}

