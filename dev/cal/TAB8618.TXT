OBJECT Table 8618 Config. Template Header
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               ConfigTmplSelectionRules@1000 : Record 8620;
             BEGIN
               CALCFIELDS("Used In Hierarchy");
               IF NOT "Used In Hierarchy" THEN BEGIN
                 ConfigTemplateLine.SETRANGE("Data Template Code",Code);
                 ConfigTemplateLine.DELETEALL;
               END;

               ConfigTmplSelectionRules.SETRANGE("Template Code",Code);
               ConfigTmplSelectionRules.DELETEALL;
             END;

    OnRename=BEGIN
               CALCFIELDS("Used In Hierarchy");
               IF NOT "Used In Hierarchy" THEN BEGIN
                 ConfigTemplateLine.SETRANGE("Data Template Code",xRec.Code);
                 ConfigTemplateLine.FIND('-');
                 REPEAT
                   ConfigTemplateLine.RENAME(Code,ConfigTemplateLine."Line No.");
                 UNTIL ConfigTemplateLine.NEXT = 0;
               END;
             END;

    ReplicateData=No;
    CaptionML=[ENU=Config. Template Header;
               NOR=Konfig.malhode;
               SVE=Konfig. mallhuvud];
    LookupPageID=Page8620;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 3   ;   ;Table ID            ;Integer       ;OnValidate=BEGIN
                                                                TestXRec;
                                                                CALCFIELDS("Table Name");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ConfigValidateMgt.LookupTable("Table ID");
                                                              IF "Table ID" <> 0 THEN
                                                                VALIDATE("Table ID");
                                                            END;

                                                   CaptionML=[ENU=Table ID;
                                                              NOR=Tabell-ID;
                                                              SVE=Tabell-ID] }
    { 4   ;   ;Table Name          ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Name" WHERE (Object Type=CONST(Table),
                                                                                                             Object ID=FIELD(Table ID)));
                                                   CaptionML=[ENU=Table Name;
                                                              NOR=Tabellnavn;
                                                              SVE=Tabellnamn];
                                                   Editable=No }
    { 5   ;   ;Table Caption       ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Table),
                                                                                                                Object ID=FIELD(Table ID)));
                                                   CaptionML=[ENU=Table Caption;
                                                              NOR=Tabelloverskrift;
                                                              SVE=Tabellrubrik];
                                                   Editable=No }
    { 6   ;   ;Used In Hierarchy   ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Config. Template Line" WHERE (Data Template Code=FIELD(Code),
                                                                                                    Type=CONST(Template)));
                                                   CaptionML=[ENU=Used In Hierarchy;
                                                              NOR=Brukt i hierarki];
                                                   Editable=No }
    { 7   ;   ;Enabled             ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Enabled;
                                                              NOR=Aktivert;
                                                              SVE=Aktiv] }
    { 8   ;   ;Instance No. Series ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Instance No. Series;
                                                              NOR=Nummerserie for forekomst] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Table ID                                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Template lines that relate to %1 exists. Delete the lines to change the Table ID.;NOR=Det finnes mallinjer som er relatert til %1. Slett linjene hvis du vil endre tabell-IDen.';
      ConfigTemplateLine@1001 : Record 8619;
      Text001@1002 : TextConst '@@@="%2 = Table ID, %3 = Table Caption";ENU=A new instance %1 has been created in table %2 %3.;NOR=Den nye forekomsten %1 er opprettet i tabellen %2 %3.';
      ConfigValidateMgt@1003 : Codeunit 8617;

    LOCAL PROCEDURE TestXRec@1();
    VAR
      ConfigTemplateLine@1000 : Record 8619;
    BEGIN
      ConfigTemplateLine.SETRANGE("Data Template Code",Code);
      IF ConfigTemplateLine.FINDFIRST THEN
        IF xRec."Table ID" <> "Table ID" THEN
          ERROR(Text000,xRec."Table ID");
    END;

    [External]
    PROCEDURE ConfirmNewInstance@2(VAR RecRef@1000 : RecordRef);
    VAR
      KeyRef@1004 : KeyRef;
      FieldRef@1003 : FieldRef;
      KeyFieldCount@1002 : Integer;
      MessageString@1001 : Text[1024];
    BEGIN
      KeyRef := RecRef.KEYINDEX(1);
      FOR KeyFieldCount := 1 TO KeyRef.FIELDCOUNT DO BEGIN
        FieldRef := KeyRef.FIELDINDEX(KeyFieldCount);
        MessageString := MessageString + ' ' + FORMAT(FieldRef.VALUE);
        MessageString := DELCHR(MessageString,'<');
        MESSAGE(STRSUBSTNO(Text001,MessageString,RecRef.NUMBER,RecRef.CAPTION));
      END;
    END;

    [External]
    PROCEDURE SetTemplateEnabled@3(IsEnabled@1000 : Boolean);
    BEGIN
      VALIDATE(Enabled,IsEnabled);
      MODIFY(TRUE);
    END;

    [External]
    PROCEDURE SetNoSeries@4(NoSeries@1000 : Code[20]);
    BEGIN
      VALIDATE("Instance No. Series",NoSeries);
      MODIFY(TRUE);
    END;

    PROCEDURE CopyConfigTemplate@5(FromConfigTemplateCode@1000 : Code[10]);
    BEGIN
      CopyConfigTemplateHeader(FromConfigTemplateCode);
      CopyConfigTemplateLines(FromConfigTemplateCode,Code);
    END;

    LOCAL PROCEDURE CopyConfigTemplateHeader@7(FromConfigTemplateCode@1000 : Code[10]);
    VAR
      FromConfigTemplateHeader@1001 : Record 8618;
    BEGIN
      FromConfigTemplateHeader.GET(FromConfigTemplateCode);
      VALIDATE("Table ID",FromConfigTemplateHeader."Table ID");
      Enabled := FromConfigTemplateHeader.Enabled;
      MODIFY;
    END;

    LOCAL PROCEDURE CopyConfigTemplateLines@8(FromConfigTemplateCode@1000 : Code[10];ConfigTemplateCode@1003 : Code[10]);
    VAR
      FromConfigTemplateLine@1001 : Record 8619;
      ConfigTemplateLine@1002 : Record 8619;
    BEGIN
      ConfigTemplateLine.SETRANGE("Data Template Code",ConfigTemplateCode);
      ConfigTemplateLine.DELETEALL;
      FromConfigTemplateLine.SETRANGE("Data Template Code",FromConfigTemplateCode);
      IF FromConfigTemplateLine.FINDSET THEN
        REPEAT
          ConfigTemplateLine.INIT;
          ConfigTemplateLine.TRANSFERFIELDS(FromConfigTemplateLine);
          ConfigTemplateLine."Data Template Code" := ConfigTemplateCode;
          ConfigTemplateLine.INSERT;
        UNTIL FromConfigTemplateLine.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

